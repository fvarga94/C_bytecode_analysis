splice_shrink_spd	functions,0:DO,0:SWITCH,0:CALL,2:IF,1:ELSE,0:FOR,0:WHILE,0	10
0x4002760	        0x837f1410	           cmp dword [rdi + 0x14], 0x10 	       275	splice.c	FUNCTION_9	IF_1
0x4002764	            0x7702	                            ja 0x4002768	       275	splice.c	FUNCTION_9	IF_1
0x4002766	            0xf3c3	                                     ret	       275	splice.c	FUNCTION_9	IF_1
0x4002768	              0x53	                                push rbx	       274	splice.c	FUNCTION_9
0x4002769	          0x4889fb	                            mov rbx, rdi	       274	splice.c	FUNCTION_9
0x400276c	          0x488b3f	                    mov rdi, qword [rdi]	       278	splice.c	FUNCTION_9	CALL_1
0x400276f	      0xe800000000	                          call 0x4002774	       278	splice.c	FUNCTION_9	CALL_1
0x4002774	        0x488b7b08	                mov rdi, qword [rbx + 8]	       279	splice.c	FUNCTION_9	CALL_2
0x4002778	              0x5b	                                 pop rbx	       280	splice.c	FUNCTION_9
0x4002779	      0xe900000000	                           jmp 0x400277e	       279	splice.c	FUNCTION_9	CALL_2
do_splice_direct	functions,0:DO,0:SWITCH,0:CALL,5:IF,4:ELSE,0:FOR,0:WHILE,0	50
0x40006c0	            0x4154	                                push r12	      1040	splice.c	FUNCTION_30
0x40006c2	              0x55	                                push rbp	      1040	splice.c	FUNCTION_30
0x40006c3	          0x4889f5	                            mov rbp, rsi	      1040	splice.c	FUNCTION_30
0x40006c6	              0x53	                                push rbx	      1040	splice.c	FUNCTION_30
0x40006c7	          0x4889d6	                            mov rsi, rdx	      1040	splice.c	FUNCTION_30
0x40006ca	          0x4889fb	                            mov rbx, rdi	      1040	splice.c	FUNCTION_30
0x40006cd	          0x4889ca	                            mov rdx, rcx	      1040	splice.c	FUNCTION_30
0x40006d0	      0xb907000000	                              mov ecx, 7	      1041	splice.c	FUNCTION_30
0x40006d5	        0x4883ec40	                           sub rsp, 0x40	      1040	splice.c	FUNCTION_30
0x40006d9	    0x65488b042528	                mov rax, qword gs:[0x28]	      1040	splice.c	FUNCTION_30
0x40006e2	      0x4889442438	             mov qword [rsp + 0x38], rax	      1040	splice.c	FUNCTION_30
0x40006e7	            0x31c0	                            xor eax, eax	      1040	splice.c	FUNCTION_30
0x40006e9	          0x4889e7	                            mov rdi, rsp	      1041	splice.c	FUNCTION_30
0x40006ec	        0xf6464402	               test byte [rsi + 0x44], 2	      1051	splice.c	FUNCTION_30	IF_1	CALL_1
0x40006f0	          0xf348ab	              rep stosq qword [rdi], rax	      1041	splice.c	FUNCTION_30
0x40006f3	        0x488b4500	                    mov rax, qword [rbp]	      1041	splice.c	FUNCTION_30
0x40006f7	        0x4c890424	                     mov qword [rsp], r8	      1041	splice.c	FUNCTION_30
0x40006fb	      0x4489442408	                mov dword [rsp + 8], r8d	      1041	splice.c	FUNCTION_30
0x4000700	      0x44894c240c	              mov dword [rsp + 0xc], r9d	      1041	splice.c	FUNCTION_30
0x4000705	      0x4889742410	             mov qword [rsp + 0x10], rsi	      1041	splice.c	FUNCTION_30
0x400070a	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1041	splice.c	FUNCTION_30
0x400070f	      0x4889442418	             mov qword [rsp + 0x18], rax	      1041	splice.c	FUNCTION_30
0x4000714	    0x48c7c0f7ffff	             mov rax, 0xfffffffffffffff7	      1052	splice.c	FUNCTION_30	IF_1
0x400071b	            0x7441	                            je 0x400075e	      1051	splice.c	FUNCTION_30	IF_1	CALL_1
0x400071d	        0xf6464104	               test byte [rsi + 0x41], 4	      1054	splice.c	FUNCTION_30	IF_2	CALL_2
0x4000721	    0x48c7c0eaffff	             mov rax, 0xffffffffffffffea	      1055	splice.c	FUNCTION_30	IF_2
0x4000728	            0x7534	                           jne 0x400075e	      1054	splice.c	FUNCTION_30	IF_2	CALL_2
0x400072a	          0x4c89c1	                             mov rcx, r8	      1057	splice.c	FUNCTION_30	CALL_3
0x400072d	      0xbf01000000	                              mov edi, 1	      1057	splice.c	FUNCTION_30	CALL_3
0x4000732	      0xe800000000	                          call 0x4000737	      1057	splice.c	FUNCTION_30	CALL_3
0x4000737	            0x4898	                                    cdqe	      1057	splice.c	FUNCTION_30	CALL_3
0x4000739	          0x4885c0	                           test rax, rax	      1058	splice.c	FUNCTION_30	IF_3	CALL_4
0x400073c	            0x7820	                            js 0x400075e	      1058	splice.c	FUNCTION_30	IF_3	CALL_4
0x400073e	    0x48c7c2000000	                              mov rdx, 0	      1061	splice.c	FUNCTION_30	CALL_5
0x4000745	          0x4889e6	                            mov rsi, rsp	      1061	splice.c	FUNCTION_30	CALL_5
0x4000748	          0x4889df	                            mov rdi, rbx	      1061	splice.c	FUNCTION_30	CALL_5
0x400074b	      0xe800000000	                          call 0x4000750	      1061	splice.c	FUNCTION_30	CALL_5
0x4000750	          0x4885c0	                           test rax, rax	      1062	splice.c	FUNCTION_30	IF_4
0x4000753	            0x7e09	                           jle 0x400075e	      1062	splice.c	FUNCTION_30	IF_4
0x4000755	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1063	splice.c	FUNCTION_30	IF_4
0x400075a	        0x48895500	                    mov qword [rbp], rdx	      1063	splice.c	FUNCTION_30	IF_4
0x400075e	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      1066	splice.c	FUNCTION_30
0x4000763	    0x6548331c2528	                xor rbx, qword gs:[0x28]	      1066	splice.c	FUNCTION_30
0x400076c	            0x7509	                           jne 0x4000777	      1066	splice.c	FUNCTION_30
0x400076e	        0x4883c440	                           add rsp, 0x40	      1066	splice.c	FUNCTION_30
0x4000772	              0x5b	                                 pop rbx	      1066	splice.c	FUNCTION_30
0x4000773	              0x5d	                                 pop rbp	      1066	splice.c	FUNCTION_30
0x4000774	            0x415c	                                 pop r12	      1066	splice.c	FUNCTION_30
0x4000776	              0xc3	                                     ret	      1066	splice.c	FUNCTION_30
0x4000777	      0xe800000000	                          call 0x400077c	      1066	splice.c	FUNCTION_30
default_file_splice_write	functions,0:DO,0:SWITCH,0:CALL,1:IF,1:ELSE,0:FOR,0:WHILE,0	9
0x4002810	              0x53	                                push rbx	       806	splice.c	FUNCTION_24
0x4002811	    0x49c7c1000000	                               mov r9, 0	       809	splice.c	FUNCTION_24	CALL_1
0x4002818	          0x4889d3	                            mov rbx, rdx	       806	splice.c	FUNCTION_24
0x400281b	      0xe800000000	                          call 0x4002820	       809	splice.c	FUNCTION_24	CALL_1
0x4002820	          0x4885c0	                           test rax, rax	       810	splice.c	FUNCTION_24	IF_1
0x4002823	            0x7e03	                           jle 0x4002828	       810	splice.c	FUNCTION_24	IF_1
0x4002825	          0x480103	                    add qword [rbx], rax	       811	splice.c	FUNCTION_24	IF_1
0x4002828	              0x5b	                                 pop rbx	       814	splice.c	FUNCTION_24
0x4002829	              0xc3	                                     ret	       814	splice.c	FUNCTION_24
do_splice_to	functions,0:DO,0:SWITCH,0:CALL,6:IF,4:ELSE,1:FOR,0:WHILE,0	45
0x4000420	        0xf6474401	               test byte [rdi + 0x44], 1	       865	splice.c	FUNCTION_27	IF_1	CALL_2
0x4000424	            0x746a	                            je 0x4000490	       865	splice.c	FUNCTION_27	IF_1	CALL_2
0x4000426	            0x4156	                                push r14	       860	splice.c	FUNCTION_27
0x4000428	            0x4155	                                push r13	       860	splice.c	FUNCTION_27
0x400042a	          0x4989f6	                            mov r14, rsi	       860	splice.c	FUNCTION_27
0x400042d	            0x4154	                                push r12	       860	splice.c	FUNCTION_27
0x400042f	              0x55	                                push rbp	       860	splice.c	FUNCTION_27
0x4000430	          0x4989d4	                            mov r12, rdx	       860	splice.c	FUNCTION_27
0x4000433	              0x53	                                push rbx	       860	splice.c	FUNCTION_27
0x4000434	          0x4889f2	                            mov rdx, rsi	       868	splice.c	FUNCTION_27	CALL_3
0x4000437	          0x4889fd	                            mov rbp, rdi	       868	splice.c	FUNCTION_27	CALL_3
0x400043a	          0x4889fe	                            mov rsi, rdi	       868	splice.c	FUNCTION_27	CALL_3
0x400043d	            0x31ff	                            xor edi, edi	       868	splice.c	FUNCTION_27	CALL_3
0x400043f	          0x4589c5	                           mov r13d, r8d	       868	splice.c	FUNCTION_27	CALL_3
0x4000442	          0x4889cb	                            mov rbx, rcx	       868	splice.c	FUNCTION_27	CALL_3
0x4000445	      0xe800000000	                          call 0x400044a	       868	splice.c	FUNCTION_27	CALL_3
0x400044a	            0x85c0	                           test eax, eax	       869	splice.c	FUNCTION_27	IF_2	CALL_4
0x400044c	            0x784a	                            js 0x4000498	       869	splice.c	FUNCTION_27	IF_2	CALL_4
0x400044e	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       875	splice.c	FUNCTION_27	IF_4
0x4000452	    0x4881fb00f0ff	                     cmp rbx, 0x7ffff000	       875	splice.c	FUNCTION_27	IF_4
0x4000459	      0xb900f0ff7f	                     mov ecx, 0x7ffff000	       875	splice.c	FUNCTION_27	IF_4
0x400045e	        0x480f46cb	                         cmovbe rcx, rbx	       875	splice.c	FUNCTION_27	IF_4
0x4000462	    0x48c7c2000000	                              mov rdx, 0	       878	splice.c	FUNCTION_27	ELSE_1
0x4000469	          0x4589e8	                           mov r8d, r13d	       880	splice.c	FUNCTION_27	CALL_6
0x400046c	              0x5b	                                 pop rbx	       881	splice.c	FUNCTION_27
0x400046d	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       875	splice.c	FUNCTION_27	IF_4
0x4000474	          0x4c89f6	                            mov rsi, r14	       880	splice.c	FUNCTION_27	CALL_6
0x4000477	          0x4889ef	                            mov rdi, rbp	       880	splice.c	FUNCTION_27	CALL_6
0x400047a	              0x5d	                                 pop rbp	       881	splice.c	FUNCTION_27
0x400047b	          0x4885c0	                           test rax, rax	       878	splice.c	FUNCTION_27	ELSE_1
0x400047e	        0x480f44c2	                          cmove rax, rdx	       878	splice.c	FUNCTION_27	ELSE_1
0x4000482	          0x4c89e2	                            mov rdx, r12	       880	splice.c	FUNCTION_27	CALL_6
0x4000485	            0x415c	                                 pop r12	       881	splice.c	FUNCTION_27
0x4000487	            0x415d	                                 pop r13	       881	splice.c	FUNCTION_27
0x4000489	            0x415e	                                 pop r14	       881	splice.c	FUNCTION_27
0x400048b	      0xe900000000	                           jmp 0x4000490	       880	splice.c	FUNCTION_27	CALL_6
0x4000490	    0x48c7c0f7ffff	             mov rax, 0xfffffffffffffff7	       866	splice.c	FUNCTION_27	IF_1
0x4000497	              0xc3	                                     ret	       866	splice.c	FUNCTION_27	IF_1
0x4000498	              0x5b	                                 pop rbx	       881	splice.c	FUNCTION_27
0x4000499	            0x4898	                                    cdqe	       870	splice.c	FUNCTION_27	IF_2
0x400049b	              0x5d	                                 pop rbp	       881	splice.c	FUNCTION_27
0x400049c	            0x415c	                                 pop r12	       881	splice.c	FUNCTION_27
0x400049e	            0x415d	                                 pop r13	       881	splice.c	FUNCTION_27
0x40004a0	            0x415e	                                 pop r14	       881	splice.c	FUNCTION_27
0x40004a2	              0xc3	                                     ret	       881	splice.c	FUNCTION_27
direct_splice_actor	functions,0:DO,0:SWITCH,0:CALL,1:IF,0:ELSE,0:FOR,0:WHILE,0	12
0x4000050	          0x4989f0	                             mov r8, rsi	      1015	splice.c	FUNCTION_29
0x4000053	        0x488b7610	            mov rsi, qword [rsi + 0x10] 	      1016	splice.c	FUNCTION_29
0x4000057	    0x49c7c1000000	                               mov r9, 0	       849	splice.c	FUNCTION_26	ELSE_1
0x400005e	          0x498b08	                     mov rcx, qword [r8]	      1018	splice.c	FUNCTION_29	CALL_1
0x4000061	        0x498b5020	              mov rdx, qword [r8 + 0x20]	      1018	splice.c	FUNCTION_29	CALL_1
0x4000065	        0x458b400c	               mov r8d, dword [r8 + 0xc]	       851	splice.c	FUNCTION_26	CALL_2
0x4000069	        0x488b4628	            mov rax, qword [rsi + 0x28] 	       846	splice.c	FUNCTION_26	IF_1
0x400006d	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       846	splice.c	FUNCTION_26	IF_1
0x4000074	          0x4885c0	                           test rax, rax	       849	splice.c	FUNCTION_26	ELSE_1
0x4000077	        0x490f44c1	                           cmove rax, r9	       849	splice.c	FUNCTION_26	ELSE_1
0x400007b	      0xe800000000	                          call 0x4000080	       851	splice.c	FUNCTION_26	CALL_2
0x4000080	            0xf3c3	                                     ret	      1020	splice.c	FUNCTION_29
vmsplice_to_pipe	functions,0:DO,0:SWITCH,0:CALL,9:IF,5:ELSE,0:FOR,0:WHILE,0	80
0x4001cf0	      0x4c8d542408	                      lea r10, [rsp + 8]	      1287	splice.c	FUNCTION_36
0x4001cf5	        0x4883e4f0	             and rsp, 0xfffffffffffffff0	      1287	splice.c	FUNCTION_36
0x4001cf9	        0x41ff72f8	                    push qword [r10 - 8]	      1287	splice.c	FUNCTION_36
0x4001cfd	              0x55	                                push rbp	      1287	splice.c	FUNCTION_36
0x4001cfe	          0x4889e5	                            mov rbp, rsp	      1287	splice.c	FUNCTION_36
0x4001d01	            0x4157	                                push r15	      1287	splice.c	FUNCTION_36
0x4001d03	            0x4156	                                push r14	      1287	splice.c	FUNCTION_36
0x4001d05	            0x4155	                                push r13	      1287	splice.c	FUNCTION_36
0x4001d07	            0x4154	                                push r12	      1287	splice.c	FUNCTION_36
0x4001d09	          0x4189cd	                           mov r13d, ecx	      1296	splice.c	FUNCTION_36	IF_1
0x4001d0c	            0x4152	                                push r10	      1287	splice.c	FUNCTION_36
0x4001d0e	              0x53	                                push rbx	      1287	splice.c	FUNCTION_36
0x4001d0f	          0x41d1ed	                             shr r13d, 1	      1296	splice.c	FUNCTION_36	IF_1
0x4001d12	          0x4989f6	                            mov r14, rsi	      1287	splice.c	FUNCTION_36
0x4001d15	          0x4989d7	                            mov r15, rdx	      1287	splice.c	FUNCTION_36
0x4001d18	            0x89cb	                            mov ebx, ecx	      1287	splice.c	FUNCTION_36
0x4001d1a	    0x4881ecc00000	                           sub rsp, 0xc0	      1287	splice.c	FUNCTION_36
0x4001d21	        0x4183e504	                             and r13d, 4	      1296	splice.c	FUNCTION_36	IF_1
0x4001d25	    0x65488b042528	                mov rax, qword gs:[0x28]	      1287	splice.c	FUNCTION_36
0x4001d2e	        0x488945c8	             mov qword [rbp - 0x38], rax	      1287	splice.c	FUNCTION_36
0x4001d32	            0x31c0	                            xor eax, eax	      1287	splice.c	FUNCTION_36
0x4001d34	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1290	splice.c	FUNCTION_36
0x4001d3b	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      1290	splice.c	FUNCTION_36
0x4001d42	      0xe800000000	                          call 0x4001d47	      1298	splice.c	FUNCTION_36	CALL_1
0x4001d47	          0x4885c0	                           test rax, rax	      1299	splice.c	FUNCTION_36	IF_2
0x4001d4a	     0xf84b6000000	                            je 0x4001e06	      1299	splice.c	FUNCTION_36	IF_2
0x4001d50	    0x4c8d8d18ffff	                    lea r9, [rbp - 0xe8]	      1302	splice.c	FUNCTION_36	CALL_2
0x4001d57	    0x4c8d8510ffff	                    lea r8, [rbp - 0xf0]	      1302	splice.c	FUNCTION_36	CALL_2
0x4001d5e	      0xb908000000	                              mov ecx, 8	      1302	splice.c	FUNCTION_36	CALL_2
0x4001d63	          0x4489fa	                           mov edx, r15d	      1302	splice.c	FUNCTION_36	CALL_2
0x4001d66	          0x4c89f6	                            mov rsi, r14	      1302	splice.c	FUNCTION_36	CALL_2
0x4001d69	      0xbf01000000	                              mov edi, 1	      1302	splice.c	FUNCTION_36	CALL_2
0x4001d6e	          0x4989c4	                            mov r12, rax	      1302	splice.c	FUNCTION_36	CALL_2
0x4001d71	      0xe800000000	                          call 0x4001d76	      1302	splice.c	FUNCTION_36	CALL_2
0x4001d76	            0x4898	                                    cdqe	      1302	splice.c	FUNCTION_36	CALL_2
0x4001d78	          0x4885c0	                           test rax, rax	      1304	splice.c	FUNCTION_36	IF_3
0x4001d7b	            0x783e	                            js 0x4001dbb	      1304	splice.c	FUNCTION_36	IF_3
0x4001d7d	          0x4c89e7	                            mov rdi, r12	      1307	splice.c	FUNCTION_36	CALL_4
0x4001d80	      0xe800000000	                          call 0x4001d85	      1307	splice.c	FUNCTION_36	CALL_4
0x4001d85	            0x89de	                            mov esi, ebx	      1308	splice.c	FUNCTION_36	CALL_5
0x4001d87	          0x4c89e7	                            mov rdi, r12	      1308	splice.c	FUNCTION_36	CALL_5
0x4001d8a	      0xe8e1eeffff	                 call sym.wait_for_space	      1308	splice.c	FUNCTION_36	CALL_5
0x4001d8f	          0x4863d8	                         movsxd rbx, eax	      1308	splice.c	FUNCTION_36	CALL_5
0x4001d92	          0x4885db	                           test rbx, rbx	      1309	splice.c	FUNCTION_36	IF_4
0x4001d95	            0x744b	                            je 0x4001de2	      1309	splice.c	FUNCTION_36	IF_4
0x4001d97	          0x4c89e7	                            mov rdi, r12	      1311	splice.c	FUNCTION_36	CALL_7
0x4001d9a	      0xe800000000	                          call 0x4001d9f	      1311	splice.c	FUNCTION_36	CALL_7
0x4001d9f	          0x4885db	                           test rbx, rbx	      1312	splice.c	FUNCTION_36	IF_5
0x4001da2	            0x7e08	                           jle 0x4001dac	      1312	splice.c	FUNCTION_36	IF_5
0x4001da4	          0x4c89e7	                            mov rdi, r12	      1313	splice.c	FUNCTION_36	CALL_8
0x4001da7	      0xe834e6ffff	            call sym.wakeup_pipe_readers	      1313	splice.c	FUNCTION_36	CALL_8
0x4001dac	    0x488bbd10ffff	             mov rdi, qword [rbp - 0xf0]	      1314	splice.c	FUNCTION_36	CALL_9
0x4001db3	      0xe800000000	                          call 0x4001db8	      1314	splice.c	FUNCTION_36	CALL_9
0x4001db8	          0x4889d8	                            mov rax, rbx	      1315	splice.c	FUNCTION_36
0x4001dbb	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1316	splice.c	FUNCTION_36
0x4001dbf	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1316	splice.c	FUNCTION_36
0x4001dc8	            0x7545	                           jne 0x4001e0f	      1316	splice.c	FUNCTION_36
0x4001dca	    0x4881c4c00000	                           add rsp, 0xc0	      1316	splice.c	FUNCTION_36
0x4001dd1	              0x5b	                                 pop rbx	      1316	splice.c	FUNCTION_36
0x4001dd2	            0x415a	                                 pop r10	      1316	splice.c	FUNCTION_36
0x4001dd4	            0x415c	                                 pop r12	      1316	splice.c	FUNCTION_36
0x4001dd6	            0x415d	                                 pop r13	      1316	splice.c	FUNCTION_36
0x4001dd8	            0x415e	                                 pop r14	      1316	splice.c	FUNCTION_36
0x4001dda	            0x415f	                                 pop r15	      1316	splice.c	FUNCTION_36
0x4001ddc	              0x5d	                                 pop rbp	      1316	splice.c	FUNCTION_36
0x4001ddd	        0x498d62f8	                      lea rsp, [r10 - 8]	      1316	splice.c	FUNCTION_36
0x4001de1	              0xc3	                                     ret	      1316	splice.c	FUNCTION_36
0x4001de2	    0x488dbd18ffff	                   lea rdi, [rbp - 0xe8]	      1310	splice.c	FUNCTION_36	CALL_6
0x4001de9	          0x4489ea	                           mov edx, r13d	      1310	splice.c	FUNCTION_36	CALL_6
0x4001dec	          0x4c89e6	                            mov rsi, r12	      1310	splice.c	FUNCTION_36	CALL_6
0x4001def	      0xe85cfdffff	                   call sym.iter_to_pipe	      1310	splice.c	FUNCTION_36	CALL_6
0x4001df4	          0x4c89e7	                            mov rdi, r12	      1311	splice.c	FUNCTION_36	CALL_7
0x4001df7	          0x4863d8	                         movsxd rbx, eax	      1310	splice.c	FUNCTION_36	CALL_6
0x4001dfa	      0xe800000000	                          call 0x4001dff	      1311	splice.c	FUNCTION_36	CALL_7
0x4001dff	          0x4885db	                           test rbx, rbx	      1312	splice.c	FUNCTION_36	IF_5
0x4001e02	            0x7fa0	                            jg 0x4001da4	      1312	splice.c	FUNCTION_36	IF_5
0x4001e04	            0xeba6	                           jmp 0x4001dac	      1312	splice.c	FUNCTION_36	IF_5
0x4001e06	    0x48c7c0f7ffff	             mov rax, 0xfffffffffffffff7	      1300	splice.c	FUNCTION_36	IF_2
0x4001e0d	            0xebac	                           jmp 0x4001dbb	      1300	splice.c	FUNCTION_36	IF_2
0x4001e0f	      0xe800000000	                          call 0x4001e14	      1316	splice.c	FUNCTION_36
pipe_to_sendpage	functions,0:DO,0:SWITCH,0:CALL,2:IF,2:ELSE,0:FOR,0:WHILE,0	34
0x4000090	        0x4883ec10	                           sub rsp, 0x10	       438	splice.c	FUNCTION_14
0x4000094	        0x4c8b5a10	            mov r11, qword [rdx + 0x10] 	       439	splice.c	FUNCTION_14
0x4000098	    0x65488b042528	                mov rax, qword gs:[0x28]	       438	splice.c	FUNCTION_14
0x40000a1	      0x4889442408	                mov qword [rsp + 8], rax	       438	splice.c	FUNCTION_14
0x40000a6	            0x31c0	                            xor eax, eax	       438	splice.c	FUNCTION_14
0x40000a8	        0x488b4218	            mov rax, qword [rdx + 0x18] 	       440	splice.c	FUNCTION_14
0x40000ac	        0x48890424	                    mov qword [rsp], rax	       440	splice.c	FUNCTION_14
0x40000b0	        0x498b4328	            mov rax, qword [r11 + 0x28] 	       443	splice.c	FUNCTION_14	IF_1	CALL_1
0x40000b4	    0x4c8b90a80000	            mov r10, qword [rax + 0xa8] 	       443	splice.c	FUNCTION_14	IF_1	CALL_1
0x40000bb	      0xb8eaffffff	                     mov eax, 0xffffffea	       443	splice.c	FUNCTION_14	IF_1	CALL_1
0x40000c0	          0x4d85d2	                           test r10, r10	       443	splice.c	FUNCTION_14	IF_1	CALL_1
0x40000c3	            0x7428	                            je 0x40000ed	       443	splice.c	FUNCTION_14	IF_1	CALL_1
0x40000c5	        0x448b4a0c	              mov r9d, dword [rdx + 0xc]	       446	splice.c	FUNCTION_14
0x40000c9	          0x8b4a08	                mov ecx, dword [rdx + 8]	       448	splice.c	FUNCTION_14	IF_2
0x40000cc	        0x41c1e10d	                            shl r9d, 0xd	       446	splice.c	FUNCTION_14
0x40000d0	    0x4181e1008000	                         and r9d, 0x8000	       446	splice.c	FUNCTION_14
0x40000d7	          0x483b0a	                    cmp rcx, qword [rdx]	       448	splice.c	FUNCTION_14	IF_2
0x40000da	            0x7226	                            jb 0x4000102	       448	splice.c	FUNCTION_14	IF_2
0x40000dc	          0x8b5608	                mov edx, dword [rsi + 8]	       451	splice.c	FUNCTION_14	CALL_2
0x40000df	          0x4989e0	                             mov r8, rsp	       451	splice.c	FUNCTION_14	CALL_2
0x40000e2	          0x488b36	                    mov rsi, qword [rsi]	       451	splice.c	FUNCTION_14	CALL_2
0x40000e5	          0x4c89df	                            mov rdi, r11	       451	splice.c	FUNCTION_14	CALL_2
0x40000e8	      0xe800000000	                          call 0x40000ed	       451	splice.c	FUNCTION_14	CALL_2
0x40000ed	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       453	splice.c	FUNCTION_14
0x40000f2	    0x6548333c2528	                xor rdi, qword gs:[0x28]	       453	splice.c	FUNCTION_14
0x40000fb	            0x7517	                           jne 0x4000114	       453	splice.c	FUNCTION_14
0x40000fd	        0x4883c410	                           add rsp, 0x10	       453	splice.c	FUNCTION_14
0x4000101	              0xc3	                                     ret	       453	splice.c	FUNCTION_14
0x4000102	          0x4489c8	                            mov eax, r9d	       449	splice.c	FUNCTION_14	IF_2
0x4000105	       0xd00000200	                         or eax, 0x20000	       449	splice.c	FUNCTION_14	IF_2
0x400010a	        0x837f3802	               cmp dword [rdi + 0x38], 2	       449	splice.c	FUNCTION_14	IF_2
0x400010e	        0x440f43c8	                         cmovae r9d, eax	       449	splice.c	FUNCTION_14	IF_2
0x4000112	            0xebc8	                           jmp 0x40000dc	       449	splice.c	FUNCTION_14	IF_2
0x4000114	      0xe800000000	                          call 0x4000119	       453	splice.c	FUNCTION_14
generic_pipe_buf_nosteal	functions,0:DO,0:SWITCH,0:CALL,0:IF,0:ELSE,0:FOR,0:WHILE,0	2
0x4000040	      0xb801000000	                              mov eax, 1	       339	splice.c	FUNCTION_11
0x4000045	              0xc3	                                     ret	       339	splice.c	FUNCTION_11
generic_splice_sendpage	functions,0:DO,0:SWITCH,0:CALL,1:IF,0:ELSE,0:FOR,0:WHILE,0	2
0x4002800	    0x49c7c1000000	                               mov r9, 0	       832	splice.c	FUNCTION_25	CALL_1
0x4002807	      0xe974ffffff	                jmp sym.splice_from_pipe	       832	splice.c	FUNCTION_25	CALL_1
user_page_pipe_buf_steal	functions,0:DO,0:SWITCH,0:CALL,1:IF,1:ELSE,0:FOR,0:WHILE,0	8
0x4000380	          0x8b4618	            mov eax, dword [rsi + 0x18] 	       151	splice.c	FUNCTION_4	IF_1
0x4000383	            0xa804	                              test al, 4	       151	splice.c	FUNCTION_4	IF_1
0x4000385	            0x7506	                           jne 0x400038d	       151	splice.c	FUNCTION_4	IF_1
0x4000387	      0xb801000000	                              mov eax, 1	       156	splice.c	FUNCTION_4
0x400038c	              0xc3	                                     ret	       156	splice.c	FUNCTION_4
0x400038d	          0x83c801	                               or eax, 1	       154	splice.c	FUNCTION_4
0x4000390	          0x894618	             mov dword [rsi + 0x18], eax	       154	splice.c	FUNCTION_4
0x4000393	      0xe900000000	                           jmp 0x4000398	       155	splice.c	FUNCTION_4	CALL_1
vmsplice_to_user	functions,0:DO,0:SWITCH,0:CALL,8:IF,3:ELSE,0:FOR,0:WHILE,0	72
0x4000f40	      0x4c8d542408	                      lea r10, [rsp + 8]	      1247	splice.c	FUNCTION_35
0x4000f45	        0x4883e4f0	             and rsp, 0xfffffffffffffff0	      1247	splice.c	FUNCTION_35
0x4000f49	        0x41ff72f8	                    push qword [r10 - 8]	      1247	splice.c	FUNCTION_35
0x4000f4d	              0x55	                                push rbp	      1247	splice.c	FUNCTION_35
0x4000f4e	          0x4889e5	                            mov rbp, rsp	      1247	splice.c	FUNCTION_35
0x4000f51	            0x4156	                                push r14	      1247	splice.c	FUNCTION_35
0x4000f53	            0x4155	                                push r13	      1247	splice.c	FUNCTION_35
0x4000f55	            0x4154	                                push r12	      1247	splice.c	FUNCTION_35
0x4000f57	            0x4152	                                push r10	      1247	splice.c	FUNCTION_35
0x4000f59	          0x4989d6	                            mov r14, rdx	      1247	splice.c	FUNCTION_35
0x4000f5c	              0x53	                                push rbx	      1247	splice.c	FUNCTION_35
0x4000f5d	          0x4189cd	                           mov r13d, ecx	      1247	splice.c	FUNCTION_35
0x4000f60	          0x4889f3	                            mov rbx, rsi	      1247	splice.c	FUNCTION_35
0x4000f63	    0x4881ec080100	                          sub rsp, 0x108	      1247	splice.c	FUNCTION_35
0x4000f6a	    0x65488b042528	                mov rax, qword gs:[0x28]	      1247	splice.c	FUNCTION_35
0x4000f73	        0x488945c8	             mov qword [rbp - 0x38], rax	      1247	splice.c	FUNCTION_35
0x4000f77	            0x31c0	                            xor eax, eax	      1247	splice.c	FUNCTION_35
0x4000f79	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1252	splice.c	FUNCTION_35
0x4000f80	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      1252	splice.c	FUNCTION_35
0x4000f87	      0xe800000000	                          call 0x4000f8c	      1255	splice.c	FUNCTION_35	CALL_1
0x4000f8c	          0x4885c0	                           test rax, rax	      1256	splice.c	FUNCTION_35	IF_1
0x4000f8f	     0xf84d0000000	                            je 0x4001065	      1256	splice.c	FUNCTION_35	IF_1
0x4000f95	    0x4c8d8de0feff	                   lea r9, [rbp - 0x120]	      1259	splice.c	FUNCTION_35	CALL_2
0x4000f9c	    0x4c8d85d8feff	                   lea r8, [rbp - 0x128]	      1259	splice.c	FUNCTION_35	CALL_2
0x4000fa3	          0x4889de	                            mov rsi, rbx	      1259	splice.c	FUNCTION_35	CALL_2
0x4000fa6	            0x31ff	                            xor edi, edi	      1259	splice.c	FUNCTION_35	CALL_2
0x4000fa8	      0xb908000000	                              mov ecx, 8	      1259	splice.c	FUNCTION_35	CALL_2
0x4000fad	          0x4489f2	                           mov edx, r14d	      1259	splice.c	FUNCTION_35	CALL_2
0x4000fb0	          0x4989c4	                            mov r12, rax	      1259	splice.c	FUNCTION_35	CALL_2
0x4000fb3	      0xe800000000	                          call 0x4000fb8	      1259	splice.c	FUNCTION_35	CALL_2
0x4000fb8	          0x4863d8	                         movsxd rbx, eax	      1259	splice.c	FUNCTION_35	CALL_2
0x4000fbb	          0x4885db	                           test rbx, rbx	      1261	splice.c	FUNCTION_35	IF_2
0x4000fbe	     0xf889c000000	                            js 0x4001060	      1261	splice.c	FUNCTION_35	IF_2
0x4000fc4	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      1261	splice.c	FUNCTION_35	IF_2
0x4000fcb	    0x488d8de0feff	                  lea rcx, [rbp - 0x120]	      1267	splice.c	FUNCTION_35
0x4000fd2	    0xc78510ffffff	               mov dword [rbp - 0xf0], 0	      1265	splice.c	FUNCTION_35
0x4000fdc	    0x4489ad14ffff	            mov dword [rbp - 0xec], r13d	      1266	splice.c	FUNCTION_35
0x4000fe3	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	      1268	splice.c	FUNCTION_35
0x4000fee	    0x48898d18ffff	             mov qword [rbp - 0xe8], rcx	      1267	splice.c	FUNCTION_35
0x4000ff5	          0x4885c0	                           test rax, rax	      1270	splice.c	FUNCTION_35	IF_3
0x4000ff8	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      1264	splice.c	FUNCTION_35	CALL_4
0x4000fff	            0x7534	                           jne 0x4001035	      1270	splice.c	FUNCTION_35	IF_3
0x4001001	    0x488bbdd8feff	            mov rdi, qword [rbp - 0x128]	      1276	splice.c	FUNCTION_35	CALL_8
0x4001008	      0xe800000000	                          call 0x400100d	      1276	splice.c	FUNCTION_35	CALL_8
0x400100d	          0x4889d8	                            mov rax, rbx	      1277	splice.c	FUNCTION_35
0x4001010	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1278	splice.c	FUNCTION_35
0x4001014	    0x654833142528	                xor rdx, qword gs:[0x28]	      1278	splice.c	FUNCTION_35
0x400101d	            0x754f	                           jne 0x400106e	      1278	splice.c	FUNCTION_35
0x400101f	    0x4881c4080100	                          add rsp, 0x108	      1278	splice.c	FUNCTION_35
0x4001026	              0x5b	                                 pop rbx	      1278	splice.c	FUNCTION_35
0x4001027	            0x415a	                                 pop r10	      1278	splice.c	FUNCTION_35
0x4001029	            0x415c	                                 pop r12	      1278	splice.c	FUNCTION_35
0x400102b	            0x415d	                                 pop r13	      1278	splice.c	FUNCTION_35
0x400102d	            0x415e	                                 pop r14	      1278	splice.c	FUNCTION_35
0x400102f	              0x5d	                                 pop rbp	      1278	splice.c	FUNCTION_35
0x4001030	        0x498d62f8	                      lea rsp, [r10 - 8]	      1278	splice.c	FUNCTION_35
0x4001034	              0xc3	                                     ret	      1278	splice.c	FUNCTION_35
0x4001035	          0x4c89e7	                            mov rdi, r12	      1271	splice.c	FUNCTION_35	IF_3	CALL_5
0x4001038	      0xe800000000	                          call 0x400103d	      1271	splice.c	FUNCTION_35	IF_3	CALL_5
0x400103d	    0x488db508ffff	                   lea rsi, [rbp - 0xf8]	      1272	splice.c	FUNCTION_35	IF_3	CALL_6
0x4001044	          0x4c89e7	                            mov rdi, r12	      1272	splice.c	FUNCTION_35	IF_3	CALL_6
0x4001047	    0x48c7c2000000	                              mov rdx, 0	      1272	splice.c	FUNCTION_35	IF_3	CALL_6
0x400104e	      0xe800000000	                          call 0x4001053	      1272	splice.c	FUNCTION_35	IF_3	CALL_6
0x4001053	          0x4c89e7	                            mov rdi, r12	      1273	splice.c	FUNCTION_35	IF_3	CALL_7
0x4001056	          0x4889c3	                            mov rbx, rax	      1272	splice.c	FUNCTION_35	IF_3	CALL_6
0x4001059	      0xe800000000	                          call 0x400105e	      1273	splice.c	FUNCTION_35	IF_3	CALL_7
0x400105e	            0xeba1	                           jmp 0x4001001	      1273	splice.c	FUNCTION_35	IF_3	CALL_7
0x4001060	          0x4889d8	                            mov rax, rbx	      1273	splice.c	FUNCTION_35	IF_3	CALL_7
0x4001063	            0xebab	                           jmp 0x4001010	      1273	splice.c	FUNCTION_35	IF_3	CALL_7
0x4001065	    0x48c7c0f7ffff	             mov rax, 0xfffffffffffffff7	      1257	splice.c	FUNCTION_35	IF_1
0x400106c	            0xeba2	                           jmp 0x4001010	      1257	splice.c	FUNCTION_35	IF_1
0x400106e	      0xe800000000	                          call 0x4001073	      1278	splice.c	FUNCTION_35
pipe_to_user	functions,0:DO,0:SWITCH,0:CALL,1:IF,0:ELSE,0:FOR,0:WHILE,0	13
0x4000af0	              0x53	                                push rbx	      1236	splice.c	FUNCTION_34
0x4000af1	          0x4889f0	                            mov rax, rsi	      1236	splice.c	FUNCTION_34
0x4000af4	          0x4889d3	                            mov rbx, rdx	      1236	splice.c	FUNCTION_34
0x4000af7	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1237	splice.c	FUNCTION_34	CALL_1
0x4000afb	          0x8b7608	                mov esi, dword [rsi + 8]	      1237	splice.c	FUNCTION_34	CALL_1
0x4000afe	          0x8b5208	                mov edx, dword [rdx + 8]	      1237	splice.c	FUNCTION_34	CALL_1
0x4000b01	          0x488b38	                    mov rdi, qword [rax]	      1237	splice.c	FUNCTION_34	CALL_1
0x4000b04	      0xe800000000	                          call 0x4000b09	      1237	splice.c	FUNCTION_34	CALL_1
0x4000b09	          0x394308	                cmp dword [rbx + 8], eax	      1238	splice.c	FUNCTION_34
0x4000b0c	      0xbaf2ffffff	                     mov edx, 0xfffffff2	      1238	splice.c	FUNCTION_34
0x4000b11	              0x5b	                                 pop rbx	      1239	splice.c	FUNCTION_34
0x4000b12	           0xf45c2	                         cmovne eax, edx	      1238	splice.c	FUNCTION_34
0x4000b15	              0xc3	                                     ret	      1239	splice.c	FUNCTION_34
splice_from_pipe	functions,0:DO,0:SWITCH,0:CALL,3:IF,0:ELSE,0:FOR,0:WHILE,0	35
0x4002780	              0x55	                                push rbp	       651	splice.c	FUNCTION_21
0x4002781	              0x53	                                push rbx	       651	splice.c	FUNCTION_21
0x4002782	          0x4989ca	                            mov r10, rcx	       651	splice.c	FUNCTION_21
0x4002785	          0x4889fb	                            mov rbx, rdi	       651	splice.c	FUNCTION_21
0x4002788	      0xb907000000	                              mov ecx, 7	       653	splice.c	FUNCTION_21
0x400278d	          0x4c89cd	                             mov rbp, r9	       651	splice.c	FUNCTION_21
0x4002790	        0x4883ec40	                           sub rsp, 0x40	       651	splice.c	FUNCTION_21
0x4002794	    0x65488b042528	                mov rax, qword gs:[0x28]	       651	splice.c	FUNCTION_21
0x400279d	      0x4889442438	             mov qword [rsp + 0x38], rax	       651	splice.c	FUNCTION_21
0x40027a2	            0x31c0	                            xor eax, eax	       651	splice.c	FUNCTION_21
0x40027a4	          0x4889e7	                            mov rdi, rsp	       653	splice.c	FUNCTION_21
0x40027a7	          0xf348ab	              rep stosq qword [rdi], rax	       653	splice.c	FUNCTION_21
0x40027aa	          0x488b02	                    mov rax, qword [rdx]	       653	splice.c	FUNCTION_21
0x40027ad	          0x4889df	                            mov rdi, rbx	       660	splice.c	FUNCTION_21	CALL_1
0x40027b0	        0x4c891424	                    mov qword [rsp], r10	       653	splice.c	FUNCTION_21
0x40027b4	      0x448944240c	              mov dword [rsp + 0xc], r8d	       653	splice.c	FUNCTION_21
0x40027b9	      0x4889742410	             mov qword [rsp + 0x10], rsi	       653	splice.c	FUNCTION_21
0x40027be	      0x4889442418	             mov qword [rsp + 0x18], rax	       653	splice.c	FUNCTION_21
0x40027c3	      0xe800000000	                          call 0x40027c8	       660	splice.c	FUNCTION_21	CALL_1
0x40027c8	          0x4889ea	                            mov rdx, rbp	       661	splice.c	FUNCTION_21	CALL_2
0x40027cb	          0x4889e6	                            mov rsi, rsp	       661	splice.c	FUNCTION_21	CALL_2
0x40027ce	          0x4889df	                            mov rdi, rbx	       661	splice.c	FUNCTION_21	CALL_2
0x40027d1	      0xe800000000	                          call 0x40027d6	       661	splice.c	FUNCTION_21	CALL_2
0x40027d6	          0x4889df	                            mov rdi, rbx	       662	splice.c	FUNCTION_21	CALL_3
0x40027d9	          0x4889c5	                            mov rbp, rax	       661	splice.c	FUNCTION_21	CALL_2
0x40027dc	      0xe800000000	                          call 0x40027e1	       662	splice.c	FUNCTION_21	CALL_3
0x40027e1	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       665	splice.c	FUNCTION_21
0x40027e6	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       665	splice.c	FUNCTION_21
0x40027ef	            0x750a	                           jne 0x40027fb	       665	splice.c	FUNCTION_21
0x40027f1	        0x4883c440	                           add rsp, 0x40	       665	splice.c	FUNCTION_21
0x40027f5	          0x4889e8	                            mov rax, rbp	       665	splice.c	FUNCTION_21
0x40027f8	              0x5b	                                 pop rbx	       665	splice.c	FUNCTION_21
0x40027f9	              0x5d	                                 pop rbp	       665	splice.c	FUNCTION_21
0x40027fa	              0xc3	                                     ret	       665	splice.c	FUNCTION_21
0x40027fb	      0xe800000000	        call sym.generic_splice_sendpage	       665	splice.c	FUNCTION_21
