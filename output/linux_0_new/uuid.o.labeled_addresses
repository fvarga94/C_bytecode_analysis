generate_random_uuid	WHILE,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,1:SWITCH,0	14
0x4000090	              0x53	                                push rbx	        42	uuid.c	FUNCTION_1
0x4000091	      0xbe10000000	                           mov esi, 0x10	        43	uuid.c	FUNCTION_1	CALL_1
0x4000096	          0x4889fb	                            mov rbx, rdi	        42	uuid.c	FUNCTION_1
0x4000099	      0xe800000000	                          call 0x400009e	        43	uuid.c	FUNCTION_1	CALL_1
0x400009e	         0xfb64306	               movzx eax, byte [rbx + 6]	        45	uuid.c	FUNCTION_1
0x40000a2	          0x83e00f	                            and eax, 0xf	        45	uuid.c	FUNCTION_1
0x40000a5	          0x83c840	                            or eax, 0x40	        45	uuid.c	FUNCTION_1
0x40000a8	          0x884306	                  mov byte [rbx + 6], al	        45	uuid.c	FUNCTION_1
0x40000ab	         0xfb64308	               movzx eax, byte [rbx + 8]	        47	uuid.c	FUNCTION_1
0x40000af	          0x83e03f	                           and eax, 0x3f	        47	uuid.c	FUNCTION_1
0x40000b2	          0x83c880	                      or eax, 0xffffff80	        47	uuid.c	FUNCTION_1
0x40000b5	          0x884308	                  mov byte [rbx + 8], al	        47	uuid.c	FUNCTION_1
0x40000b8	              0x5b	                                 pop rbx	        48	uuid.c	FUNCTION_1
0x40000b9	              0xc3	                                     ret	        48	uuid.c	FUNCTION_1
guid_gen	WHILE,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,1:SWITCH,0	14
0x40000c0	              0x53	                                push rbx	        59	uuid.c	FUNCTION_3
0x40000c1	      0xbe10000000	                           mov esi, 0x10	        53	uuid.c	FUNCTION_2	CALL_1
0x40000c6	          0x4889fb	                            mov rbx, rdi	        59	uuid.c	FUNCTION_3
0x40000c9	      0xe800000000	                          call 0x40000ce	        53	uuid.c	FUNCTION_2	CALL_1
0x40000ce	         0xfb64308	               movzx eax, byte [rbx + 8]	        55	uuid.c	FUNCTION_2
0x40000d2	          0x83e03f	                           and eax, 0x3f	        55	uuid.c	FUNCTION_2
0x40000d5	          0x83c880	                      or eax, 0xffffff80	        55	uuid.c	FUNCTION_2
0x40000d8	          0x884308	                  mov byte [rbx + 8], al	        55	uuid.c	FUNCTION_2
0x40000db	         0xfb64307	               movzx eax, byte [rbx + 7]	        62	uuid.c	FUNCTION_3
0x40000df	          0x83e00f	                            and eax, 0xf	        62	uuid.c	FUNCTION_3
0x40000e2	          0x83c840	                            or eax, 0x40	        62	uuid.c	FUNCTION_3
0x40000e5	          0x884307	                  mov byte [rbx + 7], al	        62	uuid.c	FUNCTION_3
0x40000e8	              0x5b	                                 pop rbx	        63	uuid.c	FUNCTION_3
0x40000e9	              0xc3	                                     ret	        63	uuid.c	FUNCTION_3
uuid_parse	WHILE,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,1:SWITCH,0	2
0x40001a0	    0x48c7c2000000	                              mov rdx, 0	       129	uuid.c	FUNCTION_8	CALL_1
0x40001a7	      0xe974ffffff	                    jmp sym.__uuid_parse	       129	uuid.c	FUNCTION_8	CALL_1
__uuid_parse	WHILE,0:functions,0:ELSE,0:FOR,1:IF,1:DO,0:CALL,3:SWITCH,0	38
0x4000120	            0x4157	                                push r15	       104	uuid.c	FUNCTION_6
0x4000122	            0x4156	                                push r14	       104	uuid.c	FUNCTION_6
0x4000124	          0x4989d6	                            mov r14, rdx	       104	uuid.c	FUNCTION_6
0x4000127	            0x4155	                                push r13	       104	uuid.c	FUNCTION_6
0x4000129	            0x4154	                                push r12	       104	uuid.c	FUNCTION_6
0x400012b	          0x4989fc	                            mov r12, rdi	       104	uuid.c	FUNCTION_6
0x400012e	              0x55	                                push rbp	       104	uuid.c	FUNCTION_6
0x400012f	              0x53	                                push rbx	       104	uuid.c	FUNCTION_6
0x4000130	      0xe800000000	                          call 0x4000135	       108	uuid.c	FUNCTION_6	IF_1	CALL_1
0x4000135	            0x84c0	                             test al, al	       108	uuid.c	FUNCTION_6	IF_1	CALL_1
0x4000137	            0x7450	                            je 0x4000189	       108	uuid.c	FUNCTION_6	IF_1	CALL_1
0x4000139	          0x4989f5	                            mov r13, rsi	       108	uuid.c	FUNCTION_6	IF_1	CALL_1
0x400013c	            0x31ed	                            xor ebp, ebp	       108	uuid.c	FUNCTION_6	IF_1	CALL_1
0x400013e	            0x31db	                            xor ebx, ebx	       108	uuid.c	FUNCTION_6	IF_1	CALL_1
0x4000140	            0xeb07	                           jmp 0x4000149	       108	uuid.c	FUNCTION_6	IF_1	CALL_1
0x4000142	     0xfb69d000000	                   movzx ebx, byte [rbp]	       108	uuid.c	FUNCTION_6	IF_1	CALL_1
0x4000149	      0x410fbe3c1c	             movsx edi, byte [r12 + rbx]	       112	uuid.c	FUNCTION_6	FOR_1	CALL_2
0x400014e	      0xe800000000	                          call 0x4000153	       112	uuid.c	FUNCTION_6	FOR_1	CALL_2
0x4000153	    0x410fbe7c1c01	        movsx edi, byte [r12 + rbx + 1] 	       113	uuid.c	FUNCTION_6	FOR_1	CALL_3
0x4000159	          0x4189c7	                           mov r15d, eax	       112	uuid.c	FUNCTION_6	FOR_1	CALL_2
0x400015c	        0x41c1e704	                             shl r15d, 4	       115	uuid.c	FUNCTION_6	FOR_1
0x4000160	      0xe800000000	                          call 0x4000165	       113	uuid.c	FUNCTION_6	FOR_1	CALL_3
0x4000165	      0x410fb6142e	             movzx edx, byte [r14 + rbp]	       115	uuid.c	FUNCTION_6	FOR_1
0x400016a	        0x4883c501	                              add rbp, 1	       115	uuid.c	FUNCTION_6	FOR_1
0x400016e	          0x4409f8	                            or eax, r15d	       115	uuid.c	FUNCTION_6	FOR_1
0x4000171	        0x4883fd10	                           cmp rbp, 0x10	       111	uuid.c	FUNCTION_6	FOR_1
0x4000175	      0x4188441500	                mov byte [r13 + rdx], al	       115	uuid.c	FUNCTION_6	FOR_1
0x400017a	            0x75c6	                           jne 0x4000142	       111	uuid.c	FUNCTION_6	FOR_1
0x400017c	            0x31c0	                            xor eax, eax	       118	uuid.c	FUNCTION_6
0x400017e	              0x5b	                                 pop rbx	       119	uuid.c	FUNCTION_6
0x400017f	              0x5d	                                 pop rbp	       119	uuid.c	FUNCTION_6
0x4000180	            0x415c	                                 pop r12	       119	uuid.c	FUNCTION_6
0x4000182	            0x415d	                                 pop r13	       119	uuid.c	FUNCTION_6
0x4000184	            0x415e	                                 pop r14	       119	uuid.c	FUNCTION_6
0x4000186	            0x415f	                                 pop r15	       119	uuid.c	FUNCTION_6
0x4000188	              0xc3	                                     ret	       119	uuid.c	FUNCTION_6
0x4000189	      0xb8eaffffff	                     mov eax, 0xffffffea	       109	uuid.c	FUNCTION_6	IF_1
0x400018e	            0xebee	                           jmp 0x400017e	       109	uuid.c	FUNCTION_6	IF_1
uuid_gen	WHILE,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,1:SWITCH,0	14
0x40000f0	              0x53	                                push rbx	        67	uuid.c	FUNCTION_4
0x40000f1	      0xbe10000000	                           mov esi, 0x10	        53	uuid.c	FUNCTION_2	CALL_1
0x40000f6	          0x4889fb	                            mov rbx, rdi	        67	uuid.c	FUNCTION_4
0x40000f9	      0xe800000000	                          call 0x40000fe	        53	uuid.c	FUNCTION_2	CALL_1
0x40000fe	         0xfb64308	               movzx eax, byte [rbx + 8]	        55	uuid.c	FUNCTION_2
0x4000102	          0x83e03f	                           and eax, 0x3f	        55	uuid.c	FUNCTION_2
0x4000105	          0x83c880	                      or eax, 0xffffff80	        55	uuid.c	FUNCTION_2
0x4000108	          0x884308	                  mov byte [rbx + 8], al	        55	uuid.c	FUNCTION_2
0x400010b	         0xfb64306	               movzx eax, byte [rbx + 6]	        70	uuid.c	FUNCTION_4
0x400010f	          0x83e00f	                            and eax, 0xf	        70	uuid.c	FUNCTION_4
0x4000112	          0x83c840	                            or eax, 0x40	        70	uuid.c	FUNCTION_4
0x4000115	          0x884306	                  mov byte [rbx + 6], al	        70	uuid.c	FUNCTION_4
0x4000118	              0x5b	                                 pop rbx	        71	uuid.c	FUNCTION_4
0x4000119	              0xc3	                                     ret	        71	uuid.c	FUNCTION_4
uuid_is_valid	WHILE,0:functions,0:ELSE,1:FOR,1:IF,3:DO,0:CALL,1:SWITCH,0	24
0x4000040	            0x31c9	                            xor ecx, ecx	        87	uuid.c	FUNCTION_5
0x4000042	      0xba00218400	                       mov edx, 0x842100	        91	uuid.c	FUNCTION_5	FOR_1	IF_1
0x4000047	            0xeb17	                           jmp 0x4000060	        91	uuid.c	FUNCTION_5	FOR_1	IF_1
0x4000049	         0xfb6040f	             movzx eax, byte [rdi + rcx]	        94	uuid.c	FUNCTION_5	FOR_1	ELSE_1	IF_3	CALL_1
0x400004d	    0xf68000000000	                   test byte [rax], 0x44	        94	uuid.c	FUNCTION_5	FOR_1	ELSE_1	IF_3	CALL_1
0x4000054	            0x7430	                            je 0x4000086	        94	uuid.c	FUNCTION_5	FOR_1	ELSE_1	IF_3	CALL_1
0x4000056	        0x4883c101	                              add rcx, 1	        94	uuid.c	FUNCTION_5	FOR_1	ELSE_1	IF_3	CALL_1
0x400005a	        0x4883f924	                           cmp rcx, 0x24	        90	uuid.c	FUNCTION_5	FOR_1
0x400005e	            0x7420	                            je 0x4000080	        90	uuid.c	FUNCTION_5	FOR_1
0x4000060	        0x4883f917	                           cmp rcx, 0x17	        91	uuid.c	FUNCTION_5	FOR_1	IF_1
0x4000064	            0x77e3	                            ja 0x4000049	        91	uuid.c	FUNCTION_5	FOR_1	IF_1
0x4000066	          0x4889d0	                            mov rax, rdx	        91	uuid.c	FUNCTION_5	FOR_1	IF_1
0x4000069	          0x48d3e8	                             shr rax, cl	        91	uuid.c	FUNCTION_5	FOR_1	IF_1
0x400006c	          0x83e001	                              and eax, 1	        91	uuid.c	FUNCTION_5	FOR_1	IF_1
0x400006f	        0x4883f001	                              xor rax, 1	        91	uuid.c	FUNCTION_5	FOR_1	IF_1
0x4000073	          0x83e001	                              and eax, 1	        91	uuid.c	FUNCTION_5	FOR_1	IF_1
0x4000076	            0x75d1	                           jne 0x4000049	        91	uuid.c	FUNCTION_5	FOR_1	IF_1
0x4000078	        0x803c0f2d	              cmp byte [rdi + rcx], 0x2d	        92	uuid.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x400007c	            0x74d8	                            je 0x4000056	        92	uuid.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x400007e	            0xf3c3	                                     ret	       100	uuid.c	FUNCTION_5
0x4000080	      0xb801000000	                              mov eax, 1	        99	uuid.c	FUNCTION_5
0x4000085	              0xc3	                                     ret	        99	uuid.c	FUNCTION_5
0x4000086	            0x31c0	                            xor eax, eax	        95	uuid.c	FUNCTION_5	FOR_1	ELSE_1	IF_3
0x4000088	              0xc3	                                     ret	       100	uuid.c	FUNCTION_5
guid_parse	WHILE,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,1:SWITCH,0	2
0x4000190	    0x48c7c2000000	                              mov rdx, 0	       123	uuid.c	FUNCTION_7	CALL_1
0x4000197	            0xeb87	                    jmp sym.__uuid_parse	       123	uuid.c	FUNCTION_7	CALL_1
