pipe_ioctl	IF,0:DO,0:ELSE,0:WHILE,1:CALL,3:SWITCH,1:functions,0:FOR,0	38
0x4000110	    0x81fe1b540000	                         cmp esi, 0x541b	       494	pipe.c	FUNCTION_17	SWITCH_1
0x4000116	            0x4154	                                push r12	       490	pipe.c	FUNCTION_17
0x4000118	    0x48c7c0fdfdff	             mov rax, 0xfffffffffffffdfd	       508	pipe.c	FUNCTION_17	SWITCH_1
0x400011f	              0x55	                                push rbp	       490	pipe.c	FUNCTION_17
0x4000120	              0x53	                                push rbx	       490	pipe.c	FUNCTION_17
0x4000121	    0x4c8ba7c80000	            mov r12, qword [rdi + 0xc8] 	       491	pipe.c	FUNCTION_17
0x4000128	            0x7556	                           jne 0x4000180	       494	pipe.c	FUNCTION_17	SWITCH_1
0x400012a	          0x4c89e7	                            mov rdi, r12	        83	pipe.c	FUNCTION_4	CALL_1
0x400012d	          0x4889d5	                            mov rbp, rdx	        83	pipe.c	FUNCTION_4	CALL_1
0x4000130	      0xe800000000	                          call 0x4000135	        83	pipe.c	FUNCTION_4	CALL_1
0x4000135	      0x418b742438	            mov esi, dword [r12 + 0x38] 	       500	pipe.c	FUNCTION_17	SWITCH_1	WHILE_1
0x400013a	      0x418b4c243c	            mov ecx, dword [r12 + 0x3c] 	       498	pipe.c	FUNCTION_17	SWITCH_1
0x400013f	          0x83ee01	                              sub esi, 1	       500	pipe.c	FUNCTION_17	SWITCH_1	WHILE_1
0x4000142	            0x7841	                            js 0x4000185	       500	pipe.c	FUNCTION_17	SWITCH_1	WHILE_1
0x4000144	      0x418b442440	            mov eax, dword [r12 + 0x40] 	       500	pipe.c	FUNCTION_17	SWITCH_1	WHILE_1
0x4000149	      0x4d8b442478	              mov r8, qword [r12 + 0x78]	       500	pipe.c	FUNCTION_17	SWITCH_1	WHILE_1
0x400014e	            0x31db	                            xor ebx, ebx	       500	pipe.c	FUNCTION_17	SWITCH_1	WHILE_1
0x4000150	          0x8d50ff	                      lea edx, [rax - 1]	       500	pipe.c	FUNCTION_17	SWITCH_1	WHILE_1
0x4000153	          0x4863f9	                         movsxd rdi, ecx	       501	pipe.c	FUNCTION_17	SWITCH_1	WHILE_1
0x4000156	          0x83ee01	                              sub esi, 1	       500	pipe.c	FUNCTION_17	SWITCH_1	WHILE_1
0x4000159	          0x83c101	                              add ecx, 1	       502	pipe.c	FUNCTION_17	SWITCH_1	WHILE_1
0x400015c	        0x488d04bf	                  lea rax, [rdi + rdi*4]	       501	pipe.c	FUNCTION_17	SWITCH_1	WHILE_1
0x4000160	            0x21d1	                            and ecx, edx	       502	pipe.c	FUNCTION_17	SWITCH_1	WHILE_1
0x4000162	      0x41035cc00c	       add ebx, dword [r8 + rax*8 + 0xc]	       501	pipe.c	FUNCTION_17	SWITCH_1	WHILE_1
0x4000167	          0x83feff	             cmp esi, 0xffffffffffffffff	       500	pipe.c	FUNCTION_17	SWITCH_1	WHILE_1
0x400016a	            0x75e7	                           jne 0x4000153	       500	pipe.c	FUNCTION_17	SWITCH_1	WHILE_1
0x400016c	          0x4c89e7	                            mov rdi, r12	        88	pipe.c	FUNCTION_5	CALL_1
0x400016f	      0xe800000000	                          call 0x4000174	        88	pipe.c	FUNCTION_5	CALL_1
0x4000174	            0x89d8	                            mov eax, ebx	       506	pipe.c	FUNCTION_17	SWITCH_1	CALL_3
0x4000176	          0x4889e9	                            mov rcx, rbp	       506	pipe.c	FUNCTION_17	SWITCH_1	CALL_3
0x4000179	      0xe800000000	                          call 0x400017e	       506	pipe.c	FUNCTION_17	SWITCH_1	CALL_3
0x400017e	            0x4898	                                    cdqe	       506	pipe.c	FUNCTION_17	SWITCH_1	CALL_3
0x4000180	              0x5b	                                 pop rbx	       510	pipe.c	FUNCTION_17
0x4000181	              0x5d	                                 pop rbp	       510	pipe.c	FUNCTION_17
0x4000182	            0x415c	                                 pop r12	       510	pipe.c	FUNCTION_17
0x4000184	              0xc3	                                     ret	       510	pipe.c	FUNCTION_17
0x4000185	            0x31db	                            xor ebx, ebx	       497	pipe.c	FUNCTION_17	SWITCH_1
0x4000187	            0xebe3	                           jmp 0x400016c	       497	pipe.c	FUNCTION_17	SWITCH_1
do_pipe_flags	IF,1:DO,0:ELSE,0:WHILE,0:CALL,3:SWITCH,0:functions,0:FOR,0	26
0x40015e0	              0x53	                                push rbx	       833	pipe.c	FUNCTION_33
0x40015e1	            0x89f2	                            mov edx, esi	       833	pipe.c	FUNCTION_33
0x40015e3	          0x4889fb	                            mov rbx, rdi	       833	pipe.c	FUNCTION_33
0x40015e6	        0x4883ec20	                           sub rsp, 0x20	       833	pipe.c	FUNCTION_33
0x40015ea	      0x488d742408	                      lea rsi, [rsp + 8]	       835	pipe.c	FUNCTION_33	CALL_1
0x40015ef	    0x65488b042528	                mov rax, qword gs:[0x28]	       833	pipe.c	FUNCTION_33
0x40015f8	      0x4889442418	             mov qword [rsp + 0x18], rax	       833	pipe.c	FUNCTION_33
0x40015fd	            0x31c0	                            xor eax, eax	       833	pipe.c	FUNCTION_33
0x40015ff	      0xe81cfeffff	                call sym.__do_pipe_flags	       835	pipe.c	FUNCTION_33	CALL_1
0x4001604	            0x85c0	                           test eax, eax	       836	pipe.c	FUNCTION_33	IF_1
0x4001606	            0x7521	                           jne 0x4001629	       836	pipe.c	FUNCTION_33	IF_1
0x4001608	      0x488b742408	                mov rsi, qword [rsp + 8]	       837	pipe.c	FUNCTION_33	IF_1	CALL_2
0x400160d	            0x8b3b	                    mov edi, dword [rbx]	       837	pipe.c	FUNCTION_33	IF_1	CALL_2
0x400160f	        0x89442404	                mov dword [rsp + 4], eax	       837	pipe.c	FUNCTION_33	IF_1	CALL_2
0x4001613	      0xe800000000	                          call 0x4001618	       837	pipe.c	FUNCTION_33	IF_1	CALL_2
0x4001618	          0x8b7b04	                mov edi, dword [rbx + 4]	       838	pipe.c	FUNCTION_33	IF_1	CALL_3
0x400161b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       838	pipe.c	FUNCTION_33	IF_1	CALL_3
0x4001620	      0xe800000000	                          call 0x4001625	       838	pipe.c	FUNCTION_33	IF_1	CALL_3
0x4001625	        0x8b442404	                mov eax, dword [rsp + 4]	       838	pipe.c	FUNCTION_33	IF_1	CALL_3
0x4001629	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       841	pipe.c	FUNCTION_33
0x400162e	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       841	pipe.c	FUNCTION_33
0x4001637	            0x7506	                           jne 0x400163f	       841	pipe.c	FUNCTION_33
0x4001639	        0x4883c420	                           add rsp, 0x20	       841	pipe.c	FUNCTION_33
0x400163d	              0x5b	                                 pop rbx	       841	pipe.c	FUNCTION_33
0x400163e	              0xc3	                                     ret	       841	pipe.c	FUNCTION_33
0x400163f	      0xe800000000	                          call 0x4001644	       841	pipe.c	FUNCTION_33
pipe_double_lock	IF,1:DO,0:ELSE,1:WHILE,0:CALL,5:SWITCH,0:functions,0:FOR,0	36
0x40003d0	          0x4839f7	                            cmp rdi, rsi	        94	pipe.c	FUNCTION_6	CALL_1
0x40003d3	            0x744e	                            je 0x4000423	        94	pipe.c	FUNCTION_6	CALL_1
0x40003d5	              0x55	                                push rbp	        93	pipe.c	FUNCTION_6
0x40003d6	          0x4889f5	                            mov rbp, rsi	        93	pipe.c	FUNCTION_6
0x40003d9	              0x53	                                push rbx	        93	pipe.c	FUNCTION_6
0x40003da	          0x4889fb	                            mov rbx, rdi	        93	pipe.c	FUNCTION_6
0x40003dd	            0x7211	                            jb 0x40003f0	        96	pipe.c	FUNCTION_6	IF_1
0x40003df	          0x8b564c	            mov edx, dword [rsi + 0x4c] 	        61	pipe.c	FUNCTION_1	IF_1
0x40003e2	            0x85d2	                           test edx, edx	        61	pipe.c	FUNCTION_1	IF_1
0x40003e4	            0x7533	                           jne 0x4000419	        61	pipe.c	FUNCTION_1	IF_1
0x40003e6	          0x8b434c	            mov eax, dword [rbx + 0x4c] 	        61	pipe.c	FUNCTION_1	IF_1
0x40003e9	            0x85c0	                           test eax, eax	        61	pipe.c	FUNCTION_1	IF_1
0x40003eb	            0x751b	                           jne 0x4000408	        61	pipe.c	FUNCTION_1	IF_1
0x40003ed	              0x5b	                                 pop rbx	       103	pipe.c	FUNCTION_6
0x40003ee	              0x5d	                                 pop rbp	       103	pipe.c	FUNCTION_6
0x40003ef	              0xc3	                                     ret	       103	pipe.c	FUNCTION_6
0x40003f0	          0x8b774c	            mov esi, dword [rdi + 0x4c] 	        61	pipe.c	FUNCTION_1	IF_1
0x40003f3	            0x85f6	                           test esi, esi	        61	pipe.c	FUNCTION_1	IF_1
0x40003f5	            0x751b	                           jne 0x4000412	        61	pipe.c	FUNCTION_1	IF_1
0x40003f7	          0x8b4d4c	            mov ecx, dword [rbp + 0x4c] 	        61	pipe.c	FUNCTION_1	IF_1
0x40003fa	            0x85c9	                           test ecx, ecx	        61	pipe.c	FUNCTION_1	IF_1
0x40003fc	            0x74ef	                            je 0x40003ed	        61	pipe.c	FUNCTION_1	IF_1
0x40003fe	          0x4889ef	                            mov rdi, rbp	        62	pipe.c	FUNCTION_1	CALL_1
0x4000401	              0x5b	                                 pop rbx	       103	pipe.c	FUNCTION_6
0x4000402	              0x5d	                                 pop rbp	       103	pipe.c	FUNCTION_6
0x4000403	      0xe900000000	                           jmp 0x4000408	        62	pipe.c	FUNCTION_1	CALL_1
0x4000408	          0x4889df	                            mov rdi, rbx	        62	pipe.c	FUNCTION_1	CALL_1
0x400040b	              0x5b	                                 pop rbx	       103	pipe.c	FUNCTION_6
0x400040c	              0x5d	                                 pop rbp	       103	pipe.c	FUNCTION_6
0x400040d	      0xe900000000	                           jmp 0x4000412	        62	pipe.c	FUNCTION_1	CALL_1
0x4000412	      0xe800000000	                          call 0x4000417	        62	pipe.c	FUNCTION_1	CALL_1
0x4000417	            0xebde	                           jmp 0x40003f7	        62	pipe.c	FUNCTION_1	CALL_1
0x4000419	          0x4889f7	                            mov rdi, rsi	        62	pipe.c	FUNCTION_1	CALL_1
0x400041c	      0xe800000000	                          call 0x4000421	        62	pipe.c	FUNCTION_1	CALL_1
0x4000421	            0xebc3	                           jmp 0x40003e6	        62	pipe.c	FUNCTION_1	CALL_1
0x4000423	             0xf0b	                                     ud2	        62	pipe.c	FUNCTION_1	CALL_1
is_unprivileged_user	IF,0:DO,0:ELSE,0:WHILE,0:CALL,2:SWITCH,0:functions,0:FOR,0	11
0x4000270	      0xbf18000000	                           mov edi, 0x18	       625	pipe.c	FUNCTION_26	CALL_2
0x4000275	      0xe800000000	                          call 0x400027a	       625	pipe.c	FUNCTION_26	CALL_2
0x400027a	            0x31d2	                            xor edx, edx	       625	pipe.c	FUNCTION_26	CALL_2
0x400027c	            0x84c0	                             test al, al	       625	pipe.c	FUNCTION_26	CALL_2
0x400027e	            0x750f	                           jne 0x400028f	       625	pipe.c	FUNCTION_26	CALL_2
0x4000280	      0xbf15000000	                           mov edi, 0x15	       625	pipe.c	FUNCTION_26	CALL_2
0x4000285	      0xe800000000	                          call 0x400028a	       625	pipe.c	FUNCTION_26	CALL_2
0x400028a	          0x83f001	                              xor eax, 1	       625	pipe.c	FUNCTION_26	CALL_2
0x400028d	            0x89c2	                            mov edx, eax	       625	pipe.c	FUNCTION_26	CALL_2
0x400028f	            0x89d0	                            mov eax, edx	       626	pipe.c	FUNCTION_26
0x4000291	              0xc3	                                     ret	       626	pipe.c	FUNCTION_26
pipefs_dname	IF,0:DO,0:ELSE,0:WHILE,0:CALL,2:SWITCH,0:functions,0:FOR,0	4
0x4000340	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       697	pipe.c	FUNCTION_29	CALL_1
0x4000344	    0x48c7c1000000	                              mov rcx, 0	       697	pipe.c	FUNCTION_29	CALL_1
0x400034b	        0x4c8b4040	              mov r8, qword [rax + 0x40]	       697	pipe.c	FUNCTION_29	CALL_1
0x400034f	      0xe900000000	                           jmp 0x4000354	       697	pipe.c	FUNCTION_29	CALL_1
free_pipe_info	IF,2:DO,0:ELSE,0:WHILE,0:CALL,6:SWITCH,0:functions,0:FOR,1	38
0x4000da0	              0x55	                                push rbp	       674	pipe.c	FUNCTION_28
0x4000da1	              0x53	                                push rbx	       674	pipe.c	FUNCTION_28
0x4000da2	          0x4889fd	                            mov rbp, rdi	       674	pipe.c	FUNCTION_28
0x4000da5	          0x8b4740	            mov eax, dword [rdi + 0x40] 	       154	atomic64_64.h	FUNCTION_98	CALL_1
0x4000da8	    0x488b97800000	            mov rdx, qword [rdi + 0x80] 	       606	pipe.c	FUNCTION_23	CALL_1
0x4000daf	          0x48f7d8	                                 neg rax	       154	atomic64_64.h	FUNCTION_98	CALL_1
0x4000db2	    0xf0480fc14230	       lock xadd qword [rdx + 0x30], rax	       154	atomic64_64.h	FUNCTION_98	CALL_1
0x4000db8	    0x488bbf800000	            mov rdi, qword [rdi + 0x80] 	       678	pipe.c	FUNCTION_28	CALL_2
0x4000dbf	            0x31db	                            xor ebx, ebx	       678	pipe.c	FUNCTION_28	CALL_2
0x4000dc1	      0xe800000000	                          call 0x4000dc6	       678	pipe.c	FUNCTION_28	CALL_2
0x4000dc6	          0x8b4540	            mov eax, dword [rbp + 0x40] 	       679	pipe.c	FUNCTION_28	FOR_1
0x4000dc9	            0x85c0	                           test eax, eax	       679	pipe.c	FUNCTION_28	FOR_1
0x4000dcb	            0x7434	                            je 0x4000e01	       679	pipe.c	FUNCTION_28	FOR_1
0x4000dcd	          0x4863c3	                         movsxd rax, ebx	       680	pipe.c	FUNCTION_28	FOR_1
0x4000dd0	        0x488d1480	                  lea rdx, [rax + rax*4]	       680	pipe.c	FUNCTION_28	FOR_1
0x4000dd4	        0x488b4578	            mov rax, qword [rbp + 0x78] 	       680	pipe.c	FUNCTION_28	FOR_1
0x4000dd8	        0x488d34d0	                  lea rsi, [rax + rdx*8]	       680	pipe.c	FUNCTION_28	FOR_1
0x4000ddc	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       681	pipe.c	FUNCTION_28	FOR_1	IF_1
0x4000de0	          0x4885c0	                           test rax, rax	       681	pipe.c	FUNCTION_28	FOR_1	IF_1
0x4000de3	            0x7414	                            je 0x4000df9	       681	pipe.c	FUNCTION_28	FOR_1	IF_1
0x4000de5	    0x48c746100000	               mov qword [rsi + 0x10], 0	       135	pipe_fs_i.h	FUNCTION_113
0x4000ded	          0x4889ef	                            mov rdi, rbp	       136	pipe_fs_i.h	FUNCTION_113	CALL_1
0x4000df0	        0x488b4010	            mov rax, qword [rax + 0x10] 	       136	pipe_fs_i.h	FUNCTION_113	CALL_1
0x4000df4	      0xe800000000	                          call 0x4000df9	       136	pipe_fs_i.h	FUNCTION_113	CALL_1
0x4000df9	          0x83c301	                              add ebx, 1	       679	pipe.c	FUNCTION_28	FOR_1
0x4000dfc	          0x395d40	            cmp dword [rbp + 0x40], ebx 	       679	pipe.c	FUNCTION_28	FOR_1
0x4000dff	            0x77cc	                            ja 0x4000dcd	       679	pipe.c	FUNCTION_28	FOR_1
0x4000e01	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	       684	pipe.c	FUNCTION_28	IF_2
0x4000e05	          0x4885ff	                           test rdi, rdi	       684	pipe.c	FUNCTION_28	IF_2
0x4000e08	            0x7407	                            je 0x4000e11	       684	pipe.c	FUNCTION_28	IF_2
0x4000e0a	            0x31f6	                            xor esi, esi	       685	pipe.c	FUNCTION_28	CALL_4
0x4000e0c	      0xe800000000	                          call 0x4000e11	       685	pipe.c	FUNCTION_28	CALL_4
0x4000e11	        0x488b7d78	            mov rdi, qword [rbp + 0x78] 	       686	pipe.c	FUNCTION_28	CALL_5
0x4000e15	      0xe800000000	                          call 0x4000e1a	       686	pipe.c	FUNCTION_28	CALL_5
0x4000e1a	          0x4889ef	                            mov rdi, rbp	       687	pipe.c	FUNCTION_28	CALL_6
0x4000e1d	              0x5b	                                 pop rbx	       688	pipe.c	FUNCTION_28
0x4000e1e	              0x5d	                                 pop rbp	       688	pipe.c	FUNCTION_28
0x4000e1f	      0xe900000000	                           jmp 0x4000e24	       687	pipe.c	FUNCTION_28	CALL_6
pipe_poll_mask	IF,4:DO,0:ELSE,0:WHILE,0:CALL,0:SWITCH,0:functions,0:FOR,0	30
0x4000060	          0x8b4f44	            mov ecx, dword [rdi + 0x44] 	       528	pipe.c	FUNCTION_19	IF_1
0x4000063	    0x488b97c80000	            mov rdx, qword [rdi + 0xc8] 	       523	pipe.c	FUNCTION_19
0x400006a	            0x31c0	                            xor eax, eax	       525	pipe.c	FUNCTION_19
0x400006c	          0xf6c101	                              test cl, 1	       528	pipe.c	FUNCTION_19	IF_1
0x400006f	          0x8b7238	            mov esi, dword [rdx + 0x38] 	       524	pipe.c	FUNCTION_19
0x4000072	            0x7415	                            je 0x4000089	       528	pipe.c	FUNCTION_19	IF_1
0x4000074	            0x85f6	                           test esi, esi	       529	pipe.c	FUNCTION_19	IF_1
0x4000076	    0x41b841000000	                           mov r8d, 0x41	       529	pipe.c	FUNCTION_19	IF_1
0x400007c	        0x410f4fc0	                          cmovg eax, r8d	       529	pipe.c	FUNCTION_19	IF_1
0x4000080	        0x448b4248	            mov r8d, dword [rdx + 0x48] 	       530	pipe.c	FUNCTION_19	IF_1	IF_2
0x4000084	          0x4585c0	                           test r8d, r8d	       530	pipe.c	FUNCTION_19	IF_1	IF_2
0x4000087	            0x7421	                            je 0x40000aa	       530	pipe.c	FUNCTION_19	IF_1	IF_2
0x4000089	          0x83e102	                              and ecx, 2	       534	pipe.c	FUNCTION_19	IF_3
0x400008c	            0x741a	                            je 0x40000a8	       534	pipe.c	FUNCTION_19	IF_3
0x400008e	          0x3b7240	            cmp esi, dword [rdx + 0x40] 	       535	pipe.c	FUNCTION_19	IF_3
0x4000091	          0x8b5244	            mov edx, dword [rdx + 0x44] 	       541	pipe.c	FUNCTION_19	IF_3	IF_4
0x4000094	            0x19c9	                            sbb ecx, ecx	       535	pipe.c	FUNCTION_19	IF_3
0x4000096	    0x81e104010000	                          and ecx, 0x104	       535	pipe.c	FUNCTION_19	IF_3
0x400009c	             0x9c8	                             or eax, ecx	       535	pipe.c	FUNCTION_19	IF_3
0x400009e	            0x89c1	                            mov ecx, eax	       541	pipe.c	FUNCTION_19	IF_3	IF_4
0x40000a0	          0x83c908	                               or ecx, 8	       541	pipe.c	FUNCTION_19	IF_3	IF_4
0x40000a3	            0x85d2	                           test edx, edx	       541	pipe.c	FUNCTION_19	IF_3	IF_4
0x40000a5	           0xf44c1	                          cmove eax, ecx	       541	pipe.c	FUNCTION_19	IF_3	IF_4
0x40000a8	            0xf3c3	                                     ret	       545	pipe.c	FUNCTION_19
0x40000aa	          0x4189c0	                            mov r8d, eax	       531	pipe.c	FUNCTION_19	IF_1	IF_2
0x40000ad	        0x448b4a58	            mov r9d, dword [rdx + 0x58] 	       530	pipe.c	FUNCTION_19	IF_1	IF_2
0x40000b1	        0x4183c810	                            or r8d, 0x10	       531	pipe.c	FUNCTION_19	IF_1	IF_2
0x40000b5	    0x4c398fb80000	              cmp qword [rdi + 0xb8], r9	       531	pipe.c	FUNCTION_19	IF_1	IF_2
0x40000bc	        0x410f45c0	                         cmovne eax, r8d	       531	pipe.c	FUNCTION_19	IF_1	IF_2
0x40000c0	            0xebc7	                           jmp 0x4000089	       531	pipe.c	FUNCTION_19	IF_1	IF_2
pipe_fasync	IF,3:DO,0:ELSE,0:WHILE,0:CALL,5:SWITCH,0:functions,0:FOR,0	54
0x40002a0	            0x4156	                                push r14	       586	pipe.c	FUNCTION_22
0x40002a2	            0x4155	                                push r13	       586	pipe.c	FUNCTION_22
0x40002a4	          0x4189fd	                           mov r13d, edi	       586	pipe.c	FUNCTION_22
0x40002a7	            0x4154	                                push r12	       586	pipe.c	FUNCTION_22
0x40002a9	              0x55	                                push rbp	       586	pipe.c	FUNCTION_22
0x40002aa	          0x4189d6	                           mov r14d, edx	       586	pipe.c	FUNCTION_22
0x40002ad	              0x53	                                push rbx	       586	pipe.c	FUNCTION_22
0x40002ae	    0x488baec80000	            mov rbp, qword [rsi + 0xc8] 	       587	pipe.c	FUNCTION_22
0x40002b5	          0x4889f3	                            mov rbx, rsi	       586	pipe.c	FUNCTION_22
0x40002b8	          0x4889ef	                            mov rdi, rbp	        83	pipe.c	FUNCTION_4	CALL_1
0x40002bb	      0xe800000000	                          call 0x40002c0	        83	pipe.c	FUNCTION_4	CALL_1
0x40002c0	          0x8b4344	            mov eax, dword [rbx + 0x44] 	       591	pipe.c	FUNCTION_22	IF_1
0x40002c3	            0xa801	                              test al, 1	       591	pipe.c	FUNCTION_22	IF_1
0x40002c5	            0x7536	                           jne 0x40002fd	       591	pipe.c	FUNCTION_22	IF_1
0x40002c7	            0xa802	                              test al, 2	       593	pipe.c	FUNCTION_22	IF_2
0x40002c9	            0x742d	                            je 0x40002f8	       593	pipe.c	FUNCTION_22	IF_2
0x40002cb	        0x488d4d70	                   lea rcx, [rbp + 0x70]	       594	pipe.c	FUNCTION_22	IF_2	CALL_3
0x40002cf	          0x4489f2	                           mov edx, r14d	       594	pipe.c	FUNCTION_22	IF_2	CALL_3
0x40002d2	          0x4889de	                            mov rsi, rbx	       594	pipe.c	FUNCTION_22	IF_2	CALL_3
0x40002d5	          0x4489ef	                           mov edi, r13d	       594	pipe.c	FUNCTION_22	IF_2	CALL_3
0x40002d8	      0xe800000000	                          call 0x40002dd	       594	pipe.c	FUNCTION_22	IF_2	CALL_3
0x40002dd	            0x85c0	                           test eax, eax	       595	pipe.c	FUNCTION_22	IF_2	IF_3
0x40002df	          0x4189c4	                           mov r12d, eax	       594	pipe.c	FUNCTION_22	IF_2	CALL_3
0x40002e2	            0x783a	                            js 0x400031e	       595	pipe.c	FUNCTION_22	IF_2	IF_3
0x40002e4	          0x4889ef	                            mov rdi, rbp	        88	pipe.c	FUNCTION_5	CALL_1
0x40002e7	      0xe800000000	                          call 0x40002ec	        88	pipe.c	FUNCTION_5	CALL_1
0x40002ec	          0x4489e0	                           mov eax, r12d	       601	pipe.c	FUNCTION_22
0x40002ef	              0x5b	                                 pop rbx	       601	pipe.c	FUNCTION_22
0x40002f0	              0x5d	                                 pop rbp	       601	pipe.c	FUNCTION_22
0x40002f1	            0x415c	                                 pop r12	       601	pipe.c	FUNCTION_22
0x40002f3	            0x415d	                                 pop r13	       601	pipe.c	FUNCTION_22
0x40002f5	            0x415e	                                 pop r14	       601	pipe.c	FUNCTION_22
0x40002f7	              0xc3	                                     ret	       601	pipe.c	FUNCTION_22
0x40002f8	          0x4531e4	                          xor r12d, r12d	       588	pipe.c	FUNCTION_22
0x40002fb	            0xebe7	                           jmp 0x40002e4	       588	pipe.c	FUNCTION_22
0x40002fd	        0x488d4d68	                   lea rcx, [rbp + 0x68]	       592	pipe.c	FUNCTION_22	CALL_2
0x4000301	          0x4489f2	                           mov edx, r14d	       592	pipe.c	FUNCTION_22	CALL_2
0x4000304	          0x4889de	                            mov rsi, rbx	       592	pipe.c	FUNCTION_22	CALL_2
0x4000307	          0x4489ef	                           mov edi, r13d	       592	pipe.c	FUNCTION_22	CALL_2
0x400030a	      0xe800000000	                          call 0x400030f	       592	pipe.c	FUNCTION_22	CALL_2
0x400030f	        0xf6434402	               test byte [rbx + 0x44], 2	       593	pipe.c	FUNCTION_22	IF_2
0x4000313	          0x4189c4	                           mov r12d, eax	       592	pipe.c	FUNCTION_22	CALL_2
0x4000316	            0x74cc	                            je 0x40002e4	       593	pipe.c	FUNCTION_22	IF_2
0x4000318	            0x85c0	                           test eax, eax	       593	pipe.c	FUNCTION_22	IF_2
0x400031a	            0x78c8	                            js 0x40002e4	       593	pipe.c	FUNCTION_22	IF_2
0x400031c	            0xebad	                           jmp 0x40002cb	       593	pipe.c	FUNCTION_22	IF_2
0x400031e	        0xf6434401	               test byte [rbx + 0x44], 1	       595	pipe.c	FUNCTION_22	IF_2	IF_3
0x4000322	            0x74c0	                            je 0x40002e4	       595	pipe.c	FUNCTION_22	IF_2	IF_3
0x4000324	        0x488d4d68	                   lea rcx, [rbp + 0x68]	       597	pipe.c	FUNCTION_22	IF_2	CALL_4
0x4000328	            0x31d2	                            xor edx, edx	       597	pipe.c	FUNCTION_22	IF_2	CALL_4
0x400032a	          0x4889de	                            mov rsi, rbx	       597	pipe.c	FUNCTION_22	IF_2	CALL_4
0x400032d	      0xbfffffffff	                     mov edi, 0xffffffff	       597	pipe.c	FUNCTION_22	IF_2	CALL_4
0x4000332	      0xe800000000	                          call 0x4000337	       597	pipe.c	FUNCTION_22	IF_2	CALL_4
0x4000337	            0xebab	                           jmp 0x40002e4	       597	pipe.c	FUNCTION_22	IF_2	CALL_4
pipe_get_poll_head	IF,0:DO,0:ELSE,0:WHILE,0:CALL,0:SWITCH,0:functions,0:FOR,0	3
0x4000050	    0x488b87c80000	            mov rax, qword [rdi + 0xc8] 	       517	pipe.c	FUNCTION_18
0x4000057	        0x4883c020	                           add rax, 0x20	       517	pipe.c	FUNCTION_18
0x400005b	              0xc3	                                     ret	       518	pipe.c	FUNCTION_18
init_pipe_fs	IF,2:DO,0:ELSE,0:WHILE,0:CALL,5:SWITCH,0:functions,0:FOR,0	19
0x4000040	            0x31c0	                            xor eax, eax	       211	pipe.c	FUNCTION_12
0x4000042	              0xc3	                                     ret	       211	pipe.c	FUNCTION_12
0x4000043	           0xf1f00	                         nop dword [rax]	       211	pipe.c	FUNCTION_12
0x4000046	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       211	pipe.c	FUNCTION_12
0x4000050	    0x488b87c80000	            mov rax, qword [rdi + 0xc8] 	       517	pipe.c	FUNCTION_18
0x4000057	        0x4883c020	                           add rax, 0x20	       517	pipe.c	FUNCTION_18
0x400005b	              0xc3	                                     ret	       518	pipe.c	FUNCTION_18
0x400005c	         0xf1f4000	                         nop dword [rax]	       518	pipe.c	FUNCTION_18
0x4000060	          0x8b4f44	            mov ecx, dword [rdi + 0x44] 	       528	pipe.c	FUNCTION_19	IF_1
0x4000063	    0x488b97c80000	            mov rdx, qword [rdi + 0xc8] 	       523	pipe.c	FUNCTION_19
0x400006a	            0x31c0	                            xor eax, eax	       525	pipe.c	FUNCTION_19
0x400006c	          0xf6c101	                              test cl, 1	       528	pipe.c	FUNCTION_19	IF_1
0x400006f	          0x8b7238	            mov esi, dword [rdx + 0x38] 	       524	pipe.c	FUNCTION_19
0x4000072	            0x7415	                            je 0x4000089	       528	pipe.c	FUNCTION_19	IF_1
0x4000074	            0x85f6	                           test esi, esi	       529	pipe.c	FUNCTION_19	IF_1
0x4000076	    0x41b841000000	                           mov r8d, 0x41	       529	pipe.c	FUNCTION_19	IF_1
0x400007c	        0x410f4fc0	                          cmovg eax, r8d	       529	pipe.c	FUNCTION_19	IF_1
0x4000080	              0x44	                                 invalid	       530	pipe.c	FUNCTION_19	IF_1	IF_2
0x4000081	              0x8b	                                 invalid	       530	pipe.c	FUNCTION_19	IF_1	IF_2
generic_pipe_buf_confirm	IF,0:DO,0:ELSE,0:WHILE,0:CALL,0:SWITCH,0:functions,0:FOR,0	2
0x4000040	            0x31c0	                            xor eax, eax	       211	pipe.c	FUNCTION_12
0x4000042	              0xc3	                                     ret	       211	pipe.c	FUNCTION_12
