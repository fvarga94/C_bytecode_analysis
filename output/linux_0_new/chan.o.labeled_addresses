cfg80211_chandef_dfs_required	WHILE,0:IF,7:DO,0:CALL,8:ELSE,2:functions,0:SWITCH,1:FOR,0	64
0x4000790	            0x4155	                                push r13	       333	chan.c	FUNCTION_11
0x4000792	            0x4154	                                push r12	       333	chan.c	FUNCTION_11
0x4000794	          0x4989fc	                            mov r12, rdi	       333	chan.c	FUNCTION_11
0x4000797	              0x55	                                push rbp	       333	chan.c	FUNCTION_11
0x4000798	              0x53	                                push rbx	       333	chan.c	FUNCTION_11
0x4000799	          0x4889f7	                            mov rdi, rsi	       337	chan.c	FUNCTION_11	IF_1	CALL_2
0x400079c	          0x4889f5	                            mov rbp, rsi	       333	chan.c	FUNCTION_11
0x400079f	          0x4189d0	                            mov r8d, edx	       333	chan.c	FUNCTION_11
0x40007a2	      0xe800000000	                          call 0x40007a7	       337	chan.c	FUNCTION_11	IF_1	CALL_2
0x40007a7	            0x84c0	                             test al, al	       337	chan.c	FUNCTION_11	IF_1	CALL_2
0x40007a9	            0x745c	                            je 0x4000807	       337	chan.c	FUNCTION_11	IF_1	CALL_2
0x40007ab	        0x4183f80d	                            cmp r8d, 0xd	       337	chan.c	FUNCTION_11	IF_1	CALL_2
0x40007af	            0x771c	                            ja 0x40007cd	       337	chan.c	FUNCTION_11	IF_1	CALL_2
0x40007b1	      0xbb01000000	                              mov ebx, 1	       337	chan.c	FUNCTION_11	IF_1	CALL_2
0x40007b6	          0x4489c1	                            mov ecx, r8d	       337	chan.c	FUNCTION_11	IF_1	CALL_2
0x40007b9	          0x4889d8	                            mov rax, rbx	       337	chan.c	FUNCTION_11	IF_1	CALL_2
0x40007bc	          0x48d3e0	                             shl rax, cl	       337	chan.c	FUNCTION_11	IF_1	CALL_2
0x40007bf	      0xa98a020000	                         test eax, 0x28a	       337	chan.c	FUNCTION_11	IF_1	CALL_2
0x40007c4	            0x7514	                           jne 0x40007da	       337	chan.c	FUNCTION_11	IF_1	CALL_2
0x40007c6	      0xa901200000	                        test eax, 0x2001	       337	chan.c	FUNCTION_11	IF_1	CALL_2
0x40007cb	            0x7509	                           jne 0x40007d6	       337	chan.c	FUNCTION_11	IF_1	CALL_2
0x40007cd	            0x31c0	                            xor eax, eax	       383	chan.c	FUNCTION_11
0x40007cf	              0x5b	                                 pop rbx	       384	chan.c	FUNCTION_11
0x40007d0	              0x5d	                                 pop rbp	       384	chan.c	FUNCTION_11
0x40007d1	            0x415c	                                 pop r12	       384	chan.c	FUNCTION_11
0x40007d3	            0x415d	                                 pop r13	       384	chan.c	FUNCTION_11
0x40007d5	              0xc3	                                     ret	       384	chan.c	FUNCTION_11
0x40007d6	             0xf0b	                                     ud2	       384	chan.c	FUNCTION_11
0x40007d8	            0xebf3	                           jmp 0x40007cd	       380	chan.c	FUNCTION_11	SWITCH_1	CALL_8
0x40007da	          0x8b7d08	                mov edi, dword [rbp + 8]	       345	chan.c	FUNCTION_11	SWITCH_1	CALL_3
0x40007dd	      0xe86effffff	call sym.cfg80211_chandef_get_width.isra.1	       345	chan.c	FUNCTION_11	SWITCH_1	CALL_3
0x40007e2	            0x85c0	                           test eax, eax	       346	chan.c	FUNCTION_11	SWITCH_1	IF_2
0x40007e4	          0x4189c5	                           mov r13d, eax	       345	chan.c	FUNCTION_11	SWITCH_1	CALL_3
0x40007e7	            0x7846	                            js 0x400082f	       346	chan.c	FUNCTION_11	SWITCH_1	IF_2
0x40007e9	          0x8b750c	              mov esi, dword [rbp + 0xc]	       349	chan.c	FUNCTION_11	SWITCH_1	CALL_4
0x40007ec	            0x89c2	                            mov edx, eax	       349	chan.c	FUNCTION_11	SWITCH_1	CALL_4
0x40007ee	          0x4c89e7	                            mov rdi, r12	       349	chan.c	FUNCTION_11	SWITCH_1	CALL_4
0x40007f1	      0xe8aafaffff	call sym.cfg80211_get_chans_dfs_required	       349	chan.c	FUNCTION_11	SWITCH_1	CALL_4
0x40007f6	            0x85c0	                           test eax, eax	       352	chan.c	FUNCTION_11	SWITCH_1	IF_3
0x40007f8	            0x78d5	                            js 0x40007cf	       352	chan.c	FUNCTION_11	SWITCH_1	IF_3
0x40007fa	            0x7419	                            je 0x4000815	       354	chan.c	FUNCTION_11	SWITCH_1	ELSE_1	IF_4
0x40007fc	          0x8b4d08	                mov ecx, dword [rbp + 8]	       366	chan.c	FUNCTION_11	SWITCH_1	ELSE_2	IF_7
0x40007ff	          0x48d3e3	                             shl rbx, cl	       366	chan.c	FUNCTION_11	SWITCH_1	ELSE_2	IF_7
0x4000802	          0x4889d8	                            mov rax, rbx	       366	chan.c	FUNCTION_11	SWITCH_1	ELSE_2	IF_7
0x4000805	            0xebc8	                           jmp 0x40007cf	       366	chan.c	FUNCTION_11	SWITCH_1	ELSE_2	IF_7
0x4000807	             0xf0b	                                     ud2	       366	chan.c	FUNCTION_11	SWITCH_1	ELSE_2	IF_7
0x4000809	      0xb8eaffffff	                     mov eax, 0xffffffea	       338	chan.c	FUNCTION_11	IF_1
0x400080e	              0x5b	                                 pop rbx	       384	chan.c	FUNCTION_11
0x400080f	              0x5d	                                 pop rbp	       384	chan.c	FUNCTION_11
0x4000810	            0x415c	                                 pop r12	       384	chan.c	FUNCTION_11
0x4000812	            0x415d	                                 pop r13	       384	chan.c	FUNCTION_11
0x4000814	              0xc3	                                     ret	       384	chan.c	FUNCTION_11
0x4000815	          0x8b7510	            mov esi, dword [rbp + 0x10] 	       357	chan.c	FUNCTION_11	SWITCH_1	IF_5
0x4000818	            0x85f6	                           test esi, esi	       357	chan.c	FUNCTION_11	SWITCH_1	IF_5
0x400081a	            0x74b1	                            je 0x40007cd	       357	chan.c	FUNCTION_11	SWITCH_1	IF_5
0x400081c	          0x4489ea	                           mov edx, r13d	       360	chan.c	FUNCTION_11	SWITCH_1	CALL_6
0x400081f	          0x4c89e7	                            mov rdi, r12	       360	chan.c	FUNCTION_11	SWITCH_1	CALL_6
0x4000822	      0xe879faffff	call sym.cfg80211_get_chans_dfs_required	       360	chan.c	FUNCTION_11	SWITCH_1	CALL_6
0x4000827	            0x85c0	                           test eax, eax	       363	chan.c	FUNCTION_11	SWITCH_1	IF_6
0x4000829	            0x78a4	                            js 0x40007cf	       363	chan.c	FUNCTION_11	SWITCH_1	IF_6
0x400082b	            0x75cf	                           jne 0x40007fc	       365	chan.c	FUNCTION_11	SWITCH_1	ELSE_2	IF_7
0x400082d	            0xeb9e	                           jmp 0x40007cd	       365	chan.c	FUNCTION_11	SWITCH_1	ELSE_2	IF_7
0x400082f	      0xb8eaffffff	                     mov eax, 0xffffffea	       347	chan.c	FUNCTION_11	SWITCH_1	IF_2
0x4000834	            0xeb99	                           jmp 0x40007cf	       347	chan.c	FUNCTION_11	SWITCH_1	IF_2
cfg80211_any_wiphy_oper_chan	WHILE,0:IF,1:DO,0:CALL,1:ELSE,0:functions,1:SWITCH,0:FOR,0	79
0x4000c70	            0x4157	                                push r15	       557	chan.c	FUNCTION_17
0x4000c72	            0x4156	                                push r14	       557	chan.c	FUNCTION_17
0x4000c74	            0x4155	                                push r13	       557	chan.c	FUNCTION_17
0x4000c76	            0x4154	                                push r12	       557	chan.c	FUNCTION_17
0x4000c78	          0x4989f4	                            mov r12, rsi	       557	chan.c	FUNCTION_17
0x4000c7b	              0x55	                                push rbp	       557	chan.c	FUNCTION_17
0x4000c7c	              0x53	                                push rbx	       557	chan.c	FUNCTION_17
0x4000c7d	        0x4883ec08	                              sub rsp, 8	       557	chan.c	FUNCTION_17
0x4000c81	        0x48893c24	                    mov qword [rsp], rdi	       557	chan.c	FUNCTION_17
0x4000c85	      0xe800000000	                          call 0x4000c8a	       560	chan.c	FUNCTION_17	CALL_1
0x4000c8a	            0x85c0	                           test eax, eax	       560	chan.c	FUNCTION_17	CALL_1
0x4000c8c	     0xf84da000000	                            je 0x4000d6c	       560	chan.c	FUNCTION_17	CALL_1
0x4000c92	    0x41f644240808	                  test byte [r12 + 8], 8	       562	chan.c	FUNCTION_17	IF_1
0x4000c98	     0xf84c9000000	                            je 0x4000d67	       562	chan.c	FUNCTION_17	IF_1
0x4000c9e	    0x488b05000000	            mov rax, qword [0x04000ca5] 	       565	chan.c	FUNCTION_17	FUNCTION_1
0x4000ca5	    0x483d00000000	                              cmp rax, 0	       565	chan.c	FUNCTION_17	FUNCTION_1
0x4000cab	        0x4c8d70f8	                      lea r14, [rax - 8]	       565	chan.c	FUNCTION_17	FUNCTION_1
0x4000caf	            0x7519	                           jne 0x4000cca	       565	chan.c	FUNCTION_17	FUNCTION_1
0x4000cb1	      0xe9b1000000	                           jmp 0x4000d67	       565	chan.c	FUNCTION_17	FUNCTION_1
0x4000cb6	        0x498b4608	                mov rax, qword [r14 + 8]	       565	chan.c	FUNCTION_17	FUNCTION_1
0x4000cba	    0x483d00000000	                              cmp rax, 0	       565	chan.c	FUNCTION_17	FUNCTION_1
0x4000cc0	        0x4c8d70f8	                      lea r14, [rax - 8]	       565	chan.c	FUNCTION_17	FUNCTION_1
0x4000cc4	     0xf849d000000	                            je 0x4000d67	       565	chan.c	FUNCTION_17	FUNCTION_1
0x4000cca	        0x488b3c24	                    mov rdi, qword [rsp]	       566	chan.c	FUNCTION_17	FUNCTION_1	IF_1	CALL_1
0x4000cce	    0x498db6e00200	                  lea rsi, [r14 + 0x2e0]	       566	chan.c	FUNCTION_17	FUNCTION_1	IF_1	CALL_1
0x4000cd5	      0xe800000000	                          call 0x4000cda	       566	chan.c	FUNCTION_17	FUNCTION_1	IF_1	CALL_1
0x4000cda	            0x84c0	                             test al, al	       566	chan.c	FUNCTION_17	FUNCTION_1	IF_1	CALL_1
0x4000cdc	            0x74d8	                            je 0x4000cb6	       566	chan.c	FUNCTION_17	FUNCTION_1	IF_1	CALL_1
0x4000cde	    0x498b86f00600	           mov rax, qword [r14 + 0x6f0] 	       538	chan.c	FUNCTION_16	FUNCTION_1
0x4000ce5	    0x4d8daef00600	                  lea r13, [r14 + 0x6f0]	       538	chan.c	FUNCTION_16	FUNCTION_1
0x4000cec	          0x4939c5	                            cmp r13, rax	       538	chan.c	FUNCTION_16	FUNCTION_1
0x4000cef	        0x488d58f0	                   lea rbx, [rax - 0x10]	       538	chan.c	FUNCTION_16	FUNCTION_1
0x4000cf3	            0x7523	                           jne 0x4000d18	       538	chan.c	FUNCTION_16	FUNCTION_1
0x4000cf5	            0xebbf	                           jmp 0x4000cb6	       538	chan.c	FUNCTION_16	FUNCTION_1
0x4000cf7	          0x4c89e6	                            mov rsi, r12	       538	chan.c	FUNCTION_16	FUNCTION_1
0x4000cfa	      0xe881fdffff	    call sym.cfg80211_is_sub_chan.part.5	       538	chan.c	FUNCTION_16	FUNCTION_1
0x4000cff	            0x84c0	                             test al, al	       545	chan.c	FUNCTION_16	FUNCTION_1	IF_2	CALL_4
0x4000d01	            0x754a	                           jne 0x4000d4d	       545	chan.c	FUNCTION_16	FUNCTION_1	IF_2	CALL_4
0x4000d03	          0x4889ef	                            mov rdi, rbp	       201	core.h	FUNCTION_36	CALL_2
0x4000d06	      0xe800000000	                          call 0x4000d0b	       201	core.h	FUNCTION_36	CALL_2
0x4000d0b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       538	chan.c	FUNCTION_16	FUNCTION_1
0x4000d0f	          0x4939c5	                            cmp r13, rax	       538	chan.c	FUNCTION_16	FUNCTION_1
0x4000d12	        0x488d58f0	                   lea rbx, [rax - 0x10]	       538	chan.c	FUNCTION_16	FUNCTION_1
0x4000d16	            0x749e	                            je 0x4000cb6	       538	chan.c	FUNCTION_16	FUNCTION_1
0x4000d18	        0x488d6b48	                   lea rbp, [rbx + 0x48]	       193	core.h	FUNCTION_35	CALL_1
0x4000d1c	          0x4889ef	                            mov rdi, rbp	       193	core.h	FUNCTION_35	CALL_1
0x4000d1f	      0xe800000000	                          call 0x4000d24	       193	core.h	FUNCTION_35	CALL_1
0x4000d24	          0x4889df	                            mov rdi, rbx	       540	chan.c	FUNCTION_16	FUNCTION_1	IF_1	CALL_2
0x4000d27	      0xe800000000	                          call 0x4000d2c	       540	chan.c	FUNCTION_16	FUNCTION_1	IF_1	CALL_2
0x4000d2c	            0x84c0	                             test al, al	       540	chan.c	FUNCTION_16	FUNCTION_1	IF_1	CALL_2
0x4000d2e	          0x4189c7	                           mov r15d, eax	       540	chan.c	FUNCTION_16	FUNCTION_1	IF_1	CALL_2
0x4000d31	            0x74d0	                            je 0x4000d03	       540	chan.c	FUNCTION_16	FUNCTION_1	IF_1	CALL_2
0x4000d33	    0x488b83100100	           mov rax, qword [rbx + 0x110] 	       470	chan.c	FUNCTION_14	IF_1
0x4000d3a	    0x410fb74c2404	               movzx ecx, word [r12 + 4]	       470	chan.c	FUNCTION_14	IF_1
0x4000d40	    0x488dbb100100	                  lea rdi, [rbx + 0x110]	       545	chan.c	FUNCTION_16	FUNCTION_1	IF_2	CALL_4
0x4000d47	        0x66394804	                  cmp word [rax + 4], cx	       470	chan.c	FUNCTION_14	IF_1
0x4000d4b	            0x75aa	                           jne 0x4000cf7	       470	chan.c	FUNCTION_14	IF_1
0x4000d4d	          0x4889ef	                            mov rdi, rbp	       201	core.h	FUNCTION_36	CALL_2
0x4000d50	      0xe800000000	                          call 0x4000d55	       201	core.h	FUNCTION_36	CALL_2
0x4000d55	        0x4883c408	                              add rsp, 8	       574	chan.c	FUNCTION_17
0x4000d59	          0x4489f8	                           mov eax, r15d	       574	chan.c	FUNCTION_17
0x4000d5c	              0x5b	                                 pop rbx	       574	chan.c	FUNCTION_17
0x4000d5d	              0x5d	                                 pop rbp	       574	chan.c	FUNCTION_17
0x4000d5e	            0x415c	                                 pop r12	       574	chan.c	FUNCTION_17
0x4000d60	            0x415d	                                 pop r13	       574	chan.c	FUNCTION_17
0x4000d62	            0x415e	                                 pop r14	       574	chan.c	FUNCTION_17
0x4000d64	            0x415f	                                 pop r15	       574	chan.c	FUNCTION_17
0x4000d66	              0xc3	                                     ret	       574	chan.c	FUNCTION_17
0x4000d67	          0x4531ff	                          xor r15d, r15d	       563	chan.c	FUNCTION_17	IF_1
0x4000d6a	            0xebe9	                           jmp 0x4000d55	       563	chan.c	FUNCTION_17	IF_1
0x4000d6c	    0x803d00000000	                cmp byte [0x04000d73], 0	       560	chan.c	FUNCTION_17	CALL_1
0x4000d73	     0xf8519ffffff	                           jne 0x4000c92	       560	chan.c	FUNCTION_17	CALL_1
0x4000d79	      0xba30020000	                          mov edx, 0x230	       560	chan.c	FUNCTION_17	CALL_1
0x4000d7e	    0x48c7c6000000	                              mov rsi, 0	       560	chan.c	FUNCTION_17	CALL_1
0x4000d85	    0x48c7c7000000	                              mov rdi, 0	       560	chan.c	FUNCTION_17	CALL_1
0x4000d8c	    0xc60500000000	                mov byte [0x04000d93], 1	       560	chan.c	FUNCTION_17	CALL_1
0x4000d93	      0xe800000000	                          call 0x4000d98	       560	chan.c	FUNCTION_17	CALL_1
0x4000d98	             0xf0b	                                     ud2	       560	chan.c	FUNCTION_17	CALL_1
0x4000d9a	      0xe9f3feffff	                           jmp 0x4000c92	       560	chan.c	FUNCTION_17	CALL_1
cfg80211_chandef_usable	WHILE,0:IF,14:DO,0:CALL,5:ELSE,0:functions,0:SWITCH,1:FOR,0	114
0x4000450	            0x4155	                                push r13	       726	chan.c	FUNCTION_23
0x4000452	            0x4154	                                push r12	       726	chan.c	FUNCTION_23
0x4000454	          0x4989fc	                            mov r12, rdi	       726	chan.c	FUNCTION_23
0x4000457	              0x55	                                push rbp	       726	chan.c	FUNCTION_23
0x4000458	              0x53	                                push rbx	       726	chan.c	FUNCTION_23
0x4000459	          0x4889f7	                            mov rdi, rsi	       731	chan.c	FUNCTION_23	IF_1	CALL_2
0x400045c	          0x4889f3	                            mov rbx, rsi	       726	chan.c	FUNCTION_23
0x400045f	            0x89d5	                            mov ebp, edx	       726	chan.c	FUNCTION_23
0x4000461	      0xe800000000	                          call 0x4000466	       731	chan.c	FUNCTION_23	IF_1	CALL_2
0x4000466	            0x84c0	                             test al, al	       731	chan.c	FUNCTION_23	IF_1	CALL_2
0x4000468	     0xf840d010000	                            je 0x400057b	       731	chan.c	FUNCTION_23	IF_1	CALL_2
0x400046e	          0x488b03	                    mov rax, qword [rbx]	       734	chan.c	FUNCTION_23
0x4000471	        0x837b0807	                  cmp dword [rbx + 8], 7	       739	chan.c	FUNCTION_23	SWITCH_1
0x4000475	            0x8b10	                    mov edx, dword [rax]	       734	chan.c	FUNCTION_23
0x4000477	    0x498b8cd4f800	    mov rcx, qword [r12 + rdx*8 + 0xf8] 	       734	chan.c	FUNCTION_23
0x400047f	     0xf87ff000000	                            ja 0x4000584	       739	chan.c	FUNCTION_23	SWITCH_1
0x4000485	          0x8b5308	                mov edx, dword [rbx + 8]	       739	chan.c	FUNCTION_23	SWITCH_1
0x4000488	    0x488b14d50000	                  mov rdx, qword [rdx*8]	       739	chan.c	FUNCTION_23	SWITCH_1
0x4000490	      0xe900000000	                           jmp 0x4000495	       739	chan.c	FUNCTION_23	SWITCH_1
0x4000495	        0x80791e00	                cmp byte [rcx + 0x1e], 0	       748	chan.c	FUNCTION_23	SWITCH_1	IF_2
0x4000499	     0xf848d000000	                            je 0x400052c	       748	chan.c	FUNCTION_23	SWITCH_1	IF_2
0x400049f	          0x4189e8	                            mov r8d, ebp	       751	chan.c	FUNCTION_23	SWITCH_1
0x40004a2	          0x8b730c	              mov esi, dword [rbx + 0xc]	       751	chan.c	FUNCTION_23	SWITCH_1
0x40004a5	    0x41bd14000000	                          mov r13d, 0x14	       752	chan.c	FUNCTION_23	SWITCH_1
0x40004ab	    0x4181c8000800	                           or r8d, 0x800	       751	chan.c	FUNCTION_23	SWITCH_1
0x40004b2	          0x4489c5	                            mov ebp, r8d	       751	chan.c	FUNCTION_23	SWITCH_1
0x40004b5	            0x89e9	                            mov ecx, ebp	       812	chan.c	FUNCTION_23	IF_13	CALL_4
0x40004b7	          0x4489ea	                           mov edx, r13d	       812	chan.c	FUNCTION_23	IF_13	CALL_4
0x40004ba	          0x4c89e7	                            mov rdi, r12	       812	chan.c	FUNCTION_23	IF_13	CALL_4
0x40004bd	      0xe82effffff	    call sym.cfg80211_secondary_chans_ok	       812	chan.c	FUNCTION_23	IF_13	CALL_4
0x40004c2	            0x84c0	                             test al, al	       812	chan.c	FUNCTION_23	IF_13	CALL_4
0x40004c4	            0x7466	                            je 0x400052c	       812	chan.c	FUNCTION_23	IF_13	CALL_4
0x40004c6	          0x8b7310	            mov esi, dword [rbx + 0x10] 	       816	chan.c	FUNCTION_23	IF_14
0x40004c9	            0x85f6	                           test esi, esi	       816	chan.c	FUNCTION_23	IF_14
0x40004cb	     0xf8597000000	                           jne 0x4000568	       816	chan.c	FUNCTION_23	IF_14
0x40004d1	              0x5b	                                 pop rbx	       820	chan.c	FUNCTION_23
0x40004d2	              0x5d	                                 pop rbp	       820	chan.c	FUNCTION_23
0x40004d3	            0x415c	                                 pop r12	       820	chan.c	FUNCTION_23
0x40004d5	            0x415d	                                 pop r13	       820	chan.c	FUNCTION_23
0x40004d7	              0xc3	                                     ret	       820	chan.c	FUNCTION_23
0x40004d8	          0x8b4138	            mov eax, dword [rcx + 0x38] 	       770	chan.c	FUNCTION_23	SWITCH_1	IF_7
0x40004db	          0x83e00c	                            and eax, 0xc	       770	chan.c	FUNCTION_23	SWITCH_1	IF_7
0x40004de	          0x83f808	                              cmp eax, 8	       770	chan.c	FUNCTION_23	SWITCH_1	IF_7
0x40004e1	            0x7549	                           jne 0x400052c	       770	chan.c	FUNCTION_23	SWITCH_1	IF_7
0x40004e3	        0x80793400	                cmp byte [rcx + 0x34], 0	       773	chan.c	FUNCTION_23	SWITCH_1	IF_8
0x40004e7	            0x7443	                            je 0x400052c	       773	chan.c	FUNCTION_23	SWITCH_1	IF_8
0x40004e9	          0x8b730c	              mov esi, dword [rbx + 0xc]	       773	chan.c	FUNCTION_23	SWITCH_1	IF_8
0x40004ec	        0x4080cd80	                            or bpl, 0x80	       775	chan.c	FUNCTION_23	SWITCH_1
0x40004f0	    0x41bd50000000	                          mov r13d, 0x50	       776	chan.c	FUNCTION_23	SWITCH_1
0x40004f6	          0x4189e8	                            mov r8d, ebp	       805	chan.c	FUNCTION_23	IF_11
0x40004f9	        0x4183c840	                            or r8d, 0x40	       805	chan.c	FUNCTION_23	IF_11
0x40004fd	          0x4489c5	                            mov ebp, r8d	       805	chan.c	FUNCTION_23	IF_11
0x4000500	            0xebb3	                           jmp 0x40004b5	       805	chan.c	FUNCTION_23	IF_11
0x4000502	    0x41bd05000000	                             mov r13d, 5	       741	chan.c	FUNCTION_23	SWITCH_1
0x4000508	          0x4189e8	                            mov r8d, ebp	       809	chan.c	FUNCTION_23	IF_12
0x400050b	          0x8b730c	              mov esi, dword [rbx + 0xc]	       809	chan.c	FUNCTION_23	IF_12
0x400050e	        0x4183c840	                            or r8d, 0x40	       809	chan.c	FUNCTION_23	IF_12
0x4000512	          0x4489c5	                            mov ebp, r8d	       809	chan.c	FUNCTION_23	IF_12
0x4000515	            0xeb9e	                           jmp 0x40004b5	       809	chan.c	FUNCTION_23	IF_12
0x4000517	        0x80791e00	                cmp byte [rcx + 0x1e], 0	       756	chan.c	FUNCTION_23	SWITCH_1	IF_3
0x400051b	            0x740f	                            je 0x400052c	       756	chan.c	FUNCTION_23	SWITCH_1	IF_3
0x400051d	         0xfb7511c	           movzx edx, word [rcx + 0x1c] 	       758	chan.c	FUNCTION_23	SWITCH_1	IF_4
0x4000521	      0x6681e20240	                          and dx, 0x4002	       758	chan.c	FUNCTION_23	SWITCH_1	IF_4
0x4000526	        0x6683fa02	                               cmp dx, 2	       758	chan.c	FUNCTION_23	SWITCH_1	IF_4
0x400052a	            0x745e	                            je 0x400058a	       758	chan.c	FUNCTION_23	SWITCH_1	IF_4
0x400052c	            0x31c0	                            xor eax, eax	       790	chan.c	FUNCTION_23	SWITCH_1
0x400052e	              0x5b	                                 pop rbx	       820	chan.c	FUNCTION_23
0x400052f	              0x5d	                                 pop rbp	       820	chan.c	FUNCTION_23
0x4000530	            0x415c	                                 pop r12	       820	chan.c	FUNCTION_23
0x4000532	            0x415d	                                 pop r13	       820	chan.c	FUNCTION_23
0x4000534	              0xc3	                                     ret	       820	chan.c	FUNCTION_23
0x4000535	    0x81cd00100000	                          or ebp, 0x1000	       744	chan.c	FUNCTION_23	SWITCH_1
0x400053b	    0x41bd0a000000	                           mov r13d, 0xa	       745	chan.c	FUNCTION_23	SWITCH_1
0x4000541	            0xebc5	                           jmp 0x4000508	       745	chan.c	FUNCTION_23	SWITCH_1
0x4000543	        0x80793400	                cmp byte [rcx + 0x34], 0	       779	chan.c	FUNCTION_23	SWITCH_1	IF_9
0x4000547	            0x74e3	                            je 0x400052c	       779	chan.c	FUNCTION_23	SWITCH_1	IF_9
0x4000549	          0x8b4138	            mov eax, dword [rcx + 0x38] 	       782	chan.c	FUNCTION_23	SWITCH_1	IF_10
0x400054c	          0x83e00c	                            and eax, 0xc	       782	chan.c	FUNCTION_23	SWITCH_1	IF_10
0x400054f	          0x83e804	                              sub eax, 4	       782	chan.c	FUNCTION_23	SWITCH_1	IF_10
0x4000552	          0x83e0f8	                     and eax, 0xfffffff8	       782	chan.c	FUNCTION_23	SWITCH_1	IF_10
0x4000555	            0x75d5	                           jne 0x400052c	       782	chan.c	FUNCTION_23	SWITCH_1	IF_10
0x4000557	    0x81cd00010000	                           or ebp, 0x100	       785	chan.c	FUNCTION_23	SWITCH_1
0x400055d	          0x8b730c	              mov esi, dword [rbx + 0xc]	       785	chan.c	FUNCTION_23	SWITCH_1
0x4000560	    0x41bda0000000	                          mov r13d, 0xa0	       786	chan.c	FUNCTION_23	SWITCH_1
0x4000566	            0xeb8e	                           jmp 0x40004f6	       787	chan.c	FUNCTION_23	SWITCH_1
0x4000568	              0x5b	                                 pop rbx	       820	chan.c	FUNCTION_23
0x4000569	            0x89e9	                            mov ecx, ebp	       818	chan.c	FUNCTION_23	CALL_5
0x400056b	          0x4489ea	                           mov edx, r13d	       818	chan.c	FUNCTION_23	CALL_5
0x400056e	          0x4c89e7	                            mov rdi, r12	       818	chan.c	FUNCTION_23	CALL_5
0x4000571	              0x5d	                                 pop rbp	       820	chan.c	FUNCTION_23
0x4000572	            0x415c	                                 pop r12	       820	chan.c	FUNCTION_23
0x4000574	            0x415d	                                 pop r13	       820	chan.c	FUNCTION_23
0x4000576	      0xe975feffff	     jmp sym.cfg80211_secondary_chans_ok	       818	chan.c	FUNCTION_23	CALL_5
0x400057b	             0xf0b	                                     ud2	       818	chan.c	FUNCTION_23	CALL_5
0x400057d	              0x5b	                                 pop rbx	       820	chan.c	FUNCTION_23
0x400057e	              0x5d	                                 pop rbp	       820	chan.c	FUNCTION_23
0x400057f	            0x415c	                                 pop r12	       820	chan.c	FUNCTION_23
0x4000581	            0x415d	                                 pop r13	       820	chan.c	FUNCTION_23
0x4000583	              0xc3	                                     ret	       820	chan.c	FUNCTION_23
0x4000584	             0xf0b	                                     ud2	       820	chan.c	FUNCTION_23
0x4000586	            0x31c0	                            xor eax, eax	       790	chan.c	FUNCTION_23	SWITCH_1
0x4000588	            0xeba4	                           jmp 0x400052e	       790	chan.c	FUNCTION_23	SWITCH_1
0x400058a	         0xfb75004	               movzx edx, word [rax + 4]	       737	chan.c	FUNCTION_23
0x400058e	          0x8b730c	              mov esi, dword [rbx + 0xc]	       761	chan.c	FUNCTION_23	SWITCH_1	IF_5
0x4000591	            0x39f2	                            cmp edx, esi	       761	chan.c	FUNCTION_23	SWITCH_1	IF_5
0x4000593	            0x7606	                           jbe 0x400059b	       761	chan.c	FUNCTION_23	SWITCH_1	IF_5
0x4000595	        0xf6400820	               test byte [rax + 8], 0x20	       761	chan.c	FUNCTION_23	SWITCH_1	IF_5
0x4000599	            0x7591	                           jne 0x400052c	       761	chan.c	FUNCTION_23	SWITCH_1	IF_5
0x400059b	            0x39f2	                            cmp edx, esi	       764	chan.c	FUNCTION_23	SWITCH_1	IF_6
0x400059d	            0x7306	                           jae 0x40005a5	       764	chan.c	FUNCTION_23	SWITCH_1	IF_6
0x400059f	        0xf6400810	               test byte [rax + 8], 0x10	       764	chan.c	FUNCTION_23	SWITCH_1	IF_6
0x40005a3	            0x7587	                           jne 0x400052c	       764	chan.c	FUNCTION_23	SWITCH_1	IF_6
0x40005a5	    0x41bd28000000	                          mov r13d, 0x28	       755	chan.c	FUNCTION_23	SWITCH_1
0x40005ab	      0xe946ffffff	                           jmp 0x40004f6	       755	chan.c	FUNCTION_23	SWITCH_1
cfg80211_get_chans_dfs_usable	WHILE,0:IF,5:DO,0:CALL,3:ELSE,0:functions,0:SWITCH,0:FOR,1	49
0x4000300	          0x83fa14	                           cmp edx, 0x14	       287	chan.c	FUNCTION_8	IF_1
0x4000303	            0x4155	                                push r13	       390	chan.c	FUNCTION_12
0x4000305	            0x4154	                                push r12	       390	chan.c	FUNCTION_12
0x4000307	          0x4989fc	                            mov r12, rdi	       390	chan.c	FUNCTION_12
0x400030a	              0x55	                                push rbp	       390	chan.c	FUNCTION_12
0x400030b	              0x53	                                push rbx	       390	chan.c	FUNCTION_12
0x400030c	            0x89f3	                            mov ebx, esi	       390	chan.c	FUNCTION_12
0x400030e	            0x7650	                           jbe 0x4000360	       287	chan.c	FUNCTION_8	IF_1
0x4000310	            0xd1ea	                              shr edx, 1	       290	chan.c	FUNCTION_8	ELSE_1
0x4000312	          0x8d460a	                    lea eax, [rsi + 0xa]	       290	chan.c	FUNCTION_8	ELSE_1
0x4000315	      0x448d6c32f6	             lea r13d, [rdx + rsi - 0xa]	       303	chan.c	FUNCTION_9
0x400031a	            0x29d0	                            sub eax, edx	       290	chan.c	FUNCTION_8	ELSE_1
0x400031c	          0x4139c5	                           cmp r13d, eax	       404	chan.c	FUNCTION_12	FOR_1
0x400031f	            0x724d	                            jb 0x400036e	       404	chan.c	FUNCTION_12	FOR_1
0x4000321	            0x89c3	                            mov ebx, eax	       404	chan.c	FUNCTION_12	FOR_1
0x4000323	            0x31ed	                            xor ebp, ebp	       301	chan.c	ELSE_1	FUNCTION_9	IF_1
0x4000325	            0xeb1e	                           jmp 0x4000345	       301	chan.c	ELSE_1	FUNCTION_9	IF_1
0x4000327	          0x8b5008	                mov edx, dword [rax + 8]	       409	chan.c	FUNCTION_12	FOR_1	IF_2
0x400032a	          0xf6c201	                              test dl, 1	       409	chan.c	FUNCTION_12	FOR_1	IF_2
0x400032d	            0x7525	                           jne 0x4000354	       409	chan.c	FUNCTION_12	FOR_1	IF_2
0x400032f	          0x83e208	                              and edx, 8	       412	chan.c	FUNCTION_12	FOR_1	IF_3
0x4000332	            0x7409	                            je 0x400033d	       412	chan.c	FUNCTION_12	FOR_1	IF_3
0x4000334	        0x83782801	               cmp dword [rax + 0x28], 1	       413	chan.c	FUNCTION_12	FOR_1	IF_3	IF_4
0x4000338	            0x741a	                            je 0x4000354	       413	chan.c	FUNCTION_12	FOR_1	IF_3	IF_4
0x400033a	          0x83d500	                              adc ebp, 0	       417	chan.c	FUNCTION_12	FOR_1	IF_3	IF_5
0x400033d	          0x83c314	                           add ebx, 0x14	       404	chan.c	FUNCTION_12	FOR_1
0x4000340	          0x4439eb	                           cmp ebx, r13d	       404	chan.c	FUNCTION_12	FOR_1
0x4000343	            0x7720	                            ja 0x4000365	       404	chan.c	FUNCTION_12	FOR_1
0x4000345	            0x89de	                            mov esi, ebx	       405	chan.c	FUNCTION_12	FOR_1	CALL_3
0x4000347	          0x4c89e7	                            mov rdi, r12	       405	chan.c	FUNCTION_12	FOR_1	CALL_3
0x400034a	      0xe800000000	                          call 0x400034f	       405	chan.c	FUNCTION_12	FOR_1	CALL_3
0x400034f	          0x4885c0	                           test rax, rax	       406	chan.c	FUNCTION_12	FOR_1	IF_1
0x4000352	            0x75d3	                           jne 0x4000327	       406	chan.c	FUNCTION_12	FOR_1	IF_1
0x4000354	      0xb8eaffffff	                     mov eax, 0xffffffea	       407	chan.c	FUNCTION_12	FOR_1	IF_1
0x4000359	              0x5b	                                 pop rbx	       422	chan.c	FUNCTION_12
0x400035a	              0x5d	                                 pop rbp	       422	chan.c	FUNCTION_12
0x400035b	            0x415c	                                 pop r12	       422	chan.c	FUNCTION_12
0x400035d	            0x415d	                                 pop r13	       422	chan.c	FUNCTION_12
0x400035f	              0xc3	                                     ret	       422	chan.c	FUNCTION_12
0x4000360	          0x4189f5	                           mov r13d, esi	       301	chan.c	ELSE_1	FUNCTION_9	IF_1
0x4000363	            0xebbe	                           jmp 0x4000323	       301	chan.c	ELSE_1	FUNCTION_9	IF_1
0x4000365	              0x5b	                                 pop rbx	       422	chan.c	FUNCTION_12
0x4000366	            0x89e8	                            mov eax, ebp	       422	chan.c	FUNCTION_12
0x4000368	              0x5d	                                 pop rbp	       422	chan.c	FUNCTION_12
0x4000369	            0x415c	                                 pop r12	       422	chan.c	FUNCTION_12
0x400036b	            0x415d	                                 pop r13	       422	chan.c	FUNCTION_12
0x400036d	              0xc3	                                     ret	       422	chan.c	FUNCTION_12
0x400036e	            0x31c0	                            xor eax, eax	       393	chan.c	FUNCTION_12
0x4000370	            0xebe7	                           jmp 0x4000359	       393	chan.c	FUNCTION_12
cfg80211_reg_can_beacon_relax	WHILE,0:IF,0:DO,0:CALL,3:ELSE,0:functions,0:SWITCH,0:FOR,0	41
0x40009e0	            0x4154	                                push r12	       960	chan.c	FUNCTION_27
0x40009e2	              0x55	                                push rbp	       960	chan.c	FUNCTION_27
0x40009e3	          0x4189d4	                           mov r12d, edx	       960	chan.c	FUNCTION_27
0x40009e6	              0x53	                                push rbx	       960	chan.c	FUNCTION_27
0x40009e7	          0x4889f5	                            mov rbp, rsi	       960	chan.c	FUNCTION_27
0x40009ea	          0x4889fb	                            mov rbx, rdi	       960	chan.c	FUNCTION_27
0x40009ed	      0xe800000000	                          call 0x40009f2	       963	chan.c	FUNCTION_27	CALL_1
0x40009f2	            0x85c0	                           test eax, eax	       963	chan.c	FUNCTION_27	CALL_1
0x40009f4	            0x7425	                            je 0x4000a1b	       963	chan.c	FUNCTION_27	CALL_1
0x40009f6	          0x4885db	                           test rbx, rbx	       112	core.h	FUNCTION_30	CALL_1
0x40009f9	            0x744c	                            je 0x4000a47	       112	core.h	FUNCTION_30	CALL_1
0x40009fb	      0xe800000000	                          call 0x4000a00	       839	chan.c	FUNCTION_24	CALL_2
0x4000a00	            0x85c0	                           test eax, eax	       839	chan.c	FUNCTION_24	CALL_2
0x4000a02	            0x7445	                            je 0x4000a49	       839	chan.c	FUNCTION_24	CALL_2
0x4000a04	          0x4489e2	                           mov edx, r12d	       974	chan.c	FUNCTION_27	CALL_3
0x4000a07	          0x4889ee	                            mov rsi, rbp	       974	chan.c	FUNCTION_27	CALL_3
0x4000a0a	          0x4889df	                            mov rdi, rbx	       974	chan.c	FUNCTION_27	CALL_3
0x4000a0d	              0x5b	                                 pop rbx	       975	chan.c	FUNCTION_27
0x4000a0e	              0x5d	                                 pop rbp	       975	chan.c	FUNCTION_27
0x4000a0f	            0x415c	                                 pop r12	       975	chan.c	FUNCTION_27
0x4000a11	      0xb901000000	                              mov ecx, 1	       974	chan.c	FUNCTION_27	CALL_3
0x4000a16	      0xe925feffff	        jmp sym._cfg80211_reg_can_beacon	       974	chan.c	FUNCTION_27	CALL_3
0x4000a1b	    0x803d00000000	                cmp byte [0x04000a22], 0	       963	chan.c	FUNCTION_27	CALL_1
0x4000a22	            0x75d2	                           jne 0x40009f6	       963	chan.c	FUNCTION_27	CALL_1
0x4000a24	      0xbac3030000	                          mov edx, 0x3c3	       963	chan.c	FUNCTION_27	CALL_1
0x4000a29	    0x48c7c6000000	                              mov rsi, 0	       963	chan.c	FUNCTION_27	CALL_1
0x4000a30	    0x48c7c7000000	                              mov rdi, 0	       963	chan.c	FUNCTION_27	CALL_1
0x4000a37	    0xc60500000000	                mov byte [0x04000a3e], 1	       963	chan.c	FUNCTION_27	CALL_1
0x4000a3e	      0xe800000000	                          call 0x4000a43	       963	chan.c	FUNCTION_27	CALL_1
0x4000a43	             0xf0b	                                     ud2	       963	chan.c	FUNCTION_27	CALL_1
0x4000a45	            0xebaf	                           jmp 0x40009f6	       963	chan.c	FUNCTION_27	CALL_1
0x4000a47	             0xf0b	                                     ud2	       963	chan.c	FUNCTION_27	CALL_1
0x4000a49	    0x803d00000000	                cmp byte [0x04000a50], 0	       839	chan.c	FUNCTION_24	CALL_2
0x4000a50	            0x75b2	                           jne 0x4000a04	       839	chan.c	FUNCTION_24	CALL_2
0x4000a52	      0xba47030000	                          mov edx, 0x347	       839	chan.c	FUNCTION_24	CALL_2
0x4000a57	    0x48c7c6000000	                              mov rsi, 0	       839	chan.c	FUNCTION_24	CALL_2
0x4000a5e	    0x48c7c7000000	                              mov rdi, 0	       839	chan.c	FUNCTION_24	CALL_2
0x4000a65	    0xc60500000000	                mov byte [0x04000a6c], 1	       839	chan.c	FUNCTION_24	CALL_2
0x4000a6c	      0xe800000000	                          call 0x4000a71	       839	chan.c	FUNCTION_24	CALL_2
0x4000a71	             0xf0b	                                     ud2	       839	chan.c	FUNCTION_24	CALL_2
0x4000a73	            0xeb8f	                           jmp 0x4000a04	       839	chan.c	FUNCTION_24	CALL_2
cfg80211_get_chans_dfs_required	WHILE,0:IF,2:DO,0:CALL,3:ELSE,0:functions,0:SWITCH,0:FOR,1	40
0x40002a0	          0x83fa14	                           cmp edx, 0x14	       287	chan.c	FUNCTION_8	IF_1
0x40002a3	            0x4154	                                push r12	       311	chan.c	ELSE_1	FUNCTION_10
0x40002a5	          0x4989fc	                            mov r12, rdi	       311	chan.c	ELSE_1	FUNCTION_10
0x40002a8	              0x55	                                push rbp	       311	chan.c	ELSE_1	FUNCTION_10
0x40002a9	            0x89f5	                            mov ebp, esi	       311	chan.c	ELSE_1	FUNCTION_10
0x40002ab	              0x53	                                push rbx	       311	chan.c	ELSE_1	FUNCTION_10
0x40002ac	            0x763c	                           jbe 0x40002ea	       287	chan.c	FUNCTION_8	IF_1
0x40002ae	            0xd1ea	                              shr edx, 1	       290	chan.c	FUNCTION_8	ELSE_1
0x40002b0	          0x8d5e0a	                    lea ebx, [rsi + 0xa]	       290	chan.c	FUNCTION_8	ELSE_1
0x40002b3	        0x8d6c32f6	              lea ebp, [rdx + rsi - 0xa]	       303	chan.c	FUNCTION_9
0x40002b7	            0x29d3	                            sub ebx, edx	       290	chan.c	FUNCTION_8	ELSE_1
0x40002b9	            0x39dd	                            cmp ebp, ebx	       318	chan.c	ELSE_1	FUNCTION_10	FOR_1
0x40002bb	            0x7314	                           jae 0x40002d1	       318	chan.c	ELSE_1	FUNCTION_10	FOR_1
0x40002bd	              0x5b	                                 pop rbx	       327	chan.c	ELSE_1	FUNCTION_10
0x40002be	            0x31c0	                            xor eax, eax	       326	chan.c	ELSE_1	FUNCTION_10
0x40002c0	              0x5d	                                 pop rbp	       327	chan.c	ELSE_1	FUNCTION_10
0x40002c1	            0x415c	                                 pop r12	       327	chan.c	ELSE_1	FUNCTION_10
0x40002c3	              0xc3	                                     ret	       327	chan.c	ELSE_1	FUNCTION_10
0x40002c4	        0xf6400808	                  test byte [rax + 8], 8	       323	chan.c	ELSE_1	FUNCTION_10	FOR_1	IF_2
0x40002c8	            0x7524	                           jne 0x40002ee	       323	chan.c	ELSE_1	FUNCTION_10	FOR_1	IF_2
0x40002ca	          0x83c314	                           add ebx, 0x14	       318	chan.c	ELSE_1	FUNCTION_10	FOR_1
0x40002cd	            0x39eb	                            cmp ebx, ebp	       318	chan.c	ELSE_1	FUNCTION_10	FOR_1
0x40002cf	            0x77ec	                            ja 0x40002bd	       318	chan.c	ELSE_1	FUNCTION_10	FOR_1
0x40002d1	            0x89de	                            mov esi, ebx	       319	chan.c	ELSE_1	FUNCTION_10	FOR_1	CALL_3
0x40002d3	          0x4c89e7	                            mov rdi, r12	       319	chan.c	ELSE_1	FUNCTION_10	FOR_1	CALL_3
0x40002d6	      0xe800000000	                          call 0x40002db	       319	chan.c	ELSE_1	FUNCTION_10	FOR_1	CALL_3
0x40002db	          0x4885c0	                           test rax, rax	       320	chan.c	ELSE_1	FUNCTION_10	FOR_1	IF_1
0x40002de	            0x75e4	                           jne 0x40002c4	       320	chan.c	ELSE_1	FUNCTION_10	FOR_1	IF_1
0x40002e0	              0x5b	                                 pop rbx	       327	chan.c	ELSE_1	FUNCTION_10
0x40002e1	      0xb8eaffffff	                     mov eax, 0xffffffea	       321	chan.c	ELSE_1	FUNCTION_10	FOR_1	IF_1
0x40002e6	              0x5d	                                 pop rbp	       327	chan.c	ELSE_1	FUNCTION_10
0x40002e7	            0x415c	                                 pop r12	       327	chan.c	ELSE_1	FUNCTION_10
0x40002e9	              0xc3	                                     ret	       327	chan.c	ELSE_1	FUNCTION_10
0x40002ea	            0x89f3	                            mov ebx, esi	       288	chan.c	FUNCTION_8	IF_1
0x40002ec	            0xebe3	                           jmp 0x40002d1	       288	chan.c	FUNCTION_8	IF_1
0x40002ee	              0x5b	                                 pop rbx	       327	chan.c	ELSE_1	FUNCTION_10
0x40002ef	      0xb801000000	                              mov eax, 1	       324	chan.c	ELSE_1	FUNCTION_10	FOR_1	IF_2
0x40002f4	              0x5d	                                 pop rbp	       327	chan.c	ELSE_1	FUNCTION_10
0x40002f5	            0x415c	                                 pop r12	       327	chan.c	ELSE_1	FUNCTION_10
0x40002f7	              0xc3	                                     ret	       327	chan.c	ELSE_1	FUNCTION_10
cfg80211_chandef_dfs_cac_time	WHILE,0:IF,3:DO,0:CALL,6:ELSE,0:functions,0:SWITCH,0:FOR,0	49
0x4000da0	            0x4155	                                push r13	       679	chan.c	FUNCTION_21
0x4000da2	            0x4154	                                push r12	       679	chan.c	FUNCTION_21
0x4000da4	          0x4989fd	                            mov r13, rdi	       679	chan.c	FUNCTION_21
0x4000da7	              0x55	                                push rbp	       679	chan.c	FUNCTION_21
0x4000da8	              0x53	                                push rbx	       679	chan.c	FUNCTION_21
0x4000da9	          0x4889f7	                            mov rdi, rsi	       683	chan.c	FUNCTION_21	IF_1	CALL_2
0x4000dac	          0x4889f5	                            mov rbp, rsi	       679	chan.c	FUNCTION_21
0x4000daf	      0xe800000000	                          call 0x4000db4	       683	chan.c	FUNCTION_21	IF_1	CALL_2
0x4000db4	            0x84c0	                             test al, al	       683	chan.c	FUNCTION_21	IF_1	CALL_2
0x4000db6	            0x7449	                            je 0x4000e01	       683	chan.c	FUNCTION_21	IF_1	CALL_2
0x4000db8	          0x8b7d08	                mov edi, dword [rbp + 8]	       686	chan.c	FUNCTION_21	CALL_3
0x4000dbb	            0x31db	                            xor ebx, ebx	       688	chan.c	FUNCTION_21	IF_2
0x4000dbd	      0xe88ef9ffff	call sym.cfg80211_chandef_get_width.isra.1	       686	chan.c	FUNCTION_21	CALL_3
0x4000dc2	            0x85c0	                           test eax, eax	       687	chan.c	FUNCTION_21	IF_2
0x4000dc4	          0x4189c4	                           mov r12d, eax	       686	chan.c	FUNCTION_21	CALL_3
0x4000dc7	            0x7816	                            js 0x4000ddf	       687	chan.c	FUNCTION_21	IF_2
0x4000dc9	          0x8b750c	              mov esi, dword [rbp + 0xc]	       690	chan.c	FUNCTION_21	CALL_4
0x4000dcc	            0x89c2	                            mov edx, eax	       690	chan.c	FUNCTION_21	CALL_4
0x4000dce	          0x4c89ef	                            mov rdi, r13	       690	chan.c	FUNCTION_21	CALL_4
0x4000dd1	      0xe8aaf5ffff	call sym.cfg80211_get_chans_dfs_cac_time	       690	chan.c	FUNCTION_21	CALL_4
0x4000dd6	          0x8b7510	            mov esi, dword [rbp + 0x10] 	       694	chan.c	FUNCTION_21	IF_3
0x4000dd9	            0x89c3	                            mov ebx, eax	       695	chan.c	FUNCTION_21	IF_3
0x4000ddb	            0x85f6	                           test esi, esi	       694	chan.c	FUNCTION_21	IF_3
0x4000ddd	            0x7509	                           jne 0x4000de8	       694	chan.c	FUNCTION_21	IF_3
0x4000ddf	            0x89d8	                            mov eax, ebx	       702	chan.c	FUNCTION_21
0x4000de1	              0x5b	                                 pop rbx	       702	chan.c	FUNCTION_21
0x4000de2	              0x5d	                                 pop rbp	       702	chan.c	FUNCTION_21
0x4000de3	            0x415c	                                 pop r12	       702	chan.c	FUNCTION_21
0x4000de5	            0x415d	                                 pop r13	       702	chan.c	FUNCTION_21
0x4000de7	              0xc3	                                     ret	       702	chan.c	FUNCTION_21
0x4000de8	          0x4489e2	                           mov edx, r12d	       697	chan.c	FUNCTION_21	CALL_5
0x4000deb	          0x4c89ef	                            mov rdi, r13	       697	chan.c	FUNCTION_21	CALL_5
0x4000dee	      0xe88df5ffff	call sym.cfg80211_get_chans_dfs_cac_time	       697	chan.c	FUNCTION_21	CALL_5
0x4000df3	            0x39c3	                            cmp ebx, eax	       701	chan.c	FUNCTION_21	CALL_6
0x4000df5	           0xf42d8	                          cmovb ebx, eax	       701	chan.c	FUNCTION_21	CALL_6
0x4000df8	            0x89d8	                            mov eax, ebx	       702	chan.c	FUNCTION_21
0x4000dfa	              0x5b	                                 pop rbx	       702	chan.c	FUNCTION_21
0x4000dfb	              0x5d	                                 pop rbp	       702	chan.c	FUNCTION_21
0x4000dfc	            0x415c	                                 pop r12	       702	chan.c	FUNCTION_21
0x4000dfe	            0x415d	                                 pop r13	       702	chan.c	FUNCTION_21
0x4000e00	              0xc3	                                     ret	       702	chan.c	FUNCTION_21
0x4000e01	             0xf0b	                                     ud2	       702	chan.c	FUNCTION_21
0x4000e03	            0x31db	                            xor ebx, ebx	       684	chan.c	FUNCTION_21	IF_1
0x4000e05	            0x89d8	                            mov eax, ebx	       702	chan.c	FUNCTION_21
0x4000e07	              0x5b	                                 pop rbx	       702	chan.c	FUNCTION_21
0x4000e08	              0x5d	                                 pop rbp	       702	chan.c	FUNCTION_21
0x4000e09	            0x415c	                                 pop r12	       702	chan.c	FUNCTION_21
0x4000e0b	            0x415d	                                 pop r13	       702	chan.c	FUNCTION_21
0x4000e0d	              0xc3	                                     ret	       702	chan.c	FUNCTION_21
cfg80211_reg_can_beacon	WHILE,0:IF,0:DO,0:CALL,1:ELSE,0:functions,0:SWITCH,0:FOR,0	2
0x40009d0	      0xb901000000	                              mov ecx, 1	       953	chan.c	FUNCTION_26	CALL_1
0x40009d5	      0xe966feffff	        jmp sym._cfg80211_reg_can_beacon	       953	chan.c	FUNCTION_26	CALL_1
cfg80211_chandef_create	WHILE,0:IF,1:DO,0:CALL,2:ELSE,0:functions,0:SWITCH,1:FOR,0	33
0x40001e0	          0x4885f6	                           test rsi, rsi	        20	chan.c	FUNCTION_1	IF_1	CALL_1
0x40001e3	            0x7460	                            je 0x4000245	        20	chan.c	FUNCTION_1	IF_1	CALL_1
0x40001e5	          0x83fa01	                              cmp edx, 1	        26	chan.c	FUNCTION_1	SWITCH_1
0x40001e8	          0x488937	                    mov qword [rdi], rsi	        23	chan.c	FUNCTION_1
0x40001eb	    0xc74710000000	               mov dword [rdi + 0x10], 0	        24	chan.c	FUNCTION_1
0x40001f2	            0x7442	                            je 0x4000236	        26	chan.c	FUNCTION_1	SWITCH_1
0x40001f4	            0x7231	                            jb 0x4000227	        26	chan.c	FUNCTION_1	SWITCH_1
0x40001f6	          0x83fa02	                              cmp edx, 2	        26	chan.c	FUNCTION_1	SWITCH_1
0x40001f9	            0x741a	                            je 0x4000215	        26	chan.c	FUNCTION_1	SWITCH_1
0x40001fb	          0x83fa03	                              cmp edx, 3	        26	chan.c	FUNCTION_1	SWITCH_1
0x40001fe	            0x7512	                           jne 0x4000212	        26	chan.c	FUNCTION_1	SWITCH_1
0x4000200	    0xc74708020000	                  mov dword [rdi + 8], 2	        36	chan.c	FUNCTION_1	SWITCH_1
0x4000207	         0xfb74604	               movzx eax, word [rsi + 4]	        37	chan.c	FUNCTION_1	SWITCH_1
0x400020b	          0x83c00a	                            add eax, 0xa	        37	chan.c	FUNCTION_1	SWITCH_1
0x400020e	          0x89470c	              mov dword [rdi + 0xc], eax	        37	chan.c	FUNCTION_1	SWITCH_1
0x4000211	              0xc3	                                     ret	        38	chan.c	FUNCTION_1	SWITCH_1
0x4000212	             0xf0b	                                     ud2	        38	chan.c	FUNCTION_1	SWITCH_1
0x4000214	              0xc3	                                     ret	        44	chan.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000215	    0xc74708020000	                  mov dword [rdi + 8], 2	        40	chan.c	FUNCTION_1	SWITCH_1
0x400021c	         0xfb74604	               movzx eax, word [rsi + 4]	        41	chan.c	FUNCTION_1	SWITCH_1
0x4000220	          0x83e80a	                            sub eax, 0xa	        41	chan.c	FUNCTION_1	SWITCH_1
0x4000223	          0x89470c	              mov dword [rdi + 0xc], eax	        41	chan.c	FUNCTION_1	SWITCH_1
0x4000226	              0xc3	                                     ret	        42	chan.c	FUNCTION_1	SWITCH_1
0x4000227	    0xc74708000000	                  mov dword [rdi + 8], 0	        28	chan.c	FUNCTION_1	SWITCH_1
0x400022e	         0xfb74604	               movzx eax, word [rsi + 4]	        29	chan.c	FUNCTION_1	SWITCH_1
0x4000232	          0x89470c	              mov dword [rdi + 0xc], eax	        29	chan.c	FUNCTION_1	SWITCH_1
0x4000235	              0xc3	                                     ret	        30	chan.c	FUNCTION_1	SWITCH_1
0x4000236	    0xc74708010000	                  mov dword [rdi + 8], 1	        32	chan.c	FUNCTION_1	SWITCH_1
0x400023d	         0xfb74604	               movzx eax, word [rsi + 4]	        33	chan.c	FUNCTION_1	SWITCH_1
0x4000241	          0x89470c	              mov dword [rdi + 0xc], eax	        33	chan.c	FUNCTION_1	SWITCH_1
0x4000244	              0xc3	                                     ret	        34	chan.c	FUNCTION_1	SWITCH_1
0x4000245	             0xf0b	                                     ud2	        34	chan.c	FUNCTION_1	SWITCH_1
0x4000247	              0xc3	                                     ret	        20	chan.c	FUNCTION_1	IF_1	CALL_1
cfg80211_get_chans_dfs_cac_time	WHILE,0:IF,4:DO,0:CALL,3:ELSE,0:functions,0:SWITCH,0:FOR,1	47
0x4000380	          0x83fa14	                           cmp edx, 0x14	       287	chan.c	FUNCTION_8	IF_1
0x4000383	            0x4155	                                push r13	       650	chan.c	FUNCTION_20
0x4000385	            0x4154	                                push r12	       650	chan.c	FUNCTION_20
0x4000387	          0x4989fc	                            mov r12, rdi	       650	chan.c	FUNCTION_20
0x400038a	              0x55	                                push rbp	       650	chan.c	FUNCTION_20
0x400038b	              0x53	                                push rbx	       650	chan.c	FUNCTION_20
0x400038c	            0x89f3	                            mov ebx, esi	       650	chan.c	FUNCTION_20
0x400038e	            0x764c	                           jbe 0x40003dc	       287	chan.c	FUNCTION_8	IF_1
0x4000390	            0xd1ea	                              shr edx, 1	       290	chan.c	FUNCTION_8	ELSE_1
0x4000392	          0x8d460a	                    lea eax, [rsi + 0xa]	       290	chan.c	FUNCTION_8	ELSE_1
0x4000395	      0x448d6c32f6	             lea r13d, [rdx + rsi - 0xa]	       303	chan.c	FUNCTION_9
0x400039a	            0x29d0	                            sub eax, edx	       658	chan.c	FUNCTION_20	FOR_1
0x400039c	          0x4139c5	                           cmp r13d, eax	       658	chan.c	FUNCTION_20	FOR_1
0x400039f	            0x89c3	                            mov ebx, eax	       658	chan.c	FUNCTION_20	FOR_1
0x40003a1	            0x7230	                            jb 0x40003d3	       658	chan.c	FUNCTION_20	FOR_1
0x40003a3	            0x31ed	                            xor ebp, ebp	       301	chan.c	ELSE_1	FUNCTION_9	IF_1
0x40003a5	            0xeb1d	                           jmp 0x40003c4	       301	chan.c	ELSE_1	FUNCTION_9	IF_1
0x40003a7	          0x8b5008	                mov edx, dword [rax + 8]	       663	chan.c	FUNCTION_20	FOR_1	IF_2
0x40003aa	          0xf6c201	                              test dl, 1	       663	chan.c	FUNCTION_20	FOR_1	IF_2
0x40003ad	            0x7524	                           jne 0x40003d3	       663	chan.c	FUNCTION_20	FOR_1	IF_2
0x40003af	          0x83e208	                              and edx, 8	       666	chan.c	FUNCTION_20	FOR_1	IF_3
0x40003b2	            0x7408	                            je 0x40003bc	       666	chan.c	FUNCTION_20	FOR_1	IF_3
0x40003b4	          0x8b4038	            mov eax, dword [rax + 0x38] 	       669	chan.c	FUNCTION_20	FOR_1	IF_4
0x40003b7	            0x39c5	                            cmp ebp, eax	       669	chan.c	FUNCTION_20	FOR_1	IF_4
0x40003b9	           0xf42e8	                          cmovb ebp, eax	       669	chan.c	FUNCTION_20	FOR_1	IF_4
0x40003bc	          0x83c314	                           add ebx, 0x14	       658	chan.c	FUNCTION_20	FOR_1
0x40003bf	          0x4439eb	                           cmp ebx, r13d	       658	chan.c	FUNCTION_20	FOR_1
0x40003c2	            0x771d	                            ja 0x40003e1	       658	chan.c	FUNCTION_20	FOR_1
0x40003c4	            0x89de	                            mov esi, ebx	       659	chan.c	FUNCTION_20	FOR_1	CALL_3
0x40003c6	          0x4c89e7	                            mov rdi, r12	       659	chan.c	FUNCTION_20	FOR_1	CALL_3
0x40003c9	      0xe800000000	                          call 0x40003ce	       659	chan.c	FUNCTION_20	FOR_1	CALL_3
0x40003ce	          0x4885c0	                           test rax, rax	       660	chan.c	FUNCTION_20	FOR_1	IF_1
0x40003d1	            0x75d4	                           jne 0x40003a7	       660	chan.c	FUNCTION_20	FOR_1	IF_1
0x40003d3	              0x5b	                                 pop rbx	       674	chan.c	FUNCTION_20
0x40003d4	            0x31c0	                            xor eax, eax	       653	chan.c	FUNCTION_20
0x40003d6	              0x5d	                                 pop rbp	       674	chan.c	FUNCTION_20
0x40003d7	            0x415c	                                 pop r12	       674	chan.c	FUNCTION_20
0x40003d9	            0x415d	                                 pop r13	       674	chan.c	FUNCTION_20
0x40003db	              0xc3	                                     ret	       674	chan.c	FUNCTION_20
0x40003dc	          0x4189f5	                           mov r13d, esi	       301	chan.c	ELSE_1	FUNCTION_9	IF_1
0x40003df	            0xebc2	                           jmp 0x40003a3	       301	chan.c	ELSE_1	FUNCTION_9	IF_1
0x40003e1	              0x5b	                                 pop rbx	       674	chan.c	FUNCTION_20
0x40003e2	            0x89e8	                            mov eax, ebp	       674	chan.c	FUNCTION_20
0x40003e4	              0x5d	                                 pop rbp	       674	chan.c	FUNCTION_20
0x40003e5	            0x415c	                                 pop r12	       674	chan.c	FUNCTION_20
0x40003e7	            0x415d	                                 pop r13	       674	chan.c	FUNCTION_20
0x40003e9	              0xc3	                                     ret	       674	chan.c	FUNCTION_20
chandef_primary_freqs	WHILE,0:IF,0:DO,0:CALL,1:ELSE,0:functions,0:SWITCH,1:FOR,0	50
0x4000150	          0x8b4708	                mov eax, dword [rdi + 8]	       123	chan.c	FUNCTION_3	SWITCH_1
0x4000153	          0x4889d1	                            mov rcx, rdx	       120	chan.c	FUNCTION_3
0x4000156	          0x83f804	                              cmp eax, 4	       123	chan.c	FUNCTION_3	SWITCH_1
0x4000159	            0x773e	                            ja 0x4000199	       123	chan.c	FUNCTION_3	SWITCH_1
0x400015b	          0x83f803	                              cmp eax, 3	       123	chan.c	FUNCTION_3	SWITCH_1
0x400015e	            0x7311	                           jae 0x4000171	       123	chan.c	FUNCTION_3	SWITCH_1
0x4000160	          0x83f802	                              cmp eax, 2	       123	chan.c	FUNCTION_3	SWITCH_1
0x4000163	            0x7575	                           jne 0x40001da	       123	chan.c	FUNCTION_3	SWITCH_1
0x4000165	          0x8b470c	              mov eax, dword [rdi + 0xc]	       125	chan.c	FUNCTION_3	SWITCH_1
0x4000168	            0x8906	                    mov dword [rsi], eax	       125	chan.c	FUNCTION_3	SWITCH_1
0x400016a	    0xc70200000000	                      mov dword [rdx], 0	       126	chan.c	FUNCTION_3	SWITCH_1
0x4000170	              0xc3	                                     ret	       127	chan.c	FUNCTION_3	SWITCH_1
0x4000171	          0x8b470c	              mov eax, dword [rdi + 0xc]	       130	chan.c	FUNCTION_3	SWITCH_1
0x4000174	            0x8902	                    mov dword [rdx], eax	       130	chan.c	FUNCTION_3	SWITCH_1
0x4000176	          0x488b07	                    mov rax, qword [rdi]	       132	chan.c	FUNCTION_3	SWITCH_1
0x4000179	          0x8b4f0c	              mov ecx, dword [rdi + 0xc]	       132	chan.c	FUNCTION_3	SWITCH_1
0x400017c	         0xfb75004	               movzx edx, word [rax + 4]	       132	chan.c	FUNCTION_3	SWITCH_1
0x4000180	            0x29ca	                            sub edx, ecx	       132	chan.c	FUNCTION_3	SWITCH_1
0x4000182	          0x8d421e	                   lea eax, [rdx + 0x1e]	       132	chan.c	FUNCTION_3	SWITCH_1
0x4000185	      0xbacdcccccc	                     mov edx, 0xcccccccd	       132	chan.c	FUNCTION_3	SWITCH_1
0x400018a	            0xf7e2	                                 mul edx	       132	chan.c	FUNCTION_3	SWITCH_1
0x400018c	          0xc1ea05	                              shr edx, 5	       136	chan.c	FUNCTION_3	SWITCH_1
0x400018f	          0x8d0492	                  lea eax, [rdx + rdx*4]	       136	chan.c	FUNCTION_3	SWITCH_1
0x4000192	        0x8d44c1ec	           lea eax, [rcx + rax*8 - 0x14]	       136	chan.c	FUNCTION_3	SWITCH_1
0x4000196	            0x8906	                    mov dword [rsi], eax	       136	chan.c	FUNCTION_3	SWITCH_1
0x4000198	              0xc3	                                     ret	       137	chan.c	FUNCTION_3	SWITCH_1
0x4000199	          0x83f805	                              cmp eax, 5	       123	chan.c	FUNCTION_3	SWITCH_1
0x400019c	            0x753c	                           jne 0x40001da	       123	chan.c	FUNCTION_3	SWITCH_1
0x400019e	          0x488b07	                    mov rax, qword [rdi]	       140	chan.c	FUNCTION_3	SWITCH_1
0x40001a1	        0x448b470c	              mov r8d, dword [rdi + 0xc]	       140	chan.c	FUNCTION_3	SWITCH_1
0x40001a5	         0xfb75004	               movzx edx, word [rax + 4]	       140	chan.c	FUNCTION_3	SWITCH_1
0x40001a9	          0x4429c2	                            sub edx, r8d	       140	chan.c	FUNCTION_3	SWITCH_1
0x40001ac	          0x8d4246	                   lea eax, [rdx + 0x46]	       140	chan.c	FUNCTION_3	SWITCH_1
0x40001af	      0xbacdcccccc	                     mov edx, 0xcccccccd	       140	chan.c	FUNCTION_3	SWITCH_1
0x40001b4	            0xf7e2	                                 mul edx	       140	chan.c	FUNCTION_3	SWITCH_1
0x40001b6	          0xc1ea04	                              shr edx, 4	       140	chan.c	FUNCTION_3	SWITCH_1
0x40001b9	            0x89d0	                            mov eax, edx	       144	chan.c	FUNCTION_3	SWITCH_1
0x40001bb	          0xc1fa02	                              sar edx, 2	       147	chan.c	FUNCTION_3	SWITCH_1
0x40001be	            0xd1f8	                              sar eax, 1	       144	chan.c	FUNCTION_3	SWITCH_1
0x40001c0	          0x8d0480	                  lea eax, [rax + rax*4]	       144	chan.c	FUNCTION_3	SWITCH_1
0x40001c3	      0x418d44c0c4	            lea eax, [r8 + rax*8 - 0x3c]	       144	chan.c	FUNCTION_3	SWITCH_1
0x40001c8	            0x8906	                    mov dword [rsi], eax	       144	chan.c	FUNCTION_3	SWITCH_1
0x40001ca	          0x8d0492	                  lea eax, [rdx + rdx*4]	       147	chan.c	FUNCTION_3	SWITCH_1
0x40001cd	          0x8b570c	              mov edx, dword [rdi + 0xc]	       147	chan.c	FUNCTION_3	SWITCH_1
0x40001d0	          0xc1e004	                              shl eax, 4	       147	chan.c	FUNCTION_3	SWITCH_1
0x40001d3	        0x8d4410d8	             lea eax, [rax + rdx - 0x28]	       147	chan.c	FUNCTION_3	SWITCH_1
0x40001d7	            0x8901	                    mov dword [rcx], eax	       147	chan.c	FUNCTION_3	SWITCH_1
0x40001d9	              0xc3	                                     ret	       148	chan.c	FUNCTION_3	SWITCH_1
0x40001da	             0xf0b	                                     ud2	       148	chan.c	FUNCTION_3	SWITCH_1
0x40001dc	              0xc3	                                     ret	       150	chan.c	FUNCTION_3	SWITCH_1	CALL_1
cfg80211_set_dfs_state	WHILE,0:IF,3:DO,0:CALL,5:ELSE,0:functions,0:SWITCH,0:FOR,0	43
0x4000b00	            0x4155	                                push r13	       263	chan.c	FUNCTION_7
0x4000b02	            0x4154	                                push r12	       263	chan.c	FUNCTION_7
0x4000b04	          0x4989fc	                            mov r12, rdi	       263	chan.c	FUNCTION_7
0x4000b07	              0x55	                                push rbp	       263	chan.c	FUNCTION_7
0x4000b08	              0x53	                                push rbx	       263	chan.c	FUNCTION_7
0x4000b09	          0x4889f7	                            mov rdi, rsi	       266	chan.c	FUNCTION_7	IF_1	CALL_2
0x4000b0c	          0x4889f3	                            mov rbx, rsi	       263	chan.c	FUNCTION_7
0x4000b0f	          0x4189d5	                           mov r13d, edx	       263	chan.c	FUNCTION_7
0x4000b12	      0xe800000000	                          call 0x4000b17	       266	chan.c	FUNCTION_7	IF_1	CALL_2
0x4000b17	            0x84c0	                             test al, al	       266	chan.c	FUNCTION_7	IF_1	CALL_2
0x4000b19	            0x743f	                            je 0x4000b5a	       266	chan.c	FUNCTION_7	IF_1	CALL_2
0x4000b1b	          0x8b7b08	                mov edi, dword [rbx + 8]	       269	chan.c	FUNCTION_7	CALL_3
0x4000b1e	      0xe82dfcffff	call sym.cfg80211_chandef_get_width.isra.1	       269	chan.c	FUNCTION_7	CALL_3
0x4000b23	            0x85c0	                           test eax, eax	       270	chan.c	FUNCTION_7	IF_2
0x4000b25	            0x89c5	                            mov ebp, eax	       269	chan.c	FUNCTION_7	CALL_3
0x4000b27	            0x7817	                            js 0x4000b40	       270	chan.c	FUNCTION_7	IF_2
0x4000b29	          0x8b730c	              mov esi, dword [rbx + 0xc]	       273	chan.c	FUNCTION_7	CALL_4
0x4000b2c	          0x4489e9	                           mov ecx, r13d	       273	chan.c	FUNCTION_7	CALL_4
0x4000b2f	            0x89c2	                            mov edx, eax	       273	chan.c	FUNCTION_7	CALL_4
0x4000b31	          0x4c89e7	                            mov rdi, r12	       273	chan.c	FUNCTION_7	CALL_4
0x4000b34	      0xe817f7ffff	   call sym.cfg80211_set_chans_dfs_state	       273	chan.c	FUNCTION_7	CALL_4
0x4000b39	          0x8b7310	            mov esi, dword [rbx + 0x10] 	       276	chan.c	FUNCTION_7	IF_3
0x4000b3c	            0x85f6	                           test esi, esi	       276	chan.c	FUNCTION_7	IF_3
0x4000b3e	            0x7507	                           jne 0x4000b47	       276	chan.c	FUNCTION_7	IF_3
0x4000b40	              0x5b	                                 pop rbx	       280	chan.c	FUNCTION_7
0x4000b41	              0x5d	                                 pop rbp	       280	chan.c	FUNCTION_7
0x4000b42	            0x415c	                                 pop r12	       280	chan.c	FUNCTION_7
0x4000b44	            0x415d	                                 pop r13	       280	chan.c	FUNCTION_7
0x4000b46	              0xc3	                                     ret	       280	chan.c	FUNCTION_7
0x4000b47	              0x5b	                                 pop rbx	       280	chan.c	FUNCTION_7
0x4000b48	          0x4489e9	                           mov ecx, r13d	       278	chan.c	FUNCTION_7	CALL_5
0x4000b4b	            0x89ea	                            mov edx, ebp	       278	chan.c	FUNCTION_7	CALL_5
0x4000b4d	          0x4c89e7	                            mov rdi, r12	       278	chan.c	FUNCTION_7	CALL_5
0x4000b50	              0x5d	                                 pop rbp	       280	chan.c	FUNCTION_7
0x4000b51	            0x415c	                                 pop r12	       280	chan.c	FUNCTION_7
0x4000b53	            0x415d	                                 pop r13	       280	chan.c	FUNCTION_7
0x4000b55	      0xe9f6f6ffff	    jmp sym.cfg80211_set_chans_dfs_state	       278	chan.c	FUNCTION_7	CALL_5
0x4000b5a	             0xf0b	                                     ud2	       278	chan.c	FUNCTION_7	CALL_5
0x4000b5c	              0x5b	                                 pop rbx	       280	chan.c	FUNCTION_7
0x4000b5d	              0x5d	                                 pop rbp	       280	chan.c	FUNCTION_7
0x4000b5e	            0x415c	                                 pop r12	       280	chan.c	FUNCTION_7
0x4000b60	            0x415d	                                 pop r13	       280	chan.c	FUNCTION_7
0x4000b62	              0xc3	                                     ret	       280	chan.c	FUNCTION_7
cfg80211_chandef_dfs_usable	WHILE,0:IF,4:DO,0:CALL,7:ELSE,0:functions,0:SWITCH,1:FOR,0	60
0x4000b70	            0x4155	                                push r13	       426	chan.c	FUNCTION_13
0x4000b72	            0x4154	                                push r12	       426	chan.c	FUNCTION_13
0x4000b74	          0x4989fd	                            mov r13, rdi	       426	chan.c	FUNCTION_13
0x4000b77	              0x55	                                push rbp	       426	chan.c	FUNCTION_13
0x4000b78	              0x53	                                push rbx	       426	chan.c	FUNCTION_13
0x4000b79	          0x4889f7	                            mov rdi, rsi	       430	chan.c	FUNCTION_13	IF_1	CALL_2
0x4000b7c	          0x4889f3	                            mov rbx, rsi	       426	chan.c	FUNCTION_13
0x4000b7f	      0xe800000000	                          call 0x4000b84	       430	chan.c	FUNCTION_13	IF_1	CALL_2
0x4000b84	            0x84c0	                             test al, al	       430	chan.c	FUNCTION_13	IF_1	CALL_2
0x4000b86	            0x7463	                            je 0x4000beb	       430	chan.c	FUNCTION_13	IF_1	CALL_2
0x4000b88	          0x8b7b08	                mov edi, dword [rbx + 8]	       433	chan.c	FUNCTION_13	CALL_3
0x4000b8b	      0xe8c0fbffff	call sym.cfg80211_chandef_get_width.isra.1	       433	chan.c	FUNCTION_13	CALL_3
0x4000b90	            0x85c0	                           test eax, eax	       434	chan.c	FUNCTION_13	IF_2
0x4000b92	            0x89c5	                            mov ebp, eax	       433	chan.c	FUNCTION_13	CALL_3
0x4000b94	            0x783f	                            js 0x4000bd5	       434	chan.c	FUNCTION_13	IF_2
0x4000b96	          0x8b730c	              mov esi, dword [rbx + 0xc]	       437	chan.c	FUNCTION_13	CALL_4
0x4000b99	            0x89c2	                            mov edx, eax	       437	chan.c	FUNCTION_13	CALL_4
0x4000b9b	          0x4c89ef	                            mov rdi, r13	       437	chan.c	FUNCTION_13	CALL_4
0x4000b9e	      0xe85df7ffff	  call sym.cfg80211_get_chans_dfs_usable	       437	chan.c	FUNCTION_13	CALL_4
0x4000ba3	            0x85c0	                           test eax, eax	       440	chan.c	FUNCTION_13	IF_3
0x4000ba5	          0x4189c4	                           mov r12d, eax	       437	chan.c	FUNCTION_13	CALL_4
0x4000ba8	            0x782b	                            js 0x4000bd5	       440	chan.c	FUNCTION_13	IF_3
0x4000baa	        0x837b0804	                  cmp dword [rbx + 8], 4	       443	chan.c	FUNCTION_13	SWITCH_1
0x4000bae	            0x752e	                           jne 0x4000bde	       443	chan.c	FUNCTION_13	SWITCH_1
0x4000bb0	          0x8b7310	            mov esi, dword [rbx + 0x10] 	       445	chan.c	FUNCTION_13	SWITCH_1	CALL_5
0x4000bb3	            0x85f6	                           test esi, esi	       445	chan.c	FUNCTION_13	SWITCH_1	CALL_5
0x4000bb5	            0x743d	                            je 0x4000bf4	       445	chan.c	FUNCTION_13	SWITCH_1	CALL_5
0x4000bb7	            0x89ea	                            mov edx, ebp	       446	chan.c	FUNCTION_13	SWITCH_1	CALL_6
0x4000bb9	          0x4c89ef	                            mov rdi, r13	       446	chan.c	FUNCTION_13	SWITCH_1	CALL_6
0x4000bbc	      0xe83ff7ffff	  call sym.cfg80211_get_chans_dfs_usable	       446	chan.c	FUNCTION_13	SWITCH_1	CALL_6
0x4000bc1	            0x85c0	                           test eax, eax	       449	chan.c	FUNCTION_13	SWITCH_1	IF_4
0x4000bc3	            0x7810	                            js 0x4000bd5	       449	chan.c	FUNCTION_13	SWITCH_1	IF_4
0x4000bc5	          0x4101c4	                           add r12d, eax	       457	chan.c	FUNCTION_13
0x4000bc8	          0x4585e4	                         test r12d, r12d	       457	chan.c	FUNCTION_13
0x4000bcb	              0x5b	                                 pop rbx	       458	chan.c	FUNCTION_13
0x4000bcc	           0xf9fc0	                                 setg al	       457	chan.c	FUNCTION_13
0x4000bcf	              0x5d	                                 pop rbp	       458	chan.c	FUNCTION_13
0x4000bd0	            0x415c	                                 pop r12	       458	chan.c	FUNCTION_13
0x4000bd2	            0x415d	                                 pop r13	       458	chan.c	FUNCTION_13
0x4000bd4	              0xc3	                                     ret	       458	chan.c	FUNCTION_13
0x4000bd5	              0x5b	                                 pop rbx	       458	chan.c	FUNCTION_13
0x4000bd6	            0x31c0	                            xor eax, eax	       435	chan.c	FUNCTION_13	IF_2
0x4000bd8	              0x5d	                                 pop rbp	       458	chan.c	FUNCTION_13
0x4000bd9	            0x415c	                                 pop r12	       458	chan.c	FUNCTION_13
0x4000bdb	            0x415d	                                 pop r13	       458	chan.c	FUNCTION_13
0x4000bdd	              0xc3	                                     ret	       458	chan.c	FUNCTION_13
0x4000bde	          0x8b5310	            mov edx, dword [rbx + 0x10] 	       453	chan.c	FUNCTION_13	SWITCH_1	CALL_7
0x4000be1	            0x31c0	                            xor eax, eax	       428	chan.c	FUNCTION_13
0x4000be3	            0x85d2	                           test edx, edx	       453	chan.c	FUNCTION_13	SWITCH_1	CALL_7
0x4000be5	            0x74de	                            je 0x4000bc5	       453	chan.c	FUNCTION_13	SWITCH_1	CALL_7
0x4000be7	             0xf0b	                                     ud2	       453	chan.c	FUNCTION_13	SWITCH_1	CALL_7
0x4000be9	            0xebda	                           jmp 0x4000bc5	       453	chan.c	FUNCTION_13	SWITCH_1	CALL_7
0x4000beb	             0xf0b	                                     ud2	       453	chan.c	FUNCTION_13	SWITCH_1	CALL_7
0x4000bed	              0x5b	                                 pop rbx	       458	chan.c	FUNCTION_13
0x4000bee	              0x5d	                                 pop rbp	       458	chan.c	FUNCTION_13
0x4000bef	            0x415c	                                 pop r12	       458	chan.c	FUNCTION_13
0x4000bf1	            0x415d	                                 pop r13	       458	chan.c	FUNCTION_13
0x4000bf3	              0xc3	                                     ret	       458	chan.c	FUNCTION_13
0x4000bf4	             0xf0b	                                     ud2	       458	chan.c	FUNCTION_13
0x4000bf6	            0xebbf	                           jmp 0x4000bb7	       445	chan.c	FUNCTION_13	SWITCH_1	CALL_5
cfg80211_chandef_valid	WHILE,0:IF,12:DO,0:CALL,0:ELSE,0:functions,0:SWITCH,1:FOR,0	94
0x4000040	          0x488b07	                    mov rax, qword [rdi]	        53	chan.c	FUNCTION_2	IF_1
0x4000043	          0x4885c0	                           test rax, rax	        53	chan.c	FUNCTION_2	IF_1
0x4000046	     0xf8488000000	                            je 0x40000d4	        53	chan.c	FUNCTION_2	IF_1
0x400004c	        0x837f0807	                  cmp dword [rdi + 8], 7	        58	chan.c	FUNCTION_2	SWITCH_1
0x4000050	         0xfb75004	               movzx edx, word [rax + 4]	        56	chan.c	FUNCTION_2
0x4000054	            0x777e	                            ja 0x40000d4	        58	chan.c	FUNCTION_2	SWITCH_1
0x4000056	          0x8b4708	                mov eax, dword [rdi + 8]	        58	chan.c	FUNCTION_2	SWITCH_1
0x4000059	    0x488b04c50000	                  mov rax, qword [rax*8]	        58	chan.c	FUNCTION_2	SWITCH_1
0x4000061	      0xe900000000	                           jmp 0x4000066	        58	chan.c	FUNCTION_2	SWITCH_1
0x4000066	          0x8b4f0c	              mov ecx, dword [rdi + 0xc]	        76	chan.c	FUNCTION_2	SWITCH_1	IF_6
0x4000069	          0x8d421e	                   lea eax, [rdx + 0x1e]	        76	chan.c	FUNCTION_2	SWITCH_1	IF_6
0x400006c	            0x39c1	                            cmp ecx, eax	        76	chan.c	FUNCTION_2	SWITCH_1	IF_6
0x400006e	     0xf84ab000000	                            je 0x400011f	        76	chan.c	FUNCTION_2	SWITCH_1	IF_6
0x4000074	          0x8d420a	                    lea eax, [rdx + 0xa]	        76	chan.c	FUNCTION_2	SWITCH_1	IF_6
0x4000077	            0x39c1	                            cmp ecx, eax	        76	chan.c	FUNCTION_2	SWITCH_1	IF_6
0x4000079	     0xf84a0000000	                            je 0x400011f	        76	chan.c	FUNCTION_2	SWITCH_1	IF_6
0x400007f	          0x8d42f6	                    lea eax, [rdx - 0xa]	        77	chan.c	FUNCTION_2	SWITCH_1	IF_6
0x4000082	            0x39c1	                            cmp ecx, eax	        77	chan.c	FUNCTION_2	SWITCH_1	IF_6
0x4000084	     0xf8495000000	                            je 0x400011f	        77	chan.c	FUNCTION_2	SWITCH_1	IF_6
0x400008a	          0x83ea1e	                           sub edx, 0x1e	        78	chan.c	FUNCTION_2	SWITCH_1	IF_6
0x400008d	            0x31c0	                            xor eax, eax	        54	chan.c	FUNCTION_2	IF_1
0x400008f	            0x39d1	                            cmp ecx, edx	        78	chan.c	FUNCTION_2	SWITCH_1	IF_6
0x4000091	     0xf8488000000	                            je 0x400011f	        78	chan.c	FUNCTION_2	SWITCH_1	IF_6
0x4000097	            0xf3c3	                                     ret	       115	chan.c	FUNCTION_2
0x4000099	          0x8b470c	              mov eax, dword [rdi + 0xc]	        98	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x400009c	          0x8d4a46	                   lea ecx, [rdx + 0x46]	        98	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x400009f	            0x39c8	                            cmp eax, ecx	        98	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000a1	            0x743b	                            je 0x40000de	        98	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000a3	          0x8d4a32	                   lea ecx, [rdx + 0x32]	        98	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000a6	            0x39c8	                            cmp eax, ecx	        98	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000a8	            0x7434	                            je 0x40000de	        98	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000aa	          0x8d4a1e	                   lea ecx, [rdx + 0x1e]	        99	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000ad	            0x39c8	                            cmp eax, ecx	        99	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000af	            0x742d	                            je 0x40000de	        99	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000b1	          0x8d4a0a	                    lea ecx, [rdx + 0xa]	       100	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000b4	            0x39c8	                            cmp eax, ecx	       100	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000b6	            0x7426	                            je 0x40000de	       100	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000b8	          0x8d4af6	                    lea ecx, [rdx - 0xa]	       101	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000bb	            0x39c8	                            cmp eax, ecx	       101	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000bd	            0x741f	                            je 0x40000de	       101	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000bf	          0x8d4ae2	                   lea ecx, [rdx - 0x1e]	       102	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000c2	            0x39c8	                            cmp eax, ecx	       102	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000c4	            0x7418	                            je 0x40000de	       102	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000c6	          0x8d4ace	                   lea ecx, [rdx - 0x32]	       103	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000c9	            0x39c8	                            cmp eax, ecx	       103	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000cb	            0x7411	                            je 0x40000de	       103	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000cd	          0x83ea46	                           sub edx, 0x46	       104	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000d0	            0x39d0	                            cmp eax, edx	       104	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000d2	            0x740a	                            je 0x40000de	       104	chan.c	FUNCTION_2	SWITCH_1	IF_11
0x40000d4	            0x31c0	                            xor eax, eax	       111	chan.c	FUNCTION_2	SWITCH_1
0x40000d6	              0xc3	                                     ret	       115	chan.c	FUNCTION_2
0x40000d7	            0x31c0	                            xor eax, eax	        54	chan.c	FUNCTION_2	IF_1
0x40000d9	          0x3b570c	              cmp edx, dword [rdi + 0xc]	        63	chan.c	FUNCTION_2	SWITCH_1	IF_2
0x40000dc	            0x75b9	                           jne 0x4000097	        63	chan.c	FUNCTION_2	SWITCH_1	IF_2
0x40000de	          0x8b4710	            mov eax, dword [rdi + 0x10] 	        65	chan.c	FUNCTION_2	SWITCH_1	IF_3
0x40000e1	            0x85c0	                           test eax, eax	        65	chan.c	FUNCTION_2	SWITCH_1	IF_3
0x40000e3	           0xf94c0	                                 sete al	        65	chan.c	FUNCTION_2	SWITCH_1	IF_3
0x40000e6	              0xc3	                                     ret	        65	chan.c	FUNCTION_2	SWITCH_1	IF_3
0x40000e7	          0x8b4f0c	              mov ecx, dword [rdi + 0xc]	        69	chan.c	FUNCTION_2	SWITCH_1	IF_4
0x40000ea	          0x8d420a	                    lea eax, [rdx + 0xa]	        69	chan.c	FUNCTION_2	SWITCH_1	IF_4
0x40000ed	            0x39c1	                            cmp ecx, eax	        69	chan.c	FUNCTION_2	SWITCH_1	IF_4
0x40000ef	            0x74ed	                            je 0x40000de	        69	chan.c	FUNCTION_2	SWITCH_1	IF_4
0x40000f1	          0x83ea0a	                            sub edx, 0xa	        69	chan.c	FUNCTION_2	SWITCH_1	IF_4
0x40000f4	            0x31c0	                            xor eax, eax	        54	chan.c	FUNCTION_2	IF_1
0x40000f6	            0x39d1	                            cmp ecx, edx	        69	chan.c	FUNCTION_2	SWITCH_1	IF_4
0x40000f8	            0x74e4	                            je 0x40000de	        69	chan.c	FUNCTION_2	SWITCH_1	IF_4
0x40000fa	            0xf3c3	                                     ret	       115	chan.c	FUNCTION_2
0x40000fc	          0x8b4f0c	              mov ecx, dword [rdi + 0xc]	        89	chan.c	FUNCTION_2	SWITCH_1	IF_9
0x40000ff	          0x8d421e	                   lea eax, [rdx + 0x1e]	        89	chan.c	FUNCTION_2	SWITCH_1	IF_9
0x4000102	            0x39c1	                            cmp ecx, eax	        89	chan.c	FUNCTION_2	SWITCH_1	IF_9
0x4000104	            0x74d8	                            je 0x40000de	        89	chan.c	FUNCTION_2	SWITCH_1	IF_9
0x4000106	          0x8d420a	                    lea eax, [rdx + 0xa]	        89	chan.c	FUNCTION_2	SWITCH_1	IF_9
0x4000109	            0x39c1	                            cmp ecx, eax	        89	chan.c	FUNCTION_2	SWITCH_1	IF_9
0x400010b	            0x74d1	                            je 0x40000de	        89	chan.c	FUNCTION_2	SWITCH_1	IF_9
0x400010d	          0x8d42f6	                    lea eax, [rdx - 0xa]	        90	chan.c	FUNCTION_2	SWITCH_1	IF_9
0x4000110	            0x39c1	                            cmp ecx, eax	        90	chan.c	FUNCTION_2	SWITCH_1	IF_9
0x4000112	            0x74ca	                            je 0x40000de	        90	chan.c	FUNCTION_2	SWITCH_1	IF_9
0x4000114	          0x83ea1e	                           sub edx, 0x1e	        91	chan.c	FUNCTION_2	SWITCH_1	IF_9
0x4000117	            0x31c0	                            xor eax, eax	        54	chan.c	FUNCTION_2	IF_1
0x4000119	            0x39d1	                            cmp ecx, edx	        91	chan.c	FUNCTION_2	SWITCH_1	IF_9
0x400011b	            0x74c1	                            je 0x40000de	        91	chan.c	FUNCTION_2	SWITCH_1	IF_9
0x400011d	            0xf3c3	                                     ret	       115	chan.c	FUNCTION_2
0x400011f	          0x8b5710	            mov edx, dword [rdi + 0x10] 	        81	chan.c	FUNCTION_2	SWITCH_1	IF_7
0x4000122	            0x31c0	                            xor eax, eax	        54	chan.c	FUNCTION_2	IF_1
0x4000124	            0x85d2	                           test edx, edx	        81	chan.c	FUNCTION_2	SWITCH_1	IF_7
0x4000126	     0xf846bffffff	                            je 0x4000097	        81	chan.c	FUNCTION_2	SWITCH_1	IF_7
0x400012c	            0x89ce	                            mov esi, ecx	        84	chan.c	FUNCTION_2	SWITCH_1	IF_8
0x400012e	            0x29d6	                            sub esi, edx	        84	chan.c	FUNCTION_2	SWITCH_1	IF_8
0x4000130	          0x83fe50	                           cmp esi, 0x50	        84	chan.c	FUNCTION_2	SWITCH_1	IF_8
0x4000133	     0xf845effffff	                            je 0x4000097	        84	chan.c	FUNCTION_2	SWITCH_1	IF_8
0x4000139	            0x29ca	                            sub edx, ecx	        84	chan.c	FUNCTION_2	SWITCH_1	IF_8
0x400013b	          0x83fa50	                           cmp edx, 0x50	        84	chan.c	FUNCTION_2	SWITCH_1	IF_8
0x400013e	           0xf95c0	                                setne al	        84	chan.c	FUNCTION_2	SWITCH_1	IF_8
0x4000141	              0xc3	                                     ret	        84	chan.c	FUNCTION_2	SWITCH_1	IF_8
cfg80211_secondary_chans_ok	WHILE,0:IF,1:DO,0:CALL,3:ELSE,0:functions,0:SWITCH,0:FOR,1	39
0x40003f0	          0x83fa14	                           cmp edx, 0x14	       287	chan.c	FUNCTION_8	IF_1
0x40003f3	            0x4155	                                push r13	       707	chan.c	FUNCTION_22
0x40003f5	          0x4189cd	                           mov r13d, ecx	       707	chan.c	FUNCTION_22
0x40003f8	            0x4154	                                push r12	       707	chan.c	FUNCTION_22
0x40003fa	          0x4989fc	                            mov r12, rdi	       707	chan.c	FUNCTION_22
0x40003fd	              0x55	                                push rbp	       707	chan.c	FUNCTION_22
0x40003fe	            0x89f5	                            mov ebp, esi	       707	chan.c	FUNCTION_22
0x4000400	              0x53	                                push rbx	       707	chan.c	FUNCTION_22
0x4000401	            0x7640	                           jbe 0x4000443	       287	chan.c	FUNCTION_8	IF_1
0x4000403	            0xd1ea	                              shr edx, 1	       290	chan.c	FUNCTION_8	ELSE_1
0x4000405	          0x8d5e0a	                    lea ebx, [rsi + 0xa]	       290	chan.c	FUNCTION_8	ELSE_1
0x4000408	        0x8d6c32f6	              lea ebp, [rdx + rsi - 0xa]	       303	chan.c	FUNCTION_9
0x400040c	            0x29d3	                            sub ebx, edx	       290	chan.c	FUNCTION_8	ELSE_1
0x400040e	            0x39dd	                            cmp ebp, ebx	       714	chan.c	FUNCTION_22	FOR_1
0x4000410	            0x7319	                           jae 0x400042b	       714	chan.c	FUNCTION_22	FOR_1
0x4000412	              0x5b	                                 pop rbx	       721	chan.c	FUNCTION_22
0x4000413	      0xb801000000	                              mov eax, 1	       720	chan.c	FUNCTION_22
0x4000418	              0x5d	                                 pop rbp	       721	chan.c	FUNCTION_22
0x4000419	            0x415c	                                 pop r12	       721	chan.c	FUNCTION_22
0x400041b	            0x415d	                                 pop r13	       721	chan.c	FUNCTION_22
0x400041d	              0xc3	                                     ret	       721	chan.c	FUNCTION_22
0x400041e	        0x44856808	              test dword [rax + 8], r13d	       716	chan.c	FUNCTION_22	FOR_1	IF_1
0x4000422	            0x7516	                           jne 0x400043a	       716	chan.c	FUNCTION_22	FOR_1	IF_1
0x4000424	          0x83c314	                           add ebx, 0x14	       714	chan.c	FUNCTION_22	FOR_1
0x4000427	            0x39eb	                            cmp ebx, ebp	       714	chan.c	FUNCTION_22	FOR_1
0x4000429	            0x77e7	                            ja 0x4000412	       714	chan.c	FUNCTION_22	FOR_1
0x400042b	            0x89de	                            mov esi, ebx	       715	chan.c	FUNCTION_22	FOR_1	CALL_3
0x400042d	          0x4c89e7	                            mov rdi, r12	       715	chan.c	FUNCTION_22	FOR_1	CALL_3
0x4000430	      0xe800000000	                          call 0x4000435	       715	chan.c	FUNCTION_22	FOR_1	CALL_3
0x4000435	          0x4885c0	                           test rax, rax	       716	chan.c	FUNCTION_22	FOR_1	IF_1
0x4000438	            0x75e4	                           jne 0x400041e	       716	chan.c	FUNCTION_22	FOR_1	IF_1
0x400043a	              0x5b	                                 pop rbx	       721	chan.c	FUNCTION_22
0x400043b	            0x31c0	                            xor eax, eax	       717	chan.c	FUNCTION_22	FOR_1	IF_1
0x400043d	              0x5d	                                 pop rbp	       721	chan.c	FUNCTION_22
0x400043e	            0x415c	                                 pop r12	       721	chan.c	FUNCTION_22
0x4000440	            0x415d	                                 pop r13	       721	chan.c	FUNCTION_22
0x4000442	              0xc3	                                     ret	       721	chan.c	FUNCTION_22
0x4000443	            0x89f3	                            mov ebx, esi	       288	chan.c	FUNCTION_8	IF_1
0x4000445	            0xebe4	                           jmp 0x400042b	       288	chan.c	FUNCTION_8	IF_1
cfg80211_set_chans_dfs_state	WHILE,0:IF,1:DO,0:CALL,1:ELSE,0:functions,0:SWITCH,0:FOR,1	30
0x4000250	            0x4155	                                push r13	       244	chan.c	FUNCTION_6
0x4000252	            0xd1ea	                              shr edx, 1	       248	chan.c	FUNCTION_6	FOR_1
0x4000254	            0x4154	                                push r12	       244	chan.c	FUNCTION_6
0x4000256	              0x55	                                push rbp	       244	chan.c	FUNCTION_6
0x4000257	              0x53	                                push rbx	       244	chan.c	FUNCTION_6
0x4000258	          0x8d5e0a	                    lea ebx, [rsi + 0xa]	       248	chan.c	FUNCTION_6	FOR_1
0x400025b	        0x8d6c32f6	              lea ebp, [rdx + rsi - 0xa]	       249	chan.c	FUNCTION_6	FOR_1
0x400025f	            0x29d3	                            sub ebx, edx	       248	chan.c	FUNCTION_6	FOR_1
0x4000261	            0x39eb	                            cmp ebx, ebp	       248	chan.c	FUNCTION_6	FOR_1
0x4000263	            0x7731	                            ja 0x4000296	       248	chan.c	FUNCTION_6	FOR_1
0x4000265	          0x4989fc	                            mov r12, rdi	       248	chan.c	FUNCTION_6	FOR_1
0x4000268	          0x4189cd	                           mov r13d, ecx	       248	chan.c	FUNCTION_6	FOR_1
0x400026b	            0x89de	                            mov esi, ebx	       251	chan.c	FUNCTION_6	FOR_1	CALL_1
0x400026d	          0x4c89e7	                            mov rdi, r12	       251	chan.c	FUNCTION_6	FOR_1	CALL_1
0x4000270	      0xe800000000	                          call 0x4000275	       251	chan.c	FUNCTION_6	FOR_1	CALL_1
0x4000275	          0x4885c0	                           test rax, rax	       252	chan.c	FUNCTION_6	FOR_1	IF_1
0x4000278	            0x7415	                            je 0x400028f	       252	chan.c	FUNCTION_6	FOR_1	IF_1
0x400027a	        0xf6400808	                  test byte [rax + 8], 8	       252	chan.c	FUNCTION_6	FOR_1	IF_1
0x400027e	            0x740f	                            je 0x400028f	       252	chan.c	FUNCTION_6	FOR_1	IF_1
0x4000280	    0x488b15000000	            mov rdx, qword [0x04000287] 	       256	chan.c	FUNCTION_6	FOR_1
0x4000287	        0x44896828	            mov dword [rax + 0x28], r13d	       255	chan.c	FUNCTION_6	FOR_1
0x400028b	        0x48895030	             mov qword [rax + 0x30], rdx	       256	chan.c	FUNCTION_6	FOR_1
0x400028f	          0x83c314	                           add ebx, 0x14	       250	chan.c	FUNCTION_6	FOR_1
0x4000292	            0x39eb	                            cmp ebx, ebp	       248	chan.c	FUNCTION_6	FOR_1
0x4000294	            0x76d5	                           jbe 0x400026b	       248	chan.c	FUNCTION_6	FOR_1
0x4000296	              0x5b	                                 pop rbx	       258	chan.c	FUNCTION_6
0x4000297	              0x5d	                                 pop rbp	       258	chan.c	FUNCTION_6
0x4000298	            0x415c	                                 pop r12	       258	chan.c	FUNCTION_6
0x400029a	            0x415d	                                 pop r13	       258	chan.c	FUNCTION_6
0x400029c	              0xc3	                                     ret	       258	chan.c	FUNCTION_6
