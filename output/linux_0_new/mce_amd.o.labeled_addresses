k8_mc0_mce	WHILE,0:IF,1:SWITCH,0:ELSE,0:FOR,0:DO,0:CALL,3:functions,0	11
0x40006a0	            0x89f8	                            mov eax, edi	       338	mce_amd.c	FUNCTION_6	IF_1	CALL_1
0x40006a2	        0x662500f8	                          and ax, 0xf800	       338	mce_amd.c	FUNCTION_6	IF_1	CALL_1
0x40006a6	        0x663d0008	                           cmp ax, 0x800	       338	mce_amd.c	FUNCTION_6	IF_1	CALL_1
0x40006aa	            0x7409	                            je 0x40006b5	       338	mce_amd.c	FUNCTION_6	IF_1	CALL_1
0x40006ac	        0x400fb6f6	                          movzx esi, sil	       343	mce_amd.c	FUNCTION_6	CALL_3
0x40006b0	           0xfb7ff	                           movzx edi, di	       343	mce_amd.c	FUNCTION_6	CALL_3
0x40006b3	            0xebbb	                    jmp sym.f10h_mc0_mce	       343	mce_amd.c	FUNCTION_6	CALL_3
0x40006b5	    0x48c7c7000000	                              mov rdi, 0	       339	mce_amd.c	FUNCTION_6	IF_1	CALL_2
0x40006bc	      0xe800000000	                          call 0x40006c1	       339	mce_amd.c	FUNCTION_6	IF_1	CALL_2
0x40006c1	      0xb801000000	                              mov eax, 1	       344	mce_amd.c	FUNCTION_6
0x40006c6	              0xc3	                                     ret	       344	mce_amd.c	FUNCTION_6
amd_report_gart_errors	WHILE,0:IF,0:SWITCH,0:ELSE,0:FOR,0:DO,0:CALL,0:functions,0	2
0x4000040	    0x40883d000000	              mov byte [0x04000047], dil	        17	mce_amd.c	FUNCTION_1
0x4000047	              0xc3	                                     ret	        17	mce_amd.c	FUNCTION_1
cat_mc0_mce	WHILE,0:IF,4:SWITCH,2:ELSE,2:FOR,0:DO,0:CALL,15:functions,0	78
0x40001b0	            0x89f8	                            mov eax, edi	       348	mce_amd.c	FUNCTION_7	CALL_1
0x40001b2	              0x55	                                push rbp	       347	mce_amd.c	FUNCTION_7
0x40001b3	              0x53	                                push rbx	       347	mce_amd.c	FUNCTION_7
0x40001b4	        0x66c1e804	                               shr ax, 4	       348	mce_amd.c	FUNCTION_7	CALL_1
0x40001b8	            0x89c3	                            mov ebx, eax	       348	mce_amd.c	FUNCTION_7	CALL_1
0x40001ba	            0x89f8	                            mov eax, edi	       351	mce_amd.c	FUNCTION_7	IF_1	CALL_2
0x40001bc	            0x30c0	                              xor al, al	       351	mce_amd.c	FUNCTION_7	IF_1	CALL_2
0x40001be	          0x83e30f	                            and ebx, 0xf	       348	mce_amd.c	FUNCTION_7	CALL_1
0x40001c1	        0x663d0001	                           cmp ax, 0x100	       351	mce_amd.c	FUNCTION_7	IF_1	CALL_2
0x40001c5	            0x89f8	                            mov eax, edi	       353	mce_amd.c	FUNCTION_7	IF_1	IF_2	CALL_4
0x40001c7	            0x7456	                            je 0x400021f	       351	mce_amd.c	FUNCTION_7	IF_1	CALL_2
0x40001c9	        0x662500f8	                          and ax, 0xf800	       371	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	CALL_8
0x40001cd	            0x31ed	                            xor ebp, ebp	       354	mce_amd.c	FUNCTION_7	IF_1	IF_2
0x40001cf	        0x663d0008	                           cmp ax, 0x800	       371	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	CALL_8
0x40001d3	            0x7405	                            je 0x40001da	       371	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	CALL_8
0x40001d5	            0x89e8	                            mov eax, ebp	       396	mce_amd.c	FUNCTION_7
0x40001d7	              0x5b	                                 pop rbx	       396	mce_amd.c	FUNCTION_7
0x40001d8	              0x5d	                                 pop rbp	       396	mce_amd.c	FUNCTION_7
0x40001d9	              0xc3	                                     ret	       396	mce_amd.c	FUNCTION_7
0x40001da	        0x40f6c704	                             test dil, 4	       373	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	IF_4	CALL_11
0x40001de	            0x75f5	                           jne 0x40001d5	       373	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	IF_4	CALL_11
0x40001e0	          0x83e703	                              and edi, 3	       373	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	IF_4	CALL_11
0x40001e3	        0x6683ff03	                               cmp di, 3	       373	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	IF_4	CALL_11
0x40001e7	            0x75ec	                           jne 0x40001d5	       373	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	IF_4	CALL_11
0x40001e9	    0x48c7c7000000	                              mov rdi, 0	       376	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	CALL_12
0x40001f0	      0xe800000000	                          call 0x40001f5	       376	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	CALL_12
0x40001f5	          0x80fb03	                               cmp bl, 3	       378	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	SWITCH_2
0x40001f8	     0xf84c0000000	                            je 0x40002be	       378	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	SWITCH_2
0x40001fe	          0x80fb04	                               cmp bl, 4	       378	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	SWITCH_2
0x4000201	     0xf84a1000000	                            je 0x40002a8	       378	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	SWITCH_2
0x4000207	          0x80eb01	                               sub bl, 1	       378	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	SWITCH_2
0x400020a	            0x75c9	                           jne 0x40001d5	       378	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	SWITCH_2
0x400020c	    0x48c7c7000000	                              mov rdi, 0	       380	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	SWITCH_2	CALL_13
0x4000213	      0xbd01000000	                              mov ebp, 1	       349	mce_amd.c	FUNCTION_7
0x4000218	      0xe800000000	                          call 0x400021d	       380	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	SWITCH_2	CALL_13
0x400021d	            0xebb6	                           jmp 0x40001d5	       381	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	SWITCH_2
0x400021f	        0x66c1e802	                               shr ax, 2	       353	mce_amd.c	FUNCTION_7	IF_1	IF_2	CALL_4
0x4000223	            0x31ed	                            xor ebp, ebp	       354	mce_amd.c	FUNCTION_7	IF_1	IF_2
0x4000225	          0x83e003	                              and eax, 3	       353	mce_amd.c	FUNCTION_7	IF_1	IF_2	CALL_4
0x4000228	        0x6683f801	                               cmp ax, 1	       353	mce_amd.c	FUNCTION_7	IF_1	IF_2	CALL_4
0x400022c	            0x75a7	                           jne 0x40001d5	       353	mce_amd.c	FUNCTION_7	IF_1	IF_2	CALL_4
0x400022e	          0x83e703	                              and edi, 3	       353	mce_amd.c	FUNCTION_7	IF_1	IF_2	CALL_4
0x4000231	        0x6683ff01	                               cmp di, 1	       353	mce_amd.c	FUNCTION_7	IF_1	IF_2	CALL_4
0x4000235	            0x759e	                           jne 0x40001d5	       353	mce_amd.c	FUNCTION_7	IF_1	IF_2	CALL_4
0x4000237	          0x80fb07	                               cmp bl, 7	       356	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1
0x400023a	            0x7456	                            je 0x4000292	       356	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1
0x400023c	            0x7732	                            ja 0x4000270	       356	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1
0x400023e	          0x8d43fd	                      lea eax, [rbx - 3]	       356	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1
0x4000241	            0x3c01	                               cmp al, 1	       356	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1
0x4000243	            0x7746	                            ja 0x400028b	       356	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1
0x4000245	          0x80fb03	                               cmp bl, 3	       359	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1	CALL_5
0x4000248	    0x48c7c0000000	                              mov rax, 0	       359	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1	CALL_5
0x400024f	    0x48c7c6000000	                              mov rsi, 0	       359	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1	CALL_5
0x4000256	        0x480f44f0	                          cmove rsi, rax	       359	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1	CALL_5
0x400025a	    0x48c7c7000000	                              mov rdi, 0	       359	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1	CALL_5
0x4000261	      0xbd01000000	                              mov ebp, 1	       349	mce_amd.c	FUNCTION_7
0x4000266	      0xe800000000	                          call 0x400026b	       359	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1	CALL_5
0x400026b	      0xe965ffffff	                           jmp 0x40001d5	       361	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1
0x4000270	          0x80fb08	                               cmp bl, 8	       356	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1
0x4000273	            0x7516	                           jne 0x400028b	       356	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1
0x4000275	    0x48c7c7000000	                              mov rdi, 0	       366	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1	CALL_7
0x400027c	      0xbd01000000	                              mov ebp, 1	       349	mce_amd.c	FUNCTION_7
0x4000281	      0xe800000000	                          call 0x4000286	       366	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1	CALL_7
0x4000286	      0xe94affffff	                           jmp 0x40001d5	       367	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1
0x400028b	            0x31ed	                            xor ebp, ebp	       369	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1
0x400028d	      0xe943ffffff	                           jmp 0x40001d5	       369	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1
0x4000292	    0x48c7c7000000	                              mov rdi, 0	       363	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1	CALL_6
0x4000299	      0xbd01000000	                              mov ebp, 1	       349	mce_amd.c	FUNCTION_7
0x400029e	      0xe800000000	                          call 0x40002a3	       363	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1	CALL_6
0x40002a3	      0xe92dffffff	                           jmp 0x40001d5	       364	mce_amd.c	FUNCTION_7	IF_1	SWITCH_1
0x40002a8	    0x48c7c7000000	                              mov rdi, 0	       383	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	SWITCH_2	CALL_14
0x40002af	      0xbd01000000	                              mov ebp, 1	       349	mce_amd.c	FUNCTION_7
0x40002b4	      0xe800000000	                          call 0x40002b9	       383	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	SWITCH_2	CALL_14
0x40002b9	      0xe917ffffff	                           jmp 0x40001d5	       384	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	SWITCH_2
0x40002be	    0x48c7c7000000	                              mov rdi, 0	       386	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	SWITCH_2	CALL_15
0x40002c5	      0xbd01000000	                              mov ebp, 1	       349	mce_amd.c	FUNCTION_7
0x40002ca	      0xe800000000	                          call 0x40002cf	       386	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	SWITCH_2	CALL_15
0x40002cf	      0xe901ffffff	                           jmp 0x40001d5	       387	mce_amd.c	FUNCTION_7	ELSE_1	IF_3	SWITCH_2
amd_unregister_ecc_decoder	WHILE,0:IF,1:SWITCH,0:ELSE,0:FOR,0:DO,0:CALL,1:functions,0	9
0x4000060	    0x488b05000000	            mov rax, qword [0x04000067] 	        29	mce_amd.c	FUNCTION_3	IF_1
0x4000067	          0x4885c0	                           test rax, rax	        29	mce_amd.c	FUNCTION_3	IF_1
0x400006a	            0x7410	                            je 0x400007c	        29	mce_amd.c	FUNCTION_3	IF_1
0x400006c	          0x4839f8	                            cmp rax, rdi	        30	mce_amd.c	FUNCTION_3	IF_1	CALL_1
0x400006f	            0x750d	                           jne 0x400007e	        30	mce_amd.c	FUNCTION_3	IF_1	CALL_1
0x4000071	    0x48c705000000	               mov qword [0x0400007c], 0	        32	mce_amd.c	FUNCTION_3	IF_1
0x400007c	            0xf3c3	                                     ret	        32	mce_amd.c	FUNCTION_3	IF_1
0x400007e	             0xf0b	                                     ud2	        32	mce_amd.c	FUNCTION_3	IF_1
0x4000080	            0xebef	                           jmp 0x4000071	        30	mce_amd.c	FUNCTION_3	IF_1	CALL_1
amd_register_ecc_decoder	WHILE,0:IF,0:SWITCH,0:ELSE,0:FOR,0:DO,0:CALL,0:functions,0	2
0x4000050	    0x48893d000000	            mov qword [0x04000057], rdi 	        23	mce_amd.c	FUNCTION_2
0x4000057	              0xc3	                                     ret	        23	mce_amd.c	FUNCTION_2
f16h_mc2_mce	WHILE,0:IF,1:SWITCH,1:ELSE,0:FOR,0:DO,0:CALL,6:functions,0	64
0x4000090	            0x89fa	                            mov edx, edi	       670	mce_amd.c	ELSE_6	FUNCTION_16	IF_1	CALL_2
0x4000092	            0x31c0	                            xor eax, eax	       671	mce_amd.c	ELSE_6	FUNCTION_16	IF_1
0x4000094	            0x30d2	                              xor dl, dl	       670	mce_amd.c	ELSE_6	FUNCTION_16	IF_1	CALL_2
0x4000096	      0x6681fa0001	                           cmp dx, 0x100	       670	mce_amd.c	ELSE_6	FUNCTION_16	IF_1	CALL_2
0x400009b	            0x7402	                            je 0x400009f	       670	mce_amd.c	ELSE_6	FUNCTION_16	IF_1	CALL_2
0x400009d	            0xf3c3	                                     ret	       705	mce_amd.c	ELSE_6	FUNCTION_16
0x400009f	          0x8d46fc	                      lea eax, [rsi - 4]	       673	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x40000a2	        0x66c1ef04	                               shr di, 4	       668	mce_amd.c	ELSE_6	FUNCTION_16	CALL_1
0x40000a6	          0x83e70f	                            and edi, 0xf	       668	mce_amd.c	ELSE_6	FUNCTION_16	CALL_1
0x40000a9	            0x3c1b	                            cmp al, 0x1b	       673	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x40000ab	     0xf87d9000000	                            ja 0x400018a	       673	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x40000b1	           0xfb6c0	                           movzx eax, al	       673	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x40000b4	    0x488b04c50000	                  mov rax, qword [rax*8]	       673	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x40000bc	      0xe900000000	                           jmp 0x40000c1	       673	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x40000c1	        0x4080ff01	                              cmp dil, 1	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000c5	    0x48c7c6000000	                              mov rsi, 0	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000cc	            0x7415	                            je 0x40000e3	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000ce	          0x4084ff	                           test dil, dil	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000d1	    0x48c7c6000000	                              mov rsi, 0	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000d8	    0x48c7c0000000	                              mov rax, 0	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000df	        0x480f44f0	                          cmove rsi, rax	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000e3	    0x48c7c7000000	                              mov rdi, 0	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000ea	      0xe800000000	                          call 0x40000ef	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000ef	      0xb801000000	                              mov eax, 1	       704	mce_amd.c	ELSE_6	FUNCTION_16
0x40000f4	              0xc3	                                     ret	       698	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x40000f5	        0x4080ff01	                              cmp dil, 1	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x40000f9	     0xf848e000000	                            je 0x400018d	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x40000ff	          0x4084ff	                           test dil, dil	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x4000102	    0x48c7c6000000	                              mov rsi, 0	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x4000109	            0x7416	                            je 0x4000121	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x400010b	        0x4080ff07	                              cmp dil, 7	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x400010f	    0x48c7c6000000	                              mov rsi, 0	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x4000116	    0x48c7c0000000	                              mov rax, 0	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x400011d	        0x480f45f0	                         cmovne rsi, rax	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x4000121	    0x48c7c7000000	                              mov rdi, 0	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x4000128	      0xe800000000	                          call 0x400012d	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x400012d	      0xb801000000	                              mov eax, 1	       704	mce_amd.c	ELSE_6	FUNCTION_16
0x4000132	              0xc3	                                     ret	       691	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x4000133	          0x4084ff	                           test dil, dil	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x4000136	    0x48c7c6000000	                              mov rsi, 0	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x400013d	            0x7416	                            je 0x4000155	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x400013f	        0x4080ff08	                              cmp dil, 8	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x4000143	    0x48c7c6000000	                              mov rsi, 0	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x400014a	    0x48c7c0000000	                              mov rax, 0	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x4000151	        0x480f44f0	                          cmove rsi, rax	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x4000155	    0x48c7c7000000	                              mov rdi, 0	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x400015c	      0xe800000000	                          call 0x4000161	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x4000161	      0xb801000000	                              mov eax, 1	       704	mce_amd.c	ELSE_6	FUNCTION_16
0x4000166	              0xc3	                                     ret	       683	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x4000167	        0x4080ff01	                              cmp dil, 1	       675	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_3
0x400016b	      0xb849000000	                           mov eax, 0x49	       675	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_3
0x4000170	      0xbe4f000000	                           mov esi, 0x4f	       675	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_3
0x4000175	           0xf44f0	                          cmove esi, eax	       675	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_3
0x4000178	    0x48c7c7000000	                              mov rdi, 0	       675	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_3
0x400017f	      0xe800000000	                          call 0x4000184	       675	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_3
0x4000184	      0xb801000000	                              mov eax, 1	       704	mce_amd.c	ELSE_6	FUNCTION_16
0x4000189	              0xc3	                                     ret	       676	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x400018a	            0x31c0	                            xor eax, eax	       701	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x400018c	              0xc3	                                     ret	       705	mce_amd.c	ELSE_6	FUNCTION_16
0x400018d	          0x83e603	                              and esi, 3	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x4000190	    0x48c7c0000000	                              mov rax, 0	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x4000197	    0x48c7c6000000	                              mov rsi, 0	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x400019e	        0x480f45f0	                         cmovne rsi, rax	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x40001a2	      0xe97affffff	                           jmp 0x4000121	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
mce_amd_init	WHILE,0:IF,3:SWITCH,1:ELSE,0:FOR,0:DO,0:CALL,7:functions,0	92
0x4000040	    0x40883d000000	              mov byte [0x04000047], dil	        17	mce_amd.c	FUNCTION_1
0x4000047	              0xc3	                                     ret	        17	mce_amd.c	FUNCTION_1
0x4000048	     0xf1f84000000	                   nop dword [rax + rax]	        17	mce_amd.c	FUNCTION_1
0x4000050	    0x48893d000000	            mov qword [0x04000057], rdi 	        23	mce_amd.c	FUNCTION_2
0x4000057	              0xc3	                                     ret	        23	mce_amd.c	FUNCTION_2
0x4000058	     0xf1f84000000	                   nop dword [rax + rax]	        23	mce_amd.c	FUNCTION_2
0x4000060	    0x488b05000000	            mov rax, qword [0x04000067] 	        29	mce_amd.c	FUNCTION_3	IF_1
0x4000067	          0x4885c0	                           test rax, rax	        29	mce_amd.c	FUNCTION_3	IF_1
0x400006a	            0x7410	                            je 0x400007c	        29	mce_amd.c	FUNCTION_3	IF_1
0x400006c	          0x4839f8	                            cmp rax, rdi	        30	mce_amd.c	FUNCTION_3	IF_1	CALL_1
0x400006f	            0x750d	                           jne 0x400007e	        30	mce_amd.c	FUNCTION_3	IF_1	CALL_1
0x4000071	    0x48c705000000	               mov qword [0x0400007c], 0	        32	mce_amd.c	FUNCTION_3	IF_1
0x400007c	            0xf3c3	                                     ret	        32	mce_amd.c	FUNCTION_3	IF_1
0x400007e	             0xf0b	                                     ud2	        32	mce_amd.c	FUNCTION_3	IF_1
0x4000080	            0xebef	                           jmp 0x4000071	        30	mce_amd.c	FUNCTION_3	IF_1	CALL_1
0x4000082	         0xf1f4000	                         nop dword [rax]	        30	mce_amd.c	FUNCTION_3	IF_1	CALL_1
0x4000086	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        30	mce_amd.c	FUNCTION_3	IF_1	CALL_1
0x4000090	            0x89fa	                            mov edx, edi	       670	mce_amd.c	ELSE_6	FUNCTION_16	IF_1	CALL_2
0x4000092	            0x31c0	                            xor eax, eax	       671	mce_amd.c	ELSE_6	FUNCTION_16	IF_1
0x4000094	            0x30d2	                              xor dl, dl	       670	mce_amd.c	ELSE_6	FUNCTION_16	IF_1	CALL_2
0x4000096	      0x6681fa0001	                           cmp dx, 0x100	       670	mce_amd.c	ELSE_6	FUNCTION_16	IF_1	CALL_2
0x400009b	            0x7402	                            je 0x400009f	       670	mce_amd.c	ELSE_6	FUNCTION_16	IF_1	CALL_2
0x400009d	            0xf3c3	                                     ret	       705	mce_amd.c	ELSE_6	FUNCTION_16
0x400009f	          0x8d46fc	                      lea eax, [rsi - 4]	       673	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x40000a2	        0x66c1ef04	                               shr di, 4	       668	mce_amd.c	ELSE_6	FUNCTION_16	CALL_1
0x40000a6	          0x83e70f	                            and edi, 0xf	       668	mce_amd.c	ELSE_6	FUNCTION_16	CALL_1
0x40000a9	            0x3c1b	                            cmp al, 0x1b	       673	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x40000ab	     0xf87d9000000	                            ja 0x400018a	       673	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x40000b1	           0xfb6c0	                           movzx eax, al	       673	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x40000b4	    0x488b04c50000	                  mov rax, qword [rax*8]	       673	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x40000bc	      0xe900000000	                           jmp 0x40000c1	       673	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x40000c1	        0x4080ff01	                              cmp dil, 1	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000c5	    0x48c7c6000000	                              mov rsi, 0	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000cc	            0x7415	                            je 0x40000e3	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000ce	          0x4084ff	                           test dil, dil	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000d1	    0x48c7c6000000	                              mov rsi, 0	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000d8	    0x48c7c0000000	                              mov rax, 0	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000df	        0x480f44f0	                          cmove rsi, rax	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000e3	    0x48c7c7000000	                              mov rdi, 0	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000ea	      0xe800000000	                          call 0x40000ef	       695	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_6
0x40000ef	      0xb801000000	                              mov eax, 1	       704	mce_amd.c	ELSE_6	FUNCTION_16
0x40000f4	              0xc3	                                     ret	       698	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x40000f5	        0x4080ff01	                              cmp dil, 1	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x40000f9	     0xf848e000000	                            je 0x400018d	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x40000ff	          0x4084ff	                           test dil, dil	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x4000102	    0x48c7c6000000	                              mov rsi, 0	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x4000109	            0x7416	                            je 0x4000121	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x400010b	        0x4080ff07	                              cmp dil, 7	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x400010f	    0x48c7c6000000	                              mov rsi, 0	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x4000116	    0x48c7c0000000	                              mov rax, 0	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x400011d	        0x480f45f0	                         cmovne rsi, rax	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x4000121	    0x48c7c7000000	                              mov rdi, 0	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x4000128	      0xe800000000	                          call 0x400012d	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x400012d	      0xb801000000	                              mov eax, 1	       704	mce_amd.c	ELSE_6	FUNCTION_16
0x4000132	              0xc3	                                     ret	       691	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x4000133	          0x4084ff	                           test dil, dil	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x4000136	    0x48c7c6000000	                              mov rsi, 0	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x400013d	            0x7416	                            je 0x4000155	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x400013f	        0x4080ff08	                              cmp dil, 8	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x4000143	    0x48c7c6000000	                              mov rsi, 0	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x400014a	    0x48c7c0000000	                              mov rax, 0	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x4000151	        0x480f44f0	                          cmove rsi, rax	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x4000155	    0x48c7c7000000	                              mov rdi, 0	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x400015c	      0xe800000000	                          call 0x4000161	       680	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_4
0x4000161	      0xb801000000	                              mov eax, 1	       704	mce_amd.c	ELSE_6	FUNCTION_16
0x4000166	              0xc3	                                     ret	       683	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x4000167	        0x4080ff01	                              cmp dil, 1	       675	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_3
0x400016b	      0xb849000000	                           mov eax, 0x49	       675	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_3
0x4000170	      0xbe4f000000	                           mov esi, 0x4f	       675	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_3
0x4000175	           0xf44f0	                          cmove esi, eax	       675	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_3
0x4000178	    0x48c7c7000000	                              mov rdi, 0	       675	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_3
0x400017f	      0xe800000000	                          call 0x4000184	       675	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_3
0x4000184	      0xb801000000	                              mov eax, 1	       704	mce_amd.c	ELSE_6	FUNCTION_16
0x4000189	              0xc3	                                     ret	       676	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x400018a	            0x31c0	                            xor eax, eax	       701	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1
0x400018c	              0xc3	                                     ret	       705	mce_amd.c	ELSE_6	FUNCTION_16
0x400018d	          0x83e603	                              and esi, 3	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x4000190	    0x48c7c0000000	                              mov rax, 0	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x4000197	    0x48c7c6000000	                              mov rsi, 0	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x400019e	        0x480f45f0	                         cmovne rsi, rax	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x40001a2	      0xe97affffff	                           jmp 0x4000121	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x40001a7	    0x660f1f840000	                    nop word [rax + rax]	       687	mce_amd.c	ELSE_6	FUNCTION_16	SWITCH_1	CALL_5
0x40001b0	            0x89f8	                            mov eax, edi	       348	mce_amd.c	FUNCTION_7	CALL_1
0x40001b2	              0x55	                                push rbp	       347	mce_amd.c	FUNCTION_7
0x40001b3	              0x53	                                push rbx	       347	mce_amd.c	FUNCTION_7
0x40001b4	        0x66c1e804	                               shr ax, 4	       348	mce_amd.c	FUNCTION_7	CALL_1
0x40001b8	            0x89c3	                            mov ebx, eax	       348	mce_amd.c	FUNCTION_7	CALL_1
0x40001ba	            0x89f8	                            mov eax, edi	       351	mce_amd.c	FUNCTION_7	IF_1	CALL_2
0x40001bc	            0x30c0	                              xor al, al	       351	mce_amd.c	FUNCTION_7	IF_1	CALL_2
0x40001be	          0x83e30f	                            and ebx, 0xf	       348	mce_amd.c	FUNCTION_7	CALL_1
0x40001c1	              0x66	                                 invalid	       351	mce_amd.c	FUNCTION_7	IF_1	CALL_2
0x40001c2	              0x3d	                                 invalid	       351	mce_amd.c	FUNCTION_7	IF_1	CALL_2
f10h_mc0_mce	WHILE,0:IF,1:SWITCH,0:ELSE,0:FOR,0:DO,0:CALL,4:functions,0	13
0x4000670	        0x40f6c7f0	                          test dil, 0xf0	       329	mce_amd.c	ELSE_2	FUNCTION_5	IF_1	CALL_2
0x4000674	            0x750b	                           jne 0x4000681	       329	mce_amd.c	ELSE_2	FUNCTION_5	IF_1	CALL_2
0x4000676	            0x89f8	                            mov eax, edi	       329	mce_amd.c	ELSE_2	FUNCTION_5	IF_1	CALL_2
0x4000678	          0x83e003	                              and eax, 3	       329	mce_amd.c	ELSE_2	FUNCTION_5	IF_1	CALL_2
0x400067b	        0x6683f801	                               cmp ax, 1	       329	mce_amd.c	ELSE_2	FUNCTION_5	IF_1	CALL_2
0x400067f	            0x740c	                            je 0x400068d	       329	mce_amd.c	ELSE_2	FUNCTION_5	IF_1	CALL_2
0x4000681	        0x400fb6f6	                          movzx esi, sil	       333	mce_amd.c	ELSE_2	FUNCTION_5	CALL_4
0x4000685	           0xfb7ff	                           movzx edi, di	       333	mce_amd.c	ELSE_2	FUNCTION_5	CALL_4
0x4000688	      0xe973ffffff	                    jmp sym.f12h_mc0_mce	       333	mce_amd.c	ELSE_2	FUNCTION_5	CALL_4
0x400068d	    0x48c7c7000000	                              mov rdi, 0	       330	mce_amd.c	ELSE_2	FUNCTION_5	IF_1	CALL_3
0x4000694	      0xe800000000	                          call 0x4000699	       330	mce_amd.c	ELSE_2	FUNCTION_5	IF_1	CALL_3
0x4000699	      0xb801000000	                              mov eax, 1	       334	mce_amd.c	ELSE_2	FUNCTION_5
0x400069e	              0xc3	                                     ret	       334	mce_amd.c	ELSE_2	FUNCTION_5
