call_refreshresult	ELSE,0:functions,0:SWITCH,1:CALL,5:FOR,0:DO,0:IF,2:WHILE,0	43
0x4000f90	              0x53	                                push rbx	      1618	clnt.c	FUNCTION_62
0x4000f91	          0x8b7704	                mov esi, dword [rdi + 4]	      1619	clnt.c	FUNCTION_62
0x4000f94	          0x4889fb	                            mov rbx, rdi	      1618	clnt.c	FUNCTION_62
0x4000f97	    0xc74704000000	                  mov dword [rdi + 4], 0	      1623	clnt.c	FUNCTION_62
0x4000f9e	    0x48c747200000	               mov qword [rdi + 0x20], 0	      1624	clnt.c	FUNCTION_62
0x4000fa6	          0x83fe92	             cmp esi, 0xffffffffffffff92	      1625	clnt.c	FUNCTION_62	SWITCH_1
0x4000fa9	            0x7414	                            je 0x4000fbf	      1625	clnt.c	FUNCTION_62	SWITCH_1
0x4000fab	            0x7e53	                           jle 0x4001000	      1625	clnt.c	FUNCTION_62	SWITCH_1
0x4000fad	          0x83fef5	             cmp esi, 0xfffffffffffffff5	      1625	clnt.c	FUNCTION_62	SWITCH_1
0x4000fb0	            0x741a	                            je 0x4000fcc	      1625	clnt.c	FUNCTION_62	SWITCH_1
0x4000fb2	            0x85f6	                           test esi, esi	      1625	clnt.c	FUNCTION_62	SWITCH_1
0x4000fb4	            0x7526	                           jne 0x4000fdc	      1625	clnt.c	FUNCTION_62	SWITCH_1
0x4000fb6	      0xe800000000	                          call 0x4000fbb	      1627	clnt.c	FUNCTION_62	SWITCH_1	IF_1	CALL_1
0x4000fbb	            0x85c0	                           test eax, eax	      1627	clnt.c	FUNCTION_62	SWITCH_1	IF_1	CALL_1
0x4000fbd	            0x754f	                           jne 0x400100e	      1627	clnt.c	FUNCTION_62	SWITCH_1	IF_1	CALL_1
0x4000fbf	      0xbeb80b0000	                          mov esi, 0xbb8	      1636	clnt.c	FUNCTION_62	SWITCH_1	CALL_2
0x4000fc4	          0x4889df	                            mov rdi, rbx	      1636	clnt.c	FUNCTION_62	SWITCH_1	CALL_2
0x4000fc7	      0xe800000000	                          call 0x4000fcc	      1636	clnt.c	FUNCTION_62	SWITCH_1	CALL_2
0x4000fcc	      0xbef3ffffff	                     mov esi, 0xfffffff3	      1639	clnt.c	FUNCTION_62	SWITCH_1
0x4000fd1	     0xfb683da0000	           movzx eax, byte [rbx + 0xda] 	      1642	clnt.c	FUNCTION_62	SWITCH_1	IF_2
0x4000fd8	            0xa830	                           test al, 0x30	      1642	clnt.c	FUNCTION_62	SWITCH_1	IF_2
0x4000fda	            0x7509	                           jne 0x4000fe5	      1642	clnt.c	FUNCTION_62	SWITCH_1	IF_2
0x4000fdc	          0x4889df	                            mov rdi, rbx	      1651	clnt.c	FUNCTION_62	CALL_5
0x4000fdf	              0x5b	                                 pop rbx	      1652	clnt.c	FUNCTION_62
0x4000fe0	      0xe900000000	                           jmp 0x4000fe5	      1651	clnt.c	FUNCTION_62	CALL_5
0x4000fe5	            0x89c2	                            mov edx, eax	      1644	clnt.c	FUNCTION_62	SWITCH_1
0x4000fe7	          0x83e0cf	                     and eax, 0xffffffcf	      1644	clnt.c	FUNCTION_62	SWITCH_1
0x4000fea	          0xc0ea04	                               shr dl, 4	      1644	clnt.c	FUNCTION_62	SWITCH_1
0x4000fed	          0x83c203	                              add edx, 3	      1644	clnt.c	FUNCTION_62	SWITCH_1
0x4000ff0	          0x83e203	                              and edx, 3	      1644	clnt.c	FUNCTION_62	SWITCH_1
0x4000ff3	          0xc1e204	                              shl edx, 4	      1644	clnt.c	FUNCTION_62	SWITCH_1
0x4000ff6	             0x9d0	                             or eax, edx	      1644	clnt.c	FUNCTION_62	SWITCH_1
0x4000ff8	    0x8883da000000	               mov byte [rbx + 0xda], al	      1644	clnt.c	FUNCTION_62	SWITCH_1
0x4000ffe	              0x5b	                                 pop rbx	      1652	clnt.c	FUNCTION_62
0x4000fff	              0xc3	                                     ret	      1652	clnt.c	FUNCTION_62
0x4001000	          0x83fe81	             cmp esi, 0xffffffffffffff81	      1625	clnt.c	FUNCTION_62	SWITCH_1
0x4001003	            0x74cc	                            je 0x4000fd1	      1625	clnt.c	FUNCTION_62	SWITCH_1
0x4001005	          0x4889df	                            mov rdi, rbx	      1651	clnt.c	FUNCTION_62	CALL_5
0x4001008	              0x5b	                                 pop rbx	      1652	clnt.c	FUNCTION_62
0x4001009	      0xe900000000	                           jmp 0x400100e	      1651	clnt.c	FUNCTION_62	CALL_5
0x400100e	    0x48c743200000	               mov qword [rbx + 0x20], 0	      1628	clnt.c	FUNCTION_62	SWITCH_1	IF_1
0x4001016	              0x5b	                                 pop rbx	      1652	clnt.c	FUNCTION_62
0x4001017	              0xc3	                                     ret	      1652	clnt.c	FUNCTION_62
rpc_setup_pipedir_sb	ELSE,0:functions,0:SWITCH,0:CALL,9:FOR,1:DO,0:IF,3:WHILE,0	57
0x40002a0	            0x4155	                                push r13	       122	clnt.c	FUNCTION_5
0x40002a2	            0x4154	                                push r12	       122	clnt.c	FUNCTION_5
0x40002a4	          0x4989f4	                            mov r12, rsi	       122	clnt.c	FUNCTION_5
0x40002a7	              0x55	                                push rbp	       122	clnt.c	FUNCTION_5
0x40002a8	              0x53	                                push rbx	       122	clnt.c	FUNCTION_5
0x40002a9	        0x4883ec18	                           sub rsp, 0x18	       122	clnt.c	FUNCTION_5
0x40002ad	    0x65488b042528	                mov rax, qword gs:[0x28]	       122	clnt.c	FUNCTION_5
0x40002b6	      0x4889442410	             mov qword [rsp + 0x10], rax	       122	clnt.c	FUNCTION_5
0x40002bb	            0x31c0	                            xor eax, eax	       122	clnt.c	FUNCTION_5
0x40002bd	    0x488b86800100	           mov rax, qword [rsi + 0x180] 	       124	clnt.c	FUNCTION_5
0x40002c4	        0x4c8b6820	            mov r13, qword [rax + 0x20] 	       124	clnt.c	FUNCTION_5
0x40002c8	          0x4c89ee	                            mov rsi, r13	       128	clnt.c	FUNCTION_5	CALL_1
0x40002cb	      0xe800000000	                          call 0x40002d0	       128	clnt.c	FUNCTION_5	CALL_1
0x40002d0	          0x4885c0	                           test rax, rax	       129	clnt.c	FUNCTION_5	IF_1
0x40002d3	     0xf848d000000	                            je 0x4000366	       129	clnt.c	FUNCTION_5	IF_1
0x40002d9	          0x4889c5	                            mov rbp, rax	       129	clnt.c	FUNCTION_5	IF_1
0x40002dc	    0x8b0d00000000	            mov ecx, dword [0x040002e2] 	       134	clnt.c	FUNCTION_5	FOR_1	CALL_3
0x40002e2	      0x488d7c2401	                      lea rdi, [rsp + 1]	       134	clnt.c	FUNCTION_5	FOR_1	CALL_3
0x40002e7	    0x48c7c2000000	                              mov rdx, 0	       134	clnt.c	FUNCTION_5	FOR_1	CALL_3
0x40002ee	      0xbe0f000000	                            mov esi, 0xf	       134	clnt.c	FUNCTION_5	FOR_1	CALL_3
0x40002f3	          0x8d4101	                      lea eax, [rcx + 1]	       134	clnt.c	FUNCTION_5	FOR_1	CALL_3
0x40002f6	    0x890500000000	            mov dword [0x040002fc], eax 	       134	clnt.c	FUNCTION_5	FOR_1	CALL_3
0x40002fc	      0xe800000000	                          call 0x4000301	       134	clnt.c	FUNCTION_5	FOR_1	CALL_3
0x4000301	      0x488d742401	                      lea rsi, [rsp + 1]	       136	clnt.c	FUNCTION_5	FOR_1	CALL_4
0x4000306	          0x4c89e2	                            mov rdx, r12	       136	clnt.c	FUNCTION_5	FOR_1	CALL_4
0x4000309	          0x4889ef	                            mov rdi, rbp	       136	clnt.c	FUNCTION_5	FOR_1	CALL_4
0x400030c	      0xc644240f00	                 mov byte [rsp + 0xf], 0	       135	clnt.c	FUNCTION_5	FOR_1
0x4000311	      0xe800000000	                          call 0x4000316	       136	clnt.c	FUNCTION_5	FOR_1	CALL_4
0x4000316	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       137	clnt.c	FUNCTION_5	FOR_1	IF_2	CALL_5
0x400031c	          0x4889c3	                            mov rbx, rax	       136	clnt.c	FUNCTION_5	FOR_1	CALL_4
0x400031f	            0x7726	                            ja 0x4000347	       137	clnt.c	FUNCTION_5	FOR_1	IF_2	CALL_5
0x4000321	          0x4889ef	                            mov rdi, rbp	       146	clnt.c	FUNCTION_5	CALL_9
0x4000324	      0xe800000000	                          call 0x4000329	       146	clnt.c	FUNCTION_5	CALL_9
0x4000329	          0x4889d8	                            mov rax, rbx	       147	clnt.c	FUNCTION_5
0x400032c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       148	clnt.c	FUNCTION_5
0x4000331	    0x654833142528	                xor rdx, qword gs:[0x28]	       148	clnt.c	FUNCTION_5
0x400033a	            0x753d	                           jne 0x4000379	       148	clnt.c	FUNCTION_5
0x400033c	        0x4883c418	                           add rsp, 0x18	       148	clnt.c	FUNCTION_5
0x4000340	              0x5b	                                 pop rbx	       148	clnt.c	FUNCTION_5
0x4000341	              0x5d	                                 pop rbp	       148	clnt.c	FUNCTION_5
0x4000342	            0x415c	                                 pop r12	       148	clnt.c	FUNCTION_5
0x4000344	            0x415d	                                 pop r13	       148	clnt.c	FUNCTION_5
0x4000346	              0xc3	                                     ret	       148	clnt.c	FUNCTION_5
0x4000347	        0x4883f8ef	             cmp rax, 0xffffffffffffffef	       139	clnt.c	FUNCTION_5	FOR_1	IF_3	CALL_6
0x400034b	            0x748f	                            je 0x40002dc	       139	clnt.c	FUNCTION_5	FOR_1	IF_3	CALL_6
0x400034d	      0x488d542401	                      lea rdx, [rsp + 1]	       141	clnt.c	FUNCTION_5	FOR_1	CALL_7
0x4000352	          0x4889c1	                            mov rcx, rax	       141	clnt.c	FUNCTION_5	FOR_1	CALL_7
0x4000355	          0x4c89ee	                            mov rsi, r13	       141	clnt.c	FUNCTION_5	FOR_1	CALL_7
0x4000358	    0x48c7c7000000	                              mov rdi, 0	       141	clnt.c	FUNCTION_5	FOR_1	CALL_7
0x400035f	      0xe800000000	                          call 0x4000364	       141	clnt.c	FUNCTION_5	FOR_1	CALL_7
0x4000364	            0xebbb	                           jmp 0x4000321	       144	clnt.c	FUNCTION_5	FOR_1
0x4000366	          0x4c89ee	                            mov rsi, r13	       130	clnt.c	FUNCTION_5	IF_1	CALL_2
0x4000369	    0x48c7c7000000	                              mov rdi, 0	       130	clnt.c	FUNCTION_5	IF_1	CALL_2
0x4000370	      0xe800000000	                          call 0x4000375	       130	clnt.c	FUNCTION_5	IF_1	CALL_2
0x4000375	            0x31c0	                            xor eax, eax	       131	clnt.c	FUNCTION_5	IF_1
0x4000377	            0xebb3	                           jmp 0x400032c	       131	clnt.c	FUNCTION_5	IF_1
0x4000379	      0xe800000000	                          call 0x400037e	       148	clnt.c	FUNCTION_5
rpcproc_encode_null	ELSE,0:functions,0:SWITCH,0:CALL,0:FOR,0:DO,0:IF,0:WHILE,0	1
0x4000250	            0xf3c3	                                     ret	      2492	clnt.c	FUNCTION_79
rpc_cleanup_clids	ELSE,0:functions,0:SWITCH,0:CALL,1:FOR,0:DO,0:IF,0:WHILE,0	2
0x4002c70	    0x48c7c7000000	                              mov rdi, 0	       341	clnt.c	FUNCTION_17	CALL_1
0x4002c77	      0xe900000000	                           jmp 0x4002c7c	       341	clnt.c	FUNCTION_17	CALL_1
rpc_call_null_helper	ELSE,0:functions,0:SWITCH,0:CALL,1:FOR,0:DO,0:IF,0:WHILE,0	31
0x4000b70	        0x4883ec68	                           sub rsp, 0x68	      2522	clnt.c	FUNCTION_82
0x4000b74	          0x4989fb	                            mov r11, rdi	      2522	clnt.c	FUNCTION_82
0x4000b77	          0x4189ca	                           mov r10d, ecx	      2522	clnt.c	FUNCTION_82
0x4000b7a	      0x4889542418	             mov qword [rsp + 0x18], rdx	      2523	clnt.c	FUNCTION_82
0x4000b7f	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2527	clnt.c	FUNCTION_82
0x4000b84	      0xb908000000	                              mov ecx, 8	      2527	clnt.c	FUNCTION_82
0x4000b89	    0x65488b042528	                mov rax, qword gs:[0x28]	      2522	clnt.c	FUNCTION_82
0x4000b92	      0x4889442460	             mov qword [rsp + 0x60], rax	      2522	clnt.c	FUNCTION_82
0x4000b97	            0x31c0	                            xor eax, eax	      2522	clnt.c	FUNCTION_82
0x4000b99	          0x4889d7	                            mov rdi, rdx	      2527	clnt.c	FUNCTION_82
0x4000b9c	          0x4d85c0	                             test r8, r8	      2531	clnt.c	FUNCTION_82
0x4000b9f	    0x48c744240800	                  mov qword [rsp + 8], 0	      2523	clnt.c	FUNCTION_82
0x4000ba8	          0xf348ab	              rep stosq qword [rdi], rax	      2527	clnt.c	FUNCTION_82
0x4000bab	    0x48c7c0000000	                              mov rax, 0	      2531	clnt.c	FUNCTION_82
0x4000bb2	          0x4889d7	                            mov rdi, rdx	      2536	clnt.c	FUNCTION_82	CALL_1
0x4000bb5	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2523	clnt.c	FUNCTION_82
0x4000bbe	        0x4c0f44c0	                           cmove r8, rax	      2531	clnt.c	FUNCTION_82
0x4000bc2	    0x48c704240000	                      mov qword [rsp], 0	      2523	clnt.c	FUNCTION_82
0x4000bca	      0x4c895c2428	             mov qword [rsp + 0x28], r11	      2527	clnt.c	FUNCTION_82
0x4000bcf	      0x4889742430	             mov qword [rsp + 0x30], rsi	      2527	clnt.c	FUNCTION_82
0x4000bd4	      0x4889642438	             mov qword [rsp + 0x38], rsp	      2527	clnt.c	FUNCTION_82
0x4000bd9	      0x4c89442440	              mov qword [rsp + 0x40], r8	      2527	clnt.c	FUNCTION_82
0x4000bde	      0x4c894c2448	              mov qword [rsp + 0x48], r9	      2527	clnt.c	FUNCTION_82
0x4000be3	    0x664489542458	             mov word [rsp + 0x58], r10w	      2527	clnt.c	FUNCTION_82
0x4000be9	      0xe800000000	                          call 0x4000bee	      2536	clnt.c	FUNCTION_82	CALL_1
0x4000bee	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	      2537	clnt.c	FUNCTION_82
0x4000bf3	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      2537	clnt.c	FUNCTION_82
0x4000bfc	            0x7505	                           jne 0x4000c03	      2537	clnt.c	FUNCTION_82
0x4000bfe	        0x4883c468	                           add rsp, 0x68	      2537	clnt.c	FUNCTION_82
0x4000c02	              0xc3	                                     ret	      2537	clnt.c	FUNCTION_82
0x4000c03	      0xe800000000	                          call 0x4000c08	      2537	clnt.c	FUNCTION_82
rpc_cb_add_xprt_release	ELSE,0:functions,0:SWITCH,0:CALL,3:FOR,0:DO,0:IF,0:WHILE,0	9
0x40003c0	              0x53	                                push rbx	      2559	clnt.c	FUNCTION_85
0x40003c1	          0x4889fb	                            mov rbx, rdi	      2559	clnt.c	FUNCTION_85
0x40003c4	        0x488b7f08	                mov rdi, qword [rdi + 8]	      2562	clnt.c	FUNCTION_85	CALL_1
0x40003c8	      0xe800000000	                          call 0x40003cd	      2562	clnt.c	FUNCTION_85	CALL_1
0x40003cd	          0x488b3b	                    mov rdi, qword [rbx]	      2563	clnt.c	FUNCTION_85	CALL_2
0x40003d0	      0xe800000000	                          call 0x40003d5	      2563	clnt.c	FUNCTION_85	CALL_2
0x40003d5	          0x4889df	                            mov rdi, rbx	      2564	clnt.c	FUNCTION_85	CALL_3
0x40003d8	              0x5b	                                 pop rbx	      2565	clnt.c	FUNCTION_85
0x40003d9	      0xe900000000	                           jmp 0x40003de	      2564	clnt.c	FUNCTION_85	CALL_3
rpc_clients_notifier_unregister	ELSE,0:functions,0:SWITCH,0:CALL,1:FOR,0:DO,0:IF,0:WHILE,0	2
0x4002c60	    0x48c7c7000000	                              mov rdi, 0	       263	clnt.c	FUNCTION_13	CALL_1
0x4002c67	      0xe900000000	                           jmp 0x4002c6c	       263	clnt.c	FUNCTION_13	CALL_1
call_decode	ELSE,0:functions,0:SWITCH,0:CALL,12:FOR,0:DO,0:IF,9:WHILE,0	231
0x4001020	            0x4156	                                push r14	      2243	clnt.c	FUNCTION_76
0x4001022	            0x4155	                                push r13	      2243	clnt.c	FUNCTION_76
0x4001024	            0x4154	                                push r12	      2243	clnt.c	FUNCTION_76
0x4001026	              0x55	                                push rbp	      2243	clnt.c	FUNCTION_76
0x4001027	              0x53	                                push rbx	      2243	clnt.c	FUNCTION_76
0x4001028	        0x488b4778	            mov rax, qword [rdi + 0x78] 	      2246	clnt.c	FUNCTION_76
0x400102c	          0x4889fb	                            mov rbx, rdi	      2243	clnt.c	FUNCTION_76
0x400102f	    0x488bafb80000	            mov rbp, qword [rdi + 0xb8] 	      2245	clnt.c	FUNCTION_76
0x4001036	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	      2246	clnt.c	FUNCTION_76
0x400103a	     0xfb787d40000	           movzx eax, word [rdi + 0xd4] 	      2251	clnt.c	FUNCTION_76	IF_1
0x4001041	            0xa820	                           test al, 0x20	      2251	clnt.c	FUNCTION_76	IF_1
0x4001043	            0x741b	                            je 0x4001060	      2251	clnt.c	FUNCTION_76	IF_1
0x4001045	    0x488b8fa80000	            mov rcx, qword [rdi + 0xa8] 	      2244	clnt.c	FUNCTION_76
0x400104c	        0xf6416810	           test byte [rcx + 0x68], 0x10 	      2252	clnt.c	FUNCTION_76	IF_1	IF_2
0x4001050	     0xf85a1010000	                           jne 0x40011f7	      2252	clnt.c	FUNCTION_76	IF_1	IF_2
0x4001056	          0x83e0df	                     and eax, 0xffffffdf	      2257	clnt.c	FUNCTION_76	IF_1
0x4001059	    0x668983d40000	               mov word [rbx + 0xd4], ax	      2257	clnt.c	FUNCTION_76	IF_1
0x4001060	    0x448ba5380100	          mov r12d, dword [rbp + 0x138] 	      2265	clnt.c	FUNCTION_76
0x4001067	    0x488db5000100	                  lea rsi, [rbp + 0x100]	      2268	clnt.c	FUNCTION_76	CALL_4
0x400106e	        0x488d7d48	                   lea rdi, [rbp + 0x48]	      2268	clnt.c	FUNCTION_76	CALL_4
0x4001072	      0xba40000000	                           mov edx, 0x40	      2268	clnt.c	FUNCTION_76	CALL_4
0x4001077	    0x4489a5800000	           mov dword [rbp + 0x80], r12d 	      2265	clnt.c	FUNCTION_76
0x400107e	      0xe800000000	                          call 0x4001083	      2268	clnt.c	FUNCTION_76	CALL_4
0x4001083	            0x85c0	                           test eax, eax	      2268	clnt.c	FUNCTION_76	CALL_4
0x4001085	     0xf852c010000	                           jne 0x40011b7	      2268	clnt.c	FUNCTION_76	CALL_4
0x400108b	        0x4183fc0b	                           cmp r12d, 0xb	      2271	clnt.c	FUNCTION_76	IF_3
0x400108f	            0x773c	                            ja 0x40010cd	      2271	clnt.c	FUNCTION_76	IF_3
0x4001091	    0x66f783d40000	         test word [rbx + 0xd4], 0x1200 	      2273	clnt.c	FUNCTION_76	IF_3	IF_4
0x400109a	    0x48c7c2000000	                              mov rdx, 0	      2273	clnt.c	FUNCTION_76	IF_3	IF_4
0x40010a1	    0x48c7c0000000	                              mov rax, 0	      2273	clnt.c	FUNCTION_76	IF_3	IF_4
0x40010a8	        0x480f44c2	                          cmove rax, rdx	      2273	clnt.c	FUNCTION_76	IF_3	IF_4
0x40010ac	        0x48894320	             mov qword [rbx + 0x20], rax	      2273	clnt.c	FUNCTION_76	IF_3	IF_4
0x40010b0	    0x483babb80000	            cmp rbp, qword [rbx + 0xb8] 	      2301	clnt.c	FUNCTION_76	IF_8
0x40010b7	    0xc74304000000	                  mov dword [rbx + 4], 0	      2299	clnt.c	FUNCTION_76
0x40010be	     0xf84b6000000	                            je 0x400117a	      2301	clnt.c	FUNCTION_76	IF_8
0x40010c4	              0x5b	                                 pop rbx	      2307	clnt.c	FUNCTION_76
0x40010c5	              0x5d	                                 pop rbp	      2307	clnt.c	FUNCTION_76
0x40010c6	            0x415c	                                 pop r12	      2307	clnt.c	FUNCTION_76
0x40010c8	            0x415d	                                 pop r13	      2307	clnt.c	FUNCTION_76
0x40010ca	            0x415e	                                 pop r14	      2307	clnt.c	FUNCTION_76
0x40010cc	              0xc3	                                     ret	      2307	clnt.c	FUNCTION_76
0x40010cd	    0x4c8ba3b80000	            mov r12, qword [rbx + 0xb8] 	      2334	clnt.c	FUNCTION_78
0x40010d4	    0x418b84248000	            mov eax, dword [r12 + 0x80] 	      2335	clnt.c	FUNCTION_78
0x40010dc	            0xa803	                              test al, 3	      2340	clnt.c	FUNCTION_78	IF_1
0x40010de	     0xf85da000000	                           jne 0x40011be	      2340	clnt.c	FUNCTION_78	IF_1
0x40010e4	          0xc1e802	                              shr eax, 2	      2335	clnt.c	FUNCTION_78
0x40010e7	    0x4c8bb3a80000	            mov r14, qword [rbx + 0xa8] 	      2333	clnt.c	FUNCTION_78
0x40010ee	            0x89c1	                            mov ecx, eax	      2352	clnt.c	FUNCTION_78	IF_2
0x40010f0	          0x83e903	                              sub ecx, 3	      2352	clnt.c	FUNCTION_78	IF_2
0x40010f3	            0x787e	                            js 0x4001173	      2352	clnt.c	FUNCTION_78	IF_2
0x40010f5	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2336	clnt.c	FUNCTION_78
0x40010fa	      0xbefbffffff	                     mov esi, 0xfffffffb	      2359	clnt.c	FUNCTION_78	IF_3
0x40010ff	    0x817a04000000	         cmp dword [rdx + 4], 0x1000000 	      2356	clnt.c	FUNCTION_78	IF_3	CALL_2
0x4001106	     0xf841b010000	                            je 0x4001227	      2356	clnt.c	FUNCTION_78	IF_3	CALL_2
0x400110c	        0x498b4658	            mov rax, qword [r14 + 0x58] 	      2470	clnt.c	FUNCTION_78
0x4001110	        0x83402801	               add dword [rax + 0x28], 1	      2470	clnt.c	FUNCTION_78
0x4001114	     0xfb683da0000	           movzx eax, byte [rbx + 0xda] 	      2471	clnt.c	FUNCTION_78	IF_11
0x400111b	            0xa80c	                            test al, 0xc	      2471	clnt.c	FUNCTION_78	IF_11
0x400111d	     0xf85ad000000	                           jne 0x40011d0	      2471	clnt.c	FUNCTION_78	IF_11
0x4001123	          0x4c63e6	                         movsxd r12, esi	      2471	clnt.c	FUNCTION_78	IF_11
0x4001126	          0x4d89e6	                            mov r14, r12	      2471	clnt.c	FUNCTION_78	IF_11
0x4001129	          0x4889df	                            mov rdi, rbx	      2480	clnt.c	FUNCTION_78	CALL_29
0x400112c	      0xe800000000	                          call 0x4001131	      2480	clnt.c	FUNCTION_78	CALL_29
0x4001131	          0x4c89e1	                            mov rcx, r12	      2483	clnt.c	FUNCTION_78	CALL_31
0x4001134	    0x4981fe00f0ff	             cmp r14, 0xfffffffffffff000	      2283	clnt.c	FUNCTION_76	IF_5	CALL_8
0x400113b	     0xf87ab020000	                            ja 0x40013ec	      2283	clnt.c	FUNCTION_76	IF_5	CALL_8
0x4001141	          0x4d85ed	                           test r13, r13	      2291	clnt.c	FUNCTION_76	IF_7
0x4001144	    0x48c743200000	               mov qword [rbx + 0x20], 0	      2289	clnt.c	FUNCTION_76
0x400114c	     0xf8472ffffff	                            je 0x40010c4	      2291	clnt.c	FUNCTION_76	IF_7
0x4001152	    0x4c8b83880000	              mov r8, qword [rbx + 0x88]	      2292	clnt.c	FUNCTION_76	IF_7	CALL_10
0x4001159	          0x4889ea	                            mov rdx, rbp	      2292	clnt.c	FUNCTION_76	IF_7	CALL_10
0x400115c	          0x4c89ee	                            mov rsi, r13	      2292	clnt.c	FUNCTION_76	IF_7	CALL_10
0x400115f	          0x4889df	                            mov rdi, rbx	      2292	clnt.c	FUNCTION_76	IF_7	CALL_10
0x4001162	      0xe800000000	                          call 0x4001167	      2292	clnt.c	FUNCTION_76	IF_7	CALL_10
0x4001167	          0x894304	                mov dword [rbx + 4], eax	      2292	clnt.c	FUNCTION_76	IF_7	CALL_10
0x400116a	              0x5b	                                 pop rbx	      2307	clnt.c	FUNCTION_76
0x400116b	              0x5d	                                 pop rbp	      2307	clnt.c	FUNCTION_76
0x400116c	            0x415c	                                 pop r12	      2307	clnt.c	FUNCTION_76
0x400116e	            0x415d	                                 pop r13	      2307	clnt.c	FUNCTION_76
0x4001170	            0x415e	                                 pop r14	      2307	clnt.c	FUNCTION_76
0x4001172	              0xc3	                                     ret	      2307	clnt.c	FUNCTION_76
0x4001173	      0xbef3ffffff	                     mov esi, 0xfffffff3	      2338	clnt.c	FUNCTION_78
0x4001178	            0xeb92	                           jmp 0x400110c	      2338	clnt.c	FUNCTION_78
0x400117a	    0xc78580000000	               mov dword [rbp + 0x80], 0	      2302	clnt.c	FUNCTION_76	IF_8
0x4001184	    0x48c785f80000	               mov qword [rbp + 0xf8], 0	      2302	clnt.c	FUNCTION_76	IF_8
0x400118f	    0x488b83a80000	            mov rax, qword [rbx + 0xa8] 	      2303	clnt.c	FUNCTION_76	IF_8	IF_9
0x4001196	        0xf6406802	               test byte [rax + 0x68], 2	      2303	clnt.c	FUNCTION_76	IF_8	IF_9
0x400119a	     0xf8424ffffff	                            je 0x40010c4	      2303	clnt.c	FUNCTION_76	IF_8	IF_9
0x40011a0	              0x5b	                                 pop rbx	      2307	clnt.c	FUNCTION_76
0x40011a1	    0x8bb55c010000	           mov esi, dword [rbp + 0x15c] 	      2304	clnt.c	FUNCTION_76	IF_8	IF_9	CALL_12
0x40011a7	        0x488b7d00	                    mov rdi, qword [rbp]	      2304	clnt.c	FUNCTION_76	IF_8	IF_9	CALL_12
0x40011ab	              0x5d	                                 pop rbp	      2307	clnt.c	FUNCTION_76
0x40011ac	            0x415c	                                 pop r12	      2307	clnt.c	FUNCTION_76
0x40011ae	            0x415d	                                 pop r13	      2307	clnt.c	FUNCTION_76
0x40011b0	            0x415e	                                 pop r14	      2307	clnt.c	FUNCTION_76
0x40011b2	      0xe900000000	                           jmp 0x40011b7	      2304	clnt.c	FUNCTION_76	IF_8	IF_9	CALL_12
0x40011b7	             0xf0b	                                     ud2	      2304	clnt.c	FUNCTION_76	IF_8	IF_9	CALL_12
0x40011b9	      0xe9cdfeffff	                           jmp 0x400108b	      2268	clnt.c	FUNCTION_76	CALL_4
0x40011be	    0x49c7c6fbffff	             mov r14, 0xfffffffffffffffb	      2383	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_8
0x40011c5	          0x4d89f4	                            mov r12, r14	      2383	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_8
0x40011c8	          0x4489f6	                           mov esi, r14d	      2349	clnt.c	FUNCTION_78	IF_1
0x40011cb	      0xe959ffffff	                           jmp 0x4001129	      2349	clnt.c	FUNCTION_78	IF_1
0x40011d0	            0x89c2	                            mov edx, eax	      2472	clnt.c	FUNCTION_78	IF_11
0x40011d2	          0x83e0f3	                     and eax, 0xfffffff3	      2472	clnt.c	FUNCTION_78	IF_11
0x40011d5	    0x48c743200000	               mov qword [rbx + 0x20], 0	      2475	clnt.c	FUNCTION_78	IF_11
0x40011dd	          0xc0ea02	                               shr dl, 2	      2472	clnt.c	FUNCTION_78	IF_11
0x40011e0	    0x8d14950c0000	                  lea edx, [rdx*4 + 0xc]	      2472	clnt.c	FUNCTION_78	IF_11
0x40011e7	          0x83e20c	                            and edx, 0xc	      2472	clnt.c	FUNCTION_78	IF_11
0x40011ea	             0x9d0	                             or eax, edx	      2472	clnt.c	FUNCTION_78	IF_11
0x40011ec	    0x8883da000000	               mov byte [rbx + 0xda], al	      2472	clnt.c	FUNCTION_78	IF_11
0x40011f2	      0xe9b9feffff	                           jmp 0x40010b0	      2472	clnt.c	FUNCTION_78	IF_11
0x40011f7	    0x488b87b00000	            mov rax, qword [rdi + 0xb0] 	      2253	clnt.c	FUNCTION_76	IF_1	IF_2	CALL_1
0x40011fe	    0x48c7c7000000	                              mov rdi, 0	      2253	clnt.c	FUNCTION_76	IF_1	IF_2	CALL_1
0x4001205	    0x488b90a80400	           mov rdx, qword [rax + 0x4a8] 	      2253	clnt.c	FUNCTION_76	IF_1	IF_2	CALL_1
0x400120c	    0x488b81800100	           mov rax, qword [rcx + 0x180] 	      2253	clnt.c	FUNCTION_76	IF_1	IF_2	CALL_1
0x4001213	          0x488b30	                    mov rsi, qword [rax]	      2253	clnt.c	FUNCTION_76	IF_1	IF_2	CALL_1
0x4001216	      0xe800000000	                          call 0x400121b	      2253	clnt.c	FUNCTION_76	IF_1	IF_2	CALL_1
0x400121b	     0xfb783d40000	           movzx eax, word [rbx + 0xd4] 	      2253	clnt.c	FUNCTION_76	IF_1	IF_2	CALL_1
0x4001222	      0xe92ffeffff	                           jmp 0x4001056	      2253	clnt.c	FUNCTION_76	IF_1	IF_2	CALL_1
0x4001227	          0x8b4a08	                mov ecx, dword [rdx + 8]	      2363	clnt.c	FUNCTION_78	IF_4	CALL_4
0x400122a	            0x85c9	                           test ecx, ecx	      2363	clnt.c	FUNCTION_78	IF_4	CALL_4
0x400122c	     0xf8487000000	                            je 0x40012b9	      2363	clnt.c	FUNCTION_78	IF_4	CALL_4
0x4001232	            0x89c1	                            mov ecx, eax	      2364	clnt.c	FUNCTION_78	IF_4	IF_5
0x4001234	          0x83e904	                              sub ecx, 4	      2364	clnt.c	FUNCTION_78	IF_4	IF_5
0x4001237	     0xf8836ffffff	                            js 0x4001173	      2364	clnt.c	FUNCTION_78	IF_4	IF_5
0x400123d	          0x8b4a0c	              mov ecx, dword [rdx + 0xc]	      2366	clnt.c	FUNCTION_78	IF_4	SWITCH_1	CALL_5
0x4001240	             0xfc9	                               bswap ecx	      2366	clnt.c	FUNCTION_78	IF_4	SWITCH_1	CALL_5
0x4001242	            0x85c9	                           test ecx, ecx	      2366	clnt.c	FUNCTION_78	IF_4	SWITCH_1	CALL_5
0x4001244	     0xf84cb000000	                            je 0x4001315	      2366	clnt.c	FUNCTION_78	IF_4	SWITCH_1	CALL_5
0x400124a	          0x83f901	                              cmp ecx, 1	      2366	clnt.c	FUNCTION_78	IF_4	SWITCH_1	CALL_5
0x400124d	     0xf85d4000000	                           jne 0x4001327	      2366	clnt.c	FUNCTION_78	IF_4	SWITCH_1	CALL_5
0x4001253	          0x83e805	                              sub eax, 5	      2381	clnt.c	FUNCTION_78	IF_4	IF_6
0x4001256	     0xf8817ffffff	                            js 0x4001173	      2381	clnt.c	FUNCTION_78	IF_4	IF_6
0x400125c	          0x8b4a10	            mov ecx, dword [rdx + 0x10] 	      2383	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_8
0x400125f	             0xfc9	                               bswap ecx	      2383	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_8
0x4001261	          0x83f90e	                            cmp ecx, 0xe	      2383	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_8
0x4001264	     0xf8754ffffff	                            ja 0x40011be	      2383	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_8
0x400126a	      0xb801000000	                              mov eax, 1	      2383	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_8
0x400126f	          0x48d3e0	                             shl rax, cl	      2383	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_8
0x4001272	      0xa914600000	                        test eax, 0x6014	      2383	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_8
0x4001277	     0xf85d7000000	                           jne 0x4001354	      2383	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_8
0x400127d	            0xa80a	                            test al, 0xa	      2383	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_8
0x400127f	     0xf8522010000	                           jne 0x40013a7	      2383	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_8
0x4001285	            0xa820	                           test al, 0x20	      2383	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_8
0x4001287	     0xf8431ffffff	                            je 0x40011be	      2383	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_8
0x400128d	    0x488b83b00000	            mov rax, qword [rbx + 0xb0] 	      2409	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_13
0x4001294	    0x49c7c6f3ffff	             mov r14, 0xfffffffffffffff3	      2409	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_13
0x400129b	    0x48c7c7000000	                              mov rdi, 0	      2409	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_13
0x40012a2	          0x4d89f4	                            mov r12, r14	      2409	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_13
0x40012a5	    0x488bb0a80400	           mov rsi, qword [rax + 0x4a8] 	      2409	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_13
0x40012ac	      0xe800000000	                          call 0x40012b1	      2409	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_13
0x40012b1	          0x4489f6	                           mov esi, r14d	      2338	clnt.c	FUNCTION_78
0x40012b4	      0xe970feffff	                           jmp 0x4001129	      2338	clnt.c	FUNCTION_78
0x40012b9	        0x488d720c	                    lea rsi, [rdx + 0xc]	      2363	clnt.c	FUNCTION_78	IF_4	CALL_4
0x40012bd	          0x4889df	                            mov rdi, rbx	      2422	clnt.c	FUNCTION_78	CALL_16
0x40012c0	      0xe800000000	                          call 0x40012c5	      2422	clnt.c	FUNCTION_78	CALL_16
0x40012c5	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      2423	clnt.c	FUNCTION_78	IF_9	CALL_17
0x40012cb	            0x89c6	                            mov esi, eax	      2424	clnt.c	FUNCTION_78	IF_9	CALL_18
0x40012cd	     0xf8739feffff	                            ja 0x400110c	      2423	clnt.c	FUNCTION_78	IF_9	CALL_17
0x40012d3	          0x4889c2	                            mov rdx, rax	      2430	clnt.c	FUNCTION_78	IF_10
0x40012d6	      0x492b542448	             sub rdx, qword [r12 + 0x48]	      2430	clnt.c	FUNCTION_78	IF_10
0x40012db	        0x48c1fa02	                              sar rdx, 2	      2430	clnt.c	FUNCTION_78	IF_10
0x40012df	            0x89d1	                            mov ecx, edx	      2430	clnt.c	FUNCTION_78	IF_10
0x40012e1	          0x83e901	                              sub ecx, 1	      2430	clnt.c	FUNCTION_78	IF_10
0x40012e4	     0xf8889feffff	                            js 0x4001173	      2430	clnt.c	FUNCTION_78	IF_10
0x40012ea	            0x8b10	                    mov edx, dword [rax]	      2432	clnt.c	FUNCTION_78	SWITCH_3	CALL_20
0x40012ec	             0xfca	                               bswap edx	      2432	clnt.c	FUNCTION_78	SWITCH_3	CALL_20
0x40012ee	          0x83fa01	                              cmp edx, 1	      2432	clnt.c	FUNCTION_78	SWITCH_3	CALL_20
0x40012f1	            0x744f	                            je 0x4001342	      2432	clnt.c	FUNCTION_78	SWITCH_3	CALL_20
0x40012f3	            0x7241	                            jb 0x4001336	      2432	clnt.c	FUNCTION_78	SWITCH_3	CALL_20
0x40012f5	          0x83fa02	                              cmp edx, 2	      2432	clnt.c	FUNCTION_78	SWITCH_3	CALL_20
0x40012f8	            0x741b	                            je 0x4001315	      2432	clnt.c	FUNCTION_78	SWITCH_3	CALL_20
0x40012fa	          0x83fa03	                              cmp edx, 3	      2432	clnt.c	FUNCTION_78	SWITCH_3	CALL_20
0x40012fd	     0xf8570feffff	                           jne 0x4001173	      2432	clnt.c	FUNCTION_78	SWITCH_3	CALL_20
0x4001303	    0x49c7c6a1ffff	             mov r14, 0xffffffffffffffa1	      2432	clnt.c	FUNCTION_78	SWITCH_3	CALL_20
0x400130a	          0x4d89f4	                            mov r12, r14	      2432	clnt.c	FUNCTION_78	SWITCH_3	CALL_20
0x400130d	          0x4489f6	                           mov esi, r14d	      2457	clnt.c	FUNCTION_78	SWITCH_3
0x4001310	      0xe914feffff	                           jmp 0x4001129	      2457	clnt.c	FUNCTION_78	SWITCH_3
0x4001315	    0x49c7c6a3ffff	             mov r14, 0xffffffffffffffa3	      2432	clnt.c	FUNCTION_78	SWITCH_3	CALL_20
0x400131c	          0x4d89f4	                            mov r12, r14	      2432	clnt.c	FUNCTION_78	SWITCH_3	CALL_20
0x400131f	          0x4489f6	                           mov esi, r14d	      2448	clnt.c	FUNCTION_78	SWITCH_3
0x4001322	      0xe902feffff	                           jmp 0x4001129	      2448	clnt.c	FUNCTION_78	SWITCH_3
0x4001327	    0x49c7c6fbffff	             mov r14, 0xfffffffffffffffb	      2366	clnt.c	FUNCTION_78	IF_4	SWITCH_1	CALL_5
0x400132e	          0x4d89f4	                            mov r12, r14	      2366	clnt.c	FUNCTION_78	IF_4	SWITCH_1	CALL_5
0x4001331	      0xe9f3fdffff	                           jmp 0x4001129	      2366	clnt.c	FUNCTION_78	IF_4	SWITCH_1	CALL_5
0x4001336	        0x4c8d7004	                      lea r14, [rax + 4]	      2366	clnt.c	FUNCTION_78	IF_4	SWITCH_1	CALL_5
0x400133a	          0x4c89f1	                            mov rcx, r14	      2434	clnt.c	FUNCTION_78	SWITCH_3
0x400133d	      0xe9f2fdffff	                           jmp 0x4001134	      2434	clnt.c	FUNCTION_78	SWITCH_3
0x4001342	    0x49c7c6a0ffff	             mov r14, 0xffffffffffffffa0	      2432	clnt.c	FUNCTION_78	SWITCH_3	CALL_20
0x4001349	          0x4d89f4	                            mov r12, r14	      2432	clnt.c	FUNCTION_78	SWITCH_3	CALL_20
0x400134c	          0x4489f6	                           mov esi, r14d	      2440	clnt.c	FUNCTION_78	SWITCH_3
0x400134f	      0xe9d5fdffff	                           jmp 0x4001129	      2440	clnt.c	FUNCTION_78	SWITCH_3
0x4001354	     0xfb693da0000	           movzx edx, byte [rbx + 0xda] 	      2388	clnt.c	FUNCTION_78	IF_4	SWITCH_2	IF_7
0x400135b	    0x49c7c6f3ffff	             mov r14, 0xfffffffffffffff3	      2388	clnt.c	FUNCTION_78	IF_4	SWITCH_2	IF_7
0x4001362	          0x4d89f4	                            mov r12, r14	      2388	clnt.c	FUNCTION_78	IF_4	SWITCH_2	IF_7
0x4001365	          0x4489f6	                           mov esi, r14d	      2338	clnt.c	FUNCTION_78
0x4001368	          0xf6c230	                           test dl, 0x30	      2388	clnt.c	FUNCTION_78	IF_4	SWITCH_2	IF_7
0x400136b	     0xf84b8fdffff	                            je 0x4001129	      2388	clnt.c	FUNCTION_78	IF_4	SWITCH_2	IF_7
0x4001371	            0x89d0	                            mov eax, edx	      2390	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x4001373	          0x83e2cf	                     and edx, 0xffffffcf	      2390	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x4001376	          0x4889df	                            mov rdi, rbx	      2393	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_10
0x4001379	          0xc0e804	                               shr al, 4	      2390	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x400137c	          0x83c003	                              add eax, 3	      2390	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x400137f	          0x83e003	                              and eax, 3	      2390	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x4001382	          0xc1e004	                              shl eax, 4	      2390	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x4001385	             0x9d0	                             or eax, edx	      2390	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x4001387	    0x8883da000000	               mov byte [rbx + 0xda], al	      2390	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x400138d	      0xe800000000	                          call 0x4001392	      2393	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_10
0x4001392	          0x4889df	                            mov rdi, rbx	      2395	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_11
0x4001395	      0xe800000000	                          call 0x400139a	      2395	clnt.c	FUNCTION_78	IF_4	SWITCH_2	CALL_11
0x400139a	    0x48c743200000	               mov qword [rbx + 0x20], 0	      2396	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x40013a2	      0xe909fdffff	                           jmp 0x40010b0	      2396	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x40013a7	     0xfb693da0000	           movzx edx, byte [rbx + 0xda] 	      2401	clnt.c	FUNCTION_78	IF_4	SWITCH_2	IF_8
0x40013ae	          0xf6c20c	                            test dl, 0xc	      2401	clnt.c	FUNCTION_78	IF_4	SWITCH_2	IF_8
0x40013b1	            0x7512	                           jne 0x40013c5	      2401	clnt.c	FUNCTION_78	IF_4	SWITCH_2	IF_8
0x40013b3	    0x49c7c6f3ffff	             mov r14, 0xfffffffffffffff3	      2401	clnt.c	FUNCTION_78	IF_4	SWITCH_2	IF_8
0x40013ba	          0x4d89f4	                            mov r12, r14	      2401	clnt.c	FUNCTION_78	IF_4	SWITCH_2	IF_8
0x40013bd	          0x4489f6	                           mov esi, r14d	      2338	clnt.c	FUNCTION_78
0x40013c0	      0xe964fdffff	                           jmp 0x4001129	      2338	clnt.c	FUNCTION_78
0x40013c5	            0x89d0	                            mov eax, edx	      2403	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x40013c7	          0x83e2f3	                     and edx, 0xfffffff3	      2403	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x40013ca	    0x48c743200000	               mov qword [rbx + 0x20], 0	      2406	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x40013d2	          0xc0e802	                               shr al, 2	      2403	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x40013d5	    0x8d04850c0000	                  lea eax, [rax*4 + 0xc]	      2403	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x40013dc	          0x83e00c	                            and eax, 0xc	      2403	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x40013df	             0x9d0	                             or eax, edx	      2403	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x40013e1	    0x8883da000000	               mov byte [rbx + 0xda], al	      2403	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x40013e7	      0xe9c4fcffff	                           jmp 0x40010b0	      2403	clnt.c	FUNCTION_78	IF_4	SWITCH_2
0x40013ec	        0x4883f9f5	             cmp rcx, 0xfffffffffffffff5	      2284	clnt.c	FUNCTION_76	IF_5	IF_6	CALL_9
0x40013f0	     0xf85cefcffff	                           jne 0x40010c4	      2284	clnt.c	FUNCTION_76	IF_5	IF_6	CALL_9
0x40013f6	      0xe9b5fcffff	                           jmp 0x40010b0	      2284	clnt.c	FUNCTION_76	IF_5	IF_6	CALL_9
rpc_restart_call	ELSE,0:functions,0:SWITCH,0:CALL,1:FOR,0:DO,0:IF,1:WHILE,0	7
0x4000140	            0x31c0	                            xor eax, eax	      1471	clnt.c	FUNCTION_55	IF_1
0x4000142	    0xf687d5000000	               test byte [rdi + 0xd5], 1	      1470	clnt.c	FUNCTION_55	IF_1	CALL_1
0x4000149	            0x7514	                           jne 0x400015f	      1470	clnt.c	FUNCTION_55	IF_1	CALL_1
0x400014b	    0x48c747200000	               mov qword [rdi + 0x20], 0	      1472	clnt.c	FUNCTION_55
0x4000153	    0xc74704000000	                  mov dword [rdi + 4], 0	      1473	clnt.c	FUNCTION_55
0x400015a	      0xb801000000	                              mov eax, 1	      1474	clnt.c	FUNCTION_55
0x400015f	            0xf3c3	                                     ret	      1475	clnt.c	FUNCTION_55
rpc_clnt_setup_test_and_add_xprt	ELSE,0:functions,0:SWITCH,0:CALL,13:FOR,0:DO,0:IF,3:WHILE,0	73
0x4001670	            0x4157	                                push r15	      2627	clnt.c	FUNCTION_87
0x4001672	            0x4156	                                push r14	      2627	clnt.c	FUNCTION_87
0x4001674	          0x4989fe	                            mov r14, rdi	      2627	clnt.c	FUNCTION_87
0x4001677	            0x4155	                                push r13	      2627	clnt.c	FUNCTION_87
0x4001679	            0x4154	                                push r12	      2627	clnt.c	FUNCTION_87
0x400167b	          0x4989f5	                            mov r13, rsi	      2627	clnt.c	FUNCTION_87
0x400167e	              0x55	                                push rbp	      2627	clnt.c	FUNCTION_87
0x400167f	              0x53	                                push rbx	      2627	clnt.c	FUNCTION_87
0x4001680	          0x4889d7	                            mov rdi, rdx	      2633	clnt.c	FUNCTION_87	CALL_1
0x4001683	          0x4989cf	                            mov r15, rcx	      2627	clnt.c	FUNCTION_87
0x4001686	      0xe800000000	                          call 0x400168b	      2633	clnt.c	FUNCTION_87	CALL_1
0x400168b	          0x4c89ef	                            mov rdi, r13	      2634	clnt.c	FUNCTION_87	CALL_2
0x400168e	          0x4889c5	                            mov rbp, rax	      2633	clnt.c	FUNCTION_87	CALL_1
0x4001691	      0xe800000000	                          call 0x4001696	      2634	clnt.c	FUNCTION_87	CALL_2
0x4001696	        0x488d7518	                   lea rsi, [rbp + 0x18]	      2636	clnt.c	FUNCTION_87	IF_1	CALL_3
0x400169a	          0x4c89ef	                            mov rdi, r13	      2636	clnt.c	FUNCTION_87	IF_1	CALL_3
0x400169d	      0xe800000000	                          call 0x40016a2	      2636	clnt.c	FUNCTION_87	IF_1	CALL_3
0x40016a2	            0x84c0	                             test al, al	      2636	clnt.c	FUNCTION_87	IF_1	CALL_3
0x40016a4	            0x7578	                           jne 0x400171e	      2636	clnt.c	FUNCTION_87	IF_1	CALL_3
0x40016a6	            0x31d2	                            xor edx, edx	      2640	clnt.c	FUNCTION_87	CALL_4
0x40016a8	            0x31f6	                            xor esi, esi	      2640	clnt.c	FUNCTION_87	CALL_4
0x40016aa	            0x31ff	                            xor edi, edi	      2640	clnt.c	FUNCTION_87	CALL_4
0x40016ac	    0x488b05000000	            mov rax, qword [0x040016b3] 	      2640	clnt.c	FUNCTION_87	CALL_4
0x40016b3	      0xe800000000	                          call 0x40016b8	      2640	clnt.c	FUNCTION_87	CALL_4
0x40016b8	          0x4531c9	                            xor r9d, r9d	      2641	clnt.c	FUNCTION_87	CALL_5
0x40016bb	          0x4889c3	                            mov rbx, rax	      2640	clnt.c	FUNCTION_87	CALL_4
0x40016be	          0x4531c0	                            xor r8d, r8d	      2641	clnt.c	FUNCTION_87	CALL_5
0x40016c1	      0xb900060000	                          mov ecx, 0x600	      2641	clnt.c	FUNCTION_87	CALL_5
0x40016c6	          0x4889c2	                            mov rdx, rax	      2641	clnt.c	FUNCTION_87	CALL_5
0x40016c9	          0x4889ee	                            mov rsi, rbp	      2641	clnt.c	FUNCTION_87	CALL_5
0x40016cc	          0x4c89f7	                            mov rdi, r14	      2641	clnt.c	FUNCTION_87	CALL_5
0x40016cf	      0xe89cf4ffff	           call sym.rpc_call_null_helper	      2641	clnt.c	FUNCTION_87	CALL_5
0x40016d4	          0x4889df	                            mov rdi, rbx	      2644	clnt.c	FUNCTION_87	CALL_6
0x40016d7	          0x4989c4	                            mov r12, rax	      2641	clnt.c	FUNCTION_87	CALL_5
0x40016da	      0xe800000000	                          call 0x40016df	      2644	clnt.c	FUNCTION_87	CALL_6
0x40016df	    0x4981fc00f0ff	             cmp r12, 0xfffffffffffff000	      2645	clnt.c	FUNCTION_87	IF_2	CALL_7
0x40016e6	          0x4489e3	                           mov ebx, r12d	      2646	clnt.c	FUNCTION_87	IF_2	CALL_8
0x40016e9	            0x7738	                            ja 0x4001723	      2645	clnt.c	FUNCTION_87	IF_2	CALL_7
0x40016eb	      0x418b5c2404	                mov ebx, dword [r12 + 4]	      2649	clnt.c	FUNCTION_87
0x40016f0	          0x4c89e7	                            mov rdi, r12	      2650	clnt.c	FUNCTION_87	CALL_9
0x40016f3	      0xe800000000	                          call 0x40016f8	      2650	clnt.c	FUNCTION_87	CALL_9
0x40016f8	            0x85db	                           test ebx, ebx	      2652	clnt.c	FUNCTION_87	IF_3
0x40016fa	            0x7827	                            js 0x4001723	      2652	clnt.c	FUNCTION_87	IF_3
0x40016fc	        0x498b5708	                mov rdx, qword [r15 + 8]	      2656	clnt.c	FUNCTION_87	CALL_10
0x4001700	          0x498b07	                    mov rax, qword [r15]	      2656	clnt.c	FUNCTION_87	CALL_10
0x4001703	          0x4889ee	                            mov rsi, rbp	      2656	clnt.c	FUNCTION_87	CALL_10
0x4001706	          0x4c89f7	                            mov rdi, r14	      2656	clnt.c	FUNCTION_87	CALL_10
0x4001709	      0xe800000000	                          call 0x400170e	      2656	clnt.c	FUNCTION_87	CALL_10
0x400170e	      0xb801000000	                              mov eax, 1	      2659	clnt.c	FUNCTION_87
0x4001713	              0x5b	                                 pop rbx	      2666	clnt.c	FUNCTION_87
0x4001714	              0x5d	                                 pop rbp	      2666	clnt.c	FUNCTION_87
0x4001715	            0x415c	                                 pop r12	      2666	clnt.c	FUNCTION_87
0x4001717	            0x415d	                                 pop r13	      2666	clnt.c	FUNCTION_87
0x4001719	            0x415e	                                 pop r14	      2666	clnt.c	FUNCTION_87
0x400171b	            0x415f	                                 pop r15	      2666	clnt.c	FUNCTION_87
0x400171d	              0xc3	                                     ret	      2666	clnt.c	FUNCTION_87
0x400171e	      0xbb9effffff	                     mov ebx, 0xffffff9e	      2631	clnt.c	FUNCTION_87
0x4001723	          0x4889ef	                            mov rdi, rbp	      2661	clnt.c	FUNCTION_87	CALL_11
0x4001726	      0xe800000000	                          call 0x400172b	      2661	clnt.c	FUNCTION_87	CALL_11
0x400172b	          0x4c89ef	                            mov rdi, r13	      2662	clnt.c	FUNCTION_87	CALL_12
0x400172e	      0xe800000000	                          call 0x4001733	      2662	clnt.c	FUNCTION_87	CALL_12
0x4001733	    0x488b95b00400	           mov rdx, qword [rbp + 0x4b0] 	      2663	clnt.c	FUNCTION_87	CALL_13
0x400173a	            0x89de	                            mov esi, ebx	      2663	clnt.c	FUNCTION_87	CALL_13
0x400173c	    0x48c7c7000000	                              mov rdi, 0	      2663	clnt.c	FUNCTION_87	CALL_13
0x4001743	      0xe800000000	                          call 0x4001748	      2663	clnt.c	FUNCTION_87	CALL_13
0x4001748	            0x89d8	                            mov eax, ebx	      2665	clnt.c	FUNCTION_87
0x400174a	              0x5b	                                 pop rbx	      2666	clnt.c	FUNCTION_87
0x400174b	              0x5d	                                 pop rbp	      2666	clnt.c	FUNCTION_87
0x400174c	            0x415c	                                 pop r12	      2666	clnt.c	FUNCTION_87
0x400174e	            0x415d	                                 pop r13	      2666	clnt.c	FUNCTION_87
0x4001750	            0x415e	                                 pop r14	      2666	clnt.c	FUNCTION_87
0x4001752	            0x415f	                                 pop r15	      2666	clnt.c	FUNCTION_87
0x4001754	              0xc3	                                     ret	      2666	clnt.c	FUNCTION_87
rpc_clone_client	ELSE,0:functions,0:SWITCH,0:CALL,1:FOR,0:DO,0:IF,0:WHILE,0	25
0x4002620	        0x4883ec78	                           sub rsp, 0x78	       644	clnt.c	FUNCTION_24
0x4002624	          0x4889fe	                            mov rsi, rdi	       644	clnt.c	FUNCTION_24
0x4002627	      0xb90e000000	                            mov ecx, 0xe	       645	clnt.c	FUNCTION_24
0x400262c	    0x65488b042528	                mov rax, qword gs:[0x28]	       644	clnt.c	FUNCTION_24
0x4002635	      0x4889442470	             mov qword [rsp + 0x70], rax	       644	clnt.c	FUNCTION_24
0x400263a	            0x31c0	                            xor eax, eax	       644	clnt.c	FUNCTION_24
0x400263c	          0x4889e7	                            mov rdi, rsp	       645	clnt.c	FUNCTION_24
0x400263f	          0xf348ab	              rep stosq qword [rdi], rax	       645	clnt.c	FUNCTION_24
0x4002642	    0x488b86800100	           mov rax, qword [rsi + 0x180] 	       645	clnt.c	FUNCTION_24
0x4002649	          0x4889e7	                            mov rdi, rsp	       651	clnt.c	FUNCTION_24	CALL_1
0x400264c	      0x4889442440	             mov qword [rsp + 0x40], rax	       645	clnt.c	FUNCTION_24
0x4002651	          0x8b4640	            mov eax, dword [rsi + 0x40] 	       645	clnt.c	FUNCTION_24
0x4002654	        0x89442448	             mov dword [rsp + 0x48], eax	       645	clnt.c	FUNCTION_24
0x4002658	          0x8b4644	            mov eax, dword [rsi + 0x44] 	       645	clnt.c	FUNCTION_24
0x400265b	        0x8944244c	             mov dword [rsp + 0x4c], eax	       645	clnt.c	FUNCTION_24
0x400265f	        0x488b4650	            mov rax, qword [rsi + 0x50] 	       649	clnt.c	FUNCTION_24
0x4002663	          0x8b4018	            mov eax, dword [rax + 0x18] 	       649	clnt.c	FUNCTION_24
0x4002666	        0x89442450	             mov dword [rsp + 0x50], eax	       645	clnt.c	FUNCTION_24
0x400266a	      0xe8d1feffff	             call sym.__rpc_clone_client	       651	clnt.c	FUNCTION_24	CALL_1
0x400266f	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	       652	clnt.c	FUNCTION_24
0x4002674	    0x654833142528	                xor rdx, qword gs:[0x28]	       652	clnt.c	FUNCTION_24
0x400267d	            0x7505	                           jne 0x4002684	       652	clnt.c	FUNCTION_24
0x400267f	        0x4883c478	                           add rsp, 0x78	       652	clnt.c	FUNCTION_24
0x4002683	              0xc3	                                     ret	       652	clnt.c	FUNCTION_24
0x4002684	      0xe800000000	                          call 0x4002689	       652	clnt.c	FUNCTION_24
call_refresh	ELSE,0:functions,0:SWITCH,0:CALL,1:FOR,0:DO,0:IF,0:WHILE,0	6
0x4000f60	    0x488b87a80000	            mov rax, qword [rdi + 0xa8] 	      1609	clnt.c	FUNCTION_61
0x4000f67	    0x48c747200000	               mov qword [rdi + 0x20], 0	      1607	clnt.c	FUNCTION_61
0x4000f6f	    0xc74704000000	                  mov dword [rdi + 4], 0	      1608	clnt.c	FUNCTION_61
0x4000f76	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1609	clnt.c	FUNCTION_61
0x4000f7a	        0x83402401	               add dword [rax + 0x24], 1	      1609	clnt.c	FUNCTION_61
0x4000f7e	      0xe900000000	                           jmp 0x4000f83	      1610	clnt.c	FUNCTION_61	CALL_1
rpc_call_null	ELSE,0:functions,0:SWITCH,0:CALL,1:FOR,0:DO,0:IF,0:WHILE,0	6
0x4000c10	            0x89d1	                            mov ecx, edx	      2541	clnt.c	FUNCTION_83	CALL_1
0x4000c12	          0x4531c9	                            xor r9d, r9d	      2541	clnt.c	FUNCTION_83	CALL_1
0x4000c15	          0x4889f2	                            mov rdx, rsi	      2541	clnt.c	FUNCTION_83	CALL_1
0x4000c18	          0x4531c0	                            xor r8d, r8d	      2541	clnt.c	FUNCTION_83	CALL_1
0x4000c1b	            0x31f6	                            xor esi, esi	      2541	clnt.c	FUNCTION_83	CALL_1
0x4000c1d	      0xe94effffff	            jmp sym.rpc_call_null_helper	      2541	clnt.c	FUNCTION_83	CALL_1
call_timeout	ELSE,1:functions,0:SWITCH,0:CALL,12:FOR,0:DO,0:IF,7:WHILE,0	63
0x4001d20	              0x55	                                push rbp	      2190	clnt.c	FUNCTION_75
0x4001d21	              0x53	                                push rbx	      2190	clnt.c	FUNCTION_75
0x4001d22	          0x4889fb	                            mov rbx, rdi	      2190	clnt.c	FUNCTION_75
0x4001d25	    0x488bafa80000	            mov rbp, qword [rdi + 0xa8] 	      2191	clnt.c	FUNCTION_75
0x4001d2c	    0x488bbfb80000	            mov rdi, qword [rdi + 0xb8] 	      2193	clnt.c	FUNCTION_75	IF_1	CALL_1
0x4001d33	      0xe800000000	                          call 0x4001d38	      2193	clnt.c	FUNCTION_75	IF_1	CALL_1
0x4001d38	            0x85c0	                           test eax, eax	      2193	clnt.c	FUNCTION_75	IF_1	CALL_1
0x4001d3a	            0x743b	                            je 0x4001d77	      2193	clnt.c	FUNCTION_75	IF_1	CALL_1
0x4001d3c	     0xfb783d40000	           movzx eax, word [rbx + 0xd4] 	      2201	clnt.c	FUNCTION_75	IF_2	CALL_4
0x4001d43	    0x668383d60000	                add word [rbx + 0xd6], 1	      2199	clnt.c	FUNCTION_75
0x4001d4b	          0xf6c404	                              test ah, 4	      2201	clnt.c	FUNCTION_75	IF_2	CALL_4
0x4001d4e	            0x7539	                           jne 0x4001d89	      2201	clnt.c	FUNCTION_75	IF_2	CALL_4
0x4001d50	          0xf6c412	                           test ah, 0x12	      2205	clnt.c	FUNCTION_75	IF_3	CALL_6
0x4001d53	            0x7543	                           jne 0x4001d98	      2205	clnt.c	FUNCTION_75	IF_3	CALL_6
0x4001d55	            0xa820	                           test al, 0x20	      2218	clnt.c	FUNCTION_75	IF_6
0x4001d57	            0x757d	                           jne 0x4001dd6	      2218	clnt.c	FUNCTION_75	IF_6
0x4001d59	          0x83c820	                            or eax, 0x20	      2219	clnt.c	FUNCTION_75	IF_6
0x4001d5c	    0x668983d40000	               mov word [rbx + 0xd4], ax	      2219	clnt.c	FUNCTION_75	IF_6
0x4001d63	         0xfb64568	           movzx eax, byte [rbp + 0x68] 	      2220	clnt.c	FUNCTION_75	IF_6	IF_7
0x4001d67	            0xa810	                           test al, 0x10	      2220	clnt.c	FUNCTION_75	IF_6	IF_7
0x4001d69	            0x7547	                           jne 0x4001db2	      2220	clnt.c	FUNCTION_75	IF_6	IF_7
0x4001d6b	            0xa808	                              test al, 8	      1438	clnt.c	FUNCTION_53	IF_1
0x4001d6d	            0x756d	                           jne 0x4001ddc	      1438	clnt.c	FUNCTION_53	IF_1
0x4001d6f	          0x4889df	                            mov rdi, rbx	      2231	clnt.c	FUNCTION_75	CALL_12
0x4001d72	      0xe800000000	                          call 0x4001d77	      2231	clnt.c	FUNCTION_75	CALL_12
0x4001d77	    0x48c743200000	               mov qword [rbx + 0x20], 0	      2234	clnt.c	FUNCTION_75
0x4001d7f	    0xc74304000000	                  mov dword [rbx + 4], 0	      2235	clnt.c	FUNCTION_75
0x4001d86	              0x5b	                                 pop rbx	      2236	clnt.c	FUNCTION_75
0x4001d87	              0x5d	                                 pop rbp	      2236	clnt.c	FUNCTION_75
0x4001d88	              0xc3	                                     ret	      2236	clnt.c	FUNCTION_75
0x4001d89	          0x4889df	                            mov rdi, rbx	      2202	clnt.c	FUNCTION_75	IF_2	CALL_5
0x4001d8c	      0xbe92ffffff	                     mov esi, 0xffffff92	      2202	clnt.c	FUNCTION_75	IF_2	CALL_5
0x4001d91	              0x5b	                                 pop rbx	      2236	clnt.c	FUNCTION_75
0x4001d92	              0x5d	                                 pop rbp	      2236	clnt.c	FUNCTION_75
0x4001d93	      0xe900000000	                           jmp 0x4001d98	      2202	clnt.c	FUNCTION_75	IF_2	CALL_5
0x4001d98	        0xf6456810	           test byte [rbp + 0x68], 0x10 	      2206	clnt.c	FUNCTION_75	IF_3	IF_4
0x4001d9c	            0x7548	                           jne 0x4001de6	      2206	clnt.c	FUNCTION_75	IF_3	IF_4
0x4001d9e	          0xf6c410	                           test ah, 0x10	      2211	clnt.c	FUNCTION_75	IF_3	IF_5
0x4001da1	            0x75e6	                           jne 0x4001d89	      2211	clnt.c	FUNCTION_75	IF_3	IF_5
0x4001da3	          0x4889df	                            mov rdi, rbx	      2214	clnt.c	FUNCTION_75	IF_3	CALL_9
0x4001da6	      0xbefbffffff	                     mov esi, 0xfffffffb	      2214	clnt.c	FUNCTION_75	IF_3	CALL_9
0x4001dab	              0x5b	                                 pop rbx	      2236	clnt.c	FUNCTION_75
0x4001dac	              0x5d	                                 pop rbp	      2236	clnt.c	FUNCTION_75
0x4001dad	      0xe900000000	                           jmp 0x4001db2	      2214	clnt.c	FUNCTION_75	IF_3	CALL_9
0x4001db2	    0x488b83b00000	            mov rax, qword [rbx + 0xb0] 	      2221	clnt.c	FUNCTION_75	IF_6	IF_7	CALL_10
0x4001db9	    0x48c7c7000000	                              mov rdi, 0	      2221	clnt.c	FUNCTION_75	IF_6	IF_7	CALL_10
0x4001dc0	    0x488b90a80400	           mov rdx, qword [rax + 0x4a8] 	      2221	clnt.c	FUNCTION_75	IF_6	IF_7	CALL_10
0x4001dc7	    0x488b85800100	           mov rax, qword [rbp + 0x180] 	      2221	clnt.c	FUNCTION_75	IF_6	IF_7	CALL_10
0x4001dce	          0x488b30	                    mov rsi, qword [rax]	      2221	clnt.c	FUNCTION_75	IF_6	IF_7	CALL_10
0x4001dd1	      0xe800000000	                          call 0x4001dd6	      2221	clnt.c	FUNCTION_75	IF_6	IF_7	CALL_10
0x4001dd6	         0xfb64568	           movzx eax, byte [rbp + 0x68] 	      2221	clnt.c	FUNCTION_75	IF_6	IF_7	CALL_10
0x4001dda	            0xeb8f	                           jmp 0x4001d6b	      2221	clnt.c	FUNCTION_75	IF_6	IF_7	CALL_10
0x4001ddc	          0x4889ef	                            mov rdi, rbp	      2221	clnt.c	FUNCTION_75	IF_6	IF_7	CALL_10
0x4001ddf	      0xe81cffffff	       call sym.rpc_force_rebind.part.11	      2221	clnt.c	FUNCTION_75	IF_6	IF_7	CALL_10
0x4001de4	            0xeb89	                           jmp 0x4001d6f	      2221	clnt.c	FUNCTION_75	IF_6	IF_7	CALL_10
0x4001de6	    0x488b83b00000	            mov rax, qword [rbx + 0xb0] 	      2207	clnt.c	FUNCTION_75	IF_3	IF_4	CALL_7
0x4001ded	    0x48c7c7000000	                              mov rdi, 0	      2207	clnt.c	FUNCTION_75	IF_3	IF_4	CALL_7
0x4001df4	    0x488b90a80400	           mov rdx, qword [rax + 0x4a8] 	      2207	clnt.c	FUNCTION_75	IF_3	IF_4	CALL_7
0x4001dfb	    0x488b85800100	           mov rax, qword [rbp + 0x180] 	      2207	clnt.c	FUNCTION_75	IF_3	IF_4	CALL_7
0x4001e02	          0x488b30	                    mov rsi, qword [rax]	      2207	clnt.c	FUNCTION_75	IF_3	IF_4	CALL_7
0x4001e05	      0xe800000000	                          call 0x4001e0a	      2207	clnt.c	FUNCTION_75	IF_3	IF_4	CALL_7
0x4001e0a	     0xfb783d40000	           movzx eax, word [rbx + 0xd4] 	      2207	clnt.c	FUNCTION_75	IF_3	IF_4	CALL_7
0x4001e11	            0xeb8b	                           jmp 0x4001d9e	      2207	clnt.c	FUNCTION_75	IF_3	IF_4	CALL_7
call_reserveresult	ELSE,0:functions,0:SWITCH,1:CALL,7:FOR,0:DO,0:IF,3:WHILE,0	53
0x4000d80	              0x55	                                push rbp	      1537	clnt.c	FUNCTION_59
0x4000d81	              0x53	                                push rbx	      1537	clnt.c	FUNCTION_59
0x4000d82	          0x4889fb	                            mov rbx, rdi	      1537	clnt.c	FUNCTION_59
0x4000d85	          0x8b6f04	                mov ebp, dword [rdi + 4]	      1538	clnt.c	FUNCTION_59
0x4000d88	    0xc74704000000	                  mov dword [rdi + 4], 0	      1546	clnt.c	FUNCTION_59
0x4000d8f	            0x85ed	                           test ebp, ebp	      1547	clnt.c	FUNCTION_59	IF_1
0x4000d91	            0x7815	                            js 0x4000da8	      1547	clnt.c	FUNCTION_59	IF_1
0x4000d93	    0x4883bfb80000	               cmp qword [rdi + 0xb8], 0	      1548	clnt.c	FUNCTION_59	IF_1	IF_2
0x4000d9b	            0x745d	                            je 0x4000dfa	      1548	clnt.c	FUNCTION_59	IF_1	IF_2
0x4000d9d	    0x48c747200000	               mov qword [rdi + 0x20], 0	      1549	clnt.c	FUNCTION_59	IF_1	IF_2
0x4000da5	              0x5b	                                 pop rbx	      1584	clnt.c	FUNCTION_59
0x4000da6	              0x5d	                                 pop rbp	      1584	clnt.c	FUNCTION_59
0x4000da7	              0xc3	                                     ret	      1584	clnt.c	FUNCTION_59
0x4000da8	    0x4883bfb80000	               cmp qword [rdi + 0xb8], 0	      1563	clnt.c	FUNCTION_59	IF_3
0x4000db0	            0x756c	                           jne 0x4000e1e	      1563	clnt.c	FUNCTION_59	IF_3
0x4000db2	          0x83fdf5	             cmp ebp, 0xfffffffffffffff5	      1569	clnt.c	FUNCTION_59	SWITCH_1
0x4000db5	            0x7438	                            je 0x4000def	      1569	clnt.c	FUNCTION_59	SWITCH_1
0x4000db7	          0x83fdfb	             cmp ebp, 0xfffffffffffffffb	      1569	clnt.c	FUNCTION_59	SWITCH_1
0x4000dba	            0x741a	                            je 0x4000dd6	      1569	clnt.c	FUNCTION_59	SWITCH_1
0x4000dbc	          0x83fdf4	             cmp ebp, 0xfffffffffffffff4	      1569	clnt.c	FUNCTION_59	SWITCH_1
0x4000dbf	            0x7421	                            je 0x4000de2	      1569	clnt.c	FUNCTION_59	SWITCH_1
0x4000dc1	            0x89ea	                            mov edx, ebp	      1579	clnt.c	FUNCTION_59	SWITCH_1	CALL_6
0x4000dc3	    0x48c7c6000000	                              mov rsi, 0	      1579	clnt.c	FUNCTION_59	SWITCH_1	CALL_6
0x4000dca	    0x48c7c7000000	                              mov rdi, 0	      1579	clnt.c	FUNCTION_59	SWITCH_1	CALL_6
0x4000dd1	      0xe800000000	                          call 0x4000dd6	      1579	clnt.c	FUNCTION_59	SWITCH_1	CALL_6
0x4000dd6	            0x89ee	                            mov esi, ebp	      1583	clnt.c	FUNCTION_59	CALL_7
0x4000dd8	          0x4889df	                            mov rdi, rbx	      1583	clnt.c	FUNCTION_59	CALL_7
0x4000ddb	              0x5b	                                 pop rbx	      1584	clnt.c	FUNCTION_59
0x4000ddc	              0x5d	                                 pop rbp	      1584	clnt.c	FUNCTION_59
0x4000ddd	      0xe900000000	                           jmp 0x4000de2	      1583	clnt.c	FUNCTION_59	CALL_7
0x4000de2	      0xbefa000000	                           mov esi, 0xfa	      1571	clnt.c	FUNCTION_59	SWITCH_1	CALL_5
0x4000de7	          0x4889df	                            mov rdi, rbx	      1571	clnt.c	FUNCTION_59	SWITCH_1	CALL_5
0x4000dea	      0xe800000000	                          call 0x4000def	      1571	clnt.c	FUNCTION_59	SWITCH_1	CALL_5
0x4000def	    0x48c743200000	               mov qword [rbx + 0x20], 0	      1574	clnt.c	FUNCTION_59	SWITCH_1
0x4000df7	              0x5b	                                 pop rbx	      1584	clnt.c	FUNCTION_59
0x4000df8	              0x5d	                                 pop rbp	      1584	clnt.c	FUNCTION_59
0x4000df9	              0xc3	                                     ret	      1584	clnt.c	FUNCTION_59
0x4000dfa	            0x89ea	                            mov edx, ebp	      1553	clnt.c	FUNCTION_59	IF_1	CALL_1
0x4000dfc	    0x48c7c6000000	                              mov rsi, 0	      1553	clnt.c	FUNCTION_59	IF_1	CALL_1
0x4000e03	    0x48c7c7000000	                              mov rdi, 0	      1553	clnt.c	FUNCTION_59	IF_1	CALL_1
0x4000e0a	      0xe800000000	                          call 0x4000e0f	      1553	clnt.c	FUNCTION_59	IF_1	CALL_1
0x4000e0f	          0x4889df	                            mov rdi, rbx	      1555	clnt.c	FUNCTION_59	IF_1	CALL_2
0x4000e12	      0xbefbffffff	                     mov esi, 0xfffffffb	      1555	clnt.c	FUNCTION_59	IF_1	CALL_2
0x4000e17	              0x5b	                                 pop rbx	      1584	clnt.c	FUNCTION_59
0x4000e18	              0x5d	                                 pop rbp	      1584	clnt.c	FUNCTION_59
0x4000e19	      0xe900000000	                           jmp 0x4000e1e	      1555	clnt.c	FUNCTION_59	IF_1	CALL_2
0x4000e1e	            0x89ea	                            mov edx, ebp	      1564	clnt.c	FUNCTION_59	IF_3	CALL_3
0x4000e20	    0x48c7c6000000	                              mov rsi, 0	      1564	clnt.c	FUNCTION_59	IF_3	CALL_3
0x4000e27	    0x48c7c7000000	                              mov rdi, 0	      1564	clnt.c	FUNCTION_59	IF_3	CALL_3
0x4000e2e	      0xe800000000	                          call 0x4000e33	      1564	clnt.c	FUNCTION_59	IF_3	CALL_3
0x4000e33	          0x4889df	                            mov rdi, rbx	      1566	clnt.c	FUNCTION_59	IF_3	CALL_4
0x4000e36	      0xe800000000	                          call 0x4000e3b	      1566	clnt.c	FUNCTION_59	IF_3	CALL_4
0x4000e3b	      0xe972ffffff	                           jmp 0x4000db2	      1566	clnt.c	FUNCTION_59	IF_3	CALL_4
rpc_ping	ELSE,0:functions,0:SWITCH,0:CALL,3:FOR,0:DO,0:IF,0:WHILE,0	31
0x4002070	              0x53	                                push rbx	      2507	clnt.c	FUNCTION_81
0x4002071	          0x4889fb	                            mov rbx, rdi	      2507	clnt.c	FUNCTION_81
0x4002074	            0x31d2	                            xor edx, edx	      2512	clnt.c	FUNCTION_81	CALL_1
0x4002076	            0x31f6	                            xor esi, esi	      2512	clnt.c	FUNCTION_81	CALL_1
0x4002078	            0x31ff	                            xor edi, edi	      2512	clnt.c	FUNCTION_81	CALL_1
0x400207a	        0x4883ec28	                           sub rsp, 0x28	      2507	clnt.c	FUNCTION_81
0x400207e	    0x65488b042528	                mov rax, qword gs:[0x28]	      2507	clnt.c	FUNCTION_81
0x4002087	      0x4889442420	             mov qword [rsp + 0x20], rax	      2507	clnt.c	FUNCTION_81
0x400208c	            0x31c0	                            xor eax, eax	      2507	clnt.c	FUNCTION_81
0x400208e	    0x48c744240800	                  mov qword [rsp + 8], 0	      2508	clnt.c	FUNCTION_81
0x4002097	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2508	clnt.c	FUNCTION_81
0x40020a0	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2508	clnt.c	FUNCTION_81
0x40020a9	    0x48c704240000	                      mov qword [rsp], 0	      2508	clnt.c	FUNCTION_81
0x40020b1	    0x488b05000000	            mov rax, qword [0x040020b8] 	      2512	clnt.c	FUNCTION_81	CALL_1
0x40020b8	      0xe800000000	                          call 0x40020bd	      2512	clnt.c	FUNCTION_81	CALL_1
0x40020bd	          0x4889df	                            mov rdi, rbx	      2513	clnt.c	FUNCTION_81	CALL_2
0x40020c0	      0xba00060000	                          mov edx, 0x600	      2513	clnt.c	FUNCTION_81	CALL_2
0x40020c5	          0x4889e6	                            mov rsi, rsp	      2513	clnt.c	FUNCTION_81	CALL_2
0x40020c8	      0x4889442418	             mov qword [rsp + 0x18], rax	      2512	clnt.c	FUNCTION_81	CALL_1
0x40020cd	      0xe800000000	                          call 0x40020d2	      2513	clnt.c	FUNCTION_81	CALL_2
0x40020d2	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2514	clnt.c	FUNCTION_81	CALL_3
0x40020d7	            0x89c3	                            mov ebx, eax	      2513	clnt.c	FUNCTION_81	CALL_2
0x40020d9	      0xe800000000	                          call 0x40020de	      2514	clnt.c	FUNCTION_81	CALL_3
0x40020de	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      2516	clnt.c	FUNCTION_81
0x40020e3	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      2516	clnt.c	FUNCTION_81
0x40020ec	            0x7508	                           jne 0x40020f6	      2516	clnt.c	FUNCTION_81
0x40020ee	        0x4883c428	                           add rsp, 0x28	      2516	clnt.c	FUNCTION_81
0x40020f2	            0x89d8	                            mov eax, ebx	      2516	clnt.c	FUNCTION_81
0x40020f4	              0x5b	                                 pop rbx	      2516	clnt.c	FUNCTION_81
0x40020f5	              0xc3	                                     ret	      2516	clnt.c	FUNCTION_81
0x40020f6	      0xe800000000	                          call 0x40020fb	      2516	clnt.c	FUNCTION_81
rpc_call_async	ELSE,0:functions,0:SWITCH,0:CALL,4:FOR,0:DO,0:IF,1:WHILE,0	28
0x4000c30	        0x4883ec48	                           sub rsp, 0x48	      1102	clnt.c	FUNCTION_41
0x4000c34	          0x4989fa	                            mov r10, rdi	      1102	clnt.c	FUNCTION_41
0x4000c37	          0x4989c9	                             mov r9, rcx	      1102	clnt.c	FUNCTION_41
0x4000c3a	    0x65488b042528	                mov rax, qword gs:[0x28]	      1102	clnt.c	FUNCTION_41
0x4000c43	      0x4889442440	             mov qword [rsp + 0x40], rax	      1102	clnt.c	FUNCTION_41
0x4000c48	            0x31c0	                            xor eax, eax	      1102	clnt.c	FUNCTION_41
0x4000c4a	          0x4889e7	                            mov rdi, rsp	      1104	clnt.c	FUNCTION_41
0x4000c4d	      0xb908000000	                              mov ecx, 8	      1104	clnt.c	FUNCTION_41
0x4000c52	          0x83ca01	                               or edx, 1	      1104	clnt.c	FUNCTION_41
0x4000c55	          0xf348ab	              rep stosq qword [rdi], rax	      1104	clnt.c	FUNCTION_41
0x4000c58	          0x4889e7	                            mov rdi, rsp	      1112	clnt.c	FUNCTION_41	CALL_1
0x4000c5b	      0x4c89542408	                mov qword [rsp + 8], r10	      1104	clnt.c	FUNCTION_41
0x4000c60	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1104	clnt.c	FUNCTION_41
0x4000c65	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      1104	clnt.c	FUNCTION_41
0x4000c6a	      0x4c89442428	              mov qword [rsp + 0x28], r8	      1104	clnt.c	FUNCTION_41
0x4000c6f	      0x6689542438	               mov word [rsp + 0x38], dx	      1104	clnt.c	FUNCTION_41
0x4000c74	      0xe800000000	                          call 0x4000c79	      1112	clnt.c	FUNCTION_41	CALL_1
0x4000c79	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      1113	clnt.c	FUNCTION_41	IF_1	CALL_2
0x4000c7f	            0x770a	                            ja 0x4000c8b	      1113	clnt.c	FUNCTION_41	IF_1	CALL_2
0x4000c81	          0x4889c7	                            mov rdi, rax	      1115	clnt.c	FUNCTION_41	CALL_4
0x4000c84	      0xe800000000	                          call 0x4000c89	      1115	clnt.c	FUNCTION_41	CALL_4
0x4000c89	            0x31c0	                            xor eax, eax	      1116	clnt.c	FUNCTION_41
0x4000c8b	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      1117	clnt.c	FUNCTION_41
0x4000c90	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1117	clnt.c	FUNCTION_41
0x4000c99	            0x7505	                           jne 0x4000ca0	      1117	clnt.c	FUNCTION_41
0x4000c9b	        0x4883c448	                           add rsp, 0x48	      1117	clnt.c	FUNCTION_41
0x4000c9f	              0xc3	                                     ret	      1117	clnt.c	FUNCTION_41
0x4000ca0	      0xe800000000	                          call 0x4000ca5	      1117	clnt.c	FUNCTION_41
rpc_create	ELSE,0:functions,0:SWITCH,1:CALL,10:FOR,0:DO,0:IF,7:WHILE,0	105
0x40028d0	            0x4154	                                push r12	       513	clnt.c	FUNCTION_22
0x40028d2	              0x55	                                push rbp	       513	clnt.c	FUNCTION_22
0x40028d3	      0xb909000000	                              mov ecx, 9	       515	clnt.c	FUNCTION_22
0x40028d8	              0x53	                                push rbx	       513	clnt.c	FUNCTION_22
0x40028d9	          0x4889fb	                            mov rbx, rdi	       513	clnt.c	FUNCTION_22
0x40028dc	        0x4883c480	             add rsp, 0xffffffffffffff80	       513	clnt.c	FUNCTION_22
0x40028e0	          0x8b5308	                mov edx, dword [rbx + 8]	       517	clnt.c	FUNCTION_22
0x40028e3	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       521	clnt.c	FUNCTION_22
0x40028e7	    0x65488b042528	                mov rax, qword gs:[0x28]	       513	clnt.c	FUNCTION_22
0x40028f0	      0x4889442478	             mov qword [rsp + 0x78], rax	       513	clnt.c	FUNCTION_22
0x40028f5	            0x31c0	                            xor eax, eax	       513	clnt.c	FUNCTION_22
0x40028f7	          0x4889e7	                            mov rdi, rsp	       515	clnt.c	FUNCTION_22
0x40028fa	          0x4889e5	                            mov rbp, rsp	       515	clnt.c	FUNCTION_22
0x40028fd	          0xf348ab	              rep stosq qword [rdi], rax	       515	clnt.c	FUNCTION_22
0x4002900	          0x488b03	                    mov rax, qword [rbx]	       515	clnt.c	FUNCTION_22
0x4002903	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       519	clnt.c	FUNCTION_22
0x4002907	          0x891424	                    mov dword [rsp], edx	       515	clnt.c	FUNCTION_22
0x400290a	      0x4889742428	             mov qword [rsp + 0x28], rsi	       515	clnt.c	FUNCTION_22
0x400290f	      0x4889442408	                mov qword [rsp + 8], rax	       515	clnt.c	FUNCTION_22
0x4002914	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       515	clnt.c	FUNCTION_22
0x4002918	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       515	clnt.c	FUNCTION_22
0x400291d	      0x4889442410	             mov qword [rsp + 0x10], rax	       515	clnt.c	FUNCTION_22
0x4002922	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       515	clnt.c	FUNCTION_22
0x4002926	      0x4889442420	             mov qword [rsp + 0x20], rax	       515	clnt.c	FUNCTION_22
0x400292b	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       522	clnt.c	FUNCTION_22
0x400292f	          0x4885c0	                           test rax, rax	       526	clnt.c	FUNCTION_22	IF_1
0x4002932	      0x4889442430	             mov qword [rsp + 0x30], rax	       515	clnt.c	FUNCTION_22
0x4002937	            0x7444	                            je 0x400297d	       526	clnt.c	FUNCTION_22	IF_1
0x4002939	            0x85d2	                           test edx, edx	       527	clnt.c	FUNCTION_22	IF_1	CALL_1
0x400293b	     0xf89bd000000	                           jns 0x40029fe	       527	clnt.c	FUNCTION_22	IF_1	CALL_1
0x4002941	    0x4c8ba0980200	           mov r12, qword [rax + 0x298] 	       528	clnt.c	FUNCTION_22	IF_1
0x4002948	          0x4d85e4	                           test r12, r12	       529	clnt.c	FUNCTION_22	IF_1	IF_2
0x400294b	            0x7430	                            je 0x400297d	       529	clnt.c	FUNCTION_22	IF_1	IF_2
0x400294d	          0x4c89e7	                            mov rdi, r12	       530	clnt.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4002950	      0xe800000000	                          call 0x4002955	       530	clnt.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4002955	          0x4c89e6	                            mov rsi, r12	       531	clnt.c	FUNCTION_22	IF_1	IF_2	CALL_3
0x4002958	          0x4889df	                            mov rdi, rbx	       531	clnt.c	FUNCTION_22	IF_1	IF_2	CALL_3
0x400295b	      0xe830feffff	                call sym.rpc_create_xprt	       531	clnt.c	FUNCTION_22	IF_1	IF_2	CALL_3
0x4002960	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	       588	clnt.c	FUNCTION_22
0x4002965	    0x654833342528	                xor rsi, qword gs:[0x28]	       588	clnt.c	FUNCTION_22
0x400296e	     0xf85f6000000	                           jne 0x4002a6a	       588	clnt.c	FUNCTION_22
0x4002974	        0x4883ec80	             sub rsp, 0xffffffffffffff80	       588	clnt.c	FUNCTION_22
0x4002978	              0x5b	                                 pop rbx	       588	clnt.c	FUNCTION_22
0x4002979	              0x5d	                                 pop rbp	       588	clnt.c	FUNCTION_22
0x400297a	            0x415c	                                 pop r12	       588	clnt.c	FUNCTION_22
0x400297c	              0xc3	                                     ret	       588	clnt.c	FUNCTION_22
0x400297d	        0x488b4358	            mov rax, qword [rbx + 0x58] 	       535	clnt.c	FUNCTION_22	IF_3
0x4002981	            0xa880	                           test al, 0x80	       535	clnt.c	FUNCTION_22	IF_3
0x4002983	            0x7408	                            je 0x400298d	       535	clnt.c	FUNCTION_22	IF_3
0x4002985	    0xc74424400100	               mov dword [rsp + 0x40], 1	       536	clnt.c	FUNCTION_22	IF_3
0x400298d	          0xf6c401	                              test ah, 1	       537	clnt.c	FUNCTION_22	IF_4
0x4002990	            0x7405	                            je 0x4002997	       537	clnt.c	FUNCTION_22	IF_4
0x4002992	      0x834c244002	                or dword [rsp + 0x40], 2	       538	clnt.c	FUNCTION_22	IF_4
0x4002997	          0x4885f6	                           test rsi, rsi	       543	clnt.c	FUNCTION_22	IF_5
0x400299a	            0x743c	                            je 0x40029d8	       543	clnt.c	FUNCTION_22	IF_5
0x400299c	          0x4889ef	                            mov rdi, rbp	       573	clnt.c	FUNCTION_22	CALL_8
0x400299f	      0xe800000000	                          call 0x40029a4	       573	clnt.c	FUNCTION_22	CALL_8
0x40029a4	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       574	clnt.c	FUNCTION_22	IF_6	CALL_9
0x40029aa	            0x77b4	                            ja 0x4002960	       574	clnt.c	FUNCTION_22	IF_6	CALL_9
0x40029ac	     0xfb690700300	          movzx edx, byte [rax + 0x370] 	       583	clnt.c	FUNCTION_22
0x40029b3	          0x83ca01	                               or edx, 1	       583	clnt.c	FUNCTION_22
0x40029b6	    0x889070030000	              mov byte [rax + 0x370], dl	       583	clnt.c	FUNCTION_22
0x40029bc	        0xf6435808	               test byte [rbx + 0x58], 8	       584	clnt.c	FUNCTION_22	IF_7
0x40029c0	            0x7409	                            je 0x40029cb	       584	clnt.c	FUNCTION_22	IF_7
0x40029c2	          0x83e2fe	                     and edx, 0xfffffffe	       585	clnt.c	FUNCTION_22	IF_7
0x40029c5	    0x889070030000	              mov byte [rax + 0x370], dl	       585	clnt.c	FUNCTION_22	IF_7
0x40029cb	          0x4889c6	                            mov rsi, rax	       587	clnt.c	FUNCTION_22	CALL_10
0x40029ce	          0x4889df	                            mov rdi, rbx	       587	clnt.c	FUNCTION_22	CALL_10
0x40029d1	      0xe8bafdffff	                call sym.rpc_create_xprt	       587	clnt.c	FUNCTION_22	CALL_10
0x40029d6	            0xeb88	                           jmp 0x4002960	       587	clnt.c	FUNCTION_22	CALL_10
0x40029d8	      0xc644244800	                mov byte [rsp + 0x48], 0	       551	clnt.c	FUNCTION_22	IF_5
0x40029dd	           0xfb701	                   movzx eax, word [rcx]	       552	clnt.c	FUNCTION_22	IF_5	SWITCH_1
0x40029e0	        0x6683f802	                               cmp ax, 2	       552	clnt.c	FUNCTION_22	IF_5	SWITCH_1
0x40029e4	            0x7465	                            je 0x4002a4b	       552	clnt.c	FUNCTION_22	IF_5	SWITCH_1
0x40029e6	        0x6683f80a	                             cmp ax, 0xa	       552	clnt.c	FUNCTION_22	IF_5	SWITCH_1
0x40029ea	            0x7440	                            je 0x4002a2c	       552	clnt.c	FUNCTION_22	IF_5	SWITCH_1
0x40029ec	        0x6683f801	                               cmp ax, 1	       552	clnt.c	FUNCTION_22	IF_5	SWITCH_1
0x40029f0	            0x7413	                            je 0x4002a05	       552	clnt.c	FUNCTION_22	IF_5	SWITCH_1
0x40029f2	    0x48c7c0eaffff	             mov rax, 0xffffffffffffffea	       568	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_7
0x40029f9	      0xe962ffffff	                           jmp 0x4002960	       568	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_7
0x40029fe	             0xf0b	                                     ud2	       568	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_7
0x4002a00	      0xe93cffffff	                           jmp 0x4002941	       527	clnt.c	FUNCTION_22	IF_1	CALL_1
0x4002a05	      0x4c8d642448	                   lea r12, [rsp + 0x48]	       554	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_4
0x4002a0a	        0x4883c102	                              add rcx, 2	       554	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_4
0x4002a0e	    0x48c7c2000000	                              mov rdx, 0	       554	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_4
0x4002a15	      0xbe30000000	                           mov esi, 0x30	       554	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_4
0x4002a1a	          0x4c89e7	                            mov rdi, r12	       554	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_4
0x4002a1d	      0xe800000000	                          call 0x4002a22	       554	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_4
0x4002a22	      0x4c89642428	             mov qword [rsp + 0x28], r12	       570	clnt.c	FUNCTION_22	IF_5
0x4002a27	      0xe970ffffff	                           jmp 0x400299c	       570	clnt.c	FUNCTION_22	IF_5
0x4002a2c	      0x4c8d642448	                   lea r12, [rsp + 0x48]	       562	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_6
0x4002a31	        0x4883c108	                              add rcx, 8	       562	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_6
0x4002a35	    0x48c7c2000000	                              mov rdx, 0	       562	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_6
0x4002a3c	      0xbe30000000	                           mov esi, 0x30	       562	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_6
0x4002a41	          0x4c89e7	                            mov rdi, r12	       562	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_6
0x4002a44	      0xe800000000	                          call 0x4002a49	       562	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_6
0x4002a49	            0xebd7	                           jmp 0x4002a22	       564	clnt.c	FUNCTION_22	IF_5	SWITCH_1
0x4002a4b	      0x4c8d642448	                   lea r12, [rsp + 0x48]	       558	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_5
0x4002a50	        0x4883c104	                              add rcx, 4	       558	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_5
0x4002a54	    0x48c7c2000000	                              mov rdx, 0	       558	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_5
0x4002a5b	      0xbe30000000	                           mov esi, 0x30	       558	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_5
0x4002a60	          0x4c89e7	                            mov rdi, r12	       558	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_5
0x4002a63	      0xe800000000	                          call 0x4002a68	       558	clnt.c	FUNCTION_22	IF_5	SWITCH_1	CALL_5
0x4002a68	            0xebb8	                           jmp 0x4002a22	       560	clnt.c	FUNCTION_22	IF_5	SWITCH_1
0x4002a6a	      0xe800000000	                          call 0x4002a6f	       588	clnt.c	FUNCTION_22
rpc_clients_notifier_register	ELSE,0:functions,0:SWITCH,0:CALL,1:FOR,0:DO,0:IF,0:WHILE,0	2
0x4002c50	    0x48c7c7000000	                              mov rdi, 0	       258	clnt.c	FUNCTION_12	CALL_1
0x4002c57	      0xe900000000	                           jmp 0x4002c5c	       258	clnt.c	FUNCTION_12	CALL_1
rpc_set_connect_timeout	ELSE,0:functions,0:SWITCH,0:CALL,1:FOR,0:DO,0:IF,0:WHILE,0	15
0x4000670	        0x4883ec18	                           sub rsp, 0x18	      2758	clnt.c	FUNCTION_90
0x4000674	        0x48893424	                    mov qword [rsp], rsi	      2759	clnt.c	FUNCTION_90
0x4000678	      0x4889542408	                mov qword [rsp + 8], rdx	      2759	clnt.c	FUNCTION_90
0x400067d	    0x48c7c6000000	                              mov rsi, 0	      2763	clnt.c	FUNCTION_90	CALL_1
0x4000684	          0x4889e2	                            mov rdx, rsp	      2763	clnt.c	FUNCTION_90	CALL_1
0x4000687	    0x65488b042528	                mov rax, qword gs:[0x28]	      2758	clnt.c	FUNCTION_90
0x4000690	      0x4889442410	             mov qword [rsp + 0x10], rax	      2758	clnt.c	FUNCTION_90
0x4000695	            0x31c0	                            xor eax, eax	      2758	clnt.c	FUNCTION_90
0x4000697	      0xe800000000	                          call 0x400069c	      2763	clnt.c	FUNCTION_90	CALL_1
0x400069c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2766	clnt.c	FUNCTION_90
0x40006a1	    0x654833042528	                xor rax, qword gs:[0x28]	      2766	clnt.c	FUNCTION_90
0x40006aa	            0x7505	                           jne 0x40006b1	      2766	clnt.c	FUNCTION_90
0x40006ac	        0x4883c418	                           add rsp, 0x18	      2766	clnt.c	FUNCTION_90
0x40006b0	              0xc3	                                     ret	      2766	clnt.c	FUNCTION_90
0x40006b1	      0xe800000000	                          call 0x40006b6	      2766	clnt.c	FUNCTION_90
rpcproc_decode_null	ELSE,0:functions,0:SWITCH,0:CALL,0:FOR,0:DO,0:IF,0:WHILE,0	2
0x4000260	            0x31c0	                            xor eax, eax	      2499	clnt.c	FUNCTION_80
0x4000262	              0xc3	                                     ret	      2499	clnt.c	FUNCTION_80
call_retry_reserve	ELSE,0:functions,0:SWITCH,0:CALL,1:FOR,0:DO,0:IF,0:WHILE,0	3
0x4000f40	    0xc74704000000	                  mov dword [rdi + 4], 0	      1594	clnt.c	FUNCTION_60
0x4000f47	    0x48c747200000	               mov qword [rdi + 0x20], 0	      1595	clnt.c	FUNCTION_60
0x4000f4f	      0xe900000000	                           jmp 0x4000f54	      1596	clnt.c	FUNCTION_60	CALL_1
rpc_clone_client_set_auth	ELSE,0:functions,0:SWITCH,0:CALL,1:FOR,0:DO,0:IF,0:WHILE,0	24
0x4002690	        0x4883ec78	                           sub rsp, 0x78	       665	clnt.c	FUNCTION_25
0x4002694	          0x4889fa	                            mov rdx, rdi	       665	clnt.c	FUNCTION_25
0x4002697	      0xb90e000000	                            mov ecx, 0xe	       666	clnt.c	FUNCTION_25
0x400269c	    0x65488b042528	                mov rax, qword gs:[0x28]	       665	clnt.c	FUNCTION_25
0x40026a5	      0x4889442470	             mov qword [rsp + 0x70], rax	       665	clnt.c	FUNCTION_25
0x40026aa	            0x31c0	                            xor eax, eax	       665	clnt.c	FUNCTION_25
0x40026ac	          0x4889e7	                            mov rdi, rsp	       666	clnt.c	FUNCTION_25
0x40026af	          0xf348ab	              rep stosq qword [rdi], rax	       666	clnt.c	FUNCTION_25
0x40026b2	    0x488b82800100	           mov rax, qword [rdx + 0x180] 	       666	clnt.c	FUNCTION_25
0x40026b9	        0x89742450	             mov dword [rsp + 0x50], esi	       666	clnt.c	FUNCTION_25
0x40026bd	          0x4889e7	                            mov rdi, rsp	       672	clnt.c	FUNCTION_25	CALL_1
0x40026c0	          0x4889d6	                            mov rsi, rdx	       672	clnt.c	FUNCTION_25	CALL_1
0x40026c3	      0x4889442440	             mov qword [rsp + 0x40], rax	       666	clnt.c	FUNCTION_25
0x40026c8	          0x8b4240	            mov eax, dword [rdx + 0x40] 	       666	clnt.c	FUNCTION_25
0x40026cb	        0x89442448	             mov dword [rsp + 0x48], eax	       666	clnt.c	FUNCTION_25
0x40026cf	          0x8b4244	            mov eax, dword [rdx + 0x44] 	       666	clnt.c	FUNCTION_25
0x40026d2	        0x8944244c	             mov dword [rsp + 0x4c], eax	       666	clnt.c	FUNCTION_25
0x40026d6	      0xe865feffff	             call sym.__rpc_clone_client	       672	clnt.c	FUNCTION_25	CALL_1
0x40026db	      0x488b4c2470	            mov rcx, qword [rsp + 0x70] 	       673	clnt.c	FUNCTION_25
0x40026e0	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       673	clnt.c	FUNCTION_25
0x40026e9	            0x7505	                           jne 0x40026f0	       673	clnt.c	FUNCTION_25
0x40026eb	        0x4883c478	                           add rsp, 0x78	       673	clnt.c	FUNCTION_25
0x40026ef	              0xc3	                                     ret	       673	clnt.c	FUNCTION_25
0x40026f0	      0xe800000000	                          call 0x40026f5	       673	clnt.c	FUNCTION_25
rpc_xprt_set_connect_timeout	ELSE,0:functions,0:SWITCH,0:CALL,1:FOR,0:DO,0:IF,1:WHILE,0	11
0x4000270	        0x488b4608	                mov rax, qword [rsi + 8]	      2747	clnt.c	FUNCTION_89	IF_1
0x4000274	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      2747	clnt.c	FUNCTION_89	IF_1
0x4000278	          0x4885c9	                           test rcx, rcx	      2747	clnt.c	FUNCTION_89	IF_1
0x400027b	            0x7412	                            je 0x400028f	      2747	clnt.c	FUNCTION_89	IF_1
0x400027d	          0x4889d0	                            mov rax, rdx	      2747	clnt.c	FUNCTION_89	IF_1
0x4000280	          0x4889f7	                            mov rdi, rsi	      2747	clnt.c	FUNCTION_89	IF_1
0x4000283	        0x488b5208	                mov rdx, qword [rdx + 8]	      2748	clnt.c	FUNCTION_89	IF_1	CALL_1
0x4000287	          0x488b30	                    mov rsi, qword [rax]	      2748	clnt.c	FUNCTION_89	IF_1	CALL_1
0x400028a	      0xe800000000	                          call 0x400028f	      2748	clnt.c	FUNCTION_89	IF_1	CALL_1
0x400028f	            0x31c0	                            xor eax, eax	      2752	clnt.c	FUNCTION_89
0x4000291	              0xc3	                                     ret	      2752	clnt.c	FUNCTION_89
call_reserve	ELSE,0:functions,0:SWITCH,0:CALL,1:FOR,0:DO,0:IF,0:WHILE,0	3
0x4000d60	    0xc74704000000	                  mov dword [rdi + 4], 0	      1525	clnt.c	FUNCTION_58
0x4000d67	    0x48c747200000	               mov qword [rdi + 0x20], 0	      1526	clnt.c	FUNCTION_58
0x4000d6f	      0xe900000000	                           jmp 0x4000d74	      1527	clnt.c	FUNCTION_58	CALL_1
rpc_default_callback	ELSE,0:functions,0:SWITCH,0:CALL,0:FOR,0:DO,0:IF,0:WHILE,0	1
0x40000a0	            0xf3c3	                                     ret	      1029	clnt.c	FUNCTION_38
rpc_proc_name	ELSE,2:functions,0:SWITCH,0:CALL,0:FOR,0:DO,0:IF,2:WHILE,0	9
0x4002d10	        0x488b5778	            mov rdx, qword [rdi + 0x78] 	      1481	clnt.c	FUNCTION_56
0x4002d14	    0x48c7c0000000	                              mov rax, 0	      1489	clnt.c	FUNCTION_56	ELSE_1	ELSE_2
0x4002d1b	          0x4885d2	                           test rdx, rdx	      1483	clnt.c	FUNCTION_56	IF_1
0x4002d1e	            0x7412	                            je 0x4002d32	      1483	clnt.c	FUNCTION_56	IF_1
0x4002d20	        0x488b4228	            mov rax, qword [rdx + 0x28] 	      1484	clnt.c	FUNCTION_56	IF_1	IF_2
0x4002d24	    0x48c7c2000000	                              mov rdx, 0	      1487	clnt.c	FUNCTION_56	IF_1	ELSE_1
0x4002d2b	          0x4885c0	                           test rax, rax	      1487	clnt.c	FUNCTION_56	IF_1	ELSE_1
0x4002d2e	        0x480f44c2	                          cmove rax, rdx	      1487	clnt.c	FUNCTION_56	IF_1	ELSE_1
0x4002d32	            0xf3c3	                                     ret	      1490	clnt.c	FUNCTION_56	ELSE_1	ELSE_2
