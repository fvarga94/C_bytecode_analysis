mpihelp_cmp	IF,1:WHILE,0:functions,0:FOR,1:SWITCH,0:CALL,0:ELSE,0:DO,0	18
0x4000040	          0x83ea01	                              sub edx, 1	        43	mpih-cmp.c	FUNCTION_1	FOR_1
0x4000043	            0x790a	                           jns 0x400004f	        43	mpih-cmp.c	FUNCTION_1	FOR_1
0x4000045	            0xeb24	                           jmp 0x400006b	        43	mpih-cmp.c	FUNCTION_1	FOR_1
0x4000047	          0x83ea01	                              sub edx, 1	        43	mpih-cmp.c	FUNCTION_1	FOR_1
0x400004a	          0x83faff	             cmp edx, 0xffffffffffffffff	        43	mpih-cmp.c	FUNCTION_1	FOR_1
0x400004d	            0x741c	                            je 0x400006b	        43	mpih-cmp.c	FUNCTION_1	FOR_1
0x400004f	          0x4863c2	                         movsxd rax, edx	        44	mpih-cmp.c	FUNCTION_1	FOR_1
0x4000052	        0x488b0cc7	            mov rcx, qword [rdi + rax*8]	        44	mpih-cmp.c	FUNCTION_1	FOR_1
0x4000056	        0x488b04c6	            mov rax, qword [rsi + rax*8]	        45	mpih-cmp.c	FUNCTION_1	FOR_1
0x400005a	          0x4839c1	                            cmp rcx, rax	        46	mpih-cmp.c	FUNCTION_1	FOR_1	IF_1
0x400005d	            0x74e8	                            je 0x4000047	        46	mpih-cmp.c	FUNCTION_1	FOR_1	IF_1
0x400005f	          0x4839c8	                            cmp rax, rcx	        55	mpih-cmp.c	FUNCTION_1
0x4000062	            0x19c0	                            sbb eax, eax	        55	mpih-cmp.c	FUNCTION_1
0x4000064	          0x83e002	                              and eax, 2	        55	mpih-cmp.c	FUNCTION_1
0x4000067	          0x83e801	                              sub eax, 1	        55	mpih-cmp.c	FUNCTION_1
0x400006a	              0xc3	                                     ret	        55	mpih-cmp.c	FUNCTION_1
0x400006b	            0x31c0	                            xor eax, eax	        49	mpih-cmp.c	FUNCTION_1
0x400006d	              0xc3	                                     ret	        56	mpih-cmp.c	FUNCTION_1
