acpi_ds_load1_end_op	SWITCH,0:ELSE,1:functions,0:WHILE,0:IF,19:DO,0:FOR,0:CALL,27	107
0x40002fb	    0x488b97800300	           mov rdx, qword [rdi + 0x380] 	       417	dswload.c	FUNCTION_3	IF_1
0x4000302	          0x8b4208	                mov eax, dword [rdx + 8]	       417	dswload.c	FUNCTION_3	IF_1
0x4000305	            0xa850	                           test al, 0x50	       417	dswload.c	FUNCTION_3	IF_1
0x4000307	     0xf8463010000	                            je 0x4000470	       417	dswload.c	FUNCTION_3	IF_1
0x400030d	            0xa810	                           test al, 0x10	       426	dswload.c	FUNCTION_3	IF_2
0x400030f	            0x4154	                                push r12	       400	dswload.c	FUNCTION_3
0x4000311	          0x4889fe	                            mov rsi, rdi	       400	dswload.c	FUNCTION_3
0x4000314	              0x55	                                push rbp	       400	dswload.c	FUNCTION_3
0x4000315	              0x53	                                push rbx	       400	dswload.c	FUNCTION_3
0x4000316	    0x488baf780300	           mov rbp, qword [rdi + 0x378] 	       411	dswload.c	FUNCTION_3
0x400031d	      0x440fb6620a	           movzx r12d, byte [rdx + 0xa] 	       423	dswload.c	FUNCTION_3
0x4000322	            0x7433	                            je 0x4000357	       426	dswload.c	FUNCTION_3	IF_2
0x4000324	    0x4883bf700300	              cmp qword [rdi + 0x370], 0	       431	dswload.c	FUNCTION_3	IF_2	IF_3
0x400032c	            0x7407	                            je 0x4000335	       431	dswload.c	FUNCTION_3	IF_2	IF_3
0x400032e	            0x31c0	                            xor eax, eax	       418	dswload.c	FUNCTION_3	IF_1	CALL_3
0x4000330	      0xe936010000	                           jmp 0x400046b	       418	dswload.c	FUNCTION_3	IF_1	CALL_3
0x4000335	        0x668b470a	                mov ax, word [rdi + 0xa]	       432	dswload.c	FUNCTION_3	IF_2	IF_3	IF_4
0x4000339	    0x8d907aa4ffff	                 lea edx, [rax - 0x5b86]	       433	dswload.c	FUNCTION_3	IF_2	IF_3	IF_4
0x400033f	        0x6683fa01	                               cmp dx, 1	       433	dswload.c	FUNCTION_3	IF_2	IF_3	IF_4
0x4000343	            0x7606	                           jbe 0x400034b	       433	dswload.c	FUNCTION_3	IF_2	IF_3	IF_4
0x4000345	        0x663d815b	                          cmp ax, 0x5b81	       433	dswload.c	FUNCTION_3	IF_2	IF_3	IF_4
0x4000349	            0x75e3	                           jne 0x400032e	       433	dswload.c	FUNCTION_3	IF_2	IF_3	IF_4
0x400034b	              0x5b	                                 pop rbx	       581	dswload.c	FUNCTION_3
0x400034c	          0x4889ef	                            mov rdi, rbp	       435	dswload.c	FUNCTION_3	IF_2	IF_3	IF_4
0x400034f	              0x5d	                                 pop rbp	       581	dswload.c	FUNCTION_3
0x4000350	            0x415c	                                 pop r12	       581	dswload.c	FUNCTION_3
0x4000352	      0xe900000000	                           jmp 0x4000357	       435	dswload.c	FUNCTION_3	IF_2	IF_3	IF_4
0x4000357	    0x4883bf700300	              cmp qword [rdi + 0x370], 0	       446	dswload.c	FUNCTION_3	IF_5
0x400035f	          0x4889fb	                            mov rbx, rdi	       446	dswload.c	FUNCTION_3	IF_5
0x4000362	            0x7409	                            je 0x400036d	       446	dswload.c	FUNCTION_3	IF_5
0x4000364	      0x66837d0a08	                 cmp word [rbp + 0xa], 8	       471	dswload.c	FUNCTION_3	IF_10
0x4000369	            0x7567	                           jne 0x40003d2	       471	dswload.c	FUNCTION_3	IF_10
0x400036b	            0xeb41	                           jmp 0x40003ae	       471	dswload.c	FUNCTION_3	IF_10
0x400036d	        0x668b450a	                mov ax, word [rbp + 0xa]	       447	dswload.c	FUNCTION_3	IF_5	IF_6
0x4000371	        0x663d805b	                          cmp ax, 0x5b80	       447	dswload.c	FUNCTION_3	IF_5	IF_6
0x4000375	            0x7514	                           jne 0x400038b	       447	dswload.c	FUNCTION_3	IF_5	IF_6
0x4000377	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       453	dswload.c	FUNCTION_3	IF_5	IF_6
0x400037b	          0x8b7548	            mov esi, dword [rbp + 0x48] 	       448	dswload.c	FUNCTION_3	IF_5	IF_6
0x400037e	          0x4889d9	                            mov rcx, rbx	       448	dswload.c	FUNCTION_3	IF_5	IF_6
0x4000381	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	       448	dswload.c	FUNCTION_3	IF_5	IF_6
0x4000385	         0xfb65028	           movzx edx, byte [rax + 0x28] 	       448	dswload.c	FUNCTION_3	IF_5	IF_6
0x4000389	            0xeb15	                           jmp 0x40003a0	       448	dswload.c	FUNCTION_3	IF_5	IF_6
0x400038b	        0x663d885b	                          cmp ax, 0x5b88	       458	dswload.c	FUNCTION_3	IF_5	ELSE_1	IF_8
0x400038f	            0x75d3	                           jne 0x4000364	       458	dswload.c	FUNCTION_3	IF_5	ELSE_1	IF_8
0x4000391	          0x8b7548	            mov esi, dword [rbp + 0x48] 	       459	dswload.c	FUNCTION_3	IF_5	ELSE_1	IF_8
0x4000394	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	       459	dswload.c	FUNCTION_3	IF_5	ELSE_1	IF_8
0x4000398	          0x4889d9	                            mov rcx, rbx	       459	dswload.c	FUNCTION_3	IF_5	ELSE_1	IF_8
0x400039b	      0xba7e000000	                           mov edx, 0x7e	       459	dswload.c	FUNCTION_3	IF_5	ELSE_1	IF_8
0x40003a0	      0xe800000000	                          call 0x40003a5	       459	dswload.c	FUNCTION_3	IF_5	ELSE_1	IF_8
0x40003a5	            0x85c0	                           test eax, eax	       464	dswload.c	FUNCTION_3	IF_5	ELSE_1	IF_8	IF_9	CALL_10
0x40003a7	            0x74bb	                            je 0x4000364	       464	dswload.c	FUNCTION_3	IF_5	ELSE_1	IF_8	IF_9	CALL_10
0x40003a9	      0xe9bd000000	                           jmp 0x400046b	       464	dswload.c	FUNCTION_3	IF_5	ELSE_1	IF_8	IF_9	CALL_10
0x40003ae	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       475	dswload.c	FUNCTION_3	IF_10	IF_11
0x40003b2	          0x4885c0	                           test rax, rax	       475	dswload.c	FUNCTION_3	IF_10	IF_11
0x40003b5	            0x741b	                            je 0x40003d2	       475	dswload.c	FUNCTION_3	IF_10	IF_11
0x40003b7	         0xfb7780a	            movzx edi, word [rax + 0xa] 	       476	dswload.c	FUNCTION_3	IF_10	IF_11	CALL_12
0x40003bb	      0xe800000000	                          call 0x40003c0	       476	dswload.c	FUNCTION_3	IF_10	IF_11	CALL_12
0x40003c0	      0x440fb6600a	           movzx r12d, byte [rax + 0xa] 	       479	dswload.c	FUNCTION_3	IF_10	IF_11
0x40003c5	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       484	dswload.c	FUNCTION_3	IF_10	IF_11	IF_12
0x40003c9	          0x4885c0	                           test rax, rax	       484	dswload.c	FUNCTION_3	IF_10	IF_11	IF_12
0x40003cc	            0x7404	                            je 0x40003d2	       484	dswload.c	FUNCTION_3	IF_10	IF_11	IF_12
0x40003ce	        0x44886009	                mov byte [rax + 9], r12b	       485	dswload.c	FUNCTION_3	IF_10	IF_11	IF_12
0x40003d2	    0x4883bb700300	              cmp qword [rbx + 0x370], 0	       526	dswload.c	FUNCTION_3	IF_14
0x40003da	            0x7410	                            je 0x40003ec	       526	dswload.c	FUNCTION_3	IF_14
0x40003dc	    0x4883bb700300	              cmp qword [rbx + 0x370], 0	       570	dswload.c	FUNCTION_3	IF_19
0x40003e4	     0xf8544ffffff	                           jne 0x400032e	       570	dswload.c	FUNCTION_3	IF_19
0x40003ea	            0xeb58	                           jmp 0x4000444	       570	dswload.c	FUNCTION_3	IF_19
0x40003ec	      0x66837d0a14	              cmp word [rbp + 0xa], 0x14	       527	dswload.c	FUNCTION_3	IF_14	IF_15
0x40003f1	            0x75e9	                           jne 0x40003dc	       527	dswload.c	FUNCTION_3	IF_14	IF_15
0x40003f3	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	       540	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16	CALL_16
0x40003f7	      0xe800000000	                          call 0x40003fc	       540	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16	CALL_16
0x40003fc	          0x4885c0	                           test rax, rax	       540	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16	CALL_16
0x40003ff	            0x75db	                           jne 0x40003dc	       540	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16	CALL_16
0x4000401	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       542	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16	CALL_17
0x4000405	        0xc6430d01	                 mov byte [rbx + 0xd], 1	       543	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16
0x4000409	          0x4889df	                            mov rdi, rbx	       545	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16
0x400040c	    0x488983e00200	            mov qword [rbx + 0x2e0], rax	       541	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16
0x4000413	        0x488b7528	            mov rsi, qword [rbp + 0x28] 	       545	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16
0x4000417	      0xe800000000	                          call 0x400041c	       545	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16
0x400041c	            0x85c0	                           test eax, eax	       549	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16	IF_17	CALL_19
0x400041e	            0x750f	                           jne 0x400042f	       549	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16	IF_17	CALL_19
0x4000420	          0x8b7548	            mov esi, dword [rbp + 0x48] 	       550	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16	IF_17
0x4000423	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	       550	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16	IF_17
0x4000427	          0x4889da	                            mov rdx, rbx	       550	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16	IF_17
0x400042a	      0xe800000000	                          call 0x400042f	       550	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16	IF_17
0x400042f	            0x85c0	                           test eax, eax	       561	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16	IF_18	CALL_21
0x4000431	    0x48c783e00200	              mov qword [rbx + 0x2e0], 0	       558	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16
0x400043c	        0xc6430d00	                 mov byte [rbx + 0xd], 0	       559	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16
0x4000440	            0x749a	                            je 0x40003dc	       561	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16	IF_18	CALL_21
0x4000442	            0xeb27	                           jmp 0x400046b	       561	dswload.c	FUNCTION_3	IF_14	IF_15	IF_16	IF_18	CALL_21
0x4000444	      0x66837d0a15	              cmp word [rbp + 0xa], 0x15	       570	dswload.c	FUNCTION_3	IF_19
0x4000449	     0xf84dffeffff	                            je 0x400032e	       570	dswload.c	FUNCTION_3	IF_19
0x400044f	          0x4489e7	                           mov edi, r12d	       572	dswload.c	FUNCTION_3	IF_19	CALL_23
0x4000452	      0xe800000000	                          call 0x4000457	       572	dswload.c	FUNCTION_3	IF_19	CALL_23
0x4000457	            0x85c0	                           test eax, eax	       571	dswload.c	FUNCTION_3	IF_19
0x4000459	     0xf84cffeffff	                            je 0x400032e	       571	dswload.c	FUNCTION_3	IF_19
0x400045f	          0x4889df	                            mov rdi, rbx	       577	dswload.c	FUNCTION_3	IF_19	CALL_26
0x4000462	              0x5b	                                 pop rbx	       581	dswload.c	FUNCTION_3
0x4000463	              0x5d	                                 pop rbp	       581	dswload.c	FUNCTION_3
0x4000464	            0x415c	                                 pop r12	       581	dswload.c	FUNCTION_3
0x4000466	      0xe900000000	                           jmp 0x400046b	       577	dswload.c	FUNCTION_3	IF_19	CALL_26
0x400046b	              0x5b	                                 pop rbx	       581	dswload.c	FUNCTION_3
0x400046c	              0x5d	                                 pop rbp	       581	dswload.c	FUNCTION_3
0x400046d	            0x415c	                                 pop r12	       581	dswload.c	FUNCTION_3
0x400046f	              0xc3	                                     ret	       581	dswload.c	FUNCTION_3
0x4000470	            0x31c0	                            xor eax, eax	       418	dswload.c	FUNCTION_3	IF_1	CALL_3
0x4000472	              0xc3	                                     ret	       581	dswload.c	FUNCTION_3
acpi_ds_load1_begin_op	SWITCH,2:ELSE,2:functions,0:WHILE,0:IF,19:DO,0:FOR,0:CALL,40	178
0x4000040	            0x4157	                                push r15	       108	dswload.c	FUNCTION_2
0x4000042	            0x4156	                                push r14	       108	dswload.c	FUNCTION_2
0x4000044	            0x4155	                                push r13	       108	dswload.c	FUNCTION_2
0x4000046	            0x4154	                                push r12	       108	dswload.c	FUNCTION_2
0x4000048	          0x4989f5	                            mov r13, rsi	       108	dswload.c	FUNCTION_2
0x400004b	              0x55	                                push rbp	       108	dswload.c	FUNCTION_2
0x400004c	              0x53	                                push rbx	       108	dswload.c	FUNCTION_2
0x400004d	          0x4889fb	                            mov rbx, rdi	       108	dswload.c	FUNCTION_2
0x4000050	        0x4883ec18	                           sub rsp, 0x18	       108	dswload.c	FUNCTION_2
0x4000054	    0x488baf780300	           mov rbp, qword [rdi + 0x378] 	       118	dswload.c	FUNCTION_2
0x400005b	    0x65488b042528	                mov rax, qword gs:[0x28]	       108	dswload.c	FUNCTION_2
0x4000064	      0x4889442410	             mov qword [rsp + 0x10], rax	       108	dswload.c	FUNCTION_2
0x4000069	            0x31c0	                            xor eax, eax	       108	dswload.c	FUNCTION_2
0x400006b	          0x4885ed	                           test rbp, rbp	       124	dswload.c	FUNCTION_2	IF_1
0x400006e	            0x741c	                            je 0x400008c	       124	dswload.c	FUNCTION_2	IF_1
0x4000070	    0x488b87800300	           mov rax, qword [rdi + 0x380] 	       125	dswload.c	FUNCTION_2	IF_1	IF_2
0x4000077	        0xf6400840	               test byte [rax + 8], 0x40	       125	dswload.c	FUNCTION_2	IF_1	IF_2
0x400007b	     0xf842a020000	                            je 0x40002ab	       125	dswload.c	FUNCTION_2	IF_1	IF_2
0x4000081	      0x48837d2000	               cmp qword [rbp + 0x20], 0	       132	dswload.c	FUNCTION_2	IF_1	IF_3
0x4000086	     0xf851f020000	                           jne 0x40002ab	       132	dswload.c	FUNCTION_2	IF_1	IF_3
0x400008c	        0x4c8d7330	                   lea r14, [rbx + 0x30]	       138	dswload.c	FUNCTION_2	CALL_5
0x4000090	          0x4c89f7	                            mov rdi, r14	       138	dswload.c	FUNCTION_2	CALL_5
0x4000093	      0xe800000000	                          call 0x4000098	       138	dswload.c	FUNCTION_2	CALL_5
0x4000098	          0x4989c4	                            mov r12, rax	       138	dswload.c	FUNCTION_2	CALL_5
0x400009b	    0x488b83800300	           mov rax, qword [rbx + 0x380] 	       142	dswload.c	FUNCTION_2
0x40000a2	      0x66837b0a10	              cmp word [rbx + 0xa], 0x10	       148	dswload.c	FUNCTION_2	SWITCH_1
0x40000a7	      0x440fb6780a	           movzx r15d, byte [rax + 0xa] 	       142	dswload.c	FUNCTION_2
0x40000ac	          0x4589fa	                          mov r10d, r15d	       142	dswload.c	FUNCTION_2
0x40000af	     0xf85e6000000	                           jne 0x400019b	       148	dswload.c	FUNCTION_2	SWITCH_1
0x40000b5	      0x488d442408	                      lea rax, [rsp + 8]	       155	dswload.c	FUNCTION_2	SWITCH_1
0x40000ba	    0x488bbba80300	           mov rdi, qword [rbx + 0x3a8] 	       155	dswload.c	FUNCTION_2	SWITCH_1
0x40000c1	      0xb903000000	                              mov ecx, 3	       155	dswload.c	FUNCTION_2	SWITCH_1
0x40000c6	          0x4489fa	                           mov edx, r15d	       155	dswload.c	FUNCTION_2	SWITCH_1
0x40000c9	          0x4989d9	                             mov r9, rbx	       155	dswload.c	FUNCTION_2	SWITCH_1
0x40000cc	    0x41b801000000	                              mov r8d, 1	       155	dswload.c	FUNCTION_2	SWITCH_1
0x40000d2	              0x50	                                push rax	       155	dswload.c	FUNCTION_2	SWITCH_1
0x40000d3	          0x4c89e6	                            mov rsi, r12	       155	dswload.c	FUNCTION_2	SWITCH_1
0x40000d6	      0xe800000000	                          call 0x40000db	       155	dswload.c	FUNCTION_2	SWITCH_1
0x40000db	            0x85c0	                           test eax, eax	       175	dswload.c	FUNCTION_2	SWITCH_1	IF_5	CALL_11
0x40000dd	          0x4189c7	                           mov r15d, eax	       155	dswload.c	FUNCTION_2	SWITCH_1
0x40000e0	              0x59	                                 pop rcx	       175	dswload.c	FUNCTION_2	SWITCH_1	IF_5	CALL_11
0x40000e1	            0x7426	                            je 0x4000109	       175	dswload.c	FUNCTION_2	SWITCH_1	IF_5	CALL_11
0x40000e3	    0x488b93a80300	           mov rdx, qword [rbx + 0x3a8] 	       176	dswload.c	FUNCTION_2	SWITCH_1	IF_5	CALL_12
0x40000ea	          0x4189c0	                            mov r8d, eax	       176	dswload.c	FUNCTION_2	SWITCH_1	IF_5	CALL_12
0x40000ed	          0x4c89e1	                            mov rcx, r12	       176	dswload.c	FUNCTION_2	SWITCH_1	IF_5	CALL_12
0x40000f0	      0xbeb1000000	                           mov esi, 0xb1	       176	dswload.c	FUNCTION_2	SWITCH_1	IF_5	CALL_12
0x40000f5	    0x48c7c7000000	                              mov rdi, 0	       176	dswload.c	FUNCTION_2	SWITCH_1	IF_5	CALL_12
0x40000fc	      0xe800000000	                          call 0x4000101	       176	dswload.c	FUNCTION_2	SWITCH_1	IF_5	CALL_12
0x4000101	          0x4489f8	                           mov eax, r15d	       178	dswload.c	FUNCTION_2	SWITCH_1	IF_5	CALL_13
0x4000104	      0xe9a8010000	                           jmp 0x40002b1	       178	dswload.c	FUNCTION_2	SWITCH_1	IF_5	CALL_13
0x4000109	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       185	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x400010e	          0x8a4f09	                  mov cl, byte [rdi + 9]	       185	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x4000111	          0x80f91b	                            cmp cl, 0x1b	       185	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x4000114	            0x7745	                            ja 0x400015b	       185	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x4000116	      0xb801000000	                              mov eax, 1	       185	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x400011b	          0x48d3e0	                             shl rax, cl	       185	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x400011e	      0xa941380008	                     test eax, 0x8003841	       185	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x4000123	     0xf8552010000	                           jne 0x400027b	       185	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x4000129	          0xf6c401	                              test ah, 1	       185	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x400012c	            0x751a	                           jne 0x4000148	       185	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x400012e	            0xa80e	                            test al, 0xe	       185	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x4000130	            0x7429	                            je 0x400015b	       185	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x4000132	        0xc6470900	                   mov byte [rdi + 9], 0	       215	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x4000136	    0x488b83a80300	           mov rax, qword [rbx + 0x3a8] 	       216	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x400013d	    0x66c7400a0000	                 mov word [rax + 0xa], 0	       216	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x4000143	      0xe933010000	                           jmp 0x400027b	       217	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2
0x4000148	    0x483b3d000000	            cmp rdi, qword [0x0400014f] 	       224	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2	IF_6
0x400014f	            0x750a	                           jne 0x400015b	       224	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2	IF_6
0x4000151	        0xf6432d04	               test byte [rbx + 0x2d], 4	       224	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2	IF_6
0x4000155	     0xf8520010000	                           jne 0x400027b	       224	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2	IF_6
0x400015b	      0xe800000000	                          call 0x4000160	       236	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_17
0x4000160	        0x48890424	                    mov qword [rsp], rax	       236	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_17
0x4000164	      0x488b442408	                mov rax, qword [rsp + 8]	       236	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_17
0x4000169	         0xfb67809	               movzx edi, byte [rax + 9]	       236	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_17
0x400016d	      0xe800000000	                          call 0x4000172	       236	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_17
0x4000172	        0x4c8b0424	                     mov r8, qword [rsp]	       236	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_17
0x4000176	          0x4889c1	                            mov rcx, rax	       236	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_17
0x4000179	    0x48c7c2000000	                              mov rdx, 0	       236	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_17
0x4000180	      0xbef0000000	                           mov esi, 0xf0	       236	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_17
0x4000185	    0x48c7c7000000	                              mov rdi, 0	       236	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_17
0x400018c	      0xe800000000	                          call 0x4000191	       236	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_17
0x4000191	      0xb803300000	                         mov eax, 0x3003	       242	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_20
0x4000196	      0xe916010000	                           jmp 0x40002b1	       242	dswload.c	FUNCTION_2	SWITCH_1	SWITCH_2	CALL_20
0x400019b	    0x488b83480300	           mov rax, qword [rbx + 0x348] 	       263	dswload.c	FUNCTION_2	SWITCH_1	IF_7
0x40001a2	          0x4885c0	                           test rax, rax	       263	dswload.c	FUNCTION_2	SWITCH_1	IF_7
0x40001a5	            0x7431	                            je 0x40001d8	       263	dswload.c	FUNCTION_2	SWITCH_1	IF_7
0x40001a7	          0x4885ed	                           test rbp, rbp	       355	dswload.c	FUNCTION_2	IF_17
0x40001aa	      0x4889442408	                mov qword [rsp + 8], rax	       267	dswload.c	FUNCTION_2	SWITCH_1	IF_7
0x40001af	     0xf85d9000000	                           jne 0x400028e	       355	dswload.c	FUNCTION_2	IF_17
0x40001b5	         0xfb77b0a	            movzx edi, word [rbx + 0xa] 	       359	dswload.c	FUNCTION_2	IF_17	CALL_36
0x40001b9	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       359	dswload.c	FUNCTION_2	IF_17	CALL_36
0x40001bd	      0xe800000000	                          call 0x40001c2	       359	dswload.c	FUNCTION_2	IF_17	CALL_36
0x40001c2	          0x4889c5	                            mov rbp, rax	       359	dswload.c	FUNCTION_2	IF_17	CALL_36
0x40001c5	      0xb804000000	                              mov eax, 4	       361	dswload.c	FUNCTION_2	IF_17	IF_18	CALL_37
0x40001ca	          0x4885ed	                           test rbp, rbp	       360	dswload.c	FUNCTION_2	IF_17	IF_18
0x40001cd	     0xf85b1000000	                           jne 0x4000284	       360	dswload.c	FUNCTION_2	IF_17	IF_18
0x40001d3	      0xe9d9000000	                           jmp 0x40002b1	       360	dswload.c	FUNCTION_2	IF_17	IF_18
0x40001d8	    0x4883bb700300	              cmp qword [rbx + 0x370], 0	       276	dswload.c	FUNCTION_2	SWITCH_1	IF_8
0x40001e0	            0x7414	                            je 0x40001f6	       276	dswload.c	FUNCTION_2	SWITCH_1	IF_8
0x40001e2	          0x4885ed	                           test rbp, rbp	       355	dswload.c	FUNCTION_2	IF_17
0x40001e5	    0x48c744240800	                  mov qword [rsp + 8], 0	       277	dswload.c	FUNCTION_2	SWITCH_1	IF_8
0x40001ee	     0xf85a4000000	                           jne 0x4000298	       355	dswload.c	FUNCTION_2	IF_17
0x40001f4	            0xebbf	                           jmp 0x40001b5	       355	dswload.c	FUNCTION_2	IF_17
0x40001f6	          0x4531c0	                            xor r8d, r8d	       282	dswload.c	FUNCTION_2	SWITCH_1
0x40001f9	        0xf6432d01	               test byte [rbx + 0x2d], 1	       283	dswload.c	FUNCTION_2	SWITCH_1	IF_9
0x40001fd	            0x750f	                           jne 0x400020e	       283	dswload.c	FUNCTION_2	SWITCH_1	IF_9
0x40001ff	        0x807b1501	                cmp byte [rbx + 0x15], 1	       286	dswload.c	FUNCTION_2	SWITCH_1	IF_9	IF_10
0x4000203	          0x4519c0	                            sbb r8d, r8d	       286	dswload.c	FUNCTION_2	SWITCH_1	IF_9	IF_10
0x4000206	        0x4183e088	                     and r8d, 0xffffff88	       286	dswload.c	FUNCTION_2	SWITCH_1	IF_9	IF_10
0x400020a	        0x4183e880	             sub r8d, 0xffffffffffffff80	       286	dswload.c	FUNCTION_2	SWITCH_1	IF_9	IF_10
0x400020e	      0x488d442408	                      lea rax, [rsp + 8]	       310	dswload.c	FUNCTION_2	SWITCH_1
0x4000213	    0x488bbba80300	           mov rdi, qword [rbx + 0x3a8] 	       310	dswload.c	FUNCTION_2	SWITCH_1
0x400021a	        0x44881424	                    mov byte [rsp], r10b	       310	dswload.c	FUNCTION_2	SWITCH_1
0x400021e	          0x4489fa	                           mov edx, r15d	       310	dswload.c	FUNCTION_2	SWITCH_1
0x4000221	          0x4989d9	                             mov r9, rbx	       310	dswload.c	FUNCTION_2	SWITCH_1
0x4000224	      0xb901000000	                              mov ecx, 1	       310	dswload.c	FUNCTION_2	SWITCH_1
0x4000229	              0x50	                                push rax	       310	dswload.c	FUNCTION_2	SWITCH_1
0x400022a	          0x4c89e6	                            mov rsi, r12	       310	dswload.c	FUNCTION_2	SWITCH_1
0x400022d	      0xe800000000	                          call 0x4000232	       310	dswload.c	FUNCTION_2	SWITCH_1
0x4000232	            0x85c0	                           test eax, eax	       314	dswload.c	FUNCTION_2	SWITCH_1	IF_11	CALL_28
0x4000234	              0x5a	                                 pop rdx	       314	dswload.c	FUNCTION_2	SWITCH_1	IF_11	CALL_28
0x4000235	            0x7444	                            je 0x400027b	       314	dswload.c	FUNCTION_2	SWITCH_1	IF_11	CALL_28
0x4000237	          0x83f807	                              cmp eax, 7	       315	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12
0x400023a	        0x448a1424	                    mov r10b, byte [rsp]	       315	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12
0x400023e	     0xf8582000000	                           jne 0x40002c6	       315	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12
0x4000244	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       319	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12	IF_13
0x4000249	          0x8a510a	                mov dl, byte [rcx + 0xa]	       319	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12	IF_13
0x400024c	          0xf6c208	                              test dl, 8	       319	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12	IF_13
0x400024f	            0x7475	                            je 0x40002c6	       319	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12	IF_13
0x4000251	          0x83e2f7	                     and edx, 0xfffffff7	       324	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12	IF_13
0x4000254	        0x44885109	                mov byte [rcx + 9], r10b	       325	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12	IF_13
0x4000258	          0x4489ff	                           mov edi, r15d	       329	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12	IF_13	IF_14	CALL_29
0x400025b	          0x88510a	                mov byte [rcx + 0xa], dl	       324	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12	IF_13
0x400025e	      0xe800000000	                          call 0x4000263	       329	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12	IF_13	IF_14	CALL_29
0x4000263	            0x85c0	                           test eax, eax	       329	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12	IF_13	IF_14	CALL_29
0x4000265	            0x7414	                            je 0x400027b	       329	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12	IF_13	IF_14	CALL_29
0x4000267	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       330	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12	IF_13	IF_14
0x400026c	          0x4889da	                            mov rdx, rbx	       330	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12	IF_13	IF_14
0x400026f	          0x4489fe	                           mov esi, r15d	       330	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12	IF_13	IF_14
0x4000272	      0xe800000000	                          call 0x4000277	       330	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12	IF_13	IF_14
0x4000277	            0x85c0	                           test eax, eax	       334	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12	IF_13	IF_14	IF_15	CALL_31
0x4000279	            0x7536	                           jne 0x40002b1	       334	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_12	IF_13	IF_14	IF_15	CALL_31
0x400027b	          0x4885ed	                           test rbp, rbp	       355	dswload.c	FUNCTION_2	IF_17
0x400027e	     0xf8431ffffff	                            je 0x40001b5	       355	dswload.c	FUNCTION_2	IF_17
0x4000284	      0x488b442408	                mov rax, qword [rsp + 8]	       371	dswload.c	FUNCTION_2	IF_19
0x4000289	          0x4885c0	                           test rax, rax	       371	dswload.c	FUNCTION_2	IF_19
0x400028c	            0x740a	                            je 0x4000298	       371	dswload.c	FUNCTION_2	IF_19
0x400028e	        0x48894520	            mov qword [rbp + 0x20], rax 	       376	dswload.c	FUNCTION_2	IF_19
0x4000292	          0x8b400c	              mov eax, dword [rax + 0xc]	       377	dswload.c	FUNCTION_2	IF_19
0x4000295	          0x89454c	            mov dword [rbp + 0x4c], eax 	       377	dswload.c	FUNCTION_2	IF_19
0x4000298	          0x4c89f7	                            mov rdi, r14	       380	dswload.c	FUNCTION_2	CALL_39
0x400029b	      0xe800000000	                          call 0x40002a0	       380	dswload.c	FUNCTION_2	CALL_39
0x40002a0	          0x4889ee	                            mov rsi, rbp	       380	dswload.c	FUNCTION_2	CALL_39
0x40002a3	          0x4889c7	                            mov rdi, rax	       380	dswload.c	FUNCTION_2	CALL_39
0x40002a6	      0xe800000000	                          call 0x40002ab	       380	dswload.c	FUNCTION_2	CALL_39
0x40002ab	        0x49896d00	                    mov qword [r13], rbp	       382	dswload.c	FUNCTION_2
0x40002af	            0x31c0	                            xor eax, eax	       383	dswload.c	FUNCTION_2	CALL_40
0x40002b1	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       384	dswload.c	FUNCTION_2
0x40002b6	    0x654833342528	                xor rsi, qword gs:[0x28]	       384	dswload.c	FUNCTION_2
0x40002bf	            0x742b	                            je 0x40002ec	       384	dswload.c	FUNCTION_2
0x40002c1	      0xe800000000	                          call 0x40002c6	       384	dswload.c	FUNCTION_2
0x40002c6	    0x488b93a80300	           mov rdx, qword [rbx + 0x3a8] 	       345	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_16	CALL_34
0x40002cd	          0x4189c0	                            mov r8d, eax	       345	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_16	CALL_34
0x40002d0	          0x4c89e1	                            mov rcx, r12	       345	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_16	CALL_34
0x40002d3	      0xbe5a010000	                          mov esi, 0x15a	       345	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_16	CALL_34
0x40002d8	    0x48c7c7000000	                              mov rdi, 0	       345	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_16	CALL_34
0x40002df	          0x890424	                    mov dword [rsp], eax	       345	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_16	CALL_34
0x40002e2	      0xe800000000	                          call 0x40002e7	       345	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_16	CALL_34
0x40002e7	          0x8b0424	                    mov eax, dword [rsp]	       347	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_16	CALL_35
0x40002ea	            0xebc5	                           jmp 0x40002b1	       347	dswload.c	FUNCTION_2	SWITCH_1	IF_11	IF_16	CALL_35
0x40002ec	        0x4883c418	                           add rsp, 0x18	       384	dswload.c	FUNCTION_2
0x40002f0	              0x5b	                                 pop rbx	       384	dswload.c	FUNCTION_2
0x40002f1	              0x5d	                                 pop rbp	       384	dswload.c	FUNCTION_2
0x40002f2	            0x415c	                                 pop r12	       384	dswload.c	FUNCTION_2
0x40002f4	            0x415d	                                 pop r13	       384	dswload.c	FUNCTION_2
0x40002f6	            0x415e	                                 pop r14	       384	dswload.c	FUNCTION_2
0x40002f8	            0x415f	                                 pop r15	       384	dswload.c	FUNCTION_2
0x40002fa	              0xc3	                                     ret	       384	dswload.c	FUNCTION_2
acpi_ds_init_callbacks	SWITCH,1:ELSE,0:functions,0:WHILE,0:IF,0:DO,0:FOR,0:CALL,0	26
0x4000473	          0x83fe01	                              cmp esi, 1	        41	dswload.c	FUNCTION_1	SWITCH_1
0x4000476	            0x7447	                            je 0x40004bf	        41	dswload.c	FUNCTION_1	SWITCH_1
0x4000478	            0x7226	                            jb 0x40004a0	        41	dswload.c	FUNCTION_1	SWITCH_1
0x400047a	          0x83fe02	                              cmp esi, 2	        41	dswload.c	FUNCTION_1	SWITCH_1
0x400047d	            0x745f	                            je 0x40004de	        41	dswload.c	FUNCTION_1	SWITCH_1
0x400047f	          0x83fe03	                              cmp esi, 3	        41	dswload.c	FUNCTION_1	SWITCH_1
0x4000482	            0x757a	                           jne 0x40004fe	        41	dswload.c	FUNCTION_1	SWITCH_1
0x4000484	        0x834f2c31	            or dword [rdi + 0x2c], 0x31 	        77	dswload.c	FUNCTION_1	SWITCH_1
0x4000488	    0x48c787c80300	              mov qword [rdi + 0x3c8], 0	        79	dswload.c	FUNCTION_1	SWITCH_1
0x4000493	    0x48c787d00300	              mov qword [rdi + 0x3d0], 0	        80	dswload.c	FUNCTION_1	SWITCH_1
0x400049e	            0xeb5b	                           jmp 0x40004fb	        80	dswload.c	FUNCTION_1	SWITCH_1
0x40004a0	    0xc7472c110200	          mov dword [rdi + 0x2c], 0x211 	        46	dswload.c	FUNCTION_1	SWITCH_1
0x40004a7	    0x48c787c80300	              mov qword [rdi + 0x3c8], 0	        48	dswload.c	FUNCTION_1	SWITCH_1
0x40004b2	    0x48c787d00300	              mov qword [rdi + 0x3d0], 0	        49	dswload.c	FUNCTION_1	SWITCH_1
0x40004bd	            0xeb3c	                           jmp 0x40004fb	        49	dswload.c	FUNCTION_1	SWITCH_1
0x40004bf	    0xc7472c110000	           mov dword [rdi + 0x2c], 0x11 	        56	dswload.c	FUNCTION_1	SWITCH_1
0x40004c6	    0x48c787c80300	              mov qword [rdi + 0x3c8], 0	        58	dswload.c	FUNCTION_1	SWITCH_1
0x40004d1	    0x48c787d00300	              mov qword [rdi + 0x3d0], 0	        59	dswload.c	FUNCTION_1	SWITCH_1
0x40004dc	            0xeb1d	                           jmp 0x40004fb	        59	dswload.c	FUNCTION_1	SWITCH_1
0x40004de	    0xc7472c110000	           mov dword [rdi + 0x2c], 0x11 	        66	dswload.c	FUNCTION_1	SWITCH_1
0x40004e5	    0x48c787c80300	              mov qword [rdi + 0x3c8], 0	        68	dswload.c	FUNCTION_1	SWITCH_1
0x40004f0	    0x48c787d00300	              mov qword [rdi + 0x3d0], 0	        69	dswload.c	FUNCTION_1	SWITCH_1
0x40004fb	            0x31c0	                            xor eax, eax	        89	dswload.c	FUNCTION_1
0x40004fd	              0xc3	                                     ret	        70	dswload.c	FUNCTION_1	SWITCH_1
0x40004fe	      0xb801100000	                         mov eax, 0x1001	        86	dswload.c	FUNCTION_1	SWITCH_1
0x4000503	              0xc3	                                     ret	        90	dswload.c	FUNCTION_1
