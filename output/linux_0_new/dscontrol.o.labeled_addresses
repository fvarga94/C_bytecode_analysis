acpi_ds_exec_end_control_op	CALL,27:DO,0:FOR,0:SWITCH,1:ELSE,3:WHILE,1:IF,11:functions,0	128
0x40000fb	            0x4154	                                push r12	       136	dscontrol.c	FUNCTION_2
0x40000fd	              0x55	                                push rbp	       136	dscontrol.c	FUNCTION_2
0x40000fe	              0x53	                                push rbx	       136	dscontrol.c	FUNCTION_2
0x40000ff	         0xfb74e0a	            movzx ecx, word [rsi + 0xa] 	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x4000103	          0x4889fb	                            mov rbx, rdi	       136	dscontrol.c	FUNCTION_2
0x4000106	      0x6681f9a200	                            cmp cx, 0xa2	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x400010b	            0x746e	                            je 0x400017b	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x400010d	          0x4889f5	                            mov rbp, rsi	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x4000110	            0x771d	                            ja 0x400012f	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x4000112	      0x6681f9a000	                            cmp cx, 0xa0	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x4000117	            0x7452	                            je 0x400016b	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x4000119	     0xf87c4010000	                            ja 0x40002e3	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x400011f	      0x6681f99f00	                            cmp cx, 0x9f	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x4000124	     0xf846a010000	                            je 0x4000294	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x400012a	      0xe992010000	                           jmp 0x40002c1	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x400012f	      0x6681f9a400	                            cmp cx, 0xa4	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x4000134	     0xf8494000000	                            je 0x40001ce	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x400013a	     0xf82a3010000	                            jb 0x40002e3	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x4000140	      0x6681f9a500	                            cmp cx, 0xa5	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x4000145	     0xf8449010000	                            je 0x4000294	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x400014b	      0x6681f9cc00	                            cmp cx, 0xcc	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x4000150	     0xf856b010000	                           jne 0x40002c1	       142	dscontrol.c	FUNCTION_2	SWITCH_1
0x4000156	              0x5b	                                 pop rbx	       372	dscontrol.c	FUNCTION_2
0x4000157	              0x5d	                                 pop rbp	       372	dscontrol.c	FUNCTION_2
0x4000158	            0x415c	                                 pop r12	       372	dscontrol.c	FUNCTION_2
0x400015a	    0x48c7c6000000	                              mov rsi, 0	       324	dscontrol.c	FUNCTION_2	SWITCH_1	CALL_24
0x4000161	      0xbf01000000	                              mov edi, 1	       324	dscontrol.c	FUNCTION_2	SWITCH_1	CALL_24
0x4000166	      0xe900000000	                           jmp 0x400016b	       324	dscontrol.c	FUNCTION_2	SWITCH_1	CALL_24
0x400016b	    0x488b87400300	           mov rax, qword [rdi + 0x340] 	       152	dscontrol.c	FUNCTION_2	SWITCH_1
0x4000172	        0x668b400a	                mov ax, word [rax + 0xa]	       151	dscontrol.c	FUNCTION_2	SWITCH_1
0x4000176	          0x884710	               mov byte [rdi + 0x10], al	       151	dscontrol.c	FUNCTION_2	SWITCH_1
0x4000179	            0xeb3a	                           jmp 0x40001b5	       151	dscontrol.c	FUNCTION_2	SWITCH_1
0x400017b	    0x488baf400300	           mov rbp, qword [rdi + 0x340] 	       171	dscontrol.c	FUNCTION_2	SWITCH_1
0x4000182	      0x66837d0a00	                 cmp word [rbp + 0xa], 0	       172	dscontrol.c	FUNCTION_2	SWITCH_1	IF_1
0x4000187	            0x742c	                            je 0x40001b5	       172	dscontrol.c	FUNCTION_2	SWITCH_1	IF_1
0x4000189	        0x4c8b6528	            mov r12, qword [rbp + 0x28] 	       182	dscontrol.c	FUNCTION_2	SWITCH_1	IF_1	IF_2	CALL_7
0x400018d	      0xe800000000	                          call 0x4000192	       182	dscontrol.c	FUNCTION_2	SWITCH_1	IF_1	IF_2	CALL_7
0x4000192	      0xba21300000	                         mov edx, 0x3021	       185	dscontrol.c	FUNCTION_2	SWITCH_1	IF_1	IF_2
0x4000197	          0x4939c4	                            cmp r12, rax	       182	dscontrol.c	FUNCTION_2	SWITCH_1	IF_1	IF_2	CALL_7
0x400019a	     0xf886a010000	                            js 0x400030a	       182	dscontrol.c	FUNCTION_2	SWITCH_1	IF_1	IF_2	CALL_7
0x40001a0	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       195	dscontrol.c	FUNCTION_2	SWITCH_1	IF_1
0x40001a4	      0xba02400000	                         mov edx, 0x4002	       193	dscontrol.c	FUNCTION_2	SWITCH_1	IF_1
0x40001a9	    0x488983300300	            mov qword [rbx + 0x330], rax	       194	dscontrol.c	FUNCTION_2	SWITCH_1	IF_1
0x40001b0	      0xe955010000	                           jmp 0x400030a	       196	dscontrol.c	FUNCTION_2	SWITCH_1	IF_1
0x40001b5	    0x488dbb400300	                  lea rdi, [rbx + 0x340]	       207	dscontrol.c	FUNCTION_2	SWITCH_1	CALL_9
0x40001bc	      0xe800000000	                          call 0x40001c1	       206	dscontrol.c	FUNCTION_2	SWITCH_1
0x40001c1	          0x4889c7	                            mov rdi, rax	       208	dscontrol.c	FUNCTION_2	SWITCH_1	CALL_10
0x40001c4	      0xe800000000	                          call 0x40001c9	       208	dscontrol.c	FUNCTION_2	SWITCH_1	CALL_10
0x40001c9	      0xe915010000	                           jmp 0x40002e3	       208	dscontrol.c	FUNCTION_2	SWITCH_1	CALL_10
0x40001ce	      0x48837e2800	               cmp qword [rsi + 0x28], 0	       222	dscontrol.c	FUNCTION_2	SWITCH_1	IF_3
0x40001d3	            0x743d	                            je 0x4000212	       222	dscontrol.c	FUNCTION_2	SWITCH_1	IF_3
0x40001d5	      0xe800000000	                          call 0x40001da	       226	dscontrol.c	FUNCTION_2	SWITCH_1	IF_3	CALL_12
0x40001da	        0x488b7528	            mov rsi, qword [rbp + 0x28] 	       230	dscontrol.c	FUNCTION_2	SWITCH_1	IF_3
0x40001de	          0x4889df	                            mov rdi, rbx	       230	dscontrol.c	FUNCTION_2	SWITCH_1	IF_3
0x40001e1	      0xe800000000	                          call 0x40001e6	       230	dscontrol.c	FUNCTION_2	SWITCH_1	IF_3
0x40001e6	            0x85c0	                           test eax, eax	       233	dscontrol.c	FUNCTION_2	SWITCH_1	IF_3	IF_4	CALL_14
0x40001e8	            0x89c2	                            mov edx, eax	       230	dscontrol.c	FUNCTION_2	SWITCH_1	IF_3
0x40001ea	     0xf851a010000	                           jne 0x400030a	       233	dscontrol.c	FUNCTION_2	SWITCH_1	IF_3	IF_4	CALL_14
0x40001f0	    0x488dbbe00200	                  lea rdi, [rbx + 0x2e0]	       243	dscontrol.c	FUNCTION_2	SWITCH_1	IF_3	CALL_15
0x40001f7	          0x4889de	                            mov rsi, rbx	       242	dscontrol.c	FUNCTION_2	SWITCH_1	IF_3
0x40001fa	      0xe800000000	                          call 0x40001ff	       242	dscontrol.c	FUNCTION_2	SWITCH_1	IF_3
0x40001ff	            0x85c0	                           test eax, eax	       245	dscontrol.c	FUNCTION_2	SWITCH_1	IF_3	IF_5	CALL_16
0x4000201	            0x89c2	                            mov edx, eax	       245	dscontrol.c	FUNCTION_2	SWITCH_1	IF_3	IF_5	CALL_16
0x4000203	     0xf8501010000	                           jne 0x400030a	       245	dscontrol.c	FUNCTION_2	SWITCH_1	IF_3	IF_5	CALL_16
0x4000209	    0x488b83e00200	           mov rax, qword [rbx + 0x2e0] 	       254	dscontrol.c	FUNCTION_2	SWITCH_1	IF_3
0x4000210	            0xeb29	                           jmp 0x400023b	       254	dscontrol.c	FUNCTION_2	SWITCH_1	IF_3
0x4000212	        0x807f1700	                cmp byte [rdi + 0x17], 0	       255	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6
0x4000216	            0x7449	                            je 0x4000261	       255	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6
0x4000218	      0xe800000000	                          call 0x400021d	       259	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6	CALL_17
0x400021d	    0x488bbb980300	           mov rdi, qword [rbx + 0x398] 	       271	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6	IF_7	CALL_18
0x4000224	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       271	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6	IF_7	CALL_18
0x4000228	    0x668178080e14	              cmp word [rax + 8], 0x140e	       271	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6	IF_7	CALL_18
0x400022e	            0x7414	                            je 0x4000244	       271	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6	IF_7	CALL_18
0x4000230	    0x488b83980300	           mov rax, qword [rbx + 0x398] 	       289	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6
0x4000237	        0x488b4010	            mov rax, qword [rax + 0x10] 	       289	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6
0x400023b	    0x488983a00300	            mov qword [rbx + 0x3a0], rax	       288	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6
0x4000242	            0xeb49	                           jmp 0x400028d	       288	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6
0x4000244	        0x80780d03	                 cmp byte [rax + 0xd], 3	       276	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6	IF_7
0x4000248	            0x74e6	                            je 0x4000230	       276	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6	IF_7
0x400024a	        0x4883c710	                           add rdi, 0x10	       279	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6	IF_7	CALL_19
0x400024e	          0x4889de	                            mov rsi, rbx	       278	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6	IF_7
0x4000251	      0xe800000000	                          call 0x4000256	       278	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6	IF_7
0x4000256	            0x85c0	                           test eax, eax	       283	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6	IF_7	IF_8	CALL_20
0x4000258	            0x89c2	                            mov edx, eax	       283	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6	IF_7	IF_8	CALL_20
0x400025a	            0x74d4	                            je 0x4000230	       283	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6	IF_7	IF_8	CALL_20
0x400025c	      0xe9a9000000	                           jmp 0x400030a	       283	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_6	IF_7	IF_8	CALL_20
0x4000261	        0x807f0d00	                 cmp byte [rdi + 0xd], 0	       293	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_2	IF_9
0x4000265	            0x740c	                            je 0x4000273	       293	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_2	IF_9
0x4000267	    0x488bbfe00200	           mov rdi, qword [rdi + 0x2e0] 	       294	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_2	IF_9	CALL_21
0x400026e	      0xe800000000	                          call 0x4000273	       294	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_2	IF_9	CALL_21
0x4000273	    0x48c783e00200	              mov qword [rbx + 0x2e0], 0	       298	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_2
0x400027e	        0xc6430d00	                 mov byte [rbx + 0xd], 0	       299	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_2
0x4000282	    0x48c783a00300	              mov qword [rbx + 0x3a0], 0	       300	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_2
0x400028d	      0xba03400000	                         mov edx, 0x4003	       309	dscontrol.c	FUNCTION_2	SWITCH_1
0x4000292	            0xeb76	                           jmp 0x400030a	       309	dscontrol.c	FUNCTION_2	SWITCH_1
0x4000294	    0x4c8da3400300	                  lea r12, [rbx + 0x340]	       337	dscontrol.c	FUNCTION_2	SWITCH_1	WHILE_1	CALL_25
0x400029b	    0x488b83400300	           mov rax, qword [rbx + 0x340] 	       333	dscontrol.c	FUNCTION_2	SWITCH_1	WHILE_1
0x40002a2	          0x4885c0	                           test rax, rax	       333	dscontrol.c	FUNCTION_2	SWITCH_1	WHILE_1
0x40002a5	            0x7440	                            je 0x40002e7	       333	dscontrol.c	FUNCTION_2	SWITCH_1	WHILE_1
0x40002a7	    0x6681780ea200	              cmp word [rax + 0xe], 0xa2	       333	dscontrol.c	FUNCTION_2	SWITCH_1	WHILE_1
0x40002ad	            0x743f	                            je 0x40002ee	       333	dscontrol.c	FUNCTION_2	SWITCH_1	WHILE_1
0x40002af	          0x4c89e7	                            mov rdi, r12	       336	dscontrol.c	FUNCTION_2	SWITCH_1	WHILE_1
0x40002b2	      0xe800000000	                          call 0x40002b7	       336	dscontrol.c	FUNCTION_2	SWITCH_1	WHILE_1
0x40002b7	          0x4889c7	                            mov rdi, rax	       339	dscontrol.c	FUNCTION_2	SWITCH_1	WHILE_1	CALL_26
0x40002ba	      0xe800000000	                          call 0x40002bf	       339	dscontrol.c	FUNCTION_2	SWITCH_1	WHILE_1	CALL_26
0x40002bf	            0xebda	                           jmp 0x400029b	       339	dscontrol.c	FUNCTION_2	SWITCH_1	WHILE_1	CALL_26
0x40002c1	    0x48c7c2000000	                              mov rdx, 0	       364	dscontrol.c	FUNCTION_2	SWITCH_1	CALL_27
0x40002c8	          0x4989e8	                             mov r8, rbp	       364	dscontrol.c	FUNCTION_2	SWITCH_1	CALL_27
0x40002cb	      0xbe6d010000	                          mov esi, 0x16d	       364	dscontrol.c	FUNCTION_2	SWITCH_1	CALL_27
0x40002d0	    0x48c7c7000000	                              mov rdi, 0	       364	dscontrol.c	FUNCTION_2	SWITCH_1	CALL_27
0x40002d7	      0xe800000000	                          call 0x40002dc	       364	dscontrol.c	FUNCTION_2	SWITCH_1	CALL_27
0x40002dc	      0xba01300000	                         mov edx, 0x3001	       367	dscontrol.c	FUNCTION_2	SWITCH_1
0x40002e1	            0xeb27	                           jmp 0x400030a	       368	dscontrol.c	FUNCTION_2	SWITCH_1
0x40002e3	            0x31d2	                            xor edx, edx	       137	dscontrol.c	FUNCTION_2
0x40002e5	            0xeb23	                           jmp 0x400030a	       137	dscontrol.c	FUNCTION_2
0x40002e7	      0xba1a300000	                         mov edx, 0x301a	       345	dscontrol.c	FUNCTION_2	SWITCH_1	IF_10
0x40002ec	            0xeb1c	                           jmp 0x400030a	       345	dscontrol.c	FUNCTION_2	SWITCH_1	IF_10
0x40002ee	        0x488b4020	            mov rax, qword [rax + 0x20] 	       351	dscontrol.c	FUNCTION_2	SWITCH_1
0x40002f2	            0x31d2	                            xor edx, edx	       358	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_3
0x40002f4	    0x488983300300	            mov qword [rbx + 0x330], rax	       350	dscontrol.c	FUNCTION_2	SWITCH_1
0x40002fb	    0x66817d0aa500	              cmp word [rbp + 0xa], 0xa5	       358	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_3
0x4000301	           0xf95c2	                                setne dl	       358	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_3
0x4000304	    0x81c209400000	                         add edx, 0x4009	       358	dscontrol.c	FUNCTION_2	SWITCH_1	ELSE_3
0x400030a	              0x5b	                                 pop rbx	       372	dscontrol.c	FUNCTION_2
0x400030b	            0x89d0	                            mov eax, edx	       372	dscontrol.c	FUNCTION_2
0x400030d	              0x5d	                                 pop rbp	       372	dscontrol.c	FUNCTION_2
0x400030e	            0x415c	                                 pop r12	       372	dscontrol.c	FUNCTION_2
0x4000310	              0xc3	                                     ret	       372	dscontrol.c	FUNCTION_2
acpi_ds_exec_begin_control_op	CALL,5:DO,0:FOR,0:SWITCH,1:ELSE,0:WHILE,0:IF,4:functions,0	53
0x4000040	            0x4154	                                push r12	        37	dscontrol.c	FUNCTION_1
0x4000042	              0x55	                                push rbp	        37	dscontrol.c	FUNCTION_1
0x4000043	              0x53	                                push rbx	        37	dscontrol.c	FUNCTION_1
0x4000044	        0x668b460a	                mov ax, word [rsi + 0xa]	        46	dscontrol.c	FUNCTION_1	SWITCH_1
0x4000048	        0x663da100	                            cmp ax, 0xa1	        46	dscontrol.c	FUNCTION_1	SWITCH_1
0x400004c	     0xf8493000000	                            je 0x40000e5	        46	dscontrol.c	FUNCTION_1	SWITCH_1
0x4000052	        0x663da200	                            cmp ax, 0xa2	        46	dscontrol.c	FUNCTION_1	SWITCH_1
0x4000056	            0x740c	                            je 0x4000064	        46	dscontrol.c	FUNCTION_1	SWITCH_1
0x4000058	        0x663da000	                            cmp ax, 0xa0	        46	dscontrol.c	FUNCTION_1	SWITCH_1
0x400005c	     0xf8592000000	                           jne 0x40000f4	        46	dscontrol.c	FUNCTION_1	SWITCH_1
0x4000062	            0xeb22	                           jmp 0x4000086	        46	dscontrol.c	FUNCTION_1	SWITCH_1
0x4000064	    0x488b87400300	           mov rax, qword [rdi + 0x340] 	        52	dscontrol.c	FUNCTION_1	SWITCH_1	IF_1
0x400006b	          0x4885c0	                           test rax, rax	        52	dscontrol.c	FUNCTION_1	SWITCH_1	IF_1
0x400006e	            0x7416	                            je 0x4000086	        52	dscontrol.c	FUNCTION_1	SWITCH_1	IF_1
0x4000070	        0x488b4f38	            mov rcx, qword [rdi + 0x38] 	        53	dscontrol.c	FUNCTION_1	SWITCH_1	IF_1	IF_2
0x4000074	        0x488d51ff	                      lea rdx, [rcx - 1]	        53	dscontrol.c	FUNCTION_1	SWITCH_1	IF_1	IF_2
0x4000078	        0x48395018	            cmp qword [rax + 0x18], rdx 	        53	dscontrol.c	FUNCTION_1	SWITCH_1	IF_1	IF_2
0x400007c	            0x7508	                           jne 0x4000086	        53	dscontrol.c	FUNCTION_1	SWITCH_1	IF_1	IF_2
0x400007e	    0x66c7400cc100	              mov word [rax + 0xc], 0xc1	        59	dscontrol.c	FUNCTION_1	SWITCH_1	IF_1	IF_2
0x4000084	            0xeb6e	                           jmp 0x40000f4	        59	dscontrol.c	FUNCTION_1	SWITCH_1	IF_1	IF_2
0x4000086	          0x4989f4	                            mov r12, rsi	        59	dscontrol.c	FUNCTION_1	SWITCH_1	IF_1	IF_2
0x4000089	          0x4889fb	                            mov rbx, rdi	        59	dscontrol.c	FUNCTION_1	SWITCH_1	IF_1	IF_2
0x400008c	      0xe800000000	                          call 0x4000091	        73	dscontrol.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000091	          0x4889c5	                            mov rbp, rax	        73	dscontrol.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000094	      0xb804000000	                              mov eax, 4	        75	dscontrol.c	FUNCTION_1	SWITCH_1	IF_3
0x4000099	          0x4885ed	                           test rbp, rbp	        74	dscontrol.c	FUNCTION_1	SWITCH_1	IF_3
0x400009c	            0x7458	                            je 0x40000f6	        74	dscontrol.c	FUNCTION_1	SWITCH_1	IF_3
0x400009e	        0x488b4338	            mov rax, qword [rbx + 0x38] 	        82	dscontrol.c	FUNCTION_1	SWITCH_1
0x40000a2	          0x48ffc8	                                 dec rax	        82	dscontrol.c	FUNCTION_1	SWITCH_1
0x40000a5	        0x48894518	            mov qword [rbp + 0x18], rax 	        82	dscontrol.c	FUNCTION_1	SWITCH_1
0x40000a9	        0x488b4350	            mov rax, qword [rbx + 0x50] 	        85	dscontrol.c	FUNCTION_1	SWITCH_1
0x40000ad	        0x48894520	            mov qword [rbp + 0x20], rax 	        84	dscontrol.c	FUNCTION_1	SWITCH_1
0x40000b1	    0x66418b44240a	                mov ax, word [r12 + 0xa]	        86	dscontrol.c	FUNCTION_1	SWITCH_1
0x40000b7	        0x6689450e	                mov word [rbp + 0xe], ax	        86	dscontrol.c	FUNCTION_1	SWITCH_1
0x40000bb	      0xe800000000	                          call 0x40000c0	        87	dscontrol.c	FUNCTION_1	SWITCH_1	CALL_4
0x40000c0	    0x8b1500000000	            mov edx, dword [0x040000c6] 	        87	dscontrol.c	FUNCTION_1	SWITCH_1	CALL_4
0x40000c6	    0x488dbb400300	                  lea rdi, [rbx + 0x340]	        92	dscontrol.c	FUNCTION_1	SWITCH_1	CALL_5
0x40000cd	          0x4889ee	                            mov rsi, rbp	        92	dscontrol.c	FUNCTION_1	SWITCH_1	CALL_5
0x40000d0	    0x4869d2809698	                 imul rdx, rdx, 0x989680	        87	dscontrol.c	FUNCTION_1	SWITCH_1	CALL_4
0x40000d7	          0x4801d0	                            add rax, rdx	        87	dscontrol.c	FUNCTION_1	SWITCH_1	CALL_4
0x40000da	        0x48894528	            mov qword [rbp + 0x28], rax 	        87	dscontrol.c	FUNCTION_1	SWITCH_1	CALL_4
0x40000de	      0xe800000000	                          call 0x40000e3	        92	dscontrol.c	FUNCTION_1	SWITCH_1	CALL_5
0x40000e3	            0xeb0f	                           jmp 0x40000f4	        92	dscontrol.c	FUNCTION_1	SWITCH_1	CALL_5
0x40000e5	        0x807f1001	                cmp byte [rdi + 0x10], 1	       102	dscontrol.c	FUNCTION_1	SWITCH_1	IF_4
0x40000e9	            0x19c0	                            sbb eax, eax	       102	dscontrol.c	FUNCTION_1	SWITCH_1	IF_4
0x40000eb	            0xf7d0	                                 not eax	       102	dscontrol.c	FUNCTION_1	SWITCH_1	IF_4
0x40000ed	      0x2504400000	                         and eax, 0x4004	       102	dscontrol.c	FUNCTION_1	SWITCH_1	IF_4
0x40000f2	            0xeb02	                           jmp 0x40000f6	       102	dscontrol.c	FUNCTION_1	SWITCH_1	IF_4
0x40000f4	            0x31c0	                            xor eax, eax	        38	dscontrol.c	FUNCTION_1
0x40000f6	              0x5b	                                 pop rbx	       117	dscontrol.c	FUNCTION_1
0x40000f7	              0x5d	                                 pop rbp	       117	dscontrol.c	FUNCTION_1
0x40000f8	            0x415c	                                 pop r12	       117	dscontrol.c	FUNCTION_1
0x40000fa	              0xc3	                                     ret	       117	dscontrol.c	FUNCTION_1
