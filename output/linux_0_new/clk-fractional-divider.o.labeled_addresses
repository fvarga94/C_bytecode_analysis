clk_register_fractional_divider	SWITCH,0:IF,1:WHILE,0:functions,0:FOR,0:ELSE,0:DO,0:CALL,3	16
0x40003e0	        0xff742428	                 push qword [rsp + 0x28]	       180	clk-fractional-divider.c	FUNCTION_6	CALL_1
0x40003e4	       0xfb6442428	           movzx eax, byte [rsp + 0x28] 	       180	clk-fractional-divider.c	FUNCTION_6	CALL_1
0x40003e9	        0x450fb6c9	                          movzx r9d, r9b	       180	clk-fractional-divider.c	FUNCTION_6	CALL_1
0x40003ed	              0x50	                                push rax	       180	clk-fractional-divider.c	FUNCTION_6	CALL_1
0x40003ee	       0xfb6442428	           movzx eax, byte [rsp + 0x28] 	       180	clk-fractional-divider.c	FUNCTION_6	CALL_1
0x40003f3	              0x50	                                push rax	       180	clk-fractional-divider.c	FUNCTION_6	CALL_1
0x40003f4	       0xfb6442428	           movzx eax, byte [rsp + 0x28] 	       180	clk-fractional-divider.c	FUNCTION_6	CALL_1
0x40003f9	              0x50	                                push rax	       180	clk-fractional-divider.c	FUNCTION_6	CALL_1
0x40003fa	       0xfb6442428	           movzx eax, byte [rsp + 0x28] 	       180	clk-fractional-divider.c	FUNCTION_6	CALL_1
0x40003ff	              0x50	                                push rax	       180	clk-fractional-divider.c	FUNCTION_6	CALL_1
0x4000400	      0xe800000000	                          call 0x4000405	       180	clk-fractional-divider.c	FUNCTION_6	CALL_1
0x4000405	        0x4883c428	                           add rsp, 0x28	       183	clk-fractional-divider.c	FUNCTION_6	IF_1	CALL_2
0x4000409	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       183	clk-fractional-divider.c	FUNCTION_6	IF_1	CALL_2
0x400040f	            0x7704	                            ja 0x4000415	       183	clk-fractional-divider.c	FUNCTION_6	IF_1	CALL_2
0x4000411	        0x488b4008	                mov rax, qword [rax + 8]	       185	clk-fractional-divider.c	FUNCTION_6
0x4000415	            0xf3c3	                                     ret	       186	clk-fractional-divider.c	FUNCTION_6
clk_hw_unregister_fractional_divider	SWITCH,0:IF,0:WHILE,0:functions,0:FOR,0:ELSE,0:DO,0:CALL,3	6
0x4000420	              0x53	                                push rbx	       190	clk-fractional-divider.c	FUNCTION_7
0x4000421	          0x4889fb	                            mov rbx, rdi	       190	clk-fractional-divider.c	FUNCTION_7
0x4000424	      0xe800000000	                          call 0x4000429	       195	clk-fractional-divider.c	FUNCTION_7	CALL_2
0x4000429	          0x4889df	                            mov rdi, rbx	       196	clk-fractional-divider.c	FUNCTION_7	CALL_3
0x400042c	              0x5b	                                 pop rbx	       197	clk-fractional-divider.c	FUNCTION_7
0x400042d	      0xe900000000	                   jmp section_end..text	       196	clk-fractional-divider.c	FUNCTION_7	CALL_3
