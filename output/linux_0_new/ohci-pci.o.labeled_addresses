ohci_pci_reset	SWITCH,0:functions,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,4:CALL,6	24
0x40000b0	              0x55	                                push rbp	       243	ohci-pci.c	FUNCTION_11
0x40000b1	              0x53	                                push rbx	       243	ohci-pci.c	FUNCTION_11
0x40000b2	          0x4889fb	                            mov rbx, rdi	       243	ohci-pci.c	FUNCTION_11
0x40000b5	          0x488b2f	                    mov rbp, qword [rdi]	       245	ohci-pci.c	FUNCTION_11	CALL_2
0x40000b8	          0x4885ed	                           test rbp, rbp	       248	ohci-pci.c	FUNCTION_11	IF_1
0x40000bb	            0x7428	                            je 0x40000e5	       248	ohci-pci.c	FUNCTION_11	IF_1
0x40000bd	    0x488db560ffff	                   lea rsi, [rbp - 0xa0]	       251	ohci-pci.c	FUNCTION_11	IF_1	CALL_3
0x40000c4	    0x48c7c7000000	                              mov rdi, 0	       251	ohci-pci.c	FUNCTION_11	IF_1	CALL_3
0x40000cb	      0xe800000000	                          call 0x40000d0	       251	ohci-pci.c	FUNCTION_11	IF_1	CALL_3
0x40000d0	          0x4885c0	                           test rax, rax	       252	ohci-pci.c	FUNCTION_11	IF_1	IF_2
0x40000d3	            0x7410	                            je 0x40000e5	       252	ohci-pci.c	FUNCTION_11	IF_1	IF_2
0x40000d5	        0x488b4018	            mov rax, qword [rax + 0x18] 	       255	ohci-pci.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x40000d9	          0x4889df	                            mov rdi, rbx	       255	ohci-pci.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x40000dc	      0xe800000000	                          call 0x40000e1	       255	ohci-pci.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x40000e1	            0x85c0	                           test eax, eax	       259	ohci-pci.c	FUNCTION_11	IF_3
0x40000e3	            0x7508	                           jne 0x40000ed	       259	ohci-pci.c	FUNCTION_11	IF_3
0x40000e5	          0x4889df	                            mov rdi, rbx	       260	ohci-pci.c	FUNCTION_11	CALL_5
0x40000e8	      0xe800000000	                          call 0x40000ed	       260	ohci-pci.c	FUNCTION_11	CALL_5
0x40000ed	    0xf685cc000000	               test byte [rbp + 0xcc], 1	       265	ohci-pci.c	FUNCTION_11	IF_4	CALL_6
0x40000f4	            0x740a	                            je 0x4000100	       265	ohci-pci.c	FUNCTION_11	IF_4	CALL_6
0x40000f6	    0x818b38060000	           or dword [rbx + 0x638], 0x200	       266	ohci-pci.c	FUNCTION_11	IF_4
0x4000100	              0x5b	                                 pop rbx	       268	ohci-pci.c	FUNCTION_11
0x4000101	              0x5d	                                 pop rbp	       268	ohci-pci.c	FUNCTION_11
0x4000102	              0xc3	                                     ret	       268	ohci-pci.c	FUNCTION_11
ohci_quirk_amd756	SWITCH,0:functions,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:CALL,3	7
0x4000170	    0x48c787500600	              mov qword [rdi + 0x650], 1	        48	ohci-pci.c	FUNCTION_2
0x400017b	        0x488b7f60	            mov rdi, qword [rdi + 0x60] 	        37	ohci-pci.c	FUNCTION_1	CALL_1
0x400017f	            0x31f6	                            xor esi, esi	        37	ohci-pci.c	FUNCTION_1	CALL_1
0x4000181	    0x4881c7980000	                           add rdi, 0x98	        37	ohci-pci.c	FUNCTION_1	CALL_1
0x4000188	      0xe800000000	                          call 0x400018d	        37	ohci-pci.c	FUNCTION_1	CALL_1
0x400018d	            0x31c0	                            xor eax, eax	        53	ohci-pci.c	FUNCTION_2
0x400018f	              0xc3	                                     ret	        53	ohci-pci.c	FUNCTION_2
ohci_quirk_zfmicro	SWITCH,0:functions,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:CALL,2	3
0x4000050	    0x48838f500600	            or qword [rdi + 0x650], 0x20	        98	ohci-pci.c	FUNCTION_5
0x4000058	            0x31c0	                            xor eax, eax	       102	ohci-pci.c	FUNCTION_5
0x400005a	              0xc3	                                     ret	       102	ohci-pci.c	FUNCTION_5
ohci_quirk_ns	SWITCH,0:functions,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:CALL,7	18
0x40001f0	              0x53	                                push rbx	        73	ohci-pci.c	FUNCTION_4
0x40001f1	          0x488b07	                    mov rax, qword [rdi]	        74	ohci-pci.c	FUNCTION_4	CALL_1
0x40001f4	          0x4889fb	                            mov rbx, rdi	        73	ohci-pci.c	FUNCTION_4
0x40001f7	          0x8b7098	             mov esi, dword [rax - 0x68]	        77	ohci-pci.c	FUNCTION_4	CALL_4
0x40001fa	    0x488bb870ffff	             mov rdi, qword [rax - 0x90]	        77	ohci-pci.c	FUNCTION_4	CALL_4
0x4000201	    0x81e6f8000000	                           and esi, 0xf8	        77	ohci-pci.c	FUNCTION_4	CALL_4
0x4000207	          0x83ce01	                               or esi, 1	        77	ohci-pci.c	FUNCTION_4	CALL_4
0x400020a	      0xe800000000	                          call 0x400020f	        77	ohci-pci.c	FUNCTION_4	CALL_4
0x400020f	          0x4885c0	                           test rax, rax	        78	ohci-pci.c	FUNCTION_4	IF_1
0x4000212	            0x7411	                            je 0x4000225	        78	ohci-pci.c	FUNCTION_4	IF_1
0x4000214	    0x81783c0b100e	        cmp dword [rax + 0x3c], 0xe100b 	        79	ohci-pci.c	FUNCTION_4	IF_1
0x400021b	            0x7508	                           jne 0x4000225	        79	ohci-pci.c	FUNCTION_4	IF_1
0x400021d	    0x48838b500600	               or qword [rbx + 0x650], 2	        82	ohci-pci.c	FUNCTION_4	IF_1
0x4000225	          0x4889c7	                            mov rdi, rax	        85	ohci-pci.c	FUNCTION_4	CALL_7
0x4000228	      0xe800000000	                          call 0x400022d	        85	ohci-pci.c	FUNCTION_4	CALL_7
0x400022d	            0x31c0	                            xor eax, eax	        88	ohci-pci.c	FUNCTION_4
0x400022f	              0x5b	                                 pop rbx	        88	ohci-pci.c	FUNCTION_4
0x4000230	              0xc3	                                     ret	        88	ohci-pci.c	FUNCTION_4
ohci_quirk_toshiba_scc	SWITCH,0:functions,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:CALL,3	5
0x40001d0	          0x488b3f	                    mov rdi, qword [rdi]	       121	ohci-pci.c	FUNCTION_6	CALL_3
0x40001d3	    0x48c7c6000000	                              mov rsi, 0	       121	ohci-pci.c	FUNCTION_6	CALL_3
0x40001da	      0xe800000000	                          call 0x40001df	       121	ohci-pci.c	FUNCTION_6	CALL_3
0x40001df	      0xb8faffffff	                     mov eax, 0xfffffffa	       124	ohci-pci.c	FUNCTION_6
0x40001e4	              0xc3	                                     ret	       124	ohci-pci.c	FUNCTION_6
ohci_pci_cleanup	SWITCH,0:functions,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:CALL,1	8
0x4000040	            0x31c0	                            xor eax, eax	        66	ohci-pci.c	FUNCTION_3
0x4000042	              0xc3	                                     ret	        66	ohci-pci.c	FUNCTION_3
0x4000043	           0xf1f00	                         nop dword [rax]	        66	ohci-pci.c	FUNCTION_3
0x4000046	              0x66	                                 invalid	        66	ohci-pci.c	FUNCTION_3
0x4000047	              0x2e	                                 invalid	        66	ohci-pci.c	FUNCTION_3
0x4000048	               0xf	                                 invalid	        66	ohci-pci.c	FUNCTION_3
0x4000049	              0x1f	                                 invalid	        66	ohci-pci.c	FUNCTION_3
0x400004a	            0x8400	                     test byte [rax], al	        66	ohci-pci.c	FUNCTION_3
ohci_quirk_amd700	SWITCH,0:functions,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,2:CALL,4	16
0x4000110	              0x53	                                push rbx	       152	ohci-pci.c	FUNCTION_9
0x4000111	          0x4889fb	                            mov rbx, rdi	       152	ohci-pci.c	FUNCTION_9
0x4000114	      0xe800000000	                          call 0x4000119	       155	ohci-pci.c	FUNCTION_9	IF_1	CALL_2
0x4000119	            0x85c0	                           test eax, eax	       155	ohci-pci.c	FUNCTION_9	IF_1	CALL_2
0x400011b	            0x740b	                            je 0x4000128	       155	ohci-pci.c	FUNCTION_9	IF_1	CALL_2
0x400011d	    0x48818b500600	           or qword [rbx + 0x650], 0x200	       156	ohci-pci.c	FUNCTION_9	IF_1
0x4000128	      0xe800000000	                          call 0x400012d	       159	ohci-pci.c	FUNCTION_9	IF_2	CALL_3
0x400012d	            0x84c0	                             test al, al	       159	ohci-pci.c	FUNCTION_9	IF_2	CALL_3
0x400012f	    0x488b83500600	           mov rax, qword [rbx + 0x650] 	       160	ohci-pci.c	FUNCTION_9	IF_2
0x4000136	            0x7403	                            je 0x400013b	       159	ohci-pci.c	FUNCTION_9	IF_2	CALL_3
0x4000138	          0x80cc04	                                or ah, 4	       160	ohci-pci.c	FUNCTION_9	IF_2
0x400013b	          0x80cc08	                                or ah, 8	       164	ohci-pci.c	FUNCTION_9
0x400013e	    0x488983500600	            mov qword [rbx + 0x650], rax	       164	ohci-pci.c	FUNCTION_9
0x4000145	            0x31c0	                            xor eax, eax	       166	ohci-pci.c	FUNCTION_9
0x4000147	              0x5b	                                 pop rbx	       166	ohci-pci.c	FUNCTION_9
0x4000148	              0xc3	                                     ret	       166	ohci-pci.c	FUNCTION_9
ohci_quirk_nec_worker	SWITCH,0:functions,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:CALL,3	14
0x4000190	              0x53	                                push rbx	       130	ohci-pci.c	FUNCTION_7
0x4000191	          0x4889fb	                            mov rbx, rdi	       130	ohci-pci.c	FUNCTION_7
0x4000194	    0x4881ef600400	                          sub rdi, 0x460	       134	ohci-pci.c	FUNCTION_7	CALL_2
0x400019b	      0xe800000000	                          call 0x40001a0	       134	ohci-pci.c	FUNCTION_7	CALL_2
0x40001a0	            0x85c0	                           test eax, eax	       135	ohci-pci.c	FUNCTION_7	IF_1
0x40001a2	            0x7502	                           jne 0x40001a6	       135	ohci-pci.c	FUNCTION_7	IF_1
0x40001a4	              0x5b	                                 pop rbx	       138	ohci-pci.c	FUNCTION_7
0x40001a5	              0xc3	                                     ret	       138	ohci-pci.c	FUNCTION_7
0x40001a6	    0x488bbb70f9ff	            mov rdi, qword [rbx - 0x690]	       136	ohci-pci.c	FUNCTION_7	IF_1	CALL_3
0x40001ad	            0x89c1	                            mov ecx, eax	       136	ohci-pci.c	FUNCTION_7	IF_1	CALL_3
0x40001af	    0x48c7c2000000	                              mov rdx, 0	       136	ohci-pci.c	FUNCTION_7	IF_1	CALL_3
0x40001b6	              0x5b	                                 pop rbx	       138	ohci-pci.c	FUNCTION_7
0x40001b7	    0x48c7c6000000	                              mov rsi, 0	       136	ohci-pci.c	FUNCTION_7	IF_1	CALL_3
0x40001be	      0xe900000000	                           jmp 0x40001c3	       136	ohci-pci.c	FUNCTION_7	IF_1	CALL_3
ohci_quirk_opti	SWITCH,0:functions,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:CALL,2	2
0x4000040	            0x31c0	                            xor eax, eax	        66	ohci-pci.c	FUNCTION_3
0x4000042	              0xc3	                                     ret	        66	ohci-pci.c	FUNCTION_3
ohci_quirk_qemu	SWITCH,0:functions,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:CALL,2	3
0x40000a0	    0x48818f500600	          or qword [rdi + 0x650], 0x1000	       172	ohci-pci.c	FUNCTION_10
0x40000ab	            0x31c0	                            xor eax, eax	       175	ohci-pci.c	FUNCTION_10
0x40000ad	              0xc3	                                     ret	       175	ohci-pci.c	FUNCTION_10
