agp_backend_cleanup	ELSE,0:WHILE,0:functions,0:CALL,5:FOR,0:SWITCH,0:DO,0:IF,3	37
0x40000b0	              0x55	                                push rbp	       213	backend.c	FUNCTION_5
0x40000b1	              0x53	                                push rbx	       213	backend.c	FUNCTION_5
0x40000b2	          0x4889fb	                            mov rbx, rdi	       213	backend.c	FUNCTION_5
0x40000b5	        0x488b4708	                mov rax, qword [rdi + 8]	       214	backend.c	FUNCTION_5	IF_1
0x40000b9	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       214	backend.c	FUNCTION_5	IF_1
0x40000bd	          0x4885d2	                           test rdx, rdx	       214	backend.c	FUNCTION_5	IF_1
0x40000c0	            0x7409	                            je 0x40000cb	       214	backend.c	FUNCTION_5	IF_1
0x40000c2	      0xe800000000	                          call 0x40000c7	       215	backend.c	FUNCTION_5	CALL_1
0x40000c7	        0x488b4308	                mov rax, qword [rbx + 8]	       215	backend.c	FUNCTION_5	CALL_1
0x40000cb	        0x488b4068	            mov rax, qword [rax + 0x68] 	       216	backend.c	FUNCTION_5	IF_2
0x40000cf	          0x4885c0	                           test rax, rax	       216	backend.c	FUNCTION_5	IF_2
0x40000d2	            0x7408	                            je 0x40000dc	       216	backend.c	FUNCTION_5	IF_2
0x40000d4	          0x4889df	                            mov rdi, rbx	       217	backend.c	FUNCTION_5	CALL_2
0x40000d7	      0xe800000000	                          call 0x40000dc	       217	backend.c	FUNCTION_5	CALL_2
0x40000dc	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	       219	backend.c	FUNCTION_5	CALL_3
0x40000e0	      0xe800000000	                          call 0x40000e5	       219	backend.c	FUNCTION_5	CALL_3
0x40000e5	        0x488b4308	                mov rax, qword [rbx + 8]	       222	backend.c	FUNCTION_5	IF_3
0x40000e9	    0x48c743780000	               mov qword [rbx + 0x78], 0	       220	backend.c	FUNCTION_5
0x40000f1	    0x488b90a00000	            mov rdx, qword [rax + 0xa0] 	       222	backend.c	FUNCTION_5	IF_3
0x40000f8	          0x4885d2	                           test rdx, rdx	       222	backend.c	FUNCTION_5	IF_3
0x40000fb	            0x7406	                            je 0x4000103	       222	backend.c	FUNCTION_5	IF_3
0x40000fd	        0x80781900	                cmp byte [rax + 0x19], 0	       222	backend.c	FUNCTION_5	IF_3
0x4000101	            0x7503	                           jne 0x4000106	       222	backend.c	FUNCTION_5	IF_3
0x4000103	              0x5b	                                 pop rbx	       229	backend.c	FUNCTION_5
0x4000104	              0x5d	                                 pop rbp	       229	backend.c	FUNCTION_5
0x4000105	              0xc3	                                     ret	       229	backend.c	FUNCTION_5
0x4000106	        0x488b6b50	            mov rbp, qword [rbx + 0x50] 	       224	backend.c	FUNCTION_5	IF_3
0x400010a	      0xbe01000000	                              mov esi, 1	       226	backend.c	FUNCTION_5	IF_3	CALL_4
0x400010f	          0x4889ef	                            mov rdi, rbp	       226	backend.c	FUNCTION_5	IF_3	CALL_4
0x4000112	      0xe800000000	                          call 0x4000117	       226	backend.c	FUNCTION_5	IF_3	CALL_4
0x4000117	        0x488b4308	                mov rax, qword [rbx + 8]	       227	backend.c	FUNCTION_5	IF_3	CALL_5
0x400011b	          0x4889ef	                            mov rdi, rbp	       227	backend.c	FUNCTION_5	IF_3	CALL_5
0x400011e	      0xbe02000000	                              mov esi, 2	       227	backend.c	FUNCTION_5	IF_3	CALL_5
0x4000123	              0x5b	                                 pop rbx	       229	backend.c	FUNCTION_5
0x4000124	              0x5d	                                 pop rbp	       229	backend.c	FUNCTION_5
0x4000125	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       227	backend.c	FUNCTION_5	IF_3	CALL_5
0x400012c	      0xe900000000	                           jmp 0x4000131	       227	backend.c	FUNCTION_5	IF_3	CALL_5
agp_exit	ELSE,0:WHILE,0:functions,0:CALL,0:FOR,0:SWITCH,0:DO,0:IF,0	1
0x4000040	              0x48	                                 invalid	        71	backend.c	FUNCTION_1	CALL_1
