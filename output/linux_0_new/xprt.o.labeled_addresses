xprt_destroy_cb	FOR,0:SWITCH,0:WHILE,0:DO,0:ELSE,0:IF,0:CALL,8:functions,0	20
0x4000a50	              0x55	                                push rbp	      1466	xprt.c	FUNCTION_67
0x4000a51	              0x53	                                push rbx	      1466	xprt.c	FUNCTION_67
0x4000a52	    0x488d9f58fcff	                  lea rbx, [rdi - 0x3a8]	      1471	xprt.c	FUNCTION_67	CALL_3
0x4000a59	          0x4889fd	                            mov rbp, rdi	      1466	xprt.c	FUNCTION_67
0x4000a5c	    0x488dbbc80000	                   lea rdi, [rbx + 0xc8]	      1471	xprt.c	FUNCTION_67	CALL_3
0x4000a63	      0xe800000000	                          call 0x4000a68	      1471	xprt.c	FUNCTION_67	CALL_3
0x4000a68	    0x488dbb080200	                  lea rdi, [rbx + 0x208]	      1472	xprt.c	FUNCTION_67	CALL_4
0x4000a6f	      0xe800000000	                          call 0x4000a74	      1472	xprt.c	FUNCTION_67	CALL_4
0x4000a74	    0x488dbb680100	                  lea rdi, [rbx + 0x168]	      1473	xprt.c	FUNCTION_67	CALL_5
0x4000a7b	      0xe800000000	                          call 0x4000a80	      1473	xprt.c	FUNCTION_67	CALL_5
0x4000a80	    0x488dbba80200	                  lea rdi, [rbx + 0x2a8]	      1474	xprt.c	FUNCTION_67	CALL_6
0x4000a87	      0xe800000000	                          call 0x4000a8c	      1474	xprt.c	FUNCTION_67	CALL_6
0x4000a8c	    0x488bbd000100	           mov rdi, qword [rbp + 0x100] 	      1475	xprt.c	FUNCTION_67	CALL_7
0x4000a93	      0xe800000000	                          call 0x4000a98	      1475	xprt.c	FUNCTION_67	CALL_7
0x4000a98	    0x488b8560fcff	            mov rax, qword [rbp - 0x3a0]	      1479	xprt.c	FUNCTION_67	CALL_8
0x4000a9f	          0x4889df	                            mov rdi, rbx	      1479	xprt.c	FUNCTION_67	CALL_8
0x4000aa2	              0x5b	                                 pop rbx	      1480	xprt.c	FUNCTION_67
0x4000aa3	              0x5d	                                 pop rbp	      1480	xprt.c	FUNCTION_67
0x4000aa4	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1479	xprt.c	FUNCTION_67	CALL_8
0x4000aa8	      0xe900000000	                           jmp 0x4000aad	      1479	xprt.c	FUNCTION_67	CALL_8
xprt_wait_for_buffer_space	FOR,0:SWITCH,0:WHILE,0:DO,0:ELSE,0:IF,0:CALL,2:functions,0	12
0x40004b0	          0x4889f8	                            mov rax, rdi	       499	xprt.c	FUNCTION_21
0x40004b3	            0x31c9	                            xor ecx, ecx	       503	xprt.c	FUNCTION_21	CALL_1
0x40004b5	    0x4c8b87b80000	              mov r8, qword [rdi + 0xb8]	       500	xprt.c	FUNCTION_21
0x40004bc	    0x66f780d40000	         test word [rax + 0xd4], 0x1200 	       503	xprt.c	FUNCTION_21	CALL_1
0x40004c5	          0x4889f2	                            mov rdx, rsi	       499	xprt.c	FUNCTION_21
0x40004c8	          0x498b38	                     mov rdi, qword [r8]	       501	xprt.c	FUNCTION_21
0x40004cb	            0x7407	                            je 0x40004d4	       503	xprt.c	FUNCTION_21	CALL_1
0x40004cd	    0x498b88480100	            mov rcx, qword [r8 + 0x148] 	       503	xprt.c	FUNCTION_21	CALL_1
0x40004d4	        0x48894828	             mov qword [rax + 0x28], rcx	       503	xprt.c	FUNCTION_21	CALL_1
0x40004d8	    0x4881c7080200	                          add rdi, 0x208	       504	xprt.c	FUNCTION_21	CALL_2
0x40004df	          0x4889c6	                            mov rsi, rax	       504	xprt.c	FUNCTION_21	CALL_2
0x40004e2	      0xe900000000	                           jmp 0x40004e7	       504	xprt.c	FUNCTION_21	CALL_2
xprt_connect_status	FOR,0:SWITCH,1:WHILE,0:DO,0:ELSE,0:IF,1:CALL,4:functions,0	30
0x4000150	          0x8b4704	                mov eax, dword [rdi + 4]	       794	xprt.c	FUNCTION_37	IF_1
0x4000153	            0x85c0	                           test eax, eax	       794	xprt.c	FUNCTION_37	IF_1
0x4000155	            0x7433	                            je 0x400018a	       794	xprt.c	FUNCTION_37	IF_1
0x4000157	          0x83f899	             cmp eax, 0xffffffffffffff99	       802	xprt.c	FUNCTION_37	SWITCH_1
0x400015a	            0x7e18	                           jle 0x4000174	       802	xprt.c	FUNCTION_37	SWITCH_1
0x400015c	          0x83f8e0	             cmp eax, 0xffffffffffffffe0	       802	xprt.c	FUNCTION_37	SWITCH_1
0x400015f	            0x7411	                            je 0x4000172	       802	xprt.c	FUNCTION_37	SWITCH_1
0x4000161	          0x83f8f5	             cmp eax, 0xfffffffffffffff5	       802	xprt.c	FUNCTION_37	SWITCH_1
0x4000164	            0x740c	                            je 0x4000172	       802	xprt.c	FUNCTION_37	SWITCH_1
0x4000166	          0x83f89b	             cmp eax, 0xffffffffffffff9b	       802	xprt.c	FUNCTION_37	SWITCH_1
0x4000169	            0x7407	                            je 0x4000172	       802	xprt.c	FUNCTION_37	SWITCH_1
0x400016b	    0xc74704fbffff	        mov dword [rdi + 4], 0xfffffffb 	       820	xprt.c	FUNCTION_37	SWITCH_1
0x4000172	            0xf3c3	                                     ret	       820	xprt.c	FUNCTION_37	SWITCH_1
0x4000174	          0x83f898	             cmp eax, 0xffffffffffffff98	       802	xprt.c	FUNCTION_37	SWITCH_1
0x4000177	            0x7df9	                           jge 0x4000172	       802	xprt.c	FUNCTION_37	SWITCH_1
0x4000179	          0x83f88f	             cmp eax, 0xffffffffffffff8f	       802	xprt.c	FUNCTION_37	SWITCH_1
0x400017c	            0x74f4	                            je 0x4000172	       802	xprt.c	FUNCTION_37	SWITCH_1
0x400017e	            0x7ceb	                            jl 0x400016b	       802	xprt.c	FUNCTION_37	SWITCH_1
0x4000180	          0x83c06f	                           add eax, 0x6f	       802	xprt.c	FUNCTION_37	SWITCH_1
0x4000183	          0x83f801	                              cmp eax, 1	       802	xprt.c	FUNCTION_37	SWITCH_1
0x4000186	            0x77e3	                            ja 0x400016b	       802	xprt.c	FUNCTION_37	SWITCH_1
0x4000188	            0xf3c3	                                     ret	       802	xprt.c	FUNCTION_37	SWITCH_1
0x400018a	    0x488b87b80000	            mov rax, qword [rdi + 0xb8] 	       792	xprt.c	FUNCTION_37
0x4000191	    0x488b15000000	            mov rdx, qword [0x04000198] 	       796	xprt.c	FUNCTION_37	IF_1
0x4000198	          0x488b00	                    mov rax, qword [rax]	       792	xprt.c	FUNCTION_37
0x400019b	    0x480390580400	            add rdx, qword [rax + 0x458]	       796	xprt.c	FUNCTION_37	IF_1
0x40001a2	    0x488380480400	              add qword [rax + 0x448], 1	       795	xprt.c	FUNCTION_37	IF_1
0x40001aa	    0x482b90500400	            sub rdx, qword [rax + 0x450]	       796	xprt.c	FUNCTION_37	IF_1
0x40001b1	    0x488990580400	            mov qword [rax + 0x458], rdx	       796	xprt.c	FUNCTION_37	IF_1
0x40001b8	              0xc3	                                     ret	       799	xprt.c	FUNCTION_37	IF_1
xprt_set_retrans_timeout_def	FOR,0:SWITCH,0:WHILE,0:DO,0:ELSE,0:IF,0:CALL,0:functions,0	4
0x40000c0	    0x488b87b80000	            mov rax, qword [rdi + 0xb8] 	       537	xprt.c	FUNCTION_23
0x40000c7	    0x488b80480100	           mov rax, qword [rax + 0x148] 	       537	xprt.c	FUNCTION_23
0x40000ce	        0x48894728	             mov qword [rdi + 0x28], rax	       537	xprt.c	FUNCTION_23
0x40000d2	              0xc3	                                     ret	       537	xprt.c	FUNCTION_23
xprt_reset_majortimeo	FOR,0:SWITCH,0:WHILE,0:DO,0:ELSE,1:IF,2:CALL,0:functions,0	24
0x40000e0	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       564	xprt.c	FUNCTION_25
0x40000e7	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       564	xprt.c	FUNCTION_25
0x40000ee	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       564	xprt.c	FUNCTION_25
0x40000f2	    0x488b87480100	           mov rax, qword [rdi + 0x148] 	       566	xprt.c	FUNCTION_25
0x40000f9	    0x488987400100	            mov qword [rdi + 0x140], rax	       566	xprt.c	FUNCTION_25
0x4000100	        0x807a1c00	                cmp byte [rdx + 0x1c], 0	       567	xprt.c	FUNCTION_25	IF_1
0x4000104	            0x742f	                            je 0x4000135	       567	xprt.c	FUNCTION_25	IF_1
0x4000106	          0x8b4a18	            mov ecx, dword [rdx + 0x18] 	       568	xprt.c	FUNCTION_25	IF_1
0x4000109	          0x48d3e0	                             shl rax, cl	       568	xprt.c	FUNCTION_25	IF_1
0x400010c	    0x488987400100	            mov qword [rdi + 0x140], rax	       568	xprt.c	FUNCTION_25	IF_1
0x4000113	        0x488b5208	                mov rdx, qword [rdx + 8]	       571	xprt.c	FUNCTION_25	IF_2
0x4000117	          0x4839c2	                            cmp rdx, rax	       571	xprt.c	FUNCTION_25	IF_2
0x400011a	            0x7207	                            jb 0x4000123	       571	xprt.c	FUNCTION_25	IF_2
0x400011c	          0x4885c0	                           test rax, rax	       571	xprt.c	FUNCTION_25	IF_2
0x400011f	        0x480f45d0	                         cmovne rdx, rax	       571	xprt.c	FUNCTION_25	IF_2
0x4000123	    0x488b05000000	            mov rax, qword [0x0400012a] 	       573	xprt.c	FUNCTION_25
0x400012a	          0x4801c2	                            add rdx, rax	       573	xprt.c	FUNCTION_25
0x400012d	    0x488997400100	            mov qword [rdi + 0x140], rdx	       573	xprt.c	FUNCTION_25
0x4000134	              0xc3	                                     ret	       573	xprt.c	FUNCTION_25
0x4000135	          0x8b4a18	            mov ecx, dword [rdx + 0x18] 	       570	xprt.c	FUNCTION_25	ELSE_1
0x4000138	      0x480faf4a10	            imul rcx, qword [rdx + 0x10]	       570	xprt.c	FUNCTION_25	ELSE_1
0x400013d	          0x4801c8	                            add rax, rcx	       570	xprt.c	FUNCTION_25	ELSE_1
0x4000140	    0x488987400100	            mov qword [rdi + 0x140], rax	       570	xprt.c	FUNCTION_25	ELSE_1
0x4000147	            0xebca	                           jmp 0x4000113	       570	xprt.c	FUNCTION_25	ELSE_1
xprt_adjust_cwnd	FOR,0:SWITCH,0:WHILE,0:DO,0:ELSE,1:IF,4:CALL,5:functions,0	44
0x4000ec0	            0x85d2	                           test edx, edx	       455	xprt.c	FUNCTION_19	IF_1
0x4000ec2	            0x4154	                                push r12	       451	xprt.c	FUNCTION_19
0x4000ec4	    0x4c8ba6b80000	            mov r12, qword [rsi + 0xb8] 	       452	xprt.c	FUNCTION_19
0x4000ecb	              0x55	                                push rbp	       451	xprt.c	FUNCTION_19
0x4000ecc	          0x4889fd	                            mov rbp, rdi	       451	xprt.c	FUNCTION_19
0x4000ecf	              0x53	                                push rbx	       451	xprt.c	FUNCTION_19
0x4000ed0	    0x488b9fb00000	            mov rbx, qword [rdi + 0xb0] 	       453	xprt.c	FUNCTION_19
0x4000ed7	            0x786f	                            js 0x4000f48	       455	xprt.c	FUNCTION_19	IF_1
0x4000ed9	    0x483b9fa80000	            cmp rbx, qword [rdi + 0xa8] 	       455	xprt.c	FUNCTION_19	IF_1
0x4000ee0	            0x7618	                           jbe 0x4000efa	       455	xprt.c	FUNCTION_19	IF_1
0x4000ee2	    0x48899db00000	            mov qword [rbp + 0xb0], rbx 	       469	xprt.c	FUNCTION_19
0x4000ee9	    0x418b84249c00	            mov eax, dword [r12 + 0x9c] 	       413	xprt.c	FUNCTION_17	IF_1
0x4000ef1	            0x85c0	                           test eax, eax	       413	xprt.c	FUNCTION_17	IF_1
0x4000ef3	            0x7530	                           jne 0x4000f25	       413	xprt.c	FUNCTION_17	IF_1
0x4000ef5	              0x5b	                                 pop rbx	       471	xprt.c	FUNCTION_19
0x4000ef6	              0x5d	                                 pop rbp	       471	xprt.c	FUNCTION_19
0x4000ef7	            0x415c	                                 pop r12	       471	xprt.c	FUNCTION_19
0x4000ef9	              0xc3	                                     ret	       471	xprt.c	FUNCTION_19
0x4000efa	          0x4889d8	                            mov rax, rbx	       458	xprt.c	FUNCTION_19	IF_1
0x4000efd	            0x31d2	                            xor edx, edx	       458	xprt.c	FUNCTION_19	IF_1
0x4000eff	          0x48d1e8	                              shr rax, 1	       458	xprt.c	FUNCTION_19	IF_1
0x4000f02	    0x480500000100	                        add rax, 0x10000	       458	xprt.c	FUNCTION_19	IF_1
0x4000f08	          0x48f7f3	                                 div rbx	       458	xprt.c	FUNCTION_19	IF_1
0x4000f0b	          0x4801d8	                            add rax, rbx	       458	xprt.c	FUNCTION_19	IF_1
0x4000f0e	    0x8b9f58030000	           mov ebx, dword [rdi + 0x358] 	       459	xprt.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x4000f14	          0xc1e308	                              shl ebx, 8	       459	xprt.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x4000f17	          0x4839d8	                            cmp rax, rbx	       459	xprt.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x4000f1a	        0x480f46d8	                         cmovbe rbx, rax	       459	xprt.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x4000f1e	      0xe83dfcffff	    call sym.__xprt_lock_write_next_cong	       461	xprt.c	FUNCTION_19	IF_1	CALL_3
0x4000f23	            0xebbd	                           jmp 0x4000ee2	       461	xprt.c	FUNCTION_19	IF_1	CALL_3
0x4000f25	    0x41c784249c00	               mov dword [r12 + 0x9c], 0	       415	xprt.c	FUNCTION_17
0x4000f31	    0x4881ada80000	           sub qword [rbp + 0xa8], 0x100	       416	xprt.c	FUNCTION_17
0x4000f3c	          0x4889ef	                            mov rdi, rbp	       417	xprt.c	FUNCTION_17	CALL_1
0x4000f3f	              0x5b	                                 pop rbx	       471	xprt.c	FUNCTION_19
0x4000f40	              0x5d	                                 pop rbp	       471	xprt.c	FUNCTION_19
0x4000f41	            0x415c	                                 pop r12	       471	xprt.c	FUNCTION_19
0x4000f43	      0xe918fcffff	     jmp sym.__xprt_lock_write_next_cong	       417	xprt.c	FUNCTION_17	CALL_1
0x4000f48	          0x83fa92	             cmp edx, 0xffffffffffffff92	       462	xprt.c	FUNCTION_19	ELSE_1	IF_3
0x4000f4b	            0x7595	                           jne 0x4000ee2	       462	xprt.c	FUNCTION_19	ELSE_1	IF_3
0x4000f4d	          0x48d1eb	                              shr rbx, 1	       463	xprt.c	FUNCTION_19	ELSE_1	IF_3
0x4000f50	      0xb800010000	                          mov eax, 0x100	       465	xprt.c	FUNCTION_19	ELSE_1	IF_3	IF_4
0x4000f55	    0x4881fbff0000	                           cmp rbx, 0xff	       465	xprt.c	FUNCTION_19	ELSE_1	IF_3	IF_4
0x4000f5c	        0x480f46d8	                         cmovbe rbx, rax	       465	xprt.c	FUNCTION_19	ELSE_1	IF_3	IF_4
0x4000f60	            0xeb80	                           jmp 0x4000ee2	       465	xprt.c	FUNCTION_19	ELSE_1	IF_3	IF_4
xprt_release_rqst_cong	FOR,0:SWITCH,0:WHILE,0:DO,0:ELSE,0:IF,0:CALL,1:functions,0	9
0x4000e90	    0x488b87b80000	            mov rax, qword [rdi + 0xb8] 	       428	xprt.c	FUNCTION_18
0x4000e97	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	       413	xprt.c	FUNCTION_17	IF_1
0x4000e9d	            0x85d2	                           test edx, edx	       413	xprt.c	FUNCTION_17	IF_1
0x4000e9f	            0x7502	                           jne 0x4000ea3	       413	xprt.c	FUNCTION_17	IF_1
0x4000ea1	            0xf3c3	                                     ret	       413	xprt.c	FUNCTION_17	IF_1
0x4000ea3	          0x488b38	                    mov rdi, qword [rax]	       430	xprt.c	FUNCTION_18	CALL_1
0x4000ea6	    0xc7809c000000	               mov dword [rax + 0x9c], 0	       415	xprt.c	FUNCTION_17
0x4000eb0	    0x4881afa80000	           sub qword [rdi + 0xa8], 0x100	       416	xprt.c	FUNCTION_17
0x4000ebb	      0xe9a0fcffff	     jmp sym.__xprt_lock_write_next_cong	       417	xprt.c	FUNCTION_17	CALL_1
xprt_retry_reserve	FOR,0:SWITCH,0:WHILE,0:DO,0:ELSE,0:IF,1:CALL,1:functions,0	12
0x4001b60	    0x4883bfb80000	               cmp qword [rdi + 0xb8], 0	      1288	xprt.c	FUNCTION_60	IF_1
0x4001b68	    0x488b87b00000	            mov rax, qword [rdi + 0xb0] 	      1285	xprt.c	FUNCTION_60
0x4001b6f	    0xc74704000000	                  mov dword [rdi + 4], 0	      1287	xprt.c	FUNCTION_60
0x4001b76	            0x7402	                            je 0x4001b7a	      1288	xprt.c	FUNCTION_60	IF_1
0x4001b78	            0xf3c3	                                     ret	      1288	xprt.c	FUNCTION_60	IF_1
0x4001b7a	    0x48c747280000	               mov qword [rdi + 0x28], 0	      1291	xprt.c	FUNCTION_60
0x4001b82	    0xc74704f5ffff	        mov dword [rdi + 4], 0xfffffff5 	      1292	xprt.c	FUNCTION_60
0x4001b89	          0x4889fe	                            mov rsi, rdi	      1293	xprt.c	FUNCTION_60	CALL_1
0x4001b8c	        0x488b5008	                mov rdx, qword [rax + 8]	      1293	xprt.c	FUNCTION_60	CALL_1
0x4001b90	          0x4889c7	                            mov rdi, rax	      1293	xprt.c	FUNCTION_60	CALL_1
0x4001b93	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      1293	xprt.c	FUNCTION_60	CALL_1
0x4001b97	      0xe900000000	                           jmp 0x4001b9c	      1293	xprt.c	FUNCTION_60	CALL_1
__xprt_lock_write_func	FOR,0:SWITCH,0:WHILE,0:DO,0:ELSE,0:IF,1:CALL,0:functions,0	7
0x4000040	    0x488b87b80000	            mov rax, qword [rdi + 0xb8] 	       286	xprt.c	FUNCTION_8
0x4000047	    0x4889be200400	            mov qword [rsi + 0x420], rdi	       287	xprt.c	FUNCTION_8
0x400004e	          0x4885c0	                           test rax, rax	       288	xprt.c	FUNCTION_8	IF_1
0x4000051	            0x7407	                            je 0x400005a	       288	xprt.c	FUNCTION_8	IF_1
0x4000053	    0x838070010000	              add dword [rax + 0x170], 1	       289	xprt.c	FUNCTION_8	IF_1
0x400005a	      0xb801000000	                              mov eax, 1	       291	xprt.c	FUNCTION_8
0x400005f	              0xc3	                                     ret	       291	xprt.c	FUNCTION_8
__xprt_lock_write_cong_func	FOR,0:SWITCH,0:WHILE,0:DO,0:ELSE,0:IF,2:CALL,1:functions,0	19
0x4000060	    0x488b97b80000	            mov rdx, qword [rdi + 0xb8] 	       309	xprt.c	FUNCTION_10
0x4000067	          0x4885d2	                           test rdx, rdx	       310	xprt.c	FUNCTION_10	IF_1
0x400006a	            0x7446	                            je 0x40000b2	       310	xprt.c	FUNCTION_10	IF_1
0x400006c	    0x8b829c000000	            mov eax, dword [rdx + 0x9c] 	       395	xprt.c	FUNCTION_16	IF_1
0x4000072	            0x85c0	                           test eax, eax	       395	xprt.c	FUNCTION_16	IF_1
0x4000074	            0x7527	                           jne 0x400009d	       395	xprt.c	FUNCTION_16	IF_1
0x4000076	            0x31c0	                            xor eax, eax	       319	xprt.c	FUNCTION_10
0x4000078	    0x488b8eb00000	            mov rcx, qword [rsi + 0xb0] 	       399	xprt.c	FUNCTION_16	IF_2	CALL_2
0x400007f	    0x48398ea80000	            cmp qword [rsi + 0xa8], rcx 	       399	xprt.c	FUNCTION_16	IF_2	CALL_2
0x4000086	            0x7328	                           jae 0x40000b0	       399	xprt.c	FUNCTION_16	IF_2	CALL_2
0x4000088	    0xc7829c000000	               mov dword [rdx + 0x9c], 1	       401	xprt.c	FUNCTION_16
0x4000092	    0x488186a80000	           add qword [rsi + 0xa8], 0x100	       402	xprt.c	FUNCTION_16
0x400009d	    0x4889be200400	            mov qword [rsi + 0x420], rdi	       315	xprt.c	FUNCTION_10	IF_2
0x40000a4	    0x838270010000	              add dword [rdx + 0x170], 1	       316	xprt.c	FUNCTION_10	IF_2
0x40000ab	      0xb801000000	                              mov eax, 1	       317	xprt.c	FUNCTION_10	IF_2
0x40000b0	            0xf3c3	                                     ret	       320	xprt.c	FUNCTION_10
0x40000b2	    0x4889be200400	            mov qword [rsi + 0x420], rdi	       311	xprt.c	FUNCTION_10	IF_1
0x40000b9	      0xb801000000	                              mov eax, 1	       312	xprt.c	FUNCTION_10	IF_1
0x40000be	              0xc3	                                     ret	       312	xprt.c	FUNCTION_10	IF_1
