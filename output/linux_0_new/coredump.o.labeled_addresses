cn_vprintf	DO,0:ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,4:WHILE,0:IF,2	49
0x4000230	            0x4155	                                push r13	        83	coredump.c	FUNCTION_2
0x4000232	            0x4154	                                push r12	        83	coredump.c	FUNCTION_2
0x4000234	          0x4989d5	                            mov r13, rdx	        83	coredump.c	FUNCTION_2
0x4000237	              0x55	                                push rbp	        83	coredump.c	FUNCTION_2
0x4000238	              0x53	                                push rbx	        83	coredump.c	FUNCTION_2
0x4000239	          0x4889f5	                            mov rbp, rsi	        83	coredump.c	FUNCTION_2
0x400023c	          0x4889fb	                            mov rbx, rdi	        83	coredump.c	FUNCTION_2
0x400023f	        0x4883ec20	                           sub rsp, 0x20	        83	coredump.c	FUNCTION_2
0x4000243	    0x65488b042528	                mov rax, qword gs:[0x28]	        83	coredump.c	FUNCTION_2
0x400024c	      0x4889442418	             mov qword [rsp + 0x18], rax	        83	coredump.c	FUNCTION_2
0x4000251	            0x31c0	                            xor eax, eax	        83	coredump.c	FUNCTION_2
0x4000253	            0xeb15	                           jmp 0x400026a	        83	coredump.c	FUNCTION_2
0x4000255	           0x3430c	              add eax, dword [rbx + 0xc]	        99	coredump.c	FUNCTION_2	IF_2	CALL_4
0x4000258	          0x4889df	                            mov rdi, rbx	        99	coredump.c	FUNCTION_2	IF_2	CALL_4
0x400025b	          0x4429e0	                           sub eax, r12d	        99	coredump.c	FUNCTION_2	IF_2	CALL_4
0x400025e	          0x8d7001	                      lea esi, [rax + 1]	        99	coredump.c	FUNCTION_2	IF_2	CALL_4
0x4000261	      0xe87affffff	                call sym.expand_corename	        99	coredump.c	FUNCTION_2	IF_2	CALL_4
0x4000266	            0x85c0	                           test eax, eax	        99	coredump.c	FUNCTION_2	IF_2	CALL_4
0x4000268	            0x755c	                           jne 0x40002c6	        99	coredump.c	FUNCTION_2	IF_2	CALL_4
0x400026a	        0x498b4500	                    mov rax, qword [r13]	        90	coredump.c	FUNCTION_2	CALL_1
0x400026e	        0x448b630c	            mov r12d, dword [rbx + 0xc] 	        88	coredump.c	FUNCTION_2
0x4000272	          0x4889e1	                            mov rcx, rsp	        91	coredump.c	FUNCTION_2	CALL_2
0x4000275	        0x442b6308	               sub r12d, dword [rbx + 8]	        88	coredump.c	FUNCTION_2
0x4000279	        0x48637b08	            movsxd rdi, dword [rbx + 8] 	        91	coredump.c	FUNCTION_2	CALL_2
0x400027d	          0x4889ea	                            mov rdx, rbp	        91	coredump.c	FUNCTION_2	CALL_2
0x4000280	          0x48033b	                    add rdi, qword [rbx]	        91	coredump.c	FUNCTION_2	CALL_2
0x4000283	        0x48890424	                    mov qword [rsp], rax	        90	coredump.c	FUNCTION_2	CALL_1
0x4000287	        0x498b4508	                mov rax, qword [r13 + 8]	        90	coredump.c	FUNCTION_2	CALL_1
0x400028b	          0x4963f4	                        movsxd rsi, r12d	        91	coredump.c	FUNCTION_2	CALL_2
0x400028e	      0x4889442408	                mov qword [rsp + 8], rax	        90	coredump.c	FUNCTION_2	CALL_1
0x4000293	        0x498b4510	            mov rax, qword [r13 + 0x10] 	        90	coredump.c	FUNCTION_2	CALL_1
0x4000297	      0x4889442410	             mov qword [rsp + 0x10], rax	        90	coredump.c	FUNCTION_2	CALL_1
0x400029c	      0xe800000000	                          call 0x40002a1	        91	coredump.c	FUNCTION_2	CALL_2
0x40002a1	          0x4139c4	                           cmp r12d, eax	        94	coredump.c	FUNCTION_2	IF_1
0x40002a4	            0x7eaf	                           jle 0x4000255	        94	coredump.c	FUNCTION_2	IF_1
0x40002a6	           0x14308	                add dword [rbx + 8], eax	        95	coredump.c	FUNCTION_2	IF_1
0x40002a9	            0x31c0	                            xor eax, eax	        96	coredump.c	FUNCTION_2	IF_1
0x40002ab	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       103	coredump.c	FUNCTION_2
0x40002b0	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       103	coredump.c	FUNCTION_2
0x40002b9	            0x7512	                           jne 0x40002cd	       103	coredump.c	FUNCTION_2
0x40002bb	        0x4883c420	                           add rsp, 0x20	       103	coredump.c	FUNCTION_2
0x40002bf	              0x5b	                                 pop rbx	       103	coredump.c	FUNCTION_2
0x40002c0	              0x5d	                                 pop rbp	       103	coredump.c	FUNCTION_2
0x40002c1	            0x415c	                                 pop r12	       103	coredump.c	FUNCTION_2
0x40002c3	            0x415d	                                 pop r13	       103	coredump.c	FUNCTION_2
0x40002c5	              0xc3	                                     ret	       103	coredump.c	FUNCTION_2
0x40002c6	      0xb8f4ffffff	                     mov eax, 0xfffffff4	       102	coredump.c	FUNCTION_2
0x40002cb	            0xebde	                           jmp 0x40002ab	       102	coredump.c	FUNCTION_2
0x40002cd	      0xe800000000	                          call 0x40002d2	       103	coredump.c	FUNCTION_2
dump_truncate	DO,0:ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,3:WHILE,0:IF,2	24
0x4000040	              0x53	                                push rbx	       841	coredump.c	FUNCTION_18
0x4000041	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	       842	coredump.c	FUNCTION_18
0x4000045	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       845	coredump.c	FUNCTION_18	IF_1
0x4000049	        0x488b4008	                mov rax, qword [rax + 8]	       845	coredump.c	FUNCTION_18	IF_1
0x400004d	          0x4885c0	                           test rax, rax	       845	coredump.c	FUNCTION_18	IF_1
0x4000050	            0x7427	                            je 0x4000079	       845	coredump.c	FUNCTION_18	IF_1
0x4000052	    0x483d00000000	                              cmp rax, 0	       845	coredump.c	FUNCTION_18	IF_1
0x4000058	            0x741f	                            je 0x4000079	       845	coredump.c	FUNCTION_18	IF_1
0x400005a	      0xba01000000	                              mov edx, 1	       846	coredump.c	FUNCTION_18	IF_1	CALL_1
0x400005f	            0x31f6	                            xor esi, esi	       846	coredump.c	FUNCTION_18	IF_1	CALL_1
0x4000061	          0x4889df	                            mov rdi, rbx	       846	coredump.c	FUNCTION_18	IF_1	CALL_1
0x4000064	      0xe800000000	                          call 0x4000069	       846	coredump.c	FUNCTION_18	IF_1	CALL_1
0x4000069	    0x488b93f00000	            mov rdx, qword [rbx + 0xf0] 	       847	coredump.c	FUNCTION_18	IF_1	IF_2	CALL_2
0x4000070	          0x488b12	                    mov rdx, qword [rdx]	       847	coredump.c	FUNCTION_18	IF_1	IF_2	CALL_2
0x4000073	        0x483b4250	            cmp rax, qword [rdx + 0x50] 	       847	coredump.c	FUNCTION_18	IF_1	IF_2	CALL_2
0x4000077	            0x7f02	                            jg 0x400007b	       847	coredump.c	FUNCTION_18	IF_1	IF_2	CALL_2
0x4000079	              0x5b	                                 pop rbx	       850	coredump.c	FUNCTION_18
0x400007a	              0xc3	                                     ret	       850	coredump.c	FUNCTION_18
0x400007b	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       848	coredump.c	FUNCTION_18	IF_1	CALL_3
0x400007f	          0x4889d9	                            mov rcx, rbx	       848	coredump.c	FUNCTION_18	IF_1	CALL_3
0x4000082	            0x31d2	                            xor edx, edx	       848	coredump.c	FUNCTION_18	IF_1	CALL_3
0x4000084	              0x5b	                                 pop rbx	       850	coredump.c	FUNCTION_18
0x4000085	          0x4889c6	                            mov rsi, rax	       848	coredump.c	FUNCTION_18	IF_1	CALL_3
0x4000088	      0xe900000000	                           jmp 0x400008d	       848	coredump.c	FUNCTION_18	IF_1	CALL_3
cn_esc_printf	DO,0:ELSE,0:functions,0:SWITCH,0:FOR,1:CALL,4:WHILE,0:IF,4	77
0x4000350	              0x55	                                push rbp	       119	coredump.c	FUNCTION_4
0x4000351	          0x4889e5	                            mov rbp, rsp	       119	coredump.c	FUNCTION_4
0x4000354	            0x4154	                                push r12	       119	coredump.c	FUNCTION_4
0x4000356	            0x4152	                                push r10	       119	coredump.c	FUNCTION_4
0x4000358	              0x53	                                push rbx	       119	coredump.c	FUNCTION_4
0x4000359	        0x4c8d5510	                   lea r10, [rbp + 0x10]	       119	coredump.c	FUNCTION_4
0x400035d	          0x4989fc	                            mov r12, rdi	       119	coredump.c	FUNCTION_4
0x4000360	        0x4883ec50	                           sub rsp, 0x50	       119	coredump.c	FUNCTION_4
0x4000364	        0x488955c8	             mov qword [rbp - 0x38], rdx	       119	coredump.c	FUNCTION_4
0x4000368	        0x488d5598	                   lea rdx, [rbp - 0x68]	       125	coredump.c	FUNCTION_4	CALL_2
0x400036c	    0x65488b042528	                mov rax, qword gs:[0x28]	       119	coredump.c	FUNCTION_4
0x4000375	        0x488945b0	             mov qword [rbp - 0x50], rax	       119	coredump.c	FUNCTION_4
0x4000379	            0x31c0	                            xor eax, eax	       119	coredump.c	FUNCTION_4
0x400037b	        0x488d45b8	                   lea rax, [rbp - 0x48]	       124	coredump.c	FUNCTION_4	CALL_1
0x400037f	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       119	coredump.c	FUNCTION_4
0x4000383	        0x4c8945d8	              mov qword [rbp - 0x28], r8	       119	coredump.c	FUNCTION_4
0x4000387	        0x4c894de0	              mov qword [rbp - 0x20], r9	       119	coredump.c	FUNCTION_4
0x400038b	    0xc74598100000	           mov dword [rbp - 0x68], 0x10 	       124	coredump.c	FUNCTION_4	CALL_1
0x4000392	          0x8b5f08	                mov ebx, dword [rdi + 8]	       120	coredump.c	FUNCTION_4
0x4000395	        0x4c8955a0	             mov qword [rbp - 0x60], r10	       124	coredump.c	FUNCTION_4	CALL_1
0x4000399	        0x488945a8	             mov qword [rbp - 0x58], rax	       124	coredump.c	FUNCTION_4	CALL_1
0x400039d	      0xe88efeffff	                     call sym.cn_vprintf	       125	coredump.c	FUNCTION_4	CALL_2
0x40003a2	            0x85c0	                           test eax, eax	       128	coredump.c	FUNCTION_4	IF_1
0x40003a4	      0x418b542408	                mov edx, dword [r12 + 8]	       133	coredump.c	FUNCTION_4	IF_1	IF_2
0x40003a9	            0x7512	                           jne 0x40003bd	       128	coredump.c	FUNCTION_4	IF_1
0x40003ab	            0x89d1	                            mov ecx, edx	       133	coredump.c	FUNCTION_4	IF_1	IF_2
0x40003ad	            0x29d9	                            sub ecx, ebx	       133	coredump.c	FUNCTION_4	IF_1	IF_2
0x40003af	          0x83f901	                              cmp ecx, 1	       133	coredump.c	FUNCTION_4	IF_1	IF_2
0x40003b2	            0x744c	                            je 0x4000400	       133	coredump.c	FUNCTION_4	IF_1	IF_2
0x40003b4	          0x83f902	                              cmp ecx, 2	       133	coredump.c	FUNCTION_4	IF_1	IF_2
0x40003b7	            0x7473	                            je 0x400042c	       133	coredump.c	FUNCTION_4	IF_1	IF_2
0x40003b9	            0x39d3	                            cmp ebx, edx	       144	coredump.c	FUNCTION_4	IF_1	IF_3
0x40003bb	            0x7459	                            je 0x4000416	       144	coredump.c	FUNCTION_4	IF_1	IF_3
0x40003bd	            0x39d3	                            cmp ebx, edx	       148	coredump.c	FUNCTION_4	FOR_1
0x40003bf	            0x7c0c	                            jl 0x40003cd	       148	coredump.c	FUNCTION_4	FOR_1
0x40003c1	            0xeb23	                           jmp 0x40003e6	       148	coredump.c	FUNCTION_4	FOR_1
0x40003c3	          0x83c301	                              add ebx, 1	       148	coredump.c	FUNCTION_4	FOR_1
0x40003c6	      0x41395c2408	                cmp dword [r12 + 8], ebx	       148	coredump.c	FUNCTION_4	FOR_1
0x40003cb	            0x7e19	                           jle 0x40003e6	       148	coredump.c	FUNCTION_4	FOR_1
0x40003cd	          0x4863d3	                         movsxd rdx, ebx	       149	coredump.c	FUNCTION_4	FOR_1	IF_4
0x40003d0	        0x49031424	                    add rdx, qword [r12]	       149	coredump.c	FUNCTION_4	FOR_1	IF_4
0x40003d4	          0x803a2f	                    cmp byte [rdx], 0x2f	       149	coredump.c	FUNCTION_4	FOR_1	IF_4
0x40003d7	            0x75ea	                           jne 0x40003c3	       149	coredump.c	FUNCTION_4	FOR_1	IF_4
0x40003d9	          0xc60221	                    mov byte [rdx], 0x21	       150	coredump.c	FUNCTION_4	FOR_1	IF_4
0x40003dc	          0x83c301	                              add ebx, 1	       148	coredump.c	FUNCTION_4	FOR_1
0x40003df	      0x41395c2408	                cmp dword [r12 + 8], ebx	       148	coredump.c	FUNCTION_4	FOR_1
0x40003e4	            0x7fe7	                            jg 0x40003cd	       148	coredump.c	FUNCTION_4	FOR_1
0x40003e6	        0x488b7db0	             mov rdi, qword [rbp - 0x50]	       153	coredump.c	FUNCTION_4
0x40003ea	    0x6548333c2528	                xor rdi, qword gs:[0x28]	       153	coredump.c	FUNCTION_4
0x40003f3	            0x7558	                           jne 0x400044d	       153	coredump.c	FUNCTION_4
0x40003f5	        0x4883c450	                           add rsp, 0x50	       153	coredump.c	FUNCTION_4
0x40003f9	              0x5b	                                 pop rbx	       153	coredump.c	FUNCTION_4
0x40003fa	            0x415a	                                 pop r10	       153	coredump.c	FUNCTION_4
0x40003fc	            0x415c	                                 pop r12	       153	coredump.c	FUNCTION_4
0x40003fe	              0x5d	                                 pop rbp	       153	coredump.c	FUNCTION_4
0x40003ff	              0xc3	                                     ret	       153	coredump.c	FUNCTION_4
0x4000400	          0x4863cb	                         movsxd rcx, ebx	       133	coredump.c	FUNCTION_4	IF_1	IF_2
0x4000403	        0x49030c24	                    add rcx, qword [r12]	       133	coredump.c	FUNCTION_4	IF_1	IF_2
0x4000407	          0x80392e	                    cmp byte [rcx], 0x2e	       133	coredump.c	FUNCTION_4	IF_1	IF_2
0x400040a	            0x75ad	                           jne 0x40003b9	       133	coredump.c	FUNCTION_4	IF_1	IF_2
0x400040c	          0xc60121	                    mov byte [rcx], 0x21	       136	coredump.c	FUNCTION_4	IF_1	IF_2
0x400040f	      0x418b542408	                mov edx, dword [r12 + 8]	       136	coredump.c	FUNCTION_4	IF_1	IF_2
0x4000414	            0xeba3	                           jmp 0x40003b9	       136	coredump.c	FUNCTION_4	IF_1	IF_2
0x4000416	    0x48c7c6000000	                              mov rsi, 0	       145	coredump.c	FUNCTION_4	IF_1	CALL_4
0x400041d	          0x4c89e7	                            mov rdi, r12	       145	coredump.c	FUNCTION_4	IF_1	CALL_4
0x4000420	      0xe8bbfeffff	                      call sym.cn_printf	       145	coredump.c	FUNCTION_4	IF_1	CALL_4
0x4000425	      0x418b542408	                mov edx, dword [r12 + 8]	       145	coredump.c	FUNCTION_4	IF_1	CALL_4
0x400042a	            0xeb91	                           jmp 0x40003bd	       145	coredump.c	FUNCTION_4	IF_1	CALL_4
0x400042c	        0x498b3c24	                    mov rdi, qword [r12]	       134	coredump.c	FUNCTION_4	IF_1	IF_2
0x4000430	          0x4863f3	                         movsxd rsi, ebx	       134	coredump.c	FUNCTION_4	IF_1	IF_2
0x4000433	        0x488d0c37	                    lea rcx, [rdi + rsi]	       134	coredump.c	FUNCTION_4	IF_1	IF_2
0x4000437	          0x80392e	                    cmp byte [rcx], 0x2e	       134	coredump.c	FUNCTION_4	IF_1	IF_2
0x400043a	     0xf8579ffffff	                           jne 0x40003b9	       134	coredump.c	FUNCTION_4	IF_1	IF_2
0x4000440	      0x807c37012e	         cmp byte [rdi + rsi + 1], 0x2e 	       135	coredump.c	FUNCTION_4	IF_1	IF_2
0x4000445	     0xf856effffff	                           jne 0x40003b9	       135	coredump.c	FUNCTION_4	IF_1	IF_2
0x400044b	            0xebbf	                           jmp 0x400040c	       135	coredump.c	FUNCTION_4	IF_1	IF_2
0x400044d	      0xe800000000	                          call 0x4000452	       153	coredump.c	FUNCTION_4
expand_corename	DO,0:ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,2:WHILE,0:IF,2	27
0x40001e0	            0x4154	                                push r12	        67	coredump.c	FUNCTION_1
0x40001e2	              0x55	                                push rbp	        67	coredump.c	FUNCTION_1
0x40001e3	          0x4863f6	                         movsxd rsi, esi	        67	coredump.c	FUNCTION_1
0x40001e6	              0x53	                                push rbx	        67	coredump.c	FUNCTION_1
0x40001e7	          0x4889fb	                            mov rbx, rdi	        67	coredump.c	FUNCTION_1
0x40001ea	          0x488b3f	                    mov rdi, qword [rdi]	        68	coredump.c	FUNCTION_1	CALL_1
0x40001ed	      0xbac0004001	                      mov edx, 0x14000c0	        68	coredump.c	FUNCTION_1	CALL_1
0x40001f2	          0x4989f4	                            mov r12, rsi	        67	coredump.c	FUNCTION_1
0x40001f5	      0xe800000000	                          call 0x40001fa	        68	coredump.c	FUNCTION_1	CALL_1
0x40001fa	          0x4885c0	                           test rax, rax	        70	coredump.c	FUNCTION_1	IF_1
0x40001fd	            0x742a	                            je 0x4000229	        70	coredump.c	FUNCTION_1	IF_1
0x40001ff	    0x443b25000000	           cmp r12d, dword [0x04000206] 	        73	coredump.c	FUNCTION_1	IF_2
0x4000206	          0x4889c5	                            mov rbp, rax	        73	coredump.c	FUNCTION_1	IF_2
0x4000209	            0x7f15	                            jg 0x4000220	        73	coredump.c	FUNCTION_1	IF_2
0x400020b	          0x4889ef	                            mov rdi, rbp	        76	coredump.c	FUNCTION_1	CALL_2
0x400020e	      0xe800000000	                          call 0x4000213	        76	coredump.c	FUNCTION_1	CALL_2
0x4000213	          0x48892b	                    mov qword [rbx], rbp	        77	coredump.c	FUNCTION_1
0x4000216	          0x89430c	              mov dword [rbx + 0xc], eax	        76	coredump.c	FUNCTION_1	CALL_2
0x4000219	            0x31c0	                            xor eax, eax	        78	coredump.c	FUNCTION_1
0x400021b	              0x5b	                                 pop rbx	        79	coredump.c	FUNCTION_1
0x400021c	              0x5d	                                 pop rbp	        79	coredump.c	FUNCTION_1
0x400021d	            0x415c	                                 pop r12	        79	coredump.c	FUNCTION_1
0x400021f	              0xc3	                                     ret	        79	coredump.c	FUNCTION_1
0x4000220	    0x448925000000	           mov dword [0x04000227], r12d 	        74	coredump.c	FUNCTION_1	IF_2
0x4000227	            0xebe2	                           jmp 0x400020b	        74	coredump.c	FUNCTION_1	IF_2
0x4000229	      0xb8f4ffffff	                     mov eax, 0xfffffff4	        71	coredump.c	FUNCTION_1	IF_1
0x400022e	            0xebeb	                           jmp 0x400021b	        71	coredump.c	FUNCTION_1	IF_1
dump_align	DO,0:ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,1:WHILE,0:IF,1	11
0x40005b0	          0x8d56ff	                      lea edx, [rsi - 1]	       828	coredump.c	FUNCTION_17
0x40005b3	            0x85d6	                           test esi, edx	       829	coredump.c	FUNCTION_17	IF_1
0x40005b5	            0x7513	                           jne 0x40005ca	       829	coredump.c	FUNCTION_17	IF_1
0x40005b7	          0x235730	             and edx, dword [rdi + 0x30]	       831	coredump.c	FUNCTION_17	CALL_1
0x40005ba	      0xb801000000	                              mov eax, 1	       831	coredump.c	FUNCTION_17	CALL_1
0x40005bf	            0x7502	                           jne 0x40005c3	       831	coredump.c	FUNCTION_17	CALL_1
0x40005c1	            0xf3c3	                                     ret	       832	coredump.c	FUNCTION_17
0x40005c3	            0x29d6	                            sub esi, edx	       831	coredump.c	FUNCTION_17	CALL_1
0x40005c5	      0xe956ffffff	                       jmp sym.dump_skip	       831	coredump.c	FUNCTION_17	CALL_1
0x40005ca	            0x31c0	                            xor eax, eax	       830	coredump.c	FUNCTION_17	IF_1
0x40005cc	              0xc3	                                     ret	       832	coredump.c	FUNCTION_17
cn_printf	DO,0:ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,3:WHILE,0:IF,0	26
0x40002e0	              0x55	                                push rbp	       106	coredump.c	FUNCTION_3
0x40002e1	          0x4889e5	                            mov rbp, rsp	       106	coredump.c	FUNCTION_3
0x40002e4	            0x4152	                                push r10	       106	coredump.c	FUNCTION_3
0x40002e6	        0x4c8d5510	                   lea r10, [rbp + 0x10]	       106	coredump.c	FUNCTION_3
0x40002ea	        0x4883ec50	                           sub rsp, 0x50	       106	coredump.c	FUNCTION_3
0x40002ee	        0x488955d8	             mov qword [rbp - 0x28], rdx	       106	coredump.c	FUNCTION_3
0x40002f2	        0x488d55a8	                   lea rdx, [rbp - 0x58]	       111	coredump.c	FUNCTION_3	CALL_2
0x40002f6	    0x65488b042528	                mov rax, qword gs:[0x28]	       106	coredump.c	FUNCTION_3
0x40002ff	        0x488945c0	             mov qword [rbp - 0x40], rax	       106	coredump.c	FUNCTION_3
0x4000303	            0x31c0	                            xor eax, eax	       106	coredump.c	FUNCTION_3
0x4000305	        0x488d45c8	                   lea rax, [rbp - 0x38]	       110	coredump.c	FUNCTION_3	CALL_1
0x4000309	        0x48894de0	             mov qword [rbp - 0x20], rcx	       106	coredump.c	FUNCTION_3
0x400030d	        0x4c8945e8	              mov qword [rbp - 0x18], r8	       106	coredump.c	FUNCTION_3
0x4000311	        0x4c894df0	              mov qword [rbp - 0x10], r9	       106	coredump.c	FUNCTION_3
0x4000315	    0xc745a8100000	           mov dword [rbp - 0x58], 0x10 	       110	coredump.c	FUNCTION_3	CALL_1
0x400031c	        0x4c8955b0	             mov qword [rbp - 0x50], r10	       110	coredump.c	FUNCTION_3	CALL_1
0x4000320	        0x488945b8	             mov qword [rbp - 0x48], rax	       110	coredump.c	FUNCTION_3	CALL_1
0x4000324	      0xe807ffffff	                     call sym.cn_vprintf	       111	coredump.c	FUNCTION_3	CALL_2
0x4000329	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       115	coredump.c	FUNCTION_3
0x400032d	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       115	coredump.c	FUNCTION_3
0x4000336	            0x7508	                           jne 0x4000340	       115	coredump.c	FUNCTION_3
0x4000338	        0x4883c450	                           add rsp, 0x50	       115	coredump.c	FUNCTION_3
0x400033c	            0x415a	                                 pop r10	       115	coredump.c	FUNCTION_3
0x400033e	              0x5d	                                 pop rbp	       115	coredump.c	FUNCTION_3
0x400033f	              0xc3	                                     ret	       115	coredump.c	FUNCTION_3
0x4000340	      0xe800000000	                          call 0x4000345	       115	coredump.c	FUNCTION_3
