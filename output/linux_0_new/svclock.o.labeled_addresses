nlmsvc_testlock	IF,4:FOR,0:WHILE,0:DO,0:ELSE,0:functions,0:CALL,10:SWITCH,0	48
0x4000ab0	            0x4155	                                push r13	       509	svclock.c	FUNCTION_17
0x4000ab2	            0x4154	                                push r12	       509	svclock.c	FUNCTION_17
0x4000ab4	          0x4d89c4	                             mov r12, r8	       509	svclock.c	FUNCTION_17
0x4000ab7	              0x55	                                push rbp	       509	svclock.c	FUNCTION_17
0x4000ab8	              0x53	                                push rbx	       509	svclock.c	FUNCTION_17
0x4000ab9	          0x4889f5	                            mov rbp, rsi	       509	svclock.c	FUNCTION_17
0x4000abc	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       520	svclock.c	FUNCTION_17	IF_1	CALL_5
0x4000ac0	          0x4889cb	                            mov rbx, rcx	       509	svclock.c	FUNCTION_17
0x4000ac3	    0x488bb8900200	           mov rdi, qword [rax + 0x290] 	       520	svclock.c	FUNCTION_17	IF_1	CALL_5
0x4000aca	      0xe800000000	                          call 0x4000acf	       520	svclock.c	FUNCTION_17	IF_1	CALL_5
0x4000acf	            0x84c0	                             test al, al	       520	svclock.c	FUNCTION_17	IF_1	CALL_5
0x4000ad1	      0xba00000004	        mov edx, loc.imp.nlm_async_call 	       521	svclock.c	FUNCTION_17	IF_1
0x4000ad6	            0x7409	                            je 0x4000ae1	       520	svclock.c	FUNCTION_17	IF_1	CALL_5
0x4000ad8	              0x5b	                                 pop rbx	       554	svclock.c	FUNCTION_17
0x4000ad9	            0x89d0	                            mov eax, edx	       554	svclock.c	FUNCTION_17
0x4000adb	              0x5d	                                 pop rbp	       554	svclock.c	FUNCTION_17
0x4000adc	            0x415c	                                 pop r12	       554	svclock.c	FUNCTION_17
0x4000ade	            0x415d	                                 pop r13	       554	svclock.c	FUNCTION_17
0x4000ae0	              0xc3	                                     ret	       554	svclock.c	FUNCTION_17
0x4000ae1	    0x4c8daba80000	                   lea r13, [rbx + 0xa8]	       525	svclock.c	FUNCTION_17	CALL_6
0x4000ae8	    0x488bbd980000	            mov rdi, qword [rbp + 0x98] 	       525	svclock.c	FUNCTION_17	CALL_6
0x4000aef	          0x4c89ee	                            mov rsi, r13	       525	svclock.c	FUNCTION_17	CALL_6
0x4000af2	      0xe800000000	                          call 0x4000af7	       525	svclock.c	FUNCTION_17	CALL_6
0x4000af7	            0x85c0	                           test eax, eax	       526	svclock.c	FUNCTION_17	IF_2
0x4000af9	            0x740e	                            je 0x4000b09	       526	svclock.c	FUNCTION_17	IF_2
0x4000afb	          0x83f801	                              cmp eax, 1	       528	svclock.c	FUNCTION_17	IF_2	IF_3
0x4000afe	      0xba00000002	                      mov edx, 0x2000000	       531	svclock.c	FUNCTION_17	IF_2
0x4000b03	            0x75d3	                           jne 0x4000ad8	       528	svclock.c	FUNCTION_17	IF_2	IF_3
0x4000b05	             0xf0b	                                     ud2	       528	svclock.c	FUNCTION_17	IF_2	IF_3
0x4000b07	            0xebcf	                           jmp 0x4000ad8	       529	svclock.c	FUNCTION_17	IF_2	CALL_7
0x4000b09	            0x31d2	                            xor edx, edx	       536	svclock.c	FUNCTION_17	IF_4
0x4000b0b	    0x80bbec000000	                cmp byte [rbx + 0xec], 2	       535	svclock.c	FUNCTION_17	IF_4
0x4000b12	            0x74c4	                            je 0x4000ad8	       535	svclock.c	FUNCTION_17	IF_4
0x4000b14	    0x49c704240000	                      mov qword [r12], 0	       543	svclock.c	FUNCTION_17
0x4000b1c	    0x41c744240808	                  mov dword [r12 + 8], 8	       544	svclock.c	FUNCTION_17	CALL_9
0x4000b25	          0x4c89ef	                            mov rdi, r13	       550	svclock.c	FUNCTION_17	CALL_10
0x4000b28	    0x41c784249000	               mov dword [r12 + 0x90], 0	       545	svclock.c	FUNCTION_17
0x4000b34	    0x8b83f0000000	            mov eax, dword [rbx + 0xf0] 	       546	svclock.c	FUNCTION_17
0x4000b3a	    0x41898424a000	             mov dword [r12 + 0xa0], eax	       546	svclock.c	FUNCTION_17
0x4000b42	     0xfb683ec0000	           movzx eax, byte [rbx + 0xec] 	       547	svclock.c	FUNCTION_17
0x4000b49	    0x41888424ec00	               mov byte [r12 + 0xec], al	       547	svclock.c	FUNCTION_17
0x4000b51	    0x488b83180100	           mov rax, qword [rbx + 0x118] 	       548	svclock.c	FUNCTION_17
0x4000b58	    0x498984241801	            mov qword [r12 + 0x118], rax	       548	svclock.c	FUNCTION_17
0x4000b60	    0x488b83200100	           mov rax, qword [rbx + 0x120] 	       549	svclock.c	FUNCTION_17
0x4000b67	    0x498984242001	            mov qword [r12 + 0x120], rax	       549	svclock.c	FUNCTION_17
0x4000b6f	      0xe800000000	                          call 0x4000b74	       550	svclock.c	FUNCTION_17	CALL_10
0x4000b74	      0xba00000001	                      mov edx, 0x1000000	       551	svclock.c	FUNCTION_17
0x4000b79	      0xe95affffff	                           jmp 0x4000ad8	       551	svclock.c	FUNCTION_17
nlmsvc_owner_key	IF,0:FOR,0:WHILE,0:DO,0:ELSE,0:functions,0:CALL,0:SWITCH,0	3
0x4000100	          0x8b4748	            mov eax, dword [rdi + 0x48] 	       708	svclock.c	FUNCTION_24
0x4000103	        0x48334738	             xor rax, qword [rdi + 0x38]	       708	svclock.c	FUNCTION_24
0x4000107	              0xc3	                                     ret	       709	svclock.c	FUNCTION_24
nlmsvc_same_owner	IF,0:FOR,0:WHILE,0:DO,0:ELSE,0:functions,0:CALL,0:SWITCH,0	10
0x40000e0	            0x31c0	                            xor eax, eax	       697	svclock.c	FUNCTION_23
0x40000e2	        0x488b5638	            mov rdx, qword [rsi + 0x38] 	       697	svclock.c	FUNCTION_23
0x40000e6	        0x48395738	            cmp qword [rdi + 0x38], rdx 	       697	svclock.c	FUNCTION_23
0x40000ea	            0x7402	                            je 0x40000ee	       697	svclock.c	FUNCTION_23
0x40000ec	            0xf3c3	                                     ret	       698	svclock.c	FUNCTION_23
0x40000ee	          0x8b4648	            mov eax, dword [rsi + 0x48] 	       697	svclock.c	FUNCTION_23
0x40000f1	          0x394748	            cmp dword [rdi + 0x48], eax 	       697	svclock.c	FUNCTION_23
0x40000f4	           0xf94c0	                                 sete al	       697	svclock.c	FUNCTION_23
0x40000f7	           0xfb6c0	                           movzx eax, al	       697	svclock.c	FUNCTION_23
0x40000fa	              0xc3	                                     ret	       698	svclock.c	FUNCTION_23
nlmsvc_grant_release	IF,0:FOR,0:WHILE,0:DO,0:ELSE,0:functions,0:CALL,1:SWITCH,0	2
0x40001b0	    0x488bbf580300	           mov rdi, qword [rdi + 0x358] 	       852	svclock.c	FUNCTION_27	CALL_1
0x40001b7	      0xe954ffffff	            jmp sym.nlmsvc_release_block	       852	svclock.c	FUNCTION_27	CALL_1
nlmsvc_unlock	IF,0:FOR,0:WHILE,0:DO,0:ELSE,0:functions,0:CALL,5:SWITCH,0	16
0x4000c60	              0x55	                                push rbp	       565	svclock.c	FUNCTION_18
0x4000c61	              0x53	                                push rbx	       565	svclock.c	FUNCTION_18
0x4000c62	          0x4889f5	                            mov rbp, rsi	       565	svclock.c	FUNCTION_18
0x4000c65	          0x4889d3	                            mov rbx, rdx	       565	svclock.c	FUNCTION_18
0x4000c68	      0xe800000000	                          call 0x4000c6d	       576	svclock.c	FUNCTION_18	CALL_4
0x4000c6d	    0xc683ec000000	                mov byte [rbx + 0xec], 2	       578	svclock.c	FUNCTION_18
0x4000c74	    0x488bbd980000	            mov rdi, qword [rbp + 0x98] 	       579	svclock.c	FUNCTION_18	CALL_5
0x4000c7b	    0x488d93a80000	                   lea rdx, [rbx + 0xa8]	       579	svclock.c	FUNCTION_18	CALL_5
0x4000c82	            0x31c9	                            xor ecx, ecx	       579	svclock.c	FUNCTION_18	CALL_5
0x4000c84	      0xbe06000000	                              mov esi, 6	       579	svclock.c	FUNCTION_18	CALL_5
0x4000c89	      0xe800000000	                          call 0x4000c8e	       579	svclock.c	FUNCTION_18	CALL_5
0x4000c8e	          0xc1f81f	                           sar eax, 0x1f	       581	svclock.c	FUNCTION_18
0x4000c91	      0x2500000002	                      and eax, 0x2000000	       581	svclock.c	FUNCTION_18
0x4000c96	              0x5b	                                 pop rbx	       582	svclock.c	FUNCTION_18
0x4000c97	              0x5d	                                 pop rbp	       582	svclock.c	FUNCTION_18
0x4000c98	              0xc3	                                     ret	       582	svclock.c	FUNCTION_18
