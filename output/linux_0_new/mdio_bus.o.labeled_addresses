mdiobus_unregister_device	DO,0:ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,1:CALL,0	9
0x4000040	    0x486397180300	        movsxd rdx, dword [rdi + 0x318] 	        93	mdio_bus.c	FUNCTION_3
0x4000047	    0x488b87d80200	           mov rax, qword [rdi + 0x2d8] 	        93	mdio_bus.c	FUNCTION_3
0x400004e	        0x488d14d0	                  lea rdx, [rax + rdx*8]	        93	mdio_bus.c	FUNCTION_3
0x4000052	      0xb8eaffffff	                     mov eax, 0xffffffea	        95	mdio_bus.c	FUNCTION_3	IF_1
0x4000057	    0x483bba700300	           cmp rdi, qword [rdx + 0x370] 	        94	mdio_bus.c	FUNCTION_3	IF_1
0x400005e	            0x750d	                           jne 0x400006d	        94	mdio_bus.c	FUNCTION_3	IF_1
0x4000060	    0x48c782700300	              mov qword [rdx + 0x370], 0	        97	mdio_bus.c	FUNCTION_3
0x400006b	            0x31c0	                            xor eax, eax	        99	mdio_bus.c	FUNCTION_3
0x400006d	            0xf3c3	                                     ret	       100	mdio_bus.c	FUNCTION_3
mdio_bus_match	DO,0:ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,2:CALL,3	6
0x40000b0	    0x488b87000300	           mov rax, qword [rdi + 0x300] 	       702	mdio_bus.c	FUNCTION_27	IF_2
0x40000b7	          0x4885c0	                           test rax, rax	       702	mdio_bus.c	FUNCTION_27	IF_2
0x40000ba	            0x7405	                            je 0x40000c1	       702	mdio_bus.c	FUNCTION_27	IF_2
0x40000bc	      0xe900000000	                           jmp 0x40000c1	       703	mdio_bus.c	FUNCTION_27	CALL_3
0x40000c1	            0x31c0	                            xor eax, eax	       706	mdio_bus.c	FUNCTION_27
0x40000c3	              0xc3	                                     ret	       706	mdio_bus.c	FUNCTION_27
devm_mdiobus_match	DO,0:ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,1:CALL,1	12
0x4000140	          0x4885f6	                           test rsi, rsi	       169	mdio_bus.c	FUNCTION_8	IF_1	CALL_1
0x4000143	            0x7412	                            je 0x4000157	       169	mdio_bus.c	FUNCTION_8	IF_1	CALL_1
0x4000145	          0x488b06	                    mov rax, qword [rsi]	       169	mdio_bus.c	FUNCTION_8	IF_1	CALL_1
0x4000148	          0x4885c0	                           test rax, rax	       169	mdio_bus.c	FUNCTION_8	IF_1	CALL_1
0x400014b	            0x740a	                            je 0x4000157	       169	mdio_bus.c	FUNCTION_8	IF_1	CALL_1
0x400014d	          0x4839d0	                            cmp rax, rdx	       172	mdio_bus.c	FUNCTION_8
0x4000150	           0xf94c0	                                 sete al	       172	mdio_bus.c	FUNCTION_8
0x4000153	           0xfb6c0	                           movzx eax, al	       172	mdio_bus.c	FUNCTION_8
0x4000156	              0xc3	                                     ret	       172	mdio_bus.c	FUNCTION_8
0x4000157	             0xf0b	                                     ud2	       172	mdio_bus.c	FUNCTION_8
0x4000159	            0x31c0	                            xor eax, eax	       170	mdio_bus.c	FUNCTION_8	IF_1
0x400015b	              0xc3	                                     ret	       173	mdio_bus.c	FUNCTION_8
mdio_bus_suspend	DO,0:ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,1:CALL,2	9
0x40000e0	    0x488b87d00200	           mov rax, qword [rdi + 0x2d0] 	       725	mdio_bus.c	FUNCTION_29	IF_1
0x40000e7	          0x4885c0	                           test rax, rax	       725	mdio_bus.c	FUNCTION_29	IF_1
0x40000ea	            0x740e	                            je 0x40000fa	       725	mdio_bus.c	FUNCTION_29	IF_1
0x40000ec	        0x488b4010	            mov rax, qword [rax + 0x10] 	       725	mdio_bus.c	FUNCTION_29	IF_1
0x40000f0	          0x4885c0	                           test rax, rax	       725	mdio_bus.c	FUNCTION_29	IF_1
0x40000f3	            0x7405	                            je 0x40000fa	       725	mdio_bus.c	FUNCTION_29	IF_1
0x40000f5	      0xe900000000	                           jmp 0x40000fa	       726	mdio_bus.c	FUNCTION_29	CALL_2
0x40000fa	            0x31c0	                            xor eax, eax	       729	mdio_bus.c	FUNCTION_29
0x40000fc	              0xc3	                                     ret	       729	mdio_bus.c	FUNCTION_29
mdio_uevent	DO,0:ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,1:CALL,1	2
0x40000d0	            0x31c0	                            xor eax, eax	       718	mdio_bus.c	FUNCTION_28
0x40000d2	              0xc3	                                     ret	       718	mdio_bus.c	FUNCTION_28
mdiobus_register_device	DO,0:ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,3:CALL,1	19
0x40003f0	    0x48638f180300	        movsxd rcx, dword [rdi + 0x318] 	        77	mdio_bus.c	FUNCTION_2	IF_1
0x40003f7	    0x488b97d80200	           mov rdx, qword [rdi + 0x2d8] 	        77	mdio_bus.c	FUNCTION_2	IF_1
0x40003fe	    0x4883bcca7003	      cmp qword [rdx + rcx*8 + 0x370], 0	        77	mdio_bus.c	FUNCTION_2	IF_1
0x4000407	            0x753c	                           jne 0x4000445	        77	mdio_bus.c	FUNCTION_2	IF_1
0x4000409	    0xf6871c030000	              test byte [rdi + 0x31c], 1	        80	mdio_bus.c	FUNCTION_2	IF_2
0x4000410	              0x53	                                push rbx	        74	mdio_bus.c	FUNCTION_2
0x4000411	          0x4889fb	                            mov rbx, rdi	        74	mdio_bus.c	FUNCTION_2
0x4000414	            0x7423	                            je 0x4000439	        80	mdio_bus.c	FUNCTION_2	IF_2
0x4000416	    0x48c787200300	              mov qword [rdi + 0x320], 0	        65	mdio_bus.c	FUNCTION_1
0x4000421	      0xbe01000000	                              mov esi, 1	        68	mdio_bus.c	FUNCTION_1	CALL_6
0x4000426	      0xe800000000	                          call 0x400042b	        68	mdio_bus.c	FUNCTION_1	CALL_6
0x400042b	    0x48638b180300	        movsxd rcx, dword [rbx + 0x318] 	        68	mdio_bus.c	FUNCTION_1	CALL_6
0x4000432	    0x488b93d80200	           mov rdx, qword [rbx + 0x2d8] 	        68	mdio_bus.c	FUNCTION_1	CALL_6
0x4000439	    0x48899cca7003	    mov qword [rdx + rcx*8 + 0x370], rbx	        86	mdio_bus.c	FUNCTION_2
0x4000441	            0x31c0	                            xor eax, eax	        88	mdio_bus.c	FUNCTION_2
0x4000443	              0x5b	                                 pop rbx	        89	mdio_bus.c	FUNCTION_2
0x4000444	              0xc3	                                     ret	        89	mdio_bus.c	FUNCTION_2
0x4000445	      0xb8f0ffffff	                     mov eax, 0xfffffff0	        89	mdio_bus.c	FUNCTION_2
0x400044a	              0xc3	                                     ret	        89	mdio_bus.c	FUNCTION_2
mdio_bus_exit	DO,0:ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:CALL,2	4
0x40006d0	    0x48c7c7000000	                              mov rdi, 0	       793	mdio_bus.c	FUNCTION_33	CALL_1
0x40006d7	      0xe800000000	                          call 0x40006dc	       793	mdio_bus.c	FUNCTION_33	CALL_1
0x40006dc	    0x48c7c7000000	                              mov rdi, 0	       794	mdio_bus.c	FUNCTION_33	CALL_2
0x40006e3	      0xe900000000	                           jmp 0x40006e8	       794	mdio_bus.c	FUNCTION_33	CALL_2
mdiobus_scan	DO,0:ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,2:CALL,6	16
0x40004c0	              0x53	                                push rbx	       507	mdio_bus.c	FUNCTION_20
0x40004c1	            0x31d2	                            xor edx, edx	       511	mdio_bus.c	FUNCTION_20	CALL_1
0x40004c3	      0xe800000000	                          call 0x40004c8	       511	mdio_bus.c	FUNCTION_20	CALL_1
0x40004c8	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       512	mdio_bus.c	FUNCTION_20	IF_1	CALL_2
0x40004ce	          0x4889c3	                            mov rbx, rax	       511	mdio_bus.c	FUNCTION_20	CALL_1
0x40004d1	          0x4889c7	                            mov rdi, rax	       513	mdio_bus.c	FUNCTION_20	IF_1
0x40004d4	            0x7718	                            ja 0x40004ee	       512	mdio_bus.c	FUNCTION_20	IF_1	CALL_2
0x40004d6	      0xe800000000	                          call 0x40004db	       521	mdio_bus.c	FUNCTION_20	CALL_4
0x40004db	            0x85c0	                           test eax, eax	       522	mdio_bus.c	FUNCTION_20	IF_2
0x40004dd	          0x4889df	                            mov rdi, rbx	       527	mdio_bus.c	FUNCTION_20
0x40004e0	            0x740c	                            je 0x40004ee	       522	mdio_bus.c	FUNCTION_20	IF_2
0x40004e2	      0xe800000000	                          call 0x40004e7	       523	mdio_bus.c	FUNCTION_20	IF_2	CALL_5
0x40004e7	    0x48c7c7edffff	             mov rdi, 0xffffffffffffffed	       524	mdio_bus.c	FUNCTION_20	IF_2	CALL_6
0x40004ee	          0x4889f8	                            mov rax, rdi	       528	mdio_bus.c	FUNCTION_20
0x40004f1	              0x5b	                                 pop rbx	       528	mdio_bus.c	FUNCTION_20
0x40004f2	              0xc3	                                     ret	       528	mdio_bus.c	FUNCTION_20
devm_mdiobus_alloc_size	DO,0:ELSE,1:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,2:CALL,4	37
0x4000a10	            0x4154	                                push r12	       190	mdio_bus.c	FUNCTION_9
0x4000a12	              0x55	                                push rbp	       190	mdio_bus.c	FUNCTION_9
0x4000a13	          0x4989fc	                            mov r12, rdi	       190	mdio_bus.c	FUNCTION_9
0x4000a16	              0x53	                                push rbx	       190	mdio_bus.c	FUNCTION_9
0x4000a17	    0x49c7c0000000	                               mov r8, 0	       193	mdio_bus.c	FUNCTION_9	CALL_1
0x4000a1e	            0x89f3	                            mov ebx, esi	       190	mdio_bus.c	FUNCTION_9
0x4000a20	      0xb9ffffffff	                     mov ecx, 0xffffffff	       193	mdio_bus.c	FUNCTION_9	CALL_1
0x4000a25	      0xbac0004001	                      mov edx, 0x14000c0	       193	mdio_bus.c	FUNCTION_9	CALL_1
0x4000a2a	      0xbe08000000	                              mov esi, 8	       193	mdio_bus.c	FUNCTION_9	CALL_1
0x4000a2f	    0x48c7c7000000	                              mov rdi, 0	       193	mdio_bus.c	FUNCTION_9	CALL_1
0x4000a36	      0xe800000000	                          call 0x4000a3b	       193	mdio_bus.c	FUNCTION_9	CALL_1
0x4000a3b	          0x4885c0	                           test rax, rax	       194	mdio_bus.c	FUNCTION_9	IF_1
0x4000a3e	            0x7439	                            je 0x4000a79	       194	mdio_bus.c	FUNCTION_9	IF_1
0x4000a40	          0x4863fb	                         movsxd rdi, ebx	       198	mdio_bus.c	FUNCTION_9	CALL_2
0x4000a43	          0x4889c5	                            mov rbp, rax	       198	mdio_bus.c	FUNCTION_9	CALL_2
0x4000a46	      0xe800000000	                          call 0x4000a4b	       198	mdio_bus.c	FUNCTION_9	CALL_2
0x4000a4b	          0x4885c0	                           test rax, rax	       199	mdio_bus.c	FUNCTION_9	IF_2
0x4000a4e	          0x4889c3	                            mov rbx, rax	       198	mdio_bus.c	FUNCTION_9	CALL_2
0x4000a51	            0x7417	                            je 0x4000a6a	       199	mdio_bus.c	FUNCTION_9	IF_2
0x4000a53	        0x48894500	                    mov qword [rbp], rax	       200	mdio_bus.c	FUNCTION_9	IF_2
0x4000a57	          0x4889ee	                            mov rsi, rbp	       201	mdio_bus.c	FUNCTION_9	IF_2	CALL_3
0x4000a5a	          0x4c89e7	                            mov rdi, r12	       201	mdio_bus.c	FUNCTION_9	IF_2	CALL_3
0x4000a5d	      0xe800000000	                          call 0x4000a62	       201	mdio_bus.c	FUNCTION_9	IF_2	CALL_3
0x4000a62	          0x4889d8	                            mov rax, rbx	       201	mdio_bus.c	FUNCTION_9	IF_2	CALL_3
0x4000a65	              0x5b	                                 pop rbx	       207	mdio_bus.c	FUNCTION_9
0x4000a66	              0x5d	                                 pop rbp	       207	mdio_bus.c	FUNCTION_9
0x4000a67	            0x415c	                                 pop r12	       207	mdio_bus.c	FUNCTION_9
0x4000a69	              0xc3	                                     ret	       207	mdio_bus.c	FUNCTION_9
0x4000a6a	          0x4889ef	                            mov rdi, rbp	       203	mdio_bus.c	FUNCTION_9	ELSE_1	CALL_4
0x4000a6d	      0xe800000000	                          call 0x4000a72	       203	mdio_bus.c	FUNCTION_9	ELSE_1	CALL_4
0x4000a72	            0x31c0	                            xor eax, eax	       203	mdio_bus.c	FUNCTION_9	ELSE_1	CALL_4
0x4000a74	              0x5b	                                 pop rbx	       207	mdio_bus.c	FUNCTION_9
0x4000a75	              0x5d	                                 pop rbp	       207	mdio_bus.c	FUNCTION_9
0x4000a76	            0x415c	                                 pop r12	       207	mdio_bus.c	FUNCTION_9
0x4000a78	              0xc3	                                     ret	       207	mdio_bus.c	FUNCTION_9
0x4000a79	            0x31c0	                            xor eax, eax	       195	mdio_bus.c	FUNCTION_9	IF_1
0x4000a7b	            0xebe8	                           jmp 0x4000a65	       195	mdio_bus.c	FUNCTION_9	IF_1
__mdiobus_register	DO,0:ELSE,1:FOR,1:functions,0:SWITCH,0:WHILE,1:IF,9:CALL,24	110
0x4000500	          0x4885ff	                           test rdi, rdi	       367	mdio_bus.c	FUNCTION_17	IF_1
0x4000503	     0xf8497010000	                            je 0x40006a0	       367	mdio_bus.c	FUNCTION_17	IF_1
0x4000509	      0x48837f0800	                  cmp qword [rdi + 8], 0	       367	mdio_bus.c	FUNCTION_17	IF_1
0x400050e	     0xf848c010000	                            je 0x40006a0	       367	mdio_bus.c	FUNCTION_17	IF_1
0x4000514	      0x48837f5800	               cmp qword [rdi + 0x58], 0	       367	mdio_bus.c	FUNCTION_17	IF_1
0x4000519	     0xf8481010000	                            je 0x40006a0	       367	mdio_bus.c	FUNCTION_17	IF_1
0x400051f	      0x48837f6000	               cmp qword [rdi + 0x60], 0	       368	mdio_bus.c	FUNCTION_17	IF_1
0x4000524	     0xf8476010000	                            je 0x40006a0	       368	mdio_bus.c	FUNCTION_17	IF_1
0x400052a	    0x8b8798000000	            mov eax, dword [rdi + 0x98] 	       371	mdio_bus.c	FUNCTION_17	CALL_1
0x4000530	          0x83e0fd	                     and eax, 0xfffffffd	       371	mdio_bus.c	FUNCTION_17	CALL_1
0x4000533	          0x83f801	                              cmp eax, 1	       371	mdio_bus.c	FUNCTION_17	CALL_1
0x4000536	     0xf8562010000	                           jne 0x400069e	       371	mdio_bus.c	FUNCTION_17	CALL_1
0x400053c	            0x4155	                                push r13	       362	mdio_bus.c	FUNCTION_17
0x400053e	            0x4154	                                push r12	       362	mdio_bus.c	FUNCTION_17
0x4000540	    0x4c8dafa00000	                   lea r13, [rdi + 0xa0]	       378	mdio_bus.c	FUNCTION_17	CALL_2
0x4000547	              0x55	                                push rbp	       362	mdio_bus.c	FUNCTION_17
0x4000548	              0x53	                                push rbx	       362	mdio_bus.c	FUNCTION_17
0x4000549	        0x488d5f10	                   lea rbx, [rdi + 0x10]	       378	mdio_bus.c	FUNCTION_17	CALL_2
0x400054d	          0x4889fd	                            mov rbp, rdi	       378	mdio_bus.c	FUNCTION_17	CALL_2
0x4000550	        0x4883ec08	                              sub rsp, 8	       362	mdio_bus.c	FUNCTION_17
0x4000554	    0x488b87900000	            mov rax, qword [rdi + 0x90] 	       375	mdio_bus.c	FUNCTION_17
0x400055b	          0x488937	                    mov qword [rdi], rsi	       374	mdio_bus.c	FUNCTION_17
0x400055e	    0x48c787400300	              mov qword [rdi + 0x340], 0	       376	mdio_bus.c	FUNCTION_17
0x4000569	    0x48c787480300	              mov qword [rdi + 0x348], 0	       377	mdio_bus.c	FUNCTION_17
0x4000574	          0x4889da	                            mov rdx, rbx	       378	mdio_bus.c	FUNCTION_17	CALL_2
0x4000577	    0x48c7c6000000	                              mov rsi, 0	       378	mdio_bus.c	FUNCTION_17	CALL_2
0x400057e	    0x488987a00000	             mov qword [rdi + 0xa0], rax	       375	mdio_bus.c	FUNCTION_17
0x4000585	          0x4c89ef	                            mov rdi, r13	       378	mdio_bus.c	FUNCTION_17	CALL_2
0x4000588	      0xe800000000	                          call 0x400058d	       378	mdio_bus.c	FUNCTION_17	CALL_2
0x400058d	          0x4c89ef	                            mov rdi, r13	       380	mdio_bus.c	FUNCTION_17	CALL_3
0x4000590	      0xe800000000	                          call 0x4000595	       380	mdio_bus.c	FUNCTION_17	CALL_3
0x4000595	            0x85c0	                           test eax, eax	       381	mdio_bus.c	FUNCTION_17	IF_2
0x4000597	     0xf8509010000	                           jne 0x40006a6	       381	mdio_bus.c	FUNCTION_17	IF_2
0x400059d	        0x488d7d70	                   lea rdi, [rbp + 0x70]	       387	mdio_bus.c	FUNCTION_17	CALL_6
0x40005a1	    0x48c7c2000000	                              mov rdx, 0	       387	mdio_bus.c	FUNCTION_17	CALL_6
0x40005a8	    0x48c7c6000000	                              mov rsi, 0	       387	mdio_bus.c	FUNCTION_17	CALL_6
0x40005af	      0xe800000000	                          call 0x40005b4	       387	mdio_bus.c	FUNCTION_17	CALL_6
0x40005b4	        0x488b4568	            mov rax, qword [rbp + 0x68] 	       403	mdio_bus.c	FUNCTION_17	IF_5
0x40005b8	          0x4885c0	                           test rax, rax	       403	mdio_bus.c	FUNCTION_17	IF_5
0x40005bb	            0x7408	                            je 0x40005c5	       403	mdio_bus.c	FUNCTION_17	IF_5
0x40005bd	          0x4889ef	                            mov rdi, rbp	       404	mdio_bus.c	FUNCTION_17	CALL_14
0x40005c0	      0xe800000000	                          call 0x40005c5	       404	mdio_bus.c	FUNCTION_17	CALL_14
0x40005c5	            0x31db	                            xor ebx, ebx	       362	mdio_bus.c	FUNCTION_17
0x40005c7	    0x41bc01000000	                             mov r12d, 1	       407	mdio_bus.c	FUNCTION_17	FOR_1	IF_6
0x40005cd	            0xeb0c	                           jmp 0x40005db	       407	mdio_bus.c	FUNCTION_17	FOR_1	IF_6
0x40005cf	          0x83c301	                              add ebx, 1	       406	mdio_bus.c	FUNCTION_17	FOR_1
0x40005d2	          0x83fb20	                           cmp ebx, 0x20	       406	mdio_bus.c	FUNCTION_17	FOR_1
0x40005d5	     0xf848d000000	                            je 0x4000668	       406	mdio_bus.c	FUNCTION_17	FOR_1
0x40005db	          0x4489e0	                           mov eax, r12d	       407	mdio_bus.c	FUNCTION_17	FOR_1	IF_6
0x40005de	            0x89d9	                            mov ecx, ebx	       407	mdio_bus.c	FUNCTION_17	FOR_1	IF_6
0x40005e0	            0xd3e0	                             shl eax, cl	       407	mdio_bus.c	FUNCTION_17	FOR_1	IF_6
0x40005e2	    0x858570040000	          test dword [rbp + 0x470], eax 	       407	mdio_bus.c	FUNCTION_17	FOR_1	IF_6
0x40005e8	            0x75e5	                           jne 0x40005cf	       407	mdio_bus.c	FUNCTION_17	FOR_1	IF_6
0x40005ea	            0x89de	                            mov esi, ebx	       410	mdio_bus.c	FUNCTION_17	FOR_1	IF_6	CALL_15
0x40005ec	          0x4889ef	                            mov rdi, rbp	       410	mdio_bus.c	FUNCTION_17	FOR_1	IF_6	CALL_15
0x40005ef	      0xe800000000	                          call 0x40005f4	       410	mdio_bus.c	FUNCTION_17	FOR_1	IF_6	CALL_15
0x40005f4	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       411	mdio_bus.c	FUNCTION_17	FOR_1	IF_6	IF_7	CALL_17
0x40005fa	            0x76d3	                           jbe 0x40005cf	       411	mdio_bus.c	FUNCTION_17	FOR_1	IF_6	IF_7	CALL_17
0x40005fc	        0x4883f8ed	             cmp rax, 0xffffffffffffffed	       411	mdio_bus.c	FUNCTION_17	FOR_1	IF_6	IF_7	CALL_17
0x4000600	            0x74cd	                            je 0x40005cf	       411	mdio_bus.c	FUNCTION_17	FOR_1	IF_6	IF_7	CALL_17
0x4000602	          0x83eb01	                              sub ebx, 1	       425	mdio_bus.c	FUNCTION_17	WHILE_1
0x4000605	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       425	mdio_bus.c	FUNCTION_17	WHILE_1
0x4000608	            0x7440	                            je 0x400064a	       425	mdio_bus.c	FUNCTION_17	WHILE_1
0x400060a	          0x4863d3	                         movsxd rdx, ebx	       426	mdio_bus.c	FUNCTION_17	WHILE_1
0x400060d	    0x4c8ba4d57003	   mov r12, qword [rbp + rdx*8 + 0x370] 	       426	mdio_bus.c	FUNCTION_17	WHILE_1
0x4000615	          0x4d85e4	                           test r12, r12	       427	mdio_bus.c	FUNCTION_17	WHILE_1	IF_8
0x4000618	            0x74e8	                            je 0x4000602	       427	mdio_bus.c	FUNCTION_17	WHILE_1	IF_8
0x400061a	          0x83eb01	                              sub ebx, 1	       425	mdio_bus.c	FUNCTION_17	WHILE_1
0x400061d	        0x48890424	                    mov qword [rsp], rax	       425	mdio_bus.c	FUNCTION_17	WHILE_1
0x4000621	    0x498b94241003	           mov rdx, qword [r12 + 0x310] 	       430	mdio_bus.c	FUNCTION_17	WHILE_1	CALL_21
0x4000629	          0x4c89e7	                            mov rdi, r12	       430	mdio_bus.c	FUNCTION_17	WHILE_1	CALL_21
0x400062c	      0xe800000000	                          call 0x4000631	       430	mdio_bus.c	FUNCTION_17	WHILE_1	CALL_21
0x4000631	    0x498b94240803	           mov rdx, qword [r12 + 0x308] 	       431	mdio_bus.c	FUNCTION_17	WHILE_1	CALL_22
0x4000639	          0x4c89e7	                            mov rdi, r12	       431	mdio_bus.c	FUNCTION_17	WHILE_1	CALL_22
0x400063c	      0xe800000000	                          call 0x4000641	       431	mdio_bus.c	FUNCTION_17	WHILE_1	CALL_22
0x4000641	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       425	mdio_bus.c	FUNCTION_17	WHILE_1
0x4000644	        0x488b0424	                    mov rax, qword [rsp]	       431	mdio_bus.c	FUNCTION_17	WHILE_1	CALL_22
0x4000648	            0x75c0	                           jne 0x400060a	       425	mdio_bus.c	FUNCTION_17	WHILE_1
0x400064a	    0x4883bd000500	              cmp qword [rbp + 0x500], 0	       435	mdio_bus.c	FUNCTION_17	IF_9
0x4000652	            0x7402	                            je 0x4000656	       435	mdio_bus.c	FUNCTION_17	IF_9
0x4000654	             0xf0b	                                     ud2	       435	mdio_bus.c	FUNCTION_17	IF_9
0x4000656	          0x4c89ef	                            mov rdi, r13	       438	mdio_bus.c	FUNCTION_17	CALL_24
0x4000659	        0x48890424	                    mov qword [rsp], rax	       438	mdio_bus.c	FUNCTION_17	CALL_24
0x400065d	      0xe800000000	                          call 0x4000662	       438	mdio_bus.c	FUNCTION_17	CALL_24
0x4000662	        0x488b0424	                    mov rax, qword [rsp]	       439	mdio_bus.c	FUNCTION_17
0x4000666	            0xeb2b	                           jmp 0x4000693	       439	mdio_bus.c	FUNCTION_17
0x4000668	    0x48c7c6000000	                              mov rsi, 0	       418	mdio_bus.c	FUNCTION_17	CALL_19
0x400066f	          0x4889ef	                            mov rdi, rbp	       418	mdio_bus.c	FUNCTION_17	CALL_19
0x4000672	      0xe800000000	                          call 0x4000677	       418	mdio_bus.c	FUNCTION_17	CALL_19
0x4000677	        0x488b7508	                mov rsi, qword [rbp + 8]	       421	mdio_bus.c	FUNCTION_17	CALL_20
0x400067b	    0xc78598000000	               mov dword [rbp + 0x98], 2	       420	mdio_bus.c	FUNCTION_17
0x4000685	    0x48c7c7000000	                              mov rdi, 0	       421	mdio_bus.c	FUNCTION_17	CALL_20
0x400068c	      0xe800000000	                          call 0x4000691	       421	mdio_bus.c	FUNCTION_17	CALL_20
0x4000691	            0x31c0	                            xor eax, eax	       422	mdio_bus.c	FUNCTION_17
0x4000693	        0x4883c408	                              add rsp, 8	       440	mdio_bus.c	FUNCTION_17
0x4000697	              0x5b	                                 pop rbx	       440	mdio_bus.c	FUNCTION_17
0x4000698	              0x5d	                                 pop rbp	       440	mdio_bus.c	FUNCTION_17
0x4000699	            0x415c	                                 pop r12	       440	mdio_bus.c	FUNCTION_17
0x400069b	            0x415d	                                 pop r13	       440	mdio_bus.c	FUNCTION_17
0x400069d	              0xc3	                                     ret	       440	mdio_bus.c	FUNCTION_17
0x400069e	             0xf0b	                                     ud2	       440	mdio_bus.c	FUNCTION_17
0x40006a0	      0xb8eaffffff	                     mov eax, 0xffffffea	       369	mdio_bus.c	FUNCTION_17	IF_1
0x40006a5	              0xc3	                                     ret	       369	mdio_bus.c	FUNCTION_17	IF_1
0x40006a6	          0x4889de	                            mov rsi, rbx	       382	mdio_bus.c	FUNCTION_17	IF_2	CALL_4
0x40006a9	    0x48c7c7000000	                              mov rdi, 0	       382	mdio_bus.c	FUNCTION_17	IF_2	CALL_4
0x40006b0	      0xe800000000	                          call 0x40006b5	       382	mdio_bus.c	FUNCTION_17	IF_2	CALL_4
0x40006b5	          0x4c89ef	                            mov rdi, r13	       383	mdio_bus.c	FUNCTION_17	IF_2	CALL_5
0x40006b8	      0xe800000000	                          call 0x40006bd	       383	mdio_bus.c	FUNCTION_17	IF_2	CALL_5
0x40006bd	      0xb8eaffffff	                     mov eax, 0xffffffea	       384	mdio_bus.c	FUNCTION_17	IF_2
0x40006c2	            0xebcf	                           jmp 0x4000693	       384	mdio_bus.c	FUNCTION_17	IF_2
mdiobus_is_registered_device	DO,0:ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:CALL,0	4
0x40000a0	          0x4863f6	                         movsxd rsi, esi	       119	mdio_bus.c	FUNCTION_5
0x40000a3	    0x4883bcf77003	      cmp qword [rdi + rsi*8 + 0x370], 0	       119	mdio_bus.c	FUNCTION_5
0x40000ac	           0xf95c0	                                setne al	       119	mdio_bus.c	FUNCTION_5
0x40000af	              0xc3	                                     ret	       120	mdio_bus.c	FUNCTION_5
mdio_bus_resume	DO,0:ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,1:CALL,2	9
0x4000100	    0x488b87d00200	           mov rax, qword [rdi + 0x2d0] 	       735	mdio_bus.c	FUNCTION_30	IF_1
0x4000107	          0x4885c0	                           test rax, rax	       735	mdio_bus.c	FUNCTION_30	IF_1
0x400010a	            0x740e	                            je 0x400011a	       735	mdio_bus.c	FUNCTION_30	IF_1
0x400010c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       735	mdio_bus.c	FUNCTION_30	IF_1
0x4000110	          0x4885c0	                           test rax, rax	       735	mdio_bus.c	FUNCTION_30	IF_1
0x4000113	            0x7405	                            je 0x400011a	       735	mdio_bus.c	FUNCTION_30	IF_1
0x4000115	      0xe900000000	                           jmp 0x400011a	       736	mdio_bus.c	FUNCTION_30	CALL_2
0x400011a	            0x31c0	                            xor eax, eax	       739	mdio_bus.c	FUNCTION_30
0x400011c	              0xc3	                                     ret	       739	mdio_bus.c	FUNCTION_30
_devm_mdiobus_free	DO,0:ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,0:CALL,1	2
0x4000820	          0x488b3e	                    mov rdi, qword [rsi]	       162	mdio_bus.c	FUNCTION_7	CALL_1
0x4000823	            0xebcb	                    jmp sym.mdiobus_free	       162	mdio_bus.c	FUNCTION_7	CALL_1
mdiobus_get_phy	DO,0:ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,2:CALL,1	10
0x4000070	          0x4863f6	                         movsxd rsi, esi	       105	mdio_bus.c	FUNCTION_4
0x4000073	    0x488b84f77003	   mov rax, qword [rdi + rsi*8 + 0x370] 	       105	mdio_bus.c	FUNCTION_4
0x400007b	          0x4885c0	                           test rax, rax	       107	mdio_bus.c	FUNCTION_4	IF_1
0x400007e	            0x7411	                            je 0x4000091	       107	mdio_bus.c	FUNCTION_4	IF_1
0x4000080	    0xf6801c030000	              test byte [rax + 0x31c], 1	       110	mdio_bus.c	FUNCTION_4	IF_2
0x4000087	      0xba00000000	                              mov edx, 0	       110	mdio_bus.c	FUNCTION_4	IF_2
0x400008c	        0x480f44c2	                          cmove rax, rdx	       110	mdio_bus.c	FUNCTION_4	IF_2
0x4000090	              0xc3	                                     ret	       110	mdio_bus.c	FUNCTION_4	IF_2
0x4000091	            0x31c0	                            xor eax, eax	       108	mdio_bus.c	FUNCTION_4	IF_1
0x4000093	              0xc3	                                     ret	       114	mdio_bus.c	FUNCTION_4
mdiobus_create_device	DO,0:ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,2:CALL,5	28
0x4000450	              0x55	                                push rbp	       327	mdio_bus.c	FUNCTION_16
0x4000451	          0x4889f5	                            mov rbp, rsi	       327	mdio_bus.c	FUNCTION_16
0x4000454	              0x53	                                push rbx	       327	mdio_bus.c	FUNCTION_16
0x4000455	          0x8b7628	            mov esi, dword [rsi + 0x28] 	       331	mdio_bus.c	FUNCTION_16	CALL_1
0x4000458	      0xe800000000	                          call 0x400045d	       331	mdio_bus.c	FUNCTION_16	CALL_1
0x400045d	          0x4889c3	                            mov rbx, rax	       331	mdio_bus.c	FUNCTION_16	CALL_1
0x4000460	      0xb8edffffff	                     mov eax, 0xffffffed	       333	mdio_bus.c	FUNCTION_16	IF_1
0x4000465	    0x4881fb00f0ff	             cmp rbx, 0xfffffffffffff000	       332	mdio_bus.c	FUNCTION_16	IF_1	CALL_2
0x400046c	            0x7745	                            ja 0x40004b3	       332	mdio_bus.c	FUNCTION_16	IF_1	CALL_2
0x400046e	        0x488d7508	                      lea rsi, [rbp + 8]	       335	mdio_bus.c	FUNCTION_16	CALL_3
0x4000472	    0x488dbbe00200	                  lea rdi, [rbx + 0x2e0]	       335	mdio_bus.c	FUNCTION_16	CALL_3
0x4000479	      0xba20000000	                           mov edx, 0x20	       335	mdio_bus.c	FUNCTION_16	CALL_3
0x400047e	      0xe800000000	                          call 0x4000483	       335	mdio_bus.c	FUNCTION_16	CALL_3
0x4000483	    0x48c783000300	              mov qword [rbx + 0x300], 0	       337	mdio_bus.c	FUNCTION_16
0x400048e	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       338	mdio_bus.c	FUNCTION_16
0x4000492	          0x4889df	                            mov rdi, rbx	       340	mdio_bus.c	FUNCTION_16	CALL_4
0x4000495	    0x488983900000	             mov qword [rbx + 0x90], rax	       338	mdio_bus.c	FUNCTION_16
0x400049c	      0xe800000000	                          call 0x40004a1	       340	mdio_bus.c	FUNCTION_16	CALL_4
0x40004a1	            0x89c5	                            mov ebp, eax	       340	mdio_bus.c	FUNCTION_16	CALL_4
0x40004a3	            0x31c0	                            xor eax, eax	       340	mdio_bus.c	FUNCTION_16	CALL_4
0x40004a5	            0x85ed	                           test ebp, ebp	       341	mdio_bus.c	FUNCTION_16	IF_2
0x40004a7	            0x740a	                            je 0x40004b3	       341	mdio_bus.c	FUNCTION_16	IF_2
0x40004a9	          0x4889df	                            mov rdi, rbx	       342	mdio_bus.c	FUNCTION_16	CALL_5
0x40004ac	      0xe800000000	                          call 0x40004b1	       342	mdio_bus.c	FUNCTION_16	CALL_5
0x40004b1	            0x89e8	                            mov eax, ebp	       342	mdio_bus.c	FUNCTION_16	CALL_5
0x40004b3	              0x5b	                                 pop rbx	       345	mdio_bus.c	FUNCTION_16
0x40004b4	              0x5d	                                 pop rbp	       345	mdio_bus.c	FUNCTION_16
0x40004b5	              0xc3	                                     ret	       345	mdio_bus.c	FUNCTION_16
mdio_bus_restore	DO,0:ELSE,0:FOR,0:functions,0:SWITCH,0:WHILE,0:IF,1:CALL,2	9
0x4000120	    0x488b87d00200	           mov rax, qword [rdi + 0x2d0] 	       745	mdio_bus.c	FUNCTION_31	IF_1
0x4000127	          0x4885c0	                           test rax, rax	       745	mdio_bus.c	FUNCTION_31	IF_1
0x400012a	            0x740e	                            je 0x400013a	       745	mdio_bus.c	FUNCTION_31	IF_1
0x400012c	        0x488b4038	            mov rax, qword [rax + 0x38] 	       745	mdio_bus.c	FUNCTION_31	IF_1
0x4000130	          0x4885c0	                           test rax, rax	       745	mdio_bus.c	FUNCTION_31	IF_1
0x4000133	            0x7405	                            je 0x400013a	       745	mdio_bus.c	FUNCTION_31	IF_1
0x4000135	      0xe900000000	                           jmp 0x400013a	       746	mdio_bus.c	FUNCTION_31	CALL_2
0x400013a	            0x31c0	                            xor eax, eax	       749	mdio_bus.c	FUNCTION_31
0x400013c	              0xc3	                                     ret	       749	mdio_bus.c	FUNCTION_31
