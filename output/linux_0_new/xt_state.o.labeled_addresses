state_mt_destroy	ELSE,0:functions,0:FOR,0:IF,0:DO,0:SWITCH,0:WHILE,0:CALL,1	3
0x4000090	         0xfb67718	           movzx esi, byte [rdi + 0x18] 	        54	xt_state.c	FUNCTION_3	CALL_1
0x4000094	          0x488b3f	                    mov rdi, qword [rdi]	        54	xt_state.c	FUNCTION_3	CALL_1
0x4000097	      0xe900000000	                           jmp 0x400009c	        54	xt_state.c	FUNCTION_3	CALL_1
state_mt_exit	ELSE,0:functions,0:FOR,0:IF,0:DO,0:SWITCH,0:WHILE,0:CALL,1	5
0x4000040	        0x488b4770	            mov rax, qword [rdi + 0x70] 	       148	nf_conntrack.h	FUNCTION_10
0x4000044	        0x488b7608	                mov rsi, qword [rsi + 8]	        26	xt_state.c	FUNCTION_1
0x4000048	            0x89c1	                            mov ecx, eax	       148	nf_conntrack.h	FUNCTION_10
0x400004a	              0x83	                                 invalid	       148	nf_conntrack.h	FUNCTION_10
0x400004b	              0xe1	                                 invalid	       148	nf_conntrack.h	FUNCTION_10
state_mt	ELSE,2:functions,0:FOR,0:IF,2:DO,0:SWITCH,0:WHILE,0:CALL,2	25
0x4000040	        0x488b4770	            mov rax, qword [rdi + 0x70] 	       148	nf_conntrack.h	FUNCTION_10
0x4000044	        0x488b7608	                mov rsi, qword [rsi + 8]	        26	xt_state.c	FUNCTION_1
0x4000048	            0x89c1	                            mov ecx, eax	       148	nf_conntrack.h	FUNCTION_10
0x400004a	          0x83e107	                              and ecx, 7	       148	nf_conntrack.h	FUNCTION_10
0x400004d	    0x48a9f8ffffff	            test rax, 0xfffffffffffffff8	        31	xt_state.c	FUNCTION_1	IF_1
0x4000053	            0x7420	                            je 0x4000075	        31	xt_state.c	FUNCTION_1	IF_1
0x4000055	            0x89c8	                            mov eax, ecx	        32	xt_state.c	FUNCTION_1	CALL_2
0x4000057	      0xbaabaaaaaa	                     mov edx, 0xaaaaaaab	        32	xt_state.c	FUNCTION_1	CALL_2
0x400005c	            0xf7e2	                                 mul edx	        32	xt_state.c	FUNCTION_1	CALL_2
0x400005e	            0xd1ea	                              shr edx, 1	        32	xt_state.c	FUNCTION_1	CALL_2
0x4000060	          0x8d0452	                  lea eax, [rdx + rdx*2]	        32	xt_state.c	FUNCTION_1	CALL_2
0x4000063	            0x29c1	                            sub ecx, eax	        32	xt_state.c	FUNCTION_1	CALL_2
0x4000065	      0xb801000000	                              mov eax, 1	        32	xt_state.c	FUNCTION_1	CALL_2
0x400006a	          0x83c101	                              add ecx, 1	        32	xt_state.c	FUNCTION_1	CALL_2
0x400006d	            0xd3e0	                             shl eax, cl	        32	xt_state.c	FUNCTION_1	CALL_2
0x400006f	            0x8506	                   test dword [rsi], eax	        38	xt_state.c	FUNCTION_1
0x4000071	           0xf95c0	                                setne al	        38	xt_state.c	FUNCTION_1
0x4000074	              0xc3	                                     ret	        39	xt_state.c	FUNCTION_1
0x4000075	          0x83f907	                              cmp ecx, 7	        36	xt_state.c	FUNCTION_1	ELSE_2
0x4000078	      0xba01000000	                              mov edx, 1	        36	xt_state.c	FUNCTION_1	ELSE_2
0x400007d	      0xb840000000	                           mov eax, 0x40	        36	xt_state.c	FUNCTION_1	ELSE_2
0x4000082	           0xf45c2	                         cmovne eax, edx	        36	xt_state.c	FUNCTION_1	ELSE_2
0x4000085	            0x8506	                   test dword [rsi], eax	        38	xt_state.c	FUNCTION_1
0x4000087	           0xf95c0	                                setne al	        38	xt_state.c	FUNCTION_1
0x400008a	              0xc3	                                     ret	        39	xt_state.c	FUNCTION_1
state_mt_init	ELSE,0:functions,0:FOR,0:IF,0:DO,0:SWITCH,0:WHILE,0:CALL,1	5
0x4000040	        0x488b4770	            mov rax, qword [rdi + 0x70] 	       148	nf_conntrack.h	FUNCTION_10
0x4000044	        0x488b7608	                mov rsi, qword [rsi + 8]	        26	xt_state.c	FUNCTION_1
0x4000048	            0x89c1	                            mov ecx, eax	       148	nf_conntrack.h	FUNCTION_10
0x400004a	              0x83	                                 invalid	       148	nf_conntrack.h	FUNCTION_10
0x400004b	              0xe1	                                 invalid	       148	nf_conntrack.h	FUNCTION_10
