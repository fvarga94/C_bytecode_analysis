acpi_hw_enable_runtime_gpe_block	CALL,2:DO,0:WHILE,0:FOR,1:SWITCH,0:IF,2:functions,0:ELSE,0	28
0x4000040	              0x55	                                push rbp	       373	hwgpe.c	FUNCTION_8
0x4000041	          0x4889f5	                            mov rbp, rsi	       373	hwgpe.c	FUNCTION_8
0x4000044	              0x53	                                push rbx	       373	hwgpe.c	FUNCTION_8
0x4000045	            0x31db	                            xor ebx, ebx	       383	hwgpe.c	FUNCTION_8	FOR_1
0x4000047	          0x3b5d38	            cmp ebx, dword [rbp + 0x38] 	       383	hwgpe.c	FUNCTION_8	FOR_1
0x400004a	            0x7334	                           jae 0x4000080	       383	hwgpe.c	FUNCTION_8	FOR_1
0x400004c	            0x89de	                            mov esi, ebx	       384	hwgpe.c	FUNCTION_8	FOR_1
0x400004e	        0x486bf61e	                     imul rsi, rsi, 0x1e	       384	hwgpe.c	FUNCTION_8	FOR_1
0x4000052	        0x48037520	             add rsi, qword [rbp + 0x20]	       384	hwgpe.c	FUNCTION_8	FOR_1
0x4000056	          0x8a461b	               mov al, byte [rsi + 0x1b]	       385	hwgpe.c	FUNCTION_8	FOR_1	IF_1
0x4000059	            0x84c0	                             test al, al	       385	hwgpe.c	FUNCTION_8	FOR_1	IF_1
0x400005b	            0x7504	                           jne 0x4000061	       385	hwgpe.c	FUNCTION_8	FOR_1	IF_1
0x400005d	            0xffc3	                                 inc ebx	       383	hwgpe.c	FUNCTION_8	FOR_1
0x400005f	            0xebe6	                           jmp 0x4000047	       383	hwgpe.c	FUNCTION_8	FOR_1
0x4000061	        0x408a7e1c	              mov dil, byte [rsi + 0x1c]	       391	hwgpe.c	FUNCTION_8	FOR_1
0x4000065	        0x4883c60c	                            add rsi, 0xc	       277	hwgpe.c	FUNCTION_5	CALL_1
0x4000069	            0xf7d7	                                 not edi	       391	hwgpe.c	FUNCTION_8	FOR_1
0x400006b	            0x21c7	                            and edi, eax	       391	hwgpe.c	FUNCTION_8	FOR_1
0x400006d	        0x40887e11	              mov byte [rsi + 0x11], dil	       275	hwgpe.c	FUNCTION_5
0x4000071	        0x400fb6ff	                          movzx edi, dil	       277	hwgpe.c	FUNCTION_5	CALL_1
0x4000075	      0xe800000000	                          call 0x400007a	       277	hwgpe.c	FUNCTION_5	CALL_1
0x400007a	            0x85c0	                           test eax, eax	       395	hwgpe.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x400007c	            0x74df	                            je 0x400005d	       395	hwgpe.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x400007e	            0xeb02	                           jmp 0x4000082	       395	hwgpe.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x4000080	            0x31c0	                            xor eax, eax	       400	hwgpe.c	FUNCTION_8
0x4000082	              0x5b	                                 pop rbx	       401	hwgpe.c	FUNCTION_8
0x4000083	              0x5d	                                 pop rbp	       401	hwgpe.c	FUNCTION_8
0x4000084	              0xc3	                                     ret	       401	hwgpe.c	FUNCTION_8
acpi_hw_clear_gpe_block	CALL,2:DO,0:WHILE,0:FOR,1:SWITCH,0:IF,1:functions,0:ELSE,0	19
0x40002b8	              0x55	                                push rbp	       334	hwgpe.c	FUNCTION_7
0x40002b9	          0x4889f5	                            mov rbp, rsi	       334	hwgpe.c	FUNCTION_7
0x40002bc	              0x53	                                push rbx	       334	hwgpe.c	FUNCTION_7
0x40002bd	            0x31db	                            xor ebx, ebx	       340	hwgpe.c	FUNCTION_7	FOR_1
0x40002bf	          0x3b5d38	            cmp ebx, dword [rbp + 0x38] 	       340	hwgpe.c	FUNCTION_7	FOR_1
0x40002c2	            0x731c	                           jae 0x40002e0	       340	hwgpe.c	FUNCTION_7	FOR_1
0x40002c4	            0x89de	                            mov esi, ebx	       345	hwgpe.c	FUNCTION_7	FOR_1	CALL_1
0x40002c6	      0xbfff000000	                           mov edi, 0xff	       344	hwgpe.c	FUNCTION_7	FOR_1
0x40002cb	        0x486bf61e	                     imul rsi, rsi, 0x1e	       345	hwgpe.c	FUNCTION_7	FOR_1	CALL_1
0x40002cf	        0x48037520	             add rsi, qword [rbp + 0x20]	       345	hwgpe.c	FUNCTION_7	FOR_1	CALL_1
0x40002d3	      0xe800000000	                          call 0x40002d8	       344	hwgpe.c	FUNCTION_7	FOR_1
0x40002d8	            0x85c0	                           test eax, eax	       347	hwgpe.c	FUNCTION_7	FOR_1	IF_1	CALL_2
0x40002da	            0x7506	                           jne 0x40002e2	       347	hwgpe.c	FUNCTION_7	FOR_1	IF_1	CALL_2
0x40002dc	            0xffc3	                                 inc ebx	       340	hwgpe.c	FUNCTION_7	FOR_1
0x40002de	            0xebdf	                           jmp 0x40002bf	       340	hwgpe.c	FUNCTION_7	FOR_1
0x40002e0	            0x31c0	                            xor eax, eax	       352	hwgpe.c	FUNCTION_7
0x40002e2	              0x5b	                                 pop rbx	       353	hwgpe.c	FUNCTION_7
0x40002e3	              0x5d	                                 pop rbp	       353	hwgpe.c	FUNCTION_7
0x40002e4	              0xc3	                                     ret	       353	hwgpe.c	FUNCTION_7
acpi_hw_get_gpe_register_bit	CALL,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:ELSE,0	6
0x40000eb	        0x488b4708	                mov rax, qword [rdi + 8]	        45	hwgpe.c	FUNCTION_1
0x40000ef	         0xfb64f11	           movzx ecx, byte [rdi + 0x11] 	        43	hwgpe.c	FUNCTION_1
0x40000f3	          0x2a4818	               sub cl, byte [rax + 0x18]	        43	hwgpe.c	FUNCTION_1
0x40000f6	      0xb801000000	                              mov eax, 1	        43	hwgpe.c	FUNCTION_1
0x40000fb	            0xd3e0	                             shl eax, cl	        43	hwgpe.c	FUNCTION_1
0x40000fd	              0xc3	                                     ret	        46	hwgpe.c	FUNCTION_1
acpi_hw_enable_all_wakeup_gpes	CALL,3:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:ELSE,0	3
0x4000301	            0x31f6	                            xor esi, esi	       509	hwgpe.c	FUNCTION_12	CALL_2
0x4000303	    0x48c7c7000000	                              mov rdi, 0	       509	hwgpe.c	FUNCTION_12	CALL_2
0x400030a	      0xe900000000	                   jmp section_end..text	       509	hwgpe.c	FUNCTION_12	CALL_2
acpi_hw_clear_gpe	CALL,3:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,1:functions,0:ELSE,0	8
0x40001cc	        0x488b7708	                mov rsi, qword [rdi + 8]	       150	hwgpe.c	FUNCTION_3
0x40001d0	          0x4885f6	                           test rsi, rsi	       151	hwgpe.c	FUNCTION_3	IF_1
0x40001d3	            0x740c	                            je 0x40001e1	       151	hwgpe.c	FUNCTION_3	IF_1
0x40001d5	      0xe800000000	                          call 0x40001da	       159	hwgpe.c	FUNCTION_3	CALL_2
0x40001da	            0x89c7	                            mov edi, eax	       161	hwgpe.c	FUNCTION_3
0x40001dc	      0xe900000000	                           jmp 0x40001e1	       161	hwgpe.c	FUNCTION_3
0x40001e1	      0xb806000000	                              mov eax, 6	       164	hwgpe.c	FUNCTION_3
0x40001e6	              0xc3	                                     ret	       164	hwgpe.c	FUNCTION_3
acpi_hw_enable_wakeup_gpe_block	CALL,2:DO,0:WHILE,0:FOR,1:SWITCH,0:IF,1:functions,0:ELSE,0	21
0x40000b7	              0x55	                                push rbp	       421	hwgpe.c	FUNCTION_9
0x40000b8	          0x4889f5	                            mov rbp, rsi	       421	hwgpe.c	FUNCTION_9
0x40000bb	              0x53	                                push rbx	       421	hwgpe.c	FUNCTION_9
0x40000bc	            0x31db	                            xor ebx, ebx	       428	hwgpe.c	FUNCTION_9	FOR_1
0x40000be	          0x3b5d38	            cmp ebx, dword [rbp + 0x38] 	       428	hwgpe.c	FUNCTION_9	FOR_1
0x40000c1	            0x7323	                           jae 0x40000e6	       428	hwgpe.c	FUNCTION_9	FOR_1
0x40000c3	            0x89de	                            mov esi, ebx	       429	hwgpe.c	FUNCTION_9	FOR_1
0x40000c5	        0x486bf61e	                     imul rsi, rsi, 0x1e	       429	hwgpe.c	FUNCTION_9	FOR_1
0x40000c9	        0x48037520	             add rsi, qword [rbp + 0x20]	       429	hwgpe.c	FUNCTION_9	FOR_1
0x40000cd	         0xfb67e1a	           movzx edi, byte [rsi + 0x1a] 	       437	hwgpe.c	FUNCTION_9	FOR_1	CALL_1
0x40000d1	        0x4883c60c	                            add rsi, 0xc	       277	hwgpe.c	FUNCTION_5	CALL_1
0x40000d5	        0x40887e11	              mov byte [rsi + 0x11], dil	       275	hwgpe.c	FUNCTION_5
0x40000d9	      0xe800000000	                          call 0x40000de	       277	hwgpe.c	FUNCTION_5	CALL_1
0x40000de	            0x85c0	                           test eax, eax	       439	hwgpe.c	FUNCTION_9	FOR_1	IF_1	CALL_2
0x40000e0	            0x7506	                           jne 0x40000e8	       439	hwgpe.c	FUNCTION_9	FOR_1	IF_1	CALL_2
0x40000e2	            0xffc3	                                 inc ebx	       428	hwgpe.c	FUNCTION_9	FOR_1
0x40000e4	            0xebd8	                           jmp 0x40000be	       428	hwgpe.c	FUNCTION_9	FOR_1
0x40000e6	            0x31c0	                            xor eax, eax	       444	hwgpe.c	FUNCTION_9
0x40000e8	              0x5b	                                 pop rbx	       445	hwgpe.c	FUNCTION_9
0x40000e9	              0x5d	                                 pop rbp	       445	hwgpe.c	FUNCTION_9
0x40000ea	              0xc3	                                     ret	       445	hwgpe.c	FUNCTION_9
acpi_hw_get_gpe_status	CALL,7:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,9:functions,0:ELSE,0	65
0x40001e7	            0x4155	                                push r13	       182	hwgpe.c	FUNCTION_4
0x40001e9	            0x4154	                                push r12	       182	hwgpe.c	FUNCTION_4
0x40001eb	              0x55	                                push rbp	       182	hwgpe.c	FUNCTION_4
0x40001ec	              0x53	                                push rbx	       182	hwgpe.c	FUNCTION_4
0x40001ed	        0x4883ec10	                           sub rsp, 0x10	       182	hwgpe.c	FUNCTION_4
0x40001f1	    0x65488b042528	                mov rax, qword gs:[0x28]	       182	hwgpe.c	FUNCTION_4
0x40001fa	      0x4889442408	                mov qword [rsp + 8], rax	       182	hwgpe.c	FUNCTION_4
0x40001ff	            0x31c0	                            xor eax, eax	       182	hwgpe.c	FUNCTION_4
0x4000201	          0x4885f6	                           test rsi, rsi	       191	hwgpe.c	FUNCTION_4	IF_1
0x4000204	      0xb801100000	                         mov eax, 0x1001	       192	hwgpe.c	FUNCTION_4	IF_1
0x4000209	     0xf8489000000	                            je 0x4000298	       191	hwgpe.c	FUNCTION_4	IF_1
0x400020f	          0x8a4710	               mov al, byte [rdi + 0x10]	       197	hwgpe.c	FUNCTION_4	IF_2	CALL_2
0x4000212	        0x4c8b6708	                mov r12, qword [rdi + 8]	       204	hwgpe.c	FUNCTION_4
0x4000216	          0x4989f5	                            mov r13, rsi	       204	hwgpe.c	FUNCTION_4
0x4000219	          0x83e007	                              and eax, 7	       197	hwgpe.c	FUNCTION_4	IF_2	CALL_2
0x400021c	            0x3c01	                               cmp al, 1	       199	hwgpe.c	FUNCTION_4	IF_2
0x400021e	            0x19db	                            sbb ebx, ebx	       199	hwgpe.c	FUNCTION_4	IF_2
0x4000220	      0xe800000000	                          call 0x4000225	       208	hwgpe.c	FUNCTION_4	CALL_3
0x4000225	    0x410fb654241b	           movzx edx, byte [r12 + 0x1b] 	       212	hwgpe.c	FUNCTION_4	IF_3
0x400022b	            0xf7d3	                                 not ebx	       199	hwgpe.c	FUNCTION_4	IF_2
0x400022d	            0x89c5	                            mov ebp, eax	       208	hwgpe.c	FUNCTION_4	CALL_3
0x400022f	          0x83e310	                           and ebx, 0x10	       199	hwgpe.c	FUNCTION_4	IF_2
0x4000232	      0x498d74240c	                    lea rsi, [r12 + 0xc]	       230	hwgpe.c	FUNCTION_4	CALL_4
0x4000237	          0x4889e7	                            mov rdi, rsp	       230	hwgpe.c	FUNCTION_4	CALL_4
0x400023a	            0x89d8	                            mov eax, ebx	       213	hwgpe.c	FUNCTION_4	IF_3
0x400023c	          0x83c801	                               or eax, 1	       213	hwgpe.c	FUNCTION_4	IF_3
0x400023f	            0x85ea	                           test edx, ebp	       213	hwgpe.c	FUNCTION_4	IF_3
0x4000241	    0x410fb654241c	           movzx edx, byte [r12 + 0x1c] 	       218	hwgpe.c	FUNCTION_4	IF_4
0x4000247	           0xf45d8	                         cmovne ebx, eax	       213	hwgpe.c	FUNCTION_4	IF_3
0x400024a	            0x89d8	                            mov eax, ebx	       219	hwgpe.c	FUNCTION_4	IF_4
0x400024c	          0x83c820	                            or eax, 0x20	       219	hwgpe.c	FUNCTION_4	IF_4
0x400024f	            0x85ea	                           test edx, ebp	       219	hwgpe.c	FUNCTION_4	IF_4
0x4000251	    0x410fb654241a	           movzx edx, byte [r12 + 0x1a] 	       224	hwgpe.c	FUNCTION_4	IF_5
0x4000257	           0xf45d8	                         cmovne ebx, eax	       219	hwgpe.c	FUNCTION_4	IF_4
0x400025a	            0x89d8	                            mov eax, ebx	       225	hwgpe.c	FUNCTION_4	IF_5
0x400025c	          0x83c802	                               or eax, 2	       225	hwgpe.c	FUNCTION_4	IF_5
0x400025f	            0x85ea	                           test edx, ebp	       225	hwgpe.c	FUNCTION_4	IF_5
0x4000261	           0xf45d8	                         cmovne ebx, eax	       225	hwgpe.c	FUNCTION_4	IF_5
0x4000264	      0xe800000000	                          call 0x4000269	       230	hwgpe.c	FUNCTION_4	CALL_4
0x4000269	            0x85c0	                           test eax, eax	       231	hwgpe.c	FUNCTION_4	IF_6	CALL_5
0x400026b	            0x752b	                           jne 0x4000298	       231	hwgpe.c	FUNCTION_4	IF_6	CALL_5
0x400026d	            0x89d8	                            mov eax, ebx	       236	hwgpe.c	FUNCTION_4	IF_7
0x400026f	          0x4c89e6	                            mov rsi, r12	       241	hwgpe.c	FUNCTION_4	CALL_6
0x4000272	          0x4889e7	                            mov rdi, rsp	       241	hwgpe.c	FUNCTION_4	CALL_6
0x4000275	          0x83c808	                               or eax, 8	       236	hwgpe.c	FUNCTION_4	IF_7
0x4000278	        0x48852c24	                   test qword [rsp], rbp	       236	hwgpe.c	FUNCTION_4	IF_7
0x400027c	           0xf45d8	                         cmovne ebx, eax	       236	hwgpe.c	FUNCTION_4	IF_7
0x400027f	      0xe800000000	                          call 0x4000284	       241	hwgpe.c	FUNCTION_4	CALL_6
0x4000284	            0x85c0	                           test eax, eax	       242	hwgpe.c	FUNCTION_4	IF_8	CALL_7
0x4000286	            0x7510	                           jne 0x4000298	       242	hwgpe.c	FUNCTION_4	IF_8	CALL_7
0x4000288	            0x89da	                            mov edx, ebx	       247	hwgpe.c	FUNCTION_4	IF_9
0x400028a	          0x83ca04	                               or edx, 4	       247	hwgpe.c	FUNCTION_4	IF_9
0x400028d	        0x48852c24	                   test qword [rsp], rbp	       247	hwgpe.c	FUNCTION_4	IF_9
0x4000291	           0xf45da	                         cmovne ebx, edx	       247	hwgpe.c	FUNCTION_4	IF_9
0x4000294	        0x41895d00	                    mov dword [r13], ebx	       252	hwgpe.c	FUNCTION_4
0x4000298	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       254	hwgpe.c	FUNCTION_4
0x400029d	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       254	hwgpe.c	FUNCTION_4
0x40002a6	            0x7405	                            je 0x40002ad	       254	hwgpe.c	FUNCTION_4
0x40002a8	      0xe800000000	                          call 0x40002ad	       254	hwgpe.c	FUNCTION_4
0x40002ad	        0x4883c410	                           add rsp, 0x10	       254	hwgpe.c	FUNCTION_4
0x40002b1	              0x5b	                                 pop rbx	       254	hwgpe.c	FUNCTION_4
0x40002b2	              0x5d	                                 pop rbp	       254	hwgpe.c	FUNCTION_4
0x40002b3	            0x415c	                                 pop r12	       254	hwgpe.c	FUNCTION_4
0x40002b5	            0x415d	                                 pop r13	       254	hwgpe.c	FUNCTION_4
0x40002b7	              0xc3	                                     ret	       254	hwgpe.c	FUNCTION_4
acpi_hw_disable_gpe_block	CALL,2:DO,0:WHILE,0:FOR,1:SWITCH,0:IF,1:functions,0:ELSE,0	21
0x4000085	              0x55	                                push rbp	       297	hwgpe.c	FUNCTION_6
0x4000086	          0x4889f5	                            mov rbp, rsi	       297	hwgpe.c	FUNCTION_6
0x4000089	              0x53	                                push rbx	       297	hwgpe.c	FUNCTION_6
0x400008a	            0x31db	                            xor ebx, ebx	       303	hwgpe.c	FUNCTION_6	FOR_1
0x400008c	          0x3b5d38	            cmp ebx, dword [rbp + 0x38] 	       303	hwgpe.c	FUNCTION_6	FOR_1
0x400008f	            0x7321	                           jae 0x40000b2	       303	hwgpe.c	FUNCTION_6	FOR_1
0x4000091	            0x89de	                            mov esi, ebx	       308	hwgpe.c	FUNCTION_6	FOR_1	CALL_1
0x4000093	            0x31ff	                            xor edi, edi	       277	hwgpe.c	FUNCTION_5	CALL_1
0x4000095	        0x486bf61e	                     imul rsi, rsi, 0x1e	       308	hwgpe.c	FUNCTION_6	FOR_1	CALL_1
0x4000099	        0x48037520	             add rsi, qword [rbp + 0x20]	       308	hwgpe.c	FUNCTION_6	FOR_1	CALL_1
0x400009d	        0xc6461d00	                mov byte [rsi + 0x1d], 0	       275	hwgpe.c	FUNCTION_5
0x40000a1	        0x4883c60c	                            add rsi, 0xc	       277	hwgpe.c	FUNCTION_5	CALL_1
0x40000a5	      0xe800000000	                          call 0x40000aa	       277	hwgpe.c	FUNCTION_5	CALL_1
0x40000aa	            0x85c0	                           test eax, eax	       310	hwgpe.c	FUNCTION_6	FOR_1	IF_1	CALL_2
0x40000ac	            0x7506	                           jne 0x40000b4	       310	hwgpe.c	FUNCTION_6	FOR_1	IF_1	CALL_2
0x40000ae	            0xffc3	                                 inc ebx	       303	hwgpe.c	FUNCTION_6	FOR_1
0x40000b0	            0xebda	                           jmp 0x400008c	       303	hwgpe.c	FUNCTION_6	FOR_1
0x40000b2	            0x31c0	                            xor eax, eax	       315	hwgpe.c	FUNCTION_6
0x40000b4	              0x5b	                                 pop rbx	       316	hwgpe.c	FUNCTION_6
0x40000b5	              0x5d	                                 pop rbp	       316	hwgpe.c	FUNCTION_6
0x40000b6	              0xc3	                                     ret	       316	hwgpe.c	FUNCTION_6
acpi_hw_enable_all_runtime_gpes	CALL,3:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:ELSE,0	3
0x40002f3	            0x31f6	                            xor esi, esi	       487	hwgpe.c	FUNCTION_11	CALL_2
0x40002f5	    0x48c7c7000000	                              mov rdi, 0	       487	hwgpe.c	FUNCTION_11	CALL_2
0x40002fc	      0xe900000000	  jmp sym.acpi_hw_enable_all_wakeup_gpes	       487	hwgpe.c	FUNCTION_11	CALL_2
acpi_hw_low_set_gpe	CALL,8:DO,0:WHILE,0:FOR,0:SWITCH,1:IF,4:functions,0:ELSE,0	62
0x40000fe	            0x4155	                                push r13	        65	hwgpe.c	FUNCTION_2
0x4000100	            0x4154	                                push r12	        65	hwgpe.c	FUNCTION_2
0x4000102	              0x55	                                push rbp	        65	hwgpe.c	FUNCTION_2
0x4000103	              0x53	                                push rbx	        65	hwgpe.c	FUNCTION_2
0x4000104	        0x4883ec10	                           sub rsp, 0x10	        65	hwgpe.c	FUNCTION_2
0x4000108	        0x488b5f08	                mov rbx, qword [rdi + 8]	        75	hwgpe.c	FUNCTION_2
0x400010c	    0x65488b042528	                mov rax, qword gs:[0x28]	        65	hwgpe.c	FUNCTION_2
0x4000115	      0x4889442408	                mov qword [rsp + 8], rax	        65	hwgpe.c	FUNCTION_2
0x400011a	            0x31c0	                            xor eax, eax	        65	hwgpe.c	FUNCTION_2
0x400011c	      0xb806000000	                              mov eax, 6	        77	hwgpe.c	FUNCTION_2	IF_1
0x4000121	          0x4885db	                           test rbx, rbx	        76	hwgpe.c	FUNCTION_2	IF_1
0x4000124	     0xf8482000000	                            je 0x40001ac	        76	hwgpe.c	FUNCTION_2	IF_1
0x400012a	        0x4c8d630c	                    lea r12, [rbx + 0xc]	        82	hwgpe.c	FUNCTION_2	CALL_2
0x400012e	          0x4989fd	                            mov r13, rdi	        82	hwgpe.c	FUNCTION_2	CALL_2
0x4000131	            0x89f5	                            mov ebp, esi	        82	hwgpe.c	FUNCTION_2	CALL_2
0x4000133	          0x4889e7	                            mov rdi, rsp	        82	hwgpe.c	FUNCTION_2	CALL_2
0x4000136	          0x4c89e6	                            mov rsi, r12	        82	hwgpe.c	FUNCTION_2	CALL_2
0x4000139	      0xe800000000	                          call 0x400013e	        82	hwgpe.c	FUNCTION_2	CALL_2
0x400013e	            0x85c0	                           test eax, eax	        83	hwgpe.c	FUNCTION_2	IF_2	CALL_3
0x4000140	            0x756a	                           jne 0x40001ac	        83	hwgpe.c	FUNCTION_2	IF_2	CALL_3
0x4000142	          0x4c89ef	                            mov rdi, r13	        89	hwgpe.c	FUNCTION_2	CALL_4
0x4000145	      0xe800000000	                          call 0x400014a	        89	hwgpe.c	FUNCTION_2	CALL_4
0x400014a	          0x83fd01	                              cmp ebp, 1	        90	hwgpe.c	FUNCTION_2	SWITCH_1
0x400014d	            0x89c2	                            mov edx, eax	        89	hwgpe.c	FUNCTION_2	CALL_4
0x400014f	            0x741c	                            je 0x400016d	        90	hwgpe.c	FUNCTION_2	SWITCH_1
0x4000151	            0x7212	                            jb 0x4000165	        90	hwgpe.c	FUNCTION_2	SWITCH_1
0x4000153	          0x83fd02	                              cmp ebp, 2	        90	hwgpe.c	FUNCTION_2	SWITCH_1
0x4000156	            0x751d	                           jne 0x4000175	        90	hwgpe.c	FUNCTION_2	SWITCH_1
0x4000158	         0xfb64b1d	           movzx ecx, byte [rbx + 0x1d] 	        95	hwgpe.c	FUNCTION_2	SWITCH_1	IF_3
0x400015c	      0xb801100000	                         mov eax, 0x1001	        96	hwgpe.c	FUNCTION_2	SWITCH_1	IF_3
0x4000161	            0x85d1	                           test ecx, edx	        95	hwgpe.c	FUNCTION_2	SWITCH_1	IF_3
0x4000163	            0x7447	                            je 0x40001ac	        95	hwgpe.c	FUNCTION_2	SWITCH_1	IF_3
0x4000165	            0x89d0	                            mov eax, edx	       103	hwgpe.c	FUNCTION_2	SWITCH_1	CALL_5
0x4000167	        0x48090424	                     or qword [rsp], rax	       103	hwgpe.c	FUNCTION_2	SWITCH_1	CALL_5
0x400016b	            0xeb29	                           jmp 0x4000196	       104	hwgpe.c	FUNCTION_2	SWITCH_1
0x400016d	            0xf7d0	                                 not eax	       108	hwgpe.c	FUNCTION_2	SWITCH_1	CALL_6
0x400016f	        0x48210424	                    and qword [rsp], rax	       108	hwgpe.c	FUNCTION_2	SWITCH_1	CALL_6
0x4000173	            0xeb21	                           jmp 0x4000196	       109	hwgpe.c	FUNCTION_2	SWITCH_1
0x4000175	            0x89e9	                            mov ecx, ebp	       113	hwgpe.c	FUNCTION_2	SWITCH_1	CALL_7
0x4000177	    0x48c7c2000000	                              mov rdx, 0	       113	hwgpe.c	FUNCTION_2	SWITCH_1	CALL_7
0x400017e	      0xbe71000000	                           mov esi, 0x71	       113	hwgpe.c	FUNCTION_2	SWITCH_1	CALL_7
0x4000183	    0x48c7c7000000	                              mov rdi, 0	       113	hwgpe.c	FUNCTION_2	SWITCH_1	CALL_7
0x400018a	      0xe800000000	                          call 0x400018f	       113	hwgpe.c	FUNCTION_2	SWITCH_1	CALL_7
0x400018f	      0xb801100000	                         mov eax, 0x1001	       114	hwgpe.c	FUNCTION_2	SWITCH_1
0x4000194	            0xeb16	                           jmp 0x40001ac	       114	hwgpe.c	FUNCTION_2	SWITCH_1
0x4000196	         0xfb64b1c	           movzx ecx, byte [rbx + 0x1c] 	       117	hwgpe.c	FUNCTION_2	IF_4
0x400019a	            0x31c0	                            xor eax, eax	       117	hwgpe.c	FUNCTION_2	IF_4
0x400019c	            0x85d1	                           test ecx, edx	       117	hwgpe.c	FUNCTION_2	IF_4
0x400019e	            0x750c	                           jne 0x40001ac	       117	hwgpe.c	FUNCTION_2	IF_4
0x40001a0	        0x488b3c24	                    mov rdi, qword [rsp]	       121	hwgpe.c	FUNCTION_2	IF_4
0x40001a4	          0x4c89e6	                            mov rsi, r12	       121	hwgpe.c	FUNCTION_2	IF_4
0x40001a7	      0xe800000000	                          call 0x40001ac	       121	hwgpe.c	FUNCTION_2	IF_4
0x40001ac	      0x488b742408	                mov rsi, qword [rsp + 8]	       126	hwgpe.c	FUNCTION_2
0x40001b1	    0x654833342528	                xor rsi, qword gs:[0x28]	       126	hwgpe.c	FUNCTION_2
0x40001ba	            0x7405	                            je 0x40001c1	       126	hwgpe.c	FUNCTION_2
0x40001bc	      0xe800000000	                          call 0x40001c1	       126	hwgpe.c	FUNCTION_2
0x40001c1	        0x4883c410	                           add rsp, 0x10	       126	hwgpe.c	FUNCTION_2
0x40001c5	              0x5b	                                 pop rbx	       126	hwgpe.c	FUNCTION_2
0x40001c6	              0x5d	                                 pop rbp	       126	hwgpe.c	FUNCTION_2
0x40001c7	            0x415c	                                 pop r12	       126	hwgpe.c	FUNCTION_2
0x40001c9	            0x415d	                                 pop r13	       126	hwgpe.c	FUNCTION_2
0x40001cb	              0xc3	                                     ret	       126	hwgpe.c	FUNCTION_2
acpi_hw_disable_all_gpes	CALL,3:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:ELSE,0	3
0x40002e5	            0x31f6	                            xor esi, esi	       465	hwgpe.c	FUNCTION_10	CALL_2
0x40002e7	    0x48c7c7000000	                              mov rdi, 0	       465	hwgpe.c	FUNCTION_10	CALL_2
0x40002ee	      0xe900000000	 jmp sym.acpi_hw_enable_all_runtime_gpes	       465	hwgpe.c	FUNCTION_10	CALL_2
