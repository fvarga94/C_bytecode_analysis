i965_hz_to_pwm	DO,0:WHILE,0:SWITCH,0:IF,1:functions,0:CALL,5:FOR,0:ELSE,1	19
0x4000390	          0x488b07	                    mov rax, qword [rdi]	      1410	intel_panel.c	FUNCTION_61	CALL_1
0x4000393	    0xf78064060000	       test dword [rax + 0x664], 0x6000 	      1413	intel_panel.c	FUNCTION_61	IF_1	CALL_2
0x400039d	            0x7518	                           jne 0x40003b7	      1413	intel_panel.c	FUNCTION_61	IF_1	CALL_2
0x400039f	    0x698014550000	   imul eax, dword [rax + 0x5514], 0x3e8	      1416	intel_panel.c	FUNCTION_61	CALL_4
0x40003a9	          0xc1e607	                              shl esi, 7	      1418	intel_panel.c	FUNCTION_61	CALL_5
0x40003ac	            0x89f2	                            mov edx, esi	      1418	intel_panel.c	FUNCTION_61	CALL_5
0x40003ae	            0xd1ea	                              shr edx, 1	      1418	intel_panel.c	FUNCTION_61	CALL_5
0x40003b0	             0x1d0	                            add eax, edx	      1418	intel_panel.c	FUNCTION_61	CALL_5
0x40003b2	            0x31d2	                            xor edx, edx	      1418	intel_panel.c	FUNCTION_61	CALL_5
0x40003b4	            0xf7f6	                                 div esi	      1418	intel_panel.c	FUNCTION_61	CALL_5
0x40003b6	              0xc3	                                     ret	      1419	intel_panel.c	FUNCTION_61
0x40003b7	    0x6980dc540000	   imul eax, dword [rax + 0x54dc], 0x3e8	      1414	intel_panel.c	FUNCTION_61	CALL_3
0x40003c1	          0xc1e607	                              shl esi, 7	      1418	intel_panel.c	FUNCTION_61	CALL_5
0x40003c4	            0x89f2	                            mov edx, esi	      1418	intel_panel.c	FUNCTION_61	CALL_5
0x40003c6	            0xd1ea	                              shr edx, 1	      1418	intel_panel.c	FUNCTION_61	CALL_5
0x40003c8	             0x1d0	                            add eax, edx	      1418	intel_panel.c	FUNCTION_61	CALL_5
0x40003ca	            0x31d2	                            xor edx, edx	      1418	intel_panel.c	FUNCTION_61	CALL_5
0x40003cc	            0xf7f6	                                 div esi	      1418	intel_panel.c	FUNCTION_61	CALL_5
0x40003ce	              0xc3	                                     ret	      1419	intel_panel.c	FUNCTION_61
pch_setup_backlight	DO,0:WHILE,0:SWITCH,0:IF,2:functions,0:CALL,9:FOR,0:ELSE,0	61
0x4001af0	            0x4154	                                push r12	      1541	intel_panel.c	FUNCTION_66
0x4001af2	              0x55	                                push rbp	      1541	intel_panel.c	FUNCTION_66
0x4001af3	      0xba01000000	                              mov edx, 1	      1546	intel_panel.c	FUNCTION_66	CALL_2
0x4001af8	              0x53	                                push rbx	      1541	intel_panel.c	FUNCTION_66
0x4001af9	          0x488b2f	                    mov rbp, qword [rdi]	      1542	intel_panel.c	FUNCTION_66	CALL_1
0x4001afc	          0x4889fb	                            mov rbx, rdi	      1541	intel_panel.c	FUNCTION_66
0x4001aff	      0xbe50820c00	                        mov esi, 0xc8250	      1546	intel_panel.c	FUNCTION_66	CALL_2
0x4001b04	          0x4889ef	                            mov rdi, rbp	      1546	intel_panel.c	FUNCTION_66	CALL_2
0x4001b07	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      1546	intel_panel.c	FUNCTION_66	CALL_2
0x4001b0e	      0xe800000000	                          call 0x4001b13	      1546	intel_panel.c	FUNCTION_66	CALL_2
0x4001b13	          0x4189c4	                           mov r12d, eax	      1546	intel_panel.c	FUNCTION_66	CALL_2
0x4001b16	          0xc1e81d	                           shr eax, 0x1d	      1547	intel_panel.c	FUNCTION_66
0x4001b19	      0xba01000000	                              mov edx, 1	      1549	intel_panel.c	FUNCTION_66	CALL_3
0x4001b1e	          0x83e001	                              and eax, 1	      1547	intel_panel.c	FUNCTION_66
0x4001b21	      0xbe54820c00	                        mov esi, 0xc8254	      1549	intel_panel.c	FUNCTION_66	CALL_3
0x4001b26	          0x4889ef	                            mov rdi, rbp	      1549	intel_panel.c	FUNCTION_66	CALL_3
0x4001b29	    0x888362040000	              mov byte [rbx + 0x462], al	      1547	intel_panel.c	FUNCTION_66
0x4001b2f	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      1549	intel_panel.c	FUNCTION_66	CALL_3
0x4001b36	      0xe800000000	                          call 0x4001b3b	      1549	intel_panel.c	FUNCTION_66	CALL_3
0x4001b3b	          0xc1e810	                           shr eax, 0x10	      1550	intel_panel.c	FUNCTION_66
0x4001b3e	            0x85c0	                           test eax, eax	      1552	intel_panel.c	FUNCTION_66	IF_1
0x4001b40	    0x89835c040000	            mov dword [rbx + 0x45c], eax	      1550	intel_panel.c	FUNCTION_66
0x4001b46	     0xf8481000000	                            je 0x4001bcd	      1552	intel_panel.c	FUNCTION_66	IF_1
0x4001b4c	          0x4889df	                            mov rdi, rbx	      1558	intel_panel.c	FUNCTION_66	CALL_5
0x4001b4f	      0xe86cedffff	          call sym.get_backlight_min_vbt	      1558	intel_panel.c	FUNCTION_66	CALL_5
0x4001b54	          0x488b3b	                    mov rdi, qword [rbx]	       492	intel_panel.c	FUNCTION_17	CALL_1
0x4001b57	      0xba01000000	                              mov edx, 1	       494	intel_panel.c	FUNCTION_17	CALL_2
0x4001b5c	    0x898358040000	            mov dword [rbx + 0x458], eax	      1558	intel_panel.c	FUNCTION_66	CALL_5
0x4001b62	      0xbe54820400	                        mov esi, 0x48254	       494	intel_panel.c	FUNCTION_17	CALL_2
0x4001b67	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	       494	intel_panel.c	FUNCTION_17	CALL_2
0x4001b6e	      0xe800000000	                          call 0x4001b73	       494	intel_panel.c	FUNCTION_17	CALL_2
0x4001b73	          0x4889df	                            mov rdi, rbx	      1561	intel_panel.c	FUNCTION_66	CALL_7
0x4001b76	           0xfb7f0	                           movzx esi, ax	      1561	intel_panel.c	FUNCTION_66	CALL_7
0x4001b79	      0xe8e2e9ffff	 call sym.intel_panel_compute_brightness	      1561	intel_panel.c	FUNCTION_66	CALL_7
0x4001b7e	    0x398358040000	           cmp dword [rbx + 0x458], eax 	      1562	intel_panel.c	FUNCTION_66	CALL_8
0x4001b84	    0x8b935c040000	           mov edx, dword [rbx + 0x45c] 	      1562	intel_panel.c	FUNCTION_66	CALL_8
0x4001b8a	      0xbe50820400	                        mov esi, 0x48250	      1565	intel_panel.c	FUNCTION_66	CALL_9
0x4001b8f	     0xf4383580400	         cmovae eax, dword [rbx + 0x458]	      1562	intel_panel.c	FUNCTION_66	CALL_8
0x4001b96	          0x4889ef	                            mov rdi, rbp	      1565	intel_panel.c	FUNCTION_66	CALL_9
0x4001b99	            0x39d0	                            cmp eax, edx	      1562	intel_panel.c	FUNCTION_66	CALL_8
0x4001b9b	           0xf47c2	                          cmova eax, edx	      1562	intel_panel.c	FUNCTION_66	CALL_8
0x4001b9e	      0xba01000000	                              mov edx, 1	      1565	intel_panel.c	FUNCTION_66	CALL_9
0x4001ba3	        0x41c1ec1f	                          shr r12d, 0x1f	      1566	intel_panel.c	FUNCTION_66
0x4001ba7	    0x898354040000	            mov dword [rbx + 0x454], eax	      1562	intel_panel.c	FUNCTION_66	CALL_8
0x4001bad	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      1565	intel_panel.c	FUNCTION_66	CALL_9
0x4001bb4	      0xe800000000	                          call 0x4001bb9	      1565	intel_panel.c	FUNCTION_66	CALL_9
0x4001bb9	          0xc1e81f	                           shr eax, 0x1f	      1566	intel_panel.c	FUNCTION_66
0x4001bbc	          0x4121c4	                           and r12d, eax	      1566	intel_panel.c	FUNCTION_66
0x4001bbf	            0x31c0	                            xor eax, eax	      1569	intel_panel.c	FUNCTION_66
0x4001bc1	    0x4488a3600400	            mov byte [rbx + 0x460], r12b	      1566	intel_panel.c	FUNCTION_66
0x4001bc8	              0x5b	                                 pop rbx	      1570	intel_panel.c	FUNCTION_66
0x4001bc9	              0x5d	                                 pop rbp	      1570	intel_panel.c	FUNCTION_66
0x4001bca	            0x415c	                                 pop r12	      1570	intel_panel.c	FUNCTION_66
0x4001bcc	              0xc3	                                     ret	      1570	intel_panel.c	FUNCTION_66
0x4001bcd	          0x4889df	                            mov rdi, rbx	      1553	intel_panel.c	FUNCTION_66	CALL_4
0x4001bd0	      0xe85bfdffff	          call sym.get_backlight_max_vbt	      1553	intel_panel.c	FUNCTION_66	CALL_4
0x4001bd5	            0x85c0	                           test eax, eax	      1555	intel_panel.c	FUNCTION_66	IF_2
0x4001bd7	    0x89835c040000	            mov dword [rbx + 0x45c], eax	      1553	intel_panel.c	FUNCTION_66	CALL_4
0x4001bdd	     0xf8569ffffff	                           jne 0x4001b4c	      1555	intel_panel.c	FUNCTION_66	IF_2
0x4001be3	      0xb8edffffff	                     mov eax, 0xffffffed	      1556	intel_panel.c	FUNCTION_66	IF_2
0x4001be8	            0xebde	                           jmp 0x4001bc8	      1556	intel_panel.c	FUNCTION_66	IF_2
i9xx_get_backlight	DO,0:WHILE,0:SWITCH,0:IF,2:functions,0:CALL,4:FOR,0:ELSE,0	38
0x4001780	            0x4154	                                push r12	       498	intel_panel.c	FUNCTION_18
0x4001782	              0x55	                                push rbp	       498	intel_panel.c	FUNCTION_18
0x4001783	          0x4989fc	                            mov r12, rdi	       498	intel_panel.c	FUNCTION_18
0x4001786	              0x53	                                push rbx	       498	intel_panel.c	FUNCTION_18
0x4001787	      0xba01000000	                              mov edx, 1	       503	intel_panel.c	FUNCTION_18	CALL_2
0x400178c	        0x4883ec10	                           sub rsp, 0x10	       498	intel_panel.c	FUNCTION_18
0x4001790	          0x488b2f	                    mov rbp, qword [rdi]	       499	intel_panel.c	FUNCTION_18	CALL_1
0x4001793	    0x65488b042528	                mov rax, qword gs:[0x28]	       498	intel_panel.c	FUNCTION_18
0x400179c	      0x4889442408	                mov qword [rsp + 8], rax	       498	intel_panel.c	FUNCTION_18
0x40017a1	            0x31c0	                            xor eax, eax	       498	intel_panel.c	FUNCTION_18
0x40017a3	    0x8b8d6c060000	           mov ecx, dword [rbp + 0x66c] 	       503	intel_panel.c	FUNCTION_18	CALL_2
0x40017a9	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	       503	intel_panel.c	FUNCTION_18	CALL_2
0x40017b0	          0x4889ef	                            mov rdi, rbp	       503	intel_panel.c	FUNCTION_18	CALL_2
0x40017b3	    0x8db154120600	                lea esi, [rcx + 0x61254]	       503	intel_panel.c	FUNCTION_18	CALL_2
0x40017b9	      0xe800000000	                          call 0x40017be	       503	intel_panel.c	FUNCTION_18	CALL_2
0x40017be	           0xfb7d8	                           movzx ebx, ax	       503	intel_panel.c	FUNCTION_18	CALL_2
0x40017c1	            0x89d8	                            mov eax, ebx	       505	intel_panel.c	FUNCTION_18	IF_1
0x40017c3	            0xd1e8	                              shr eax, 1	       505	intel_panel.c	FUNCTION_18	IF_1
0x40017c5	    0x80bd5c060000	               cmp byte [rbp + 0x65c], 3	       505	intel_panel.c	FUNCTION_18	IF_1
0x40017cc	           0xf46d8	                         cmovbe ebx, eax	       505	intel_panel.c	FUNCTION_18	IF_1
0x40017cf	    0x4180bc246104	               cmp byte [r12 + 0x461], 0	       507	intel_panel.c	FUNCTION_18	IF_2
0x40017d8	            0x741e	                            je 0x40017f8	       507	intel_panel.c	FUNCTION_18	IF_2
0x40017da	    0x488bbdc00100	           mov rdi, qword [rbp + 0x1c0] 	       510	intel_panel.c	FUNCTION_18	IF_2	CALL_4
0x40017e1	      0x488d542407	                      lea rdx, [rsp + 7]	       510	intel_panel.c	FUNCTION_18	IF_2	CALL_4
0x40017e6	      0xbef4000000	                           mov esi, 0xf4	       510	intel_panel.c	FUNCTION_18	IF_2	CALL_4
0x40017eb	      0xe800000000	                          call 0x40017f0	       510	intel_panel.c	FUNCTION_18	IF_2	CALL_4
0x40017f0	       0xfb6442407	               movzx eax, byte [rsp + 7]	       511	intel_panel.c	FUNCTION_18	IF_2
0x40017f5	           0xfafd8	                           imul ebx, eax	       511	intel_panel.c	FUNCTION_18	IF_2
0x40017f8	      0x488b542408	                mov rdx, qword [rsp + 8]	       515	intel_panel.c	FUNCTION_18
0x40017fd	    0x654833142528	                xor rdx, qword gs:[0x28]	       515	intel_panel.c	FUNCTION_18
0x4001806	            0x89d8	                            mov eax, ebx	       515	intel_panel.c	FUNCTION_18
0x4001808	            0x7509	                           jne 0x4001813	       515	intel_panel.c	FUNCTION_18
0x400180a	        0x4883c410	                           add rsp, 0x10	       515	intel_panel.c	FUNCTION_18
0x400180e	              0x5b	                                 pop rbx	       515	intel_panel.c	FUNCTION_18
0x400180f	              0x5d	                                 pop rbp	       515	intel_panel.c	FUNCTION_18
0x4001810	            0x415c	                                 pop r12	       515	intel_panel.c	FUNCTION_18
0x4001812	              0xc3	                                     ret	       515	intel_panel.c	FUNCTION_18
0x4001813	      0xe800000000	                          call 0x4001818	       515	intel_panel.c	FUNCTION_18
bxt_enable_backlight	DO,0:WHILE,0:SWITCH,0:IF,5:functions,0:CALL,22:FOR,0:ELSE,0	118
0x4001330	            0x4155	                                push r13	      1023	intel_panel.c	FUNCTION_45
0x4001332	            0x4154	                                push r12	      1023	intel_panel.c	FUNCTION_45
0x4001334	          0x4989f4	                            mov r12, rsi	      1023	intel_panel.c	FUNCTION_45
0x4001337	              0x55	                                push rbp	      1023	intel_panel.c	FUNCTION_45
0x4001338	              0x53	                                push rbx	      1023	intel_panel.c	FUNCTION_45
0x4001339	        0x4883ec08	                              sub rsp, 8	      1023	intel_panel.c	FUNCTION_45
0x400133d	          0x488b2e	                    mov rbp, qword [rsi]	      1024	intel_panel.c	FUNCTION_45	CALL_1
0x4001340	     0xfb6b5650400	          movzx esi, byte [rbp + 0x465] 	      1031	intel_panel.c	FUNCTION_45	IF_1
0x4001347	        0x488b5d00	                    mov rbx, qword [rbp]	      1025	intel_panel.c	FUNCTION_45	CALL_2
0x400134b	        0x4080fe01	                              cmp sil, 1	      1031	intel_panel.c	FUNCTION_45	IF_1
0x400134f	     0xf84fd000000	                            je 0x4001452	      1031	intel_panel.c	FUNCTION_45	IF_1
0x4001355	          0xc1e608	                              shl esi, 8	      1046	intel_panel.c	FUNCTION_45	CALL_10
0x4001358	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1046	intel_panel.c	FUNCTION_45	CALL_10
0x400135f	      0xba01000000	                              mov edx, 1	      1046	intel_panel.c	FUNCTION_45	CALL_10
0x4001364	    0x81c650820c00	                        add esi, 0xc8250	      1046	intel_panel.c	FUNCTION_45	CALL_10
0x400136a	          0x4889df	                            mov rdi, rbx	      1046	intel_panel.c	FUNCTION_45	CALL_10
0x400136d	      0xe800000000	                          call 0x4001372	      1046	intel_panel.c	FUNCTION_45	CALL_10
0x4001372	            0x85c0	                           test eax, eax	      1047	intel_panel.c	FUNCTION_45	IF_4
0x4001374	     0xf8846010000	                            js 0x40014c0	      1047	intel_panel.c	FUNCTION_45	IF_4
0x400137a	     0xfb6b5650400	          movzx esi, byte [rbp + 0x465] 	      1054	intel_panel.c	FUNCTION_45	CALL_15
0x4001381	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      1054	intel_panel.c	FUNCTION_45	CALL_15
0x4001388	      0xb901000000	                              mov ecx, 1	      1054	intel_panel.c	FUNCTION_45	CALL_15
0x400138d	    0x8b955c040000	           mov edx, dword [rbp + 0x45c] 	      1054	intel_panel.c	FUNCTION_45	CALL_15
0x4001393	          0x4889df	                            mov rdi, rbx	      1054	intel_panel.c	FUNCTION_45	CALL_15
0x4001396	          0xc1e608	                              shl esi, 8	      1054	intel_panel.c	FUNCTION_45	CALL_15
0x4001399	    0x81c654820c00	                        add esi, 0xc8254	      1054	intel_panel.c	FUNCTION_45	CALL_15
0x400139f	      0xe800000000	                          call 0x40013a4	      1054	intel_panel.c	FUNCTION_45	CALL_15
0x40013a4	    0x8bb554040000	           mov esi, dword [rbp + 0x454] 	      1057	intel_panel.c	FUNCTION_45	CALL_16
0x40013aa	          0x4c89e7	                            mov rdi, r12	      1057	intel_panel.c	FUNCTION_45	CALL_16
0x40013ad	      0xe81ef2ffff	call sym.intel_panel_actually_set_backlight	      1057	intel_panel.c	FUNCTION_45	CALL_16
0x40013b2	    0x80bd62040000	               cmp byte [rbp + 0x462], 1	      1060	intel_panel.c	FUNCTION_45	IF_5
0x40013b9	     0xfb6b5650400	          movzx esi, byte [rbp + 0x465] 	      1063	intel_panel.c	FUNCTION_45	CALL_18
0x40013c0	      0xb901000000	                              mov ecx, 1	      1063	intel_panel.c	FUNCTION_45	CALL_18
0x40013c5	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      1063	intel_panel.c	FUNCTION_45	CALL_18
0x40013cc	          0x4889df	                            mov rdi, rbx	      1063	intel_panel.c	FUNCTION_45	CALL_18
0x40013cf	          0x4519e4	                          sbb r12d, r12d	      1060	intel_panel.c	FUNCTION_45	IF_5
0x40013d2	    0x4181e4000000	                    and r12d, 0xe0000000	      1060	intel_panel.c	FUNCTION_45	IF_5
0x40013d9	    0x4181ec000000	                    sub r12d, 0x60000000	      1060	intel_panel.c	FUNCTION_45	IF_5
0x40013e0	    0x80bd62040000	               cmp byte [rbp + 0x462], 1	      1060	intel_panel.c	FUNCTION_45	IF_5
0x40013e7	            0x19d2	                            sbb edx, edx	      1060	intel_panel.c	FUNCTION_45	IF_5
0x40013e9	          0xc1e608	                              shl esi, 8	      1063	intel_panel.c	FUNCTION_45	CALL_18
0x40013ec	            0xf7d2	                                 not edx	      1060	intel_panel.c	FUNCTION_45	IF_5
0x40013ee	    0x81c650820c00	                        add esi, 0xc8250	      1063	intel_panel.c	FUNCTION_45	CALL_18
0x40013f4	    0x81e200000020	                     and edx, 0x20000000	      1060	intel_panel.c	FUNCTION_45	IF_5
0x40013fa	      0xe800000000	                          call 0x40013ff	      1063	intel_panel.c	FUNCTION_45	CALL_18
0x40013ff	     0xfb6b5650400	          movzx esi, byte [rbp + 0x465] 	      1064	intel_panel.c	FUNCTION_45	CALL_20
0x4001406	          0x4889df	                            mov rdi, rbx	      1064	intel_panel.c	FUNCTION_45	CALL_20
0x4001409	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1064	intel_panel.c	FUNCTION_45	CALL_20
0x4001410	            0x31d2	                            xor edx, edx	      1064	intel_panel.c	FUNCTION_45	CALL_20
0x4001412	          0xc1e608	                              shl esi, 8	      1064	intel_panel.c	FUNCTION_45	CALL_20
0x4001415	    0x81c650820c00	                        add esi, 0xc8250	      1064	intel_panel.c	FUNCTION_45	CALL_20
0x400141b	      0xe800000000	                          call 0x4001420	      1064	intel_panel.c	FUNCTION_45	CALL_20
0x4001420	     0xfb6b5650400	          movzx esi, byte [rbp + 0x465] 	      1065	intel_panel.c	FUNCTION_45	CALL_22
0x4001427	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      1065	intel_panel.c	FUNCTION_45	CALL_22
0x400142e	          0x4489e2	                           mov edx, r12d	      1065	intel_panel.c	FUNCTION_45	CALL_22
0x4001431	          0x4889df	                            mov rdi, rbx	      1065	intel_panel.c	FUNCTION_45	CALL_22
0x4001434	      0xb901000000	                              mov ecx, 1	      1065	intel_panel.c	FUNCTION_45	CALL_22
0x4001439	          0xc1e608	                              shl esi, 8	      1065	intel_panel.c	FUNCTION_45	CALL_22
0x400143c	    0x81c650820c00	                        add esi, 0xc8250	      1065	intel_panel.c	FUNCTION_45	CALL_22
0x4001442	      0xe800000000	                          call 0x4001447	      1065	intel_panel.c	FUNCTION_45	CALL_22
0x4001447	        0x4883c408	                              add rsp, 8	      1067	intel_panel.c	FUNCTION_45
0x400144b	              0x5b	                                 pop rbx	      1067	intel_panel.c	FUNCTION_45
0x400144c	              0x5d	                                 pop rbp	      1067	intel_panel.c	FUNCTION_45
0x400144d	            0x415c	                                 pop r12	      1067	intel_panel.c	FUNCTION_45
0x400144f	            0x415d	                                 pop r13	      1067	intel_panel.c	FUNCTION_45
0x4001451	              0xc3	                                     ret	      1067	intel_panel.c	FUNCTION_45
0x4001452	          0x488b07	                    mov rax, qword [rdi]	      1027	intel_panel.c	FUNCTION_45	CALL_3
0x4001455	      0xba01000000	                              mov edx, 1	      1032	intel_panel.c	FUNCTION_45	IF_1	CALL_4
0x400145a	      0xbe00840400	                        mov esi, 0x48400	      1032	intel_panel.c	FUNCTION_45	IF_1	CALL_4
0x400145f	          0x4889df	                            mov rdi, rbx	      1032	intel_panel.c	FUNCTION_45	IF_1	CALL_4
0x4001462	    0x448ba8b00400	          mov r13d, dword [rax + 0x4b0] 	      1027	intel_panel.c	FUNCTION_45	CALL_3
0x4001469	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1032	intel_panel.c	FUNCTION_45	IF_1	CALL_4
0x4001470	      0xe800000000	                          call 0x4001475	      1032	intel_panel.c	FUNCTION_45	IF_1	CALL_4
0x4001475	            0x85c0	                           test eax, eax	      1033	intel_panel.c	FUNCTION_45	IF_1	IF_2
0x4001477	     0xf888c000000	                            js 0x4001509	      1033	intel_panel.c	FUNCTION_45	IF_1	IF_2
0x400147d	    0x80bd64040000	               cmp byte [rbp + 0x464], 1	      1039	intel_panel.c	FUNCTION_45	IF_1
0x4001484	          0x4489ea	                           mov edx, r13d	      1042	intel_panel.c	FUNCTION_45	IF_1	CALL_8
0x4001487	      0xbe00840400	                        mov esi, 0x48400	      1042	intel_panel.c	FUNCTION_45	IF_1	CALL_8
0x400148c	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      1042	intel_panel.c	FUNCTION_45	IF_1	CALL_8
0x4001493	      0xb901000000	                              mov ecx, 1	      1042	intel_panel.c	FUNCTION_45	IF_1	CALL_8
0x4001498	          0x4889df	                            mov rdi, rbx	      1042	intel_panel.c	FUNCTION_45	IF_1	CALL_8
0x400149b	            0x19c0	                            sbb eax, eax	      1039	intel_panel.c	FUNCTION_45	IF_1
0x400149d	          0xc1e21d	                           shl edx, 0x1d	      1042	intel_panel.c	FUNCTION_45	IF_1	CALL_8
0x40014a0	            0xf7d0	                                 not eax	      1039	intel_panel.c	FUNCTION_45	IF_1
0x40014a2	    0x81ca00000081	                      or edx, 0x81000000	      1042	intel_panel.c	FUNCTION_45	IF_1	CALL_8
0x40014a8	      0x2500004000	                       and eax, 0x400000	      1039	intel_panel.c	FUNCTION_45	IF_1
0x40014ad	             0x9c2	                             or edx, eax	      1042	intel_panel.c	FUNCTION_45	IF_1	CALL_8
0x40014af	      0xe800000000	                          call 0x40014b4	      1042	intel_panel.c	FUNCTION_45	IF_1	CALL_8
0x40014b4	     0xfb6b5650400	          movzx esi, byte [rbp + 0x465] 	      1042	intel_panel.c	FUNCTION_45	IF_1	CALL_8
0x40014bb	      0xe995feffff	                           jmp 0x4001355	      1042	intel_panel.c	FUNCTION_45	IF_1	CALL_8
0x40014c0	    0x48c7c6000000	                              mov rsi, 0	      1048	intel_panel.c	FUNCTION_45	IF_4	CALL_11
0x40014c7	      0xbf04000000	                              mov edi, 4	      1048	intel_panel.c	FUNCTION_45	IF_4	CALL_11
0x40014cc	        0x89442404	                mov dword [rsp + 4], eax	      1048	intel_panel.c	FUNCTION_45	IF_4	CALL_11
0x40014d0	      0xe800000000	                          call 0x40014d5	      1048	intel_panel.c	FUNCTION_45	IF_4	CALL_11
0x40014d5	     0xfb6b5650400	          movzx esi, byte [rbp + 0x465] 	      1050	intel_panel.c	FUNCTION_45	IF_4	CALL_13
0x40014dc	        0x8b442404	                mov eax, dword [rsp + 4]	      1050	intel_panel.c	FUNCTION_45	IF_4	CALL_13
0x40014e0	      0xb901000000	                              mov ecx, 1	      1050	intel_panel.c	FUNCTION_45	IF_4	CALL_13
0x40014e5	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      1050	intel_panel.c	FUNCTION_45	IF_4	CALL_13
0x40014ec	          0x4889df	                            mov rdi, rbx	      1050	intel_panel.c	FUNCTION_45	IF_4	CALL_13
0x40014ef	      0x25ffffff7f	                     and eax, 0x7fffffff	      1050	intel_panel.c	FUNCTION_45	IF_4	CALL_13
0x40014f4	          0xc1e608	                              shl esi, 8	      1050	intel_panel.c	FUNCTION_45	IF_4	CALL_13
0x40014f7	            0x89c2	                            mov edx, eax	      1050	intel_panel.c	FUNCTION_45	IF_4	CALL_13
0x40014f9	    0x81c650820c00	                        add esi, 0xc8250	      1050	intel_panel.c	FUNCTION_45	IF_4	CALL_13
0x40014ff	      0xe800000000	                          call 0x4001504	      1050	intel_panel.c	FUNCTION_45	IF_4	CALL_13
0x4001504	      0xe971feffff	                           jmp 0x400137a	      1050	intel_panel.c	FUNCTION_45	IF_4	CALL_13
0x4001509	    0x48c7c6000000	                              mov rsi, 0	      1034	intel_panel.c	FUNCTION_45	IF_1	IF_2	CALL_5
0x4001510	      0xbf04000000	                              mov edi, 4	      1034	intel_panel.c	FUNCTION_45	IF_1	IF_2	CALL_5
0x4001515	        0x89442404	                mov dword [rsp + 4], eax	      1034	intel_panel.c	FUNCTION_45	IF_1	IF_2	CALL_5
0x4001519	      0xe800000000	                          call 0x400151e	      1034	intel_panel.c	FUNCTION_45	IF_1	IF_2	CALL_5
0x400151e	        0x8b442404	                mov eax, dword [rsp + 4]	      1036	intel_panel.c	FUNCTION_45	IF_1	IF_2	CALL_6
0x4001522	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      1036	intel_panel.c	FUNCTION_45	IF_1	IF_2	CALL_6
0x4001529	      0xb901000000	                              mov ecx, 1	      1036	intel_panel.c	FUNCTION_45	IF_1	IF_2	CALL_6
0x400152e	      0xbe00840400	                        mov esi, 0x48400	      1036	intel_panel.c	FUNCTION_45	IF_1	IF_2	CALL_6
0x4001533	          0x4889df	                            mov rdi, rbx	      1036	intel_panel.c	FUNCTION_45	IF_1	IF_2	CALL_6
0x4001536	      0x25ffffff7f	                     and eax, 0x7fffffff	      1036	intel_panel.c	FUNCTION_45	IF_1	IF_2	CALL_6
0x400153b	            0x89c2	                            mov edx, eax	      1036	intel_panel.c	FUNCTION_45	IF_1	IF_2	CALL_6
0x400153d	      0xe800000000	                          call 0x4001542	      1036	intel_panel.c	FUNCTION_45	IF_1	IF_2	CALL_6
0x4001542	      0xe936ffffff	                           jmp 0x400147d	      1036	intel_panel.c	FUNCTION_45	IF_1	IF_2	CALL_6
pwm_disable_backlight	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,4:FOR,0:ELSE,0	3
0x4001920	      0xbeb80b0000	                          mov esi, 0xbb8	       787	intel_panel.c	FUNCTION_38	CALL_3
0x4001925	      0xbfd0070000	                          mov edi, 0x7d0	       787	intel_panel.c	FUNCTION_38	CALL_3
0x400192a	      0xe900000000	                           jmp 0x400192f	       787	intel_panel.c	FUNCTION_38	CALL_3
vlv_disable_backlight	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,8:FOR,0:ELSE,0	26
0x4000680	              0x55	                                push rbp	       734	intel_panel.c	FUNCTION_35
0x4000681	              0x53	                                push rbx	       734	intel_panel.c	FUNCTION_35
0x4000682	            0x31f6	                            xor esi, esi	       740	intel_panel.c	FUNCTION_35	CALL_4
0x4000684	          0x488b07	                    mov rax, qword [rdi]	       736	intel_panel.c	FUNCTION_35	CALL_2
0x4000687	          0x488b18	                    mov rbx, qword [rax]	       736	intel_panel.c	FUNCTION_35	CALL_2
0x400068a	        0x488b4708	                mov rax, qword [rdi + 8]	       737	intel_panel.c	FUNCTION_35	CALL_3
0x400068e	    0x8ba8b0040000	           mov ebp, dword [rax + 0x4b0] 	       737	intel_panel.c	FUNCTION_35	CALL_3
0x4000694	      0xe837ffffff	call sym.intel_panel_actually_set_backlight	       740	intel_panel.c	FUNCTION_35	CALL_4
0x4000699	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	       742	intel_panel.c	FUNCTION_35	CALL_6
0x400069f	          0x4889df	                            mov rdi, rbx	       742	intel_panel.c	FUNCTION_35	CALL_6
0x40006a2	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       742	intel_panel.c	FUNCTION_35	CALL_6
0x40006a9	          0xc1e508	                              shl ebp, 8	       742	intel_panel.c	FUNCTION_35	CALL_6
0x40006ac	    0x8db415501206	          lea esi, [rbp + rdx + 0x61250]	       742	intel_panel.c	FUNCTION_35	CALL_6
0x40006b3	      0xba01000000	                              mov edx, 1	       742	intel_panel.c	FUNCTION_35	CALL_6
0x40006b8	      0xe800000000	                          call 0x40006bd	       742	intel_panel.c	FUNCTION_35	CALL_6
0x40006bd	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	       743	intel_panel.c	FUNCTION_35	CALL_8
0x40006c3	      0x25ffffff7f	                     and eax, 0x7fffffff	       743	intel_panel.c	FUNCTION_35	CALL_8
0x40006c8	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       743	intel_panel.c	FUNCTION_35	CALL_8
0x40006cf	          0x4889df	                            mov rdi, rbx	       743	intel_panel.c	FUNCTION_35	CALL_8
0x40006d2	      0xb901000000	                              mov ecx, 1	       743	intel_panel.c	FUNCTION_35	CALL_8
0x40006d7	    0x8db415501206	          lea esi, [rbp + rdx + 0x61250]	       743	intel_panel.c	FUNCTION_35	CALL_8
0x40006de	            0x89c2	                            mov edx, eax	       743	intel_panel.c	FUNCTION_35	CALL_8
0x40006e0	      0xe800000000	                          call 0x40006e5	       743	intel_panel.c	FUNCTION_35	CALL_8
0x40006e5	              0x5b	                                 pop rbx	       744	intel_panel.c	FUNCTION_35
0x40006e6	              0x5d	                                 pop rbp	       744	intel_panel.c	FUNCTION_35
0x40006e7	              0xc3	                                     ret	       744	intel_panel.c	FUNCTION_35
intel_panel_actually_set_backlight	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,4:FOR,0:ELSE,0	20
0x40005d0	            0x4154	                                push r12	       627	intel_panel.c	FUNCTION_29
0x40005d2	              0x55	                                push rbp	       627	intel_panel.c	FUNCTION_29
0x40005d3	            0x89f2	                            mov edx, esi	       631	intel_panel.c	FUNCTION_29	CALL_2
0x40005d5	              0x53	                                push rbx	       627	intel_panel.c	FUNCTION_29
0x40005d6	          0x488b2f	                    mov rbp, qword [rdi]	       628	intel_panel.c	FUNCTION_29	CALL_1
0x40005d9	          0x4889fb	                            mov rbx, rdi	       627	intel_panel.c	FUNCTION_29
0x40005dc	          0x4189f4	                           mov r12d, esi	       627	intel_panel.c	FUNCTION_29
0x40005df	      0xbf02000000	                              mov edi, 2	       631	intel_panel.c	FUNCTION_29	CALL_2
0x40005e4	    0x48c7c6000000	                              mov rsi, 0	       631	intel_panel.c	FUNCTION_29	CALL_2
0x40005eb	      0xe800000000	                          call 0x40005f0	       631	intel_panel.c	FUNCTION_29	CALL_2
0x40005f0	          0x4489e6	                           mov esi, r12d	       633	intel_panel.c	FUNCTION_29	CALL_3
0x40005f3	          0x4889ef	                            mov rdi, rbp	       633	intel_panel.c	FUNCTION_29	CALL_3
0x40005f6	      0xe865ffffff	 call sym.intel_panel_compute_brightness	       633	intel_panel.c	FUNCTION_29	CALL_3
0x40005fb	    0x488b95880400	           mov rdx, qword [rbp + 0x488] 	       634	intel_panel.c	FUNCTION_29	CALL_4
0x4000602	          0x4889df	                            mov rdi, rbx	       634	intel_panel.c	FUNCTION_29	CALL_4
0x4000605	            0x89c6	                            mov esi, eax	       634	intel_panel.c	FUNCTION_29	CALL_4
0x4000607	              0x5b	                                 pop rbx	       635	intel_panel.c	FUNCTION_29
0x4000608	              0x5d	                                 pop rbp	       635	intel_panel.c	FUNCTION_29
0x4000609	            0x415c	                                 pop r12	       635	intel_panel.c	FUNCTION_29
0x400060b	      0xe900000000	          jmp sym.i9xx_disable_backlight	       634	intel_panel.c	FUNCTION_29	CALL_4
intel_panel_init	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,1:FOR,0:ELSE,0	122
0x4002b50	            0x4154	                                push r12	      1933	intel_panel.c	FUNCTION_76
0x4002b52	              0x55	                                push rbp	      1933	intel_panel.c	FUNCTION_76
0x4002b53	    0x4c8da7c8fbff	                  lea r12, [rdi - 0x438]	      1854	intel_panel.c	FUNCTION_75	CALL_1
0x4002b5a	              0x53	                                push rbx	      1933	intel_panel.c	FUNCTION_76
0x4002b5b	          0x4889fb	                            mov rbx, rdi	      1933	intel_panel.c	FUNCTION_76
0x4002b5e	        0x4883ec18	                           sub rsp, 0x18	      1933	intel_panel.c	FUNCTION_76
0x4002b62	    0x8b873cfcffff	            mov eax, dword [rdi - 0x3c4]	      1857	intel_panel.c	FUNCTION_75	IF_1
0x4002b68	    0x488bafc8fbff	            mov rbp, qword [rdi - 0x438]	      1855	intel_panel.c	FUNCTION_75	CALL_2
0x4002b6f	          0x83f80e	                            cmp eax, 0xe	      1857	intel_panel.c	FUNCTION_75	IF_1
0x4002b72	     0xf8493010000	                            je 0x4002d0b	      1857	intel_panel.c	FUNCTION_75	IF_1
0x4002b78	          0x83f810	                           cmp eax, 0x10	      1861	intel_panel.c	FUNCTION_75	IF_2
0x4002b7b	     0xf84c1010000	                            je 0x4002d42	      1861	intel_panel.c	FUNCTION_75	IF_2
0x4002b81	     0xfb7bd5a0600	          movzx edi, word [rbp + 0x65a] 	      1865	intel_panel.c	FUNCTION_75	IF_3	CALL_5
0x4002b88	      0x66f7c70001	                          test di, 0x100	      1865	intel_panel.c	FUNCTION_75	IF_3	CALL_5
0x4002b8d	            0x757d	                           jne 0x4002c0c	      1865	intel_panel.c	FUNCTION_75	IF_3	CALL_5
0x4002b8f	    0x8b85f8550000	          mov eax, dword [rbp + 0x55f8] 	      1872	intel_panel.c	FUNCTION_75	ELSE_1	IF_4	CALL_7
0x4002b95	        0x448d40fa	                      lea r8d, [rax - 6]	      1872	intel_panel.c	FUNCTION_75	ELSE_1	IF_4	CALL_7
0x4002b99	        0x4183f801	                              cmp r8d, 1	      1872	intel_panel.c	FUNCTION_75	ELSE_1	IF_4	CALL_7
0x4002b9d	     0xf8633010000	                           jbe 0x4002cd6	      1872	intel_panel.c	FUNCTION_75	ELSE_1	IF_4	CALL_7
0x4002ba3	        0x448d40fd	                      lea r8d, [rax - 3]	      1879	intel_panel.c	FUNCTION_75	ELSE_2	IF_5	CALL_9
0x4002ba7	        0x4183f802	                              cmp r8d, 2	      1879	intel_panel.c	FUNCTION_75	ELSE_2	IF_5	CALL_9
0x4002bab	     0xf879a000000	                            ja 0x4002c4b	      1879	intel_panel.c	FUNCTION_75	ELSE_2	IF_5	CALL_9
0x4002bb1	    0x48c743400000	               mov qword [rbx + 0x40], 0	      1881	intel_panel.c	FUNCTION_75	ELSE_2	IF_5
0x4002bb9	    0x48c743600000	               mov qword [rbx + 0x60], 0	      1882	intel_panel.c	FUNCTION_75	ELSE_2	IF_5
0x4002bc1	    0x48c7c7000000	                              mov rdi, 0	      1887	intel_panel.c	FUNCTION_75	ELSE_2	IF_5	IF_6
0x4002bc8	    0x48c743580000	               mov qword [rbx + 0x58], 0	      1883	intel_panel.c	FUNCTION_75	ELSE_2	IF_5
0x4002bd0	    0x48c743500000	               mov qword [rbx + 0x50], 0	      1884	intel_panel.c	FUNCTION_75	ELSE_2	IF_5
0x4002bd8	    0x48c7c0000000	                              mov rax, 0	      1887	intel_panel.c	FUNCTION_75	ELSE_2	IF_5	IF_6
0x4002bdf	    0x48c743480000	               mov qword [rbx + 0x48], 0	      1885	intel_panel.c	FUNCTION_75	ELSE_2	IF_5
0x4002be7	    0x83bdf8550000	            cmp dword [rbp + 0x55f8], 3 	      1887	intel_panel.c	FUNCTION_75	ELSE_2	IF_5	IF_6
0x4002bee	        0x480f44c7	                          cmove rax, rdi	      1887	intel_panel.c	FUNCTION_75	ELSE_2	IF_5	IF_6
0x4002bf2	        0x48894368	             mov qword [rbx + 0x68], rax	      1887	intel_panel.c	FUNCTION_75	ELSE_2	IF_5	IF_6
0x4002bf6	          0x488933	                    mov qword [rbx], rsi	      1936	intel_panel.c	FUNCTION_76
0x4002bf9	        0x48895308	                mov qword [rbx + 8], rdx	      1937	intel_panel.c	FUNCTION_76
0x4002bfd	            0x31c0	                            xor eax, eax	      1941	intel_panel.c	FUNCTION_76
0x4002bff	        0x48894b10	             mov qword [rbx + 0x10], rcx	      1938	intel_panel.c	FUNCTION_76
0x4002c03	        0x4883c418	                           add rsp, 0x18	      1941	intel_panel.c	FUNCTION_76
0x4002c07	              0x5b	                                 pop rbx	      1941	intel_panel.c	FUNCTION_76
0x4002c08	              0x5d	                                 pop rbp	      1941	intel_panel.c	FUNCTION_76
0x4002c09	            0x415c	                                 pop r12	      1941	intel_panel.c	FUNCTION_76
0x4002c0b	              0xc3	                                     ret	      1941	intel_panel.c	FUNCTION_76
0x4002c0c	    0xf68577060000	              test byte [rbp + 0x677], 2	      1865	intel_panel.c	FUNCTION_75	IF_3	CALL_5
0x4002c13	     0xf8476ffffff	                            je 0x4002b8f	      1865	intel_panel.c	FUNCTION_75	IF_3	CALL_5
0x4002c19	    0x48c743400000	               mov qword [rbx + 0x40], 0	      1866	intel_panel.c	FUNCTION_75	IF_3
0x4002c21	    0x48c743600000	               mov qword [rbx + 0x60], 0	      1867	intel_panel.c	FUNCTION_75	IF_3
0x4002c29	    0x48c743580000	               mov qword [rbx + 0x58], 0	      1868	intel_panel.c	FUNCTION_75	IF_3
0x4002c31	    0x48c743500000	               mov qword [rbx + 0x50], 0	      1869	intel_panel.c	FUNCTION_75	IF_3
0x4002c39	    0x48c743480000	               mov qword [rbx + 0x48], 0	      1870	intel_panel.c	FUNCTION_75	IF_3
0x4002c41	    0x48c743680000	               mov qword [rbx + 0x68], 0	      1871	intel_panel.c	FUNCTION_75	IF_3
0x4002c49	            0xebab	                           jmp 0x4002bf6	      1871	intel_panel.c	FUNCTION_75	IF_3
0x4002c4b	            0x85c0	                           test eax, eax	      1890	intel_panel.c	FUNCTION_75	ELSE_3	ELSE_4	IF_7	CALL_12
0x4002c4d	            0x7552	                           jne 0x4002ca1	      1890	intel_panel.c	FUNCTION_75	ELSE_3	ELSE_4	IF_7	CALL_12
0x4002c4f	    0xf78564060000	     test dword [rbp + 0x664], 0x240000 	      1897	intel_panel.c	FUNCTION_75	ELSE_5	IF_8	CALL_14
0x4002c59	     0xf8414010000	                            je 0x4002d73	      1897	intel_panel.c	FUNCTION_75	ELSE_5	IF_8	CALL_14
0x4002c5f	    0x83bb3cfcffff	          cmp dword [rbx - 0x3c4], 0x10 	      1898	intel_panel.c	FUNCTION_75	ELSE_5	IF_8	IF_9
0x4002c66	     0xf8476010000	                            je 0x4002de2	      1898	intel_panel.c	FUNCTION_75	ELSE_5	IF_8	IF_9
0x4002c6c	    0x48c743400000	               mov qword [rbx + 0x40], 0	      1905	intel_panel.c	FUNCTION_75	ELSE_5	IF_8	ELSE_6
0x4002c74	    0x48c743600000	               mov qword [rbx + 0x60], 0	      1906	intel_panel.c	FUNCTION_75	ELSE_5	IF_8	ELSE_6
0x4002c7c	    0x48c743580000	               mov qword [rbx + 0x58], 0	      1907	intel_panel.c	FUNCTION_75	ELSE_5	IF_8	ELSE_6
0x4002c84	    0x48c743500000	               mov qword [rbx + 0x50], 0	      1908	intel_panel.c	FUNCTION_75	ELSE_5	IF_8	ELSE_6
0x4002c8c	    0x48c743480000	               mov qword [rbx + 0x48], 0	      1909	intel_panel.c	FUNCTION_75	ELSE_5	IF_8	ELSE_6
0x4002c94	    0x48c743680000	               mov qword [rbx + 0x68], 0	      1910	intel_panel.c	FUNCTION_75	ELSE_5	IF_8	ELSE_6
0x4002c9c	      0xe955ffffff	                           jmp 0x4002bf6	      1910	intel_panel.c	FUNCTION_75	ELSE_5	IF_8	ELSE_6
0x4002ca1	    0x48c743400000	               mov qword [rbx + 0x40], 0	      1891	intel_panel.c	FUNCTION_75	ELSE_3	ELSE_4	IF_7
0x4002ca9	    0x48c743600000	               mov qword [rbx + 0x60], 0	      1892	intel_panel.c	FUNCTION_75	ELSE_3	ELSE_4	IF_7
0x4002cb1	    0x48c743580000	               mov qword [rbx + 0x58], 0	      1893	intel_panel.c	FUNCTION_75	ELSE_3	ELSE_4	IF_7
0x4002cb9	    0x48c743500000	               mov qword [rbx + 0x50], 0	      1894	intel_panel.c	FUNCTION_75	ELSE_3	ELSE_4	IF_7
0x4002cc1	    0x48c743480000	               mov qword [rbx + 0x48], 0	      1895	intel_panel.c	FUNCTION_75	ELSE_3	ELSE_4	IF_7
0x4002cc9	    0x48c743680000	               mov qword [rbx + 0x68], 0	      1896	intel_panel.c	FUNCTION_75	ELSE_3	ELSE_4	IF_7
0x4002cd1	      0xe920ffffff	                           jmp 0x4002bf6	      1896	intel_panel.c	FUNCTION_75	ELSE_3	ELSE_4	IF_7
0x4002cd6	    0x48c743400000	               mov qword [rbx + 0x40], 0	      1873	intel_panel.c	FUNCTION_75	ELSE_1	IF_4
0x4002cde	    0x48c743600000	               mov qword [rbx + 0x60], 0	      1874	intel_panel.c	FUNCTION_75	ELSE_1	IF_4
0x4002ce6	    0x48c743580000	               mov qword [rbx + 0x58], 0	      1875	intel_panel.c	FUNCTION_75	ELSE_1	IF_4
0x4002cee	    0x48c743500000	               mov qword [rbx + 0x50], 0	      1876	intel_panel.c	FUNCTION_75	ELSE_1	IF_4
0x4002cf6	    0x48c743480000	               mov qword [rbx + 0x48], 0	      1877	intel_panel.c	FUNCTION_75	ELSE_1	IF_4
0x4002cfe	    0x48c743680000	               mov qword [rbx + 0x68], 0	      1878	intel_panel.c	FUNCTION_75	ELSE_1	IF_4
0x4002d06	      0xe9ebfeffff	                           jmp 0x4002bf6	      1878	intel_panel.c	FUNCTION_75	ELSE_1	IF_4
0x4002d0b	          0x4c89e7	                            mov rdi, r12	      1858	intel_panel.c	FUNCTION_75	IF_1	CALL_3
0x4002d0e	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      1858	intel_panel.c	FUNCTION_75	IF_1	CALL_3
0x4002d13	      0x4889542408	                mov qword [rsp + 8], rdx	      1858	intel_panel.c	FUNCTION_75	IF_1	CALL_3
0x4002d18	        0x48893424	                    mov qword [rsp], rsi	      1858	intel_panel.c	FUNCTION_75	IF_1	CALL_3
0x4002d1c	      0xe800000000	                          call 0x4002d21	      1858	intel_panel.c	FUNCTION_75	IF_1	CALL_3
0x4002d21	            0x85c0	                           test eax, eax	      1857	intel_panel.c	FUNCTION_75	IF_1
0x4002d23	        0x488b3424	                    mov rsi, qword [rsp]	      1857	intel_panel.c	FUNCTION_75	IF_1
0x4002d27	      0x488b542408	                mov rdx, qword [rsp + 8]	      1857	intel_panel.c	FUNCTION_75	IF_1
0x4002d2c	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1857	intel_panel.c	FUNCTION_75	IF_1
0x4002d31	     0xf84bffeffff	                            je 0x4002bf6	      1857	intel_panel.c	FUNCTION_75	IF_1
0x4002d37	    0x8b833cfcffff	            mov eax, dword [rbx - 0x3c4]	      1857	intel_panel.c	FUNCTION_75	IF_1
0x4002d3d	      0xe936feffff	                           jmp 0x4002b78	      1857	intel_panel.c	FUNCTION_75	IF_1
0x4002d42	          0x4c89e7	                            mov rdi, r12	      1862	intel_panel.c	FUNCTION_75	IF_2	CALL_4
0x4002d45	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      1862	intel_panel.c	FUNCTION_75	IF_2	CALL_4
0x4002d4a	      0x4889542408	                mov qword [rsp + 8], rdx	      1862	intel_panel.c	FUNCTION_75	IF_2	CALL_4
0x4002d4f	        0x48893424	                    mov qword [rsp], rsi	      1862	intel_panel.c	FUNCTION_75	IF_2	CALL_4
0x4002d53	      0xe800000000	                          call 0x4002d58	      1862	intel_panel.c	FUNCTION_75	IF_2	CALL_4
0x4002d58	            0x85c0	                           test eax, eax	      1861	intel_panel.c	FUNCTION_75	IF_2
0x4002d5a	        0x488b3424	                    mov rsi, qword [rsp]	      1861	intel_panel.c	FUNCTION_75	IF_2
0x4002d5e	      0x488b542408	                mov rdx, qword [rsp + 8]	      1861	intel_panel.c	FUNCTION_75	IF_2
0x4002d63	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1861	intel_panel.c	FUNCTION_75	IF_2
0x4002d68	     0xf8513feffff	                           jne 0x4002b81	      1861	intel_panel.c	FUNCTION_75	IF_2
0x4002d6e	      0xe983feffff	                           jmp 0x4002bf6	      1861	intel_panel.c	FUNCTION_75	IF_2
0x4002d73	          0x83e708	                              and edi, 8	      1912	intel_panel.c	FUNCTION_75	ELSE_7	IF_10	CALL_15
0x4002d76	            0x7535	                           jne 0x4002dad	      1912	intel_panel.c	FUNCTION_75	ELSE_7	IF_10	CALL_15
0x4002d78	    0x48c743400000	               mov qword [rbx + 0x40], 0	      1920	intel_panel.c	FUNCTION_75	ELSE_8
0x4002d80	    0x48c743600000	               mov qword [rbx + 0x60], 0	      1921	intel_panel.c	FUNCTION_75	ELSE_8
0x4002d88	    0x48c743580000	               mov qword [rbx + 0x58], 0	      1922	intel_panel.c	FUNCTION_75	ELSE_8
0x4002d90	    0x48c743500000	               mov qword [rbx + 0x50], 0	      1923	intel_panel.c	FUNCTION_75	ELSE_8
0x4002d98	    0x48c743480000	               mov qword [rbx + 0x48], 0	      1924	intel_panel.c	FUNCTION_75	ELSE_8
0x4002da0	    0x48c743680000	               mov qword [rbx + 0x68], 0	      1925	intel_panel.c	FUNCTION_75	ELSE_8
0x4002da8	      0xe949feffff	                           jmp 0x4002bf6	      1925	intel_panel.c	FUNCTION_75	ELSE_8
0x4002dad	    0x48c743400000	               mov qword [rbx + 0x40], 0	      1913	intel_panel.c	FUNCTION_75	ELSE_7	IF_10
0x4002db5	    0x48c743600000	               mov qword [rbx + 0x60], 0	      1914	intel_panel.c	FUNCTION_75	ELSE_7	IF_10
0x4002dbd	    0x48c743580000	               mov qword [rbx + 0x58], 0	      1915	intel_panel.c	FUNCTION_75	ELSE_7	IF_10
0x4002dc5	    0x48c743500000	               mov qword [rbx + 0x50], 0	      1916	intel_panel.c	FUNCTION_75	ELSE_7	IF_10
0x4002dcd	    0x48c743480000	               mov qword [rbx + 0x48], 0	      1917	intel_panel.c	FUNCTION_75	ELSE_7	IF_10
0x4002dd5	    0x48c743680000	               mov qword [rbx + 0x68], 0	      1918	intel_panel.c	FUNCTION_75	ELSE_7	IF_10
0x4002ddd	      0xe914feffff	                           jmp 0x4002bf6	      1918	intel_panel.c	FUNCTION_75	ELSE_7	IF_10
0x4002de2	    0x48c743400000	               mov qword [rbx + 0x40], 0	      1899	intel_panel.c	FUNCTION_75	ELSE_5	IF_8	IF_9
0x4002dea	    0x48c743600000	               mov qword [rbx + 0x60], 0	      1900	intel_panel.c	FUNCTION_75	ELSE_5	IF_8	IF_9
0x4002df2	    0x48c743580000	               mov qword [rbx + 0x58], 0	      1901	intel_panel.c	FUNCTION_75	ELSE_5	IF_8	IF_9
0x4002dfa	    0x48c743500000	               mov qword [rbx + 0x50], 0	      1902	intel_panel.c	FUNCTION_75	ELSE_5	IF_8	IF_9
0x4002e02	    0x48c743480000	               mov qword [rbx + 0x48], 0	      1903	intel_panel.c	FUNCTION_75	ELSE_5	IF_8	IF_9
0x4002e0a	      0xe9e7fdffff	                           jmp 0x4002bf6	      1903	intel_panel.c	FUNCTION_75	ELSE_5	IF_8	IF_9
intel_backlight_device_update_status	DO,0:WHILE,0:SWITCH,0:IF,2:functions,0:CALL,6:FOR,0:ELSE,1	84
0x4001580	            0x4157	                                push r15	      1190	intel_panel.c	FUNCTION_51
0x4001582	            0x4156	                                push r14	      1190	intel_panel.c	FUNCTION_51
0x4001584	            0x31f6	                            xor esi, esi	      1195	intel_panel.c	FUNCTION_51	CALL_2
0x4001586	            0x4155	                                push r13	      1190	intel_panel.c	FUNCTION_51
0x4001588	            0x4154	                                push r12	      1190	intel_panel.c	FUNCTION_51
0x400158a	              0x55	                                push rbp	      1190	intel_panel.c	FUNCTION_51
0x400158b	              0x53	                                push rbx	      1190	intel_panel.c	FUNCTION_51
0x400158c	          0x4889fb	                            mov rbx, rdi	      1190	intel_panel.c	FUNCTION_51
0x400158f	        0x4883ec08	                              sub rsp, 8	      1190	intel_panel.c	FUNCTION_51
0x4001593	    0x4c8ba7200100	           mov r12, qword [rdi + 0x120] 	      1190	intel_panel.c	FUNCTION_51
0x400159a	        0x498b0424	                    mov rax, qword [r12]	      1195	intel_panel.c	FUNCTION_51	CALL_2
0x400159e	    0x488da8180200	                  lea rbp, [rax + 0x218]	      1195	intel_panel.c	FUNCTION_51	CALL_2
0x40015a5	          0x4889ef	                            mov rdi, rbp	      1195	intel_panel.c	FUNCTION_51	CALL_2
0x40015a8	      0xe800000000	                          call 0x40015ad	      1195	intel_panel.c	FUNCTION_51	CALL_2
0x40015ad	          0x8b4b04	                mov ecx, dword [rbx + 4]	      1196	intel_panel.c	FUNCTION_51	CALL_3
0x40015b0	            0x8b13	                    mov edx, dword [rbx]	      1196	intel_panel.c	FUNCTION_51	CALL_3
0x40015b2	    0x48c7c6000000	                              mov rsi, 0	      1196	intel_panel.c	FUNCTION_51	CALL_3
0x40015b9	      0xbf04000000	                              mov edi, 4	      1196	intel_panel.c	FUNCTION_51	CALL_3
0x40015be	      0xe800000000	                          call 0x40015c3	      1196	intel_panel.c	FUNCTION_51	CALL_3
0x40015c3	    0x4d8bbc24f003	           mov r15, qword [r12 + 0x3f0] 	      1198	intel_panel.c	FUNCTION_51	CALL_4
0x40015cb	          0x4d8b2f	                    mov r13, qword [r15]	      1168	intel_panel.c	FUNCTION_50	CALL_1
0x40015ce	    0x4180bd500400	               cmp byte [r13 + 0x450], 0	      1173	intel_panel.c	FUNCTION_50	IF_1
0x40015d6	            0x7555	                           jne 0x400162d	      1173	intel_panel.c	FUNCTION_50	IF_1
0x40015d8	    0x4180bc246004	               cmp byte [r12 + 0x460], 0	      1207	intel_panel.c	FUNCTION_51	IF_1
0x40015e1	            0x7441	                            je 0x4001624	      1207	intel_panel.c	FUNCTION_51	IF_1
0x40015e3	    0x498b8424a804	           mov rax, qword [r12 + 0x4a8] 	      1208	intel_panel.c	FUNCTION_51	IF_1	IF_2
0x40015eb	          0x4885c0	                           test rax, rax	      1208	intel_panel.c	FUNCTION_51	IF_1	IF_2
0x40015ee	            0x741b	                            je 0x400160b	      1208	intel_panel.c	FUNCTION_51	IF_1	IF_2
0x40015f0	          0x8b4b08	                mov ecx, dword [rbx + 8]	      1209	intel_panel.c	FUNCTION_51	IF_1	IF_2
0x40015f3	            0x31f6	                            xor esi, esi	      1209	intel_panel.c	FUNCTION_51	IF_1	IF_2
0x40015f5	            0x85c9	                           test ecx, ecx	      1209	intel_panel.c	FUNCTION_51	IF_1	IF_2
0x40015f7	            0x750a	                           jne 0x4001603	      1209	intel_panel.c	FUNCTION_51	IF_1	IF_2
0x40015f9	            0x8b13	                    mov edx, dword [rbx]	      1209	intel_panel.c	FUNCTION_51	IF_1	IF_2
0x40015fb	            0x31f6	                            xor esi, esi	      1209	intel_panel.c	FUNCTION_51	IF_1	IF_2
0x40015fd	            0x85d2	                           test edx, edx	      1209	intel_panel.c	FUNCTION_51	IF_1	IF_2
0x40015ff	        0x400f95c6	                               setne sil	      1209	intel_panel.c	FUNCTION_51	IF_1	IF_2
0x4001603	          0x4c89e7	                            mov rdi, r12	      1211	intel_panel.c	FUNCTION_51	IF_1	IF_2	CALL_5
0x4001606	      0xe800000000	                          call 0x400160b	      1211	intel_panel.c	FUNCTION_51	IF_1	IF_2	CALL_5
0x400160b	          0x4889ef	                            mov rdi, rbp	      1217	intel_panel.c	FUNCTION_51	CALL_6
0x400160e	      0xe800000000	                          call 0x4001613	      1217	intel_panel.c	FUNCTION_51	CALL_6
0x4001613	        0x4883c408	                              add rsp, 8	      1219	intel_panel.c	FUNCTION_51
0x4001617	            0x31c0	                            xor eax, eax	      1219	intel_panel.c	FUNCTION_51
0x4001619	              0x5b	                                 pop rbx	      1219	intel_panel.c	FUNCTION_51
0x400161a	              0x5d	                                 pop rbp	      1219	intel_panel.c	FUNCTION_51
0x400161b	            0x415c	                                 pop r12	      1219	intel_panel.c	FUNCTION_51
0x400161d	            0x415d	                                 pop r13	      1219	intel_panel.c	FUNCTION_51
0x400161f	            0x415e	                                 pop r14	      1219	intel_panel.c	FUNCTION_51
0x4001621	            0x415f	                                 pop r15	      1219	intel_panel.c	FUNCTION_51
0x4001623	              0xc3	                                     ret	      1219	intel_panel.c	FUNCTION_51
0x4001624	    0xc74308040000	                  mov dword [rbx + 8], 4	      1214	intel_panel.c	FUNCTION_51	ELSE_1
0x400162b	            0xebde	                           jmp 0x400160b	      1214	intel_panel.c	FUNCTION_51	ELSE_1
0x400162d	            0x8b03	                    mov eax, dword [rbx]	      1198	intel_panel.c	FUNCTION_51	CALL_4
0x400162f	          0x8b5304	                mov edx, dword [rbx + 4]	      1199	intel_panel.c	FUNCTION_51
0x4001632	          0x890424	                    mov dword [rsp], eax	      1198	intel_panel.c	FUNCTION_51	CALL_4
0x4001635	        0x498b4500	                    mov rax, qword [r13]	      1176	intel_panel.c	FUNCTION_50	CALL_3
0x4001639	        0x89542404	                mov dword [rsp + 4], edx	      1199	intel_panel.c	FUNCTION_51
0x400163d	    0x4c8db0784e00	                 lea r14, [rax + 0x4e78]	      1176	intel_panel.c	FUNCTION_50	CALL_3
0x4001644	          0x4c89f7	                            mov rdi, r14	      1176	intel_panel.c	FUNCTION_50	CALL_3
0x4001647	      0xe800000000	                          call 0x400164c	      1176	intel_panel.c	FUNCTION_50	CALL_3
0x400164c	    0x458b855c0400	           mov r8d, dword [r13 + 0x45c] 	      1178	intel_panel.c	FUNCTION_50
0x4001653	        0x8b542404	                mov edx, dword [rsp + 4]	      1178	intel_panel.c	FUNCTION_50
0x4001657	          0x4585c0	                           test r8d, r8d	      1178	intel_panel.c	FUNCTION_50
0x400165a	            0x743b	                            je 0x4001697	      1178	intel_panel.c	FUNCTION_50
0x400165c	    0x418b8d580400	           mov ecx, dword [r13 + 0x458] 	       436	intel_panel.c	FUNCTION_12	CALL_1
0x4001663	          0x8b3c24	                    mov edi, dword [rsp]	       436	intel_panel.c	FUNCTION_12	CALL_1
0x4001666	            0x31f6	                            xor esi, esi	       436	intel_panel.c	FUNCTION_12	CALL_1
0x4001668	      0xe8e3edffff	                          call sym.scale	       436	intel_panel.c	FUNCTION_12	CALL_1
0x400166d	    0x4180bd600400	               cmp byte [r13 + 0x460], 0	      1183	intel_panel.c	FUNCTION_50	IF_2
0x4001675	    0x418985540400	            mov dword [r13 + 0x454], eax	      1181	intel_panel.c	FUNCTION_50
0x400167c	            0x750d	                           jne 0x400168b	      1183	intel_panel.c	FUNCTION_50	IF_2
0x400167e	          0x4c89f7	                            mov rdi, r14	      1186	intel_panel.c	FUNCTION_50	CALL_6
0x4001681	      0xe800000000	                          call 0x4001686	      1186	intel_panel.c	FUNCTION_50	CALL_6
0x4001686	      0xe94dffffff	                           jmp 0x40015d8	      1186	intel_panel.c	FUNCTION_50	CALL_6
0x400168b	            0x89c6	                            mov esi, eax	      1184	intel_panel.c	FUNCTION_50	CALL_5
0x400168d	          0x4c89ff	                            mov rdi, r15	      1184	intel_panel.c	FUNCTION_50	CALL_5
0x4001690	      0xe83befffff	call sym.intel_panel_actually_set_backlight	      1184	intel_panel.c	FUNCTION_50	CALL_5
0x4001695	            0xebe7	                           jmp 0x400167e	      1184	intel_panel.c	FUNCTION_50	CALL_5
0x4001697	    0x48c7c6000000	                              mov rsi, 0	      1178	intel_panel.c	FUNCTION_50
0x400169e	    0x48c7c7000000	                              mov rdi, 0	      1178	intel_panel.c	FUNCTION_50
0x40016a5	      0xe800000000	                          call 0x40016aa	      1178	intel_panel.c	FUNCTION_50
0x40016aa	             0xf0b	                                     ud2	      1178	intel_panel.c	FUNCTION_50
0x40016ac	    0x458b855c0400	           mov r8d, dword [r13 + 0x45c] 	      1178	intel_panel.c	FUNCTION_50
0x40016b3	        0x8b542404	                mov edx, dword [rsp + 4]	      1178	intel_panel.c	FUNCTION_50
0x40016b7	            0xeba3	                           jmp 0x400165c	      1178	intel_panel.c	FUNCTION_50
pch_hz_to_pwm	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,3:FOR,0:ELSE,0	9
0x4000330	          0x488b07	                    mov rax, qword [rdi]	      1379	intel_panel.c	FUNCTION_59	CALL_3
0x4000333	          0xc1e607	                              shl esi, 7	      1379	intel_panel.c	FUNCTION_59	CALL_3
0x4000336	    0x6990dc540000	   imul edx, dword [rax + 0x54dc], 0x3e8	      1379	intel_panel.c	FUNCTION_59	CALL_3
0x4000340	            0x89f0	                            mov eax, esi	      1379	intel_panel.c	FUNCTION_59	CALL_3
0x4000342	            0xd1e8	                              shr eax, 1	      1379	intel_panel.c	FUNCTION_59	CALL_3
0x4000344	             0x1d0	                            add eax, edx	      1379	intel_panel.c	FUNCTION_59	CALL_3
0x4000346	            0x31d2	                            xor edx, edx	      1379	intel_panel.c	FUNCTION_59	CALL_3
0x4000348	            0xf7f6	                                 div esi	      1379	intel_panel.c	FUNCTION_59	CALL_3
0x400034a	              0xc3	                                     ret	      1380	intel_panel.c	FUNCTION_59
i9xx_disable_backlight	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,1:FOR,0:ELSE,0	2
0x4000610	            0x31f6	                            xor esi, esi	       719	intel_panel.c	FUNCTION_33	CALL_1
0x4000612	            0xebbc	jmp sym.intel_panel_actually_set_backlight	       719	intel_panel.c	FUNCTION_33	CALL_1
intel_panel_destroy_backlight	DO,0:WHILE,0:SWITCH,0:IF,1:functions,0:CALL,2:FOR,0:ELSE,0	2
0x4002b40	    0xc68750040000	               mov byte [rdi + 0x450], 0	      1846	intel_panel.c	FUNCTION_74
0x4002b47	              0xc3	                                     ret	      1846	intel_panel.c	FUNCTION_74
vlv_enable_backlight	DO,0:WHILE,0:SWITCH,0:IF,2:functions,0:CALL,17:FOR,0:ELSE,0	77
0x4000bf0	            0x4155	                                push r13	       993	intel_panel.c	FUNCTION_44
0x4000bf2	            0x4154	                                push r12	       993	intel_panel.c	FUNCTION_44
0x4000bf4	          0x4989f4	                            mov r12, rsi	       993	intel_panel.c	FUNCTION_44
0x4000bf7	              0x55	                                push rbp	       993	intel_panel.c	FUNCTION_44
0x4000bf8	              0x53	                                push rbx	       993	intel_panel.c	FUNCTION_44
0x4000bf9	        0x4883ec08	                              sub rsp, 8	       993	intel_panel.c	FUNCTION_44
0x4000bfd	          0x4c8b2e	                    mov r13, qword [rsi]	       994	intel_panel.c	FUNCTION_44	CALL_1
0x4000c00	          0x488b17	                    mov rdx, qword [rdi]	       997	intel_panel.c	FUNCTION_44	CALL_3
0x4000c03	        0x498b5d00	                    mov rbx, qword [r13]	       995	intel_panel.c	FUNCTION_44	CALL_2
0x4000c07	    0x8baab0040000	           mov ebp, dword [rdx + 0x4b0] 	      1000	intel_panel.c	FUNCTION_44	CALL_5
0x4000c0d	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      1000	intel_panel.c	FUNCTION_44	CALL_5
0x4000c13	          0xc1e508	                              shl ebp, 8	      1000	intel_panel.c	FUNCTION_44	CALL_5
0x4000c16	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1000	intel_panel.c	FUNCTION_44	CALL_5
0x4000c1d	          0x4889df	                            mov rdi, rbx	      1000	intel_panel.c	FUNCTION_44	CALL_5
0x4000c20	    0x8db415501206	          lea esi, [rbp + rdx + 0x61250]	      1000	intel_panel.c	FUNCTION_44	CALL_5
0x4000c27	      0xba01000000	                              mov edx, 1	      1000	intel_panel.c	FUNCTION_44	CALL_5
0x4000c2c	      0xe800000000	                          call 0x4000c31	      1000	intel_panel.c	FUNCTION_44	CALL_5
0x4000c31	            0x85c0	                           test eax, eax	      1001	intel_panel.c	FUNCTION_44	IF_1
0x4000c33	     0xf88d3000000	                            js 0x4000d0c	      1001	intel_panel.c	FUNCTION_44	IF_1
0x4000c39	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      1008	intel_panel.c	FUNCTION_44	CALL_10
0x4000c3f	    0x418b955c0400	           mov edx, dword [r13 + 0x45c] 	      1007	intel_panel.c	FUNCTION_44
0x4000c46	          0x4889df	                            mov rdi, rbx	      1008	intel_panel.c	FUNCTION_44	CALL_10
0x4000c49	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      1008	intel_panel.c	FUNCTION_44	CALL_10
0x4000c50	          0xc1e210	                           shl edx, 0x10	      1007	intel_panel.c	FUNCTION_44
0x4000c53	    0x8db40d541206	          lea esi, [rbp + rcx + 0x61254]	      1008	intel_panel.c	FUNCTION_44	CALL_10
0x4000c5a	      0xb901000000	                              mov ecx, 1	      1008	intel_panel.c	FUNCTION_44	CALL_10
0x4000c5f	      0xe800000000	                          call 0x4000c64	      1008	intel_panel.c	FUNCTION_44	CALL_10
0x4000c64	    0x418bb5540400	           mov esi, dword [r13 + 0x454] 	      1011	intel_panel.c	FUNCTION_44	CALL_11
0x4000c6b	          0x4c89e7	                            mov rdi, r12	      1011	intel_panel.c	FUNCTION_44	CALL_11
0x4000c6e	      0xe85df9ffff	call sym.intel_panel_actually_set_backlight	      1011	intel_panel.c	FUNCTION_44	CALL_11
0x4000c73	    0x4180bd620400	               cmp byte [r13 + 0x462], 1	      1014	intel_panel.c	FUNCTION_44	IF_2
0x4000c7b	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      1016	intel_panel.c	FUNCTION_44	CALL_13
0x4000c81	          0x4889df	                            mov rdi, rbx	      1016	intel_panel.c	FUNCTION_44	CALL_13
0x4000c84	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      1016	intel_panel.c	FUNCTION_44	CALL_13
0x4000c8b	    0x8db40d501206	          lea esi, [rbp + rcx + 0x61250]	      1016	intel_panel.c	FUNCTION_44	CALL_13
0x4000c92	      0xb901000000	                              mov ecx, 1	      1016	intel_panel.c	FUNCTION_44	CALL_13
0x4000c97	          0x4519e4	                          sbb r12d, r12d	      1014	intel_panel.c	FUNCTION_44	IF_2
0x4000c9a	    0x4181e4000000	                    and r12d, 0xf0000000	      1014	intel_panel.c	FUNCTION_44	IF_2
0x4000ca1	    0x4181ec000000	                    sub r12d, 0x70000000	      1014	intel_panel.c	FUNCTION_44	IF_2
0x4000ca8	    0x4180bd620400	               cmp byte [r13 + 0x462], 1	      1014	intel_panel.c	FUNCTION_44	IF_2
0x4000cb0	            0x19d2	                            sbb edx, edx	      1014	intel_panel.c	FUNCTION_44	IF_2
0x4000cb2	            0xf7d2	                                 not edx	      1014	intel_panel.c	FUNCTION_44	IF_2
0x4000cb4	    0x81e200000010	                     and edx, 0x10000000	      1014	intel_panel.c	FUNCTION_44	IF_2
0x4000cba	      0xe800000000	                          call 0x4000cbf	      1016	intel_panel.c	FUNCTION_44	CALL_13
0x4000cbf	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      1017	intel_panel.c	FUNCTION_44	CALL_15
0x4000cc5	          0x4889df	                            mov rdi, rbx	      1017	intel_panel.c	FUNCTION_44	CALL_15
0x4000cc8	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1017	intel_panel.c	FUNCTION_44	CALL_15
0x4000ccf	    0x8db415501206	          lea esi, [rbp + rdx + 0x61250]	      1017	intel_panel.c	FUNCTION_44	CALL_15
0x4000cd6	            0x31d2	                            xor edx, edx	      1017	intel_panel.c	FUNCTION_44	CALL_15
0x4000cd8	      0xe800000000	                          call 0x4000cdd	      1017	intel_panel.c	FUNCTION_44	CALL_15
0x4000cdd	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      1018	intel_panel.c	FUNCTION_44	CALL_17
0x4000ce3	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      1018	intel_panel.c	FUNCTION_44	CALL_17
0x4000cea	          0x4889df	                            mov rdi, rbx	      1018	intel_panel.c	FUNCTION_44	CALL_17
0x4000ced	      0xb901000000	                              mov ecx, 1	      1018	intel_panel.c	FUNCTION_44	CALL_17
0x4000cf2	    0x8db415501206	          lea esi, [rbp + rdx + 0x61250]	      1018	intel_panel.c	FUNCTION_44	CALL_17
0x4000cf9	          0x4489e2	                           mov edx, r12d	      1018	intel_panel.c	FUNCTION_44	CALL_17
0x4000cfc	      0xe800000000	                          call 0x4000d01	      1018	intel_panel.c	FUNCTION_44	CALL_17
0x4000d01	        0x4883c408	                              add rsp, 8	      1019	intel_panel.c	FUNCTION_44
0x4000d05	              0x5b	                                 pop rbx	      1019	intel_panel.c	FUNCTION_44
0x4000d06	              0x5d	                                 pop rbp	      1019	intel_panel.c	FUNCTION_44
0x4000d07	            0x415c	                                 pop r12	      1019	intel_panel.c	FUNCTION_44
0x4000d09	            0x415d	                                 pop r13	      1019	intel_panel.c	FUNCTION_44
0x4000d0b	              0xc3	                                     ret	      1019	intel_panel.c	FUNCTION_44
0x4000d0c	    0x48c7c6000000	                              mov rsi, 0	      1002	intel_panel.c	FUNCTION_44	IF_1	CALL_6
0x4000d13	      0xbf04000000	                              mov edi, 4	      1002	intel_panel.c	FUNCTION_44	IF_1	CALL_6
0x4000d18	        0x89442404	                mov dword [rsp + 4], eax	      1002	intel_panel.c	FUNCTION_44	IF_1	CALL_6
0x4000d1c	      0xe800000000	                          call 0x4000d21	      1002	intel_panel.c	FUNCTION_44	IF_1	CALL_6
0x4000d21	        0x8b442404	                mov eax, dword [rsp + 4]	      1004	intel_panel.c	FUNCTION_44	IF_1	CALL_8
0x4000d25	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      1004	intel_panel.c	FUNCTION_44	IF_1	CALL_8
0x4000d2b	      0xb901000000	                              mov ecx, 1	      1004	intel_panel.c	FUNCTION_44	IF_1	CALL_8
0x4000d30	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      1004	intel_panel.c	FUNCTION_44	IF_1	CALL_8
0x4000d37	          0x4889df	                            mov rdi, rbx	      1004	intel_panel.c	FUNCTION_44	IF_1	CALL_8
0x4000d3a	      0x25ffffff7f	                     and eax, 0x7fffffff	      1004	intel_panel.c	FUNCTION_44	IF_1	CALL_8
0x4000d3f	    0x8db415501206	          lea esi, [rbp + rdx + 0x61250]	      1004	intel_panel.c	FUNCTION_44	IF_1	CALL_8
0x4000d46	            0x89c2	                            mov edx, eax	      1004	intel_panel.c	FUNCTION_44	IF_1	CALL_8
0x4000d48	      0xe800000000	                          call 0x4000d4d	      1004	intel_panel.c	FUNCTION_44	IF_1	CALL_8
0x4000d4d	      0xe9e7feffff	                           jmp 0x4000c39	      1004	intel_panel.c	FUNCTION_44	IF_1	CALL_8
get_backlight_min_vbt	DO,0:WHILE,0:SWITCH,0:IF,1:functions,0:CALL,4:FOR,0:ELSE,0	30
0x40008c0	              0x55	                                push rbp	      1479	intel_panel.c	FUNCTION_64
0x40008c1	              0x53	                                push rbx	      1479	intel_panel.c	FUNCTION_64
0x40008c2	          0x4889fd	                            mov rbp, rdi	      1479	intel_panel.c	FUNCTION_64
0x40008c5	    0x8b875c040000	           mov eax, dword [rdi + 0x45c] 	      1484	intel_panel.c	FUNCTION_64
0x40008cb	          0x488b1f	                    mov rbx, qword [rdi]	      1480	intel_panel.c	FUNCTION_64	CALL_1
0x40008ce	            0x85c0	                           test eax, eax	      1484	intel_panel.c	FUNCTION_64
0x40008d0	            0x7442	                            je 0x4000914	      1484	intel_panel.c	FUNCTION_64
0x40008d2	     0xfb693444d00	         movzx edx, byte [rbx + 0x4d44] 	      1493	intel_panel.c	FUNCTION_64	CALL_2
0x40008d9	      0xbb40000000	                           mov ebx, 0x40	      1493	intel_panel.c	FUNCTION_64	CALL_2
0x40008de	          0x83fa40	                           cmp edx, 0x40	      1493	intel_panel.c	FUNCTION_64	CALL_2
0x40008e1	           0xf4eda	                         cmovle ebx, edx	      1493	intel_panel.c	FUNCTION_64	CALL_2
0x40008e4	            0x39da	                            cmp edx, ebx	      1494	intel_panel.c	FUNCTION_64	IF_1
0x40008e6	            0x7413	                            je 0x40008fb	      1494	intel_panel.c	FUNCTION_64	IF_1
0x40008e8	            0x89d9	                            mov ecx, ebx	      1495	intel_panel.c	FUNCTION_64	IF_1	CALL_3
0x40008ea	    0x48c7c6000000	                              mov rsi, 0	      1495	intel_panel.c	FUNCTION_64	IF_1	CALL_3
0x40008f1	      0xbf04000000	                              mov edi, 4	      1495	intel_panel.c	FUNCTION_64	IF_1	CALL_3
0x40008f6	      0xe800000000	                          call 0x40008fb	      1495	intel_panel.c	FUNCTION_64	IF_1	CALL_3
0x40008fb	    0x448b855c0400	           mov r8d, dword [rbp + 0x45c] 	      1500	intel_panel.c	FUNCTION_64	CALL_4
0x4000902	            0x89df	                            mov edi, ebx	      1500	intel_panel.c	FUNCTION_64	CALL_4
0x4000904	            0x31c9	                            xor ecx, ecx	      1500	intel_panel.c	FUNCTION_64	CALL_4
0x4000906	              0x5b	                                 pop rbx	      1501	intel_panel.c	FUNCTION_64
0x4000907	              0x5d	                                 pop rbp	      1501	intel_panel.c	FUNCTION_64
0x4000908	      0xbaff000000	                           mov edx, 0xff	      1500	intel_panel.c	FUNCTION_64	CALL_4
0x400090d	            0x31f6	                            xor esi, esi	      1500	intel_panel.c	FUNCTION_64	CALL_4
0x400090f	      0xe93cfbffff	                           jmp sym.scale	      1500	intel_panel.c	FUNCTION_64	CALL_4
0x4000914	    0x48c7c6000000	                              mov rsi, 0	      1484	intel_panel.c	FUNCTION_64
0x400091b	    0x48c7c7000000	                              mov rdi, 0	      1484	intel_panel.c	FUNCTION_64
0x4000922	      0xe800000000	                          call 0x4000927	      1484	intel_panel.c	FUNCTION_64
0x4000927	             0xf0b	                                     ud2	      1484	intel_panel.c	FUNCTION_64
0x4000929	            0xeba7	                           jmp 0x40008d2	      1484	intel_panel.c	FUNCTION_64
vlv_setup_backlight	DO,0:WHILE,0:SWITCH,0:IF,3:functions,0:CALL,10:FOR,0:ELSE,0	75
0x40019d0	          0x83fe01	                              cmp esi, 1	      1651	intel_panel.c	FUNCTION_69	IF_1
0x40019d3	            0x4156	                                push r14	      1646	intel_panel.c	FUNCTION_69
0x40019d5	            0x4155	                                push r13	      1646	intel_panel.c	FUNCTION_69
0x40019d7	            0x4154	                                push r12	      1646	intel_panel.c	FUNCTION_69
0x40019d9	              0x55	                                push rbp	      1646	intel_panel.c	FUNCTION_69
0x40019da	              0x53	                                push rbx	      1646	intel_panel.c	FUNCTION_69
0x40019db	          0x488b2f	                    mov rbp, qword [rdi]	      1647	intel_panel.c	FUNCTION_69	CALL_1
0x40019de	     0xf87df000000	                            ja 0x4001ac3	      1651	intel_panel.c	FUNCTION_69	IF_1
0x40019e4	    0x8b956c060000	           mov edx, dword [rbp + 0x66c] 	      1654	intel_panel.c	FUNCTION_69	CALL_3
0x40019ea	          0x4189f6	                           mov r14d, esi	      1654	intel_panel.c	FUNCTION_69	CALL_3
0x40019ed	          0x4889fb	                            mov rbx, rdi	      1654	intel_panel.c	FUNCTION_69	CALL_3
0x40019f0	        0x41c1e608	                             shl r14d, 8	      1654	intel_panel.c	FUNCTION_69	CALL_3
0x40019f4	          0x4889ef	                            mov rdi, rbp	      1654	intel_panel.c	FUNCTION_69	CALL_3
0x40019f7	          0x4189f5	                           mov r13d, esi	      1654	intel_panel.c	FUNCTION_69	CALL_3
0x40019fa	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      1654	intel_panel.c	FUNCTION_69	CALL_3
0x4001a01	    0x418db4165012	          lea esi, [r14 + rdx + 0x61250]	      1654	intel_panel.c	FUNCTION_69	CALL_3
0x4001a09	      0xba01000000	                              mov edx, 1	      1654	intel_panel.c	FUNCTION_69	CALL_3
0x4001a0e	      0xe800000000	                          call 0x4001a13	      1654	intel_panel.c	FUNCTION_69	CALL_3
0x4001a13	          0x4189c4	                           mov r12d, eax	      1654	intel_panel.c	FUNCTION_69	CALL_3
0x4001a16	          0xc1e81c	                           shr eax, 0x1c	      1655	intel_panel.c	FUNCTION_69
0x4001a19	          0x4889ef	                            mov rdi, rbp	      1657	intel_panel.c	FUNCTION_69	CALL_5
0x4001a1c	          0x83e001	                              and eax, 1	      1655	intel_panel.c	FUNCTION_69
0x4001a1f	    0x888362040000	              mov byte [rbx + 0x462], al	      1655	intel_panel.c	FUNCTION_69
0x4001a25	    0x8b956c060000	           mov edx, dword [rbp + 0x66c] 	      1657	intel_panel.c	FUNCTION_69	CALL_5
0x4001a2b	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      1657	intel_panel.c	FUNCTION_69	CALL_5
0x4001a32	    0x418db4165412	          lea esi, [r14 + rdx + 0x61254]	      1657	intel_panel.c	FUNCTION_69	CALL_5
0x4001a3a	      0xba01000000	                              mov edx, 1	      1657	intel_panel.c	FUNCTION_69	CALL_5
0x4001a3f	      0xe800000000	                          call 0x4001a44	      1657	intel_panel.c	FUNCTION_69	CALL_5
0x4001a44	          0xc1e810	                           shr eax, 0x10	      1658	intel_panel.c	FUNCTION_69
0x4001a47	            0x85c0	                           test eax, eax	      1660	intel_panel.c	FUNCTION_69	IF_2
0x4001a49	    0x89835c040000	            mov dword [rbx + 0x45c], eax	      1658	intel_panel.c	FUNCTION_69
0x4001a4f	            0x7457	                            je 0x4001aa8	      1660	intel_panel.c	FUNCTION_69	IF_2
0x4001a51	          0x4889df	                            mov rdi, rbx	      1666	intel_panel.c	FUNCTION_69	CALL_7
0x4001a54	      0xe867eeffff	          call sym.get_backlight_min_vbt	      1666	intel_panel.c	FUNCTION_69	CALL_7
0x4001a59	          0x4489ee	                           mov esi, r13d	      1668	intel_panel.c	FUNCTION_69	CALL_8
0x4001a5c	          0x4889ef	                            mov rdi, rbp	      1668	intel_panel.c	FUNCTION_69	CALL_8
0x4001a5f	    0x898358040000	            mov dword [rbx + 0x458], eax	      1666	intel_panel.c	FUNCTION_69	CALL_7
0x4001a65	      0xe8a6eaffff	             call sym._vlv_get_backlight	      1668	intel_panel.c	FUNCTION_69	CALL_8
0x4001a6a	          0x4889df	                            mov rdi, rbx	      1669	intel_panel.c	FUNCTION_69	CALL_9
0x4001a6d	            0x89c6	                            mov esi, eax	      1669	intel_panel.c	FUNCTION_69	CALL_9
0x4001a6f	      0xe8eceaffff	 call sym.intel_panel_compute_brightness	      1669	intel_panel.c	FUNCTION_69	CALL_9
0x4001a74	    0x398358040000	           cmp dword [rbx + 0x458], eax 	      1670	intel_panel.c	FUNCTION_69	CALL_10
0x4001a7a	    0x8b935c040000	           mov edx, dword [rbx + 0x45c] 	      1670	intel_panel.c	FUNCTION_69	CALL_10
0x4001a80	     0xf4383580400	         cmovae eax, dword [rbx + 0x458]	      1670	intel_panel.c	FUNCTION_69	CALL_10
0x4001a87	            0x39d0	                            cmp eax, edx	      1670	intel_panel.c	FUNCTION_69	CALL_10
0x4001a89	           0xf47c2	                          cmova eax, edx	      1670	intel_panel.c	FUNCTION_69	CALL_10
0x4001a8c	        0x41c1ec1f	                          shr r12d, 0x1f	      1673	intel_panel.c	FUNCTION_69
0x4001a90	    0x898354040000	            mov dword [rbx + 0x454], eax	      1670	intel_panel.c	FUNCTION_69	CALL_10
0x4001a96	    0x4488a3600400	            mov byte [rbx + 0x460], r12b	      1673	intel_panel.c	FUNCTION_69
0x4001a9d	            0x31c0	                            xor eax, eax	      1675	intel_panel.c	FUNCTION_69
0x4001a9f	              0x5b	                                 pop rbx	      1676	intel_panel.c	FUNCTION_69
0x4001aa0	              0x5d	                                 pop rbp	      1676	intel_panel.c	FUNCTION_69
0x4001aa1	            0x415c	                                 pop r12	      1676	intel_panel.c	FUNCTION_69
0x4001aa3	            0x415d	                                 pop r13	      1676	intel_panel.c	FUNCTION_69
0x4001aa5	            0x415e	                                 pop r14	      1676	intel_panel.c	FUNCTION_69
0x4001aa7	              0xc3	                                     ret	      1676	intel_panel.c	FUNCTION_69
0x4001aa8	          0x4889df	                            mov rdi, rbx	      1661	intel_panel.c	FUNCTION_69	CALL_6
0x4001aab	      0xe880feffff	          call sym.get_backlight_max_vbt	      1661	intel_panel.c	FUNCTION_69	CALL_6
0x4001ab0	            0x89c2	                            mov edx, eax	      1661	intel_panel.c	FUNCTION_69	CALL_6
0x4001ab2	    0x89835c040000	            mov dword [rbx + 0x45c], eax	      1661	intel_panel.c	FUNCTION_69	CALL_6
0x4001ab8	      0xb8edffffff	                     mov eax, 0xffffffed	      1664	intel_panel.c	FUNCTION_69	IF_3
0x4001abd	            0x85d2	                           test edx, edx	      1663	intel_panel.c	FUNCTION_69	IF_3
0x4001abf	            0x7590	                           jne 0x4001a51	      1663	intel_panel.c	FUNCTION_69	IF_3
0x4001ac1	            0xebdc	                           jmp 0x4001a9f	      1663	intel_panel.c	FUNCTION_69	IF_3
0x4001ac3	    0x48c7c6000000	                              mov rsi, 0	      1651	intel_panel.c	FUNCTION_69	IF_1
0x4001aca	    0x48c7c7000000	                              mov rdi, 0	      1651	intel_panel.c	FUNCTION_69	IF_1
0x4001ad1	      0xe800000000	                          call 0x4001ad6	      1651	intel_panel.c	FUNCTION_69	IF_1
0x4001ad6	             0xf0b	                                     ud2	      1651	intel_panel.c	FUNCTION_69	IF_1
0x4001ad8	      0xb8edffffff	                     mov eax, 0xffffffed	      1652	intel_panel.c	FUNCTION_69	IF_1
0x4001add	              0x5b	                                 pop rbx	      1676	intel_panel.c	FUNCTION_69
0x4001ade	              0x5d	                                 pop rbp	      1676	intel_panel.c	FUNCTION_69
0x4001adf	            0x415c	                                 pop r12	      1676	intel_panel.c	FUNCTION_69
0x4001ae1	            0x415d	                                 pop r13	      1676	intel_panel.c	FUNCTION_69
0x4001ae3	            0x415e	                                 pop r14	      1676	intel_panel.c	FUNCTION_69
0x4001ae5	              0xc3	                                     ret	      1676	intel_panel.c	FUNCTION_69
_vlv_get_backlight	DO,0:WHILE,0:SWITCH,0:IF,1:functions,0:CALL,2:FOR,0:ELSE,0	16
0x4000510	          0x83fe01	                              cmp esi, 1	       519	intel_panel.c	FUNCTION_19	IF_1
0x4000513	            0x7725	                            ja 0x400053a	       519	intel_panel.c	FUNCTION_19	IF_1
0x4000515	    0x8b976c060000	           mov edx, dword [rdi + 0x66c] 	       522	intel_panel.c	FUNCTION_19	CALL_2
0x400051b	          0xc1e608	                              shl esi, 8	       522	intel_panel.c	FUNCTION_19	CALL_2
0x400051e	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	       522	intel_panel.c	FUNCTION_19	CALL_2
0x4000525	    0x8db432541206	          lea esi, [rdx + rsi + 0x61254]	       522	intel_panel.c	FUNCTION_19	CALL_2
0x400052c	      0xba01000000	                              mov edx, 1	       522	intel_panel.c	FUNCTION_19	CALL_2
0x4000531	      0xe800000000	                          call 0x4000536	       522	intel_panel.c	FUNCTION_19	CALL_2
0x4000536	           0xfb7c0	                           movzx eax, ax	       522	intel_panel.c	FUNCTION_19	CALL_2
0x4000539	              0xc3	                                     ret	       523	intel_panel.c	FUNCTION_19
0x400053a	    0x48c7c6000000	                              mov rsi, 0	       519	intel_panel.c	FUNCTION_19	IF_1
0x4000541	    0x48c7c7000000	                              mov rdi, 0	       519	intel_panel.c	FUNCTION_19	IF_1
0x4000548	      0xe800000000	                          call 0x400054d	       519	intel_panel.c	FUNCTION_19	IF_1
0x400054d	             0xf0b	                                     ud2	       519	intel_panel.c	FUNCTION_19	IF_1
0x400054f	            0x31c0	                            xor eax, eax	       520	intel_panel.c	FUNCTION_19	IF_1
0x4000551	              0xc3	                                     ret	       520	intel_panel.c	FUNCTION_19	IF_1
i9xx_hz_to_pwm	DO,0:WHILE,0:SWITCH,0:IF,1:functions,0:CALL,5:FOR,0:ELSE,1	19
0x4000350	          0x488b07	                    mov rax, qword [rdi]	      1392	intel_panel.c	FUNCTION_60	CALL_1
0x4000353	    0xf68065060000	              test byte [rax + 0x665], 4	      1395	intel_panel.c	FUNCTION_60	IF_1	CALL_2
0x400035a	            0x7518	                           jne 0x4000374	      1395	intel_panel.c	FUNCTION_60	IF_1	CALL_2
0x400035c	    0x698014550000	   imul eax, dword [rax + 0x5514], 0x3e8	      1398	intel_panel.c	FUNCTION_60	CALL_4
0x4000366	          0xc1e605	                              shl esi, 5	      1400	intel_panel.c	FUNCTION_60	CALL_5
0x4000369	            0x89f2	                            mov edx, esi	      1400	intel_panel.c	FUNCTION_60	CALL_5
0x400036b	            0xd1ea	                              shr edx, 1	      1400	intel_panel.c	FUNCTION_60	CALL_5
0x400036d	             0x1d0	                            add eax, edx	      1400	intel_panel.c	FUNCTION_60	CALL_5
0x400036f	            0x31d2	                            xor edx, edx	      1400	intel_panel.c	FUNCTION_60	CALL_5
0x4000371	            0xf7f6	                                 div esi	      1400	intel_panel.c	FUNCTION_60	CALL_5
0x4000373	              0xc3	                                     ret	      1401	intel_panel.c	FUNCTION_60
0x4000374	    0x6980dc540000	   imul eax, dword [rax + 0x54dc], 0x3e8	      1396	intel_panel.c	FUNCTION_60	CALL_3
0x400037e	          0xc1e605	                              shl esi, 5	      1400	intel_panel.c	FUNCTION_60	CALL_5
0x4000381	            0x89f2	                            mov edx, esi	      1400	intel_panel.c	FUNCTION_60	CALL_5
0x4000383	            0xd1ea	                              shr edx, 1	      1400	intel_panel.c	FUNCTION_60	CALL_5
0x4000385	             0x1d0	                            add eax, edx	      1400	intel_panel.c	FUNCTION_60	CALL_5
0x4000387	            0x31d2	                            xor edx, edx	      1400	intel_panel.c	FUNCTION_60	CALL_5
0x4000389	            0xf7f6	                                 div esi	      1400	intel_panel.c	FUNCTION_60	CALL_5
0x400038b	              0xc3	                                     ret	      1401	intel_panel.c	FUNCTION_60
intel_fixed_panel_mode	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,2:FOR,0:ELSE,0	9
0x4002150	              0x53	                                push rbx	        43	intel_panel.c	FUNCTION_1
0x4002151	          0x4889f3	                            mov rbx, rsi	        43	intel_panel.c	FUNCTION_1
0x4002154	          0x4889fe	                            mov rsi, rdi	        44	intel_panel.c	FUNCTION_1	CALL_1
0x4002157	          0x4889df	                            mov rdi, rbx	        44	intel_panel.c	FUNCTION_1	CALL_1
0x400215a	      0xe800000000	                          call 0x400215f	        44	intel_panel.c	FUNCTION_1	CALL_1
0x400215f	          0x4889df	                            mov rdi, rbx	        46	intel_panel.c	FUNCTION_1	CALL_2
0x4002162	            0x31f6	                            xor esi, esi	        46	intel_panel.c	FUNCTION_1	CALL_2
0x4002164	              0x5b	                                 pop rbx	        47	intel_panel.c	FUNCTION_1
0x4002165	      0xe900000000	                           jmp 0x400216a	        46	intel_panel.c	FUNCTION_1	CALL_2
pwm_setup_backlight	DO,0:WHILE,0:SWITCH,0:IF,2:functions,0:CALL,9:FOR,0:ELSE,0	12
0x4001550	              0x55	                                push rbp	      1758	intel_panel.c	FUNCTION_72
0x4001551	              0x53	                                push rbx	      1758	intel_panel.c	FUNCTION_72
0x4001552	    0x48c7c3edffff	             mov rbx, 0xffffffffffffffed	      1764	intel_panel.c	FUNCTION_72	CALL_1
0x4001559	          0x4889fd	                            mov rbp, rdi	      1758	intel_panel.c	FUNCTION_72
0x400155c	    0x48899f680400	            mov qword [rdi + 0x468], rbx	      1764	intel_panel.c	FUNCTION_72	CALL_1
0x4001563	    0x48c7c7000000	                              mov rdi, 0	      1766	intel_panel.c	FUNCTION_72	IF_1	CALL_3
0x400156a	      0xe800000000	                          call 0x400156f	      1766	intel_panel.c	FUNCTION_72	IF_1	CALL_3
0x400156f	    0x48c785680400	              mov qword [rbp + 0x468], 0	      1767	intel_panel.c	FUNCTION_72	IF_1
0x400157a	            0x89d8	                            mov eax, ebx	      1794	intel_panel.c	FUNCTION_72
0x400157c	              0x5b	                                 pop rbx	      1794	intel_panel.c	FUNCTION_72
0x400157d	              0x5d	                                 pop rbp	      1794	intel_panel.c	FUNCTION_72
0x400157e	              0xc3	                                     ret	      1794	intel_panel.c	FUNCTION_72
bxt_disable_backlight	DO,0:WHILE,0:SWITCH,0:IF,1:functions,0:CALL,9:FOR,0:ELSE,0	42
0x4000810	              0x55	                                push rbp	       747	intel_panel.c	FUNCTION_36
0x4000811	              0x53	                                push rbx	       747	intel_panel.c	FUNCTION_36
0x4000812	            0x31f6	                            xor esi, esi	       753	intel_panel.c	FUNCTION_36	CALL_3
0x4000814	          0x488b1f	                    mov rbx, qword [rdi]	       748	intel_panel.c	FUNCTION_36	CALL_1
0x4000817	          0x488b2b	                    mov rbp, qword [rbx]	       749	intel_panel.c	FUNCTION_36	CALL_2
0x400081a	      0xe8b1fdffff	call sym.intel_panel_actually_set_backlight	       753	intel_panel.c	FUNCTION_36	CALL_3
0x400081f	     0xfb6b3650400	          movzx esi, byte [rbx + 0x465] 	       755	intel_panel.c	FUNCTION_36	CALL_5
0x4000826	      0xba01000000	                              mov edx, 1	       755	intel_panel.c	FUNCTION_36	CALL_5
0x400082b	          0x4889ef	                            mov rdi, rbp	       755	intel_panel.c	FUNCTION_36	CALL_5
0x400082e	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	       755	intel_panel.c	FUNCTION_36	CALL_5
0x4000835	          0xc1e608	                              shl esi, 8	       755	intel_panel.c	FUNCTION_36	CALL_5
0x4000838	    0x81c650820c00	                        add esi, 0xc8250	       755	intel_panel.c	FUNCTION_36	CALL_5
0x400083e	      0xe800000000	                          call 0x4000843	       755	intel_panel.c	FUNCTION_36	CALL_5
0x4000843	     0xfb6b3650400	          movzx esi, byte [rbx + 0x465] 	       756	intel_panel.c	FUNCTION_36	CALL_7
0x400084a	      0x25ffffff7f	                     and eax, 0x7fffffff	       756	intel_panel.c	FUNCTION_36	CALL_7
0x400084f	    0x4c8b85180800	            mov r8, qword [rbp + 0x818] 	       756	intel_panel.c	FUNCTION_36	CALL_7
0x4000856	            0x89c2	                            mov edx, eax	       756	intel_panel.c	FUNCTION_36	CALL_7
0x4000858	      0xb901000000	                              mov ecx, 1	       756	intel_panel.c	FUNCTION_36	CALL_7
0x400085d	          0x4889ef	                            mov rdi, rbp	       756	intel_panel.c	FUNCTION_36	CALL_7
0x4000860	          0xc1e608	                              shl esi, 8	       756	intel_panel.c	FUNCTION_36	CALL_7
0x4000863	    0x81c650820c00	                        add esi, 0xc8250	       756	intel_panel.c	FUNCTION_36	CALL_7
0x4000869	      0xe800000000	                          call 0x400086e	       756	intel_panel.c	FUNCTION_36	CALL_7
0x400086e	    0x80bb65040000	               cmp byte [rbx + 0x465], 1	       759	intel_panel.c	FUNCTION_36	IF_1
0x4000875	            0x7403	                            je 0x400087a	       759	intel_panel.c	FUNCTION_36	IF_1
0x4000877	              0x5b	                                 pop rbx	       764	intel_panel.c	FUNCTION_36
0x4000878	              0x5d	                                 pop rbp	       764	intel_panel.c	FUNCTION_36
0x4000879	              0xc3	                                     ret	       764	intel_panel.c	FUNCTION_36
0x400087a	          0x4889ef	                            mov rdi, rbp	       760	intel_panel.c	FUNCTION_36	IF_1	CALL_8
0x400087d	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	       760	intel_panel.c	FUNCTION_36	IF_1	CALL_8
0x4000884	      0xba01000000	                              mov edx, 1	       760	intel_panel.c	FUNCTION_36	IF_1	CALL_8
0x4000889	      0xbe00840400	                        mov esi, 0x48400	       760	intel_panel.c	FUNCTION_36	IF_1	CALL_8
0x400088e	      0xe800000000	                          call 0x4000893	       760	intel_panel.c	FUNCTION_36	IF_1	CALL_8
0x4000893	      0x25ffffff7f	                     and eax, 0x7fffffff	       762	intel_panel.c	FUNCTION_36	IF_1	CALL_9
0x4000898	    0x4c8b85180800	            mov r8, qword [rbp + 0x818] 	       762	intel_panel.c	FUNCTION_36	IF_1	CALL_9
0x400089f	          0x4889ef	                            mov rdi, rbp	       762	intel_panel.c	FUNCTION_36	IF_1	CALL_9
0x40008a2	            0x89c2	                            mov edx, eax	       762	intel_panel.c	FUNCTION_36	IF_1	CALL_9
0x40008a4	      0xb901000000	                              mov ecx, 1	       762	intel_panel.c	FUNCTION_36	IF_1	CALL_9
0x40008a9	      0xbe00840400	                        mov esi, 0x48400	       762	intel_panel.c	FUNCTION_36	IF_1	CALL_9
0x40008ae	      0xe800000000	                          call 0x40008b3	       762	intel_panel.c	FUNCTION_36	IF_1	CALL_9
0x40008b3	              0x5b	                                 pop rbx	       764	intel_panel.c	FUNCTION_36
0x40008b4	              0x5d	                                 pop rbp	       764	intel_panel.c	FUNCTION_36
0x40008b5	              0xc3	                                     ret	       764	intel_panel.c	FUNCTION_36
bxt_hz_to_pwm	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,2:FOR,0:ELSE,0	6
0x40002c0	            0x89f0	                            mov eax, esi	      1326	intel_panel.c	FUNCTION_56	CALL_2
0x40002c2	            0x31d2	                            xor edx, edx	      1326	intel_panel.c	FUNCTION_56	CALL_2
0x40002c4	            0xd1e8	                              shr eax, 1	      1326	intel_panel.c	FUNCTION_56	CALL_2
0x40002c6	       0x500f82401	                      add eax, 0x124f800	      1326	intel_panel.c	FUNCTION_56	CALL_2
0x40002cb	            0xf7f6	                                 div esi	      1326	intel_panel.c	FUNCTION_56	CALL_2
0x40002cd	              0xc3	                                     ret	      1327	intel_panel.c	FUNCTION_56
bxt_set_backlight	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,4:FOR,0:ELSE,0	10
0x4000260	          0x488b07	                    mov rax, qword [rdi]	       610	intel_panel.c	FUNCTION_27	CALL_1
0x4000263	            0x89f2	                            mov edx, esi	       609	intel_panel.c	FUNCTION_27
0x4000265	      0xb901000000	                              mov ecx, 1	       614	intel_panel.c	FUNCTION_27	CALL_4
0x400026a	          0x488b38	                    mov rdi, qword [rax]	       611	intel_panel.c	FUNCTION_27	CALL_2
0x400026d	     0xfb680650400	          movzx eax, byte [rax + 0x465] 	       614	intel_panel.c	FUNCTION_27	CALL_4
0x4000274	    0x4c8b87180800	            mov r8, qword [rdi + 0x818] 	       614	intel_panel.c	FUNCTION_27	CALL_4
0x400027b	          0xc1e008	                              shl eax, 8	       614	intel_panel.c	FUNCTION_27	CALL_4
0x400027e	    0x8db058820c00	                lea esi, [rax + 0xc8258]	       614	intel_panel.c	FUNCTION_27	CALL_4
0x4000284	      0xe800000000	                          call 0x4000289	       614	intel_panel.c	FUNCTION_27	CALL_4
0x4000289	            0xf3c3	                                     ret	       614	intel_panel.c	FUNCTION_27	CALL_4
scale	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,3:FOR,0:ELSE,0	54
0x4000450	              0x55	                                push rbp	       412	intel_panel.c	FUNCTION_11
0x4000451	              0x53	                                push rbx	       412	intel_panel.c	FUNCTION_11
0x4000452	            0x89fd	                            mov ebp, edi	       412	intel_panel.c	FUNCTION_11
0x4000454	            0x89f3	                            mov ebx, esi	       412	intel_panel.c	FUNCTION_11
0x4000456	        0x4883ec10	                           sub rsp, 0x10	       412	intel_panel.c	FUNCTION_11
0x400045a	            0x39d6	                            cmp esi, edx	       415	intel_panel.c	FUNCTION_11
0x400045c	            0x773d	                            ja 0x400049b	       415	intel_panel.c	FUNCTION_11
0x400045e	          0x4439c1	                            cmp ecx, r8d	       416	intel_panel.c	FUNCTION_11
0x4000461	            0x776c	                            ja 0x40004cf	       416	intel_panel.c	FUNCTION_11
0x4000463	            0x39eb	                            cmp ebx, ebp	       419	intel_panel.c	FUNCTION_11	CALL_1
0x4000465	          0x4189d1	                            mov r9d, edx	       424	intel_panel.c	FUNCTION_11	CALL_3
0x4000468	          0x4489c0	                            mov eax, r8d	       424	intel_panel.c	FUNCTION_11	CALL_3
0x400046b	           0xf43eb	                         cmovae ebp, ebx	       419	intel_panel.c	FUNCTION_11	CALL_1
0x400046e	          0x4129d9	                            sub r9d, ebx	       424	intel_panel.c	FUNCTION_11	CALL_3
0x4000471	            0x39ea	                            cmp edx, ebp	       424	intel_panel.c	FUNCTION_11	CALL_3
0x4000473	          0x4489ce	                            mov esi, r9d	       424	intel_panel.c	FUNCTION_11	CALL_3
0x4000476	           0xf47d5	                          cmova edx, ebp	       424	intel_panel.c	FUNCTION_11	CALL_3
0x4000479	            0x29c8	                            sub eax, ecx	       424	intel_panel.c	FUNCTION_11	CALL_3
0x400047b	            0xd1ee	                              shr esi, 1	       424	intel_panel.c	FUNCTION_11	CALL_3
0x400047d	            0x29da	                            sub edx, ebx	       424	intel_panel.c	FUNCTION_11	CALL_3
0x400047f	        0x4883c410	                           add rsp, 0x10	       428	intel_panel.c	FUNCTION_11
0x4000483	            0x89c9	                            mov ecx, ecx	       427	intel_panel.c	FUNCTION_11
0x4000485	        0x480fafd0	                           imul rdx, rax	       424	intel_panel.c	FUNCTION_11	CALL_3
0x4000489	              0x5b	                                 pop rbx	       428	intel_panel.c	FUNCTION_11
0x400048a	              0x5d	                                 pop rbp	       428	intel_panel.c	FUNCTION_11
0x400048b	        0x488d0432	                    lea rax, [rdx + rsi]	       424	intel_panel.c	FUNCTION_11	CALL_3
0x400048f	          0x4489ce	                            mov esi, r9d	       424	intel_panel.c	FUNCTION_11	CALL_3
0x4000492	            0x31d2	                            xor edx, edx	       424	intel_panel.c	FUNCTION_11	CALL_3
0x4000494	          0x48f7f6	                                 div rsi	       424	intel_panel.c	FUNCTION_11	CALL_3
0x4000497	          0x4801c8	                            add rax, rcx	       427	intel_panel.c	FUNCTION_11
0x400049a	              0xc3	                                     ret	       428	intel_panel.c	FUNCTION_11
0x400049b	    0x48c7c6000000	                              mov rsi, 0	       415	intel_panel.c	FUNCTION_11
0x40004a2	    0x48c7c7000000	                              mov rdi, 0	       415	intel_panel.c	FUNCTION_11
0x40004a9	      0x448944240c	              mov dword [rsp + 0xc], r8d	       415	intel_panel.c	FUNCTION_11
0x40004ae	        0x894c2408	                mov dword [rsp + 8], ecx	       415	intel_panel.c	FUNCTION_11
0x40004b2	        0x89542404	                mov dword [rsp + 4], edx	       415	intel_panel.c	FUNCTION_11
0x40004b6	      0xe800000000	                          call 0x40004bb	       415	intel_panel.c	FUNCTION_11
0x40004bb	             0xf0b	                                     ud2	       415	intel_panel.c	FUNCTION_11
0x40004bd	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	       415	intel_panel.c	FUNCTION_11
0x40004c2	        0x8b4c2408	                mov ecx, dword [rsp + 8]	       415	intel_panel.c	FUNCTION_11
0x40004c6	        0x8b542404	                mov edx, dword [rsp + 4]	       415	intel_panel.c	FUNCTION_11
0x40004ca	          0x4439c1	                            cmp ecx, r8d	       416	intel_panel.c	FUNCTION_11
0x40004cd	            0x7694	                           jbe 0x4000463	       416	intel_panel.c	FUNCTION_11
0x40004cf	    0x48c7c6000000	                              mov rsi, 0	       416	intel_panel.c	FUNCTION_11
0x40004d6	    0x48c7c7000000	                              mov rdi, 0	       416	intel_panel.c	FUNCTION_11
0x40004dd	      0x448944240c	              mov dword [rsp + 0xc], r8d	       416	intel_panel.c	FUNCTION_11
0x40004e2	        0x894c2408	                mov dword [rsp + 8], ecx	       416	intel_panel.c	FUNCTION_11
0x40004e6	        0x89542404	                mov dword [rsp + 4], edx	       416	intel_panel.c	FUNCTION_11
0x40004ea	      0xe800000000	                          call 0x40004ef	       416	intel_panel.c	FUNCTION_11
0x40004ef	             0xf0b	                                     ud2	       416	intel_panel.c	FUNCTION_11
0x40004f1	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	       416	intel_panel.c	FUNCTION_11
0x40004f6	        0x8b4c2408	                mov ecx, dword [rsp + 8]	       416	intel_panel.c	FUNCTION_11
0x40004fa	        0x8b542404	                mov edx, dword [rsp + 4]	       416	intel_panel.c	FUNCTION_11
0x40004fe	      0xe960ffffff	                           jmp 0x4000463	       416	intel_panel.c	FUNCTION_11
cnp_hz_to_pwm	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,3:FOR,0:ELSE,0	8
0x40002a0	          0x488b07	                    mov rax, qword [rdi]	      1318	intel_panel.c	FUNCTION_55	CALL_3
0x40002a3	    0x6990dc540000	   imul edx, dword [rax + 0x54dc], 0x3e8	      1318	intel_panel.c	FUNCTION_55	CALL_3
0x40002ad	            0x89f0	                            mov eax, esi	      1318	intel_panel.c	FUNCTION_55	CALL_3
0x40002af	            0xd1e8	                              shr eax, 1	      1318	intel_panel.c	FUNCTION_55	CALL_3
0x40002b1	             0x1d0	                            add eax, edx	      1318	intel_panel.c	FUNCTION_55	CALL_3
0x40002b3	            0x31d2	                            xor edx, edx	      1318	intel_panel.c	FUNCTION_55	CALL_3
0x40002b5	            0xf7f6	                                 div esi	      1318	intel_panel.c	FUNCTION_55	CALL_3
0x40002b7	              0xc3	                                     ret	      1319	intel_panel.c	FUNCTION_55
pch_disable_backlight	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,7:FOR,0:ELSE,0	31
0x4000710	              0x53	                                push rbx	       703	intel_panel.c	FUNCTION_32
0x4000711	          0x488b07	                    mov rax, qword [rdi]	       705	intel_panel.c	FUNCTION_32	CALL_2
0x4000714	            0x31f6	                            xor esi, esi	       708	intel_panel.c	FUNCTION_32	CALL_3
0x4000716	          0x488b18	                    mov rbx, qword [rax]	       705	intel_panel.c	FUNCTION_32	CALL_2
0x4000719	      0xe8b2feffff	call sym.intel_panel_actually_set_backlight	       708	intel_panel.c	FUNCTION_32	CALL_3
0x400071e	      0xba01000000	                              mov edx, 1	       710	intel_panel.c	FUNCTION_32	CALL_4
0x4000723	      0xbe50820400	                        mov esi, 0x48250	       710	intel_panel.c	FUNCTION_32	CALL_4
0x4000728	          0x4889df	                            mov rdi, rbx	       710	intel_panel.c	FUNCTION_32	CALL_4
0x400072b	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       710	intel_panel.c	FUNCTION_32	CALL_4
0x4000732	      0xe800000000	                          call 0x4000737	       710	intel_panel.c	FUNCTION_32	CALL_4
0x4000737	      0x25ffffff7f	                     and eax, 0x7fffffff	       711	intel_panel.c	FUNCTION_32	CALL_5
0x400073c	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       711	intel_panel.c	FUNCTION_32	CALL_5
0x4000743	      0xb901000000	                              mov ecx, 1	       711	intel_panel.c	FUNCTION_32	CALL_5
0x4000748	            0x89c2	                            mov edx, eax	       711	intel_panel.c	FUNCTION_32	CALL_5
0x400074a	          0x4889df	                            mov rdi, rbx	       711	intel_panel.c	FUNCTION_32	CALL_5
0x400074d	      0xbe50820400	                        mov esi, 0x48250	       711	intel_panel.c	FUNCTION_32	CALL_5
0x4000752	      0xe800000000	                          call 0x4000757	       711	intel_panel.c	FUNCTION_32	CALL_5
0x4000757	          0x4889df	                            mov rdi, rbx	       713	intel_panel.c	FUNCTION_32	CALL_6
0x400075a	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       713	intel_panel.c	FUNCTION_32	CALL_6
0x4000761	      0xba01000000	                              mov edx, 1	       713	intel_panel.c	FUNCTION_32	CALL_6
0x4000766	      0xbe50820c00	                        mov esi, 0xc8250	       713	intel_panel.c	FUNCTION_32	CALL_6
0x400076b	      0xe800000000	                          call 0x4000770	       713	intel_panel.c	FUNCTION_32	CALL_6
0x4000770	      0x25ffffff7f	                     and eax, 0x7fffffff	       714	intel_panel.c	FUNCTION_32	CALL_7
0x4000775	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       714	intel_panel.c	FUNCTION_32	CALL_7
0x400077c	          0x4889df	                            mov rdi, rbx	       714	intel_panel.c	FUNCTION_32	CALL_7
0x400077f	            0x89c2	                            mov edx, eax	       714	intel_panel.c	FUNCTION_32	CALL_7
0x4000781	      0xb901000000	                              mov ecx, 1	       714	intel_panel.c	FUNCTION_32	CALL_7
0x4000786	      0xbe50820c00	                        mov esi, 0xc8250	       714	intel_panel.c	FUNCTION_32	CALL_7
0x400078b	      0xe800000000	                          call 0x4000790	       714	intel_panel.c	FUNCTION_32	CALL_7
0x4000790	              0x5b	                                 pop rbx	       715	intel_panel.c	FUNCTION_32
0x4000791	              0xc3	                                     ret	       715	intel_panel.c	FUNCTION_32
i9xx_set_backlight	DO,0:WHILE,0:SWITCH,0:IF,2:functions,0:CALL,6:FOR,0:ELSE,1	54
0x4001820	            0x4154	                                push r12	       570	intel_panel.c	FUNCTION_25
0x4001822	              0x55	                                push rbp	       570	intel_panel.c	FUNCTION_25
0x4001823	            0x89f5	                            mov ebp, esi	       570	intel_panel.c	FUNCTION_25
0x4001825	              0x53	                                push rbx	       570	intel_panel.c	FUNCTION_25
0x4001826	          0x4c8b27	                    mov r12, qword [rdi]	       571	intel_panel.c	FUNCTION_25	CALL_1
0x4001829	    0x418b84245c04	           mov eax, dword [r12 + 0x45c] 	       576	intel_panel.c	FUNCTION_25
0x4001831	        0x498b1c24	                    mov rbx, qword [r12]	       572	intel_panel.c	FUNCTION_25	CALL_2
0x4001835	            0x85c0	                           test eax, eax	       576	intel_panel.c	FUNCTION_25
0x4001837	     0xf84a4000000	                            je 0x40018e1	       576	intel_panel.c	FUNCTION_25
0x400183d	    0x4180bc246104	               cmp byte [r12 + 0x461], 0	       578	intel_panel.c	FUNCTION_25	IF_1
0x4001846	            0x7563	                           jne 0x40018ab	       578	intel_panel.c	FUNCTION_25	IF_1
0x4001848	    0xf6835a060000	              test byte [rbx + 0x65a], 8	       586	intel_panel.c	FUNCTION_25	IF_2	CALL_4
0x400184f	    0x41bc0000ffff	                    mov r12d, 0xffff0000	       586	intel_panel.c	FUNCTION_25	IF_2	CALL_4
0x4001855	            0x7508	                           jne 0x400185f	       586	intel_panel.c	FUNCTION_25	IF_2	CALL_4
0x4001857	             0x1ed	                            add ebp, ebp	       589	intel_panel.c	FUNCTION_25	ELSE_1
0x4001859	    0x41bc0100ffff	                    mov r12d, 0xffff0001	       589	intel_panel.c	FUNCTION_25	ELSE_1
0x400185f	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	       593	intel_panel.c	FUNCTION_25	CALL_5
0x4001865	          0x4889df	                            mov rdi, rbx	       593	intel_panel.c	FUNCTION_25	CALL_5
0x4001868	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       593	intel_panel.c	FUNCTION_25	CALL_5
0x400186f	      0xba01000000	                              mov edx, 1	       593	intel_panel.c	FUNCTION_25	CALL_5
0x4001874	    0x8db154120600	                lea esi, [rcx + 0x61254]	       593	intel_panel.c	FUNCTION_25	CALL_5
0x400187a	      0xe800000000	                          call 0x400187f	       593	intel_panel.c	FUNCTION_25	CALL_5
0x400187f	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	       594	intel_panel.c	FUNCTION_25	CALL_6
0x4001885	          0x4421e0	                           and eax, r12d	       594	intel_panel.c	FUNCTION_25	CALL_6
0x4001888	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       594	intel_panel.c	FUNCTION_25	CALL_6
0x400188f	            0x89c2	                            mov edx, eax	       594	intel_panel.c	FUNCTION_25	CALL_6
0x4001891	          0x4889df	                            mov rdi, rbx	       594	intel_panel.c	FUNCTION_25	CALL_6
0x4001894	             0x9ea	                             or edx, ebp	       594	intel_panel.c	FUNCTION_25	CALL_6
0x4001896	    0x8db154120600	                lea esi, [rcx + 0x61254]	       594	intel_panel.c	FUNCTION_25	CALL_6
0x400189c	      0xb901000000	                              mov ecx, 1	       594	intel_panel.c	FUNCTION_25	CALL_6
0x40018a1	      0xe800000000	                          call 0x40018a6	       594	intel_panel.c	FUNCTION_25	CALL_6
0x40018a6	              0x5b	                                 pop rbx	       595	intel_panel.c	FUNCTION_25
0x40018a7	              0x5d	                                 pop rbp	       595	intel_panel.c	FUNCTION_25
0x40018a8	            0x415c	                                 pop r12	       595	intel_panel.c	FUNCTION_25
0x40018aa	              0xc3	                                     ret	       595	intel_panel.c	FUNCTION_25
0x40018ab	    0x69c5fe000000	                     imul eax, ebp, 0xfe	       581	intel_panel.c	FUNCTION_25	IF_1
0x40018b1	            0x31d2	                            xor edx, edx	       581	intel_panel.c	FUNCTION_25	IF_1
0x40018b3	    0x488bbbc00100	           mov rdi, qword [rbx + 0x1c0] 	       583	intel_panel.c	FUNCTION_25	IF_1	CALL_3
0x40018ba	      0xbef4000000	                           mov esi, 0xf4	       583	intel_panel.c	FUNCTION_25	IF_1	CALL_3
0x40018bf	    0x41f7b4245c04	                 div dword [r12 + 0x45c]	       581	intel_panel.c	FUNCTION_25	IF_1
0x40018c7	            0x31d2	                            xor edx, edx	       582	intel_panel.c	FUNCTION_25	IF_1
0x40018c9	          0x83c001	                              add eax, 1	       581	intel_panel.c	FUNCTION_25	IF_1
0x40018cc	           0xfb6c8	                           movzx ecx, al	       582	intel_panel.c	FUNCTION_25	IF_1
0x40018cf	            0x89e8	                            mov eax, ebp	       582	intel_panel.c	FUNCTION_25	IF_1
0x40018d1	            0xf7f1	                                 div ecx	       582	intel_panel.c	FUNCTION_25	IF_1
0x40018d3	            0x89ca	                            mov edx, ecx	       583	intel_panel.c	FUNCTION_25	IF_1	CALL_3
0x40018d5	            0x89c5	                            mov ebp, eax	       582	intel_panel.c	FUNCTION_25	IF_1
0x40018d7	      0xe800000000	                          call 0x40018dc	       583	intel_panel.c	FUNCTION_25	IF_1	CALL_3
0x40018dc	      0xe967ffffff	                           jmp 0x4001848	       583	intel_panel.c	FUNCTION_25	IF_1	CALL_3
0x40018e1	    0x48c7c6000000	                              mov rsi, 0	       576	intel_panel.c	FUNCTION_25
0x40018e8	    0x48c7c7000000	                              mov rdi, 0	       576	intel_panel.c	FUNCTION_25
0x40018ef	      0xe800000000	                          call 0x40018f4	       576	intel_panel.c	FUNCTION_25
0x40018f4	             0xf0b	                                     ud2	       576	intel_panel.c	FUNCTION_25
0x40018f6	      0xe942ffffff	                           jmp 0x400183d	       576	intel_panel.c	FUNCTION_25
cnp_enable_backlight	DO,0:WHILE,0:SWITCH,0:IF,2:functions,0:CALL,16:FOR,0:ELSE,0	77
0x40011d0	            0x4154	                                push r12	      1071	intel_panel.c	FUNCTION_46
0x40011d2	              0x55	                                push rbp	      1071	intel_panel.c	FUNCTION_46
0x40011d3	          0x4989f4	                            mov r12, rsi	      1071	intel_panel.c	FUNCTION_46
0x40011d6	              0x53	                                push rbx	      1071	intel_panel.c	FUNCTION_46
0x40011d7	      0xba01000000	                              mov edx, 1	      1077	intel_panel.c	FUNCTION_46	CALL_4
0x40011dc	        0x4883ec08	                              sub rsp, 8	      1071	intel_panel.c	FUNCTION_46
0x40011e0	          0x488b2e	                    mov rbp, qword [rsi]	      1072	intel_panel.c	FUNCTION_46	CALL_1
0x40011e3	     0xfb6b5650400	          movzx esi, byte [rbp + 0x465] 	      1077	intel_panel.c	FUNCTION_46	CALL_4
0x40011ea	        0x488b5d00	                    mov rbx, qword [rbp]	      1073	intel_panel.c	FUNCTION_46	CALL_2
0x40011ee	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1077	intel_panel.c	FUNCTION_46	CALL_4
0x40011f5	          0x4889df	                            mov rdi, rbx	      1077	intel_panel.c	FUNCTION_46	CALL_4
0x40011f8	          0xc1e608	                              shl esi, 8	      1077	intel_panel.c	FUNCTION_46	CALL_4
0x40011fb	    0x81c650820c00	                        add esi, 0xc8250	      1077	intel_panel.c	FUNCTION_46	CALL_4
0x4001201	      0xe800000000	                          call 0x4001206	      1077	intel_panel.c	FUNCTION_46	CALL_4
0x4001206	            0x85c0	                           test eax, eax	      1078	intel_panel.c	FUNCTION_46	IF_1
0x4001208	     0xf88d6000000	                            js 0x40012e4	      1078	intel_panel.c	FUNCTION_46	IF_1
0x400120e	     0xfb6b5650400	          movzx esi, byte [rbp + 0x465] 	      1085	intel_panel.c	FUNCTION_46	CALL_9
0x4001215	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      1085	intel_panel.c	FUNCTION_46	CALL_9
0x400121c	      0xb901000000	                              mov ecx, 1	      1085	intel_panel.c	FUNCTION_46	CALL_9
0x4001221	    0x8b955c040000	           mov edx, dword [rbp + 0x45c] 	      1085	intel_panel.c	FUNCTION_46	CALL_9
0x4001227	          0x4889df	                            mov rdi, rbx	      1085	intel_panel.c	FUNCTION_46	CALL_9
0x400122a	          0xc1e608	                              shl esi, 8	      1085	intel_panel.c	FUNCTION_46	CALL_9
0x400122d	    0x81c654820c00	                        add esi, 0xc8254	      1085	intel_panel.c	FUNCTION_46	CALL_9
0x4001233	      0xe800000000	                          call 0x4001238	      1085	intel_panel.c	FUNCTION_46	CALL_9
0x4001238	    0x8bb554040000	           mov esi, dword [rbp + 0x454] 	      1088	intel_panel.c	FUNCTION_46	CALL_10
0x400123e	          0x4c89e7	                            mov rdi, r12	      1088	intel_panel.c	FUNCTION_46	CALL_10
0x4001241	      0xe88af3ffff	call sym.intel_panel_actually_set_backlight	      1088	intel_panel.c	FUNCTION_46	CALL_10
0x4001246	    0x80bd62040000	               cmp byte [rbp + 0x462], 1	      1091	intel_panel.c	FUNCTION_46	IF_2
0x400124d	     0xfb6b5650400	          movzx esi, byte [rbp + 0x465] 	      1094	intel_panel.c	FUNCTION_46	CALL_12
0x4001254	      0xb901000000	                              mov ecx, 1	      1094	intel_panel.c	FUNCTION_46	CALL_12
0x4001259	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      1094	intel_panel.c	FUNCTION_46	CALL_12
0x4001260	          0x4889df	                            mov rdi, rbx	      1094	intel_panel.c	FUNCTION_46	CALL_12
0x4001263	          0x4519e4	                          sbb r12d, r12d	      1091	intel_panel.c	FUNCTION_46	IF_2
0x4001266	    0x4181e4000000	                    and r12d, 0xe0000000	      1091	intel_panel.c	FUNCTION_46	IF_2
0x400126d	    0x4181ec000000	                    sub r12d, 0x60000000	      1091	intel_panel.c	FUNCTION_46	IF_2
0x4001274	    0x80bd62040000	               cmp byte [rbp + 0x462], 1	      1091	intel_panel.c	FUNCTION_46	IF_2
0x400127b	            0x19d2	                            sbb edx, edx	      1091	intel_panel.c	FUNCTION_46	IF_2
0x400127d	          0xc1e608	                              shl esi, 8	      1094	intel_panel.c	FUNCTION_46	CALL_12
0x4001280	            0xf7d2	                                 not edx	      1091	intel_panel.c	FUNCTION_46	IF_2
0x4001282	    0x81c650820c00	                        add esi, 0xc8250	      1094	intel_panel.c	FUNCTION_46	CALL_12
0x4001288	    0x81e200000020	                     and edx, 0x20000000	      1091	intel_panel.c	FUNCTION_46	IF_2
0x400128e	      0xe800000000	                          call 0x4001293	      1094	intel_panel.c	FUNCTION_46	CALL_12
0x4001293	     0xfb6b5650400	          movzx esi, byte [rbp + 0x465] 	      1095	intel_panel.c	FUNCTION_46	CALL_14
0x400129a	          0x4889df	                            mov rdi, rbx	      1095	intel_panel.c	FUNCTION_46	CALL_14
0x400129d	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1095	intel_panel.c	FUNCTION_46	CALL_14
0x40012a4	            0x31d2	                            xor edx, edx	      1095	intel_panel.c	FUNCTION_46	CALL_14
0x40012a6	          0xc1e608	                              shl esi, 8	      1095	intel_panel.c	FUNCTION_46	CALL_14
0x40012a9	    0x81c650820c00	                        add esi, 0xc8250	      1095	intel_panel.c	FUNCTION_46	CALL_14
0x40012af	      0xe800000000	                          call 0x40012b4	      1095	intel_panel.c	FUNCTION_46	CALL_14
0x40012b4	     0xfb6b5650400	          movzx esi, byte [rbp + 0x465] 	      1096	intel_panel.c	FUNCTION_46	CALL_16
0x40012bb	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      1096	intel_panel.c	FUNCTION_46	CALL_16
0x40012c2	          0x4489e2	                           mov edx, r12d	      1096	intel_panel.c	FUNCTION_46	CALL_16
0x40012c5	          0x4889df	                            mov rdi, rbx	      1096	intel_panel.c	FUNCTION_46	CALL_16
0x40012c8	      0xb901000000	                              mov ecx, 1	      1096	intel_panel.c	FUNCTION_46	CALL_16
0x40012cd	          0xc1e608	                              shl esi, 8	      1096	intel_panel.c	FUNCTION_46	CALL_16
0x40012d0	    0x81c650820c00	                        add esi, 0xc8250	      1096	intel_panel.c	FUNCTION_46	CALL_16
0x40012d6	      0xe800000000	                          call 0x40012db	      1096	intel_panel.c	FUNCTION_46	CALL_16
0x40012db	        0x4883c408	                              add rsp, 8	      1098	intel_panel.c	FUNCTION_46
0x40012df	              0x5b	                                 pop rbx	      1098	intel_panel.c	FUNCTION_46
0x40012e0	              0x5d	                                 pop rbp	      1098	intel_panel.c	FUNCTION_46
0x40012e1	            0x415c	                                 pop r12	      1098	intel_panel.c	FUNCTION_46
0x40012e3	              0xc3	                                     ret	      1098	intel_panel.c	FUNCTION_46
0x40012e4	    0x48c7c6000000	                              mov rsi, 0	      1079	intel_panel.c	FUNCTION_46	IF_1	CALL_5
0x40012eb	      0xbf04000000	                              mov edi, 4	      1079	intel_panel.c	FUNCTION_46	IF_1	CALL_5
0x40012f0	        0x89442404	                mov dword [rsp + 4], eax	      1079	intel_panel.c	FUNCTION_46	IF_1	CALL_5
0x40012f4	      0xe800000000	                          call 0x40012f9	      1079	intel_panel.c	FUNCTION_46	IF_1	CALL_5
0x40012f9	     0xfb6b5650400	          movzx esi, byte [rbp + 0x465] 	      1081	intel_panel.c	FUNCTION_46	IF_1	CALL_7
0x4001300	        0x8b442404	                mov eax, dword [rsp + 4]	      1081	intel_panel.c	FUNCTION_46	IF_1	CALL_7
0x4001304	      0xb901000000	                              mov ecx, 1	      1081	intel_panel.c	FUNCTION_46	IF_1	CALL_7
0x4001309	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      1081	intel_panel.c	FUNCTION_46	IF_1	CALL_7
0x4001310	          0x4889df	                            mov rdi, rbx	      1081	intel_panel.c	FUNCTION_46	IF_1	CALL_7
0x4001313	      0x25ffffff7f	                     and eax, 0x7fffffff	      1081	intel_panel.c	FUNCTION_46	IF_1	CALL_7
0x4001318	          0xc1e608	                              shl esi, 8	      1081	intel_panel.c	FUNCTION_46	IF_1	CALL_7
0x400131b	            0x89c2	                            mov edx, eax	      1081	intel_panel.c	FUNCTION_46	IF_1	CALL_7
0x400131d	    0x81c650820c00	                        add esi, 0xc8250	      1081	intel_panel.c	FUNCTION_46	IF_1	CALL_7
0x4001323	      0xe800000000	                          call 0x4001328	      1081	intel_panel.c	FUNCTION_46	IF_1	CALL_7
0x4001328	      0xe9e1feffff	                           jmp 0x400120e	      1081	intel_panel.c	FUNCTION_46	IF_1	CALL_7
vlv_set_backlight	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,7:FOR,0:ELSE,0	28
0x40001f0	            0x4154	                                push r12	       598	intel_panel.c	FUNCTION_26
0x40001f2	              0x55	                                push rbp	       598	intel_panel.c	FUNCTION_26
0x40001f3	          0x4189f4	                           mov r12d, esi	       598	intel_panel.c	FUNCTION_26
0x40001f6	              0x53	                                push rbx	       598	intel_panel.c	FUNCTION_26
0x40001f7	          0x488b07	                    mov rax, qword [rdi]	       600	intel_panel.c	FUNCTION_26	CALL_2
0x40001fa	        0x488b5708	                mov rdx, qword [rdi + 8]	       601	intel_panel.c	FUNCTION_26	CALL_3
0x40001fe	          0x488b18	                    mov rbx, qword [rax]	       600	intel_panel.c	FUNCTION_26	CALL_2
0x4000201	    0x8baab0040000	           mov ebp, dword [rdx + 0x4b0] 	       604	intel_panel.c	FUNCTION_26	CALL_5
0x4000207	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	       604	intel_panel.c	FUNCTION_26	CALL_5
0x400020d	          0x4889df	                            mov rdi, rbx	       604	intel_panel.c	FUNCTION_26	CALL_5
0x4000210	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       604	intel_panel.c	FUNCTION_26	CALL_5
0x4000217	          0xc1e508	                              shl ebp, 8	       604	intel_panel.c	FUNCTION_26	CALL_5
0x400021a	    0x8db415541206	          lea esi, [rbp + rdx + 0x61254]	       604	intel_panel.c	FUNCTION_26	CALL_5
0x4000221	      0xba01000000	                              mov edx, 1	       604	intel_panel.c	FUNCTION_26	CALL_5
0x4000226	      0xe800000000	                          call 0x400022b	       604	intel_panel.c	FUNCTION_26	CALL_5
0x400022b	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	       605	intel_panel.c	FUNCTION_26	CALL_7
0x4000231	            0x89c2	                            mov edx, eax	       604	intel_panel.c	FUNCTION_26	CALL_5
0x4000233	          0x4889df	                            mov rdi, rbx	       605	intel_panel.c	FUNCTION_26	CALL_7
0x4000236	          0x6631d2	                              xor dx, dx	       605	intel_panel.c	FUNCTION_26	CALL_7
0x4000239	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       605	intel_panel.c	FUNCTION_26	CALL_7
0x4000240	          0x4409e2	                            or edx, r12d	       605	intel_panel.c	FUNCTION_26	CALL_7
0x4000243	    0x8db40d541206	          lea esi, [rbp + rcx + 0x61254]	       605	intel_panel.c	FUNCTION_26	CALL_7
0x400024a	      0xb901000000	                              mov ecx, 1	       605	intel_panel.c	FUNCTION_26	CALL_7
0x400024f	      0xe800000000	                          call 0x4000254	       605	intel_panel.c	FUNCTION_26	CALL_7
0x4000254	              0x5b	                                 pop rbx	       606	intel_panel.c	FUNCTION_26
0x4000255	              0x5d	                                 pop rbp	       606	intel_panel.c	FUNCTION_26
0x4000256	            0x415c	                                 pop r12	       606	intel_panel.c	FUNCTION_26
0x4000258	              0xc3	                                     ret	       606	intel_panel.c	FUNCTION_26
intel_panel_setup_backlight	DO,0:WHILE,0:SWITCH,0:IF,4:functions,0:CALL,10:FOR,0:ELSE,1	66
0x4002a30	            0x4154	                                push r12	      1797	intel_panel.c	FUNCTION_73
0x4002a32	              0x55	                                push rbp	      1797	intel_panel.c	FUNCTION_73
0x4002a33	          0x4189f4	                           mov r12d, esi	      1797	intel_panel.c	FUNCTION_73
0x4002a36	              0x53	                                push rbx	      1797	intel_panel.c	FUNCTION_73
0x4002a37	          0x488b2f	                    mov rbp, qword [rdi]	      1798	intel_panel.c	FUNCTION_73	CALL_1
0x4002a3a	          0x4889fb	                            mov rbx, rdi	      1797	intel_panel.c	FUNCTION_73
0x4002a3d	    0x80bd424d0000	              cmp byte [rbp + 0x4d42], 0	      1803	intel_panel.c	FUNCTION_73	IF_1
0x4002a44	            0x751e	                           jne 0x4002a64	      1803	intel_panel.c	FUNCTION_73	IF_1
0x4002a46	    0xf68500560000	            test byte [rbp + 0x5600], 8 	      1804	intel_panel.c	FUNCTION_73	IF_1	IF_2
0x4002a4d	     0xf849a000000	                            je 0x4002aed	      1804	intel_panel.c	FUNCTION_73	IF_1	IF_2
0x4002a53	    0x48c7c6000000	                              mov rsi, 0	      1805	intel_panel.c	FUNCTION_73	IF_1	IF_2	CALL_3
0x4002a5a	      0xbf04000000	                              mov edi, 4	      1805	intel_panel.c	FUNCTION_73	IF_1	IF_2	CALL_3
0x4002a5f	      0xe800000000	                          call 0x4002a64	      1805	intel_panel.c	FUNCTION_73	IF_1	IF_2	CALL_3
0x4002a64	    0x4883bb780400	              cmp qword [rbx + 0x478], 0	      1813	intel_panel.c	FUNCTION_73	IF_3
0x4002a6c	     0xf84b0000000	                            je 0x4002b22	      1813	intel_panel.c	FUNCTION_73	IF_3
0x4002a72	    0x4881c5784e00	                         add rbp, 0x4e78	      1817	intel_panel.c	FUNCTION_73	CALL_5
0x4002a79	          0x4889ef	                            mov rdi, rbp	      1817	intel_panel.c	FUNCTION_73	CALL_5
0x4002a7c	      0xe800000000	                          call 0x4002a81	      1817	intel_panel.c	FUNCTION_73	CALL_5
0x4002a81	          0x4489e6	                           mov esi, r12d	      1818	intel_panel.c	FUNCTION_73	CALL_6
0x4002a84	          0x4889df	                            mov rdi, rbx	      1818	intel_panel.c	FUNCTION_73	CALL_6
0x4002a87	    0x488b83780400	           mov rax, qword [rbx + 0x478] 	      1818	intel_panel.c	FUNCTION_73	CALL_6
0x4002a8e	      0xe800000000	                          call 0x4002a93	      1818	intel_panel.c	FUNCTION_73	CALL_6
0x4002a93	          0x4889ef	                            mov rdi, rbp	      1819	intel_panel.c	FUNCTION_73	CALL_7
0x4002a96	          0x4189c4	                           mov r12d, eax	      1818	intel_panel.c	FUNCTION_73	CALL_6
0x4002a99	      0xe800000000	                          call 0x4002a9e	      1819	intel_panel.c	FUNCTION_73	CALL_7
0x4002a9e	          0x4585e4	                         test r12d, r12d	      1821	intel_panel.c	FUNCTION_73	IF_4
0x4002aa1	            0x7562	                           jne 0x4002b05	      1821	intel_panel.c	FUNCTION_73	IF_4
0x4002aa3	    0x80bb60040000	               cmp byte [rbx + 0x460], 0	       155	i915_utils.h	FUNCTION_83
0x4002aaa	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      1829	intel_panel.c	FUNCTION_73	CALL_9
0x4002aae	    0x48c7c0000000	                              mov rax, 0	       155	i915_utils.h	FUNCTION_83
0x4002ab5	    0x448b8b5c0400	           mov r9d, dword [rbx + 0x45c] 	      1829	intel_panel.c	FUNCTION_73	CALL_9
0x4002abc	    0x448b83540400	           mov r8d, dword [rbx + 0x454] 	      1829	intel_panel.c	FUNCTION_73	CALL_9
0x4002ac3	    0x48c7c1000000	                              mov rcx, 0	       155	i915_utils.h	FUNCTION_83
0x4002aca	    0xc68350040000	               mov byte [rbx + 0x450], 1	      1827	intel_panel.c	FUNCTION_73
0x4002ad1	    0x48c7c6000000	                              mov rsi, 0	      1829	intel_panel.c	FUNCTION_73	CALL_9
0x4002ad8	      0xbf04000000	                              mov edi, 4	      1829	intel_panel.c	FUNCTION_73	CALL_9
0x4002add	        0x480f45c8	                         cmovne rcx, rax	       155	i915_utils.h	FUNCTION_83
0x4002ae1	      0xe800000000	                          call 0x4002ae6	      1829	intel_panel.c	FUNCTION_73	CALL_9
0x4002ae6	            0x31c0	                            xor eax, eax	      1834	intel_panel.c	FUNCTION_73
0x4002ae8	              0x5b	                                 pop rbx	      1835	intel_panel.c	FUNCTION_73
0x4002ae9	              0x5d	                                 pop rbp	      1835	intel_panel.c	FUNCTION_73
0x4002aea	            0x415c	                                 pop r12	      1835	intel_panel.c	FUNCTION_73
0x4002aec	              0xc3	                                     ret	      1835	intel_panel.c	FUNCTION_73
0x4002aed	    0x48c7c6000000	                              mov rsi, 0	      1807	intel_panel.c	FUNCTION_73	IF_1	ELSE_1	CALL_4
0x4002af4	      0xbf04000000	                              mov edi, 4	      1807	intel_panel.c	FUNCTION_73	IF_1	ELSE_1	CALL_4
0x4002af9	      0xe800000000	                          call 0x4002afe	      1807	intel_panel.c	FUNCTION_73	IF_1	ELSE_1	CALL_4
0x4002afe	            0x31c0	                            xor eax, eax	      1808	intel_panel.c	FUNCTION_73	IF_1	ELSE_1
0x4002b00	              0x5b	                                 pop rbx	      1835	intel_panel.c	FUNCTION_73
0x4002b01	              0x5d	                                 pop rbp	      1835	intel_panel.c	FUNCTION_73
0x4002b02	            0x415c	                                 pop r12	      1835	intel_panel.c	FUNCTION_73
0x4002b04	              0xc3	                                     ret	      1835	intel_panel.c	FUNCTION_73
0x4002b05	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      1822	intel_panel.c	FUNCTION_73	IF_4	CALL_8
0x4002b09	    0x48c7c6000000	                              mov rsi, 0	      1822	intel_panel.c	FUNCTION_73	IF_4	CALL_8
0x4002b10	      0xbf04000000	                              mov edi, 4	      1822	intel_panel.c	FUNCTION_73	IF_4	CALL_8
0x4002b15	      0xe800000000	                          call 0x4002b1a	      1822	intel_panel.c	FUNCTION_73	IF_4	CALL_8
0x4002b1a	          0x4489e0	                           mov eax, r12d	      1824	intel_panel.c	FUNCTION_73	IF_4
0x4002b1d	              0x5b	                                 pop rbx	      1835	intel_panel.c	FUNCTION_73
0x4002b1e	              0x5d	                                 pop rbp	      1835	intel_panel.c	FUNCTION_73
0x4002b1f	            0x415c	                                 pop r12	      1835	intel_panel.c	FUNCTION_73
0x4002b21	              0xc3	                                     ret	      1835	intel_panel.c	FUNCTION_73
0x4002b22	    0x48c7c6000000	                              mov rsi, 0	      1813	intel_panel.c	FUNCTION_73	IF_3
0x4002b29	    0x48c7c7000000	                              mov rdi, 0	      1813	intel_panel.c	FUNCTION_73	IF_3
0x4002b30	      0xe800000000	                          call 0x4002b35	      1813	intel_panel.c	FUNCTION_73	IF_3
0x4002b35	             0xf0b	                                     ud2	      1813	intel_panel.c	FUNCTION_73	IF_3
0x4002b37	      0xb8edffffff	                     mov eax, 0xffffffed	      1814	intel_panel.c	FUNCTION_73	IF_3
0x4002b3c	            0xebaa	                           jmp 0x4002ae8	      1814	intel_panel.c	FUNCTION_73	IF_3
pch_enable_backlight	DO,0:WHILE,0:SWITCH,0:IF,4:functions,0:CALL,17:FOR,0:ELSE,1	114
0x4000d60	            0x4155	                                push r13	       873	intel_panel.c	FUNCTION_41
0x4000d62	            0x4154	                                push r12	       873	intel_panel.c	FUNCTION_41
0x4000d64	          0x4989f5	                            mov r13, rsi	       873	intel_panel.c	FUNCTION_41
0x4000d67	              0x55	                                push rbp	       873	intel_panel.c	FUNCTION_41
0x4000d68	              0x53	                                push rbx	       873	intel_panel.c	FUNCTION_41
0x4000d69	      0xba01000000	                              mov edx, 1	       880	intel_panel.c	FUNCTION_41	CALL_3
0x4000d6e	        0x4883ec08	                              sub rsp, 8	       873	intel_panel.c	FUNCTION_41
0x4000d72	          0x4c8b26	                    mov r12, qword [rsi]	       874	intel_panel.c	FUNCTION_41	CALL_1
0x4000d75	    0x8baf3c020000	           mov ebp, dword [rdi + 0x23c] 	       877	intel_panel.c	FUNCTION_41
0x4000d7b	      0xbe50820400	                        mov esi, 0x48250	       880	intel_panel.c	FUNCTION_41	CALL_3
0x4000d80	        0x498b1c24	                    mov rbx, qword [r12]	       875	intel_panel.c	FUNCTION_41	CALL_2
0x4000d84	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       880	intel_panel.c	FUNCTION_41	CALL_3
0x4000d8b	          0x4889df	                            mov rdi, rbx	       880	intel_panel.c	FUNCTION_41	CALL_3
0x4000d8e	      0xe800000000	                          call 0x4000d93	       880	intel_panel.c	FUNCTION_41	CALL_3
0x4000d93	            0x85c0	                           test eax, eax	       881	intel_panel.c	FUNCTION_41	IF_1
0x4000d95	     0xf8881010000	                            js 0x4000f1c	       881	intel_panel.c	FUNCTION_41	IF_1
0x4000d9b	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       887	intel_panel.c	FUNCTION_41	CALL_6
0x4000da2	      0xba01000000	                              mov edx, 1	       887	intel_panel.c	FUNCTION_41	CALL_6
0x4000da7	      0xbe50820c00	                        mov esi, 0xc8250	       887	intel_panel.c	FUNCTION_41	CALL_6
0x4000dac	          0x4889df	                            mov rdi, rbx	       887	intel_panel.c	FUNCTION_41	CALL_6
0x4000daf	      0xe800000000	                          call 0x4000db4	       887	intel_panel.c	FUNCTION_41	CALL_6
0x4000db4	            0x85c0	                           test eax, eax	       888	intel_panel.c	FUNCTION_41	IF_2
0x4000db6	     0xf8822010000	                            js 0x4000ede	       888	intel_panel.c	FUNCTION_41	IF_2
0x4000dbc	          0x83fd03	                              cmp ebp, 3	       894	intel_panel.c	FUNCTION_41	IF_3
0x4000dbf	     0xf840a010000	                            je 0x4000ecf	       894	intel_panel.c	FUNCTION_41	IF_3
0x4000dc5	            0x89ea	                            mov edx, ebp	       897	intel_panel.c	FUNCTION_41	CALL_9
0x4000dc7	          0xc1e21d	                           shl edx, 0x1d	       897	intel_panel.c	FUNCTION_41	CALL_9
0x4000dca	            0x89d5	                            mov ebp, edx	       897	intel_panel.c	FUNCTION_41	CALL_9
0x4000dcc	    0x81cd00000080	                      or ebp, 0x80000000	       897	intel_panel.c	FUNCTION_41	CALL_9
0x4000dd2	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       898	intel_panel.c	FUNCTION_41	CALL_10
0x4000dd9	      0xb901000000	                              mov ecx, 1	       898	intel_panel.c	FUNCTION_41	CALL_10
0x4000dde	          0x4889df	                            mov rdi, rbx	       898	intel_panel.c	FUNCTION_41	CALL_10
0x4000de1	      0xbe50820400	                        mov esi, 0x48250	       898	intel_panel.c	FUNCTION_41	CALL_10
0x4000de6	      0xe800000000	                          call 0x4000deb	       898	intel_panel.c	FUNCTION_41	CALL_10
0x4000deb	            0x31d2	                            xor edx, edx	       899	intel_panel.c	FUNCTION_41	CALL_11
0x4000ded	          0x4889df	                            mov rdi, rbx	       899	intel_panel.c	FUNCTION_41	CALL_11
0x4000df0	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       899	intel_panel.c	FUNCTION_41	CALL_11
0x4000df7	      0xbe50820400	                        mov esi, 0x48250	       899	intel_panel.c	FUNCTION_41	CALL_11
0x4000dfc	      0xe800000000	                          call 0x4000e01	       899	intel_panel.c	FUNCTION_41	CALL_11
0x4000e01	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       900	intel_panel.c	FUNCTION_41	CALL_12
0x4000e08	            0x89ea	                            mov edx, ebp	       900	intel_panel.c	FUNCTION_41	CALL_12
0x4000e0a	      0xb901000000	                              mov ecx, 1	       900	intel_panel.c	FUNCTION_41	CALL_12
0x4000e0f	          0x4889df	                            mov rdi, rbx	       900	intel_panel.c	FUNCTION_41	CALL_12
0x4000e12	      0xbe50820400	                        mov esi, 0x48250	       900	intel_panel.c	FUNCTION_41	CALL_12
0x4000e17	      0xe800000000	                          call 0x4000e1c	       900	intel_panel.c	FUNCTION_41	CALL_12
0x4000e1c	    0x418bb4245404	           mov esi, dword [r12 + 0x454] 	       903	intel_panel.c	FUNCTION_41	CALL_13
0x4000e24	          0x4c89ef	                            mov rdi, r13	       903	intel_panel.c	FUNCTION_41	CALL_13
0x4000e27	      0xe8a4f7ffff	call sym.intel_panel_actually_set_backlight	       903	intel_panel.c	FUNCTION_41	CALL_13
0x4000e2c	    0x418b94245c04	           mov edx, dword [r12 + 0x45c] 	       905	intel_panel.c	FUNCTION_41
0x4000e34	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       906	intel_panel.c	FUNCTION_41	CALL_14
0x4000e3b	          0x4889df	                            mov rdi, rbx	       906	intel_panel.c	FUNCTION_41	CALL_14
0x4000e3e	      0xb901000000	                              mov ecx, 1	       906	intel_panel.c	FUNCTION_41	CALL_14
0x4000e43	      0xbe54820c00	                        mov esi, 0xc8254	       906	intel_panel.c	FUNCTION_41	CALL_14
0x4000e48	          0xc1e210	                           shl edx, 0x10	       905	intel_panel.c	FUNCTION_41
0x4000e4b	      0xe800000000	                          call 0x4000e50	       906	intel_panel.c	FUNCTION_41	CALL_14
0x4000e50	    0x4180bc246204	               cmp byte [r12 + 0x462], 1	       909	intel_panel.c	FUNCTION_41	IF_4
0x4000e59	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       912	intel_panel.c	FUNCTION_41	CALL_15
0x4000e60	      0xb901000000	                              mov ecx, 1	       912	intel_panel.c	FUNCTION_41	CALL_15
0x4000e65	          0x4889df	                            mov rdi, rbx	       912	intel_panel.c	FUNCTION_41	CALL_15
0x4000e68	      0xbe50820c00	                        mov esi, 0xc8250	       912	intel_panel.c	FUNCTION_41	CALL_15
0x4000e6d	            0x19ed	                            sbb ebp, ebp	       909	intel_panel.c	FUNCTION_41	IF_4
0x4000e6f	    0x81e5000000e0	                     and ebp, 0xe0000000	       909	intel_panel.c	FUNCTION_41	IF_4
0x4000e75	    0x81ed00000060	                     sub ebp, 0x60000000	       909	intel_panel.c	FUNCTION_41	IF_4
0x4000e7b	    0x4180bc246204	               cmp byte [r12 + 0x462], 1	       909	intel_panel.c	FUNCTION_41	IF_4
0x4000e84	            0x19d2	                            sbb edx, edx	       909	intel_panel.c	FUNCTION_41	IF_4
0x4000e86	            0xf7d2	                                 not edx	       909	intel_panel.c	FUNCTION_41	IF_4
0x4000e88	    0x81e200000020	                     and edx, 0x20000000	       909	intel_panel.c	FUNCTION_41	IF_4
0x4000e8e	      0xe800000000	                          call 0x4000e93	       912	intel_panel.c	FUNCTION_41	CALL_15
0x4000e93	          0x4889df	                            mov rdi, rbx	       913	intel_panel.c	FUNCTION_41	CALL_16
0x4000e96	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       913	intel_panel.c	FUNCTION_41	CALL_16
0x4000e9d	            0x31d2	                            xor edx, edx	       913	intel_panel.c	FUNCTION_41	CALL_16
0x4000e9f	      0xbe50820c00	                        mov esi, 0xc8250	       913	intel_panel.c	FUNCTION_41	CALL_16
0x4000ea4	      0xe800000000	                          call 0x4000ea9	       913	intel_panel.c	FUNCTION_41	CALL_16
0x4000ea9	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       914	intel_panel.c	FUNCTION_41	CALL_17
0x4000eb0	            0x89ea	                            mov edx, ebp	       914	intel_panel.c	FUNCTION_41	CALL_17
0x4000eb2	          0x4889df	                            mov rdi, rbx	       914	intel_panel.c	FUNCTION_41	CALL_17
0x4000eb5	      0xb901000000	                              mov ecx, 1	       914	intel_panel.c	FUNCTION_41	CALL_17
0x4000eba	      0xbe50820c00	                        mov esi, 0xc8250	       914	intel_panel.c	FUNCTION_41	CALL_17
0x4000ebf	      0xe800000000	                          call 0x4000ec4	       914	intel_panel.c	FUNCTION_41	CALL_17
0x4000ec4	        0x4883c408	                              add rsp, 8	       915	intel_panel.c	FUNCTION_41
0x4000ec8	              0x5b	                                 pop rbx	       915	intel_panel.c	FUNCTION_41
0x4000ec9	              0x5d	                                 pop rbp	       915	intel_panel.c	FUNCTION_41
0x4000eca	            0x415c	                                 pop r12	       915	intel_panel.c	FUNCTION_41
0x4000ecc	            0x415d	                                 pop r13	       915	intel_panel.c	FUNCTION_41
0x4000ece	              0xc3	                                     ret	       915	intel_panel.c	FUNCTION_41
0x4000ecf	      0xbd000000e0	                     mov ebp, 0xe0000000	       915	intel_panel.c	FUNCTION_41
0x4000ed4	      0xba00000060	                     mov edx, 0x60000000	       895	intel_panel.c	FUNCTION_41	IF_3
0x4000ed9	      0xe9f4feffff	                           jmp 0x4000dd2	       895	intel_panel.c	FUNCTION_41	IF_3
0x4000ede	    0x48c7c6000000	                              mov rsi, 0	       889	intel_panel.c	FUNCTION_41	IF_2	CALL_7
0x4000ee5	      0xbf04000000	                              mov edi, 4	       889	intel_panel.c	FUNCTION_41	IF_2	CALL_7
0x4000eea	        0x89442404	                mov dword [rsp + 4], eax	       889	intel_panel.c	FUNCTION_41	IF_2	CALL_7
0x4000eee	      0xe800000000	                          call 0x4000ef3	       889	intel_panel.c	FUNCTION_41	IF_2	CALL_7
0x4000ef3	        0x8b442404	                mov eax, dword [rsp + 4]	       891	intel_panel.c	FUNCTION_41	IF_2	CALL_8
0x4000ef7	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       891	intel_panel.c	FUNCTION_41	IF_2	CALL_8
0x4000efe	      0xb901000000	                              mov ecx, 1	       891	intel_panel.c	FUNCTION_41	IF_2	CALL_8
0x4000f03	      0xbe50820c00	                        mov esi, 0xc8250	       891	intel_panel.c	FUNCTION_41	IF_2	CALL_8
0x4000f08	          0x4889df	                            mov rdi, rbx	       891	intel_panel.c	FUNCTION_41	IF_2	CALL_8
0x4000f0b	      0x25ffffff7f	                     and eax, 0x7fffffff	       891	intel_panel.c	FUNCTION_41	IF_2	CALL_8
0x4000f10	            0x89c2	                            mov edx, eax	       891	intel_panel.c	FUNCTION_41	IF_2	CALL_8
0x4000f12	      0xe800000000	                          call 0x4000f17	       891	intel_panel.c	FUNCTION_41	IF_2	CALL_8
0x4000f17	      0xe9a0feffff	                           jmp 0x4000dbc	       891	intel_panel.c	FUNCTION_41	IF_2	CALL_8
0x4000f1c	    0x48c7c6000000	                              mov rsi, 0	       882	intel_panel.c	FUNCTION_41	IF_1	CALL_4
0x4000f23	      0xbf04000000	                              mov edi, 4	       882	intel_panel.c	FUNCTION_41	IF_1	CALL_4
0x4000f28	        0x89442404	                mov dword [rsp + 4], eax	       882	intel_panel.c	FUNCTION_41	IF_1	CALL_4
0x4000f2c	      0xe800000000	                          call 0x4000f31	       882	intel_panel.c	FUNCTION_41	IF_1	CALL_4
0x4000f31	        0x8b442404	                mov eax, dword [rsp + 4]	       884	intel_panel.c	FUNCTION_41	IF_1	CALL_5
0x4000f35	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       884	intel_panel.c	FUNCTION_41	IF_1	CALL_5
0x4000f3c	      0xb901000000	                              mov ecx, 1	       884	intel_panel.c	FUNCTION_41	IF_1	CALL_5
0x4000f41	      0xbe50820400	                        mov esi, 0x48250	       884	intel_panel.c	FUNCTION_41	IF_1	CALL_5
0x4000f46	          0x4889df	                            mov rdi, rbx	       884	intel_panel.c	FUNCTION_41	IF_1	CALL_5
0x4000f49	      0x25ffffff7f	                     and eax, 0x7fffffff	       884	intel_panel.c	FUNCTION_41	IF_1	CALL_5
0x4000f4e	            0x89c2	                            mov edx, eax	       884	intel_panel.c	FUNCTION_41	IF_1	CALL_5
0x4000f50	      0xe800000000	                          call 0x4000f55	       884	intel_panel.c	FUNCTION_41	IF_1	CALL_5
0x4000f55	      0xe941feffff	                           jmp 0x4000d9b	       884	intel_panel.c	FUNCTION_41	IF_1	CALL_5
intel_gmch_panel_fitting	DO,0:WHILE,0:SWITCH,1:IF,7:functions,0:CALL,10:FOR,0:ELSE,2	181
0x4002330	            0x4157	                                push r15	       307	intel_panel.c	FUNCTION_9
0x4002332	            0x4156	                                push r14	       307	intel_panel.c	FUNCTION_9
0x4002334	          0x4989f6	                            mov r14, rsi	       307	intel_panel.c	FUNCTION_9
0x4002337	              0x55	                                push rbp	       307	intel_panel.c	FUNCTION_9
0x4002338	              0x53	                                push rbx	       307	intel_panel.c	FUNCTION_9
0x4002339	          0x4889fb	                            mov rbx, rdi	       307	intel_panel.c	FUNCTION_9
0x400233c	    0x8b8eac000000	            mov ecx, dword [rsi + 0xac] 	       313	intel_panel.c	FUNCTION_9	IF_1
0x4002342	          0x4c8b3f	                    mov r15, qword [rdi]	       308	intel_panel.c	FUNCTION_9	CALL_1
0x4002345	        0x488d7e18	                   lea rdi, [rsi + 0x18]	       310	intel_panel.c	FUNCTION_9
0x4002349	    0x8bb62c020000	           mov esi, dword [rsi + 0x22c] 	       313	intel_panel.c	FUNCTION_9	IF_1
0x400234f	            0x39f1	                            cmp ecx, esi	       313	intel_panel.c	FUNCTION_9	IF_1
0x4002351	            0x7476	                            je 0x40023c9	       313	intel_panel.c	FUNCTION_9	IF_1
0x4002353	          0x83fa02	                              cmp edx, 2	       317	intel_panel.c	FUNCTION_9	SWITCH_1
0x4002356	     0xf849a000000	                            je 0x40023f6	       317	intel_panel.c	FUNCTION_9	SWITCH_1
0x400235c	          0x83fa03	                              cmp edx, 3	       317	intel_panel.c	FUNCTION_9	SWITCH_1
0x400235f	            0x7420	                            je 0x4002381	       317	intel_panel.c	FUNCTION_9	SWITCH_1
0x4002361	          0x83fa01	                              cmp edx, 1	       317	intel_panel.c	FUNCTION_9	SWITCH_1
0x4002364	     0xf8442010000	                            je 0x40024ac	       317	intel_panel.c	FUNCTION_9	SWITCH_1
0x400236a	            0x89d6	                            mov esi, edx	       353	intel_panel.c	FUNCTION_9	SWITCH_1	CALL_8
0x400236c	    0x48c7c7000000	                              mov rdi, 0	       353	intel_panel.c	FUNCTION_9	SWITCH_1	CALL_8
0x4002373	      0xe800000000	                          call 0x4002378	       353	intel_panel.c	FUNCTION_9	SWITCH_1	CALL_8
0x4002378	             0xf0b	                                     ud2	       353	intel_panel.c	FUNCTION_9	SWITCH_1	CALL_8
0x400237a	              0x5b	                                 pop rbx	       376	intel_panel.c	FUNCTION_9
0x400237b	              0x5d	                                 pop rbp	       376	intel_panel.c	FUNCTION_9
0x400237c	            0x415e	                                 pop r14	       376	intel_panel.c	FUNCTION_9
0x400237e	            0x415f	                                 pop r15	       376	intel_panel.c	FUNCTION_9
0x4002380	              0xc3	                                     ret	       376	intel_panel.c	FUNCTION_9
0x4002381	    0x4180bf5c0600	               cmp byte [r15 + 0x65c], 3	       329	intel_panel.c	FUNCTION_9	SWITCH_1	IF_2	CALL_4
0x4002389	     0xf8652010000	                           jbe 0x40024e1	       329	intel_panel.c	FUNCTION_9	SWITCH_1	IF_2	CALL_4
0x400238f	    0x418b96300200	           mov edx, dword [r14 + 0x230] 	       231	intel_panel.c	FUNCTION_7
0x4002396	    0x418b86c80000	            mov eax, dword [r14 + 0xc8] 	       233	intel_panel.c	FUNCTION_7
0x400239d	           0xfafd1	                           imul edx, ecx	       231	intel_panel.c	FUNCTION_7
0x40023a0	           0xfafc6	                           imul eax, esi	       233	intel_panel.c	FUNCTION_7
0x40023a3	            0x39c2	                            cmp edx, eax	       237	intel_panel.c	FUNCTION_7	IF_1
0x40023a5	     0xf87fd010000	                            ja 0x40025a8	       237	intel_panel.c	FUNCTION_7	IF_1
0x40023ab	     0xf8201020000	                            jb 0x40025b2	       240	intel_panel.c	FUNCTION_7	ELSE_1	IF_2
0x40023b1	            0x39f1	                            cmp ecx, esi	       243	intel_panel.c	FUNCTION_7	ELSE_2	IF_3
0x40023b3	      0xba00000080	                     mov edx, 0x80000000	       244	intel_panel.c	FUNCTION_7	ELSE_2	IF_3
0x40023b8	     0xf85fd000000	                           jne 0x40024bb	       243	intel_panel.c	FUNCTION_7	ELSE_2	IF_3
0x40023be	            0x31d2	                            xor edx, edx	       243	intel_panel.c	FUNCTION_7	ELSE_2	IF_3
0x40023c0	            0x31c9	                            xor ecx, ecx	       243	intel_panel.c	FUNCTION_7	ELSE_2	IF_3
0x40023c2	            0x31f6	                            xor esi, esi	       309	intel_panel.c	FUNCTION_9
0x40023c4	      0xe9f6000000	                           jmp 0x40024bf	       309	intel_panel.c	FUNCTION_9
0x40023c9	    0x418b86300200	           mov eax, dword [r14 + 0x230] 	       313	intel_panel.c	FUNCTION_9	IF_1
0x40023d0	    0x413986c80000	            cmp dword [r14 + 0xc8], eax 	       313	intel_panel.c	FUNCTION_9	IF_1
0x40023d7	     0xf8576ffffff	                           jne 0x4002353	       313	intel_panel.c	FUNCTION_9	IF_1
0x40023dd	            0x31f6	                            xor esi, esi	       309	intel_panel.c	FUNCTION_9
0x40023df	            0x31c9	                            xor ecx, ecx	       366	intel_panel.c	FUNCTION_9	IF_6
0x40023e1	            0x31c0	                            xor eax, eax	       365	intel_panel.c	FUNCTION_9	IF_6
0x40023e3	    0x4180bf5c0600	               cmp byte [r15 + 0x65c], 3	       370	intel_panel.c	FUNCTION_9	IF_7	CALL_10
0x40023eb	     0xf879f000000	                            ja 0x4002490	       370	intel_panel.c	FUNCTION_9	IF_7	CALL_10
0x40023f1	      0xe98a000000	                           jmp 0x4002480	       370	intel_panel.c	FUNCTION_9	IF_7	CALL_10
0x40023f6	      0xe845dcffff	            call sym.centre_horizontally	       323	intel_panel.c	FUNCTION_9	SWITCH_1	CALL_2
0x40023fb	    0x418bbe300200	           mov edi, dword [r14 + 0x230] 	       324	intel_panel.c	FUNCTION_9	SWITCH_1	CALL_3
0x4002402	    0x418b96c80000	            mov edx, dword [r14 + 0xc8] 	       204	intel_panel.c	FUNCTION_5
0x4002409	    0x418b86d80000	            mov eax, dword [r14 + 0xd8] 	       200	intel_panel.c	FUNCTION_5
0x4002410	    0x412b86d40000	             sub eax, dword [r14 + 0xd4]	       200	intel_panel.c	FUNCTION_5
0x4002417	    0x418b8ed00000	            mov ecx, dword [r14 + 0xd0] 	       201	intel_panel.c	FUNCTION_5
0x400241e	    0x412b8ecc0000	             sub ecx, dword [r14 + 0xcc]	       201	intel_panel.c	FUNCTION_5
0x4002425	            0x29fa	                            sub edx, edi	       204	intel_panel.c	FUNCTION_5
0x4002427	    0x4189bec80000	             mov dword [r14 + 0xc8], edi	       206	intel_panel.c	FUNCTION_5
0x400242e	          0x83c201	                              add edx, 1	       204	intel_panel.c	FUNCTION_5
0x4002431	            0x89c6	                            mov esi, eax	       200	intel_panel.c	FUNCTION_5
0x4002433	            0x89d0	                            mov eax, edx	       204	intel_panel.c	FUNCTION_5
0x4002435	          0xc1e81f	                           shr eax, 0x1f	       204	intel_panel.c	FUNCTION_5
0x4002438	             0x1c2	                            add edx, eax	       204	intel_panel.c	FUNCTION_5
0x400243a	            0xd1fa	                              sar edx, 1	       204	intel_panel.c	FUNCTION_5
0x400243c	          0x8d0417	                    lea eax, [rdi + rdx]	       207	intel_panel.c	FUNCTION_5
0x400243f	          0x8d1401	                    lea edx, [rcx + rax]	       208	intel_panel.c	FUNCTION_5
0x4002442	          0x83c101	                              add ecx, 1	       210	intel_panel.c	FUNCTION_5
0x4002445	    0x418986cc0000	             mov dword [r14 + 0xcc], eax	       207	intel_panel.c	FUNCTION_5
0x400244c	            0x29f1	                            sub ecx, esi	       210	intel_panel.c	FUNCTION_5
0x400244e	            0xd1e9	                              shr ecx, 1	       210	intel_panel.c	FUNCTION_5
0x4002450	    0x418996d00000	             mov dword [r14 + 0xd0], edx	       208	intel_panel.c	FUNCTION_5
0x4002457	             0x1c8	                            add eax, ecx	       210	intel_panel.c	FUNCTION_5
0x4002459	    0x418986d40000	             mov dword [r14 + 0xd4], eax	       210	intel_panel.c	FUNCTION_5
0x4002460	             0x1f0	                            add eax, esi	       211	intel_panel.c	FUNCTION_5
0x4002462	    0x418986d80000	             mov dword [r14 + 0xd8], eax	       211	intel_panel.c	FUNCTION_5
0x4002469	    0x4180bf5c0600	               cmp byte [r15 + 0x65c], 3	       359	intel_panel.c	FUNCTION_9	IF_5	CALL_9
0x4002471	     0xf876a010000	                            ja 0x40025e1	       359	intel_panel.c	FUNCTION_9	IF_5	CALL_9
0x4002477	      0xbe00800000	                         mov esi, 0x8000	       359	intel_panel.c	FUNCTION_9	IF_5	CALL_9
0x400247c	            0x31c0	                            xor eax, eax	       365	intel_panel.c	FUNCTION_9	IF_6
0x400247e	            0x31c9	                            xor ecx, ecx	       366	intel_panel.c	FUNCTION_9	IF_6
0x4002480	            0x89c2	                            mov edx, eax	       371	intel_panel.c	FUNCTION_9	IF_7
0x4002482	          0x83ca08	                               or edx, 8	       371	intel_panel.c	FUNCTION_9	IF_7
0x4002485	    0x4183bedc0200	          cmp dword [r14 + 0x2dc], 0x12 	       371	intel_panel.c	FUNCTION_9	IF_7
0x400248d	           0xf44c2	                          cmove eax, edx	       371	intel_panel.c	FUNCTION_9	IF_7
0x4002490	              0x5b	                                 pop rbx	       376	intel_panel.c	FUNCTION_9
0x4002491	    0x418986180300	            mov dword [r14 + 0x318], eax	       373	intel_panel.c	FUNCTION_9
0x4002498	    0x41898e1c0300	            mov dword [r14 + 0x31c], ecx	       374	intel_panel.c	FUNCTION_9
0x400249f	              0x5d	                                 pop rbp	       376	intel_panel.c	FUNCTION_9
0x40024a0	    0x4189b6200300	            mov dword [r14 + 0x320], esi	       375	intel_panel.c	FUNCTION_9
0x40024a7	            0x415e	                                 pop r14	       376	intel_panel.c	FUNCTION_9
0x40024a9	            0x415f	                                 pop r15	       376	intel_panel.c	FUNCTION_9
0x40024ab	              0xc3	                                     ret	       376	intel_panel.c	FUNCTION_9
0x40024ac	    0x4180bf5c0600	               cmp byte [r15 + 0x65c], 3	       343	intel_panel.c	FUNCTION_9	SWITCH_1	IF_3	IF_4	CALL_7
0x40024b4	            0x7620	                           jbe 0x40024d6	       343	intel_panel.c	FUNCTION_9	SWITCH_1	IF_3	IF_4	CALL_7
0x40024b6	      0xba00000080	                     mov edx, 0x80000000	       244	intel_panel.c	FUNCTION_7	ELSE_2	IF_3
0x40024bb	            0x31c9	                            xor ecx, ecx	       359	intel_panel.c	FUNCTION_9	IF_5	CALL_9
0x40024bd	            0x31f6	                            xor esi, esi	       359	intel_panel.c	FUNCTION_9	IF_5	CALL_9
0x40024bf	    0x8b83b0040000	           mov eax, dword [rbx + 0x4b0] 	       360	intel_panel.c	FUNCTION_9	IF_5
0x40024c5	          0xc1e01d	                           shl eax, 0x1d	       360	intel_panel.c	FUNCTION_9	IF_5
0x40024c8	             0x9d0	                             or eax, edx	       364	intel_panel.c	FUNCTION_9	IF_6
0x40024ca	     0xf8813ffffff	                            js 0x40023e3	       364	intel_panel.c	FUNCTION_9	IF_6
0x40024d0	            0x31c9	                            xor ecx, ecx	       366	intel_panel.c	FUNCTION_9	IF_6
0x40024d2	            0x31c0	                            xor eax, eax	       365	intel_panel.c	FUNCTION_9	IF_6
0x40024d4	            0xebba	                           jmp 0x4002490	       365	intel_panel.c	FUNCTION_9	IF_6
0x40024d6	      0xb860060080	                     mov eax, 0x80000660	       279	intel_panel.c	FUNCTION_8	ELSE_1	IF_3
0x40024db	            0x31c9	                            xor ecx, ecx	       279	intel_panel.c	FUNCTION_8	ELSE_1	IF_3
0x40024dd	            0x31f6	                            xor esi, esi	       279	intel_panel.c	FUNCTION_8	ELSE_1	IF_3
0x40024df	            0xeb9f	                           jmp 0x4002480	       279	intel_panel.c	FUNCTION_8	ELSE_1	IF_3
0x40024e1	    0x418bae300200	           mov ebp, dword [r14 + 0x230] 	       253	intel_panel.c	FUNCTION_8
0x40024e8	    0x458b86c80000	            mov r8d, dword [r14 + 0xc8] 	       255	intel_panel.c	FUNCTION_8
0x40024ef	            0x89c8	                            mov eax, ecx	       252	intel_panel.c	FUNCTION_8
0x40024f1	          0x4189f1	                            mov r9d, esi	       254	intel_panel.c	FUNCTION_8
0x40024f4	           0xfafc5	                           imul eax, ebp	       252	intel_panel.c	FUNCTION_8
0x40024f7	        0x450fafc8	                           imul r9d, r8d	       254	intel_panel.c	FUNCTION_8
0x40024fb	          0x4439c8	                            cmp eax, r9d	       263	intel_panel.c	FUNCTION_8	IF_1
0x40024fe	     0xf87b8000000	                            ja 0x40025bc	       263	intel_panel.c	FUNCTION_8	IF_1
0x4002504	            0x73d0	                           jae 0x40024d6	       279	intel_panel.c	FUNCTION_8	ELSE_1	IF_3
0x4002506	            0x31d2	                            xor edx, edx	       281	intel_panel.c	FUNCTION_8	ELSE_1	IF_3
0x4002508	    0x418bbed80000	            mov edi, dword [r14 + 0xd8] 	       200	intel_panel.c	FUNCTION_5
0x400250f	    0x412bbed40000	             sub edi, dword [r14 + 0xd4]	       200	intel_panel.c	FUNCTION_5
0x4002516	            0xf7f6	                                 div esi	       281	intel_panel.c	FUNCTION_8	ELSE_1	IF_3
0x4002518	    0x418b96d00000	            mov edx, dword [r14 + 0xd0] 	       201	intel_panel.c	FUNCTION_5
0x400251f	    0x412b96cc0000	             sub edx, dword [r14 + 0xcc]	       201	intel_panel.c	FUNCTION_5
0x4002526	          0x4129c0	                            sub r8d, eax	       207	intel_panel.c	FUNCTION_5
0x4002529	    0x418986c80000	             mov dword [r14 + 0xc8], eax	       206	intel_panel.c	FUNCTION_5
0x4002530	        0x4183c001	                              add r8d, 1	       207	intel_panel.c	FUNCTION_5
0x4002534	          0x4589c1	                            mov r9d, r8d	       207	intel_panel.c	FUNCTION_5
0x4002537	        0x41c1e91f	                           shr r9d, 0x1f	       207	intel_panel.c	FUNCTION_5
0x400253b	          0x4501c8	                            add r8d, r9d	       207	intel_panel.c	FUNCTION_5
0x400253e	          0x41d1f8	                              sar r8d, 1	       207	intel_panel.c	FUNCTION_5
0x4002541	          0x4401c0	                            add eax, r8d	       207	intel_panel.c	FUNCTION_5
0x4002544	        0x448d0402	                    lea r8d, [rdx + rax]	       208	intel_panel.c	FUNCTION_5
0x4002548	          0x83c201	                              add edx, 1	       210	intel_panel.c	FUNCTION_5
0x400254b	    0x418986cc0000	             mov dword [r14 + 0xcc], eax	       207	intel_panel.c	FUNCTION_5
0x4002552	            0x29fa	                            sub edx, edi	       210	intel_panel.c	FUNCTION_5
0x4002554	            0xd1ea	                              shr edx, 1	       210	intel_panel.c	FUNCTION_5
0x4002556	    0x458986d00000	             mov dword [r14 + 0xd0], r8d	       208	intel_panel.c	FUNCTION_5
0x400255d	             0x1d0	                            add eax, edx	       210	intel_panel.c	FUNCTION_5
0x400255f	    0x418986d40000	             mov dword [r14 + 0xd4], eax	       210	intel_panel.c	FUNCTION_5
0x4002566	             0x1f8	                            add eax, edi	       211	intel_panel.c	FUNCTION_5
0x4002568	            0x39f1	                            cmp ecx, esi	       285	intel_panel.c	FUNCTION_8	ELSE_1	IF_3	IF_4
0x400256a	    0x418986d80000	             mov dword [r14 + 0xd8], eax	       211	intel_panel.c	FUNCTION_5
0x4002571	     0xf84f2feffff	                            je 0x4002469	       285	intel_panel.c	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4002577	            0x89f0	                            mov eax, esi	       224	intel_panel.c	FUNCTION_6
0x4002579	          0xc1e00c	                            shl eax, 0xc	       224	intel_panel.c	FUNCTION_6
0x400257c	            0x31d2	                            xor edx, edx	       224	intel_panel.c	FUNCTION_6
0x400257e	            0xf7f1	                                 div ecx	       224	intel_panel.c	FUNCTION_6
0x4002580	      0x25ffff0f00	                        and eax, 0xfffff	       224	intel_panel.c	FUNCTION_6
0x4002585	            0x89c1	                            mov ecx, eax	       289	intel_panel.c	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4002587	          0xc1e014	                           shl eax, 0x14	       289	intel_panel.c	FUNCTION_8	ELSE_1	IF_3	IF_4
0x400258a	          0xc1e104	                              shl ecx, 4	       289	intel_panel.c	FUNCTION_8	ELSE_1	IF_3	IF_4
0x400258d	             0x9c1	                             or ecx, eax	       289	intel_panel.c	FUNCTION_8	ELSE_1	IF_3	IF_4
0x400258f	    0x4180bf5c0600	               cmp byte [r15 + 0x65c], 3	       359	intel_panel.c	FUNCTION_9	IF_5	CALL_9
0x4002597	            0x7656	                           jbe 0x40025ef	       359	intel_panel.c	FUNCTION_9	IF_5	CALL_9
0x4002599	      0xba40040080	                     mov edx, 0x80000440	       359	intel_panel.c	FUNCTION_9	IF_5	CALL_9
0x400259e	      0xbe00800000	                         mov esi, 0x8000	       359	intel_panel.c	FUNCTION_9	IF_5	CALL_9
0x40025a3	      0xe917ffffff	                           jmp 0x40024bf	       359	intel_panel.c	FUNCTION_9	IF_5	CALL_9
0x40025a8	      0xba00000088	                     mov edx, 0x88000000	       238	intel_panel.c	FUNCTION_7	IF_1
0x40025ad	      0xe909ffffff	                           jmp 0x40024bb	       238	intel_panel.c	FUNCTION_7	IF_1
0x40025b2	      0xba0000008c	                     mov edx, 0x8c000000	       241	intel_panel.c	FUNCTION_7	ELSE_1	IF_2
0x40025b7	      0xe9fffeffff	                           jmp 0x40024bb	       241	intel_panel.c	FUNCTION_7	ELSE_1	IF_2
0x40025bc	          0x4489c8	                            mov eax, r9d	       264	intel_panel.c	FUNCTION_8	IF_1	CALL_1
0x40025bf	            0x31d2	                            xor edx, edx	       264	intel_panel.c	FUNCTION_8	IF_1	CALL_1
0x40025c1	            0xf7f5	                                 div ebp	       264	intel_panel.c	FUNCTION_8	IF_1	CALL_1
0x40025c3	            0x89c6	                            mov esi, eax	       264	intel_panel.c	FUNCTION_8	IF_1	CALL_1
0x40025c5	      0xe876daffff	            call sym.centre_horizontally	       264	intel_panel.c	FUNCTION_8	IF_1	CALL_1
0x40025ca	    0x418b86300200	           mov eax, dword [r14 + 0x230] 	       269	intel_panel.c	FUNCTION_8	IF_1	IF_2
0x40025d1	    0x418b8ec80000	            mov ecx, dword [r14 + 0xc8] 	       269	intel_panel.c	FUNCTION_8	IF_1	IF_2
0x40025d8	            0x39c8	                            cmp eax, ecx	       269	intel_panel.c	FUNCTION_8	IF_1	IF_2
0x40025da	            0x759d	                           jne 0x4002579	       269	intel_panel.c	FUNCTION_8	IF_1	IF_2
0x40025dc	      0xe988feffff	                           jmp 0x4002469	       269	intel_panel.c	FUNCTION_8	IF_1	IF_2
0x40025e1	            0x31d2	                            xor edx, edx	       359	intel_panel.c	FUNCTION_9	IF_5	CALL_9
0x40025e3	            0x31c9	                            xor ecx, ecx	       359	intel_panel.c	FUNCTION_9	IF_5	CALL_9
0x40025e5	      0xbe00800000	                         mov esi, 0x8000	       359	intel_panel.c	FUNCTION_9	IF_5	CALL_9
0x40025ea	      0xe9d0feffff	                           jmp 0x40024bf	       359	intel_panel.c	FUNCTION_9	IF_5	CALL_9
0x40025ef	      0xb840040080	                     mov eax, 0x80000440	       359	intel_panel.c	FUNCTION_9	IF_5	CALL_9
0x40025f4	      0xbe00800000	                         mov esi, 0x8000	       359	intel_panel.c	FUNCTION_9	IF_5	CALL_9
0x40025f9	      0xe982feffff	                           jmp 0x4002480	       359	intel_panel.c	FUNCTION_9	IF_5	CALL_9
vlv_get_backlight	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,3:FOR,0:ELSE,0	7
0x4001900	              0x53	                                push rbx	       526	intel_panel.c	FUNCTION_20
0x4001901	          0x488b1f	                    mov rbx, qword [rdi]	       527	intel_panel.c	FUNCTION_20	CALL_1
0x4001904	      0xe800000000	                          call 0x4001909	       528	intel_panel.c	FUNCTION_20	CALL_2
0x4001909	          0x4889df	                            mov rdi, rbx	       530	intel_panel.c	FUNCTION_20	CALL_3
0x400190c	            0x89c6	                            mov esi, eax	       530	intel_panel.c	FUNCTION_20	CALL_3
0x400190e	              0x5b	                                 pop rbx	       531	intel_panel.c	FUNCTION_20
0x400190f	      0xe9fcebffff	              jmp sym._vlv_get_backlight	       530	intel_panel.c	FUNCTION_20	CALL_3
pwm_get_backlight	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,2:FOR,0:ELSE,0	11
0x4000120	    0x488b87680400	           mov rax, qword [rdi + 0x468] 	       542	intel_panel.c	FUNCTION_22
0x4000127	      0xbae78d9318	                     mov edx, 0x18938de7	       547	intel_panel.c	FUNCTION_22	CALL_2
0x400012c	        0x6b483464	      imul ecx, dword [rax + 0x34], 0x64	       547	intel_panel.c	FUNCTION_22	CALL_2
0x4000130	    0x81c154530000	                         add ecx, 0x5354	       547	intel_panel.c	FUNCTION_22	CALL_2
0x4000136	            0x89c8	                            mov eax, ecx	       547	intel_panel.c	FUNCTION_22	CALL_2
0x4000138	          0xc1f91f	                           sar ecx, 0x1f	       547	intel_panel.c	FUNCTION_22	CALL_2
0x400013b	            0xf7ea	                                imul edx	       547	intel_panel.c	FUNCTION_22	CALL_2
0x400013d	          0xc1fa0b	                            sar edx, 0xb	       547	intel_panel.c	FUNCTION_22	CALL_2
0x4000140	            0x89d0	                            mov eax, edx	       547	intel_panel.c	FUNCTION_22	CALL_2
0x4000142	            0x29c8	                            sub eax, ecx	       547	intel_panel.c	FUNCTION_22	CALL_2
0x4000144	              0xc3	                                     ret	       548	intel_panel.c	FUNCTION_22
lpt_enable_backlight	DO,0:WHILE,0:SWITCH,0:IF,6:functions,0:CALL,16:FOR,0:ELSE,3	100
0x4001010	            0x4155	                                push r13	       823	intel_panel.c	FUNCTION_40
0x4001012	            0x4154	                                push r12	       823	intel_panel.c	FUNCTION_40
0x4001014	          0x4989f5	                            mov r13, rsi	       823	intel_panel.c	FUNCTION_40
0x4001017	              0x55	                                push rbp	       823	intel_panel.c	FUNCTION_40
0x4001018	              0x53	                                push rbx	       823	intel_panel.c	FUNCTION_40
0x4001019	      0xba01000000	                              mov edx, 1	       829	intel_panel.c	FUNCTION_40	CALL_3
0x400101e	        0x4883ec08	                              sub rsp, 8	       823	intel_panel.c	FUNCTION_40
0x4001022	          0x4c8b26	                    mov r12, qword [rsi]	       824	intel_panel.c	FUNCTION_40	CALL_1
0x4001025	      0xbe50820c00	                        mov esi, 0xc8250	       829	intel_panel.c	FUNCTION_40	CALL_3
0x400102a	        0x498b1c24	                    mov rbx, qword [r12]	       825	intel_panel.c	FUNCTION_40	CALL_2
0x400102e	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       829	intel_panel.c	FUNCTION_40	CALL_3
0x4001035	          0x4889df	                            mov rdi, rbx	       829	intel_panel.c	FUNCTION_40	CALL_3
0x4001038	      0xe800000000	                          call 0x400103d	       829	intel_panel.c	FUNCTION_40	CALL_3
0x400103d	            0x85c0	                           test eax, eax	       830	intel_panel.c	FUNCTION_40	IF_1
0x400103f	     0xf8846010000	                            js 0x400118b	       830	intel_panel.c	FUNCTION_40	IF_1
0x4001045	    0x83bbf8550000	            cmp dword [rbx + 0x55f8], 3 	       836	intel_panel.c	FUNCTION_40	IF_2	CALL_6
0x400104c	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       837	intel_panel.c	FUNCTION_40	IF_2	CALL_7
0x4001053	      0xba01000000	                              mov edx, 1	       837	intel_panel.c	FUNCTION_40	IF_2	CALL_7
0x4001058	     0xf84ee000000	                            je 0x400114c	       836	intel_panel.c	FUNCTION_40	IF_2	CALL_6
0x400105e	      0xbe00200c00	                        mov esi, 0xc2000	       844	intel_panel.c	FUNCTION_40	ELSE_2	CALL_9
0x4001063	          0x4889df	                            mov rdi, rbx	       844	intel_panel.c	FUNCTION_40	ELSE_2	CALL_9
0x4001066	      0xe800000000	                          call 0x400106b	       844	intel_panel.c	FUNCTION_40	ELSE_2	CALL_9
0x400106b	            0x89c2	                            mov edx, eax	       846	intel_panel.c	FUNCTION_40	ELSE_2	IF_4
0x400106d	          0x83e0fe	                     and eax, 0xfffffffe	       846	intel_panel.c	FUNCTION_40	ELSE_2	IF_4
0x4001070	      0xb901000000	                              mov ecx, 1	       849	intel_panel.c	FUNCTION_40	ELSE_2	CALL_10
0x4001075	          0x83ca01	                               or edx, 1	       846	intel_panel.c	FUNCTION_40	ELSE_2	IF_4
0x4001078	    0x4180bc246304	               cmp byte [r12 + 0x463], 0	       846	intel_panel.c	FUNCTION_40	ELSE_2	IF_4
0x4001081	      0xbe00200c00	                        mov esi, 0xc2000	       849	intel_panel.c	FUNCTION_40	ELSE_2	CALL_10
0x4001086	          0x4889df	                            mov rdi, rbx	       849	intel_panel.c	FUNCTION_40	ELSE_2	CALL_10
0x4001089	           0xf44d0	                          cmove edx, eax	       846	intel_panel.c	FUNCTION_40	ELSE_2	IF_4
0x400108c	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       849	intel_panel.c	FUNCTION_40	ELSE_2	CALL_10
0x4001093	      0xe800000000	                          call 0x4001098	       849	intel_panel.c	FUNCTION_40	ELSE_2	CALL_10
0x4001098	    0x418b94245c04	           mov edx, dword [r12 + 0x45c] 	       852	intel_panel.c	FUNCTION_40
0x40010a0	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       853	intel_panel.c	FUNCTION_40	CALL_11
0x40010a7	          0x4889df	                            mov rdi, rbx	       853	intel_panel.c	FUNCTION_40	CALL_11
0x40010aa	      0xb901000000	                              mov ecx, 1	       853	intel_panel.c	FUNCTION_40	CALL_11
0x40010af	      0xbe54820c00	                        mov esi, 0xc8254	       853	intel_panel.c	FUNCTION_40	CALL_11
0x40010b4	          0xc1e210	                           shl edx, 0x10	       852	intel_panel.c	FUNCTION_40
0x40010b7	      0xe800000000	                          call 0x40010bc	       853	intel_panel.c	FUNCTION_40	CALL_11
0x40010bc	    0x4180bc246204	               cmp byte [r12 + 0x462], 1	       857	intel_panel.c	FUNCTION_40	IF_5
0x40010c5	      0xb901000000	                              mov ecx, 1	       863	intel_panel.c	FUNCTION_40	CALL_13
0x40010ca	          0x4889df	                            mov rdi, rbx	       863	intel_panel.c	FUNCTION_40	CALL_13
0x40010cd	      0xbe50820c00	                        mov esi, 0xc8250	       863	intel_panel.c	FUNCTION_40	CALL_13
0x40010d2	            0x19ed	                            sbb ebp, ebp	       857	intel_panel.c	FUNCTION_40	IF_5
0x40010d4	            0xf7d5	                                 not ebp	       857	intel_panel.c	FUNCTION_40	IF_5
0x40010d6	    0x81e500000020	                     and ebp, 0x20000000	       857	intel_panel.c	FUNCTION_40	IF_5
0x40010dc	            0x89e8	                            mov eax, ebp	       861	intel_panel.c	FUNCTION_40	IF_6
0x40010de	       0xd00000040	                      or eax, 0x40000000	       861	intel_panel.c	FUNCTION_40	IF_6
0x40010e3	    0x83bbf8550000	            cmp dword [rbx + 0x55f8], 3 	       861	intel_panel.c	FUNCTION_40	IF_6
0x40010ea	           0xf44e8	                          cmove ebp, eax	       861	intel_panel.c	FUNCTION_40	IF_6
0x40010ed	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       863	intel_panel.c	FUNCTION_40	CALL_13
0x40010f4	            0x89ea	                            mov edx, ebp	       863	intel_panel.c	FUNCTION_40	CALL_13
0x40010f6	      0xe800000000	                          call 0x40010fb	       863	intel_panel.c	FUNCTION_40	CALL_13
0x40010fb	          0x4889df	                            mov rdi, rbx	       864	intel_panel.c	FUNCTION_40	CALL_14
0x40010fe	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       864	intel_panel.c	FUNCTION_40	CALL_14
0x4001105	            0x31d2	                            xor edx, edx	       864	intel_panel.c	FUNCTION_40	CALL_14
0x4001107	      0xbe50820c00	                        mov esi, 0xc8250	       864	intel_panel.c	FUNCTION_40	CALL_14
0x400110c	      0xe800000000	                          call 0x4001111	       864	intel_panel.c	FUNCTION_40	CALL_14
0x4001111	            0x89ea	                            mov edx, ebp	       865	intel_panel.c	FUNCTION_40	CALL_15
0x4001113	          0x4889df	                            mov rdi, rbx	       865	intel_panel.c	FUNCTION_40	CALL_15
0x4001116	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       865	intel_panel.c	FUNCTION_40	CALL_15
0x400111d	      0xbe50820c00	                        mov esi, 0xc8250	       865	intel_panel.c	FUNCTION_40	CALL_15
0x4001122	    0x81ca00000080	                      or edx, 0x80000000	       865	intel_panel.c	FUNCTION_40	CALL_15
0x4001128	      0xb901000000	                              mov ecx, 1	       865	intel_panel.c	FUNCTION_40	CALL_15
0x400112d	      0xe800000000	                          call 0x4001132	       865	intel_panel.c	FUNCTION_40	CALL_15
0x4001132	    0x418bb4245404	           mov esi, dword [r12 + 0x454] 	       868	intel_panel.c	FUNCTION_40	CALL_16
0x400113a	        0x4883c408	                              add rsp, 8	       869	intel_panel.c	FUNCTION_40
0x400113e	          0x4c89ef	                            mov rdi, r13	       868	intel_panel.c	FUNCTION_40	CALL_16
0x4001141	              0x5b	                                 pop rbx	       869	intel_panel.c	FUNCTION_40
0x4001142	              0x5d	                                 pop rbp	       869	intel_panel.c	FUNCTION_40
0x4001143	            0x415c	                                 pop r12	       869	intel_panel.c	FUNCTION_40
0x4001145	            0x415d	                                 pop r13	       869	intel_panel.c	FUNCTION_40
0x4001147	      0xe984f4ffff	jmp sym.intel_panel_actually_set_backlight	       868	intel_panel.c	FUNCTION_40	CALL_16
0x400114c	          0x4889df	                            mov rdi, rbx	       837	intel_panel.c	FUNCTION_40	IF_2	CALL_7
0x400114f	      0xbe04200c00	                        mov esi, 0xc2004	       837	intel_panel.c	FUNCTION_40	IF_2	CALL_7
0x4001154	      0xe800000000	                          call 0x4001159	       837	intel_panel.c	FUNCTION_40	IF_2	CALL_7
0x4001159	            0x89c2	                            mov edx, eax	       839	intel_panel.c	FUNCTION_40	IF_2	IF_3
0x400115b	          0x83e0df	                     and eax, 0xffffffdf	       839	intel_panel.c	FUNCTION_40	IF_2	IF_3
0x400115e	      0xb901000000	                              mov ecx, 1	       842	intel_panel.c	FUNCTION_40	IF_2	CALL_8
0x4001163	          0x83ca20	                            or edx, 0x20	       839	intel_panel.c	FUNCTION_40	IF_2	IF_3
0x4001166	    0x4180bc246304	               cmp byte [r12 + 0x463], 0	       839	intel_panel.c	FUNCTION_40	IF_2	IF_3
0x400116f	      0xbe04200c00	                        mov esi, 0xc2004	       842	intel_panel.c	FUNCTION_40	IF_2	CALL_8
0x4001174	          0x4889df	                            mov rdi, rbx	       842	intel_panel.c	FUNCTION_40	IF_2	CALL_8
0x4001177	           0xf44d0	                          cmove edx, eax	       839	intel_panel.c	FUNCTION_40	IF_2	IF_3
0x400117a	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       842	intel_panel.c	FUNCTION_40	IF_2	CALL_8
0x4001181	      0xe800000000	                          call 0x4001186	       842	intel_panel.c	FUNCTION_40	IF_2	CALL_8
0x4001186	      0xe90dffffff	                           jmp 0x4001098	       842	intel_panel.c	FUNCTION_40	IF_2	CALL_8
0x400118b	    0x48c7c6000000	                              mov rsi, 0	       831	intel_panel.c	FUNCTION_40	IF_1	CALL_4
0x4001192	      0xbf04000000	                              mov edi, 4	       831	intel_panel.c	FUNCTION_40	IF_1	CALL_4
0x4001197	        0x89442404	                mov dword [rsp + 4], eax	       831	intel_panel.c	FUNCTION_40	IF_1	CALL_4
0x400119b	      0xe800000000	                          call 0x40011a0	       831	intel_panel.c	FUNCTION_40	IF_1	CALL_4
0x40011a0	        0x8b442404	                mov eax, dword [rsp + 4]	       833	intel_panel.c	FUNCTION_40	IF_1	CALL_5
0x40011a4	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       833	intel_panel.c	FUNCTION_40	IF_1	CALL_5
0x40011ab	      0xb901000000	                              mov ecx, 1	       833	intel_panel.c	FUNCTION_40	IF_1	CALL_5
0x40011b0	      0xbe50820c00	                        mov esi, 0xc8250	       833	intel_panel.c	FUNCTION_40	IF_1	CALL_5
0x40011b5	          0x4889df	                            mov rdi, rbx	       833	intel_panel.c	FUNCTION_40	IF_1	CALL_5
0x40011b8	      0x25ffffff7f	                     and eax, 0x7fffffff	       833	intel_panel.c	FUNCTION_40	IF_1	CALL_5
0x40011bd	            0x89c2	                            mov edx, eax	       833	intel_panel.c	FUNCTION_40	IF_1	CALL_5
0x40011bf	      0xe800000000	                          call 0x40011c4	       833	intel_panel.c	FUNCTION_40	IF_1	CALL_5
0x40011c4	      0xe97cfeffff	                           jmp 0x4001045	       833	intel_panel.c	FUNCTION_40	IF_1	CALL_5
i9xx_enable_backlight	DO,0:WHILE,0:SWITCH,0:IF,5:functions,0:CALL,11:FOR,0:ELSE,0	70
0x4000930	            0x4154	                                push r12	       919	intel_panel.c	FUNCTION_42
0x4000932	              0x55	                                push rbp	       919	intel_panel.c	FUNCTION_42
0x4000933	      0xba01000000	                              mov edx, 1	       925	intel_panel.c	FUNCTION_42	CALL_3
0x4000938	              0x53	                                push rbx	       919	intel_panel.c	FUNCTION_42
0x4000939	          0x4c8b26	                    mov r12, qword [rsi]	       920	intel_panel.c	FUNCTION_42	CALL_1
0x400093c	          0x4889f5	                            mov rbp, rsi	       919	intel_panel.c	FUNCTION_42
0x400093f	        0x498b1c24	                    mov rbx, qword [r12]	       921	intel_panel.c	FUNCTION_42	CALL_2
0x4000943	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	       925	intel_panel.c	FUNCTION_42	CALL_3
0x4000949	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       925	intel_panel.c	FUNCTION_42	CALL_3
0x4000950	          0x4889df	                            mov rdi, rbx	       925	intel_panel.c	FUNCTION_42	CALL_3
0x4000953	    0x8db154120600	                lea esi, [rcx + 0x61254]	       925	intel_panel.c	FUNCTION_42	CALL_3
0x4000959	      0xe800000000	                          call 0x400095e	       925	intel_panel.c	FUNCTION_42	CALL_3
0x400095e	      0xa9feff0000	                        test eax, 0xfffe	       926	intel_panel.c	FUNCTION_42	IF_1
0x4000963	     0xf85ca000000	                           jne 0x4000a33	       926	intel_panel.c	FUNCTION_42	IF_1
0x4000969	    0x418b84245c04	           mov eax, dword [r12 + 0x45c] 	       931	intel_panel.c	FUNCTION_42
0x4000971	            0x89c2	                            mov edx, eax	       935	intel_panel.c	FUNCTION_42
0x4000973	          0xc1e211	                           shl edx, 0x11	       935	intel_panel.c	FUNCTION_42
0x4000976	    0x4180bc246104	               cmp byte [r12 + 0x461], 0	       932	intel_panel.c	FUNCTION_42	IF_2
0x400097f	            0x7418	                            je 0x4000999	       932	intel_panel.c	FUNCTION_42	IF_2
0x4000981	            0x89c2	                            mov edx, eax	       935	intel_panel.c	FUNCTION_42
0x4000983	      0xb881808080	                     mov eax, 0x80808081	       935	intel_panel.c	FUNCTION_42
0x4000988	        0x480fafd0	                           imul rdx, rax	       935	intel_panel.c	FUNCTION_42
0x400098c	        0x48c1ea27	                           shr rdx, 0x27	       935	intel_panel.c	FUNCTION_42
0x4000990	          0xc1e211	                           shl edx, 0x11	       935	intel_panel.c	FUNCTION_42
0x4000993	    0x81ca00000100	                         or edx, 0x10000	       937	intel_panel.c	FUNCTION_42	IF_3
0x4000999	    0xf68365060000	              test byte [rbx + 0x665], 4	       938	intel_panel.c	FUNCTION_42	IF_4	CALL_6
0x40009a0	            0x7411	                            je 0x40009b3	       938	intel_panel.c	FUNCTION_42	IF_4	CALL_6
0x40009a2	            0x89d0	                            mov eax, edx	       939	intel_panel.c	FUNCTION_42	IF_4
0x40009a4	          0x83c801	                               or eax, 1	       939	intel_panel.c	FUNCTION_42	IF_4
0x40009a7	    0x4180bc246204	               cmp byte [r12 + 0x462], 0	       939	intel_panel.c	FUNCTION_42	IF_4
0x40009b0	           0xf45d0	                         cmovne edx, eax	       939	intel_panel.c	FUNCTION_42	IF_4
0x40009b3	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	       941	intel_panel.c	FUNCTION_42	CALL_7
0x40009b9	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       941	intel_panel.c	FUNCTION_42	CALL_7
0x40009c0	          0x4889df	                            mov rdi, rbx	       941	intel_panel.c	FUNCTION_42	CALL_7
0x40009c3	    0x8db154120600	                lea esi, [rcx + 0x61254]	       941	intel_panel.c	FUNCTION_42	CALL_7
0x40009c9	      0xb901000000	                              mov ecx, 1	       941	intel_panel.c	FUNCTION_42	CALL_7
0x40009ce	      0xe800000000	                          call 0x40009d3	       941	intel_panel.c	FUNCTION_42	CALL_7
0x40009d3	    0x8bbb6c060000	           mov edi, dword [rbx + 0x66c] 	       942	intel_panel.c	FUNCTION_42	CALL_8
0x40009d9	            0x31d2	                            xor edx, edx	       942	intel_panel.c	FUNCTION_42	CALL_8
0x40009db	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       942	intel_panel.c	FUNCTION_42	CALL_8
0x40009e2	    0x8db754120600	                lea esi, [rdi + 0x61254]	       942	intel_panel.c	FUNCTION_42	CALL_8
0x40009e8	          0x4889df	                            mov rdi, rbx	       942	intel_panel.c	FUNCTION_42	CALL_8
0x40009eb	      0xe800000000	                          call 0x40009f0	       942	intel_panel.c	FUNCTION_42	CALL_8
0x40009f0	    0x418bb4245404	           mov esi, dword [r12 + 0x454] 	       945	intel_panel.c	FUNCTION_42	CALL_9
0x40009f8	          0x4889ef	                            mov rdi, rbp	       945	intel_panel.c	FUNCTION_42	CALL_9
0x40009fb	      0xe8d0fbffff	call sym.intel_panel_actually_set_backlight	       945	intel_panel.c	FUNCTION_42	CALL_9
0x4000a00	    0xf6835a060000	              test byte [rbx + 0x65a], 2	       952	intel_panel.c	FUNCTION_42	IF_5	CALL_10
0x4000a07	            0x7425	                            je 0x4000a2e	       952	intel_panel.c	FUNCTION_42	IF_5	CALL_10
0x4000a09	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	       953	intel_panel.c	FUNCTION_42	CALL_11
0x4000a0f	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       953	intel_panel.c	FUNCTION_42	CALL_11
0x4000a16	      0xba00000080	                     mov edx, 0x80000000	       953	intel_panel.c	FUNCTION_42	CALL_11
0x4000a1b	          0x4889df	                            mov rdi, rbx	       953	intel_panel.c	FUNCTION_42	CALL_11
0x4000a1e	    0x8db160120600	                lea esi, [rcx + 0x61260]	       953	intel_panel.c	FUNCTION_42	CALL_11
0x4000a24	      0xb901000000	                              mov ecx, 1	       953	intel_panel.c	FUNCTION_42	CALL_11
0x4000a29	      0xe800000000	                          call 0x4000a2e	       953	intel_panel.c	FUNCTION_42	CALL_11
0x4000a2e	              0x5b	                                 pop rbx	       954	intel_panel.c	FUNCTION_42
0x4000a2f	              0x5d	                                 pop rbp	       954	intel_panel.c	FUNCTION_42
0x4000a30	            0x415c	                                 pop r12	       954	intel_panel.c	FUNCTION_42
0x4000a32	              0xc3	                                     ret	       954	intel_panel.c	FUNCTION_42
0x4000a33	    0x48c7c6000000	                              mov rsi, 0	       927	intel_panel.c	FUNCTION_42	IF_1	CALL_4
0x4000a3a	      0xbf04000000	                              mov edi, 4	       927	intel_panel.c	FUNCTION_42	IF_1	CALL_4
0x4000a3f	      0xe800000000	                          call 0x4000a44	       927	intel_panel.c	FUNCTION_42	IF_1	CALL_4
0x4000a44	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	       928	intel_panel.c	FUNCTION_42	IF_1	CALL_5
0x4000a4a	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       928	intel_panel.c	FUNCTION_42	IF_1	CALL_5
0x4000a51	            0x31d2	                            xor edx, edx	       928	intel_panel.c	FUNCTION_42	IF_1	CALL_5
0x4000a53	          0x4889df	                            mov rdi, rbx	       928	intel_panel.c	FUNCTION_42	IF_1	CALL_5
0x4000a56	    0x8db154120600	                lea esi, [rcx + 0x61254]	       928	intel_panel.c	FUNCTION_42	IF_1	CALL_5
0x4000a5c	      0xb901000000	                              mov ecx, 1	       928	intel_panel.c	FUNCTION_42	IF_1	CALL_5
0x4000a61	      0xe800000000	                          call 0x4000a66	       928	intel_panel.c	FUNCTION_42	IF_1	CALL_5
0x4000a66	      0xe9fefeffff	                           jmp 0x4000969	       928	intel_panel.c	FUNCTION_42	IF_1	CALL_5
cnp_disable_backlight	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,7:FOR,0:ELSE,0	25
0x40007a0	              0x55	                                push rbp	       767	intel_panel.c	FUNCTION_37
0x40007a1	              0x53	                                push rbx	       767	intel_panel.c	FUNCTION_37
0x40007a2	            0x31f6	                            xor esi, esi	       773	intel_panel.c	FUNCTION_37	CALL_3
0x40007a4	          0x488b2f	                    mov rbp, qword [rdi]	       768	intel_panel.c	FUNCTION_37	CALL_1
0x40007a7	        0x488b5d00	                    mov rbx, qword [rbp]	       769	intel_panel.c	FUNCTION_37	CALL_2
0x40007ab	      0xe820feffff	call sym.intel_panel_actually_set_backlight	       773	intel_panel.c	FUNCTION_37	CALL_3
0x40007b0	     0xfb6b5650400	          movzx esi, byte [rbp + 0x465] 	       775	intel_panel.c	FUNCTION_37	CALL_5
0x40007b7	      0xba01000000	                              mov edx, 1	       775	intel_panel.c	FUNCTION_37	CALL_5
0x40007bc	          0x4889df	                            mov rdi, rbx	       775	intel_panel.c	FUNCTION_37	CALL_5
0x40007bf	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       775	intel_panel.c	FUNCTION_37	CALL_5
0x40007c6	          0xc1e608	                              shl esi, 8	       775	intel_panel.c	FUNCTION_37	CALL_5
0x40007c9	    0x81c650820c00	                        add esi, 0xc8250	       775	intel_panel.c	FUNCTION_37	CALL_5
0x40007cf	      0xe800000000	                          call 0x40007d4	       775	intel_panel.c	FUNCTION_37	CALL_5
0x40007d4	     0xfb6b5650400	          movzx esi, byte [rbp + 0x465] 	       776	intel_panel.c	FUNCTION_37	CALL_7
0x40007db	      0x25ffffff7f	                     and eax, 0x7fffffff	       776	intel_panel.c	FUNCTION_37	CALL_7
0x40007e0	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       776	intel_panel.c	FUNCTION_37	CALL_7
0x40007e7	          0x4889df	                            mov rdi, rbx	       776	intel_panel.c	FUNCTION_37	CALL_7
0x40007ea	            0x89c2	                            mov edx, eax	       776	intel_panel.c	FUNCTION_37	CALL_7
0x40007ec	      0xb901000000	                              mov ecx, 1	       776	intel_panel.c	FUNCTION_37	CALL_7
0x40007f1	          0xc1e608	                              shl esi, 8	       776	intel_panel.c	FUNCTION_37	CALL_7
0x40007f4	    0x81c650820c00	                        add esi, 0xc8250	       776	intel_panel.c	FUNCTION_37	CALL_7
0x40007fa	      0xe800000000	                          call 0x40007ff	       776	intel_panel.c	FUNCTION_37	CALL_7
0x40007ff	              0x5b	                                 pop rbx	       778	intel_panel.c	FUNCTION_37
0x4000800	              0x5d	                                 pop rbp	       778	intel_panel.c	FUNCTION_37
0x4000801	              0xc3	                                     ret	       778	intel_panel.c	FUNCTION_37
pch_set_backlight	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,4:FOR,0:ELSE,0	21
0x40001a0	              0x55	                                push rbp	       560	intel_panel.c	FUNCTION_24
0x40001a1	              0x53	                                push rbx	       560	intel_panel.c	FUNCTION_24
0x40001a2	            0x89f5	                            mov ebp, esi	       560	intel_panel.c	FUNCTION_24
0x40001a4	          0x488b07	                    mov rax, qword [rdi]	       562	intel_panel.c	FUNCTION_24	CALL_2
0x40001a7	      0xba01000000	                              mov edx, 1	       565	intel_panel.c	FUNCTION_24	CALL_3
0x40001ac	      0xbe54820400	                        mov esi, 0x48254	       565	intel_panel.c	FUNCTION_24	CALL_3
0x40001b1	          0x488b18	                    mov rbx, qword [rax]	       562	intel_panel.c	FUNCTION_24	CALL_2
0x40001b4	          0x4889df	                            mov rdi, rbx	       565	intel_panel.c	FUNCTION_24	CALL_3
0x40001b7	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       565	intel_panel.c	FUNCTION_24	CALL_3
0x40001be	      0xe800000000	                          call 0x40001c3	       565	intel_panel.c	FUNCTION_24	CALL_3
0x40001c3	            0x89c2	                            mov edx, eax	       565	intel_panel.c	FUNCTION_24	CALL_3
0x40001c5	          0x4889df	                            mov rdi, rbx	       566	intel_panel.c	FUNCTION_24	CALL_4
0x40001c8	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       566	intel_panel.c	FUNCTION_24	CALL_4
0x40001cf	          0x6631d2	                              xor dx, dx	       566	intel_panel.c	FUNCTION_24	CALL_4
0x40001d2	      0xb901000000	                              mov ecx, 1	       566	intel_panel.c	FUNCTION_24	CALL_4
0x40001d7	      0xbe54820400	                        mov esi, 0x48254	       566	intel_panel.c	FUNCTION_24	CALL_4
0x40001dc	             0x9ea	                             or edx, ebp	       566	intel_panel.c	FUNCTION_24	CALL_4
0x40001de	      0xe800000000	                          call 0x40001e3	       566	intel_panel.c	FUNCTION_24	CALL_4
0x40001e3	              0x5b	                                 pop rbx	       567	intel_panel.c	FUNCTION_24
0x40001e4	              0x5d	                                 pop rbp	       567	intel_panel.c	FUNCTION_24
0x40001e5	              0xc3	                                     ret	       567	intel_panel.c	FUNCTION_24
intel_panel_compute_brightness	DO,0:WHILE,0:SWITCH,0:IF,2:functions,0:CALL,1:FOR,0:ELSE,0	34
0x4000560	            0x4154	                                push r12	       466	intel_panel.c	FUNCTION_15
0x4000562	              0x55	                                push rbp	       466	intel_panel.c	FUNCTION_15
0x4000563	            0x89f5	                            mov ebp, esi	       466	intel_panel.c	FUNCTION_15
0x4000565	              0x53	                                push rbx	       466	intel_panel.c	FUNCTION_15
0x4000566	    0x8b975c040000	           mov edx, dword [rdi + 0x45c] 	       470	intel_panel.c	FUNCTION_15
0x400056c	          0x4889fb	                            mov rbx, rdi	       466	intel_panel.c	FUNCTION_15
0x400056f	          0x4c8b27	                    mov r12, qword [rdi]	       467	intel_panel.c	FUNCTION_15	CALL_1
0x4000572	            0x85d2	                           test edx, edx	       470	intel_panel.c	FUNCTION_15
0x4000574	            0x7435	                            je 0x40005ab	       470	intel_panel.c	FUNCTION_15
0x4000576	    0x8b0500000000	            mov eax, dword [0x0400057c] 	       472	intel_panel.c	FUNCTION_15	IF_1
0x400057c	            0x85c0	                           test eax, eax	       472	intel_panel.c	FUNCTION_15	IF_1
0x400057e	            0x7824	                            js 0x40005a4	       472	intel_panel.c	FUNCTION_15	IF_1
0x4000580	            0x7413	                            je 0x4000595	       475	intel_panel.c	FUNCTION_15	IF_2
0x4000582	    0x8b8358040000	           mov eax, dword [rbx + 0x458] 	       477	intel_panel.c	FUNCTION_15	IF_2
0x4000588	     0x3835c040000	            add eax, dword [rbx + 0x45c]	       477	intel_panel.c	FUNCTION_15	IF_2
0x400058e	            0x29e8	                            sub eax, ebp	       477	intel_panel.c	FUNCTION_15	IF_2
0x4000590	              0x5b	                                 pop rbx	       481	intel_panel.c	FUNCTION_15
0x4000591	              0x5d	                                 pop rbp	       481	intel_panel.c	FUNCTION_15
0x4000592	            0x415c	                                 pop r12	       481	intel_panel.c	FUNCTION_15
0x4000594	              0xc3	                                     ret	       481	intel_panel.c	FUNCTION_15
0x4000595	    0x41f684240056	            test byte [r12 + 0x5600], 4 	       475	intel_panel.c	FUNCTION_15	IF_2
0x400059e	            0x89e8	                            mov eax, ebp	       473	intel_panel.c	FUNCTION_15	IF_1
0x40005a0	            0x75e0	                           jne 0x4000582	       475	intel_panel.c	FUNCTION_15	IF_2
0x40005a2	            0xebec	                           jmp 0x4000590	       475	intel_panel.c	FUNCTION_15	IF_2
0x40005a4	            0x89e8	                            mov eax, ebp	       473	intel_panel.c	FUNCTION_15	IF_1
0x40005a6	              0x5b	                                 pop rbx	       481	intel_panel.c	FUNCTION_15
0x40005a7	              0x5d	                                 pop rbp	       481	intel_panel.c	FUNCTION_15
0x40005a8	            0x415c	                                 pop r12	       481	intel_panel.c	FUNCTION_15
0x40005aa	              0xc3	                                     ret	       481	intel_panel.c	FUNCTION_15
0x40005ab	    0x48c7c6000000	                              mov rsi, 0	       470	intel_panel.c	FUNCTION_15
0x40005b2	    0x48c7c7000000	                              mov rdi, 0	       470	intel_panel.c	FUNCTION_15
0x40005b9	      0xe800000000	                          call 0x40005be	       470	intel_panel.c	FUNCTION_15
0x40005be	             0xf0b	                                     ud2	       470	intel_panel.c	FUNCTION_15
0x40005c0	            0xebb4	                           jmp 0x4000576	       470	intel_panel.c	FUNCTION_15
intel_find_panel_downclock	DO,0:WHILE,0:SWITCH,0:IF,1:functions,1:CALL,1:FOR,0:ELSE,1	38
0x4002170	    0x488b82a00000	            mov rax, qword [rdx + 0xa0] 	        69	intel_panel.c	FUNCTION_2	FUNCTION_1
0x4002177	    0x4881c2a00000	                           add rdx, 0xa0	        69	intel_panel.c	FUNCTION_2	FUNCTION_1
0x400217e	          0x4989f0	                             mov r8, rsi	        62	intel_panel.c	FUNCTION_2
0x4002181	        0x448b4e58	            mov r9d, dword [rsi + 0x58] 	        66	intel_panel.c	FUNCTION_2
0x4002185	          0x4839c2	                            cmp rdx, rax	        69	intel_panel.c	FUNCTION_2	FUNCTION_1
0x4002188	            0x745a	                            je 0x40021e4	        69	intel_panel.c	FUNCTION_2	FUNCTION_1
0x400218a	          0x8b4e5c	            mov ecx, dword [rsi + 0x5c] 	        69	intel_panel.c	FUNCTION_2	FUNCTION_1
0x400218d	          0x4589ca	                           mov r10d, r9d	        69	intel_panel.c	FUNCTION_2	FUNCTION_1
0x4002190	            0x31f6	                            xor esi, esi	        69	intel_panel.c	FUNCTION_2	FUNCTION_1
0x4002192	            0xeb08	                           jmp 0x400219c	        69	intel_panel.c	FUNCTION_2	FUNCTION_1
0x4002194	          0x488b00	                    mov rax, qword [rax]	        69	intel_panel.c	FUNCTION_2	FUNCTION_1
0x4002197	          0x4839d0	                            cmp rax, rdx	        69	intel_panel.c	FUNCTION_2	FUNCTION_1
0x400219a	            0x743e	                            je 0x40021da	        69	intel_panel.c	FUNCTION_2	FUNCTION_1
0x400219c	          0x39485c	            cmp dword [rax + 0x5c], ecx 	        77	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1
0x400219f	            0x75f3	                           jne 0x4002194	        77	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1
0x40021a1	        0x4d8b5860	              mov r11, qword [r8 + 0x60]	        78	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1
0x40021a5	        0x4c395860	            cmp qword [rax + 0x60], r11 	        78	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1
0x40021a9	            0x75e9	                           jne 0x4002194	        78	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1
0x40021ab	        0x458b5868	            mov r11d, dword [r8 + 0x68] 	        79	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1
0x40021af	        0x44395868	           cmp dword [rax + 0x68], r11d 	        79	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1
0x40021b3	            0x75df	                           jne 0x4002194	        79	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1
0x40021b5	        0x4d8b5870	              mov r11, qword [r8 + 0x70]	        81	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1
0x40021b9	        0x4c395870	            cmp qword [rax + 0x70], r11 	        81	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1
0x40021bd	            0x75d5	                           jne 0x4002194	        81	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1
0x40021bf	        0x4d8b5878	              mov r11, qword [r8 + 0x78]	        83	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1
0x40021c3	        0x4c395878	            cmp qword [rax + 0x78], r11 	        83	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1
0x40021c7	            0x75cb	                           jne 0x4002194	        83	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1
0x40021c9	        0x448b5858	           mov r11d, dword [rax + 0x58] 	        85	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1	IF_2
0x40021cd	          0x4539d3	                          cmp r11d, r10d	        85	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1	IF_2
0x40021d0	            0x7dc2	                           jge 0x4002194	        85	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1	IF_2
0x40021d2	          0x4589da	                          mov r10d, r11d	        85	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1	IF_2
0x40021d5	          0x4889c6	                            mov rsi, rax	        85	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1	IF_2
0x40021d8	            0xebba	                           jmp 0x4002194	        85	intel_panel.c	FUNCTION_2	FUNCTION_1	IF_1	IF_2
0x40021da	          0x4539ca	                           cmp r10d, r9d	        96	intel_panel.c	FUNCTION_2	IF_1
0x40021dd	            0x7d05	                           jge 0x40021e4	        96	intel_panel.c	FUNCTION_2	IF_1
0x40021df	      0xe900000000	                           jmp 0x40021e4	        97	intel_panel.c	FUNCTION_2	CALL_1
0x40021e4	            0x31c0	                            xor eax, eax	       100	intel_panel.c	FUNCTION_2	ELSE_1
0x40021e6	              0xc3	                                     ret	       100	intel_panel.c	FUNCTION_2	ELSE_1
lpt_disable_backlight	DO,0:WHILE,0:SWITCH,0:IF,1:functions,0:CALL,8:FOR,0:ELSE,0	41
0x4000f60	              0x53	                                push rbx	       677	intel_panel.c	FUNCTION_31
0x4000f61	            0x31f6	                            xor esi, esi	       682	intel_panel.c	FUNCTION_31	CALL_3
0x4000f63	        0x4883ec08	                              sub rsp, 8	       677	intel_panel.c	FUNCTION_31
0x4000f67	          0x488b07	                    mov rax, qword [rdi]	       679	intel_panel.c	FUNCTION_31	CALL_2
0x4000f6a	          0x488b18	                    mov rbx, qword [rax]	       679	intel_panel.c	FUNCTION_31	CALL_2
0x4000f6d	      0xe85ef6ffff	call sym.intel_panel_actually_set_backlight	       682	intel_panel.c	FUNCTION_31	CALL_3
0x4000f72	      0xba01000000	                              mov edx, 1	       692	intel_panel.c	FUNCTION_31	CALL_4
0x4000f77	      0xbe50820400	                        mov esi, 0x48250	       692	intel_panel.c	FUNCTION_31	CALL_4
0x4000f7c	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       692	intel_panel.c	FUNCTION_31	CALL_4
0x4000f83	          0x4889df	                            mov rdi, rbx	       692	intel_panel.c	FUNCTION_31	CALL_4
0x4000f86	      0xe800000000	                          call 0x4000f8b	       692	intel_panel.c	FUNCTION_31	CALL_4
0x4000f8b	            0x85c0	                           test eax, eax	       693	intel_panel.c	FUNCTION_31	IF_1
0x4000f8d	            0x783f	                            js 0x4000fce	       693	intel_panel.c	FUNCTION_31	IF_1
0x4000f8f	          0x4889df	                            mov rdi, rbx	       698	intel_panel.c	FUNCTION_31	CALL_7
0x4000f92	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       698	intel_panel.c	FUNCTION_31	CALL_7
0x4000f99	      0xba01000000	                              mov edx, 1	       698	intel_panel.c	FUNCTION_31	CALL_7
0x4000f9e	      0xbe50820c00	                        mov esi, 0xc8250	       698	intel_panel.c	FUNCTION_31	CALL_7
0x4000fa3	      0xe800000000	                          call 0x4000fa8	       698	intel_panel.c	FUNCTION_31	CALL_7
0x4000fa8	      0x25ffffff7f	                     and eax, 0x7fffffff	       699	intel_panel.c	FUNCTION_31	CALL_8
0x4000fad	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       699	intel_panel.c	FUNCTION_31	CALL_8
0x4000fb4	          0x4889df	                            mov rdi, rbx	       699	intel_panel.c	FUNCTION_31	CALL_8
0x4000fb7	            0x89c2	                            mov edx, eax	       699	intel_panel.c	FUNCTION_31	CALL_8
0x4000fb9	      0xb901000000	                              mov ecx, 1	       699	intel_panel.c	FUNCTION_31	CALL_8
0x4000fbe	      0xbe50820c00	                        mov esi, 0xc8250	       699	intel_panel.c	FUNCTION_31	CALL_8
0x4000fc3	      0xe800000000	                          call 0x4000fc8	       699	intel_panel.c	FUNCTION_31	CALL_8
0x4000fc8	        0x4883c408	                              add rsp, 8	       700	intel_panel.c	FUNCTION_31
0x4000fcc	              0x5b	                                 pop rbx	       700	intel_panel.c	FUNCTION_31
0x4000fcd	              0xc3	                                     ret	       700	intel_panel.c	FUNCTION_31
0x4000fce	    0x48c7c6000000	                              mov rsi, 0	       694	intel_panel.c	FUNCTION_31	IF_1	CALL_5
0x4000fd5	      0xbf04000000	                              mov edi, 4	       694	intel_panel.c	FUNCTION_31	IF_1	CALL_5
0x4000fda	        0x89442404	                mov dword [rsp + 4], eax	       694	intel_panel.c	FUNCTION_31	IF_1	CALL_5
0x4000fde	      0xe800000000	                          call 0x4000fe3	       694	intel_panel.c	FUNCTION_31	IF_1	CALL_5
0x4000fe3	        0x8b442404	                mov eax, dword [rsp + 4]	       695	intel_panel.c	FUNCTION_31	IF_1	CALL_6
0x4000fe7	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       695	intel_panel.c	FUNCTION_31	IF_1	CALL_6
0x4000fee	      0xb901000000	                              mov ecx, 1	       695	intel_panel.c	FUNCTION_31	IF_1	CALL_6
0x4000ff3	      0xbe50820400	                        mov esi, 0x48250	       695	intel_panel.c	FUNCTION_31	IF_1	CALL_6
0x4000ff8	          0x4889df	                            mov rdi, rbx	       695	intel_panel.c	FUNCTION_31	IF_1	CALL_6
0x4000ffb	      0x25ffffff7f	                     and eax, 0x7fffffff	       695	intel_panel.c	FUNCTION_31	IF_1	CALL_6
0x4001000	            0x89c2	                            mov edx, eax	       695	intel_panel.c	FUNCTION_31	IF_1	CALL_6
0x4001002	      0xe800000000	                          call 0x4001007	       695	intel_panel.c	FUNCTION_31	IF_1	CALL_6
0x4001007	            0xeb86	                           jmp 0x4000f8f	       695	intel_panel.c	FUNCTION_31	IF_1	CALL_6
pwm_set_backlight	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,3:FOR,0:ELSE,0	1
0x4000290	            0xf3c3	                                     ret	       618	intel_panel.c	FUNCTION_28
cnp_setup_backlight	DO,0:WHILE,0:SWITCH,0:IF,2:functions,0:CALL,10:FOR,0:ELSE,0	58
0x4001d10	            0x4154	                                push r12	      1720	intel_panel.c	FUNCTION_71
0x4001d12	              0x55	                                push rbp	      1720	intel_panel.c	FUNCTION_71
0x4001d13	      0xba01000000	                              mov edx, 1	      1732	intel_panel.c	FUNCTION_71	CALL_3
0x4001d18	              0x53	                                push rbx	      1720	intel_panel.c	FUNCTION_71
0x4001d19	          0x4c8b27	                    mov r12, qword [rdi]	      1721	intel_panel.c	FUNCTION_71	CALL_1
0x4001d1c	          0x4889fb	                            mov rbx, rdi	      1720	intel_panel.c	FUNCTION_71
0x4001d1f	    0xc68765040000	               mov byte [rdi + 0x465], 0	      1730	intel_panel.c	FUNCTION_71
0x4001d26	      0xbe50820c00	                        mov esi, 0xc8250	      1732	intel_panel.c	FUNCTION_71	CALL_3
0x4001d2b	          0x4c89e7	                            mov rdi, r12	      1732	intel_panel.c	FUNCTION_71	CALL_3
0x4001d2e	    0x498b8424f807	           mov rax, qword [r12 + 0x7f8] 	      1732	intel_panel.c	FUNCTION_71	CALL_3
0x4001d36	      0xe800000000	                          call 0x4001d3b	      1732	intel_panel.c	FUNCTION_71	CALL_3
0x4001d3b	     0xfb6b3650400	          movzx esi, byte [rbx + 0x465] 	      1736	intel_panel.c	FUNCTION_71	CALL_5
0x4001d42	            0x89c5	                            mov ebp, eax	      1732	intel_panel.c	FUNCTION_71	CALL_3
0x4001d44	          0xc1e81d	                           shr eax, 0x1d	      1734	intel_panel.c	FUNCTION_71
0x4001d47	          0x83e001	                              and eax, 1	      1734	intel_panel.c	FUNCTION_71
0x4001d4a	      0xba01000000	                              mov edx, 1	      1736	intel_panel.c	FUNCTION_71	CALL_5
0x4001d4f	          0x4c89e7	                            mov rdi, r12	      1736	intel_panel.c	FUNCTION_71	CALL_5
0x4001d52	    0x888362040000	              mov byte [rbx + 0x462], al	      1734	intel_panel.c	FUNCTION_71
0x4001d58	    0x498b8424f807	           mov rax, qword [r12 + 0x7f8] 	      1736	intel_panel.c	FUNCTION_71	CALL_5
0x4001d60	          0xc1e608	                              shl esi, 8	      1736	intel_panel.c	FUNCTION_71	CALL_5
0x4001d63	    0x81c654820c00	                        add esi, 0xc8254	      1736	intel_panel.c	FUNCTION_71	CALL_5
0x4001d69	      0xe800000000	                          call 0x4001d6e	      1736	intel_panel.c	FUNCTION_71	CALL_5
0x4001d6e	            0x85c0	                           test eax, eax	      1738	intel_panel.c	FUNCTION_71	IF_1
0x4001d70	    0x89835c040000	            mov dword [rbx + 0x45c], eax	      1735	intel_panel.c	FUNCTION_71
0x4001d76	            0x746b	                            je 0x4001de3	      1738	intel_panel.c	FUNCTION_71	IF_1
0x4001d78	          0x4889df	                            mov rdi, rbx	      1744	intel_panel.c	FUNCTION_71	CALL_7
0x4001d7b	      0xe840ebffff	          call sym.get_backlight_min_vbt	      1744	intel_panel.c	FUNCTION_71	CALL_7
0x4001d80	     0xfb6b3650400	          movzx esi, byte [rbx + 0x465] 	       538	intel_panel.c	FUNCTION_21	CALL_3
0x4001d87	          0x488b3b	                    mov rdi, qword [rbx]	       535	intel_panel.c	FUNCTION_21	CALL_1
0x4001d8a	      0xba01000000	                              mov edx, 1	       538	intel_panel.c	FUNCTION_21	CALL_3
0x4001d8f	    0x898358040000	            mov dword [rbx + 0x458], eax	      1744	intel_panel.c	FUNCTION_71	CALL_7
0x4001d95	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	       538	intel_panel.c	FUNCTION_21	CALL_3
0x4001d9c	          0xc1e608	                              shl esi, 8	       538	intel_panel.c	FUNCTION_21	CALL_3
0x4001d9f	    0x81c658820c00	                        add esi, 0xc8258	       538	intel_panel.c	FUNCTION_21	CALL_3
0x4001da5	      0xe800000000	                          call 0x4001daa	       538	intel_panel.c	FUNCTION_21	CALL_3
0x4001daa	          0x4889df	                            mov rdi, rbx	      1747	intel_panel.c	FUNCTION_71	CALL_9
0x4001dad	            0x89c6	                            mov esi, eax	      1747	intel_panel.c	FUNCTION_71	CALL_9
0x4001daf	      0xe8ace7ffff	 call sym.intel_panel_compute_brightness	      1747	intel_panel.c	FUNCTION_71	CALL_9
0x4001db4	    0x398358040000	           cmp dword [rbx + 0x458], eax 	      1748	intel_panel.c	FUNCTION_71	CALL_10
0x4001dba	    0x8b935c040000	           mov edx, dword [rbx + 0x45c] 	      1748	intel_panel.c	FUNCTION_71	CALL_10
0x4001dc0	     0xf4383580400	         cmovae eax, dword [rbx + 0x458]	      1748	intel_panel.c	FUNCTION_71	CALL_10
0x4001dc7	            0x39d0	                            cmp eax, edx	      1748	intel_panel.c	FUNCTION_71	CALL_10
0x4001dc9	           0xf47c2	                          cmova eax, edx	      1748	intel_panel.c	FUNCTION_71	CALL_10
0x4001dcc	          0xc1ed1f	                           shr ebp, 0x1f	      1751	intel_panel.c	FUNCTION_71
0x4001dcf	    0x898354040000	            mov dword [rbx + 0x454], eax	      1748	intel_panel.c	FUNCTION_71	CALL_10
0x4001dd5	    0x4088ab600400	             mov byte [rbx + 0x460], bpl	      1751	intel_panel.c	FUNCTION_71
0x4001ddc	            0x31c0	                            xor eax, eax	      1753	intel_panel.c	FUNCTION_71
0x4001dde	              0x5b	                                 pop rbx	      1754	intel_panel.c	FUNCTION_71
0x4001ddf	              0x5d	                                 pop rbp	      1754	intel_panel.c	FUNCTION_71
0x4001de0	            0x415c	                                 pop r12	      1754	intel_panel.c	FUNCTION_71
0x4001de2	              0xc3	                                     ret	      1754	intel_panel.c	FUNCTION_71
0x4001de3	          0x4889df	                            mov rdi, rbx	      1739	intel_panel.c	FUNCTION_71	CALL_6
0x4001de6	      0xe845fbffff	          call sym.get_backlight_max_vbt	      1739	intel_panel.c	FUNCTION_71	CALL_6
0x4001deb	            0x85c0	                           test eax, eax	      1741	intel_panel.c	FUNCTION_71	IF_2
0x4001ded	    0x89835c040000	            mov dword [rbx + 0x45c], eax	      1739	intel_panel.c	FUNCTION_71	CALL_6
0x4001df3	            0x7583	                           jne 0x4001d78	      1741	intel_panel.c	FUNCTION_71	IF_2
0x4001df5	      0xb8edffffff	                     mov eax, 0xffffffed	      1742	intel_panel.c	FUNCTION_71	IF_2
0x4001dfa	            0xebe2	                           jmp 0x4001dde	      1742	intel_panel.c	FUNCTION_71	IF_2
intel_backlight_device_unregister	DO,0:WHILE,0:SWITCH,0:IF,1:functions,0:CALL,1:FOR,0:ELSE,0	10
0x4002a00	          0x4889f8	                            mov rax, rdi	      1300	intel_panel.c	FUNCTION_54
0x4002a03	    0x488bbf700400	           mov rdi, qword [rdi + 0x470] 	      1303	intel_panel.c	FUNCTION_54	IF_1
0x4002a0a	          0x4885ff	                           test rdi, rdi	      1303	intel_panel.c	FUNCTION_54	IF_1
0x4002a0d	            0x7415	                            je 0x4002a24	      1303	intel_panel.c	FUNCTION_54	IF_1
0x4002a0f	              0x53	                                push rbx	      1300	intel_panel.c	FUNCTION_54
0x4002a10	          0x4889c3	                            mov rbx, rax	      1300	intel_panel.c	FUNCTION_54
0x4002a13	      0xe800000000	                          call 0x4002a18	      1304	intel_panel.c	FUNCTION_54	IF_1	CALL_1
0x4002a18	    0x48c783700400	              mov qword [rbx + 0x470], 0	      1305	intel_panel.c	FUNCTION_54	IF_1
0x4002a23	              0x5b	                                 pop rbx	      1307	intel_panel.c	FUNCTION_54
0x4002a24	            0xf3c3	                                     ret	      1307	intel_panel.c	FUNCTION_54
intel_panel_enable_backlight	DO,0:WHILE,0:SWITCH,0:IF,4:functions,0:CALL,9:FOR,0:ELSE,0	64
0x40027c0	            0x4156	                                push r14	      1112	intel_panel.c	FUNCTION_48
0x40027c2	            0x4155	                                push r13	      1112	intel_panel.c	FUNCTION_48
0x40027c4	            0x4154	                                push r12	      1112	intel_panel.c	FUNCTION_48
0x40027c6	              0x55	                                push rbp	      1112	intel_panel.c	FUNCTION_48
0x40027c7	              0x53	                                push rbx	      1112	intel_panel.c	FUNCTION_48
0x40027c8	          0x488b1e	                    mov rbx, qword [rsi]	      1113	intel_panel.c	FUNCTION_48	CALL_1
0x40027cb	    0x80bb50040000	               cmp byte [rbx + 0x450], 0	      1118	intel_panel.c	FUNCTION_48	IF_1
0x40027d2	            0x7509	                           jne 0x40027dd	      1118	intel_panel.c	FUNCTION_48	IF_1
0x40027d4	              0x5b	                                 pop rbx	      1142	intel_panel.c	FUNCTION_48
0x40027d5	              0x5d	                                 pop rbp	      1142	intel_panel.c	FUNCTION_48
0x40027d6	            0x415c	                                 pop r12	      1142	intel_panel.c	FUNCTION_48
0x40027d8	            0x415d	                                 pop r13	      1142	intel_panel.c	FUNCTION_48
0x40027da	            0x415e	                                 pop r14	      1142	intel_panel.c	FUNCTION_48
0x40027dc	              0xc3	                                     ret	      1142	intel_panel.c	FUNCTION_48
0x40027dd	          0x488b07	                    mov rax, qword [rdi]	      1116	intel_panel.c	FUNCTION_48	CALL_3
0x40027e0	          0x4c8b2b	                    mov r13, qword [rbx]	      1114	intel_panel.c	FUNCTION_48	CALL_2
0x40027e3	          0x4889f5	                            mov rbp, rsi	      1114	intel_panel.c	FUNCTION_48	CALL_2
0x40027e6	          0x4989fc	                            mov r12, rdi	      1114	intel_panel.c	FUNCTION_48	CALL_2
0x40027e9	    0x48c7c6000000	                              mov rsi, 0	      1121	intel_panel.c	FUNCTION_48	CALL_5
0x40027f0	      0xbf04000000	                              mov edi, 4	      1121	intel_panel.c	FUNCTION_48	CALL_5
0x40027f5	    0x8b90b0040000	           mov edx, dword [rax + 0x4b0] 	      1121	intel_panel.c	FUNCTION_48	CALL_5
0x40027fb	    0x4981c5784e00	                         add r13, 0x4e78	      1123	intel_panel.c	FUNCTION_48	CALL_6
0x4002802	          0x83c241	                           add edx, 0x41	      1121	intel_panel.c	FUNCTION_48	CALL_5
0x4002805	      0xe800000000	                          call 0x400280a	      1121	intel_panel.c	FUNCTION_48	CALL_5
0x400280a	          0x4c89ef	                            mov rdi, r13	      1123	intel_panel.c	FUNCTION_48	CALL_6
0x400280d	      0xe800000000	                          call 0x4002812	      1123	intel_panel.c	FUNCTION_48	CALL_6
0x4002812	    0x8b835c040000	           mov eax, dword [rbx + 0x45c] 	      1125	intel_panel.c	FUNCTION_48
0x4002818	            0x85c0	                           test eax, eax	      1125	intel_panel.c	FUNCTION_48
0x400281a	            0x7474	                            je 0x4002890	      1125	intel_panel.c	FUNCTION_48
0x400281c	    0x8bb358040000	           mov esi, dword [rbx + 0x458] 	      1127	intel_panel.c	FUNCTION_48	IF_2
0x4002822	    0x39b354040000	           cmp dword [rbx + 0x454], esi 	      1127	intel_panel.c	FUNCTION_48	IF_2
0x4002828	            0x763c	                           jbe 0x4002866	      1127	intel_panel.c	FUNCTION_48	IF_2
0x400282a	    0x488b83980400	           mov rax, qword [rbx + 0x498] 	      1136	intel_panel.c	FUNCTION_48	CALL_8
0x4002831	          0x4889ee	                            mov rsi, rbp	      1136	intel_panel.c	FUNCTION_48	CALL_8
0x4002834	          0x4c89e7	                            mov rdi, r12	      1136	intel_panel.c	FUNCTION_48	CALL_8
0x4002837	      0xe800000000	                          call 0x400283c	      1136	intel_panel.c	FUNCTION_48	CALL_8
0x400283c	    0x488b83700400	           mov rax, qword [rbx + 0x470] 	      1138	intel_panel.c	FUNCTION_48	IF_4
0x4002843	    0xc68360040000	               mov byte [rbx + 0x460], 1	      1137	intel_panel.c	FUNCTION_48
0x400284a	          0x4885c0	                           test rax, rax	      1138	intel_panel.c	FUNCTION_48	IF_4
0x400284d	            0x7407	                            je 0x4002856	      1138	intel_panel.c	FUNCTION_48	IF_4
0x400284f	    0xc74008000000	                  mov dword [rax + 8], 0	      1139	intel_panel.c	FUNCTION_48	IF_4
0x4002856	              0x5b	                                 pop rbx	      1142	intel_panel.c	FUNCTION_48
0x4002857	          0x4c89ef	                            mov rdi, r13	      1141	intel_panel.c	FUNCTION_48	CALL_9
0x400285a	              0x5d	                                 pop rbp	      1142	intel_panel.c	FUNCTION_48
0x400285b	            0x415c	                                 pop r12	      1142	intel_panel.c	FUNCTION_48
0x400285d	            0x415d	                                 pop r13	      1142	intel_panel.c	FUNCTION_48
0x400285f	            0x415e	                                 pop r14	      1142	intel_panel.c	FUNCTION_48
0x4002861	      0xe900000000	                           jmp 0x4002866	      1141	intel_panel.c	FUNCTION_48	CALL_9
0x4002866	    0x4c8bb3700400	           mov r14, qword [rbx + 0x470] 	      1129	intel_panel.c	FUNCTION_48	IF_2	IF_3
0x400286d	    0x8bbb5c040000	           mov edi, dword [rbx + 0x45c] 	      1128	intel_panel.c	FUNCTION_48	IF_2
0x4002873	          0x4d85f6	                           test r14, r14	      1129	intel_panel.c	FUNCTION_48	IF_2	IF_3
0x4002876	    0x89bb54040000	            mov dword [rbx + 0x454], edi	      1128	intel_panel.c	FUNCTION_48	IF_2
0x400287c	            0x74ac	                            je 0x400282a	      1129	intel_panel.c	FUNCTION_48	IF_2	IF_3
0x400287e	        0x458b4604	                mov r8d, dword [r14 + 4]	       460	intel_panel.c	FUNCTION_14	CALL_1
0x4002882	            0x31c9	                            xor ecx, ecx	       460	intel_panel.c	FUNCTION_14	CALL_1
0x4002884	            0x89fa	                            mov edx, edi	       460	intel_panel.c	FUNCTION_14	CALL_1
0x4002886	      0xe8c5dbffff	                          call sym.scale	       460	intel_panel.c	FUNCTION_14	CALL_1
0x400288b	          0x418906	                    mov dword [r14], eax	      1130	intel_panel.c	FUNCTION_48	IF_2	IF_3
0x400288e	            0xeb9a	                           jmp 0x400282a	      1130	intel_panel.c	FUNCTION_48	IF_2	IF_3
0x4002890	    0x48c7c6000000	                              mov rsi, 0	      1125	intel_panel.c	FUNCTION_48
0x4002897	    0x48c7c7000000	                              mov rdi, 0	      1125	intel_panel.c	FUNCTION_48
0x400289e	      0xe800000000	                          call 0x40028a3	      1125	intel_panel.c	FUNCTION_48
0x40028a3	             0xf0b	                                     ud2	      1125	intel_panel.c	FUNCTION_48
0x40028a5	      0xe972ffffff	                           jmp 0x400281c	      1125	intel_panel.c	FUNCTION_48
i965_enable_backlight	DO,0:WHILE,0:SWITCH,0:IF,4:functions,0:CALL,12:FOR,0:ELSE,0	83
0x4000a70	            0x4155	                                push r13	       958	intel_panel.c	FUNCTION_43
0x4000a72	            0x4154	                                push r12	       958	intel_panel.c	FUNCTION_43
0x4000a74	          0x4989f5	                            mov r13, rsi	       958	intel_panel.c	FUNCTION_43
0x4000a77	              0x55	                                push rbp	       958	intel_panel.c	FUNCTION_43
0x4000a78	              0x53	                                push rbx	       958	intel_panel.c	FUNCTION_43
0x4000a79	      0xba01000000	                              mov edx, 1	       965	intel_panel.c	FUNCTION_43	CALL_4
0x4000a7e	        0x4883ec08	                              sub rsp, 8	       958	intel_panel.c	FUNCTION_43
0x4000a82	          0x4c8b26	                    mov r12, qword [rsi]	       959	intel_panel.c	FUNCTION_43	CALL_1
0x4000a85	        0x488b4608	                mov rax, qword [rsi + 8]	       962	intel_panel.c	FUNCTION_43	CALL_3
0x4000a89	        0x498b1c24	                    mov rbx, qword [r12]	       960	intel_panel.c	FUNCTION_43	CALL_2
0x4000a8d	    0x8ba8b0040000	           mov ebp, dword [rax + 0x4b0] 	       962	intel_panel.c	FUNCTION_43	CALL_3
0x4000a93	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	       965	intel_panel.c	FUNCTION_43	CALL_4
0x4000a99	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       965	intel_panel.c	FUNCTION_43	CALL_4
0x4000aa0	          0x4889df	                            mov rdi, rbx	       965	intel_panel.c	FUNCTION_43	CALL_4
0x4000aa3	    0x8db150120600	                lea esi, [rcx + 0x61250]	       965	intel_panel.c	FUNCTION_43	CALL_4
0x4000aa9	      0xe800000000	                          call 0x4000aae	       965	intel_panel.c	FUNCTION_43	CALL_4
0x4000aae	            0x85c0	                           test eax, eax	       966	intel_panel.c	FUNCTION_43	IF_1
0x4000ab0	     0xf88ed000000	                            js 0x4000ba3	       966	intel_panel.c	FUNCTION_43	IF_1
0x4000ab6	    0x4180bc246104	               cmp byte [r12 + 0x461], 0	       973	intel_panel.c	FUNCTION_43	IF_2
0x4000abf	    0x418b94245c04	           mov edx, dword [r12 + 0x45c] 	       972	intel_panel.c	FUNCTION_43
0x4000ac7	            0x740d	                            je 0x4000ad6	       973	intel_panel.c	FUNCTION_43	IF_2
0x4000ac9	      0xb881808080	                     mov eax, 0x80808081	       974	intel_panel.c	FUNCTION_43	IF_2
0x4000ace	        0x480fafd0	                           imul rdx, rax	       974	intel_panel.c	FUNCTION_43	IF_2
0x4000ad2	        0x48c1ea27	                           shr rdx, 0x27	       974	intel_panel.c	FUNCTION_43	IF_2
0x4000ad6	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	       977	intel_panel.c	FUNCTION_43	CALL_7
0x4000adc	          0xc1e51d	                           shl ebp, 0x1d	       979	intel_panel.c	FUNCTION_43	CALL_8
0x4000adf	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       977	intel_panel.c	FUNCTION_43	CALL_7
0x4000ae6	          0xc1e210	                           shl edx, 0x10	       977	intel_panel.c	FUNCTION_43	CALL_7
0x4000ae9	          0x4889df	                            mov rdi, rbx	       977	intel_panel.c	FUNCTION_43	CALL_7
0x4000aec	    0x8db154120600	                lea esi, [rcx + 0x61254]	       977	intel_panel.c	FUNCTION_43	CALL_7
0x4000af2	      0xb901000000	                              mov ecx, 1	       977	intel_panel.c	FUNCTION_43	CALL_7
0x4000af7	      0xe800000000	                          call 0x4000afc	       977	intel_panel.c	FUNCTION_43	CALL_7
0x4000afc	            0x89e8	                            mov eax, ebp	       981	intel_panel.c	FUNCTION_43	IF_3
0x4000afe	    0x8bbb6c060000	           mov edi, dword [rbx + 0x66c] 	       984	intel_panel.c	FUNCTION_43	CALL_9
0x4000b04	      0xb901000000	                              mov ecx, 1	       984	intel_panel.c	FUNCTION_43	CALL_9
0x4000b09	       0xd00000040	                      or eax, 0x40000000	       981	intel_panel.c	FUNCTION_43	IF_3
0x4000b0e	    0x4180bc246104	               cmp byte [r12 + 0x461], 0	       981	intel_panel.c	FUNCTION_43	IF_3
0x4000b17	    0x8db750120600	                lea esi, [rdi + 0x61250]	       984	intel_panel.c	FUNCTION_43	CALL_9
0x4000b1d	          0x4889df	                            mov rdi, rbx	       984	intel_panel.c	FUNCTION_43	CALL_9
0x4000b20	           0xf45e8	                         cmovne ebp, eax	       981	intel_panel.c	FUNCTION_43	IF_3
0x4000b23	            0x89e8	                            mov eax, ebp	       983	intel_panel.c	FUNCTION_43	IF_4
0x4000b25	       0xd00000010	                      or eax, 0x10000000	       983	intel_panel.c	FUNCTION_43	IF_4
0x4000b2a	    0x4180bc246204	               cmp byte [r12 + 0x462], 0	       983	intel_panel.c	FUNCTION_43	IF_4
0x4000b33	           0xf45e8	                         cmovne ebp, eax	       983	intel_panel.c	FUNCTION_43	IF_4
0x4000b36	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       984	intel_panel.c	FUNCTION_43	CALL_9
0x4000b3d	            0x89ea	                            mov edx, ebp	       984	intel_panel.c	FUNCTION_43	CALL_9
0x4000b3f	      0xe800000000	                          call 0x4000b44	       984	intel_panel.c	FUNCTION_43	CALL_9
0x4000b44	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	       985	intel_panel.c	FUNCTION_43	CALL_10
0x4000b4a	          0x4889df	                            mov rdi, rbx	       985	intel_panel.c	FUNCTION_43	CALL_10
0x4000b4d	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       985	intel_panel.c	FUNCTION_43	CALL_10
0x4000b54	            0x31d2	                            xor edx, edx	       985	intel_panel.c	FUNCTION_43	CALL_10
0x4000b56	    0x8db150120600	                lea esi, [rcx + 0x61250]	       985	intel_panel.c	FUNCTION_43	CALL_10
0x4000b5c	      0xe800000000	                          call 0x4000b61	       985	intel_panel.c	FUNCTION_43	CALL_10
0x4000b61	    0x8bbb6c060000	           mov edi, dword [rbx + 0x66c] 	       986	intel_panel.c	FUNCTION_43	CALL_11
0x4000b67	            0x89ea	                            mov edx, ebp	       986	intel_panel.c	FUNCTION_43	CALL_11
0x4000b69	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       986	intel_panel.c	FUNCTION_43	CALL_11
0x4000b70	    0x81ca00000080	                      or edx, 0x80000000	       986	intel_panel.c	FUNCTION_43	CALL_11
0x4000b76	      0xb901000000	                              mov ecx, 1	       986	intel_panel.c	FUNCTION_43	CALL_11
0x4000b7b	    0x8db750120600	                lea esi, [rdi + 0x61250]	       986	intel_panel.c	FUNCTION_43	CALL_11
0x4000b81	          0x4889df	                            mov rdi, rbx	       986	intel_panel.c	FUNCTION_43	CALL_11
0x4000b84	      0xe800000000	                          call 0x4000b89	       986	intel_panel.c	FUNCTION_43	CALL_11
0x4000b89	    0x418bb4245404	           mov esi, dword [r12 + 0x454] 	       988	intel_panel.c	FUNCTION_43	CALL_12
0x4000b91	        0x4883c408	                              add rsp, 8	       989	intel_panel.c	FUNCTION_43
0x4000b95	          0x4c89ef	                            mov rdi, r13	       988	intel_panel.c	FUNCTION_43	CALL_12
0x4000b98	              0x5b	                                 pop rbx	       989	intel_panel.c	FUNCTION_43
0x4000b99	              0x5d	                                 pop rbp	       989	intel_panel.c	FUNCTION_43
0x4000b9a	            0x415c	                                 pop r12	       989	intel_panel.c	FUNCTION_43
0x4000b9c	            0x415d	                                 pop r13	       989	intel_panel.c	FUNCTION_43
0x4000b9e	      0xe92dfaffff	jmp sym.intel_panel_actually_set_backlight	       988	intel_panel.c	FUNCTION_43	CALL_12
0x4000ba3	    0x48c7c6000000	                              mov rsi, 0	       967	intel_panel.c	FUNCTION_43	IF_1	CALL_5
0x4000baa	      0xbf04000000	                              mov edi, 4	       967	intel_panel.c	FUNCTION_43	IF_1	CALL_5
0x4000baf	        0x89442404	                mov dword [rsp + 4], eax	       967	intel_panel.c	FUNCTION_43	IF_1	CALL_5
0x4000bb3	      0xe800000000	                          call 0x4000bb8	       967	intel_panel.c	FUNCTION_43	IF_1	CALL_5
0x4000bb8	    0x8b836c060000	           mov eax, dword [rbx + 0x66c] 	       969	intel_panel.c	FUNCTION_43	IF_1	CALL_6
0x4000bbe	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       969	intel_panel.c	FUNCTION_43	IF_1	CALL_6
0x4000bc5	      0xb901000000	                              mov ecx, 1	       969	intel_panel.c	FUNCTION_43	IF_1	CALL_6
0x4000bca	          0x4889df	                            mov rdi, rbx	       969	intel_panel.c	FUNCTION_43	IF_1	CALL_6
0x4000bcd	    0x8db050120600	                lea esi, [rax + 0x61250]	       969	intel_panel.c	FUNCTION_43	IF_1	CALL_6
0x4000bd3	        0x8b442404	                mov eax, dword [rsp + 4]	       969	intel_panel.c	FUNCTION_43	IF_1	CALL_6
0x4000bd7	      0x25ffffff7f	                     and eax, 0x7fffffff	       969	intel_panel.c	FUNCTION_43	IF_1	CALL_6
0x4000bdc	            0x89c2	                            mov edx, eax	       969	intel_panel.c	FUNCTION_43	IF_1	CALL_6
0x4000bde	      0xe800000000	                          call 0x4000be3	       969	intel_panel.c	FUNCTION_43	IF_1	CALL_6
0x4000be3	      0xe9cefeffff	                           jmp 0x4000ab6	       969	intel_panel.c	FUNCTION_43	IF_1	CALL_6
lpt_setup_backlight	DO,0:WHILE,0:SWITCH,0:IF,3:functions,0:CALL,11:FOR,0:ELSE,1	69
0x4001bf0	            0x4154	                                push r12	      1504	intel_panel.c	FUNCTION_65
0x4001bf2	              0x55	                                push rbp	      1504	intel_panel.c	FUNCTION_65
0x4001bf3	      0xba01000000	                              mov edx, 1	      1511	intel_panel.c	FUNCTION_65	CALL_3
0x4001bf8	              0x53	                                push rbx	      1504	intel_panel.c	FUNCTION_65
0x4001bf9	          0x488b2f	                    mov rbp, qword [rdi]	      1505	intel_panel.c	FUNCTION_65	CALL_1
0x4001bfc	          0x4889fb	                            mov rbx, rdi	      1504	intel_panel.c	FUNCTION_65
0x4001bff	    0x83bdf8550000	            cmp dword [rbp + 0x55f8], 3 	      1510	intel_panel.c	FUNCTION_65	IF_1	CALL_2
0x4001c06	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      1511	intel_panel.c	FUNCTION_65	CALL_3
0x4001c0d	     0xf84df000000	                            je 0x4001cf2	      1510	intel_panel.c	FUNCTION_65	IF_1	CALL_2
0x4001c13	      0xbe00200c00	                        mov esi, 0xc2000	      1513	intel_panel.c	FUNCTION_65	CALL_4
0x4001c18	          0x4889ef	                            mov rdi, rbp	      1513	intel_panel.c	FUNCTION_65	CALL_4
0x4001c1b	      0xe800000000	                          call 0x4001c20	      1513	intel_panel.c	FUNCTION_65	CALL_4
0x4001c20	          0x83e001	                              and eax, 1	      1513	intel_panel.c	FUNCTION_65	CALL_4
0x4001c23	    0x888363040000	              mov byte [rbx + 0x463], al	      1514	intel_panel.c	FUNCTION_65
0x4001c29	      0xba01000000	                              mov edx, 1	      1516	intel_panel.c	FUNCTION_65	CALL_5
0x4001c2e	      0xbe50820c00	                        mov esi, 0xc8250	      1516	intel_panel.c	FUNCTION_65	CALL_5
0x4001c33	          0x4889ef	                            mov rdi, rbp	      1516	intel_panel.c	FUNCTION_65	CALL_5
0x4001c36	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      1516	intel_panel.c	FUNCTION_65	CALL_5
0x4001c3d	      0xe800000000	                          call 0x4001c42	      1516	intel_panel.c	FUNCTION_65	CALL_5
0x4001c42	          0x4189c4	                           mov r12d, eax	      1516	intel_panel.c	FUNCTION_65	CALL_5
0x4001c45	          0xc1e81d	                           shr eax, 0x1d	      1517	intel_panel.c	FUNCTION_65
0x4001c48	      0xba01000000	                              mov edx, 1	      1519	intel_panel.c	FUNCTION_65	CALL_6
0x4001c4d	          0x83e001	                              and eax, 1	      1517	intel_panel.c	FUNCTION_65
0x4001c50	      0xbe54820c00	                        mov esi, 0xc8254	      1519	intel_panel.c	FUNCTION_65	CALL_6
0x4001c55	          0x4889ef	                            mov rdi, rbp	      1519	intel_panel.c	FUNCTION_65	CALL_6
0x4001c58	    0x888362040000	              mov byte [rbx + 0x462], al	      1517	intel_panel.c	FUNCTION_65
0x4001c5e	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      1519	intel_panel.c	FUNCTION_65	CALL_6
0x4001c65	      0xe800000000	                          call 0x4001c6a	      1519	intel_panel.c	FUNCTION_65	CALL_6
0x4001c6a	          0xc1e810	                           shr eax, 0x10	      1520	intel_panel.c	FUNCTION_65
0x4001c6d	            0x85c0	                           test eax, eax	      1522	intel_panel.c	FUNCTION_65	IF_2
0x4001c6f	    0x89835c040000	            mov dword [rbx + 0x45c], eax	      1520	intel_panel.c	FUNCTION_65
0x4001c75	            0x7462	                            je 0x4001cd9	      1522	intel_panel.c	FUNCTION_65	IF_2
0x4001c77	          0x4889df	                            mov rdi, rbx	      1528	intel_panel.c	FUNCTION_65	CALL_8
0x4001c7a	      0xe841ecffff	          call sym.get_backlight_min_vbt	      1528	intel_panel.c	FUNCTION_65	CALL_8
0x4001c7f	          0x488b3b	                    mov rdi, qword [rbx]	       485	intel_panel.c	FUNCTION_16	CALL_1
0x4001c82	      0xba01000000	                              mov edx, 1	       487	intel_panel.c	FUNCTION_16	CALL_2
0x4001c87	    0x898358040000	            mov dword [rbx + 0x458], eax	      1528	intel_panel.c	FUNCTION_65	CALL_8
0x4001c8d	      0xbe54820c00	                        mov esi, 0xc8254	       487	intel_panel.c	FUNCTION_16	CALL_2
0x4001c92	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	       487	intel_panel.c	FUNCTION_16	CALL_2
0x4001c99	      0xe800000000	                          call 0x4001c9e	       487	intel_panel.c	FUNCTION_16	CALL_2
0x4001c9e	          0x4889df	                            mov rdi, rbx	      1531	intel_panel.c	FUNCTION_65	CALL_10
0x4001ca1	           0xfb7f0	                           movzx esi, ax	      1531	intel_panel.c	FUNCTION_65	CALL_10
0x4001ca4	      0xe8b7e8ffff	 call sym.intel_panel_compute_brightness	      1531	intel_panel.c	FUNCTION_65	CALL_10
0x4001ca9	    0x398358040000	           cmp dword [rbx + 0x458], eax 	      1532	intel_panel.c	FUNCTION_65	CALL_11
0x4001caf	    0x8b935c040000	           mov edx, dword [rbx + 0x45c] 	      1532	intel_panel.c	FUNCTION_65	CALL_11
0x4001cb5	     0xf4383580400	         cmovae eax, dword [rbx + 0x458]	      1532	intel_panel.c	FUNCTION_65	CALL_11
0x4001cbc	            0x39d0	                            cmp eax, edx	      1532	intel_panel.c	FUNCTION_65	CALL_11
0x4001cbe	           0xf47c2	                          cmova eax, edx	      1532	intel_panel.c	FUNCTION_65	CALL_11
0x4001cc1	        0x41c1ec1f	                          shr r12d, 0x1f	      1535	intel_panel.c	FUNCTION_65
0x4001cc5	    0x898354040000	            mov dword [rbx + 0x454], eax	      1532	intel_panel.c	FUNCTION_65	CALL_11
0x4001ccb	    0x4488a3600400	            mov byte [rbx + 0x460], r12b	      1535	intel_panel.c	FUNCTION_65
0x4001cd2	            0x31c0	                            xor eax, eax	      1537	intel_panel.c	FUNCTION_65
0x4001cd4	              0x5b	                                 pop rbx	      1538	intel_panel.c	FUNCTION_65
0x4001cd5	              0x5d	                                 pop rbp	      1538	intel_panel.c	FUNCTION_65
0x4001cd6	            0x415c	                                 pop r12	      1538	intel_panel.c	FUNCTION_65
0x4001cd8	              0xc3	                                     ret	      1538	intel_panel.c	FUNCTION_65
0x4001cd9	          0x4889df	                            mov rdi, rbx	      1523	intel_panel.c	FUNCTION_65	CALL_7
0x4001cdc	      0xe84ffcffff	          call sym.get_backlight_max_vbt	      1523	intel_panel.c	FUNCTION_65	CALL_7
0x4001ce1	            0x85c0	                           test eax, eax	      1525	intel_panel.c	FUNCTION_65	IF_3
0x4001ce3	    0x89835c040000	            mov dword [rbx + 0x45c], eax	      1523	intel_panel.c	FUNCTION_65	CALL_7
0x4001ce9	            0x758c	                           jne 0x4001c77	      1525	intel_panel.c	FUNCTION_65	IF_3
0x4001ceb	      0xb8edffffff	                     mov eax, 0xffffffed	      1526	intel_panel.c	FUNCTION_65	IF_3
0x4001cf0	            0xebe2	                           jmp 0x4001cd4	      1526	intel_panel.c	FUNCTION_65	IF_3
0x4001cf2	      0xbe04200c00	                        mov esi, 0xc2004	      1511	intel_panel.c	FUNCTION_65	CALL_3
0x4001cf7	          0x4889ef	                            mov rdi, rbp	      1511	intel_panel.c	FUNCTION_65	CALL_3
0x4001cfa	      0xe800000000	                          call 0x4001cff	      1511	intel_panel.c	FUNCTION_65	CALL_3
0x4001cff	          0xc1e805	                              shr eax, 5	      1511	intel_panel.c	FUNCTION_65	CALL_3
0x4001d02	          0x83e001	                              and eax, 1	      1511	intel_panel.c	FUNCTION_65	CALL_3
0x4001d05	      0xe919ffffff	                           jmp 0x4001c23	      1511	intel_panel.c	FUNCTION_65	CALL_3
pwm_enable_backlight	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,3:FOR,0:ELSE,0	4
0x40006f0	          0x488b06	                    mov rax, qword [rsi]	      1107	intel_panel.c	FUNCTION_47	CALL_3
0x40006f3	          0x4889f7	                            mov rdi, rsi	      1102	intel_panel.c	FUNCTION_47
0x40006f6	    0x8bb054040000	           mov esi, dword [rax + 0x454] 	      1107	intel_panel.c	FUNCTION_47	CALL_3
0x40006fc	      0xe9cffeffff	jmp sym.intel_panel_actually_set_backlight	      1107	intel_panel.c	FUNCTION_47	CALL_3
intel_pch_panel_fitting	DO,0:WHILE,0:SWITCH,1:IF,5:functions,0:CALL,1:FOR,0:ELSE,2	104
0x40021f0	    0x8b8eac000000	            mov ecx, dword [rsi + 0xac] 	       112	intel_panel.c	ELSE_1	FUNCTION_3	IF_1
0x40021f6	    0x448b862c0200	           mov r8d, dword [rsi + 0x22c] 	       112	intel_panel.c	ELSE_1	FUNCTION_3	IF_1
0x40021fd	          0x4439c1	                            cmp ecx, r8d	       112	intel_panel.c	ELSE_1	FUNCTION_3	IF_1
0x4002200	            0x745b	                            je 0x400225d	       112	intel_panel.c	ELSE_1	FUNCTION_3	IF_1
0x4002202	          0x83fa02	                              cmp edx, 2	       117	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x4002205	     0xf8492000000	                            je 0x400229d	       117	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x400220b	          0x83fa03	                              cmp edx, 3	       117	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x400220e	            0x7416	                            je 0x4002226	       117	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x4002210	          0x83fa01	                              cmp edx, 1	       117	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x4002213	            0x7467	                            je 0x400227c	       117	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x4002215	            0x89d6	                            mov esi, edx	       117	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x4002217	    0x48c7c7000000	                              mov rdi, 0	       161	intel_panel.c	FUNCTION_3	SWITCH_1	ELSE_1	CALL_1
0x400221e	      0xe800000000	                          call 0x4002223	       161	intel_panel.c	FUNCTION_3	SWITCH_1	ELSE_1	CALL_1
0x4002223	             0xf0b	                                     ud2	       161	intel_panel.c	FUNCTION_3	SWITCH_1	ELSE_1	CALL_1
0x4002225	              0xc3	                                     ret	       162	intel_panel.c	FUNCTION_3	SWITCH_1	ELSE_1
0x4002226	    0x448b8e300200	           mov r9d, dword [rsi + 0x230] 	       129	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x400222d	    0x8bbec8000000	            mov edi, dword [rsi + 0xc8] 	       131	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x4002233	            0x89ca	                            mov edx, ecx	       128	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x4002235	          0x4489c0	                            mov eax, r8d	       130	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x4002238	        0x410fafd1	                           imul edx, r9d	       128	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x400223c	           0xfafc7	                           imul eax, edi	       130	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x400223f	            0x39c2	                            cmp edx, eax	       132	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2
0x4002241	     0xf8793000000	                            ja 0x40022da	       132	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2
0x4002247	     0xf82b9000000	                            jb 0x4002306	       139	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2
0x400224d	            0x89c8	                            mov eax, ecx	       139	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2
0x400224f	          0xc1e010	                           shl eax, 0x10	       139	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2
0x4002252	             0x9f8	                             or eax, edi	       139	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2
0x4002254	            0x89c1	                            mov ecx, eax	       139	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2
0x4002256	           0xf95c0	                                setne al	       139	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2
0x4002259	            0x31d2	                            xor edx, edx	       139	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2
0x400225b	            0xeb2d	                           jmp 0x400228a	       139	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2
0x400225d	    0x8b8630020000	           mov eax, dword [rsi + 0x230] 	       112	intel_panel.c	ELSE_1	FUNCTION_3	IF_1
0x4002263	    0x3986c8000000	            cmp dword [rsi + 0xc8], eax 	       112	intel_panel.c	ELSE_1	FUNCTION_3	IF_1
0x4002269	            0x7597	                           jne 0x4002202	       112	intel_panel.c	ELSE_1	FUNCTION_3	IF_1
0x400226b	     0xfb686930400	          movzx eax, byte [rsi + 0x493] 	       114	intel_panel.c	ELSE_1	FUNCTION_3	IF_1
0x4002272	            0x84c0	                             test al, al	       113	intel_panel.c	ELSE_1	FUNCTION_3	IF_1
0x4002274	            0x758c	                           jne 0x4002202	       113	intel_panel.c	ELSE_1	FUNCTION_3	IF_1
0x4002276	            0x31c9	                            xor ecx, ecx	       113	intel_panel.c	ELSE_1	FUNCTION_3	IF_1
0x4002278	            0x31d2	                            xor edx, edx	       113	intel_panel.c	ELSE_1	FUNCTION_3	IF_1
0x400227a	            0xeb0e	                           jmp 0x400228a	       113	intel_panel.c	ELSE_1	FUNCTION_3	IF_1
0x400227c	          0xc1e110	                           shl ecx, 0x10	       113	intel_panel.c	ELSE_1	FUNCTION_3	IF_1
0x400227f	     0xb8ec8000000	              or ecx, dword [rsi + 0xc8]	       113	intel_panel.c	ELSE_1	FUNCTION_3	IF_1
0x4002285	           0xf95c0	                                setne al	       113	intel_panel.c	ELSE_1	FUNCTION_3	IF_1
0x4002288	            0x31d2	                            xor edx, edx	       158	intel_panel.c	FUNCTION_3	SWITCH_1	ELSE_1
0x400228a	    0x899624030000	            mov dword [rsi + 0x324], edx	       166	intel_panel.c	FUNCTION_3	ELSE_1
0x4002290	    0x898e28030000	            mov dword [rsi + 0x328], ecx	       167	intel_panel.c	FUNCTION_3	ELSE_1
0x4002296	    0x88862c030000	              mov byte [rsi + 0x32c], al	       168	intel_panel.c	FUNCTION_3	ELSE_1
0x400229c	              0xc3	                                     ret	       168	intel_panel.c	FUNCTION_3	ELSE_1
0x400229d	    0x8b8630020000	           mov eax, dword [rsi + 0x230] 	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022a3	    0x8b96c8000000	            mov edx, dword [rsi + 0xc8] 	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022a9	            0x29c2	                            sub edx, eax	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022ab	          0x83c201	                              add edx, 1	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022ae	            0x89d7	                            mov edi, edx	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022b0	          0xc1ef1f	                           shr edi, 0x1f	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022b3	             0x1fa	                            add edx, edi	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022b5	            0x89cf	                            mov edi, ecx	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022b7	          0x4429c7	                            sub edi, r8d	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022ba	            0xd1fa	                              sar edx, 1	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022bc	          0x83c701	                              add edi, 1	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022bf	            0x89f9	                            mov ecx, edi	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022c1	          0xc1e91f	                           shr ecx, 0x1f	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022c4	             0x1cf	                            add edi, ecx	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022c6	          0x4489c1	                            mov ecx, r8d	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022c9	            0xd1ff	                              sar edi, 1	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022cb	          0xc1e110	                           shl ecx, 0x10	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022ce	          0xc1e710	                           shl edi, 0x10	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022d1	             0x9fa	                             or edx, edi	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022d3	             0x9c1	                             or ecx, eax	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022d5	           0xf95c0	                                setne al	       120	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022d8	            0xebb0	                           jmp 0x400228a	       123	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1
0x40022da	            0x31d2	                            xor edx, edx	       133	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2
0x40022dc	          0x41f7f1	                                 div r9d	       133	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2
0x40022df	          0x8d5001	                      lea edx, [rax + 1]	       135	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2	IF_3
0x40022e2	            0xa801	                              test al, 1	       135	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2	IF_3
0x40022e4	           0xf45c2	                         cmovne eax, edx	       135	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2	IF_3
0x40022e7	            0x29c1	                            sub ecx, eax	       135	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2	IF_3
0x40022e9	          0xc1e010	                           shl eax, 0x10	       135	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2	IF_3
0x40022ec	            0x89ca	                            mov edx, ecx	       135	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2	IF_3
0x40022ee	          0x83c201	                              add edx, 1	       135	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2	IF_3
0x40022f1	            0x89d1	                            mov ecx, edx	       135	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2	IF_3
0x40022f3	          0xc1e91f	                           shr ecx, 0x1f	       135	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2	IF_3
0x40022f6	             0x1ca	                            add edx, ecx	       135	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2	IF_3
0x40022f8	            0x89c1	                            mov ecx, eax	       135	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2	IF_3
0x40022fa	            0xd1fa	                              sar edx, 1	       135	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2	IF_3
0x40022fc	          0xc1e210	                           shl edx, 0x10	       135	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2	IF_3
0x40022ff	             0x9f9	                             or ecx, edi	       135	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2	IF_3
0x4002301	           0xf95c0	                                setne al	       135	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2	IF_3
0x4002304	            0xeb84	                           jmp 0x400228a	       135	intel_panel.c	ELSE_1	FUNCTION_3	SWITCH_1	IF_2	IF_3
0x4002306	            0x89d0	                            mov eax, edx	       140	intel_panel.c	FUNCTION_3	SWITCH_1	IF_4
0x4002308	            0x31d2	                            xor edx, edx	       140	intel_panel.c	FUNCTION_3	SWITCH_1	IF_4
0x400230a	          0x41f7f0	                                 div r8d	       140	intel_panel.c	FUNCTION_3	SWITCH_1	IF_4
0x400230d	          0x8d5001	                      lea edx, [rax + 1]	       142	intel_panel.c	FUNCTION_3	SWITCH_1	IF_4	IF_5
0x4002310	            0xa801	                              test al, 1	       142	intel_panel.c	FUNCTION_3	SWITCH_1	IF_4	IF_5
0x4002312	           0xf45c2	                         cmovne eax, edx	       142	intel_panel.c	FUNCTION_3	SWITCH_1	IF_4	IF_5
0x4002315	          0xc1e110	                           shl ecx, 0x10	       142	intel_panel.c	FUNCTION_3	SWITCH_1	IF_4	IF_5
0x4002318	            0x29c7	                            sub edi, eax	       142	intel_panel.c	FUNCTION_3	SWITCH_1	IF_4	IF_5
0x400231a	          0x83c701	                              add edi, 1	       142	intel_panel.c	FUNCTION_3	SWITCH_1	IF_4	IF_5
0x400231d	            0x89fa	                            mov edx, edi	       142	intel_panel.c	FUNCTION_3	SWITCH_1	IF_4	IF_5
0x400231f	          0xc1ea1f	                           shr edx, 0x1f	       142	intel_panel.c	FUNCTION_3	SWITCH_1	IF_4	IF_5
0x4002322	             0x1fa	                            add edx, edi	       142	intel_panel.c	FUNCTION_3	SWITCH_1	IF_4	IF_5
0x4002324	            0xd1fa	                              sar edx, 1	       142	intel_panel.c	FUNCTION_3	SWITCH_1	IF_4	IF_5
0x4002326	             0x9c1	                             or ecx, eax	       142	intel_panel.c	FUNCTION_3	SWITCH_1	IF_4	IF_5
0x4002328	           0xf95c0	                                setne al	       142	intel_panel.c	FUNCTION_3	SWITCH_1	IF_4	IF_5
0x400232b	      0xe95affffff	                           jmp 0x400228a	       142	intel_panel.c	FUNCTION_3	SWITCH_1	IF_4	IF_5
centre_horizontally	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,0:FOR,0:ELSE,0	29
0x4000040	    0x8b9794000000	            mov edx, dword [rdi + 0x94] 	       182	intel_panel.c	FUNCTION_4
0x4000046	          0x4189f1	                            mov r9d, esi	       174	intel_panel.c	FUNCTION_4
0x4000049	    0x8bb7a4000000	            mov esi, dword [rdi + 0xa4] 	       178	intel_panel.c	FUNCTION_4
0x400004f	    0x2bb7a0000000	             sub esi, dword [rdi + 0xa0]	       178	intel_panel.c	FUNCTION_4
0x4000055	    0x8b8f9c000000	            mov ecx, dword [rdi + 0x9c] 	       179	intel_panel.c	FUNCTION_4
0x400005b	    0x2b8f98000000	             sub ecx, dword [rdi + 0x98]	       179	intel_panel.c	FUNCTION_4
0x4000061	    0x44898f940000	             mov dword [rdi + 0x94], r9d	       185	intel_panel.c	FUNCTION_4
0x4000068	          0x4429ca	                            sub edx, r9d	       182	intel_panel.c	FUNCTION_4
0x400006b	          0x83c201	                              add edx, 1	       182	intel_panel.c	FUNCTION_4
0x400006e	            0x89d0	                            mov eax, edx	       182	intel_panel.c	FUNCTION_4
0x4000070	          0x4189f0	                            mov r8d, esi	       178	intel_panel.c	FUNCTION_4
0x4000073	          0xc1e81f	                           shr eax, 0x1f	       182	intel_panel.c	FUNCTION_4
0x4000076	             0x1d0	                            add eax, edx	       182	intel_panel.c	FUNCTION_4
0x4000078	            0xd1f8	                              sar eax, 1	       182	intel_panel.c	FUNCTION_4
0x400007a	            0x89c6	                            mov esi, eax	       186	intel_panel.c	FUNCTION_4
0x400007c	          0x4401c8	                            add eax, r9d	       186	intel_panel.c	FUNCTION_4
0x400007f	          0x83e601	                              and esi, 1	       186	intel_panel.c	FUNCTION_4
0x4000082	             0x1c6	                            add esi, eax	       186	intel_panel.c	FUNCTION_4
0x4000084	          0x8d0431	                    lea eax, [rcx + rsi]	       187	intel_panel.c	FUNCTION_4
0x4000087	          0x83c101	                              add ecx, 1	       189	intel_panel.c	FUNCTION_4
0x400008a	    0x89b798000000	             mov dword [rdi + 0x98], esi	       186	intel_panel.c	FUNCTION_4
0x4000090	          0x4429c1	                            sub ecx, r8d	       189	intel_panel.c	FUNCTION_4
0x4000093	            0xd1e9	                              shr ecx, 1	       189	intel_panel.c	FUNCTION_4
0x4000095	    0x89879c000000	             mov dword [rdi + 0x9c], eax	       187	intel_panel.c	FUNCTION_4
0x400009b	             0x1ce	                            add esi, ecx	       189	intel_panel.c	FUNCTION_4
0x400009d	    0x89b7a0000000	             mov dword [rdi + 0xa0], esi	       189	intel_panel.c	FUNCTION_4
0x40000a3	          0x4401c6	                            add esi, r8d	       190	intel_panel.c	FUNCTION_4
0x40000a6	    0x89b7a4000000	             mov dword [rdi + 0xa4], esi	       190	intel_panel.c	FUNCTION_4
0x40000ac	              0xc3	                                     ret	       190	intel_panel.c	FUNCTION_4
lpt_hz_to_pwm	DO,0:WHILE,0:SWITCH,0:IF,2:functions,0:CALL,5:FOR,0:ELSE,2	18
0x40002f0	          0x488b07	                    mov rax, qword [rdi]	      1354	intel_panel.c	FUNCTION_58	CALL_1
0x40002f3	    0x80bf63040000	               cmp byte [rdi + 0x463], 1	      1361	intel_panel.c	FUNCTION_58	ELSE_1
0x40002fa	      0xba00366e01	                      mov edx, 0x16e3600	      1366	intel_panel.c	FUNCTION_58	CALL_4
0x40002ff	     0xfb780fc5500	         movzx eax, word [rax + 0x55fc] 	      1363	intel_panel.c	FUNCTION_58	IF_2	CALL_2
0x4000306	            0x19c9	                            sbb ecx, ecx	      1361	intel_panel.c	FUNCTION_58	ELSE_1
0x4000308	          0x83e170	                           and ecx, 0x70	      1361	intel_panel.c	FUNCTION_58	ELSE_1
0x400030b	          0x83c110	                           add ecx, 0x10	      1361	intel_panel.c	FUNCTION_58	ELSE_1
0x400030e	            0x247f	                            and al, 0x7f	      1363	intel_panel.c	FUNCTION_58	IF_2	CALL_2
0x4000310	        0x663d008c	                          cmp ax, 0x8c00	      1366	intel_panel.c	FUNCTION_58	CALL_4
0x4000314	      0xb8c0ef0b08	                      mov eax, 0x80befc0	      1366	intel_panel.c	FUNCTION_58	CALL_4
0x4000319	           0xf45c2	                         cmovne eax, edx	      1366	intel_panel.c	FUNCTION_58	CALL_4
0x400031c	           0xfaff1	                           imul esi, ecx	      1368	intel_panel.c	FUNCTION_58	CALL_5
0x400031f	            0x89f2	                            mov edx, esi	      1368	intel_panel.c	FUNCTION_58	CALL_5
0x4000321	            0xd1ea	                              shr edx, 1	      1368	intel_panel.c	FUNCTION_58	CALL_5
0x4000323	             0x1d0	                            add eax, edx	      1368	intel_panel.c	FUNCTION_58	CALL_5
0x4000325	            0x31d2	                            xor edx, edx	      1368	intel_panel.c	FUNCTION_58	CALL_5
0x4000327	            0xf7f6	                                 div esi	      1368	intel_panel.c	FUNCTION_58	CALL_5
0x4000329	              0xc3	                                     ret	      1369	intel_panel.c	FUNCTION_58
i965_disable_backlight	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,4:FOR,0:ELSE,0	21
0x4000620	              0x53	                                push rbx	       723	intel_panel.c	FUNCTION_34
0x4000621	          0x488b07	                    mov rax, qword [rdi]	       724	intel_panel.c	FUNCTION_34	CALL_1
0x4000624	            0x31f6	                            xor esi, esi	       727	intel_panel.c	FUNCTION_34	CALL_2
0x4000626	          0x488b18	                    mov rbx, qword [rax]	       724	intel_panel.c	FUNCTION_34	CALL_1
0x4000629	      0xe8a2ffffff	call sym.intel_panel_actually_set_backlight	       727	intel_panel.c	FUNCTION_34	CALL_2
0x400062e	      0xba01000000	                              mov edx, 1	       729	intel_panel.c	FUNCTION_34	CALL_3
0x4000633	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	       729	intel_panel.c	FUNCTION_34	CALL_3
0x4000639	          0x4889df	                            mov rdi, rbx	       729	intel_panel.c	FUNCTION_34	CALL_3
0x400063c	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       729	intel_panel.c	FUNCTION_34	CALL_3
0x4000643	    0x8db150120600	                lea esi, [rcx + 0x61250]	       729	intel_panel.c	FUNCTION_34	CALL_3
0x4000649	      0xe800000000	                          call 0x400064e	       729	intel_panel.c	FUNCTION_34	CALL_3
0x400064e	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	       730	intel_panel.c	FUNCTION_34	CALL_4
0x4000654	      0x25ffffff7f	                     and eax, 0x7fffffff	       730	intel_panel.c	FUNCTION_34	CALL_4
0x4000659	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       730	intel_panel.c	FUNCTION_34	CALL_4
0x4000660	          0x4889df	                            mov rdi, rbx	       730	intel_panel.c	FUNCTION_34	CALL_4
0x4000663	            0x89c2	                            mov edx, eax	       730	intel_panel.c	FUNCTION_34	CALL_4
0x4000665	    0x8db150120600	                lea esi, [rcx + 0x61250]	       730	intel_panel.c	FUNCTION_34	CALL_4
0x400066b	      0xb901000000	                              mov ecx, 1	       730	intel_panel.c	FUNCTION_34	CALL_4
0x4000670	      0xe800000000	                          call 0x4000675	       730	intel_panel.c	FUNCTION_34	CALL_4
0x4000675	              0x5b	                                 pop rbx	       731	intel_panel.c	FUNCTION_34
0x4000676	              0xc3	                                     ret	       731	intel_panel.c	FUNCTION_34
intel_panel_fini	DO,0:WHILE,0:SWITCH,0:IF,3:functions,0:CALL,4:FOR,0:ELSE,0	20
0x4002e10	              0x53	                                push rbx	      1944	intel_panel.c	FUNCTION_77
0x4002e11	          0x488b37	                    mov rsi, qword [rdi]	      1948	intel_panel.c	FUNCTION_77	IF_1
0x4002e14	          0x4889fb	                            mov rbx, rdi	      1944	intel_panel.c	FUNCTION_77
0x4002e17	          0x4885f6	                           test rsi, rsi	      1948	intel_panel.c	FUNCTION_77	IF_1
0x4002e1a	            0x740c	                            je 0x4002e28	      1948	intel_panel.c	FUNCTION_77	IF_1
0x4002e1c	    0x488bbfc8fbff	            mov rdi, qword [rdi - 0x438]	      1949	intel_panel.c	FUNCTION_77	CALL_2
0x4002e23	      0xe800000000	                          call 0x4002e28	      1949	intel_panel.c	FUNCTION_77	CALL_2
0x4002e28	        0x488b7308	                mov rsi, qword [rbx + 8]	      1951	intel_panel.c	FUNCTION_77	IF_2
0x4002e2c	          0x4885f6	                           test rsi, rsi	      1951	intel_panel.c	FUNCTION_77	IF_2
0x4002e2f	            0x740c	                            je 0x4002e3d	      1951	intel_panel.c	FUNCTION_77	IF_2
0x4002e31	    0x488bbbc8fbff	            mov rdi, qword [rbx - 0x438]	      1952	intel_panel.c	FUNCTION_77	IF_2	CALL_3
0x4002e38	      0xe800000000	                          call 0x4002e3d	      1952	intel_panel.c	FUNCTION_77	IF_2	CALL_3
0x4002e3d	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1955	intel_panel.c	FUNCTION_77	IF_3
0x4002e41	          0x4885f6	                           test rsi, rsi	      1955	intel_panel.c	FUNCTION_77	IF_3
0x4002e44	            0x740d	                            je 0x4002e53	      1955	intel_panel.c	FUNCTION_77	IF_3
0x4002e46	    0x488bbbc8fbff	            mov rdi, qword [rbx - 0x438]	      1956	intel_panel.c	FUNCTION_77	IF_3	CALL_4
0x4002e4d	              0x5b	                                 pop rbx	      1958	intel_panel.c	FUNCTION_77
0x4002e4e	      0xe900000000	                           jmp 0x4002e53	      1956	intel_panel.c	FUNCTION_77	IF_3	CALL_4
0x4002e53	              0x5b	                                 pop rbx	      1958	intel_panel.c	FUNCTION_77
0x4002e54	              0xc3	                                     ret	      1958	intel_panel.c	FUNCTION_77
intel_backlight_device_register	DO,0:WHILE,0:SWITCH,0:IF,4:functions,0:CALL,7:FOR,0:ELSE,1	67
0x40028b0	              0x53	                                push rbx	      1247	intel_panel.c	FUNCTION_53
0x40028b1	        0x4883ec20	                           sub rsp, 0x20	      1247	intel_panel.c	FUNCTION_53
0x40028b5	    0x65488b042528	                mov rax, qword gs:[0x28]	      1247	intel_panel.c	FUNCTION_53
0x40028be	      0x4889442418	             mov qword [rsp + 0x18], rax	      1247	intel_panel.c	FUNCTION_53
0x40028c3	            0x31c0	                            xor eax, eax	      1247	intel_panel.c	FUNCTION_53
0x40028c5	    0x4883bf700400	              cmp qword [rdi + 0x470], 0	      1251	intel_panel.c	FUNCTION_53	IF_1
0x40028cd	     0xf8507010000	                           jne 0x40029da	      1251	intel_panel.c	FUNCTION_53	IF_1
0x40028d3	    0x80bf50040000	               cmp byte [rdi + 0x450], 0	      1254	intel_panel.c	FUNCTION_53	IF_2
0x40028da	          0x4889fb	                            mov rbx, rdi	      1254	intel_panel.c	FUNCTION_53	IF_2
0x40028dd	     0xf849e000000	                            je 0x4002981	      1254	intel_panel.c	FUNCTION_53	IF_2
0x40028e3	    0x8b935c040000	           mov edx, dword [rbx + 0x45c] 	      1257	intel_panel.c	FUNCTION_53
0x40028e9	            0x85d2	                           test edx, edx	      1257	intel_panel.c	FUNCTION_53
0x40028eb	     0xf84c9000000	                            je 0x40029ba	      1257	intel_panel.c	FUNCTION_53
0x40028f1	    0x8bb358040000	           mov esi, dword [rbx + 0x458] 	       460	intel_panel.c	FUNCTION_14	CALL_1
0x40028f7	    0x8bbb54040000	           mov edi, dword [rbx + 0x454] 	       460	intel_panel.c	FUNCTION_14	CALL_1
0x40028fd	          0x4189d0	                            mov r8d, edx	       460	intel_panel.c	FUNCTION_14	CALL_1
0x4002900	            0x31c9	                            xor ecx, ecx	       460	intel_panel.c	FUNCTION_14	CALL_1
0x4002902	    0x48c704240000	                      mov qword [rsp], 0	      1259	intel_panel.c	FUNCTION_53	CALL_1
0x400290a	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1259	intel_panel.c	FUNCTION_53	CALL_1
0x4002913	        0x89542404	                mov dword [rsp + 4], edx	      1266	intel_panel.c	FUNCTION_53
0x4002917	    0x48c744240800	                  mov qword [rsp + 8], 0	      1259	intel_panel.c	FUNCTION_53	CALL_1
0x4002920	    0xc74424100100	               mov dword [rsp + 0x10], 1	      1260	intel_panel.c	FUNCTION_53
0x4002928	      0xe823dbffff	                          call sym.scale	       460	intel_panel.c	FUNCTION_14	CALL_1
0x400292d	    0x80bb60040000	               cmp byte [rbx + 0x460], 1	      1272	intel_panel.c	FUNCTION_53	IF_3
0x4002934	        0x488b7308	                mov rsi, qword [rbx + 8]	      1281	intel_panel.c	FUNCTION_53	CALL_3
0x4002938	          0x4989e0	                             mov r8, rsp	      1281	intel_panel.c	FUNCTION_53	CALL_3
0x400293b	          0x890424	                    mov dword [rsp], eax	      1267	intel_panel.c	FUNCTION_53	CALL_2
0x400293e	    0x48c7c1000000	                              mov rcx, 0	      1281	intel_panel.c	FUNCTION_53	CALL_3
0x4002945	          0x4889da	                            mov rdx, rbx	      1281	intel_panel.c	FUNCTION_53	CALL_3
0x4002948	    0x48c7c7000000	                              mov rdi, 0	      1281	intel_panel.c	FUNCTION_53	CALL_3
0x400294f	            0x19c0	                            sbb eax, eax	      1272	intel_panel.c	FUNCTION_53	IF_3
0x4002951	          0x83e004	                              and eax, 4	      1272	intel_panel.c	FUNCTION_53	IF_3
0x4002954	        0x89442408	                mov dword [rsp + 8], eax	      1272	intel_panel.c	FUNCTION_53	IF_3
0x4002958	      0xe800000000	                          call 0x400295d	      1281	intel_panel.c	FUNCTION_53	CALL_3
0x400295d	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      1286	intel_panel.c	FUNCTION_53	IF_4	CALL_4
0x4002963	    0x488983700400	            mov qword [rbx + 0x470], rax	      1280	intel_panel.c	FUNCTION_53
0x400296a	            0x772d	                            ja 0x4002999	      1286	intel_panel.c	FUNCTION_53	IF_4	CALL_4
0x400296c	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      1293	intel_panel.c	FUNCTION_53	CALL_7
0x4002970	    0x48c7c6000000	                              mov rsi, 0	      1293	intel_panel.c	FUNCTION_53	CALL_7
0x4002977	      0xbf04000000	                              mov edi, 4	      1293	intel_panel.c	FUNCTION_53	CALL_7
0x400297c	      0xe800000000	                          call 0x4002981	      1293	intel_panel.c	FUNCTION_53	CALL_7
0x4002981	            0x31c0	                            xor eax, eax	      1296	intel_panel.c	FUNCTION_53
0x4002983	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1297	intel_panel.c	FUNCTION_53
0x4002988	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1297	intel_panel.c	FUNCTION_53
0x4002991	            0x7563	                           jne 0x40029f6	      1297	intel_panel.c	FUNCTION_53
0x4002993	        0x4883c420	                           add rsp, 0x20	      1297	intel_panel.c	FUNCTION_53
0x4002997	              0x5b	                                 pop rbx	      1297	intel_panel.c	FUNCTION_53
0x4002998	              0xc3	                                     ret	      1297	intel_panel.c	FUNCTION_53
0x4002999	          0x4889c6	                            mov rsi, rax	      1287	intel_panel.c	FUNCTION_53	IF_4	CALL_5
0x400299c	    0x48c7c7000000	                              mov rdi, 0	      1287	intel_panel.c	FUNCTION_53	IF_4	CALL_5
0x40029a3	      0xe800000000	                          call 0x40029a8	      1287	intel_panel.c	FUNCTION_53	IF_4	CALL_5
0x40029a8	    0x48c783700400	              mov qword [rbx + 0x470], 0	      1289	intel_panel.c	FUNCTION_53	IF_4
0x40029b3	      0xb8edffffff	                     mov eax, 0xffffffed	      1290	intel_panel.c	FUNCTION_53	IF_4
0x40029b8	            0xebc9	                           jmp 0x4002983	      1290	intel_panel.c	FUNCTION_53	IF_4
0x40029ba	    0x48c7c6000000	                              mov rsi, 0	      1257	intel_panel.c	FUNCTION_53
0x40029c1	    0x48c7c7000000	                              mov rdi, 0	      1257	intel_panel.c	FUNCTION_53
0x40029c8	      0xe800000000	                          call 0x40029cd	      1257	intel_panel.c	FUNCTION_53
0x40029cd	             0xf0b	                                     ud2	      1257	intel_panel.c	FUNCTION_53
0x40029cf	    0x8b935c040000	           mov edx, dword [rbx + 0x45c] 	      1257	intel_panel.c	FUNCTION_53
0x40029d5	      0xe917ffffff	                           jmp 0x40028f1	      1257	intel_panel.c	FUNCTION_53
0x40029da	    0x48c7c6000000	                              mov rsi, 0	      1251	intel_panel.c	FUNCTION_53	IF_1
0x40029e1	    0x48c7c7000000	                              mov rdi, 0	      1251	intel_panel.c	FUNCTION_53	IF_1
0x40029e8	      0xe800000000	                          call 0x40029ed	      1251	intel_panel.c	FUNCTION_53	IF_1
0x40029ed	             0xf0b	                                     ud2	      1251	intel_panel.c	FUNCTION_53	IF_1
0x40029ef	      0xb8edffffff	                     mov eax, 0xffffffed	      1252	intel_panel.c	FUNCTION_53	IF_1
0x40029f4	            0xeb8d	                           jmp 0x4002983	      1252	intel_panel.c	FUNCTION_53	IF_1
0x40029f6	      0xe800000000	                          call 0x40029fb	      1297	intel_panel.c	FUNCTION_53
intel_panel_set_backlight_acpi	DO,0:WHILE,0:SWITCH,0:IF,3:functions,0:CALL,7:FOR,0:ELSE,0	72
0x4002640	            0x4156	                                push r14	       642	intel_panel.c	FUNCTION_30
0x4002642	            0x4155	                                push r13	       642	intel_panel.c	FUNCTION_30
0x4002644	            0x4154	                                push r12	       642	intel_panel.c	FUNCTION_30
0x4002646	              0x55	                                push rbp	       642	intel_panel.c	FUNCTION_30
0x4002647	              0x53	                                push rbx	       642	intel_panel.c	FUNCTION_30
0x4002648	          0x488b1f	                    mov rbx, qword [rdi]	       643	intel_panel.c	FUNCTION_30	CALL_1
0x400264b	    0x80bb50040000	               cmp byte [rbx + 0x450], 0	       654	intel_panel.c	FUNCTION_30	IF_1
0x4002652	     0xf8496000000	                            je 0x40026ee	       654	intel_panel.c	FUNCTION_30	IF_1
0x4002658	      0x48837f0800	                  cmp qword [rdi + 8], 0	       654	intel_panel.c	FUNCTION_30	IF_1
0x400265d	     0xf848b000000	                            je 0x40026ee	       654	intel_panel.c	FUNCTION_30	IF_1
0x4002663	          0x488b03	                    mov rax, qword [rbx]	       657	intel_panel.c	FUNCTION_30	CALL_3
0x4002666	          0x4989fc	                            mov r12, rdi	       657	intel_panel.c	FUNCTION_30	CALL_3
0x4002669	          0x4189d6	                           mov r14d, edx	       657	intel_panel.c	FUNCTION_30	CALL_3
0x400266c	            0x89f5	                            mov ebp, esi	       657	intel_panel.c	FUNCTION_30	CALL_3
0x400266e	    0x4c8da8784e00	                 lea r13, [rax + 0x4e78]	       657	intel_panel.c	FUNCTION_30	CALL_3
0x4002675	          0x4c89ef	                            mov rdi, r13	       657	intel_panel.c	FUNCTION_30	CALL_3
0x4002678	      0xe800000000	                          call 0x400267d	       657	intel_panel.c	FUNCTION_30	CALL_3
0x400267d	    0x448b835c0400	           mov r8d, dword [rbx + 0x45c] 	       659	intel_panel.c	FUNCTION_30
0x4002684	          0x4585c0	                           test r8d, r8d	       659	intel_panel.c	FUNCTION_30
0x4002687	     0xf8484000000	                            je 0x4002711	       659	intel_panel.c	FUNCTION_30
0x400268d	          0x4489f2	                           mov edx, r14d	       448	intel_panel.c	FUNCTION_13	CALL_1
0x4002690	            0x31f6	                            xor esi, esi	       448	intel_panel.c	FUNCTION_13	CALL_1
0x4002692	            0x31c9	                            xor ecx, ecx	       448	intel_panel.c	FUNCTION_13	CALL_1
0x4002694	            0x89ef	                            mov edi, ebp	       448	intel_panel.c	FUNCTION_13	CALL_1
0x4002696	      0xe8b5ddffff	                          call sym.scale	       448	intel_panel.c	FUNCTION_13	CALL_1
0x400269b	    0x8bb358040000	           mov esi, dword [rbx + 0x458] 	       449	intel_panel.c	FUNCTION_13	CALL_2
0x40026a1	    0x8b935c040000	           mov edx, dword [rbx + 0x45c] 	       449	intel_panel.c	FUNCTION_13	CALL_2
0x40026a7	    0x4c8bb3700400	           mov r14, qword [rbx + 0x470] 	       664	intel_panel.c	FUNCTION_30	IF_2
0x40026ae	            0x39f0	                            cmp eax, esi	       449	intel_panel.c	FUNCTION_13	CALL_2
0x40026b0	           0xf42c6	                          cmovb eax, esi	       449	intel_panel.c	FUNCTION_13	CALL_2
0x40026b3	            0x39d0	                            cmp eax, edx	       449	intel_panel.c	FUNCTION_13	CALL_2
0x40026b5	           0xf47c2	                          cmova eax, edx	       449	intel_panel.c	FUNCTION_13	CALL_2
0x40026b8	          0x4d85f6	                           test r14, r14	       664	intel_panel.c	FUNCTION_30	IF_2
0x40026bb	            0x89c5	                            mov ebp, eax	       449	intel_panel.c	FUNCTION_13	CALL_2
0x40026bd	    0x898354040000	            mov dword [rbx + 0x454], eax	       662	intel_panel.c	FUNCTION_30
0x40026c3	            0x7410	                            je 0x40026d5	       664	intel_panel.c	FUNCTION_30	IF_2
0x40026c5	        0x458b4604	                mov r8d, dword [r14 + 4]	       460	intel_panel.c	FUNCTION_14	CALL_1
0x40026c9	            0x31c9	                            xor ecx, ecx	       460	intel_panel.c	FUNCTION_14	CALL_1
0x40026cb	            0x89c7	                            mov edi, eax	       460	intel_panel.c	FUNCTION_14	CALL_1
0x40026cd	      0xe87eddffff	                          call sym.scale	       460	intel_panel.c	FUNCTION_14	CALL_1
0x40026d2	          0x418906	                    mov dword [r14], eax	       665	intel_panel.c	FUNCTION_30	IF_2
0x40026d5	    0x80bb60040000	               cmp byte [rbx + 0x460], 0	       670	intel_panel.c	FUNCTION_30	IF_3
0x40026dc	            0x7519	                           jne 0x40026f7	       670	intel_panel.c	FUNCTION_30	IF_3
0x40026de	              0x5b	                                 pop rbx	       674	intel_panel.c	FUNCTION_30
0x40026df	          0x4c89ef	                            mov rdi, r13	       673	intel_panel.c	FUNCTION_30	CALL_7
0x40026e2	              0x5d	                                 pop rbp	       674	intel_panel.c	FUNCTION_30
0x40026e3	            0x415c	                                 pop r12	       674	intel_panel.c	FUNCTION_30
0x40026e5	            0x415d	                                 pop r13	       674	intel_panel.c	FUNCTION_30
0x40026e7	            0x415e	                                 pop r14	       674	intel_panel.c	FUNCTION_30
0x40026e9	      0xe900000000	                           jmp 0x40026ee	       673	intel_panel.c	FUNCTION_30	CALL_7
0x40026ee	              0x5b	                                 pop rbx	       674	intel_panel.c	FUNCTION_30
0x40026ef	              0x5d	                                 pop rbp	       674	intel_panel.c	FUNCTION_30
0x40026f0	            0x415c	                                 pop r12	       674	intel_panel.c	FUNCTION_30
0x40026f2	            0x415d	                                 pop r13	       674	intel_panel.c	FUNCTION_30
0x40026f4	            0x415e	                                 pop r14	       674	intel_panel.c	FUNCTION_30
0x40026f6	              0xc3	                                     ret	       674	intel_panel.c	FUNCTION_30
0x40026f7	          0x4c89e7	                            mov rdi, r12	       671	intel_panel.c	FUNCTION_30	CALL_6
0x40026fa	            0x89ee	                            mov esi, ebp	       671	intel_panel.c	FUNCTION_30	CALL_6
0x40026fc	      0xe8cfdeffff	call sym.intel_panel_actually_set_backlight	       671	intel_panel.c	FUNCTION_30	CALL_6
0x4002701	          0x4c89ef	                            mov rdi, r13	       673	intel_panel.c	FUNCTION_30	CALL_7
0x4002704	              0x5b	                                 pop rbx	       674	intel_panel.c	FUNCTION_30
0x4002705	              0x5d	                                 pop rbp	       674	intel_panel.c	FUNCTION_30
0x4002706	            0x415c	                                 pop r12	       674	intel_panel.c	FUNCTION_30
0x4002708	            0x415d	                                 pop r13	       674	intel_panel.c	FUNCTION_30
0x400270a	            0x415e	                                 pop r14	       674	intel_panel.c	FUNCTION_30
0x400270c	      0xe900000000	                           jmp 0x4002711	       673	intel_panel.c	FUNCTION_30	CALL_7
0x4002711	    0x48c7c6000000	                              mov rsi, 0	       659	intel_panel.c	FUNCTION_30
0x4002718	    0x48c7c7000000	                              mov rdi, 0	       659	intel_panel.c	FUNCTION_30
0x400271f	      0xe800000000	                          call 0x4002724	       659	intel_panel.c	FUNCTION_30
0x4002724	             0xf0b	                                     ud2	       659	intel_panel.c	FUNCTION_30
0x4002726	    0x448b835c0400	           mov r8d, dword [rbx + 0x45c] 	       659	intel_panel.c	FUNCTION_30
0x400272d	      0xe95bffffff	                           jmp 0x400268d	       659	intel_panel.c	FUNCTION_30
i9xx_setup_backlight	DO,0:WHILE,0:SWITCH,0:IF,5:functions,0:CALL,11:FOR,0:ELSE,0	67
0x4001f40	              0x55	                                push rbp	      1573	intel_panel.c	FUNCTION_67
0x4001f41	              0x53	                                push rbx	      1573	intel_panel.c	FUNCTION_67
0x4001f42	      0xba01000000	                              mov edx, 1	      1578	intel_panel.c	FUNCTION_67	CALL_2
0x4001f47	          0x488b2f	                    mov rbp, qword [rdi]	      1574	intel_panel.c	FUNCTION_67	CALL_1
0x4001f4a	          0x4889fb	                            mov rbx, rdi	      1573	intel_panel.c	FUNCTION_67
0x4001f4d	    0x8b8d6c060000	           mov ecx, dword [rbp + 0x66c] 	      1578	intel_panel.c	FUNCTION_67	CALL_2
0x4001f53	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      1578	intel_panel.c	FUNCTION_67	CALL_2
0x4001f5a	          0x4889ef	                            mov rdi, rbp	      1578	intel_panel.c	FUNCTION_67	CALL_2
0x4001f5d	    0x8db154120600	                lea esi, [rcx + 0x61254]	      1578	intel_panel.c	FUNCTION_67	CALL_2
0x4001f63	      0xe800000000	                          call 0x4001f68	      1578	intel_panel.c	FUNCTION_67	CALL_2
0x4001f68	    0xf6855a060000	              test byte [rbp + 0x65a], 2	      1580	intel_panel.c	FUNCTION_67	IF_1	CALL_5
0x4001f6f	     0xf8586000000	                           jne 0x4001ffb	      1580	intel_panel.c	FUNCTION_67	IF_1	CALL_5
0x4001f75	    0x8b9564060000	           mov edx, dword [rbp + 0x664] 	      1580	intel_panel.c	FUNCTION_67	IF_1	CALL_5
0x4001f7b	    0xf7c240010000	                         test edx, 0x140	      1580	intel_panel.c	FUNCTION_67	IF_1	CALL_5
0x4001f81	            0x7578	                           jne 0x4001ffb	      1580	intel_panel.c	FUNCTION_67	IF_1	CALL_5
0x4001f83	          0x80e604	                               and dh, 4	      1583	intel_panel.c	FUNCTION_67	IF_2	CALL_6
0x4001f86	            0x740d	                            je 0x4001f95	      1583	intel_panel.c	FUNCTION_67	IF_2	CALL_6
0x4001f88	    0x888362040000	              mov byte [rbx + 0x462], al	      1584	intel_panel.c	FUNCTION_67	IF_2
0x4001f8e	    0x80a362040000	               and byte [rbx + 0x462], 1	      1584	intel_panel.c	FUNCTION_67	IF_2
0x4001f95	          0xc1e811	                           shr eax, 0x11	      1586	intel_panel.c	FUNCTION_67
0x4001f98	            0x85c0	                           test eax, eax	      1588	intel_panel.c	FUNCTION_67	IF_3
0x4001f9a	            0x89c2	                            mov edx, eax	      1586	intel_panel.c	FUNCTION_67
0x4001f9c	    0x89835c040000	            mov dword [rbx + 0x45c], eax	      1586	intel_panel.c	FUNCTION_67
0x4001fa2	            0x747f	                            je 0x4002023	      1588	intel_panel.c	FUNCTION_67	IF_3
0x4001fa4	    0x80bb61040000	               cmp byte [rbx + 0x461], 0	      1596	intel_panel.c	FUNCTION_67	IF_5
0x4001fab	            0x7567	                           jne 0x4002014	      1596	intel_panel.c	FUNCTION_67	IF_5
0x4001fad	          0x4889df	                            mov rdi, rbx	      1599	intel_panel.c	FUNCTION_67	CALL_8
0x4001fb0	      0xe80be9ffff	          call sym.get_backlight_min_vbt	      1599	intel_panel.c	FUNCTION_67	CALL_8
0x4001fb5	          0x4889df	                            mov rdi, rbx	      1601	intel_panel.c	FUNCTION_67	CALL_9
0x4001fb8	    0x898358040000	            mov dword [rbx + 0x458], eax	      1599	intel_panel.c	FUNCTION_67	CALL_8
0x4001fbe	      0xe8bdf7ffff	             call sym.i9xx_get_backlight	      1601	intel_panel.c	FUNCTION_67	CALL_9
0x4001fc3	          0x4889df	                            mov rdi, rbx	      1602	intel_panel.c	FUNCTION_67	CALL_10
0x4001fc6	            0x89c6	                            mov esi, eax	      1602	intel_panel.c	FUNCTION_67	CALL_10
0x4001fc8	      0xe893e5ffff	 call sym.intel_panel_compute_brightness	      1602	intel_panel.c	FUNCTION_67	CALL_10
0x4001fcd	    0x398358040000	           cmp dword [rbx + 0x458], eax 	      1603	intel_panel.c	FUNCTION_67	CALL_11
0x4001fd3	            0x89c2	                            mov edx, eax	      1603	intel_panel.c	FUNCTION_67	CALL_11
0x4001fd5	    0x8b8b5c040000	           mov ecx, dword [rbx + 0x45c] 	      1603	intel_panel.c	FUNCTION_67	CALL_11
0x4001fdb	     0xf4393580400	         cmovae edx, dword [rbx + 0x458]	      1603	intel_panel.c	FUNCTION_67	CALL_11
0x4001fe2	            0x39ca	                            cmp edx, ecx	      1603	intel_panel.c	FUNCTION_67	CALL_11
0x4001fe4	           0xf47d1	                          cmova edx, ecx	      1603	intel_panel.c	FUNCTION_67	CALL_11
0x4001fe7	            0x85c0	                           test eax, eax	      1606	intel_panel.c	FUNCTION_67
0x4001fe9	     0xf9583600400	                setne byte [rbx + 0x460]	      1606	intel_panel.c	FUNCTION_67
0x4001ff0	    0x899354040000	            mov dword [rbx + 0x454], edx	      1603	intel_panel.c	FUNCTION_67	CALL_11
0x4001ff6	            0x31c0	                            xor eax, eax	      1608	intel_panel.c	FUNCTION_67
0x4001ff8	              0x5b	                                 pop rbx	      1609	intel_panel.c	FUNCTION_67
0x4001ff9	              0x5d	                                 pop rbp	      1609	intel_panel.c	FUNCTION_67
0x4001ffa	              0xc3	                                     ret	      1609	intel_panel.c	FUNCTION_67
0x4001ffb	            0x89c2	                            mov edx, eax	      1581	intel_panel.c	FUNCTION_67	IF_1
0x4001ffd	          0xc1ea10	                           shr edx, 0x10	      1581	intel_panel.c	FUNCTION_67	IF_1
0x4002000	          0x83e201	                              and edx, 1	      1581	intel_panel.c	FUNCTION_67	IF_1
0x4002003	    0x889361040000	              mov byte [rbx + 0x461], dl	      1581	intel_panel.c	FUNCTION_67	IF_1
0x4002009	    0x8b9564060000	           mov edx, dword [rbp + 0x664] 	      1581	intel_panel.c	FUNCTION_67	IF_1
0x400200f	      0xe96fffffff	                           jmp 0x4001f83	      1581	intel_panel.c	FUNCTION_67	IF_1
0x4002014	            0x89d0	                            mov eax, edx	      1597	intel_panel.c	FUNCTION_67	IF_5
0x4002016	          0xc1e008	                              shl eax, 8	      1597	intel_panel.c	FUNCTION_67	IF_5
0x4002019	            0x29d0	                            sub eax, edx	      1597	intel_panel.c	FUNCTION_67	IF_5
0x400201b	    0x89835c040000	            mov dword [rbx + 0x45c], eax	      1597	intel_panel.c	FUNCTION_67	IF_5
0x4002021	            0xeb8a	                           jmp 0x4001fad	      1597	intel_panel.c	FUNCTION_67	IF_5
0x4002023	          0x4889df	                            mov rdi, rbx	      1589	intel_panel.c	FUNCTION_67	IF_3	CALL_7
0x4002026	      0xe805f9ffff	          call sym.get_backlight_max_vbt	      1589	intel_panel.c	FUNCTION_67	IF_3	CALL_7
0x400202b	            0xd1e8	                              shr eax, 1	      1590	intel_panel.c	FUNCTION_67	IF_3
0x400202d	            0x89c2	                            mov edx, eax	      1590	intel_panel.c	FUNCTION_67	IF_3
0x400202f	    0x89835c040000	            mov dword [rbx + 0x45c], eax	      1590	intel_panel.c	FUNCTION_67	IF_3
0x4002035	      0xb8edffffff	                     mov eax, 0xffffffed	      1594	intel_panel.c	FUNCTION_67	IF_4
0x400203a	            0x85d2	                           test edx, edx	      1593	intel_panel.c	FUNCTION_67	IF_4
0x400203c	     0xf8562ffffff	                           jne 0x4001fa4	      1593	intel_panel.c	FUNCTION_67	IF_4
0x4002042	            0xebb4	                           jmp 0x4001ff8	      1593	intel_panel.c	FUNCTION_67	IF_4
i965_setup_backlight	DO,0:WHILE,0:SWITCH,0:IF,3:functions,0:CALL,8:FOR,0:ELSE,0	66
0x4002050	            0x4154	                                push r12	      1612	intel_panel.c	FUNCTION_68
0x4002052	              0x55	                                push rbp	      1612	intel_panel.c	FUNCTION_68
0x4002053	      0xba01000000	                              mov edx, 1	      1617	intel_panel.c	FUNCTION_68	CALL_2
0x4002058	              0x53	                                push rbx	      1612	intel_panel.c	FUNCTION_68
0x4002059	          0x488b2f	                    mov rbp, qword [rdi]	      1613	intel_panel.c	FUNCTION_68	CALL_1
0x400205c	          0x4889fb	                            mov rbx, rdi	      1612	intel_panel.c	FUNCTION_68
0x400205f	    0x8b8d6c060000	           mov ecx, dword [rbp + 0x66c] 	      1617	intel_panel.c	FUNCTION_68	CALL_2
0x4002065	          0x4889ef	                            mov rdi, rbp	      1617	intel_panel.c	FUNCTION_68	CALL_2
0x4002068	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      1617	intel_panel.c	FUNCTION_68	CALL_2
0x400206f	    0x8db150120600	                lea esi, [rcx + 0x61250]	      1617	intel_panel.c	FUNCTION_68	CALL_2
0x4002075	      0xe800000000	                          call 0x400207a	      1617	intel_panel.c	FUNCTION_68	CALL_2
0x400207a	          0x4189c4	                           mov r12d, eax	      1617	intel_panel.c	FUNCTION_68	CALL_2
0x400207d	          0xc1e81e	                           shr eax, 0x1e	      1618	intel_panel.c	FUNCTION_68
0x4002080	      0xba01000000	                              mov edx, 1	      1621	intel_panel.c	FUNCTION_68	CALL_3
0x4002085	          0x83e001	                              and eax, 1	      1618	intel_panel.c	FUNCTION_68
0x4002088	          0x4889ef	                            mov rdi, rbp	      1621	intel_panel.c	FUNCTION_68	CALL_3
0x400208b	    0x888361040000	              mov byte [rbx + 0x461], al	      1618	intel_panel.c	FUNCTION_68
0x4002091	          0x4489e0	                           mov eax, r12d	      1619	intel_panel.c	FUNCTION_68
0x4002094	          0xc1e81c	                           shr eax, 0x1c	      1619	intel_panel.c	FUNCTION_68
0x4002097	          0x83e001	                              and eax, 1	      1619	intel_panel.c	FUNCTION_68
0x400209a	    0x888362040000	              mov byte [rbx + 0x462], al	      1619	intel_panel.c	FUNCTION_68
0x40020a0	    0x8b8d6c060000	           mov ecx, dword [rbp + 0x66c] 	      1621	intel_panel.c	FUNCTION_68	CALL_3
0x40020a6	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      1621	intel_panel.c	FUNCTION_68	CALL_3
0x40020ad	    0x8db154120600	                lea esi, [rcx + 0x61254]	      1621	intel_panel.c	FUNCTION_68	CALL_3
0x40020b3	      0xe800000000	                          call 0x40020b8	      1621	intel_panel.c	FUNCTION_68	CALL_3
0x40020b8	          0xc1e810	                           shr eax, 0x10	      1622	intel_panel.c	FUNCTION_68
0x40020bb	            0x85c0	                           test eax, eax	      1624	intel_panel.c	FUNCTION_68	IF_1
0x40020bd	    0x89835c040000	            mov dword [rbx + 0x45c], eax	      1622	intel_panel.c	FUNCTION_68
0x40020c3	            0x89c2	                            mov edx, eax	      1622	intel_panel.c	FUNCTION_68
0x40020c5	            0x7468	                            je 0x400212f	      1624	intel_panel.c	FUNCTION_68	IF_1
0x40020c7	    0x80bb61040000	               cmp byte [rbx + 0x461], 0	      1630	intel_panel.c	FUNCTION_68	IF_3
0x40020ce	            0x7550	                           jne 0x4002120	      1630	intel_panel.c	FUNCTION_68	IF_3
0x40020d0	          0x4889df	                            mov rdi, rbx	      1633	intel_panel.c	FUNCTION_68	CALL_5
0x40020d3	      0xe8e8e7ffff	          call sym.get_backlight_min_vbt	      1633	intel_panel.c	FUNCTION_68	CALL_5
0x40020d8	          0x4889df	                            mov rdi, rbx	      1635	intel_panel.c	FUNCTION_68	CALL_6
0x40020db	    0x898358040000	            mov dword [rbx + 0x458], eax	      1633	intel_panel.c	FUNCTION_68	CALL_5
0x40020e1	      0xe89af6ffff	             call sym.i9xx_get_backlight	      1635	intel_panel.c	FUNCTION_68	CALL_6
0x40020e6	          0x4889df	                            mov rdi, rbx	      1636	intel_panel.c	FUNCTION_68	CALL_7
0x40020e9	            0x89c6	                            mov esi, eax	      1636	intel_panel.c	FUNCTION_68	CALL_7
0x40020eb	      0xe870e4ffff	 call sym.intel_panel_compute_brightness	      1636	intel_panel.c	FUNCTION_68	CALL_7
0x40020f0	    0x398358040000	           cmp dword [rbx + 0x458], eax 	      1637	intel_panel.c	FUNCTION_68	CALL_8
0x40020f6	    0x8b935c040000	           mov edx, dword [rbx + 0x45c] 	      1637	intel_panel.c	FUNCTION_68	CALL_8
0x40020fc	     0xf4383580400	         cmovae eax, dword [rbx + 0x458]	      1637	intel_panel.c	FUNCTION_68	CALL_8
0x4002103	            0x39d0	                            cmp eax, edx	      1637	intel_panel.c	FUNCTION_68	CALL_8
0x4002105	           0xf47c2	                          cmova eax, edx	      1637	intel_panel.c	FUNCTION_68	CALL_8
0x4002108	        0x41c1ec1f	                          shr r12d, 0x1f	      1640	intel_panel.c	FUNCTION_68
0x400210c	    0x898354040000	            mov dword [rbx + 0x454], eax	      1637	intel_panel.c	FUNCTION_68	CALL_8
0x4002112	    0x4488a3600400	            mov byte [rbx + 0x460], r12b	      1640	intel_panel.c	FUNCTION_68
0x4002119	            0x31c0	                            xor eax, eax	      1642	intel_panel.c	FUNCTION_68
0x400211b	              0x5b	                                 pop rbx	      1643	intel_panel.c	FUNCTION_68
0x400211c	              0x5d	                                 pop rbp	      1643	intel_panel.c	FUNCTION_68
0x400211d	            0x415c	                                 pop r12	      1643	intel_panel.c	FUNCTION_68
0x400211f	              0xc3	                                     ret	      1643	intel_panel.c	FUNCTION_68
0x4002120	            0x89d0	                            mov eax, edx	      1631	intel_panel.c	FUNCTION_68	IF_3
0x4002122	          0xc1e008	                              shl eax, 8	      1631	intel_panel.c	FUNCTION_68	IF_3
0x4002125	            0x29d0	                            sub eax, edx	      1631	intel_panel.c	FUNCTION_68	IF_3
0x4002127	    0x89835c040000	            mov dword [rbx + 0x45c], eax	      1631	intel_panel.c	FUNCTION_68	IF_3
0x400212d	            0xeba1	                           jmp 0x40020d0	      1631	intel_panel.c	FUNCTION_68	IF_3
0x400212f	          0x4889df	                            mov rdi, rbx	      1625	intel_panel.c	FUNCTION_68	CALL_4
0x4002132	      0xe8f9f7ffff	          call sym.get_backlight_max_vbt	      1625	intel_panel.c	FUNCTION_68	CALL_4
0x4002137	            0x89c2	                            mov edx, eax	      1625	intel_panel.c	FUNCTION_68	CALL_4
0x4002139	    0x89835c040000	            mov dword [rbx + 0x45c], eax	      1625	intel_panel.c	FUNCTION_68	CALL_4
0x400213f	      0xb8edffffff	                     mov eax, 0xffffffed	      1628	intel_panel.c	FUNCTION_68	IF_2
0x4002144	            0x85d2	                           test edx, edx	      1627	intel_panel.c	FUNCTION_68	IF_2
0x4002146	     0xf857bffffff	                           jne 0x40020c7	      1627	intel_panel.c	FUNCTION_68	IF_2
0x400214c	            0xebcd	                           jmp 0x400211b	      1627	intel_panel.c	FUNCTION_68	IF_2
vlv_hz_to_pwm	DO,0:WHILE,0:SWITCH,0:IF,2:functions,0:CALL,7:FOR,0:ELSE,2	38
0x40003d0	              0x55	                                push rbp	      1427	intel_panel.c	FUNCTION_62
0x40003d1	              0x53	                                push rbx	      1427	intel_panel.c	FUNCTION_62
0x40003d2	            0x89f5	                            mov ebp, esi	      1427	intel_panel.c	FUNCTION_62
0x40003d4	          0x488b1f	                    mov rbx, qword [rdi]	      1428	intel_panel.c	FUNCTION_62	CALL_1
0x40003d7	      0xba01000000	                              mov edx, 1	      1431	intel_panel.c	FUNCTION_62	IF_1	CALL_2
0x40003dc	      0xbe00041f00	                       mov esi, 0x1f0400	      1431	intel_panel.c	FUNCTION_62	IF_1	CALL_2
0x40003e1	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1431	intel_panel.c	FUNCTION_62	IF_1	CALL_2
0x40003e8	          0x4889df	                            mov rdi, rbx	      1431	intel_panel.c	FUNCTION_62	IF_1	CALL_2
0x40003eb	      0xe800000000	                          call 0x40003f0	      1431	intel_panel.c	FUNCTION_62	IF_1	CALL_2
0x40003f0	      0xa900000040	                    test eax, 0x40000000	      1431	intel_panel.c	FUNCTION_62	IF_1	CALL_2
0x40003f5	            0x752f	                           jne 0x4000426	      1431	intel_panel.c	FUNCTION_62	IF_1	CALL_2
0x40003f7	    0x8b8364060000	           mov eax, dword [rbx + 0x664] 	      1432	intel_panel.c	FUNCTION_62	IF_1	IF_2	CALL_3
0x40003fd	      0xbe10000000	                           mov esi, 0x10	      1432	intel_panel.c	FUNCTION_62	IF_1	IF_2	CALL_3
0x4000402	              0x5b	                                 pop rbx	      1443	intel_panel.c	FUNCTION_62
0x4000403	      0x2500002000	                       and eax, 0x200000	      1432	intel_panel.c	FUNCTION_62	IF_1	IF_2	CALL_3
0x4000408	          0x83f801	                              cmp eax, 1	      1432	intel_panel.c	FUNCTION_62	IF_1	IF_2	CALL_3
0x400040b	            0x19c0	                            sbb eax, eax	      1432	intel_panel.c	FUNCTION_62	IF_1	IF_2	CALL_3
0x400040d	           0xfaff5	                           imul esi, ebp	      1442	intel_panel.c	FUNCTION_62	CALL_7
0x4000410	      0x2540805800	                       and eax, 0x588040	      1432	intel_panel.c	FUNCTION_62	IF_1	IF_2	CALL_3
0x4000415	       0x500f82401	                      add eax, 0x124f800	      1432	intel_panel.c	FUNCTION_62	IF_1	IF_2	CALL_3
0x400041a	              0x5d	                                 pop rbp	      1443	intel_panel.c	FUNCTION_62
0x400041b	            0x89f2	                            mov edx, esi	      1442	intel_panel.c	FUNCTION_62	CALL_7
0x400041d	            0xd1ea	                              shr edx, 1	      1442	intel_panel.c	FUNCTION_62	CALL_7
0x400041f	             0x1d0	                            add eax, edx	      1442	intel_panel.c	FUNCTION_62	CALL_7
0x4000421	            0x31d2	                            xor edx, edx	      1442	intel_panel.c	FUNCTION_62	CALL_7
0x4000423	            0xf7f6	                                 div esi	      1442	intel_panel.c	FUNCTION_62	CALL_7
0x4000425	              0xc3	                                     ret	      1443	intel_panel.c	FUNCTION_62
0x4000426	    0x6983dc540000	   imul eax, dword [rbx + 0x54dc], 0x3e8	      1443	intel_panel.c	FUNCTION_62
0x4000430	      0xbe80000000	                           mov esi, 0x80	      1438	intel_panel.c	FUNCTION_62	ELSE_2	CALL_6
0x4000435	           0xfaff5	                           imul esi, ebp	      1442	intel_panel.c	FUNCTION_62	CALL_7
0x4000438	              0x5b	                                 pop rbx	      1443	intel_panel.c	FUNCTION_62
0x4000439	              0x5d	                                 pop rbp	      1443	intel_panel.c	FUNCTION_62
0x400043a	            0x89f2	                            mov edx, esi	      1442	intel_panel.c	FUNCTION_62	CALL_7
0x400043c	            0xd1ea	                              shr edx, 1	      1442	intel_panel.c	FUNCTION_62	CALL_7
0x400043e	             0x1d0	                            add eax, edx	      1442	intel_panel.c	FUNCTION_62	CALL_7
0x4000440	            0x31d2	                            xor edx, edx	      1442	intel_panel.c	FUNCTION_62	CALL_7
0x4000442	            0xf7f6	                                 div esi	      1442	intel_panel.c	FUNCTION_62	CALL_7
0x4000444	              0xc3	                                     ret	      1443	intel_panel.c	FUNCTION_62
spt_hz_to_pwm	DO,0:WHILE,0:SWITCH,0:IF,1:functions,0:CALL,2:FOR,0:ELSE,1	11
0x40002d0	    0x80bf63040000	               cmp byte [rdi + 0x463], 1	      1342	intel_panel.c	FUNCTION_57	ELSE_1
0x40002d7	            0x19c0	                            sbb eax, eax	      1342	intel_panel.c	FUNCTION_57	ELSE_1
0x40002d9	            0x31d2	                            xor edx, edx	      1344	intel_panel.c	FUNCTION_57	CALL_2
0x40002db	          0x83e090	                     and eax, 0xffffff90	      1342	intel_panel.c	FUNCTION_57	ELSE_1
0x40002de	          0x83e880	             sub eax, 0xffffffffffffff80	      1342	intel_panel.c	FUNCTION_57	ELSE_1
0x40002e1	           0xfaff0	                           imul esi, eax	      1344	intel_panel.c	FUNCTION_57	CALL_2
0x40002e4	            0x89f0	                            mov eax, esi	      1344	intel_panel.c	FUNCTION_57	CALL_2
0x40002e6	            0xd1e8	                              shr eax, 1	      1344	intel_panel.c	FUNCTION_57	CALL_2
0x40002e8	       0x500366e01	                      add eax, 0x16e3600	      1344	intel_panel.c	FUNCTION_57	CALL_2
0x40002ed	            0xf7f6	                                 div esi	      1344	intel_panel.c	FUNCTION_57	CALL_2
0x40002ef	              0xc3	                                     ret	      1345	intel_panel.c	FUNCTION_57
bxt_setup_backlight	DO,0:WHILE,0:SWITCH,0:IF,3:functions,0:CALL,11:FOR,0:ELSE,0	73
0x4001e00	            0x4154	                                push r12	      1680	intel_panel.c	FUNCTION_70
0x4001e02	              0x55	                                push rbp	      1680	intel_panel.c	FUNCTION_70
0x4001e03	      0xba01000000	                              mov edx, 1	      1687	intel_panel.c	FUNCTION_70	CALL_3
0x4001e08	              0x53	                                push rbx	      1680	intel_panel.c	FUNCTION_70
0x4001e09	          0x4c8b27	                    mov r12, qword [rdi]	      1681	intel_panel.c	FUNCTION_70	CALL_1
0x4001e0c	          0x4889fb	                            mov rbx, rdi	      1680	intel_panel.c	FUNCTION_70
0x4001e0f	    0x410fb6b42445	         movzx esi, byte [r12 + 0x4d45] 	      1685	intel_panel.c	FUNCTION_70
0x4001e18	    0x4088b7650400	             mov byte [rdi + 0x465], sil	      1685	intel_panel.c	FUNCTION_70
0x4001e1f	          0xc1e608	                              shl esi, 8	      1687	intel_panel.c	FUNCTION_70	CALL_3
0x4001e22	    0x498b8424f807	           mov rax, qword [r12 + 0x7f8] 	      1687	intel_panel.c	FUNCTION_70	CALL_3
0x4001e2a	    0x81c650820c00	                        add esi, 0xc8250	      1687	intel_panel.c	FUNCTION_70	CALL_3
0x4001e30	          0x4c89e7	                            mov rdi, r12	      1687	intel_panel.c	FUNCTION_70	CALL_3
0x4001e33	      0xe800000000	                          call 0x4001e38	      1687	intel_panel.c	FUNCTION_70	CALL_3
0x4001e38	     0xfb6b3650400	          movzx esi, byte [rbx + 0x465] 	      1690	intel_panel.c	FUNCTION_70	IF_1
0x4001e3f	            0x89c5	                            mov ebp, eax	      1687	intel_panel.c	FUNCTION_70	CALL_3
0x4001e41	        0x4080fe01	                              cmp sil, 1	      1690	intel_panel.c	FUNCTION_70	IF_1
0x4001e45	     0xf84ba000000	                            je 0x4001f05	      1690	intel_panel.c	FUNCTION_70	IF_1
0x4001e4b	            0x89e8	                            mov eax, ebp	      1696	intel_panel.c	FUNCTION_70
0x4001e4d	          0xc1e608	                              shl esi, 8	      1698	intel_panel.c	FUNCTION_70	CALL_6
0x4001e50	      0xba01000000	                              mov edx, 1	      1698	intel_panel.c	FUNCTION_70	CALL_6
0x4001e55	          0xc1e81d	                           shr eax, 0x1d	      1696	intel_panel.c	FUNCTION_70
0x4001e58	    0x81c654820c00	                        add esi, 0xc8254	      1698	intel_panel.c	FUNCTION_70	CALL_6
0x4001e5e	          0x4c89e7	                            mov rdi, r12	      1698	intel_panel.c	FUNCTION_70	CALL_6
0x4001e61	          0x83e001	                              and eax, 1	      1696	intel_panel.c	FUNCTION_70
0x4001e64	    0x888362040000	              mov byte [rbx + 0x462], al	      1696	intel_panel.c	FUNCTION_70
0x4001e6a	    0x498b8424f807	           mov rax, qword [r12 + 0x7f8] 	      1698	intel_panel.c	FUNCTION_70	CALL_6
0x4001e72	      0xe800000000	                          call 0x4001e77	      1698	intel_panel.c	FUNCTION_70	CALL_6
0x4001e77	            0x85c0	                           test eax, eax	      1700	intel_panel.c	FUNCTION_70	IF_2
0x4001e79	    0x89835c040000	            mov dword [rbx + 0x45c], eax	      1697	intel_panel.c	FUNCTION_70
0x4001e7f	            0x746b	                            je 0x4001eec	      1700	intel_panel.c	FUNCTION_70	IF_2
0x4001e81	          0x4889df	                            mov rdi, rbx	      1706	intel_panel.c	FUNCTION_70	CALL_8
0x4001e84	      0xe837eaffff	          call sym.get_backlight_min_vbt	      1706	intel_panel.c	FUNCTION_70	CALL_8
0x4001e89	     0xfb6b3650400	          movzx esi, byte [rbx + 0x465] 	       538	intel_panel.c	FUNCTION_21	CALL_3
0x4001e90	          0x488b3b	                    mov rdi, qword [rbx]	       535	intel_panel.c	FUNCTION_21	CALL_1
0x4001e93	      0xba01000000	                              mov edx, 1	       538	intel_panel.c	FUNCTION_21	CALL_3
0x4001e98	    0x898358040000	            mov dword [rbx + 0x458], eax	      1706	intel_panel.c	FUNCTION_70	CALL_8
0x4001e9e	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	       538	intel_panel.c	FUNCTION_21	CALL_3
0x4001ea5	          0xc1e608	                              shl esi, 8	       538	intel_panel.c	FUNCTION_21	CALL_3
0x4001ea8	    0x81c658820c00	                        add esi, 0xc8258	       538	intel_panel.c	FUNCTION_21	CALL_3
0x4001eae	      0xe800000000	                          call 0x4001eb3	       538	intel_panel.c	FUNCTION_21	CALL_3
0x4001eb3	          0x4889df	                            mov rdi, rbx	      1709	intel_panel.c	FUNCTION_70	CALL_10
0x4001eb6	            0x89c6	                            mov esi, eax	      1709	intel_panel.c	FUNCTION_70	CALL_10
0x4001eb8	      0xe8a3e6ffff	 call sym.intel_panel_compute_brightness	      1709	intel_panel.c	FUNCTION_70	CALL_10
0x4001ebd	    0x398358040000	           cmp dword [rbx + 0x458], eax 	      1710	intel_panel.c	FUNCTION_70	CALL_11
0x4001ec3	    0x8b935c040000	           mov edx, dword [rbx + 0x45c] 	      1710	intel_panel.c	FUNCTION_70	CALL_11
0x4001ec9	     0xf4383580400	         cmovae eax, dword [rbx + 0x458]	      1710	intel_panel.c	FUNCTION_70	CALL_11
0x4001ed0	            0x39d0	                            cmp eax, edx	      1710	intel_panel.c	FUNCTION_70	CALL_11
0x4001ed2	           0xf47c2	                          cmova eax, edx	      1710	intel_panel.c	FUNCTION_70	CALL_11
0x4001ed5	          0xc1ed1f	                           shr ebp, 0x1f	      1713	intel_panel.c	FUNCTION_70
0x4001ed8	    0x898354040000	            mov dword [rbx + 0x454], eax	      1710	intel_panel.c	FUNCTION_70	CALL_11
0x4001ede	    0x4088ab600400	             mov byte [rbx + 0x460], bpl	      1713	intel_panel.c	FUNCTION_70
0x4001ee5	            0x31c0	                            xor eax, eax	      1715	intel_panel.c	FUNCTION_70
0x4001ee7	              0x5b	                                 pop rbx	      1716	intel_panel.c	FUNCTION_70
0x4001ee8	              0x5d	                                 pop rbp	      1716	intel_panel.c	FUNCTION_70
0x4001ee9	            0x415c	                                 pop r12	      1716	intel_panel.c	FUNCTION_70
0x4001eeb	              0xc3	                                     ret	      1716	intel_panel.c	FUNCTION_70
0x4001eec	          0x4889df	                            mov rdi, rbx	      1701	intel_panel.c	FUNCTION_70	CALL_7
0x4001eef	      0xe83cfaffff	          call sym.get_backlight_max_vbt	      1701	intel_panel.c	FUNCTION_70	CALL_7
0x4001ef4	            0x85c0	                           test eax, eax	      1703	intel_panel.c	FUNCTION_70	IF_3
0x4001ef6	    0x89835c040000	            mov dword [rbx + 0x45c], eax	      1701	intel_panel.c	FUNCTION_70	CALL_7
0x4001efc	            0x7583	                           jne 0x4001e81	      1703	intel_panel.c	FUNCTION_70	IF_3
0x4001efe	      0xb8edffffff	                     mov eax, 0xffffffed	      1704	intel_panel.c	FUNCTION_70	IF_3
0x4001f03	            0xebe2	                           jmp 0x4001ee7	      1704	intel_panel.c	FUNCTION_70	IF_3
0x4001f05	      0xbe00840400	                        mov esi, 0x48400	      1691	intel_panel.c	FUNCTION_70	IF_1	CALL_4
0x4001f0a	    0x498b8424f807	           mov rax, qword [r12 + 0x7f8] 	      1691	intel_panel.c	FUNCTION_70	IF_1	CALL_4
0x4001f12	      0xba01000000	                              mov edx, 1	      1691	intel_panel.c	FUNCTION_70	IF_1	CALL_4
0x4001f17	          0x4c89e7	                            mov rdi, r12	      1691	intel_panel.c	FUNCTION_70	IF_1	CALL_4
0x4001f1a	      0xe800000000	                          call 0x4001f1f	      1691	intel_panel.c	FUNCTION_70	IF_1	CALL_4
0x4001f1f	          0xc1e816	                           shr eax, 0x16	      1692	intel_panel.c	FUNCTION_70	IF_1
0x4001f22	     0xfb6b3650400	          movzx esi, byte [rbx + 0x465] 	      1692	intel_panel.c	FUNCTION_70	IF_1
0x4001f29	          0x83e001	                              and eax, 1	      1692	intel_panel.c	FUNCTION_70	IF_1
0x4001f2c	    0x888364040000	              mov byte [rbx + 0x464], al	      1692	intel_panel.c	FUNCTION_70	IF_1
0x4001f32	      0xe914ffffff	                           jmp 0x4001e4b	      1692	intel_panel.c	FUNCTION_70	IF_1
intel_panel_disable_backlight	DO,0:WHILE,0:SWITCH,0:IF,3:functions,0:CALL,6:FOR,0:ELSE,0	36
0x4002740	            0x4154	                                push r12	       792	intel_panel.c	FUNCTION_39
0x4002742	              0x55	                                push rbp	       792	intel_panel.c	FUNCTION_39
0x4002743	              0x53	                                push rbx	       792	intel_panel.c	FUNCTION_39
0x4002744	          0x488b1f	                    mov rbx, qword [rdi]	       793	intel_panel.c	FUNCTION_39	CALL_1
0x4002747	    0x80bb50040000	               cmp byte [rbx + 0x450], 0	       797	intel_panel.c	FUNCTION_39	IF_1
0x400274e	            0x7453	                            je 0x40027a3	       797	intel_panel.c	FUNCTION_39	IF_1
0x4002750	          0x488b03	                    mov rax, qword [rbx]	       794	intel_panel.c	FUNCTION_39	CALL_2
0x4002753	    0x83b818060000	              cmp dword [rax + 0x618], 2	       806	intel_panel.c	FUNCTION_39	IF_2
0x400275a	            0x744c	                            je 0x40027a8	       806	intel_panel.c	FUNCTION_39	IF_2
0x400275c	    0x4c8da0784e00	                 lea r12, [rax + 0x4e78]	       811	intel_panel.c	FUNCTION_39	CALL_4
0x4002763	          0x4889fd	                            mov rbp, rdi	       811	intel_panel.c	FUNCTION_39	CALL_4
0x4002766	          0x4c89e7	                            mov rdi, r12	       811	intel_panel.c	FUNCTION_39	CALL_4
0x4002769	      0xe800000000	                          call 0x400276e	       811	intel_panel.c	FUNCTION_39	CALL_4
0x400276e	    0x488b83700400	           mov rax, qword [rbx + 0x470] 	       813	intel_panel.c	FUNCTION_39	IF_3
0x4002775	          0x4885c0	                           test rax, rax	       813	intel_panel.c	FUNCTION_39	IF_3
0x4002778	            0x7407	                            je 0x4002781	       813	intel_panel.c	FUNCTION_39	IF_3
0x400277a	    0xc74008040000	                  mov dword [rax + 8], 4	       814	intel_panel.c	FUNCTION_39	IF_3
0x4002781	          0x4889ef	                            mov rdi, rbp	       816	intel_panel.c	FUNCTION_39	CALL_5
0x4002784	    0xc68360040000	               mov byte [rbx + 0x460], 0	       815	intel_panel.c	FUNCTION_39
0x400278b	    0x488b83900400	           mov rax, qword [rbx + 0x490] 	       816	intel_panel.c	FUNCTION_39	CALL_5
0x4002792	      0xe800000000	                          call 0x4002797	       816	intel_panel.c	FUNCTION_39	CALL_5
0x4002797	          0x4c89e7	                            mov rdi, r12	       818	intel_panel.c	FUNCTION_39	CALL_6
0x400279a	              0x5b	                                 pop rbx	       819	intel_panel.c	FUNCTION_39
0x400279b	              0x5d	                                 pop rbp	       819	intel_panel.c	FUNCTION_39
0x400279c	            0x415c	                                 pop r12	       819	intel_panel.c	FUNCTION_39
0x400279e	      0xe900000000	                           jmp 0x40027a3	       818	intel_panel.c	FUNCTION_39	CALL_6
0x40027a3	              0x5b	                                 pop rbx	       819	intel_panel.c	FUNCTION_39
0x40027a4	              0x5d	                                 pop rbp	       819	intel_panel.c	FUNCTION_39
0x40027a5	            0x415c	                                 pop r12	       819	intel_panel.c	FUNCTION_39
0x40027a7	              0xc3	                                     ret	       819	intel_panel.c	FUNCTION_39
0x40027a8	              0x5b	                                 pop rbx	       819	intel_panel.c	FUNCTION_39
0x40027a9	              0x5d	                                 pop rbp	       819	intel_panel.c	FUNCTION_39
0x40027aa	            0x415c	                                 pop r12	       819	intel_panel.c	FUNCTION_39
0x40027ac	    0x48c7c6000000	                              mov rsi, 0	       807	intel_panel.c	FUNCTION_39	IF_2	CALL_3
0x40027b3	      0xbf02000000	                              mov edi, 2	       807	intel_panel.c	FUNCTION_39	IF_2	CALL_3
0x40027b8	      0xe900000000	                           jmp 0x40027bd	       807	intel_panel.c	FUNCTION_39	IF_2	CALL_3
lpt_set_backlight	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,4:FOR,0:ELSE,0	21
0x4000150	              0x55	                                push rbp	       551	intel_panel.c	FUNCTION_23
0x4000151	              0x53	                                push rbx	       551	intel_panel.c	FUNCTION_23
0x4000152	            0x89f5	                            mov ebp, esi	       551	intel_panel.c	FUNCTION_23
0x4000154	          0x488b07	                    mov rax, qword [rdi]	       553	intel_panel.c	FUNCTION_23	CALL_2
0x4000157	      0xba01000000	                              mov edx, 1	       555	intel_panel.c	FUNCTION_23	CALL_3
0x400015c	      0xbe54820c00	                        mov esi, 0xc8254	       555	intel_panel.c	FUNCTION_23	CALL_3
0x4000161	          0x488b18	                    mov rbx, qword [rax]	       553	intel_panel.c	FUNCTION_23	CALL_2
0x4000164	          0x4889df	                            mov rdi, rbx	       555	intel_panel.c	FUNCTION_23	CALL_3
0x4000167	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       555	intel_panel.c	FUNCTION_23	CALL_3
0x400016e	      0xe800000000	                          call 0x4000173	       555	intel_panel.c	FUNCTION_23	CALL_3
0x4000173	            0x89c2	                            mov edx, eax	       555	intel_panel.c	FUNCTION_23	CALL_3
0x4000175	          0x4889df	                            mov rdi, rbx	       556	intel_panel.c	FUNCTION_23	CALL_4
0x4000178	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       556	intel_panel.c	FUNCTION_23	CALL_4
0x400017f	          0x6631d2	                              xor dx, dx	       556	intel_panel.c	FUNCTION_23	CALL_4
0x4000182	      0xb901000000	                              mov ecx, 1	       556	intel_panel.c	FUNCTION_23	CALL_4
0x4000187	      0xbe54820c00	                        mov esi, 0xc8254	       556	intel_panel.c	FUNCTION_23	CALL_4
0x400018c	             0x9ea	                             or edx, ebp	       556	intel_panel.c	FUNCTION_23	CALL_4
0x400018e	      0xe800000000	                          call 0x4000193	       556	intel_panel.c	FUNCTION_23	CALL_4
0x4000193	              0x5b	                                 pop rbx	       557	intel_panel.c	FUNCTION_23
0x4000194	              0x5d	                                 pop rbp	       557	intel_panel.c	FUNCTION_23
0x4000195	              0xc3	                                     ret	       557	intel_panel.c	FUNCTION_23
intel_panel_detect	DO,0:WHILE,0:SWITCH,1:IF,1:functions,0:CALL,0:FOR,0:ELSE,0	21
0x4002600	    0x8b1500000000	            mov edx, dword [0x04002606] 	       382	intel_panel.c	FUNCTION_10	IF_1
0x4002606	            0x85d2	                           test edx, edx	       382	intel_panel.c	FUNCTION_10	IF_1
0x4002608	            0x7517	                           jne 0x4002621	       382	intel_panel.c	FUNCTION_10	IF_1
0x400260a	    0x488b87c04c00	          mov rax, qword [rdi + 0x4cc0] 	       382	intel_panel.c	FUNCTION_10	IF_1
0x4002611	          0x4885c0	                           test rax, rax	       382	intel_panel.c	FUNCTION_10	IF_1
0x4002614	            0x7421	                            je 0x4002637	       382	intel_panel.c	FUNCTION_10	IF_1
0x4002616	            0x8b00	                    mov eax, dword [rax]	       383	intel_panel.c	FUNCTION_10	IF_1
0x4002618	          0x83e001	                              and eax, 1	       383	intel_panel.c	FUNCTION_10	IF_1
0x400261b	            0xf7d8	                                 neg eax	       383	intel_panel.c	FUNCTION_10	IF_1
0x400261d	          0x83c002	                              add eax, 2	       383	intel_panel.c	FUNCTION_10	IF_1
0x4002620	              0xc3	                                     ret	       383	intel_panel.c	FUNCTION_10	IF_1
0x4002621	          0x83fafe	             cmp edx, 0xfffffffffffffffe	       388	intel_panel.c	FUNCTION_10	SWITCH_1
0x4002624	      0xb801000000	                              mov eax, 1	       390	intel_panel.c	FUNCTION_10	SWITCH_1
0x4002629	            0x7411	                            je 0x400263c	       388	intel_panel.c	FUNCTION_10	SWITCH_1
0x400262b	            0x31c0	                            xor eax, eax	       394	intel_panel.c	FUNCTION_10	SWITCH_1
0x400262d	          0x83faff	             cmp edx, 0xffffffffffffffff	       394	intel_panel.c	FUNCTION_10	SWITCH_1
0x4002630	           0xf95c0	                                setne al	       394	intel_panel.c	FUNCTION_10	SWITCH_1
0x4002633	          0x83c002	                              add eax, 2	       394	intel_panel.c	FUNCTION_10	SWITCH_1
0x4002636	              0xc3	                                     ret	       394	intel_panel.c	FUNCTION_10	SWITCH_1
0x4002637	      0xb803000000	                              mov eax, 3	       394	intel_panel.c	FUNCTION_10	SWITCH_1
0x400263c	            0xf3c3	                                     ret	       396	intel_panel.c	FUNCTION_10
intel_backlight_device_get_brightness	DO,0:WHILE,0:SWITCH,0:IF,0:functions,0:CALL,8:FOR,0:ELSE,0	54
0x40016c0	            0x4157	                                push r15	      1222	intel_panel.c	FUNCTION_52
0x40016c2	            0x4156	                                push r14	      1222	intel_panel.c	FUNCTION_52
0x40016c4	          0x4989ff	                            mov r15, rdi	      1222	intel_panel.c	FUNCTION_52
0x40016c7	            0x4155	                                push r13	      1222	intel_panel.c	FUNCTION_52
0x40016c9	            0x4154	                                push r12	      1222	intel_panel.c	FUNCTION_52
0x40016cb	          0x4531ed	                          xor r13d, r13d	      1222	intel_panel.c	FUNCTION_52
0x40016ce	              0x55	                                push rbp	      1222	intel_panel.c	FUNCTION_52
0x40016cf	              0x53	                                push rbx	      1222	intel_panel.c	FUNCTION_52
0x40016d0	    0x488b9f200100	           mov rbx, qword [rdi + 0x120] 	      1222	intel_panel.c	FUNCTION_52
0x40016d7	          0x4c8b23	                    mov r12, qword [rbx]	      1224	intel_panel.c	FUNCTION_52
0x40016da	    0x4d8db4241802	                  lea r14, [r12 + 0x218]	      1230	intel_panel.c	FUNCTION_52	CALL_4
0x40016e2	          0x4c89e7	                            mov rdi, r12	      1229	intel_panel.c	FUNCTION_52	CALL_3
0x40016e5	      0xe800000000	                          call 0x40016ea	      1229	intel_panel.c	FUNCTION_52	CALL_3
0x40016ea	            0x31f6	                            xor esi, esi	      1230	intel_panel.c	FUNCTION_52	CALL_4
0x40016ec	          0x4c89f7	                            mov rdi, r14	      1230	intel_panel.c	FUNCTION_52	CALL_4
0x40016ef	      0xe800000000	                          call 0x40016f4	      1230	intel_panel.c	FUNCTION_52	CALL_4
0x40016f4	          0x488b03	                    mov rax, qword [rbx]	      1151	intel_panel.c	FUNCTION_49	CALL_2
0x40016f7	    0x488da8784e00	                 lea rbp, [rax + 0x4e78]	      1151	intel_panel.c	FUNCTION_49	CALL_2
0x40016fe	          0x4889ef	                            mov rdi, rbp	      1151	intel_panel.c	FUNCTION_49	CALL_2
0x4001701	      0xe800000000	                          call 0x4001706	      1151	intel_panel.c	FUNCTION_49	CALL_2
0x4001706	    0x80bb60040000	               cmp byte [rbx + 0x460], 0	      1153	intel_panel.c	FUNCTION_49	IF_1
0x400170d	            0x741c	                            je 0x400172b	      1153	intel_panel.c	FUNCTION_49	IF_1
0x400170f	          0x4889df	                            mov rdi, rbx	      1154	intel_panel.c	FUNCTION_49	IF_1	CALL_3
0x4001712	    0x488b83800400	           mov rax, qword [rbx + 0x480] 	      1154	intel_panel.c	FUNCTION_49	IF_1	CALL_3
0x4001719	      0xe800000000	                          call 0x400171e	      1154	intel_panel.c	FUNCTION_49	IF_1	CALL_3
0x400171e	          0x4889df	                            mov rdi, rbx	      1155	intel_panel.c	FUNCTION_49	IF_1	CALL_4
0x4001721	            0x89c6	                            mov esi, eax	      1155	intel_panel.c	FUNCTION_49	IF_1	CALL_4
0x4001723	      0xe838eeffff	 call sym.intel_panel_compute_brightness	      1155	intel_panel.c	FUNCTION_49	IF_1	CALL_4
0x4001728	          0x4189c5	                           mov r13d, eax	      1155	intel_panel.c	FUNCTION_49	IF_1	CALL_4
0x400172b	          0x4889ef	                            mov rdi, rbp	      1158	intel_panel.c	FUNCTION_49	CALL_5
0x400172e	      0xe800000000	                          call 0x4001733	      1158	intel_panel.c	FUNCTION_49	CALL_5
0x4001733	          0x4489ea	                           mov edx, r13d	      1160	intel_panel.c	FUNCTION_49	CALL_6
0x4001736	    0x48c7c6000000	                              mov rsi, 0	      1160	intel_panel.c	FUNCTION_49	CALL_6
0x400173d	      0xbf02000000	                              mov edi, 2	      1160	intel_panel.c	FUNCTION_49	CALL_6
0x4001742	      0xe800000000	                          call 0x4001747	      1160	intel_panel.c	FUNCTION_49	CALL_6
0x4001747	    0x8b935c040000	           mov edx, dword [rbx + 0x45c] 	       460	intel_panel.c	FUNCTION_14	CALL_1
0x400174d	    0x8bb358040000	           mov esi, dword [rbx + 0x458] 	       460	intel_panel.c	FUNCTION_14	CALL_1
0x4001753	            0x31c9	                            xor ecx, ecx	       460	intel_panel.c	FUNCTION_14	CALL_1
0x4001755	        0x458b4704	                mov r8d, dword [r15 + 4]	       460	intel_panel.c	FUNCTION_14	CALL_1
0x4001759	          0x4489ef	                           mov edi, r13d	       460	intel_panel.c	FUNCTION_14	CALL_1
0x400175c	      0xe8efecffff	                          call sym.scale	       460	intel_panel.c	FUNCTION_14	CALL_1
0x4001761	          0x4c89f7	                            mov rdi, r14	      1235	intel_panel.c	FUNCTION_52	CALL_7
0x4001764	            0x89c3	                            mov ebx, eax	       460	intel_panel.c	FUNCTION_14	CALL_1
0x4001766	      0xe800000000	                          call 0x400176b	      1235	intel_panel.c	FUNCTION_52	CALL_7
0x400176b	          0x4c89e7	                            mov rdi, r12	      1236	intel_panel.c	FUNCTION_52	CALL_8
0x400176e	      0xe800000000	                          call 0x4001773	      1236	intel_panel.c	FUNCTION_52	CALL_8
0x4001773	            0x89d8	                            mov eax, ebx	      1239	intel_panel.c	FUNCTION_52
0x4001775	              0x5b	                                 pop rbx	      1239	intel_panel.c	FUNCTION_52
0x4001776	              0x5d	                                 pop rbp	      1239	intel_panel.c	FUNCTION_52
0x4001777	            0x415c	                                 pop r12	      1239	intel_panel.c	FUNCTION_52
0x4001779	            0x415d	                                 pop r13	      1239	intel_panel.c	FUNCTION_52
0x400177b	            0x415e	                                 pop r14	      1239	intel_panel.c	FUNCTION_52
0x400177d	            0x415f	                                 pop r15	      1239	intel_panel.c	FUNCTION_52
0x400177f	              0xc3	                                     ret	      1239	intel_panel.c	FUNCTION_52
