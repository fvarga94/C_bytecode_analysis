keyring_read	DO,0:WHILE,0:ELSE,1:IF,4:FOR,0:CALL,2:SWITCH,0:functions,0	34
0x4000170	              0x53	                                push rbx	       460	keyring.c	FUNCTION_19
0x4000171	        0x4883ec20	                           sub rsp, 0x20	       460	keyring.c	FUNCTION_19
0x4000175	    0x65488b042528	                mov rax, qword gs:[0x28]	       460	keyring.c	FUNCTION_19
0x400017e	      0x4889442418	             mov qword [rsp + 0x18], rax	       460	keyring.c	FUNCTION_19
0x4000183	            0x31c0	                            xor eax, eax	       460	keyring.c	FUNCTION_19
0x4000185	          0xf6c203	                              test dl, 3	       466	keyring.c	FUNCTION_19	IF_1
0x4000188	            0x755f	                           jne 0x40001e9	       466	keyring.c	FUNCTION_19	IF_1
0x400018a	          0x4885f6	                           test rsi, rsi	       470	keyring.c	FUNCTION_19	IF_2
0x400018d	          0x4889fb	                            mov rbx, rdi	       470	keyring.c	FUNCTION_19	IF_2
0x4000190	            0x7405	                            je 0x4000197	       470	keyring.c	FUNCTION_19	IF_2
0x4000192	          0x4885d2	                           test rdx, rdx	       470	keyring.c	FUNCTION_19	IF_2
0x4000195	            0x7521	                           jne 0x40001b8	       470	keyring.c	FUNCTION_19	IF_2
0x4000197	    0x488b83b80000	            mov rax, qword [rbx + 0xb8] 	       483	keyring.c	FUNCTION_19
0x400019e	        0x48c1e002	                              shl rax, 2	       488	keyring.c	FUNCTION_19
0x40001a2	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       489	keyring.c	FUNCTION_19
0x40001a7	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       489	keyring.c	FUNCTION_19
0x40001b0	            0x7540	                           jne 0x40001f2	       489	keyring.c	FUNCTION_19
0x40001b2	        0x4883c420	                           add rsp, 0x20	       489	keyring.c	FUNCTION_19
0x40001b6	              0x5b	                                 pop rbx	       489	keyring.c	FUNCTION_19
0x40001b7	              0xc3	                                     ret	       489	keyring.c	FUNCTION_19
0x40001b8	    0x488dbfb00000	                   lea rdi, [rdi + 0xb0]	       474	keyring.c	FUNCTION_19	IF_2	CALL_2
0x40001bf	      0x4889742410	             mov qword [rsp + 0x10], rsi	       471	keyring.c	FUNCTION_19	IF_2
0x40001c4	        0x48891424	                    mov qword [rsp], rdx	       472	keyring.c	FUNCTION_19	IF_2
0x40001c8	    0x48c7c6000000	                              mov rsi, 0	       474	keyring.c	FUNCTION_19	IF_2	CALL_2
0x40001cf	          0x4889e2	                            mov rdx, rsp	       474	keyring.c	FUNCTION_19	IF_2	CALL_2
0x40001d2	    0x48c744240800	                  mov qword [rsp + 8], 0	       473	keyring.c	FUNCTION_19	IF_2
0x40001db	      0xe800000000	                          call 0x40001e0	       474	keyring.c	FUNCTION_19	IF_2	CALL_2
0x40001e0	            0x4898	                                    cdqe	       474	keyring.c	FUNCTION_19	IF_2	CALL_2
0x40001e2	          0x4885c0	                           test rax, rax	       476	keyring.c	FUNCTION_19	IF_2	IF_3
0x40001e5	            0x79b0	                           jns 0x4000197	       476	keyring.c	FUNCTION_19	IF_2	IF_3
0x40001e7	            0xebb9	                           jmp 0x40001a2	       476	keyring.c	FUNCTION_19	IF_2	IF_3
0x40001e9	    0x48c7c0eaffff	             mov rax, 0xffffffffffffffea	       467	keyring.c	FUNCTION_19	IF_1
0x40001f0	            0xebb0	                           jmp 0x40001a2	       467	keyring.c	FUNCTION_19	IF_1
0x40001f2	      0xe800000000	                          call 0x40001f7	       489	keyring.c	FUNCTION_19
keyring_preparse	DO,0:WHILE,0:ELSE,0:IF,0:FOR,0:CALL,0:SWITCH,0:functions,0	5
0x4000040	      0x48837f3001	               cmp qword [rdi + 0x30], 1	       133	keyring.c	FUNCTION_6
0x4000045	            0x19c0	                            sbb eax, eax	       133	keyring.c	FUNCTION_6
0x4000047	            0xf7d0	                                 not eax	       133	keyring.c	FUNCTION_6
0x4000049	          0x83e0ea	                     and eax, 0xffffffea	       133	keyring.c	FUNCTION_6
0x400004c	              0xc3	                                     ret	       134	keyring.c	FUNCTION_6
keyring_free_object	DO,0:WHILE,0:ELSE,0:IF,0:FOR,0:CALL,2:SWITCH,0:functions,0	2
0x4000240	        0x4883e7fc	             and rdi, 0xfffffffffffffffc	       362	keyring.c	FUNCTION_15	CALL_2
0x4000244	      0xe900000000	                           jmp 0x4000249	       362	keyring.c	FUNCTION_15	CALL_2
keyring_gc_check_iterator	DO,0:WHILE,0:ELSE,0:IF,0:FOR,0:CALL,2:SWITCH,0:functions,0	13
0x4000140	        0x4883e7fc	             and rdi, 0xfffffffffffffffc	        49	keyring.c	FUNCTION_2
0x4000144	          0x488b0e	                    mov rcx, qword [rsi]	      1499	keyring.c	FUNCTION_45	CALL_2
0x4000147	      0xb801000000	                              mov eax, 1	       218	internal.h	FUNCTION_49
0x400014c	    0xf68780000000	           test byte [rdi + 0x80], 0x21 	       218	internal.h	FUNCTION_49
0x4000153	        0x488b5758	            mov rdx, qword [rdi + 0x58] 	       218	internal.h	FUNCTION_49
0x4000157	            0x7511	                           jne 0x400016a	       218	internal.h	FUNCTION_49
0x4000159	          0x4839d1	                            cmp rcx, rdx	       218	internal.h	FUNCTION_49
0x400015c	           0xf9dc0	                                setge al	       218	internal.h	FUNCTION_49
0x400015f	          0x4885d2	                           test rdx, rdx	       218	internal.h	FUNCTION_49
0x4000162	           0xf9fc2	                                 setg dl	       218	internal.h	FUNCTION_49
0x4000165	           0xfb6d2	                           movzx edx, dl	       218	internal.h	FUNCTION_49
0x4000168	            0x21d0	                            and eax, edx	       218	internal.h	FUNCTION_49
0x400016a	            0xf3c3	                                     ret	      1500	keyring.c	FUNCTION_45
restrict_link_reject	DO,0:WHILE,0:ELSE,0:IF,0:FOR,0:CALL,0:SWITCH,0:functions,0	2
0x4000110	      0xb8ffffffff	                     mov eax, 0xffffffff	       537	keyring.c	FUNCTION_21
0x4000115	              0xc3	                                     ret	       537	keyring.c	FUNCTION_21
keyring_gc	DO,0:WHILE,0:ELSE,0:IF,2:FOR,0:CALL,6:SWITCH,0:functions,0	29
0x40014e0	              0x55	                                push rbp	      1509	keyring.c	FUNCTION_46
0x40014e1	              0x53	                                push rbx	      1509	keyring.c	FUNCTION_46
0x40014e2	        0x4883ec08	                              sub rsp, 8	      1509	keyring.c	FUNCTION_46
0x40014e6	    0xf68780000000	           test byte [rdi + 0x80], 0x22 	      1514	keyring.c	FUNCTION_46	IF_1
0x40014ed	        0x48893424	                    mov qword [rsp], rsi	      1509	keyring.c	FUNCTION_46
0x40014f1	            0x7407	                            je 0x40014fa	      1514	keyring.c	FUNCTION_46	IF_1
0x40014f3	        0x4883c408	                              add rsp, 8	      1536	keyring.c	FUNCTION_46
0x40014f7	              0x5b	                                 pop rbx	      1536	keyring.c	FUNCTION_46
0x40014f8	              0x5d	                                 pop rbp	      1536	keyring.c	FUNCTION_46
0x40014f9	              0xc3	                                     ret	      1536	keyring.c	FUNCTION_46
0x40014fa	    0x488dafb00000	                   lea rbp, [rdi + 0xb0]	      1520	keyring.c	FUNCTION_46	CALL_2
0x4001501	          0x4889fb	                            mov rbx, rdi	      1520	keyring.c	FUNCTION_46	CALL_2
0x4001504	          0x4889e2	                            mov rdx, rsp	      1520	keyring.c	FUNCTION_46	CALL_2
0x4001507	    0x48c7c6000000	                              mov rsi, 0	      1520	keyring.c	FUNCTION_46	CALL_2
0x400150e	          0x4889ef	                            mov rdi, rbp	      1520	keyring.c	FUNCTION_46	CALL_2
0x4001511	      0xe800000000	                          call 0x4001516	      1520	keyring.c	FUNCTION_46	CALL_2
0x4001516	          0x83f801	                              cmp eax, 1	      1523	keyring.c	FUNCTION_46	IF_2
0x4001519	            0x75d8	                           jne 0x40014f3	      1523	keyring.c	FUNCTION_46	IF_2
0x400151b	        0x4883c320	                           add rbx, 0x20	      1531	keyring.c	FUNCTION_46	CALL_4
0x400151f	          0x4889df	                            mov rdi, rbx	      1531	keyring.c	FUNCTION_46	CALL_4
0x4001522	      0xe800000000	                          call 0x4001527	      1531	keyring.c	FUNCTION_46	CALL_4
0x4001527	          0x4889ef	                            mov rdi, rbp	      1532	keyring.c	FUNCTION_46	CALL_5
0x400152a	          0x4889e1	                            mov rcx, rsp	      1532	keyring.c	FUNCTION_46	CALL_5
0x400152d	    0x48c7c2000000	                              mov rdx, 0	      1532	keyring.c	FUNCTION_46	CALL_5
0x4001534	    0x48c7c6000000	                              mov rsi, 0	      1532	keyring.c	FUNCTION_46	CALL_5
0x400153b	      0xe800000000	                          call 0x4001540	      1532	keyring.c	FUNCTION_46	CALL_5
0x4001540	          0x4889df	                            mov rdi, rbx	      1534	keyring.c	FUNCTION_46	CALL_6
0x4001543	      0xe800000000	                          call 0x4001548	      1534	keyring.c	FUNCTION_46	CALL_6
0x4001548	            0xeba9	                           jmp 0x40014f3	      1534	keyring.c	FUNCTION_46	CALL_6
keyring_restriction_gc	DO,0:WHILE,0:ELSE,0:IF,1:FOR,0:CALL,3:SWITCH,0:functions,0	24
0x4001550	          0x4885f6	                           test rsi, rsi	      1566	keyring.c	FUNCTION_47	IF_1
0x4001553	            0x7412	                            je 0x4001567	      1566	keyring.c	FUNCTION_47	IF_1
0x4001555	    0x488b87c00000	            mov rax, qword [rdi + 0xc0] 	      1566	keyring.c	FUNCTION_47	IF_1
0x400155c	          0x4885c0	                           test rax, rax	      1566	keyring.c	FUNCTION_47	IF_1
0x400155f	            0x7406	                            je 0x4001567	      1566	keyring.c	FUNCTION_47	IF_1
0x4001561	        0x483b7010	            cmp rsi, qword [rax + 0x10] 	      1566	keyring.c	FUNCTION_47	IF_1
0x4001565	            0x7402	                            je 0x4001569	      1566	keyring.c	FUNCTION_47	IF_1
0x4001567	            0xf3c3	                                     ret	      1566	keyring.c	FUNCTION_47	IF_1
0x4001569	              0x55	                                push rbp	      1554	keyring.c	FUNCTION_47
0x400156a	        0x488d6f20	                   lea rbp, [rdi + 0x20]	      1573	keyring.c	FUNCTION_47	CALL_1
0x400156e	              0x53	                                push rbx	      1554	keyring.c	FUNCTION_47
0x400156f	          0x4889fb	                            mov rbx, rdi	      1554	keyring.c	FUNCTION_47
0x4001572	          0x4889ef	                            mov rdi, rbp	      1573	keyring.c	FUNCTION_47	CALL_1
0x4001575	      0xe800000000	                          call 0x400157a	      1573	keyring.c	FUNCTION_47	CALL_1
0x400157a	    0x488b9bc00000	            mov rbx, qword [rbx + 0xc0] 	      1575	keyring.c	FUNCTION_47
0x4001581	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1579	keyring.c	FUNCTION_47	CALL_2
0x4001585	    0x48c703000000	                      mov qword [rbx], 0	      1577	keyring.c	FUNCTION_47
0x400158c	      0xe800000000	                          call 0x4001591	      1579	keyring.c	FUNCTION_47	CALL_2
0x4001591	    0x48c743080000	                  mov qword [rbx + 8], 0	      1580	keyring.c	FUNCTION_47
0x4001599	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1581	keyring.c	FUNCTION_47
0x40015a1	          0x4889ef	                            mov rdi, rbp	      1583	keyring.c	FUNCTION_47	CALL_3
0x40015a4	              0x5b	                                 pop rbx	      1586	keyring.c	FUNCTION_47
0x40015a5	              0x5d	                                 pop rbp	      1586	keyring.c	FUNCTION_47
0x40015a6	      0xe900000000	                   jmp section_end..text	      1583	keyring.c	FUNCTION_47	CALL_3
keyring_get_object_key_chunk	DO,0:WHILE,0:ELSE,0:IF,0:FOR,0:CALL,2:SWITCH,0:functions,0	3
0x4000620	        0x4883e7fc	             and rdi, 0xfffffffffffffffc	       275	keyring.c	FUNCTION_12	CALL_2
0x4000624	    0x4881c7880000	                           add rdi, 0x88	       275	keyring.c	FUNCTION_12	CALL_2
0x400062b	      0xe940ffffff	           jmp sym.keyring_get_key_chunk	       275	keyring.c	FUNCTION_12	CALL_2
key_default_cmp	DO,0:WHILE,0:ELSE,0:IF,0:FOR,0:CALL,1:SWITCH,0:functions,0	6
0x4000720	        0x488b7608	                mov rsi, qword [rsi + 8]	       545	keyring.c	FUNCTION_22	CALL_1
0x4000724	    0x488bbf900000	            mov rdi, qword [rdi + 0x90] 	       545	keyring.c	FUNCTION_22	CALL_1
0x400072b	      0xe800000000	                          call 0x4000730	       545	keyring.c	FUNCTION_22	CALL_1
0x4000730	            0x85c0	                           test eax, eax	       545	keyring.c	FUNCTION_22	CALL_1
0x4000732	           0xf94c0	                                 sete al	       545	keyring.c	FUNCTION_22	CALL_1
0x4000735	              0xc3	                                     ret	       546	keyring.c	FUNCTION_22
keyring_get_key_chunk	DO,1:WHILE,0:ELSE,0:IF,4:FOR,0:CALL,1:SWITCH,1:functions,0	55
0x4000570	          0x8d4e3f	                   lea ecx, [rsi + 0x3f]	       237	keyring.c	FUNCTION_11
0x4000573	            0x85f6	                           test esi, esi	       237	keyring.c	FUNCTION_11
0x4000575	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	       235	keyring.c	FUNCTION_11
0x4000579	           0xf48f1	                          cmovs esi, ecx	       237	keyring.c	FUNCTION_11
0x400057c	          0xc1fe06	                              sar esi, 6	       237	keyring.c	FUNCTION_11
0x400057f	          0x83fe01	                              cmp esi, 1	       238	keyring.c	FUNCTION_11	SWITCH_1
0x4000582	            0x7474	                            je 0x40005f8	       238	keyring.c	FUNCTION_11	SWITCH_1
0x4000584	          0x83fe02	                              cmp esi, 2	       238	keyring.c	FUNCTION_11	SWITCH_1
0x4000587	            0x7458	                            je 0x40005e1	       238	keyring.c	FUNCTION_11	SWITCH_1
0x4000589	            0x31c9	                            xor ecx, ecx	       238	keyring.c	FUNCTION_11	SWITCH_1
0x400058b	            0x85f6	                           test esi, esi	       238	keyring.c	FUNCTION_11	SWITCH_1
0x400058d	    0x41b808000000	                              mov r8d, 8	       235	keyring.c	FUNCTION_11
0x4000593	            0x7447	                            je 0x40005dc	       238	keyring.c	FUNCTION_11	SWITCH_1
0x4000595	          0x8d46fd	                      lea eax, [rsi - 3]	       251	keyring.c	FUNCTION_11	SWITCH_1
0x4000598	          0x4c63ca	                          movsxd r9, edx	       252	keyring.c	FUNCTION_11	SWITCH_1	IF_2
0x400059b	            0x4898	                                    cdqe	       251	keyring.c	FUNCTION_11	SWITCH_1
0x400059d	      0x488d4cc107	              lea rcx, [rcx + rax*8 + 7]	       251	keyring.c	FUNCTION_11	SWITCH_1
0x40005a2	            0x31c0	                            xor eax, eax	       253	keyring.c	FUNCTION_11	SWITCH_1	IF_2
0x40005a4	          0x4c39c9	                             cmp rcx, r9	       252	keyring.c	FUNCTION_11	SWITCH_1	IF_2
0x40005a7	            0x7d31	                           jge 0x40005da	       252	keyring.c	FUNCTION_11	SWITCH_1	IF_2
0x40005a9	            0x29ca	                            sub edx, ecx	       254	keyring.c	FUNCTION_11	SWITCH_1
0x40005ab	          0x4139d0	                            cmp r8d, edx	       254	keyring.c	FUNCTION_11	SWITCH_1
0x40005ae	        0x410f4ed0	                         cmovle edx, r8d	       254	keyring.c	FUNCTION_11	SWITCH_1
0x40005b2	          0x4863c2	                         movsxd rax, edx	       254	keyring.c	FUNCTION_11	SWITCH_1
0x40005b5	          0x4801c1	                            add rcx, rax	       254	keyring.c	FUNCTION_11	SWITCH_1
0x40005b8	        0x48034f08	                add rcx, qword [rdi + 8]	       254	keyring.c	FUNCTION_11	SWITCH_1
0x40005bc	            0x31c0	                            xor eax, eax	       233	keyring.c	FUNCTION_11
0x40005be	      0x440fb641ff	               movzx r8d, byte [rcx - 1]	       260	keyring.c	FUNCTION_11	SWITCH_1	DO_1
0x40005c3	        0x48c1e008	                              shl rax, 8	       259	keyring.c	FUNCTION_11	SWITCH_1	DO_1
0x40005c7	          0x83ea01	                              sub edx, 1	       261	keyring.c	FUNCTION_11	SWITCH_1	DO_1
0x40005ca	        0x4883e901	                              sub rcx, 1	       261	keyring.c	FUNCTION_11	SWITCH_1	DO_1
0x40005ce	          0x4c09c0	                              or rax, r8	       260	keyring.c	FUNCTION_11	SWITCH_1	DO_1
0x40005d1	            0x85d2	                           test edx, edx	       261	keyring.c	FUNCTION_11	SWITCH_1	DO_1
0x40005d3	            0x7fe9	                            jg 0x40005be	       261	keyring.c	FUNCTION_11	SWITCH_1	DO_1
0x40005d5	          0x83fe02	                              cmp esi, 2	       263	keyring.c	FUNCTION_11	SWITCH_1	IF_4
0x40005d8	            0x742c	                            je 0x4000606	       263	keyring.c	FUNCTION_11	SWITCH_1	IF_4
0x40005da	            0xf3c3	                                     ret	       270	keyring.c	FUNCTION_11
0x40005dc	      0xe91ffdffff	          jmp sym.hash_key_type_and_desc	       240	keyring.c	FUNCTION_11	SWITCH_1	CALL_1
0x40005e1	            0x85d2	                           test edx, edx	       244	keyring.c	FUNCTION_11	SWITCH_1	IF_1
0x40005e3	      0xb901000000	                              mov ecx, 1	       244	keyring.c	FUNCTION_11	SWITCH_1	IF_1
0x40005e8	    0x41b807000000	                              mov r8d, 7	       247	keyring.c	FUNCTION_11	SWITCH_1
0x40005ee	            0x75a5	                           jne 0x4000595	       244	keyring.c	FUNCTION_11	SWITCH_1	IF_1
0x40005f0	          0x488b07	                    mov rax, qword [rdi]	       245	keyring.c	FUNCTION_11	SWITCH_1	IF_1
0x40005f3	        0x48c1e838	                           shr rax, 0x38	       245	keyring.c	FUNCTION_11	SWITCH_1	IF_1
0x40005f7	              0xc3	                                     ret	       245	keyring.c	FUNCTION_11	SWITCH_1	IF_1
0x40005f8	          0x488b07	                    mov rax, qword [rdi]	       242	keyring.c	FUNCTION_11	SWITCH_1
0x40005fb	          0x4863d2	                         movsxd rdx, edx	       242	keyring.c	FUNCTION_11	SWITCH_1
0x40005fe	        0x48c1e008	                              shl rax, 8	       242	keyring.c	FUNCTION_11	SWITCH_1
0x4000602	          0x4809d0	                             or rax, rdx	       242	keyring.c	FUNCTION_11	SWITCH_1
0x4000605	              0xc3	                                     ret	       242	keyring.c	FUNCTION_11	SWITCH_1
0x4000606	          0x488b17	                    mov rdx, qword [rdi]	       265	keyring.c	FUNCTION_11	SWITCH_1	IF_4
0x4000609	        0x48c1e008	                              shl rax, 8	       264	keyring.c	FUNCTION_11	SWITCH_1	IF_4
0x400060d	        0x48c1ea38	                           shr rdx, 0x38	       265	keyring.c	FUNCTION_11	SWITCH_1	IF_4
0x4000611	          0x4809d0	                             or rax, rdx	       265	keyring.c	FUNCTION_11	SWITCH_1	IF_4
0x4000614	              0xc3	                                     ret	       270	keyring.c	FUNCTION_11
keyring_compare_object	DO,0:WHILE,0:ELSE,0:IF,0:FOR,0:CALL,2:SWITCH,0:functions,0	15
0x4000630	        0x4883e7fc	             and rdi, 0xfffffffffffffffc	        49	keyring.c	FUNCTION_2
0x4000634	            0x31c0	                            xor eax, eax	        49	keyring.c	FUNCTION_2
0x4000636	          0x488b0e	                    mov rcx, qword [rsi]	       284	keyring.c	FUNCTION_13
0x4000639	    0x48398f880000	            cmp qword [rdi + 0x88], rcx 	       284	keyring.c	FUNCTION_13
0x4000640	            0x7402	                            je 0x4000644	       284	keyring.c	FUNCTION_13
0x4000642	            0xf3c3	                                     ret	       287	keyring.c	FUNCTION_13
0x4000644	    0x488b97980000	            mov rdx, qword [rdi + 0x98] 	       284	keyring.c	FUNCTION_13
0x400064b	        0x483b5610	            cmp rdx, qword [rsi + 0x10] 	       283	keyring.c	FUNCTION_13
0x400064f	            0x75f1	                           jne 0x4000642	       283	keyring.c	FUNCTION_13
0x4000651	        0x488b7608	                mov rsi, qword [rsi + 8]	       285	keyring.c	FUNCTION_13	CALL_2
0x4000655	    0x488bbf900000	            mov rdi, qword [rdi + 0x90] 	       285	keyring.c	FUNCTION_13	CALL_2
0x400065c	      0xe800000000	                          call 0x4000661	       285	keyring.c	FUNCTION_13	CALL_2
0x4000661	            0x85c0	                           test eax, eax	       284	keyring.c	FUNCTION_13
0x4000663	           0xf94c0	                                 sete al	       284	keyring.c	FUNCTION_13
0x4000666	              0xc3	                                     ret	       287	keyring.c	FUNCTION_13
hash_key_type_and_desc	DO,0:WHILE,0:ELSE,0:IF,5:FOR,1:CALL,5:SWITCH,0:functions,0	99
0x4000300	              0x53	                                push rbx	       172	keyring.c	FUNCTION_10
0x4000301	        0x4883ec10	                           sub rsp, 0x10	       172	keyring.c	FUNCTION_10
0x4000305	        0x4c8b4710	              mov r8, qword [rdi + 0x10]	       179	keyring.c	FUNCTION_10
0x4000309	          0x4c8b1f	                    mov r11, qword [rdi]	       181	keyring.c	FUNCTION_10
0x400030c	    0x65488b042528	                mov rax, qword gs:[0x28]	       172	keyring.c	FUNCTION_10
0x4000315	      0x4889442408	                mov qword [rsp + 8], rax	       172	keyring.c	FUNCTION_10
0x400031a	            0x31c0	                            xor eax, eax	       172	keyring.c	FUNCTION_10
0x400031c	        0x4c8b4f08	                 mov r9, qword [rdi + 8]	       175	keyring.c	FUNCTION_10
0x4000320	        0x418d500d	                     lea edx, [r8 + 0xd]	       163	keyring.c	FUNCTION_9
0x4000324	          0x4c89d8	                            mov rax, r11	       165	keyring.c	FUNCTION_9
0x4000327	        0x48c1e820	                           shr rax, 0x20	       165	keyring.c	FUNCTION_9
0x400032b	        0x480fafc2	                           imul rax, rdx	       165	keyring.c	FUNCTION_9
0x400032f	        0x48c1c020	                           rol rax, 0x20	       165	keyring.c	FUNCTION_9
0x4000333	          0x4889c1	                            mov rcx, rax	       165	keyring.c	FUNCTION_9
0x4000336	          0x4489d8	                           mov eax, r11d	       165	keyring.c	FUNCTION_9
0x4000339	        0x480fafd0	                           imul rdx, rax	       165	keyring.c	FUNCTION_9
0x400033d	        0x488d0411	                    lea rax, [rcx + rdx]	       165	keyring.c	FUNCTION_9
0x4000341	          0x4889c2	                            mov rdx, rax	       165	keyring.c	FUNCTION_9
0x4000344	            0x89c0	                            mov eax, eax	       165	keyring.c	FUNCTION_9
0x4000346	        0x48c1ea20	                           shr rdx, 0x20	       165	keyring.c	FUNCTION_9
0x400034a	        0x488d04c0	                  lea rax, [rax + rax*8]	       165	keyring.c	FUNCTION_9
0x400034e	        0x488d14d2	                  lea rdx, [rdx + rdx*8]	       165	keyring.c	FUNCTION_9
0x4000352	          0x4889d1	                            mov rcx, rdx	       165	keyring.c	FUNCTION_9
0x4000355	        0x48c1e10a	                            shl rcx, 0xa	       165	keyring.c	FUNCTION_9
0x4000359	          0x4829d1	                            sub rcx, rdx	       165	keyring.c	FUNCTION_9
0x400035c	        0x48c1c120	                           rol rcx, 0x20	       165	keyring.c	FUNCTION_9
0x4000360	          0x4889ca	                            mov rdx, rcx	       165	keyring.c	FUNCTION_9
0x4000363	          0x4889c1	                            mov rcx, rax	       165	keyring.c	FUNCTION_9
0x4000366	        0x48c1e10a	                            shl rcx, 0xa	       165	keyring.c	FUNCTION_9
0x400036a	          0x4829c1	                            sub rcx, rax	       165	keyring.c	FUNCTION_9
0x400036d	          0x4801d1	                            add rcx, rdx	       165	keyring.c	FUNCTION_9
0x4000370	          0x4585c0	                           test r8d, r8d	       187	keyring.c	FUNCTION_10	FOR_1	IF_1
0x4000373	     0xf8e92000000	                           jle 0x400040b	       187	keyring.c	FUNCTION_10	FOR_1	IF_1
0x4000379	          0x4489c6	                            mov esi, r8d	       187	keyring.c	FUNCTION_10	FOR_1	IF_1
0x400037c	    0x41ba04000000	                             mov r10d, 4	       187	keyring.c	FUNCTION_10	FOR_1	IF_1
0x4000382	          0x83fe04	                              cmp esi, 4	       187	keyring.c	FUNCTION_10	FOR_1	IF_1
0x4000385	          0x4489d2	                           mov edx, r10d	       187	keyring.c	FUNCTION_10	FOR_1	IF_1
0x4000388	    0xc74424040000	                  mov dword [rsp + 4], 0	       191	keyring.c	FUNCTION_10	FOR_1
0x4000390	           0xf4ed6	                         cmovle edx, esi	       191	keyring.c	FUNCTION_10	FOR_1
0x4000393	            0x85d2	                           test edx, edx	       192	keyring.c	FUNCTION_10	FOR_1	CALL_3
0x4000395	          0x4863da	                         movsxd rbx, edx	       192	keyring.c	FUNCTION_10	FOR_1	CALL_3
0x4000398	            0x7415	                            je 0x40003af	       192	keyring.c	FUNCTION_10	FOR_1	CALL_3
0x400039a	            0x31c0	                            xor eax, eax	       192	keyring.c	FUNCTION_10	FOR_1	CALL_3
0x400039c	            0x89c7	                            mov edi, eax	       192	keyring.c	FUNCTION_10	FOR_1	CALL_3
0x400039e	          0x83c001	                              add eax, 1	       192	keyring.c	FUNCTION_10	FOR_1	CALL_3
0x40003a1	      0x450fb60439	              movzx r8d, byte [r9 + rdi]	       192	keyring.c	FUNCTION_10	FOR_1	CALL_3
0x40003a6	            0x39d0	                            cmp eax, edx	       192	keyring.c	FUNCTION_10	FOR_1	CALL_3
0x40003a8	      0x4488443c04	           mov byte [rsp + rdi + 4], r8b	       192	keyring.c	FUNCTION_10	FOR_1	CALL_3
0x40003ad	            0x72ed	                            jb 0x400039c	       192	keyring.c	FUNCTION_10	FOR_1	CALL_3
0x40003af	            0x29d6	                            sub esi, edx	       194	keyring.c	FUNCTION_10	FOR_1
0x40003b1	        0x8b542404	                mov edx, dword [rsp + 4]	       163	keyring.c	FUNCTION_9
0x40003b5	          0x4889c8	                            mov rax, rcx	       165	keyring.c	FUNCTION_9
0x40003b8	        0x48c1e820	                           shr rax, 0x20	       165	keyring.c	FUNCTION_9
0x40003bc	          0x4901d9	                             add r9, rbx	       193	keyring.c	FUNCTION_10	FOR_1
0x40003bf	        0x480fafc2	                           imul rax, rdx	       165	keyring.c	FUNCTION_9
0x40003c3	        0x48c1c020	                           rol rax, 0x20	       165	keyring.c	FUNCTION_9
0x40003c7	          0x4889c7	                            mov rdi, rax	       165	keyring.c	FUNCTION_9
0x40003ca	            0x89c8	                            mov eax, ecx	       165	keyring.c	FUNCTION_9
0x40003cc	        0x480fafd0	                           imul rdx, rax	       165	keyring.c	FUNCTION_9
0x40003d0	        0x488d0417	                    lea rax, [rdi + rdx]	       165	keyring.c	FUNCTION_9
0x40003d4	          0x4889c2	                            mov rdx, rax	       165	keyring.c	FUNCTION_9
0x40003d7	            0x89c0	                            mov eax, eax	       165	keyring.c	FUNCTION_9
0x40003d9	        0x48c1ea20	                           shr rdx, 0x20	       165	keyring.c	FUNCTION_9
0x40003dd	        0x488d04c0	                  lea rax, [rax + rax*8]	       165	keyring.c	FUNCTION_9
0x40003e1	        0x488d14d2	                  lea rdx, [rdx + rdx*8]	       165	keyring.c	FUNCTION_9
0x40003e5	          0x4889d1	                            mov rcx, rdx	       165	keyring.c	FUNCTION_9
0x40003e8	        0x48c1e10a	                            shl rcx, 0xa	       165	keyring.c	FUNCTION_9
0x40003ec	          0x4829d1	                            sub rcx, rdx	       165	keyring.c	FUNCTION_9
0x40003ef	        0x48c1c120	                           rol rcx, 0x20	       165	keyring.c	FUNCTION_9
0x40003f3	          0x4889ca	                            mov rdx, rcx	       165	keyring.c	FUNCTION_9
0x40003f6	          0x4889c1	                            mov rcx, rax	       165	keyring.c	FUNCTION_9
0x40003f9	        0x48c1e10a	                            shl rcx, 0xa	       165	keyring.c	FUNCTION_9
0x40003fd	          0x4829c1	                            sub rcx, rax	       165	keyring.c	FUNCTION_9
0x4000400	          0x4801d1	                            add rcx, rdx	       165	keyring.c	FUNCTION_9
0x4000403	            0x85f6	                           test esi, esi	       187	keyring.c	FUNCTION_10	FOR_1	IF_1
0x4000405	     0xf8f77ffffff	                            jg 0x4000382	       187	keyring.c	FUNCTION_10	FOR_1	IF_1
0x400040b	    0x4981fb000000	                              cmp r11, 0	       208	keyring.c	FUNCTION_10	IF_4
0x4000412	          0x4889c8	                            mov rax, rcx	       208	keyring.c	FUNCTION_10	IF_4
0x4000415	            0x7429	                            je 0x4000440	       208	keyring.c	FUNCTION_10	IF_4
0x4000417	          0x83e10f	                            and ecx, 0xf	       208	keyring.c	FUNCTION_10	IF_4
0x400041a	            0x750e	                           jne 0x400042a	       208	keyring.c	FUNCTION_10	IF_4
0x400041c	          0x4889c2	                            mov rdx, rax	       209	keyring.c	FUNCTION_10	IF_4
0x400041f	        0x48c1e83c	                           shr rax, 0x3c	       209	keyring.c	FUNCTION_10	IF_4
0x4000423	        0x4883ca01	                               or rdx, 1	       209	keyring.c	FUNCTION_10	IF_4
0x4000427	          0x4809d0	                             or rax, rdx	       209	keyring.c	FUNCTION_10	IF_4
0x400042a	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       213	keyring.c	FUNCTION_10
0x400042f	    0x6548331c2528	                xor rbx, qword gs:[0x28]	       213	keyring.c	FUNCTION_10
0x4000438	            0x751b	                           jne 0x4000455	       213	keyring.c	FUNCTION_10
0x400043a	        0x4883c410	                           add rsp, 0x10	       213	keyring.c	FUNCTION_10
0x400043e	              0x5b	                                 pop rbx	       213	keyring.c	FUNCTION_10
0x400043f	              0xc3	                                     ret	       213	keyring.c	FUNCTION_10
0x4000440	          0x83e10f	                            and ecx, 0xf	       210	keyring.c	FUNCTION_10	IF_5
0x4000443	            0x74e5	                            je 0x400042a	       210	keyring.c	FUNCTION_10	IF_5
0x4000445	          0x4889c2	                            mov rdx, rax	       211	keyring.c	FUNCTION_10	IF_5
0x4000448	        0x48c1e204	                              shl rdx, 4	       211	keyring.c	FUNCTION_10	IF_5
0x400044c	          0x4801d0	                            add rax, rdx	       211	keyring.c	FUNCTION_10	IF_5
0x400044f	        0x4883e0f0	             and rax, 0xfffffffffffffff0	       211	keyring.c	FUNCTION_10	IF_5
0x4000453	            0xebd5	                           jmp 0x400042a	       211	keyring.c	FUNCTION_10	IF_5
0x4000455	      0xe800000000	                          call 0x400045a	       213	keyring.c	FUNCTION_10
keyring_read_iterator	DO,0:WHILE,0:ELSE,0:IF,2:FOR,0:CALL,2:SWITCH,0:functions,0	18
0x4000200	        0x488b5608	                mov rdx, qword [rsi + 8]	       440	keyring.c	FUNCTION_18	IF_1
0x4000204	          0x483b16	                    cmp rdx, qword [rsi]	       440	keyring.c	FUNCTION_18	IF_1
0x4000207	      0xb801000000	                              mov eax, 1	       441	keyring.c	FUNCTION_18	IF_1
0x400020c	            0x7328	                           jae 0x4000236	       440	keyring.c	FUNCTION_18	IF_1
0x400020e	        0x4883e7fc	             and rdi, 0xfffffffffffffffc	       443	keyring.c	FUNCTION_18	CALL_2
0x4000212	              0x53	                                push rbx	       432	keyring.c	FUNCTION_18
0x4000213	        0x488b4e10	            mov rcx, qword [rsi + 0x10] 	       443	keyring.c	FUNCTION_18	CALL_2
0x4000217	          0x8b4704	                mov eax, dword [rdi + 4]	       443	keyring.c	FUNCTION_18	CALL_2
0x400021a	      0xe800000000	                          call 0x400021f	       443	keyring.c	FUNCTION_18	CALL_2
0x400021f	            0x85c0	                           test eax, eax	       444	keyring.c	FUNCTION_18	IF_2
0x4000221	            0x7812	                            js 0x4000235	       444	keyring.c	FUNCTION_18	IF_2
0x4000223	        0x4883c104	                              add rcx, 4	       446	keyring.c	FUNCTION_18
0x4000227	        0x4883c204	                              add rdx, 4	       447	keyring.c	FUNCTION_18
0x400022b	            0x31c0	                            xor eax, eax	       448	keyring.c	FUNCTION_18
0x400022d	        0x48894e10	             mov qword [rsi + 0x10], rcx	       446	keyring.c	FUNCTION_18
0x4000231	        0x48895608	                mov qword [rsi + 8], rdx	       447	keyring.c	FUNCTION_18
0x4000235	              0x5b	                                 pop rbx	       449	keyring.c	FUNCTION_18
0x4000236	            0xf3c3	                                     ret	       449	keyring.c	FUNCTION_18
keyring_detect_cycle_iterator	DO,0:WHILE,0:ELSE,0:IF,1:FOR,0:CALL,2:SWITCH,0:functions,0	8
0x4000120	        0x4883e7fc	             and rdi, 0xfffffffffffffffc	      1166	keyring.c	FUNCTION_33	IF_1
0x4000124	            0x31c0	                            xor eax, eax	      1167	keyring.c	FUNCTION_33	IF_1
0x4000126	        0x48397e28	            cmp qword [rsi + 0x28], rdi 	      1166	keyring.c	FUNCTION_33	IF_1
0x400012a	            0x7402	                            je 0x400012e	      1166	keyring.c	FUNCTION_33	IF_1
0x400012c	            0xf3c3	                                     ret	      1171	keyring.c	FUNCTION_33
0x400012e	    0x48c74658ddff	mov qword [rsi + 0x58], 0xffffffffffffffdd	      1169	keyring.c	FUNCTION_33	CALL_2
0x4000136	      0xb801000000	                              mov eax, 1	      1170	keyring.c	FUNCTION_33
0x400013b	              0xc3	                                     ret	      1171	keyring.c	FUNCTION_33
keyring_revoke	DO,0:WHILE,0:ELSE,0:IF,2:FOR,0:CALL,4:SWITCH,0:functions,0	17
0x4000670	              0x53	                                push rbx	      1471	keyring.c	FUNCTION_43
0x4000671	    0x48c7c6000000	                              mov rsi, 0	      1474	keyring.c	FUNCTION_43	CALL_1
0x4000678	          0x4889fb	                            mov rbx, rdi	      1471	keyring.c	FUNCTION_43
0x400067b	    0x4881c7b00000	                           add rdi, 0xb0	      1474	keyring.c	FUNCTION_43	CALL_1
0x4000682	      0xe800000000	                          call 0x4000687	      1474	keyring.c	FUNCTION_43	CALL_1
0x4000687	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      1475	keyring.c	FUNCTION_43	IF_1	CALL_2
0x400068d	            0x7718	                            ja 0x40006a7	      1475	keyring.c	FUNCTION_43	IF_1	CALL_2
0x400068f	          0x4885c0	                           test rax, rax	      1476	keyring.c	FUNCTION_43	IF_1	IF_2
0x4000692	            0x7408	                            je 0x400069c	      1476	keyring.c	FUNCTION_43	IF_1	IF_2
0x4000694	          0x4889c7	                            mov rdi, rax	      1477	keyring.c	FUNCTION_43	IF_1	CALL_3
0x4000697	      0xe800000000	                          call 0x400069c	      1477	keyring.c	FUNCTION_43	IF_1	CALL_3
0x400069c	          0x4889df	                            mov rdi, rbx	      1478	keyring.c	FUNCTION_43	IF_1	CALL_4
0x400069f	            0x31f6	                            xor esi, esi	      1478	keyring.c	FUNCTION_43	IF_1	CALL_4
0x40006a1	              0x5b	                                 pop rbx	      1480	keyring.c	FUNCTION_43
0x40006a2	      0xe900000000	                           jmp 0x40006a7	      1478	keyring.c	FUNCTION_43	IF_1	CALL_4
0x40006a7	              0x5b	                                 pop rbx	      1480	keyring.c	FUNCTION_43
0x40006a8	              0xc3	                                     ret	      1480	keyring.c	FUNCTION_43
keyring_free_preparse	DO,0:WHILE,0:ELSE,0:IF,0:FOR,0:CALL,0:SWITCH,0:functions,0	1
0x4000050	            0xf3c3	                                     ret	       140	keyring.c	FUNCTION_7
key_link	DO,0:WHILE,0:ELSE,0:IF,3:FOR,0:CALL,8:SWITCH,0:functions,0	58
0x4001410	            0x4155	                                push r13	      1357	keyring.c	FUNCTION_40
0x4001412	            0x4154	                                push r12	      1357	keyring.c	FUNCTION_40
0x4001414	    0x4c8dae880000	                   lea r13, [rsi + 0x88]	      1366	keyring.c	FUNCTION_40	CALL_2
0x400141b	              0x55	                                push rbp	      1357	keyring.c	FUNCTION_40
0x400141c	              0x53	                                push rbx	      1357	keyring.c	FUNCTION_40
0x400141d	          0x4889f5	                            mov rbp, rsi	      1357	keyring.c	FUNCTION_40
0x4001420	          0x4c89ee	                            mov rsi, r13	      1366	keyring.c	FUNCTION_40	CALL_2
0x4001423	          0x4889fb	                            mov rbx, rdi	      1357	keyring.c	FUNCTION_40
0x4001426	        0x4883ec10	                           sub rsp, 0x10	      1357	keyring.c	FUNCTION_40
0x400142a	          0x4889e2	                            mov rdx, rsp	      1366	keyring.c	FUNCTION_40	CALL_2
0x400142d	    0x65488b042528	                mov rax, qword gs:[0x28]	      1357	keyring.c	FUNCTION_40
0x4001436	      0x4889442408	                mov qword [rsp + 8], rax	      1357	keyring.c	FUNCTION_40
0x400143b	            0x31c0	                            xor eax, eax	      1357	keyring.c	FUNCTION_40
0x400143d	      0xe800000000	                          call 0x4001442	      1366	keyring.c	FUNCTION_40	CALL_2
0x4001442	            0x85c0	                           test eax, eax	      1367	keyring.c	FUNCTION_40	IF_1
0x4001444	          0x4189c4	                           mov r12d, eax	      1366	keyring.c	FUNCTION_40	CALL_2
0x4001447	            0x7544	                           jne 0x400148d	      1367	keyring.c	FUNCTION_40	IF_1
0x4001449	    0x488b83c00000	            mov rax, qword [rbx + 0xc0] 	      1330	keyring.c	FUNCTION_39	IF_1
0x4001450	          0x4885c0	                           test rax, rax	      1330	keyring.c	FUNCTION_39	IF_1
0x4001453	            0x7456	                            je 0x40014ab	      1330	keyring.c	FUNCTION_39	IF_1
0x4001455	          0x4c8b00	                     mov r8, qword [rax]	      1330	keyring.c	FUNCTION_39	IF_1
0x4001458	          0x4d85c0	                             test r8, r8	      1330	keyring.c	FUNCTION_39	IF_1
0x400145b	            0x744e	                            je 0x40014ab	      1330	keyring.c	FUNCTION_39	IF_1
0x400145d	        0x488b4808	                mov rcx, qword [rax + 8]	      1332	keyring.c	FUNCTION_39	CALL_1
0x4001461	    0x488d95a00000	                   lea rdx, [rbp + 0xa0]	      1332	keyring.c	FUNCTION_39	CALL_1
0x4001468	    0x488bb5880000	            mov rsi, qword [rbp + 0x88] 	      1332	keyring.c	FUNCTION_39	CALL_1
0x400146f	          0x4889df	                            mov rdi, rbx	      1332	keyring.c	FUNCTION_39	CALL_1
0x4001472	      0xe800000000	                          call 0x4001477	      1332	keyring.c	FUNCTION_39	CALL_1
0x4001477	            0x85c0	                           test eax, eax	      1370	keyring.c	FUNCTION_40	IF_1	IF_2
0x4001479	            0x7430	                            je 0x40014ab	      1370	keyring.c	FUNCTION_40	IF_1	IF_2
0x400147b	          0x4189c4	                           mov r12d, eax	      1370	keyring.c	FUNCTION_40	IF_1	IF_2
0x400147e	        0x488b1424	                    mov rdx, qword [rsp]	      1374	keyring.c	FUNCTION_40	IF_1	CALL_7
0x4001482	          0x4c89ee	                            mov rsi, r13	      1374	keyring.c	FUNCTION_40	IF_1	CALL_7
0x4001485	          0x4889df	                            mov rdi, rbx	      1374	keyring.c	FUNCTION_40	IF_1	CALL_7
0x4001488	      0xe800000000	                          call 0x400148d	      1374	keyring.c	FUNCTION_40	IF_1	CALL_7
0x400148d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1379	keyring.c	FUNCTION_40
0x4001492	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1379	keyring.c	FUNCTION_40
0x400149b	          0x4489e0	                           mov eax, r12d	      1379	keyring.c	FUNCTION_40
0x400149e	            0x7536	                           jne 0x40014d6	      1379	keyring.c	FUNCTION_40
0x40014a0	        0x4883c410	                           add rsp, 0x10	      1379	keyring.c	FUNCTION_40
0x40014a4	              0x5b	                                 pop rbx	      1379	keyring.c	FUNCTION_40
0x40014a5	              0x5d	                                 pop rbp	      1379	keyring.c	FUNCTION_40
0x40014a6	            0x415c	                                 pop r12	      1379	keyring.c	FUNCTION_40
0x40014a8	            0x415d	                                 pop r13	      1379	keyring.c	FUNCTION_40
0x40014aa	              0xc3	                                     ret	      1379	keyring.c	FUNCTION_40
0x40014ab	    0x4881bd880000	               cmp qword [rbp + 0x88], 0	      1275	keyring.c	FUNCTION_36	IF_1
0x40014b6	            0x740d	                            je 0x40014c5	      1275	keyring.c	FUNCTION_36	IF_1
0x40014b8	          0x4889e6	                            mov rsi, rsp	      1373	keyring.c	FUNCTION_40	IF_1	CALL_6
0x40014bb	          0x4889ef	                            mov rdi, rbp	      1373	keyring.c	FUNCTION_40	IF_1	CALL_6
0x40014be	      0xe800000000	                          call 0x40014c3	      1373	keyring.c	FUNCTION_40	IF_1	CALL_6
0x40014c3	            0xebb9	                           jmp 0x400147e	      1373	keyring.c	FUNCTION_40	IF_1	CALL_6
0x40014c5	          0x4889ee	                            mov rsi, rbp	      1278	keyring.c	FUNCTION_36	CALL_1
0x40014c8	          0x4889df	                            mov rdi, rbx	      1278	keyring.c	FUNCTION_36	CALL_1
0x40014cb	      0xe8a0f6ffff	           call sym.keyring_detect_cycle	      1278	keyring.c	FUNCTION_36	CALL_1
0x40014d0	            0x85c0	                           test eax, eax	      1372	keyring.c	FUNCTION_40	IF_1	IF_3
0x40014d2	            0x75a7	                           jne 0x400147b	      1372	keyring.c	FUNCTION_40	IF_1	IF_3
0x40014d4	            0xebe2	                           jmp 0x40014b8	      1372	keyring.c	FUNCTION_40	IF_1	IF_3
0x40014d6	      0xe800000000	                          call 0x40014db	      1379	keyring.c	FUNCTION_40
