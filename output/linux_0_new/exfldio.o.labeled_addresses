acpi_ex_write_with_update_rule	IF,3:SWITCH,1:WHILE,0:functions,0:CALL,14:DO,0:ELSE,0:FOR,0	68
0x4000683	            0x4154	                                push r12	       547	exfldio.c	FUNCTION_5
0x4000685	              0x55	                                push rbp	       547	exfldio.c	FUNCTION_5
0x4000686	          0x4189cc	                           mov r12d, ecx	       547	exfldio.c	FUNCTION_5
0x4000689	              0x53	                                push rbx	       547	exfldio.c	FUNCTION_5
0x400068a	          0x4889fd	                            mov rbp, rdi	       547	exfldio.c	FUNCTION_5
0x400068d	        0x4883ec18	                           sub rsp, 0x18	       547	exfldio.c	FUNCTION_5
0x4000691	    0x65488b042528	                mov rax, qword gs:[0x28]	       547	exfldio.c	FUNCTION_5
0x400069a	      0x4889442410	             mov qword [rsp + 0x10], rax	       547	exfldio.c	FUNCTION_5
0x400069f	            0x31c0	                            xor eax, eax	       547	exfldio.c	FUNCTION_5
0x40006a1	        0x4883feff	             cmp rsi, 0xffffffffffffffff	       560	exfldio.c	FUNCTION_5	IF_1
0x40006a5	        0x48891424	                    mov qword [rsp], rdx	       556	exfldio.c	FUNCTION_5
0x40006a9	     0xf848a000000	                            je 0x4000739	       560	exfldio.c	FUNCTION_5	IF_1
0x40006af	          0x8a4f0d	                mov cl, byte [rdi + 0xd]	       560	exfldio.c	FUNCTION_5	IF_1
0x40006b2	          0x83e160	                           and ecx, 0x60	       560	exfldio.c	FUNCTION_5	IF_1
0x40006b5	          0x80f920	                            cmp cl, 0x20	       564	exfldio.c	FUNCTION_5	IF_1	SWITCH_1
0x40006b8	            0x7446	                            je 0x4000700	       564	exfldio.c	FUNCTION_5	IF_1	SWITCH_1
0x40006ba	          0x80f940	                            cmp cl, 0x40	       564	exfldio.c	FUNCTION_5	IF_1	SWITCH_1
0x40006bd	            0x744f	                            je 0x400070e	       564	exfldio.c	FUNCTION_5	IF_1	SWITCH_1
0x40006bf	            0x84c9	                             test cl, cl	       564	exfldio.c	FUNCTION_5	IF_1	SWITCH_1
0x40006c1	            0x7554	                           jne 0x4000717	       564	exfldio.c	FUNCTION_5	IF_1	SWITCH_1
0x40006c3	         0xfb6470f	            movzx eax, byte [rdi + 0xf] 	       571	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2	CALL_2
0x40006c7	          0x4889f3	                            mov rbx, rsi	       571	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2	CALL_2
0x40006ca	      0xb940000000	                           mov ecx, 0x40	       571	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2	CALL_2
0x40006cf	          0x48f7d3	                                 not rbx	       571	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2	CALL_2
0x40006d2	          0xc1e003	                              shl eax, 3	       571	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2	CALL_2
0x40006d5	            0x29c1	                            sub ecx, eax	       571	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2	CALL_2
0x40006d7	          0x4889d8	                            mov rax, rbx	       571	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2	CALL_2
0x40006da	          0x48d3e0	                             shl rax, cl	       571	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2	CALL_2
0x40006dd	          0x4885c0	                           test rax, rax	       571	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2	CALL_2
0x40006e0	            0x7457	                            je 0x4000739	       571	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2	CALL_2
0x40006e2	      0x488d542408	                      lea rdx, [rsp + 8]	       578	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2
0x40006e7	            0x31c9	                            xor ecx, ecx	       578	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2
0x40006e9	          0x4489e6	                           mov esi, r12d	       578	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2
0x40006ec	      0xe8fffdffff	         call sym.acpi_ex_field_datum_io	       578	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2
0x40006f1	            0x85c0	                           test eax, eax	       583	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2	IF_3	CALL_5
0x40006f3	            0x7557	                           jne 0x400074c	       583	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2	IF_3	CALL_5
0x40006f5	      0x48235c2408	                and rbx, qword [rsp + 8]	       587	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2
0x40006fa	        0x48091c24	                     or qword [rsp], rbx	       587	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2
0x40006fe	            0xeb39	                           jmp 0x4000739	       587	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	IF_2
0x4000700	          0x4889f0	                            mov rax, rsi	       595	exfldio.c	FUNCTION_5	IF_1	SWITCH_1
0x4000703	          0x48f7d0	                                 not rax	       595	exfldio.c	FUNCTION_5	IF_1	SWITCH_1
0x4000706	          0x4809d0	                             or rax, rdx	       595	exfldio.c	FUNCTION_5	IF_1	SWITCH_1
0x4000709	          0x4889c6	                            mov rsi, rax	       595	exfldio.c	FUNCTION_5	IF_1	SWITCH_1
0x400070c	            0xeb03	                           jmp 0x4000711	       595	exfldio.c	FUNCTION_5	IF_1	SWITCH_1
0x400070e	          0x4821d6	                            and rsi, rdx	       602	exfldio.c	FUNCTION_5	IF_1	SWITCH_1
0x4000711	        0x48893424	                    mov qword [rsp], rsi	       602	exfldio.c	FUNCTION_5	IF_1	SWITCH_1
0x4000715	            0xeb22	                           jmp 0x4000739	       603	exfldio.c	FUNCTION_5	IF_1	SWITCH_1
0x4000717	           0xfb6c9	                           movzx ecx, cl	       607	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	CALL_7
0x400071a	    0x48c7c2000000	                              mov rdx, 0	       607	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	CALL_7
0x4000721	      0xbe62020000	                          mov esi, 0x262	       607	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	CALL_7
0x4000726	    0x48c7c7000000	                              mov rdi, 0	       607	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	CALL_7
0x400072d	      0xe800000000	                          call 0x4000732	       607	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	CALL_7
0x4000732	      0xb804300000	                         mov eax, 0x3004	       611	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	CALL_8
0x4000737	            0xeb13	                           jmp 0x400074c	       611	exfldio.c	FUNCTION_5	IF_1	SWITCH_1	CALL_8
0x4000739	      0xb901000000	                              mov ecx, 1	       626	exfldio.c	FUNCTION_5
0x400073e	          0x4889e2	                            mov rdx, rsp	       626	exfldio.c	FUNCTION_5
0x4000741	          0x4489e6	                           mov esi, r12d	       626	exfldio.c	FUNCTION_5
0x4000744	          0x4889ef	                            mov rdi, rbp	       626	exfldio.c	FUNCTION_5
0x4000747	      0xe8a4fdffff	         call sym.acpi_ex_field_datum_io	       626	exfldio.c	FUNCTION_5
0x400074c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       631	exfldio.c	FUNCTION_5
0x4000751	    0x6548333c2528	                xor rdi, qword gs:[0x28]	       631	exfldio.c	FUNCTION_5
0x400075a	            0x7405	                            je 0x4000761	       631	exfldio.c	FUNCTION_5
0x400075c	      0xe800000000	                          call 0x4000761	       631	exfldio.c	FUNCTION_5
0x4000761	        0x4883c418	                           add rsp, 0x18	       631	exfldio.c	FUNCTION_5
0x4000765	              0x5b	                                 pop rbx	       631	exfldio.c	FUNCTION_5
0x4000766	              0x5d	                                 pop rbp	       631	exfldio.c	FUNCTION_5
0x4000767	            0x415c	                                 pop r12	       631	exfldio.c	FUNCTION_5
0x4000769	              0xc3	                                     ret	       631	exfldio.c	FUNCTION_5
acpi_ex_field_datum_io	IF,12:SWITCH,1:WHILE,0:functions,0:CALL,30:DO,0:ELSE,3:FOR,0	111
0x40004f0	            0x4154	                                push r12	       340	exfldio.c	FUNCTION_4
0x40004f2	              0x55	                                push rbp	       340	exfldio.c	FUNCTION_4
0x40004f3	          0x4189cc	                           mov r12d, ecx	       340	exfldio.c	FUNCTION_4
0x40004f6	              0x53	                                push rbx	       340	exfldio.c	FUNCTION_4
0x40004f7	          0x4889d5	                            mov rbp, rdx	       340	exfldio.c	FUNCTION_4
0x40004fa	          0x4889fb	                            mov rbx, rdi	       340	exfldio.c	FUNCTION_4
0x40004fd	        0x4883ec18	                           sub rsp, 0x18	       340	exfldio.c	FUNCTION_4
0x4000501	    0x65488b042528	                mov rax, qword gs:[0x28]	       340	exfldio.c	FUNCTION_4
0x400050a	      0x4889442410	             mov qword [rsp + 0x10], rax	       340	exfldio.c	FUNCTION_4
0x400050f	            0x31c0	                            xor eax, eax	       340	exfldio.c	FUNCTION_4
0x4000511	            0x85c9	                           test ecx, ecx	       346	exfldio.c	FUNCTION_4	IF_1
0x4000513	        0x89742404	                mov dword [rsp + 4], esi	       340	exfldio.c	FUNCTION_4
0x4000517	            0x751b	                           jne 0x4000534	       346	exfldio.c	FUNCTION_4	IF_1
0x4000519	          0x4885d2	                           test rdx, rdx	       347	exfldio.c	FUNCTION_4	IF_1	IF_2
0x400051c	            0x750e	                           jne 0x400052c	       347	exfldio.c	FUNCTION_4	IF_1	IF_2
0x400051e	      0x488d6c2408	                      lea rbp, [rsp + 8]	       351	exfldio.c	FUNCTION_4	IF_1	IF_2
0x4000523	    0x48c744240800	                  mov qword [rsp + 8], 0	       348	exfldio.c	FUNCTION_4	IF_1	IF_2
0x400052c	    0x48c745000000	                      mov qword [rbp], 0	       356	exfldio.c	FUNCTION_4	IF_1
0x4000534	         0xfb64b09	               movzx ecx, byte [rbx + 9]	       369	exfldio.c	FUNCTION_4	SWITCH_1
0x4000538	          0x80f911	                            cmp cl, 0x11	       369	exfldio.c	FUNCTION_4	SWITCH_1
0x400053b	     0xf84a3000000	                            je 0x40005e4	       369	exfldio.c	FUNCTION_4	SWITCH_1
0x4000541	            0x770a	                            ja 0x400054d	       369	exfldio.c	FUNCTION_4	SWITCH_1
0x4000543	          0x80f90e	                             cmp cl, 0xe	       369	exfldio.c	FUNCTION_4	SWITCH_1
0x4000546	            0x7418	                            je 0x4000560	       369	exfldio.c	FUNCTION_4	SWITCH_1
0x4000548	      0xe9fb000000	                           jmp 0x4000648	       369	exfldio.c	FUNCTION_4	SWITCH_1
0x400054d	          0x80f912	                            cmp cl, 0x12	       369	exfldio.c	FUNCTION_4	SWITCH_1
0x4000550	            0x745b	                            je 0x40005ad	       369	exfldio.c	FUNCTION_4	SWITCH_1
0x4000552	          0x80f913	                            cmp cl, 0x13	       369	exfldio.c	FUNCTION_4	SWITCH_1
0x4000555	     0xf849d000000	                            je 0x40005f8	       369	exfldio.c	FUNCTION_4	SWITCH_1
0x400055b	      0xe9e8000000	                           jmp 0x4000648	       369	exfldio.c	FUNCTION_4	SWITCH_1
0x4000560	        0xf6430c04	                test byte [rbx + 0xc], 4	       375	exfldio.c	FUNCTION_4	SWITCH_1	IF_3
0x4000564	            0x7420	                            je 0x4000586	       375	exfldio.c	FUNCTION_4	SWITCH_1	IF_3
0x4000566	          0x4585e4	                         test r12d, r12d	       382	exfldio.c	FUNCTION_4	SWITCH_1	IF_5
0x4000569	         0xfb64b0f	            movzx ecx, byte [rbx + 0xf] 	       382	exfldio.c	FUNCTION_4	SWITCH_1	IF_5
0x400056d	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       382	exfldio.c	FUNCTION_4	SWITCH_1	IF_5
0x4000571	          0x8b731c	            mov esi, dword [rbx + 0x1c] 	       382	exfldio.c	FUNCTION_4	SWITCH_1	IF_5
0x4000574	        0x8b442404	                mov eax, dword [rsp + 4]	       382	exfldio.c	FUNCTION_4	SWITCH_1	IF_5
0x4000578	            0x751d	                           jne 0x4000597	       382	exfldio.c	FUNCTION_4	SWITCH_1	IF_5
0x400057a	          0x4801c6	                            add rsi, rax	       387	exfldio.c	FUNCTION_4	SWITCH_1	IF_5	CALL_5
0x400057d	          0x4889ef	                            mov rdi, rbp	       387	exfldio.c	FUNCTION_4	SWITCH_1	IF_5	CALL_5
0x4000580	        0x48037210	             add rsi, qword [rdx + 0x10]	       387	exfldio.c	FUNCTION_4	SWITCH_1	IF_5	CALL_5
0x4000584	            0xeb1e	                           jmp 0x40005a4	       387	exfldio.c	FUNCTION_4	SWITCH_1	IF_5	CALL_5
0x4000586	          0x4889df	                            mov rdi, rbx	       376	exfldio.c	FUNCTION_4	SWITCH_1	IF_3	CALL_2
0x4000589	      0xe800000000	                          call 0x400058e	       376	exfldio.c	FUNCTION_4	SWITCH_1	IF_3	CALL_2
0x400058e	            0x85c0	                           test eax, eax	       377	exfldio.c	FUNCTION_4	SWITCH_1	IF_3	IF_4	CALL_3
0x4000590	            0x74d4	                            je 0x4000566	       377	exfldio.c	FUNCTION_4	SWITCH_1	IF_3	IF_4	CALL_3
0x4000592	      0xe9ce000000	                           jmp 0x4000665	       377	exfldio.c	FUNCTION_4	SWITCH_1	IF_3	IF_4	CALL_3
0x4000597	          0x4801f0	                            add rax, rsi	       398	exfldio.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_6
0x400059a	        0x48034210	             add rax, qword [rdx + 0x10]	       398	exfldio.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_6
0x400059e	          0x4889ee	                            mov rsi, rbp	       398	exfldio.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_6
0x40005a1	          0x4889c7	                            mov rdi, rax	       398	exfldio.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_6
0x40005a4	            0xf3a4	    rep movsb byte [rdi], byte ptr [rsi]	       398	exfldio.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_6
0x40005a6	            0x31c0	                            xor eax, eax	       405	exfldio.c	FUNCTION_4	SWITCH_1
0x40005a8	      0xe9b8000000	                           jmp 0x4000665	       405	exfldio.c	FUNCTION_4	SWITCH_1
0x40005ad	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       405	exfldio.c	FUNCTION_4	SWITCH_1
0x40005b1	          0x8b7320	            mov esi, dword [rbx + 0x20] 	       413	exfldio.c	FUNCTION_4	SWITCH_1	IF_6	CALL_7
0x40005b4	          0x8b7818	            mov edi, dword [rax + 0x18] 	       413	exfldio.c	FUNCTION_4	SWITCH_1	IF_6	CALL_7
0x40005b7	      0xe884faffff	call sym.acpi_ex_register_overflow.isra.0	       413	exfldio.c	FUNCTION_4	SWITCH_1	IF_6	CALL_7
0x40005bc	            0x84c0	                             test al, al	       413	exfldio.c	FUNCTION_4	SWITCH_1	IF_6	CALL_7
0x40005be	            0x740a	                            je 0x40005ca	       413	exfldio.c	FUNCTION_4	SWITCH_1	IF_6	CALL_7
0x40005c0	      0xb819300000	                         mov eax, 0x3019	       416	exfldio.c	FUNCTION_4	SWITCH_1	IF_6	CALL_8
0x40005c5	      0xe99b000000	                           jmp 0x4000665	       416	exfldio.c	FUNCTION_4	SWITCH_1	IF_6	CALL_8
0x40005ca	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	       423	exfldio.c	FUNCTION_4	SWITCH_1
0x40005ce	        0x488d7320	                   lea rsi, [rbx + 0x20]	       425	exfldio.c	FUNCTION_4	SWITCH_1
0x40005d2	      0xba04000000	                              mov edx, 4	       423	exfldio.c	FUNCTION_4	SWITCH_1
0x40005d7	      0xe800000000	                          call 0x40005dc	       423	exfldio.c	FUNCTION_4	SWITCH_1
0x40005dc	            0x85c0	                           test eax, eax	       428	exfldio.c	FUNCTION_4	SWITCH_1	IF_7	CALL_10
0x40005de	     0xf8581000000	                           jne 0x4000665	       428	exfldio.c	FUNCTION_4	SWITCH_1	IF_7	CALL_10
0x40005e4	        0x8b742404	                mov esi, dword [rsp + 4]	       444	exfldio.c	FUNCTION_4	SWITCH_1
0x40005e8	          0x4489e1	                           mov ecx, r12d	       444	exfldio.c	FUNCTION_4	SWITCH_1
0x40005eb	          0x4889ea	                            mov rdx, rbp	       444	exfldio.c	FUNCTION_4	SWITCH_1
0x40005ee	          0x4889df	                            mov rdi, rbx	       444	exfldio.c	FUNCTION_4	SWITCH_1
0x40005f1	      0xe800000000	                          call 0x40005f6	       444	exfldio.c	FUNCTION_4	SWITCH_1
0x40005f6	            0xeb6d	                           jmp 0x4000665	       447	exfldio.c	FUNCTION_4	SWITCH_1
0x40005f8	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       447	exfldio.c	FUNCTION_4	SWITCH_1
0x40005fc	          0x8b7320	            mov esi, dword [rbx + 0x20] 	       454	exfldio.c	FUNCTION_4	SWITCH_1	IF_8	CALL_13
0x40005ff	          0x8b7818	            mov edi, dword [rax + 0x18] 	       454	exfldio.c	FUNCTION_4	SWITCH_1	IF_8	CALL_13
0x4000602	      0xe839faffff	call sym.acpi_ex_register_overflow.isra.0	       454	exfldio.c	FUNCTION_4	SWITCH_1	IF_8	CALL_13
0x4000607	            0x84c0	                             test al, al	       454	exfldio.c	FUNCTION_4	SWITCH_1	IF_8	CALL_13
0x4000609	            0x75b5	                           jne 0x40005c0	       454	exfldio.c	FUNCTION_4	SWITCH_1	IF_8	CALL_13
0x400060b	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       468	exfldio.c	FUNCTION_4	SWITCH_1
0x400060f	      0x488d742404	                      lea rsi, [rsp + 4]	       468	exfldio.c	FUNCTION_4	SWITCH_1
0x4000614	      0xba04000000	                              mov edx, 4	       468	exfldio.c	FUNCTION_4	SWITCH_1
0x4000619	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       462	exfldio.c	FUNCTION_4	SWITCH_1
0x400061c	         0x1442404	                add dword [rsp + 4], eax	       462	exfldio.c	FUNCTION_4	SWITCH_1
0x4000620	      0xe800000000	                          call 0x4000625	       468	exfldio.c	FUNCTION_4	SWITCH_1
0x4000625	            0x85c0	                           test eax, eax	       472	exfldio.c	FUNCTION_4	SWITCH_1	IF_9	CALL_17
0x4000627	            0x753c	                           jne 0x4000665	       472	exfldio.c	FUNCTION_4	SWITCH_1	IF_9	CALL_17
0x4000629	          0x4585e4	                         test r12d, r12d	       476	exfldio.c	FUNCTION_4	SWITCH_1	IF_10
0x400062c	      0xba08000000	                              mov edx, 8	       483	exfldio.c	FUNCTION_4	SWITCH_1	IF_10
0x4000631	          0x4889ee	                            mov rsi, rbp	       483	exfldio.c	FUNCTION_4	SWITCH_1	IF_10
0x4000634	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	       483	exfldio.c	FUNCTION_4	SWITCH_1	IF_10
0x4000638	            0x7507	                           jne 0x4000641	       476	exfldio.c	FUNCTION_4	SWITCH_1	IF_10
0x400063a	      0xe800000000	                          call 0x400063f	       483	exfldio.c	FUNCTION_4	SWITCH_1	IF_10
0x400063f	            0xeb24	                           jmp 0x4000665	       483	exfldio.c	FUNCTION_4	SWITCH_1	IF_10
0x4000641	      0xe800000000	                          call 0x4000646	       494	exfldio.c	FUNCTION_4	SWITCH_1	ELSE_2
0x4000646	            0xeb1d	                           jmp 0x4000665	       494	exfldio.c	FUNCTION_4	SWITCH_1	ELSE_2
0x4000648	    0x48c7c2000000	                              mov rdx, 0	       503	exfldio.c	FUNCTION_4	SWITCH_1	CALL_24
0x400064f	      0xbef8010000	                          mov esi, 0x1f8	       503	exfldio.c	FUNCTION_4	SWITCH_1	CALL_24
0x4000654	    0x48c7c7000000	                              mov rdi, 0	       503	exfldio.c	FUNCTION_4	SWITCH_1	CALL_24
0x400065b	      0xe800000000	                          call 0x4000660	       503	exfldio.c	FUNCTION_4	SWITCH_1	CALL_24
0x4000660	      0xb80f300000	                         mov eax, 0x300f	       505	exfldio.c	FUNCTION_4	SWITCH_1
0x4000665	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       526	exfldio.c	FUNCTION_4
0x400066a	    0x654833142528	                xor rdx, qword gs:[0x28]	       526	exfldio.c	FUNCTION_4
0x4000673	            0x7405	                            je 0x400067a	       526	exfldio.c	FUNCTION_4
0x4000675	      0xe800000000	                          call 0x400067a	       526	exfldio.c	FUNCTION_4
0x400067a	        0x4883c418	                           add rsp, 0x18	       526	exfldio.c	FUNCTION_4
0x400067e	              0x5b	                                 pop rbx	       526	exfldio.c	FUNCTION_4
0x400067f	              0x5d	                                 pop rbp	       526	exfldio.c	FUNCTION_4
0x4000680	            0x415c	                                 pop r12	       526	exfldio.c	FUNCTION_4
0x4000682	              0xc3	                                     ret	       526	exfldio.c	FUNCTION_4
