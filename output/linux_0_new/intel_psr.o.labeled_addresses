intel_psr_work	FOR,0:IF,7:CALL,15:DO,0:functions,0:WHILE,0:ELSE,2:SWITCH,0	72
0x4000a10	              0x55	                                push rbp	       793	intel_psr.c	FUNCTION_28
0x4000a11	              0x53	                                push rbx	       793	intel_psr.c	FUNCTION_28
0x4000a12	    0x488daf6092ff	                 lea rbp, [rdi - 0x6da0]	       795	intel_psr.c	FUNCTION_28	CALL_2
0x4000a19	    0xf687d798ffff	         test byte [rdi - 0x6729], 0x40 	       805	intel_psr.c	FUNCTION_28	IF_1	CALL_5
0x4000a20	          0x4889fb	                            mov rbx, rdi	       793	intel_psr.c	FUNCTION_28
0x4000a23	     0xf8497000000	                            je 0x4000ac0	       805	intel_psr.c	FUNCTION_28	IF_1	CALL_5
0x4000a29	        0x807f5c00	                cmp byte [rdi + 0x5c], 0	       806	intel_psr.c	FUNCTION_28	IF_1	IF_2
0x4000a2d	            0x755c	                           jne 0x4000a8b	       806	intel_psr.c	FUNCTION_28	IF_1	IF_2
0x4000a2f	    0x8b87b0d8ffff	           mov eax, dword [rdi - 0x2750]	       806	intel_psr.c	FUNCTION_28	IF_1	IF_2
0x4000a35	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000a37	            0x31c9	                            xor ecx, ecx	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000a39	      0xba000000e0	                     mov edx, 0xe0000000	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000a3e	    0x41b932000000	                           mov r9d, 0x32	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000a44	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000a4a	          0x4889ef	                            mov rdi, rbp	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000a4d	          0x8d7040	                   lea esi, [rax + 0x40]	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000a50	      0xe800000000	                          call 0x4000a55	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000a55	            0x85c0	                           test eax, eax	       816	intel_psr.c	FUNCTION_28	IF_1	ELSE_1	IF_4	CALL_8
0x4000a57	              0x5a	                                 pop rdx	       816	intel_psr.c	FUNCTION_28	IF_1	ELSE_1	IF_4	CALL_8
0x4000a58	     0xf85a2000000	                           jne 0x4000b00	       816	intel_psr.c	FUNCTION_28	IF_1	ELSE_1	IF_4	CALL_8
0x4000a5e	    0x4881c5686d00	                         add rbp, 0x6d68	       835	intel_psr.c	FUNCTION_28	CALL_13
0x4000a65	          0x4889ef	                            mov rdi, rbp	       835	intel_psr.c	FUNCTION_28	CALL_13
0x4000a68	      0xe800000000	                          call 0x4000a6d	       835	intel_psr.c	FUNCTION_28	CALL_13
0x4000a6d	        0x488b7bf0	             mov rdi, qword [rbx - 0x10]	       836	intel_psr.c	FUNCTION_28
0x4000a71	          0x4885ff	                           test rdi, rdi	       838	intel_psr.c	FUNCTION_28	IF_6
0x4000a74	            0x740b	                            je 0x4000a81	       838	intel_psr.c	FUNCTION_28	IF_6
0x4000a76	          0x8b4358	            mov eax, dword [rbx + 0x58] 	       846	intel_psr.c	FUNCTION_28	IF_7
0x4000a79	            0x85c0	                           test eax, eax	       846	intel_psr.c	FUNCTION_28	IF_7
0x4000a7b	     0xf848d000000	                            je 0x4000b0e	       846	intel_psr.c	FUNCTION_28	IF_7
0x4000a81	          0x4889ef	                            mov rdi, rbp	       851	intel_psr.c	FUNCTION_28	CALL_15
0x4000a84	              0x5b	                                 pop rbx	       852	intel_psr.c	FUNCTION_28
0x4000a85	              0x5d	                                 pop rbp	       852	intel_psr.c	FUNCTION_28
0x4000a86	      0xe900000000	                           jmp 0x4000a8b	       851	intel_psr.c	FUNCTION_28	CALL_15
0x4000a8b	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000a8d	            0x31c9	                            xor ecx, ecx	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000a8f	    0x41b932000000	                           mov r9d, 0x32	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000a95	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000a9b	      0xba000000f0	                     mov edx, 0xf0000000	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000aa0	      0xbe40f90600	                        mov esi, 0x6f940	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000aa5	          0x4889ef	                            mov rdi, rbp	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000aa8	      0xe800000000	                          call 0x4000aad	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000aad	            0x85c0	                           test eax, eax	       807	intel_psr.c	FUNCTION_28	IF_1	IF_2	IF_3	CALL_6
0x4000aaf	              0x59	                                 pop rcx	       807	intel_psr.c	FUNCTION_28	IF_1	IF_2	IF_3	CALL_6
0x4000ab0	            0x74ac	                            je 0x4000a5e	       807	intel_psr.c	FUNCTION_28	IF_1	IF_2	IF_3	CALL_6
0x4000ab2	              0x5b	                                 pop rbx	       852	intel_psr.c	FUNCTION_28
0x4000ab3	              0x5d	                                 pop rbp	       852	intel_psr.c	FUNCTION_28
0x4000ab4	    0x48c7c7000000	                              mov rdi, 0	       812	intel_psr.c	FUNCTION_28	IF_1	IF_2	IF_3	CALL_7
0x4000abb	      0xe900000000	                           jmp 0x4000ac0	       812	intel_psr.c	FUNCTION_28	IF_1	IF_2	IF_3	CALL_7
0x4000ac0	        0x488b47f0	             mov rax, qword [rdi - 0x10]	       797	intel_psr.c	FUNCTION_28	CALL_3
0x4000ac4	            0x31c9	                            xor ecx, ecx	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000ac6	      0xba80000000	                           mov edx, 0x80	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000acb	    0x41b901000000	                              mov r9d, 1	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000ad1	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000ad7	          0x4889ef	                            mov rdi, rbp	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000ada	    0x488b8048ffff	             mov rax, qword [rax - 0xb8]	       798	intel_psr.c	FUNCTION_28	CALL_4
0x4000ae1	    0x8bb0b0040000	           mov esi, dword [rax + 0x4b0] 	       798	intel_psr.c	FUNCTION_28	CALL_4
0x4000ae7	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000ae9	          0xc1e60c	                            shl esi, 0xc	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000aec	    0x81c694001e00	                       add esi, 0x1e0094	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000af2	      0xe800000000	                          call 0x4000af7	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000af7	            0x85c0	                           test eax, eax	       816	intel_psr.c	FUNCTION_28	IF_1	ELSE_1	IF_4	CALL_8
0x4000af9	              0x5a	                                 pop rdx	       816	intel_psr.c	FUNCTION_28	IF_1	ELSE_1	IF_4	CALL_8
0x4000afa	     0xf845effffff	                            je 0x4000a5e	       816	intel_psr.c	FUNCTION_28	IF_1	ELSE_1	IF_4	CALL_8
0x4000b00	              0x5b	                                 pop rbx	       852	intel_psr.c	FUNCTION_28
0x4000b01	              0x5d	                                 pop rbp	       852	intel_psr.c	FUNCTION_28
0x4000b02	    0x48c7c7000000	                              mov rdi, 0	       821	intel_psr.c	FUNCTION_28	IF_1	ELSE_1	IF_4	CALL_9
0x4000b09	      0xe900000000	                           jmp 0x4000b0e	       821	intel_psr.c	FUNCTION_28	IF_1	ELSE_1	IF_4	CALL_9
0x4000b0e	      0xe82df6ffff	             call sym.intel_psr_activate	       849	intel_psr.c	FUNCTION_28	CALL_14
0x4000b13	          0x4889ef	                            mov rdi, rbp	       851	intel_psr.c	FUNCTION_28	CALL_15
0x4000b16	              0x5b	                                 pop rbx	       852	intel_psr.c	FUNCTION_28
0x4000b17	              0x5d	                                 pop rbp	       852	intel_psr.c	FUNCTION_28
0x4000b18	      0xe900000000	                           jmp 0x4000b1d	       851	intel_psr.c	FUNCTION_28	CALL_15
vlv_psr_enable_sink	FOR,0:IF,0:CALL,1:DO,0:functions,0:WHILE,0:ELSE,0:SWITCH,0	16
0x40001f0	        0x4883ec10	                           sub rsp, 0x10	       226	intel_psr.c	FUNCTION_11
0x40001f4	    0x4881c7b00000	                           add rdi, 0xb0	       227	intel_psr.c	FUNCTION_11	CALL_1
0x40001fb	      0xb901000000	                              mov ecx, 1	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x4000200	      0x488d542407	                      lea rdx, [rsp + 7]	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x4000205	      0xbe70010000	                          mov esi, 0x170	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x400020a	      0xc644240703	                   mov byte [rsp + 7], 3	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x400020f	    0x65488b042528	                mov rax, qword gs:[0x28]	       226	intel_psr.c	FUNCTION_11
0x4000218	      0x4889442408	                mov qword [rsp + 8], rax	       226	intel_psr.c	FUNCTION_11
0x400021d	            0x31c0	                            xor eax, eax	       226	intel_psr.c	FUNCTION_11
0x400021f	      0xe800000000	                          call 0x4000224	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x4000224	      0x488b442408	                mov rax, qword [rsp + 8]	       229	intel_psr.c	FUNCTION_11
0x4000229	    0x654833042528	                xor rax, qword gs:[0x28]	       229	intel_psr.c	FUNCTION_11
0x4000232	            0x7505	                           jne 0x4000239	       229	intel_psr.c	FUNCTION_11
0x4000234	        0x4883c410	                           add rsp, 0x10	       229	intel_psr.c	FUNCTION_11
0x4000238	              0xc3	                                     ret	       229	intel_psr.c	FUNCTION_11
0x4000239	      0xe800000000	                          call 0x400023e	       229	intel_psr.c	FUNCTION_11
vlv_psr_enable_source	FOR,0:IF,0:CALL,5:DO,0:functions,0:WHILE,0:ELSE,0:SWITCH,0	10
0x40000a0	          0x488b16	                    mov rdx, qword [rsi]	       308	intel_psr.c	FUNCTION_15	CALL_5
0x40000a3	    0x488bbff8feff	            mov rdi, qword [rdi - 0x108]	       304	intel_psr.c	FUNCTION_15	CALL_2
0x40000aa	      0xb901000000	                              mov ecx, 1	       308	intel_psr.c	FUNCTION_15	CALL_5
0x40000af	    0x8bb2b0040000	           mov esi, dword [rdx + 0x4b0] 	       308	intel_psr.c	FUNCTION_15	CALL_5
0x40000b5	    0x488b87180800	           mov rax, qword [rdi + 0x818] 	       308	intel_psr.c	FUNCTION_15	CALL_5
0x40000bc	      0xba05020000	                          mov edx, 0x205	       308	intel_psr.c	FUNCTION_15	CALL_5
0x40000c1	          0xc1e60c	                            shl esi, 0xc	       308	intel_psr.c	FUNCTION_15	CALL_5
0x40000c4	    0x81c690001e00	                       add esi, 0x1e0090	       308	intel_psr.c	FUNCTION_15	CALL_5
0x40000ca	      0xe800000000	                          call 0x40000cf	       308	intel_psr.c	FUNCTION_15	CALL_5
0x40000cf	            0xf3c3	                                     ret	       308	intel_psr.c	FUNCTION_15	CALL_5
hsw_psr_setup_vsc	FOR,0:IF,3:CALL,5:DO,0:functions,0:WHILE,0:ELSE,3:SWITCH,0	43
0x4000410	        0x4883ec30	                           sub rsp, 0x30	       191	intel_psr.c	FUNCTION_10
0x4000414	    0x488b97f8feff	            mov rdx, qword [rdi - 0x108]	       193	intel_psr.c	FUNCTION_10	CALL_2
0x400041b	          0x4889f8	                            mov rax, rdi	       191	intel_psr.c	FUNCTION_10
0x400041e	    0x65488b0c2528	                mov rcx, qword gs:[0x28]	       191	intel_psr.c	FUNCTION_10
0x4000427	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       191	intel_psr.c	FUNCTION_10
0x400042c	            0x31c9	                            xor ecx, ecx	       191	intel_psr.c	FUNCTION_10
0x400042e	    0x48c744240400	                  mov qword [rsp + 4], 0	       198	intel_psr.c	FUNCTION_10	IF_1	CALL_3
0x4000437	    0x48c744240c00	                mov qword [rsp + 0xc], 0	       198	intel_psr.c	FUNCTION_10	IF_1	CALL_3
0x4000440	    0x80bafc6d0000	              cmp byte [rdx + 0x6dfc], 0	       196	intel_psr.c	FUNCTION_10	IF_1
0x4000447	    0x48c744241400	               mov qword [rsp + 0x14], 0	       198	intel_psr.c	FUNCTION_10	IF_1	CALL_3
0x4000450	    0x48c744241c00	               mov qword [rsp + 0x1c], 0	       198	intel_psr.c	FUNCTION_10	IF_1	CALL_3
0x4000459	    0xc74424240000	               mov dword [rsp + 0x24], 0	       198	intel_psr.c	FUNCTION_10	IF_1	CALL_3
0x4000461	      0xc644240507	                   mov byte [rsp + 5], 7	       200	intel_psr.c	FUNCTION_10	IF_1
0x4000466	            0x741e	                            je 0x4000486	       196	intel_psr.c	FUNCTION_10	IF_1
0x4000468	    0x80ba006e0000	              cmp byte [rdx + 0x6e00], 0	       201	intel_psr.c	FUNCTION_10	IF_1	IF_2
0x400046f	            0x7557	                           jne 0x40004c8	       201	intel_psr.c	FUNCTION_10	IF_1	IF_2
0x4000471	    0x80baff6d0000	              cmp byte [rdx + 0x6dff], 0	       205	intel_psr.c	FUNCTION_10	IF_1	ELSE_1	IF_3
0x4000478	            0x7457	                            je 0x40004d1	       205	intel_psr.c	FUNCTION_10	IF_1	ELSE_1	IF_3
0x400047a	      0xc644240604	                   mov byte [rsp + 6], 4	       206	intel_psr.c	FUNCTION_10	IF_1	ELSE_1	IF_3
0x400047f	      0xc64424070e	                 mov byte [rsp + 7], 0xe	       207	intel_psr.c	FUNCTION_10	IF_1	ELSE_1	IF_3
0x4000484	            0xeb0a	                           jmp 0x4000490	       207	intel_psr.c	FUNCTION_10	IF_1	ELSE_1	IF_3
0x4000486	      0xc644240602	                   mov byte [rsp + 6], 2	       217	intel_psr.c	FUNCTION_10	ELSE_3
0x400048b	      0xc644240708	                   mov byte [rsp + 7], 8	       218	intel_psr.c	FUNCTION_10	ELSE_3
0x4000490	    0x488db8f8feff	                  lea rdi, [rax - 0x108]	       221	intel_psr.c	FUNCTION_10	CALL_5
0x4000497	    0x41b824000000	                           mov r8d, 0x24	       221	intel_psr.c	FUNCTION_10	CALL_5
0x400049d	    0x488b80b00a00	           mov rax, qword [rax + 0xab0] 	       221	intel_psr.c	FUNCTION_10	CALL_5
0x40004a4	      0x488d4c2404	                      lea rcx, [rsp + 4]	       221	intel_psr.c	FUNCTION_10	CALL_5
0x40004a9	      0xba07000000	                              mov edx, 7	       221	intel_psr.c	FUNCTION_10	CALL_5
0x40004ae	      0xe800000000	                          call 0x40004b3	       221	intel_psr.c	FUNCTION_10	CALL_5
0x40004b3	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       223	intel_psr.c	FUNCTION_10
0x40004b8	    0x654833042528	                xor rax, qword gs:[0x28]	       223	intel_psr.c	FUNCTION_10
0x40004c1	            0x7526	                           jne 0x40004e9	       223	intel_psr.c	FUNCTION_10
0x40004c3	        0x4883c430	                           add rsp, 0x30	       223	intel_psr.c	FUNCTION_10
0x40004c7	              0xc3	                                     ret	       223	intel_psr.c	FUNCTION_10
0x40004c8	    0x80baff6d0000	              cmp byte [rdx + 0x6dff], 0	       201	intel_psr.c	FUNCTION_10	IF_1	IF_2
0x40004cf	            0x750c	                           jne 0x40004dd	       201	intel_psr.c	FUNCTION_10	IF_1	IF_2
0x40004d1	      0xc644240603	                   mov byte [rsp + 6], 3	       209	intel_psr.c	FUNCTION_10	IF_1	ELSE_2
0x40004d6	      0xc64424070c	                 mov byte [rsp + 7], 0xc	       210	intel_psr.c	FUNCTION_10	IF_1	ELSE_2
0x40004db	            0xebb3	                           jmp 0x4000490	       210	intel_psr.c	FUNCTION_10	IF_1	ELSE_2
0x40004dd	      0xc644240605	                   mov byte [rsp + 6], 5	       203	intel_psr.c	FUNCTION_10	IF_1	IF_2
0x40004e2	      0xc644240713	                mov byte [rsp + 7], 0x13	       204	intel_psr.c	FUNCTION_10	IF_1	IF_2
0x40004e7	            0xeba7	                           jmp 0x4000490	       204	intel_psr.c	FUNCTION_10	IF_1	IF_2
0x40004e9	      0xe800000000	                          call 0x40004ee	       223	intel_psr.c	FUNCTION_10
intel_psr_activate	FOR,0:IF,1:CALL,9:DO,0:functions,0:WHILE,0:ELSE,1:SWITCH,0	43
0x4000140	              0x55	                                push rbp	       566	intel_psr.c	FUNCTION_22
0x4000141	              0x53	                                push rbx	       566	intel_psr.c	FUNCTION_22
0x4000142	          0x4889fd	                            mov rbp, rdi	       566	intel_psr.c	FUNCTION_22
0x4000145	    0x488b9ff8feff	            mov rbx, qword [rdi - 0x108]	       568	intel_psr.c	FUNCTION_22
0x400014c	    0x80bbfc6d0000	              cmp byte [rbx + 0x6dfc], 0	       571	intel_psr.c	FUNCTION_22	IF_1
0x4000153	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       572	intel_psr.c	FUNCTION_22	CALL_4
0x400015a	            0x7438	                            je 0x4000194	       571	intel_psr.c	FUNCTION_22	IF_1
0x400015c	      0xba01000000	                              mov edx, 1	       572	intel_psr.c	FUNCTION_22	CALL_4
0x4000161	      0xbe00f90600	                        mov esi, 0x6f900	       572	intel_psr.c	FUNCTION_22	CALL_4
0x4000166	          0x4889df	                            mov rdi, rbx	       572	intel_psr.c	FUNCTION_22	CALL_4
0x4000169	      0xe800000000	                          call 0x400016e	       572	intel_psr.c	FUNCTION_22	CALL_4
0x400016e	            0x85c0	                           test eax, eax	       572	intel_psr.c	FUNCTION_22	CALL_4
0x4000170	            0x7850	                            js 0x40001c2	       572	intel_psr.c	FUNCTION_22	CALL_4
0x4000172	    0x80bb986d0000	              cmp byte [rbx + 0x6d98], 0	       575	intel_psr.c	FUNCTION_22	CALL_7
0x4000179	            0x755e	                           jne 0x40001d9	       575	intel_psr.c	FUNCTION_22	CALL_7
0x400017b	    0x488b83206e00	          mov rax, qword [rbx + 0x6e20] 	       578	intel_psr.c	FUNCTION_22	CALL_9
0x4000182	          0x4889ef	                            mov rdi, rbp	       578	intel_psr.c	FUNCTION_22	CALL_9
0x4000185	      0xe800000000	                          call 0x400018a	       578	intel_psr.c	FUNCTION_22	CALL_9
0x400018a	    0xc683986d0000	              mov byte [rbx + 0x6d98], 1	       579	intel_psr.c	FUNCTION_22
0x4000191	              0x5b	                                 pop rbx	       580	intel_psr.c	FUNCTION_22
0x4000192	              0x5d	                                 pop rbp	       580	intel_psr.c	FUNCTION_22
0x4000193	              0xc3	                                     ret	       580	intel_psr.c	FUNCTION_22
0x4000194	    0x8bb350460000	          mov esi, dword [rbx + 0x4650] 	       574	intel_psr.c	FUNCTION_22	CALL_6
0x400019a	      0xba01000000	                              mov edx, 1	       574	intel_psr.c	FUNCTION_22	CALL_6
0x400019f	          0x4889df	                            mov rdi, rbx	       574	intel_psr.c	FUNCTION_22	CALL_6
0x40001a2	      0xe800000000	                          call 0x40001a7	       574	intel_psr.c	FUNCTION_22	CALL_6
0x40001a7	            0x85c0	                           test eax, eax	       574	intel_psr.c	FUNCTION_22	CALL_6
0x40001a9	            0x79c7	                           jns 0x4000172	       574	intel_psr.c	FUNCTION_22	CALL_6
0x40001ab	    0x48c7c6000000	                              mov rsi, 0	       574	intel_psr.c	FUNCTION_22	CALL_6
0x40001b2	    0x48c7c7000000	                              mov rdi, 0	       574	intel_psr.c	FUNCTION_22	CALL_6
0x40001b9	      0xe800000000	                          call 0x40001be	       574	intel_psr.c	FUNCTION_22	CALL_6
0x40001be	             0xf0b	                                     ud2	       574	intel_psr.c	FUNCTION_22	CALL_6
0x40001c0	            0xebb0	                           jmp 0x4000172	       574	intel_psr.c	FUNCTION_22	CALL_6
0x40001c2	    0x48c7c6000000	                              mov rsi, 0	       572	intel_psr.c	FUNCTION_22	CALL_4
0x40001c9	    0x48c7c7000000	                              mov rdi, 0	       572	intel_psr.c	FUNCTION_22	CALL_4
0x40001d0	      0xe800000000	                          call 0x40001d5	       572	intel_psr.c	FUNCTION_22	CALL_4
0x40001d5	             0xf0b	                                     ud2	       572	intel_psr.c	FUNCTION_22	CALL_4
0x40001d7	            0xeb99	                           jmp 0x4000172	       572	intel_psr.c	FUNCTION_22	CALL_4
0x40001d9	    0x48c7c6000000	                              mov rsi, 0	       575	intel_psr.c	FUNCTION_22	CALL_7
0x40001e0	    0x48c7c7000000	                              mov rdi, 0	       575	intel_psr.c	FUNCTION_22	CALL_7
0x40001e7	      0xe800000000	                          call 0x40001ec	       575	intel_psr.c	FUNCTION_22	CALL_7
0x40001ec	             0xf0b	                                     ud2	       575	intel_psr.c	FUNCTION_22	CALL_7
0x40001ee	            0xeb8b	                           jmp 0x400017b	       575	intel_psr.c	FUNCTION_22	CALL_7
vlv_psr_disable	FOR,0:IF,2:CALL,12:DO,0:functions,0:WHILE,0:ELSE,1:SWITCH,0	59
0x4000910	              0x55	                                push rbp	       678	intel_psr.c	FUNCTION_25
0x4000911	              0x53	                                push rbx	       678	intel_psr.c	FUNCTION_25
0x4000912	    0x488b9ff8feff	            mov rbx, qword [rdi - 0x108]	       680	intel_psr.c	FUNCTION_25
0x4000919	          0x488b2e	                    mov rbp, qword [rsi]	       682	intel_psr.c	FUNCTION_25	CALL_3
0x400091c	    0x80bb986d0000	              cmp byte [rbx + 0x6d98], 0	       685	intel_psr.c	FUNCTION_25	IF_1
0x4000923	     0xf848c000000	                            je 0x40009b5	       685	intel_psr.c	FUNCTION_25	IF_1
0x4000929	    0x8bb5b0040000	           mov esi, dword [rbp + 0x4b0] 	       685	intel_psr.c	FUNCTION_25	IF_1
0x400092f	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000931	            0x31c9	                            xor ecx, ecx	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000933	      0xba80000000	                           mov edx, 0x80	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000938	    0x41b901000000	                              mov r9d, 1	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x400093e	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000944	          0x4889df	                            mov rdi, rbx	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000947	          0xc1e60c	                            shl esi, 0xc	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x400094a	    0x81c694001e00	                       add esi, 0x1e0094	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000950	      0xe800000000	                          call 0x4000955	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000955	            0x85c0	                           test eax, eax	       687	intel_psr.c	FUNCTION_25	IF_1	IF_2	CALL_4
0x4000957	              0x5a	                                 pop rdx	       687	intel_psr.c	FUNCTION_25	IF_1	IF_2	CALL_4
0x4000958	     0xf859c000000	                           jne 0x40009fa	       687	intel_psr.c	FUNCTION_25	IF_1	IF_2	CALL_4
0x400095e	    0x8bb5b0040000	           mov esi, dword [rbp + 0x4b0] 	       694	intel_psr.c	FUNCTION_25	IF_1	CALL_8
0x4000964	      0xba01000000	                              mov edx, 1	       694	intel_psr.c	FUNCTION_25	IF_1	CALL_8
0x4000969	          0x4889df	                            mov rdi, rbx	       694	intel_psr.c	FUNCTION_25	IF_1	CALL_8
0x400096c	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       694	intel_psr.c	FUNCTION_25	IF_1	CALL_8
0x4000973	          0xc1e60c	                            shl esi, 0xc	       694	intel_psr.c	FUNCTION_25	IF_1	CALL_8
0x4000976	    0x81c690001e00	                       add esi, 0x1e0090	       694	intel_psr.c	FUNCTION_25	IF_1	CALL_8
0x400097c	      0xe800000000	                          call 0x4000981	       694	intel_psr.c	FUNCTION_25	IF_1	CALL_8
0x4000981	    0x8bb5b0040000	           mov esi, dword [rbp + 0x4b0] 	       698	intel_psr.c	FUNCTION_25	IF_1	CALL_10
0x4000987	      0x25e2feffff	                     and eax, 0xfffffee2	       698	intel_psr.c	FUNCTION_25	IF_1	CALL_10
0x400098c	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       698	intel_psr.c	FUNCTION_25	IF_1	CALL_10
0x4000993	            0x89c2	                            mov edx, eax	       698	intel_psr.c	FUNCTION_25	IF_1	CALL_10
0x4000995	      0xb901000000	                              mov ecx, 1	       698	intel_psr.c	FUNCTION_25	IF_1	CALL_10
0x400099a	          0x4889df	                            mov rdi, rbx	       698	intel_psr.c	FUNCTION_25	IF_1	CALL_10
0x400099d	          0xc1e60c	                            shl esi, 0xc	       698	intel_psr.c	FUNCTION_25	IF_1	CALL_10
0x40009a0	    0x81c690001e00	                       add esi, 0x1e0090	       698	intel_psr.c	FUNCTION_25	IF_1	CALL_10
0x40009a6	      0xe800000000	                          call 0x40009ab	       698	intel_psr.c	FUNCTION_25	IF_1	CALL_10
0x40009ab	    0xc683986d0000	              mov byte [rbx + 0x6d98], 0	       700	intel_psr.c	FUNCTION_25	IF_1
0x40009b2	              0x5b	                                 pop rbx	       704	intel_psr.c	FUNCTION_25
0x40009b3	              0x5d	                                 pop rbp	       704	intel_psr.c	FUNCTION_25
0x40009b4	              0xc3	                                     ret	       704	intel_psr.c	FUNCTION_25
0x40009b5	    0x8bb5b0040000	           mov esi, dword [rbp + 0x4b0] 	       169	intel_psr.c	FUNCTION_8	CALL_3
0x40009bb	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       169	intel_psr.c	FUNCTION_8	CALL_3
0x40009c2	      0xba01000000	                              mov edx, 1	       169	intel_psr.c	FUNCTION_8	CALL_3
0x40009c7	          0x4889df	                            mov rdi, rbx	       169	intel_psr.c	FUNCTION_8	CALL_3
0x40009ca	          0xc1e60c	                            shl esi, 0xc	       169	intel_psr.c	FUNCTION_8	CALL_3
0x40009cd	    0x81c694001e00	                       add esi, 0x1e0094	       169	intel_psr.c	FUNCTION_8	CALL_3
0x40009d3	      0xe800000000	                          call 0x40009d8	       169	intel_psr.c	FUNCTION_8	CALL_3
0x40009d8	          0x83e007	                              and eax, 7	       702	intel_psr.c	FUNCTION_25	ELSE_1	CALL_12
0x40009db	          0x83e803	                              sub eax, 3	       702	intel_psr.c	FUNCTION_25	ELSE_1	CALL_12
0x40009de	          0x83f801	                              cmp eax, 1	       702	intel_psr.c	FUNCTION_25	ELSE_1	CALL_12
0x40009e1	            0x77cf	                            ja 0x40009b2	       702	intel_psr.c	FUNCTION_25	ELSE_1	CALL_12
0x40009e3	    0x48c7c6000000	                              mov rsi, 0	       702	intel_psr.c	FUNCTION_25	ELSE_1	CALL_12
0x40009ea	    0x48c7c7000000	                              mov rdi, 0	       702	intel_psr.c	FUNCTION_25	ELSE_1	CALL_12
0x40009f1	      0xe800000000	                          call 0x40009f6	       702	intel_psr.c	FUNCTION_25	ELSE_1	CALL_12
0x40009f6	             0xf0b	                                     ud2	       702	intel_psr.c	FUNCTION_25	ELSE_1	CALL_12
0x40009f8	            0xebb8	                           jmp 0x40009b2	       704	intel_psr.c	FUNCTION_25
0x40009fa	    0x48c7c7000000	                              mov rdi, 0	       692	intel_psr.c	FUNCTION_25	IF_1	CALL_6
0x4000a01	      0xe800000000	                          call 0x4000a06	       692	intel_psr.c	FUNCTION_25	IF_1	CALL_6
0x4000a06	             0xf0b	                                     ud2	       692	intel_psr.c	FUNCTION_25	IF_1	CALL_6
0x4000a08	      0xe951ffffff	                           jmp 0x400095e	       692	intel_psr.c	FUNCTION_25	IF_1	CALL_6
intel_psr_exit	FOR,0:IF,4:CALL,15:DO,0:functions,0:WHILE,0:ELSE,2:SWITCH,0	98
0x4000240	            0x4154	                                push r12	       855	intel_psr.c	FUNCTION_29
0x4000242	              0x55	                                push rbp	       855	intel_psr.c	FUNCTION_29
0x4000243	              0x53	                                push rbx	       855	intel_psr.c	FUNCTION_29
0x4000244	        0x4883ec18	                           sub rsp, 0x18	       855	intel_psr.c	FUNCTION_29
0x4000248	    0x65488b042528	                mov rax, qword gs:[0x28]	       855	intel_psr.c	FUNCTION_29
0x4000251	      0x4889442410	             mov qword [rsp + 0x10], rax	       855	intel_psr.c	FUNCTION_29
0x4000256	            0x31c0	                            xor eax, eax	       855	intel_psr.c	FUNCTION_29
0x4000258	    0x80bf986d0000	              cmp byte [rdi + 0x6d98], 0	       861	intel_psr.c	FUNCTION_29	IF_1
0x400025f	            0x7475	                            je 0x40002d6	       861	intel_psr.c	FUNCTION_29	IF_1
0x4000261	    0xf68777060000	          test byte [rdi + 0x677], 0x40 	       864	intel_psr.c	FUNCTION_29	IF_2	CALL_3
0x4000268	          0x4889fb	                            mov rbx, rdi	       864	intel_psr.c	FUNCTION_29	IF_2	CALL_3
0x400026b	    0x488baf906d00	          mov rbp, qword [rdi + 0x6d90] 	       856	intel_psr.c	FUNCTION_29
0x4000272	     0xf84b9000000	                            je 0x4000331	       864	intel_psr.c	FUNCTION_29	IF_2	CALL_3
0x4000278	    0x80bffd6d0000	              cmp byte [rdi + 0x6dfd], 0	       865	intel_psr.c	FUNCTION_29	IF_2	IF_3
0x400027f	     0xf851a010000	                           jne 0x400039f	       865	intel_psr.c	FUNCTION_29	IF_2	IF_3
0x4000285	    0x80bbfc6d0000	              cmp byte [rbx + 0x6dfc], 0	       869	intel_psr.c	FUNCTION_29	IF_2	IF_4
0x400028c	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       870	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_5
0x4000293	            0x745e	                            je 0x40002f3	       869	intel_psr.c	FUNCTION_29	IF_2	IF_4
0x4000295	      0xba01000000	                              mov edx, 1	       870	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_5
0x400029a	      0xbe00f90600	                        mov esi, 0x6f900	       870	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_5
0x400029f	          0x4889df	                            mov rdi, rbx	       870	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_5
0x40002a2	      0xe800000000	                          call 0x40002a7	       870	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_5
0x40002a7	            0x85c0	                           test eax, eax	       871	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_6
0x40002a9	     0xf8915010000	                           jns 0x40003c4	       871	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_6
0x40002af	      0x25ffffff7f	                     and eax, 0x7fffffff	       872	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_7
0x40002b4	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       872	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_7
0x40002bb	      0xb901000000	                              mov ecx, 1	       872	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_7
0x40002c0	            0x89c2	                            mov edx, eax	       872	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_7
0x40002c2	      0xbe00f90600	                        mov esi, 0x6f900	       872	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_7
0x40002c7	          0x4889df	                            mov rdi, rbx	       872	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_7
0x40002ca	      0xe800000000	                          call 0x40002cf	       872	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_7
0x40002cf	    0xc683986d0000	              mov byte [rbx + 0x6d98], 0	       905	intel_psr.c	FUNCTION_29
0x40002d6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       906	intel_psr.c	FUNCTION_29
0x40002db	    0x654833042528	                xor rax, qword gs:[0x28]	       906	intel_psr.c	FUNCTION_29
0x40002e4	     0xf851e010000	                           jne 0x4000408	       906	intel_psr.c	FUNCTION_29
0x40002ea	        0x4883c418	                           add rsp, 0x18	       906	intel_psr.c	FUNCTION_29
0x40002ee	              0x5b	                                 pop rbx	       906	intel_psr.c	FUNCTION_29
0x40002ef	              0x5d	                                 pop rbp	       906	intel_psr.c	FUNCTION_29
0x40002f0	            0x415c	                                 pop r12	       906	intel_psr.c	FUNCTION_29
0x40002f2	              0xc3	                                     ret	       906	intel_psr.c	FUNCTION_29
0x40002f3	    0x8bb350460000	          mov esi, dword [rbx + 0x4650] 	       874	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_8
0x40002f9	      0xba01000000	                              mov edx, 1	       874	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_8
0x40002fe	          0x4889df	                            mov rdi, rbx	       874	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_8
0x4000301	      0xe800000000	                          call 0x4000306	       874	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_8
0x4000306	            0x85c0	                           test eax, eax	       875	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_9
0x4000308	     0xf89d8000000	                           jns 0x40003e6	       875	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_9
0x400030e	      0x25ffffff7f	                     and eax, 0x7fffffff	       876	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_10
0x4000313	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       876	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_10
0x400031a	    0x8bb350460000	          mov esi, dword [rbx + 0x4650] 	       876	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_10
0x4000320	            0x89c2	                            mov edx, eax	       876	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_10
0x4000322	      0xb901000000	                              mov ecx, 1	       876	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_10
0x4000327	          0x4889df	                            mov rdi, rbx	       876	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_10
0x400032a	      0xe800000000	                          call 0x400032f	       876	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_10
0x400032f	            0xeb9e	                           jmp 0x40002cf	       876	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_10
0x4000331	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       858	intel_psr.c	FUNCTION_29	CALL_2
0x4000338	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	       879	intel_psr.c	FUNCTION_29	ELSE_2	CALL_12
0x400033f	    0x448ba2b00400	          mov r12d, dword [rdx + 0x4b0] 	       879	intel_psr.c	FUNCTION_29	ELSE_2	CALL_12
0x4000346	      0xba01000000	                              mov edx, 1	       879	intel_psr.c	FUNCTION_29	ELSE_2	CALL_12
0x400034b	        0x41c1e40c	                           shl r12d, 0xc	       879	intel_psr.c	FUNCTION_29	ELSE_2	CALL_12
0x400034f	    0x4181c490001e	                      add r12d, 0x1e0090	       879	intel_psr.c	FUNCTION_29	ELSE_2	CALL_12
0x4000356	          0x4489e6	                           mov esi, r12d	       879	intel_psr.c	FUNCTION_29	ELSE_2	CALL_12
0x4000359	      0xe800000000	                          call 0x400035e	       879	intel_psr.c	FUNCTION_29	ELSE_2	CALL_12
0x400035e	          0x80e4fe	                            and ah, 0xfe	       891	intel_psr.c	FUNCTION_29	ELSE_2	CALL_14
0x4000361	          0x4489e6	                           mov esi, r12d	       891	intel_psr.c	FUNCTION_29	ELSE_2	CALL_14
0x4000364	          0x4889df	                            mov rdi, rbx	       891	intel_psr.c	FUNCTION_29	ELSE_2	CALL_14
0x4000367	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       891	intel_psr.c	FUNCTION_29	ELSE_2	CALL_14
0x400036e	            0x89c2	                            mov edx, eax	       891	intel_psr.c	FUNCTION_29	ELSE_2	CALL_14
0x4000370	      0xb901000000	                              mov ecx, 1	       891	intel_psr.c	FUNCTION_29	ELSE_2	CALL_14
0x4000375	      0xe800000000	                          call 0x400037a	       891	intel_psr.c	FUNCTION_29	ELSE_2	CALL_14
0x400037a	    0x488dbdb00000	                   lea rdi, [rbp + 0xb0]	       901	intel_psr.c	FUNCTION_29	ELSE_2	CALL_15
0x4000381	      0x488d54240f	                    lea rdx, [rsp + 0xf]	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x4000386	      0xb901000000	                              mov ecx, 1	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x400038b	      0xbe00060000	                          mov esi, 0x600	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x4000390	      0xc644240f01	                 mov byte [rsp + 0xf], 1	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x4000395	      0xe800000000	                          call 0x400039a	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x400039a	      0xe930ffffff	                           jmp 0x40002cf	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x400039f	    0x488dbdb00000	                   lea rdi, [rbp + 0xb0]	       866	intel_psr.c	FUNCTION_29	IF_2	IF_3	CALL_4
0x40003a6	      0x488d54240e	                    lea rdx, [rsp + 0xe]	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40003ab	      0xb901000000	                              mov ecx, 1	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40003b0	      0xbe17010000	                          mov esi, 0x117	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40003b5	      0xc644240e00	                 mov byte [rsp + 0xe], 0	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40003ba	      0xe800000000	                          call 0x40003bf	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40003bf	      0xe9c1feffff	                           jmp 0x4000285	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40003c4	    0x48c7c6000000	                              mov rsi, 0	       871	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_6
0x40003cb	    0x48c7c7000000	                              mov rdi, 0	       871	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_6
0x40003d2	        0x89442404	                mov dword [rsp + 4], eax	       871	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_6
0x40003d6	      0xe800000000	                          call 0x40003db	       871	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_6
0x40003db	             0xf0b	                                     ud2	       871	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_6
0x40003dd	        0x8b442404	                mov eax, dword [rsp + 4]	       871	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_6
0x40003e1	      0xe9c9feffff	                           jmp 0x40002af	       871	intel_psr.c	FUNCTION_29	IF_2	IF_4	CALL_6
0x40003e6	    0x48c7c6000000	                              mov rsi, 0	       875	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_9
0x40003ed	    0x48c7c7000000	                              mov rdi, 0	       875	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_9
0x40003f4	        0x89442404	                mov dword [rsp + 4], eax	       875	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_9
0x40003f8	      0xe800000000	                          call 0x40003fd	       875	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_9
0x40003fd	             0xf0b	                                     ud2	       875	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_9
0x40003ff	        0x8b442404	                mov eax, dword [rsp + 4]	       875	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_9
0x4000403	      0xe906ffffff	                           jmp 0x400030e	       875	intel_psr.c	FUNCTION_29	IF_2	ELSE_1	CALL_9
0x4000408	      0xe800000000	                          call 0x400040d	       906	intel_psr.c	FUNCTION_29
hsw_psr_disable	FOR,0:IF,5:CALL,14:DO,0:functions,0:WHILE,0:ELSE,3:SWITCH,0	112
0x4000b20	            0x4155	                                push r13	       708	intel_psr.c	FUNCTION_26
0x4000b22	            0x4154	                                push r12	       708	intel_psr.c	FUNCTION_26
0x4000b24	              0x55	                                push rbp	       708	intel_psr.c	FUNCTION_26
0x4000b25	              0x53	                                push rbx	       708	intel_psr.c	FUNCTION_26
0x4000b26	          0x4889fd	                            mov rbp, rdi	       708	intel_psr.c	FUNCTION_26
0x4000b29	        0x4883ec10	                           sub rsp, 0x10	       708	intel_psr.c	FUNCTION_26
0x4000b2d	    0x488b9ff8feff	            mov rbx, qword [rdi - 0x108]	       710	intel_psr.c	FUNCTION_26
0x4000b34	    0x65488b042528	                mov rax, qword gs:[0x28]	       708	intel_psr.c	FUNCTION_26
0x4000b3d	      0x4889442408	                mov qword [rsp + 8], rax	       708	intel_psr.c	FUNCTION_26
0x4000b42	            0x31c0	                            xor eax, eax	       708	intel_psr.c	FUNCTION_26
0x4000b44	    0x80bb986d0000	              cmp byte [rbx + 0x6d98], 0	       713	intel_psr.c	FUNCTION_26	IF_1
0x4000b4b	     0xf8493000000	                            je 0x4000be4	       713	intel_psr.c	FUNCTION_26	IF_1
0x4000b51	    0x80bbfd6d0000	              cmp byte [rbx + 0x6dfd], 0	       717	intel_psr.c	FUNCTION_26	IF_1	IF_2
0x4000b58	     0xf856d010000	                           jne 0x4000ccb	       717	intel_psr.c	FUNCTION_26	IF_1	IF_2
0x4000b5e	    0x80bbfc6d0000	              cmp byte [rbx + 0x6dfc], 0	       722	intel_psr.c	FUNCTION_26	IF_1	IF_3
0x4000b65	     0xf8517010000	                           jne 0x4000c82	       722	intel_psr.c	FUNCTION_26	IF_1	IF_3
0x4000b6b	    0x8bb350460000	          mov esi, dword [rbx + 0x4650] 	       731	intel_psr.c	FUNCTION_26	IF_1	ELSE_1
0x4000b71	    0x4c8bab180800	           mov r13, qword [rbx + 0x818] 	       734	intel_psr.c	FUNCTION_26	IF_1	ELSE_1	CALL_6
0x4000b78	      0xba01000000	                              mov edx, 1	       734	intel_psr.c	FUNCTION_26	IF_1	ELSE_1	CALL_6
0x4000b7d	          0x4889df	                            mov rdi, rbx	       734	intel_psr.c	FUNCTION_26	IF_1	ELSE_1	CALL_6
0x4000b80	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       734	intel_psr.c	FUNCTION_26	IF_1	ELSE_1	CALL_6
0x4000b87	        0x448d6640	                  lea r12d, [rsi + 0x40]	       731	intel_psr.c	FUNCTION_26	IF_1	ELSE_1
0x4000b8b	      0xe800000000	                          call 0x4000b90	       734	intel_psr.c	FUNCTION_26	IF_1	ELSE_1	CALL_6
0x4000b90	      0x25ffffff7f	                     and eax, 0x7fffffff	       734	intel_psr.c	FUNCTION_26	IF_1	ELSE_1	CALL_6
0x4000b95	    0x8bb350460000	          mov esi, dword [rbx + 0x4650] 	       734	intel_psr.c	FUNCTION_26	IF_1	ELSE_1	CALL_6
0x4000b9b	      0xb901000000	                              mov ecx, 1	       734	intel_psr.c	FUNCTION_26	IF_1	ELSE_1	CALL_6
0x4000ba0	            0x89c2	                            mov edx, eax	       734	intel_psr.c	FUNCTION_26	IF_1	ELSE_1	CALL_6
0x4000ba2	          0x4889df	                            mov rdi, rbx	       734	intel_psr.c	FUNCTION_26	IF_1	ELSE_1	CALL_6
0x4000ba5	      0xe800000000	                          call 0x4000baa	       734	intel_psr.c	FUNCTION_26	IF_1	ELSE_1	CALL_6
0x4000baa	      0xba000000e0	                     mov edx, 0xe0000000	       732	intel_psr.c	FUNCTION_26	IF_1	ELSE_1
0x4000baf	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000bb1	            0x31c9	                            xor ecx, ecx	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000bb3	    0x41b9d0070000	                          mov r9d, 0x7d0	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000bb9	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000bbf	          0x4489e6	                           mov esi, r12d	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000bc2	          0x4889df	                            mov rdi, rbx	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000bc5	      0xe800000000	                          call 0x4000bca	       191	intel_uncore.h	FUNCTION_34	CALL_1
0x4000bca	            0x85c0	                           test eax, eax	       739	intel_psr.c	FUNCTION_26	IF_1	IF_4	CALL_8
0x4000bcc	              0x5a	                                 pop rdx	       739	intel_psr.c	FUNCTION_26	IF_1	IF_4	CALL_8
0x4000bcd	            0x740c	                            je 0x4000bdb	       739	intel_psr.c	FUNCTION_26	IF_1	IF_4	CALL_8
0x4000bcf	    0x48c7c7000000	                              mov rdi, 0	       742	intel_psr.c	FUNCTION_26	IF_1	CALL_9
0x4000bd6	      0xe800000000	                          call 0x4000bdb	       742	intel_psr.c	FUNCTION_26	IF_1	CALL_9
0x4000bdb	    0xc683986d0000	              mov byte [rbx + 0x6d98], 0	       744	intel_psr.c	FUNCTION_26	IF_1
0x4000be2	            0xeb2b	                           jmp 0x4000c0f	       744	intel_psr.c	FUNCTION_26	IF_1
0x4000be4	    0x80bbfc6d0000	              cmp byte [rbx + 0x6dfc], 0	       746	intel_psr.c	FUNCTION_26	ELSE_2	IF_5
0x4000beb	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       747	intel_psr.c	FUNCTION_26	ELSE_2	CALL_11
0x4000bf2	            0x7561	                           jne 0x4000c55	       746	intel_psr.c	FUNCTION_26	ELSE_2	IF_5
0x4000bf4	    0x8bb350460000	          mov esi, dword [rbx + 0x4650] 	       749	intel_psr.c	FUNCTION_26	ELSE_2	CALL_13
0x4000bfa	      0xba01000000	                              mov edx, 1	       749	intel_psr.c	FUNCTION_26	ELSE_2	CALL_13
0x4000bff	          0x4889df	                            mov rdi, rbx	       749	intel_psr.c	FUNCTION_26	ELSE_2	CALL_13
0x4000c02	      0xe800000000	                          call 0x4000c07	       749	intel_psr.c	FUNCTION_26	ELSE_2	CALL_13
0x4000c07	            0x85c0	                           test eax, eax	       749	intel_psr.c	FUNCTION_26	ELSE_2	CALL_13
0x4000c09	     0xf88eb000000	                            js 0x4000cfa	       749	intel_psr.c	FUNCTION_26	ELSE_2	CALL_13
0x4000c0f	    0x488bbdf8feff	            mov rdi, qword [rbp - 0x108]	        88	intel_psr.c	FUNCTION_3	CALL_2
0x4000c16	    0x80bf5c060000	               cmp byte [rdi + 0x65c], 9	        90	intel_psr.c	FUNCTION_3	IF_1	CALL_3
0x4000c1d	            0x7617	                           jbe 0x4000c36	        90	intel_psr.c	FUNCTION_3	IF_1	CALL_3
0x4000c1f	          0x8b4514	            mov eax, dword [rbp + 0x14] 	        70	intel_psr.c	FUNCTION_1
0x4000c22	      0xbe23000000	                           mov esi, 0x23	        70	intel_psr.c	FUNCTION_1
0x4000c27	            0x85c0	                           test eax, eax	        70	intel_psr.c	FUNCTION_1
0x4000c29	            0x7406	                            je 0x4000c31	        70	intel_psr.c	FUNCTION_1
0x4000c2b	    0x8bb500050000	           mov esi, dword [rbp + 0x500] 	        70	intel_psr.c	FUNCTION_1
0x4000c31	      0xe800000000	                          call 0x4000c36	        93	intel_psr.c	FUNCTION_3	CALL_5
0x4000c36	      0x488b442408	                mov rax, qword [rsp + 8]	       753	intel_psr.c	FUNCTION_26
0x4000c3b	    0x654833042528	                xor rax, qword gs:[0x28]	       753	intel_psr.c	FUNCTION_26
0x4000c44	     0xf85ca000000	                           jne 0x4000d14	       753	intel_psr.c	FUNCTION_26
0x4000c4a	        0x4883c410	                           add rsp, 0x10	       753	intel_psr.c	FUNCTION_26
0x4000c4e	              0x5b	                                 pop rbx	       753	intel_psr.c	FUNCTION_26
0x4000c4f	              0x5d	                                 pop rbp	       753	intel_psr.c	FUNCTION_26
0x4000c50	            0x415c	                                 pop r12	       753	intel_psr.c	FUNCTION_26
0x4000c52	            0x415d	                                 pop r13	       753	intel_psr.c	FUNCTION_26
0x4000c54	              0xc3	                                     ret	       753	intel_psr.c	FUNCTION_26
0x4000c55	      0xba01000000	                              mov edx, 1	       747	intel_psr.c	FUNCTION_26	ELSE_2	CALL_11
0x4000c5a	      0xbe00f90600	                        mov esi, 0x6f900	       747	intel_psr.c	FUNCTION_26	ELSE_2	CALL_11
0x4000c5f	          0x4889df	                            mov rdi, rbx	       747	intel_psr.c	FUNCTION_26	ELSE_2	CALL_11
0x4000c62	      0xe800000000	                          call 0x4000c67	       747	intel_psr.c	FUNCTION_26	ELSE_2	CALL_11
0x4000c67	            0x85c0	                           test eax, eax	       747	intel_psr.c	FUNCTION_26	ELSE_2	CALL_11
0x4000c69	            0x79a4	                           jns 0x4000c0f	       747	intel_psr.c	FUNCTION_26	ELSE_2	CALL_11
0x4000c6b	    0x48c7c6000000	                              mov rsi, 0	       747	intel_psr.c	FUNCTION_26	ELSE_2	CALL_11
0x4000c72	    0x48c7c7000000	                              mov rdi, 0	       747	intel_psr.c	FUNCTION_26	ELSE_2	CALL_11
0x4000c79	      0xe800000000	                          call 0x4000c7e	       747	intel_psr.c	FUNCTION_26	ELSE_2	CALL_11
0x4000c7e	             0xf0b	                                     ud2	       747	intel_psr.c	FUNCTION_26	ELSE_2	CALL_11
0x4000c80	            0xeb8d	                           jmp 0x4000c0f	       747	intel_psr.c	FUNCTION_26	ELSE_2	CALL_11
0x4000c82	    0x4c8ba3180800	           mov r12, qword [rbx + 0x818] 	       726	intel_psr.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4000c89	      0xba01000000	                              mov edx, 1	       726	intel_psr.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4000c8e	      0xbe00f90600	                        mov esi, 0x6f900	       726	intel_psr.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4000c93	          0x4889df	                            mov rdi, rbx	       726	intel_psr.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4000c96	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       726	intel_psr.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4000c9d	      0xe800000000	                          call 0x4000ca2	       726	intel_psr.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4000ca2	      0x25ffffff3f	                     and eax, 0x3fffffff	       726	intel_psr.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4000ca7	      0xb901000000	                              mov ecx, 1	       726	intel_psr.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4000cac	      0xbe00f90600	                        mov esi, 0x6f900	       726	intel_psr.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4000cb1	            0x89c2	                            mov edx, eax	       726	intel_psr.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4000cb3	          0x4889df	                            mov rdi, rbx	       726	intel_psr.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4000cb6	      0xe800000000	                          call 0x4000cbb	       726	intel_psr.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4000cbb	    0x41bc40f90600	                       mov r12d, 0x6f940	       723	intel_psr.c	FUNCTION_26	IF_1	IF_3
0x4000cc1	      0xba000000f0	                     mov edx, 0xf0000000	       724	intel_psr.c	FUNCTION_26	IF_1	IF_3
0x4000cc6	      0xe9e4feffff	                           jmp 0x4000baf	       724	intel_psr.c	FUNCTION_26	IF_1	IF_3
0x4000ccb	    0x488dbfb00000	                   lea rdi, [rdi + 0xb0]	       718	intel_psr.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x4000cd2	      0x488d542407	                      lea rdx, [rsp + 7]	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x4000cd7	      0xb901000000	                              mov ecx, 1	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x4000cdc	      0xbe17010000	                          mov esi, 0x117	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x4000ce1	      0xc644240700	                   mov byte [rsp + 7], 0	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x4000ce6	      0xe800000000	                          call 0x4000ceb	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x4000ceb	    0x80bbfc6d0000	              cmp byte [rbx + 0x6dfc], 0	       722	intel_psr.c	FUNCTION_26	IF_1	IF_3
0x4000cf2	     0xf8473feffff	                            je 0x4000b6b	       722	intel_psr.c	FUNCTION_26	IF_1	IF_3
0x4000cf8	            0xeb88	                           jmp 0x4000c82	       722	intel_psr.c	FUNCTION_26	IF_1	IF_3
0x4000cfa	    0x48c7c6000000	                              mov rsi, 0	       749	intel_psr.c	FUNCTION_26	ELSE_2	CALL_13
0x4000d01	    0x48c7c7000000	                              mov rdi, 0	       749	intel_psr.c	FUNCTION_26	ELSE_2	CALL_13
0x4000d08	      0xe800000000	                          call 0x4000d0d	       749	intel_psr.c	FUNCTION_26	ELSE_2	CALL_13
0x4000d0d	             0xf0b	                                     ud2	       749	intel_psr.c	FUNCTION_26	ELSE_2	CALL_13
0x4000d0f	      0xe9fbfeffff	                           jmp 0x4000c0f	       749	intel_psr.c	FUNCTION_26	ELSE_2	CALL_13
0x4000d14	      0xe800000000	                          call 0x4000d19	       753	intel_psr.c	FUNCTION_26
hsw_psr_enable_source	FOR,0:IF,2:CALL,7:DO,0:functions,0:WHILE,0:ELSE,1:SWITCH,0	45
0x4000d20	              0x55	                                push rbp	       584	intel_psr.c	FUNCTION_23
0x4000d21	              0x53	                                push rbx	       584	intel_psr.c	FUNCTION_23
0x4000d22	    0x488b9ff8feff	            mov rbx, qword [rdi - 0x108]	       586	intel_psr.c	FUNCTION_23
0x4000d29	    0x8bae3c020000	           mov ebp, dword [rsi + 0x23c] 	       588	intel_psr.c	FUNCTION_23
0x4000d2f	    0x80bb5c060000	               cmp byte [rbx + 0x65c], 9	        79	intel_psr.c	FUNCTION_2	IF_1	CALL_3
0x4000d36	            0x7614	                           jbe 0x4000d4c	        79	intel_psr.c	FUNCTION_2	IF_1	CALL_3
0x4000d38	          0x8b4714	            mov eax, dword [rdi + 0x14] 	        70	intel_psr.c	FUNCTION_1
0x4000d3b	      0xbe23000000	                           mov esi, 0x23	        70	intel_psr.c	FUNCTION_1
0x4000d40	            0x85c0	                           test eax, eax	        70	intel_psr.c	FUNCTION_1
0x4000d42	            0x7566	                           jne 0x4000daa	        70	intel_psr.c	FUNCTION_1
0x4000d44	          0x4889df	                            mov rdi, rbx	        82	intel_psr.c	FUNCTION_2	CALL_5
0x4000d47	      0xe800000000	                          call 0x4000d4c	        82	intel_psr.c	FUNCTION_2	CALL_5
0x4000d4c	    0x80bbfc6d0000	              cmp byte [rbx + 0x6dfc], 0	       593	intel_psr.c	FUNCTION_23	IF_1
0x4000d53	            0x745d	                            je 0x4000db2	       593	intel_psr.c	FUNCTION_23	IF_1
0x4000d55	    0x80bbff6d0000	              cmp byte [rbx + 0x6dff], 1	       596	intel_psr.c	FUNCTION_23	IF_1	IF_2
0x4000d5c	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       597	intel_psr.c	FUNCTION_23	IF_1	CALL_5
0x4000d63	    0x8d34adc02004	              lea esi, [rbp*4 + 0x420c0]	       597	intel_psr.c	FUNCTION_23	IF_1	CALL_5
0x4000d6a	          0x4889df	                            mov rdi, rbx	       597	intel_psr.c	FUNCTION_23	IF_1	CALL_5
0x4000d6d	      0xb901000000	                              mov ecx, 1	       597	intel_psr.c	FUNCTION_23	IF_1	CALL_5
0x4000d72	            0x19d2	                            sbb edx, edx	       596	intel_psr.c	FUNCTION_23	IF_1	IF_2
0x4000d74	    0x81e20080ffff	                     and edx, 0xffff8000	       596	intel_psr.c	FUNCTION_23	IF_1	IF_2
0x4000d7a	    0x81c200900000	                         add edx, 0x9000	       596	intel_psr.c	FUNCTION_23	IF_1	IF_2
0x4000d80	      0xe800000000	                          call 0x4000d85	       597	intel_psr.c	FUNCTION_23	IF_1	CALL_5
0x4000d85	    0x8b8b50460000	          mov ecx, dword [rbx + 0x4650] 	       599	intel_psr.c	FUNCTION_23	IF_1	CALL_6
0x4000d8b	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       599	intel_psr.c	FUNCTION_23	IF_1	CALL_6
0x4000d92	          0x4889df	                            mov rdi, rbx	       599	intel_psr.c	FUNCTION_23	IF_1	CALL_6
0x4000d95	      0xba0000011e	                     mov edx, 0x1e010000	       599	intel_psr.c	FUNCTION_23	IF_1	CALL_6
0x4000d9a	          0x8d7160	                   lea esi, [rcx + 0x60]	       599	intel_psr.c	FUNCTION_23	IF_1	CALL_6
0x4000d9d	      0xb901000000	                              mov ecx, 1	       599	intel_psr.c	FUNCTION_23	IF_1	CALL_6
0x4000da2	      0xe800000000	                          call 0x4000da7	       599	intel_psr.c	FUNCTION_23	IF_1	CALL_6
0x4000da7	              0x5b	                                 pop rbx	       618	intel_psr.c	FUNCTION_23
0x4000da8	              0x5d	                                 pop rbp	       618	intel_psr.c	FUNCTION_23
0x4000da9	              0xc3	                                     ret	       618	intel_psr.c	FUNCTION_23
0x4000daa	    0x8bb700050000	           mov esi, dword [rdi + 0x500] 	        70	intel_psr.c	FUNCTION_1
0x4000db0	            0xeb92	                           jmp 0x4000d44	        70	intel_psr.c	FUNCTION_1
0x4000db2	    0x8b8b50460000	          mov ecx, dword [rbx + 0x4650] 	       613	intel_psr.c	FUNCTION_23	ELSE_1	CALL_7
0x4000db8	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       613	intel_psr.c	FUNCTION_23	ELSE_1	CALL_7
0x4000dbf	          0x4889df	                            mov rdi, rbx	       613	intel_psr.c	FUNCTION_23	ELSE_1	CALL_7
0x4000dc2	      0xba0000000e	                      mov edx, 0xe000000	       613	intel_psr.c	FUNCTION_23	ELSE_1	CALL_7
0x4000dc7	          0x8d7160	                   lea esi, [rcx + 0x60]	       613	intel_psr.c	FUNCTION_23	ELSE_1	CALL_7
0x4000dca	      0xb901000000	                              mov ecx, 1	       613	intel_psr.c	FUNCTION_23	ELSE_1	CALL_7
0x4000dcf	      0xe800000000	                          call 0x4000dd4	       613	intel_psr.c	FUNCTION_23	ELSE_1	CALL_7
0x4000dd4	              0x5b	                                 pop rbx	       618	intel_psr.c	FUNCTION_23
0x4000dd5	              0x5d	                                 pop rbp	       618	intel_psr.c	FUNCTION_23
0x4000dd6	              0xc3	                                     ret	       618	intel_psr.c	FUNCTION_23
intel_psr_init_dpcd	FOR,0:IF,4:CALL,10:DO,0:functions,0:WHILE,0:ELSE,0:SWITCH,0	103
0x4000de0	            0x4154	                                push r12	       126	intel_psr.c	FUNCTION_7
0x4000de2	    0x4c8da7b00000	                   lea r12, [rdi + 0xb0]	       130	intel_psr.c	FUNCTION_7	CALL_3
0x4000de9	              0x55	                                push rbp	       126	intel_psr.c	FUNCTION_7
0x4000dea	              0x53	                                push rbx	       126	intel_psr.c	FUNCTION_7
0x4000deb	        0x488d5727	                   lea rdx, [rdi + 0x27]	       130	intel_psr.c	FUNCTION_7	CALL_3
0x4000def	          0x4889fb	                            mov rbx, rdi	       126	intel_psr.c	FUNCTION_7
0x4000df2	      0xb902000000	                              mov ecx, 2	       130	intel_psr.c	FUNCTION_7	CALL_3
0x4000df7	      0xbe70000000	                           mov esi, 0x70	       130	intel_psr.c	FUNCTION_7	CALL_3
0x4000dfc	        0x4883ec10	                           sub rsp, 0x10	       126	intel_psr.c	FUNCTION_7
0x4000e00	    0x488baff8feff	            mov rbp, qword [rdi - 0x108]	       128	intel_psr.c	FUNCTION_7	CALL_2
0x4000e07	          0x4c89e7	                            mov rdi, r12	       130	intel_psr.c	FUNCTION_7	CALL_3
0x4000e0a	    0x65488b042528	                mov rax, qword gs:[0x28]	       126	intel_psr.c	FUNCTION_7
0x4000e13	      0x4889442408	                mov qword [rsp + 8], rax	       126	intel_psr.c	FUNCTION_7
0x4000e18	            0x31c0	                            xor eax, eax	       126	intel_psr.c	FUNCTION_7
0x4000e1a	      0xe800000000	                          call 0x4000e1f	       130	intel_psr.c	FUNCTION_7	CALL_3
0x4000e1f	        0xf6432701	               test byte [rbx + 0x27], 1	       133	intel_psr.c	FUNCTION_7	IF_1
0x4000e23	     0xf8513010000	                           jne 0x4000f3c	       133	intel_psr.c	FUNCTION_7	IF_1
0x4000e29	    0x80bd5c060000	               cmp byte [rbp + 0x65c], 8	       138	intel_psr.c	FUNCTION_7	IF_2	CALL_5
0x4000e30	            0x7606	                           jbe 0x4000e38	       138	intel_psr.c	FUNCTION_7	IF_2	CALL_5
0x4000e32	        0xf6432702	               test byte [rbx + 0x27], 2	       138	intel_psr.c	FUNCTION_7	IF_2	CALL_5
0x4000e36	            0x751d	                           jne 0x4000e55	       138	intel_psr.c	FUNCTION_7	IF_2	CALL_5
0x4000e38	      0x488b442408	                mov rax, qword [rsp + 8]	       162	intel_psr.c	FUNCTION_7
0x4000e3d	    0x654833042528	                xor rax, qword gs:[0x28]	       162	intel_psr.c	FUNCTION_7
0x4000e46	     0xf8564010000	                           jne 0x4000fb0	       162	intel_psr.c	FUNCTION_7
0x4000e4c	        0x4883c410	                           add rsp, 0x10	       162	intel_psr.c	FUNCTION_7
0x4000e50	              0x5b	                                 pop rbx	       162	intel_psr.c	FUNCTION_7
0x4000e51	              0x5d	                                 pop rbp	       162	intel_psr.c	FUNCTION_7
0x4000e52	            0x415c	                                 pop r12	       162	intel_psr.c	FUNCTION_7
0x4000e54	              0xc3	                                     ret	       162	intel_psr.c	FUNCTION_7
0x4000e55	      0x488d542406	                      lea rdx, [rsp + 6]	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000e5a	    0xc685886d0000	              mov byte [rbp + 0x6d88], 1	       142	intel_psr.c	FUNCTION_7	IF_2
0x4000e61	      0xb901000000	                              mov ecx, 1	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000e66	      0xbe2f000000	                           mov esi, 0x2f	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000e6b	          0x4c89e7	                            mov rdi, r12	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000e6e	      0xe800000000	                          call 0x4000e73	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000e73	        0x4883f801	                              cmp rax, 1	       143	intel_psr.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000e77	     0xf84dc000000	                            je 0x4000f59	       143	intel_psr.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000e7d	      0xc644240600	                   mov byte [rsp + 6], 0	       146	intel_psr.c	FUNCTION_7	IF_2	IF_3
0x4000e82	    0xc685fd6d0000	              mov byte [rbp + 0x6dfd], 0	       147	intel_psr.c	FUNCTION_7	IF_2
0x4000e89	    0x48c7c2000000	                              mov rdx, 0	       150	intel_psr.c	FUNCTION_7	IF_2	CALL_7
0x4000e90	    0xc685fc6d0000	              mov byte [rbp + 0x6dfc], 0	       149	intel_psr.c	FUNCTION_7	IF_2
0x4000e97	    0x48c7c6000000	                              mov rsi, 0	       150	intel_psr.c	FUNCTION_7	IF_2	CALL_7
0x4000e9e	      0xbf04000000	                              mov edi, 4	       150	intel_psr.c	FUNCTION_7	IF_2	CALL_7
0x4000ea3	      0xe800000000	                          call 0x4000ea8	       150	intel_psr.c	FUNCTION_7	IF_2	CALL_7
0x4000ea8	    0x80bdfc6d0000	              cmp byte [rbp + 0x6dfc], 0	       153	intel_psr.c	FUNCTION_7	IF_2	IF_4
0x4000eaf	            0x7487	                            je 0x4000e38	       153	intel_psr.c	FUNCTION_7	IF_2	IF_4
0x4000eb1	      0x488d542407	                      lea rdx, [rsp + 7]	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000eb6	      0xb901000000	                              mov ecx, 1	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000ebb	      0xbe71000000	                           mov esi, 0x71	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000ec0	          0x4c89e7	                            mov rdi, r12	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000ec3	      0xc644240700	                   mov byte [rsp + 7], 0	        98	intel_psr.c	FUNCTION_4
0x4000ec8	      0xe800000000	                          call 0x4000ecd	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000ecd	            0x31d2	                            xor edx, edx	       101	intel_psr.c	FUNCTION_4	IF_1
0x4000ecf	        0x4883f801	                              cmp rax, 1	       100	intel_psr.c	FUNCTION_4	IF_1	CALL_1
0x4000ed3	     0xf84c7000000	                            je 0x4000fa0	       100	intel_psr.c	FUNCTION_4	IF_1	CALL_1
0x4000ed9	    0x8895ff6d0000	            mov byte [rbp + 0x6dff], dl 	       154	intel_psr.c	FUNCTION_7	IF_2	IF_4
0x4000edf	      0x488d542407	                      lea rdx, [rsp + 7]	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000ee4	      0xb901000000	                              mov ecx, 1	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000ee9	      0xbe10220000	                         mov esi, 0x2210	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000eee	          0x4c89e7	                            mov rdi, r12	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000ef1	      0xc644240700	                   mov byte [rsp + 7], 0	       107	intel_psr.c	FUNCTION_5
0x4000ef6	      0xe800000000	                          call 0x4000efb	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000efb	            0x31d2	                            xor edx, edx	       111	intel_psr.c	FUNCTION_5	IF_1
0x4000efd	        0x4883f801	                              cmp rax, 1	       109	intel_psr.c	FUNCTION_5	IF_1	CALL_1
0x4000f01	     0xf8489000000	                            je 0x4000f90	       109	intel_psr.c	FUNCTION_5	IF_1	CALL_1
0x4000f07	    0x8895006e0000	            mov byte [rbp + 0x6e00], dl 	       156	intel_psr.c	FUNCTION_7	IF_2	IF_4
0x4000f0d	      0x488d542407	                      lea rdx, [rsp + 7]	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000f12	      0xb901000000	                              mov ecx, 1	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000f17	      0xbe2e000000	                           mov esi, 0x2e	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000f1c	          0x4c89e7	                            mov rdi, r12	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000f1f	      0xc644240700	                   mov byte [rsp + 7], 0	       117	intel_psr.c	FUNCTION_6
0x4000f24	      0xe800000000	                          call 0x4000f29	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000f29	            0x31d2	                            xor edx, edx	       121	intel_psr.c	FUNCTION_6	IF_1
0x4000f2b	        0x4883f801	                              cmp rax, 1	       119	intel_psr.c	FUNCTION_6	IF_1	CALL_1
0x4000f2f	            0x7455	                            je 0x4000f86	       119	intel_psr.c	FUNCTION_6	IF_1	CALL_1
0x4000f31	    0x8895016e0000	            mov byte [rbp + 0x6e01], dl 	       158	intel_psr.c	FUNCTION_7	IF_2	IF_4
0x4000f37	      0xe9fcfeffff	                           jmp 0x4000e38	       162	intel_psr.c	FUNCTION_7
0x4000f3c	    0xc685886d0000	              mov byte [rbp + 0x6d88], 1	       134	intel_psr.c	FUNCTION_7	IF_1
0x4000f43	    0x48c7c6000000	                              mov rsi, 0	       135	intel_psr.c	FUNCTION_7	IF_1	CALL_4
0x4000f4a	      0xbf04000000	                              mov edi, 4	       135	intel_psr.c	FUNCTION_7	IF_1	CALL_4
0x4000f4f	      0xe800000000	                          call 0x4000f54	       135	intel_psr.c	FUNCTION_7	IF_1	CALL_4
0x4000f54	      0xe9d0feffff	                           jmp 0x4000e29	       135	intel_psr.c	FUNCTION_7	IF_1	CALL_4
0x4000f59	       0xfb6442406	               movzx eax, byte [rsp + 6]	       147	intel_psr.c	FUNCTION_7	IF_2
0x4000f5e	    0x48c7c2000000	                              mov rdx, 0	       150	intel_psr.c	FUNCTION_7	IF_2	CALL_7
0x4000f65	          0x83e001	                              and eax, 1	       147	intel_psr.c	FUNCTION_7	IF_2
0x4000f68	            0x84c0	                             test al, al	       150	intel_psr.c	FUNCTION_7	IF_2	CALL_7
0x4000f6a	    0x8885fd6d0000	            mov byte [rbp + 0x6dfd], al 	       147	intel_psr.c	FUNCTION_7	IF_2
0x4000f70	    0x8885fc6d0000	            mov byte [rbp + 0x6dfc], al 	       149	intel_psr.c	FUNCTION_7	IF_2
0x4000f76	    0x48c7c0000000	                              mov rax, 0	       150	intel_psr.c	FUNCTION_7	IF_2	CALL_7
0x4000f7d	        0x480f44d0	                          cmove rdx, rax	       150	intel_psr.c	FUNCTION_7	IF_2	CALL_7
0x4000f81	      0xe911ffffff	                           jmp 0x4000e97	       150	intel_psr.c	FUNCTION_7	IF_2	CALL_7
0x4000f86	       0xfb6542407	               movzx edx, byte [rsp + 7]	       122	intel_psr.c	FUNCTION_6
0x4000f8b	          0x83e201	                              and edx, 1	       122	intel_psr.c	FUNCTION_6
0x4000f8e	            0xeba1	                           jmp 0x4000f31	       122	intel_psr.c	FUNCTION_6
0x4000f90	       0xfb6542407	               movzx edx, byte [rsp + 7]	       112	intel_psr.c	FUNCTION_5
0x4000f95	          0xc0ea03	                               shr dl, 3	       112	intel_psr.c	FUNCTION_5
0x4000f98	          0x83e201	                              and edx, 1	       112	intel_psr.c	FUNCTION_5
0x4000f9b	      0xe967ffffff	                           jmp 0x4000f07	       112	intel_psr.c	FUNCTION_5
0x4000fa0	       0xfb6542407	               movzx edx, byte [rsp + 7]	       102	intel_psr.c	FUNCTION_4
0x4000fa5	          0xc0ea04	                               shr dl, 4	       102	intel_psr.c	FUNCTION_4
0x4000fa8	          0x83e201	                              and edx, 1	       102	intel_psr.c	FUNCTION_4
0x4000fab	      0xe929ffffff	                           jmp 0x4000ed9	       102	intel_psr.c	FUNCTION_4
0x4000fb0	      0xe800000000	                          call 0x4000fb5	       162	intel_psr.c	FUNCTION_7
intel_psr_single_frame_update	FOR,0:IF,4:CALL,13:DO,0:functions,0:WHILE,0:ELSE,0:SWITCH,0	51
0x4001480	    0xf6877a060000	              test byte [rdi + 0x67a], 1	       925	intel_psr.c	FUNCTION_30	IF_1	CALL_1
0x4001487	            0x7415	                            je 0x400149e	       925	intel_psr.c	FUNCTION_30	IF_1	CALL_1
0x4001489	    0x80bf886d0000	              cmp byte [rdi + 0x6d88], 0	       925	intel_psr.c	FUNCTION_30	IF_1	CALL_1
0x4001490	            0x740c	                            je 0x400149e	       925	intel_psr.c	FUNCTION_30	IF_1	CALL_1
0x4001492	    0xf78764060000	     test dword [rdi + 0x664], 0x240000 	       932	intel_psr.c	FUNCTION_30	IF_2	CALL_3
0x400149c	            0x7502	                           jne 0x40014a0	       932	intel_psr.c	FUNCTION_30	IF_2	CALL_3
0x400149e	            0xf3c3	                                     ret	       932	intel_psr.c	FUNCTION_30	IF_2	CALL_3
0x40014a0	            0x4154	                                push r12	       920	intel_psr.c	FUNCTION_30
0x40014a2	    0x4c8da7686d00	                 lea r12, [rdi + 0x6d68]	       935	intel_psr.c	FUNCTION_30	CALL_4
0x40014a9	              0x55	                                push rbp	       920	intel_psr.c	FUNCTION_30
0x40014aa	              0x53	                                push rbx	       920	intel_psr.c	FUNCTION_30
0x40014ab	          0x4889fb	                            mov rbx, rdi	       920	intel_psr.c	FUNCTION_30
0x40014ae	            0x89f5	                            mov ebp, esi	       920	intel_psr.c	FUNCTION_30
0x40014b0	          0x4c89e7	                            mov rdi, r12	       935	intel_psr.c	FUNCTION_30	CALL_4
0x40014b3	      0xe800000000	                          call 0x40014b8	       935	intel_psr.c	FUNCTION_30	CALL_4
0x40014b8	    0x488b83906d00	          mov rax, qword [rbx + 0x6d90] 	       936	intel_psr.c	FUNCTION_30	IF_3
0x40014bf	          0x4885c0	                           test rax, rax	       936	intel_psr.c	FUNCTION_30	IF_3
0x40014c2	            0x7437	                            je 0x40014fb	       936	intel_psr.c	FUNCTION_30	IF_3
0x40014c4	    0x488b8048ffff	             mov rax, qword [rax - 0xb8]	       942	intel_psr.c	FUNCTION_30	CALL_7
0x40014cb	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       944	intel_psr.c	FUNCTION_30	IF_4	CALL_8
0x40014d2	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       944	intel_psr.c	FUNCTION_30	IF_4	CALL_8
0x40014d9	    0x8b80b0040000	           mov eax, dword [rax + 0x4b0] 	       942	intel_psr.c	FUNCTION_30	CALL_7
0x40014df	    0x8d0cc5000000	                        lea ecx, [rax*8]	       944	intel_psr.c	FUNCTION_30	IF_4	CALL_8
0x40014e6	          0x48d3e6	                             shl rsi, cl	       944	intel_psr.c	FUNCTION_30	IF_4	CALL_8
0x40014e9	          0x8d48f9	                      lea ecx, [rax - 7]	       944	intel_psr.c	FUNCTION_30	IF_4	CALL_8
0x40014ec	            0x21ee	                            and esi, ebp	       944	intel_psr.c	FUNCTION_30	IF_4	CALL_8
0x40014ee	            0xf7d9	                                 neg ecx	       944	intel_psr.c	FUNCTION_30	IF_4	CALL_8
0x40014f0	          0xc1e103	                              shl ecx, 3	       944	intel_psr.c	FUNCTION_30	IF_4	CALL_8
0x40014f3	          0x48d3ea	                             shr rdx, cl	       944	intel_psr.c	FUNCTION_30	IF_4	CALL_8
0x40014f6	          0x4885d6	                           test rsi, rdx	       944	intel_psr.c	FUNCTION_30	IF_4	CALL_8
0x40014f9	            0x750c	                           jne 0x4001507	       944	intel_psr.c	FUNCTION_30	IF_4	CALL_8
0x40014fb	              0x5b	                                 pop rbx	       954	intel_psr.c	FUNCTION_30
0x40014fc	          0x4c89e7	                            mov rdi, r12	       953	intel_psr.c	FUNCTION_30	CALL_13
0x40014ff	              0x5d	                                 pop rbp	       954	intel_psr.c	FUNCTION_30
0x4001500	            0x415c	                                 pop r12	       954	intel_psr.c	FUNCTION_30
0x4001502	      0xe900000000	                           jmp 0x4001507	       953	intel_psr.c	FUNCTION_30	CALL_13
0x4001507	          0xc1e00c	                            shl eax, 0xc	       945	intel_psr.c	FUNCTION_30	IF_4	CALL_10
0x400150a	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	       945	intel_psr.c	FUNCTION_30	IF_4	CALL_10
0x4001511	          0x4889df	                            mov rdi, rbx	       945	intel_psr.c	FUNCTION_30	IF_4	CALL_10
0x4001514	    0x8da890001e00	               lea ebp, [rax + 0x1e0090]	       945	intel_psr.c	FUNCTION_30	IF_4	CALL_10
0x400151a	      0xba01000000	                              mov edx, 1	       945	intel_psr.c	FUNCTION_30	IF_4	CALL_10
0x400151f	            0x89ee	                            mov esi, ebp	       945	intel_psr.c	FUNCTION_30	IF_4	CALL_10
0x4001521	      0xe800000000	                          call 0x4001526	       945	intel_psr.c	FUNCTION_30	IF_4	CALL_10
0x4001526	             0xc80	                             or al, 0x80	       951	intel_psr.c	FUNCTION_30	IF_4	CALL_12
0x4001528	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       951	intel_psr.c	FUNCTION_30	IF_4	CALL_12
0x400152f	      0xb901000000	                              mov ecx, 1	       951	intel_psr.c	FUNCTION_30	IF_4	CALL_12
0x4001534	            0x89c2	                            mov edx, eax	       951	intel_psr.c	FUNCTION_30	IF_4	CALL_12
0x4001536	            0x89ee	                            mov esi, ebp	       951	intel_psr.c	FUNCTION_30	IF_4	CALL_12
0x4001538	          0x4889df	                            mov rdi, rbx	       951	intel_psr.c	FUNCTION_30	IF_4	CALL_12
0x400153b	      0xe800000000	                          call 0x4001540	       951	intel_psr.c	FUNCTION_30	IF_4	CALL_12
0x4001540	            0xebb9	                           jmp 0x40014fb	       951	intel_psr.c	FUNCTION_30	IF_4	CALL_12
vlv_psr_activate	FOR,0:IF,0:CALL,7:DO,0:functions,0:WHILE,0:ELSE,0:SWITCH,0	24
0x40000e0	            0x4154	                                push r12	       315	intel_psr.c	FUNCTION_16
0x40000e2	              0x55	                                push rbp	       315	intel_psr.c	FUNCTION_16
0x40000e3	              0x53	                                push rbx	       315	intel_psr.c	FUNCTION_16
0x40000e4	    0x488b9748ffff	             mov rdx, qword [rdi - 0xb8]	       320	intel_psr.c	FUNCTION_16	CALL_3
0x40000eb	    0x488baff8feff	            mov rbp, qword [rdi - 0x108]	       317	intel_psr.c	FUNCTION_16
0x40000f2	    0x8b9ab0040000	           mov ebx, dword [rdx + 0x4b0] 	       328	intel_psr.c	FUNCTION_16	CALL_7
0x40000f8	      0xba01000000	                              mov edx, 1	       328	intel_psr.c	FUNCTION_16	CALL_7
0x40000fd	    0x4c8ba5180800	           mov r12, qword [rbp + 0x818] 	       328	intel_psr.c	FUNCTION_16	CALL_7
0x4000104	          0x4889ef	                            mov rdi, rbp	       328	intel_psr.c	FUNCTION_16	CALL_7
0x4000107	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	       328	intel_psr.c	FUNCTION_16	CALL_7
0x400010e	          0xc1e30c	                            shl ebx, 0xc	       328	intel_psr.c	FUNCTION_16	CALL_7
0x4000111	    0x81c390001e00	                       add ebx, 0x1e0090	       328	intel_psr.c	FUNCTION_16	CALL_7
0x4000117	            0x89de	                            mov esi, ebx	       328	intel_psr.c	FUNCTION_16	CALL_7
0x4000119	      0xe800000000	                          call 0x400011e	       328	intel_psr.c	FUNCTION_16	CALL_7
0x400011e	          0x80cc01	                                or ah, 1	       328	intel_psr.c	FUNCTION_16	CALL_7
0x4000121	            0x89de	                            mov esi, ebx	       328	intel_psr.c	FUNCTION_16	CALL_7
0x4000123	          0x4889ef	                            mov rdi, rbp	       328	intel_psr.c	FUNCTION_16	CALL_7
0x4000126	            0x89c2	                            mov edx, eax	       328	intel_psr.c	FUNCTION_16	CALL_7
0x4000128	      0xb901000000	                              mov ecx, 1	       328	intel_psr.c	FUNCTION_16	CALL_7
0x400012d	      0xe800000000	                          call 0x4000132	       328	intel_psr.c	FUNCTION_16	CALL_7
0x4000132	              0x5b	                                 pop rbx	       330	intel_psr.c	FUNCTION_16
0x4000133	              0x5d	                                 pop rbp	       330	intel_psr.c	FUNCTION_16
0x4000134	            0x415c	                                 pop r12	       330	intel_psr.c	FUNCTION_16
0x4000136	              0xc3	                                     ret	       330	intel_psr.c	FUNCTION_16
vlv_psr_setup_vsc	FOR,0:IF,0:CALL,6:DO,0:functions,0:WHILE,0:ELSE,0:SWITCH,0	24
0x4000040	              0x55	                                push rbp	       177	intel_psr.c	FUNCTION_9
0x4000041	              0x53	                                push rbx	       177	intel_psr.c	FUNCTION_9
0x4000042	      0xba01000000	                              mov edx, 1	       183	intel_psr.c	FUNCTION_9	CALL_4
0x4000047	          0x488b2e	                    mov rbp, qword [rsi]	       178	intel_psr.c	FUNCTION_9	CALL_1
0x400004a	    0x8bb5b0040000	           mov esi, dword [rbp + 0x4b0] 	       183	intel_psr.c	FUNCTION_9	CALL_4
0x4000050	        0x488b5d00	                    mov rbx, qword [rbp]	       179	intel_psr.c	FUNCTION_9	CALL_2
0x4000054	          0xc1e60c	                            shl esi, 0xc	       183	intel_psr.c	FUNCTION_9	CALL_4
0x4000057	          0x4889df	                            mov rdi, rbx	       183	intel_psr.c	FUNCTION_9	CALL_4
0x400005a	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       183	intel_psr.c	FUNCTION_9	CALL_4
0x4000061	    0x81c6a0001e00	                       add esi, 0x1e00a0	       183	intel_psr.c	FUNCTION_9	CALL_4
0x4000067	      0xe800000000	                          call 0x400006c	       183	intel_psr.c	FUNCTION_9	CALL_4
0x400006c	    0x8bb5b0040000	           mov esi, dword [rbp + 0x4b0] 	       186	intel_psr.c	FUNCTION_9	CALL_6
0x4000072	      0x25ffffff3f	                     and eax, 0x3fffffff	       184	intel_psr.c	FUNCTION_9
0x4000077	          0x4889df	                            mov rdi, rbx	       186	intel_psr.c	FUNCTION_9	CALL_6
0x400007a	            0x89c2	                            mov edx, eax	       184	intel_psr.c	FUNCTION_9
0x400007c	      0xb901000000	                              mov ecx, 1	       186	intel_psr.c	FUNCTION_9	CALL_6
0x4000081	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       186	intel_psr.c	FUNCTION_9	CALL_6
0x4000088	    0x81ca00000040	                      or edx, 0x40000000	       186	intel_psr.c	FUNCTION_9	CALL_6
0x400008e	          0xc1e60c	                            shl esi, 0xc	       186	intel_psr.c	FUNCTION_9	CALL_6
0x4000091	    0x81c6a0001e00	                       add esi, 0x1e00a0	       186	intel_psr.c	FUNCTION_9	CALL_6
0x4000097	      0xe800000000	                          call 0x400009c	       186	intel_psr.c	FUNCTION_9	CALL_6
0x400009c	              0x5b	                                 pop rbx	       187	intel_psr.c	FUNCTION_9
0x400009d	              0x5d	                                 pop rbp	       187	intel_psr.c	FUNCTION_9
0x400009e	              0xc3	                                     ret	       187	intel_psr.c	FUNCTION_9
intel_psr_compute_config	FOR,0:IF,9:CALL,22:DO,0:functions,0:WHILE,0:ELSE,0:SWITCH,0	134
0x4000fc0	            0x4154	                                push r12	       495	intel_psr.c	FUNCTION_21
0x4000fc2	              0x55	                                push rbp	       495	intel_psr.c	FUNCTION_21
0x4000fc3	              0x53	                                push rbx	       495	intel_psr.c	FUNCTION_21
0x4000fc4	    0x488b9ff8feff	            mov rbx, qword [rdi - 0x108]	       497	intel_psr.c	FUNCTION_21	CALL_2
0x4000fcb	    0xf6837a060000	              test byte [rbx + 0x67a], 1	       502	intel_psr.c	FUNCTION_21	IF_1	CALL_3
0x4000fd2	     0xf84b3000000	                            je 0x400108b	       502	intel_psr.c	FUNCTION_21	IF_1	CALL_3
0x4000fd8	    0x80bb886d0000	              cmp byte [rbx + 0x6d88], 0	       502	intel_psr.c	FUNCTION_21	IF_1	CALL_3
0x4000fdf	     0xf84a6000000	                            je 0x400108b	       502	intel_psr.c	FUNCTION_21	IF_1	CALL_3
0x4000fe5	    0x8b1500000000	            mov edx, dword [0x04000feb] 	       505	intel_psr.c	FUNCTION_21	IF_2
0x4000feb	            0x85d2	                           test edx, edx	       505	intel_psr.c	FUNCTION_21	IF_2
0x4000fed	     0xf8401010000	                            je 0x40010f4	       505	intel_psr.c	FUNCTION_21	IF_2
0x4000ff3	    0xf68377060000	          test byte [rbx + 0x677], 0x40 	       517	intel_psr.c	FUNCTION_21	IF_3	CALL_5
0x4000ffa	            0x740e	                            je 0x400100a	       517	intel_psr.c	FUNCTION_21	IF_3	CALL_5
0x4000ffc	    0x8b876cffffff	             mov eax, dword [rdi - 0x94]	       517	intel_psr.c	FUNCTION_21	IF_3	CALL_5
0x4001002	            0x85c0	                           test eax, eax	       517	intel_psr.c	FUNCTION_21	IF_3	CALL_5
0x4001004	     0xf850a010000	                           jne 0x4001114	       517	intel_psr.c	FUNCTION_21	IF_3	CALL_5
0x400100a	    0x8b8364060000	           mov eax, dword [rbx + 0x664] 	       522	intel_psr.c	FUNCTION_21	IF_4	CALL_8
0x4001010	      0xa900002400	                      test eax, 0x240000	       522	intel_psr.c	FUNCTION_21	IF_4	CALL_8
0x4001015	            0x740d	                            je 0x4001024	       522	intel_psr.c	FUNCTION_21	IF_4	CALL_8
0x4001017	    0x80bbfe6d0000	              cmp byte [rbx + 0x6dfe], 0	       522	intel_psr.c	FUNCTION_21	IF_4	CALL_8
0x400101e	     0xf84fc000000	                            je 0x4001120	       522	intel_psr.c	FUNCTION_21	IF_4	CALL_8
0x4001024	      0xa900000800	                       test eax, 0x80000	       528	intel_psr.c	FUNCTION_21	IF_5	CALL_10
0x4001029	          0x4989f4	                            mov r12, rsi	       528	intel_psr.c	FUNCTION_21	IF_5	CALL_10
0x400102c	          0x4889fd	                            mov rbp, rdi	       528	intel_psr.c	FUNCTION_21	IF_5	CALL_10
0x400102f	            0x755f	                           jne 0x4001090	       528	intel_psr.c	FUNCTION_21	IF_5	CALL_10
0x4001031	        0x488d7d27	                   lea rdi, [rbp + 0x27]	       541	intel_psr.c	FUNCTION_21	CALL_16
0x4001035	      0xe800000000	                          call 0x400103a	       541	intel_psr.c	FUNCTION_21	CALL_16
0x400103a	            0x85c0	                           test eax, eax	       542	intel_psr.c	FUNCTION_21	IF_7
0x400103c	            0x89c3	                            mov ebx, eax	       541	intel_psr.c	FUNCTION_21	CALL_16
0x400103e	     0xf8891010000	                            js 0x40011d5	       542	intel_psr.c	FUNCTION_21	IF_7
0x4001044	      0x498d7c2418	                   lea rdi, [r12 + 0x18]	       498	intel_psr.c	FUNCTION_21
0x4001049	            0x89c6	                            mov esi, eax	       548	intel_psr.c	FUNCTION_21	IF_8	CALL_18
0x400104b	      0xe800000000	                          call 0x4001050	       548	intel_psr.c	FUNCTION_21	IF_8	CALL_18
0x4001050	    0x418b8c24c800	            mov ecx, dword [r12 + 0xc8] 	       549	intel_psr.c	FUNCTION_21	IF_8
0x4001058	            0x89ca	                            mov edx, ecx	       548	intel_psr.c	FUNCTION_21	IF_8	CALL_18
0x400105a	            0xf7d2	                                 not edx	       548	intel_psr.c	FUNCTION_21	IF_8	CALL_18
0x400105c	    0x41039424dc00	             add edx, dword [r12 + 0xdc]	       548	intel_psr.c	FUNCTION_21	IF_8	CALL_18
0x4001064	            0x39d0	                            cmp eax, edx	       548	intel_psr.c	FUNCTION_21	IF_8	CALL_18
0x4001066	     0xf8f91000000	                            jg 0x40010fd	       548	intel_psr.c	FUNCTION_21	IF_8	CALL_18
0x400106c	        0x807d3a00	                cmp byte [rbp + 0x3a], 0	       555	intel_psr.c	FUNCTION_21	IF_9
0x4001070	    0x48c7c6000000	                              mov rsi, 0	       556	intel_psr.c	FUNCTION_21	IF_9	CALL_20
0x4001077	     0xf88b3000000	                            js 0x4001130	       555	intel_psr.c	FUNCTION_21	IF_9
0x400107d	              0x5b	                                 pop rbx	       563	intel_psr.c	FUNCTION_21
0x400107e	              0x5d	                                 pop rbp	       563	intel_psr.c	FUNCTION_21
0x400107f	            0x415c	                                 pop r12	       563	intel_psr.c	FUNCTION_21
0x4001081	      0xbf04000000	                              mov edi, 4	       518	intel_psr.c	FUNCTION_21	IF_3	CALL_6
0x4001086	      0xe900000000	                           jmp 0x400108b	       518	intel_psr.c	FUNCTION_21	IF_3	CALL_6
0x400108b	              0x5b	                                 pop rbx	       563	intel_psr.c	FUNCTION_21
0x400108c	              0x5d	                                 pop rbp	       563	intel_psr.c	FUNCTION_21
0x400108d	            0x415c	                                 pop r12	       563	intel_psr.c	FUNCTION_21
0x400108f	              0xc3	                                     ret	       563	intel_psr.c	FUNCTION_21
0x4001090	    0x8b863c020000	           mov eax, dword [rsi + 0x23c] 	       529	intel_psr.c	FUNCTION_21	IF_5	CALL_12
0x4001096	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	       529	intel_psr.c	FUNCTION_21	IF_5	CALL_12
0x400109c	          0x4889df	                            mov rdi, rbx	       529	intel_psr.c	FUNCTION_21	IF_5	CALL_12
0x400109f	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	       529	intel_psr.c	FUNCTION_21	IF_5	CALL_12
0x40010a6	    0x8b8483800600	   mov eax, dword [rbx + rax*4 + 0x680] 	       529	intel_psr.c	FUNCTION_21	IF_5	CALL_12
0x40010ad	    0x2b8380060000	            sub eax, dword [rbx + 0x680]	       529	intel_psr.c	FUNCTION_21	IF_5	CALL_12
0x40010b3	    0x8db410200007	          lea esi, [rax + rdx + 0x70020]	       529	intel_psr.c	FUNCTION_21	IF_5	CALL_12
0x40010ba	      0xba01000000	                              mov edx, 1	       529	intel_psr.c	FUNCTION_21	IF_5	CALL_12
0x40010bf	      0xe800000000	                          call 0x40010c4	       529	intel_psr.c	FUNCTION_21	IF_5	CALL_12
0x40010c4	            0x85c0	                           test eax, eax	       528	intel_psr.c	FUNCTION_21	IF_5	CALL_10
0x40010c6	    0x48c7c6000000	                              mov rsi, 0	       531	intel_psr.c	FUNCTION_21	IF_5	CALL_13
0x40010cd	            0x78ae	                            js 0x400107d	       528	intel_psr.c	FUNCTION_21	IF_5	CALL_10
0x40010cf	    0xf68366060000	              test byte [rbx + 0x666], 8	       535	intel_psr.c	FUNCTION_21	IF_6	CALL_14
0x40010d6	     0xf8455ffffff	                            je 0x4001031	       535	intel_psr.c	FUNCTION_21	IF_6	CALL_14
0x40010dc	    0x41f684249c00	           test byte [r12 + 0x9c], 0x10 	       535	intel_psr.c	FUNCTION_21	IF_6	CALL_14
0x40010e5	    0x48c7c6000000	                              mov rsi, 0	       537	intel_psr.c	FUNCTION_21	IF_6	CALL_15
0x40010ec	     0xf843fffffff	                            je 0x4001031	       535	intel_psr.c	FUNCTION_21	IF_6	CALL_14
0x40010f2	            0xeb89	                           jmp 0x400107d	       535	intel_psr.c	FUNCTION_21	IF_6	CALL_14
0x40010f4	    0x48c7c6000000	                              mov rsi, 0	       506	intel_psr.c	FUNCTION_21	IF_2	CALL_4
0x40010fb	            0xeb80	                           jmp 0x400107d	       506	intel_psr.c	FUNCTION_21	IF_2	CALL_4
0x40010fd	            0x89da	                            mov edx, ebx	       550	intel_psr.c	FUNCTION_21	IF_8	CALL_19
0x40010ff	    0x48c7c6000000	                              mov rsi, 0	       550	intel_psr.c	FUNCTION_21	IF_8	CALL_19
0x4001106	              0x5b	                                 pop rbx	       563	intel_psr.c	FUNCTION_21
0x4001107	              0x5d	                                 pop rbp	       563	intel_psr.c	FUNCTION_21
0x4001108	            0x415c	                                 pop r12	       563	intel_psr.c	FUNCTION_21
0x400110a	      0xbf04000000	                              mov edi, 4	       550	intel_psr.c	FUNCTION_21	IF_8	CALL_19
0x400110f	      0xe900000000	                           jmp 0x4001114	       550	intel_psr.c	FUNCTION_21	IF_8	CALL_19
0x4001114	    0x48c7c6000000	                              mov rsi, 0	       518	intel_psr.c	FUNCTION_21	IF_3	CALL_6
0x400111b	      0xe95dffffff	                           jmp 0x400107d	       518	intel_psr.c	FUNCTION_21	IF_3	CALL_6
0x4001120	              0x5b	                                 pop rbx	       563	intel_psr.c	FUNCTION_21
0x4001121	              0x5d	                                 pop rbp	       563	intel_psr.c	FUNCTION_21
0x4001122	            0x415c	                                 pop r12	       563	intel_psr.c	FUNCTION_21
0x4001124	    0x48c7c7000000	                              mov rdi, 0	       524	intel_psr.c	FUNCTION_21	IF_4	CALL_9
0x400112b	      0xe900000000	                           jmp 0x4001130	       524	intel_psr.c	FUNCTION_21	IF_4	CALL_9
0x4001130	    0x41c684240903	               mov byte [r12 + 0x309], 1	       560	intel_psr.c	FUNCTION_21
0x4001139	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       453	intel_psr.c	FUNCTION_20	CALL_2
0x4001140	    0x80b8fc6d0000	              cmp byte [rax + 0x6dfc], 0	       463	intel_psr.c	FUNCTION_20	IF_1
0x4001147	     0xf84a9000000	                            je 0x40011f6	       463	intel_psr.c	FUNCTION_20	IF_1
0x400114d	    0x80b85c060000	               cmp byte [rax + 0x65c], 9	       466	intel_psr.c	FUNCTION_20	IF_2	CALL_4
0x4001154	     0xf87ae000000	                            ja 0x4001208	       466	intel_psr.c	FUNCTION_20	IF_2	CALL_4
0x400115a	    0xf68067060000	              test byte [rax + 0x667], 2	       466	intel_psr.c	FUNCTION_20	IF_2	CALL_4
0x4001161	     0xf85a1000000	                           jne 0x4001208	       466	intel_psr.c	FUNCTION_20	IF_2	CALL_4
0x4001167	     0xfb7905a0600	          movzx edx, word [rax + 0x65a] 	       469	intel_psr.c	FUNCTION_20	ELSE_1	IF_3	CALL_5
0x400116e	      0x6681e20001	                           and dx, 0x100	       469	intel_psr.c	FUNCTION_20	ELSE_1	IF_3	CALL_5
0x4001173	        0x6683fa01	                               cmp dx, 1	       471	intel_psr.c	FUNCTION_20	ELSE_1	IF_3
0x4001177	          0x4519c9	                            sbb r9d, r9d	       471	intel_psr.c	FUNCTION_20	ELSE_1	IF_3
0x400117a	          0x41f7d1	                                 not r9d	       471	intel_psr.c	FUNCTION_20	ELSE_1	IF_3
0x400117d	    0x4181e1000900	                          and r9d, 0x900	       471	intel_psr.c	FUNCTION_20	ELSE_1	IF_3
0x4001184	        0x6683fa01	                               cmp dx, 1	       471	intel_psr.c	FUNCTION_20	ELSE_1	IF_3
0x4001188	          0x4519c0	                            sbb r8d, r8d	       471	intel_psr.c	FUNCTION_20	ELSE_1	IF_3
0x400118b	          0x41f7d0	                                 not r8d	       471	intel_psr.c	FUNCTION_20	ELSE_1	IF_3
0x400118e	    0x4181e0380e00	                          and r8d, 0xe38	       471	intel_psr.c	FUNCTION_20	ELSE_1	IF_3
0x4001195	    0x418b9424ac00	            mov edx, dword [r12 + 0xac] 	       471	intel_psr.c	FUNCTION_20	ELSE_1	IF_3
0x400119d	          0x4439c2	                            cmp edx, r8d	       474	intel_psr.c	FUNCTION_20	IF_4
0x40011a0	            0x7f43	                            jg 0x40011e5	       474	intel_psr.c	FUNCTION_20	IF_4
0x40011a2	          0x4439c9	                            cmp ecx, r9d	       474	intel_psr.c	FUNCTION_20	IF_4
0x40011a5	            0x7f3e	                            jg 0x40011e5	       474	intel_psr.c	FUNCTION_20	IF_4
0x40011a7	    0x80b8ff6d0000	              cmp byte [rax + 0x6dff], 0	       485	intel_psr.c	FUNCTION_20	IF_5
0x40011ae	            0x7469	                            je 0x4001219	       485	intel_psr.c	FUNCTION_20	IF_5
0x40011b0	    0x41c684240a03	               mov byte [r12 + 0x30a], 1	       561	intel_psr.c	FUNCTION_21	CALL_21
0x40011b9	    0x48c7c2000000	                              mov rdx, 0	       562	intel_psr.c	FUNCTION_21	CALL_22
0x40011c0	              0x5b	                                 pop rbx	       563	intel_psr.c	FUNCTION_21
0x40011c1	              0x5d	                                 pop rbp	       563	intel_psr.c	FUNCTION_21
0x40011c2	            0x415c	                                 pop r12	       563	intel_psr.c	FUNCTION_21
0x40011c4	    0x48c7c6000000	                              mov rsi, 0	       562	intel_psr.c	FUNCTION_21	CALL_22
0x40011cb	      0xbf04000000	                              mov edi, 4	       562	intel_psr.c	FUNCTION_21	CALL_22
0x40011d0	      0xe900000000	                           jmp 0x40011d5	       562	intel_psr.c	FUNCTION_21	CALL_22
0x40011d5	         0xfb65528	           movzx edx, byte [rbp + 0x28] 	       543	intel_psr.c	FUNCTION_21	IF_7	CALL_17
0x40011d9	    0x48c7c6000000	                              mov rsi, 0	       543	intel_psr.c	FUNCTION_21	IF_7	CALL_17
0x40011e0	      0xe921ffffff	                           jmp 0x4001106	       543	intel_psr.c	FUNCTION_21	IF_7	CALL_17
0x40011e5	    0x48c7c6000000	                              mov rsi, 0	       475	intel_psr.c	FUNCTION_20	IF_4	CALL_6
0x40011ec	      0xbf04000000	                              mov edi, 4	       475	intel_psr.c	FUNCTION_20	IF_4	CALL_6
0x40011f1	      0xe800000000	                          call 0x40011f6	       475	intel_psr.c	FUNCTION_20	IF_4	CALL_6
0x40011f6	    0x41c684240a03	               mov byte [r12 + 0x30a], 0	       561	intel_psr.c	FUNCTION_21	CALL_21
0x40011ff	    0x48c7c2000000	                              mov rdx, 0	       562	intel_psr.c	FUNCTION_21	CALL_22
0x4001206	            0xebb8	                           jmp 0x40011c0	       562	intel_psr.c	FUNCTION_21	CALL_22
0x4001208	    0x41b900090000	                          mov r9d, 0x900	       468	intel_psr.c	FUNCTION_20	IF_2
0x400120e	    0x41b800100000	                         mov r8d, 0x1000	       467	intel_psr.c	FUNCTION_20	IF_2
0x4001214	      0xe97cffffff	                           jmp 0x4001195	       467	intel_psr.c	FUNCTION_20	IF_2
0x4001219	    0x48c7c6000000	                              mov rsi, 0	       486	intel_psr.c	FUNCTION_20	IF_5	CALL_7
0x4001220	      0xbf04000000	                              mov edi, 4	       486	intel_psr.c	FUNCTION_20	IF_5	CALL_7
0x4001225	      0xe800000000	                          call 0x400122a	       486	intel_psr.c	FUNCTION_20	IF_5	CALL_7
0x400122a	            0xebca	                           jmp 0x40011f6	       486	intel_psr.c	FUNCTION_20	IF_5	CALL_7
hsw_psr_activate	FOR,0:IF,1:CALL,4:DO,0:functions,0:WHILE,0:ELSE,1:SWITCH,0	120
0x40004f0	            0x4154	                                push r12	       432	intel_psr.c	FUNCTION_19
0x40004f2	              0x55	                                push rbp	       432	intel_psr.c	FUNCTION_19
0x40004f3	          0x4989fc	                            mov r12, rdi	       432	intel_psr.c	FUNCTION_19
0x40004f6	              0x53	                                push rbx	       432	intel_psr.c	FUNCTION_19
0x40004f7	        0x4883ec10	                           sub rsp, 0x10	       432	intel_psr.c	FUNCTION_19
0x40004fb	    0x488b9ff8feff	            mov rbx, qword [rdi - 0x108]	       434	intel_psr.c	FUNCTION_19
0x4000502	    0x65488b042528	                mov rax, qword gs:[0x28]	       432	intel_psr.c	FUNCTION_19
0x400050b	      0x4889442408	                mov qword [rsp + 8], rax	       432	intel_psr.c	FUNCTION_19
0x4000510	            0x31c0	                            xor eax, eax	       432	intel_psr.c	FUNCTION_19
0x4000512	    0x80bbfc6d0000	              cmp byte [rbx + 0x6dfc], 0	       443	intel_psr.c	FUNCTION_19	IF_1
0x4000519	     0xf85ff000000	                           jne 0x400061e	       443	intel_psr.c	FUNCTION_19	IF_1
0x400051f	    0x83bb304d0000	            cmp dword [rbx + 0x4d30], 6 	       346	intel_psr.c	FUNCTION_17	CALL_3
0x4000526	      0xbd06000000	                              mov ebp, 6	       346	intel_psr.c	FUNCTION_17	CALL_3
0x400052b	    0x8b8b384d0000	          mov ecx, dword [rbx + 0x4d38] 	       358	intel_psr.c	FUNCTION_17	IF_3
0x4000531	     0xf4dab304d00	        cmovge ebp, dword [rbx + 0x4d30]	       346	intel_psr.c	FUNCTION_17	CALL_3
0x4000538	            0x89ea	                            mov edx, ebp	       350	intel_psr.c	FUNCTION_17
0x400053a	    0x81cd0000f089	                      or ebp, 0x89f00000	       350	intel_psr.c	FUNCTION_17
0x4000540	    0x81ca0000f081	                      or edx, 0x81f00000	       350	intel_psr.c	FUNCTION_17
0x4000546	    0x80bbfe6d0000	              cmp byte [rbx + 0x6dfe], 0	       350	intel_psr.c	FUNCTION_17
0x400054d	           0xf44ea	                          cmove ebp, edx	       350	intel_psr.c	FUNCTION_17
0x4000550	          0x83f905	                              cmp ecx, 5	       358	intel_psr.c	FUNCTION_17	IF_3
0x4000553	     0xf8f91000000	                            jg 0x40005ea	       358	intel_psr.c	FUNCTION_17	IF_3
0x4000559	          0x83f901	                              cmp ecx, 1	       360	intel_psr.c	FUNCTION_17	ELSE_1	IF_4
0x400055c	     0xf8e71010000	                           jle 0x40006d3	       360	intel_psr.c	FUNCTION_17	ELSE_1	IF_4
0x4000562	    0x8b8b3c4d0000	          mov ecx, dword [rbx + 0x4d3c] 	       367	intel_psr.c	FUNCTION_17	IF_6
0x4000568	          0x83f905	                              cmp ecx, 5	       367	intel_psr.c	FUNCTION_17	IF_6
0x400056b	     0xf8e8b000000	                           jle 0x40005fc	       367	intel_psr.c	FUNCTION_17	IF_6
0x4000571	    0x81cd00020000	                           or ebp, 0x200	       368	intel_psr.c	FUNCTION_17	IF_6
0x4000577	          0x4c89e7	                            mov rdi, r12	       376	intel_psr.c	FUNCTION_17	IF_9	CALL_5
0x400057a	      0xe800000000	                          call 0x400057f	       376	intel_psr.c	FUNCTION_17	IF_9	CALL_5
0x400057f	            0x84c0	                             test al, al	       376	intel_psr.c	FUNCTION_17	IF_9	CALL_5
0x4000581	            0x740c	                            je 0x400058f	       376	intel_psr.c	FUNCTION_17	IF_9	CALL_5
0x4000583	    0x41807c241811	            cmp byte [r12 + 0x18], 0x11 	      1021	drm_dp_helper.h	FUNCTION_39
0x4000589	     0xf8705010000	                            ja 0x4000694	      1021	drm_dp_helper.h	FUNCTION_39
0x400058f	    0x8bb350460000	          mov esi, dword [rbx + 0x4650] 	       382	intel_psr.c	FUNCTION_17	CALL_7
0x4000595	      0xba01000000	                              mov edx, 1	       382	intel_psr.c	FUNCTION_17	CALL_7
0x400059a	          0x4889df	                            mov rdi, rbx	       382	intel_psr.c	FUNCTION_17	CALL_7
0x400059d	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       382	intel_psr.c	FUNCTION_17	CALL_7
0x40005a4	      0xe800000000	                          call 0x40005a9	       382	intel_psr.c	FUNCTION_17	CALL_7
0x40005a9	            0x89c2	                            mov edx, eax	       382	intel_psr.c	FUNCTION_17	CALL_7
0x40005ab	    0x8bb350460000	          mov esi, dword [rbx + 0x4650] 	       383	intel_psr.c	FUNCTION_17	CALL_8
0x40005b1	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       383	intel_psr.c	FUNCTION_17	CALL_8
0x40005b8	    0x81e200000020	                     and edx, 0x20000000	       383	intel_psr.c	FUNCTION_17	CALL_8
0x40005be	      0xb901000000	                              mov ecx, 1	       383	intel_psr.c	FUNCTION_17	CALL_8
0x40005c3	          0x4889df	                            mov rdi, rbx	       383	intel_psr.c	FUNCTION_17	CALL_8
0x40005c6	             0x9ea	                             or edx, ebp	       383	intel_psr.c	FUNCTION_17	CALL_8
0x40005c8	      0xe800000000	                          call 0x40005cd	       383	intel_psr.c	FUNCTION_17	CALL_8
0x40005cd	      0x488b442408	                mov rax, qword [rsp + 8]	       447	intel_psr.c	FUNCTION_19
0x40005d2	    0x654833042528	                xor rax, qword gs:[0x28]	       447	intel_psr.c	FUNCTION_19
0x40005db	     0xf8505010000	                           jne 0x40006e6	       447	intel_psr.c	FUNCTION_19
0x40005e1	        0x4883c410	                           add rsp, 0x10	       447	intel_psr.c	FUNCTION_19
0x40005e5	              0x5b	                                 pop rbx	       447	intel_psr.c	FUNCTION_19
0x40005e6	              0x5d	                                 pop rbp	       447	intel_psr.c	FUNCTION_19
0x40005e7	            0x415c	                                 pop r12	       447	intel_psr.c	FUNCTION_19
0x40005e9	              0xc3	                                     ret	       447	intel_psr.c	FUNCTION_19
0x40005ea	    0x8b8b3c4d0000	          mov ecx, dword [rbx + 0x4d3c] 	       367	intel_psr.c	FUNCTION_17	IF_6
0x40005f0	          0x83cd20	                            or ebp, 0x20	       359	intel_psr.c	FUNCTION_17	IF_3
0x40005f3	          0x83f905	                              cmp ecx, 5	       367	intel_psr.c	FUNCTION_17	IF_6
0x40005f6	     0xf8f75ffffff	                            jg 0x4000571	       367	intel_psr.c	FUNCTION_17	IF_6
0x40005fc	          0x83f901	                              cmp ecx, 1	       369	intel_psr.c	FUNCTION_17	ELSE_4	IF_7
0x40005ff	     0xf8f72ffffff	                            jg 0x4000577	       369	intel_psr.c	FUNCTION_17	ELSE_4	IF_7
0x4000605	            0x89ee	                            mov esi, ebp	       372	intel_psr.c	FUNCTION_17	ELSE_5	IF_8
0x4000607	    0x81cd00030000	                           or ebp, 0x300	       372	intel_psr.c	FUNCTION_17	ELSE_5	IF_8
0x400060d	    0x81ce00010000	                           or esi, 0x100	       372	intel_psr.c	FUNCTION_17	ELSE_5	IF_8
0x4000613	          0x83f901	                              cmp ecx, 1	       372	intel_psr.c	FUNCTION_17	ELSE_5	IF_8
0x4000616	           0xf44ee	                          cmove ebp, esi	       372	intel_psr.c	FUNCTION_17	ELSE_5	IF_8
0x4000619	      0xe959ffffff	                           jmp 0x4000577	       372	intel_psr.c	FUNCTION_17	ELSE_5	IF_8
0x400061e	    0x83bb304d0000	            cmp dword [rbx + 0x4d30], 6 	       398	intel_psr.c	FUNCTION_18	CALL_3
0x4000625	      0xba06000000	                              mov edx, 6	       398	intel_psr.c	FUNCTION_18	CALL_3
0x400062a	    0x488dbfb00000	                   lea rdi, [rdi + 0xb0]	       410	intel_psr.c	FUNCTION_18	IF_1	CALL_4
0x4000631	     0xf4d93304d00	        cmovge edx, dword [rbx + 0x4d30]	       398	intel_psr.c	FUNCTION_18	CALL_3
0x4000638	      0xb901000000	                              mov ecx, 1	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x400063d	      0xbe09200000	                         mov esi, 0x2009	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000642	    0x81ca000000c0	                      or edx, 0xc0000000	       407	intel_psr.c	FUNCTION_18
0x4000648	            0x89d5	                            mov ebp, edx	       407	intel_psr.c	FUNCTION_18
0x400064a	      0x488d542407	                      lea rdx, [rsp + 7]	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x400064f	      0xe800000000	                          call 0x4000654	      1142	drm_dp_helper.h	FUNCTION_43	CALL_1
0x4000654	        0x4883f801	                              cmp rax, 1	       410	intel_psr.c	FUNCTION_18	IF_1	CALL_4
0x4000658	            0x7462	                            je 0x40006bc	       410	intel_psr.c	FUNCTION_18	IF_1	CALL_4
0x400065a	      0xc644240700	                   mov byte [rsp + 7], 0	       415	intel_psr.c	FUNCTION_18	ELSE_1
0x400065f	      0xba10000000	                           mov edx, 0x10	       415	intel_psr.c	FUNCTION_18	ELSE_1
0x4000664	    0x8b833c4d0000	          mov eax, dword [rbx + 0x4d3c] 	       419	intel_psr.c	FUNCTION_18	IF_2
0x400066a	             0x9ea	                             or edx, ebp	       417	intel_psr.c	FUNCTION_18	CALL_5
0x400066c	          0x83f805	                              cmp eax, 5	       419	intel_psr.c	FUNCTION_18	IF_2
0x400066f	            0x7f46	                            jg 0x40006b7	       419	intel_psr.c	FUNCTION_18	IF_2
0x4000671	          0x83f801	                              cmp eax, 1	       421	intel_psr.c	FUNCTION_18	ELSE_2	IF_3
0x4000674	            0x7e31	                           jle 0x40006a7	       421	intel_psr.c	FUNCTION_18	ELSE_2	IF_3
0x4000676	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       428	intel_psr.c	FUNCTION_18	CALL_6
0x400067d	      0xb901000000	                              mov ecx, 1	       428	intel_psr.c	FUNCTION_18	CALL_6
0x4000682	      0xbe00f90600	                        mov esi, 0x6f900	       428	intel_psr.c	FUNCTION_18	CALL_6
0x4000687	          0x4889df	                            mov rdi, rbx	       428	intel_psr.c	FUNCTION_18	CALL_6
0x400068a	      0xe800000000	                          call 0x400068f	       428	intel_psr.c	FUNCTION_18	CALL_6
0x400068f	      0xe939ffffff	                           jmp 0x40005cd	       428	intel_psr.c	FUNCTION_18	CALL_6
0x4000694	            0x89e8	                            mov eax, ebp	       378	intel_psr.c	FUNCTION_17	IF_9
0x4000696	          0x80cc08	                                or ah, 8	       378	intel_psr.c	FUNCTION_17	IF_9
0x4000699	    0x41f644241a40	           test byte [r12 + 0x1a], 0x40 	       378	intel_psr.c	FUNCTION_17	IF_9
0x400069f	           0xf45e8	                         cmovne ebp, eax	       378	intel_psr.c	FUNCTION_17	IF_9
0x40006a2	      0xe9e8feffff	                           jmp 0x400058f	       378	intel_psr.c	FUNCTION_17	IF_9
0x40006a7	            0x89d1	                            mov ecx, edx	       424	intel_psr.c	FUNCTION_18	ELSE_3	IF_4
0x40006a9	          0x80ce03	                                or dh, 3	       424	intel_psr.c	FUNCTION_18	ELSE_3	IF_4
0x40006ac	          0x80cd01	                                or ch, 1	       424	intel_psr.c	FUNCTION_18	ELSE_3	IF_4
0x40006af	          0x83f801	                              cmp eax, 1	       424	intel_psr.c	FUNCTION_18	ELSE_3	IF_4
0x40006b2	           0xf44d1	                          cmove edx, ecx	       424	intel_psr.c	FUNCTION_18	ELSE_3	IF_4
0x40006b5	            0xebbf	                           jmp 0x4000676	       424	intel_psr.c	FUNCTION_18	ELSE_3	IF_4
0x40006b7	          0x80ce02	                                or dh, 2	       420	intel_psr.c	FUNCTION_18	IF_2
0x40006ba	            0xebba	                           jmp 0x4000676	       420	intel_psr.c	FUNCTION_18	IF_2
0x40006bc	       0xfb6442407	               movzx eax, byte [rsp + 7]	       413	intel_psr.c	FUNCTION_18	IF_1
0x40006c1	          0x83e00f	                            and eax, 0xf	       413	intel_psr.c	FUNCTION_18	IF_1
0x40006c4	           0xfb6d0	                           movzx edx, al	       413	intel_psr.c	FUNCTION_18	IF_1
0x40006c7	        0x88442407	                  mov byte [rsp + 7], al	       413	intel_psr.c	FUNCTION_18	IF_1
0x40006cb	          0x83c201	                              add edx, 1	       413	intel_psr.c	FUNCTION_18	IF_1
0x40006ce	          0xc1e204	                              shl edx, 4	       413	intel_psr.c	FUNCTION_18	IF_1
0x40006d1	            0xeb91	                           jmp 0x4000664	       413	intel_psr.c	FUNCTION_18	IF_1
0x40006d3	            0x89ee	                            mov esi, ebp	       363	intel_psr.c	FUNCTION_17	ELSE_2	IF_5
0x40006d5	          0x83cd30	                            or ebp, 0x30	       363	intel_psr.c	FUNCTION_17	ELSE_2	IF_5
0x40006d8	          0x83ce10	                            or esi, 0x10	       363	intel_psr.c	FUNCTION_17	ELSE_2	IF_5
0x40006db	          0x83f901	                              cmp ecx, 1	       363	intel_psr.c	FUNCTION_17	ELSE_2	IF_5
0x40006de	           0xf44ee	                          cmove ebp, esi	       363	intel_psr.c	FUNCTION_17	ELSE_2	IF_5
0x40006e1	      0xe97cfeffff	                           jmp 0x4000562	       363	intel_psr.c	FUNCTION_17	ELSE_2	IF_5
0x40006e6	      0xe800000000	                          call 0x40006eb	       447	intel_psr.c	FUNCTION_19
intel_psr_disable	FOR,0:IF,3:CALL,10:DO,0:functions,0:WHILE,0:ELSE,0:SWITCH,0	53
0x4001380	            0x4154	                                push r12	       764	intel_psr.c	FUNCTION_27
0x4001382	              0x55	                                push rbp	       764	intel_psr.c	FUNCTION_27
0x4001383	              0x53	                                push rbx	       764	intel_psr.c	FUNCTION_27
0x4001384	        0x4883ec18	                           sub rsp, 0x18	       764	intel_psr.c	FUNCTION_27
0x4001388	    0x65488b042528	                mov rax, qword gs:[0x28]	       764	intel_psr.c	FUNCTION_27
0x4001391	      0x4889442410	             mov qword [rsp + 0x10], rax	       764	intel_psr.c	FUNCTION_27
0x4001396	            0x31c0	                            xor eax, eax	       764	intel_psr.c	FUNCTION_27
0x4001398	    0x80be09030000	               cmp byte [rsi + 0x309], 0	       769	intel_psr.c	FUNCTION_27	IF_1
0x400139f	            0x7428	                            je 0x40013c9	       769	intel_psr.c	FUNCTION_27	IF_1
0x40013a1	    0x488b9ff8feff	            mov rbx, qword [rdi - 0x108]	       766	intel_psr.c	FUNCTION_27
0x40013a8	          0x4889fd	                            mov rbp, rdi	       766	intel_psr.c	FUNCTION_27
0x40013ab	    0xf6837a060000	              test byte [rbx + 0x67a], 1	       772	intel_psr.c	FUNCTION_27	IF_2	CALL_4
0x40013b2	            0x7532	                           jne 0x40013e6	       772	intel_psr.c	FUNCTION_27	IF_2	CALL_4
0x40013b4	    0x48c7c6000000	                              mov rsi, 0	       772	intel_psr.c	FUNCTION_27	IF_2	CALL_4
0x40013bb	    0x48c7c7000000	                              mov rdi, 0	       772	intel_psr.c	FUNCTION_27	IF_2	CALL_4
0x40013c2	      0xe800000000	                          call 0x40013c7	       772	intel_psr.c	FUNCTION_27	IF_2	CALL_4
0x40013c7	             0xf0b	                                     ud2	       772	intel_psr.c	FUNCTION_27	IF_2	CALL_4
0x40013c9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       790	intel_psr.c	FUNCTION_27
0x40013ce	    0x654833042528	                xor rax, qword gs:[0x28]	       790	intel_psr.c	FUNCTION_27
0x40013d7	     0xf8593000000	                           jne 0x4001470	       790	intel_psr.c	FUNCTION_27
0x40013dd	        0x4883c418	                           add rsp, 0x18	       790	intel_psr.c	FUNCTION_27
0x40013e1	              0x5b	                                 pop rbx	       790	intel_psr.c	FUNCTION_27
0x40013e2	              0x5d	                                 pop rbp	       790	intel_psr.c	FUNCTION_27
0x40013e3	            0x415c	                                 pop r12	       790	intel_psr.c	FUNCTION_27
0x40013e5	              0xc3	                                     ret	       790	intel_psr.c	FUNCTION_27
0x40013e6	    0x80bb886d0000	              cmp byte [rbx + 0x6d88], 0	       772	intel_psr.c	FUNCTION_27	IF_2	CALL_4
0x40013ed	            0x74c5	                            je 0x40013b4	       772	intel_psr.c	FUNCTION_27	IF_2	CALL_4
0x40013ef	    0x4c8da3686d00	                 lea r12, [rbx + 0x6d68]	       775	intel_psr.c	FUNCTION_27	CALL_5
0x40013f6	        0x48893424	                    mov qword [rsp], rsi	       775	intel_psr.c	FUNCTION_27	CALL_5
0x40013fa	          0x4c89e7	                            mov rdi, r12	       775	intel_psr.c	FUNCTION_27	CALL_5
0x40013fd	      0xe800000000	                          call 0x4001402	       775	intel_psr.c	FUNCTION_27	CALL_5
0x4001402	    0x4883bb906d00	             cmp qword [rbx + 0x6d90], 0	       776	intel_psr.c	FUNCTION_27	IF_3
0x400140a	        0x488b3424	                    mov rsi, qword [rsp]	       776	intel_psr.c	FUNCTION_27	IF_3
0x400140e	            0x7453	                            je 0x4001463	       776	intel_psr.c	FUNCTION_27	IF_3
0x4001410	    0x488b83106e00	          mov rax, qword [rbx + 0x6e10] 	       781	intel_psr.c	FUNCTION_27	CALL_7
0x4001417	          0x4889ef	                            mov rdi, rbp	       781	intel_psr.c	FUNCTION_27	CALL_7
0x400141a	      0xe800000000	                          call 0x400141f	       781	intel_psr.c	FUNCTION_27	CALL_7
0x400141f	    0x488dbdb00000	                   lea rdi, [rbp + 0xb0]	       784	intel_psr.c	FUNCTION_27	CALL_8
0x4001426	      0x488d54240f	                    lea rdx, [rsp + 0xf]	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x400142b	      0xb901000000	                              mov ecx, 1	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x4001430	      0xbe70010000	                          mov esi, 0x170	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x4001435	      0xc644240f00	                 mov byte [rsp + 0xf], 0	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x400143a	      0xe800000000	                          call 0x400143f	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x400143f	          0x4c89e7	                            mov rdi, r12	       787	intel_psr.c	FUNCTION_27	CALL_9
0x4001442	    0x48c783906d00	            mov qword [rbx + 0x6d90], 0 	       786	intel_psr.c	FUNCTION_27
0x400144d	      0xe800000000	                          call 0x4001452	       787	intel_psr.c	FUNCTION_27	CALL_9
0x4001452	    0x488dbba06d00	                 lea rdi, [rbx + 0x6da0]	       789	intel_psr.c	FUNCTION_27	CALL_10
0x4001459	      0xe800000000	                          call 0x400145e	       789	intel_psr.c	FUNCTION_27	CALL_10
0x400145e	      0xe966ffffff	                           jmp 0x40013c9	       789	intel_psr.c	FUNCTION_27	CALL_10
0x4001463	          0x4c89e7	                            mov rdi, r12	       777	intel_psr.c	FUNCTION_27	IF_3	CALL_6
0x4001466	      0xe800000000	                          call 0x400146b	       777	intel_psr.c	FUNCTION_27	IF_3	CALL_6
0x400146b	      0xe959ffffff	                           jmp 0x40013c9	       778	intel_psr.c	FUNCTION_27	IF_3
0x4001470	      0xe800000000	                          call 0x4001475	       790	intel_psr.c	FUNCTION_27
intel_psr_invalidate	FOR,0:IF,3:CALL,8:DO,0:functions,0:WHILE,0:ELSE,0:SWITCH,0	41
0x4001550	    0xf6877a060000	              test byte [rdi + 0x67a], 1	       974	intel_psr.c	FUNCTION_31	IF_1	CALL_1
0x4001557	            0x7409	                            je 0x4001562	       974	intel_psr.c	FUNCTION_31	IF_1	CALL_1
0x4001559	    0x80bf886d0000	              cmp byte [rdi + 0x6d88], 0	       974	intel_psr.c	FUNCTION_31	IF_1	CALL_1
0x4001560	            0x7502	                           jne 0x4001564	       974	intel_psr.c	FUNCTION_31	IF_1	CALL_1
0x4001562	            0xf3c3	                                     ret	       974	intel_psr.c	FUNCTION_31	IF_1	CALL_1
0x4001564	            0x4154	                                push r12	       970	intel_psr.c	FUNCTION_31
0x4001566	    0x4c8da7686d00	                 lea r12, [rdi + 0x6d68]	       977	intel_psr.c	FUNCTION_31	CALL_2
0x400156d	              0x55	                                push rbp	       970	intel_psr.c	FUNCTION_31
0x400156e	              0x53	                                push rbx	       970	intel_psr.c	FUNCTION_31
0x400156f	          0x4889fb	                            mov rbx, rdi	       970	intel_psr.c	FUNCTION_31
0x4001572	            0x89f5	                            mov ebp, esi	       970	intel_psr.c	FUNCTION_31
0x4001574	          0x4c89e7	                            mov rdi, r12	       977	intel_psr.c	FUNCTION_31	CALL_2
0x4001577	      0xe800000000	                          call 0x400157c	       977	intel_psr.c	FUNCTION_31	CALL_2
0x400157c	    0x488b83906d00	          mov rax, qword [rbx + 0x6d90] 	       978	intel_psr.c	FUNCTION_31	IF_2
0x4001583	          0x4885c0	                           test rax, rax	       978	intel_psr.c	FUNCTION_31	IF_2
0x4001586	            0x7444	                            je 0x40015cc	       978	intel_psr.c	FUNCTION_31	IF_2
0x4001588	    0x488b8048ffff	             mov rax, qword [rax - 0xb8]	       984	intel_psr.c	FUNCTION_31	CALL_5
0x400158f	      0xbe01000000	                              mov esi, 1	       986	intel_psr.c	FUNCTION_31	CALL_6
0x4001594	    0x8b80b0040000	           mov eax, dword [rax + 0x4b0] 	       984	intel_psr.c	FUNCTION_31	CALL_5
0x400159a	    0x8d0cc5000000	                        lea ecx, [rax*8]	       986	intel_psr.c	FUNCTION_31	CALL_6
0x40015a1	          0x48d3e6	                             shl rsi, cl	       986	intel_psr.c	FUNCTION_31	CALL_6
0x40015a4	          0x8d48f9	                      lea ecx, [rax - 7]	       986	intel_psr.c	FUNCTION_31	CALL_6
0x40015a7	            0xf7de	                                 neg esi	       986	intel_psr.c	FUNCTION_31	CALL_6
0x40015a9	            0x89c8	                            mov eax, ecx	       986	intel_psr.c	FUNCTION_31	CALL_6
0x40015ab	            0xf7d8	                                 neg eax	       986	intel_psr.c	FUNCTION_31	CALL_6
0x40015ad	    0x8d0cc5000000	                        lea ecx, [rax*8]	       986	intel_psr.c	FUNCTION_31	CALL_6
0x40015b4	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       986	intel_psr.c	FUNCTION_31	CALL_6
0x40015bb	          0x48d3e8	                             shr rax, cl	       986	intel_psr.c	FUNCTION_31	CALL_6
0x40015be	            0x21f0	                            and eax, esi	       986	intel_psr.c	FUNCTION_31	CALL_6
0x40015c0	            0x21e8	                            and eax, ebp	       986	intel_psr.c	FUNCTION_31	CALL_6
0x40015c2	     0x983f86d0000	            or dword [rbx + 0x6df8], eax	       987	intel_psr.c	FUNCTION_31
0x40015c8	            0x85c0	                           test eax, eax	       989	intel_psr.c	FUNCTION_31	IF_3
0x40015ca	            0x750c	                           jne 0x40015d8	       989	intel_psr.c	FUNCTION_31	IF_3
0x40015cc	              0x5b	                                 pop rbx	       993	intel_psr.c	FUNCTION_31
0x40015cd	          0x4c89e7	                            mov rdi, r12	       992	intel_psr.c	FUNCTION_31	CALL_8
0x40015d0	              0x5d	                                 pop rbp	       993	intel_psr.c	FUNCTION_31
0x40015d1	            0x415c	                                 pop r12	       993	intel_psr.c	FUNCTION_31
0x40015d3	      0xe900000000	                           jmp 0x40015d8	       992	intel_psr.c	FUNCTION_31	CALL_8
0x40015d8	          0x4889df	                            mov rdi, rbx	       990	intel_psr.c	FUNCTION_31	CALL_7
0x40015db	      0xe860ecffff	                 call sym.intel_psr_exit	       990	intel_psr.c	FUNCTION_31	CALL_7
0x40015e0	            0xebea	                           jmp 0x40015cc	       990	intel_psr.c	FUNCTION_31	CALL_7
hsw_psr_enable_sink	FOR,1:IF,3:CALL,14:DO,0:functions,0:WHILE,0:ELSE,1:SWITCH,0	117
0x40006f0	            0x4157	                                push r15	       250	intel_psr.c	FUNCTION_14
0x40006f2	            0x4156	                                push r14	       250	intel_psr.c	FUNCTION_14
0x40006f4	            0x31f6	                            xor esi, esi	       269	intel_psr.c	FUNCTION_14	CALL_4
0x40006f6	            0x4155	                                push r13	       250	intel_psr.c	FUNCTION_14
0x40006f8	            0x4154	                                push r12	       250	intel_psr.c	FUNCTION_14
0x40006fa	              0x55	                                push rbp	       250	intel_psr.c	FUNCTION_14
0x40006fb	              0x53	                                push rbx	       250	intel_psr.c	FUNCTION_14
0x40006fc	          0x4889fb	                            mov rbx, rdi	       250	intel_psr.c	FUNCTION_14
0x40006ff	    0x488dabb00000	                   lea rbp, [rbx + 0xb0]	       273	intel_psr.c	FUNCTION_14	IF_1	CALL_5
0x4000706	        0x4883ec20	                           sub rsp, 0x20	       250	intel_psr.c	FUNCTION_14
0x400070a	    0x4c8bb7f8feff	            mov r14, qword [rdi - 0x108]	       252	intel_psr.c	FUNCTION_14
0x4000711	    0x448ba76cffff	            mov r12d, dword [rdi - 0x94]	       263	intel_psr.c	FUNCTION_14
0x4000718	    0x65488b042528	                mov rax, qword gs:[0x28]	       250	intel_psr.c	FUNCTION_14
0x4000721	      0x4889442418	             mov qword [rsp + 0x18], rax	       250	intel_psr.c	FUNCTION_14
0x4000726	            0x31c0	                            xor eax, eax	       250	intel_psr.c	FUNCTION_14
0x4000728	    0x488b87280a00	           mov rax, qword [rdi + 0xa28] 	       269	intel_psr.c	FUNCTION_14	CALL_4
0x400072f	      0xe800000000	                          call 0x4000734	       269	intel_psr.c	FUNCTION_14	CALL_4
0x4000734	    0x4180befd6d00	              cmp byte [r14 + 0x6dfd], 0	       272	intel_psr.c	FUNCTION_14	IF_1
0x400073c	        0x89442404	                mov dword [rsp + 4], eax	       269	intel_psr.c	FUNCTION_14	CALL_4
0x4000740	     0xf8574010000	                           jne 0x40008ba	       272	intel_psr.c	FUNCTION_14	IF_1
0x4000746	    0x4180befc6d00	              cmp byte [r14 + 0x6dfc], 0	       277	intel_psr.c	FUNCTION_14	IF_2
0x400074e	            0x740e	                            je 0x400075e	       277	intel_psr.c	FUNCTION_14	IF_2
0x4000750	    0x4180be016e00	              cmp byte [r14 + 0x6e01], 0	       277	intel_psr.c	FUNCTION_14	IF_2
0x4000758	     0xf857d010000	                           jne 0x40008db	       277	intel_psr.c	FUNCTION_14	IF_2
0x400075e	    0x4180befe6d00	              cmp byte [r14 + 0x6dfe], 0	       281	intel_psr.c	FUNCTION_14	IF_3
0x4000766	     0xf842d010000	                            je 0x4000899	       281	intel_psr.c	FUNCTION_14	IF_3
0x400076c	      0x488d542416	                   lea rdx, [rsp + 0x16]	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x4000771	      0xb901000000	                              mov ecx, 1	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x4000776	      0xbe70010000	                          mov esi, 0x170	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x400077b	          0x4889ef	                            mov rdi, rbp	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x400077e	      0xc644241603	                mov byte [rsp + 0x16], 3	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x4000783	      0xe800000000	                          call 0x4000788	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x4000788	    0x4180be5c0600	               cmp byte [r14 + 0x65c], 8	       234	intel_psr.c	FUNCTION_12	IF_1	CALL_1
0x4000790	     0xf86f0000000	                           jbe 0x4000886	       234	intel_psr.c	FUNCTION_12	IF_1	CALL_1
0x4000796	    0x418b966c0600	           mov edx, dword [r14 + 0x66c] 	       235	intel_psr.c	FUNCTION_12	CALL_2
0x400079d	          0x4489e0	                           mov eax, r12d	       235	intel_psr.c	FUNCTION_12	CALL_2
0x40007a0	          0xc1e008	                              shl eax, 8	       235	intel_psr.c	FUNCTION_12	CALL_2
0x40007a3	    0x8d8402104006	          lea eax, [rdx + rax + 0x64010]	       235	intel_psr.c	FUNCTION_12	CALL_2
0x40007aa	        0x8944240c	              mov dword [rsp + 0xc], eax	       235	intel_psr.c	FUNCTION_12	CALL_2
0x40007ae	        0x41c1e408	                             shl r12d, 8	       244	intel_psr.c	ELSE_1	FUNCTION_13	CALL_2
0x40007b2	    0x48c7c5000000	                              mov rbp, 0	       244	intel_psr.c	ELSE_1	FUNCTION_13	CALL_2
0x40007b9	    0x41bd05000000	                             mov r13d, 5	       292	intel_psr.c	FUNCTION_14	FOR_1	CALL_11
0x40007bf	      0x4489642408	               mov dword [rsp + 8], r12d	       244	intel_psr.c	ELSE_1	FUNCTION_13	CALL_2
0x40007c4	          0x4531e4	                          xor r12d, r12d	       291	intel_psr.c	FUNCTION_14	FOR_1
0x40007c7	          0x4489ee	                           mov esi, r13d	       292	intel_psr.c	FUNCTION_14	FOR_1	CALL_11
0x40007ca	          0x4889ef	                            mov rdi, rbp	       292	intel_psr.c	FUNCTION_14	FOR_1	CALL_11
0x40007cd	    0x4d8bbe180800	           mov r15, qword [r14 + 0x818] 	       292	intel_psr.c	FUNCTION_14	FOR_1	CALL_11
0x40007d4	          0x4429e6	                           sub esi, r12d	       292	intel_psr.c	FUNCTION_14	FOR_1	CALL_11
0x40007d7	      0xe800000000	                          call 0x40007dc	       292	intel_psr.c	FUNCTION_14	FOR_1	CALL_11
0x40007dc	            0x89c2	                            mov edx, eax	       292	intel_psr.c	FUNCTION_14	FOR_1	CALL_11
0x40007de	          0x4489e0	                           mov eax, r12d	       292	intel_psr.c	FUNCTION_14	FOR_1	CALL_11
0x40007e1	          0xc1f802	                              sar eax, 2	       292	intel_psr.c	FUNCTION_14	FOR_1	CALL_11
0x40007e4	    0x4180be5c0600	               cmp byte [r14 + 0x65c], 8	       243	intel_psr.c	ELSE_1	FUNCTION_13	IF_1	CALL_1
0x40007ec	     0xf8687000000	                           jbe 0x4000879	       243	intel_psr.c	ELSE_1	FUNCTION_13	IF_1	CALL_1
0x40007f2	    0x418b8e6c0600	           mov ecx, dword [r14 + 0x66c] 	       244	intel_psr.c	ELSE_1	FUNCTION_13	CALL_2
0x40007f9	        0x8b7c2408	                mov edi, dword [rsp + 8]	       244	intel_psr.c	ELSE_1	FUNCTION_13	CALL_2
0x40007fd	    0x8d8c0f144006	          lea ecx, [rdi + rcx + 0x64014]	       244	intel_psr.c	ELSE_1	FUNCTION_13	CALL_2
0x4000804	          0x8d3481	                  lea esi, [rcx + rax*4]	       244	intel_psr.c	ELSE_1	FUNCTION_13	CALL_2
0x4000807	        0x4183c404	                             add r12d, 4	       291	intel_psr.c	FUNCTION_14	FOR_1
0x400080b	      0xb901000000	                              mov ecx, 1	       292	intel_psr.c	FUNCTION_14	FOR_1	CALL_11
0x4000810	          0x4c89f7	                            mov rdi, r14	       292	intel_psr.c	FUNCTION_14	FOR_1	CALL_11
0x4000813	        0x4883c504	                              add rbp, 4	       292	intel_psr.c	FUNCTION_14	FOR_1	CALL_11
0x4000817	      0xe800000000	                          call 0x400081c	       292	intel_psr.c	FUNCTION_14	FOR_1	CALL_11
0x400081c	        0x4183fc08	                             cmp r12d, 8	       291	intel_psr.c	FUNCTION_14	FOR_1
0x4000820	            0x75a5	                           jne 0x40007c7	       291	intel_psr.c	FUNCTION_14	FOR_1
0x4000822	            0x31f6	                            xor esi, esi	       295	intel_psr.c	FUNCTION_14	CALL_13
0x4000824	        0x8b4c2404	                mov ecx, dword [rsp + 4]	       295	intel_psr.c	FUNCTION_14	CALL_13
0x4000828	      0xba05000000	                              mov edx, 5	       295	intel_psr.c	FUNCTION_14	CALL_13
0x400082d	          0x4889df	                            mov rdi, rbx	       295	intel_psr.c	FUNCTION_14	CALL_13
0x4000830	    0x488b83300a00	           mov rax, qword [rbx + 0xa30] 	       295	intel_psr.c	FUNCTION_14	CALL_13
0x4000837	      0xe800000000	                          call 0x400083c	       295	intel_psr.c	FUNCTION_14	CALL_13
0x400083c	    0x4d8b8e180800	            mov r9, qword [r14 + 0x818] 	       297	intel_psr.c	FUNCTION_14	CALL_14
0x4000843	            0x89c2	                            mov edx, eax	       297	intel_psr.c	FUNCTION_14	CALL_14
0x4000845	      0xb901000000	                              mov ecx, 1	       297	intel_psr.c	FUNCTION_14	CALL_14
0x400084a	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       297	intel_psr.c	FUNCTION_14	CALL_14
0x400084e	          0x4c89f7	                            mov rdi, r14	       297	intel_psr.c	FUNCTION_14	CALL_14
0x4000851	      0xe800000000	                          call 0x4000856	       297	intel_psr.c	FUNCTION_14	CALL_14
0x4000856	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       298	intel_psr.c	FUNCTION_14
0x400085b	    0x654833042528	                xor rax, qword gs:[0x28]	       298	intel_psr.c	FUNCTION_14
0x4000864	     0xf8592000000	                           jne 0x40008fc	       298	intel_psr.c	FUNCTION_14
0x400086a	        0x4883c420	                           add rsp, 0x20	       298	intel_psr.c	FUNCTION_14
0x400086e	              0x5b	                                 pop rbx	       298	intel_psr.c	FUNCTION_14
0x400086f	              0x5d	                                 pop rbp	       298	intel_psr.c	FUNCTION_14
0x4000870	            0x415c	                                 pop r12	       298	intel_psr.c	FUNCTION_14
0x4000872	            0x415d	                                 pop r13	       298	intel_psr.c	FUNCTION_14
0x4000874	            0x415e	                                 pop r14	       298	intel_psr.c	FUNCTION_14
0x4000876	            0x415f	                                 pop r15	       298	intel_psr.c	FUNCTION_14
0x4000878	              0xc3	                                     ret	       298	intel_psr.c	FUNCTION_14
0x4000879	    0x418b8e504600	          mov ecx, dword [r14 + 0x4650] 	       246	intel_psr.c	FUNCTION_13	ELSE_1	CALL_3
0x4000880	        0x8d748114	          lea esi, [rcx + rax*4 + 0x14] 	       246	intel_psr.c	FUNCTION_13	ELSE_1	CALL_3
0x4000884	            0xeb81	                           jmp 0x4000807	       246	intel_psr.c	FUNCTION_13	ELSE_1	CALL_3
0x4000886	    0x418b86504600	          mov eax, dword [r14 + 0x4650] 	       237	intel_psr.c	FUNCTION_12	ELSE_1
0x400088d	          0x83c010	                           add eax, 0x10	       237	intel_psr.c	FUNCTION_12	ELSE_1
0x4000890	        0x8944240c	              mov dword [rsp + 0xc], eax	       237	intel_psr.c	FUNCTION_12	ELSE_1
0x4000894	      0xe915ffffff	                           jmp 0x40007ae	       237	intel_psr.c	FUNCTION_12	ELSE_1
0x4000899	      0x488d542417	                   lea rdx, [rsp + 0x17]	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x400089e	      0xb901000000	                              mov ecx, 1	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008a3	      0xbe70010000	                          mov esi, 0x170	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008a8	          0x4889ef	                            mov rdi, rbp	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008ab	      0xc644241701	                mov byte [rsp + 0x17], 1	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008b0	      0xe800000000	                          call 0x40008b5	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008b5	      0xe9cefeffff	                           jmp 0x4000788	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008ba	      0x488d542414	                   lea rdx, [rsp + 0x14]	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008bf	      0xb901000000	                              mov ecx, 1	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008c4	      0xbe17010000	                          mov esi, 0x117	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008c9	          0x4889ef	                            mov rdi, rbp	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008cc	      0xc644241401	                mov byte [rsp + 0x14], 1	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008d1	      0xe800000000	                          call 0x40008d6	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008d6	      0xe96bfeffff	                           jmp 0x4000746	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008db	      0x488d542415	                   lea rdx, [rsp + 0x15]	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008e0	      0xb901000000	                              mov ecx, 1	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008e5	      0xbe16010000	                          mov esi, 0x116	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008ea	          0x4889ef	                            mov rdi, rbp	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008ed	      0xc644241501	                mov byte [rsp + 0x15], 1	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008f2	      0xe800000000	                          call 0x40008f7	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008f7	      0xe962feffff	                           jmp 0x400075e	      1157	drm_dp_helper.h	FUNCTION_44	CALL_1
0x40008fc	      0xe800000000	                          call 0x4000901	       298	intel_psr.c	FUNCTION_14
