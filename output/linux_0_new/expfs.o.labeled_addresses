exportfs_encode_fh	SWITCH,0:DO,0:ELSE,0:IF,1:CALL,4:WHILE,0:FOR,0:functions,0	30
0x40002f0	              0x55	                                push rbp	       397	expfs.c	FUNCTION_11
0x40002f1	              0x53	                                push rbx	       397	expfs.c	FUNCTION_11
0x40002f2	        0x4883ec10	                           sub rsp, 0x10	       397	expfs.c	FUNCTION_11
0x40002f6	            0x85c9	                           test ecx, ecx	       402	expfs.c	FUNCTION_11	IF_1	CALL_1
0x40002f8	        0x488b5f30	            mov rbx, qword [rdi + 0x30] 	       400	expfs.c	FUNCTION_11
0x40002fc	            0x742d	                            je 0x400032b	       402	expfs.c	FUNCTION_11	IF_1	CALL_1
0x40002fe	           0xfb703	                   movzx eax, word [rbx]	       402	expfs.c	FUNCTION_11	IF_1	CALL_1
0x4000301	        0x662500f0	                          and ax, 0xf000	       402	expfs.c	FUNCTION_11	IF_1	CALL_1
0x4000305	        0x663d0040	                          cmp ax, 0x4000	       402	expfs.c	FUNCTION_11	IF_1	CALL_1
0x4000309	            0x7420	                            je 0x400032b	       402	expfs.c	FUNCTION_11	IF_1	CALL_1
0x400030b	      0x4889542408	                mov qword [rsp + 8], rdx	       402	expfs.c	FUNCTION_11	IF_1	CALL_1
0x4000310	        0x48893424	                    mov qword [rsp], rsi	       402	expfs.c	FUNCTION_11	IF_1	CALL_1
0x4000314	      0xe800000000	                          call 0x4000319	       403	expfs.c	FUNCTION_11	IF_1	CALL_2
0x4000319	          0x4889c5	                            mov rbp, rax	       403	expfs.c	FUNCTION_11	IF_1	CALL_2
0x400031c	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       408	expfs.c	FUNCTION_11	IF_1
0x4000320	        0x488b3424	                    mov rsi, qword [rsp]	       408	expfs.c	FUNCTION_11	IF_1
0x4000324	      0x488b542408	                mov rdx, qword [rsp + 8]	       408	expfs.c	FUNCTION_11	IF_1
0x4000329	            0xeb04	                           jmp 0x400032f	       408	expfs.c	FUNCTION_11	IF_1
0x400032b	            0x31c9	                            xor ecx, ecx	       400	expfs.c	FUNCTION_11
0x400032d	            0x31ed	                            xor ebp, ebp	       399	expfs.c	FUNCTION_11
0x400032f	          0x4889df	                            mov rdi, rbx	       411	expfs.c	FUNCTION_11	CALL_3
0x4000332	      0xe800000000	                          call 0x4000337	       411	expfs.c	FUNCTION_11	CALL_3
0x4000337	          0x4889ef	                            mov rdi, rbp	       412	expfs.c	FUNCTION_11	CALL_4
0x400033a	            0x89c3	                            mov ebx, eax	       411	expfs.c	FUNCTION_11	CALL_3
0x400033c	      0xe800000000	                          call 0x4000341	       412	expfs.c	FUNCTION_11	CALL_4
0x4000341	        0x4883c410	                           add rsp, 0x10	       415	expfs.c	FUNCTION_11
0x4000345	            0x89d8	                            mov eax, ebx	       415	expfs.c	FUNCTION_11
0x4000347	              0x5b	                                 pop rbx	       415	expfs.c	FUNCTION_11
0x4000348	              0x5d	                                 pop rbp	       415	expfs.c	FUNCTION_11
0x4000349	              0xc3	                                     ret	       415	expfs.c	FUNCTION_11
exportfs_get_name	SWITCH,0:DO,0:ELSE,1:IF,1:CALL,2:WHILE,0:FOR,0:functions,0	25
0x4000200	          0x4889f0	                            mov rax, rsi	        28	expfs.c	FUNCTION_1
0x4000203	        0x4883ec18	                           sub rsp, 0x18	        28	expfs.c	FUNCTION_1
0x4000207	          0x4889d6	                            mov rsi, rdx	        28	expfs.c	FUNCTION_1
0x400020a	        0x4c8b4068	              mov r8, qword [rax + 0x68]	        29	expfs.c	FUNCTION_1
0x400020e	        0x48893c24	                    mov qword [rsp], rdi	        30	expfs.c	FUNCTION_1
0x4000212	    0x65488b142528	                mov rdx, qword gs:[0x28]	        28	expfs.c	FUNCTION_1
0x400021b	      0x4889542410	             mov qword [rsp + 0x10], rdx	        28	expfs.c	FUNCTION_1
0x4000220	            0x31d2	                            xor edx, edx	        28	expfs.c	FUNCTION_1
0x4000222	      0x4889442408	                mov qword [rsp + 8], rax	        30	expfs.c	FUNCTION_1
0x4000227	          0x4889ca	                            mov rdx, rcx	        33	expfs.c	FUNCTION_1	CALL_1
0x400022a	        0x4d8b4048	               mov r8, qword [r8 + 0x48]	        29	expfs.c	FUNCTION_1
0x400022e	        0x4d8b4018	               mov r8, qword [r8 + 0x18]	        32	expfs.c	FUNCTION_1	IF_1
0x4000232	          0x4d85c0	                             test r8, r8	        32	expfs.c	FUNCTION_1	IF_1
0x4000235	            0x741d	                            je 0x4000254	        32	expfs.c	FUNCTION_1	IF_1
0x4000237	          0x4889c7	                            mov rdi, rax	        33	expfs.c	FUNCTION_1	CALL_1
0x400023a	      0xe800000000	                          call 0x400023f	        33	expfs.c	FUNCTION_1	CALL_1
0x400023f	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        36	expfs.c	FUNCTION_1
0x4000244	    0x654833142528	                xor rdx, qword gs:[0x28]	        36	expfs.c	FUNCTION_1
0x400024d	            0x750f	                           jne 0x400025e	        36	expfs.c	FUNCTION_1
0x400024f	        0x4883c418	                           add rsp, 0x18	        36	expfs.c	FUNCTION_1
0x4000253	              0xc3	                                     ret	        36	expfs.c	FUNCTION_1
0x4000254	          0x4889e7	                            mov rdi, rsp	        35	expfs.c	FUNCTION_1	CALL_2
0x4000257	      0xe8e4fdffff	                       call sym.get_name	        35	expfs.c	FUNCTION_1	CALL_2
0x400025c	            0xebe1	                           jmp 0x400023f	        35	expfs.c	FUNCTION_1	CALL_2
0x400025e	      0xe800000000	                          call 0x4000263	        36	expfs.c	FUNCTION_1
