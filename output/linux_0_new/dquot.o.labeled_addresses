__quota_error	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,4:SWITCH,0:FOR,0	48
0x4000460	              0x55	                                push rbp	       137	dquot.c	FUNCTION_1
0x4000461	          0x4889e5	                            mov rbp, rsp	       137	dquot.c	FUNCTION_1
0x4000464	            0x4156	                                push r14	       137	dquot.c	FUNCTION_1
0x4000466	            0x4155	                                push r13	       137	dquot.c	FUNCTION_1
0x4000468	            0x4154	                                push r12	       137	dquot.c	FUNCTION_1
0x400046a	            0x4152	                                push r10	       137	dquot.c	FUNCTION_1
0x400046c	        0x4c8d5510	                   lea r10, [rbp + 0x10]	       137	dquot.c	FUNCTION_1
0x4000470	              0x53	                                push rbx	       137	dquot.c	FUNCTION_1
0x4000471	          0x4889fb	                            mov rbx, rdi	       137	dquot.c	FUNCTION_1
0x4000474	    0x48c7c7000000	                              mov rdi, 0	       138	dquot.c	FUNCTION_1	IF_1	CALL_1
0x400047b	          0x4d89d6	                            mov r14, r10	       137	dquot.c	FUNCTION_1
0x400047e	          0x4989f4	                            mov r12, rsi	       137	dquot.c	FUNCTION_1
0x4000481	          0x4989d5	                            mov r13, rdx	       137	dquot.c	FUNCTION_1
0x4000484	        0x4883ec60	                           sub rsp, 0x60	       137	dquot.c	FUNCTION_1
0x4000488	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       137	dquot.c	FUNCTION_1
0x400048c	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       137	dquot.c	FUNCTION_1
0x4000490	    0x65488b042528	                mov rax, qword gs:[0x28]	       137	dquot.c	FUNCTION_1
0x4000499	        0x488945a0	             mov qword [rbp - 0x60], rax	       137	dquot.c	FUNCTION_1
0x400049d	            0x31c0	                            xor eax, eax	       137	dquot.c	FUNCTION_1
0x400049f	        0x4c894dd0	              mov qword [rbp - 0x30], r9	       137	dquot.c	FUNCTION_1
0x40004a3	      0xe800000000	                          call 0x40004a8	       138	dquot.c	FUNCTION_1	IF_1	CALL_1
0x40004a8	            0x85c0	                           test eax, eax	       138	dquot.c	FUNCTION_1	IF_1	CALL_1
0x40004aa	            0x751e	                           jne 0x40004ca	       138	dquot.c	FUNCTION_1	IF_1	CALL_1
0x40004ac	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       152	dquot.c	FUNCTION_1
0x40004b0	    0x654833042528	                xor rax, qword gs:[0x28]	       152	dquot.c	FUNCTION_1
0x40004b9	            0x7550	                           jne 0x400050b	       152	dquot.c	FUNCTION_1
0x40004bb	        0x4883c460	                           add rsp, 0x60	       152	dquot.c	FUNCTION_1
0x40004bf	              0x5b	                                 pop rbx	       152	dquot.c	FUNCTION_1
0x40004c0	            0x415a	                                 pop r10	       152	dquot.c	FUNCTION_1
0x40004c2	            0x415c	                                 pop r12	       152	dquot.c	FUNCTION_1
0x40004c4	            0x415d	                                 pop r13	       152	dquot.c	FUNCTION_1
0x40004c6	            0x415e	                                 pop r14	       152	dquot.c	FUNCTION_1
0x40004c8	              0x5d	                                 pop rbp	       152	dquot.c	FUNCTION_1
0x40004c9	              0xc3	                                     ret	       152	dquot.c	FUNCTION_1
0x40004ca	        0x488d45a8	                   lea rax, [rbp - 0x58]	       142	dquot.c	FUNCTION_1	IF_1	CALL_2
0x40004ce	    0x488db3d80300	                  lea rsi, [rbx + 0x3d8]	       148	dquot.c	FUNCTION_1	IF_1
0x40004d5	    0x488d8d78ffff	                   lea rcx, [rbp - 0x88]	       147	dquot.c	FUNCTION_1	IF_1	CALL_3
0x40004dc	          0x4c89e2	                            mov rdx, r12	       147	dquot.c	FUNCTION_1	IF_1	CALL_3
0x40004df	    0x48c7c7000000	                              mov rdi, 0	       147	dquot.c	FUNCTION_1	IF_1	CALL_3
0x40004e6	    0xc74588180000	           mov dword [rbp - 0x78], 0x18 	       142	dquot.c	FUNCTION_1	IF_1	CALL_2
0x40004ed	        0x48894598	             mov qword [rbp - 0x68], rax	       142	dquot.c	FUNCTION_1	IF_1	CALL_2
0x40004f1	        0x488d4588	                   lea rax, [rbp - 0x78]	       145	dquot.c	FUNCTION_1	IF_1
0x40004f5	        0x4c897590	             mov qword [rbp - 0x70], r14	       142	dquot.c	FUNCTION_1	IF_1	CALL_2
0x40004f9	    0x4c89ad78ffff	             mov qword [rbp - 0x88], r13	       144	dquot.c	FUNCTION_1	IF_1
0x4000500	        0x48894580	             mov qword [rbp - 0x80], rax	       145	dquot.c	FUNCTION_1	IF_1
0x4000504	      0xe800000000	                          call 0x4000509	       147	dquot.c	FUNCTION_1	IF_1	CALL_3
0x4000509	            0xeba1	                           jmp 0x40004ac	       152	dquot.c	FUNCTION_1
0x400050b	      0xe800000000	                  call sym.dquot_acquire	       152	dquot.c	FUNCTION_1
flush_warnings	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,2:SWITCH,0:FOR,1	19
0x40006e0	              0x55	                                push rbp	      1235	dquot.c	FUNCTION_51
0x40006e1	        0x488d6f48	                   lea rbp, [rdi + 0x48]	      1235	dquot.c	FUNCTION_51
0x40006e5	              0x53	                                push rbx	      1235	dquot.c	FUNCTION_51
0x40006e6	          0x4889fb	                            mov rbx, rdi	      1235	dquot.c	FUNCTION_51
0x40006e9	         0xfb75310	           movzx edx, word [rbx + 0x10] 	      1239	dquot.c	FUNCTION_51	FOR_1	IF_1
0x40006ed	          0x6685d2	                             test dx, dx	      1239	dquot.c	FUNCTION_51	FOR_1	IF_1
0x40006f0	            0x750c	                           jne 0x40006fe	      1239	dquot.c	FUNCTION_51	FOR_1	IF_1
0x40006f2	        0x4883c318	                           add rbx, 0x18	      1239	dquot.c	FUNCTION_51	FOR_1	IF_1
0x40006f6	          0x4839eb	                            cmp rbx, rbp	      1238	dquot.c	FUNCTION_51	FOR_1
0x40006f9	            0x75ee	                           jne 0x40006e9	      1238	dquot.c	FUNCTION_51	FOR_1
0x40006fb	              0x5b	                                 pop rbx	      1247	dquot.c	FUNCTION_51
0x40006fc	              0x5d	                                 pop rbp	      1247	dquot.c	FUNCTION_51
0x40006fd	              0xc3	                                     ret	      1247	dquot.c	FUNCTION_51
0x40006fe	          0x488b03	                    mov rax, qword [rbx]	      1244	dquot.c	FUNCTION_51	FOR_1	CALL_2
0x4000701	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1244	dquot.c	FUNCTION_51	FOR_1	CALL_2
0x4000705	           0xfbed2	                           movsx edx, dl	      1244	dquot.c	FUNCTION_51	FOR_1	CALL_2
0x4000708	          0x8b7010	            mov esi, dword [rax + 0x10] 	      1244	dquot.c	FUNCTION_51	FOR_1	CALL_2
0x400070b	      0xe800000000	                          call 0x4000710	      1244	dquot.c	FUNCTION_51	FOR_1	CALL_2
0x4000710	            0xebe0	                           jmp 0x40006f2	      1244	dquot.c	FUNCTION_51	FOR_1	CALL_2
dquot_get_next_id	functions,0:ELSE,0:DO,0:IF,2:WHILE,0:CALL,3:SWITCH,0:FOR,0	17
0x4000310	          0x8b4e04	                mov ecx, dword [rsi + 4]	      2123	dquot.c	FUNCTION_75	IF_1	CALL_2
0x4000313	    0x8b8700010000	           mov eax, dword [rdi + 0x100] 	       122	quotaops.h	FUNCTION_99	CALL_1
0x4000319	           0xfa3c8	                             bt eax, ecx	       157	quotaops.h	FUNCTION_105	CALL_1
0x400031c	            0x7321	                           jae 0x400033f	       157	quotaops.h	FUNCTION_105	CALL_1
0x400031e	      0xba40000000	                           mov edx, 0x40	       157	quotaops.h	FUNCTION_105	CALL_1
0x4000323	            0xd3e2	                             shl edx, cl	       157	quotaops.h	FUNCTION_105	CALL_1
0x4000325	            0x85c2	                           test edx, eax	       157	quotaops.h	FUNCTION_105	CALL_1
0x4000327	            0x7516	                           jne 0x400033f	       157	quotaops.h	FUNCTION_105	CALL_1
0x4000329	    0x488b84cf2002	   mov rax, qword [rdi + rcx*8 + 0x220] 	      2125	dquot.c	FUNCTION_75	IF_2
0x4000331	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2125	dquot.c	FUNCTION_75	IF_2
0x4000335	          0x4885c0	                           test rax, rax	      2125	dquot.c	FUNCTION_75	IF_2
0x4000338	            0x740b	                            je 0x4000345	      2125	dquot.c	FUNCTION_75	IF_2
0x400033a	      0xe900000000	                           jmp 0x400033f	      2127	dquot.c	FUNCTION_75	CALL_3
0x400033f	      0xb8fdffffff	                     mov eax, 0xfffffffd	      2124	dquot.c	FUNCTION_75	IF_1
0x4000344	              0xc3	                                     ret	      2124	dquot.c	FUNCTION_75	IF_1
0x4000345	      0xb8daffffff	                     mov eax, 0xffffffda	      2126	dquot.c	FUNCTION_75	IF_2
0x400034a	              0xc3	                                     ret	      2126	dquot.c	FUNCTION_75	IF_2
dquot_quota_on_mount	functions,0:ELSE,0:DO,0:IF,3:WHILE,0:CALL,9:SWITCH,0:FOR,0	40
0x4002f20	            0x4155	                                push r13	      2501	dquot.c	FUNCTION_82
0x4002f22	            0x4154	                                push r12	      2501	dquot.c	FUNCTION_82
0x4002f24	          0x4189d5	                           mov r13d, edx	      2501	dquot.c	FUNCTION_82
0x4002f27	              0x55	                                push rbp	      2501	dquot.c	FUNCTION_82
0x4002f28	              0x53	                                push rbx	      2501	dquot.c	FUNCTION_82
0x4002f29	          0x4889fd	                            mov rbp, rdi	      2501	dquot.c	FUNCTION_82
0x4002f2c	          0x4889f7	                            mov rdi, rsi	      2505	dquot.c	FUNCTION_82	CALL_2
0x4002f2f	          0x4889f3	                            mov rbx, rsi	      2501	dquot.c	FUNCTION_82
0x4002f32	          0x4189cc	                           mov r12d, ecx	      2501	dquot.c	FUNCTION_82
0x4002f35	      0xe800000000	                          call 0x4002f3a	      2505	dquot.c	FUNCTION_82	CALL_2
0x4002f3a	        0x488b7568	            mov rsi, qword [rbp + 0x68] 	      2505	dquot.c	FUNCTION_82	CALL_2
0x4002f3e	            0x89c2	                            mov edx, eax	      2505	dquot.c	FUNCTION_82	CALL_2
0x4002f40	          0x4889df	                            mov rdi, rbx	      2505	dquot.c	FUNCTION_82	CALL_2
0x4002f43	      0xe800000000	                          call 0x4002f48	      2505	dquot.c	FUNCTION_82	CALL_2
0x4002f48	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      2506	dquot.c	FUNCTION_82	IF_1	CALL_3
0x4002f4e	          0x4889c5	                            mov rbp, rax	      2505	dquot.c	FUNCTION_82	CALL_2
0x4002f51	            0x7724	                            ja 0x4002f77	      2506	dquot.c	FUNCTION_82	IF_1	CALL_3
0x4002f53	      0x4883783000	               cmp qword [rax + 0x30], 0	      2509	dquot.c	FUNCTION_82	IF_2	CALL_5
0x4002f58	      0xbbfeffffff	                     mov ebx, 0xfffffffe	      2510	dquot.c	FUNCTION_82	IF_2
0x4002f5d	            0x740e	                            je 0x4002f6d	      2509	dquot.c	FUNCTION_82	IF_2	CALL_5
0x4002f5f	          0x4889c7	                            mov rdi, rax	      2514	dquot.c	FUNCTION_82	CALL_6
0x4002f62	      0xe800000000	                          call 0x4002f67	      2514	dquot.c	FUNCTION_82	CALL_6
0x4002f67	            0x85c0	                           test eax, eax	      2515	dquot.c	FUNCTION_82	IF_3
0x4002f69	            0x89c3	                            mov ebx, eax	      2514	dquot.c	FUNCTION_82	CALL_6
0x4002f6b	            0x7411	                            je 0x4002f7e	      2515	dquot.c	FUNCTION_82	IF_3
0x4002f6d	          0x4889ef	                            mov rdi, rbp	      2520	dquot.c	FUNCTION_82	CALL_9
0x4002f70	      0xe800000000	                          call 0x4002f75	      2520	dquot.c	FUNCTION_82	CALL_9
0x4002f75	            0x89d8	                            mov eax, ebx	      2521	dquot.c	FUNCTION_82
0x4002f77	              0x5b	                                 pop rbx	      2522	dquot.c	FUNCTION_82
0x4002f78	              0x5d	                                 pop rbp	      2522	dquot.c	FUNCTION_82
0x4002f79	            0x415c	                                 pop r12	      2522	dquot.c	FUNCTION_82
0x4002f7b	            0x415d	                                 pop r13	      2522	dquot.c	FUNCTION_82
0x4002f7d	              0xc3	                                     ret	      2522	dquot.c	FUNCTION_82
0x4002f7e	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      2516	dquot.c	FUNCTION_82	IF_3	CALL_8
0x4002f82	      0xb909000000	                              mov ecx, 9	      2516	dquot.c	FUNCTION_82	IF_3	CALL_8
0x4002f87	          0x4489ea	                           mov edx, r13d	      2516	dquot.c	FUNCTION_82	IF_3	CALL_8
0x4002f8a	          0x4489e6	                           mov esi, r12d	      2516	dquot.c	FUNCTION_82	IF_3	CALL_8
0x4002f8d	      0xe85ef8ffff	           call sym.vfs_load_quota_inode	      2516	dquot.c	FUNCTION_82	IF_3	CALL_8
0x4002f92	            0x89c3	                            mov ebx, eax	      2516	dquot.c	FUNCTION_82	IF_3	CALL_8
0x4002f94	            0xebd7	                           jmp 0x4002f6d	      2516	dquot.c	FUNCTION_82	IF_3	CALL_8
do_proc_dqstats	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:SWITCH,0:FOR,0	34
0x4000840	            0x4156	                                push r14	      2857	dquot.c	FUNCTION_92
0x4000842	            0x4155	                                push r13	      2857	dquot.c	FUNCTION_92
0x4000844	          0x4989fe	                            mov r14, rdi	      2857	dquot.c	FUNCTION_92
0x4000847	            0x4154	                                push r12	      2857	dquot.c	FUNCTION_92
0x4000849	              0x55	                                push rbp	      2857	dquot.c	FUNCTION_92
0x400084a	          0x4989d4	                            mov r12, rdx	      2857	dquot.c	FUNCTION_92
0x400084d	              0x53	                                push rbx	      2857	dquot.c	FUNCTION_92
0x400084e	            0x89f5	                            mov ebp, esi	      2857	dquot.c	FUNCTION_92
0x4000850	          0x4989cd	                            mov r13, rcx	      2857	dquot.c	FUNCTION_92
0x4000853	        0x4883ec08	                              sub rsp, 8	      2857	dquot.c	FUNCTION_92
0x4000857	        0x488b5f08	                mov rbx, qword [rdi + 8]	      2858	dquot.c	FUNCTION_92
0x400085b	        0x4c890424	                     mov qword [rsp], r8	      2857	dquot.c	FUNCTION_92
0x400085f	    0x4881eb000000	                              sub rbx, 0	      2858	dquot.c	FUNCTION_92
0x4000866	        0x48c1fb02	                              sar rbx, 2	      2858	dquot.c	FUNCTION_92
0x400086a	            0x89db	                            mov ebx, ebx	      2862	dquot.c	FUNCTION_92	CALL_1
0x400086c	        0x488d049b	                  lea rax, [rbx + rbx*4]	      2862	dquot.c	FUNCTION_92	CALL_1
0x4000870	    0x488d3cc50000	                        lea rdi, [rax*8]	      2862	dquot.c	FUNCTION_92	CALL_1
0x4000878	      0xe800000000	                          call 0x400087d	        60	percpu_counter.h	FUNCTION_145	CALL_1
0x400087d	      0xba00000000	                              mov edx, 0	      2861	dquot.c	FUNCTION_92
0x4000882	          0x4885c0	                           test rax, rax	      2861	dquot.c	FUNCTION_92
0x4000885	        0x4c8b0424	                     mov r8, qword [rsp]	      2863	dquot.c	FUNCTION_92	CALL_2
0x4000889	        0x480f48c2	                          cmovs rax, rdx	      2861	dquot.c	FUNCTION_92
0x400088d	          0x4c89e9	                            mov rcx, r13	      2863	dquot.c	FUNCTION_92	CALL_2
0x4000890	          0x4c89e2	                            mov rdx, r12	      2863	dquot.c	FUNCTION_92	CALL_2
0x4000893	    0x89049d000000	                  mov dword [rbx*4], eax	      2861	dquot.c	FUNCTION_92
0x400089a	        0x4883c408	                              add rsp, 8	      2864	dquot.c	FUNCTION_92
0x400089e	            0x89ee	                            mov esi, ebp	      2863	dquot.c	FUNCTION_92	CALL_2
0x40008a0	              0x5b	                                 pop rbx	      2864	dquot.c	FUNCTION_92
0x40008a1	          0x4c89f7	                            mov rdi, r14	      2863	dquot.c	FUNCTION_92	CALL_2
0x40008a4	              0x5d	                                 pop rbp	      2864	dquot.c	FUNCTION_92
0x40008a5	            0x415c	                                 pop r12	      2864	dquot.c	FUNCTION_92
0x40008a7	            0x415d	                                 pop r13	      2864	dquot.c	FUNCTION_92
0x40008a9	            0x415e	                                 pop r14	      2864	dquot.c	FUNCTION_92
0x40008ab	      0xe900000000	          jmp sym.dquot_mark_dquot_dirty	      2863	dquot.c	FUNCTION_92	CALL_2
dquot_commit_info	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:SWITCH,0:FOR,0	4
0x40002f0	          0x4863c6	                         movsxd rax, esi	      2115	dquot.c	FUNCTION_74	CALL_2
0x40002f3	    0x488b84c72002	   mov rax, qword [rdi + rax*8 + 0x220] 	      2115	dquot.c	FUNCTION_74	CALL_2
0x40002fb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2115	dquot.c	FUNCTION_74	CALL_2
0x40002ff	      0xe900000000	                           jmp 0x4000304	      2115	dquot.c	FUNCTION_74	CALL_2
dquot_transfer	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,0:SWITCH,0:FOR,0	75
0x4004370	            0x4154	                                push r12	      2070	dquot.c	FUNCTION_73
0x4004372	              0x55	                                push rbp	      2070	dquot.c	FUNCTION_73
0x4004373	              0x53	                                push rbx	      2070	dquot.c	FUNCTION_73
0x4004374	        0x4883ec20	                           sub rsp, 0x20	      2070	dquot.c	FUNCTION_73
0x4004378	    0x65488b042528	                mov rax, qword gs:[0x28]	      2070	dquot.c	FUNCTION_73
0x4004381	      0x4889442418	             mov qword [rsp + 0x18], rax	      2070	dquot.c	FUNCTION_73
0x4004386	            0x31c0	                            xor eax, eax	      2070	dquot.c	FUNCTION_73
0x4004388	        0xf6470c20	            test byte [rdi + 0xc], 0x20 	      1411	dquot.c	FUNCTION_57	IF_1	CALL_1
0x400438c	    0x48c704240000	                      mov qword [rsp], 0	      2071	dquot.c	FUNCTION_73
0x4004394	    0x48c744240800	                  mov qword [rsp + 8], 0	      2071	dquot.c	FUNCTION_73
0x400439d	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2071	dquot.c	FUNCTION_73
0x40043a6	     0xf85aa000000	                           jne 0x4004456	      1411	dquot.c	FUNCTION_57	IF_1	CALL_1
0x40043ac	        0x4c8b6728	            mov r12, qword [rdi + 0x28] 	      2073	dquot.c	FUNCTION_73
0x40043b0	          0x4889fb	                            mov rbx, rdi	      2073	dquot.c	FUNCTION_73
0x40043b3	    0x418b8c240001	           mov ecx, dword [r12 + 0x100] 	       152	quotaops.h	FUNCTION_104	CALL_2
0x40043bb	            0x89ca	                            mov edx, ecx	      2076	dquot.c	FUNCTION_73	IF_1	CALL_1
0x40043bd	          0x83e107	                              and ecx, 7	      2076	dquot.c	FUNCTION_73	IF_1	CALL_1
0x40043c0	          0xc1ea06	                              shr edx, 6	      2076	dquot.c	FUNCTION_73	IF_1	CALL_1
0x40043c3	          0x83e207	                              and edx, 7	      2076	dquot.c	FUNCTION_73	IF_1	CALL_1
0x40043c6	            0xf7d2	                                 not edx	      2076	dquot.c	FUNCTION_73	IF_1	CALL_1
0x40043c8	            0x85ca	                           test edx, ecx	      2076	dquot.c	FUNCTION_73	IF_1	CALL_1
0x40043ca	     0xf8486000000	                            je 0x4004456	      2076	dquot.c	FUNCTION_73	IF_1	CALL_1
0x40043d0	            0x8b06	                    mov eax, dword [rsi]	      2079	dquot.c	FUNCTION_73	IF_2	CALL_2
0x40043d2	          0x4889f5	                            mov rbp, rsi	      2079	dquot.c	FUNCTION_73	IF_2	CALL_2
0x40043d5	            0xa802	                              test al, 2	      2079	dquot.c	FUNCTION_73	IF_2	CALL_2
0x40043d7	            0x7423	                            je 0x40043fc	      2079	dquot.c	FUNCTION_73	IF_2	CALL_2
0x40043d9	          0x8b7608	                mov esi, dword [rsi + 8]	      2079	dquot.c	FUNCTION_73	IF_2	CALL_2
0x40043dc	          0x397704	                cmp dword [rdi + 4], esi	      2079	dquot.c	FUNCTION_73	IF_2	CALL_2
0x40043df	            0x741b	                            je 0x40043fc	      2079	dquot.c	FUNCTION_73	IF_2	CALL_2
0x40043e1	          0x4c89e7	                            mov rdi, r12	      2080	dquot.c	FUNCTION_73	IF_2	CALL_4
0x40043e4	      0xe800000000	                          call 0x40043e9	      2080	dquot.c	FUNCTION_73	IF_2	CALL_4
0x40043e9	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      2081	dquot.c	FUNCTION_73	IF_2	IF_3	CALL_5
0x40043ef	     0xf8784000000	                            ja 0x4004479	      2081	dquot.c	FUNCTION_73	IF_2	IF_3	CALL_5
0x40043f5	        0x48890424	                    mov qword [rsp], rax	      2088	dquot.c	FUNCTION_73	IF_2
0x40043f9	          0x8b4500	                    mov eax, dword [rbp]	      2088	dquot.c	FUNCTION_73	IF_2
0x40043fc	            0xa804	                              test al, 4	      2090	dquot.c	FUNCTION_73	IF_5	CALL_8
0x40043fe	            0x742a	                            je 0x400442a	      2090	dquot.c	FUNCTION_73	IF_5	CALL_8
0x4004400	          0x8b750c	              mov esi, dword [rbp + 0xc]	      2090	dquot.c	FUNCTION_73	IF_5	CALL_8
0x4004403	          0x397308	                cmp dword [rbx + 8], esi	      2090	dquot.c	FUNCTION_73	IF_5	CALL_8
0x4004406	            0x7422	                            je 0x400442a	      2090	dquot.c	FUNCTION_73	IF_5	CALL_8
0x4004408	    0x48b800000000	                 movabs rax, 0x100000000	      2090	dquot.c	FUNCTION_73	IF_5	CALL_8
0x4004412	          0x4c89e7	                            mov rdi, r12	      2091	dquot.c	FUNCTION_73	IF_5	CALL_10
0x4004415	          0x4809c6	                             or rsi, rax	      2091	dquot.c	FUNCTION_73	IF_5	CALL_10
0x4004418	      0xe800000000	                          call 0x400441d	      2091	dquot.c	FUNCTION_73	IF_5	CALL_10
0x400441d	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      2092	dquot.c	FUNCTION_73	IF_5	IF_6	CALL_11
0x4004423	            0x774a	                            ja 0x400446f	      2092	dquot.c	FUNCTION_73	IF_5	IF_6	CALL_11
0x4004425	      0x4889442408	                mov qword [rsp + 8], rax	      2099	dquot.c	FUNCTION_73	IF_5
0x400442a	          0x4889e6	                            mov rsi, rsp	      2101	dquot.c	FUNCTION_73	CALL_14
0x400442d	          0x4889df	                            mov rdi, rbx	      2101	dquot.c	FUNCTION_73	CALL_14
0x4004430	      0xe800000000	                          call 0x4004435	      2101	dquot.c	FUNCTION_73	CALL_14
0x4004435	        0x488b3c24	                    mov rdi, qword [rsp]	       391	dquot.c	FUNCTION_19	CALL_1
0x4004439	            0x89c3	                            mov ebx, eax	      2101	dquot.c	FUNCTION_73	CALL_14
0x400443b	      0xe800000000	                          call 0x4004440	       391	dquot.c	FUNCTION_19	CALL_1
0x4004440	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       391	dquot.c	FUNCTION_19	CALL_1
0x4004445	      0xe800000000	                          call 0x400444a	       391	dquot.c	FUNCTION_19	CALL_1
0x400444a	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       391	dquot.c	FUNCTION_19	CALL_1
0x400444f	      0xe800000000	                          call 0x4004454	       391	dquot.c	FUNCTION_19	CALL_1
0x4004454	            0x89d8	                            mov eax, ebx	      2104	dquot.c	FUNCTION_73
0x4004456	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2105	dquot.c	FUNCTION_73
0x400445b	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      2105	dquot.c	FUNCTION_73
0x4004464	            0x7520	                           jne 0x4004486	      2105	dquot.c	FUNCTION_73
0x4004466	        0x4883c420	                           add rsp, 0x20	      2105	dquot.c	FUNCTION_73
0x400446a	              0x5b	                                 pop rbx	      2105	dquot.c	FUNCTION_73
0x400446b	              0x5d	                                 pop rbp	      2105	dquot.c	FUNCTION_73
0x400446c	            0x415c	                                 pop r12	      2105	dquot.c	FUNCTION_73
0x400446e	              0xc3	                                     ret	      2105	dquot.c	FUNCTION_73
0x400446f	        0x4883f8fd	             cmp rax, 0xfffffffffffffffd	      2093	dquot.c	FUNCTION_73	IF_5	IF_6	IF_7	CALL_12
0x4004473	            0x75c0	                           jne 0x4004435	      2093	dquot.c	FUNCTION_73	IF_5	IF_6	IF_7	CALL_12
0x4004475	            0x31c0	                            xor eax, eax	      2097	dquot.c	FUNCTION_73	IF_5	IF_6
0x4004477	            0xebac	                           jmp 0x4004425	      2097	dquot.c	FUNCTION_73	IF_5	IF_6
0x4004479	        0x4883f8fd	             cmp rax, 0xfffffffffffffffd	      2082	dquot.c	FUNCTION_73	IF_2	IF_3	IF_4	CALL_6
0x400447d	            0x75b6	                           jne 0x4004435	      2082	dquot.c	FUNCTION_73	IF_2	IF_3	IF_4	CALL_6
0x400447f	            0x31c0	                            xor eax, eax	      2086	dquot.c	FUNCTION_73	IF_2	IF_3
0x4004481	      0xe96fffffff	                           jmp 0x40043f5	      2086	dquot.c	FUNCTION_73	IF_2	IF_3
0x4004486	      0xe800000000	                  call section_end..text	      2105	dquot.c	FUNCTION_73
dquot_quota_enable	functions,0:ELSE,0:DO,0:IF,7:WHILE,0:CALL,6:SWITCH,0:FOR,2	70
0x4003090	    0xf68701010000	              test byte [rdi + 0x101], 2	      2531	dquot.c	FUNCTION_83	IF_1
0x4003097	     0xf84c2000000	                            je 0x400315f	      2531	dquot.c	FUNCTION_83	IF_1
0x400309d	            0x4157	                                push r15	      2526	dquot.c	FUNCTION_83
0x400309f	            0x4156	                                push r14	      2526	dquot.c	FUNCTION_83
0x40030a1	    0x41bf01000000	                             mov r15d, 1	      2541	dquot.c	FUNCTION_83	FOR_1	IF_4	CALL_3
0x40030a7	            0x4155	                                push r13	      2526	dquot.c	FUNCTION_83
0x40030a9	            0x4154	                                push r12	      2526	dquot.c	FUNCTION_83
0x40030ab	    0x4c8daf500100	                  lea r13, [rdi + 0x150]	      2526	dquot.c	FUNCTION_83
0x40030b2	              0x55	                                push rbp	      2526	dquot.c	FUNCTION_83
0x40030b3	              0x53	                                push rbx	      2526	dquot.c	FUNCTION_83
0x40030b4	            0x89f5	                            mov ebp, esi	      2526	dquot.c	FUNCTION_83
0x40030b6	            0x31db	                            xor ebx, ebx	      2535	dquot.c	FUNCTION_83	IF_2
0x40030b8	          0x4989fc	                            mov r12, rdi	      2535	dquot.c	FUNCTION_83	IF_2
0x40030bb	        0x4883ec08	                              sub rsp, 8	      2526	dquot.c	FUNCTION_83
0x40030bf	          0x83e5ea	                     and ebp, 0xffffffea	      2535	dquot.c	FUNCTION_83	IF_2
0x40030c2	     0xf8490000000	                            je 0x4003158	      2535	dquot.c	FUNCTION_83	IF_2
0x40030c8	            0x89df	                            mov edi, ebx	      2538	dquot.c	FUNCTION_83	FOR_1	IF_3	CALL_2
0x40030ca	          0x4189de	                           mov r14d, ebx	      2538	dquot.c	FUNCTION_83	FOR_1	IF_3	CALL_2
0x40030cd	      0xe800000000	                          call 0x40030d2	      2538	dquot.c	FUNCTION_83	FOR_1	IF_3	CALL_2
0x40030d2	            0x85c5	                           test ebp, eax	      2538	dquot.c	FUNCTION_83	FOR_1	IF_3	CALL_2
0x40030d4	            0x742f	                            je 0x4003105	      2538	dquot.c	FUNCTION_83	FOR_1	IF_3	CALL_2
0x40030d6	          0x4489f8	                           mov eax, r15d	      2541	dquot.c	FUNCTION_83	FOR_1	IF_4	CALL_3
0x40030d9	            0x89d9	                            mov ecx, ebx	      2541	dquot.c	FUNCTION_83	FOR_1	IF_4	CALL_3
0x40030db	            0xd3e0	                             shl eax, cl	      2541	dquot.c	FUNCTION_83	FOR_1	IF_4	CALL_3
0x40030dd	    0x418584240001	          test dword [r12 + 0x100], eax 	      2541	dquot.c	FUNCTION_83	FOR_1	IF_4	CALL_3
0x40030e5	            0x7471	                            je 0x4003158	      2541	dquot.c	FUNCTION_83	FOR_1	IF_4	CALL_3
0x40030e7	    0x498bbcdc3001	   mov rdi, qword [r12 + rbx*8 + 0x130] 	      2543	dquot.c	FUNCTION_83	FOR_1	CALL_4
0x40030ef	        0x418b5500	                    mov edx, dword [r13]	      2543	dquot.c	FUNCTION_83	FOR_1	CALL_4
0x40030f3	      0xb908000000	                              mov ecx, 8	      2543	dquot.c	FUNCTION_83	FOR_1	CALL_4
0x40030f8	            0x89de	                            mov esi, ebx	      2543	dquot.c	FUNCTION_83	FOR_1	CALL_4
0x40030fa	      0xe800000000	                          call 0x40030ff	      2543	dquot.c	FUNCTION_83	FOR_1	CALL_4
0x40030ff	            0x85c0	                           test eax, eax	      2546	dquot.c	FUNCTION_83	FOR_1	IF_5
0x4003101	            0x89c1	                            mov ecx, eax	      2543	dquot.c	FUNCTION_83	FOR_1	CALL_4
0x4003103	            0x7833	                            js 0x4003138	      2546	dquot.c	FUNCTION_83	FOR_1	IF_5
0x4003105	        0x4883c301	                              add rbx, 1	      2546	dquot.c	FUNCTION_83	FOR_1	IF_5
0x4003109	        0x4983c548	                           add r13, 0x48	      2546	dquot.c	FUNCTION_83	FOR_1	IF_5
0x400310d	        0x4883fb03	                              cmp rbx, 3	      2537	dquot.c	FUNCTION_83	FOR_1
0x4003111	            0x75b5	                           jne 0x40030c8	      2537	dquot.c	FUNCTION_83	FOR_1
0x4003113	            0x31c0	                            xor eax, eax	      2549	dquot.c	FUNCTION_83
0x4003115	        0x4883c408	                              add rsp, 8	      2560	dquot.c	FUNCTION_83
0x4003119	              0x5b	                                 pop rbx	      2560	dquot.c	FUNCTION_83
0x400311a	              0x5d	                                 pop rbp	      2560	dquot.c	FUNCTION_83
0x400311b	            0x415c	                                 pop r12	      2560	dquot.c	FUNCTION_83
0x400311d	            0x415d	                                 pop r13	      2560	dquot.c	FUNCTION_83
0x400311f	            0x415e	                                 pop r14	      2560	dquot.c	FUNCTION_83
0x4003121	            0x415f	                                 pop r15	      2560	dquot.c	FUNCTION_83
0x4003123	              0xc3	                                     ret	      2560	dquot.c	FUNCTION_83
0x4003124	      0xba08000000	                              mov edx, 8	      2554	dquot.c	FUNCTION_83	FOR_2	CALL_6
0x4003129	          0x4489f6	                           mov esi, r14d	      2554	dquot.c	FUNCTION_83	FOR_2	CALL_6
0x400312c	          0x4c89e7	                            mov rdi, r12	      2554	dquot.c	FUNCTION_83	FOR_2	CALL_6
0x400312f	      0xe800000000	                          call 0x4003134	      2554	dquot.c	FUNCTION_83	FOR_2	CALL_6
0x4003134	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      2554	dquot.c	FUNCTION_83	FOR_2	CALL_6
0x4003138	        0x4183ee01	                             sub r14d, 1	      2552	dquot.c	FUNCTION_83	FOR_2
0x400313c	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      2552	dquot.c	FUNCTION_83	FOR_2
0x4003140	            0x7423	                            je 0x4003165	      2552	dquot.c	FUNCTION_83	FOR_2
0x4003142	          0x4489f7	                           mov edi, r14d	      2553	dquot.c	FUNCTION_83	FOR_2	IF_6	CALL_5
0x4003145	        0x894c2404	                mov dword [rsp + 4], ecx	      2553	dquot.c	FUNCTION_83	FOR_2	IF_6	CALL_5
0x4003149	      0xe800000000	                          call 0x400314e	      2553	dquot.c	FUNCTION_83	FOR_2	IF_6	CALL_5
0x400314e	            0x85c5	                           test ebp, eax	      2553	dquot.c	FUNCTION_83	FOR_2	IF_6	CALL_5
0x4003150	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      2553	dquot.c	FUNCTION_83	FOR_2	IF_6	CALL_5
0x4003154	            0x74e2	                            je 0x4003138	      2553	dquot.c	FUNCTION_83	FOR_2	IF_6	CALL_5
0x4003156	            0xebcc	                           jmp 0x4003124	      2553	dquot.c	FUNCTION_83	FOR_2	IF_6	CALL_5
0x4003158	      0xb8eaffffff	                     mov eax, 0xffffffea	      2536	dquot.c	FUNCTION_83	IF_2
0x400315d	            0xebb6	                           jmp 0x4003115	      2536	dquot.c	FUNCTION_83	IF_2
0x400315f	      0xb8daffffff	                     mov eax, 0xffffffda	      2532	dquot.c	FUNCTION_83	IF_1
0x4003164	              0xc3	                                     ret	      2532	dquot.c	FUNCTION_83	IF_1
0x4003165	          0x83f9f0	             cmp ecx, 0xfffffffffffffff0	      2558	dquot.c	FUNCTION_83	IF_7
0x4003168	      0xb8efffffff	                     mov eax, 0xffffffef	      2558	dquot.c	FUNCTION_83	IF_7
0x400316d	           0xf45c1	                         cmovne eax, ecx	      2558	dquot.c	FUNCTION_83	IF_7
0x4003170	            0xeba3	                           jmp 0x4003115	      2558	dquot.c	FUNCTION_83	IF_7
dquot_quota_disable	functions,0:ELSE,0:DO,0:IF,7:WHILE,0:CALL,7:SWITCH,0:FOR,3	80
0x4002fa0	    0x8b8700010000	           mov eax, dword [rdi + 0x100] 	      2568	dquot.c	FUNCTION_84	IF_1
0x4002fa6	          0xf6c402	                              test ah, 2	      2568	dquot.c	FUNCTION_84	IF_1
0x4002fa9	     0xf84c6000000	                            je 0x4003075	      2568	dquot.c	FUNCTION_84	IF_1
0x4002faf	        0x40f6c615	                          test sil, 0x15	      2575	dquot.c	FUNCTION_84	IF_2
0x4002fb3	            0x4155	                                push r13	      2563	dquot.c	FUNCTION_84
0x4002fb5	            0x4154	                                push r12	      2563	dquot.c	FUNCTION_84
0x4002fb7	              0x55	                                push rbp	      2563	dquot.c	FUNCTION_84
0x4002fb8	            0x89f5	                            mov ebp, esi	      2563	dquot.c	FUNCTION_84
0x4002fba	              0x53	                                push rbx	      2563	dquot.c	FUNCTION_84
0x4002fbb	     0xf85ba000000	                           jne 0x400307b	      2575	dquot.c	FUNCTION_84	IF_2
0x4002fc1	            0x31db	                            xor ebx, ebx	      2575	dquot.c	FUNCTION_84	IF_2
0x4002fc3	    0x41bd08000000	                             mov r13d, 8	      2581	dquot.c	FUNCTION_84	FOR_1	IF_3	CALL_2
0x4002fc9	          0x4989fc	                            mov r12, rdi	      2581	dquot.c	FUNCTION_84	FOR_1	IF_3	CALL_2
0x4002fcc	          0x4489ea	                           mov edx, r13d	      2581	dquot.c	FUNCTION_84	FOR_1	IF_3	CALL_2
0x4002fcf	            0x89d9	                            mov ecx, ebx	      2581	dquot.c	FUNCTION_84	FOR_1	IF_3	CALL_2
0x4002fd1	            0xd3e2	                             shl edx, cl	      2581	dquot.c	FUNCTION_84	FOR_1	IF_3	CALL_2
0x4002fd3	            0x85c2	                           test edx, eax	      2581	dquot.c	FUNCTION_84	FOR_1	IF_3	CALL_2
0x4002fd5	            0x741b	                            je 0x4002ff2	      2581	dquot.c	FUNCTION_84	FOR_1	IF_3	CALL_2
0x4002fd7	          0x83c301	                              add ebx, 1	      2580	dquot.c	FUNCTION_84	FOR_1
0x4002fda	          0x83fb03	                              cmp ebx, 3	      2580	dquot.c	FUNCTION_84	FOR_1
0x4002fdd	            0x7426	                            je 0x4003005	      2580	dquot.c	FUNCTION_84	FOR_1
0x4002fdf	    0x418b84240001	           mov eax, dword [r12 + 0x100] 	      2580	dquot.c	FUNCTION_84	FOR_1
0x4002fe7	          0x4489ea	                           mov edx, r13d	      2581	dquot.c	FUNCTION_84	FOR_1	IF_3	CALL_2
0x4002fea	            0x89d9	                            mov ecx, ebx	      2581	dquot.c	FUNCTION_84	FOR_1	IF_3	CALL_2
0x4002fec	            0xd3e2	                             shl edx, cl	      2581	dquot.c	FUNCTION_84	FOR_1	IF_3	CALL_2
0x4002fee	            0x85c2	                           test edx, eax	      2581	dquot.c	FUNCTION_84	FOR_1	IF_3	CALL_2
0x4002ff0	            0x75e5	                           jne 0x4002fd7	      2581	dquot.c	FUNCTION_84	FOR_1	IF_3	CALL_2
0x4002ff2	            0x89df	                            mov edi, ebx	      2582	dquot.c	FUNCTION_84	FOR_1	IF_3
0x4002ff4	          0x83c301	                              add ebx, 1	      2580	dquot.c	FUNCTION_84	FOR_1
0x4002ff7	      0xe800000000	                          call 0x4002ffc	      2582	dquot.c	FUNCTION_84	FOR_1	IF_3
0x4002ffc	            0xf7d0	                                 not eax	      2582	dquot.c	FUNCTION_84	FOR_1	IF_3
0x4002ffe	            0x21c5	                            and ebp, eax	      2582	dquot.c	FUNCTION_84	FOR_1	IF_3
0x4003000	          0x83fb03	                              cmp ebx, 3	      2580	dquot.c	FUNCTION_84	FOR_1
0x4003003	            0x75da	                           jne 0x4002fdf	      2580	dquot.c	FUNCTION_84	FOR_1
0x4003005	            0x85ed	                           test ebp, ebp	      2584	dquot.c	FUNCTION_84	IF_4
0x4003007	            0x7479	                            je 0x4003082	      2584	dquot.c	FUNCTION_84	IF_4
0x4003009	            0x31db	                            xor ebx, ebx	      2584	dquot.c	FUNCTION_84	IF_4
0x400300b	            0x89df	                            mov edi, ebx	      2587	dquot.c	FUNCTION_84	FOR_2	IF_5	CALL_4
0x400300d	      0xe800000000	                          call 0x4003012	      2587	dquot.c	FUNCTION_84	FOR_2	IF_5	CALL_4
0x4003012	            0x85c5	                           test ebp, eax	      2587	dquot.c	FUNCTION_84	FOR_2	IF_5	CALL_4
0x4003014	            0x7511	                           jne 0x4003027	      2587	dquot.c	FUNCTION_84	FOR_2	IF_5	CALL_4
0x4003016	          0x83c301	                              add ebx, 1	      2586	dquot.c	FUNCTION_84	FOR_2
0x4003019	          0x83fb03	                              cmp ebx, 3	      2586	dquot.c	FUNCTION_84	FOR_2
0x400301c	            0x75ed	                           jne 0x400300b	      2586	dquot.c	FUNCTION_84	FOR_2
0x400301e	            0x31c0	                            xor eax, eax	      2593	dquot.c	FUNCTION_84
0x4003020	              0x5b	                                 pop rbx	      2603	dquot.c	FUNCTION_84
0x4003021	              0x5d	                                 pop rbp	      2603	dquot.c	FUNCTION_84
0x4003022	            0x415c	                                 pop r12	      2603	dquot.c	FUNCTION_84
0x4003024	            0x415d	                                 pop r13	      2603	dquot.c	FUNCTION_84
0x4003026	              0xc3	                                     ret	      2603	dquot.c	FUNCTION_84
0x4003027	      0xba08000000	                              mov edx, 8	      2588	dquot.c	FUNCTION_84	FOR_2	IF_5	CALL_5
0x400302c	            0x89de	                            mov esi, ebx	      2588	dquot.c	FUNCTION_84	FOR_2	IF_5	CALL_5
0x400302e	          0x4c89e7	                            mov rdi, r12	      2588	dquot.c	FUNCTION_84	FOR_2	IF_5	CALL_5
0x4003031	      0xe800000000	                          call 0x4003036	      2588	dquot.c	FUNCTION_84	FOR_2	IF_5	CALL_5
0x4003036	            0x85c0	                           test eax, eax	      2589	dquot.c	FUNCTION_84	FOR_2	IF_5	IF_6
0x4003038	          0x4189c5	                           mov r13d, eax	      2588	dquot.c	FUNCTION_84	FOR_2	IF_5	CALL_5
0x400303b	            0x79d9	                           jns 0x4003016	      2589	dquot.c	FUNCTION_84	FOR_2	IF_5	IF_6
0x400303d	          0x83eb01	                              sub ebx, 1	      2596	dquot.c	FUNCTION_84	FOR_3
0x4003040	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      2596	dquot.c	FUNCTION_84	FOR_3
0x4003043	            0x7444	                            je 0x4003089	      2596	dquot.c	FUNCTION_84	FOR_3
0x4003045	            0x89df	                            mov edi, ebx	      2597	dquot.c	FUNCTION_84	FOR_3	IF_7	CALL_6
0x4003047	      0xe800000000	                          call 0x400304c	      2597	dquot.c	FUNCTION_84	FOR_3	IF_7	CALL_6
0x400304c	            0x85c5	                           test ebp, eax	      2597	dquot.c	FUNCTION_84	FOR_3	IF_7	CALL_6
0x400304e	            0x74ed	                            je 0x400303d	      2597	dquot.c	FUNCTION_84	FOR_3	IF_7	CALL_6
0x4003050	          0x4863c3	                         movsxd rax, ebx	      2598	dquot.c	FUNCTION_84	FOR_3	IF_7	CALL_7
0x4003053	      0xb908000000	                              mov ecx, 8	      2598	dquot.c	FUNCTION_84	FOR_3	IF_7	CALL_7
0x4003058	            0x89de	                            mov esi, ebx	      2598	dquot.c	FUNCTION_84	FOR_3	IF_7	CALL_7
0x400305a	        0x488d14c0	                  lea rdx, [rax + rax*8]	      2598	dquot.c	FUNCTION_84	FOR_3	IF_7	CALL_7
0x400305e	    0x498bbcc43001	   mov rdi, qword [r12 + rax*8 + 0x130] 	      2598	dquot.c	FUNCTION_84	FOR_3	IF_7	CALL_7
0x4003066	    0x418b94d45001	   mov edx, dword [r12 + rdx*8 + 0x150] 	      2598	dquot.c	FUNCTION_84	FOR_3	IF_7	CALL_7
0x400306e	      0xe800000000	                          call 0x4003073	      2598	dquot.c	FUNCTION_84	FOR_3	IF_7	CALL_7
0x4003073	            0xebc8	                           jmp 0x400303d	      2598	dquot.c	FUNCTION_84	FOR_3	IF_7	CALL_7
0x4003075	      0xb8daffffff	                     mov eax, 0xffffffda	      2569	dquot.c	FUNCTION_84	IF_1
0x400307a	              0xc3	                                     ret	      2603	dquot.c	FUNCTION_84
0x400307b	      0xb8a1ffffff	                     mov eax, 0xffffffa1	      2577	dquot.c	FUNCTION_84	IF_2
0x4003080	            0xeb9e	                           jmp 0x4003020	      2577	dquot.c	FUNCTION_84	IF_2
0x4003082	      0xb8efffffff	                     mov eax, 0xffffffef	      2585	dquot.c	FUNCTION_84	IF_4
0x4003087	            0xeb97	                           jmp 0x4003020	      2585	dquot.c	FUNCTION_84	IF_4
0x4003089	          0x4489e8	                           mov eax, r13d	      2588	dquot.c	FUNCTION_84	FOR_2	IF_5	CALL_5
0x400308c	            0xeb92	                           jmp 0x4003020	      2588	dquot.c	FUNCTION_84	FOR_2	IF_5	CALL_5
dquot_destroy	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:SWITCH,0:FOR,0	3
0x40006b0	          0x4889fe	                            mov rsi, rdi	       514	dquot.c	FUNCTION_25
0x40006b3	    0x488b3d000000	            mov rdi, qword [0x040006ba] 	       515	dquot.c	FUNCTION_25	CALL_1
0x40006ba	      0xe900000000	                           jmp 0x40006bf	       515	dquot.c	FUNCTION_25	CALL_1
dquot_quota_off	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:SWITCH,0:FOR,0	2
0x40027e0	      0xba09000000	                              mov edx, 9	      2288	dquot.c	FUNCTION_77	CALL_1
0x40027e5	      0xe956f9ffff	                   jmp sym.dquot_disable	      2288	dquot.c	FUNCTION_77	CALL_1
dquot_initialize_needed	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,0:SWITCH,0:FOR,0	44
0x4000260	        0xf6470c20	            test byte [rdi + 0xc], 0x20 	      1411	dquot.c	FUNCTION_57	IF_1	CALL_1
0x4000264	            0x7551	                           jne 0x40002b7	      1411	dquot.c	FUNCTION_57	IF_1	CALL_1
0x4000266	        0x488b4f28	            mov rcx, qword [rdi + 0x28] 	      1411	dquot.c	FUNCTION_57	IF_1	CALL_1
0x400026a	    0x8b9100010000	           mov edx, dword [rcx + 0x100] 	       152	quotaops.h	FUNCTION_104	CALL_2
0x4000270	            0x89d0	                            mov eax, edx	      1538	dquot.c	FUNCTION_60	IF_1	CALL_1
0x4000272	          0x83e207	                              and edx, 7	      1538	dquot.c	FUNCTION_60	IF_1	CALL_1
0x4000275	          0xc1e806	                              shr eax, 6	      1538	dquot.c	FUNCTION_60	IF_1	CALL_1
0x4000278	          0x83e007	                              and eax, 7	      1538	dquot.c	FUNCTION_60	IF_1	CALL_1
0x400027b	            0xf7d0	                                 not eax	      1538	dquot.c	FUNCTION_60	IF_1	CALL_1
0x400027d	            0x85d0	                           test eax, edx	      1538	dquot.c	FUNCTION_60	IF_1	CALL_1
0x400027f	            0x7436	                            je 0x40002b7	      1538	dquot.c	FUNCTION_60	IF_1	CALL_1
0x4000281	              0x53	                                push rbx	      1534	dquot.c	FUNCTION_60
0x4000282	        0x488b4130	            mov rax, qword [rcx + 0x30] 	       923	dquot.c	FUNCTION_37	CALL_1
0x4000286	          0x4889fb	                            mov rbx, rdi	       923	dquot.c	FUNCTION_37	CALL_1
0x4000289	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       923	dquot.c	FUNCTION_37	CALL_1
0x4000290	      0xe800000000	                          call 0x4000295	       923	dquot.c	FUNCTION_37	CALL_1
0x4000295	            0x31d2	                            xor edx, edx	       923	dquot.c	FUNCTION_37	CALL_1
0x4000297	      0xbf01000000	                              mov edi, 1	       157	quotaops.h	FUNCTION_105	CALL_1
0x400029c	    0x41b840000000	                           mov r8d, 0x40	       157	quotaops.h	FUNCTION_105	CALL_1
0x40002a2	      0x48833cd000	              cmp qword [rax + rdx*8], 0	      1543	dquot.c	FUNCTION_60	FOR_1	IF_2	CALL_3
0x40002a7	            0x7411	                            je 0x40002ba	      1543	dquot.c	FUNCTION_60	FOR_1	IF_2	CALL_3
0x40002a9	        0x4883c201	                              add rdx, 1	      1543	dquot.c	FUNCTION_60	FOR_1	IF_2	CALL_3
0x40002ad	        0x4883fa03	                              cmp rdx, 3	      1542	dquot.c	FUNCTION_60	FOR_1
0x40002b1	            0x75ef	                           jne 0x40002a2	      1542	dquot.c	FUNCTION_60	FOR_1
0x40002b3	            0x31c0	                            xor eax, eax	      1539	dquot.c	FUNCTION_60	IF_1
0x40002b5	              0x5b	                                 pop rbx	      1546	dquot.c	FUNCTION_60
0x40002b6	              0xc3	                                     ret	      1546	dquot.c	FUNCTION_60
0x40002b7	            0x31c0	                            xor eax, eax	      1539	dquot.c	FUNCTION_60	IF_1
0x40002b9	              0xc3	                                     ret	      1546	dquot.c	FUNCTION_60
0x40002ba	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	       122	quotaops.h	FUNCTION_99	CALL_1
0x40002be	          0x4189fa	                           mov r10d, edi	       157	quotaops.h	FUNCTION_105	CALL_1
0x40002c1	    0x448b89000100	           mov r9d, dword [rcx + 0x100] 	       122	quotaops.h	FUNCTION_99	CALL_1
0x40002c8	            0x89d1	                            mov ecx, edx	       157	quotaops.h	FUNCTION_105	CALL_1
0x40002ca	          0x41d3e2	                            shl r10d, cl	       157	quotaops.h	FUNCTION_105	CALL_1
0x40002cd	          0x4585ca	                          test r10d, r9d	       157	quotaops.h	FUNCTION_105	CALL_1
0x40002d0	            0x74d7	                            je 0x40002a9	       157	quotaops.h	FUNCTION_105	CALL_1
0x40002d2	          0x4589c3	                           mov r11d, r8d	       157	quotaops.h	FUNCTION_105	CALL_1
0x40002d5	            0x89d1	                            mov ecx, edx	       157	quotaops.h	FUNCTION_105	CALL_1
0x40002d7	          0x41d3e3	                            shl r11d, cl	       157	quotaops.h	FUNCTION_105	CALL_1
0x40002da	          0x4585cb	                          test r11d, r9d	       157	quotaops.h	FUNCTION_105	CALL_1
0x40002dd	            0x75ca	                           jne 0x40002a9	       157	quotaops.h	FUNCTION_105	CALL_1
0x40002df	      0xb801000000	                              mov eax, 1	      1544	dquot.c	FUNCTION_60	FOR_1	IF_2
0x40002e4	              0x5b	                                 pop rbx	      1546	dquot.c	FUNCTION_60
0x40002e5	              0xc3	                                     ret	      1546	dquot.c	FUNCTION_60
