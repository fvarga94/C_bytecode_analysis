zlib_updatewindow	functions,0:WHILE,0:SWITCH,0:IF,5:DO,0:CALL,3:ELSE,2:FOR,0	70
0x4000040	            0x4155	                                push r13	       102	inflate.c	FUNCTION_5
0x4000042	            0x4154	                                push r12	       102	inflate.c	FUNCTION_5
0x4000044	          0x4989fd	                            mov r13, rdi	       102	inflate.c	FUNCTION_5
0x4000047	              0x55	                                push rbp	       102	inflate.c	FUNCTION_5
0x4000048	              0x53	                                push rbx	       102	inflate.c	FUNCTION_5
0x4000049	        0x4c8b6738	            mov r12, qword [rdi + 0x38] 	       106	inflate.c	FUNCTION_5
0x400004d	          0x2b7720	             sub esi, dword [rdi + 0x20]	       109	inflate.c	FUNCTION_5
0x4000050	      0x418b5c242c	            mov ebx, dword [r12 + 0x2c] 	       110	inflate.c	FUNCTION_5	IF_1
0x4000055	            0x39de	                            cmp esi, ebx	       110	inflate.c	FUNCTION_5	IF_1
0x4000057	            0x7353	                           jae 0x40000ac	       110	inflate.c	FUNCTION_5	IF_1
0x4000059	      0x418b7c2434	            mov edi, dword [r12 + 0x34] 	       116	inflate.c	FUNCTION_5	ELSE_1
0x400005e	            0x89f0	                            mov eax, esi	       118	inflate.c	FUNCTION_5	ELSE_1	CALL_2
0x4000060	            0x89f5	                            mov ebp, esi	       118	inflate.c	FUNCTION_5	ELSE_1	CALL_2
0x4000062	            0x29fb	                            sub ebx, edi	       116	inflate.c	FUNCTION_5	ELSE_1
0x4000064	            0x39de	                            cmp esi, ebx	       116	inflate.c	FUNCTION_5	ELSE_1
0x4000066	           0xf46de	                         cmovbe ebx, esi	       116	inflate.c	FUNCTION_5	ELSE_1
0x4000069	      0x49037c2438	             add rdi, qword [r12 + 0x38]	       118	inflate.c	FUNCTION_5	ELSE_1	CALL_2
0x400006e	        0x498b7518	            mov rsi, qword [r13 + 0x18] 	       118	inflate.c	FUNCTION_5	ELSE_1	CALL_2
0x4000072	            0x89da	                            mov edx, ebx	       118	inflate.c	FUNCTION_5	ELSE_1	CALL_2
0x4000074	          0x4829c6	                            sub rsi, rax	       118	inflate.c	FUNCTION_5	ELSE_1	CALL_2
0x4000077	      0xe800000000	                          call 0x400007c	       118	inflate.c	FUNCTION_5	ELSE_1	CALL_2
0x400007c	            0x29dd	                            sub ebp, ebx	       120	inflate.c	FUNCTION_5	ELSE_1	IF_3
0x400007e	            0x756d	                           jne 0x40000ed	       120	inflate.c	FUNCTION_5	ELSE_1	IF_3
0x4000080	      0x418b542434	            mov edx, dword [r12 + 0x34] 	       126	inflate.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000085	      0x418b44242c	            mov eax, dword [r12 + 0x2c] 	       127	inflate.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4
0x400008a	             0x1da	                            add edx, ebx	       126	inflate.c	FUNCTION_5	ELSE_1	ELSE_2
0x400008c	            0x39c2	                            cmp edx, eax	       127	inflate.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4
0x400008e	      0x4189542434	             mov dword [r12 + 0x34], edx	       126	inflate.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000093	            0x7444	                            je 0x40000d9	       127	inflate.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4
0x4000095	      0x418b542430	            mov edx, dword [r12 + 0x30] 	       128	inflate.c	FUNCTION_5	ELSE_1	ELSE_2	IF_5
0x400009a	            0x39d0	                            cmp eax, edx	       128	inflate.c	FUNCTION_5	ELSE_1	ELSE_2	IF_5
0x400009c	            0x7607	                           jbe 0x40000a5	       128	inflate.c	FUNCTION_5	ELSE_1	ELSE_2	IF_5
0x400009e	             0x1d3	                            add ebx, edx	       128	inflate.c	FUNCTION_5	ELSE_1	ELSE_2	IF_5
0x40000a0	      0x41895c2430	             mov dword [r12 + 0x30], ebx	       128	inflate.c	FUNCTION_5	ELSE_1	ELSE_2	IF_5
0x40000a5	              0x5b	                                 pop rbx	       131	inflate.c	FUNCTION_5
0x40000a6	              0x5d	                                 pop rbp	       131	inflate.c	FUNCTION_5
0x40000a7	            0x415c	                                 pop r12	       131	inflate.c	FUNCTION_5
0x40000a9	            0x415d	                                 pop r13	       131	inflate.c	FUNCTION_5
0x40000ab	              0xc3	                                     ret	       131	inflate.c	FUNCTION_5
0x40000ac	        0x498b7518	            mov rsi, qword [r13 + 0x18] 	       111	inflate.c	FUNCTION_5	IF_1	CALL_1
0x40000b0	      0x498b7c2438	            mov rdi, qword [r12 + 0x38] 	       111	inflate.c	FUNCTION_5	IF_1	CALL_1
0x40000b5	            0x89da	                            mov edx, ebx	       111	inflate.c	FUNCTION_5	IF_1	CALL_1
0x40000b7	          0x4829d6	                            sub rsi, rdx	       111	inflate.c	FUNCTION_5	IF_1	CALL_1
0x40000ba	      0xe800000000	                          call 0x40000bf	       111	inflate.c	FUNCTION_5	IF_1	CALL_1
0x40000bf	      0x418b44242c	            mov eax, dword [r12 + 0x2c] 	       113	inflate.c	FUNCTION_5	IF_1
0x40000c4	    0x41c744243400	               mov dword [r12 + 0x34], 0	       112	inflate.c	FUNCTION_5	IF_1
0x40000cd	      0x4189442430	             mov dword [r12 + 0x30], eax	       113	inflate.c	FUNCTION_5	IF_1
0x40000d2	              0x5b	                                 pop rbx	       131	inflate.c	FUNCTION_5
0x40000d3	              0x5d	                                 pop rbp	       131	inflate.c	FUNCTION_5
0x40000d4	            0x415c	                                 pop r12	       131	inflate.c	FUNCTION_5
0x40000d6	            0x415d	                                 pop r13	       131	inflate.c	FUNCTION_5
0x40000d8	              0xc3	                                     ret	       131	inflate.c	FUNCTION_5
0x40000d9	      0x418b542430	            mov edx, dword [r12 + 0x30] 	       128	inflate.c	FUNCTION_5	ELSE_1	ELSE_2	IF_5
0x40000de	    0x41c744243400	               mov dword [r12 + 0x34], 0	       127	inflate.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4
0x40000e7	            0x39d0	                            cmp eax, edx	       128	inflate.c	FUNCTION_5	ELSE_1	ELSE_2	IF_5
0x40000e9	            0x77b3	                            ja 0x400009e	       128	inflate.c	FUNCTION_5	ELSE_1	ELSE_2	IF_5
0x40000eb	            0xebb8	                           jmp 0x40000a5	       128	inflate.c	FUNCTION_5	ELSE_1	ELSE_2	IF_5
0x40000ed	        0x498b7518	            mov rsi, qword [r13 + 0x18] 	       121	inflate.c	FUNCTION_5	ELSE_1	IF_3	CALL_3
0x40000f1	      0x498b7c2438	            mov rdi, qword [r12 + 0x38] 	       121	inflate.c	FUNCTION_5	ELSE_1	IF_3	CALL_3
0x40000f6	            0x89ea	                            mov edx, ebp	       121	inflate.c	FUNCTION_5	ELSE_1	IF_3	CALL_3
0x40000f8	          0x4829d6	                            sub rsi, rdx	       121	inflate.c	FUNCTION_5	ELSE_1	IF_3	CALL_3
0x40000fb	      0xe800000000	                          call 0x4000100	       121	inflate.c	FUNCTION_5	ELSE_1	IF_3	CALL_3
0x4000100	      0x418b44242c	            mov eax, dword [r12 + 0x2c] 	       123	inflate.c	FUNCTION_5	ELSE_1	IF_3
0x4000105	      0x41896c2434	             mov dword [r12 + 0x34], ebp	       122	inflate.c	FUNCTION_5	ELSE_1	IF_3
0x400010a	      0x4189442430	             mov dword [r12 + 0x30], eax	       123	inflate.c	FUNCTION_5	ELSE_1	IF_3
0x400010f	              0x5b	                                 pop rbx	       131	inflate.c	FUNCTION_5
0x4000110	              0x5d	                                 pop rbp	       131	inflate.c	FUNCTION_5
0x4000111	            0x415c	                                 pop r12	       131	inflate.c	FUNCTION_5
0x4000113	            0x415d	                                 pop r13	       131	inflate.c	FUNCTION_5
0x4000115	              0xc3	                                     ret	       131	inflate.c	FUNCTION_5
zlib_inflate	functions,0:WHILE,4:SWITCH,2:IF,54:DO,1:CALL,10:ELSE,5:FOR,6	1626
0x4000240	          0x4885ff	                           test rdi, rdi	       338	inflate.c	FUNCTION_7	IF_1
0x4000243	     0xf84c2150000	                            je 0x400180b	       338	inflate.c	FUNCTION_7	IF_1
0x4000249	            0x4157	                                push r15	       318	inflate.c	FUNCTION_7
0x400024b	            0x4156	                                push r14	       318	inflate.c	FUNCTION_7
0x400024d	            0x4155	                                push r13	       318	inflate.c	FUNCTION_7
0x400024f	            0x4154	                                push r12	       318	inflate.c	FUNCTION_7
0x4000251	              0x55	                                push rbp	       318	inflate.c	FUNCTION_7
0x4000252	              0x53	                                push rbx	       318	inflate.c	FUNCTION_7
0x4000253	    0x4881ec980000	                           sub rsp, 0x98	       318	inflate.c	FUNCTION_7
0x400025a	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       338	inflate.c	FUNCTION_7	IF_1
0x400025e	          0x4885c0	                           test rax, rax	       338	inflate.c	FUNCTION_7	IF_1
0x4000261	      0x4889442420	             mov qword [rsp + 0x20], rax	       338	inflate.c	FUNCTION_7	IF_1
0x4000266	     0xf84180c0000	                            je 0x4000e84	       338	inflate.c	FUNCTION_7	IF_1
0x400026c	          0x488b17	                    mov rdx, qword [rdi]	       339	inflate.c	FUNCTION_7	IF_1
0x400026f	          0x4885d2	                           test rdx, rdx	       338	inflate.c	FUNCTION_7	IF_1
0x4000272	     0xf84010c0000	                            je 0x4000e79	       338	inflate.c	FUNCTION_7	IF_1
0x4000278	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       344	inflate.c	FUNCTION_7	IF_2
0x400027d	          0x4989d3	                            mov r11, rdx	       339	inflate.c	FUNCTION_7	IF_1
0x4000280	            0x8b00	                    mov eax, dword [rax]	       344	inflate.c	FUNCTION_7	IF_2
0x4000282	          0x83f80b	                            cmp eax, 0xb	       344	inflate.c	FUNCTION_7	IF_2
0x4000285	     0xf84ee010000	                            je 0x4000479	       344	inflate.c	FUNCTION_7	IF_2
0x400028b	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	       345	inflate.c	FUNCTION_7
0x400028f	        0x89742470	             mov dword [rsp + 0x70], esi	       345	inflate.c	FUNCTION_7
0x4000293	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       345	inflate.c	FUNCTION_7
0x4000298	        0x4c8b6720	            mov r12, qword [rdi + 0x20] 	       345	inflate.c	FUNCTION_7
0x400029c	      0x48897c2428	             mov qword [rsp + 0x28], rdi	       345	inflate.c	FUNCTION_7
0x40002a1	        0x488b7f08	                mov rdi, qword [rdi + 8]	       345	inflate.c	FUNCTION_7
0x40002a5	      0x4889542410	             mov qword [rsp + 0x10], rdx	       345	inflate.c	FUNCTION_7
0x40002aa	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	       348	inflate.c	FUNCTION_7
0x40002b2	        0x448b6e48	           mov r13d, dword [rsi + 0x48] 	       345	inflate.c	FUNCTION_7
0x40002b6	    0x488d96480500	                  lea rdx, [rsi + 0x548]	       537	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40002bd	    0x488d9e080300	                  lea rbx, [rsi + 0x308]	       541	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40002c4	    0x488d8e800000	                   lea rcx, [rsi + 0x80]	       540	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x40002cb	        0x4c8b7e40	            mov r15, qword [rsi + 0x40] 	       345	inflate.c	FUNCTION_7
0x40002cf	      0x4489642408	               mov dword [rsp + 8], r12d	       345	inflate.c	FUNCTION_7
0x40002d4	      0x4889542468	             mov qword [rsp + 0x68], rdx	       537	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40002d9	    0x488d96880000	                   lea rdx, [rsi + 0x88]	       540	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x40002e0	      0x48895c2450	             mov qword [rsp + 0x50], rbx	       541	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40002e5	          0x4489eb	                           mov ebx, r13d	       540	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x40002e8	        0x44892424	                   mov dword [rsp], r12d	       347	inflate.c	FUNCTION_7
0x40002ec	      0x48897c2430	             mov qword [rsp + 0x30], rdi	       345	inflate.c	FUNCTION_7
0x40002f1	          0x4d89dc	                            mov r12, r11	       540	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x40002f4	      0x48894c2458	             mov qword [rsp + 0x58], rcx	       540	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x40002f9	      0x4889542460	             mov qword [rsp + 0x60], rdx	       540	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x40002fe	          0x4189fd	                           mov r13d, edi	       540	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4000301	          0x4189db	                           mov r11d, ebx	       540	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4000304	          0x83f81c	                           cmp eax, 0x1c	       350	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000307	     0xf87770b0000	                            ja 0x4000e84	       350	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400030d	          0x4589ee	                          mov r14d, r13d	       350	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000310	          0x4c89fd	                            mov rbp, r15	       350	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000313	          0x4489db	                           mov ebx, r11d	       350	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000316	    0x488b04c50000	                  mov rax, qword [rax*8]	       350	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400031e	      0xe900000000	                           jmp 0x4000323	       350	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000323	          0x83fb1f	                           cmp ebx, 0x1f	       381	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000326	            0x7732	                            ja 0x400035a	       381	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000328	          0x4585f6	                         test r14d, r14d	       381	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400032b	     0xf84ea0e0000	                            je 0x400121b	       381	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000331	            0x89d9	                            mov ecx, ebx	       381	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000333	            0xeb09	                           jmp 0x400033e	       381	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000335	          0x4585f6	                         test r14d, r14d	       381	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000338	     0xf84a00b0000	                            je 0x4000ede	       381	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400033e	        0x4983c401	                              add r12, 1	       381	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000342	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       381	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000348	        0x4183ee01	                             sub r14d, 1	       381	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400034c	          0x48d3e0	                             shl rax, cl	       381	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400034f	          0x83c108	                              add ecx, 8	       381	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000352	          0x4801c5	                            add rbp, rax	       381	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000355	          0x83f91f	                           cmp ecx, 0x1f	       381	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000358	            0x76db	                           jbe 0x4000335	       381	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400035a	          0x4889ea	                            mov rdx, rbp	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400035d	          0x4889e8	                            mov rax, rbp	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000360	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000365	        0x48c1ea18	                           shr rdx, 0x18	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000369	        0x48c1e808	                              shr rax, 8	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400036d	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000372	      0x2500ff0000	                         and eax, 0xff00	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000377	           0xfb6d2	                           movzx edx, dl	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400037a	          0x4801c2	                            add rdx, rax	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400037d	          0x4889e8	                            mov rax, rbp	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000380	      0x2500ff0000	                         and eax, 0xff00	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000385	        0x48c1e008	                              shl rax, 8	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000389	          0x4801c2	                            add rdx, rax	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400038c	          0x4889e8	                            mov rax, rbp	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400038f	            0x31ed	                            xor ebp, ebp	       383	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000391	        0x48c1e018	                           shl rax, 0x18	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000395	            0x89c0	                            mov eax, eax	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000397	          0x4801d0	                            add rax, rdx	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400039a	        0x48894318	             mov qword [rbx + 0x18], rax	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400039e	        0x48894750	             mov qword [rdi + 0x50], rax	       382	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40003a2	    0xc7030a000000	                    mov dword [rbx], 0xa	       384	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40003a8	            0x31db	                            xor ebx, ebx	       383	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40003aa	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       386	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x40003af	        0x448b480c	              mov r9d, dword [rax + 0xc]	       386	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x40003b3	          0x4585c9	                           test r9d, r9d	       386	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x40003b6	     0xf844d150000	                            je 0x4001909	       386	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x40003bc	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       390	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_2
0x40003c1	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       390	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_2
0x40003c6	    0x48c740180100	               mov qword [rax + 0x18], 1	       390	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_2
0x40003ce	    0x48c747500100	               mov qword [rdi + 0x50], 1	       390	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_2
0x40003d6	    0xc7000b000000	                    mov dword [rax], 0xb	       391	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40003dc	      0x837c247006	               cmp dword [rsp + 0x70], 6	       393	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_8
0x40003e1	     0xf84ac0f0000	                            je 0x4001393	       393	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_8
0x40003e7	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       395	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_9
0x40003ec	        0x448b4004	                mov r8d, dword [rax + 4]	       395	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_9
0x40003f0	          0x4585c0	                           test r8d, r8d	       395	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_9
0x40003f3	     0xf8598000000	                           jne 0x4000491	       395	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_9
0x40003f9	          0x83fb02	                              cmp ebx, 2	       400	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40003fc	          0x4589f5	                          mov r13d, r14d	       400	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40003ff	          0x4989ef	                            mov r15, rbp	       400	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000402	          0x4189db	                           mov r11d, ebx	       400	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000405	            0x7723	                            ja 0x400042a	       400	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000407	          0x4585f6	                         test r14d, r14d	       400	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400040a	     0xf8401140000	                            je 0x4001811	       400	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000410	        0x4983c401	                              add r12, 1	       400	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000414	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       400	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400041a	            0x89d9	                            mov ecx, ebx	       400	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400041c	        0x4183ed01	                             sub r13d, 1	       400	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000420	        0x4183c308	                             add r11d, 8	       400	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000424	          0x48d3e0	                             shl rax, cl	       400	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000427	          0x4901c7	                            add r15, rax	       400	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400042a	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       401	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400042f	          0x4489f8	                           mov eax, r15d	       401	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000432	          0x4c89fa	                            mov rdx, r15	       402	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000435	          0x83e001	                              and eax, 1	       401	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000438	          0x48d1ea	                              shr rdx, 1	       402	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400043b	          0x894304	                mov dword [rbx + 4], eax	       401	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400043e	            0x89d0	                            mov eax, edx	       403	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x4000440	          0x83e003	                              and eax, 3	       403	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x4000443	          0x83f802	                              cmp eax, 2	       403	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x4000446	     0xf841f100000	                            je 0x400146b	       403	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x400044c	          0x83f803	                              cmp eax, 3	       403	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x400044f	     0xf84b20e0000	                            je 0x4001307	       403	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x4000455	          0x83f801	                              cmp eax, 1	       403	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x4000458	     0xf84da0f0000	                            je 0x4001438	       403	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x400045e	    0xc7030d000000	                    mov dword [rbx], 0xd	       405	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x4000464	      0xb80d000000	                            mov eax, 0xd	       406	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x4000469	        0x48c1ea02	                              shr rdx, 2	       418	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400046d	        0x4183eb03	                             sub r11d, 3	       418	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000471	          0x4989d7	                            mov r15, rdx	       418	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000474	      0xe98bfeffff	                           jmp 0x4000304	       419	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000479	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       344	inflate.c	FUNCTION_7	IF_2
0x400047e	    0xc7000c000000	                    mov dword [rax], 0xc	       344	inflate.c	FUNCTION_7	IF_2
0x4000484	      0xb80c000000	                            mov eax, 0xc	       344	inflate.c	FUNCTION_7	IF_2
0x4000489	          0x4c8b1f	                    mov r11, qword [rdi]	       344	inflate.c	FUNCTION_7	IF_2
0x400048c	      0xe9fafdffff	                           jmp 0x400028b	       344	inflate.c	FUNCTION_7	IF_2
0x4000491	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       397	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_9
0x4000496	            0x89d9	                            mov ecx, ebx	       396	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_9
0x4000498	          0x83e3f8	                     and ebx, 0xfffffff8	       396	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_9
0x400049b	          0x83e107	                              and ecx, 7	       396	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_9
0x400049e	          0x48d3ed	                             shr rbp, cl	       396	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_9
0x40004a1	    0xc70018000000	                   mov dword [rax], 0x18	       397	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_9
0x40004a7	      0xb818000000	                           mov eax, 0x18	       398	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_9
0x40004ac	      0xe965feffff	                           jmp 0x4000316	       398	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_9
0x40004b1	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       398	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_9
0x40004b6	          0x8b5054	            mov edx, dword [rax + 0x54] 	       398	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_9
0x40004b9	            0x85d2	                           test edx, edx	       597	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004bb	            0x7452	                            je 0x400050f	       597	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004bd	            0x39d3	                            cmp ebx, edx	       598	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004bf	            0x7333	                           jae 0x40004f4	       598	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004c1	          0x4585f6	                         test r14d, r14d	       598	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004c4	     0xf84510d0000	                            je 0x400121b	       598	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004ca	            0x89d9	                            mov ecx, ebx	       598	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004cc	            0xeb09	                           jmp 0x40004d7	       598	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004ce	          0x4585f6	                         test r14d, r14d	       598	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004d1	     0xf84070a0000	                            je 0x4000ede	       598	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004d7	        0x4983c401	                              add r12, 1	       598	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004db	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       598	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004e1	        0x4183ee01	                             sub r14d, 1	       598	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004e5	          0x48d3e0	                             shl rax, cl	       598	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004e8	          0x83c108	                              add ecx, 8	       598	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004eb	          0x4801c5	                            add rbp, rax	       598	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004ee	            0x39d1	                            cmp ecx, edx	       598	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004f0	            0x72dc	                            jb 0x40004ce	       598	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004f2	            0x89cb	                            mov ebx, ecx	       598	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004f4	            0x89d1	                            mov ecx, edx	       599	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004f6	      0xb801000000	                              mov eax, 1	       599	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x40004fb	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       599	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x4000500	            0xd3e0	                             shl eax, cl	       599	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x4000502	            0x29d3	                            sub ebx, edx	       600	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x4000504	          0x83e801	                              sub eax, 1	       599	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x4000507	            0x21e8	                            and eax, ebp	       599	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x4000509	           0x1474c	             add dword [rdi + 0x4c], eax	       599	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x400050c	          0x48d3ed	                             shr rbp, cl	       600	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_33
0x400050f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       602	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000514	    0xc70014000000	                   mov dword [rax], 0x14	       602	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400051a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x400051f	      0xbf01000000	                              mov edi, 1	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x4000524	          0x8b486c	            mov ecx, dword [rax + 0x6c] 	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x4000527	        0x4c8b4060	              mov r8, qword [rax + 0x60]	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x400052b	            0xd3e7	                             shl edi, cl	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x400052d	          0x83ef01	                              sub edi, 1	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x4000530	            0x89f8	                            mov eax, edi	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x4000532	            0x21e8	                            and eax, ebp	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x4000534	        0x498d0480	                   lea rax, [r8 + rax*4]	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x4000538	         0xfb65001	               movzx edx, byte [rax + 1]	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x400053c	           0xfb630	                   movzx esi, byte [rax]	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x400053f	      0x440fb74802	               movzx r9d, word [rax + 2]	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x4000544	           0xfb6c2	                           movzx eax, dl	       606	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5	IF_34
0x4000547	            0x39d8	                            cmp eax, ebx	       606	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5	IF_34
0x4000549	          0x4189c2	                           mov r10d, eax	       606	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5	IF_34
0x400054c	            0x764d	                           jbe 0x400059b	       606	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5	IF_34
0x400054e	          0x4585f6	                         test r14d, r14d	       607	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x4000551	     0xf84c40c0000	                            je 0x400121b	       607	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x4000557	            0x89d9	                            mov ecx, ebx	       607	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x4000559	            0xeb09	                           jmp 0x4000564	       607	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x400055b	          0x4585f6	                         test r14d, r14d	       607	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x400055e	     0xf847a090000	                            je 0x4000ede	       607	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x4000564	        0x4983c401	                              add r12, 1	       607	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x4000568	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       607	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x400056e	        0x4183ee01	                             sub r14d, 1	       607	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x4000572	          0x48d3e0	                             shl rax, cl	       607	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x4000575	          0x83c108	                              add ecx, 8	       607	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x4000578	          0x4801c5	                            add rbp, rax	       607	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x400057b	            0x89f8	                            mov eax, edi	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x400057d	            0x21e8	                            and eax, ebp	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x400057f	        0x498d0480	                   lea rax, [r8 + rax*4]	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x4000583	         0xfb65001	               movzx edx, byte [rax + 1]	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x4000587	           0xfb630	                   movzx esi, byte [rax]	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x400058a	      0x440fb74802	               movzx r9d, word [rax + 2]	       605	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5
0x400058f	           0xfb6c2	                           movzx eax, dl	       606	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5	IF_34
0x4000592	            0x39c8	                            cmp eax, ecx	       606	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5	IF_34
0x4000594	          0x4189c2	                           mov r10d, eax	       606	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5	IF_34
0x4000597	            0x77c2	                            ja 0x400055b	       606	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5	IF_34
0x4000599	            0x89cb	                            mov ebx, ecx	       606	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_5	IF_34
0x400059b	        0x40f6c6f0	                          test sil, 0xf0	       609	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35
0x400059f	            0x756c	                           jne 0x400060d	       609	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35
0x40005a1	          0x8d0c06	                    lea ecx, [rsi + rax]	       613	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005a4	    0x41bb01000000	                             mov r11d, 1	       613	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005aa	            0x89c7	                            mov edi, eax	       613	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005ac	        0x450fb7e9	                         movzx r13d, r9w	       612	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005b0	          0x41d3e3	                            shl r11d, cl	       613	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005b3	            0x89d1	                            mov ecx, edx	       612	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005b5	        0x4183eb01	                             sub r11d, 1	       613	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005b9	          0x4489d8	                           mov eax, r11d	       612	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005bc	            0x21e8	                            and eax, ebp	       612	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005be	            0xeb29	                           jmp 0x40005e9	       612	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005c0	          0x4585f6	                         test r14d, r14d	       615	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005c3	     0xf84520c0000	                            je 0x400121b	       615	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005c9	        0x4983c401	                              add r12, 1	       615	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005cd	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       615	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005d3	            0x89d9	                            mov ecx, ebx	       615	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005d5	        0x4183ee01	                             sub r14d, 1	       615	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005d9	          0x83c308	                              add ebx, 8	       615	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005dc	          0x48d3e0	                             shl rax, cl	       615	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005df	            0x89f9	                            mov ecx, edi	       612	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005e1	          0x4801c5	                            add rbp, rax	       615	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005e4	          0x4489d8	                           mov eax, r11d	       612	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005e7	            0x21e8	                            and eax, ebp	       612	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005e9	            0xd3e8	                             shr eax, cl	       612	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005eb	          0x4401e8	                           add eax, r13d	       612	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005ee	        0x498d0480	                   lea rax, [r8 + rax*4]	       612	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005f2	           0xfb630	                   movzx esi, byte [rax]	       612	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005f5	      0x440fb74802	               movzx r9d, word [rax + 2]	       612	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6
0x40005fa	         0xfb64001	               movzx eax, byte [rax + 1]	       614	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6	IF_36
0x40005fe	          0x8d1438	                    lea edx, [rax + rdi]	       614	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6	IF_36
0x4000601	            0x39da	                            cmp edx, ebx	       614	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6	IF_36
0x4000603	            0x77bb	                            ja 0x40005c0	       614	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35	FOR_6	IF_36
0x4000605	            0x89f9	                            mov ecx, edi	       617	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35
0x4000607	          0x4429d3	                           sub ebx, r10d	       617	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35
0x400060a	          0x48d3ed	                             shr rbp, cl	       617	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_35
0x400060d	            0x89c1	                            mov ecx, eax	       619	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400060f	            0x29c3	                            sub ebx, eax	       619	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000611	          0x48d3ed	                             shr rbp, cl	       619	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000614	        0x40f6c640	                          test sil, 0x40	       620	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_37
0x4000618	     0xf84620c0000	                            je 0x4001280	       620	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_37
0x400061e	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       621	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_37
0x4000623	    0x48c740300000	               mov qword [rax + 0x30], 0	       621	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_37
0x400062b	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       622	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_37
0x4000630	    0xc7001b000000	                   mov dword [rax], 0x1b	       622	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_37
0x4000636	      0xb81b000000	                           mov eax, 0x1b	       623	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_37
0x400063b	      0xe9d6fcffff	                           jmp 0x4000316	       623	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_37
0x4000640	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       623	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_37
0x4000645	          0x8b7054	            mov esi, dword [rax + 0x54] 	       623	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_37
0x4000648	            0x85f6	                           test esi, esi	       629	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x400064a	     0xf85750b0000	                           jne 0x40011c5	       629	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x4000650	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       629	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x4000655	          0x8b4050	            mov eax, dword [rax + 0x50] 	       629	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x4000658	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       641	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_40
0x400065d	          0x8b1424	                    mov edx, dword [rsp]	       641	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_40
0x4000660	           0x35730	             add edx, dword [rdi + 0x30]	       641	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_40
0x4000663	        0x2b542408	                sub edx, dword [rsp + 8]	       641	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_40
0x4000667	            0x39c2	                            cmp edx, eax	       641	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_40
0x4000669	     0xf82cf0b0000	                            jb 0x400123e	       641	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_40
0x400066f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       646	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000674	    0xc70016000000	                   mov dword [rax], 0x16	       646	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400067a	        0x8b442408	                mov eax, dword [rsp + 8]	       648	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_41
0x400067e	            0x85c0	                           test eax, eax	       648	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_41
0x4000680	     0xf841f120000	                            je 0x40018a5	       648	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_41
0x4000686	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       650	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42
0x400068b	          0x8b1424	                    mov edx, dword [rsp]	       649	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400068e	        0x2b542408	                sub edx, dword [rsp + 8]	       649	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000692	          0x8b4750	            mov eax, dword [rdi + 0x50] 	       650	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42
0x4000695	            0x39c2	                            cmp edx, eax	       650	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42
0x4000697	     0xf83a70a0000	                           jae 0x4001144	       650	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42
0x400069d	          0x8b4f34	            mov ecx, dword [rdi + 0x34] 	       652	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42	IF_43
0x40006a0	            0x29d0	                            sub eax, edx	       651	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42
0x40006a2	            0x39c8	                            cmp eax, ecx	       652	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42	IF_43
0x40006a4	     0xf87c60b0000	                            ja 0x4001270	       652	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42	IF_43
0x40006aa	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       657	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42	ELSE_4
0x40006af	            0x29c1	                            sub ecx, eax	       657	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42	ELSE_4
0x40006b1	        0x48034e38	             add rcx, qword [rsi + 0x38]	       657	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42	ELSE_4
0x40006b5	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       658	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42	IF_44
0x40006ba	          0x8b564c	            mov edx, dword [rsi + 0x4c] 	       658	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42	IF_44
0x40006bd	            0x39d0	                            cmp eax, edx	       658	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42	IF_44
0x40006bf	           0xf47c2	                          cmova eax, edx	       658	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42	IF_44
0x40006c2	      0xe98f0a0000	                           jmp 0x4001156	       658	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42	IF_44
0x40006c7	            0x89d9	                            mov ecx, ebx	       421	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40006c9	          0x83e3f8	                     and ebx, 0xfffffff8	       421	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40006cc	          0x83e107	                              and ecx, 7	       421	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40006cf	          0x48d3ed	                             shr rbp, cl	       421	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40006d2	          0x83fb1f	                           cmp ebx, 0x1f	       422	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40006d5	            0x7734	                            ja 0x400070b	       422	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40006d7	          0x4585f6	                         test r14d, r14d	       422	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40006da	     0xf843b0b0000	                            je 0x400121b	       422	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40006e0	            0x89d9	                            mov ecx, ebx	       422	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40006e2	            0xeb09	                           jmp 0x40006ed	       422	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40006e4	          0x4585f6	                         test r14d, r14d	       422	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40006e7	     0xf84f1070000	                            je 0x4000ede	       422	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40006ed	        0x4983c401	                              add r12, 1	       422	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40006f1	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       422	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40006f7	        0x4183ee01	                             sub r14d, 1	       422	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40006fb	          0x48d3e0	                             shl rax, cl	       422	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40006fe	          0x83c108	                              add ecx, 8	       422	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000701	          0x4801c5	                            add rbp, rax	       422	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000704	          0x83f91f	                           cmp ecx, 0x1f	       422	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000707	            0x76db	                           jbe 0x40006e4	       422	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000709	            0x89cb	                            mov ebx, ecx	       422	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400070b	          0x4889e8	                            mov rax, rbp	       423	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_10
0x400070e	           0xfb7d5	                           movzx edx, bp	       423	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_10
0x4000711	        0x48c1e810	                           shr rax, 0x10	       423	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_10
0x4000715	    0x4835ffff0000	                         xor rax, 0xffff	       423	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_10
0x400071b	          0x4839c2	                            cmp rdx, rax	       423	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_10
0x400071e	     0xf84790d0000	                            je 0x400149d	       423	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_10
0x4000724	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       424	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_10
0x4000729	    0x48c740300000	               mov qword [rax + 0x30], 0	       424	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_10
0x4000731	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       425	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_10
0x4000736	    0xc7001b000000	                   mov dword [rax], 0x1b	       425	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_10
0x400073c	      0xb81b000000	                           mov eax, 0x1b	       426	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_10
0x4000741	      0xe9d0fbffff	                           jmp 0x4000316	       426	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_10
0x4000746	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       426	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_10
0x400074b	          0x8b404c	            mov eax, dword [rax + 0x4c] 	       426	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_10
0x400074e	            0x85c0	                           test eax, eax	       433	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x4000750	     0xf84d30a0000	                            je 0x4001229	       433	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x4000756	        0x8b7c2408	                mov edi, dword [rsp + 8]	       433	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x400075a	          0x4139c6	                           cmp r14d, eax	       433	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x400075d	          0x4189db	                           mov r11d, ebx	       433	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x4000760	        0x410f46c6	                        cmovbe eax, r14d	       433	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x4000764	          0x4589f5	                          mov r13d, r14d	       433	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x4000767	          0x4989ef	                            mov r15, rbp	       433	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x400076a	            0x39c7	                            cmp edi, eax	       433	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x400076c	           0xf46c7	                         cmovbe eax, edi	       433	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x400076f	            0x85c0	                           test eax, eax	       436	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11	IF_14
0x4000771	            0x89c3	                            mov ebx, eax	       436	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11	IF_14
0x4000773	     0xf84340c0000	                            je 0x40013ad	       436	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11	IF_14
0x4000779	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	       437	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11	CALL_4
0x400077e	            0x89c5	                            mov ebp, eax	       437	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11	CALL_4
0x4000780	          0x4c89e6	                            mov rsi, r12	       437	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11	CALL_4
0x4000783	          0x4889ea	                            mov rdx, rbp	       437	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11	CALL_4
0x4000786	      0x44895c2418	            mov dword [rsp + 0x18], r11d	       437	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11	CALL_4
0x400078b	          0x4129dd	                           sub r13d, ebx	       438	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x400078e	          0x4901ec	                            add r12, rbp	       439	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x4000791	          0x4c89f7	                            mov rdi, r14	       437	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11	CALL_4
0x4000794	      0xe800000000	                          call 0x4000799	       437	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11	CALL_4
0x4000799	          0x4c89f0	                            mov rax, r14	       441	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x400079c	        0x295c2408	                sub dword [rsp + 8], ebx	       440	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x40007a0	      0x448b5c2418	           mov r11d, dword [rsp + 0x18] 	       443	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x40007a5	          0x4801e8	                            add rax, rbp	       441	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x40007a8	      0x4889442410	             mov qword [rsp + 0x10], rax	       441	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x40007ad	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       442	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x40007b2	          0x29584c	             sub dword [rax + 0x4c], ebx	       442	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x40007b5	            0x8b00	                    mov eax, dword [rax]	       442	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x40007b7	      0xe948fbffff	                           jmp 0x4000304	       443	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_11
0x40007bc	          0x83fb0d	                            cmp ebx, 0xd	       448	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007bf	            0x7734	                            ja 0x40007f5	       448	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007c1	          0x4585f6	                         test r14d, r14d	       448	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007c4	     0xf84510a0000	                            je 0x400121b	       448	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007ca	            0x89d9	                            mov ecx, ebx	       448	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007cc	            0xeb09	                           jmp 0x40007d7	       448	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007ce	          0x4585f6	                         test r14d, r14d	       448	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007d1	     0xf8407070000	                            je 0x4000ede	       448	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007d7	        0x4983c401	                              add r12, 1	       448	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007db	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       448	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007e1	        0x4183ee01	                             sub r14d, 1	       448	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007e5	          0x48d3e0	                             shl rax, cl	       448	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007e8	          0x83c108	                              add ecx, 8	       448	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007eb	          0x4801c5	                            add rbp, rax	       448	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007ee	          0x83f90d	                            cmp ecx, 0xd	       448	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007f1	            0x76db	                           jbe 0x40007ce	       448	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007f3	            0x89cb	                            mov ebx, ecx	       448	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007f5	          0x4889e8	                            mov rax, rbp	       450	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007f8	          0x4889ee	                            mov rsi, rbp	       452	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40007fb	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       449	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000800	        0x48c1e805	                              shr rax, 5	       450	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000804	            0x89ea	                            mov edx, ebp	       449	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000806	        0x48c1ee0a	                            shr rsi, 0xa	       452	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400080a	          0x83e01f	                           and eax, 0x1f	       451	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400080d	          0x83e21f	                           and edx, 0x1f	       449	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000810	          0x83e60f	                            and esi, 0xf	       453	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000813	          0x83c001	                              add eax, 1	       451	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000816	    0x81c201010000	                          add edx, 0x101	       449	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400081c	          0x83c604	                              add esi, 4	       453	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400081f	        0x48c1ed0e	                            shr rbp, 0xe	       454	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000823	          0x83eb0e	                            sub ebx, 0xe	       454	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000826	          0x83f81e	                           cmp eax, 0x1e	       456	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_15
0x4000829	          0x895774	             mov dword [rdi + 0x74], edx	       449	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400082c	          0x894778	             mov dword [rdi + 0x78], eax	       451	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400082f	          0x897770	             mov dword [rdi + 0x70], esi	       453	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000832	     0xf87a10b0000	                            ja 0x40013d9	       456	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_15
0x4000838	    0x81fa1e010000	                          cmp edx, 0x11e	       456	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_15
0x400083e	     0xf87950b0000	                            ja 0x40013d9	       456	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_15
0x4000844	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       462	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000849	            0x31d2	                            xor edx, edx	       463	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400084b	            0x89d9	                            mov ecx, ebx	       463	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400084d	    0xc7407c000000	               mov dword [rax + 0x7c], 0	       462	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000854	    0xc70010000000	                   mov dword [rax], 0x10	       463	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400085a	          0x4889c7	                            mov rdi, rax	       463	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400085d	            0xeb1c	                           jmp 0x400087b	       463	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400085f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       463	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000864	          0x8b507c	            mov edx, dword [rax + 0x7c] 	       463	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000867	          0x8b7070	            mov esi, dword [rax + 0x70] 	       463	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400086a	            0x39f2	                            cmp edx, esi	       465	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x400086c	            0x89d0	                            mov eax, edx	       465	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x400086e	     0xf83fc0e0000	                           jae 0x4001770	       465	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x4000874	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       465	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x4000879	            0x89d9	                            mov ecx, ebx	       465	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x400087b	          0x83f902	                              cmp ecx, 2	       466	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x400087e	            0x7720	                            ja 0x40008a0	       466	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x4000880	          0x4585f6	                         test r14d, r14d	       466	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x4000883	     0xf8455060000	                            je 0x4000ede	       466	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x4000889	        0x4983c401	                              add r12, 1	       466	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x400088d	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       466	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x4000893	        0x4183ee01	                             sub r14d, 1	       466	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x4000897	          0x48d3e0	                             shl rax, cl	       466	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x400089a	          0x83c108	                              add ecx, 8	       466	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x400089d	          0x4801c5	                            add rbp, rax	       466	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008a0	          0x8d4201	                      lea eax, [rdx + 1]	       467	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008a3	     0xfb794120000	             movzx edx, word [rdx + rdx]	       467	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008ab	          0x4189e8	                            mov r8d, ebp	       467	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008ae	        0x4183e007	                              and r8d, 7	       467	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008b2	        0x48c1ed03	                              shr rbp, 3	       468	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008b6	          0x83e903	                              sub ecx, 3	       468	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008b9	            0x39f0	                            cmp eax, esi	       465	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008bb	          0x89477c	             mov dword [rdi + 0x7c], eax	       467	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008be	    0x664489845788	      mov word [rdi + rdx*2 + 0x88], r8w	       467	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008c7	     0xf83a10e0000	                           jae 0x400176e	       465	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008cd	          0x83f902	                              cmp ecx, 2	       466	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008d0	            0x89c2	                            mov edx, eax	       466	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008d2	            0x76ac	                           jbe 0x4000880	       466	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008d4	            0xebca	                           jmp 0x40008a0	       466	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008d6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       466	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008db	        0x448b487c	            mov r9d, dword [rax + 0x7c] 	       466	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008df	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       466	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_1
0x40008e4	    0x41bb01000000	                             mov r11d, 1	       487	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x40008ea	    0x41bffdffffff	                    mov r15d, 0xfffffffd	       514	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x40008f0	    0x41bdf9ffffff	                    mov r13d, 0xfffffff9	       521	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40008f6	          0x8b5074	            mov edx, dword [rax + 0x74] 	       521	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40008f9	        0x448b5078	           mov r10d, dword [rax + 0x78] 	       521	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40008fd	        0x89542418	             mov dword [rsp + 0x18], edx	       521	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x4000901	          0x4101d2	                           add r10d, edx	       521	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x4000904	          0x4889c2	                            mov rdx, rax	       521	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x4000907	          0x4539d1	                           cmp r9d, r10d	       485	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3
0x400090a	     0xf8336100000	                           jae 0x4001946	       485	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3
0x4000910	          0x8b4a68	            mov ecx, dword [rdx + 0x68] 	       487	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000913	          0x4489de	                           mov esi, r11d	       487	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000916	        0x488b7a58	            mov rdi, qword [rdx + 0x58] 	       487	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x400091a	            0xd3e6	                             shl esi, cl	       487	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x400091c	          0x83ee01	                              sub esi, 1	       487	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x400091f	            0x89f0	                            mov eax, esi	       487	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000921	            0x21e8	                            and eax, ebp	       487	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000923	        0x488d0487	                  lea rax, [rdi + rax*4]	       487	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000927	         0xfb64801	               movzx ecx, byte [rax + 1]	       487	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x400092b	      0x440fb74002	               movzx r8d, word [rax + 2]	       487	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000930	           0xfb6c1	                           movzx eax, cl	       488	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2	IF_17
0x4000933	            0x39c3	                            cmp ebx, eax	       488	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2	IF_17
0x4000935	            0x734b	                           jae 0x4000982	       488	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2	IF_17
0x4000937	          0x4585f6	                         test r14d, r14d	       489	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x400093a	     0xf84db080000	                            je 0x400121b	       489	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000940	            0x89d9	                            mov ecx, ebx	       489	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000942	            0xeb09	                           jmp 0x400094d	       489	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000944	          0x4585f6	                         test r14d, r14d	       489	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000947	     0xf8491050000	                            je 0x4000ede	       489	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x400094d	        0x4983c401	                              add r12, 1	       489	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000951	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       489	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000957	        0x4183ee01	                             sub r14d, 1	       489	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x400095b	          0x48d3e0	                             shl rax, cl	       489	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x400095e	          0x83c108	                              add ecx, 8	       489	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000961	          0x4801c5	                            add rbp, rax	       489	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000964	            0x89f0	                            mov eax, esi	       487	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000966	            0x21e8	                            and eax, ebp	       487	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000968	        0x488d0487	                  lea rax, [rdi + rax*4]	       487	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x400096c	         0xfb65801	               movzx ebx, byte [rax + 1]	       487	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000970	      0x440fb74002	               movzx r8d, word [rax + 2]	       487	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2
0x4000975	           0xfb6c3	                           movzx eax, bl	       488	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2	IF_17
0x4000978	            0x39c8	                            cmp eax, ecx	       488	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2	IF_17
0x400097a	            0x77c8	                            ja 0x4000944	       488	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2	IF_17
0x400097c	            0x89de	                            mov esi, ebx	       488	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2	IF_17
0x400097e	            0x89cb	                            mov ebx, ecx	       488	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2	IF_17
0x4000980	            0x89f1	                            mov ecx, esi	       488	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	FOR_2	IF_17
0x4000982	      0x664183f80f	                            cmp r8w, 0xf	       491	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	IF_18
0x4000987	     0xf86f30a0000	                           jbe 0x4001480	       491	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	IF_18
0x400098d	      0x664183f810	                           cmp r8w, 0x10	       497	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4000992	     0xf8491090000	                            je 0x4001329	       497	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4000998	      0x664183f811	                           cmp r8w, 0x11	       509	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x400099d	     0xf84790e0000	                            je 0x400181c	       509	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x40009a3	          0x8d7807	                      lea edi, [rax + 7]	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009a6	            0x39fb	                            cmp ebx, edi	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009a8	            0x7333	                           jae 0x40009dd	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009aa	          0x4585f6	                         test r14d, r14d	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009ad	     0xf8468080000	                            je 0x400121b	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009b3	            0x89d9	                            mov ecx, ebx	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009b5	            0xeb09	                           jmp 0x40009c0	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009b7	          0x4585f6	                         test r14d, r14d	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009ba	     0xf841e050000	                            je 0x4000ede	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009c0	        0x4983c401	                              add r12, 1	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009c4	    0x410fb67424ff	               movzx esi, byte [r12 - 1]	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009ca	        0x4183ee01	                             sub r14d, 1	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009ce	          0x48d3e6	                             shl rsi, cl	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009d1	          0x83c108	                              add ecx, 8	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009d4	          0x4801f5	                            add rbp, rsi	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009d7	            0x39f9	                            cmp ecx, edi	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009d9	            0x72dc	                            jb 0x40009b7	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009db	            0x89cb	                            mov ebx, ecx	       517	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009dd	            0x89c1	                            mov ecx, eax	       518	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009df	          0x4489ee	                           mov esi, r13d	       521	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009e2	          0x48d3ed	                             shr rbp, cl	       518	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009e5	            0x29c6	                            sub esi, eax	       521	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009e7	            0x89e9	                            mov ecx, ebp	       520	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009e9	             0x1f3	                            add ebx, esi	       521	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009eb	        0x48c1ed07	                              shr rbp, 7	       521	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009ef	          0x83e17f	                           and ecx, 0x7f	       520	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009f2	            0x31f6	                            xor esi, esi	       519	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009f4	          0x83c10b	                            add ecx, 0xb	       520	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_3
0x40009f7	          0x4401c9	                            add ecx, r9d	       523	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_22
0x40009fa	          0x4439d1	                           cmp ecx, r10d	       523	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_22
0x40009fd	     0xf87ba100000	                            ja 0x4001abd	       523	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_22
0x4000a03	          0x4489c8	                            mov eax, r9d	       529	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	WHILE_4
0x4000a06	        0x4183c101	                              add r9d, 1	       529	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	WHILE_4
0x4000a0a	          0x4139c9	                            cmp r9d, ecx	       528	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	WHILE_4
0x4000a0d	    0x6689b4428800	       mov word [rdx + rax*2 + 0x88], si	       529	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	WHILE_4
0x4000a15	            0x75ec	                           jne 0x4000a03	       528	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	WHILE_4
0x4000a17	        0x44894a7c	             mov dword [rdx + 0x7c], r9d	       528	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	WHILE_4
0x4000a1b	      0xe9e7feffff	                           jmp 0x4000907	       528	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	WHILE_4
0x4000a20	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       556	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000a25	    0xc70012000000	                   mov dword [rax], 0x12	       556	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000a2b	        0x4183fe05	                             cmp r14d, 5	       558	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x4000a2f	            0x760e	                           jbe 0x4000a3f	       558	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x4000a31	    0x817c24080101	              cmp dword [rsp + 8], 0x101	       558	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x4000a39	     0xf875b080000	                            ja 0x400129a	       558	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x4000a3f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a44	      0xbf01000000	                              mov edi, 1	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a49	          0x8b4868	            mov ecx, dword [rax + 0x68] 	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a4c	        0x4c8b4058	              mov r8, qword [rax + 0x58]	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a50	            0xd3e7	                             shl edi, cl	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a52	          0x83ef01	                              sub edi, 1	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a55	            0x89f8	                            mov eax, edi	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a57	            0x21e8	                            and eax, ebp	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a59	        0x498d0480	                   lea rax, [r8 + rax*4]	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a5d	         0xfb67001	               movzx esi, byte [rax + 1]	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a61	           0xfb610	                   movzx edx, byte [rax]	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a64	      0x440fb74802	               movzx r9d, word [rax + 2]	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a69	        0x400fb6c6	                          movzx eax, sil	       566	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3	IF_27
0x4000a6d	            0x39c3	                            cmp ebx, eax	       566	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3	IF_27
0x4000a6f	            0x734b	                           jae 0x4000abc	       566	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3	IF_27
0x4000a71	          0x4585f6	                         test r14d, r14d	       567	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a74	     0xf84a1070000	                            je 0x400121b	       567	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a7a	            0x89d9	                            mov ecx, ebx	       567	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a7c	            0xeb09	                           jmp 0x4000a87	       567	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a7e	          0x4585f6	                         test r14d, r14d	       567	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a81	     0xf8457040000	                            je 0x4000ede	       567	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a87	        0x4983c401	                              add r12, 1	       567	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a8b	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       567	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a91	        0x4183ee01	                             sub r14d, 1	       567	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a95	          0x48d3e0	                             shl rax, cl	       567	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a98	          0x83c108	                              add ecx, 8	       567	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a9b	          0x4801c5	                            add rbp, rax	       567	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000a9e	            0x89f8	                            mov eax, edi	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000aa0	            0x21e8	                            and eax, ebp	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000aa2	        0x498d0480	                   lea rax, [r8 + rax*4]	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000aa6	         0xfb67001	               movzx esi, byte [rax + 1]	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000aaa	           0xfb610	                   movzx edx, byte [rax]	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000aad	      0x440fb74802	               movzx r9d, word [rax + 2]	       565	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3
0x4000ab2	        0x400fb6c6	                          movzx eax, sil	       566	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3	IF_27
0x4000ab6	            0x39c8	                            cmp eax, ecx	       566	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3	IF_27
0x4000ab8	            0x77c4	                            ja 0x4000a7e	       566	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3	IF_27
0x4000aba	            0x89cb	                            mov ebx, ecx	       566	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	FOR_3	IF_27
0x4000abc	            0x84d2	                             test dl, dl	       569	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28
0x4000abe	     0xf844f090000	                            je 0x4001413	       569	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28
0x4000ac4	          0xf6c2f0	                           test dl, 0xf0	       569	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28
0x4000ac7	     0xf858c0c0000	                           jne 0x4001759	       569	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28
0x4000acd	          0x8d0c02	                    lea ecx, [rdx + rax]	       573	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000ad0	      0xbf01000000	                              mov edi, 1	       573	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000ad5	            0xd3e7	                             shl edi, cl	       573	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000ad7	            0x89f1	                            mov ecx, esi	       572	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000ad9	          0x83ef01	                              sub edi, 1	       573	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000adc	            0x89fa	                            mov edx, edi	       572	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000ade	            0x21ea	                            and edx, ebp	       572	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000ae0	            0xeb28	                           jmp 0x4000b0a	       572	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000ae2	          0x4585f6	                         test r14d, r14d	       575	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000ae5	     0xf8430070000	                            je 0x400121b	       575	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000aeb	        0x4983c401	                              add r12, 1	       575	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000aef	    0x410fb65424ff	               movzx edx, byte [r12 - 1]	       575	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000af5	            0x89d9	                            mov ecx, ebx	       575	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000af7	        0x4183ee01	                             sub r14d, 1	       575	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000afb	          0x83c308	                              add ebx, 8	       575	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000afe	          0x48d3e2	                             shl rdx, cl	       575	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000b01	            0x89c1	                            mov ecx, eax	       572	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000b03	          0x4801d5	                            add rbp, rdx	       575	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000b06	            0x89fa	                            mov edx, edi	       572	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000b08	            0x21ea	                            and edx, ebp	       572	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000b0a	            0xd3ea	                             shr edx, cl	       572	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000b0c	          0x4401ca	                            add edx, r9d	       572	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000b0f	        0x498d0c90	                   lea rcx, [r8 + rdx*4]	       572	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000b13	         0xfb67101	               movzx esi, byte [rcx + 1]	       574	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4	IF_29
0x4000b17	           0xfb611	                   movzx edx, byte [rcx]	       572	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000b1a	      0x440fb75102	              movzx r10d, word [rcx + 2]	       572	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4
0x4000b1f	          0x8d0c30	                    lea ecx, [rax + rsi]	       574	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4	IF_29
0x4000b22	            0x39d9	                            cmp ecx, ebx	       574	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4	IF_29
0x4000b24	            0x77bc	                            ja 0x4000ae2	       574	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28	FOR_4	IF_29
0x4000b26	            0x29c3	                            sub ebx, eax	       577	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28
0x4000b28	            0x89c1	                            mov ecx, eax	       577	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28
0x4000b2a	          0x4889ef	                            mov rdi, rbp	       577	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28
0x4000b2d	            0x89d8	                            mov eax, ebx	       577	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28
0x4000b2f	          0x48d3ef	                             shr rdi, cl	       577	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_28
0x4000b32	            0x89f1	                            mov ecx, esi	       579	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000b34	            0x29f0	                            sub eax, esi	       579	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000b36	          0x48d3ef	                             shr rdi, cl	       579	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000b39	            0x84d2	                             test dl, dl	       581	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_30
0x4000b3b	            0x89c3	                            mov ebx, eax	       579	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000b3d	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       580	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000b42	          0x4889fd	                            mov rbp, rdi	       579	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000b45	        0x4489504c	            mov dword [rax + 0x4c], r10d	       580	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000b49	     0xf84d4080000	                            je 0x4001423	       581	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_30
0x4000b4f	          0xf6c220	                           test dl, 0x20	       585	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_31
0x4000b52	     0xf85d1060000	                           jne 0x4001229	       585	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_31
0x4000b58	          0xf6c240	                           test dl, 0x40	       589	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_32
0x4000b5b	     0xf842e0d0000	                            je 0x400188f	       589	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_32
0x4000b61	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       590	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_32
0x4000b66	    0x48c740300000	               mov qword [rax + 0x30], 0	       590	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_32
0x4000b6e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       591	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_32
0x4000b73	    0xc7001b000000	                   mov dword [rax], 0x1b	       591	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_32
0x4000b79	      0xb81b000000	                           mov eax, 0x1b	       592	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_32
0x4000b7e	      0xe993f7ffff	                           jmp 0x4000316	       592	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_32
0x4000b83	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       352	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_3
0x4000b88	        0x448b5808	               mov r11d, dword [rax + 8]	       352	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_3
0x4000b8c	          0x4585db	                         test r11d, r11d	       352	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_3
0x4000b8f	     0xf84c6060000	                            je 0x400125b	       352	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_3
0x4000b95	          0x83fb0f	                            cmp ebx, 0xf	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000b98	            0x7734	                            ja 0x4000bce	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000b9a	          0x4585f6	                         test r14d, r14d	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000b9d	     0xf8478060000	                            je 0x400121b	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000ba3	            0x89d9	                            mov ecx, ebx	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000ba5	            0xeb09	                           jmp 0x4000bb0	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000ba7	          0x4585f6	                         test r14d, r14d	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000baa	     0xf842e030000	                            je 0x4000ede	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000bb0	        0x4983c401	                              add r12, 1	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000bb4	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000bba	        0x4183ee01	                             sub r14d, 1	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000bbe	          0x48d3e0	                             shl rax, cl	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000bc1	          0x83c108	                              add ecx, 8	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000bc4	          0x4801c5	                            add rbp, rax	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000bc7	          0x83f90f	                            cmp ecx, 0xf	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000bca	            0x76db	                           jbe 0x4000ba7	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000bcc	            0x89cb	                            mov ebx, ecx	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000bce	            0x89e8	                            mov eax, ebp	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000bd0	          0x4889e9	                            mov rcx, rbp	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000bd3	    0x48ba11420821	           movabs rdx, 0x842108421084211	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000bdd	          0xc1e008	                              shl eax, 8	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000be0	        0x48c1e908	                              shr rcx, 8	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000be4	      0x2500ff0000	                         and eax, 0xff00	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000be9	          0x4801c1	                            add rcx, rax	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000bec	          0x4889c8	                            mov rax, rcx	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000bef	          0x48f7e2	                                 mul rdx	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000bf2	          0x4889c8	                            mov rax, rcx	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000bf5	          0x4829d0	                            sub rax, rdx	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000bf8	          0x48d1e8	                              shr rax, 1	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000bfb	          0x4801d0	                            add rax, rdx	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000bfe	        0x48c1e804	                              shr rax, 4	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000c02	          0x4889c2	                            mov rdx, rax	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000c05	        0x48c1e205	                              shl rdx, 5	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000c09	          0x4829c2	                            sub rdx, rax	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000c0c	          0x4839d1	                            cmp rcx, rdx	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000c0f	     0xf84140b0000	                            je 0x4001729	       357	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000c15	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       359	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000c1a	    0x48c740300000	               mov qword [rax + 0x30], 0	       359	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000c22	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       360	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000c27	    0xc7001b000000	                   mov dword [rax], 0x1b	       360	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000c2d	      0xb81b000000	                           mov eax, 0x1b	       361	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000c32	      0xe9dff6ffff	                           jmp 0x4000316	       361	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000c37	      0x448b6c2408	               mov r13d, dword [rsp + 8]	       673	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_47
0x4000c3c	          0x4585ed	                         test r13d, r13d	       673	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_47
0x4000c3f	     0xf84600c0000	                            je 0x40018a5	       673	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_47
0x4000c45	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       674	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000c4a	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       674	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000c4f	      0x836c240801	                  sub dword [rsp + 8], 1	       675	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000c54	          0x8b474c	            mov eax, dword [rdi + 0x4c] 	       674	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000c57	            0x8802	                      mov byte [rdx], al	       674	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000c59	        0x488d4201	                      lea rax, [rdx + 1]	       674	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000c5d	    0xc70712000000	                   mov dword [rdi], 0x12	       676	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000c63	      0x4889442410	             mov qword [rsp + 0x10], rax	       674	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000c68	      0xb812000000	                           mov eax, 0x12	       677	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000c6d	      0xe9a4f6ffff	                           jmp 0x4000316	       677	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000c72	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       679	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000c77	        0x448b5808	               mov r11d, dword [rax + 8]	       679	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000c7b	          0x4585db	                         test r11d, r11d	       679	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000c7e	     0xf847e0d0000	                            je 0x4001a02	       679	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000c84	          0x83fb1f	                           cmp ebx, 0x1f	       680	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000c87	            0x7734	                            ja 0x4000cbd	       680	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000c89	          0x4585f6	                         test r14d, r14d	       680	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000c8c	     0xf8489050000	                            je 0x400121b	       680	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000c92	            0x89d9	                            mov ecx, ebx	       680	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000c94	            0xeb09	                           jmp 0x4000c9f	       680	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000c96	          0x4585f6	                         test r14d, r14d	       680	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000c99	     0xf843f020000	                            je 0x4000ede	       680	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000c9f	        0x4983c401	                              add r12, 1	       680	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000ca3	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       680	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000ca9	        0x4183ee01	                             sub r14d, 1	       680	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000cad	          0x48d3e0	                             shl rax, cl	       680	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000cb0	          0x83c108	                              add ecx, 8	       680	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000cb3	          0x4801c5	                            add rbp, rax	       680	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000cb6	          0x83f91f	                           cmp ecx, 0x1f	       680	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000cb9	            0x76db	                           jbe 0x4000c96	       680	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000cbb	            0x89cb	                            mov ebx, ecx	       680	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000cbd	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       682	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000cc2	          0x8b0424	                    mov eax, dword [rsp]	       681	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000cc5	        0x2b442408	                sub eax, dword [rsp + 8]	       681	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000cc9	        0x48014628	            add qword [rsi + 0x28], rax 	       682	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000ccd	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       683	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000cd2	        0x89442474	             mov dword [rsp + 0x74], eax	       681	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000cd6	        0x48014620	            add qword [rsi + 0x20], rax 	       683	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4000cda	            0x85c0	                           test eax, eax	       684	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_49
0x4000cdc	     0xf85d5070000	                           jne 0x40014b7	       684	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_49
0x4000ce2	          0x4889ea	                            mov rdx, rbp	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000ce5	          0x4889e8	                            mov rax, rbp	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000ce8	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000ced	        0x48c1ea18	                           shr rdx, 0x18	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000cf1	        0x48c1e808	                              shr rax, 8	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000cf5	      0x2500ff0000	                         and eax, 0xff00	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000cfa	           0xfb6d2	                           movzx edx, dl	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000cfd	          0x4801c2	                            add rdx, rax	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d00	          0x4889e8	                            mov rax, rbp	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d03	      0x2500ff0000	                         and eax, 0xff00	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d08	        0x48c1e008	                              shl rax, 8	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d0c	          0x4801c2	                            add rdx, rax	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d0f	          0x4889e8	                            mov rax, rbp	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d12	        0x48c1e018	                           shl rax, 0x18	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d16	            0x89c0	                            mov eax, eax	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d18	          0x4801d0	                            add rax, rdx	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d1b	        0x483b4618	            cmp rax, qword [rsi + 0x18] 	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d1f	     0xf84180d0000	                            je 0x4001a3d	       688	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d25	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       690	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d2a	    0x48c740300000	               mov qword [rax + 0x30], 0	       690	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d32	        0x8b442408	                mov eax, dword [rsp + 8]	       692	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d36	    0xc7061b000000	                   mov dword [rsi], 0x1b	       691	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d3c	          0x890424	                    mov dword [rsp], eax	       692	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d3f	      0xb81b000000	                           mov eax, 0x1b	       692	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d44	      0xe9cdf5ffff	                           jmp 0x4000316	       692	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d49	        0x8b542408	                mov edx, dword [rsp + 8]	       692	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d4d	          0x4d89e3	                            mov r11, r12	       692	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d50	          0x4489f0	                           mov eax, r14d	       692	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d53	          0x4989ef	                            mov r15, rbp	       692	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d56	          0x4189dd	                           mov r13d, ebx	       692	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4000d59	      0xc644245000	                mov byte [rsp + 0x50], 0	       350	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000d5e	    0xc744243cfdff	     mov dword [rsp + 0x3c], 0xfffffffd 	       701	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000d66	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       716	inflate.c	FUNCTION_7
0x4000d6b	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       716	inflate.c	FUNCTION_7
0x4000d70	        0x48894608	                mov qword [rsi + 8], rax	       716	inflate.c	FUNCTION_7
0x4000d74	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       716	inflate.c	FUNCTION_7
0x4000d79	        0x48894e18	             mov qword [rsi + 0x18], rcx	       716	inflate.c	FUNCTION_7
0x4000d7d	        0x48895620	             mov qword [rsi + 0x20], rdx	       716	inflate.c	FUNCTION_7
0x4000d81	          0x4c891e	                    mov qword [rsi], r11	       716	inflate.c	FUNCTION_7
0x4000d84	        0x448b482c	            mov r9d, dword [rax + 0x2c] 	       717	inflate.c	FUNCTION_7	IF_51
0x4000d88	        0x4c897840	             mov qword [rax + 0x40], r15	       716	inflate.c	FUNCTION_7
0x4000d8c	        0x44896848	            mov dword [rax + 0x48], r13d	       716	inflate.c	FUNCTION_7
0x4000d90	          0x4585c9	                           test r9d, r9d	       717	inflate.c	FUNCTION_7	IF_51
0x4000d93	     0xf852c010000	                           jne 0x4000ec5	       717	inflate.c	FUNCTION_7	IF_51
0x4000d99	          0x833817	                   cmp dword [rax], 0x17	       717	inflate.c	FUNCTION_7	IF_51
0x4000d9c	     0xf860e010000	                           jbe 0x4000eb0	       717	inflate.c	FUNCTION_7	IF_51
0x4000da2	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       717	inflate.c	FUNCTION_7	IF_51
0x4000da6	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       720	inflate.c	FUNCTION_7
0x4000dab	        0x8b4c2430	            mov ecx, dword [rsp + 0x30] 	       720	inflate.c	FUNCTION_7
0x4000daf	          0x8b3c24	                    mov edi, dword [rsp]	       721	inflate.c	FUNCTION_7
0x4000db2	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       724	inflate.c	FUNCTION_7
0x4000db7	          0x2b4a08	                sub ecx, dword [rdx + 8]	       720	inflate.c	FUNCTION_7
0x4000dba	            0x29c7	                            sub edi, eax	       721	inflate.c	FUNCTION_7
0x4000dbc	        0x897c2460	             mov dword [rsp + 0x60], edi	       721	inflate.c	FUNCTION_7
0x4000dc0	            0x89c8	                            mov eax, ecx	       722	inflate.c	FUNCTION_7
0x4000dc2	        0x48014210	            add qword [rdx + 0x10], rax 	       722	inflate.c	FUNCTION_7
0x4000dc6	            0x89f8	                            mov eax, edi	       723	inflate.c	FUNCTION_7
0x4000dc8	        0x48014228	            add qword [rdx + 0x28], rax 	       723	inflate.c	FUNCTION_7
0x4000dcc	        0x894c2458	             mov dword [rsp + 0x58], ecx	       720	inflate.c	FUNCTION_7
0x4000dd0	        0x448b4608	                mov r8d, dword [rsi + 8]	       725	inflate.c	FUNCTION_7	IF_52
0x4000dd4	        0x48014620	            add qword [rsi + 0x20], rax 	       724	inflate.c	FUNCTION_7
0x4000dd8	          0x4585c0	                           test r8d, r8d	       725	inflate.c	FUNCTION_7	IF_52
0x4000ddb	            0x7408	                            je 0x4000de5	       725	inflate.c	FUNCTION_7	IF_52
0x4000ddd	            0x85ff	                           test edi, edi	       725	inflate.c	FUNCTION_7	IF_52
0x4000ddf	     0xf8526010000	                           jne 0x4000f0b	       725	inflate.c	FUNCTION_7	IF_52
0x4000de5	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       729	inflate.c	FUNCTION_7
0x4000dea	      0xb980000000	                           mov ecx, 0x80	       729	inflate.c	FUNCTION_7
0x4000def	      0xba00000000	                              mov edx, 0	       729	inflate.c	FUNCTION_7
0x4000df4	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       729	inflate.c	FUNCTION_7
0x4000df9	        0x837b0401	                  cmp dword [rbx + 4], 1	       729	inflate.c	FUNCTION_7
0x4000dfd	            0x19c0	                            sbb eax, eax	       729	inflate.c	FUNCTION_7
0x4000dff	            0xf7d0	                                 not eax	       729	inflate.c	FUNCTION_7
0x4000e01	          0x83e040	                           and eax, 0x40	       729	inflate.c	FUNCTION_7
0x4000e04	           0x34348	             add eax, dword [rbx + 0x48]	       729	inflate.c	FUNCTION_7
0x4000e07	          0x833b0b	                    cmp dword [rbx], 0xb	       729	inflate.c	FUNCTION_7
0x4000e0a	           0xf44d1	                          cmove edx, ecx	       729	inflate.c	FUNCTION_7
0x4000e0d	             0x1d0	                            add eax, edx	       729	inflate.c	FUNCTION_7
0x4000e0f	      0x807c245000	                cmp byte [rsp + 0x50], 0	       732	inflate.c	FUNCTION_7	IF_53
0x4000e14	          0x894748	             mov dword [rdi + 0x48], eax	       729	inflate.c	FUNCTION_7
0x4000e17	            0x7472	                            je 0x4000e8b	       732	inflate.c	FUNCTION_7	IF_53
0x4000e19	      0x48837f2000	               cmp qword [rdi + 0x20], 0	       732	inflate.c	FUNCTION_7	IF_53
0x4000e1e	            0x746b	                            je 0x4000e8b	       732	inflate.c	FUNCTION_7	IF_53
0x4000e20	      0x48837f0800	                  cmp qword [rdi + 8], 0	       733	inflate.c	FUNCTION_7	IF_53
0x4000e25	            0x7564	                           jne 0x4000e8b	       733	inflate.c	FUNCTION_7	IF_53
0x4000e27	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	       150	inflate.c	FUNCTION_6	IF_1
0x4000e2b	          0x4885d2	                           test rdx, rdx	       150	inflate.c	FUNCTION_6	IF_1
0x4000e2e	            0x7454	                            je 0x4000e84	       150	inflate.c	FUNCTION_6	IF_1
0x4000e30	          0x833a0d	                    cmp dword [rdx], 0xd	       153	inflate.c	FUNCTION_6	IF_2
0x4000e33	      0xb8fdffffff	                     mov eax, 0xfffffffd	       157	inflate.c	FUNCTION_6
0x4000e38	     0xf84bd050000	                            je 0x40013fb	       153	inflate.c	FUNCTION_6	IF_2
0x4000e3e	    0x4881c4980000	                           add rsp, 0x98	       740	inflate.c	FUNCTION_7
0x4000e45	              0x5b	                                 pop rbx	       740	inflate.c	FUNCTION_7
0x4000e46	              0x5d	                                 pop rbp	       740	inflate.c	FUNCTION_7
0x4000e47	            0x415c	                                 pop r12	       740	inflate.c	FUNCTION_7
0x4000e49	            0x415d	                                 pop r13	       740	inflate.c	FUNCTION_7
0x4000e4b	            0x415e	                                 pop r14	       740	inflate.c	FUNCTION_7
0x4000e4d	            0x415f	                                 pop r15	       740	inflate.c	FUNCTION_7
0x4000e4f	              0xc3	                                     ret	       740	inflate.c	FUNCTION_7
0x4000e50	          0x4d89e3	                            mov r11, r12	       740	inflate.c	FUNCTION_7
0x4000e53	          0x4489f0	                           mov eax, r14d	       740	inflate.c	FUNCTION_7
0x4000e56	          0x4989ef	                            mov r15, rbp	       740	inflate.c	FUNCTION_7
0x4000e59	          0x4189dd	                           mov r13d, ebx	       740	inflate.c	FUNCTION_7
0x4000e5c	        0x8b542408	                mov edx, dword [rsp + 8]	       740	inflate.c	FUNCTION_7
0x4000e60	      0xc644245000	                mov byte [rsp + 0x50], 0	       350	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000e65	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	       698	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000e6d	      0xe9f4feffff	                           jmp 0x4000d66	       698	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000e72	      0xb8fcffffff	                     mov eax, 0xfffffffc	       704	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000e77	            0xebc5	                           jmp 0x4000e3e	       704	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000e79	      0x48837f0800	                  cmp qword [rdi + 8], 0	       339	inflate.c	FUNCTION_7	IF_1
0x4000e7e	     0xf84f4f3ffff	                            je 0x4000278	       339	inflate.c	FUNCTION_7	IF_1
0x4000e84	      0xb8feffffff	                     mov eax, 0xfffffffe	       707	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000e89	            0xebb3	                           jmp 0x4000e3e	       707	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000e8b	        0x8b442458	            mov eax, dword [rsp + 0x58] 	       736	inflate.c	FUNCTION_7	IF_54
0x4000e8f	         0xb442460	              or eax, dword [rsp + 0x60]	       736	inflate.c	FUNCTION_7	IF_54
0x4000e93	            0x740b	                            je 0x4000ea0	       736	inflate.c	FUNCTION_7	IF_54
0x4000e95	      0x837c247005	               cmp dword [rsp + 0x70], 5	       736	inflate.c	FUNCTION_7	IF_54
0x4000e9a	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	       736	inflate.c	FUNCTION_7	IF_54
0x4000e9e	            0x759e	                           jne 0x4000e3e	       736	inflate.c	FUNCTION_7	IF_54
0x4000ea0	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	       736	inflate.c	FUNCTION_7	IF_54
0x4000ea4	      0xb8fbffffff	                     mov eax, 0xfffffffb	       736	inflate.c	FUNCTION_7	IF_54
0x4000ea9	            0x85d2	                           test edx, edx	       736	inflate.c	FUNCTION_7	IF_54
0x4000eab	           0xf45c2	                         cmovne eax, edx	       736	inflate.c	FUNCTION_7	IF_54
0x4000eae	            0xeb8e	                           jmp 0x4000e3e	       736	inflate.c	FUNCTION_7	IF_54
0x4000eb0	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       717	inflate.c	FUNCTION_7	IF_51
0x4000eb5	          0x8b1424	                    mov edx, dword [rsp]	       717	inflate.c	FUNCTION_7	IF_51
0x4000eb8	        0x488b4020	            mov rax, qword [rax + 0x20] 	       717	inflate.c	FUNCTION_7	IF_51
0x4000ebc	          0x4839c2	                            cmp rdx, rax	       717	inflate.c	FUNCTION_7	IF_51
0x4000ebf	     0xf84e1feffff	                            je 0x4000da6	       717	inflate.c	FUNCTION_7	IF_51
0x4000ec5	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	       718	inflate.c	FUNCTION_7	CALL_9
0x4000eca	          0x8b3424	                    mov esi, dword [rsp]	       718	inflate.c	FUNCTION_7	CALL_9
0x4000ecd	          0x4889df	                            mov rdi, rbx	       718	inflate.c	FUNCTION_7	CALL_9
0x4000ed0	      0xe86bf1ffff	              call sym.zlib_updatewindow	       718	inflate.c	FUNCTION_7	CALL_9
0x4000ed5	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       718	inflate.c	FUNCTION_7	CALL_9
0x4000ed9	      0xe9c8feffff	                           jmp 0x4000da6	       718	inflate.c	FUNCTION_7	CALL_9
0x4000ede	          0x4d89e3	                            mov r11, r12	       718	inflate.c	FUNCTION_7	CALL_9
0x4000ee1	          0x4989ef	                            mov r15, rbp	       718	inflate.c	FUNCTION_7	CALL_9
0x4000ee4	          0x4189cd	                           mov r13d, ecx	       718	inflate.c	FUNCTION_7	CALL_9
0x4000ee7	      0x448b54243c	           mov r10d, dword [rsp + 0x3c] 	       718	inflate.c	FUNCTION_7	CALL_9
0x4000eec	        0x8b542408	                mov edx, dword [rsp + 8]	       718	inflate.c	FUNCTION_7	CALL_9
0x4000ef0	          0x4585d2	                         test r10d, r10d	       718	inflate.c	FUNCTION_7	CALL_9
0x4000ef3	           0xf94c1	                                 sete cl	       718	inflate.c	FUNCTION_7	CALL_9
0x4000ef6	      0x837c247002	               cmp dword [rsp + 0x70], 2	       718	inflate.c	FUNCTION_7	CALL_9
0x4000efb	           0xf94c0	                                 sete al	       718	inflate.c	FUNCTION_7	CALL_9
0x4000efe	            0x21c1	                            and ecx, eax	       718	inflate.c	FUNCTION_7	CALL_9
0x4000f00	            0x31c0	                            xor eax, eax	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000f02	        0x884c2450	               mov byte [rsp + 0x50], cl	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000f06	      0xe95bfeffff	                           jmp 0x4000d66	       356	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000f0b	        0x488b5a18	            mov rbx, qword [rdx + 0x18] 	       727	inflate.c	FUNCTION_7	IF_52
0x4000f0f	        0x488b5618	            mov rdx, qword [rsi + 0x18] 	       727	inflate.c	FUNCTION_7	IF_52
0x4000f13	        0x48891c24	                    mov qword [rsp], rbx	       727	inflate.c	FUNCTION_7	IF_52
0x4000f17	        0x488b3424	                    mov rsi, qword [rsp]	        86	zutil.h	FUNCTION_10	IF_1
0x4000f1b	        0x440fb7fa	                          movzx r15d, dx	        82	zutil.h	FUNCTION_10
0x4000f1f	        0x48c1ea10	                           shr rdx, 0x10	        83	zutil.h	FUNCTION_10
0x4000f23	           0xfb7da	                           movzx ebx, dx	        83	zutil.h	FUNCTION_10
0x4000f26	          0x4829c6	                            sub rsi, rax	        86	zutil.h	FUNCTION_10	IF_1
0x4000f29	      0x48895c2410	             mov qword [rsp + 0x10], rbx	        83	zutil.h	FUNCTION_10
0x4000f2e	     0xf84ea070000	                            je 0x400171e	        86	zutil.h	FUNCTION_10	IF_1
0x4000f34	        0x897c2430	             mov dword [rsp + 0x30], edi	        86	zutil.h	FUNCTION_10	IF_1
0x4000f38	          0x4989f1	                             mov r9, rsi	       100	zutil.h	FUNCTION_10	WHILE_1
0x4000f3b	        0x8b542430	            mov edx, dword [rsp + 0x30] 	        89	zutil.h	FUNCTION_10	WHILE_1
0x4000f3f	      0xb8b0150000	                         mov eax, 0x15b0	        89	zutil.h	FUNCTION_10	WHILE_1
0x4000f44	    0x81fab0150000	                         cmp edx, 0x15b0	        89	zutil.h	FUNCTION_10	WHILE_1
0x4000f4a	           0xf46c2	                         cmovbe eax, edx	        89	zutil.h	FUNCTION_10	WHILE_1
0x4000f4d	            0x29c2	                            sub edx, eax	        90	zutil.h	FUNCTION_10	WHILE_1
0x4000f4f	          0x83f80f	                            cmp eax, 0xf	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000f52	        0x89542430	             mov dword [rsp + 0x30], edx	        90	zutil.h	FUNCTION_10	WHILE_1
0x4000f56	     0xf86a1010000	                           jbe 0x40010fd	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000f5c	          0x83e810	                           sub eax, 0x10	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000f5f	        0x89442448	             mov dword [rsp + 0x48], eax	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000f63	          0xc1e804	                              shr eax, 4	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000f66	        0x89442440	             mov dword [rsp + 0x40], eax	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000f6a	        0x4883c001	                              add rax, 1	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000f6e	        0x48c1e004	                              shl rax, 4	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000f72	          0x4c01c8	                             add rax, r9	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000f75	      0x4889442418	             mov qword [rsp + 0x18], rax	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000f7a	        0x450fb631	                   movzx r14d, byte [r9]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000f7e	      0x450fb66902	               movzx r13d, byte [r9 + 2]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000f83	        0x4983c110	                            add r9, 0x10	        93	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000f87	      0x450fb661f4	             movzx r12d, byte [r9 - 0xc]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000f8c	      0x410fb669f5	              movzx ebp, byte [r9 - 0xb]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000f91	      0x450fb659f7	               movzx r11d, byte [r9 - 9]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000f96	      0x450fb651f8	               movzx r10d, byte [r9 - 8]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000f9b	      0x450fb641f9	                movzx r8d, byte [r9 - 7]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fa0	      0x410fb679fa	                movzx edi, byte [r9 - 6]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fa5	        0x4b8d043e	                    lea rax, [r14 + r15]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fa9	      0x450fb671f1	             movzx r14d, byte [r9 - 0xf]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fae	      0x410fb671fb	                movzx esi, byte [r9 - 5]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fb3	      0x410fb649fc	                movzx ecx, byte [r9 - 4]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fb8	      0x410fb651fd	                movzx edx, byte [r9 - 3]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fbd	        0x48890424	                    mov qword [rsp], rax	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fc1	      0x450fb679ff	               movzx r15d, byte [r9 - 1]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fc6	          0x4901c6	                            add r14, rax	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fc9	      0x410fb641fe	                movzx eax, byte [r9 - 2]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fce	      0x4b8d5c3500	                    lea rbx, [r13 + r14]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fd3	      0x450fb669f3	             movzx r13d, byte [r9 - 0xd]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fd8	        0x4c033424	                    add r14, qword [rsp]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fdc	      0x48895c2408	                mov qword [rsp + 8], rbx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fe1	      0x4c03742408	                add r14, qword [rsp + 8]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fe6	          0x4901dd	                            add r13, rbx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fe9	      0x410fb659f6	              movzx ebx, byte [r9 - 0xa]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000fee	          0x4d01ec	                            add r12, r13	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000ff1	          0x4d01ee	                            add r14, r13	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000ff4	          0x4c01e5	                            add rbp, r12	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000ff7	          0x4d01e6	                            add r14, r12	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000ffa	          0x4801eb	                            add rbx, rbp	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4000ffd	          0x4c01f5	                            add rbp, r14	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001000	          0x4901db	                            add r11, rbx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001003	          0x4801eb	                            add rbx, rbp	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001006	          0x4d01da	                            add r10, r11	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001009	          0x4901db	                            add r11, rbx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400100c	          0x4d01d0	                             add r8, r10	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400100f	          0x4d01da	                            add r10, r11	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001012	          0x4c01c7	                             add rdi, r8	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001015	          0x4d01d0	                             add r8, r10	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001018	          0x4801fe	                            add rsi, rdi	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400101b	          0x4c01c7	                             add rdi, r8	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400101e	          0x4801f1	                            add rcx, rsi	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001021	          0x4801fe	                            add rsi, rdi	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001024	          0x4801ca	                            add rdx, rcx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001027	          0x4801f1	                            add rcx, rsi	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400102a	          0x4801d0	                            add rax, rdx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400102d	          0x4801ca	                            add rdx, rcx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001030	          0x4901c7	                            add r15, rax	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001033	          0x4801d0	                            add rax, rdx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001036	          0x4c01f8	                            add rax, r15	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001039	      0x4801442410	            add qword [rsp + 0x10], rax 	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400103e	      0x4c3b4c2418	              cmp r9, qword [rsp + 0x18]	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001043	     0xf8531ffffff	                           jne 0x4000f7a	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001049	        0x8b442440	            mov eax, dword [rsp + 0x40] 	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400104d	        0x8b742448	            mov esi, dword [rsp + 0x48] 	        96	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001051	          0xc1e004	                              shl eax, 4	        96	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001054	            0x29c6	                            sub esi, eax	        96	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001056	            0x89f0	                            mov eax, esi	        96	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001058	     0xf85a4000000	                           jne 0x4001102	        96	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x400105e	    0x48b8cdc52f0d	             movabs rax, 0xf00e10d2fc5cd	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001068	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       101	zutil.h	FUNCTION_10	WHILE_1
0x400106d	        0x8b742430	            mov esi, dword [rsp + 0x30] 	        88	zutil.h	FUNCTION_10	WHILE_1
0x4001071	          0x49f7e7	                                 mul r15	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001074	          0x4c89f8	                            mov rax, r15	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001077	          0x4829d0	                            sub rax, rdx	       100	zutil.h	FUNCTION_10	WHILE_1
0x400107a	          0x48d1e8	                              shr rax, 1	       100	zutil.h	FUNCTION_10	WHILE_1
0x400107d	          0x4801c2	                            add rdx, rax	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001080	        0x48c1ea0f	                            shr rdx, 0xf	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001084	          0x4889d1	                            mov rcx, rdx	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001087	          0x4889d0	                            mov rax, rdx	       100	zutil.h	FUNCTION_10	WHILE_1
0x400108a	        0x48c1e104	                              shl rcx, 4	       100	zutil.h	FUNCTION_10	WHILE_1
0x400108e	        0x48c1e010	                           shl rax, 0x10	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001092	          0x4829c8	                            sub rax, rcx	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001095	          0x4801c2	                            add rdx, rax	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001098	    0x48b8cdc52f0d	             movabs rax, 0xf00e10d2fc5cd	       101	zutil.h	FUNCTION_10	WHILE_1
0x40010a2	          0x4929d7	                            sub r15, rdx	       100	zutil.h	FUNCTION_10	WHILE_1
0x40010a5	          0x48f7e7	                                 mul rdi	       101	zutil.h	FUNCTION_10	WHILE_1
0x40010a8	          0x4889f8	                            mov rax, rdi	       101	zutil.h	FUNCTION_10	WHILE_1
0x40010ab	          0x4829d0	                            sub rax, rdx	       101	zutil.h	FUNCTION_10	WHILE_1
0x40010ae	          0x48d1e8	                              shr rax, 1	       101	zutil.h	FUNCTION_10	WHILE_1
0x40010b1	          0x4801c2	                            add rdx, rax	       101	zutil.h	FUNCTION_10	WHILE_1
0x40010b4	        0x48c1ea0f	                            shr rdx, 0xf	       101	zutil.h	FUNCTION_10	WHILE_1
0x40010b8	          0x4889d1	                            mov rcx, rdx	       101	zutil.h	FUNCTION_10	WHILE_1
0x40010bb	          0x4889d0	                            mov rax, rdx	       101	zutil.h	FUNCTION_10	WHILE_1
0x40010be	        0x48c1e104	                              shl rcx, 4	       101	zutil.h	FUNCTION_10	WHILE_1
0x40010c2	        0x48c1e010	                           shl rax, 0x10	       101	zutil.h	FUNCTION_10	WHILE_1
0x40010c6	          0x4829c8	                            sub rax, rcx	       101	zutil.h	FUNCTION_10	WHILE_1
0x40010c9	          0x4801c2	                            add rdx, rax	       101	zutil.h	FUNCTION_10	WHILE_1
0x40010cc	          0x4889f8	                            mov rax, rdi	       101	zutil.h	FUNCTION_10	WHILE_1
0x40010cf	          0x4829d0	                            sub rax, rdx	       101	zutil.h	FUNCTION_10	WHILE_1
0x40010d2	            0x85f6	                           test esi, esi	        88	zutil.h	FUNCTION_10	WHILE_1
0x40010d4	      0x4889442410	             mov qword [rsp + 0x10], rax	       101	zutil.h	FUNCTION_10	WHILE_1
0x40010d9	     0xf855cfeffff	                           jne 0x4000f3b	        88	zutil.h	FUNCTION_10	WHILE_1
0x40010df	        0x48c1e010	                           shl rax, 0x10	       103	zutil.h	FUNCTION_10
0x40010e3	          0x4909c7	                             or r15, rax	       103	zutil.h	FUNCTION_10
0x40010e6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       726	inflate.c	FUNCTION_7	IF_52
0x40010eb	        0x4c897818	             mov qword [rax + 0x18], r15	       726	inflate.c	FUNCTION_7	IF_52
0x40010ef	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       726	inflate.c	FUNCTION_7	IF_52
0x40010f4	        0x4c897850	             mov qword [rax + 0x50], r15	       726	inflate.c	FUNCTION_7	IF_52
0x40010f8	      0xe9e8fcffff	                           jmp 0x4000de5	       726	inflate.c	FUNCTION_7	IF_52
0x40010fd	      0x4c894c2418	              mov qword [rsp + 0x18], r9	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001102	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001107	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400110c	          0x83e801	                              sub eax, 1	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400110f	          0x4889c2	                            mov rdx, rax	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001112	      0x488d740701	                lea rsi, [rdi + rax + 1]	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001117	          0x4889f8	                            mov rax, rdi	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400111a	        0x4883c001	                              add rax, 1	        97	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x400111e	         0xfb678ff	               movzx edi, byte [rax - 1]	        97	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001122	          0x4901ff	                            add r15, rdi	        97	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001125	          0x4c01f9	                            add rcx, r15	        98	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001128	          0x4839f0	                            cmp rax, rsi	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x400112b	            0x75ed	                           jne 0x400111a	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x400112d	      0x48894c2410	             mov qword [rsp + 0x10], rcx	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001132	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001137	          0x4863c2	                         movsxd rax, edx	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x400113a	      0x4c8d4c0101	                 lea r9, [rcx + rax + 1]	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x400113f	      0xe91affffff	                           jmp 0x400105e	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001144	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       661	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	ELSE_5
0x4001149	          0x4829c1	                            sub rcx, rax	       661	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	ELSE_5
0x400114c	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       662	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	ELSE_5
0x4001151	          0x8b404c	            mov eax, dword [rax + 0x4c] 	       662	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	ELSE_5
0x4001154	            0x89c2	                            mov edx, eax	       662	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	ELSE_5
0x4001156	        0x8b742408	                mov esi, dword [rsp + 8]	       662	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	ELSE_5
0x400115a	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       666	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400115f	            0x39c6	                            cmp esi, eax	       666	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001161	           0xf46c6	                         cmovbe eax, esi	       666	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001164	            0x29c6	                            sub esi, eax	       665	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001166	            0x29c2	                            sub edx, eax	       666	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001168	        0x89742408	                mov dword [rsp + 8], esi	       665	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400116c	          0x89574c	             mov dword [rdi + 0x4c], edx	       666	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400116f	          0x8d70ff	                      lea esi, [rax - 1]	       666	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001172	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       666	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001177	            0x31c0	                            xor eax, eax	       666	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001179	        0x4883c601	                              add rsi, 1	       666	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400117d	         0xfb61401	             movzx edx, byte [rcx + rax]	       668	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x4001181	          0x881407	                mov byte [rdi + rax], dl	       668	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x4001184	        0x4883c001	                              add rax, 1	       668	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x4001188	          0x4839f0	                            cmp rax, rsi	       669	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x400118b	            0x75f0	                           jne 0x400117d	       669	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x400118d	      0x4801442410	            add qword [rsp + 0x10], rax 	       669	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x4001192	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       670	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_46
0x4001197	        0x448b784c	           mov r15d, dword [rax + 0x4c] 	       670	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_46
0x400119b	          0x4585ff	                         test r15d, r15d	       670	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_46
0x400119e	            0x7410	                            je 0x40011b0	       670	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_46
0x40011a0	          0x4589f5	                          mov r13d, r14d	       670	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_46
0x40011a3	          0x4989ef	                            mov r15, rbp	       670	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_46
0x40011a6	          0x4189db	                           mov r11d, ebx	       670	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_46
0x40011a9	            0x8b00	                    mov eax, dword [rax]	       670	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_46
0x40011ab	      0xe954f1ffff	                           jmp 0x4000304	       670	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_46
0x40011b0	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       670	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_46
0x40011b5	    0xc70012000000	                   mov dword [rax], 0x12	       670	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_46
0x40011bb	      0xb812000000	                           mov eax, 0x12	       670	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_46
0x40011c0	      0xe951f1ffff	                           jmp 0x4000316	       670	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_46
0x40011c5	            0x39f3	                            cmp ebx, esi	       630	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011c7	            0x732f	                           jae 0x40011f8	       630	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011c9	          0x4585f6	                         test r14d, r14d	       630	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011cc	            0x744d	                            je 0x400121b	       630	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011ce	            0x89d9	                            mov ecx, ebx	       630	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011d0	            0xeb09	                           jmp 0x40011db	       630	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011d2	          0x4585f6	                         test r14d, r14d	       630	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011d5	     0xf8403fdffff	                            je 0x4000ede	       630	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011db	        0x4983c401	                              add r12, 1	       630	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011df	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       630	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011e5	        0x4183ee01	                             sub r14d, 1	       630	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011e9	          0x48d3e0	                             shl rax, cl	       630	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011ec	          0x83c108	                              add ecx, 8	       630	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011ef	          0x4801c5	                            add rbp, rax	       630	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011f2	            0x39f1	                            cmp ecx, esi	       630	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011f4	            0x72dc	                            jb 0x40011d2	       630	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011f6	            0x89cb	                            mov ebx, ecx	       630	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011f8	            0x89f1	                            mov ecx, esi	       631	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011fa	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       631	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x40011ff	      0xb801000000	                              mov eax, 1	       631	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x4001204	            0xd3e0	                             shl eax, cl	       631	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x4001206	            0x29f3	                            sub ebx, esi	       632	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x4001208	          0x83e801	                              sub eax, 1	       631	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x400120b	            0x21e8	                            and eax, ebp	       631	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x400120d	           0x34750	             add eax, dword [rdi + 0x50]	       631	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x4001210	          0x48d3ed	                             shr rbp, cl	       632	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x4001213	          0x894750	             mov dword [rdi + 0x50], eax	       631	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x4001216	      0xe93df4ffff	                           jmp 0x4000658	       631	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x400121b	          0x4d89e3	                            mov r11, r12	       631	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x400121e	          0x4989ef	                            mov r15, rbp	       631	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x4001221	          0x4189dd	                           mov r13d, ebx	       631	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x4001224	      0xe9befcffff	                           jmp 0x4000ee7	       631	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_38
0x4001229	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       586	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_31
0x400122e	    0xc7000b000000	                    mov dword [rax], 0xb	       586	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_31
0x4001234	      0xb80b000000	                            mov eax, 0xb	       587	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_31
0x4001239	      0xe9d8f0ffff	                           jmp 0x4000316	       587	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_31
0x400123e	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       642	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_40
0x4001243	    0x48c740300000	               mov qword [rax + 0x30], 0	       642	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_40
0x400124b	    0xc7071b000000	                   mov dword [rdi], 0x1b	       643	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_40
0x4001251	      0xb81b000000	                           mov eax, 0x1b	       644	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_40
0x4001256	      0xe9bbf0ffff	                           jmp 0x4000316	       644	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_40
0x400125b	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       353	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_3
0x4001260	    0xc7000c000000	                    mov dword [rax], 0xc	       353	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_3
0x4001266	      0xb80c000000	                            mov eax, 0xc	       354	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_3
0x400126b	      0xe9a6f0ffff	                           jmp 0x4000316	       354	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_3
0x4001270	            0x29c8	                            sub eax, ecx	       653	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42	IF_43
0x4001272	          0x8b4f2c	            mov ecx, dword [rdi + 0x2c] 	       654	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42	IF_43
0x4001275	            0x29c1	                            sub ecx, eax	       654	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42	IF_43
0x4001277	        0x48034f38	             add rcx, qword [rdi + 0x38]	       654	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42	IF_43
0x400127b	      0xe935f4ffff	                           jmp 0x40006b5	       654	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_42	IF_43
0x4001280	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       625	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001285	          0x83e60f	                            and esi, 0xf	       626	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001288	        0x44894850	             mov dword [rax + 0x50], r9d	       625	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400128c	          0x897054	             mov dword [rax + 0x54], esi	       626	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400128f	    0xc70015000000	                   mov dword [rax], 0x15	       627	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001295	      0xe9aef3ffff	                           jmp 0x4000648	       627	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400129a	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       559	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x400129f	          0x4189db	                           mov r11d, ebx	       559	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012a2	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       559	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012a7	          0x8b3424	                    mov esi, dword [rsp]	       560	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26	CALL_8
0x40012aa	        0x48895818	             mov qword [rax + 0x18], rbx	       559	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012ae	        0x8b5c2408	                mov ebx, dword [rsp + 8]	       559	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012b2	          0x4889c7	                            mov rdi, rax	       560	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26	CALL_8
0x40012b5	          0x4c8920	                    mov qword [rax], r12	       559	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012b8	        0x48895820	             mov qword [rax + 0x20], rbx	       559	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012bc	          0x4489f3	                           mov ebx, r14d	       559	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012bf	        0x48895808	                mov qword [rax + 8], rbx	       559	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012c3	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       559	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012c8	          0x4989df	                            mov r15, rbx	       559	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012cb	        0x44895b48	            mov dword [rbx + 0x48], r11d	       559	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012cf	        0x48896b40	             mov qword [rbx + 0x40], rbp	       559	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012d3	          0x4889c3	                            mov rbx, rax	       560	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26	CALL_8
0x40012d6	      0xe800000000	                          call 0x40012db	       560	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26	CALL_8
0x40012db	          0x4889d8	                            mov rax, rbx	       561	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012de	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	       561	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012e2	          0x4c8b20	                    mov r12, qword [rax]	       561	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012e5	        0x448b6808	               mov r13d, dword [rax + 8]	       561	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012e9	      0x48895c2410	             mov qword [rsp + 0x10], rbx	       561	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012ee	          0x8b5820	            mov ebx, dword [rax + 0x20] 	       561	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012f1	        0x895c2408	                mov dword [rsp + 8], ebx	       561	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012f5	          0x4c89fb	                            mov rbx, r15	       561	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012f8	        0x4d8b7f40	            mov r15, qword [r15 + 0x40] 	       561	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x40012fc	        0x448b5b48	           mov r11d, dword [rbx + 0x48] 	       561	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x4001300	            0x8b03	                    mov eax, dword [rbx]	       561	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x4001302	      0xe9fdefffff	                           jmp 0x4000304	       562	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_26
0x4001307	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       415	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x400130c	    0x48c740300000	               mov qword [rax + 0x30], 0	       415	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x4001314	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       416	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x4001319	    0xc7001b000000	                   mov dword [rax], 0x1b	       416	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x400131f	      0xb81b000000	                           mov eax, 0x1b	       416	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x4001324	      0xe940f1ffff	                           jmp 0x4000469	       416	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x4001329	          0x8d7802	                      lea edi, [rax + 2]	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x400132c	            0x39fb	                            cmp ebx, edi	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x400132e	            0x7333	                           jae 0x4001363	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001330	          0x4585f6	                         test r14d, r14d	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001333	     0xf84e2feffff	                            je 0x400121b	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001339	            0x89d9	                            mov ecx, ebx	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x400133b	            0xeb09	                           jmp 0x4001346	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x400133d	          0x4585f6	                         test r14d, r14d	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001340	     0xf8498fbffff	                            je 0x4000ede	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001346	        0x4983c401	                              add r12, 1	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x400134a	    0x410fb67424ff	               movzx esi, byte [r12 - 1]	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001350	        0x4183ee01	                             sub r14d, 1	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001354	          0x48d3e6	                             shl rsi, cl	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001357	          0x83c108	                              add ecx, 8	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x400135a	          0x4801f5	                            add rbp, rsi	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x400135d	            0x39f9	                            cmp ecx, edi	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x400135f	            0x72dc	                            jb 0x400133d	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001361	            0x89cb	                            mov ebx, ecx	       498	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001363	            0x89c1	                            mov ecx, eax	       499	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001365	            0x29c3	                            sub ebx, eax	       499	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001367	          0x48d3ed	                             shr rbp, cl	       499	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x400136a	          0x4585c9	                           test r9d, r9d	       500	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19	IF_20
0x400136d	     0xf844a070000	                            je 0x4001abd	       500	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19	IF_20
0x4001373	            0x89e9	                            mov ecx, ebp	       506	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001375	        0x418d41ff	                       lea eax, [r9 - 1]	       505	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001379	        0x48c1ed02	                              shr rbp, 2	       507	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x400137d	          0x83e103	                              and ecx, 3	       506	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001380	          0x83eb02	                              sub ebx, 2	       507	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001383	     0xfb7b4428800	   movzx esi, word [rdx + rax*2 + 0x88] 	       505	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x400138b	          0x83c103	                              add ecx, 3	       506	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x400138e	      0xe964f6ffff	                           jmp 0x40009f7	       506	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001393	          0x4d89e3	                            mov r11, r12	       506	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001396	          0x4489f0	                           mov eax, r14d	       506	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x4001399	          0x4989ef	                            mov r15, rbp	       506	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x400139c	          0x4189dd	                           mov r13d, ebx	       506	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x400139f	        0x8b542408	                mov edx, dword [rsp + 8]	       506	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_19
0x40013a3	      0xc644245000	                mov byte [rsp + 0x50], 0	       393	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_8
0x40013a8	      0xe9b9f9ffff	                           jmp 0x4000d66	       393	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_8
0x40013ad	            0x89fa	                            mov edx, edi	       393	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_8
0x40013af	        0x8b7c243c	            mov edi, dword [rsp + 0x3c] 	       393	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_8
0x40013b3	          0x4489d8	                           mov eax, r11d	       393	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_8
0x40013b6	          0x4189c5	                           mov r13d, eax	       393	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_8
0x40013b9	          0x4d89e3	                            mov r11, r12	       393	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_8
0x40013bc	          0x4489f0	                           mov eax, r14d	       393	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_8
0x40013bf	            0x85ff	                           test edi, edi	       393	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_8
0x40013c1	        0x400f94c6	                                sete sil	       393	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_8
0x40013c5	      0x837c247002	               cmp dword [rsp + 0x70], 2	       393	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_8
0x40013ca	           0xf94c1	                                 sete cl	       393	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_8
0x40013cd	            0x21ce	                            and esi, ecx	       393	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_8
0x40013cf	      0x4088742450	              mov byte [rsp + 0x50], sil	       393	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_8
0x40013d4	      0xe98df9ffff	                           jmp 0x4000d66	       393	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_8
0x40013d9	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       457	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_15
0x40013de	    0x48c740300000	               mov qword [rax + 0x30], 0	       457	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_15
0x40013e6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       458	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_15
0x40013eb	    0xc7001b000000	                   mov dword [rax], 0x1b	       458	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_15
0x40013f1	      0xb81b000000	                           mov eax, 0x1b	       459	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_15
0x40013f6	      0xe91befffff	                           jmp 0x4000316	       459	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_15
0x40013fb	          0x8b4a48	            mov ecx, dword [rdx + 0x48] 	       153	inflate.c	FUNCTION_6	IF_2
0x40013fe	            0x85c9	                           test ecx, ecx	       153	inflate.c	FUNCTION_6	IF_2
0x4001400	     0xf8538faffff	                           jne 0x4000e3e	       153	inflate.c	FUNCTION_6	IF_2
0x4001406	    0xc7020b000000	                    mov dword [rdx], 0xb	       154	inflate.c	FUNCTION_6	IF_2
0x400140c	            0x31c0	                            xor eax, eax	       155	inflate.c	FUNCTION_6	IF_2
0x400140e	      0xe92bfaffff	                           jmp 0x4000e3e	       155	inflate.c	FUNCTION_6	IF_2
0x4001413	            0x29c3	                            sub ebx, eax	       579	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001415	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       580	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400141a	            0x89f1	                            mov ecx, esi	       579	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400141c	          0x48d3ed	                             shr rbp, cl	       579	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400141f	        0x4489484c	             mov dword [rax + 0x4c], r9d	       580	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001423	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       582	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_30
0x4001428	    0xc70017000000	                   mov dword [rax], 0x17	       582	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_30
0x400142e	      0xb817000000	                           mov eax, 0x17	       583	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_30
0x4001433	      0xe9deeeffff	                           jmp 0x4000316	       583	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_30
0x4001438	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        81	inflate.c	FUNCTION_4
0x400143d	    0x48c740580000	               mov qword [rax + 0x58], 0	        81	inflate.c	FUNCTION_4
0x4001445	    0xc74068090000	               mov dword [rax + 0x68], 9	        82	inflate.c	FUNCTION_4
0x400144c	    0x48c740600000	               mov qword [rax + 0x60], 0	        83	inflate.c	FUNCTION_4
0x4001454	    0xc7406c050000	               mov dword [rax + 0x6c], 5	        84	inflate.c	FUNCTION_4
0x400145b	    0xc70012000000	                   mov dword [rax], 0x12	       409	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x4001461	      0xb812000000	                           mov eax, 0x12	       410	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x4001466	      0xe9feefffff	                           jmp 0x4000469	       410	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x400146b	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       412	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x4001470	    0xc7000f000000	                    mov dword [rax], 0xf	       412	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x4001476	      0xb80f000000	                            mov eax, 0xf	       413	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x400147b	      0xe9e9efffff	                           jmp 0x4000469	       413	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	SWITCH_2
0x4001480	            0x29c3	                            sub ebx, eax	       493	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	IF_18
0x4001482	        0x418d4101	                       lea eax, [r9 + 1]	       494	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	IF_18
0x4001486	          0x48d3ed	                             shr rbp, cl	       493	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	IF_18
0x4001489	          0x89427c	             mov dword [rdx + 0x7c], eax	       494	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	IF_18
0x400148c	    0x664689844a88	       mov word [rdx + r9*2 + 0x88], r8w	       494	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	IF_18
0x4001495	          0x4189c1	                            mov r9d, eax	       494	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	IF_18
0x4001498	      0xe96af4ffff	                           jmp 0x4000907	       494	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	IF_18
0x400149d	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       428	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40014a2	           0xfb7c5	                           movzx eax, bp	       428	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40014a5	            0x31ed	                            xor ebp, ebp	       429	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40014a7	          0x89434c	             mov dword [rbx + 0x4c], eax	       428	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40014aa	    0xc7030e000000	                    mov dword [rbx], 0xe	       430	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40014b0	            0x31db	                            xor ebx, ebx	       429	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40014b2	      0xe997f2ffff	                           jmp 0x400074e	       429	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40014b7	        0x488b5618	            mov rdx, qword [rsi + 0x18] 	       686	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_49
0x40014bb	        0x440fb7fa	                          movzx r15d, dx	        82	zutil.h	FUNCTION_10
0x40014bf	        0x48c1ea10	                           shr rdx, 0x10	        83	zutil.h	FUNCTION_10
0x40014c3	           0xfb7f2	                           movzx esi, dx	        83	zutil.h	FUNCTION_10
0x40014c6	      0x4889742440	             mov qword [rsp + 0x40], rsi	        83	zutil.h	FUNCTION_10
0x40014cb	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        86	zutil.h	FUNCTION_10	IF_1
0x40014d0	          0x4829c6	                            sub rsi, rax	        86	zutil.h	FUNCTION_10	IF_1
0x40014d3	     0xf8459050000	                            je 0x4001a32	        86	zutil.h	FUNCTION_10	IF_1
0x40014d9	    0x4c89a4248000	             mov qword [rsp + 0x80], r12	       100	zutil.h	FUNCTION_10	WHILE_1
0x40014e1	    0x4489b4249000	            mov dword [rsp + 0x90], r14d	       100	zutil.h	FUNCTION_10	WHILE_1
0x40014e9	    0x4889ac248800	             mov qword [rsp + 0x88], rbp	       100	zutil.h	FUNCTION_10	WHILE_1
0x40014f1	    0x899c24940000	             mov dword [rsp + 0x94], ebx	       100	zutil.h	FUNCTION_10	WHILE_1
0x40014f8	        0x8b4c2474	            mov ecx, dword [rsp + 0x74] 	        89	zutil.h	FUNCTION_10	WHILE_1
0x40014fc	      0xb8b0150000	                         mov eax, 0x15b0	        89	zutil.h	FUNCTION_10	WHILE_1
0x4001501	    0x81f9b0150000	                         cmp ecx, 0x15b0	        89	zutil.h	FUNCTION_10	WHILE_1
0x4001507	           0xf46c1	                         cmovbe eax, ecx	        89	zutil.h	FUNCTION_10	WHILE_1
0x400150a	            0x29c1	                            sub ecx, eax	        90	zutil.h	FUNCTION_10	WHILE_1
0x400150c	          0x83f80f	                            cmp eax, 0xf	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400150f	        0x894c2474	             mov dword [rsp + 0x74], ecx	        90	zutil.h	FUNCTION_10	WHILE_1
0x4001513	     0xf86be010000	                           jbe 0x40016d7	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001519	          0x83e810	                           sub eax, 0x10	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400151c	        0x8944247c	             mov dword [rsp + 0x7c], eax	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001520	          0xc1e804	                              shr eax, 4	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001523	        0x89442478	             mov dword [rsp + 0x78], eax	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001527	        0x4883c001	                              add rax, 1	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400152b	        0x48c1e004	                              shl rax, 4	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400152f	          0x4801f0	                            add rax, rsi	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001532	      0x4889442448	             mov qword [rsp + 0x48], rax	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001537	        0x440fb636	                  movzx r14d, byte [rsi]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400153b	         0xfb64601	               movzx eax, byte [rsi + 1]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400153f	      0x440fb66e02	              movzx r13d, byte [rsi + 2]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001544	      0x440fb66604	              movzx r12d, byte [rsi + 4]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001549	         0xfb66e05	               movzx ebp, byte [rsi + 5]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400154d	         0xfb65e06	               movzx ebx, byte [rsi + 6]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001551	      0x440fb65e07	              movzx r11d, byte [rsi + 7]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001556	      0x440fb65608	              movzx r10d, byte [rsi + 8]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400155b	          0x4d01fe	                            add r14, r15	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400155e	      0x440fb64e09	               movzx r9d, byte [rsi + 9]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001563	      0x440fb6460a	            movzx r8d, byte [rsi + 0xa] 	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001568	          0x4c01f0	                            add rax, r14	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400156b	         0xfb67e0b	            movzx edi, byte [rsi + 0xb] 	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400156f	         0xfb64e0c	            movzx ecx, byte [rsi + 0xc] 	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001573	          0x4901c5	                            add r13, rax	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001576	        0x48890424	                    mov qword [rsp], rax	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400157a	        0x4c033424	                    add r14, qword [rsp]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400157e	          0x4c89e8	                            mov rax, r13	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001581	      0x440fb66e03	              movzx r13d, byte [rsi + 3]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001586	         0xfb6560d	            movzx edx, byte [rsi + 0xd] 	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400158a	      0x4889442418	             mov qword [rsp + 0x18], rax	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400158f	      0x4c03742418	             add r14, qword [rsp + 0x18]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001594	      0x440fb67e0f	           movzx r15d, byte [rsi + 0xf] 	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001599	          0x4901c5	                            add r13, rax	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x400159c	         0xfb6460e	            movzx eax, byte [rsi + 0xe] 	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015a0	          0x4d01ec	                            add r12, r13	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015a3	          0x4d01ee	                            add r14, r13	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015a6	          0x4c01e5	                            add rbp, r12	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015a9	          0x4d01e6	                            add r14, r12	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015ac	          0x4801eb	                            add rbx, rbp	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015af	          0x4c01f5	                            add rbp, r14	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015b2	          0x4901db	                            add r11, rbx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015b5	          0x4801eb	                            add rbx, rbp	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015b8	          0x4d01da	                            add r10, r11	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015bb	          0x4901db	                            add r11, rbx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015be	          0x4d01d1	                             add r9, r10	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015c1	          0x4d01da	                            add r10, r11	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015c4	          0x4d01c8	                              add r8, r9	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015c7	          0x4d01d1	                             add r9, r10	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015ca	          0x4c01c7	                             add rdi, r8	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015cd	          0x4d01c8	                              add r8, r9	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015d0	          0x4801f9	                            add rcx, rdi	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015d3	          0x4c01c7	                             add rdi, r8	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015d6	          0x4801ca	                            add rdx, rcx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015d9	          0x4801f9	                            add rcx, rdi	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015dc	          0x4801d0	                            add rax, rdx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015df	          0x4801ca	                            add rdx, rcx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015e2	          0x4901c7	                            add r15, rax	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015e5	          0x4801d0	                            add rax, rdx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015e8	          0x4c01f8	                            add rax, r15	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015eb	      0x4801442440	            add qword [rsp + 0x40], rax 	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015f0	        0x4883c610	                           add rsi, 0x10	        93	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015f4	      0x483b742448	            cmp rsi, qword [rsp + 0x48] 	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015f9	     0xf8538ffffff	                           jne 0x4001537	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40015ff	        0x8b442478	            mov eax, dword [rsp + 0x78] 	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001603	        0x8b5c247c	            mov ebx, dword [rsp + 0x7c] 	        96	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001607	          0xc1e004	                              shl eax, 4	        96	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x400160a	            0x29c3	                            sub ebx, eax	        96	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x400160c	            0x89d8	                            mov eax, ebx	        96	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x400160e	     0xf85c8000000	                           jne 0x40016dc	        96	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001614	    0x48b8cdc52f0d	             movabs rax, 0xf00e10d2fc5cd	       100	zutil.h	FUNCTION_10	WHILE_1
0x400161e	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001623	      0x448b542474	           mov r10d, dword [rsp + 0x74] 	        88	zutil.h	FUNCTION_10	WHILE_1
0x4001628	          0x49f7e7	                                 mul r15	       100	zutil.h	FUNCTION_10	WHILE_1
0x400162b	          0x4c89f8	                            mov rax, r15	       100	zutil.h	FUNCTION_10	WHILE_1
0x400162e	          0x4829d0	                            sub rax, rdx	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001631	          0x48d1e8	                              shr rax, 1	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001634	          0x4801d0	                            add rax, rdx	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001637	        0x48c1e80f	                            shr rax, 0xf	       100	zutil.h	FUNCTION_10	WHILE_1
0x400163b	          0x4889c1	                            mov rcx, rax	       100	zutil.h	FUNCTION_10	WHILE_1
0x400163e	          0x4889c2	                            mov rdx, rax	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001641	        0x48c1e104	                              shl rcx, 4	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001645	        0x48c1e210	                           shl rdx, 0x10	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001649	          0x4829ca	                            sub rdx, rcx	       100	zutil.h	FUNCTION_10	WHILE_1
0x400164c	          0x4801d0	                            add rax, rdx	       100	zutil.h	FUNCTION_10	WHILE_1
0x400164f	          0x4929c7	                            sub r15, rax	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001652	    0x48b8cdc52f0d	             movabs rax, 0xf00e10d2fc5cd	       101	zutil.h	FUNCTION_10	WHILE_1
0x400165c	          0x48f7e7	                                 mul rdi	       101	zutil.h	FUNCTION_10	WHILE_1
0x400165f	          0x4889f8	                            mov rax, rdi	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001662	          0x4829d0	                            sub rax, rdx	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001665	          0x48d1e8	                              shr rax, 1	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001668	          0x4801d0	                            add rax, rdx	       101	zutil.h	FUNCTION_10	WHILE_1
0x400166b	        0x48c1e80f	                            shr rax, 0xf	       101	zutil.h	FUNCTION_10	WHILE_1
0x400166f	          0x4889c1	                            mov rcx, rax	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001672	          0x4889c2	                            mov rdx, rax	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001675	        0x48c1e104	                              shl rcx, 4	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001679	        0x48c1e210	                           shl rdx, 0x10	       101	zutil.h	FUNCTION_10	WHILE_1
0x400167d	          0x4829ca	                            sub rdx, rcx	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001680	          0x4801d0	                            add rax, rdx	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001683	          0x4889fa	                            mov rdx, rdi	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001686	          0x4829c2	                            sub rdx, rax	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001689	          0x4585d2	                         test r10d, r10d	        88	zutil.h	FUNCTION_10	WHILE_1
0x400168c	      0x4889542440	             mov qword [rsp + 0x40], rdx	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001691	     0xf8561feffff	                           jne 0x40014f8	        88	zutil.h	FUNCTION_10	WHILE_1
0x4001697	          0x4889d0	                            mov rax, rdx	       103	zutil.h	FUNCTION_10
0x400169a	    0x4c8ba4248000	            mov r12, qword [rsp + 0x80] 	       103	zutil.h	FUNCTION_10
0x40016a2	    0x448bb4249000	           mov r14d, dword [rsp + 0x90] 	       103	zutil.h	FUNCTION_10
0x40016aa	    0x488bac248800	            mov rbp, qword [rsp + 0x88] 	       103	zutil.h	FUNCTION_10
0x40016b2	    0x8b9c24940000	            mov ebx, dword [rsp + 0x94] 	       103	zutil.h	FUNCTION_10
0x40016b9	        0x48c1e010	                           shl rax, 0x10	       103	zutil.h	FUNCTION_10
0x40016bd	          0x4909c7	                             or r15, rax	       103	zutil.h	FUNCTION_10
0x40016c0	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       685	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_49
0x40016c5	        0x4c897818	             mov qword [rax + 0x18], r15	       685	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_49
0x40016c9	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       685	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_49
0x40016ce	        0x4c897850	             mov qword [rax + 0x50], r15	       685	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_49
0x40016d2	      0xe90bf6ffff	                           jmp 0x4000ce2	       685	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_49
0x40016d7	      0x4889742448	             mov qword [rsp + 0x48], rsi	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40016dc	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40016e1	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40016e6	          0x83e801	                              sub eax, 1	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40016e9	          0x4889c1	                            mov rcx, rax	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40016ec	      0x488d740301	                lea rsi, [rbx + rax + 1]	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40016f1	          0x4889d8	                            mov rax, rbx	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x40016f4	        0x4883c001	                              add rax, 1	        97	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x40016f8	         0xfb678ff	               movzx edi, byte [rax - 1]	        97	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x40016fc	          0x4901ff	                            add r15, rdi	        97	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x40016ff	          0x4c01fa	                            add rdx, r15	        98	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001702	          0x4839c6	                            cmp rsi, rax	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001705	            0x75ed	                           jne 0x40016f4	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001707	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x400170c	          0x4863c1	                         movsxd rax, ecx	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x400170f	      0x4889542440	             mov qword [rsp + 0x40], rdx	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001714	      0x488d740301	                lea rsi, [rbx + rax + 1]	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001719	      0xe9f6feffff	                           jmp 0x4001614	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x400171e	    0x41bf01000000	                             mov r15d, 1	        86	zutil.h	FUNCTION_10	IF_1
0x4001724	      0xe9bdf9ffff	                           jmp 0x40010e6	        86	zutil.h	FUNCTION_10	IF_1
0x4001729	            0x89e8	                            mov eax, ebp	       363	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x400172b	          0x83e00f	                            and eax, 0xf	       363	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x400172e	          0x83f808	                              cmp eax, 8	       363	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x4001731	     0xf8498010000	                            je 0x40018cf	       363	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x4001737	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       364	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x400173c	    0x48c740300000	               mov qword [rax + 0x30], 0	       364	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x4001744	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       365	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x4001749	    0xc7001b000000	                   mov dword [rax], 0x1b	       365	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x400174f	      0xb81b000000	                           mov eax, 0x1b	       366	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x4001754	      0xe9bdebffff	                           jmp 0x4000316	       366	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x4001759	            0x29c3	                            sub ebx, eax	       579	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400175b	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       580	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001760	            0x89f1	                            mov ecx, esi	       579	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001762	          0x48d3ed	                             shr rbp, cl	       579	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001765	        0x4489484c	             mov dword [rax + 0x4c], r9d	       580	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001769	      0xe9e1f3ffff	                           jmp 0x4000b4f	       580	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400176e	            0x89cb	                            mov ebx, ecx	       580	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001770	          0x83f812	                           cmp eax, 0x12	       470	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_2
0x4001773	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       470	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_2
0x4001778	            0x7728	                            ja 0x40017a2	       470	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_2
0x400177a	            0x89c2	                            mov edx, eax	       471	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_2
0x400177c	          0x83c001	                              add eax, 1	       471	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_2
0x400177f	            0x31f6	                            xor esi, esi	       471	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_2
0x4001781	     0xfb794120000	             movzx edx, word [rdx + rdx]	       471	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_2
0x4001789	          0x83f813	                           cmp eax, 0x13	       470	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_2
0x400178c	    0x6689b4518800	       mov word [rcx + rdx*2 + 0x88], si	       471	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_2
0x4001794	            0x75e4	                           jne 0x400177a	       470	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_2
0x4001796	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       470	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_2
0x400179b	    0xc7407c130000	           mov dword [rax + 0x7c], 0x13 	       470	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_2
0x40017a2	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       472	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40017a7	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	       472	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40017ac	      0xba13000000	                           mov edx, 0x13	       475	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x40017b1	      0x4c8b4c2450	              mov r9, qword [rsp + 0x50]	       475	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x40017b6	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       475	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x40017bb	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	       475	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x40017c0	        0x4c8d4068	                    lea r8, [rax + 0x68]	       475	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x40017c4	    0x4889b8800000	             mov qword [rax + 0x80], rdi	       472	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40017cb	        0x48897858	             mov qword [rax + 0x58], rdi	       473	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40017cf	    0xc74068070000	               mov dword [rax + 0x68], 7	       474	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40017d6	            0x31ff	                            xor edi, edi	       475	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x40017d8	      0xe800000000	                          call 0x40017dd	       475	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x40017dd	            0x85c0	                           test eax, eax	       477	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_16
0x40017df	        0x8944243c	             mov dword [rsp + 0x3c], eax	       475	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x40017e3	     0xf848c000000	                            je 0x4001875	       477	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_16
0x40017e9	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       478	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_16
0x40017ee	    0x48c740300000	               mov qword [rax + 0x30], 0	       478	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_16
0x40017f6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       479	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_16
0x40017fb	    0xc7001b000000	                   mov dword [rax], 0x1b	       479	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_16
0x4001801	      0xb81b000000	                           mov eax, 0x1b	       480	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_16
0x4001806	      0xe90bebffff	                           jmp 0x4000316	       480	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_16
0x400180b	      0xb8feffffff	                     mov eax, 0xfffffffe	       340	inflate.c	FUNCTION_7	IF_1
0x4001810	              0xc3	                                     ret	       740	inflate.c	FUNCTION_7
0x4001811	          0x4189dd	                           mov r13d, ebx	       740	inflate.c	FUNCTION_7
0x4001814	          0x4d89e3	                            mov r11, r12	       740	inflate.c	FUNCTION_7
0x4001817	      0xe9cbf6ffff	                           jmp 0x4000ee7	       740	inflate.c	FUNCTION_7
0x400181c	          0x8d7803	                      lea edi, [rax + 3]	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x400181f	            0x39fb	                            cmp ebx, edi	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001821	            0x7333	                           jae 0x4001856	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001823	          0x4585f6	                         test r14d, r14d	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001826	     0xf84eff9ffff	                            je 0x400121b	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x400182c	            0x89d9	                            mov ecx, ebx	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x400182e	            0xeb09	                           jmp 0x4001839	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001830	          0x4585f6	                         test r14d, r14d	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001833	     0xf84a5f6ffff	                            je 0x4000ede	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001839	        0x4983c401	                              add r12, 1	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x400183d	    0x410fb67424ff	               movzx esi, byte [r12 - 1]	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001843	        0x4183ee01	                             sub r14d, 1	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001847	          0x48d3e6	                             shl rsi, cl	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x400184a	          0x83c108	                              add ecx, 8	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x400184d	          0x4801f5	                            add rbp, rsi	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001850	            0x39f9	                            cmp ecx, edi	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001852	            0x72dc	                            jb 0x4001830	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001854	            0x89cb	                            mov ebx, ecx	       510	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001856	            0x89c1	                            mov ecx, eax	       511	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001858	          0x4489fe	                           mov esi, r15d	       514	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x400185b	          0x48d3ed	                             shr rbp, cl	       511	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x400185e	            0x29c6	                            sub esi, eax	       514	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001860	            0x89e9	                            mov ecx, ebp	       513	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001862	             0x1f3	                            add ebx, esi	       514	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001864	        0x48c1ed03	                              shr rbp, 3	       514	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001868	          0x83e107	                              and ecx, 7	       513	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x400186b	            0x31f6	                            xor esi, esi	       512	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x400186d	          0x83c103	                              add ecx, 3	       513	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001870	      0xe982f1ffff	                           jmp 0x40009f7	       513	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	ELSE_2	IF_21
0x4001875	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       482	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400187a	          0x4531c9	                            xor r9d, r9d	       483	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400187d	    0xc7407c000000	               mov dword [rax + 0x7c], 0	       482	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001884	    0xc70011000000	                   mov dword [rax], 0x11	       483	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400188a	      0xe950f0ffff	                           jmp 0x40008df	       483	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400188f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       594	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001894	          0x83e20f	                            and edx, 0xf	       594	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001897	          0x895054	             mov dword [rax + 0x54], edx	       594	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400189a	    0xc70013000000	                   mov dword [rax], 0x13	       595	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40018a0	      0xe914ecffff	                           jmp 0x40004b9	       595	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40018a5	          0x4189dd	                           mov r13d, ebx	       595	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40018a8	        0x8b5c243c	            mov ebx, dword [rsp + 0x3c] 	       595	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40018ac	          0x4d89e3	                            mov r11, r12	       595	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40018af	          0x4489f0	                           mov eax, r14d	       595	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40018b2	          0x4989ef	                            mov r15, rbp	       595	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40018b5	            0x85db	                           test ebx, ebx	       595	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40018b7	           0xf94c1	                                 sete cl	       595	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40018ba	      0x837c247002	               cmp dword [rsp + 0x70], 2	       595	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40018bf	           0xf94c2	                                 sete dl	       595	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40018c2	            0x21d1	                            and ecx, edx	       595	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40018c4	            0x31d2	                            xor edx, edx	       673	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_47
0x40018c6	        0x884c2450	               mov byte [rsp + 0x50], cl	       673	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_47
0x40018ca	      0xe997f4ffff	                           jmp 0x4000d66	       673	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_47
0x40018cf	        0x48c1ed04	                              shr rbp, 4	       368	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40018d3	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       370	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x40018d8	            0x89e9	                            mov ecx, ebp	       369	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40018da	          0x83e10f	                            and ecx, 0xf	       369	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40018dd	          0x83c108	                              add ecx, 8	       369	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40018e0	          0x3b4828	            cmp ecx, dword [rax + 0x28] 	       370	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x40018e3	     0xf86d1000000	                           jbe 0x40019ba	       370	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x40018e9	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       371	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x40018ee	          0x83eb04	                              sub ebx, 4	       368	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40018f1	    0x48c746300000	               mov qword [rsi + 0x30], 0	       371	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x40018f9	    0xc7001b000000	                   mov dword [rax], 0x1b	       372	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x40018ff	      0xb81b000000	                           mov eax, 0x1b	       373	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x4001904	      0xe90deaffff	                           jmp 0x4000316	       373	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x4001909	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       387	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x400190e	          0x4189dd	                           mov r13d, ebx	       387	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x4001911	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       387	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x4001916	          0x4d89e3	                            mov r11, r12	       387	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x4001919	        0x48895818	             mov qword [rax + 0x18], rbx	       387	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x400191d	        0x8b5c2408	                mov ebx, dword [rsp + 8]	       387	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x4001921	          0x4c8918	                    mov qword [rax], r11	       387	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x4001924	        0x48895820	             mov qword [rax + 0x20], rbx	       387	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x4001928	          0x4489f3	                           mov ebx, r14d	       387	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x400192b	        0x48895808	                mov qword [rax + 8], rbx	       387	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x400192f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       387	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x4001934	        0x48896840	             mov qword [rax + 0x40], rbp	       387	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x4001938	        0x44896848	            mov dword [rax + 0x48], r13d	       387	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x400193c	      0xb802000000	                              mov eax, 2	       388	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x4001941	      0xe9f8f4ffff	                           jmp 0x4000e3e	       388	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_7
0x4001946	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	       534	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_23
0x400194b	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       534	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_23
0x400194f	          0x418b07	                    mov eax, dword [r15]	       534	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_23
0x4001952	          0x83f81b	                           cmp eax, 0x1b	       534	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_23
0x4001955	     0xf84bbe9ffff	                            je 0x4000316	       534	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_23
0x400195b	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	       537	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001960	      0x4c8b4c2450	              mov r9, qword [rsp + 0x50]	       540	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4001965	        0x4d8d4768	                    lea r8, [r15 + 0x68]	       540	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4001969	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       540	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x400196e	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	       540	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4001973	    0x41c747680900	               mov dword [r15 + 0x68], 9	       539	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x400197b	    0x4989bf800000	             mov qword [r15 + 0x80], rdi	       537	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001982	        0x49897f58	             mov qword [r15 + 0x58], rdi	       538	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001986	      0xbf01000000	                              mov edi, 1	       540	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x400198b	      0xe800000000	                          call 0x4001990	       540	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4001990	            0x85c0	                           test eax, eax	       542	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_24
0x4001992	        0x8944243c	             mov dword [rsp + 0x3c], eax	       540	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4001996	     0xf84b6000000	                            je 0x4001a52	       542	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_24
0x400199c	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       543	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_24
0x40019a1	    0x48c740300000	               mov qword [rax + 0x30], 0	       543	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_24
0x40019a9	    0x41c7071b0000	                   mov dword [r15], 0x1b	       544	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_24
0x40019b0	      0xb81b000000	                           mov eax, 0x1b	       545	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_24
0x40019b5	      0xe95ce9ffff	                           jmp 0x4000316	       545	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_24
0x40019ba	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       375	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40019bf	      0xb801000000	                              mov eax, 1	       375	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40019c4	          0x4589f5	                          mov r13d, r14d	       375	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40019c7	            0xd3e0	                             shl eax, cl	       375	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40019c9	          0x894314	             mov dword [rbx + 0x14], eax	       375	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40019cc	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       376	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_1
0x40019d1	    0x48c743180100	               mov qword [rbx + 0x18], 1	       376	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_1
0x40019d9	    0x48c740500100	               mov qword [rax + 0x50], 1	       376	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_1
0x40019e1	          0x4889e8	                            mov rax, rbp	       377	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40019e4	      0x2500020000	                          and eax, 0x200	       377	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40019e9	        0x4883f801	                              cmp rax, 1	       377	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40019ed	            0x19c0	                            sbb eax, eax	       377	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40019ef	          0x4531db	                          xor r11d, r11d	       378	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40019f2	          0x4531ff	                          xor r15d, r15d	       378	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40019f5	          0x83e002	                              and eax, 2	       377	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40019f8	          0x83c009	                              add eax, 9	       377	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40019fb	            0x8903	                    mov dword [rbx], eax	       377	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x40019fd	      0xe902e9ffff	                           jmp 0x4000304	       379	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001a02	          0x4d89e3	                            mov r11, r12	       379	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001a05	          0x4989ef	                            mov r15, rbp	       379	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001a08	          0x4589f4	                          mov r12d, r14d	       379	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001a0b	          0x4189dd	                           mov r13d, ebx	       379	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001a0e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       696	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001a13	        0x8b542408	                mov edx, dword [rsp + 8]	       696	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001a17	      0xc644245000	                mov byte [rsp + 0x50], 0	       696	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001a1c	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	       698	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001a24	    0xc7001a000000	                   mov dword [rax], 0x1a	       696	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001a2a	          0x4489e0	                           mov eax, r12d	       696	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001a2d	      0xe934f3ffff	                           jmp 0x4000d66	       696	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001a32	    0x41bf01000000	                             mov r15d, 1	        86	zutil.h	FUNCTION_10	IF_1
0x4001a38	      0xe983fcffff	                           jmp 0x40016c0	        86	zutil.h	FUNCTION_10	IF_1
0x4001a3d	        0x8b442408	                mov eax, dword [rsp + 8]	        86	zutil.h	FUNCTION_10	IF_1
0x4001a41	          0x4d89e3	                            mov r11, r12	        86	zutil.h	FUNCTION_10	IF_1
0x4001a44	          0x4531ed	                          xor r13d, r13d	       694	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4001a47	          0x4589f4	                          mov r12d, r14d	       694	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4001a4a	          0x4531ff	                          xor r15d, r15d	       694	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4001a4d	          0x890424	                    mov dword [rsp], eax	       694	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4001a50	            0xebbc	                           jmp 0x4001a0e	       694	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48
0x4001a52	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	       547	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001a57	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	       549	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x4001a5c	      0xbf02000000	                              mov edi, 2	       549	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x4001a61	      0x4c8b4c2450	              mov r9, qword [rsp + 0x50]	       549	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x4001a66	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       549	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x4001a6b	    0x498b87800000	            mov rax, qword [r15 + 0x80] 	       547	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001a72	        0x418b5778	            mov edx, dword [r15 + 0x78] 	       549	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x4001a76	        0x4d8d476c	                    lea r8, [r15 + 0x6c]	       549	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x4001a7a	    0x41c7476c0600	               mov dword [r15 + 0x6c], 6	       548	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001a82	        0x49894760	             mov qword [r15 + 0x60], rax	       547	inflate.c	FUNCTION_7	FOR_1	SWITCH_1
0x4001a86	        0x418b4774	            mov eax, dword [r15 + 0x74] 	       549	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x4001a8a	        0x488d3446	                  lea rsi, [rsi + rax*2]	       549	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x4001a8e	      0xe800000000	                          call 0x4001a93	       549	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x4001a93	            0x85c0	                           test eax, eax	       551	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_25
0x4001a95	        0x8944243c	             mov dword [rsp + 0x3c], eax	       549	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x4001a99	     0xf8481efffff	                            je 0x4000a20	       551	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_25
0x4001a9f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       552	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_25
0x4001aa4	    0x48c740300000	               mov qword [rax + 0x30], 0	       552	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_25
0x4001aac	    0x41c7071b0000	                   mov dword [r15], 0x1b	       553	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_25
0x4001ab3	      0xb81b000000	                           mov eax, 0x1b	       554	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_25
0x4001ab8	      0xe959e8ffff	                           jmp 0x4000316	       554	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_25
0x4001abd	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       524	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_22
0x4001ac2	    0x48c740300000	               mov qword [rax + 0x30], 0	       524	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_22
0x4001aca	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       525	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_22
0x4001acf	    0xc7001b000000	                   mov dword [rax], 0x1b	       525	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	WHILE_3	ELSE_1	IF_22
0x4001ad5	      0xb81b000000	                           mov eax, 0x1b	       692	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
0x4001ada	      0xe937e8ffff	                           jmp 0x4000316	       692	inflate.c	FUNCTION_7	FOR_1	SWITCH_1	IF_48	IF_50
zlib_inflateReset	functions,0:WHILE,0:SWITCH,0:IF,1:DO,0:CALL,0:ELSE,0:FOR,0	30
0x4000130	          0x4885ff	                           test rdi, rdi	        27	inflate.c	FUNCTION_2	IF_1
0x4000133	     0xf8493000000	                            je 0x40001cc	        27	inflate.c	FUNCTION_2	IF_1
0x4000139	        0x488b4738	            mov rax, qword [rdi + 0x38] 	        27	inflate.c	FUNCTION_2	IF_1
0x400013d	          0x4885c0	                           test rax, rax	        27	inflate.c	FUNCTION_2	IF_1
0x4000140	     0xf8486000000	                            je 0x40001cc	        27	inflate.c	FUNCTION_2	IF_1
0x4000146	    0x48c740200000	               mov qword [rax + 0x20], 0	        29	inflate.c	FUNCTION_2
0x400014e	    0x488d90480500	                  lea rdx, [rax + 0x548]	        38	inflate.c	FUNCTION_2
0x4000155	    0x48c747280000	               mov qword [rdi + 0x28], 0	        29	inflate.c	FUNCTION_2
0x400015d	    0x48c747100000	               mov qword [rdi + 0x10], 0	        29	inflate.c	FUNCTION_2
0x4000165	    0x48c747300000	               mov qword [rdi + 0x30], 0	        30	inflate.c	FUNCTION_2
0x400016d	    0x48c747500100	               mov qword [rdi + 0x50], 1	        31	inflate.c	FUNCTION_2
0x4000175	          0x8b4828	            mov ecx, dword [rax + 0x28] 	        41	inflate.c	FUNCTION_2
0x4000178	    0x488990800000	             mov qword [rax + 0x80], rdx	        38	inflate.c	FUNCTION_2
0x400017f	        0x48895060	             mov qword [rax + 0x60], rdx	        38	inflate.c	FUNCTION_2
0x4000183	        0x48895058	             mov qword [rax + 0x58], rdx	        38	inflate.c	FUNCTION_2
0x4000187	      0xba01000000	                              mov edx, 1	        41	inflate.c	FUNCTION_2
0x400018c	    0xc70000000000	                      mov dword [rax], 0	        32	inflate.c	FUNCTION_2
0x4000192	            0xd3e2	                             shl edx, cl	        41	inflate.c	FUNCTION_2
0x4000194	    0xc74004000000	                  mov dword [rax + 4], 0	        33	inflate.c	FUNCTION_2
0x400019b	    0xc7400c000000	                mov dword [rax + 0xc], 0	        34	inflate.c	FUNCTION_2
0x40001a2	    0xc74014008000	         mov dword [rax + 0x14], 0x8000 	        35	inflate.c	FUNCTION_2
0x40001a9	    0x48c740400000	               mov qword [rax + 0x40], 0	        36	inflate.c	FUNCTION_2
0x40001b1	    0xc74048000000	               mov dword [rax + 0x48], 0	        37	inflate.c	FUNCTION_2
0x40001b8	          0x89502c	             mov dword [rax + 0x2c], edx	        41	inflate.c	FUNCTION_2
0x40001bb	    0xc74034000000	               mov dword [rax + 0x34], 0	        42	inflate.c	FUNCTION_2
0x40001c2	    0xc74030000000	               mov dword [rax + 0x30], 0	        43	inflate.c	FUNCTION_2
0x40001c9	            0x31c0	                            xor eax, eax	        45	inflate.c	FUNCTION_2
0x40001cb	              0xc3	                                     ret	        45	inflate.c	FUNCTION_2
0x40001cc	      0xb8feffffff	                     mov eax, 0xfffffffe	        27	inflate.c	FUNCTION_2	IF_1
0x40001d1	              0xc3	                                     ret	        46	inflate.c	FUNCTION_2
zlib_inflateEnd	functions,0:WHILE,0:SWITCH,0:IF,1:DO,0:CALL,0:ELSE,0:FOR,0	8
0x4001ae0	          0x4885ff	                           test rdi, rdi	       744	inflate.c	FUNCTION_8	IF_1
0x4001ae3	            0x740b	                            je 0x4001af0	       744	inflate.c	FUNCTION_8	IF_1
0x4001ae5	      0x48837f3801	               cmp qword [rdi + 0x38], 1	       746	inflate.c	FUNCTION_8
0x4001aea	            0x19c0	                            sbb eax, eax	       746	inflate.c	FUNCTION_8
0x4001aec	          0x83e0fe	                     and eax, 0xfffffffe	       746	inflate.c	FUNCTION_8
0x4001aef	              0xc3	                                     ret	       746	inflate.c	FUNCTION_8
0x4001af0	      0xb8feffffff	                     mov eax, 0xfffffffe	       745	inflate.c	FUNCTION_8	IF_1
0x4001af5	              0xc3	                                     ret	       747	inflate.c	FUNCTION_8
zlib_inflate_workspacesize	functions,0:WHILE,0:SWITCH,0:IF,0:DO,0:CALL,0:ELSE,0:FOR,0	2
0x4000120	      0xb848a50000	                         mov eax, 0xa548	        21	inflate.c	FUNCTION_1
0x4000125	              0xc3	                                     ret	        21	inflate.c	FUNCTION_1
zlib_inflateInit2	functions,0:WHILE,0:SWITCH,0:IF,3:DO,0:CALL,3:ELSE,1:FOR,0	24
0x40001e0	          0x4885ff	                           test rdi, rdi	        52	inflate.c	FUNCTION_3	IF_1
0x40001e3	            0x7449	                            je 0x400022e	        52	inflate.c	FUNCTION_3	IF_1
0x40001e5	        0x488b4740	            mov rax, qword [rdi + 0x40] 	        55	inflate.c	FUNCTION_3	CALL_1
0x40001e9	            0x85f6	                           test esi, esi	        58	inflate.c	FUNCTION_3	IF_2
0x40001eb	    0x48c747300000	               mov qword [rdi + 0x30], 0	        53	inflate.c	FUNCTION_3
0x40001f3	        0x48894738	             mov qword [rdi + 0x38], rax	        56	inflate.c	FUNCTION_3
0x40001f7	            0x782a	                            js 0x4000223	        58	inflate.c	FUNCTION_3	IF_2
0x40001f9	            0x89f2	                            mov edx, esi	        63	inflate.c	FUNCTION_3	ELSE_1
0x40001fb	          0xc1fa04	                              sar edx, 4	        63	inflate.c	FUNCTION_3	ELSE_1
0x40001fe	          0x83c201	                              add edx, 1	        63	inflate.c	FUNCTION_3	ELSE_1
0x4000201	          0x895008	                mov dword [rax + 8], edx	        63	inflate.c	FUNCTION_3	ELSE_1
0x4000204	          0x8d56f8	                      lea edx, [rsi - 8]	        65	inflate.c	FUNCTION_3	IF_3
0x4000207	          0x83fa07	                              cmp edx, 7	        65	inflate.c	FUNCTION_3	IF_3
0x400020a	            0x7722	                            ja 0x400022e	        65	inflate.c	FUNCTION_3	IF_3
0x400020c	          0x897028	             mov dword [rax + 0x28], esi	        68	inflate.c	FUNCTION_3
0x400020f	        0x488b4f40	            mov rcx, qword [rdi + 0x40] 	        69	inflate.c	FUNCTION_3	CALL_2
0x4000213	    0x488d91482500	                 lea rdx, [rcx + 0x2548]	        69	inflate.c	FUNCTION_3	CALL_2
0x400021a	        0x48895038	             mov qword [rax + 0x38], rdx	        69	inflate.c	FUNCTION_3	CALL_2
0x400021e	      0xe90dffffff	               jmp sym.zlib_inflateReset	        71	inflate.c	FUNCTION_3	CALL_3
0x4000223	    0xc74008000000	                  mov dword [rax + 8], 0	        59	inflate.c	FUNCTION_3	IF_2
0x400022a	            0xf7de	                                 neg esi	        60	inflate.c	FUNCTION_3	IF_2
0x400022c	            0xebd6	                           jmp 0x4000204	        60	inflate.c	FUNCTION_3	IF_2
0x400022e	      0xb8feffffff	                     mov eax, 0xfffffffe	        72	inflate.c	FUNCTION_3
0x4000233	              0xc3	                                     ret	        72	inflate.c	FUNCTION_3
zlib_inflateIncomp	functions,0:WHILE,0:SWITCH,0:IF,1:DO,0:CALL,1:ELSE,0:FOR,0	194
0x4001b00	            0x4157	                                push r15	       758	inflate.c	FUNCTION_9
0x4001b02	            0x4156	                                push r14	       758	inflate.c	FUNCTION_9
0x4001b04	            0x4155	                                push r13	       758	inflate.c	FUNCTION_9
0x4001b06	            0x4154	                                push r12	       758	inflate.c	FUNCTION_9
0x4001b08	              0x55	                                push rbp	       758	inflate.c	FUNCTION_9
0x4001b09	              0x53	                                push rbx	       758	inflate.c	FUNCTION_9
0x4001b0a	        0x4883ec40	                           sub rsp, 0x40	       758	inflate.c	FUNCTION_9
0x4001b0e	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       759	inflate.c	FUNCTION_9
0x4001b12	        0x488b6f18	            mov rbp, qword [rdi + 0x18] 	       760	inflate.c	FUNCTION_9
0x4001b16	        0x488b5f20	            mov rbx, qword [rdi + 0x20] 	       761	inflate.c	FUNCTION_9
0x4001b1a	            0x8b10	                    mov edx, dword [rax]	       763	inflate.c	FUNCTION_9	IF_1
0x4001b1c	      0x4889442430	             mov qword [rsp + 0x30], rax	       759	inflate.c	FUNCTION_9
0x4001b21	          0x83fa0b	                            cmp edx, 0xb	       763	inflate.c	FUNCTION_9	IF_1
0x4001b24	            0x740d	                            je 0x4001b33	       763	inflate.c	FUNCTION_9	IF_1
0x4001b26	            0x85d2	                           test edx, edx	       763	inflate.c	FUNCTION_9	IF_1
0x4001b28	      0xb8fdffffff	                     mov eax, 0xfffffffd	       764	inflate.c	FUNCTION_9	IF_1
0x4001b2d	     0xf8546020000	                           jne 0x4001d79	       763	inflate.c	FUNCTION_9	IF_1
0x4001b33	        0x488b7708	                mov rsi, qword [rdi + 8]	       768	inflate.c	FUNCTION_9
0x4001b37	    0x48c747200000	               mov qword [rdi + 0x20], 0	       767	inflate.c	FUNCTION_9
0x4001b3f	          0x4989fe	                            mov r14, rdi	       767	inflate.c	FUNCTION_9
0x4001b42	      0x48897c2438	             mov qword [rsp + 0x38], rdi	       767	inflate.c	FUNCTION_9
0x4001b47	          0x83e3ff	                     and ebx, 0xffffffff	       773	inflate.c	FUNCTION_9
0x4001b4a	          0x4889f0	                            mov rax, rsi	       768	inflate.c	FUNCTION_9
0x4001b4d	          0x480307	                    add rax, qword [rdi]	       768	inflate.c	FUNCTION_9
0x4001b50	        0x48894718	             mov qword [rdi + 0x18], rax	       768	inflate.c	FUNCTION_9
0x4001b54	      0xe8e7e4ffff	              call sym.zlib_updatewindow	       770	inflate.c	FUNCTION_9	CALL_1
0x4001b59	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       777	inflate.c	FUNCTION_9
0x4001b5e	        0x49895e20	             mov qword [r14 + 0x20], rbx	       773	inflate.c	FUNCTION_9
0x4001b62	        0x49896e18	             mov qword [r14 + 0x18], rbp	       774	inflate.c	FUNCTION_9
0x4001b66	          0x498b36	                    mov rsi, qword [r14]	       777	inflate.c	FUNCTION_9
0x4001b69	        0x498b5608	                mov rdx, qword [r14 + 8]	       777	inflate.c	FUNCTION_9
0x4001b6d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       777	inflate.c	FUNCTION_9
0x4001b71	        0x89542424	             mov dword [rsp + 0x24], edx	       777	inflate.c	FUNCTION_9
0x4001b75	        0x440fb7f8	                          movzx r15d, ax	        82	zutil.h	FUNCTION_10
0x4001b79	        0x48c1e810	                           shr rax, 0x10	        83	zutil.h	FUNCTION_10
0x4001b7d	          0x4885f6	                           test rsi, rsi	        86	zutil.h	FUNCTION_10	IF_1
0x4001b80	           0xfb7c0	                           movzx eax, ax	        83	zutil.h	FUNCTION_10
0x4001b83	      0x4889442410	             mov qword [rsp + 0x10], rax	        83	zutil.h	FUNCTION_10
0x4001b88	     0xf8441020000	                            je 0x4001dcf	        86	zutil.h	FUNCTION_10	IF_1
0x4001b8e	            0x85d2	                           test edx, edx	        88	zutil.h	FUNCTION_10	WHILE_1
0x4001b90	     0xf84a8010000	                            je 0x4001d3e	        88	zutil.h	FUNCTION_10	WHILE_1
0x4001b96	          0x4989f1	                             mov r9, rsi	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001b99	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	        89	zutil.h	FUNCTION_10	WHILE_1
0x4001b9d	      0xb8b0150000	                         mov eax, 0x15b0	        89	zutil.h	FUNCTION_10	WHILE_1
0x4001ba2	    0x81ffb0150000	                         cmp edi, 0x15b0	        89	zutil.h	FUNCTION_10	WHILE_1
0x4001ba8	           0xf46c7	                         cmovbe eax, edi	        89	zutil.h	FUNCTION_10	WHILE_1
0x4001bab	            0x29c7	                            sub edi, eax	        90	zutil.h	FUNCTION_10	WHILE_1
0x4001bad	          0x83f80f	                            cmp eax, 0xf	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001bb0	        0x897c2424	             mov dword [rsp + 0x24], edi	        90	zutil.h	FUNCTION_10	WHILE_1
0x4001bb4	     0xf86ce010000	                           jbe 0x4001d88	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001bba	          0x83e810	                           sub eax, 0x10	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001bbd	        0x8944242c	             mov dword [rsp + 0x2c], eax	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001bc1	          0xc1e804	                              shr eax, 4	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001bc4	        0x89442428	             mov dword [rsp + 0x28], eax	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001bc8	        0x4883c001	                              add rax, 1	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001bcc	        0x48c1e004	                              shl rax, 4	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001bd0	          0x4c01c8	                             add rax, r9	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001bd3	      0x4889442418	             mov qword [rsp + 0x18], rax	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001bd8	        0x450fb631	                   movzx r14d, byte [r9]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001bdc	      0x450fb66901	               movzx r13d, byte [r9 + 1]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001be1	        0x4983c110	                            add r9, 0x10	        93	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001be5	      0x450fb661f2	             movzx r12d, byte [r9 - 0xe]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001bea	      0x410fb669f3	              movzx ebp, byte [r9 - 0xd]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001bef	      0x410fb659f4	              movzx ebx, byte [r9 - 0xc]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001bf4	      0x450fb659f7	               movzx r11d, byte [r9 - 9]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001bf9	      0x450fb651f8	               movzx r10d, byte [r9 - 8]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001bfe	      0x450fb641f9	                movzx r8d, byte [r9 - 7]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c03	          0x4d01fe	                            add r14, r15	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c06	      0x410fb679fa	                movzx edi, byte [r9 - 6]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c0b	      0x410fb671fb	                movzx esi, byte [r9 - 5]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c10	          0x4d01f5	                            add r13, r14	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c13	      0x410fb649fc	                movzx ecx, byte [r9 - 4]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c18	      0x410fb651fd	                movzx edx, byte [r9 - 3]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c1d	          0x4d01ec	                            add r12, r13	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c20	          0x4d01f5	                            add r13, r14	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c23	      0x450fb679ff	               movzx r15d, byte [r9 - 1]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c28	          0x4c01e5	                            add rbp, r12	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c2b	          0x4d01e5	                            add r13, r12	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c2e	        0x488d042b	                    lea rax, [rbx + rbp]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c32	      0x410fb659f5	              movzx ebx, byte [r9 - 0xb]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c37	          0x4901ed	                            add r13, rbp	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c3a	        0x48890424	                    mov qword [rsp], rax	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c3e	        0x4c032c24	                    add r13, qword [rsp]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c42	          0x4801c3	                            add rbx, rax	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c45	          0x4889d8	                            mov rax, rbx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c48	      0x410fb659f6	              movzx ebx, byte [r9 - 0xa]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c4d	      0x4889442408	                mov qword [rsp + 8], rax	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c52	      0x4c036c2408	                add r13, qword [rsp + 8]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c57	          0x4801c3	                            add rbx, rax	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c5a	      0x410fb641fe	                movzx eax, byte [r9 - 2]	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c5f	          0x4901db	                            add r11, rbx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c62	          0x4c01eb	                            add rbx, r13	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c65	          0x4d01da	                            add r10, r11	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c68	          0x4901db	                            add r11, rbx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c6b	          0x4d01d0	                             add r8, r10	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c6e	          0x4d01da	                            add r10, r11	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c71	          0x4c01c7	                             add rdi, r8	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c74	          0x4d01d0	                             add r8, r10	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c77	          0x4801fe	                            add rsi, rdi	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c7a	          0x4c01c7	                             add rdi, r8	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c7d	          0x4801f1	                            add rcx, rsi	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c80	          0x4801fe	                            add rsi, rdi	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c83	          0x4801ca	                            add rdx, rcx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c86	          0x4801f1	                            add rcx, rsi	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c89	          0x4801d0	                            add rax, rdx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c8c	          0x4801ca	                            add rdx, rcx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c8f	          0x4901c7	                            add r15, rax	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c92	          0x4801d0	                            add rax, rdx	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c95	          0x4c01f8	                            add rax, r15	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c98	      0x4801442410	            add qword [rsp + 0x10], rax 	        92	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001c9d	      0x4c3b4c2418	              cmp r9, qword [rsp + 0x18]	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001ca2	     0xf8530ffffff	                           jne 0x4001bd8	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001ca8	        0x8b442428	            mov eax, dword [rsp + 0x28] 	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001cac	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	        96	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001cb0	          0xc1e004	                              shl eax, 4	        96	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001cb3	            0x29c1	                            sub ecx, eax	        96	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001cb5	            0x89c8	                            mov eax, ecx	        96	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001cb7	     0xf85d0000000	                           jne 0x4001d8d	        96	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001cbd	    0x48b8cdc52f0d	             movabs rax, 0xf00e10d2fc5cd	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001cc7	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001ccc	          0x49f7e7	                                 mul r15	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001ccf	          0x4c89f8	                            mov rax, r15	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001cd2	          0x4829d0	                            sub rax, rdx	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001cd5	          0x48d1e8	                              shr rax, 1	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001cd8	          0x4801c2	                            add rdx, rax	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001cdb	        0x48c1ea0f	                            shr rdx, 0xf	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001cdf	          0x4889d1	                            mov rcx, rdx	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001ce2	          0x4889d0	                            mov rax, rdx	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001ce5	        0x48c1e104	                              shl rcx, 4	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001ce9	        0x48c1e010	                           shl rax, 0x10	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001ced	          0x4829c8	                            sub rax, rcx	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001cf0	          0x4801c2	                            add rdx, rax	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001cf3	    0x48b8cdc52f0d	             movabs rax, 0xf00e10d2fc5cd	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001cfd	          0x4929d7	                            sub r15, rdx	       100	zutil.h	FUNCTION_10	WHILE_1
0x4001d00	          0x48f7e7	                                 mul rdi	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001d03	          0x4889f8	                            mov rax, rdi	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001d06	          0x4829d0	                            sub rax, rdx	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001d09	          0x48d1e8	                              shr rax, 1	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001d0c	          0x4801c2	                            add rdx, rax	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001d0f	        0x48c1ea0f	                            shr rdx, 0xf	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001d13	          0x4889d1	                            mov rcx, rdx	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001d16	          0x4889d0	                            mov rax, rdx	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001d19	        0x48c1e104	                              shl rcx, 4	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001d1d	        0x48c1e010	                           shl rax, 0x10	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001d21	          0x4829c8	                            sub rax, rcx	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001d24	          0x4801c2	                            add rdx, rax	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001d27	          0x4889f8	                            mov rax, rdi	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001d2a	          0x4829d0	                            sub rax, rdx	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001d2d	      0x4889442410	             mov qword [rsp + 0x10], rax	       101	zutil.h	FUNCTION_10	WHILE_1
0x4001d32	        0x8b442424	            mov eax, dword [rsp + 0x24] 	        88	zutil.h	FUNCTION_10	WHILE_1
0x4001d36	            0x85c0	                           test eax, eax	        88	zutil.h	FUNCTION_10	WHILE_1
0x4001d38	     0xf855bfeffff	                           jne 0x4001b99	        88	zutil.h	FUNCTION_10	WHILE_1
0x4001d3e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       103	zutil.h	FUNCTION_10
0x4001d43	        0x48c1e010	                           shl rax, 0x10	       103	zutil.h	FUNCTION_10
0x4001d47	          0x4909c7	                             or r15, rax	       103	zutil.h	FUNCTION_10
0x4001d4a	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       776	inflate.c	FUNCTION_9
0x4001d4f	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       776	inflate.c	FUNCTION_9
0x4001d54	        0x4c897a18	             mov qword [rdx + 0x18], r15	       776	inflate.c	FUNCTION_9
0x4001d58	        0x488b4108	                mov rax, qword [rcx + 8]	       779	inflate.c	FUNCTION_9
0x4001d5c	        0x48014128	            add qword [rcx + 0x28], rax 	       779	inflate.c	FUNCTION_9
0x4001d60	        0x48014110	            add qword [rcx + 0x10], rax 	       780	inflate.c	FUNCTION_9
0x4001d64	        0x4c897950	             mov qword [rcx + 0x50], r15	       776	inflate.c	FUNCTION_9
0x4001d68	          0x480101	                    add qword [rcx], rax	       781	inflate.c	FUNCTION_9
0x4001d6b	        0x48014220	            add qword [rdx + 0x20], rax 	       782	inflate.c	FUNCTION_9
0x4001d6f	            0x31c0	                            xor eax, eax	       785	inflate.c	FUNCTION_9
0x4001d71	    0x48c741080000	                  mov qword [rcx + 8], 0	       783	inflate.c	FUNCTION_9
0x4001d79	        0x4883c440	                           add rsp, 0x40	       786	inflate.c	FUNCTION_9
0x4001d7d	              0x5b	                                 pop rbx	       786	inflate.c	FUNCTION_9
0x4001d7e	              0x5d	                                 pop rbp	       786	inflate.c	FUNCTION_9
0x4001d7f	            0x415c	                                 pop r12	       786	inflate.c	FUNCTION_9
0x4001d81	            0x415d	                                 pop r13	       786	inflate.c	FUNCTION_9
0x4001d83	            0x415e	                                 pop r14	       786	inflate.c	FUNCTION_9
0x4001d85	            0x415f	                                 pop r15	       786	inflate.c	FUNCTION_9
0x4001d87	              0xc3	                                     ret	       786	inflate.c	FUNCTION_9
0x4001d88	      0x4c894c2418	              mov qword [rsp + 0x18], r9	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001d8d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001d92	          0x83e801	                              sub eax, 1	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001d95	          0x4889c2	                            mov rdx, rax	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001d98	      0x488d740101	                lea rsi, [rcx + rax + 1]	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001d9d	          0x4889c8	                            mov rax, rcx	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001da0	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	        91	zutil.h	FUNCTION_10	WHILE_1	WHILE_2
0x4001da5	        0x4883c001	                              add rax, 1	        97	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001da9	         0xfb678ff	               movzx edi, byte [rax - 1]	        97	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001dad	          0x4901ff	                            add r15, rdi	        97	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001db0	          0x4c01f9	                            add rcx, r15	        98	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001db3	          0x4839f0	                            cmp rax, rsi	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001db6	            0x75ed	                           jne 0x4001da5	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001db8	          0x4863c2	                         movsxd rax, edx	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001dbb	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001dc0	      0x48894c2410	             mov qword [rsp + 0x10], rcx	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001dc5	      0x4c8d4c0201	                 lea r9, [rdx + rax + 1]	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001dca	      0xe9eefeffff	                           jmp 0x4001cbd	        99	zutil.h	FUNCTION_10	WHILE_1	IF_2	DO_1
0x4001dcf	    0x41bf01000000	                             mov r15d, 1	        86	zutil.h	FUNCTION_10	IF_1
0x4001dd5	      0xe970ffffff	                           jmp 0x4001d4a	        86	zutil.h	FUNCTION_10	IF_1
