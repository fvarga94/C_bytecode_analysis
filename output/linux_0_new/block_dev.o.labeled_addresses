blkdev_fsync	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,4:IF,2:WHILE,0	18
0x40004b0	              0x55	                                push rbp	       615	block_dev.c	FUNCTION_29
0x40004b1	              0x53	                                push rbx	       615	block_dev.c	FUNCTION_29
0x40004b2	    0x488b87f00000	            mov rax, qword [rdi + 0xf0] 	       164	block_dev.c	FUNCTION_10
0x40004b9	          0x488b28	                    mov rbp, qword [rax]	       164	block_dev.c	FUNCTION_10
0x40004bc	      0xe800000000	                          call 0x40004c1	       620	block_dev.c	FUNCTION_29	CALL_3
0x40004c1	            0x85c0	                           test eax, eax	       621	block_dev.c	FUNCTION_29	IF_1
0x40004c3	            0x89c3	                            mov ebx, eax	       620	block_dev.c	FUNCTION_29	CALL_3
0x40004c5	            0x7519	                           jne 0x40004e0	       621	block_dev.c	FUNCTION_29	IF_1
0x40004c7	    0x488dbd28ffff	                   lea rdi, [rbp - 0xd8]	        53	block_dev.c	FUNCTION_2	CALL_1
0x40004ce	            0x31d2	                            xor edx, edx	       629	block_dev.c	FUNCTION_29	CALL_4
0x40004d0	      0xbec0004001	                      mov esi, 0x14000c0	       629	block_dev.c	FUNCTION_29	CALL_4
0x40004d5	      0xe800000000	                          call 0x40004da	       629	block_dev.c	FUNCTION_29	CALL_4
0x40004da	          0x83f8a1	             cmp eax, 0xffffffffffffffa1	       631	block_dev.c	FUNCTION_29	IF_2
0x40004dd	           0xf45d8	                         cmovne ebx, eax	       631	block_dev.c	FUNCTION_29	IF_2
0x40004e0	            0x89d8	                            mov eax, ebx	       634	block_dev.c	FUNCTION_29
0x40004e2	              0x5b	                                 pop rbx	       634	block_dev.c	FUNCTION_29
0x40004e3	              0x5d	                                 pop rbp	       634	block_dev.c	FUNCTION_29
0x40004e4	              0xc3	                                     ret	       634	block_dev.c	FUNCTION_29
bdev_alloc_inode	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:IF,1:WHILE,0	9
0x4000120	    0x488b3d000000	            mov rdi, qword [0x04000127] 	       724	block_dev.c	FUNCTION_32	CALL_1
0x4000127	      0xbec0004001	                      mov esi, 0x14000c0	       724	block_dev.c	FUNCTION_32	CALL_1
0x400012c	      0xe800000000	                          call 0x4000131	       724	block_dev.c	FUNCTION_32	CALL_1
0x4000131	          0x4885c0	                           test rax, rax	       725	block_dev.c	FUNCTION_32	IF_1
0x4000134	            0x7407	                            je 0x400013d	       725	block_dev.c	FUNCTION_32	IF_1
0x4000136	    0x4805d8000000	                           add rax, 0xd8	       727	block_dev.c	FUNCTION_32
0x400013c	              0xc3	                                     ret	       727	block_dev.c	FUNCTION_32
0x400013d	            0x31c0	                            xor eax, eax	       726	block_dev.c	FUNCTION_32	IF_1
0x400013f	              0xc3	                                     ret	       728	block_dev.c	FUNCTION_32
blkdev_writepage	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:IF,0:WHILE,0	3
0x4000f10	          0x4889f2	                            mov rdx, rsi	       562	block_dev.c	FUNCTION_23
0x4000f13	    0x48c7c6000000	                              mov rsi, 0	       563	block_dev.c	FUNCTION_23	CALL_1
0x4000f1a	      0xe900000000	                           jmp 0x4000f1f	       563	block_dev.c	FUNCTION_23	CALL_1
blkdev_close	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,3:IF,0:WHILE,0	8
0x4001370	          0x4889f0	                            mov rax, rsi	      1857	block_dev.c	FUNCTION_70
0x4001373	          0x8b7644	            mov esi, dword [rsi + 0x44] 	      1859	block_dev.c	FUNCTION_70	CALL_3
0x4001376	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       164	block_dev.c	FUNCTION_10
0x400137d	          0x488b38	                    mov rdi, qword [rax]	        53	block_dev.c	FUNCTION_2	CALL_1
0x4001380	    0x4881efd80000	                           sub rdi, 0xd8	        53	block_dev.c	FUNCTION_2	CALL_1
0x4001387	      0xe800000000	                          call 0x400138c	      1859	block_dev.c	FUNCTION_70	CALL_3
0x400138c	            0x31c0	                            xor eax, eax	      1861	block_dev.c	FUNCTION_70
0x400138e	              0xc3	                                     ret	      1861	block_dev.c	FUNCTION_70
flush_disk	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,3:IF,3:WHILE,0	29
0x4001680	              0x53	                                push rbx	      1305	block_dev.c	FUNCTION_58
0x4001681	        0x400fb6f6	                          movzx esi, sil	      1306	block_dev.c	FUNCTION_58	IF_1	CALL_1
0x4001685	          0x4889fb	                            mov rbx, rdi	      1305	block_dev.c	FUNCTION_58
0x4001688	      0xe800000000	                          call 0x400168d	      1306	block_dev.c	FUNCTION_58	IF_1	CALL_1
0x400168d	            0x85c0	                           test eax, eax	      1306	block_dev.c	FUNCTION_58	IF_1	CALL_1
0x400168f	            0x752d	                           jne 0x40016be	      1306	block_dev.c	FUNCTION_58	IF_1	CALL_1
0x4001691	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	      1312	block_dev.c	FUNCTION_58	IF_2
0x4001698	          0x4885c0	                           test rax, rax	      1312	block_dev.c	FUNCTION_58	IF_2
0x400169b	            0x7411	                            je 0x40016ae	      1312	block_dev.c	FUNCTION_58	IF_2
0x400169d	        0x83780801	                  cmp dword [rax + 8], 1	       235	genhd.h	FUNCTION_213	CALL_1
0x40016a1	    0x8b90d0030000	           mov edx, dword [rax + 0x3d0] 	       235	genhd.h	FUNCTION_213	CALL_1
0x40016a7	            0x7f07	                            jg 0x40016b0	       235	genhd.h	FUNCTION_213	CALL_1
0x40016a9	          0xf6c240	                           test dl, 0x40	       235	genhd.h	FUNCTION_213	CALL_1
0x40016ac	            0x7502	                           jne 0x40016b0	       235	genhd.h	FUNCTION_213	CALL_1
0x40016ae	              0x5b	                                 pop rbx	      1316	block_dev.c	FUNCTION_58
0x40016af	              0xc3	                                     ret	      1316	block_dev.c	FUNCTION_58
0x40016b0	          0x80e602	                               and dh, 2	       235	genhd.h	FUNCTION_213	CALL_1
0x40016b3	            0x75f9	                           jne 0x40016ae	       235	genhd.h	FUNCTION_213	CALL_1
0x40016b5	    0xc7437c010000	               mov dword [rbx + 0x7c], 1	      1315	block_dev.c	FUNCTION_58	IF_3
0x40016bc	              0x5b	                                 pop rbx	      1316	block_dev.c	FUNCTION_58
0x40016bd	              0xc3	                                     ret	      1316	block_dev.c	FUNCTION_58
0x40016be	    0x488b93800000	            mov rdx, qword [rbx + 0x80] 	      1309	block_dev.c	FUNCTION_58	IF_1
0x40016c5	    0x48c7c6000000	                              mov rsi, 0	      1307	block_dev.c	FUNCTION_58	IF_1	CALL_2
0x40016cc	    0x48c7c7000000	                              mov rdi, 0	      1307	block_dev.c	FUNCTION_58	IF_1	CALL_2
0x40016d3	        0x488d420c	                    lea rax, [rdx + 0xc]	      1307	block_dev.c	FUNCTION_58	IF_1	CALL_2
0x40016d7	          0x4885d2	                           test rdx, rdx	      1307	block_dev.c	FUNCTION_58	IF_1	CALL_2
0x40016da	        0x480f45f0	                         cmovne rsi, rax	      1307	block_dev.c	FUNCTION_58	IF_1	CALL_2
0x40016de	      0xe800000000	                          call 0x40016e3	      1307	block_dev.c	FUNCTION_58	IF_1	CALL_2
0x40016e3	            0xebac	                           jmp 0x4001691	      1307	block_dev.c	FUNCTION_58	IF_1	CALL_2
bdev_read_page	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,5:IF,2:WHILE,0	35
0x40004f0	            0x4155	                                push r13	       655	block_dev.c	FUNCTION_30
0x40004f2	            0x4154	                                push r12	       655	block_dev.c	FUNCTION_30
0x40004f4	              0x55	                                push rbp	       655	block_dev.c	FUNCTION_30
0x40004f5	              0x53	                                push rbx	       655	block_dev.c	FUNCTION_30
0x40004f6	    0x488b87800000	            mov rax, qword [rdi + 0x80] 	       656	block_dev.c	FUNCTION_30
0x40004fd	    0x488ba8b80300	           mov rbp, qword [rax + 0x3b8] 	       656	block_dev.c	FUNCTION_30
0x4000504	      0x48837d1000	               cmp qword [rbp + 0x10], 0	       659	block_dev.c	FUNCTION_30	IF_1	CALL_1
0x4000509	            0x744d	                            je 0x4000558	       659	block_dev.c	FUNCTION_30	IF_1	CALL_1
0x400050b	          0x4889fb	                            mov rbx, rdi	       659	block_dev.c	FUNCTION_30	IF_1	CALL_1
0x400050e	    0x488bbf880000	            mov rdi, qword [rdi + 0x88] 	       662	block_dev.c	FUNCTION_30	CALL_2
0x4000515	          0x4989f5	                            mov r13, rsi	       662	block_dev.c	FUNCTION_30	CALL_2
0x4000518	            0x31f6	                            xor esi, esi	       662	block_dev.c	FUNCTION_30	CALL_2
0x400051a	          0x4989d4	                            mov r12, rdx	       662	block_dev.c	FUNCTION_30	CALL_2
0x400051d	      0xe800000000	                          call 0x4000522	       662	block_dev.c	FUNCTION_30	CALL_2
0x4000522	            0x85c0	                           test eax, eax	       663	block_dev.c	FUNCTION_30	IF_2
0x4000524	            0x752b	                           jne 0x4000551	       663	block_dev.c	FUNCTION_30	IF_2
0x4000526	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       430	genhd.h	FUNCTION_228
0x400052a	          0x4c89ee	                            mov rsi, r13	       665	block_dev.c	FUNCTION_30	CALL_4
0x400052d	            0x31c9	                            xor ecx, ecx	       665	block_dev.c	FUNCTION_30	CALL_4
0x400052f	          0x4c89e2	                            mov rdx, r12	       665	block_dev.c	FUNCTION_30	CALL_4
0x4000532	          0x4889df	                            mov rdi, rbx	       665	block_dev.c	FUNCTION_30	CALL_4
0x4000535	          0x480330	                    add rsi, qword [rax]	       665	block_dev.c	FUNCTION_30	CALL_4
0x4000538	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       665	block_dev.c	FUNCTION_30	CALL_4
0x400053c	      0xe800000000	                          call 0x4000541	       665	block_dev.c	FUNCTION_30	CALL_4
0x4000541	    0x488bbb880000	            mov rdi, qword [rbx + 0x88] 	       666	block_dev.c	FUNCTION_30	CALL_5
0x4000548	            0x89c5	                            mov ebp, eax	       665	block_dev.c	FUNCTION_30	CALL_4
0x400054a	      0xe800000000	                          call 0x400054f	       666	block_dev.c	FUNCTION_30	CALL_5
0x400054f	            0x89e8	                            mov eax, ebp	       667	block_dev.c	FUNCTION_30
0x4000551	              0x5b	                                 pop rbx	       668	block_dev.c	FUNCTION_30
0x4000552	              0x5d	                                 pop rbp	       668	block_dev.c	FUNCTION_30
0x4000553	            0x415c	                                 pop r12	       668	block_dev.c	FUNCTION_30
0x4000555	            0x415d	                                 pop r13	       668	block_dev.c	FUNCTION_30
0x4000557	              0xc3	                                     ret	       668	block_dev.c	FUNCTION_30
0x4000558	      0xb8a1ffffff	                     mov eax, 0xffffffa1	       660	block_dev.c	FUNCTION_30	IF_1
0x400055d	            0xebf2	                           jmp 0x4000551	       660	block_dev.c	FUNCTION_30	IF_1
kill_bdev	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:IF,1:WHILE,0	14
0x4000230	              0x53	                                push rbx	        79	block_dev.c	FUNCTION_4
0x4000231	        0x488b4708	                mov rax, qword [rdi + 8]	        80	block_dev.c	FUNCTION_4
0x4000235	        0x488b5830	            mov rbx, qword [rax + 0x30] 	        80	block_dev.c	FUNCTION_4
0x4000239	      0x48837b5800	               cmp qword [rbx + 0x58], 0	        82	block_dev.c	FUNCTION_4	IF_1
0x400023e	            0x7507	                           jne 0x4000247	        82	block_dev.c	FUNCTION_4	IF_1
0x4000240	      0x48837b6000	               cmp qword [rbx + 0x60], 0	        82	block_dev.c	FUNCTION_4	IF_1
0x4000245	            0x7410	                            je 0x4000257	        82	block_dev.c	FUNCTION_4	IF_1
0x4000247	      0xe800000000	                          call 0x400024c	        85	block_dev.c	FUNCTION_4	CALL_1
0x400024c	          0x4889df	                            mov rdi, rbx	        86	block_dev.c	FUNCTION_4	CALL_2
0x400024f	            0x31f6	                            xor esi, esi	        86	block_dev.c	FUNCTION_4	CALL_2
0x4000251	              0x5b	                                 pop rbx	        87	block_dev.c	FUNCTION_4
0x4000252	      0xe900000000	                           jmp 0x4000257	        86	block_dev.c	FUNCTION_4	CALL_2
0x4000257	              0x5b	                                 pop rbx	        87	block_dev.c	FUNCTION_4
0x4000258	              0xc3	                                     ret	        87	block_dev.c	FUNCTION_4
blkdev_readpage	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:IF,0:WHILE,0	3
0x4000f00	          0x4889f7	                            mov rdi, rsi	       567	block_dev.c	FUNCTION_24
0x4000f03	    0x48c7c6000000	                              mov rsi, 0	       568	block_dev.c	FUNCTION_24	CALL_1
0x4000f0a	      0xe900000000	                           jmp 0x4000f0f	       568	block_dev.c	FUNCTION_24	CALL_1
check_disk_change	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,3:IF,2:WHILE,0	30
0x40016f0	            0x4154	                                push r12	      1385	block_dev.c	FUNCTION_61
0x40016f2	              0x55	                                push rbp	      1385	block_dev.c	FUNCTION_61
0x40016f3	      0xbe03000000	                              mov esi, 3	      1390	block_dev.c	FUNCTION_61	CALL_1
0x40016f8	              0x53	                                push rbx	      1385	block_dev.c	FUNCTION_61
0x40016f9	          0x4889fb	                            mov rbx, rdi	      1385	block_dev.c	FUNCTION_61
0x40016fc	    0x488bbf800000	            mov rdi, qword [rdi + 0x80] 	      1386	block_dev.c	FUNCTION_61
0x4001703	            0x31ed	                            xor ebp, ebp	      1393	block_dev.c	FUNCTION_61	IF_1
0x4001705	    0x4c8ba7b80300	           mov r12, qword [rdi + 0x3b8] 	      1387	block_dev.c	FUNCTION_61
0x400170c	      0xe800000000	                          call 0x4001711	      1390	block_dev.c	FUNCTION_61	CALL_1
0x4001711	            0xa801	                              test al, 1	      1392	block_dev.c	FUNCTION_61	IF_1
0x4001713	            0x7507	                           jne 0x400171c	      1392	block_dev.c	FUNCTION_61	IF_1
0x4001715	            0x89e8	                            mov eax, ebp	      1399	block_dev.c	FUNCTION_61
0x4001717	              0x5b	                                 pop rbx	      1399	block_dev.c	FUNCTION_61
0x4001718	              0x5d	                                 pop rbp	      1399	block_dev.c	FUNCTION_61
0x4001719	            0x415c	                                 pop r12	      1399	block_dev.c	FUNCTION_61
0x400171b	              0xc3	                                     ret	      1399	block_dev.c	FUNCTION_61
0x400171c	      0xbe01000000	                              mov esi, 1	      1395	block_dev.c	FUNCTION_61	CALL_2
0x4001721	          0x4889df	                            mov rdi, rbx	      1395	block_dev.c	FUNCTION_61	CALL_2
0x4001724	      0xbd01000000	                              mov ebp, 1	      1398	block_dev.c	FUNCTION_61
0x4001729	      0xe852ffffff	                     call sym.flush_disk	      1395	block_dev.c	FUNCTION_61	CALL_2
0x400172e	      0x498b442440	            mov rax, qword [r12 + 0x40] 	      1396	block_dev.c	FUNCTION_61	IF_2
0x4001733	          0x4885c0	                           test rax, rax	      1396	block_dev.c	FUNCTION_61	IF_2
0x4001736	            0x74dd	                            je 0x4001715	      1396	block_dev.c	FUNCTION_61	IF_2
0x4001738	    0x488bbb800000	            mov rdi, qword [rbx + 0x80] 	      1397	block_dev.c	FUNCTION_61	CALL_3
0x400173f	      0xe800000000	                          call 0x4001744	      1397	block_dev.c	FUNCTION_61	CALL_3
0x4001744	            0x89e8	                            mov eax, ebp	      1399	block_dev.c	FUNCTION_61
0x4001746	              0x5b	                                 pop rbx	      1399	block_dev.c	FUNCTION_61
0x4001747	              0x5d	                                 pop rbp	      1399	block_dev.c	FUNCTION_61
0x4001748	            0x415c	                                 pop r12	      1399	block_dev.c	FUNCTION_61
0x400174a	              0xc3	                                     ret	      1399	block_dev.c	FUNCTION_61
blkdev_init	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:IF,0:WHILE,0	6
0x4000040	    0x488d8728ffff	                   lea rax, [rdi - 0xd8]	        53	block_dev.c	FUNCTION_2	CALL_1
0x4000047	              0xc3	                                     ret	        54	block_dev.c	FUNCTION_2
0x4000048	     0xf1f84000000	                   nop dword [rax + rax]	        54	block_dev.c	FUNCTION_2
0x4000050	            0x8b06	                    mov eax, dword [rsi]	       834	block_dev.c	FUNCTION_40	CALL_1
0x4000052	    0x398728ffffff	            cmp dword [rdi - 0xd8], eax 	       834	block_dev.c	FUNCTION_40	CALL_1
0x4000058	           0xf94c0	                                 sete al	       834	block_dev.c	FUNCTION_40	CALL_1
thaw_bdev	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,1:CALL,4:IF,5:WHILE,0	41
0x4000420	            0x4154	                                push r12	       535	block_dev.c	FUNCTION_22
0x4000422	              0x55	                                push rbp	       535	block_dev.c	FUNCTION_22
0x4000423	    0x488dafb80000	                   lea rbp, [rdi + 0xb8]	       538	block_dev.c	FUNCTION_22	CALL_1
0x400042a	              0x53	                                push rbx	       535	block_dev.c	FUNCTION_22
0x400042b	          0x4889fb	                            mov rbx, rdi	       535	block_dev.c	FUNCTION_22
0x400042e	          0x4989f4	                            mov r12, rsi	       535	block_dev.c	FUNCTION_22
0x4000431	          0x4889ef	                            mov rdi, rbp	       538	block_dev.c	FUNCTION_22	CALL_1
0x4000434	      0xe800000000	                          call 0x4000439	       538	block_dev.c	FUNCTION_22	CALL_1
0x4000439	    0x8b83b0000000	            mov eax, dword [rbx + 0xb0] 	       539	block_dev.c	FUNCTION_22	IF_1
0x400043f	            0x85c0	                           test eax, eax	       539	block_dev.c	FUNCTION_22	IF_1
0x4000441	            0x7456	                            je 0x4000499	       539	block_dev.c	FUNCTION_22	IF_1
0x4000443	          0x83e801	                              sub eax, 1	       543	block_dev.c	FUNCTION_22	IF_2
0x4000446	          0x4d85e4	                           test r12, r12	       546	block_dev.c	FUNCTION_22	IF_3
0x4000449	    0x8983b0000000	             mov dword [rbx + 0xb0], eax	       543	block_dev.c	FUNCTION_22	IF_2
0x400044f	            0x7439	                            je 0x400048a	       546	block_dev.c	FUNCTION_22	IF_3
0x4000451	            0x85c0	                           test eax, eax	       546	block_dev.c	FUNCTION_22	IF_3
0x4000453	            0x7f35	                            jg 0x400048a	       546	block_dev.c	FUNCTION_22	IF_3
0x4000455	      0x498b442430	            mov rax, qword [r12 + 0x30] 	       549	block_dev.c	FUNCTION_22	IF_4
0x400045a	          0x4c89e7	                            mov rdi, r12	       550	block_dev.c	FUNCTION_22	CALL_2
0x400045d	        0x488b4050	            mov rax, qword [rax + 0x50] 	       549	block_dev.c	FUNCTION_22	IF_4
0x4000461	          0x4885c0	                           test rax, rax	       549	block_dev.c	FUNCTION_22	IF_4
0x4000464	            0x7429	                            je 0x400048f	       549	block_dev.c	FUNCTION_22	IF_4
0x4000466	      0xe800000000	                          call 0x400046b	       550	block_dev.c	FUNCTION_22	CALL_2
0x400046b	          0x4189c4	                           mov r12d, eax	       550	block_dev.c	FUNCTION_22	CALL_2
0x400046e	          0x4585e4	                         test r12d, r12d	       553	block_dev.c	FUNCTION_22	IF_5
0x4000471	            0x7407	                            je 0x400047a	       553	block_dev.c	FUNCTION_22	IF_5
0x4000473	    0x8383b0000000	               add dword [rbx + 0xb0], 1	       554	block_dev.c	FUNCTION_22	IF_5
0x400047a	          0x4889ef	                            mov rdi, rbp	       556	block_dev.c	FUNCTION_22	CALL_4
0x400047d	      0xe800000000	                          call 0x4000482	       556	block_dev.c	FUNCTION_22	CALL_4
0x4000482	          0x4489e0	                           mov eax, r12d	       558	block_dev.c	FUNCTION_22
0x4000485	              0x5b	                                 pop rbx	       558	block_dev.c	FUNCTION_22
0x4000486	              0x5d	                                 pop rbp	       558	block_dev.c	FUNCTION_22
0x4000487	            0x415c	                                 pop r12	       558	block_dev.c	FUNCTION_22
0x4000489	              0xc3	                                     ret	       558	block_dev.c	FUNCTION_22
0x400048a	          0x4531e4	                          xor r12d, r12d	       542	block_dev.c	FUNCTION_22
0x400048d	            0xebeb	                           jmp 0x400047a	       542	block_dev.c	FUNCTION_22
0x400048f	      0xe800000000	                          call 0x4000494	       552	block_dev.c	FUNCTION_22	CALL_3
0x4000494	          0x4189c4	                           mov r12d, eax	       552	block_dev.c	FUNCTION_22	CALL_3
0x4000497	            0xebd5	                           jmp 0x400046e	       552	block_dev.c	FUNCTION_22	CALL_3
0x4000499	    0x41bceaffffff	                    mov r12d, 0xffffffea	       536	block_dev.c	FUNCTION_22
0x400049f	            0xebd9	                           jmp 0x400047a	       536	block_dev.c	FUNCTION_22
bdev_i_callback	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,3:IF,0:WHILE,0	3
0x4000100	    0x488db7f8fdff	                  lea rsi, [rdi - 0x208]	        48	block_dev.c	FUNCTION_1	CALL_1
0x4000107	    0x488b3d000000	            mov rdi, qword [0x0400010e] 	       735	block_dev.c	FUNCTION_33	CALL_3
0x400010e	      0xe900000000	                           jmp 0x4000113	       735	block_dev.c	FUNCTION_33	CALL_3
blkdev_readpages	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:IF,0:WHILE,0	5
0x4000ed0	          0x4889f7	                            mov rdi, rsi	       573	block_dev.c	FUNCTION_25
0x4000ed3	          0x4889d6	                            mov rsi, rdx	       573	block_dev.c	FUNCTION_25
0x4000ed6	            0x89ca	                            mov edx, ecx	       573	block_dev.c	FUNCTION_25
0x4000ed8	    0x48c7c1000000	                              mov rcx, 0	       574	block_dev.c	FUNCTION_25	CALL_1
0x4000edf	      0xe900000000	                           jmp 0x4000ee4	       574	block_dev.c	FUNCTION_25	CALL_1
bdev_test	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:IF,0:WHILE,0	5
0x4000050	            0x8b06	                    mov eax, dword [rsi]	       834	block_dev.c	FUNCTION_40	CALL_1
0x4000052	    0x398728ffffff	            cmp dword [rdi - 0xd8], eax 	       834	block_dev.c	FUNCTION_40	CALL_1
0x4000058	           0xf94c0	                                 sete al	       834	block_dev.c	FUNCTION_40	CALL_1
0x400005b	           0xfb6c0	                           movzx eax, al	       834	block_dev.c	FUNCTION_40	CALL_1
0x400005e	              0xc3	                                     ret	       835	block_dev.c	FUNCTION_40
__invalidate_device	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,5:IF,1:WHILE,0	27
0x4001630	            0x4155	                                push r13	      2107	block_dev.c	FUNCTION_79
0x4001632	            0x4154	                                push r12	      2107	block_dev.c	FUNCTION_79
0x4001634	          0x4531ed	                          xor r13d, r13d	      2107	block_dev.c	FUNCTION_79
0x4001637	              0x55	                                push rbp	      2107	block_dev.c	FUNCTION_79
0x4001638	              0x53	                                push rbx	      2107	block_dev.c	FUNCTION_79
0x4001639	          0x4989fc	                            mov r12, rdi	      2107	block_dev.c	FUNCTION_79
0x400163c	            0x89f5	                            mov ebp, esi	      2107	block_dev.c	FUNCTION_79
0x400163e	      0xe800000000	                          call 0x4001643	      2108	block_dev.c	FUNCTION_79	CALL_1
0x4001643	          0x4885c0	                           test rax, rax	      2111	block_dev.c	FUNCTION_79	IF_1
0x4001646	            0x7422	                            je 0x400166a	      2111	block_dev.c	FUNCTION_79	IF_1
0x4001648	          0x4889c3	                            mov rbx, rax	      2111	block_dev.c	FUNCTION_79	IF_1
0x400164b	          0x4889c7	                            mov rdi, rax	      2118	block_dev.c	FUNCTION_79	IF_1	CALL_2
0x400164e	      0xe800000000	                          call 0x4001653	      2118	block_dev.c	FUNCTION_79	IF_1	CALL_2
0x4001653	          0x4889df	                            mov rdi, rbx	      2119	block_dev.c	FUNCTION_79	IF_1	CALL_3
0x4001656	        0x400fb6f5	                          movzx esi, bpl	      2119	block_dev.c	FUNCTION_79	IF_1	CALL_3
0x400165a	      0xe800000000	                          call 0x400165f	      2119	block_dev.c	FUNCTION_79	IF_1	CALL_3
0x400165f	          0x4889df	                            mov rdi, rbx	      2120	block_dev.c	FUNCTION_79	IF_1	CALL_4
0x4001662	          0x4189c5	                           mov r13d, eax	      2119	block_dev.c	FUNCTION_79	IF_1	CALL_3
0x4001665	      0xe800000000	                          call 0x400166a	      2120	block_dev.c	FUNCTION_79	IF_1	CALL_4
0x400166a	          0x4c89e7	                            mov rdi, r12	      2122	block_dev.c	FUNCTION_79	CALL_5
0x400166d	      0xe800000000	                          call 0x4001672	      2122	block_dev.c	FUNCTION_79	CALL_5
0x4001672	          0x4489e8	                           mov eax, r13d	      2124	block_dev.c	FUNCTION_79
0x4001675	              0x5b	                                 pop rbx	      2124	block_dev.c	FUNCTION_79
0x4001676	              0x5d	                                 pop rbp	      2124	block_dev.c	FUNCTION_79
0x4001677	            0x415c	                                 pop r12	      2124	block_dev.c	FUNCTION_79
0x4001679	            0x415d	                                 pop r13	      2124	block_dev.c	FUNCTION_79
0x400167b	              0xc3	                                     ret	      2124	block_dev.c	FUNCTION_79
bdev_destroy_inode	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:IF,0:WHILE,0	3
0x40000e0	    0x4881c7300100	                          add rdi, 0x130	       740	block_dev.c	FUNCTION_34	CALL_1
0x40000e7	    0x48c7c6000000	                              mov rsi, 0	       740	block_dev.c	FUNCTION_34	CALL_1
0x40000ee	      0xe900000000	                           jmp 0x40000f3	       740	block_dev.c	FUNCTION_34	CALL_1
blkdev_releasepage	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,3:IF,1:WHILE,0	14
0x4000e70	        0x488b4708	                mov rax, qword [rdi + 8]	      1940	block_dev.c	FUNCTION_74	CALL_1
0x4000e74	          0x488b00	                    mov rax, qword [rax]	      1940	block_dev.c	FUNCTION_74	CALL_1
0x4000e77	    0x488b8038ffff	             mov rax, qword [rax - 0xc8]	      1940	block_dev.c	FUNCTION_74	CALL_1
0x4000e7e	          0x4885c0	                           test rax, rax	      1942	block_dev.c	FUNCTION_74	IF_1
0x4000e81	            0x741d	                            je 0x4000ea0	      1942	block_dev.c	FUNCTION_74	IF_1
0x4000e83	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      1942	block_dev.c	FUNCTION_74	IF_1
0x4000e87	    0x488b89b00000	            mov rcx, qword [rcx + 0xb0] 	      1942	block_dev.c	FUNCTION_74	IF_1
0x4000e8e	          0x4885c9	                           test rcx, rcx	      1942	block_dev.c	FUNCTION_74	IF_1
0x4000e91	            0x740d	                            je 0x4000ea0	      1942	block_dev.c	FUNCTION_74	IF_1
0x4000e93	            0x89f2	                            mov edx, esi	      1943	block_dev.c	FUNCTION_74	CALL_2
0x4000e95	          0x4889fe	                            mov rsi, rdi	      1943	block_dev.c	FUNCTION_74	CALL_2
0x4000e98	          0x4889c7	                            mov rdi, rax	      1943	block_dev.c	FUNCTION_74	CALL_2
0x4000e9b	      0xe900000000	                           jmp 0x4000ea0	      1943	block_dev.c	FUNCTION_74	CALL_2
0x4000ea0	      0xe900000000	                           jmp 0x4000ea5	      1945	block_dev.c	FUNCTION_74	CALL_3
blkdev_writepages	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:IF,0:WHILE,0	1
0x4000ef0	      0xe900000000	                           jmp 0x4000ef5	      1951	block_dev.c	FUNCTION_75	CALL_1
bdev_write_page	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,1:CALL,9:IF,3:WHILE,0	51
0x4000560	            0x4155	                                push r13	       692	block_dev.c	FUNCTION_31
0x4000562	            0x4154	                                push r12	       692	block_dev.c	FUNCTION_31
0x4000564	              0x55	                                push rbp	       692	block_dev.c	FUNCTION_31
0x4000565	              0x53	                                push rbx	       692	block_dev.c	FUNCTION_31
0x4000566	    0x488b87800000	            mov rax, qword [rdi + 0x80] 	       694	block_dev.c	FUNCTION_31
0x400056d	    0x4c8ba8b80300	           mov r13, qword [rax + 0x3b8] 	       694	block_dev.c	FUNCTION_31
0x4000574	      0x49837d1000	               cmp qword [r13 + 0x10], 0	       696	block_dev.c	FUNCTION_31	IF_1	CALL_1
0x4000579	            0x747c	                            je 0x40005f7	       696	block_dev.c	FUNCTION_31	IF_1	CALL_1
0x400057b	          0x4889fd	                            mov rbp, rdi	       696	block_dev.c	FUNCTION_31	IF_1	CALL_1
0x400057e	    0x488bbf880000	            mov rdi, qword [rdi + 0x88] 	       698	block_dev.c	FUNCTION_31	CALL_2
0x4000585	          0x4889f3	                            mov rbx, rsi	       698	block_dev.c	FUNCTION_31	CALL_2
0x4000588	            0x31f6	                            xor esi, esi	       698	block_dev.c	FUNCTION_31	CALL_2
0x400058a	          0x4989d4	                            mov r12, rdx	       698	block_dev.c	FUNCTION_31	CALL_2
0x400058d	      0xe800000000	                          call 0x4000592	       698	block_dev.c	FUNCTION_31	CALL_2
0x4000592	            0x85c0	                           test eax, eax	       699	block_dev.c	FUNCTION_31	IF_2
0x4000594	            0x7407	                            je 0x400059d	       699	block_dev.c	FUNCTION_31	IF_2
0x4000596	              0x5b	                                 pop rbx	       712	block_dev.c	FUNCTION_31
0x4000597	              0x5d	                                 pop rbp	       712	block_dev.c	FUNCTION_31
0x4000598	            0x415c	                                 pop r12	       712	block_dev.c	FUNCTION_31
0x400059a	            0x415d	                                 pop r13	       712	block_dev.c	FUNCTION_31
0x400059c	              0xc3	                                     ret	       712	block_dev.c	FUNCTION_31
0x400059d	            0x31f6	                            xor esi, esi	       492	page-flags.h	FUNCTION_333
0x400059f	          0x4c89e7	                            mov rdi, r12	       492	page-flags.h	FUNCTION_333
0x40005a2	      0xe800000000	                          call 0x40005a7	       492	page-flags.h	FUNCTION_333
0x40005a7	        0x488b4570	            mov rax, qword [rbp + 0x70] 	       430	genhd.h	FUNCTION_228
0x40005ab	          0x4889ef	                            mov rdi, rbp	       703	block_dev.c	FUNCTION_31	CALL_5
0x40005ae	      0xb901000000	                              mov ecx, 1	       703	block_dev.c	FUNCTION_31	CALL_5
0x40005b3	          0x4c89e2	                            mov rdx, r12	       703	block_dev.c	FUNCTION_31	CALL_5
0x40005b6	          0x480318	                    add rbx, qword [rax]	       703	block_dev.c	FUNCTION_31	CALL_5
0x40005b9	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       703	block_dev.c	FUNCTION_31	CALL_5
0x40005bd	          0x4889de	                            mov rsi, rbx	       703	block_dev.c	FUNCTION_31	CALL_5
0x40005c0	      0xe800000000	                          call 0x40005c5	       703	block_dev.c	FUNCTION_31	CALL_5
0x40005c5	            0x85c0	                           test eax, eax	       704	block_dev.c	FUNCTION_31	IF_3
0x40005c7	            0x89c3	                            mov ebx, eax	       703	block_dev.c	FUNCTION_31	CALL_5
0x40005c9	          0x4c89e7	                            mov rdi, r12	       705	block_dev.c	FUNCTION_31	IF_3	CALL_6
0x40005cc	            0x7522	                           jne 0x40005f0	       704	block_dev.c	FUNCTION_31	IF_3
0x40005ce	      0xe800000000	                          call 0x40005d3	       707	block_dev.c	FUNCTION_31	ELSE_1	CALL_7
0x40005d3	          0x4c89e7	                            mov rdi, r12	       708	block_dev.c	FUNCTION_31	ELSE_1	CALL_8
0x40005d6	      0xe800000000	                          call 0x40005db	       708	block_dev.c	FUNCTION_31	ELSE_1	CALL_8
0x40005db	    0x488bbd880000	            mov rdi, qword [rbp + 0x88] 	       710	block_dev.c	FUNCTION_31	CALL_9
0x40005e2	      0xe800000000	                          call 0x40005e7	       710	block_dev.c	FUNCTION_31	CALL_9
0x40005e7	            0x89d8	                            mov eax, ebx	       703	block_dev.c	FUNCTION_31	CALL_5
0x40005e9	              0x5b	                                 pop rbx	       712	block_dev.c	FUNCTION_31
0x40005ea	              0x5d	                                 pop rbp	       712	block_dev.c	FUNCTION_31
0x40005eb	            0x415c	                                 pop r12	       712	block_dev.c	FUNCTION_31
0x40005ed	            0x415d	                                 pop r13	       712	block_dev.c	FUNCTION_31
0x40005ef	              0xc3	                                     ret	       712	block_dev.c	FUNCTION_31
0x40005f0	      0xe800000000	                          call 0x40005f5	       705	block_dev.c	FUNCTION_31	IF_3	CALL_6
0x40005f5	            0xebe4	                           jmp 0x40005db	       705	block_dev.c	FUNCTION_31	IF_3	CALL_6
0x40005f7	      0xb8a1ffffff	                     mov eax, 0xffffffa1	       697	block_dev.c	FUNCTION_31	IF_1
0x40005fc	            0xeb98	                           jmp 0x4000596	       697	block_dev.c	FUNCTION_31	IF_1
bdev_set	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:IF,0:WHILE,0	4
0x4000060	            0x8b06	                    mov eax, dword [rsi]	       839	block_dev.c	FUNCTION_41	CALL_1
0x4000062	    0x898728ffffff	             mov dword [rdi - 0xd8], eax	       839	block_dev.c	FUNCTION_41	CALL_1
0x4000068	            0x31c0	                            xor eax, eax	       841	block_dev.c	FUNCTION_41
0x400006a	              0xc3	                                     ret	       841	block_dev.c	FUNCTION_41
revalidate_disk	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,6:IF,2:WHILE,0	38
0x40027e0	            0x4155	                                push r13	      1356	block_dev.c	FUNCTION_60
0x40027e2	            0x4154	                                push r12	      1356	block_dev.c	FUNCTION_60
0x40027e4	          0x4531e4	                          xor r12d, r12d	      1356	block_dev.c	FUNCTION_60
0x40027e7	              0x55	                                push rbp	      1356	block_dev.c	FUNCTION_60
0x40027e8	              0x53	                                push rbx	      1356	block_dev.c	FUNCTION_60
0x40027e9	          0x4889fd	                            mov rbp, rdi	      1356	block_dev.c	FUNCTION_60
0x40027ec	    0x488b87b80300	           mov rax, qword [rdi + 0x3b8] 	      1360	block_dev.c	FUNCTION_60	IF_1
0x40027f3	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1360	block_dev.c	FUNCTION_60	IF_1
0x40027f7	          0x4885c0	                           test rax, rax	      1360	block_dev.c	FUNCTION_60	IF_1
0x40027fa	            0x7408	                            je 0x4002804	      1360	block_dev.c	FUNCTION_60	IF_1
0x40027fc	      0xe800000000	                          call 0x4002801	      1361	block_dev.c	FUNCTION_60	CALL_1
0x4002801	          0x4189c4	                           mov r12d, eax	      1361	block_dev.c	FUNCTION_60	CALL_1
0x4002804	            0x31f6	                            xor esi, esi	      1362	block_dev.c	FUNCTION_60	CALL_2
0x4002806	          0x4889ef	                            mov rdi, rbp	      1362	block_dev.c	FUNCTION_60	CALL_2
0x4002809	      0xe800000000	                          call 0x400280e	      1362	block_dev.c	FUNCTION_60	CALL_2
0x400280e	          0x4885c0	                           test rax, rax	      1363	block_dev.c	FUNCTION_60	IF_2
0x4002811	          0x4889c3	                            mov rbx, rax	      1362	block_dev.c	FUNCTION_60	CALL_2
0x4002814	            0x7437	                            je 0x400284d	      1363	block_dev.c	FUNCTION_60	IF_2
0x4002816	        0x4c8d6818	                   lea r13, [rax + 0x18]	      1366	block_dev.c	FUNCTION_60	CALL_3
0x400281a	          0x4c89ef	                            mov rdi, r13	      1366	block_dev.c	FUNCTION_60	CALL_3
0x400281d	      0xe800000000	                          call 0x4002822	      1366	block_dev.c	FUNCTION_60	CALL_3
0x4002822	            0x31d2	                            xor edx, edx	      1367	block_dev.c	FUNCTION_60	CALL_4
0x4002824	          0x4585e4	                         test r12d, r12d	      1367	block_dev.c	FUNCTION_60	CALL_4
0x4002827	          0x4889de	                            mov rsi, rbx	      1367	block_dev.c	FUNCTION_60	CALL_4
0x400282a	           0xf94c2	                                 sete dl	      1367	block_dev.c	FUNCTION_60	CALL_4
0x400282d	          0x4889ef	                            mov rdi, rbp	      1367	block_dev.c	FUNCTION_60	CALL_4
0x4002830	      0xe800000000	                          call 0x4002835	      1367	block_dev.c	FUNCTION_60	CALL_4
0x4002835	          0x4c89ef	                            mov rdi, r13	      1369	block_dev.c	FUNCTION_60	CALL_5
0x4002838	    0xc7437c000000	               mov dword [rbx + 0x7c], 0	      1368	block_dev.c	FUNCTION_60
0x400283f	      0xe800000000	                          call 0x4002844	      1369	block_dev.c	FUNCTION_60	CALL_5
0x4002844	        0x488b7b08	                mov rdi, qword [rbx + 8]	       920	block_dev.c	FUNCTION_46	CALL_1
0x4002848	      0xe800000000	                          call 0x400284d	       920	block_dev.c	FUNCTION_46	CALL_1
0x400284d	              0x5b	                                 pop rbx	      1372	block_dev.c	FUNCTION_60
0x400284e	          0x4489e0	                           mov eax, r12d	      1372	block_dev.c	FUNCTION_60
0x4002851	              0x5d	                                 pop rbp	      1372	block_dev.c	FUNCTION_60
0x4002852	            0x415c	                                 pop r12	      1372	block_dev.c	FUNCTION_60
0x4002854	            0x415d	                                 pop r13	      1372	block_dev.c	FUNCTION_60
0x4002856	              0xc3	                                     ret	      1372	block_dev.c	FUNCTION_60
blkdev_fallocate	DO,0:functions,0:FOR,0:SWITCH,1:ELSE,1:CALL,9:IF,6:WHILE,0	112
0x40013c0	            0x4157	                                push r15	      1972	block_dev.c	FUNCTION_76
0x40013c2	            0x4156	                                push r14	      1972	block_dev.c	FUNCTION_76
0x40013c4	    0xf7c6e8ffffff	                    test esi, 0xffffffe8	      1980	block_dev.c	FUNCTION_76	IF_1
0x40013ca	            0x4155	                                push r13	      1972	block_dev.c	FUNCTION_76
0x40013cc	            0x4154	                                push r12	      1972	block_dev.c	FUNCTION_76
0x40013ce	      0x4c8d640aff	                lea r12, [rdx + rcx - 1]	      1975	block_dev.c	FUNCTION_76
0x40013d3	              0x55	                                push rbp	      1972	block_dev.c	FUNCTION_76
0x40013d4	              0x53	                                push rbx	      1972	block_dev.c	FUNCTION_76
0x40013d5	    0x488b87f00000	            mov rax, qword [rdi + 0xf0] 	       164	block_dev.c	FUNCTION_10
0x40013dc	          0x488b00	                    mov rax, qword [rax]	       164	block_dev.c	FUNCTION_10
0x40013df	     0xf851e010000	                           jne 0x4001503	      1980	block_dev.c	FUNCTION_76	IF_1
0x40013e5	          0x4889cd	                            mov rbp, rcx	      1980	block_dev.c	FUNCTION_76	IF_1
0x40013e8	    0x488b8830ffff	             mov rcx, qword [rax - 0xd0]	      1984	block_dev.c	FUNCTION_76	CALL_3
0x40013ef	          0x4889d3	                            mov rbx, rdx	      1984	block_dev.c	FUNCTION_76	CALL_3
0x40013f2	        0x488b5150	            mov rdx, qword [rcx + 0x50] 	      1984	block_dev.c	FUNCTION_76	CALL_3
0x40013f6	          0x4839d3	                            cmp rbx, rdx	      1985	block_dev.c	FUNCTION_76	IF_2
0x40013f9	     0xf8d43010000	                           jge 0x4001542	      1985	block_dev.c	FUNCTION_76	IF_2
0x40013ff	          0x4939d4	                            cmp r12, rdx	      1987	block_dev.c	FUNCTION_76	IF_3
0x4001402	          0x4189f7	                           mov r15d, esi	      1987	block_dev.c	FUNCTION_76	IF_3
0x4001405	    0x4c8db028ffff	                   lea r14, [rax - 0xd8]	      1987	block_dev.c	FUNCTION_76	IF_3
0x400140c	            0x7c14	                            jl 0x4001422	      1987	block_dev.c	FUNCTION_76	IF_3
0x400140e	        0x40f6c601	                             test sil, 1	      1988	block_dev.c	FUNCTION_76	IF_3	IF_4
0x4001412	     0xf842a010000	                            je 0x4001542	      1988	block_dev.c	FUNCTION_76	IF_3	IF_4
0x4001418	          0x4889d5	                            mov rbp, rdx	      1989	block_dev.c	FUNCTION_76	IF_3	IF_4
0x400141b	        0x4c8d62ff	                      lea r12, [rdx - 1]	      1990	block_dev.c	FUNCTION_76	IF_3	IF_4
0x400141f	          0x4829dd	                            sub rbp, rbx	      1989	block_dev.c	FUNCTION_76	IF_3	IF_4
0x4001422	        0x488b40a8	             mov rax, qword [rax - 0x58]	      1021	blkdev.h	FUNCTION_108
0x4001426	          0x4889ee	                            mov rsi, rbp	      1998	block_dev.c	FUNCTION_76	IF_5	CALL_4
0x4001429	          0x4809de	                             or rsi, rbx	      1998	block_dev.c	FUNCTION_76	IF_5	CALL_4
0x400142c	    0x488b80c00300	           mov rax, qword [rax + 0x3c0] 	      1021	blkdev.h	FUNCTION_108
0x4001433	          0x4885c0	                           test rax, rax	      1481	blkdev.h	FUNCTION_142	IF_1
0x4001436	     0xf84fc000000	                            je 0x4001538	      1481	blkdev.h	FUNCTION_142	IF_1
0x400143c	     0xfb780ec0500	          movzx eax, word [rax + 0x5ec] 	      1481	blkdev.h	FUNCTION_142	IF_1
0x4001443	      0xbaff010000	                          mov edx, 0x1ff	      1481	blkdev.h	FUNCTION_142	IF_1
0x4001448	          0x6685c0	                             test ax, ax	      1481	blkdev.h	FUNCTION_142	IF_1
0x400144b	            0x7566	                           jne 0x40014b3	      1481	blkdev.h	FUNCTION_142	IF_1
0x400144d	          0x4885d6	                           test rsi, rdx	      1998	block_dev.c	FUNCTION_76	IF_5	CALL_4
0x4001450	    0x48c7c0eaffff	             mov rax, 0xffffffffffffffea	      1986	block_dev.c	FUNCTION_76	IF_2
0x4001457	            0x754f	                           jne 0x40014a8	      1998	block_dev.c	FUNCTION_76	IF_5	CALL_4
0x4001459	        0x4c8b6930	            mov r13, qword [rcx + 0x30] 	      2002	block_dev.c	FUNCTION_76
0x400145d	          0x4c89e2	                            mov rdx, r12	      2003	block_dev.c	FUNCTION_76	CALL_5
0x4001460	          0x4889de	                            mov rsi, rbx	      2003	block_dev.c	FUNCTION_76	CALL_5
0x4001463	          0x4c89ef	                            mov rdi, r13	      2003	block_dev.c	FUNCTION_76	CALL_5
0x4001466	      0xe800000000	                          call 0x400146b	      2003	block_dev.c	FUNCTION_76	CALL_5
0x400146b	        0x4183ff07	                             cmp r15d, 7	      2005	block_dev.c	FUNCTION_76	SWITCH_1
0x400146f	     0xf84a0000000	                            je 0x4001515	      2005	block_dev.c	FUNCTION_76	SWITCH_1
0x4001475	            0x7f44	                            jg 0x40014bb	      2005	block_dev.c	FUNCTION_76	SWITCH_1
0x4001477	        0x4183ff03	                             cmp r15d, 3	      2005	block_dev.c	FUNCTION_76	SWITCH_1
0x400147b	     0xf8582000000	                           jne 0x4001503	      2005	block_dev.c	FUNCTION_76	SWITCH_1
0x4001481	          0x4889ea	                            mov rdx, rbp	      2012	block_dev.c	FUNCTION_76	SWITCH_1	CALL_7
0x4001484	          0x4889de	                            mov rsi, rbx	      2012	block_dev.c	FUNCTION_76	SWITCH_1	CALL_7
0x4001487	    0x41b802000000	                              mov r8d, 2	      2012	block_dev.c	FUNCTION_76	SWITCH_1	CALL_7
0x400148d	        0x48c1fa09	                              sar rdx, 9	      2012	block_dev.c	FUNCTION_76	SWITCH_1	CALL_7
0x4001491	        0x48c1fe09	                              sar rsi, 9	      2012	block_dev.c	FUNCTION_76	SWITCH_1	CALL_7
0x4001495	      0xb9c0004001	                      mov ecx, 0x14000c0	      2012	block_dev.c	FUNCTION_76	SWITCH_1	CALL_7
0x400149a	          0x4c89f7	                            mov rdi, r14	      2012	block_dev.c	FUNCTION_76	SWITCH_1	CALL_7
0x400149d	      0xe800000000	                          call 0x40014a2	      2012	block_dev.c	FUNCTION_76	SWITCH_1	CALL_7
0x40014a2	            0x85c0	                           test eax, eax	      2022	block_dev.c	FUNCTION_76	IF_6
0x40014a4	            0x7443	                            je 0x40014e9	      2022	block_dev.c	FUNCTION_76	IF_6
0x40014a6	            0x4898	                                    cdqe	      2030	block_dev.c	FUNCTION_76	CALL_9
0x40014a8	              0x5b	                                 pop rbx	      2033	block_dev.c	FUNCTION_76
0x40014a9	              0x5d	                                 pop rbp	      2033	block_dev.c	FUNCTION_76
0x40014aa	            0x415c	                                 pop r12	      2033	block_dev.c	FUNCTION_76
0x40014ac	            0x415d	                                 pop r13	      2033	block_dev.c	FUNCTION_76
0x40014ae	            0x415e	                                 pop r14	      2033	block_dev.c	FUNCTION_76
0x40014b0	            0x415f	                                 pop r15	      2033	block_dev.c	FUNCTION_76
0x40014b2	              0xc3	                                     ret	      2033	block_dev.c	FUNCTION_76
0x40014b3	          0x83e801	                              sub eax, 1	      2033	block_dev.c	FUNCTION_76
0x40014b6	          0x4863d0	                         movsxd rdx, eax	      2033	block_dev.c	FUNCTION_76
0x40014b9	            0xeb92	                           jmp 0x400144d	      2033	block_dev.c	FUNCTION_76
0x40014bb	        0x418d77f0	                   lea esi, [r15 - 0x10]	      2005	block_dev.c	FUNCTION_76	SWITCH_1
0x40014bf	          0x83fe01	                              cmp esi, 1	      2005	block_dev.c	FUNCTION_76	SWITCH_1
0x40014c2	            0x773f	                            ja 0x4001503	      2005	block_dev.c	FUNCTION_76	SWITCH_1
0x40014c4	          0x4889ea	                            mov rdx, rbp	      2008	block_dev.c	FUNCTION_76	SWITCH_1	CALL_6
0x40014c7	          0x4889de	                            mov rsi, rbx	      2008	block_dev.c	FUNCTION_76	SWITCH_1	CALL_6
0x40014ca	    0x41b801000000	                              mov r8d, 1	      2008	block_dev.c	FUNCTION_76	SWITCH_1	CALL_6
0x40014d0	        0x48c1fa09	                              sar rdx, 9	      2008	block_dev.c	FUNCTION_76	SWITCH_1	CALL_6
0x40014d4	        0x48c1fe09	                              sar rsi, 9	      2008	block_dev.c	FUNCTION_76	SWITCH_1	CALL_6
0x40014d8	      0xb9c0004001	                      mov ecx, 0x14000c0	      2008	block_dev.c	FUNCTION_76	SWITCH_1	CALL_6
0x40014dd	          0x4c89f7	                            mov rdi, r14	      2008	block_dev.c	FUNCTION_76	SWITCH_1	CALL_6
0x40014e0	      0xe800000000	                          call 0x40014e5	      2008	block_dev.c	FUNCTION_76	SWITCH_1	CALL_6
0x40014e5	            0x85c0	                           test eax, eax	      2022	block_dev.c	FUNCTION_76	IF_6
0x40014e7	            0x75bd	                           jne 0x40014a6	      2022	block_dev.c	FUNCTION_76	IF_6
0x40014e9	          0x4c89e2	                            mov rdx, r12	      2030	block_dev.c	FUNCTION_76	CALL_9
0x40014ec	        0x48c1fb0c	                            sar rbx, 0xc	      2030	block_dev.c	FUNCTION_76	CALL_9
0x40014f0	          0x4c89ef	                            mov rdi, r13	      2030	block_dev.c	FUNCTION_76	CALL_9
0x40014f3	        0x48c1fa0c	                            sar rdx, 0xc	      2030	block_dev.c	FUNCTION_76	CALL_9
0x40014f7	          0x4889de	                            mov rsi, rbx	      2030	block_dev.c	FUNCTION_76	CALL_9
0x40014fa	      0xe800000000	                          call 0x40014ff	      2030	block_dev.c	FUNCTION_76	CALL_9
0x40014ff	            0x4898	                                    cdqe	      2030	block_dev.c	FUNCTION_76	CALL_9
0x4001501	            0xeba5	                           jmp 0x40014a8	      2030	block_dev.c	FUNCTION_76	CALL_9
0x4001503	              0x5b	                                 pop rbx	      2033	block_dev.c	FUNCTION_76
0x4001504	    0x48c7c0a1ffff	             mov rax, 0xffffffffffffffa1	      2020	block_dev.c	FUNCTION_76	SWITCH_1
0x400150b	              0x5d	                                 pop rbp	      2033	block_dev.c	FUNCTION_76
0x400150c	            0x415c	                                 pop r12	      2033	block_dev.c	FUNCTION_76
0x400150e	            0x415d	                                 pop r13	      2033	block_dev.c	FUNCTION_76
0x4001510	            0x415e	                                 pop r14	      2033	block_dev.c	FUNCTION_76
0x4001512	            0x415f	                                 pop r15	      2033	block_dev.c	FUNCTION_76
0x4001514	              0xc3	                                     ret	      2033	block_dev.c	FUNCTION_76
0x4001515	          0x4889ea	                            mov rdx, rbp	      2016	block_dev.c	FUNCTION_76	SWITCH_1	CALL_8
0x4001518	          0x4889de	                            mov rsi, rbx	      2016	block_dev.c	FUNCTION_76	SWITCH_1	CALL_8
0x400151b	          0x4531c0	                            xor r8d, r8d	      2016	block_dev.c	FUNCTION_76	SWITCH_1	CALL_8
0x400151e	        0x48c1fa09	                              sar rdx, 9	      2016	block_dev.c	FUNCTION_76	SWITCH_1	CALL_8
0x4001522	        0x48c1fe09	                              sar rsi, 9	      2016	block_dev.c	FUNCTION_76	SWITCH_1	CALL_8
0x4001526	      0xb9c0004001	                      mov ecx, 0x14000c0	      2016	block_dev.c	FUNCTION_76	SWITCH_1	CALL_8
0x400152b	          0x4c89f7	                            mov rdi, r14	      2016	block_dev.c	FUNCTION_76	SWITCH_1	CALL_8
0x400152e	      0xe800000000	                          call 0x4001533	      2016	block_dev.c	FUNCTION_76	SWITCH_1	CALL_8
0x4001533	      0xe96affffff	                           jmp 0x40014a2	      2018	block_dev.c	FUNCTION_76	SWITCH_1
0x4001538	      0xbaff010000	                          mov edx, 0x1ff	      1481	blkdev.h	FUNCTION_142	IF_1
0x400153d	      0xe90bffffff	                           jmp 0x400144d	      1481	blkdev.h	FUNCTION_142	IF_1
0x4001542	    0x48c7c0eaffff	             mov rax, 0xffffffffffffffea	      1986	block_dev.c	FUNCTION_76	IF_2
0x4001549	      0xe95affffff	                           jmp 0x40014a8	      1986	block_dev.c	FUNCTION_76	IF_2
invalidate_bdev	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,4:IF,1:WHILE,0	14
0x4000260	              0x53	                                push rbx	        92	block_dev.c	FUNCTION_5
0x4000261	        0x488b4708	                mov rax, qword [rdi + 8]	        93	block_dev.c	FUNCTION_5
0x4000265	        0x488b5830	            mov rbx, qword [rax + 0x30] 	        93	block_dev.c	FUNCTION_5
0x4000269	      0x48837b5800	               cmp qword [rbx + 0x58], 0	        95	block_dev.c	FUNCTION_5	IF_1
0x400026e	            0x7502	                           jne 0x4000272	        95	block_dev.c	FUNCTION_5	IF_1
0x4000270	              0x5b	                                 pop rbx	       104	block_dev.c	FUNCTION_5
0x4000271	              0xc3	                                     ret	       104	block_dev.c	FUNCTION_5
0x4000272	      0xe800000000	                          call 0x4000277	        96	block_dev.c	FUNCTION_5	IF_1	CALL_1
0x4000277	      0xe800000000	                          call 0x400027c	        97	block_dev.c	FUNCTION_5	IF_1	CALL_2
0x400027c	          0x4889df	                            mov rdi, rbx	        98	block_dev.c	FUNCTION_5	IF_1	CALL_3
0x400027f	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        98	block_dev.c	FUNCTION_5	IF_1	CALL_3
0x4000286	            0x31f6	                            xor esi, esi	        98	block_dev.c	FUNCTION_5	IF_1	CALL_3
0x4000288	              0x5b	                                 pop rbx	       104	block_dev.c	FUNCTION_5
0x4000289	      0xe900000000	                           jmp 0x400028e	        98	block_dev.c	FUNCTION_5	IF_1	CALL_3
blkdev_write_begin	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:IF,0:WHILE,0	7
0x4000eb0	          0x4889f7	                            mov rdi, rsi	       580	block_dev.c	FUNCTION_26
0x4000eb3	          0x4889d6	                            mov rsi, rdx	       580	block_dev.c	FUNCTION_26
0x4000eb6	            0x89ca	                            mov edx, ecx	       580	block_dev.c	FUNCTION_26
0x4000eb8	          0x4489c1	                            mov ecx, r8d	       580	block_dev.c	FUNCTION_26
0x4000ebb	          0x4d89c8	                              mov r8, r9	       580	block_dev.c	FUNCTION_26
0x4000ebe	    0x49c7c1000000	                               mov r9, 0	       581	block_dev.c	FUNCTION_26	CALL_1
0x4000ec5	      0xe900000000	                           jmp 0x4000eca	       581	block_dev.c	FUNCTION_26	CALL_1
block_ioctl	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,1:CALL,3:IF,1:WHILE,0	16
0x4001550	    0x488b87f00000	            mov rax, qword [rdi + 0xf0] 	       164	block_dev.c	FUNCTION_10
0x4001557	          0x4189f1	                            mov r9d, esi	      1864	block_dev.c	FUNCTION_71
0x400155a	          0x4889d1	                            mov rcx, rdx	      1877	block_dev.c	FUNCTION_71	CALL_3
0x400155d	          0x4489ca	                            mov edx, r9d	      1877	block_dev.c	FUNCTION_71	CALL_3
0x4001560	          0x4c8b00	                     mov r8, qword [rax]	        53	block_dev.c	FUNCTION_2	CALL_1
0x4001563	          0x8b4744	            mov eax, dword [rdi + 0x44] 	      1866	block_dev.c	FUNCTION_71
0x4001566	            0x89c6	                            mov esi, eax	      1873	block_dev.c	FUNCTION_71	IF_1
0x4001568	    0x4981e8d80000	                            sub r8, 0xd8	        53	block_dev.c	FUNCTION_2	CALL_1
0x400156f	          0x83e0bf	                     and eax, 0xffffffbf	      1873	block_dev.c	FUNCTION_71	IF_1
0x4001572	          0x83ce40	                            or esi, 0x40	      1873	block_dev.c	FUNCTION_71	IF_1
0x4001575	        0xf6474108	               test byte [rdi + 0x41], 8	      1873	block_dev.c	FUNCTION_71	IF_1
0x4001579	          0x4c89c7	                             mov rdi, r8	      1877	block_dev.c	FUNCTION_71	CALL_3
0x400157c	           0xf44f0	                          cmove esi, eax	      1873	block_dev.c	FUNCTION_71	IF_1
0x400157f	      0xe800000000	                          call 0x4001584	      1877	block_dev.c	FUNCTION_71	CALL_3
0x4001584	            0x4898	                                    cdqe	      1877	block_dev.c	FUNCTION_71	CALL_3
0x4001586	              0xc3	                                     ret	      1878	block_dev.c	FUNCTION_71
sb_min_blocksize	DO,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:IF,1:WHILE,0	16
0x40018e0	    0x488b87d00000	            mov rax, qword [rdi + 0xd0] 	       143	block_dev.c	FUNCTION_8
0x40018e7	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1021	blkdev.h	FUNCTION_108
0x40018ee	    0x488b80c00300	           mov rax, qword [rax + 0x3c0] 	      1021	blkdev.h	FUNCTION_108
0x40018f5	          0x4885c0	                           test rax, rax	      1481	blkdev.h	FUNCTION_142	IF_1
0x40018f8	            0x7419	                            je 0x4001913	      1481	blkdev.h	FUNCTION_142	IF_1
0x40018fa	     0xfb780ec0500	          movzx eax, word [rax + 0x5ec] 	      1481	blkdev.h	FUNCTION_142	IF_1
0x4001901	      0xba00020000	                          mov edx, 0x200	      1482	blkdev.h	FUNCTION_142	IF_1
0x4001906	          0x6685c0	                             test ax, ax	      1482	blkdev.h	FUNCTION_142	IF_1
0x4001909	           0xf44c2	                          cmove eax, edx	      1482	blkdev.h	FUNCTION_142	IF_1
0x400190c	            0x39c6	                            cmp esi, eax	       147	block_dev.c	FUNCTION_8	CALL_2
0x400190e	           0xf4cf0	                          cmovl esi, eax	       147	block_dev.c	FUNCTION_8	CALL_2
0x4001911	            0xeb8d	                jmp sym.sb_set_blocksize	       147	block_dev.c	FUNCTION_8	CALL_2
0x4001913	      0xb800020000	                          mov eax, 0x200	      1479	blkdev.h	FUNCTION_142
0x4001918	            0x39c6	                            cmp esi, eax	       147	block_dev.c	FUNCTION_8	CALL_2
0x400191a	           0xf4cf0	                          cmovl esi, eax	       147	block_dev.c	FUNCTION_8	CALL_2
0x400191d	            0xeb81	                jmp sym.sb_set_blocksize	       147	block_dev.c	FUNCTION_8	CALL_2
