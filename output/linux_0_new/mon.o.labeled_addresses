nsm_xdr_enc_mon	WHILE,0:DO,0:CALL,2:functions,0:SWITCH,0:FOR,0:IF,0:ELSE,0	19
0x4000300	              0x55	                                push rbp	       482	mon.c	FUNCTION_19
0x4000301	          0x4889f5	                            mov rbp, rsi	       482	mon.c	FUNCTION_19
0x4000304	              0x53	                                push rbx	       482	mon.c	FUNCTION_19
0x4000305	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	       437	mon.c	FUNCTION_15	CALL_1
0x4000309	          0x4889d3	                            mov rbx, rdx	       482	mon.c	FUNCTION_19
0x400030c	          0x4889ef	                            mov rdi, rbp	       437	mon.c	FUNCTION_15	CALL_1
0x400030f	      0xe84cffffff	              call sym.encode_nsm_string	       437	mon.c	FUNCTION_15	CALL_1
0x4000314	          0x4889de	                            mov rsi, rbx	       464	mon.c	FUNCTION_17	CALL_2
0x4000317	          0x4889ef	                            mov rdi, rbp	       464	mon.c	FUNCTION_17	CALL_2
0x400031a	      0xe881ffffff	                   call sym.encode_my_id	       464	mon.c	FUNCTION_17	CALL_2
0x400031f	          0x4889ef	                            mov rdi, rbp	       476	mon.c	FUNCTION_18	CALL_1
0x4000322	      0xbe10000000	                           mov esi, 0x10	       476	mon.c	FUNCTION_18	CALL_1
0x4000327	      0xe800000000	                          call 0x400032c	       476	mon.c	FUNCTION_18	CALL_1
0x400032c	          0x488b33	                    mov rsi, qword [rbx]	       477	mon.c	FUNCTION_18	CALL_2
0x400032f	      0xba10000000	                           mov edx, 0x10	       477	mon.c	FUNCTION_18	CALL_2
0x4000334	          0x4889c7	                            mov rdi, rax	       477	mon.c	FUNCTION_18	CALL_2
0x4000337	              0x5b	                                 pop rbx	       485	mon.c	FUNCTION_19
0x4000338	              0x5d	                                 pop rbp	       485	mon.c	FUNCTION_19
0x4000339	      0xe900000000	                           jmp 0x400033e	       477	mon.c	FUNCTION_18	CALL_2
nsm_monitor	WHILE,0:DO,0:CALL,7:functions,0:SWITCH,0:FOR,0:IF,4:ELSE,0	54
0x4000340	              0x55	                                push rbp	       148	mon.c	FUNCTION_4
0x4000341	              0x53	                                push rbx	       148	mon.c	FUNCTION_4
0x4000342	        0x4883ec10	                           sub rsp, 0x10	       148	mon.c	FUNCTION_4
0x4000346	    0x488b9ff00100	           mov rbx, qword [rdi + 0x1f0] 	       149	mon.c	FUNCTION_4
0x400034d	    0x65488b042528	                mov rax, qword gs:[0x28]	       148	mon.c	FUNCTION_4
0x4000356	      0x4889442408	                mov qword [rsp + 8], rax	       148	mon.c	FUNCTION_4
0x400035b	            0x31c0	                            xor eax, eax	       148	mon.c	FUNCTION_4
0x400035d	    0xf683b0000000	               test byte [rbx + 0xb0], 1	       155	mon.c	FUNCTION_4	IF_1
0x4000364	            0x7547	                           jne 0x40003ad	       155	mon.c	FUNCTION_4	IF_1
0x4000366	    0x803d00000000	                cmp byte [0x0400036d], 0	       162	mon.c	FUNCTION_4
0x400036d	    0x488d83c10000	                   lea rax, [rbx + 0xc1]	       162	mon.c	FUNCTION_4
0x4000374	            0x7550	                           jne 0x40003c6	       162	mon.c	FUNCTION_4
0x4000376	          0x4889f9	                            mov rcx, rdi	       164	mon.c	FUNCTION_4	CALL_2
0x4000379	        0x48894318	             mov qword [rbx + 0x18], rax	       162	mon.c	FUNCTION_4
0x400037d	          0x4889e2	                            mov rdx, rsp	       164	mon.c	FUNCTION_4	CALL_2
0x4000380	      0xbe02000000	                              mov esi, 2	       164	mon.c	FUNCTION_4	CALL_2
0x4000385	          0x4889df	                            mov rdi, rbx	       164	mon.c	FUNCTION_4	CALL_2
0x4000388	      0xe873fdffff	                  call sym.nsm_mon_unmon	       164	mon.c	FUNCTION_4	CALL_2
0x400038d	            0x89c5	                            mov ebp, eax	       164	mon.c	FUNCTION_4	CALL_2
0x400038f	          0x8b0424	                    mov eax, dword [rsp]	       165	mon.c	FUNCTION_4	IF_2	CALL_3
0x4000392	            0x85c0	                           test eax, eax	       165	mon.c	FUNCTION_4	IF_2	CALL_3
0x4000394	            0x753e	                           jne 0x40003d4	       165	mon.c	FUNCTION_4	IF_2	CALL_3
0x4000396	            0x85ed	                           test ebp, ebp	       167	mon.c	FUNCTION_4	IF_3	CALL_4
0x4000398	            0x783f	                            js 0x40003d9	       167	mon.c	FUNCTION_4	IF_3	CALL_4
0x400039a	    0x808bb0000000	                 or byte [rbx + 0xb0], 1	       172	mon.c	FUNCTION_4
0x40003a1	        0x8b442404	                mov eax, dword [rsp + 4]	       173	mon.c	FUNCTION_4	IF_4	CALL_6
0x40003a5	    0x3b0500000000	            cmp eax, dword [0x040003ab] 	       173	mon.c	FUNCTION_4	IF_4	CALL_6
0x40003ab	            0x751f	                           jne 0x40003cc	       173	mon.c	FUNCTION_4	IF_4	CALL_6
0x40003ad	            0x31c0	                            xor eax, eax	       177	mon.c	FUNCTION_4
0x40003af	      0x488b542408	                mov rdx, qword [rsp + 8]	       178	mon.c	FUNCTION_4
0x40003b4	    0x654833142528	                xor rdx, qword gs:[0x28]	       178	mon.c	FUNCTION_4
0x40003bd	            0x7535	                           jne 0x40003f4	       178	mon.c	FUNCTION_4
0x40003bf	        0x4883c410	                           add rsp, 0x10	       178	mon.c	FUNCTION_4
0x40003c3	              0x5b	                                 pop rbx	       178	mon.c	FUNCTION_4
0x40003c4	              0x5d	                                 pop rbp	       178	mon.c	FUNCTION_4
0x40003c5	              0xc3	                                     ret	       178	mon.c	FUNCTION_4
0x40003c6	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       162	mon.c	FUNCTION_4
0x40003ca	            0xebaa	                           jmp 0x4000376	       162	mon.c	FUNCTION_4
0x40003cc	    0x890500000000	            mov dword [0x040003d2], eax 	       174	mon.c	FUNCTION_4	IF_4
0x40003d2	            0xebd9	                           jmp 0x40003ad	       174	mon.c	FUNCTION_4	IF_4
0x40003d4	      0xbdfbffffff	                     mov ebp, 0xfffffffb	       166	mon.c	FUNCTION_4	IF_2
0x40003d9	    0x48c7c6000000	                              mov rsi, 0	       168	mon.c	FUNCTION_4	IF_3	CALL_5
0x40003e0	    0x48c7c7000000	                              mov rdi, 0	       168	mon.c	FUNCTION_4	IF_3	CALL_5
0x40003e7	      0xe800000000	                          call 0x40003ec	       168	mon.c	FUNCTION_4	IF_3	CALL_5
0x40003ec	            0x85c0	                           test eax, eax	       168	mon.c	FUNCTION_4	IF_3	CALL_5
0x40003ee	            0x7509	                           jne 0x40003f9	       168	mon.c	FUNCTION_4	IF_3	CALL_5
0x40003f0	            0x89e8	                            mov eax, ebp	       168	mon.c	FUNCTION_4	IF_3	CALL_5
0x40003f2	            0xebbb	                           jmp 0x40003af	       168	mon.c	FUNCTION_4	IF_3	CALL_5
0x40003f4	      0xe800000000	                          call 0x40003f9	       178	mon.c	FUNCTION_4
0x40003f9	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       168	mon.c	FUNCTION_4	IF_3	CALL_5
0x40003fd	    0x48c7c7000000	                              mov rdi, 0	       168	mon.c	FUNCTION_4	IF_3	CALL_5
0x4000404	      0xe800000000	                          call 0x4000409	       168	mon.c	FUNCTION_4	IF_3	CALL_5
0x4000409	            0x89e8	                            mov eax, ebp	       168	mon.c	FUNCTION_4	IF_3	CALL_5
0x400040b	            0xeba2	                           jmp 0x40003af	       168	mon.c	FUNCTION_4	IF_3	CALL_5
encode_nsm_string	WHILE,0:DO,0:CALL,3:functions,0:SWITCH,0:FOR,0:IF,0:ELSE,0	18
0x4000260	            0x4154	                                push r12	       424	mon.c	FUNCTION_14
0x4000262	              0x55	                                push rbp	       424	mon.c	FUNCTION_14
0x4000263	          0x4989fc	                            mov r12, rdi	       424	mon.c	FUNCTION_14
0x4000266	              0x53	                                push rbx	       424	mon.c	FUNCTION_14
0x4000267	          0x4889f7	                            mov rdi, rsi	       425	mon.c	FUNCTION_14	CALL_1
0x400026a	          0x4889f3	                            mov rbx, rsi	       424	mon.c	FUNCTION_14
0x400026d	      0xe800000000	                          call 0x4000272	       425	mon.c	FUNCTION_14	CALL_1
0x4000272	          0x8d7004	                      lea esi, [rax + 4]	       428	mon.c	FUNCTION_14	CALL_2
0x4000275	          0x4889c5	                            mov rbp, rax	       425	mon.c	FUNCTION_14	CALL_1
0x4000278	          0x4c89e7	                            mov rdi, r12	       428	mon.c	FUNCTION_14	CALL_2
0x400027b	      0xe800000000	                          call 0x4000280	       428	mon.c	FUNCTION_14	CALL_2
0x4000280	            0x89ea	                            mov edx, ebp	       429	mon.c	FUNCTION_14	CALL_3
0x4000282	          0x4889de	                            mov rsi, rbx	       429	mon.c	FUNCTION_14	CALL_3
0x4000285	          0x4889c7	                            mov rdi, rax	       429	mon.c	FUNCTION_14	CALL_3
0x4000288	              0x5b	                                 pop rbx	       430	mon.c	FUNCTION_14
0x4000289	              0x5d	                                 pop rbp	       430	mon.c	FUNCTION_14
0x400028a	            0x415c	                                 pop r12	       430	mon.c	FUNCTION_14
0x400028c	      0xe900000000	                           jmp 0x4000291	       429	mon.c	FUNCTION_14	CALL_3
nsm_xdr_enc_unmon	WHILE,0:DO,0:CALL,1:functions,0:SWITCH,0:FOR,0:IF,0:ELSE,0	12
0x40002e0	              0x55	                                push rbp	       489	mon.c	FUNCTION_20
0x40002e1	              0x53	                                push rbx	       489	mon.c	FUNCTION_20
0x40002e2	          0x4889f3	                            mov rbx, rsi	       489	mon.c	FUNCTION_20
0x40002e5	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	       437	mon.c	FUNCTION_15	CALL_1
0x40002e9	          0x4889d5	                            mov rbp, rdx	       489	mon.c	FUNCTION_20
0x40002ec	          0x4889df	                            mov rdi, rbx	       437	mon.c	FUNCTION_15	CALL_1
0x40002ef	      0xe86cffffff	              call sym.encode_nsm_string	       437	mon.c	FUNCTION_15	CALL_1
0x40002f4	          0x4889ee	                            mov rsi, rbp	       464	mon.c	FUNCTION_17	CALL_2
0x40002f7	          0x4889df	                            mov rdi, rbx	       464	mon.c	FUNCTION_17	CALL_2
0x40002fa	              0x5b	                                 pop rbx	       491	mon.c	FUNCTION_20
0x40002fb	              0x5d	                                 pop rbp	       491	mon.c	FUNCTION_20
0x40002fc	            0xeba2	                    jmp sym.encode_my_id	       464	mon.c	FUNCTION_17	CALL_2
nsm_create	WHILE,0:DO,0:CALL,2:functions,0:SWITCH,0:FOR,0:IF,0:ELSE,0	31
0x4000040	    0x4881ec880000	                           sub rsp, 0x88	        69	mon.c	FUNCTION_2
0x4000047	      0xb902000000	                              mov ecx, 2	        70	mon.c	FUNCTION_2
0x400004c	          0x4889fa	                            mov rdx, rdi	        69	mon.c	FUNCTION_2
0x400004f	    0x65488b042528	                mov rax, qword gs:[0x28]	        69	mon.c	FUNCTION_2
0x4000058	    0x488984248000	             mov qword [rsp + 0x80], rax	        69	mon.c	FUNCTION_2
0x4000060	            0x31c0	                            xor eax, eax	        69	mon.c	FUNCTION_2
0x4000062	    0x48c744247000	               mov qword [rsp + 0x70], 0	        70	mon.c	FUNCTION_2
0x400006b	          0x4889e7	                            mov rdi, rsp	        74	mon.c	FUNCTION_2
0x400006e	      0x66894c2470	               mov word [rsp + 0x70], cx	        70	mon.c	FUNCTION_2
0x4000073	      0xb90e000000	                            mov ecx, 0xe	        74	mon.c	FUNCTION_2
0x4000078	    0x48c744247800	               mov qword [rsp + 0x78], 0	        70	mon.c	FUNCTION_2
0x4000081	    0xc74424747f00	      mov dword [rsp + 0x74], 0x100007f 	        70	mon.c	FUNCTION_2
0x4000089	          0xf348ab	              rep stosq qword [rdi], rax	        74	mon.c	FUNCTION_2
0x400008c	      0x488d442470	                   lea rax, [rsp + 0x70]	        74	mon.c	FUNCTION_2
0x4000091	          0x4889e7	                            mov rdi, rsp	        87	mon.c	FUNCTION_2	CALL_2
0x4000094	        0x48891424	                    mov qword [rsp], rdx	        74	mon.c	FUNCTION_2
0x4000098	    0xc74424080600	                  mov dword [rsp + 8], 6	        74	mon.c	FUNCTION_2
0x40000a0	    0x48c744241810	           mov qword [rsp + 0x18], 0x10 	        74	mon.c	FUNCTION_2
0x40000a9	      0x4889442410	             mov qword [rsp + 0x10], rax	        74	mon.c	FUNCTION_2
0x40000ae	    0x48c744243000	               mov qword [rsp + 0x30], 0	        74	mon.c	FUNCTION_2
0x40000b7	      0x4889742438	             mov qword [rsp + 0x38], rsi	        74	mon.c	FUNCTION_2
0x40000bc	    0x48c744244000	               mov qword [rsp + 0x40], 0	        74	mon.c	FUNCTION_2
0x40000c5	    0xc744244c0100	               mov dword [rsp + 0x4c], 1	        74	mon.c	FUNCTION_2
0x40000cd	    0x48c744245810	           mov qword [rsp + 0x58], 0x10 	        74	mon.c	FUNCTION_2
0x40000d6	      0xe800000000	                          call 0x40000db	        87	mon.c	FUNCTION_2	CALL_2
0x40000db	    0x488b94248000	            mov rdx, qword [rsp + 0x80] 	        88	mon.c	FUNCTION_2
0x40000e3	    0x654833142528	                xor rdx, qword gs:[0x28]	        88	mon.c	FUNCTION_2
0x40000ec	            0x7508	                           jne 0x40000f6	        88	mon.c	FUNCTION_2
0x40000ee	    0x4881c4880000	                           add rsp, 0x88	        88	mon.c	FUNCTION_2
0x40000f5	              0xc3	                                     ret	        88	mon.c	FUNCTION_2
0x40000f6	      0xe800000000	                          call 0x40000fb	        88	mon.c	FUNCTION_2
nsm_mon_unmon	WHILE,0:DO,0:CALL,12:functions,0:SWITCH,0:FOR,0:IF,3:ELSE,1	59
0x4000100	              0x55	                                push rbp	        92	mon.c	FUNCTION_3
0x4000101	              0x53	                                push rbx	        92	mon.c	FUNCTION_3
0x4000102	            0x89f3	                            mov ebx, esi	        92	mon.c	FUNCTION_3
0x4000104	    0x488db1080200	                  lea rsi, [rcx + 0x208]	       101	mon.c	FUNCTION_3
0x400010b	        0x4883ec50	                           sub rsp, 0x50	        92	mon.c	FUNCTION_3
0x400010f	    0x65488b042528	                mov rax, qword gs:[0x28]	        92	mon.c	FUNCTION_3
0x4000118	      0x4889442448	             mov qword [rsp + 0x48], rax	        92	mon.c	FUNCTION_3
0x400011d	            0x31c0	                            xor eax, eax	        92	mon.c	FUNCTION_3
0x400011f	    0x488d87b10000	                   lea rax, [rdi + 0xb1]	        96	mon.c	FUNCTION_3
0x4000126	    0xc7442428b586	        mov dword [rsp + 0x28], 0x186b5 	        95	mon.c	FUNCTION_3
0x400012e	    0xc744242c0300	               mov dword [rsp + 0x2c], 3	        95	mon.c	FUNCTION_3
0x4000136	    0xc74424301000	           mov dword [rsp + 0x30], 0x10 	        95	mon.c	FUNCTION_3
0x400013e	      0x4889742440	             mov qword [rsp + 0x40], rsi	        95	mon.c	FUNCTION_3
0x4000143	      0x4889442420	             mov qword [rsp + 0x20], rax	        96	mon.c	FUNCTION_3
0x4000148	        0x488b4718	            mov rax, qword [rdi + 0x18] 	        95	mon.c	FUNCTION_3
0x400014c	    0x48c702000000	                      mov qword [rdx], 0	       108	mon.c	FUNCTION_3	CALL_1
0x4000153	    0x488bb9000200	           mov rdi, qword [rcx + 0x200] 	       110	mon.c	FUNCTION_3	CALL_2
0x400015a	    0x48c704240000	                      mov qword [rsp], 0	       103	mon.c	FUNCTION_3
0x4000162	    0x48c744241800	               mov qword [rsp + 0x18], 0	       103	mon.c	FUNCTION_3
0x400016b	      0x4889442438	             mov qword [rsp + 0x38], rax	        95	mon.c	FUNCTION_3
0x4000170	      0x488d442420	                   lea rax, [rsp + 0x20]	       103	mon.c	FUNCTION_3
0x4000175	      0x4889542410	             mov qword [rsp + 0x10], rdx	       103	mon.c	FUNCTION_3
0x400017a	      0x4889442408	                mov qword [rsp + 8], rax	       103	mon.c	FUNCTION_3
0x400017f	      0xe8bcfeffff	                     call sym.nsm_create	       110	mon.c	FUNCTION_3	CALL_2
0x4000184	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       111	mon.c	FUNCTION_3	IF_1	CALL_3
0x400018a	          0x4889c5	                            mov rbp, rax	       110	mon.c	FUNCTION_3	CALL_2
0x400018d	            0x773b	                            ja 0x40001ca	       111	mon.c	FUNCTION_3	IF_1	CALL_3
0x400018f	            0x89de	                            mov esi, ebx	       118	mon.c	FUNCTION_3
0x4000191	      0xba00040000	                          mov edx, 0x400	       119	mon.c	FUNCTION_3	CALL_7
0x4000196	          0x4889ef	                            mov rdi, rbp	       119	mon.c	FUNCTION_3	CALL_7
0x4000199	        0x488d0476	                  lea rax, [rsi + rsi*2]	       118	mon.c	FUNCTION_3
0x400019d	          0x4889e6	                            mov rsi, rsp	       119	mon.c	FUNCTION_3	CALL_7
0x40001a0	        0x48c1e004	                              shl rax, 4	       118	mon.c	FUNCTION_3
0x40001a4	        0x48034538	             add rax, qword [rbp + 0x38]	       118	mon.c	FUNCTION_3
0x40001a8	        0x48890424	                    mov qword [rsp], rax	       118	mon.c	FUNCTION_3
0x40001ac	      0xe800000000	                          call 0x40001b1	       119	mon.c	FUNCTION_3	CALL_7
0x40001b1	          0x83f891	             cmp eax, 0xffffffffffffff91	       120	mon.c	FUNCTION_3	IF_2
0x40001b4	            0x742b	                            je 0x40001e1	       120	mon.c	FUNCTION_3	IF_2
0x40001b6	            0x85c0	                           test eax, eax	       120	mon.c	FUNCTION_3	IF_2
0x40001b8	      0xbb00000000	                              mov ebx, 0	       120	mon.c	FUNCTION_3	IF_2
0x40001bd	          0x4889ef	                            mov rdi, rbp	       132	mon.c	FUNCTION_3	CALL_12
0x40001c0	           0xf4ed8	                         cmovle ebx, eax	       132	mon.c	FUNCTION_3	CALL_12
0x40001c3	      0xe800000000	                          call 0x40001c8	       132	mon.c	FUNCTION_3	CALL_12
0x40001c8	            0x89d8	                            mov eax, ebx	       133	mon.c	FUNCTION_3
0x40001ca	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       134	mon.c	FUNCTION_3
0x40001cf	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       134	mon.c	FUNCTION_3
0x40001d8	            0x7521	                           jne 0x40001fb	       134	mon.c	FUNCTION_3
0x40001da	        0x4883c450	                           add rsp, 0x50	       134	mon.c	FUNCTION_3
0x40001de	              0x5b	                                 pop rbx	       134	mon.c	FUNCTION_3
0x40001df	              0x5d	                                 pop rbp	       134	mon.c	FUNCTION_3
0x40001e0	              0xc3	                                     ret	       134	mon.c	FUNCTION_3
0x40001e1	          0x4889ef	                            mov rdi, rbp	       123	mon.c	FUNCTION_3	IF_2	CALL_9
0x40001e4	      0xe800000000	                          call 0x40001e9	       123	mon.c	FUNCTION_3	IF_2	CALL_9
0x40001e9	      0xba00040000	                          mov edx, 0x400	       124	mon.c	FUNCTION_3	IF_2	CALL_10
0x40001ee	          0x4889e6	                            mov rsi, rsp	       124	mon.c	FUNCTION_3	IF_2	CALL_10
0x40001f1	          0x4889ef	                            mov rdi, rbp	       124	mon.c	FUNCTION_3	IF_2	CALL_10
0x40001f4	      0xe800000000	                          call 0x40001f9	       124	mon.c	FUNCTION_3	IF_2	CALL_10
0x40001f9	            0xebbb	                           jmp 0x40001b6	       124	mon.c	FUNCTION_3	IF_2	CALL_10
0x40001fb	      0xe800000000	               call sym.nsm_xdr_dec_stat	       134	mon.c	FUNCTION_3
encode_my_id	WHILE,0:DO,0:CALL,5:functions,0:SWITCH,0:FOR,0:IF,0:ELSE,0	21
0x40002a0	              0x55	                                push rbp	       447	mon.c	FUNCTION_16
0x40002a1	              0x53	                                push rbx	       447	mon.c	FUNCTION_16
0x40002a2	          0x4889f3	                            mov rbx, rsi	       447	mon.c	FUNCTION_16
0x40002a5	        0x488b7620	            mov rsi, qword [rsi + 0x20] 	       450	mon.c	FUNCTION_16	CALL_1
0x40002a9	          0x4889fd	                            mov rbp, rdi	       447	mon.c	FUNCTION_16
0x40002ac	      0xe8afffffff	              call sym.encode_nsm_string	       450	mon.c	FUNCTION_16	CALL_1
0x40002b1	          0x4889ef	                            mov rdi, rbp	       451	mon.c	FUNCTION_16	CALL_2
0x40002b4	      0xbe0c000000	                            mov esi, 0xc	       451	mon.c	FUNCTION_16	CALL_2
0x40002b9	      0xe800000000	                          call 0x40002be	       451	mon.c	FUNCTION_16	CALL_2
0x40002be	          0x8b5308	                mov edx, dword [rbx + 8]	       452	mon.c	FUNCTION_16	CALL_3
0x40002c1	             0xfca	                               bswap edx	       452	mon.c	FUNCTION_16	CALL_3
0x40002c3	            0x8910	                    mov dword [rax], edx	       452	mon.c	FUNCTION_16	CALL_3
0x40002c5	          0x8b530c	              mov edx, dword [rbx + 0xc]	       453	mon.c	FUNCTION_16	CALL_4
0x40002c8	             0xfca	                               bswap edx	       453	mon.c	FUNCTION_16	CALL_4
0x40002ca	          0x895004	                mov dword [rax + 4], edx	       453	mon.c	FUNCTION_16	CALL_4
0x40002cd	          0x8b5310	            mov edx, dword [rbx + 0x10] 	       454	mon.c	FUNCTION_16	CALL_5
0x40002d0	             0xfca	                               bswap edx	       454	mon.c	FUNCTION_16	CALL_5
0x40002d2	          0x895008	                mov dword [rax + 8], edx	       454	mon.c	FUNCTION_16	CALL_5
0x40002d5	              0x5b	                                 pop rbx	       455	mon.c	FUNCTION_16
0x40002d6	              0x5d	                                 pop rbp	       455	mon.c	FUNCTION_16
0x40002d7	              0xc3	                                     ret	       455	mon.c	FUNCTION_16
