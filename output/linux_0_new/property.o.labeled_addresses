acpi_data_prop_read	WHILE,0:DO,0:functions,0:FOR,0:ELSE,1:CALL,8:SWITCH,1:IF,6	178
0x40009e0	            0x4156	                                push r14	       827	property.c	FUNCTION_26
0x40009e2	            0x4155	                                push r13	       827	property.c	FUNCTION_26
0x40009e4	          0x4989f6	                            mov r14, rsi	       827	property.c	FUNCTION_26
0x40009e7	            0x4154	                                push r12	       827	property.c	FUNCTION_26
0x40009e9	              0x55	                                push rbp	       827	property.c	FUNCTION_26
0x40009ea	          0x4989fd	                            mov r13, rdi	       827	property.c	FUNCTION_26
0x40009ed	              0x53	                                push rbx	       827	property.c	FUNCTION_26
0x40009ee	          0x4189d4	                           mov r12d, edx	       827	property.c	FUNCTION_26
0x40009f1	          0x4889cb	                            mov rbx, rcx	       827	property.c	FUNCTION_26
0x40009f4	          0x4c89c5	                             mov rbp, r8	       827	property.c	FUNCTION_26
0x40009f7	        0x4883ec10	                           sub rsp, 0x10	       827	property.c	FUNCTION_26
0x40009fb	    0x65488b042528	                mov rax, qword gs:[0x28]	       827	property.c	FUNCTION_26
0x4000a04	      0x4889442408	                mov qword [rsp + 8], rax	       827	property.c	FUNCTION_26
0x4000a09	            0x31c0	                            xor eax, eax	       827	property.c	FUNCTION_26
0x4000a0b	          0x4885c9	                           test rcx, rcx	       832	property.c	FUNCTION_26	IF_1
0x4000a0e	            0x7430	                            je 0x4000a40	       832	property.c	FUNCTION_26	IF_1
0x4000a10	        0x4983f801	                               cmp r8, 1	       832	property.c	FUNCTION_26	IF_1
0x4000a14	            0x752a	                           jne 0x4000a40	       832	property.c	FUNCTION_26	IF_1
0x4000a16	      0xe8c5feffff	     call sym.acpi_data_prop_read_single	       833	property.c	FUNCTION_26	IF_1	CALL_1
0x4000a1b	            0x85c0	                           test eax, eax	       834	property.c	FUNCTION_26	IF_1	IF_2
0x4000a1d	            0x7821	                            js 0x4000a40	       834	property.c	FUNCTION_26	IF_1	IF_2
0x4000a1f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       875	property.c	FUNCTION_26
0x4000a24	    0x6548333c2528	                xor rdi, qword gs:[0x28]	       875	property.c	FUNCTION_26
0x4000a2d	     0xf8515020000	                           jne 0x4000c48	       875	property.c	FUNCTION_26
0x4000a33	        0x4883c410	                           add rsp, 0x10	       875	property.c	FUNCTION_26
0x4000a37	              0x5b	                                 pop rbx	       875	property.c	FUNCTION_26
0x4000a38	              0x5d	                                 pop rbp	       875	property.c	FUNCTION_26
0x4000a39	            0x415c	                                 pop r12	       875	property.c	FUNCTION_26
0x4000a3b	            0x415d	                                 pop r13	       875	property.c	FUNCTION_26
0x4000a3d	            0x415e	                                 pop r14	       875	property.c	FUNCTION_26
0x4000a3f	              0xc3	                                     ret	       875	property.c	FUNCTION_26
0x4000a40	          0x4889e1	                            mov rcx, rsp	       529	property.c	FUNCTION_17	CALL_1
0x4000a43	      0xba04000000	                              mov edx, 4	       529	property.c	FUNCTION_17	CALL_1
0x4000a48	          0x4c89f6	                            mov rsi, r14	       529	property.c	FUNCTION_17	CALL_1
0x4000a4b	          0x4c89ef	                            mov rdi, r13	       529	property.c	FUNCTION_17	CALL_1
0x4000a4e	      0xe8edf5ffff	         call sym.acpi_data_get_property	       529	property.c	FUNCTION_17	CALL_1
0x4000a53	            0x85c0	                           test eax, eax	       530	property.c	FUNCTION_17	IF_1
0x4000a55	            0x75c8	                           jne 0x4000a1f	       530	property.c	FUNCTION_17	IF_1
0x4000a57	          0x4885db	                           test rbx, rbx	       842	property.c	FUNCTION_26	IF_4
0x4000a5a	        0x488b1424	                    mov rdx, qword [rsp]	       540	property.c	FUNCTION_17	IF_4
0x4000a5e	     0xf84dc010000	                            je 0x4000c40	       842	property.c	FUNCTION_26	IF_4
0x4000a64	        0x4183fc04	                             cmp r12d, 4	       845	property.c	FUNCTION_26	IF_5
0x4000a68	     0xf84c4000000	                            je 0x4000b32	       845	property.c	FUNCTION_26	IF_5
0x4000a6e	          0x8b4204	                mov eax, dword [rdx + 4]	       845	property.c	FUNCTION_26	IF_5
0x4000a71	          0x4839c5	                            cmp rbp, rax	       845	property.c	FUNCTION_26	IF_5
0x4000a74	     0xf8711010000	                            ja 0x4000b8b	       845	property.c	FUNCTION_26	IF_5
0x4000a7a	          0x4885ed	                           test rbp, rbp	       847	property.c	FUNCTION_26	ELSE_1	IF_6
0x4000a7d	     0xf84b3010000	                            je 0x4000c36	       847	property.c	FUNCTION_26	ELSE_1	IF_6
0x4000a83	        0x4183fc01	                             cmp r12d, 1	       852	property.c	FUNCTION_26	SWITCH_1
0x4000a87	        0x488b4208	                mov rax, qword [rdx + 8]	       850	property.c	FUNCTION_26
0x4000a8b	     0xf8451010000	                            je 0x4000be2	       852	property.c	FUNCTION_26	SWITCH_1
0x4000a91	            0x7249	                            jb 0x4000adc	       852	property.c	FUNCTION_26	SWITCH_1
0x4000a93	        0x4183fc02	                             cmp r12d, 2	       852	property.c	FUNCTION_26	SWITCH_1
0x4000a97	     0xf84f8000000	                            je 0x4000b95	       852	property.c	FUNCTION_26	SWITCH_1
0x4000a9d	        0x4183fc03	                             cmp r12d, 3	       852	property.c	FUNCTION_26	SWITCH_1
0x4000aa1	     0xf858f010000	                           jne 0x4000c36	       852	property.c	FUNCTION_26	SWITCH_1
0x4000aa7	            0x31c9	                            xor ecx, ecx	       801	property.c	FUNCTION_24	FOR_1	IF_1
0x4000aa9	            0x31d2	                            xor edx, edx	       801	property.c	FUNCTION_24	FOR_1	IF_1
0x4000aab	          0x833801	                      cmp dword [rax], 1	       801	property.c	FUNCTION_24	FOR_1	IF_1
0x4000aae	          0x4889c6	                            mov rsi, rax	       801	property.c	FUNCTION_24	FOR_1	IF_1
0x4000ab1	            0x740f	                            je 0x4000ac2	       801	property.c	FUNCTION_24	FOR_1	IF_1
0x4000ab3	            0xeb73	                           jmp 0x4000b28	       801	property.c	FUNCTION_24	FOR_1	IF_1
0x4000ab5	        0x488d3452	                  lea rsi, [rdx + rdx*2]	       801	property.c	FUNCTION_24	FOR_1	IF_1
0x4000ab9	        0x488d34f0	                  lea rsi, [rax + rsi*8]	       801	property.c	FUNCTION_24	FOR_1	IF_1
0x4000abd	          0x833e01	                      cmp dword [rsi], 1	       801	property.c	FUNCTION_24	FOR_1	IF_1
0x4000ac0	            0x7566	                           jne 0x4000b28	       801	property.c	FUNCTION_24	FOR_1	IF_1
0x4000ac2	        0x488b7608	                mov rsi, qword [rsi + 8]	       804	property.c	FUNCTION_24	FOR_1
0x4000ac6	          0x83c101	                              add ecx, 1	       800	property.c	FUNCTION_24	FOR_1
0x4000ac9	        0x488934d3	            mov qword [rbx + rdx*8], rsi	       804	property.c	FUNCTION_24	FOR_1
0x4000acd	          0x4863d1	                         movsxd rdx, ecx	       800	property.c	FUNCTION_24	FOR_1
0x4000ad0	          0x4839d5	                            cmp rbp, rdx	       800	property.c	FUNCTION_24	FOR_1
0x4000ad3	            0x77e0	                            ja 0x4000ab5	       800	property.c	FUNCTION_24	FOR_1
0x4000ad5	            0x31c0	                            xor eax, eax	       760	property.c	FUNCTION_21
0x4000ad7	      0xe943ffffff	                           jmp 0x4000a1f	       760	property.c	FUNCTION_21
0x4000adc	          0x833801	                      cmp dword [rax], 1	       753	property.c	FUNCTION_21	FOR_1	IF_1
0x4000adf	            0x7547	                           jne 0x4000b28	       753	property.c	FUNCTION_21	FOR_1	IF_1
0x4000ae1	        0x488b7008	                mov rsi, qword [rax + 8]	       755	property.c	FUNCTION_21	FOR_1	IF_2
0x4000ae5	    0x4881feff0000	                           cmp rsi, 0xff	       755	property.c	FUNCTION_21	FOR_1	IF_2
0x4000aec	     0xf8799000000	                            ja 0x4000b8b	       755	property.c	FUNCTION_21	FOR_1	IF_2
0x4000af2	            0x31c9	                            xor ecx, ecx	       755	property.c	FUNCTION_21	FOR_1	IF_2
0x4000af4	            0x31d2	                            xor edx, edx	       755	property.c	FUNCTION_21	FOR_1	IF_2
0x4000af6	            0xeb1a	                           jmp 0x4000b12	       755	property.c	FUNCTION_21	FOR_1	IF_2
0x4000af8	        0x488d3452	                  lea rsi, [rdx + rdx*2]	       753	property.c	FUNCTION_21	FOR_1	IF_1
0x4000afc	        0x488d34f0	                  lea rsi, [rax + rsi*8]	       753	property.c	FUNCTION_21	FOR_1	IF_1
0x4000b00	          0x833e01	                      cmp dword [rsi], 1	       753	property.c	FUNCTION_21	FOR_1	IF_1
0x4000b03	            0x7523	                           jne 0x4000b28	       753	property.c	FUNCTION_21	FOR_1	IF_1
0x4000b05	        0x488b7608	                mov rsi, qword [rsi + 8]	       755	property.c	FUNCTION_21	FOR_1	IF_2
0x4000b09	    0x4881feff0000	                           cmp rsi, 0xff	       755	property.c	FUNCTION_21	FOR_1	IF_2
0x4000b10	            0x7779	                            ja 0x4000b8b	       755	property.c	FUNCTION_21	FOR_1	IF_2
0x4000b12	          0x83c101	                              add ecx, 1	       752	property.c	FUNCTION_21	FOR_1
0x4000b15	        0x40883413	               mov byte [rbx + rdx], sil	       758	property.c	FUNCTION_21	FOR_1
0x4000b19	          0x4863d1	                         movsxd rdx, ecx	       752	property.c	FUNCTION_21	FOR_1
0x4000b1c	          0x4839d5	                            cmp rbp, rdx	       752	property.c	FUNCTION_21	FOR_1
0x4000b1f	            0x77d7	                            ja 0x4000af8	       752	property.c	FUNCTION_21	FOR_1
0x4000b21	            0x31c0	                            xor eax, eax	       760	property.c	FUNCTION_21
0x4000b23	      0xe9f7feffff	                           jmp 0x4000a1f	       760	property.c	FUNCTION_21
0x4000b28	      0xb8b9ffffff	                     mov eax, 0xffffffb9	       802	property.c	FUNCTION_24	FOR_1	IF_1
0x4000b2d	      0xe9edfeffff	                           jmp 0x4000a1f	       802	property.c	FUNCTION_24	FOR_1	IF_1
0x4000b32	          0x4885ed	                           test rbp, rbp	       847	property.c	FUNCTION_26	ELSE_1	IF_6
0x4000b35	      0xb8eaffffff	                     mov eax, 0xffffffea	       848	property.c	FUNCTION_26	ELSE_1	IF_6
0x4000b3a	     0xf84dffeffff	                            je 0x4000a1f	       847	property.c	FUNCTION_26	ELSE_1	IF_6
0x4000b40	          0x396a04	                cmp dword [rdx + 4], ebp	       868	property.c	FUNCTION_26	SWITCH_1	CALL_8
0x4000b43	            0x89e8	                            mov eax, ebp	       868	property.c	FUNCTION_26	SWITCH_1	CALL_8
0x4000b45	        0x488b7a08	                mov rdi, qword [rdx + 8]	       850	property.c	FUNCTION_26
0x4000b49	         0xf464204	             cmovbe eax, dword [rdx + 4]	       868	property.c	FUNCTION_26	SWITCH_1	CALL_8
0x4000b4d	            0x85c0	                           test eax, eax	       814	property.c	FUNCTION_25	FOR_1
0x4000b4f	          0x4189c0	                            mov r8d, eax	       866	property.c	FUNCTION_26	SWITCH_1	CALL_7
0x4000b52	     0xf84c7feffff	                            je 0x4000a1f	       814	property.c	FUNCTION_25	FOR_1
0x4000b58	          0x833f02	                      cmp dword [rdi], 2	       815	property.c	FUNCTION_25	FOR_1	IF_1
0x4000b5b	            0x75cb	                           jne 0x4000b28	       815	property.c	FUNCTION_25	FOR_1	IF_1
0x4000b5d	            0x31c9	                            xor ecx, ecx	       815	property.c	FUNCTION_25	FOR_1	IF_1
0x4000b5f	            0x31d2	                            xor edx, edx	       815	property.c	FUNCTION_25	FOR_1	IF_1
0x4000b61	          0x4889fe	                            mov rsi, rdi	       815	property.c	FUNCTION_25	FOR_1	IF_1
0x4000b64	            0xeb0d	                           jmp 0x4000b73	       815	property.c	FUNCTION_25	FOR_1	IF_1
0x4000b66	        0x488d3452	                  lea rsi, [rdx + rdx*2]	       815	property.c	FUNCTION_25	FOR_1	IF_1
0x4000b6a	        0x488d34f7	                  lea rsi, [rdi + rsi*8]	       815	property.c	FUNCTION_25	FOR_1	IF_1
0x4000b6e	          0x833e02	                      cmp dword [rsi], 2	       815	property.c	FUNCTION_25	FOR_1	IF_1
0x4000b71	            0x75b5	                           jne 0x4000b28	       815	property.c	FUNCTION_25	FOR_1	IF_1
0x4000b73	        0x488b7608	                mov rsi, qword [rsi + 8]	       818	property.c	FUNCTION_25	FOR_1
0x4000b77	          0x83c101	                              add ecx, 1	       814	property.c	FUNCTION_25	FOR_1
0x4000b7a	        0x488934d3	            mov qword [rbx + rdx*8], rsi	       818	property.c	FUNCTION_25	FOR_1
0x4000b7e	          0x4863d1	                         movsxd rdx, ecx	       814	property.c	FUNCTION_25	FOR_1
0x4000b81	          0x4c39c2	                             cmp rdx, r8	       814	property.c	FUNCTION_25	FOR_1
0x4000b84	            0x72e0	                            jb 0x4000b66	       814	property.c	FUNCTION_25	FOR_1
0x4000b86	      0xe994feffff	                           jmp 0x4000a1f	       814	property.c	FUNCTION_25	FOR_1
0x4000b8b	      0xb8b5ffffff	                     mov eax, 0xffffffb5	       846	property.c	FUNCTION_26	IF_5
0x4000b90	      0xe98afeffff	                           jmp 0x4000a1f	       846	property.c	FUNCTION_26	IF_5
0x4000b95	          0x833801	                      cmp dword [rax], 1	       785	property.c	FUNCTION_23	FOR_1	IF_1
0x4000b98	            0x758e	                           jne 0x4000b28	       785	property.c	FUNCTION_23	FOR_1	IF_1
0x4000b9a	        0x488b7008	                mov rsi, qword [rax + 8]	       787	property.c	FUNCTION_23	FOR_1	IF_2
0x4000b9e	      0xbaffffffff	                     mov edx, 0xffffffff	       787	property.c	FUNCTION_23	FOR_1	IF_2
0x4000ba3	          0x4839d6	                            cmp rsi, rdx	       787	property.c	FUNCTION_23	FOR_1	IF_2
0x4000ba6	            0x77e3	                            ja 0x4000b8b	       787	property.c	FUNCTION_23	FOR_1	IF_2
0x4000ba8	            0x31c9	                            xor ecx, ecx	       787	property.c	FUNCTION_23	FOR_1	IF_2
0x4000baa	            0x31d2	                            xor edx, edx	       787	property.c	FUNCTION_23	FOR_1	IF_2
0x4000bac	      0xbfffffffff	                     mov edi, 0xffffffff	       787	property.c	FUNCTION_23	FOR_1	IF_2
0x4000bb1	            0xeb1a	                           jmp 0x4000bcd	       787	property.c	FUNCTION_23	FOR_1	IF_2
0x4000bb3	        0x488d3452	                  lea rsi, [rdx + rdx*2]	       785	property.c	FUNCTION_23	FOR_1	IF_1
0x4000bb7	        0x488d34f0	                  lea rsi, [rax + rsi*8]	       785	property.c	FUNCTION_23	FOR_1	IF_1
0x4000bbb	          0x833e01	                      cmp dword [rsi], 1	       785	property.c	FUNCTION_23	FOR_1	IF_1
0x4000bbe	     0xf8564ffffff	                           jne 0x4000b28	       785	property.c	FUNCTION_23	FOR_1	IF_1
0x4000bc4	        0x488b7608	                mov rsi, qword [rsi + 8]	       787	property.c	FUNCTION_23	FOR_1	IF_2
0x4000bc8	          0x4839fe	                            cmp rsi, rdi	       787	property.c	FUNCTION_23	FOR_1	IF_2
0x4000bcb	            0x77be	                            ja 0x4000b8b	       787	property.c	FUNCTION_23	FOR_1	IF_2
0x4000bcd	          0x83c101	                              add ecx, 1	       784	property.c	FUNCTION_23	FOR_1
0x4000bd0	          0x893493	            mov dword [rbx + rdx*4], esi	       790	property.c	FUNCTION_23	FOR_1
0x4000bd3	          0x4863d1	                         movsxd rdx, ecx	       784	property.c	FUNCTION_23	FOR_1
0x4000bd6	          0x4839d5	                            cmp rbp, rdx	       784	property.c	FUNCTION_23	FOR_1
0x4000bd9	            0x77d8	                            ja 0x4000bb3	       784	property.c	FUNCTION_23	FOR_1
0x4000bdb	            0x31c0	                            xor eax, eax	       760	property.c	FUNCTION_21
0x4000bdd	      0xe93dfeffff	                           jmp 0x4000a1f	       760	property.c	FUNCTION_21
0x4000be2	          0x833801	                      cmp dword [rax], 1	       769	property.c	FUNCTION_22	FOR_1	IF_1
0x4000be5	     0xf853dffffff	                           jne 0x4000b28	       769	property.c	FUNCTION_22	FOR_1	IF_1
0x4000beb	        0x488b7008	                mov rsi, qword [rax + 8]	       771	property.c	FUNCTION_22	FOR_1	IF_2
0x4000bef	    0x4881feffff00	                         cmp rsi, 0xffff	       771	property.c	FUNCTION_22	FOR_1	IF_2
0x4000bf6	            0x7793	                            ja 0x4000b8b	       771	property.c	FUNCTION_22	FOR_1	IF_2
0x4000bf8	            0x31c9	                            xor ecx, ecx	       771	property.c	FUNCTION_22	FOR_1	IF_2
0x4000bfa	            0x31d2	                            xor edx, edx	       771	property.c	FUNCTION_22	FOR_1	IF_2
0x4000bfc	            0xeb22	                           jmp 0x4000c20	       771	property.c	FUNCTION_22	FOR_1	IF_2
0x4000bfe	        0x488d3452	                  lea rsi, [rdx + rdx*2]	       769	property.c	FUNCTION_22	FOR_1	IF_1
0x4000c02	        0x488d34f0	                  lea rsi, [rax + rsi*8]	       769	property.c	FUNCTION_22	FOR_1	IF_1
0x4000c06	          0x833e01	                      cmp dword [rsi], 1	       769	property.c	FUNCTION_22	FOR_1	IF_1
0x4000c09	     0xf8519ffffff	                           jne 0x4000b28	       769	property.c	FUNCTION_22	FOR_1	IF_1
0x4000c0f	        0x488b7608	                mov rsi, qword [rsi + 8]	       771	property.c	FUNCTION_22	FOR_1	IF_2
0x4000c13	    0x4881feffff00	                         cmp rsi, 0xffff	       771	property.c	FUNCTION_22	FOR_1	IF_2
0x4000c1a	     0xf876bffffff	                            ja 0x4000b8b	       771	property.c	FUNCTION_22	FOR_1	IF_2
0x4000c20	          0x83c101	                              add ecx, 1	       768	property.c	FUNCTION_22	FOR_1
0x4000c23	        0x66893453	              mov word [rbx + rdx*2], si	       774	property.c	FUNCTION_22	FOR_1
0x4000c27	          0x4863d1	                         movsxd rdx, ecx	       768	property.c	FUNCTION_22	FOR_1
0x4000c2a	          0x4839d5	                            cmp rbp, rdx	       768	property.c	FUNCTION_22	FOR_1
0x4000c2d	            0x77cf	                            ja 0x4000bfe	       768	property.c	FUNCTION_22	FOR_1
0x4000c2f	            0x31c0	                            xor eax, eax	       760	property.c	FUNCTION_21
0x4000c31	      0xe9e9fdffff	                           jmp 0x4000a1f	       760	property.c	FUNCTION_21
0x4000c36	      0xb8eaffffff	                     mov eax, 0xffffffea	       871	property.c	FUNCTION_26	SWITCH_1
0x4000c3b	      0xe9dffdffff	                           jmp 0x4000a1f	       871	property.c	FUNCTION_26	SWITCH_1
0x4000c40	          0x8b4204	                mov eax, dword [rdx + 4]	       843	property.c	FUNCTION_26	IF_4
0x4000c43	      0xe9d7fdffff	                           jmp 0x4000a1f	       843	property.c	FUNCTION_26	IF_4
0x4000c48	      0xe800000000	                          call 0x4000c4d	       875	property.c	FUNCTION_26
acpi_fwnode_get_reference_args	WHILE,0:DO,0:functions,0:FOR,1:ELSE,0:CALL,2:SWITCH,0:IF,2	36
0x4000520	              0x53	                                push rbx	      1211	property.c	FUNCTION_39
0x4000521	          0x4489c2	                            mov edx, r8d	      1216	property.c	FUNCTION_39	CALL_1
0x4000524	            0x89c9	                            mov ecx, ecx	      1216	property.c	FUNCTION_39	CALL_1
0x4000526	          0x4c89cb	                             mov rbx, r9	      1211	property.c	FUNCTION_39
0x4000529	        0x4883ec58	                           sub rsp, 0x58	      1211	property.c	FUNCTION_39
0x400052d	          0x4989e0	                             mov r8, rsp	      1216	property.c	FUNCTION_39	CALL_1
0x4000530	    0x65488b042528	                mov rax, qword gs:[0x28]	      1211	property.c	FUNCTION_39
0x4000539	      0x4889442450	             mov qword [rsp + 0x50], rax	      1211	property.c	FUNCTION_39
0x400053e	            0x31c0	                            xor eax, eax	      1211	property.c	FUNCTION_39
0x4000540	      0xe800000000	                          call 0x4000545	      1216	property.c	FUNCTION_39	CALL_1
0x4000545	            0x85c0	                           test eax, eax	      1218	property.c	FUNCTION_39	IF_1
0x4000547	            0x7835	                            js 0x400057e	      1218	property.c	FUNCTION_39	IF_1
0x4000549	          0x4885db	                           test rbx, rbx	      1220	property.c	FUNCTION_39	IF_2
0x400054c	            0x742e	                            je 0x400057c	      1220	property.c	FUNCTION_39	IF_2
0x400054e	        0x488b0424	                    mov rax, qword [rsp]	       449	acpi_bus.h	FUNCTION_52
0x4000552	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1223	property.c	FUNCTION_39
0x4000557	        0x4883c010	                           add rax, 0x10	       449	acpi_bus.h	FUNCTION_52
0x400055b	          0x894b08	                mov dword [rbx + 8], ecx	      1223	property.c	FUNCTION_39
0x400055e	          0x488903	                    mov qword [rbx], rax	      1224	property.c	FUNCTION_39	CALL_2
0x4000561	            0x31c0	                            xor eax, eax	      1224	property.c	FUNCTION_39	CALL_2
0x4000563	            0x31d2	                            xor edx, edx	      1227	property.c	FUNCTION_39	FOR_1
0x4000565	          0x4839c8	                            cmp rax, rcx	      1227	property.c	FUNCTION_39	FOR_1
0x4000568	            0x7304	                           jae 0x400056e	      1227	property.c	FUNCTION_39	FOR_1
0x400056a	        0x8b54c410	    mov edx, dword [rsp + rax*8 + 0x10] 	      1227	property.c	FUNCTION_39	FOR_1
0x400056e	        0x8954830c	      mov dword [rbx + rax*4 + 0xc], edx	      1227	property.c	FUNCTION_39	FOR_1
0x4000572	        0x4883c001	                              add rax, 1	      1227	property.c	FUNCTION_39	FOR_1
0x4000576	        0x4883f808	                              cmp rax, 8	      1226	property.c	FUNCTION_39	FOR_1
0x400057a	            0x75e7	                           jne 0x4000563	      1226	property.c	FUNCTION_39	FOR_1
0x400057c	            0x31c0	                            xor eax, eax	      1221	property.c	FUNCTION_39	IF_2
0x400057e	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      1230	property.c	FUNCTION_39
0x4000583	    0x654833342528	                xor rsi, qword gs:[0x28]	      1230	property.c	FUNCTION_39
0x400058c	            0x7506	                           jne 0x4000594	      1230	property.c	FUNCTION_39
0x400058e	        0x4883c458	                           add rsp, 0x58	      1230	property.c	FUNCTION_39
0x4000592	              0x5b	                                 pop rbx	      1230	property.c	FUNCTION_39
0x4000593	              0xc3	                                     ret	      1230	property.c	FUNCTION_39
0x4000594	      0xe800000000	                          call 0x4000599	      1230	property.c	FUNCTION_39
acpi_dev_prop_read	WHILE,0:DO,0:functions,0:FOR,0:ELSE,0:CALL,1:SWITCH,0:IF,0	6
0x4001500	          0x4885ff	                           test rdi, rdi	       880	property.c	FUNCTION_27	CALL_1
0x4001503	            0x740c	                            je 0x4001511	       880	property.c	FUNCTION_27	CALL_1
0x4001505	    0x4881c7000200	                          add rdi, 0x200	       880	property.c	FUNCTION_27	CALL_1
0x400150c	      0xe9cff4ffff	             jmp sym.acpi_data_prop_read	       880	property.c	FUNCTION_27	CALL_1
0x4001511	      0xb8eaffffff	                     mov eax, 0xffffffea	       881	property.c	FUNCTION_27
0x4001516	              0xc3	                                     ret	       881	property.c	FUNCTION_27
acpi_graph_get_child_prop_value	WHILE,0:DO,0:functions,0:FOR,0:ELSE,0:CALL,1:SWITCH,0:IF,2	44
0x40001d0	            0x4155	                                push r13	      1057	property.c	FUNCTION_32
0x40001d2	            0x4154	                                push r12	      1057	property.c	FUNCTION_32
0x40001d4	          0x4989f4	                            mov r12, rsi	      1057	property.c	FUNCTION_32
0x40001d7	              0x55	                                push rbp	      1057	property.c	FUNCTION_32
0x40001d8	              0x53	                                push rbx	      1057	property.c	FUNCTION_32
0x40001d9	            0x31f6	                            xor esi, esi	      1060	property.c	FUNCTION_32
0x40001db	          0x4889fd	                            mov rbp, rdi	      1057	property.c	FUNCTION_32
0x40001de	          0x4189d5	                           mov r13d, edx	      1057	property.c	FUNCTION_32
0x40001e1	        0x4883ec10	                           sub rsp, 0x10	      1057	property.c	FUNCTION_32
0x40001e5	    0x65488b042528	                mov rax, qword gs:[0x28]	      1057	property.c	FUNCTION_32
0x40001ee	      0x4889442408	                mov qword [rsp + 8], rax	      1057	property.c	FUNCTION_32
0x40001f3	            0x31c0	                            xor eax, eax	      1057	property.c	FUNCTION_32
0x40001f5	      0xe800000000	                          call 0x40001fa	      1060	property.c	FUNCTION_32
0x40001fa	          0x4885c0	                           test rax, rax	      1060	property.c	FUNCTION_32
0x40001fd	          0x4889c3	                            mov rbx, rax	      1060	property.c	FUNCTION_32
0x4000200	            0x7433	                            je 0x4000235	      1060	property.c	FUNCTION_32
0x4000202	      0x488d542404	                      lea rdx, [rsp + 4]	       167	property.h	FUNCTION_80	CALL_1
0x4000207	      0xb901000000	                              mov ecx, 1	       167	property.h	FUNCTION_80	CALL_1
0x400020c	          0x4c89e6	                            mov rsi, r12	       167	property.h	FUNCTION_80	CALL_1
0x400020f	          0x4889df	                            mov rdi, rbx	       167	property.h	FUNCTION_80	CALL_1
0x4000212	      0xe800000000	                          call 0x4000217	       167	property.h	FUNCTION_80	CALL_1
0x4000217	            0x85c0	                           test eax, eax	      1063	property.c	FUNCTION_32	IF_1	CALL_1
0x4000219	            0x7507	                           jne 0x4000222	      1063	property.c	FUNCTION_32	IF_1	CALL_1
0x400021b	      0x44396c2404	               cmp dword [rsp + 4], r13d	      1066	property.c	FUNCTION_32	IF_2
0x4000220	            0x7430	                            je 0x4000252	      1066	property.c	FUNCTION_32	IF_2
0x4000222	          0x4889de	                            mov rsi, rbx	      1060	property.c	FUNCTION_32
0x4000225	          0x4889ef	                            mov rdi, rbp	      1060	property.c	FUNCTION_32
0x4000228	      0xe800000000	                          call 0x400022d	      1060	property.c	FUNCTION_32
0x400022d	          0x4885c0	                           test rax, rax	      1060	property.c	FUNCTION_32
0x4000230	          0x4889c3	                            mov rbx, rax	      1060	property.c	FUNCTION_32
0x4000233	            0x75cd	                           jne 0x4000202	      1060	property.c	FUNCTION_32
0x4000235	            0x31c0	                            xor eax, eax	      1070	property.c	FUNCTION_32
0x4000237	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1071	property.c	FUNCTION_32
0x400023c	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1071	property.c	FUNCTION_32
0x4000245	            0x7510	                           jne 0x4000257	      1071	property.c	FUNCTION_32
0x4000247	        0x4883c410	                           add rsp, 0x10	      1071	property.c	FUNCTION_32
0x400024b	              0x5b	                                 pop rbx	      1071	property.c	FUNCTION_32
0x400024c	              0x5d	                                 pop rbp	      1071	property.c	FUNCTION_32
0x400024d	            0x415c	                                 pop r12	      1071	property.c	FUNCTION_32
0x400024f	            0x415d	                                 pop r13	      1071	property.c	FUNCTION_32
0x4000251	              0xc3	                                     ret	      1071	property.c	FUNCTION_32
0x4000252	          0x4889d8	                            mov rax, rbx	      1067	property.c	FUNCTION_32	IF_2
0x4000255	            0xebe0	                           jmp 0x4000237	      1067	property.c	FUNCTION_32	IF_2
0x4000257	      0xe800000000	                          call 0x400025c	      1071	property.c	FUNCTION_32
__acpi_node_get_property_reference	WHILE,1:DO,0:functions,0:FOR,2:ELSE,4:CALL,4:SWITCH,0:IF,15	142
0x4000330	            0x4157	                                push r15	       583	property.c	FUNCTION_18
0x4000332	            0x4156	                                push r14	       583	property.c	FUNCTION_18
0x4000334	            0x4155	                                push r13	       583	property.c	FUNCTION_18
0x4000336	            0x4154	                                push r12	       583	property.c	FUNCTION_18
0x4000338	          0x4989d4	                            mov r12, rdx	       583	property.c	FUNCTION_18
0x400033b	              0x55	                                push rbp	       583	property.c	FUNCTION_18
0x400033c	              0x53	                                push rbx	       583	property.c	FUNCTION_18
0x400033d	        0x4883ec18	                           sub rsp, 0x18	       583	property.c	FUNCTION_18
0x4000341	    0x65488b042528	                mov rax, qword gs:[0x28]	       583	property.c	FUNCTION_18
0x400034a	      0x4889442410	             mov qword [rsp + 0x10], rax	       583	property.c	FUNCTION_18
0x400034f	            0x31c0	                            xor eax, eax	       583	property.c	FUNCTION_18
0x4000351	      0xe89affffff	       call sym.acpi_device_data_of_node	       590	property.c	FUNCTION_18	CALL_1
0x4000356	          0x4885c0	                           test rax, rax	       591	property.c	FUNCTION_18	IF_1
0x4000359	     0xf842b010000	                            je 0x400048a	       591	property.c	FUNCTION_18	IF_1
0x400035f	            0x31d2	                            xor edx, edx	       594	property.c	FUNCTION_18	CALL_2
0x4000361	          0x4989ce	                            mov r14, rcx	       594	property.c	FUNCTION_18	CALL_2
0x4000364	          0x4889c7	                            mov rdi, rax	       594	property.c	FUNCTION_18	CALL_2
0x4000367	          0x4889e1	                            mov rcx, rsp	       594	property.c	FUNCTION_18	CALL_2
0x400036a	          0x4c89c5	                             mov rbp, r8	       594	property.c	FUNCTION_18	CALL_2
0x400036d	      0xe8cefcffff	         call sym.acpi_data_get_property	       594	property.c	FUNCTION_18	CALL_2
0x4000372	            0x85c0	                           test eax, eax	       595	property.c	FUNCTION_18	IF_2
0x4000374	     0xf85e3000000	                           jne 0x400045d	       595	property.c	FUNCTION_18	IF_2
0x400037a	        0x488b0424	                    mov rax, qword [rsp]	       602	property.c	FUNCTION_18	IF_3
0x400037e	            0x8b10	                    mov edx, dword [rax]	       602	property.c	FUNCTION_18	IF_3
0x4000380	          0x83fa14	                           cmp edx, 0x14	       602	property.c	FUNCTION_18	IF_3
0x4000383	     0xf8408010000	                            je 0x4000491	       602	property.c	FUNCTION_18	IF_3
0x4000389	          0x83fa04	                              cmp edx, 4	       624	property.c	FUNCTION_18	IF_6
0x400038c	     0xf85d0000000	                           jne 0x4000462	       624	property.c	FUNCTION_18	IF_6
0x4000392	          0x8b5004	                mov edx, dword [rax + 4]	       626	property.c	FUNCTION_18	IF_7
0x4000395	          0x4939d4	                            cmp r12, rdx	       626	property.c	FUNCTION_18	IF_7
0x4000398	     0xf83ec000000	                           jae 0x400048a	       626	property.c	FUNCTION_18	IF_7
0x400039e	        0x488b5808	                mov rbx, qword [rax + 8]	       629	property.c	FUNCTION_18
0x40003a2	        0x488d0452	                  lea rax, [rdx + rdx*2]	       630	property.c	FUNCTION_18
0x40003a6	        0x4c8d3cc3	                  lea r15, [rbx + rax*8]	       630	property.c	FUNCTION_18
0x40003aa	          0x4c39fb	                            cmp rbx, r15	       632	property.c	FUNCTION_18	WHILE_1
0x40003ad	     0xf83d7000000	                           jae 0x400048a	       632	property.c	FUNCTION_18	WHILE_1
0x40003b3	          0x4531ed	                          xor r13d, r13d	       632	property.c	FUNCTION_18	WHILE_1
0x40003b6	            0xeb26	                           jmp 0x40003de	       632	property.c	FUNCTION_18	WHILE_1
0x40003b8	          0x83f801	                              cmp eax, 1	       669	property.c	FUNCTION_18	WHILE_1	ELSE_3	IF_14
0x40003bb	     0xf85a1000000	                           jne 0x4000462	       669	property.c	FUNCTION_18	WHILE_1	ELSE_3	IF_14
0x40003c1	          0x4963c5	                        movsxd rax, r13d	       670	property.c	FUNCTION_18	WHILE_1	ELSE_3	IF_14	IF_15
0x40003c4	          0x4939c4	                            cmp r12, rax	       670	property.c	FUNCTION_18	WHILE_1	ELSE_3	IF_14	IF_15
0x40003c7	     0xf84bd000000	                            je 0x400048a	       670	property.c	FUNCTION_18	WHILE_1	ELSE_3	IF_14	IF_15
0x40003cd	        0x4883c318	                           add rbx, 0x18	       672	property.c	FUNCTION_18	WHILE_1	ELSE_3	IF_14
0x40003d1	        0x4183c501	                             add r13d, 1	       677	property.c	FUNCTION_18	WHILE_1
0x40003d5	          0x4c39fb	                            cmp rbx, r15	       632	property.c	FUNCTION_18	WHILE_1
0x40003d8	     0xf83ac000000	                           jae 0x400048a	       632	property.c	FUNCTION_18	WHILE_1
0x40003de	            0x8b03	                    mov eax, dword [rbx]	       635	property.c	FUNCTION_18	WHILE_1	IF_8
0x40003e0	          0x83f814	                           cmp eax, 0x14	       635	property.c	FUNCTION_18	WHILE_1	IF_8
0x40003e3	            0x75d3	                           jne 0x40003b8	       635	property.c	FUNCTION_18	WHILE_1	IF_8
0x40003e5	        0x488b7b08	                mov rdi, qword [rbx + 8]	       636	property.c	FUNCTION_18	WHILE_1	IF_8	CALL_4
0x40003e9	      0x488d742408	                      lea rsi, [rsp + 8]	       636	property.c	FUNCTION_18	WHILE_1	IF_8	CALL_4
0x40003ee	      0xe800000000	                          call 0x40003f3	       636	property.c	FUNCTION_18	WHILE_1	IF_8	CALL_4
0x40003f3	            0x85c0	                           test eax, eax	       638	property.c	FUNCTION_18	WHILE_1	IF_8	IF_9
0x40003f5	            0x756b	                           jne 0x4000462	       638	property.c	FUNCTION_18	WHILE_1	IF_8	IF_9
0x40003f7	        0x488d7318	                   lea rsi, [rbx + 0x18]	       642	property.c	FUNCTION_18	WHILE_1	IF_8
0x40003fb	          0x4939f7	                            cmp r15, rsi	       645	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1
0x40003fe	     0xf86c0000000	                           jbe 0x40004c4	       645	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1
0x4000404	          0x4d85f6	                           test r14, r14	       645	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1
0x4000407	     0xf84b7000000	                            je 0x40004c4	       645	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1
0x400040d	          0x8b4318	            mov eax, dword [rbx + 0x18] 	       646	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1
0x4000410	            0x31d2	                            xor edx, edx	       648	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1	IF_10
0x4000412	          0x83f801	                              cmp eax, 1	       648	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1	IF_10
0x4000415	     0xf85b2000000	                           jne 0x40004cd	       648	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1	IF_10
0x400041b	          0x8d4201	                      lea eax, [rdx + 1]	       649	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1	IF_10
0x400041e	        0x488d0c40	                  lea rcx, [rax + rax*2]	       645	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1
0x4000422	          0x4c39f0	                            cmp rax, r14	       645	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1
0x4000425	          0x4889c2	                            mov rdx, rax	       649	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1	IF_10
0x4000428	        0x488d0cce	                  lea rcx, [rsi + rcx*8]	       645	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1
0x400042c	            0x7311	                           jae 0x400043f	       645	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1
0x400042e	          0x4939cf	                            cmp r15, rcx	       645	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1
0x4000431	            0x760c	                           jbe 0x400043f	       645	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1
0x4000433	            0x8b09	                    mov ecx, dword [rcx]	       646	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1
0x4000435	          0x83f901	                              cmp ecx, 1	       648	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1	IF_10
0x4000438	            0x74e1	                            je 0x400041b	       648	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1	IF_10
0x400043a	          0x83f914	                           cmp ecx, 0x14	       650	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1	ELSE_1	IF_11
0x400043d	            0x7523	                           jne 0x4000462	       650	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1	ELSE_1	IF_11
0x400043f	          0x83fa08	                              cmp edx, 8	       656	property.c	FUNCTION_18	WHILE_1	IF_8	IF_12
0x4000442	            0x771e	                            ja 0x4000462	       656	property.c	FUNCTION_18	WHILE_1	IF_8	IF_12
0x4000444	          0x4963cd	                        movsxd rcx, r13d	       659	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13
0x4000447	          0x4939cc	                            cmp r12, rcx	       659	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13
0x400044a	     0xf8489000000	                            je 0x40004d9	       659	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13
0x4000450	        0x488d0440	                  lea rax, [rax + rax*2]	       668	property.c	FUNCTION_18	WHILE_1	IF_8
0x4000454	        0x488d1cc6	                  lea rbx, [rsi + rax*8]	       668	property.c	FUNCTION_18	WHILE_1	IF_8
0x4000458	      0xe974ffffff	                           jmp 0x40003d1	       668	property.c	FUNCTION_18	WHILE_1	IF_8
0x400045d	          0x83f8ea	             cmp eax, 0xffffffffffffffea	       596	property.c	FUNCTION_18	IF_2
0x4000460	            0x7428	                            je 0x400048a	       596	property.c	FUNCTION_18	IF_2
0x4000462	      0xb8eaffffff	                     mov eax, 0xffffffea	       596	property.c	FUNCTION_18	IF_2
0x4000467	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       681	property.c	FUNCTION_18
0x400046c	    0x6548333c2528	                xor rdi, qword gs:[0x28]	       681	property.c	FUNCTION_18
0x4000475	     0xf859e000000	                           jne 0x4000519	       681	property.c	FUNCTION_18
0x400047b	        0x4883c418	                           add rsp, 0x18	       681	property.c	FUNCTION_18
0x400047f	              0x5b	                                 pop rbx	       681	property.c	FUNCTION_18
0x4000480	              0x5d	                                 pop rbp	       681	property.c	FUNCTION_18
0x4000481	            0x415c	                                 pop r12	       681	property.c	FUNCTION_18
0x4000483	            0x415d	                                 pop r13	       681	property.c	FUNCTION_18
0x4000485	            0x415e	                                 pop r14	       681	property.c	FUNCTION_18
0x4000487	            0x415f	                                 pop r15	       681	property.c	FUNCTION_18
0x4000489	              0xc3	                                     ret	       681	property.c	FUNCTION_18
0x400048a	      0xb8feffffff	                     mov eax, 0xfffffffe	       592	property.c	FUNCTION_18	IF_1
0x400048f	            0xebd6	                           jmp 0x4000467	       592	property.c	FUNCTION_18	IF_1
0x4000491	          0x4d85e4	                           test r12, r12	       603	property.c	FUNCTION_18	IF_3	IF_4
0x4000494	            0x75cc	                           jne 0x4000462	       603	property.c	FUNCTION_18	IF_3	IF_4
0x4000496	        0x488b7808	                mov rdi, qword [rax + 8]	       606	property.c	FUNCTION_18	IF_3	CALL_3
0x400049a	      0x488d742408	                      lea rsi, [rsp + 8]	       606	property.c	FUNCTION_18	IF_3	CALL_3
0x400049f	      0xe800000000	                          call 0x40004a4	       606	property.c	FUNCTION_18	IF_3	CALL_3
0x40004a4	            0x85c0	                           test eax, eax	       607	property.c	FUNCTION_18	IF_3	IF_5
0x40004a6	            0x7407	                            je 0x40004af	       607	property.c	FUNCTION_18	IF_3	IF_5
0x40004a8	          0x83f8ed	             cmp eax, 0xffffffffffffffed	       608	property.c	FUNCTION_18	IF_3	IF_5
0x40004ab	            0x75ba	                           jne 0x4000467	       608	property.c	FUNCTION_18	IF_3	IF_5
0x40004ad	            0xebb3	                           jmp 0x4000462	       608	property.c	FUNCTION_18	IF_3	IF_5
0x40004af	      0x488b442408	                mov rax, qword [rsp + 8]	       610	property.c	FUNCTION_18	IF_3
0x40004b4	    0x48c745080000	                  mov qword [rbp + 8], 0	       611	property.c	FUNCTION_18	IF_3
0x40004bc	        0x48894500	                    mov qword [rbp], rax	       610	property.c	FUNCTION_18	IF_3
0x40004c0	            0x31c0	                            xor eax, eax	       612	property.c	FUNCTION_18	IF_3
0x40004c2	            0xeba3	                           jmp 0x4000467	       612	property.c	FUNCTION_18	IF_3
0x40004c4	            0x31c0	                            xor eax, eax	       645	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1
0x40004c6	            0x31d2	                            xor edx, edx	       641	property.c	FUNCTION_18	WHILE_1	IF_8
0x40004c8	      0xe977ffffff	                           jmp 0x4000444	       641	property.c	FUNCTION_18	WHILE_1	IF_8
0x40004cd	          0x83f814	                           cmp eax, 0x14	       650	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1	ELSE_1	IF_11
0x40004d0	            0x7590	                           jne 0x4000462	       650	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1	ELSE_1	IF_11
0x40004d2	            0x31c0	                            xor eax, eax	       650	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1	ELSE_1	IF_11
0x40004d4	      0xe96bffffff	                           jmp 0x4000444	       650	property.c	FUNCTION_18	WHILE_1	IF_8	FOR_1	ELSE_1	IF_11
0x40004d9	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       660	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13
0x40004de	            0x85d2	                           test edx, edx	       662	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13	FOR_2
0x40004e0	        0x48894508	                mov qword [rbp + 8], rax	       661	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13
0x40004e4	        0x48894d00	                    mov qword [rbp], rcx	       660	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13
0x40004e8	            0x7428	                            je 0x4000512	       662	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13	FOR_2
0x40004ea	          0x8d42ff	                      lea eax, [rdx - 1]	       662	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13	FOR_2
0x40004ed	        0x4883c320	                           add rbx, 0x20	       662	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13	FOR_2
0x40004f1	        0x4883c510	                           add rbp, 0x10	       662	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13	FOR_2
0x40004f5	        0x488d0440	                  lea rax, [rax + rax*2]	       662	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13	FOR_2
0x40004f9	      0x488d54c620	          lea rdx, [rsi + rax*8 + 0x20] 	       662	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13	FOR_2
0x40004fe	          0x488b03	                    mov rax, qword [rbx]	       663	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13	FOR_2
0x4000501	        0x4883c318	                           add rbx, 0x18	       663	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13	FOR_2
0x4000505	        0x4883c508	                              add rbp, 8	       663	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13	FOR_2
0x4000509	        0x488945f8	                mov qword [rbp - 8], rax	       663	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13	FOR_2
0x400050d	          0x4839d3	                            cmp rbx, rdx	       662	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13	FOR_2
0x4000510	            0x75ec	                           jne 0x40004fe	       662	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13	FOR_2
0x4000512	            0x31c0	                            xor eax, eax	       665	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13
0x4000514	      0xe94effffff	                           jmp 0x4000467	       665	property.c	FUNCTION_18	WHILE_1	IF_8	IF_13
0x4000519	      0xe800000000	                          call 0x400051e	       681	property.c	FUNCTION_18
acpi_fwnode_property_read_string_array	WHILE,0:DO,0:functions,0:FOR,0:ELSE,0:CALL,1:SWITCH,0:IF,0	7
0x4000c50	          0x4989d1	                             mov r9, rdx	      1184	property.c	FUNCTION_37
0x4000c53	          0x4989c8	                             mov r8, rcx	      1184	property.c	FUNCTION_37
0x4000c56	      0xe895f6ffff	       call sym.acpi_device_data_of_node	       899	property.c	FUNCTION_28	CALL_2
0x4000c5b	      0xba04000000	                              mov edx, 4	       899	property.c	FUNCTION_28	CALL_2
0x4000c60	          0x4c89c9	                             mov rcx, r9	       899	property.c	FUNCTION_28	CALL_2
0x4000c63	          0x4889c7	                            mov rdi, rax	       899	property.c	FUNCTION_28	CALL_2
0x4000c66	      0xe975fdffff	             jmp sym.acpi_data_prop_read	       899	property.c	FUNCTION_28	CALL_2
acpi_dev_prop_read_single	WHILE,0:DO,0:functions,0:FOR,0:ELSE,0:CALL,1:SWITCH,0:IF,2	20
0x40014d0	          0x4885ff	                           test rdi, rdi	       738	property.c	FUNCTION_20	IF_1
0x40014d3	            0x7425	                            je 0x40014fa	       738	property.c	FUNCTION_20	IF_1
0x40014d5	              0x53	                                push rbx	       735	property.c	FUNCTION_20
0x40014d6	    0x4881c7000200	                          add rdi, 0x200	       741	property.c	FUNCTION_20	CALL_1
0x40014dd	            0x89d3	                            mov ebx, edx	       741	property.c	FUNCTION_20	CALL_1
0x40014df	      0xe8fcf3ffff	     call sym.acpi_data_prop_read_single	       741	property.c	FUNCTION_20	CALL_1
0x40014e4	            0x89c2	                            mov edx, eax	       741	property.c	FUNCTION_20	CALL_1
0x40014e6	          0xc1e81f	                           shr eax, 0x1f	       742	property.c	FUNCTION_20	IF_2
0x40014e9	            0x84c0	                             test al, al	       742	property.c	FUNCTION_20	IF_2
0x40014eb	            0x7509	                           jne 0x40014f6	       742	property.c	FUNCTION_20	IF_2
0x40014ed	            0x31c0	                            xor eax, eax	       744	property.c	FUNCTION_20
0x40014ef	          0x83fb02	                              cmp ebx, 2	       742	property.c	FUNCTION_20	IF_2
0x40014f2	            0x7502	                           jne 0x40014f6	       742	property.c	FUNCTION_20	IF_2
0x40014f4	              0x5b	                                 pop rbx	       745	property.c	FUNCTION_20
0x40014f5	              0xc3	                                     ret	       745	property.c	FUNCTION_20
0x40014f6	            0x89d0	                            mov eax, edx	       741	property.c	FUNCTION_20	CALL_1
0x40014f8	              0x5b	                                 pop rbx	       745	property.c	FUNCTION_20
0x40014f9	              0xc3	                                     ret	       745	property.c	FUNCTION_20
0x40014fa	      0xb8eaffffff	                     mov eax, 0xffffffea	       739	property.c	FUNCTION_20	IF_1
0x40014ff	              0xc3	                                     ret	       739	property.c	FUNCTION_20	IF_1
acpi_fwnode_get_parent	WHILE,0:DO,0:functions,0:FOR,0:ELSE,0:CALL,1:SWITCH,0:IF,0	1
0x4000830	      0xe96bffffff	            jmp sym.acpi_node_get_parent	      1258	property.c	FUNCTION_42	CALL_1
acpi_fwnode_property_present	WHILE,0:DO,0:functions,0:FOR,0:ELSE,0:CALL,1:SWITCH,0:IF,0	8
0x40005a0	      0xe84bfdffff	       call sym.acpi_device_data_of_node	       497	property.c	FUNCTION_16	CALL_2
0x40005a5	            0x31c9	                            xor ecx, ecx	       497	property.c	FUNCTION_16	CALL_2
0x40005a7	            0x31d2	                            xor edx, edx	       497	property.c	FUNCTION_16	CALL_2
0x40005a9	          0x4889c7	                            mov rdi, rax	       497	property.c	FUNCTION_16	CALL_2
0x40005ac	      0xe88ffaffff	         call sym.acpi_data_get_property	       497	property.c	FUNCTION_16	CALL_2
0x40005b1	            0x85c0	                           test eax, eax	      1149	property.c	FUNCTION_35	CALL_1
0x40005b3	           0xf94c0	                                 sete al	      1149	property.c	FUNCTION_35	CALL_1
0x40005b6	              0xc3	                                     ret	      1150	property.c	FUNCTION_35
acpi_fwnode_device_get_match_data	WHILE,0:DO,0:functions,0:FOR,0:ELSE,0:CALL,1:SWITCH,0:IF,0	2
0x40008a0	          0x4889f7	                            mov rdi, rsi	      1278	property.c	FUNCTION_44	CALL_1
0x40008a3	      0xe900000000	                           jmp 0x40008a8	      1278	property.c	FUNCTION_44	CALL_1
acpi_graph_get_next_endpoint	WHILE,1:DO,1:functions,0:FOR,0:ELSE,1:CALL,9:SWITCH,0:IF,7	62
0x4001540	          0x4885f6	                           test rsi, rsi	      1013	property.c	FUNCTION_31	IF_1
0x4001543	            0x4154	                                push r12	      1009	property.c	FUNCTION_31
0x4001545	          0x4989f4	                            mov r12, rsi	      1009	property.c	FUNCTION_31
0x4001548	              0x55	                                push rbp	      1009	property.c	FUNCTION_31
0x4001549	          0x4889fd	                            mov rbp, rdi	      1009	property.c	FUNCTION_31
0x400154c	              0x53	                                push rbx	      1009	property.c	FUNCTION_31
0x400154d	     0xf8480000000	                            je 0x40015d3	      1013	property.c	FUNCTION_31	IF_1
0x4001553	          0x4889f7	                            mov rdi, rsi	      1021	property.c	FUNCTION_31	ELSE_1	CALL_3
0x4001556	      0xe800000000	                          call 0x400155b	      1021	property.c	FUNCTION_31	ELSE_1	CALL_3
0x400155b	          0x4889c3	                            mov rbx, rax	      1021	property.c	FUNCTION_31	ELSE_1	CALL_3
0x400155e	          0x4885db	                           test rbx, rbx	      1024	property.c	FUNCTION_31	IF_3
0x4001561	     0xf8498000000	                            je 0x40015ff	      1024	property.c	FUNCTION_31	IF_3
0x4001567	          0x4c89e6	                            mov rsi, r12	      1027	property.c	FUNCTION_31	CALL_4
0x400156a	          0x4889df	                            mov rdi, rbx	      1027	property.c	FUNCTION_31	CALL_4
0x400156d	      0xe800000000	                          call 0x4001572	      1027	property.c	FUNCTION_31	CALL_4
0x4001572	          0x4885c0	                           test rax, rax	      1028	property.c	FUNCTION_31	WHILE_1
0x4001575	          0x4989c4	                            mov r12, rax	      1027	property.c	FUNCTION_31	CALL_4
0x4001578	            0x7538	                           jne 0x40015b2	      1028	property.c	FUNCTION_31	WHILE_1
0x400157a	          0x4889de	                            mov rsi, rbx	      1029	property.c	FUNCTION_31	WHILE_1	CALL_5
0x400157d	          0x4889ef	                            mov rdi, rbp	      1029	property.c	FUNCTION_31	WHILE_1	CALL_5
0x4001580	      0xe800000000	                          call 0x4001585	      1029	property.c	FUNCTION_31	WHILE_1	CALL_5
0x4001585	          0x4885c0	                           test rax, rax	      1030	property.c	FUNCTION_31	WHILE_1	IF_4
0x4001588	          0x4889c3	                            mov rbx, rax	      1029	property.c	FUNCTION_31	WHILE_1	CALL_5
0x400158b	            0x7472	                            je 0x40015ff	      1030	property.c	FUNCTION_31	WHILE_1	IF_4
0x400158d	    0x48c7c6000000	                              mov rsi, 0	      1032	property.c	FUNCTION_31	WHILE_1	IF_5	CALL_6
0x4001594	          0x4889c7	                            mov rdi, rax	      1032	property.c	FUNCTION_31	WHILE_1	IF_5	CALL_6
0x4001597	      0xe800000000	                          call 0x400159c	      1032	property.c	FUNCTION_31	WHILE_1	IF_5	CALL_6
0x400159c	            0x84c0	                             test al, al	      1032	property.c	FUNCTION_31	WHILE_1	IF_5	CALL_6
0x400159e	            0x74da	                            je 0x400157a	      1032	property.c	FUNCTION_31	WHILE_1	IF_5	CALL_6
0x40015a0	            0x31f6	                            xor esi, esi	      1033	property.c	FUNCTION_31	WHILE_1	CALL_7
0x40015a2	          0x4889df	                            mov rdi, rbx	      1027	property.c	FUNCTION_31	CALL_4
0x40015a5	      0xe800000000	                          call 0x40015aa	      1027	property.c	FUNCTION_31	CALL_4
0x40015aa	          0x4885c0	                           test rax, rax	      1028	property.c	FUNCTION_31	WHILE_1
0x40015ad	          0x4989c4	                            mov r12, rax	      1027	property.c	FUNCTION_31	CALL_4
0x40015b0	            0x74c8	                            je 0x400157a	      1028	property.c	FUNCTION_31	WHILE_1
0x40015b2	    0x48c7c6000000	                              mov rsi, 0	      1038	property.c	FUNCTION_31	IF_6	IF_7	CALL_8
0x40015b9	          0x4889c7	                            mov rdi, rax	      1038	property.c	FUNCTION_31	IF_6	IF_7	CALL_8
0x40015bc	      0xe800000000	                          call 0x40015c1	      1038	property.c	FUNCTION_31	IF_6	IF_7	CALL_8
0x40015c1	            0x84c0	                             test al, al	      1039	property.c	FUNCTION_31	IF_6	CALL_9
0x40015c3	    0x48c7c0b9ffff	             mov rax, 0xffffffffffffffb9	      1039	property.c	FUNCTION_31	IF_6	CALL_9
0x40015ca	        0x490f45c4	                         cmovne rax, r12	      1039	property.c	FUNCTION_31	IF_6	CALL_9
0x40015ce	              0x5b	                                 pop rbx	      1043	property.c	FUNCTION_31
0x40015cf	              0x5d	                                 pop rbp	      1043	property.c	FUNCTION_31
0x40015d0	            0x415c	                                 pop r12	      1043	property.c	FUNCTION_31
0x40015d2	              0xc3	                                     ret	      1043	property.c	FUNCTION_31
0x40015d3	            0x31db	                            xor ebx, ebx	      1043	property.c	FUNCTION_31
0x40015d5	          0x4889de	                            mov rsi, rbx	      1015	property.c	FUNCTION_31	IF_1	DO_1	CALL_1
0x40015d8	          0x4889ef	                            mov rdi, rbp	      1015	property.c	FUNCTION_31	IF_1	DO_1	CALL_1
0x40015db	      0xe800000000	                          call 0x40015e0	      1015	property.c	FUNCTION_31	IF_1	DO_1	CALL_1
0x40015e0	    0x48c7c6000000	                              mov rsi, 0	      1017	property.c	FUNCTION_31	IF_1	DO_1	IF_2	CALL_2
0x40015e7	          0x4889c7	                            mov rdi, rax	      1017	property.c	FUNCTION_31	IF_1	DO_1	IF_2	CALL_2
0x40015ea	          0x4889c3	                            mov rbx, rax	      1015	property.c	FUNCTION_31	IF_1	DO_1	CALL_1
0x40015ed	      0xe800000000	                          call 0x40015f2	      1017	property.c	FUNCTION_31	IF_1	DO_1	IF_2	CALL_2
0x40015f2	            0x84c0	                             test al, al	      1017	property.c	FUNCTION_31	IF_1	DO_1	IF_2	CALL_2
0x40015f4	     0xf8564ffffff	                           jne 0x400155e	      1017	property.c	FUNCTION_31	IF_1	DO_1	IF_2	CALL_2
0x40015fa	          0x4885db	                           test rbx, rbx	      1019	property.c	FUNCTION_31	IF_1	DO_1
0x40015fd	            0x75d6	                           jne 0x40015d5	      1019	property.c	FUNCTION_31	IF_1	DO_1
0x40015ff	              0x5b	                                 pop rbx	      1043	property.c	FUNCTION_31
0x4001600	            0x31c0	                            xor eax, eax	      1025	property.c	FUNCTION_31	IF_3
0x4001602	              0x5d	                                 pop rbp	      1043	property.c	FUNCTION_31
0x4001603	            0x415c	                                 pop r12	      1043	property.c	FUNCTION_31
0x4001605	              0xc3	                                     ret	      1043	property.c	FUNCTION_31
acpi_fwnode_graph_get_next_endpoint	WHILE,0:DO,0:functions,0:FOR,0:ELSE,0:CALL,2:SWITCH,0:IF,1	5
0x4001610	      0xe800000000	                          call 0x4001615	      1238	property.c	FUNCTION_40	CALL_1
0x4001615	      0xba00000000	                              mov edx, 0	      1242	property.c	FUNCTION_40
0x400161a	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      1242	property.c	FUNCTION_40
0x4001620	        0x480f47c2	                          cmova rax, rdx	      1242	property.c	FUNCTION_40
0x4001624	              0xc3	                                     ret	      1243	property.c	FUNCTION_40
acpi_data_get_property	WHILE,0:DO,0:functions,0:FOR,1:ELSE,0:CALL,1:SWITCH,0:IF,5	67
0x4000040	          0x4885ff	                           test rdi, rdi	       433	property.c	FUNCTION_13	IF_1
0x4000043	     0xf84af000000	                            je 0x40000f8	       433	property.c	FUNCTION_13	IF_1
0x4000049	          0x4885f6	                           test rsi, rsi	       433	property.c	FUNCTION_13	IF_1
0x400004c	     0xf84a6000000	                            je 0x40000f8	       433	property.c	FUNCTION_13	IF_1
0x4000052	        0x48833f00	                      cmp qword [rdi], 0	       436	property.c	FUNCTION_13	IF_2
0x4000056	     0xf849c000000	                            je 0x40000f8	       436	property.c	FUNCTION_13	IF_2
0x400005c	        0x488b7f08	                mov rdi, qword [rdi + 8]	       436	property.c	FUNCTION_13	IF_2
0x4000060	          0x4885ff	                           test rdi, rdi	       436	property.c	FUNCTION_13	IF_2
0x4000063	     0xf848f000000	                            je 0x40000f8	       436	property.c	FUNCTION_13	IF_2
0x4000069	            0x4157	                                push r15	       429	property.c	FUNCTION_13
0x400006b	            0x4156	                                push r14	       429	property.c	FUNCTION_13
0x400006d	      0xb8eaffffff	                     mov eax, 0xffffffea	       434	property.c	FUNCTION_13	IF_1
0x4000072	            0x4155	                                push r13	       429	property.c	FUNCTION_13
0x4000074	            0x4154	                                push r12	       429	property.c	FUNCTION_13
0x4000076	              0x55	                                push rbp	       429	property.c	FUNCTION_13
0x4000077	              0x53	                                push rbx	       429	property.c	FUNCTION_13
0x4000078	        0x4883ec08	                              sub rsp, 8	       429	property.c	FUNCTION_13
0x400007c	        0x448b6704	               mov r12d, dword [rdi + 4]	       440	property.c	FUNCTION_13	FOR_1
0x4000080	          0x4585e4	                         test r12d, r12d	       440	property.c	FUNCTION_13	FOR_1
0x4000083	            0x7450	                            je 0x40000d5	       440	property.c	FUNCTION_13	FOR_1
0x4000085	          0x4989ce	                            mov r14, rcx	       440	property.c	FUNCTION_13	FOR_1
0x4000088	        0x89542404	                mov dword [rsp + 4], edx	       440	property.c	FUNCTION_13	FOR_1
0x400008c	          0x4889f5	                            mov rbp, rsi	       440	property.c	FUNCTION_13	FOR_1
0x400008f	        0x4c8b6f08	                mov r13, qword [rdi + 8]	       440	property.c	FUNCTION_13	FOR_1
0x4000093	            0x31db	                            xor ebx, ebx	       440	property.c	FUNCTION_13	FOR_1
0x4000095	            0xeb08	                           jmp 0x400009f	       440	property.c	FUNCTION_13	FOR_1
0x4000097	          0x83c301	                              add ebx, 1	       440	property.c	FUNCTION_13	FOR_1
0x400009a	          0x4439e3	                           cmp ebx, r12d	       440	property.c	FUNCTION_13	FOR_1
0x400009d	            0x7445	                            je 0x40000e4	       440	property.c	FUNCTION_13	FOR_1
0x400009f	          0x4863c3	                         movsxd rax, ebx	       446	property.c	FUNCTION_13	FOR_1
0x40000a2	          0x4889ef	                            mov rdi, rbp	       449	property.c	FUNCTION_13	FOR_1	IF_3	CALL_1
0x40000a5	        0x488d0440	                  lea rax, [rax + rax*2]	       446	property.c	FUNCTION_13	FOR_1
0x40000a9	      0x4d8b7cc508	       mov r15, qword [r13 + rax*8 + 8] 	       446	property.c	FUNCTION_13	FOR_1
0x40000ae	        0x498b7708	                mov rsi, qword [r15 + 8]	       449	property.c	FUNCTION_13	FOR_1	IF_3	CALL_1
0x40000b2	      0xe800000000	                          call 0x40000b7	       449	property.c	FUNCTION_13	FOR_1	IF_3	CALL_1
0x40000b7	            0x85c0	                           test eax, eax	       449	property.c	FUNCTION_13	FOR_1	IF_3	CALL_1
0x40000b9	            0x75dc	                           jne 0x4000097	       449	property.c	FUNCTION_13	FOR_1	IF_3	CALL_1
0x40000bb	        0x8b4c2404	                mov ecx, dword [rsp + 4]	       450	property.c	FUNCTION_13	FOR_1	IF_3	IF_4
0x40000bf	            0x85c9	                           test ecx, ecx	       450	property.c	FUNCTION_13	FOR_1	IF_3	IF_4
0x40000c1	            0x7406	                            je 0x40000c9	       450	property.c	FUNCTION_13	FOR_1	IF_3	IF_4
0x40000c3	        0x413b4f18	            cmp ecx, dword [r15 + 0x18] 	       450	property.c	FUNCTION_13	FOR_1	IF_3	IF_4
0x40000c7	            0x7535	                           jne 0x40000fe	       450	property.c	FUNCTION_13	FOR_1	IF_3	IF_4
0x40000c9	          0x4d85f6	                           test r14, r14	       452	property.c	FUNCTION_13	FOR_1	IF_3	IF_5
0x40000cc	            0x7407	                            je 0x40000d5	       452	property.c	FUNCTION_13	FOR_1	IF_3	IF_5
0x40000ce	        0x498d5718	                   lea rdx, [r15 + 0x18]	       453	property.c	FUNCTION_13	FOR_1	IF_3	IF_5
0x40000d2	          0x498916	                    mov qword [r14], rdx	       453	property.c	FUNCTION_13	FOR_1	IF_3	IF_5
0x40000d5	        0x4883c408	                              add rsp, 8	       459	property.c	FUNCTION_13
0x40000d9	              0x5b	                                 pop rbx	       459	property.c	FUNCTION_13
0x40000da	              0x5d	                                 pop rbp	       459	property.c	FUNCTION_13
0x40000db	            0x415c	                                 pop r12	       459	property.c	FUNCTION_13
0x40000dd	            0x415d	                                 pop r13	       459	property.c	FUNCTION_13
0x40000df	            0x415e	                                 pop r14	       459	property.c	FUNCTION_13
0x40000e1	            0x415f	                                 pop r15	       459	property.c	FUNCTION_13
0x40000e3	              0xc3	                                     ret	       459	property.c	FUNCTION_13
0x40000e4	        0x4883c408	                              add rsp, 8	       459	property.c	FUNCTION_13
0x40000e8	      0xb8eaffffff	                     mov eax, 0xffffffea	       434	property.c	FUNCTION_13	IF_1
0x40000ed	              0x5b	                                 pop rbx	       459	property.c	FUNCTION_13
0x40000ee	              0x5d	                                 pop rbp	       459	property.c	FUNCTION_13
0x40000ef	            0x415c	                                 pop r12	       459	property.c	FUNCTION_13
0x40000f1	            0x415d	                                 pop r13	       459	property.c	FUNCTION_13
0x40000f3	            0x415e	                                 pop r14	       459	property.c	FUNCTION_13
0x40000f5	            0x415f	                                 pop r15	       459	property.c	FUNCTION_13
0x40000f7	              0xc3	                                     ret	       459	property.c	FUNCTION_13
0x40000f8	      0xb8eaffffff	                     mov eax, 0xffffffea	       434	property.c	FUNCTION_13	IF_1
0x40000fd	              0xc3	                                     ret	       434	property.c	FUNCTION_13	IF_1
0x40000fe	      0xb8b9ffffff	                     mov eax, 0xffffffb9	       451	property.c	FUNCTION_13	FOR_1	IF_3	IF_4
0x4000103	            0xebd0	                           jmp 0x40000d5	       451	property.c	FUNCTION_13	FOR_1	IF_3	IF_4
acpi_fwnode_property_read_int_array	WHILE,0:DO,0:functions,0:FOR,0:ELSE,0:CALL,1:SWITCH,1:IF,0	27
0x4000c70	          0x83fa02	                              cmp edx, 2	      1160	property.c	FUNCTION_36	SWITCH_1
0x4000c73	            0x7446	                            je 0x4000cbb	      1160	property.c	FUNCTION_36	SWITCH_1
0x4000c75	            0x7636	                           jbe 0x4000cad	      1160	property.c	FUNCTION_36	SWITCH_1
0x4000c77	          0x83fa04	                              cmp edx, 4	      1160	property.c	FUNCTION_36	SWITCH_1
0x4000c7a	            0x741b	                            je 0x4000c97	      1160	property.c	FUNCTION_36	SWITCH_1
0x4000c7c	          0x83fa08	                              cmp edx, 8	      1160	property.c	FUNCTION_36	SWITCH_1
0x4000c7f	    0x41b903000000	                              mov r9d, 3	      1171	property.c	FUNCTION_36	SWITCH_1
0x4000c85	            0x752e	                           jne 0x4000cb5	      1160	property.c	FUNCTION_36	SWITCH_1
0x4000c87	      0xe864f6ffff	       call sym.acpi_device_data_of_node	       899	property.c	FUNCTION_28	CALL_2
0x4000c8c	          0x4489ca	                            mov edx, r9d	       899	property.c	FUNCTION_28	CALL_2
0x4000c8f	          0x4889c7	                            mov rdi, rax	       899	property.c	FUNCTION_28	CALL_2
0x4000c92	      0xe949fdffff	             jmp sym.acpi_data_prop_read	       899	property.c	FUNCTION_28	CALL_2
0x4000c97	    0x41b902000000	                              mov r9d, 2	      1168	property.c	FUNCTION_36	SWITCH_1
0x4000c9d	      0xe84ef6ffff	       call sym.acpi_device_data_of_node	       899	property.c	FUNCTION_28	CALL_2
0x4000ca2	          0x4489ca	                            mov edx, r9d	       899	property.c	FUNCTION_28	CALL_2
0x4000ca5	          0x4889c7	                            mov rdi, rax	       899	property.c	FUNCTION_28	CALL_2
0x4000ca8	      0xe933fdffff	             jmp sym.acpi_data_prop_read	       899	property.c	FUNCTION_28	CALL_2
0x4000cad	          0x4531c9	                            xor r9d, r9d	      1162	property.c	FUNCTION_36	SWITCH_1
0x4000cb0	          0x83fa01	                              cmp edx, 1	      1160	property.c	FUNCTION_36	SWITCH_1
0x4000cb3	            0x74d2	                            je 0x4000c87	      1160	property.c	FUNCTION_36	SWITCH_1
0x4000cb5	      0xb8faffffff	                     mov eax, 0xfffffffa	      1178	property.c	FUNCTION_36
0x4000cba	              0xc3	                                     ret	      1178	property.c	FUNCTION_36
0x4000cbb	    0x41b901000000	                              mov r9d, 1	      1165	property.c	FUNCTION_36	SWITCH_1
0x4000cc1	      0xe82af6ffff	       call sym.acpi_device_data_of_node	       899	property.c	FUNCTION_28	CALL_2
0x4000cc6	          0x4489ca	                            mov edx, r9d	       899	property.c	FUNCTION_28	CALL_2
0x4000cc9	          0x4889c7	                            mov rdi, rax	       899	property.c	FUNCTION_28	CALL_2
0x4000ccc	      0xe90ffdffff	             jmp sym.acpi_data_prop_read	       899	property.c	FUNCTION_28	CALL_2
acpi_nondev_subnode_data_ok	WHILE,0:DO,0:functions,0:FOR,0:ELSE,0:CALL,4:SWITCH,0:IF,2	47
0x4000fa0	            0x4156	                                push r14	        99	property.c	FUNCTION_2
0x4000fa2	            0x4155	                                push r13	        99	property.c	FUNCTION_2
0x4000fa4	          0x4989ce	                            mov r14, rcx	        99	property.c	FUNCTION_2
0x4000fa7	            0x4154	                                push r12	        99	property.c	FUNCTION_2
0x4000fa9	              0x55	                                push rbp	        99	property.c	FUNCTION_2
0x4000faa	          0x4989f4	                            mov r12, rsi	        99	property.c	FUNCTION_2
0x4000fad	              0x53	                                push rbx	        99	property.c	FUNCTION_2
0x4000fae	            0x31f6	                            xor esi, esi	       103	property.c	FUNCTION_2	CALL_1
0x4000fb0	          0x4989d5	                            mov r13, rdx	        99	property.c	FUNCTION_2
0x4000fb3	    0x41b804000000	                              mov r8d, 4	       103	property.c	FUNCTION_2	CALL_1
0x4000fb9	            0x31d2	                            xor edx, edx	       103	property.c	FUNCTION_2	CALL_1
0x4000fbb	          0x4889fd	                            mov rbp, rdi	        99	property.c	FUNCTION_2
0x4000fbe	        0x4883ec18	                           sub rsp, 0x18	        99	property.c	FUNCTION_2
0x4000fc2	            0x31db	                            xor ebx, ebx	       106	property.c	FUNCTION_2	IF_1
0x4000fc4	          0x4889e1	                            mov rcx, rsp	       103	property.c	FUNCTION_2	CALL_1
0x4000fc7	    0x48c744240800	                  mov qword [rsp + 8], 0	       100	property.c	FUNCTION_2
0x4000fd0	    0x48c70424ffff	     mov qword [rsp], 0xffffffffffffffff	       100	property.c	FUNCTION_2
0x4000fd8	    0x65488b042528	                mov rax, qword gs:[0x28]	        99	property.c	FUNCTION_2
0x4000fe1	      0x4889442410	             mov qword [rsp + 0x10], rax	        99	property.c	FUNCTION_2
0x4000fe6	            0x31c0	                            xor eax, eax	        99	property.c	FUNCTION_2
0x4000fe8	      0xe800000000	                          call 0x4000fed	       103	property.c	FUNCTION_2	CALL_1
0x4000fed	            0x85c0	                           test eax, eax	       105	property.c	FUNCTION_2	IF_1	CALL_2
0x4000fef	            0x741f	                            je 0x4001010	       105	property.c	FUNCTION_2	IF_1	CALL_2
0x4000ff1	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       114	property.c	FUNCTION_2
0x4000ff6	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       114	property.c	FUNCTION_2
0x4000fff	            0x89d8	                            mov eax, ebx	       114	property.c	FUNCTION_2
0x4001001	            0x7537	                           jne 0x400103a	       114	property.c	FUNCTION_2
0x4001003	        0x4883c418	                           add rsp, 0x18	       114	property.c	FUNCTION_2
0x4001007	              0x5b	                                 pop rbx	       114	property.c	FUNCTION_2
0x4001008	              0x5d	                                 pop rbp	       114	property.c	FUNCTION_2
0x4001009	            0x415c	                                 pop r12	       114	property.c	FUNCTION_2
0x400100b	            0x415d	                                 pop r13	       114	property.c	FUNCTION_2
0x400100d	            0x415e	                                 pop r14	       114	property.c	FUNCTION_2
0x400100f	              0xc3	                                     ret	       114	property.c	FUNCTION_2
0x4001010	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       108	property.c	FUNCTION_2	IF_2	CALL_3
0x4001015	      0x498d542408	                      lea rdx, [r12 + 8]	       108	property.c	FUNCTION_2	IF_2	CALL_3
0x400101a	          0x4d89f0	                             mov r8, r14	       108	property.c	FUNCTION_2	IF_2	CALL_3
0x400101d	          0x4c89e9	                            mov rcx, r13	       108	property.c	FUNCTION_2	IF_2	CALL_3
0x4001020	          0x4889ee	                            mov rsi, rbp	       108	property.c	FUNCTION_2	IF_2	CALL_3
0x4001023	      0xe838feffff	call sym.acpi_nondev_subnode_extract.isra.7	       108	property.c	FUNCTION_2	IF_2	CALL_3
0x4001028	            0x84c0	                             test al, al	       108	property.c	FUNCTION_2	IF_2	CALL_3
0x400102a	            0x89c3	                            mov ebx, eax	       108	property.c	FUNCTION_2	IF_2	CALL_3
0x400102c	            0x75c3	                           jne 0x4000ff1	       108	property.c	FUNCTION_2	IF_2	CALL_3
0x400102e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        62	aclinuxex.h	FUNCTION_84	CALL_1
0x4001033	      0xe800000000	                          call 0x4001038	        62	aclinuxex.h	FUNCTION_84	CALL_1
0x4001038	            0xebb7	                           jmp 0x4000ff1	       113	property.c	FUNCTION_2
0x400103a	      0xe800000000	                          call 0x400103f	       114	property.c	FUNCTION_2
acpi_fwnode_graph_get_remote_endpoint	WHILE,0:DO,0:functions,0:FOR,0:ELSE,0:CALL,1:SWITCH,0:IF,0	16
0x4001720	        0x4883ec10	                           sub rsp, 0x10	      1247	property.c	FUNCTION_41
0x4001724	            0x31d2	                            xor edx, edx	      1250	property.c	FUNCTION_41	CALL_1
0x4001726	            0x31f6	                            xor esi, esi	      1250	property.c	FUNCTION_41	CALL_1
0x4001728	          0x4889e1	                            mov rcx, rsp	      1250	property.c	FUNCTION_41	CALL_1
0x400172b	    0x48c704240000	                      mov qword [rsp], 0	      1248	property.c	FUNCTION_41
0x4001733	    0x65488b042528	                mov rax, qword gs:[0x28]	      1247	property.c	FUNCTION_41
0x400173c	      0x4889442408	                mov qword [rsp + 8], rax	      1247	property.c	FUNCTION_41
0x4001741	            0x31c0	                            xor eax, eax	      1247	property.c	FUNCTION_41
0x4001743	      0xe800000000	                          call 0x4001748	      1250	property.c	FUNCTION_41	CALL_1
0x4001748	      0x488b542408	                mov rdx, qword [rsp + 8]	      1253	property.c	FUNCTION_41
0x400174d	    0x654833142528	                xor rdx, qword gs:[0x28]	      1253	property.c	FUNCTION_41
0x4001756	        0x488b0424	                    mov rax, qword [rsp]	      1253	property.c	FUNCTION_41
0x400175a	            0x7505	                           jne 0x4001761	      1253	property.c	FUNCTION_41
0x400175c	        0x4883c410	                           add rsp, 0x10	      1253	property.c	FUNCTION_41
0x4001760	              0xc3	                                     ret	      1253	property.c	FUNCTION_41
0x4001761	      0xe800000000	                  call section_end..text	      1253	property.c	FUNCTION_41
acpi_fwnode_graph_parse_endpoint	WHILE,0:DO,0:functions,0:FOR,0:ELSE,0:CALL,3:SWITCH,0:IF,0	20
0x4000260	              0x55	                                push rbp	      1263	property.c	FUNCTION_43
0x4000261	              0x53	                                push rbx	      1263	property.c	FUNCTION_43
0x4000262	          0x4889fd	                            mov rbp, rdi	      1263	property.c	FUNCTION_43
0x4000265	          0x4889f3	                            mov rbx, rsi	      1263	property.c	FUNCTION_43
0x4000268	      0xe800000000	                          call 0x400026d	      1264	property.c	FUNCTION_43	CALL_1
0x400026d	        0x48896b08	                mov qword [rbx + 8], rbp	      1266	property.c	FUNCTION_43
0x4000271	          0x4889da	                            mov rdx, rbx	       167	property.h	FUNCTION_80	CALL_1
0x4000274	      0xb901000000	                              mov ecx, 1	       167	property.h	FUNCTION_80	CALL_1
0x4000279	    0x48c7c6000000	                              mov rsi, 0	       167	property.h	FUNCTION_80	CALL_1
0x4000280	          0x4889c7	                            mov rdi, rax	       167	property.h	FUNCTION_80	CALL_1
0x4000283	      0xe800000000	                          call 0x4000288	       167	property.h	FUNCTION_80	CALL_1
0x4000288	        0x488d5304	                      lea rdx, [rbx + 4]	      1269	property.c	FUNCTION_43	CALL_3
0x400028c	          0x4889ef	                            mov rdi, rbp	       167	property.h	FUNCTION_80	CALL_1
0x400028f	      0xb901000000	                              mov ecx, 1	       167	property.h	FUNCTION_80	CALL_1
0x4000294	    0x48c7c6000000	                              mov rsi, 0	       167	property.h	FUNCTION_80	CALL_1
0x400029b	      0xe800000000	                          call 0x40002a0	       167	property.h	FUNCTION_80	CALL_1
0x40002a0	            0x31c0	                            xor eax, eax	      1272	property.c	FUNCTION_43
0x40002a2	              0x5b	                                 pop rbx	      1272	property.c	FUNCTION_43
0x40002a3	              0x5d	                                 pop rbp	      1272	property.c	FUNCTION_43
0x40002a4	              0xc3	                                     ret	      1272	property.c	FUNCTION_43
acpi_free_properties	WHILE,0:DO,0:functions,0:FOR,0:ELSE,0:CALL,2:SWITCH,0:IF,0	11
0x4001470	              0x53	                                push rbx	       400	property.c	FUNCTION_12
0x4001471	          0x4889fb	                            mov rbx, rdi	       400	property.c	FUNCTION_12
0x4001474	    0x488dbf180200	                  lea rdi, [rdi + 0x218]	       401	property.c	FUNCTION_12	CALL_1
0x400147b	      0xe8b0ecffff	   call sym.acpi_destroy_nondev_subnodes	       401	property.c	FUNCTION_12	CALL_1
0x4001480	    0x488bbb000200	           mov rdi, qword [rbx + 0x200] 	        62	aclinuxex.h	FUNCTION_84	CALL_1
0x4001487	      0xe800000000	                          call 0x400148c	        62	aclinuxex.h	FUNCTION_84	CALL_1
0x400148c	    0x48c783100200	              mov qword [rbx + 0x210], 0	       403	property.c	FUNCTION_12
0x4001497	    0x48c783000200	              mov qword [rbx + 0x200], 0	       404	property.c	FUNCTION_12
0x40014a2	    0x48c783080200	              mov qword [rbx + 0x208], 0	       405	property.c	FUNCTION_12
0x40014ad	              0x5b	                                 pop rbx	       406	property.c	FUNCTION_12
0x40014ae	              0xc3	                                     ret	       406	property.c	FUNCTION_12
