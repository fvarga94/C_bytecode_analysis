bm_fill_super	DO,0:IF,1:functions,0:CALL,1:WHILE,0:FOR,0:SWITCH,0:ELSE,0	10
0x4000050	              0x53	                                push rbx	       263	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1
0x4000051	    0x48c7c2000000	                              mov rdx, 0	       263	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1
0x4000058	      0xbe4d4e4942	                     mov esi, 0x42494e4d	       265	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1	IF_2	CALL_1
0x400005d	          0x4889fb	                            mov rbx, rdi	       265	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1	IF_2	CALL_1
0x4000060	      0xe800000000	                          call 0x4000065	       265	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1	IF_2	CALL_1
0x4000065	            0x85c0	                           test eax, eax	       267	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1	IF_3	CALL_2
0x4000067	            0x7508	                           jne 0x4000071	       267	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1	IF_3	CALL_2
0x4000069	    0x48c743300000	               mov qword [rbx + 0x30], 0	       267	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1	IF_3	CALL_2
0x4000071	              0x5b	                                 pop rbx	       267	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1	IF_3	CALL_2
0x4000072	              0xc3	                                     ret	       267	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1	IF_3	CALL_2
bm_status_read	DO,0:IF,0:functions,0:CALL,2:WHILE,0:FOR,0:SWITCH,0:ELSE,0	13
0x4000120	    0x833d00000000	               cmp dword [0x04000127], 1	       767	binfmt_misc.c	FUNCTION_14
0x4000127	    0x8b0500000000	            mov eax, dword [0x0400012d] 	       767	binfmt_misc.c	FUNCTION_14
0x400012d	          0x4889f7	                            mov rdi, rsi	       766	binfmt_misc.c	FUNCTION_14
0x4000130	          0x4889d6	                            mov rsi, rdx	       766	binfmt_misc.c	FUNCTION_14
0x4000133	          0x4889ca	                            mov rdx, rcx	       766	binfmt_misc.c	FUNCTION_14
0x4000136	    0x48c7c1000000	                              mov rcx, 0	       767	binfmt_misc.c	FUNCTION_14
0x400013d	          0x4d19c0	                              sbb r8, r8	       767	binfmt_misc.c	FUNCTION_14
0x4000140	            0x85c0	                           test eax, eax	       767	binfmt_misc.c	FUNCTION_14
0x4000142	    0x48c7c0000000	                              mov rax, 0	       767	binfmt_misc.c	FUNCTION_14
0x4000149	          0x49f7d0	                                  not r8	       767	binfmt_misc.c	FUNCTION_14
0x400014c	        0x480f44c8	                          cmove rcx, rax	       767	binfmt_misc.c	FUNCTION_14
0x4000150	        0x4983c009	                               add r8, 9	       769	binfmt_misc.c	FUNCTION_14	CALL_2
0x4000154	      0xe900000000	                           jmp 0x4000159	       769	binfmt_misc.c	FUNCTION_14	CALL_2
bm_evict_inode	DO,0:IF,1:functions,0:CALL,3:WHILE,0:FOR,0:SWITCH,0:ELSE,0	17
0x4000080	              0x55	                                push rbp	       596	binfmt_misc.c	FUNCTION_9
0x4000081	              0x53	                                push rbx	       596	binfmt_misc.c	FUNCTION_9
0x4000082	          0x4889fd	                            mov rbp, rdi	       596	binfmt_misc.c	FUNCTION_9
0x4000085	    0x488b9f380200	           mov rbx, qword [rdi + 0x238] 	       597	binfmt_misc.c	FUNCTION_9
0x400008c	          0x4885db	                           test rbx, rbx	       599	binfmt_misc.c	FUNCTION_9	IF_1
0x400008f	            0x7411	                            je 0x40000a2	       599	binfmt_misc.c	FUNCTION_9	IF_1
0x4000091	        0xf6431310	           test byte [rbx + 0x13], 0x10 	       599	binfmt_misc.c	FUNCTION_9	IF_1
0x4000095	            0x740b	                            je 0x40000a2	       599	binfmt_misc.c	FUNCTION_9	IF_1
0x4000097	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	       600	binfmt_misc.c	FUNCTION_9	CALL_1
0x400009b	            0x31f6	                            xor esi, esi	       600	binfmt_misc.c	FUNCTION_9	CALL_1
0x400009d	      0xe800000000	                          call 0x40000a2	       600	binfmt_misc.c	FUNCTION_9	CALL_1
0x40000a2	          0x4889ef	                            mov rdi, rbp	       602	binfmt_misc.c	FUNCTION_9	CALL_2
0x40000a5	      0xe800000000	                          call 0x40000aa	       602	binfmt_misc.c	FUNCTION_9	CALL_2
0x40000aa	          0x4889df	                            mov rdi, rbx	       603	binfmt_misc.c	FUNCTION_9	CALL_3
0x40000ad	              0x5b	                                 pop rbx	       604	binfmt_misc.c	FUNCTION_9
0x40000ae	              0x5d	                                 pop rbp	       604	binfmt_misc.c	FUNCTION_9
0x40000af	      0xe900000000	                           jmp 0x40000b4	       603	binfmt_misc.c	FUNCTION_9	CALL_3
scanarg	DO,0:IF,3:functions,0:CALL,2:WHILE,1:FOR,0:SWITCH,0:ELSE,0	16
0x4000040	          0x4889ca	                            mov rdx, rcx	       262	binfmt_misc.c	FUNCTION_3	WHILE_1
0x4000043	    0x48c7c1000000	                              mov rcx, 0	       262	binfmt_misc.c	FUNCTION_3	WHILE_1
0x400004a	      0xe900000000	                           jmp 0x400004f	       262	binfmt_misc.c	FUNCTION_3	WHILE_1
0x400004f	              0x90	                                     nop	       263	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1
0x4000050	              0x53	                                push rbx	       263	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1
0x4000051	    0x48c7c2000000	                              mov rdx, 0	       263	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1
0x4000058	      0xbe4d4e4942	                     mov esi, 0x42494e4d	       265	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1	IF_2	CALL_1
0x400005d	          0x4889fb	                            mov rbx, rdi	       265	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1	IF_2	CALL_1
0x4000060	      0xe800000000	                          call 0x4000065	       265	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1	IF_2	CALL_1
0x4000065	            0x85c0	                           test eax, eax	       267	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1	IF_3	CALL_2
0x4000067	            0x7508	                           jne 0x4000071	       267	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1	IF_3	CALL_2
0x4000069	    0x48c743300000	               mov qword [rbx + 0x30], 0	       267	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1	IF_3	CALL_2
0x4000071	              0x5b	                                 pop rbx	       267	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1	IF_3	CALL_2
0x4000072	              0xc3	                                     ret	       267	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1	IF_3	CALL_2
0x4000073	           0xf1f00	                         nop dword [rax]	       267	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1	IF_3	CALL_2
0x4000076	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       259	binfmt_misc.c	FUNCTION_3
exit_misc_binfmt	DO,0:IF,0:functions,0:CALL,2:WHILE,0:FOR,0:SWITCH,0:ELSE,0	6
0x4000040	          0x4889ca	                            mov rdx, rcx	       262	binfmt_misc.c	FUNCTION_3	WHILE_1
0x4000043	    0x48c7c1000000	                              mov rcx, 0	       262	binfmt_misc.c	FUNCTION_3	WHILE_1
0x400004a	      0xe900000000	                           jmp 0x400004f	       262	binfmt_misc.c	FUNCTION_3	WHILE_1
0x400004f	              0x90	                                     nop	       263	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1
0x4000050	              0x53	                                push rbx	       263	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1
0x4000051	    0x48c7c2000000	                              mov rdx, 0	       263	binfmt_misc.c	FUNCTION_3	WHILE_1	IF_1
bm_mount	DO,0:IF,0:functions,0:CALL,1:WHILE,0:FOR,0:SWITCH,0:ELSE,0	3
0x4000040	          0x4889ca	                            mov rdx, rcx	       262	binfmt_misc.c	FUNCTION_3	WHILE_1
0x4000043	    0x48c7c1000000	                              mov rcx, 0	       262	binfmt_misc.c	FUNCTION_3	WHILE_1
0x400004a	      0xe900000000	                           jmp 0x400004f	       262	binfmt_misc.c	FUNCTION_3	WHILE_1
