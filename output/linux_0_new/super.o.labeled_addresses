efivarfs_d_compare	SWITCH,0:ELSE,0:FOR,0:functions,0:CALL,2:DO,0:IF,2:WHILE,0	29
0x4000260	          0x3b7104	                cmp esi, dword [rcx + 4]	        53	super.c	FUNCTION_2	IF_1
0x4000263	            0x7406	                            je 0x400026b	        53	super.c	FUNCTION_2	IF_1
0x4000265	      0xb801000000	                              mov eax, 1	        62	super.c	FUNCTION_2
0x400026a	              0xc3	                                     ret	        62	super.c	FUNCTION_2
0x400026b	            0x4154	                                push r12	        50	super.c	FUNCTION_2
0x400026d	        0x4c8b6108	                mov r12, qword [rcx + 8]	        57	super.c	FUNCTION_2	IF_2	CALL_1
0x4000271	              0x55	                                push rbp	        50	super.c	FUNCTION_2
0x4000272	              0x53	                                push rbx	        50	super.c	FUNCTION_2
0x4000273	          0x8d5edc	                   lea ebx, [rsi - 0x24]	        57	super.c	FUNCTION_2	IF_2	CALL_1
0x4000276	          0x4889d5	                            mov rbp, rdx	        57	super.c	FUNCTION_2	IF_2	CALL_1
0x4000279	          0x4863db	                         movsxd rbx, ebx	        57	super.c	FUNCTION_2	IF_2	CALL_1
0x400027c	          0x4c89e6	                            mov rsi, r12	        57	super.c	FUNCTION_2	IF_2	CALL_1
0x400027f	          0x4889ef	                            mov rdi, rbp	        57	super.c	FUNCTION_2	IF_2	CALL_1
0x4000282	          0x4889da	                            mov rdx, rbx	        57	super.c	FUNCTION_2	IF_2	CALL_1
0x4000285	      0xe800000000	                          call 0x400028a	        57	super.c	FUNCTION_2	IF_2	CALL_1
0x400028a	            0x85c0	                           test eax, eax	        57	super.c	FUNCTION_2	IF_2	CALL_1
0x400028c	            0x7517	                           jne 0x40002a5	        57	super.c	FUNCTION_2	IF_2	CALL_1
0x400028e	      0x488d741d00	                    lea rsi, [rbp + rbx]	        61	super.c	FUNCTION_2	CALL_2
0x4000293	        0x498d3c1c	                    lea rdi, [r12 + rbx]	        61	super.c	FUNCTION_2	CALL_2
0x4000297	      0xba24000000	                           mov edx, 0x24	        61	super.c	FUNCTION_2	CALL_2
0x400029c	              0x5b	                                 pop rbx	        62	super.c	FUNCTION_2
0x400029d	              0x5d	                                 pop rbp	        62	super.c	FUNCTION_2
0x400029e	            0x415c	                                 pop r12	        62	super.c	FUNCTION_2
0x40002a0	      0xe900000000	                           jmp 0x40002a5	        61	super.c	FUNCTION_2	CALL_2
0x40002a5	              0x5b	                                 pop rbx	        62	super.c	FUNCTION_2
0x40002a6	      0xb801000000	                              mov eax, 1	        62	super.c	FUNCTION_2
0x40002ab	              0x5d	                                 pop rbp	        62	super.c	FUNCTION_2
0x40002ac	            0x415c	                                 pop r12	        62	super.c	FUNCTION_2
0x40002ae	              0xc3	                                     ret	        62	super.c	FUNCTION_2
efivarfs_kill_sb	SWITCH,0:ELSE,0:FOR,0:functions,0:CALL,2:DO,0:IF,0:WHILE,0	6
0x4000040	      0xe800000000	                          call 0x4000045	       237	super.c	FUNCTION_9	CALL_1
0x4000045	            0x31c9	                            xor ecx, ecx	       241	super.c	FUNCTION_9	CALL_2
0x4000047	            0x31d2	                            xor edx, edx	       241	super.c	FUNCTION_9	CALL_2
0x4000049	    0x48c7c6000000	                              mov rsi, 0	       241	super.c	FUNCTION_9	CALL_2
0x4000050	    0x48c7c7000000	                              mov rdi, 0	       241	super.c	FUNCTION_9	CALL_2
0x4000057	      0xe900000000	                           jmp 0x400005c	       241	super.c	FUNCTION_9	CALL_2
efivarfs_mount	SWITCH,0:ELSE,0:FOR,0:functions,0:CALL,1:DO,0:IF,0:WHILE,0	3
0x4000090	          0x4889ca	                            mov rdx, rcx	       231	super.c	FUNCTION_8
0x4000093	    0x48c7c1000000	                              mov rcx, 0	       232	super.c	FUNCTION_8	CALL_1
0x400009a	      0xe900000000	                           jmp 0x400009f	       232	super.c	FUNCTION_8	CALL_1
efivarfs_destroy	SWITCH,0:ELSE,0:FOR,0:functions,0:CALL,2:DO,0:IF,1:WHILE,0	13
0x4000060	              0x53	                                push rbx	       185	super.c	FUNCTION_6
0x4000061	          0x4889fb	                            mov rbx, rdi	       185	super.c	FUNCTION_6
0x4000064	        0x4883ec08	                              sub rsp, 8	       185	super.c	FUNCTION_6
0x4000068	      0xe800000000	                          call 0x400006d	       186	super.c	FUNCTION_6	CALL_1
0x400006d	            0x85c0	                           test eax, eax	       188	super.c	FUNCTION_6	IF_1
0x400006f	            0x7510	                           jne 0x4000081	       188	super.c	FUNCTION_6	IF_1
0x4000071	          0x4889df	                            mov rdi, rbx	       190	super.c	FUNCTION_6	CALL_2
0x4000074	        0x89442404	                mov dword [rsp + 4], eax	       190	super.c	FUNCTION_6	CALL_2
0x4000078	      0xe800000000	                          call 0x400007d	       190	super.c	FUNCTION_6	CALL_2
0x400007d	        0x8b442404	                mov eax, dword [rsp + 4]	       190	super.c	FUNCTION_6	CALL_2
0x4000081	        0x4883c408	                              add rsp, 8	       192	super.c	FUNCTION_6
0x4000085	              0x5b	                                 pop rbx	       192	super.c	FUNCTION_6
0x4000086	              0xc3	                                     ret	       192	super.c	FUNCTION_6
efivarfs_evict_inode	SWITCH,0:ELSE,0:FOR,0:functions,0:CALL,1:DO,0:IF,0:WHILE,0	1
0x40002b0	      0xe900000000	                           jmp 0x40002b5	        25	super.c	FUNCTION_1	CALL_1
efivarfs_exit	SWITCH,0:ELSE,0:FOR,0:functions,0:CALL,1:DO,0:IF,0:WHILE,0	6
0x4000040	      0xe800000000	                          call 0x4000045	       237	super.c	FUNCTION_9	CALL_1
0x4000045	            0x31c9	                            xor ecx, ecx	       241	super.c	FUNCTION_9	CALL_2
0x4000047	            0x31d2	                            xor edx, edx	       241	super.c	FUNCTION_9	CALL_2
0x4000049	              0x48	                                 invalid	       241	super.c	FUNCTION_9	CALL_2
0x400004a	              0xc7	                                 invalid	       241	super.c	FUNCTION_9	CALL_2
0x400004b	              0xc6	                                 invalid	       241	super.c	FUNCTION_9	CALL_2
efivarfs_init	SWITCH,0:ELSE,0:FOR,0:functions,0:CALL,3:DO,0:IF,2:WHILE,0	12
0x4000040	      0xe800000000	                          call 0x4000045	       237	super.c	FUNCTION_9	CALL_1
0x4000045	            0x31c9	                            xor ecx, ecx	       241	super.c	FUNCTION_9	CALL_2
0x4000047	            0x31d2	                            xor edx, edx	       241	super.c	FUNCTION_9	CALL_2
0x4000049	    0x48c7c6000000	                              mov rsi, 0	       241	super.c	FUNCTION_9	CALL_2
0x4000050	    0x48c7c7000000	                              mov rdi, 0	       241	super.c	FUNCTION_9	CALL_2
0x4000057	      0xe900000000	                           jmp 0x400005c	       241	super.c	FUNCTION_9	CALL_2
0x400005c	         0xf1f4000	                         nop dword [rax]	       241	super.c	FUNCTION_9	CALL_2
0x4000060	              0x53	                                push rbx	       185	super.c	FUNCTION_6
0x4000061	          0x4889fb	                            mov rbx, rdi	       185	super.c	FUNCTION_6
0x4000064	              0x48	                                 invalid	       185	super.c	FUNCTION_6
0x4000065	              0x83	                                 invalid	       185	super.c	FUNCTION_6
0x4000066	              0xec	                               in al, dx	       185	super.c	FUNCTION_6
