loop_set_status_compat	IF,1:WHILE,0:functions,0:FOR,0:SWITCH,0:DO,0:CALL,2:ELSE,0	21
0x4000ba0	              0x53	                                push rbx	      1547	loop.c	FUNCTION_55
0x4000ba1	          0x4889fb	                            mov rbx, rdi	      1547	loop.c	FUNCTION_55
0x4000ba4	          0x4889f7	                            mov rdi, rsi	      1547	loop.c	FUNCTION_55
0x4000ba7	    0x4881ecf00000	                           sub rsp, 0xf0	      1547	loop.c	FUNCTION_55
0x4000bae	          0x4889e6	                            mov rsi, rsp	      1551	loop.c	FUNCTION_55	CALL_1
0x4000bb1	    0x65488b042528	                mov rax, qword gs:[0x28]	      1547	loop.c	FUNCTION_55
0x4000bba	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      1547	loop.c	FUNCTION_55
0x4000bc2	            0x31c0	                            xor eax, eax	      1547	loop.c	FUNCTION_55
0x4000bc4	      0xe857f8ffff	        call sym.loop_info64_from_compat	      1551	loop.c	FUNCTION_55	CALL_1
0x4000bc9	            0x85c0	                           test eax, eax	      1552	loop.c	FUNCTION_55	IF_1
0x4000bcb	            0x780b	                            js 0x4000bd8	      1552	loop.c	FUNCTION_55	IF_1
0x4000bcd	          0x4889e6	                            mov rsi, rsp	      1554	loop.c	FUNCTION_55	CALL_2
0x4000bd0	          0x4889df	                            mov rdi, rbx	      1554	loop.c	FUNCTION_55	CALL_2
0x4000bd3	      0xe818fcffff	                call sym.loop_set_status	      1554	loop.c	FUNCTION_55	CALL_2
0x4000bd8	    0x488b9424e800	            mov rdx, qword [rsp + 0xe8] 	      1555	loop.c	FUNCTION_55
0x4000be0	    0x654833142528	                xor rdx, qword gs:[0x28]	      1555	loop.c	FUNCTION_55
0x4000be9	            0x7509	                           jne 0x4000bf4	      1555	loop.c	FUNCTION_55
0x4000beb	    0x4881c4f00000	                           add rsp, 0xf0	      1555	loop.c	FUNCTION_55
0x4000bf2	              0x5b	                                 pop rbx	      1555	loop.c	FUNCTION_55
0x4000bf3	              0xc3	                                     ret	      1555	loop.c	FUNCTION_55
0x4000bf4	      0xe800000000	                          call 0x4000bf9	      1555	loop.c	FUNCTION_55
loop_release_xfer	IF,2:WHILE,0:functions,0:FOR,0:SWITCH,0:DO,0:CALL,2:ELSE,0	28
0x40001e0	            0x4154	                                push r12	       984	loop.c	FUNCTION_38
0x40001e2	              0x55	                                push rbp	       984	loop.c	FUNCTION_38
0x40001e3	              0x53	                                push rbx	       984	loop.c	FUNCTION_38
0x40001e4	    0x488bafd00000	            mov rbp, qword [rdi + 0xd0] 	       986	loop.c	FUNCTION_38
0x40001eb	          0x4885ed	                           test rbp, rbp	       988	loop.c	FUNCTION_38	IF_1
0x40001ee	            0x743b	                            je 0x400022b	       988	loop.c	FUNCTION_38	IF_1
0x40001f0	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       989	loop.c	FUNCTION_38	IF_1	IF_2
0x40001f4	          0x4531e4	                          xor r12d, r12d	       985	loop.c	FUNCTION_38
0x40001f7	          0x4889fb	                            mov rbx, rdi	       985	loop.c	FUNCTION_38
0x40001fa	          0x4885c0	                           test rax, rax	       989	loop.c	FUNCTION_38	IF_1	IF_2
0x40001fd	            0x7408	                            je 0x4000207	       989	loop.c	FUNCTION_38	IF_1	IF_2
0x40001ff	      0xe800000000	                          call 0x4000204	       990	loop.c	FUNCTION_38	IF_1	CALL_1
0x4000204	          0x4189c4	                           mov r12d, eax	       990	loop.c	FUNCTION_38	IF_1	CALL_1
0x4000207	    0x48c743200000	               mov qword [rbx + 0x20], 0	       991	loop.c	FUNCTION_38	IF_1
0x400020f	    0x48c783d00000	               mov qword [rbx + 0xd0], 0	       992	loop.c	FUNCTION_38	IF_1
0x400021a	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	       993	loop.c	FUNCTION_38	IF_1	CALL_2
0x400021e	      0xe800000000	                          call 0x4000223	       993	loop.c	FUNCTION_38	IF_1	CALL_2
0x4000223	          0x4489e0	                           mov eax, r12d	       996	loop.c	FUNCTION_38
0x4000226	              0x5b	                                 pop rbx	       996	loop.c	FUNCTION_38
0x4000227	              0x5d	                                 pop rbp	       996	loop.c	FUNCTION_38
0x4000228	            0x415c	                                 pop r12	       996	loop.c	FUNCTION_38
0x400022a	              0xc3	                                     ret	       996	loop.c	FUNCTION_38
0x400022b	          0x4531e4	                          xor r12d, r12d	       985	loop.c	FUNCTION_38
0x400022e	          0x4489e0	                           mov eax, r12d	       996	loop.c	FUNCTION_38
0x4000231	              0x5b	                                 pop rbx	       996	loop.c	FUNCTION_38
0x4000232	              0x5d	                                 pop rbp	       996	loop.c	FUNCTION_38
0x4000233	            0x415c	                                 pop r12	       996	loop.c	FUNCTION_38
0x4000235	              0xc3	                                     ret	       996	loop.c	FUNCTION_38
figure_loop_size	IF,3:WHILE,0:functions,0:FOR,0:SWITCH,0:DO,0:CALL,6:ELSE,0	39
0x40005d0	              0x53	                                push rbx	       228	loop.c	FUNCTION_6
0x40005d1	    0x488b87f00000	            mov rax, qword [rdi + 0xf0] 	       228	loop.c	FUNCTION_6
0x40005d8	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       146	loop.c	FUNCTION_3	CALL_1
0x40005df	          0x488b00	                    mov rax, qword [rax]	       146	loop.c	FUNCTION_3	CALL_1
0x40005e2	        0x488b4050	            mov rax, qword [rax + 0x50] 	       146	loop.c	FUNCTION_3	CALL_1
0x40005e6	          0x4889c1	                            mov rcx, rax	       148	loop.c	FUNCTION_3	IF_1
0x40005e9	          0x4829f1	                            sub rcx, rsi	       148	loop.c	FUNCTION_3	IF_1
0x40005ec	          0x4885f6	                           test rsi, rsi	       148	loop.c	FUNCTION_3	IF_1
0x40005ef	        0x480f4fc1	                          cmovg rax, rcx	       148	loop.c	FUNCTION_3	IF_1
0x40005f3	            0x31c9	                            xor ecx, ecx	       148	loop.c	FUNCTION_3	IF_1
0x40005f5	          0x4885c0	                           test rax, rax	       150	loop.c	FUNCTION_3	IF_2
0x40005f8	            0x7813	                            js 0x400060d	       150	loop.c	FUNCTION_3	IF_2
0x40005fa	          0x4885d2	                           test rdx, rdx	       153	loop.c	FUNCTION_3	IF_3
0x40005fd	            0x7e07	                           jle 0x4000606	       153	loop.c	FUNCTION_3	IF_3
0x40005ff	          0x4839c2	                            cmp rdx, rax	       153	loop.c	FUNCTION_3	IF_3
0x4000602	        0x480f4cc2	                          cmovl rax, rdx	       153	loop.c	FUNCTION_3	IF_3
0x4000606	        0x48c1f809	                              sar rax, 9	       153	loop.c	FUNCTION_3	IF_3
0x400060a	          0x4889c1	                            mov rcx, rax	       153	loop.c	FUNCTION_3	IF_3
0x400060d	        0x483b7708	                cmp rsi, qword [rdi + 8]	       235	loop.c	FUNCTION_6	IF_2
0x4000611	    0x488b9ff80000	            mov rbx, qword [rdi + 0xf8] 	       231	loop.c	FUNCTION_6
0x4000618	            0x7404	                            je 0x400061e	       235	loop.c	FUNCTION_6	IF_2
0x400061a	        0x48897708	                mov qword [rdi + 8], rsi	       236	loop.c	FUNCTION_6	IF_2
0x400061e	        0x483b5710	            cmp rdx, qword [rdi + 0x10] 	       237	loop.c	FUNCTION_6	IF_3
0x4000622	            0x7404	                            je 0x4000628	       237	loop.c	FUNCTION_6	IF_3
0x4000624	        0x48895710	             mov qword [rdi + 0x10], rdx	       238	loop.c	FUNCTION_6	IF_3
0x4000628	    0x488b87f80100	           mov rax, qword [rdi + 0x1f8] 	       239	loop.c	FUNCTION_6	CALL_3
0x400062f	          0x4889df	                            mov rdi, rbx	       240	loop.c	FUNCTION_6	CALL_5
0x4000632	        0x48894850	             mov qword [rax + 0x50], rcx	       438	genhd.h	FUNCTION_160
0x4000636	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	       438	genhd.h	FUNCTION_160
0x400063d	        0x488b7050	            mov rsi, qword [rax + 0x50] 	       240	loop.c	FUNCTION_6	CALL_5
0x4000641	        0x48c1e609	                              shl rsi, 9	       240	loop.c	FUNCTION_6	CALL_5
0x4000645	      0xe800000000	                          call 0x400064a	       240	loop.c	FUNCTION_6	CALL_5
0x400064a	    0x488bbb800000	            mov rdi, qword [rbx + 0x80] 	       242	loop.c	FUNCTION_6	CALL_6
0x4000651	      0xbe02000000	                              mov esi, 2	       242	loop.c	FUNCTION_6	CALL_6
0x4000656	        0x4883ef80	             sub rdi, 0xffffffffffffff80	       242	loop.c	FUNCTION_6	CALL_6
0x400065a	      0xe800000000	                          call 0x400065f	       242	loop.c	FUNCTION_6	CALL_6
0x400065f	            0x31c0	                            xor eax, eax	       244	loop.c	FUNCTION_6
0x4000661	              0x5b	                                 pop rbx	       244	loop.c	FUNCTION_6
0x4000662	              0xc3	                                     ret	       244	loop.c	FUNCTION_6
loop_probe	IF,2:WHILE,0:functions,0:FOR,0:SWITCH,0:DO,0:CALL,7:ELSE,1	43
0x4002a60	              0x55	                                push rbp	      1961	loop.c	FUNCTION_72
0x4002a61	              0x53	                                push rbx	      1961	loop.c	FUNCTION_72
0x4002a62	            0x89fb	                            mov ebx, edi	      1961	loop.c	FUNCTION_72
0x4002a64	    0x48c7c7000000	                              mov rdi, 0	      1966	loop.c	FUNCTION_72	CALL_1
0x4002a6b	          0x4889f5	                            mov rbp, rsi	      1961	loop.c	FUNCTION_72
0x4002a6e	    0x81e3ffff0f00	                        and ebx, 0xfffff	      1967	loop.c	FUNCTION_72	CALL_3
0x4002a74	        0x4883ec10	                           sub rsp, 0x10	      1961	loop.c	FUNCTION_72
0x4002a78	    0x65488b042528	                mov rax, qword gs:[0x28]	      1961	loop.c	FUNCTION_72
0x4002a81	      0x4889442408	                mov qword [rsp + 8], rax	      1961	loop.c	FUNCTION_72
0x4002a86	            0x31c0	                            xor eax, eax	      1961	loop.c	FUNCTION_72
0x4002a88	      0xe800000000	                          call 0x4002a8d	      1966	loop.c	FUNCTION_72	CALL_1
0x4002a8d	    0x8b0d00000000	            mov ecx, dword [0x04002a93] 	      1967	loop.c	FUNCTION_72	CALL_3
0x4002a93	            0x89de	                            mov esi, ebx	      1967	loop.c	FUNCTION_72	CALL_3
0x4002a95	          0x4889e7	                            mov rdi, rsp	      1967	loop.c	FUNCTION_72	CALL_3
0x4002a98	            0xd3ee	                             shr esi, cl	      1967	loop.c	FUNCTION_72	CALL_3
0x4002a9a	      0xe881fbffff	                    call sym.loop_lookup	      1967	loop.c	FUNCTION_72	CALL_3
0x4002a9f	            0x85c0	                           test eax, eax	      1968	loop.c	FUNCTION_72	IF_1
0x4002aa1	            0x7840	                            js 0x4002ae3	      1968	loop.c	FUNCTION_72	IF_1
0x4002aa3	        0x488b0424	                    mov rax, qword [rsp]	      1973	loop.c	FUNCTION_72	CALL_6
0x4002aa7	    0x488bb8f80100	           mov rdi, qword [rax + 0x1f8] 	      1973	loop.c	FUNCTION_72	CALL_6
0x4002aae	      0xe800000000	                          call 0x4002ab3	      1973	loop.c	FUNCTION_72	CALL_6
0x4002ab3	          0x4889c3	                            mov rbx, rax	      1973	loop.c	FUNCTION_72	CALL_6
0x4002ab6	    0x48c7c7000000	                              mov rdi, 0	      1974	loop.c	FUNCTION_72	CALL_7
0x4002abd	      0xe800000000	                          call 0x4002ac2	      1974	loop.c	FUNCTION_72	CALL_7
0x4002ac2	      0x488b542408	                mov rdx, qword [rsp + 8]	      1978	loop.c	FUNCTION_72
0x4002ac7	    0x654833142528	                xor rdx, qword gs:[0x28]	      1978	loop.c	FUNCTION_72
0x4002ad0	    0xc74500000000	                      mov dword [rbp], 0	      1976	loop.c	FUNCTION_72
0x4002ad7	          0x4889d8	                            mov rax, rbx	      1978	loop.c	FUNCTION_72
0x4002ada	            0x7521	                           jne 0x4002afd	      1978	loop.c	FUNCTION_72
0x4002adc	        0x4883c410	                           add rsp, 0x10	      1978	loop.c	FUNCTION_72
0x4002ae0	              0x5b	                                 pop rbx	      1978	loop.c	FUNCTION_72
0x4002ae1	              0x5d	                                 pop rbp	      1978	loop.c	FUNCTION_72
0x4002ae2	              0xc3	                                     ret	      1978	loop.c	FUNCTION_72
0x4002ae3	    0x8b0d00000000	            mov ecx, dword [0x04002ae9] 	      1969	loop.c	FUNCTION_72	CALL_5
0x4002ae9	          0x4889e7	                            mov rdi, rsp	      1969	loop.c	FUNCTION_72	CALL_5
0x4002aec	            0xd3eb	                             shr ebx, cl	      1969	loop.c	FUNCTION_72	CALL_5
0x4002aee	            0x89de	                            mov esi, ebx	      1969	loop.c	FUNCTION_72	CALL_5
0x4002af0	      0xe8bbfbffff	                       call sym.loop_add	      1969	loop.c	FUNCTION_72	CALL_5
0x4002af5	            0x85c0	                           test eax, eax	      1970	loop.c	FUNCTION_72	IF_2
0x4002af7	            0x79aa	                           jns 0x4002aa3	      1970	loop.c	FUNCTION_72	IF_2
0x4002af9	            0x31db	                            xor ebx, ebx	      1971	loop.c	FUNCTION_72	IF_2
0x4002afb	            0xebb9	                           jmp 0x4002ab6	      1971	loop.c	FUNCTION_72	IF_2
0x4002afd	      0xe800000000	                          call 0x4002b02	      1978	loop.c	FUNCTION_72
loop_get_status	IF,3:WHILE,0:functions,0:FOR,0:SWITCH,0:DO,0:CALL,12:ELSE,0	131
0x4000e80	            0x4154	                                push r12	      1197	loop.c	FUNCTION_42
0x4000e82	              0x55	                                push rbp	      1197	loop.c	FUNCTION_42
0x4000e83	              0x53	                                push rbx	      1197	loop.c	FUNCTION_42
0x4000e84	          0x4889fb	                            mov rbx, rdi	      1197	loop.c	FUNCTION_42
0x4000e87	    0x4881ec900000	                           sub rsp, 0x90	      1197	loop.c	FUNCTION_42
0x4000e8e	    0x65488b042528	                mov rax, qword gs:[0x28]	      1197	loop.c	FUNCTION_42
0x4000e97	    0x488984248800	             mov qword [rsp + 0x88], rax	      1197	loop.c	FUNCTION_42
0x4000e9f	            0x31c0	                            xor eax, eax	      1197	loop.c	FUNCTION_42
0x4000ea1	    0x83bf10010000	              cmp dword [rdi + 0x110], 1	      1202	loop.c	FUNCTION_42	IF_1
0x4000ea8	     0xf85e6010000	                           jne 0x4001094	      1202	loop.c	FUNCTION_42	IF_1
0x4000eae	            0x31c0	                            xor eax, eax	      1207	loop.c	FUNCTION_42	CALL_2
0x4000eb0	      0xb91d000000	                           mov ecx, 0x1d	      1207	loop.c	FUNCTION_42	CALL_2
0x4000eb5	          0x4889f7	                            mov rdi, rsi	      1207	loop.c	FUNCTION_42	CALL_2
0x4000eb8	          0xf348ab	              rep stosq qword [rdi], rax	      1207	loop.c	FUNCTION_42	CALL_2
0x4000ebb	          0x4889f5	                            mov rbp, rsi	      1207	loop.c	FUNCTION_42	CALL_2
0x4000ebe	            0x8b03	                    mov eax, dword [rbx]	      1208	loop.c	FUNCTION_42
0x4000ec0	          0x894628	             mov dword [rsi + 0x28], eax	      1208	loop.c	FUNCTION_42
0x4000ec3	        0x488b4308	                mov rax, qword [rbx + 8]	      1209	loop.c	FUNCTION_42
0x4000ec7	        0x48894618	             mov qword [rsi + 0x18], rax	      1209	loop.c	FUNCTION_42
0x4000ecb	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1210	loop.c	FUNCTION_42
0x4000ecf	        0x48894620	             mov qword [rsi + 0x20], rax	      1210	loop.c	FUNCTION_42
0x4000ed3	          0x8b4318	            mov eax, dword [rbx + 0x18] 	      1211	loop.c	FUNCTION_42
0x4000ed6	          0x894634	             mov dword [rsi + 0x34], eax	      1211	loop.c	FUNCTION_42
0x4000ed9	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      1212	loop.c	FUNCTION_42	CALL_3
0x4000edd	        0x48894e38	             mov qword [rsi + 0x38], rcx	      1212	loop.c	FUNCTION_42	CALL_3
0x4000ee1	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	      1212	loop.c	FUNCTION_42	CALL_3
0x4000ee5	        0x48894e40	             mov qword [rsi + 0x40], rcx	      1212	loop.c	FUNCTION_42	CALL_3
0x4000ee9	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	      1212	loop.c	FUNCTION_42	CALL_3
0x4000eed	        0x48894e48	             mov qword [rsi + 0x48], rcx	      1212	loop.c	FUNCTION_42	CALL_3
0x4000ef1	        0x488b4b40	            mov rcx, qword [rbx + 0x40] 	      1212	loop.c	FUNCTION_42	CALL_3
0x4000ef5	        0x48894e50	             mov qword [rsi + 0x50], rcx	      1212	loop.c	FUNCTION_42	CALL_3
0x4000ef9	        0x488b4b48	            mov rcx, qword [rbx + 0x48] 	      1212	loop.c	FUNCTION_42	CALL_3
0x4000efd	        0x48894e58	             mov qword [rsi + 0x58], rcx	      1212	loop.c	FUNCTION_42	CALL_3
0x4000f01	        0x488b4b50	            mov rcx, qword [rbx + 0x50] 	      1212	loop.c	FUNCTION_42	CALL_3
0x4000f05	        0x48894e60	             mov qword [rsi + 0x60], rcx	      1212	loop.c	FUNCTION_42	CALL_3
0x4000f09	        0x488b4b58	            mov rcx, qword [rbx + 0x58] 	      1212	loop.c	FUNCTION_42	CALL_3
0x4000f0d	        0x48894e68	             mov qword [rsi + 0x68], rcx	      1212	loop.c	FUNCTION_42	CALL_3
0x4000f11	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      1212	loop.c	FUNCTION_42	CALL_3
0x4000f15	        0x48895670	             mov qword [rsi + 0x70], rdx	      1212	loop.c	FUNCTION_42	CALL_3
0x4000f19	        0x488b4b68	            mov rcx, qword [rbx + 0x68] 	      1213	loop.c	FUNCTION_42	CALL_4
0x4000f1d	        0x48894e78	             mov qword [rsi + 0x78], rcx	      1213	loop.c	FUNCTION_42	CALL_4
0x4000f21	        0x488b4b70	            mov rcx, qword [rbx + 0x70] 	      1213	loop.c	FUNCTION_42	CALL_4
0x4000f25	    0x48898e800000	             mov qword [rsi + 0x80], rcx	      1213	loop.c	FUNCTION_42	CALL_4
0x4000f2c	        0x488b4b78	            mov rcx, qword [rbx + 0x78] 	      1213	loop.c	FUNCTION_42	CALL_4
0x4000f30	    0x48898e880000	             mov qword [rsi + 0x88], rcx	      1213	loop.c	FUNCTION_42	CALL_4
0x4000f37	    0x488b8b800000	            mov rcx, qword [rbx + 0x80] 	      1213	loop.c	FUNCTION_42	CALL_4
0x4000f3e	    0x48898e900000	             mov qword [rsi + 0x90], rcx	      1213	loop.c	FUNCTION_42	CALL_4
0x4000f45	    0x488b8b880000	            mov rcx, qword [rbx + 0x88] 	      1213	loop.c	FUNCTION_42	CALL_4
0x4000f4c	    0x48898e980000	             mov qword [rsi + 0x98], rcx	      1213	loop.c	FUNCTION_42	CALL_4
0x4000f53	    0x488b8b900000	            mov rcx, qword [rbx + 0x90] 	      1213	loop.c	FUNCTION_42	CALL_4
0x4000f5a	    0x48898ea00000	             mov qword [rsi + 0xa0], rcx	      1213	loop.c	FUNCTION_42	CALL_4
0x4000f61	    0x488b8b980000	            mov rcx, qword [rbx + 0x98] 	      1213	loop.c	FUNCTION_42	CALL_4
0x4000f68	    0x48898ea80000	             mov qword [rsi + 0xa8], rcx	      1213	loop.c	FUNCTION_42	CALL_4
0x4000f6f	    0x488b93a00000	            mov rdx, qword [rbx + 0xa0] 	      1213	loop.c	FUNCTION_42	CALL_4
0x4000f76	    0x488996b00000	             mov qword [rsi + 0xb0], rdx	      1213	loop.c	FUNCTION_42	CALL_4
0x4000f7d	    0x488b83d00000	            mov rax, qword [rbx + 0xd0] 	      1215	loop.c	FUNCTION_42
0x4000f84	          0x4885c0	                           test rax, rax	      1214	loop.c	FUNCTION_42
0x4000f87	     0xf8400010000	                            je 0x400108d	      1214	loop.c	FUNCTION_42
0x4000f8d	            0x8b00	                    mov eax, dword [rax]	      1214	loop.c	FUNCTION_42
0x4000f8f	          0x89452c	            mov dword [rbp + 0x2c], eax 	      1214	loop.c	FUNCTION_42
0x4000f92	    0x8b83c8000000	            mov eax, dword [rbx + 0xc8] 	      1216	loop.c	FUNCTION_42	IF_2	CALL_5
0x4000f98	            0x85c0	                           test eax, eax	      1216	loop.c	FUNCTION_42	IF_2	CALL_5
0x4000f9a	     0xf85b3000000	                           jne 0x4001053	      1216	loop.c	FUNCTION_42	IF_2	CALL_5
0x4000fa0	    0x4c8ba3f00000	            mov r12, qword [rbx + 0xf0] 	      1223	loop.c	FUNCTION_42	CALL_7
0x4000fa7	    0xf049ff442438	             lock inc qword [r12 + 0x38]	        87	atomic64_64.h	FUNCTION_178
0x4000fad	    0x488dbb180100	                  lea rdi, [rbx + 0x118]	      1224	loop.c	FUNCTION_42	CALL_8
0x4000fb4	      0xe800000000	                          call 0x4000fb9	      1224	loop.c	FUNCTION_42	CALL_8
0x4000fb9	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	      1225	loop.c	FUNCTION_42	CALL_9
0x4000fbe	            0x31c9	                            xor ecx, ecx	      1225	loop.c	FUNCTION_42	CALL_9
0x4000fc0	      0xba00010000	                          mov edx, 0x100	      1225	loop.c	FUNCTION_42	CALL_9
0x4000fc5	          0x4889e6	                            mov rsi, rsp	      1225	loop.c	FUNCTION_42	CALL_9
0x4000fc8	      0xe800000000	                          call 0x4000fcd	      1225	loop.c	FUNCTION_42	CALL_9
0x4000fcd	            0x85c0	                           test eax, eax	      1227	loop.c	FUNCTION_42	IF_3
0x4000fcf	            0x89c3	                            mov ebx, eax	      1225	loop.c	FUNCTION_42	CALL_9
0x4000fd1	            0x742d	                            je 0x4001000	      1227	loop.c	FUNCTION_42	IF_3
0x4000fd3	          0x4c89e7	                            mov rdi, r12	      1232	loop.c	FUNCTION_42	CALL_12
0x4000fd6	      0xe800000000	                          call 0x4000fdb	      1232	loop.c	FUNCTION_42	CALL_12
0x4000fdb	            0x89d8	                            mov eax, ebx	      1225	loop.c	FUNCTION_42	CALL_9
0x4000fdd	    0x488bb4248800	            mov rsi, qword [rsp + 0x88] 	      1234	loop.c	FUNCTION_42
0x4000fe5	    0x654833342528	                xor rsi, qword gs:[0x28]	      1234	loop.c	FUNCTION_42
0x4000fee	     0xf85b6000000	                           jne 0x40010aa	      1234	loop.c	FUNCTION_42
0x4000ff4	    0x4881c4900000	                           add rsp, 0x90	      1234	loop.c	FUNCTION_42
0x4000ffb	              0x5b	                                 pop rbx	      1234	loop.c	FUNCTION_42
0x4000ffc	              0x5d	                                 pop rbp	      1234	loop.c	FUNCTION_42
0x4000ffd	            0x415c	                                 pop r12	      1234	loop.c	FUNCTION_42
0x4000fff	              0xc3	                                     ret	      1234	loop.c	FUNCTION_42
0x4001000	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      1228	loop.c	FUNCTION_42	IF_3	CALL_10
0x4001004	            0x89c1	                            mov ecx, eax	      1228	loop.c	FUNCTION_42	IF_3	CALL_10
0x4001006	            0x89c2	                            mov edx, eax	      1228	loop.c	FUNCTION_42	IF_3	CALL_10
0x4001008	          0xc1e914	                           shr ecx, 0x14	      1228	loop.c	FUNCTION_42	IF_3	CALL_10
0x400100b	    0x81e200ff0f00	                        and edx, 0xfff00	      1228	loop.c	FUNCTION_42	IF_3	CALL_10
0x4001011	          0xc1e20c	                            shl edx, 0xc	      1228	loop.c	FUNCTION_42	IF_3	CALL_10
0x4001014	          0xc1e108	                              shl ecx, 8	      1228	loop.c	FUNCTION_42	IF_3	CALL_10
0x4001017	             0x9d1	                             or ecx, edx	      1228	loop.c	FUNCTION_42	IF_3	CALL_10
0x4001019	           0xfb6d0	                           movzx edx, al	      1228	loop.c	FUNCTION_42	IF_3	CALL_10
0x400101c	            0x89c8	                            mov eax, ecx	      1228	loop.c	FUNCTION_42	IF_3	CALL_10
0x400101e	             0x9d0	                             or eax, edx	      1228	loop.c	FUNCTION_42	IF_3	CALL_10
0x4001020	        0x48894500	                    mov qword [rbp], rax	      1228	loop.c	FUNCTION_42	IF_3	CALL_10
0x4001024	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1229	loop.c	FUNCTION_42	IF_3
0x4001029	        0x48894508	                mov qword [rbp + 8], rax	      1229	loop.c	FUNCTION_42	IF_3
0x400102d	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      1230	loop.c	FUNCTION_42	IF_3	CALL_11
0x4001031	            0x89c1	                            mov ecx, eax	      1230	loop.c	FUNCTION_42	IF_3	CALL_11
0x4001033	            0x89c2	                            mov edx, eax	      1230	loop.c	FUNCTION_42	IF_3	CALL_11
0x4001035	          0xc1e914	                           shr ecx, 0x14	      1230	loop.c	FUNCTION_42	IF_3	CALL_11
0x4001038	    0x81e200ff0f00	                        and edx, 0xfff00	      1230	loop.c	FUNCTION_42	IF_3	CALL_11
0x400103e	          0xc1e20c	                            shl edx, 0xc	      1230	loop.c	FUNCTION_42	IF_3	CALL_11
0x4001041	          0xc1e108	                              shl ecx, 8	      1230	loop.c	FUNCTION_42	IF_3	CALL_11
0x4001044	             0x9d1	                             or ecx, edx	      1230	loop.c	FUNCTION_42	IF_3	CALL_11
0x4001046	           0xfb6d0	                           movzx edx, al	      1230	loop.c	FUNCTION_42	IF_3	CALL_11
0x4001049	            0x89c8	                            mov eax, ecx	      1230	loop.c	FUNCTION_42	IF_3	CALL_11
0x400104b	             0x9d0	                             or eax, edx	      1230	loop.c	FUNCTION_42	IF_3	CALL_11
0x400104d	        0x48894510	            mov qword [rbp + 0x10], rax 	      1230	loop.c	FUNCTION_42	IF_3	CALL_11
0x4001051	            0xeb80	                           jmp 0x4000fd3	      1230	loop.c	FUNCTION_42	IF_3	CALL_11
0x4001053	      0xbf15000000	                           mov edi, 0x15	      1216	loop.c	FUNCTION_42	IF_2	CALL_5
0x4001058	      0xe800000000	                          call 0x400105d	      1216	loop.c	FUNCTION_42	IF_2	CALL_5
0x400105d	            0x84c0	                             test al, al	      1216	loop.c	FUNCTION_42	IF_2	CALL_5
0x400105f	     0xf843bffffff	                            je 0x4000fa0	      1216	loop.c	FUNCTION_42	IF_2	CALL_5
0x4001065	    0x8b83c8000000	            mov eax, dword [rbx + 0xc8] 	      1217	loop.c	FUNCTION_42	IF_2
0x400106b	    0x488dbdb80000	                   lea rdi, [rbp + 0xb8]	      1218	loop.c	FUNCTION_42	IF_2	CALL_6
0x4001072	    0x488db3a80000	                   lea rsi, [rbx + 0xa8]	      1218	loop.c	FUNCTION_42	IF_2	CALL_6
0x4001079	          0x894530	            mov dword [rbp + 0x30], eax 	      1217	loop.c	FUNCTION_42	IF_2
0x400107c	    0x486393c80000	         movsxd rdx, dword [rbx + 0xc8] 	      1218	loop.c	FUNCTION_42	IF_2	CALL_6
0x4001083	      0xe800000000	                          call 0x4001088	      1218	loop.c	FUNCTION_42	IF_2	CALL_6
0x4001088	      0xe913ffffff	                           jmp 0x4000fa0	      1218	loop.c	FUNCTION_42	IF_2	CALL_6
0x400108d	            0x31c0	                            xor eax, eax	      1214	loop.c	FUNCTION_42
0x400108f	      0xe9fbfeffff	                           jmp 0x4000f8f	      1214	loop.c	FUNCTION_42
0x4001094	    0x488dbf180100	                  lea rdi, [rdi + 0x118]	      1203	loop.c	FUNCTION_42	IF_1	CALL_1
0x400109b	      0xe800000000	                          call 0x40010a0	      1203	loop.c	FUNCTION_42	IF_1	CALL_1
0x40010a0	      0xb8faffffff	                     mov eax, 0xfffffffa	      1204	loop.c	FUNCTION_42	IF_1
0x40010a5	      0xe933ffffff	                           jmp 0x4000fdd	      1204	loop.c	FUNCTION_42	IF_1
0x40010aa	      0xe800000000	                          call 0x40010af	      1234	loop.c	FUNCTION_42
lo_compat_ioctl	IF,2:WHILE,0:functions,0:FOR,0:SWITCH,1:DO,0:CALL,7:ELSE,0	48
0x4002200	              0x55	                                push rbp	      1576	loop.c	FUNCTION_57
0x4002201	              0x53	                                push rbx	      1576	loop.c	FUNCTION_57
0x4002202	        0x4883ec08	                              sub rsp, 8	      1576	loop.c	FUNCTION_57
0x4002206	    0x488b87800000	            mov rax, qword [rdi + 0x80] 	      1577	loop.c	FUNCTION_57
0x400220d	    0x488b98c80300	           mov rbx, qword [rax + 0x3c8] 	      1577	loop.c	FUNCTION_57
0x4002214	    0x8d8200b4ffff	                 lea eax, [rdx - 0x4c00]	      1580	loop.c	FUNCTION_57	SWITCH_1
0x400221a	          0x83f807	                              cmp eax, 7	      1580	loop.c	FUNCTION_57	SWITCH_1
0x400221d	     0xf8780000000	                            ja 0x40022a3	      1580	loop.c	FUNCTION_57	SWITCH_1
0x4002223	    0x488b04c50000	                  mov rax, qword [rax*8]	      1580	loop.c	FUNCTION_57	SWITCH_1
0x400222b	      0xe900000000	                           jmp 0x4002230	      1580	loop.c	FUNCTION_57	SWITCH_1
0x4002230	            0x89c9	                            mov ecx, ecx	      1580	loop.c	FUNCTION_57	SWITCH_1
0x4002232	        0x4883c408	                              add rsp, 8	      1611	loop.c	FUNCTION_57
0x4002236	              0x5b	                                 pop rbx	      1611	loop.c	FUNCTION_57
0x4002237	              0x5d	                                 pop rbp	      1611	loop.c	FUNCTION_57
0x4002238	      0xe983f7ffff	                        jmp sym.lo_ioctl	      1604	loop.c	FUNCTION_57	SWITCH_1	CALL_7
0x400223d	    0x488dbb180100	                  lea rdi, [rbx + 0x118]	      1590	loop.c	FUNCTION_57	SWITCH_1	CALL_4
0x4002244	        0x48890c24	                    mov qword [rsp], rcx	      1590	loop.c	FUNCTION_57	SWITCH_1	CALL_4
0x4002248	      0xe800000000	                          call 0x400224d	      1590	loop.c	FUNCTION_57	SWITCH_1	CALL_4
0x400224d	            0x85c0	                           test eax, eax	      1591	loop.c	FUNCTION_57	SWITCH_1	IF_2
0x400224f	        0x488b0c24	                    mov rcx, qword [rsp]	      1591	loop.c	FUNCTION_57	SWITCH_1	IF_2
0x4002253	            0x743d	                            je 0x4002292	      1591	loop.c	FUNCTION_57	SWITCH_1	IF_2
0x4002255	        0x4883c408	                              add rsp, 8	      1611	loop.c	FUNCTION_57
0x4002259	              0x5b	                                 pop rbx	      1611	loop.c	FUNCTION_57
0x400225a	              0x5d	                                 pop rbp	      1611	loop.c	FUNCTION_57
0x400225b	              0xc3	                                     ret	      1611	loop.c	FUNCTION_57
0x400225c	    0x488dab180100	                  lea rbp, [rbx + 0x118]	      1582	loop.c	FUNCTION_57	SWITCH_1	CALL_1
0x4002263	        0x48890c24	                    mov qword [rsp], rcx	      1582	loop.c	FUNCTION_57	SWITCH_1	CALL_1
0x4002267	          0x4889ef	                            mov rdi, rbp	      1582	loop.c	FUNCTION_57	SWITCH_1	CALL_1
0x400226a	      0xe800000000	                          call 0x400226f	      1582	loop.c	FUNCTION_57	SWITCH_1	CALL_1
0x400226f	            0x85c0	                           test eax, eax	      1583	loop.c	FUNCTION_57	SWITCH_1	IF_1
0x4002271	        0x488b0c24	                    mov rcx, qword [rsp]	      1583	loop.c	FUNCTION_57	SWITCH_1	IF_1
0x4002275	            0x75de	                           jne 0x4002255	      1583	loop.c	FUNCTION_57	SWITCH_1	IF_1
0x4002277	          0x4889ce	                            mov rsi, rcx	      1584	loop.c	FUNCTION_57	SWITCH_1	IF_1	CALL_2
0x400227a	          0x4889df	                            mov rdi, rbx	      1584	loop.c	FUNCTION_57	SWITCH_1	IF_1	CALL_2
0x400227d	      0xe81ee9ffff	         call sym.loop_set_status_compat	      1584	loop.c	FUNCTION_57	SWITCH_1	IF_1	CALL_2
0x4002282	          0x4889ef	                            mov rdi, rbp	      1586	loop.c	FUNCTION_57	SWITCH_1	IF_1	CALL_3
0x4002285	          0x890424	                    mov dword [rsp], eax	      1584	loop.c	FUNCTION_57	SWITCH_1	IF_1	CALL_2
0x4002288	      0xe800000000	                          call 0x400228d	      1586	loop.c	FUNCTION_57	SWITCH_1	IF_1	CALL_3
0x400228d	          0x8b0424	                    mov eax, dword [rsp]	      1586	loop.c	FUNCTION_57	SWITCH_1	IF_1	CALL_3
0x4002290	            0xebc3	                           jmp 0x4002255	      1586	loop.c	FUNCTION_57	SWITCH_1	IF_1	CALL_3
0x4002292	        0x4883c408	                              add rsp, 8	      1611	loop.c	FUNCTION_57
0x4002296	          0x4889df	                            mov rdi, rbx	      1592	loop.c	FUNCTION_57	SWITCH_1	IF_2	CALL_5
0x4002299	          0x4889ce	                            mov rsi, rcx	      1592	loop.c	FUNCTION_57	SWITCH_1	IF_2	CALL_5
0x400229c	              0x5b	                                 pop rbx	      1611	loop.c	FUNCTION_57
0x400229d	              0x5d	                                 pop rbp	      1611	loop.c	FUNCTION_57
0x400229e	      0xe91df0ffff	          jmp sym.loop_get_status_compat	      1592	loop.c	FUNCTION_57	SWITCH_1	IF_2	CALL_5
0x40022a3	      0xb8fdfdffff	                     mov eax, 0xfffffdfd	      1607	loop.c	FUNCTION_57	SWITCH_1
0x40022a8	            0xebab	                           jmp 0x4002255	      1607	loop.c	FUNCTION_57	SWITCH_1
lo_complete_rq	IF,4:WHILE,1:functions,0:FOR,0:SWITCH,0:DO,0:CALL,7:ELSE,1	52
0x4002490	              0x55	                                push rbp	       452	loop.c	FUNCTION_15
0x4002491	              0x53	                                push rbx	       452	loop.c	FUNCTION_15
0x4002492	          0x4889fb	                            mov rbx, rdi	       452	loop.c	FUNCTION_15
0x4002495	    0x80bf50010000	               cmp byte [rdi + 0x150], 0	       456	loop.c	FUNCTION_15	IF_1	CALL_2
0x400249c	            0x7455	                            je 0x40024f3	       456	loop.c	FUNCTION_15	IF_1	CALL_2
0x400249e	    0x488b97580100	           mov rdx, qword [rdi + 0x158] 	       456	loop.c	FUNCTION_15	IF_1	CALL_2
0x40024a5	          0x4885d2	                           test rdx, rdx	       456	loop.c	FUNCTION_15	IF_1	CALL_2
0x40024a8	            0x783a	                            js 0x40024e4	       456	loop.c	FUNCTION_15	IF_1	CALL_2
0x40024aa	          0x8b4720	            mov eax, dword [rdi + 0x20] 	       456	loop.c	FUNCTION_15	IF_1	CALL_2
0x40024ad	          0x4839c2	                            cmp rdx, rax	       456	loop.c	FUNCTION_15	IF_1	CALL_2
0x40024b0	            0x7457	                            je 0x4002509	       456	loop.c	FUNCTION_15	IF_1	CALL_2
0x40024b2	        0x807f1400	                cmp byte [rdi + 0x14], 0	       456	loop.c	FUNCTION_15	IF_1	CALL_2
0x40024b6	            0x7551	                           jne 0x4002509	       456	loop.c	FUNCTION_15	IF_1	CALL_2
0x40024b8	          0x4885d2	                           test rdx, rdx	       467	loop.c	FUNCTION_15	IF_3
0x40024bb	            0x7558	                           jne 0x4002515	       467	loop.c	FUNCTION_15	IF_3
0x40024bd	        0x488b6f30	            mov rbp, qword [rdi + 0x30] 	       473	loop.c	FUNCTION_15	ELSE_1	IF_4
0x40024c1	          0x4885ed	                           test rbp, rbp	       475	loop.c	FUNCTION_15	ELSE_1	IF_4	WHILE_1
0x40024c4	            0x741e	                            je 0x40024e4	       475	loop.c	FUNCTION_15	ELSE_1	IF_4	WHILE_1
0x40024c6	          0xff7538	                 push qword [rbp + 0x38]	       521	bio.h	FUNCTION_108	CALL_1
0x40024c9	          0xff7530	                 push qword [rbp + 0x30]	       521	bio.h	FUNCTION_108	CALL_1
0x40024cc	          0x4889ef	                            mov rdi, rbp	       521	bio.h	FUNCTION_108	CALL_1
0x40024cf	          0xff7528	                 push qword [rbp + 0x28]	       521	bio.h	FUNCTION_108	CALL_1
0x40024d2	      0xe800000000	                          call 0x40024d7	       521	bio.h	FUNCTION_108	CALL_1
0x40024d7	        0x488b6d00	                    mov rbp, qword [rbp]	       477	loop.c	FUNCTION_15	ELSE_1	IF_4	WHILE_1
0x40024db	        0x4883c418	                           add rsp, 0x18	       475	loop.c	FUNCTION_15	ELSE_1	IF_4	WHILE_1
0x40024df	          0x4885ed	                           test rbp, rbp	       475	loop.c	FUNCTION_15	ELSE_1	IF_4	WHILE_1
0x40024e2	            0x75e2	                           jne 0x40024c6	       475	loop.c	FUNCTION_15	ELSE_1	IF_4	WHILE_1
0x40024e4	          0x4889df	                            mov rdi, rbx	       482	loop.c	FUNCTION_15	ELSE_1	CALL_7
0x40024e7	      0xbe0a000000	                            mov esi, 0xa	       452	loop.c	FUNCTION_15
0x40024ec	              0x5b	                                 pop rbx	       484	loop.c	FUNCTION_15
0x40024ed	              0x5d	                                 pop rbp	       484	loop.c	FUNCTION_15
0x40024ee	      0xe900000000	                           jmp 0x40024f3	       482	loop.c	FUNCTION_15	ELSE_1	CALL_7
0x40024f3	            0x31f6	                            xor esi, esi	       482	loop.c	FUNCTION_15	ELSE_1	CALL_7
0x40024f5	    0x4883bf580100	              cmp qword [rdi + 0x158], 0	       458	loop.c	FUNCTION_15	IF_1	IF_2
0x40024fd	            0x78e5	                            js 0x40024e4	       458	loop.c	FUNCTION_15	IF_1	IF_2
0x40024ff	          0x4889df	                            mov rdi, rbx	       482	loop.c	FUNCTION_15	ELSE_1	CALL_7
0x4002502	              0x5b	                                 pop rbx	       484	loop.c	FUNCTION_15
0x4002503	              0x5d	                                 pop rbp	       484	loop.c	FUNCTION_15
0x4002504	      0xe900000000	                           jmp 0x4002509	       482	loop.c	FUNCTION_15	ELSE_1	CALL_7
0x4002509	          0x4889df	                            mov rdi, rbx	       482	loop.c	FUNCTION_15	ELSE_1	CALL_7
0x400250c	            0x31f6	                            xor esi, esi	       482	loop.c	FUNCTION_15	ELSE_1	CALL_7
0x400250e	              0x5b	                                 pop rbx	       484	loop.c	FUNCTION_15
0x400250f	              0x5d	                                 pop rbp	       484	loop.c	FUNCTION_15
0x4002510	      0xe900000000	                           jmp 0x4002515	       482	loop.c	FUNCTION_15	ELSE_1	CALL_7
0x4002515	            0x31f6	                            xor esi, esi	       468	loop.c	FUNCTION_15	IF_3	CALL_4
0x4002517	      0xe800000000	                          call 0x400251c	       468	loop.c	FUNCTION_15	IF_3	CALL_4
0x400251c	    0x48c783580100	              mov qword [rbx + 0x158], 0	       469	loop.c	FUNCTION_15	IF_3
0x4002527	          0x4889df	                            mov rdi, rbx	       470	loop.c	FUNCTION_15	IF_3	CALL_5
0x400252a	      0xbe01000000	                              mov esi, 1	       470	loop.c	FUNCTION_15	IF_3	CALL_5
0x400252f	              0x5b	                                 pop rbx	       484	loop.c	FUNCTION_15
0x4002530	              0x5d	                                 pop rbp	       484	loop.c	FUNCTION_15
0x4002531	      0xe900000000	                           jmp 0x4002536	       470	loop.c	FUNCTION_15	IF_3	CALL_5
__loop_update_dio	IF,5:WHILE,0:functions,0:FOR,0:SWITCH,0:DO,0:CALL,7:ELSE,3	74
0x4000670	              0x53	                                push rbx	       168	loop.c	FUNCTION_5
0x4000671	          0x4889fb	                            mov rbx, rdi	       168	loop.c	FUNCTION_5
0x4000674	    0x488bbff00000	            mov rdi, qword [rdi + 0xf0] 	       169	loop.c	FUNCTION_5
0x400067b	    0x488b8ff00000	            mov rcx, qword [rdi + 0xf0] 	       170	loop.c	FUNCTION_5
0x4000682	          0x488b01	                    mov rax, qword [rcx]	       176	loop.c	FUNCTION_5	IF_1
0x4000685	        0x488b4028	            mov rax, qword [rax + 0x28] 	       176	loop.c	FUNCTION_5	IF_1
0x4000689	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       176	loop.c	FUNCTION_5	IF_1
0x4000690	          0x4885c0	                           test rax, rax	       176	loop.c	FUNCTION_5	IF_1
0x4000693	     0xf84be000000	                            je 0x4000757	       176	loop.c	FUNCTION_5	IF_1
0x4000699	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1021	blkdev.h	FUNCTION_224
0x40006a0	    0x488b80c00300	           mov rax, qword [rax + 0x3c0] 	      1021	blkdev.h	FUNCTION_224
0x40006a7	          0x4885c0	                           test rax, rax	      1481	blkdev.h	FUNCTION_258	IF_1
0x40006aa	            0x740c	                            je 0x40006b8	      1481	blkdev.h	FUNCTION_258	IF_1
0x40006ac	     0xfb780ec0500	          movzx eax, word [rax + 0x5ec] 	      1481	blkdev.h	FUNCTION_258	IF_1
0x40006b3	          0x6685c0	                             test ax, ax	      1481	blkdev.h	FUNCTION_258	IF_1
0x40006b6	            0x755a	                           jne 0x4000712	      1481	blkdev.h	FUNCTION_258	IF_1
0x40006b8	      0xb800020000	                          mov eax, 0x200	      1481	blkdev.h	FUNCTION_258	IF_1
0x40006bd	    0x41b8ff010000	                          mov r8d, 0x1ff	      1481	blkdev.h	FUNCTION_258	IF_1
0x40006c3	          0x4084f6	                           test sil, sil	       191	loop.c	FUNCTION_5	IF_2
0x40006c6	            0x743f	                            je 0x4000707	       191	loop.c	FUNCTION_5	IF_2
0x40006c8	    0x488b93800100	           mov rdx, qword [rbx + 0x180] 	       192	loop.c	FUNCTION_5	IF_2	IF_3	CALL_2
0x40006cf	          0x4885d2	                           test rdx, rdx	      1481	blkdev.h	FUNCTION_258	IF_1
0x40006d2	     0xf8489000000	                            je 0x4000761	      1481	blkdev.h	FUNCTION_258	IF_1
0x40006d8	     0xfb792ec0500	          movzx edx, word [rdx + 0x5ec] 	      1481	blkdev.h	FUNCTION_258	IF_1
0x40006df	      0xbe00020000	                          mov esi, 0x200	      1481	blkdev.h	FUNCTION_258	IF_1
0x40006e4	          0x6685d2	                             test dx, dx	      1481	blkdev.h	FUNCTION_258	IF_1
0x40006e7	           0xf44d6	                          cmove edx, esi	      1481	blkdev.h	FUNCTION_258	IF_1
0x40006ea	          0x6639d0	                              cmp ax, dx	       192	loop.c	FUNCTION_5	IF_2	IF_3	CALL_2
0x40006ed	            0x7718	                            ja 0x4000707	       192	loop.c	FUNCTION_5	IF_2	IF_3	CALL_2
0x40006ef	        0x44854308	               test dword [rbx + 8], r8d	       192	loop.c	FUNCTION_5	IF_2	IF_3	CALL_2
0x40006f3	            0x7512	                           jne 0x4000707	       192	loop.c	FUNCTION_5	IF_2	IF_3	CALL_2
0x40006f5	        0x488b4170	            mov rax, qword [rcx + 0x70] 	       194	loop.c	FUNCTION_5	IF_2	IF_3
0x40006f9	      0x4883785800	               cmp qword [rax + 0x58], 0	       193	loop.c	FUNCTION_5	IF_2	IF_3
0x40006fe	            0x7407	                            je 0x4000707	       193	loop.c	FUNCTION_5	IF_2	IF_3
0x4000700	      0x48837b2000	               cmp qword [rbx + 0x20], 0	       194	loop.c	FUNCTION_5	IF_2	IF_3
0x4000705	            0x7461	                            je 0x4000768	       194	loop.c	FUNCTION_5	IF_2	IF_3
0x4000707	    0x80bb78010000	               cmp byte [rbx + 0x178], 0	       203	loop.c	FUNCTION_5	IF_4
0x400070e	            0x750b	                           jne 0x400071b	       203	loop.c	FUNCTION_5	IF_4
0x4000710	              0x5b	                                 pop rbx	       224	loop.c	FUNCTION_5
0x4000711	              0xc3	                                     ret	       224	loop.c	FUNCTION_5
0x4000712	           0xfb7d0	                           movzx edx, ax	       224	loop.c	FUNCTION_5
0x4000715	        0x448d42ff	                      lea r8d, [rdx - 1]	      1482	blkdev.h	FUNCTION_258	IF_1
0x4000719	            0xeba8	                           jmp 0x40006c3	      1482	blkdev.h	FUNCTION_258	IF_1
0x400071b	            0x31f6	                            xor esi, esi	       207	loop.c	FUNCTION_5	CALL_3
0x400071d	      0xe800000000	                          call 0x4000722	       207	loop.c	FUNCTION_5	CALL_3
0x4000722	    0x488bbb800100	           mov rdi, qword [rbx + 0x180] 	       214	loop.c	FUNCTION_5	CALL_4
0x4000729	      0xe800000000	                          call 0x400072e	       214	loop.c	FUNCTION_5	CALL_4
0x400072e	    0x488bb3800100	           mov rsi, qword [rbx + 0x180] 	       220	loop.c	FUNCTION_5	ELSE_3	CALL_6
0x4000735	    0xc68378010000	               mov byte [rbx + 0x178], 0	       215	loop.c	FUNCTION_5
0x400073c	      0xbf05000000	                              mov edi, 5	       220	loop.c	FUNCTION_5	ELSE_3	CALL_6
0x4000741	      0xe800000000	                          call 0x4000746	       220	loop.c	FUNCTION_5	ELSE_3	CALL_6
0x4000746	        0x836318ef	      and dword [rbx + 0x18], 0xffffffef	       221	loop.c	FUNCTION_5	ELSE_3
0x400074a	    0x488bbb800100	           mov rdi, qword [rbx + 0x180] 	       223	loop.c	FUNCTION_5	CALL_7
0x4000751	              0x5b	                                 pop rbx	       224	loop.c	FUNCTION_5
0x4000752	      0xe900000000	                           jmp 0x4000757	       223	loop.c	FUNCTION_5	CALL_7
0x4000757	          0x4531c0	                            xor r8d, r8d	       173	loop.c	FUNCTION_5
0x400075a	            0x31c0	                            xor eax, eax	       172	loop.c	FUNCTION_5
0x400075c	      0xe962ffffff	                           jmp 0x40006c3	       172	loop.c	FUNCTION_5
0x4000761	      0xba00020000	                          mov edx, 0x200	      1481	blkdev.h	FUNCTION_258	IF_1
0x4000766	            0xeb82	                           jmp 0x40006ea	      1481	blkdev.h	FUNCTION_258	IF_1
0x4000768	    0x80bb78010000	               cmp byte [rbx + 0x178], 0	       203	loop.c	FUNCTION_5	IF_4
0x400076f	            0x759f	                           jne 0x4000710	       203	loop.c	FUNCTION_5	IF_4
0x4000771	            0x31f6	                            xor esi, esi	       207	loop.c	FUNCTION_5	CALL_3
0x4000773	      0xe800000000	                          call 0x4000778	       207	loop.c	FUNCTION_5	CALL_3
0x4000778	    0x488bbb800100	           mov rdi, qword [rbx + 0x180] 	       214	loop.c	FUNCTION_5	CALL_4
0x400077f	      0xe800000000	                          call 0x4000784	       214	loop.c	FUNCTION_5	CALL_4
0x4000784	    0x488bb3800100	           mov rsi, qword [rbx + 0x180] 	       217	loop.c	FUNCTION_5	IF_5	CALL_5
0x400078b	    0xc68378010000	               mov byte [rbx + 0x178], 1	       215	loop.c	FUNCTION_5
0x4000792	      0xbf05000000	                              mov edi, 5	       217	loop.c	FUNCTION_5	IF_5	CALL_5
0x4000797	      0xe800000000	                          call 0x400079c	       217	loop.c	FUNCTION_5	IF_5	CALL_5
0x400079c	        0x834b1810	             or dword [rbx + 0x18], 0x10	       218	loop.c	FUNCTION_5	IF_5
0x40007a0	    0x488bbb800100	           mov rdi, qword [rbx + 0x180] 	       223	loop.c	FUNCTION_5	CALL_7
0x40007a7	              0x5b	                                 pop rbx	       224	loop.c	FUNCTION_5
0x40007a8	      0xe900000000	                           jmp 0x40007ad	       223	loop.c	FUNCTION_5	CALL_7
loop_queue_rq	IF,2:WHILE,0:functions,0:FOR,0:SWITCH,1:DO,0:CALL,5:ELSE,1	32
0x4002540	              0x55	                                push rbp	      1728	loop.c	FUNCTION_64
0x4002541	              0x53	                                push rbx	      1728	loop.c	FUNCTION_64
0x4002542	          0x488b1e	                    mov rbx, qword [rsi]	      1729	loop.c	FUNCTION_64
0x4002545	          0x488b03	                    mov rax, qword [rbx]	      1731	loop.c	FUNCTION_64
0x4002548	          0x4889df	                            mov rdi, rbx	      1733	loop.c	FUNCTION_64	CALL_2
0x400254b	    0x488ba8980100	           mov rbp, qword [rax + 0x198] 	      1731	loop.c	FUNCTION_64
0x4002552	      0xe800000000	                          call 0x4002557	      1733	loop.c	FUNCTION_64	CALL_2
0x4002557	      0xb80a000000	                            mov eax, 0xa	      1733	loop.c	FUNCTION_64	CALL_2
0x400255c	    0x83bd10010000	              cmp dword [rbp + 0x110], 1	      1735	loop.c	FUNCTION_64	IF_1
0x4002563	            0x7403	                            je 0x4002568	      1735	loop.c	FUNCTION_64	IF_1
0x4002565	              0x5b	                                 pop rbx	      1760	loop.c	FUNCTION_64
0x4002566	              0x5d	                                 pop rbp	      1760	loop.c	FUNCTION_64
0x4002567	              0xc3	                                     ret	      1760	loop.c	FUNCTION_64
0x4002568	         0xfb64b14	           movzx ecx, byte [rbx + 0x14] 	      1738	loop.c	FUNCTION_64	SWITCH_1	CALL_3
0x400256c	          0x83f909	                              cmp ecx, 9	      1738	loop.c	FUNCTION_64	SWITCH_1	CALL_3
0x400256f	            0x770f	                            ja 0x4002580	      1738	loop.c	FUNCTION_64	SWITCH_1	CALL_3
0x4002571	      0xb801000000	                              mov eax, 1	      1738	loop.c	FUNCTION_64	SWITCH_1	CALL_3
0x4002576	          0x48d3e0	                             shl rax, cl	      1738	loop.c	FUNCTION_64	SWITCH_1	CALL_3
0x4002579	      0xa90c020000	                         test eax, 0x20c	      1738	loop.c	FUNCTION_64	SWITCH_1	CALL_3
0x400257e	            0x7530	                           jne 0x40025b0	      1738	loop.c	FUNCTION_64	SWITCH_1	CALL_3
0x4002580	     0xfb685780100	          movzx eax, byte [rbp + 0x178] 	      1745	loop.c	FUNCTION_64	SWITCH_1
0x4002587	    0x888350010000	              mov byte [rbx + 0x150], al	      1745	loop.c	FUNCTION_64	SWITCH_1
0x400258d	    0x488db3280100	                  lea rsi, [rbx + 0x128]	      1757	loop.c	FUNCTION_64	CALL_5
0x4002594	    0x488dbd380100	                  lea rdi, [rbp + 0x138]	      1757	loop.c	FUNCTION_64	CALL_5
0x400259b	    0x48c783900100	              mov qword [rbx + 0x190], 0	      1756	loop.c	FUNCTION_64	ELSE_1
0x40025a6	      0xe800000000	                          call 0x40025ab	      1757	loop.c	FUNCTION_64	CALL_5
0x40025ab	            0x31c0	                            xor eax, eax	      1759	loop.c	FUNCTION_64
0x40025ad	              0x5b	                                 pop rbx	      1760	loop.c	FUNCTION_64
0x40025ae	              0x5d	                                 pop rbp	      1760	loop.c	FUNCTION_64
0x40025af	              0xc3	                                     ret	      1760	loop.c	FUNCTION_64
0x40025b0	    0xc68350010000	               mov byte [rbx + 0x150], 0	      1742	loop.c	FUNCTION_64	SWITCH_1
0x40025b7	            0xebd4	                           jmp 0x400258d	      1743	loop.c	FUNCTION_64	SWITCH_1
xor_init	IF,1:WHILE,0:functions,0:FOR,0:SWITCH,0:DO,0:CALL,1:ELSE,0	4
0x4000090	        0x837e3001	               cmp dword [rsi + 0x30], 1	       122	loop.c	FUNCTION_2
0x4000094	            0x19c0	                            sbb eax, eax	       122	loop.c	FUNCTION_2
0x4000096	          0x83e0ea	                     and eax, 0xffffffea	       122	loop.c	FUNCTION_2
0x4000099	              0xc3	                                     ret	       123	loop.c	FUNCTION_2
max_loop_setup	IF,0:WHILE,0:functions,0:FOR,0:SWITCH,0:DO,0:CALL,1:ELSE,0	10
0x4000040	            0x8b07	                    mov eax, dword [rdi]	      1690	loop.c	FUNCTION_61
0x4000042	          0x83f813	                           cmp eax, 0x13	      1692	loop.c	FUNCTION_61	IF_1
0x4000045	            0x771d	                            ja 0x4000064	      1692	loop.c	FUNCTION_61	IF_1
0x4000047	            0x89c2	                            mov edx, eax	      1692	loop.c	FUNCTION_61	IF_1
0x4000049	      0xb8eaffffff	                     mov eax, 0xffffffea	      1693	loop.c	FUNCTION_61	IF_1
0x400004e	              0x48	                                 invalid	      1692	loop.c	FUNCTION_61	IF_1
0x400004f	              0x83	                                 invalid	      1692	loop.c	FUNCTION_61	IF_1
0x4000050	            0x3cd5	                            cmp al, 0xd5	      1692	loop.c	FUNCTION_61	IF_1
0x4000052	               0x0	                      add byte [rax], al	      1692	loop.c	FUNCTION_61	IF_1
0x4000054	               0x0	                                 invalid	      1692	loop.c	FUNCTION_61	IF_1
loop_remove	IF,0:WHILE,0:functions,0:FOR,0:SWITCH,0:DO,0:CALL,5:ELSE,0	13
0x4000290	              0x53	                                push rbx	      1914	loop.c	FUNCTION_69
0x4000291	          0x4889fb	                            mov rbx, rdi	      1914	loop.c	FUNCTION_69
0x4000294	    0x488bbff80100	           mov rdi, qword [rdi + 0x1f8] 	      1915	loop.c	FUNCTION_69	CALL_1
0x400029b	      0xe800000000	                          call 0x40002a0	      1915	loop.c	FUNCTION_69	CALL_1
0x40002a0	    0x488bbb800100	           mov rdi, qword [rbx + 0x180] 	      1916	loop.c	FUNCTION_69	CALL_2
0x40002a7	      0xe800000000	                          call 0x40002ac	      1916	loop.c	FUNCTION_69	CALL_2
0x40002ac	    0x488dbb880100	                  lea rdi, [rbx + 0x188]	      1917	loop.c	FUNCTION_69	CALL_3
0x40002b3	      0xe800000000	                          call 0x40002b8	      1917	loop.c	FUNCTION_69	CALL_3
0x40002b8	    0x488bbbf80100	           mov rdi, qword [rbx + 0x1f8] 	      1918	loop.c	FUNCTION_69	CALL_4
0x40002bf	      0xe800000000	                          call 0x40002c4	      1918	loop.c	FUNCTION_69	CALL_4
0x40002c4	          0x4889df	                            mov rdi, rbx	      1919	loop.c	FUNCTION_69	CALL_5
0x40002c7	              0x5b	                                 pop rbx	      1920	loop.c	FUNCTION_69
0x40002c8	      0xe900000000	                           jmp 0x40002cd	      1919	loop.c	FUNCTION_69	CALL_5
loop_unregister_transfer	IF,1:WHILE,0:functions,0:FOR,0:SWITCH,0:DO,0:CALL,1:ELSE,0	15
0x4000160	          0x8d47ff	                      lea eax, [rdi - 1]	      1715	loop.c	FUNCTION_63	IF_1
0x4000163	          0x83f812	                           cmp eax, 0x12	      1715	loop.c	FUNCTION_63	IF_1
0x4000166	            0x7731	                            ja 0x4000199	      1715	loop.c	FUNCTION_63	IF_1
0x4000168	            0x89ff	                            mov edi, edi	      1715	loop.c	FUNCTION_63	IF_1
0x400016a	    0x488b14fd0000	                  mov rdx, qword [rdi*8]	      1715	loop.c	FUNCTION_63	IF_1
0x4000172	          0x4885d2	                           test rdx, rdx	      1715	loop.c	FUNCTION_63	IF_1
0x4000175	            0x7422	                            je 0x4000199	      1715	loop.c	FUNCTION_63	IF_1
0x4000177	    0x48c704fd0000	                    mov qword [rdi*8], 0	      1718	loop.c	FUNCTION_63
0x4000183	    0x48c7c6000000	                              mov rsi, 0	      1719	loop.c	FUNCTION_63	CALL_1
0x400018a	    0x48c7c7000000	                              mov rdi, 0	      1719	loop.c	FUNCTION_63	CALL_1
0x4000191	      0xe800000000	                          call 0x4000196	      1719	loop.c	FUNCTION_63	CALL_1
0x4000196	            0x31c0	                            xor eax, eax	      1720	loop.c	FUNCTION_63
0x4000198	              0xc3	                                     ret	      1720	loop.c	FUNCTION_63
0x4000199	      0xb8eaffffff	                     mov eax, 0xffffffea	      1716	loop.c	FUNCTION_63	IF_1
0x400019e	              0xc3	                                     ret	      1721	loop.c	FUNCTION_63
unregister_transfer_cb	IF,1:WHILE,0:functions,0:FOR,0:SWITCH,0:DO,0:CALL,3:ELSE,0	26
0x4000240	            0x4154	                                push r12	      1699	loop.c	FUNCTION_62
0x4000242	              0x55	                                push rbp	      1699	loop.c	FUNCTION_62
0x4000243	    0x488dae180100	                  lea rbp, [rsi + 0x118]	      1703	loop.c	FUNCTION_62	CALL_1
0x400024a	              0x53	                                push rbx	      1699	loop.c	FUNCTION_62
0x400024b	          0x4889f3	                            mov rbx, rsi	      1699	loop.c	FUNCTION_62
0x400024e	          0x4989d4	                            mov r12, rdx	      1699	loop.c	FUNCTION_62
0x4000251	          0x4889ef	                            mov rdi, rbp	      1703	loop.c	FUNCTION_62	CALL_1
0x4000254	      0xe800000000	                          call 0x4000259	      1703	loop.c	FUNCTION_62	CALL_1
0x4000259	    0x4c3ba3d00000	            cmp r12, qword [rbx + 0xd0] 	      1704	loop.c	FUNCTION_62	IF_1
0x4000260	            0x740f	                            je 0x4000271	      1704	loop.c	FUNCTION_62	IF_1
0x4000262	          0x4889ef	                            mov rdi, rbp	      1706	loop.c	FUNCTION_62	CALL_3
0x4000265	      0xe800000000	                          call 0x400026a	      1706	loop.c	FUNCTION_62	CALL_3
0x400026a	            0x31c0	                            xor eax, eax	      1708	loop.c	FUNCTION_62
0x400026c	              0x5b	                                 pop rbx	      1708	loop.c	FUNCTION_62
0x400026d	              0x5d	                                 pop rbp	      1708	loop.c	FUNCTION_62
0x400026e	            0x415c	                                 pop r12	      1708	loop.c	FUNCTION_62
0x4000270	              0xc3	                                     ret	      1708	loop.c	FUNCTION_62
0x4000271	          0x4889df	                            mov rdi, rbx	      1705	loop.c	FUNCTION_62	CALL_2
0x4000274	      0xe867ffffff	              call sym.loop_release_xfer	      1705	loop.c	FUNCTION_62	CALL_2
0x4000279	          0x4889ef	                            mov rdi, rbp	      1706	loop.c	FUNCTION_62	CALL_3
0x400027c	      0xe800000000	                          call 0x4000281	      1706	loop.c	FUNCTION_62	CALL_3
0x4000281	            0x31c0	                            xor eax, eax	      1708	loop.c	FUNCTION_62
0x4000283	              0x5b	                                 pop rbx	      1708	loop.c	FUNCTION_62
0x4000284	              0x5d	                                 pop rbp	      1708	loop.c	FUNCTION_62
0x4000285	            0x415c	                                 pop r12	      1708	loop.c	FUNCTION_62
0x4000287	              0xc3	                                     ret	      1708	loop.c	FUNCTION_62
loop_register_transfer	IF,1:WHILE,0:functions,0:FOR,0:SWITCH,0:DO,0:CALL,0:ELSE,0	12
0x4000040	            0x8b07	                    mov eax, dword [rdi]	      1690	loop.c	FUNCTION_61
0x4000042	          0x83f813	                           cmp eax, 0x13	      1692	loop.c	FUNCTION_61	IF_1
0x4000045	            0x771d	                            ja 0x4000064	      1692	loop.c	FUNCTION_61	IF_1
0x4000047	            0x89c2	                            mov edx, eax	      1692	loop.c	FUNCTION_61	IF_1
0x4000049	      0xb8eaffffff	                     mov eax, 0xffffffea	      1693	loop.c	FUNCTION_61	IF_1
0x400004e	    0x48833cd50000	                    cmp qword [rdx*8], 0	      1692	loop.c	FUNCTION_61	IF_1
0x4000057	            0x7510	                           jne 0x4000069	      1692	loop.c	FUNCTION_61	IF_1
0x4000059	    0x48893cd50000	                  mov qword [rdx*8], rdi	      1694	loop.c	FUNCTION_61
0x4000061	            0x31c0	                            xor eax, eax	      1695	loop.c	FUNCTION_61
0x4000063	              0xc3	                                     ret	      1695	loop.c	FUNCTION_61
0x4000064	      0xb8eaffffff	                     mov eax, 0xffffffea	      1693	loop.c	FUNCTION_61	IF_1
0x4000069	            0xf3c3	                                     ret	      1696	loop.c	FUNCTION_61
loop_get_status_compat	IF,2:WHILE,0:functions,0:FOR,0:SWITCH,0:DO,0:CALL,3:ELSE,0	26
0x40012c0	              0x53	                                push rbx	      1560	loop.c	FUNCTION_56
0x40012c1	    0x4881ecf00000	                           sub rsp, 0xf0	      1560	loop.c	FUNCTION_56
0x40012c8	    0x65488b042528	                mov rax, qword gs:[0x28]	      1560	loop.c	FUNCTION_56
0x40012d1	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      1560	loop.c	FUNCTION_56
0x40012d9	            0x31c0	                            xor eax, eax	      1560	loop.c	FUNCTION_56
0x40012db	          0x4885f6	                           test rsi, rsi	      1564	loop.c	FUNCTION_56	IF_1
0x40012de	            0x7436	                            je 0x4001316	      1564	loop.c	FUNCTION_56	IF_1
0x40012e0	          0x4889f3	                            mov rbx, rsi	      1564	loop.c	FUNCTION_56	IF_1
0x40012e3	          0x4889e6	                            mov rsi, rsp	      1568	loop.c	FUNCTION_56	CALL_2
0x40012e6	      0xe895fbffff	                call sym.loop_get_status	      1568	loop.c	FUNCTION_56	CALL_2
0x40012eb	            0x85c0	                           test eax, eax	      1569	loop.c	FUNCTION_56	IF_2
0x40012ed	            0x750b	                           jne 0x40012fa	      1569	loop.c	FUNCTION_56	IF_2
0x40012ef	          0x4889de	                            mov rsi, rbx	      1570	loop.c	FUNCTION_56	CALL_3
0x40012f2	          0x4889e7	                            mov rdi, rsp	      1570	loop.c	FUNCTION_56	CALL_3
0x40012f5	      0xe8b6fdffff	          call sym.loop_info64_to_compat	      1570	loop.c	FUNCTION_56	CALL_3
0x40012fa	    0x488b9424e800	            mov rdx, qword [rsp + 0xe8] 	      1572	loop.c	FUNCTION_56
0x4001302	    0x654833142528	                xor rdx, qword gs:[0x28]	      1572	loop.c	FUNCTION_56
0x400130b	            0x751c	                           jne 0x4001329	      1572	loop.c	FUNCTION_56
0x400130d	    0x4881c4f00000	                           add rsp, 0xf0	      1572	loop.c	FUNCTION_56
0x4001314	              0x5b	                                 pop rbx	      1572	loop.c	FUNCTION_56
0x4001315	              0xc3	                                     ret	      1572	loop.c	FUNCTION_56
0x4001316	    0x4881c7180100	                          add rdi, 0x118	      1565	loop.c	FUNCTION_56	IF_1	CALL_1
0x400131d	      0xe800000000	                          call 0x4001322	      1565	loop.c	FUNCTION_56	IF_1	CALL_1
0x4001322	      0xb8eaffffff	                     mov eax, 0xffffffea	      1566	loop.c	FUNCTION_56	IF_1
0x4001327	            0xebd1	                           jmp 0x40012fa	      1566	loop.c	FUNCTION_56	IF_1
0x4001329	      0xe800000000	                          call 0x400132e	      1572	loop.c	FUNCTION_56
find_free_cb	IF,1:WHILE,0:functions,0:FOR,0:SWITCH,0:DO,0:CALL,0:ELSE,0	7
0x4000070	    0x8b8e10010000	           mov ecx, dword [rsi + 0x110] 	      1927	loop.c	FUNCTION_70	IF_1
0x4000076	            0x31c0	                            xor eax, eax	      1931	loop.c	FUNCTION_70
0x4000078	            0x85c9	                           test ecx, ecx	      1927	loop.c	FUNCTION_70	IF_1
0x400007a	            0x7508	                           jne 0x4000084	      1927	loop.c	FUNCTION_70	IF_1
0x400007c	          0x488932	                    mov qword [rdx], rsi	      1928	loop.c	FUNCTION_70	IF_1
0x400007f	      0xb801000000	                              mov eax, 1	      1929	loop.c	FUNCTION_70	IF_1
0x4000084	            0xf3c3	                                     ret	      1932	loop.c	FUNCTION_70
loop_exit_cb	IF,0:WHILE,0:functions,0:FOR,0:SWITCH,0:DO,0:CALL,1:ELSE,0	4
0x40002d0	          0x4889f7	                            mov rdi, rsi	      2126	loop.c	FUNCTION_75	CALL_1
0x40002d3	      0xe8b8ffffff	                    call sym.loop_remove	      2126	loop.c	FUNCTION_75	CALL_1
0x40002d8	            0x31c0	                            xor eax, eax	      2128	loop.c	FUNCTION_75
0x40002da	              0xc3	                                     ret	      2128	loop.c	FUNCTION_75
