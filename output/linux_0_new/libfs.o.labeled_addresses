make_empty_dir_inode	IF,0:functions,0:CALL,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	17
0x4001680	              0x53	                                push rbx	      1237	libfs.c	FUNCTION_58
0x4001681	      0xbe02000000	                              mov esi, 2	      1238	libfs.c	FUNCTION_58	CALL_1
0x4001686	          0x4889fb	                            mov rbx, rdi	      1237	libfs.c	FUNCTION_58
0x4001689	      0xe800000000	                          call 0x400168e	      1238	libfs.c	FUNCTION_58	CALL_1
0x400168e	      0xb86d410000	                         mov eax, 0x416d	      1239	libfs.c	FUNCTION_58
0x4001693	    0xc74304000000	                  mov dword [rbx + 4], 0	      1240	libfs.c	FUNCTION_58
0x400169a	    0xc74308000000	                  mov dword [rbx + 8], 0	      1241	libfs.c	FUNCTION_58
0x40016a1	          0x668903	                      mov word [rbx], ax	      1239	libfs.c	FUNCTION_58
0x40016a4	    0xc7434c000000	               mov dword [rbx + 0x4c], 0	      1242	libfs.c	FUNCTION_58
0x40016ab	    0x48c743500000	               mov qword [rbx + 0x50], 0	      1243	libfs.c	FUNCTION_58
0x40016b3	    0xc78390000000	            mov dword [rbx + 0x90], 0xc 	      1244	libfs.c	FUNCTION_58
0x40016bd	    0x48c783980000	               mov qword [rbx + 0x98], 0	      1245	libfs.c	FUNCTION_58
0x40016c8	    0x48c743200000	               mov qword [rbx + 0x20], 0	      1247	libfs.c	FUNCTION_58
0x40016d0	      0x66836302f7	              and word [rbx + 2], 0xfff7	      1248	libfs.c	FUNCTION_58
0x40016d5	    0x48c783580100	              mov qword [rbx + 0x158], 0	      1249	libfs.c	FUNCTION_58
0x40016e0	              0x5b	                                 pop rbx	      1250	libfs.c	FUNCTION_58
0x40016e1	              0xc3	                                     ret	      1250	libfs.c	FUNCTION_58
simple_rmdir	IF,1:functions,0:CALL,5:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	21
0x4000590	              0x55	                                push rbp	       343	libfs.c	FUNCTION_18
0x4000591	              0x53	                                push rbx	       343	libfs.c	FUNCTION_18
0x4000592	          0x4889fd	                            mov rbp, rdi	       343	libfs.c	FUNCTION_18
0x4000595	          0x4889f7	                            mov rdi, rsi	       344	libfs.c	FUNCTION_18	IF_1	CALL_1
0x4000598	          0x4889f3	                            mov rbx, rsi	       343	libfs.c	FUNCTION_18
0x400059b	      0xe800000000	                          call 0x40005a0	       344	libfs.c	FUNCTION_18	IF_1	CALL_1
0x40005a0	            0x85c0	                           test eax, eax	       344	libfs.c	FUNCTION_18	IF_1	CALL_1
0x40005a2	      0xbad9ffffff	                     mov edx, 0xffffffd9	       344	libfs.c	FUNCTION_18	IF_1	CALL_1
0x40005a7	            0x741e	                            je 0x40005c7	       344	libfs.c	FUNCTION_18	IF_1	CALL_1
0x40005a9	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	       347	libfs.c	FUNCTION_18	CALL_3
0x40005ad	      0xe800000000	                          call 0x40005b2	       347	libfs.c	FUNCTION_18	CALL_3
0x40005b2	          0x4889de	                            mov rsi, rbx	       348	libfs.c	FUNCTION_18	CALL_4
0x40005b5	          0x4889ef	                            mov rdi, rbp	       348	libfs.c	FUNCTION_18	CALL_4
0x40005b8	      0xe800000000	                          call 0x40005bd	       348	libfs.c	FUNCTION_18	CALL_4
0x40005bd	          0x4889ef	                            mov rdi, rbp	       349	libfs.c	FUNCTION_18	CALL_5
0x40005c0	      0xe800000000	                          call 0x40005c5	       349	libfs.c	FUNCTION_18	CALL_5
0x40005c5	            0x31d2	                            xor edx, edx	       350	libfs.c	FUNCTION_18
0x40005c7	            0x89d0	                            mov eax, edx	       351	libfs.c	FUNCTION_18
0x40005c9	              0x5b	                                 pop rbx	       351	libfs.c	FUNCTION_18
0x40005ca	              0x5d	                                 pop rbp	       351	libfs.c	FUNCTION_18
0x40005cb	              0xc3	                                     ret	       351	libfs.c	FUNCTION_18
empty_dir_setattr	IF,0:functions,0:CALL,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	2
0x4000260	      0xb8ffffffff	                     mov eax, 0xffffffff	      1201	libfs.c	FUNCTION_54
0x4000265	              0xc3	                                     ret	      1201	libfs.c	FUNCTION_54
simple_transaction_release	IF,0:functions,0:CALL,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	5
0x4000a30	    0x488bbec80000	            mov rdi, qword [rsi + 0xc8] 	       776	libfs.c	FUNCTION_33	CALL_1
0x4000a37	            0x31f6	                            xor esi, esi	       776	libfs.c	FUNCTION_33	CALL_1
0x4000a39	      0xe800000000	                          call 0x4000a3e	       776	libfs.c	FUNCTION_33	CALL_1
0x4000a3e	            0x31c0	                            xor eax, eax	       778	libfs.c	FUNCTION_33
0x4000a40	              0xc3	                                     ret	       778	libfs.c	FUNCTION_33
empty_dir_lookup	IF,0:functions,0:CALL,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	2
0x4000250	    0x48c7c0feffff	             mov rax, 0xfffffffffffffffe	      1188	libfs.c	FUNCTION_52
0x4000257	              0xc3	                                     ret	      1188	libfs.c	FUNCTION_52
kfree_link	IF,0:functions,0:CALL,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	1
0x4000b00	      0xe900000000	                           jmp 0x4000b05	      1105	libfs.c	FUNCTION_47	CALL_1
simple_statfs	IF,0:functions,0:CALL,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	7
0x4000040	        0x488b4768	            mov rax, qword [rdi + 0x68] 	        36	libfs.c	FUNCTION_2
0x4000044	        0x488b4060	            mov rax, qword [rax + 0x60] 	        36	libfs.c	FUNCTION_2
0x4000048	    0x48c746080010	            mov qword [rsi + 8], 0x1000 	        37	libfs.c	FUNCTION_2
0x4000050	    0x48c74640ff00	           mov qword [rsi + 0x40], 0xff 	        38	libfs.c	FUNCTION_2
0x4000058	          0x488906	                    mov qword [rsi], rax	        36	libfs.c	FUNCTION_2
0x400005b	            0x31c0	                            xor eax, eax	        40	libfs.c	FUNCTION_2
0x400005d	              0xc3	                                     ret	        40	libfs.c	FUNCTION_2
empty_dir_llseek	IF,0:functions,0:CALL,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	3
0x4000cf0	    0x41b802000000	                              mov r8d, 2	      1219	libfs.c	FUNCTION_56	CALL_1
0x4000cf6	      0xb902000000	                              mov ecx, 2	      1219	libfs.c	FUNCTION_56	CALL_1
0x4000cfb	      0xe900000000	                   jmp sym.simple_lookup	      1219	libfs.c	FUNCTION_56	CALL_1
generic_fh_to_dentry	IF,1:functions,0:CALL,2:DO,0:SWITCH,1:ELSE,0:WHILE,0:FOR,0	15
0x4000b10	          0x83fa01	                              cmp edx, 1	       911	libfs.c	FUNCTION_38	IF_1
0x4000b13	            0x7e24	                           jle 0x4000b39	       911	libfs.c	FUNCTION_38	IF_1
0x4000b15	          0x83e901	                              sub ecx, 1	       914	libfs.c	FUNCTION_38	SWITCH_1
0x4000b18	            0x31c0	                            xor eax, eax	       909	libfs.c	FUNCTION_38
0x4000b1a	          0x83f901	                              cmp ecx, 1	       914	libfs.c	FUNCTION_38	SWITCH_1
0x4000b1d	            0x7608	                           jbe 0x4000b27	       914	libfs.c	FUNCTION_38	SWITCH_1
0x4000b1f	          0x4889c7	                            mov rdi, rax	       921	libfs.c	FUNCTION_38	CALL_2
0x4000b22	      0xe900000000	                           jmp 0x4000b27	       921	libfs.c	FUNCTION_38	CALL_2
0x4000b27	          0x8b5604	                mov edx, dword [rsi + 4]	       917	libfs.c	FUNCTION_38	SWITCH_1	CALL_1
0x4000b2a	            0x8b36	                    mov esi, dword [rsi]	       917	libfs.c	FUNCTION_38	SWITCH_1	CALL_1
0x4000b2c	      0xe800000000	                          call 0x4000b31	       917	libfs.c	FUNCTION_38	SWITCH_1	CALL_1
0x4000b31	          0x4889c7	                            mov rdi, rax	       921	libfs.c	FUNCTION_38	CALL_2
0x4000b34	      0xe900000000	                           jmp 0x4000b39	       921	libfs.c	FUNCTION_38	CALL_2
0x4000b39	            0x31c0	                            xor eax, eax	       922	libfs.c	FUNCTION_38
0x4000b3b	              0xc3	                                     ret	       922	libfs.c	FUNCTION_38
simple_attr_release	IF,0:functions,0:CALL,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	4
0x4000af0	    0x488bbec80000	            mov rdi, qword [rsi + 0xc8] 	       819	libfs.c	FUNCTION_35	CALL_1
0x4000af7	      0xe800000000	                          call 0x4000afc	       819	libfs.c	FUNCTION_35	CALL_1
0x4000afc	            0x31c0	                            xor eax, eax	       821	libfs.c	FUNCTION_35
0x4000afe	              0xc3	                                     ret	       821	libfs.c	FUNCTION_35
memory_read_from_buffer	IF,3:functions,0:CALL,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	26
0x40009e0	            0x4154	                                push r12	       694	libfs.c	FUNCTION_29
0x40009e2	              0x55	                                push rbp	       694	libfs.c	FUNCTION_29
0x40009e3	              0x53	                                push rbx	       694	libfs.c	FUNCTION_29
0x40009e4	          0x488b1a	                    mov rbx, qword [rdx]	       695	libfs.c	FUNCTION_29
0x40009e7	          0x4885db	                           test rbx, rbx	       697	libfs.c	FUNCTION_29	IF_1
0x40009ea	            0x7832	                            js 0x4000a1e	       697	libfs.c	FUNCTION_29	IF_1
0x40009ec	            0x31c0	                            xor eax, eax	       700	libfs.c	FUNCTION_29	IF_2
0x40009ee	          0x4c39c3	                             cmp rbx, r8	       699	libfs.c	FUNCTION_29	IF_2
0x40009f1	            0x7326	                           jae 0x4000a19	       699	libfs.c	FUNCTION_29	IF_2
0x40009f3	          0x4929d8	                             sub r8, rbx	       701	libfs.c	FUNCTION_29	IF_3
0x40009f6	          0x4989d4	                            mov r12, rdx	       701	libfs.c	FUNCTION_29	IF_3
0x40009f9	          0x4939f0	                             cmp r8, rsi	       701	libfs.c	FUNCTION_29	IF_3
0x40009fc	        0x490f46f0	                          cmovbe rsi, r8	       701	libfs.c	FUNCTION_29	IF_3
0x4000a00	          0x4889f5	                            mov rbp, rsi	       701	libfs.c	FUNCTION_29	IF_3
0x4000a03	        0x488d3419	                    lea rsi, [rcx + rbx]	       703	libfs.c	FUNCTION_29	CALL_1
0x4000a07	          0x4889ea	                            mov rdx, rbp	       703	libfs.c	FUNCTION_29	CALL_1
0x4000a0a	          0x4801eb	                            add rbx, rbp	       704	libfs.c	FUNCTION_29
0x4000a0d	      0xe800000000	                          call 0x4000a12	       703	libfs.c	FUNCTION_29	CALL_1
0x4000a12	        0x49891c24	                    mov qword [r12], rbx	       704	libfs.c	FUNCTION_29
0x4000a16	          0x4889e8	                            mov rax, rbp	       706	libfs.c	FUNCTION_29
0x4000a19	              0x5b	                                 pop rbx	       707	libfs.c	FUNCTION_29
0x4000a1a	              0x5d	                                 pop rbp	       707	libfs.c	FUNCTION_29
0x4000a1b	            0x415c	                                 pop r12	       707	libfs.c	FUNCTION_29
0x4000a1d	              0xc3	                                     ret	       707	libfs.c	FUNCTION_29
0x4000a1e	    0x48c7c0eaffff	             mov rax, 0xffffffffffffffea	       698	libfs.c	FUNCTION_29	IF_1
0x4000a25	            0xebf2	                           jmp 0x4000a19	       698	libfs.c	FUNCTION_29	IF_1
dcache_dir_close	IF,0:functions,0:CALL,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	4
0x40002e0	    0x488bbec80000	            mov rdi, qword [rsi + 0xc8] 	        83	libfs.c	FUNCTION_6	CALL_1
0x40002e7	      0xe800000000	                          call 0x40002ec	        83	libfs.c	FUNCTION_6	CALL_1
0x40002ec	            0x31c0	                            xor eax, eax	        85	libfs.c	FUNCTION_6
0x40002ee	              0xc3	                                     ret	        85	libfs.c	FUNCTION_6
simple_transaction_read	IF,1:functions,0:CALL,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	12
0x40014b0	    0x488b87c80000	            mov rax, qword [rdi + 0xc8] 	       766	libfs.c	FUNCTION_32
0x40014b7	          0x4989f1	                             mov r9, rsi	       765	libfs.c	FUNCTION_32
0x40014ba	          0x4889d6	                            mov rsi, rdx	       765	libfs.c	FUNCTION_32
0x40014bd	          0x4889ca	                            mov rdx, rcx	       765	libfs.c	FUNCTION_32
0x40014c0	          0x4885c0	                           test rax, rax	       768	libfs.c	FUNCTION_32	IF_1
0x40014c3	            0x740f	                            je 0x40014d4	       768	libfs.c	FUNCTION_32	IF_1
0x40014c5	          0x4c8b00	                     mov r8, qword [rax]	       770	libfs.c	FUNCTION_32	CALL_1
0x40014c8	        0x488d4808	                      lea rcx, [rax + 8]	       770	libfs.c	FUNCTION_32	CALL_1
0x40014cc	          0x4c89cf	                             mov rdi, r9	       770	libfs.c	FUNCTION_32	CALL_1
0x40014cf	      0xe96cffffff	         jmp sym.simple_read_from_buffer	       770	libfs.c	FUNCTION_32	CALL_1
0x40014d4	            0x31c0	                            xor eax, eax	       771	libfs.c	FUNCTION_32
0x40014d6	              0xc3	                                     ret	       771	libfs.c	FUNCTION_32
simple_nosetlease	IF,0:functions,0:CALL,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	2
0x4000230	      0xb8eaffffff	                     mov eax, 0xffffffea	      1167	libfs.c	FUNCTION_50
0x4000235	              0xc3	                                     ret	      1167	libfs.c	FUNCTION_50
noop_invalidatepage	IF,0:functions,0:CALL,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	1
0x4000200	            0xf3c3	                                     ret	      1081	libfs.c	FUNCTION_45
generic_check_addressable	IF,3:functions,0:CALL,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	16
0x40002f0	          0x4885f6	                           test rsi, rsi	      1040	libfs.c	FUNCTION_42	IF_1	CALL_1
0x40002f3	        0x488d56ff	                      lea rdx, [rsi - 1]	      1036	libfs.c	FUNCTION_42
0x40002f7	            0x741b	                            je 0x4000314	      1040	libfs.c	FUNCTION_42	IF_1	CALL_1
0x40002f9	          0x8d4ff7	                      lea ecx, [rdi - 9]	      1043	libfs.c	FUNCTION_42	IF_2
0x40002fc	          0x83f903	                              cmp ecx, 3	      1043	libfs.c	FUNCTION_42	IF_2
0x40002ff	            0x7716	                            ja 0x4000317	      1043	libfs.c	FUNCTION_42	IF_2
0x4000301	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      1046	libfs.c	FUNCTION_42	IF_3
0x4000308	          0x48d3e8	                             shr rax, cl	      1046	libfs.c	FUNCTION_42	IF_3
0x400030b	          0x4839d0	                            cmp rax, rdx	      1048	libfs.c	FUNCTION_42	IF_3
0x400030e	            0x19c0	                            sbb eax, eax	      1048	libfs.c	FUNCTION_42	IF_3
0x4000310	          0x83e0e5	                     and eax, 0xffffffe5	      1048	libfs.c	FUNCTION_42	IF_3
0x4000313	              0xc3	                                     ret	      1048	libfs.c	FUNCTION_42	IF_3
0x4000314	            0x31c0	                            xor eax, eax	      1050	libfs.c	FUNCTION_42
0x4000316	              0xc3	                                     ret	      1050	libfs.c	FUNCTION_42
0x4000317	      0xb8eaffffff	                     mov eax, 0xffffffea	      1044	libfs.c	FUNCTION_42	IF_2
0x400031c	              0xc3	                                     ret	      1051	libfs.c	FUNCTION_42
simple_get_link	IF,0:functions,0:CALL,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	2
0x4000240	    0x488b86200200	           mov rax, qword [rsi + 0x220] 	      1173	libfs.c	FUNCTION_51
0x4000247	              0xc3	                                     ret	      1174	libfs.c	FUNCTION_51
noop_fsync	IF,0:functions,0:CALL,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	2
0x40001f0	            0x31c0	                            xor eax, eax	      1060	libfs.c	FUNCTION_43
0x40001f2	              0xc3	                                     ret	      1060	libfs.c	FUNCTION_43
always_delete_dentry	IF,0:functions,0:CALL,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	2
0x4000060	      0xb801000000	                              mov eax, 1	        50	libfs.c	FUNCTION_3
0x4000065	              0xc3	                                     ret	        50	libfs.c	FUNCTION_3
simple_attr_read	IF,4:functions,0:CALL,6:DO,0:SWITCH,0:ELSE,1:WHILE,0:FOR,0	66
0x40014e0	            0x4157	                                push r15	       827	libfs.c	FUNCTION_36
0x40014e2	            0x4156	                                push r14	       827	libfs.c	FUNCTION_36
0x40014e4	            0x4155	                                push r13	       827	libfs.c	FUNCTION_36
0x40014e6	            0x4154	                                push r12	       827	libfs.c	FUNCTION_36
0x40014e8	              0x55	                                push rbp	       827	libfs.c	FUNCTION_36
0x40014e9	              0x53	                                push rbx	       827	libfs.c	FUNCTION_36
0x40014ea	        0x4883ec10	                           sub rsp, 0x10	       827	libfs.c	FUNCTION_36
0x40014ee	    0x4c8bbfc80000	            mov r15, qword [rdi + 0xc8] 	       832	libfs.c	FUNCTION_36
0x40014f5	    0x65488b042528	                mov rax, qword gs:[0x28]	       827	libfs.c	FUNCTION_36
0x40014fe	      0x4889442408	                mov qword [rsp + 8], rax	       827	libfs.c	FUNCTION_36
0x4001503	            0x31c0	                            xor eax, eax	       827	libfs.c	FUNCTION_36
0x4001505	        0x49833f00	                      cmp qword [r15], 0	       834	libfs.c	FUNCTION_36	IF_1
0x4001509	     0xf84a5000000	                            je 0x40015b4	       834	libfs.c	FUNCTION_36	IF_1
0x400150f	        0x498d5f50	                   lea rbx, [r15 + 0x50]	       837	libfs.c	FUNCTION_36	CALL_1
0x4001513	          0x4989f4	                            mov r12, rsi	       837	libfs.c	FUNCTION_36	CALL_1
0x4001516	          0x4989d5	                            mov r13, rdx	       837	libfs.c	FUNCTION_36	CALL_1
0x4001519	          0x4889cd	                            mov rbp, rcx	       837	libfs.c	FUNCTION_36	CALL_1
0x400151c	          0x4889df	                            mov rdi, rbx	       837	libfs.c	FUNCTION_36	CALL_1
0x400151f	      0xe800000000	                          call 0x4001524	       837	libfs.c	FUNCTION_36	CALL_1
0x4001524	            0x4898	                                    cdqe	       837	libfs.c	FUNCTION_36	CALL_1
0x4001526	          0x4885c0	                           test rax, rax	       838	libfs.c	FUNCTION_36	IF_2
0x4001529	            0x7535	                           jne 0x4001560	       838	libfs.c	FUNCTION_36	IF_2
0x400152b	      0x48837d0000	                      cmp qword [rbp], 0	       841	libfs.c	FUNCTION_36	IF_3
0x4001530	            0x744d	                            je 0x400157f	       841	libfs.c	FUNCTION_36	IF_3
0x4001532	        0x4d8d7710	                   lea r14, [r15 + 0x10]	       842	libfs.c	FUNCTION_36	IF_3	CALL_2
0x4001536	          0x4c89f7	                            mov rdi, r14	       842	libfs.c	FUNCTION_36	IF_3	CALL_2
0x4001539	      0xe800000000	                          call 0x400153e	       842	libfs.c	FUNCTION_36	IF_3	CALL_2
0x400153e	          0x4989c0	                             mov r8, rax	       842	libfs.c	FUNCTION_36	IF_3	CALL_2
0x4001541	          0x4c89f1	                            mov rcx, r14	       853	libfs.c	FUNCTION_36	CALL_5
0x4001544	          0x4889ea	                            mov rdx, rbp	       853	libfs.c	FUNCTION_36	CALL_5
0x4001547	          0x4c89ee	                            mov rsi, r13	       853	libfs.c	FUNCTION_36	CALL_5
0x400154a	          0x4c89e7	                            mov rdi, r12	       853	libfs.c	FUNCTION_36	CALL_5
0x400154d	      0xe800000000	                          call 0x4001552	       853	libfs.c	FUNCTION_36	CALL_5
0x4001552	          0x4989c6	                            mov r14, rax	       853	libfs.c	FUNCTION_36	CALL_5
0x4001555	          0x4889df	                            mov rdi, rbx	       855	libfs.c	FUNCTION_36	CALL_6
0x4001558	      0xe800000000	                          call 0x400155d	       855	libfs.c	FUNCTION_36	CALL_6
0x400155d	          0x4c89f0	                            mov rax, r14	       856	libfs.c	FUNCTION_36
0x4001560	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       857	libfs.c	FUNCTION_36
0x4001565	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       857	libfs.c	FUNCTION_36
0x400156e	            0x754d	                           jne 0x40015bd	       857	libfs.c	FUNCTION_36
0x4001570	        0x4883c410	                           add rsp, 0x10	       857	libfs.c	FUNCTION_36
0x4001574	              0x5b	                                 pop rbx	       857	libfs.c	FUNCTION_36
0x4001575	              0x5d	                                 pop rbp	       857	libfs.c	FUNCTION_36
0x4001576	            0x415c	                                 pop r12	       857	libfs.c	FUNCTION_36
0x4001578	            0x415d	                                 pop r13	       857	libfs.c	FUNCTION_36
0x400157a	            0x415e	                                 pop r14	       857	libfs.c	FUNCTION_36
0x400157c	            0x415f	                                 pop r15	       857	libfs.c	FUNCTION_36
0x400157e	              0xc3	                                     ret	       857	libfs.c	FUNCTION_36
0x400157f	        0x498b7f40	            mov rdi, qword [r15 + 0x40] 	       845	libfs.c	FUNCTION_36	ELSE_1	CALL_3
0x4001583	          0x498b07	                    mov rax, qword [r15]	       845	libfs.c	FUNCTION_36	ELSE_1	CALL_3
0x4001586	          0x4889e6	                            mov rsi, rsp	       845	libfs.c	FUNCTION_36	ELSE_1	CALL_3
0x4001589	      0xe800000000	                          call 0x400158e	       845	libfs.c	FUNCTION_36	ELSE_1	CALL_3
0x400158e	          0x4c63f0	                         movsxd r14, eax	       845	libfs.c	FUNCTION_36	ELSE_1	CALL_3
0x4001591	          0x4d85f6	                           test r14, r14	       846	libfs.c	FUNCTION_36	ELSE_1	IF_4
0x4001594	            0x75bf	                           jne 0x4001555	       846	libfs.c	FUNCTION_36	ELSE_1	IF_4
0x4001596	        0x4d8d7710	                   lea r14, [r15 + 0x10]	       849	libfs.c	FUNCTION_36	ELSE_1	CALL_4
0x400159a	        0x498b5748	            mov rdx, qword [r15 + 0x48] 	       849	libfs.c	FUNCTION_36	ELSE_1	CALL_4
0x400159e	        0x488b0c24	                    mov rcx, qword [rsp]	       849	libfs.c	FUNCTION_36	ELSE_1	CALL_4
0x40015a2	      0xbe18000000	                           mov esi, 0x18	       849	libfs.c	FUNCTION_36	ELSE_1	CALL_4
0x40015a7	          0x4c89f7	                            mov rdi, r14	       849	libfs.c	FUNCTION_36	ELSE_1	CALL_4
0x40015aa	      0xe800000000	                          call 0x40015af	       849	libfs.c	FUNCTION_36	ELSE_1	CALL_4
0x40015af	          0x4c63c0	                          movsxd r8, eax	       849	libfs.c	FUNCTION_36	ELSE_1	CALL_4
0x40015b2	            0xeb8d	                           jmp 0x4001541	       849	libfs.c	FUNCTION_36	ELSE_1	CALL_4
0x40015b4	    0x48c7c0f3ffff	             mov rax, 0xfffffffffffffff3	       835	libfs.c	FUNCTION_36	IF_1
0x40015bb	            0xeba3	                           jmp 0x4001560	       835	libfs.c	FUNCTION_36	IF_1
0x40015bd	      0xe800000000	                          call 0x40015c2	       857	libfs.c	FUNCTION_36
generic_file_fsync	IF,1:functions,0:CALL,2:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	14
0x4000c20	              0x53	                                push rbx	      1014	libfs.c	FUNCTION_41
0x4000c21	    0x488b87f00000	            mov rax, qword [rdi + 0xf0] 	      1015	libfs.c	FUNCTION_41
0x4000c28	          0x488b18	                    mov rbx, qword [rax]	      1015	libfs.c	FUNCTION_41
0x4000c2b	      0xe800000000	                          call 0x4000c30	      1018	libfs.c	FUNCTION_41	CALL_1
0x4000c30	            0x85c0	                           test eax, eax	      1019	libfs.c	FUNCTION_41	IF_1
0x4000c32	            0x7402	                            je 0x4000c36	      1019	libfs.c	FUNCTION_41	IF_1
0x4000c34	              0x5b	                                 pop rbx	      1022	libfs.c	FUNCTION_41
0x4000c35	              0xc3	                                     ret	      1022	libfs.c	FUNCTION_41
0x4000c36	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1021	libfs.c	FUNCTION_41	CALL_2
0x4000c3a	            0x31d2	                            xor edx, edx	      1021	libfs.c	FUNCTION_41	CALL_2
0x4000c3c	      0xbec0004001	                      mov esi, 0x14000c0	      1021	libfs.c	FUNCTION_41	CALL_2
0x4000c41	              0x5b	                                 pop rbx	      1022	libfs.c	FUNCTION_41
0x4000c42	    0x488bb8d00000	            mov rdi, qword [rax + 0xd0] 	      1021	libfs.c	FUNCTION_41	CALL_2
0x4000c49	      0xe900000000	                           jmp 0x4000c4e	      1021	libfs.c	FUNCTION_41	CALL_2
dcache_dir_open	IF,0:functions,0:CALL,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	10
0x40002c0	        0x488b7e18	            mov rdi, qword [rsi + 0x18] 	        75	libfs.c	FUNCTION_5	CALL_1
0x40002c4	              0x53	                                push rbx	        74	libfs.c	FUNCTION_5
0x40002c5	          0x4889f3	                            mov rbx, rsi	        74	libfs.c	FUNCTION_5
0x40002c8	      0xe800000000	                          call 0x40002cd	        75	libfs.c	FUNCTION_5	CALL_1
0x40002cd	        0x4883f801	                              cmp rax, 1	        77	libfs.c	FUNCTION_5
0x40002d1	    0x488983c80000	             mov qword [rbx + 0xc8], rax	        75	libfs.c	FUNCTION_5	CALL_1
0x40002d8	            0x19c0	                            sbb eax, eax	        77	libfs.c	FUNCTION_5
0x40002da	          0x83e0f4	                     and eax, 0xfffffff4	        77	libfs.c	FUNCTION_5
0x40002dd	              0x5b	                                 pop rbx	        78	libfs.c	FUNCTION_5
0x40002de	              0xc3	                                     ret	        78	libfs.c	FUNCTION_5
noop_direct_IO	IF,0:functions,0:CALL,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	2
0x4000210	    0x48c7c0eaffff	             mov rax, 0xffffffffffffffea	      1099	libfs.c	FUNCTION_46
0x4000217	              0xc3	                                     ret	      1099	libfs.c	FUNCTION_46
simple_fill_super	IF,6:functions,0:CALL,14:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,1	110
0x4000750	              0x55	                                push rbp	       511	libfs.c	FUNCTION_24
0x4000751	          0x4889e5	                            mov rbp, rsp	       511	libfs.c	FUNCTION_24
0x4000754	            0x4157	                                push r15	       511	libfs.c	FUNCTION_24
0x4000756	            0x4156	                                push r14	       511	libfs.c	FUNCTION_24
0x4000758	            0x4155	                                push r13	       511	libfs.c	FUNCTION_24
0x400075a	            0x4154	                                push r12	       511	libfs.c	FUNCTION_24
0x400075c	          0x4989fe	                            mov r14, rdi	       511	libfs.c	FUNCTION_24
0x400075f	            0x4152	                                push r10	       511	libfs.c	FUNCTION_24
0x4000761	              0x53	                                push rbx	       511	libfs.c	FUNCTION_24
0x4000762	          0x4889d3	                            mov rbx, rdx	       511	libfs.c	FUNCTION_24
0x4000765	        0x4883ec08	                              sub rsp, 8	       511	libfs.c	FUNCTION_24
0x4000769	    0x48c747180010	         mov qword [rdi + 0x18], 0x1000 	       517	libfs.c	FUNCTION_24
0x4000771	        0xc647140c	              mov byte [rdi + 0x14], 0xc	       518	libfs.c	FUNCTION_24
0x4000775	        0x48897760	             mov qword [rdi + 0x60], rsi	       519	libfs.c	FUNCTION_24
0x4000779	    0x48c747300000	               mov qword [rdi + 0x30], 0	       520	libfs.c	FUNCTION_24
0x4000781	    0xc78718040000	              mov dword [rdi + 0x418], 1	       521	libfs.c	FUNCTION_24
0x400078b	      0xe800000000	                          call 0x4000790	       523	libfs.c	FUNCTION_24	CALL_1
0x4000790	          0x4885c0	                           test rax, rax	       524	libfs.c	FUNCTION_24	IF_1
0x4000793	     0xf8454010000	                            je 0x40008ed	       524	libfs.c	FUNCTION_24	IF_1
0x4000799	          0x4989c4	                            mov r12, rax	       524	libfs.c	FUNCTION_24	IF_1
0x400079c	    0x48c740400100	               mov qword [rax + 0x40], 1	       530	libfs.c	FUNCTION_24
0x40007a4	      0xb8ed410000	                         mov eax, 0x41ed	       531	libfs.c	FUNCTION_24
0x40007a9	          0x4c89e7	                            mov rdi, r12	       532	libfs.c	FUNCTION_24	CALL_2
0x40007ac	      0x6641890424	                      mov word [r12], ax	       531	libfs.c	FUNCTION_24
0x40007b1	      0xe800000000	                          call 0x40007b6	       532	libfs.c	FUNCTION_24	CALL_2
0x40007b6	      0xbe02000000	                              mov esi, 2	       535	libfs.c	FUNCTION_24	CALL_3
0x40007bb	      0x4989442478	             mov qword [r12 + 0x78], rax	       532	libfs.c	FUNCTION_24	CALL_2
0x40007c0	    0x498994248000	             mov qword [r12 + 0x80], rdx	       532	libfs.c	FUNCTION_24	CALL_2
0x40007c8	      0x4989442468	             mov qword [r12 + 0x68], rax	       532	libfs.c	FUNCTION_24	CALL_2
0x40007cd	      0x4989542470	             mov qword [r12 + 0x70], rdx	       532	libfs.c	FUNCTION_24	CALL_2
0x40007d2	          0x4c89e7	                            mov rdi, r12	       535	libfs.c	FUNCTION_24	CALL_3
0x40007d5	      0x4989442458	             mov qword [r12 + 0x58], rax	       532	libfs.c	FUNCTION_24	CALL_2
0x40007da	      0x4989542460	             mov qword [r12 + 0x60], rdx	       532	libfs.c	FUNCTION_24	CALL_2
0x40007df	    0x49c744242000	               mov qword [r12 + 0x20], 0	       533	libfs.c	FUNCTION_24
0x40007e8	    0x49c784245801	              mov qword [r12 + 0x158], 0	       534	libfs.c	FUNCTION_24
0x40007f4	      0xe800000000	                          call 0x40007f9	       535	libfs.c	FUNCTION_24	CALL_3
0x40007f9	          0x4c89e7	                            mov rdi, r12	       536	libfs.c	FUNCTION_24	CALL_4
0x40007fc	      0xe800000000	                          call 0x4000801	       536	libfs.c	FUNCTION_24	CALL_4
0x4000801	          0x4885c0	                           test rax, rax	       537	libfs.c	FUNCTION_24	IF_2
0x4000804	        0x488945c8	             mov qword [rbp - 0x38], rax	       536	libfs.c	FUNCTION_24	CALL_4
0x4000808	     0xf84df000000	                            je 0x40008ed	       537	libfs.c	FUNCTION_24	IF_2
0x400080e	          0x4531e4	                          xor r12d, r12d	       537	libfs.c	FUNCTION_24	IF_2
0x4000811	            0xeb7d	                           jmp 0x4000890	       537	libfs.c	FUNCTION_24	IF_2
0x4000813	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	       549	libfs.c	FUNCTION_24	FOR_1	CALL_7
0x4000817	      0xe800000000	                          call 0x400081c	       549	libfs.c	FUNCTION_24	FOR_1	CALL_7
0x400081c	          0x4885c0	                           test rax, rax	       550	libfs.c	FUNCTION_24	FOR_1	IF_5
0x400081f	          0x4989c5	                            mov r13, rax	       549	libfs.c	FUNCTION_24	FOR_1	CALL_7
0x4000822	     0xf84a9000000	                            je 0x40008d1	       550	libfs.c	FUNCTION_24	FOR_1	IF_5
0x4000828	          0x4c89f7	                            mov rdi, r14	       552	libfs.c	FUNCTION_24	FOR_1	CALL_8
0x400082b	      0xe800000000	                          call 0x4000830	       552	libfs.c	FUNCTION_24	FOR_1	CALL_8
0x4000830	          0x4885c0	                           test rax, rax	       553	libfs.c	FUNCTION_24	FOR_1	IF_6
0x4000833	          0x4989c7	                            mov r15, rax	       552	libfs.c	FUNCTION_24	FOR_1	CALL_8
0x4000836	     0xf848d000000	                            je 0x40008c9	       553	libfs.c	FUNCTION_24	FOR_1	IF_6
0x400083c	         0xfb74310	           movzx eax, word [rbx + 0x10] 	       557	libfs.c	FUNCTION_24	FOR_1
0x4000840	          0x4c89ff	                            mov rdi, r15	       558	libfs.c	FUNCTION_24	FOR_1	CALL_10
0x4000843	        0x660d0080	                           or ax, 0x8000	       557	libfs.c	FUNCTION_24	FOR_1
0x4000847	        0x66418907	                      mov word [r15], ax	       557	libfs.c	FUNCTION_24	FOR_1
0x400084b	      0xe800000000	                          call 0x4000850	       558	libfs.c	FUNCTION_24	FOR_1	CALL_10
0x4000850	        0x49894778	             mov qword [r15 + 0x78], rax	       558	libfs.c	FUNCTION_24	FOR_1	CALL_10
0x4000854	    0x498997800000	             mov qword [r15 + 0x80], rdx	       558	libfs.c	FUNCTION_24	FOR_1	CALL_10
0x400085b	          0x4c89fe	                            mov rsi, r15	       561	libfs.c	FUNCTION_24	FOR_1	CALL_11
0x400085e	        0x49894768	             mov qword [r15 + 0x68], rax	       558	libfs.c	FUNCTION_24	FOR_1	CALL_10
0x4000862	        0x49895770	             mov qword [r15 + 0x70], rdx	       558	libfs.c	FUNCTION_24	FOR_1	CALL_10
0x4000866	          0x4c89ef	                            mov rdi, r13	       561	libfs.c	FUNCTION_24	FOR_1	CALL_11
0x4000869	        0x49894758	             mov qword [r15 + 0x58], rax	       558	libfs.c	FUNCTION_24	FOR_1	CALL_10
0x400086d	        0x49895760	             mov qword [r15 + 0x60], rdx	       558	libfs.c	FUNCTION_24	FOR_1	CALL_10
0x4000871	        0x488b4308	                mov rax, qword [rbx + 8]	       559	libfs.c	FUNCTION_24	FOR_1
0x4000875	    0x498987580100	            mov qword [r15 + 0x158], rax	       559	libfs.c	FUNCTION_24	FOR_1
0x400087c	          0x4963c4	                        movsxd rax, r12d	       560	libfs.c	FUNCTION_24	FOR_1
0x400087f	        0x49894740	             mov qword [r15 + 0x40], rax	       560	libfs.c	FUNCTION_24	FOR_1
0x4000883	      0xe800000000	                          call 0x4000888	       561	libfs.c	FUNCTION_24	FOR_1	CALL_11
0x4000888	        0x4183c401	                             add r12d, 1	       539	libfs.c	FUNCTION_24	FOR_1
0x400088c	        0x4883c318	                           add rbx, 0x18	       539	libfs.c	FUNCTION_24	FOR_1
0x4000890	          0x488b33	                    mov rsi, qword [rbx]	       539	libfs.c	FUNCTION_24	FOR_1
0x4000893	          0x4885f6	                           test rsi, rsi	       539	libfs.c	FUNCTION_24	FOR_1
0x4000896	            0x74f0	                            je 0x4000888	       539	libfs.c	FUNCTION_24	FOR_1
0x4000898	          0x803e00	                       cmp byte [rsi], 0	       539	libfs.c	FUNCTION_24	FOR_1
0x400089b	            0x7466	                            je 0x4000903	       539	libfs.c	FUNCTION_24	FOR_1
0x400089d	        0x4183fc01	                             cmp r12d, 1	       544	libfs.c	FUNCTION_24	FOR_1	IF_4	CALL_5
0x40008a1	     0xf856cffffff	                           jne 0x4000813	       544	libfs.c	FUNCTION_24	FOR_1	IF_4	CALL_5
0x40008a7	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       545	libfs.c	FUNCTION_24	FOR_1	IF_4	CALL_6
0x40008ab	    0x48c7c6000000	                              mov rsi, 0	       545	libfs.c	FUNCTION_24	FOR_1	IF_4	CALL_6
0x40008b2	    0x48c7c7000000	                              mov rdi, 0	       545	libfs.c	FUNCTION_24	FOR_1	IF_4	CALL_6
0x40008b9	          0x488b10	                    mov rdx, qword [rax]	       545	libfs.c	FUNCTION_24	FOR_1	IF_4	CALL_6
0x40008bc	      0xe800000000	                          call 0x40008c1	       545	libfs.c	FUNCTION_24	FOR_1	IF_4	CALL_6
0x40008c1	          0x488b33	                    mov rsi, qword [rbx]	       545	libfs.c	FUNCTION_24	FOR_1	IF_4	CALL_6
0x40008c4	      0xe94affffff	                           jmp 0x4000813	       545	libfs.c	FUNCTION_24	FOR_1	IF_4	CALL_6
0x40008c9	          0x4c89ef	                            mov rdi, r13	       554	libfs.c	FUNCTION_24	FOR_1	IF_6	CALL_9
0x40008cc	      0xe800000000	                          call 0x40008d1	       554	libfs.c	FUNCTION_24	FOR_1	IF_6	CALL_9
0x40008d1	        0x488b5dc8	             mov rbx, qword [rbp - 0x38]	       566	libfs.c	FUNCTION_24	CALL_12
0x40008d5	          0x4889df	                            mov rdi, rbx	       566	libfs.c	FUNCTION_24	CALL_12
0x40008d8	      0xe800000000	                          call 0x40008dd	       566	libfs.c	FUNCTION_24	CALL_12
0x40008dd	          0x4889df	                            mov rdi, rbx	       567	libfs.c	FUNCTION_24	CALL_13
0x40008e0	      0xe800000000	                          call 0x40008e5	       567	libfs.c	FUNCTION_24	CALL_13
0x40008e5	          0x4889df	                            mov rdi, rbx	       568	libfs.c	FUNCTION_24	CALL_14
0x40008e8	      0xe800000000	                          call 0x40008ed	       568	libfs.c	FUNCTION_24	CALL_14
0x40008ed	      0xb8f4ffffff	                     mov eax, 0xfffffff4	       569	libfs.c	FUNCTION_24
0x40008f2	        0x4883c408	                              add rsp, 8	       570	libfs.c	FUNCTION_24
0x40008f6	              0x5b	                                 pop rbx	       570	libfs.c	FUNCTION_24
0x40008f7	            0x415a	                                 pop r10	       570	libfs.c	FUNCTION_24
0x40008f9	            0x415c	                                 pop r12	       570	libfs.c	FUNCTION_24
0x40008fb	            0x415d	                                 pop r13	       570	libfs.c	FUNCTION_24
0x40008fd	            0x415e	                                 pop r14	       570	libfs.c	FUNCTION_24
0x40008ff	            0x415f	                                 pop r15	       570	libfs.c	FUNCTION_24
0x4000901	              0x5d	                                 pop rbp	       570	libfs.c	FUNCTION_24
0x4000902	              0xc3	                                     ret	       570	libfs.c	FUNCTION_24
0x4000903	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       563	libfs.c	FUNCTION_24
0x4000907	        0x49894668	             mov qword [r14 + 0x68], rax	       563	libfs.c	FUNCTION_24
0x400090b	            0x31c0	                            xor eax, eax	       564	libfs.c	FUNCTION_24
0x400090d	            0xebe3	                           jmp 0x40008f2	       564	libfs.c	FUNCTION_24
generic_read_dir	IF,0:functions,0:CALL,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	2
0x4000140	    0x48c7c0ebffff	             mov rax, 0xffffffffffffffeb	       214	libfs.c	FUNCTION_12
0x4000147	              0xc3	                                     ret	       214	libfs.c	FUNCTION_12
empty_dir_listxattr	IF,0:functions,0:CALL,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	2
0x4000270	    0x48c7c0a1ffff	             mov rax, 0xffffffffffffffa1	      1206	libfs.c	FUNCTION_55
0x4000277	              0xc3	                                     ret	      1206	libfs.c	FUNCTION_55
is_empty_dir_inode	IF,0:functions,0:CALL,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	7
0x40016f0	            0x31c0	                            xor eax, eax	      1253	libfs.c	FUNCTION_59
0x40016f2	    0x4881bf580100	              cmp qword [rdi + 0x158], 0	      1254	libfs.c	FUNCTION_59
0x40016fd	            0x7402	                            je 0x4001701	      1254	libfs.c	FUNCTION_59
0x40016ff	            0xf3c3	                                     ret	      1256	libfs.c	FUNCTION_59
0x4001701	    0x48817f200000	               cmp qword [rdi + 0x20], 0	      1254	libfs.c	FUNCTION_59
0x4001709	           0xf94c0	                                 sete al	      1254	libfs.c	FUNCTION_59
0x400170c	              0xc3	                                     ret	      1256	libfs.c	FUNCTION_59
simple_unlink	IF,0:functions,0:CALL,4:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	28
0x4000530	              0x55	                                push rbp	       332	libfs.c	FUNCTION_17
0x4000531	          0x4889e5	                            mov rbp, rsp	       332	libfs.c	FUNCTION_17
0x4000534	            0x4155	                                push r13	       332	libfs.c	FUNCTION_17
0x4000536	            0x4154	                                push r12	       332	libfs.c	FUNCTION_17
0x4000538	            0x4152	                                push r10	       332	libfs.c	FUNCTION_17
0x400053a	              0x53	                                push rbx	       332	libfs.c	FUNCTION_17
0x400053b	          0x4989fd	                            mov r13, rdi	       332	libfs.c	FUNCTION_17
0x400053e	        0x488b5e30	            mov rbx, qword [rsi + 0x30] 	       332	libfs.c	FUNCTION_17
0x4000542	          0x4989f4	                            mov r12, rsi	       332	libfs.c	FUNCTION_17
0x4000545	          0x4889df	                            mov rdi, rbx	       335	libfs.c	FUNCTION_17	CALL_2
0x4000548	      0xe800000000	                          call 0x400054d	       335	libfs.c	FUNCTION_17	CALL_2
0x400054d	          0x4889df	                            mov rdi, rbx	       336	libfs.c	FUNCTION_17	CALL_3
0x4000550	        0x49894568	             mov qword [r13 + 0x68], rax	       335	libfs.c	FUNCTION_17	CALL_2
0x4000554	        0x49894578	             mov qword [r13 + 0x78], rax	       335	libfs.c	FUNCTION_17	CALL_2
0x4000558	        0x49895570	             mov qword [r13 + 0x70], rdx	       335	libfs.c	FUNCTION_17	CALL_2
0x400055c	    0x498995800000	             mov qword [r13 + 0x80], rdx	       335	libfs.c	FUNCTION_17	CALL_2
0x4000563	        0x48894378	             mov qword [rbx + 0x78], rax	       335	libfs.c	FUNCTION_17	CALL_2
0x4000567	    0x488993800000	             mov qword [rbx + 0x80], rdx	       335	libfs.c	FUNCTION_17	CALL_2
0x400056e	      0xe800000000	                          call 0x4000573	       336	libfs.c	FUNCTION_17	CALL_3
0x4000573	          0x4c89e7	                            mov rdi, r12	       337	libfs.c	FUNCTION_17	CALL_4
0x4000576	      0xe800000000	                          call 0x400057b	       337	libfs.c	FUNCTION_17	CALL_4
0x400057b	            0x31c0	                            xor eax, eax	       339	libfs.c	FUNCTION_17
0x400057d	              0x5b	                                 pop rbx	       339	libfs.c	FUNCTION_17
0x400057e	            0x415a	                                 pop r10	       339	libfs.c	FUNCTION_17
0x4000580	            0x415c	                                 pop r12	       339	libfs.c	FUNCTION_17
0x4000582	            0x415d	                                 pop r13	       339	libfs.c	FUNCTION_17
0x4000584	              0x5d	                                 pop rbp	       339	libfs.c	FUNCTION_17
0x4000585	              0xc3	                                     ret	       339	libfs.c	FUNCTION_17
empty_dir_getattr	IF,0:functions,0:CALL,2:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	5
0x40002b0	        0x488b4708	                mov rax, qword [rdi + 8]	      1192	libfs.c	FUNCTION_53
0x40002b4	        0x488b7830	            mov rdi, qword [rax + 0x30] 	      1194	libfs.c	FUNCTION_53	CALL_2
0x40002b8	      0xe800000000	                          call 0x40002bd	      1194	libfs.c	FUNCTION_53	CALL_2
0x40002bd	            0x31c0	                            xor eax, eax	      1196	libfs.c	FUNCTION_53
0x40002bf	              0xc3	                                     ret	      1196	libfs.c	FUNCTION_53
generic_fh_to_parent	IF,1:functions,0:CALL,2:DO,0:SWITCH,1:ELSE,0:WHILE,0:FOR,0	17
0x4000b40	          0x83fa02	                              cmp edx, 2	       944	libfs.c	FUNCTION_39	IF_1
0x4000b43	            0x7e28	                           jle 0x4000b6d	       944	libfs.c	FUNCTION_39	IF_1
0x4000b45	          0x83f902	                              cmp ecx, 2	       947	libfs.c	FUNCTION_39	SWITCH_1
0x4000b48	            0x751c	                           jne 0x4000b66	       947	libfs.c	FUNCTION_39	SWITCH_1
0x4000b4a	            0x31c0	                            xor eax, eax	       949	libfs.c	FUNCTION_39	SWITCH_1	CALL_1
0x4000b4c	          0x83fa03	                              cmp edx, 3	       949	libfs.c	FUNCTION_39	SWITCH_1	CALL_1
0x4000b4f	            0x7403	                            je 0x4000b54	       949	libfs.c	FUNCTION_39	SWITCH_1	CALL_1
0x4000b51	          0x8b460c	              mov eax, dword [rsi + 0xc]	       949	libfs.c	FUNCTION_39	SWITCH_1	CALL_1
0x4000b54	          0x8b7608	                mov esi, dword [rsi + 8]	       949	libfs.c	FUNCTION_39	SWITCH_1	CALL_1
0x4000b57	            0x89c2	                            mov edx, eax	       949	libfs.c	FUNCTION_39	SWITCH_1	CALL_1
0x4000b59	      0xe800000000	                          call 0x4000b5e	       949	libfs.c	FUNCTION_39	SWITCH_1	CALL_1
0x4000b5e	          0x4889c7	                            mov rdi, rax	       949	libfs.c	FUNCTION_39	SWITCH_1	CALL_1
0x4000b61	      0xe900000000	                           jmp 0x4000b66	       954	libfs.c	FUNCTION_39	CALL_2
0x4000b66	            0x31ff	                            xor edi, edi	       942	libfs.c	FUNCTION_39
0x4000b68	      0xe900000000	                           jmp 0x4000b6d	       954	libfs.c	FUNCTION_39	CALL_2
0x4000b6d	            0x31c0	                            xor eax, eax	       955	libfs.c	FUNCTION_39
0x4000b6f	              0xc3	                                     ret	       955	libfs.c	FUNCTION_39
simple_open	IF,1:functions,0:CALL,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	6
0x4000150	    0x488b87380200	           mov rax, qword [rdi + 0x238] 	       291	libfs.c	FUNCTION_14	IF_1
0x4000157	          0x4885c0	                           test rax, rax	       291	libfs.c	FUNCTION_14	IF_1
0x400015a	            0x7407	                            je 0x4000163	       291	libfs.c	FUNCTION_14	IF_1
0x400015c	    0x488986c80000	             mov qword [rsi + 0xc8], rax	       292	libfs.c	FUNCTION_14	IF_1
0x4000163	            0x31c0	                            xor eax, eax	       294	libfs.c	FUNCTION_14
0x4000165	              0xc3	                                     ret	       294	libfs.c	FUNCTION_14
simple_getattr	IF,0:functions,0:CALL,2:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0	15
0x4000280	              0x55	                                push rbp	        26	libfs.c	FUNCTION_1
0x4000281	              0x53	                                push rbx	        26	libfs.c	FUNCTION_1
0x4000282	          0x4889f3	                            mov rbx, rsi	        26	libfs.c	FUNCTION_1
0x4000285	        0x488b4708	                mov rax, qword [rdi + 8]	        26	libfs.c	FUNCTION_1
0x4000289	        0x488b6830	            mov rbp, qword [rax + 0x30] 	        26	libfs.c	FUNCTION_1
0x400028d	          0x4889ef	                            mov rdi, rbp	        28	libfs.c	FUNCTION_1	CALL_2
0x4000290	      0xe800000000	                          call 0x4000295	        28	libfs.c	FUNCTION_1	CALL_2
0x4000295	        0x488b4530	            mov rax, qword [rbp + 0x30] 	        29	libfs.c	FUNCTION_1
0x4000299	        0x488b4058	            mov rax, qword [rax + 0x58] 	        29	libfs.c	FUNCTION_1
0x400029d	        0x48c1e003	                              shl rax, 3	        29	libfs.c	FUNCTION_1
0x40002a1	    0x488983800000	             mov qword [rbx + 0x80], rax	        29	libfs.c	FUNCTION_1
0x40002a8	            0x31c0	                            xor eax, eax	        31	libfs.c	FUNCTION_1
0x40002aa	              0x5b	                                 pop rbx	        31	libfs.c	FUNCTION_1
0x40002ab	              0x5d	                                 pop rbp	        31	libfs.c	FUNCTION_1
0x40002ac	              0xc3	                                     ret	        31	libfs.c	FUNCTION_1
