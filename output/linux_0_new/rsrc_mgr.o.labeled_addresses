static_find_io	DO,0:IF,1:WHILE,0:functions,0:ELSE,0:FOR,0:SWITCH,0:CALL,0	12
0x4000050	    0x8b8748010000	           mov eax, dword [rdi + 0x148] 	        52	rsrc_mgr.c	FUNCTION_3	IF_1
0x4000056	            0x85c0	                           test eax, eax	        52	rsrc_mgr.c	FUNCTION_3	IF_1
0x4000058	            0x7416	                            je 0x4000070	        52	rsrc_mgr.c	FUNCTION_3	IF_1
0x400005a	            0x8b0a	                    mov ecx, dword [rdx]	        54	rsrc_mgr.c	FUNCTION_3
0x400005c	    0x81e1ff0f0000	                          and ecx, 0xfff	        54	rsrc_mgr.c	FUNCTION_3
0x4000062	             0x9c8	                             or eax, ecx	        54	rsrc_mgr.c	FUNCTION_3
0x4000064	            0x8902	                    mov dword [rdx], eax	        54	rsrc_mgr.c	FUNCTION_3
0x4000066	    0x49c701000000	                       mov qword [r9], 0	        55	rsrc_mgr.c	FUNCTION_3
0x400006d	            0x31c0	                            xor eax, eax	        57	rsrc_mgr.c	FUNCTION_3
0x400006f	              0xc3	                                     ret	        57	rsrc_mgr.c	FUNCTION_3
0x4000070	      0xb8eaffffff	                     mov eax, 0xffffffea	        53	rsrc_mgr.c	FUNCTION_3	IF_1
0x4000075	              0xc3	                                     ret	        58	rsrc_mgr.c	FUNCTION_3
static_init	DO,0:IF,0:WHILE,0:functions,0:ELSE,0:FOR,0:SWITCH,0:CALL,0	3
0x4000040	    0xc68758010000	               mov byte [rdi + 0x158], 1	        28	rsrc_mgr.c	FUNCTION_1
0x4000047	            0x31c0	                            xor eax, eax	        31	rsrc_mgr.c	FUNCTION_1
0x4000049	              0xc3	                                     ret	        31	rsrc_mgr.c	FUNCTION_1
