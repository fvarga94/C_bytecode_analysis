cdev_device_del	WHILE,0:CALL,2:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,1	16
0x4000360	              0x55	                                push rbp	       572	char_dev.c	FUNCTION_21
0x4000361	              0x53	                                push rbx	       572	char_dev.c	FUNCTION_21
0x4000362	          0x4889fd	                            mov rbp, rdi	       572	char_dev.c	FUNCTION_21
0x4000365	          0x4889f3	                            mov rbx, rsi	       572	char_dev.c	FUNCTION_21
0x4000368	          0x4889f7	                            mov rdi, rsi	       573	char_dev.c	FUNCTION_21	CALL_1
0x400036b	      0xe800000000	                          call 0x4000370	       573	char_dev.c	FUNCTION_21	CALL_1
0x4000370	    0x8b8360020000	           mov eax, dword [rbx + 0x260] 	       574	char_dev.c	FUNCTION_21	IF_1
0x4000376	            0x85c0	                           test eax, eax	       574	char_dev.c	FUNCTION_21	IF_1
0x4000378	            0x7503	                           jne 0x400037d	       574	char_dev.c	FUNCTION_21	IF_1
0x400037a	              0x5b	                                 pop rbx	       576	char_dev.c	FUNCTION_21
0x400037b	              0x5d	                                 pop rbp	       576	char_dev.c	FUNCTION_21
0x400037c	              0xc3	                                     ret	       576	char_dev.c	FUNCTION_21
0x400037d	          0x4889ef	                            mov rdi, rbp	       575	char_dev.c	FUNCTION_21	CALL_2
0x4000380	              0x5b	                                 pop rbx	       576	char_dev.c	FUNCTION_21
0x4000381	              0x5d	                                 pop rbp	       576	char_dev.c	FUNCTION_21
0x4000382	      0xe929ffffff	                        jmp sym.cdev_del	       575	char_dev.c	FUNCTION_21	CALL_2
__register_chrdev	WHILE,0:CALL,10:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,3	69
0x4000740	            0x4157	                                push r15	       274	char_dev.c	FUNCTION_8
0x4000742	            0x4156	                                push r14	       274	char_dev.c	FUNCTION_8
0x4000744	          0x4989cf	                            mov r15, rcx	       274	char_dev.c	FUNCTION_8
0x4000747	            0x4155	                                push r13	       274	char_dev.c	FUNCTION_8
0x4000749	            0x4154	                                push r12	       274	char_dev.c	FUNCTION_8
0x400074b	          0x4189d5	                           mov r13d, edx	       274	char_dev.c	FUNCTION_8
0x400074e	              0x55	                                push rbp	       274	char_dev.c	FUNCTION_8
0x400074f	              0x53	                                push rbx	       274	char_dev.c	FUNCTION_8
0x4000750	          0x4189f4	                           mov r12d, esi	       274	char_dev.c	FUNCTION_8
0x4000753	          0x4d89c6	                             mov r14, r8	       274	char_dev.c	FUNCTION_8
0x4000756	        0x4883ec08	                              sub rsp, 8	       274	char_dev.c	FUNCTION_8
0x400075a	        0x897c2404	                mov dword [rsp + 4], edi	       274	char_dev.c	FUNCTION_8
0x400075e	      0xe88dfcffff	       call sym.__register_chrdev_region	       279	char_dev.c	FUNCTION_8	CALL_1
0x4000763	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       280	char_dev.c	FUNCTION_8	IF_1	CALL_2
0x4000769	          0x4889c5	                            mov rbp, rax	       279	char_dev.c	FUNCTION_8	CALL_1
0x400076c	            0x775a	                            ja 0x40007c8	       280	char_dev.c	FUNCTION_8	IF_1	CALL_2
0x400076e	      0xe800000000	                          call 0x4000773	       283	char_dev.c	FUNCTION_8	CALL_4
0x4000773	          0x4885c0	                           test rax, rax	       284	char_dev.c	FUNCTION_8	IF_2
0x4000776	          0x4889c3	                            mov rbx, rax	       283	char_dev.c	FUNCTION_8	CALL_4
0x4000779	     0xf8488000000	                            je 0x4000807	       284	char_dev.c	FUNCTION_8	IF_2
0x400077f	          0x498b06	                    mov rax, qword [r14]	       287	char_dev.c	FUNCTION_8
0x4000782	          0x4c89fa	                            mov rdx, r15	       289	char_dev.c	FUNCTION_8	CALL_5
0x4000785	    0x48c7c6000000	                              mov rsi, 0	       289	char_dev.c	FUNCTION_8	CALL_5
0x400078c	          0x4889df	                            mov rdi, rbx	       289	char_dev.c	FUNCTION_8	CALL_5
0x400078f	        0x4c897348	             mov qword [rbx + 0x48], r14	       288	char_dev.c	FUNCTION_8
0x4000793	        0x48894340	             mov qword [rbx + 0x40], rax	       287	char_dev.c	FUNCTION_8
0x4000797	      0xe800000000	                          call 0x400079c	       289	char_dev.c	FUNCTION_8	CALL_5
0x400079c	          0x8b7508	                mov esi, dword [rbp + 8]	       291	char_dev.c	FUNCTION_8	CALL_7
0x400079f	          0x4489ea	                           mov edx, r13d	       291	char_dev.c	FUNCTION_8	CALL_7
0x40007a2	          0x4889df	                            mov rdi, rbx	       291	char_dev.c	FUNCTION_8	CALL_7
0x40007a5	          0xc1e614	                           shl esi, 0x14	       291	char_dev.c	FUNCTION_8	CALL_7
0x40007a8	          0x4409e6	                            or esi, r12d	       291	char_dev.c	FUNCTION_8	CALL_7
0x40007ab	      0xe800000000	                          call 0x40007b0	       291	char_dev.c	FUNCTION_8	CALL_7
0x40007b0	            0x85c0	                           test eax, eax	       292	char_dev.c	FUNCTION_8	IF_3
0x40007b2	          0x4189c7	                           mov r15d, eax	       291	char_dev.c	FUNCTION_8	CALL_7
0x40007b5	            0x7520	                           jne 0x40007d7	       292	char_dev.c	FUNCTION_8	IF_3
0x40007b7	        0x8b542404	                mov edx, dword [rsp + 4]	       297	char_dev.c	FUNCTION_8
0x40007bb	            0x31c0	                            xor eax, eax	       297	char_dev.c	FUNCTION_8
0x40007bd	        0x48895d58	            mov qword [rbp + 0x58], rbx 	       295	char_dev.c	FUNCTION_8
0x40007c1	            0x85d2	                           test edx, edx	       297	char_dev.c	FUNCTION_8
0x40007c3	            0x7503	                           jne 0x40007c8	       297	char_dev.c	FUNCTION_8
0x40007c5	          0x8b4508	                mov eax, dword [rbp + 8]	       297	char_dev.c	FUNCTION_8
0x40007c8	        0x4883c408	                              add rsp, 8	       303	char_dev.c	FUNCTION_8
0x40007cc	              0x5b	                                 pop rbx	       303	char_dev.c	FUNCTION_8
0x40007cd	              0x5d	                                 pop rbp	       303	char_dev.c	FUNCTION_8
0x40007ce	            0x415c	                                 pop r12	       303	char_dev.c	FUNCTION_8
0x40007d0	            0x415d	                                 pop r13	       303	char_dev.c	FUNCTION_8
0x40007d2	            0x415e	                                 pop r14	       303	char_dev.c	FUNCTION_8
0x40007d4	            0x415f	                                 pop r15	       303	char_dev.c	FUNCTION_8
0x40007d6	              0xc3	                                     ret	       303	char_dev.c	FUNCTION_8
0x40007d7	          0x4889df	                            mov rdi, rbx	       299	char_dev.c	FUNCTION_8	CALL_8
0x40007da	      0xe800000000	                          call 0x40007df	       299	char_dev.c	FUNCTION_8	CALL_8
0x40007df	          0x8b7d08	                mov edi, dword [rbp + 8]	       301	char_dev.c	FUNCTION_8	CALL_10
0x40007e2	          0x4489ea	                           mov edx, r13d	       301	char_dev.c	FUNCTION_8	CALL_10
0x40007e5	          0x4489e6	                           mov esi, r12d	       301	char_dev.c	FUNCTION_8	CALL_10
0x40007e8	      0xe8f3f8ffff	     call sym.__unregister_chrdev_region	       301	char_dev.c	FUNCTION_8	CALL_10
0x40007ed	          0x4889c7	                            mov rdi, rax	       301	char_dev.c	FUNCTION_8	CALL_10
0x40007f0	      0xe800000000	                          call 0x40007f5	       301	char_dev.c	FUNCTION_8	CALL_10
0x40007f5	        0x4883c408	                              add rsp, 8	       303	char_dev.c	FUNCTION_8
0x40007f9	          0x4489f8	                           mov eax, r15d	       302	char_dev.c	FUNCTION_8
0x40007fc	              0x5b	                                 pop rbx	       303	char_dev.c	FUNCTION_8
0x40007fd	              0x5d	                                 pop rbp	       303	char_dev.c	FUNCTION_8
0x40007fe	            0x415c	                                 pop r12	       303	char_dev.c	FUNCTION_8
0x4000800	            0x415d	                                 pop r13	       303	char_dev.c	FUNCTION_8
0x4000802	            0x415e	                                 pop r14	       303	char_dev.c	FUNCTION_8
0x4000804	            0x415f	                                 pop r15	       303	char_dev.c	FUNCTION_8
0x4000806	              0xc3	                                     ret	       303	char_dev.c	FUNCTION_8
0x4000807	    0x41bff4ffffff	                    mov r15d, 0xfffffff4	       277	char_dev.c	FUNCTION_8
0x400080d	            0xebd0	                           jmp 0x40007df	       277	char_dev.c	FUNCTION_8
register_chrdev_region	WHILE,0:CALL,13:SWITCH,0:FOR,2:functions,0:ELSE,0:DO,0:IF,2	63
0x4000620	            0x4157	                                push r15	       204	char_dev.c	FUNCTION_6
0x4000622	        0x448d3c37	                   lea r15d, [rdi + rsi]	       206	char_dev.c	FUNCTION_6
0x4000626	            0x4156	                                push r14	       204	char_dev.c	FUNCTION_6
0x4000628	            0x4155	                                push r13	       204	char_dev.c	FUNCTION_6
0x400062a	          0x4989d5	                            mov r13, rdx	       204	char_dev.c	FUNCTION_6
0x400062d	            0x4154	                                push r12	       204	char_dev.c	FUNCTION_6
0x400062f	          0x4439ff	                           cmp edi, r15d	       209	char_dev.c	FUNCTION_6	FOR_1
0x4000632	              0x55	                                push rbp	       204	char_dev.c	FUNCTION_6
0x4000633	          0x4189fc	                           mov r12d, edi	       204	char_dev.c	FUNCTION_6
0x4000636	              0x53	                                push rbx	       204	char_dev.c	FUNCTION_6
0x4000637	            0x89fd	                            mov ebp, edi	       204	char_dev.c	FUNCTION_6
0x4000639	            0x720a	                            jb 0x4000645	       209	char_dev.c	FUNCTION_6	FOR_1
0x400063b	            0xeb79	                           jmp 0x40006b6	       209	char_dev.c	FUNCTION_6	FOR_1
0x400063d	          0x4139df	                           cmp r15d, ebx	       209	char_dev.c	FUNCTION_6	FOR_1
0x4000640	          0x4189dc	                           mov r12d, ebx	       209	char_dev.c	FUNCTION_6	FOR_1
0x4000643	            0x7671	                           jbe 0x40006b6	       209	char_dev.c	FUNCTION_6	FOR_1
0x4000645	          0x4489e7	                           mov edi, r12d	       210	char_dev.c	FUNCTION_6	FOR_1	CALL_2
0x4000648	          0x4489e6	                           mov esi, r12d	       213	char_dev.c	FUNCTION_6	FOR_1	CALL_5
0x400064b	          0x4c89e9	                            mov rcx, r13	       213	char_dev.c	FUNCTION_6	FOR_1	CALL_5
0x400064e	          0xc1ef14	                           shr edi, 0x14	       210	char_dev.c	FUNCTION_6	FOR_1	CALL_2
0x4000651	          0x8d4701	                      lea eax, [rdi + 1]	       210	char_dev.c	FUNCTION_6	FOR_1	CALL_2
0x4000654	          0xc1e014	                           shl eax, 0x14	       210	char_dev.c	FUNCTION_6	FOR_1	CALL_2
0x4000657	          0x4139c7	                           cmp r15d, eax	       210	char_dev.c	FUNCTION_6	FOR_1	CALL_2
0x400065a	        0x410f46c7	                        cmovbe eax, r15d	       210	char_dev.c	FUNCTION_6	FOR_1	CALL_2
0x400065e	    0x81e6ffff0f00	                        and esi, 0xfffff	       213	char_dev.c	FUNCTION_6	FOR_1	CALL_5
0x4000664	            0x89c2	                            mov edx, eax	       213	char_dev.c	FUNCTION_6	FOR_1	CALL_5
0x4000666	            0x89c3	                            mov ebx, eax	       213	char_dev.c	FUNCTION_6	FOR_1	CALL_5
0x4000668	          0x4429e2	                           sub edx, r12d	       213	char_dev.c	FUNCTION_6	FOR_1	CALL_5
0x400066b	      0xe880fdffff	       call sym.__register_chrdev_region	       213	char_dev.c	FUNCTION_6	FOR_1	CALL_5
0x4000670	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       215	char_dev.c	FUNCTION_6	FOR_1	IF_2	CALL_6
0x4000676	          0x4989c6	                            mov r14, rax	       213	char_dev.c	FUNCTION_6	FOR_1	CALL_5
0x4000679	            0x76c2	                           jbe 0x400063d	       215	char_dev.c	FUNCTION_6	FOR_1	IF_2	CALL_6
0x400067b	            0xeb26	                           jmp 0x40006a3	       215	char_dev.c	FUNCTION_6	FOR_1	IF_2	CALL_6
0x400067d	            0x89ef	                            mov edi, ebp	       222	char_dev.c	FUNCTION_6	FOR_2	CALL_8
0x400067f	            0x89ee	                            mov esi, ebp	       223	char_dev.c	FUNCTION_6	FOR_2	CALL_12
0x4000681	          0xc1ef14	                           shr edi, 0x14	       222	char_dev.c	FUNCTION_6	FOR_2	CALL_8
0x4000684	    0x81e6ffff0f00	                        and esi, 0xfffff	       223	char_dev.c	FUNCTION_6	FOR_2	CALL_12
0x400068a	          0x8d5f01	                      lea ebx, [rdi + 1]	       222	char_dev.c	FUNCTION_6	FOR_2	CALL_8
0x400068d	          0xc1e314	                           shl ebx, 0x14	       222	char_dev.c	FUNCTION_6	FOR_2	CALL_8
0x4000690	            0x89da	                            mov edx, ebx	       223	char_dev.c	FUNCTION_6	FOR_2	CALL_12
0x4000692	            0x29ea	                            sub edx, ebp	       223	char_dev.c	FUNCTION_6	FOR_2	CALL_12
0x4000694	            0x89dd	                            mov ebp, ebx	       223	char_dev.c	FUNCTION_6	FOR_2	CALL_12
0x4000696	      0xe845faffff	     call sym.__unregister_chrdev_region	       223	char_dev.c	FUNCTION_6	FOR_2	CALL_12
0x400069b	          0x4889c7	                            mov rdi, rax	       223	char_dev.c	FUNCTION_6	FOR_2	CALL_12
0x400069e	      0xe800000000	                          call 0x40006a3	       223	char_dev.c	FUNCTION_6	FOR_2	CALL_12
0x40006a3	          0x4439e5	                           cmp ebp, r12d	       221	char_dev.c	FUNCTION_6	FOR_2
0x40006a6	            0x72d5	                            jb 0x400067d	       221	char_dev.c	FUNCTION_6	FOR_2
0x40006a8	              0x5b	                                 pop rbx	       226	char_dev.c	FUNCTION_6
0x40006a9	          0x4489f0	                           mov eax, r14d	       225	char_dev.c	FUNCTION_6	CALL_13
0x40006ac	              0x5d	                                 pop rbp	       226	char_dev.c	FUNCTION_6
0x40006ad	            0x415c	                                 pop r12	       226	char_dev.c	FUNCTION_6
0x40006af	            0x415d	                                 pop r13	       226	char_dev.c	FUNCTION_6
0x40006b1	            0x415e	                                 pop r14	       226	char_dev.c	FUNCTION_6
0x40006b3	            0x415f	                                 pop r15	       226	char_dev.c	FUNCTION_6
0x40006b5	              0xc3	                                     ret	       226	char_dev.c	FUNCTION_6
0x40006b6	              0x5b	                                 pop rbx	       226	char_dev.c	FUNCTION_6
0x40006b7	            0x31c0	                            xor eax, eax	       218	char_dev.c	FUNCTION_6
0x40006b9	              0x5d	                                 pop rbp	       226	char_dev.c	FUNCTION_6
0x40006ba	            0x415c	                                 pop r12	       226	char_dev.c	FUNCTION_6
0x40006bc	            0x415d	                                 pop r13	       226	char_dev.c	FUNCTION_6
0x40006be	            0x415e	                                 pop r14	       226	char_dev.c	FUNCTION_6
0x40006c0	            0x415f	                                 pop r15	       226	char_dev.c	FUNCTION_6
0x40006c2	              0xc3	                                     ret	       226	char_dev.c	FUNCTION_6
cdev_dynamic_release	WHILE,0:CALL,4:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,0	11
0x40001d0	              0x55	                                push rbp	       611	char_dev.c	FUNCTION_25
0x40001d1	              0x53	                                push rbx	       611	char_dev.c	FUNCTION_25
0x40001d2	          0x4889fb	                            mov rbx, rdi	       611	char_dev.c	FUNCTION_25
0x40001d5	        0x488b6f18	            mov rbp, qword [rdi + 0x18] 	       613	char_dev.c	FUNCTION_25
0x40001d9	      0xe862feffff	                     call sym.cdev_purge	       615	char_dev.c	FUNCTION_25	CALL_2
0x40001de	          0x4889df	                            mov rdi, rbx	       616	char_dev.c	FUNCTION_25	CALL_3
0x40001e1	      0xe800000000	                          call 0x40001e6	       616	char_dev.c	FUNCTION_25	CALL_3
0x40001e6	          0x4889ef	                            mov rdi, rbp	       617	char_dev.c	FUNCTION_25	CALL_4
0x40001e9	              0x5b	                                 pop rbx	       618	char_dev.c	FUNCTION_25
0x40001ea	              0x5d	                                 pop rbp	       618	char_dev.c	FUNCTION_25
0x40001eb	      0xe900000000	            jmp sym.cdev_default_release	       617	char_dev.c	FUNCTION_25	CALL_4
cdev_del	WHILE,0:CALL,2:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,0	9
0x40002b0	              0x53	                                push rbx	       595	char_dev.c	FUNCTION_23
0x40002b1	          0x8b5764	            mov edx, dword [rdi + 0x64] 	       580	char_dev.c	FUNCTION_22	CALL_1
0x40002b4	          0x4889fb	                            mov rbx, rdi	       595	char_dev.c	FUNCTION_23
0x40002b7	          0x8b7760	            mov esi, dword [rdi + 0x60] 	       580	char_dev.c	FUNCTION_22	CALL_1
0x40002ba	    0x488b3d000000	            mov rdi, qword [0x040002c1] 	       580	char_dev.c	FUNCTION_22	CALL_1
0x40002c1	      0xe800000000	                          call 0x40002c6	       580	char_dev.c	FUNCTION_22	CALL_1
0x40002c6	          0x4889df	                            mov rdi, rbx	       597	char_dev.c	FUNCTION_23	CALL_2
0x40002c9	              0x5b	                                 pop rbx	       598	char_dev.c	FUNCTION_23
0x40002ca	      0xe900000000	                           jmp 0x40002cf	       597	char_dev.c	FUNCTION_23	CALL_2
base_probe	WHILE,0:CALL,5:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,1	18
0x40000a0	              0x53	                                push rbx	       660	char_dev.c	FUNCTION_28
0x40000a1	            0x89fb	                            mov ebx, edi	       661	char_dev.c	FUNCTION_28	IF_1	CALL_3
0x40000a3	            0x89f9	                            mov ecx, edi	       661	char_dev.c	FUNCTION_28	IF_1	CALL_3
0x40000a5	          0xc1eb14	                           shr ebx, 0x14	       661	char_dev.c	FUNCTION_28	IF_1	CALL_3
0x40000a8	    0x81e1ffff0f00	                        and ecx, 0xfffff	       661	char_dev.c	FUNCTION_28	IF_1	CALL_3
0x40000ae	    0x48c7c6000000	                              mov rsi, 0	       661	char_dev.c	FUNCTION_28	IF_1	CALL_3
0x40000b5	            0x89da	                            mov edx, ebx	       661	char_dev.c	FUNCTION_28	IF_1	CALL_3
0x40000b7	      0xbf01000000	                              mov edi, 1	       661	char_dev.c	FUNCTION_28	IF_1	CALL_3
0x40000bc	      0xe800000000	                          call 0x40000c1	       661	char_dev.c	FUNCTION_28	IF_1	CALL_3
0x40000c1	            0x85c0	                           test eax, eax	       661	char_dev.c	FUNCTION_28	IF_1	CALL_3
0x40000c3	            0x7e13	                           jle 0x40000d8	       661	char_dev.c	FUNCTION_28	IF_1	CALL_3
0x40000c5	            0x89da	                            mov edx, ebx	       663	char_dev.c	FUNCTION_28	CALL_5
0x40000c7	    0x48c7c6000000	                              mov rsi, 0	       663	char_dev.c	FUNCTION_28	CALL_5
0x40000ce	      0xbf01000000	                              mov edi, 1	       663	char_dev.c	FUNCTION_28	CALL_5
0x40000d3	      0xe800000000	                          call 0x40000d8	       663	char_dev.c	FUNCTION_28	CALL_5
0x40000d8	            0x31c0	                            xor eax, eax	       665	char_dev.c	FUNCTION_28
0x40000da	              0x5b	                                 pop rbx	       665	char_dev.c	FUNCTION_28
0x40000db	              0xc3	                                     ret	       665	char_dev.c	FUNCTION_28
cdev_put	WHILE,0:CALL,2:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,1	9
0x4000890	          0x4885ff	                           test rdi, rdi	       366	char_dev.c	FUNCTION_12	IF_1
0x4000893	            0x7413	                            je 0x40008a8	       366	char_dev.c	FUNCTION_12	IF_1
0x4000895	              0x53	                                push rbx	       365	char_dev.c	FUNCTION_12
0x4000896	        0x488b5f40	            mov rbx, qword [rdi + 0x40] 	       367	char_dev.c	FUNCTION_12	IF_1
0x400089a	      0xe800000000	                          call 0x400089f	       368	char_dev.c	FUNCTION_12	IF_1	CALL_1
0x400089f	          0x4889df	                            mov rdi, rbx	       369	char_dev.c	FUNCTION_12	IF_1	CALL_2
0x40008a2	              0x5b	                                 pop rbx	       371	char_dev.c	FUNCTION_12
0x40008a3	      0xe900000000	                           jmp 0x40008a8	       369	char_dev.c	FUNCTION_12	IF_1	CALL_2
0x40008a8	            0xf3c3	                                     ret	       369	char_dev.c	FUNCTION_12	IF_1	CALL_2
exact_lock	WHILE,0:CALL,1:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,0	7
0x4000250	          0x4889f7	                            mov rdi, rsi	       469	char_dev.c	FUNCTION_17	CALL_1
0x4000253	      0xe8b8ffffff	                       call sym.cdev_get	       469	char_dev.c	FUNCTION_17	CALL_1
0x4000258	          0x4885c0	                           test rax, rax	       469	char_dev.c	FUNCTION_17	CALL_1
0x400025b	           0xf94c0	                                 sete al	       469	char_dev.c	FUNCTION_17	CALL_1
0x400025e	           0xfb6c0	                           movzx eax, al	       469	char_dev.c	FUNCTION_17	CALL_1
0x4000261	            0xf7d8	                                 neg eax	       469	char_dev.c	FUNCTION_17	CALL_1
0x4000263	              0xc3	                                     ret	       470	char_dev.c	FUNCTION_17
cdev_get	WHILE,0:CALL,3:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,2	23
0x4000210	              0x55	                                push rbp	       352	char_dev.c	FUNCTION_11
0x4000211	              0x53	                                push rbx	       352	char_dev.c	FUNCTION_11
0x4000212	          0x4889fd	                            mov rbp, rdi	       352	char_dev.c	FUNCTION_11
0x4000215	        0x488b5f40	            mov rbx, qword [rdi + 0x40] 	       353	char_dev.c	FUNCTION_11
0x4000219	          0x4885db	                           test rbx, rbx	       356	char_dev.c	FUNCTION_11	IF_1	CALL_1
0x400021c	            0x740c	                            je 0x400022a	       356	char_dev.c	FUNCTION_11	IF_1	CALL_1
0x400021e	          0x4889df	                            mov rdi, rbx	       356	char_dev.c	FUNCTION_11	IF_1	CALL_1
0x4000221	      0xe800000000	                          call 0x4000226	       356	char_dev.c	FUNCTION_11	IF_1	CALL_1
0x4000226	            0x84c0	                             test al, al	       356	char_dev.c	FUNCTION_11	IF_1	CALL_1
0x4000228	            0x7418	                            je 0x4000242	       356	char_dev.c	FUNCTION_11	IF_1	CALL_1
0x400022a	          0x4889ef	                            mov rdi, rbp	       358	char_dev.c	FUNCTION_11	CALL_2
0x400022d	      0xe800000000	                          call 0x4000232	       358	char_dev.c	FUNCTION_11	CALL_2
0x4000232	          0x4885c0	                           test rax, rax	       359	char_dev.c	FUNCTION_11	IF_2
0x4000235	            0x7403	                            je 0x400023a	       359	char_dev.c	FUNCTION_11	IF_2
0x4000237	              0x5b	                                 pop rbx	       362	char_dev.c	FUNCTION_11
0x4000238	              0x5d	                                 pop rbp	       362	char_dev.c	FUNCTION_11
0x4000239	              0xc3	                                     ret	       362	char_dev.c	FUNCTION_11
0x400023a	          0x4889df	                            mov rdi, rbx	       360	char_dev.c	FUNCTION_11	CALL_3
0x400023d	      0xe800000000	                          call 0x4000242	       360	char_dev.c	FUNCTION_11	CALL_3
0x4000242	            0x31c0	                            xor eax, eax	       360	char_dev.c	FUNCTION_11	CALL_3
0x4000244	              0x5b	                                 pop rbx	       362	char_dev.c	FUNCTION_11
0x4000245	              0x5d	                                 pop rbp	       362	char_dev.c	FUNCTION_11
0x4000246	              0xc3	                                     ret	       362	char_dev.c	FUNCTION_11
alloc_chrdev_region	WHILE,0:CALL,4:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,1	13
0x40006d0	              0x53	                                push rbx	       241	char_dev.c	FUNCTION_7
0x40006d1	          0x4889fb	                            mov rbx, rdi	       241	char_dev.c	FUNCTION_7
0x40006d4	            0x31ff	                            xor edi, edi	       243	char_dev.c	FUNCTION_7	CALL_1
0x40006d6	      0xe815fdffff	       call sym.__register_chrdev_region	       243	char_dev.c	FUNCTION_7	CALL_1
0x40006db	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       244	char_dev.c	FUNCTION_7	IF_1	CALL_2
0x40006e1	            0x770d	                            ja 0x40006f0	       244	char_dev.c	FUNCTION_7	IF_1	CALL_2
0x40006e3	          0x8b5008	                mov edx, dword [rax + 8]	       246	char_dev.c	FUNCTION_7	CALL_4
0x40006e6	          0xc1e214	                           shl edx, 0x14	       246	char_dev.c	FUNCTION_7	CALL_4
0x40006e9	           0xb500c	               or edx, dword [rax + 0xc]	       246	char_dev.c	FUNCTION_7	CALL_4
0x40006ec	            0x31c0	                            xor eax, eax	       247	char_dev.c	FUNCTION_7
0x40006ee	            0x8913	                    mov dword [rbx], edx	       246	char_dev.c	FUNCTION_7	CALL_4
0x40006f0	              0x5b	                                 pop rbx	       248	char_dev.c	FUNCTION_7
0x40006f1	              0xc3	                                     ret	       248	char_dev.c	FUNCTION_7
unregister_chrdev_region	WHILE,0:CALL,6:SWITCH,0:FOR,1:functions,0:ELSE,0:DO,0:IF,1	25
0x4000170	              0x55	                                push rbp	       315	char_dev.c	FUNCTION_9
0x4000171	          0x8d2c37	                    lea ebp, [rdi + rsi]	       316	char_dev.c	FUNCTION_9
0x4000174	              0x53	                                push rbx	       315	char_dev.c	FUNCTION_9
0x4000175	            0x39ef	                            cmp edi, ebp	       319	char_dev.c	FUNCTION_9	FOR_1
0x4000177	            0x7330	                           jae 0x40001a9	       319	char_dev.c	FUNCTION_9	FOR_1
0x4000179	            0x89f8	                            mov eax, edi	       319	char_dev.c	FUNCTION_9	FOR_1
0x400017b	            0x89c7	                            mov edi, eax	       320	char_dev.c	FUNCTION_9	FOR_1	CALL_2
0x400017d	          0xc1ef14	                           shr edi, 0x14	       320	char_dev.c	FUNCTION_9	FOR_1	CALL_2
0x4000180	          0x8d5f01	                      lea ebx, [rdi + 1]	       320	char_dev.c	FUNCTION_9	FOR_1	CALL_2
0x4000183	          0xc1e314	                           shl ebx, 0x14	       320	char_dev.c	FUNCTION_9	FOR_1	CALL_2
0x4000186	            0x39dd	                            cmp ebp, ebx	       320	char_dev.c	FUNCTION_9	FOR_1	CALL_2
0x4000188	           0xf46dd	                         cmovbe ebx, ebp	       320	char_dev.c	FUNCTION_9	FOR_1	CALL_2
0x400018b	            0x89da	                            mov edx, ebx	       323	char_dev.c	FUNCTION_9	FOR_1	CALL_6
0x400018d	            0x29c2	                            sub edx, eax	       323	char_dev.c	FUNCTION_9	FOR_1	CALL_6
0x400018f	      0x25ffff0f00	                        and eax, 0xfffff	       323	char_dev.c	FUNCTION_9	FOR_1	CALL_6
0x4000194	            0x89c6	                            mov esi, eax	       323	char_dev.c	FUNCTION_9	FOR_1	CALL_6
0x4000196	      0xe845ffffff	     call sym.__unregister_chrdev_region	       323	char_dev.c	FUNCTION_9	FOR_1	CALL_6
0x400019b	          0x4889c7	                            mov rdi, rax	       323	char_dev.c	FUNCTION_9	FOR_1	CALL_6
0x400019e	      0xe800000000	                          call 0x40001a3	       323	char_dev.c	FUNCTION_9	FOR_1	CALL_6
0x40001a3	            0x39dd	                            cmp ebp, ebx	       319	char_dev.c	FUNCTION_9	FOR_1
0x40001a5	            0x89d8	                            mov eax, ebx	       319	char_dev.c	FUNCTION_9	FOR_1
0x40001a7	            0x77d2	                            ja 0x400017b	       319	char_dev.c	FUNCTION_9	FOR_1
0x40001a9	              0x5b	                                 pop rbx	       325	char_dev.c	FUNCTION_9
0x40001aa	              0x5d	                                 pop rbp	       325	char_dev.c	FUNCTION_9
0x40001ab	              0xc3	                                     ret	       325	char_dev.c	FUNCTION_9
__unregister_chrdev	WHILE,0:CALL,3:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,1	12
0x40002d0	              0x53	                                push rbx	       340	char_dev.c	FUNCTION_10
0x40002d1	      0xe80afeffff	     call sym.__unregister_chrdev_region	       343	char_dev.c	FUNCTION_10	CALL_1
0x40002d6	          0x4885c0	                           test rax, rax	       344	char_dev.c	FUNCTION_10	IF_1
0x40002d9	          0x4889c3	                            mov rbx, rax	       343	char_dev.c	FUNCTION_10	CALL_1
0x40002dc	            0x740e	                            je 0x40002ec	       344	char_dev.c	FUNCTION_10	IF_1
0x40002de	        0x488b7858	            mov rdi, qword [rax + 0x58] 	       344	char_dev.c	FUNCTION_10	IF_1
0x40002e2	          0x4885ff	                           test rdi, rdi	       344	char_dev.c	FUNCTION_10	IF_1
0x40002e5	            0x7405	                            je 0x40002ec	       344	char_dev.c	FUNCTION_10	IF_1
0x40002e7	      0xe800000000	                          call 0x40002ec	       345	char_dev.c	FUNCTION_10	CALL_2
0x40002ec	          0x4889df	                            mov rdi, rbx	       346	char_dev.c	FUNCTION_10	CALL_3
0x40002ef	              0x5b	                                 pop rbx	       347	char_dev.c	FUNCTION_10
0x40002f0	      0xe900000000	                           jmp 0x40002f5	       346	char_dev.c	FUNCTION_10	CALL_3
cdev_default_release	WHILE,0:CALL,3:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,0	6
0x40001f0	              0x53	                                push rbx	       602	char_dev.c	FUNCTION_24
0x40001f1	        0x488b5f18	            mov rbx, qword [rdi + 0x18] 	       604	char_dev.c	FUNCTION_24
0x40001f5	      0xe846feffff	                     call sym.cdev_purge	       606	char_dev.c	FUNCTION_24	CALL_2
0x40001fa	          0x4889df	                            mov rdi, rbx	       607	char_dev.c	FUNCTION_24	CALL_3
0x40001fd	              0x5b	                                 pop rbx	       608	char_dev.c	FUNCTION_24
0x40001fe	      0xe900000000	                           jmp 0x4000203	       607	char_dev.c	FUNCTION_24	CALL_3
cdev_add	WHILE,0:CALL,2:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,1	22
0x4000270	              0x55	                                push rbp	       483	char_dev.c	FUNCTION_18
0x4000271	              0x53	                                push rbx	       483	char_dev.c	FUNCTION_18
0x4000272	          0x4889fb	                            mov rbx, rdi	       483	char_dev.c	FUNCTION_18
0x4000275	          0x895764	             mov dword [rdi + 0x64], edx	       487	char_dev.c	FUNCTION_18
0x4000278	          0x897760	             mov dword [rdi + 0x60], esi	       486	char_dev.c	FUNCTION_18
0x400027b	            0x89d2	                            mov edx, edx	       489	char_dev.c	FUNCTION_18	CALL_1
0x400027d	              0x57	                                push rdi	       489	char_dev.c	FUNCTION_18	CALL_1
0x400027e	    0x488b3d000000	            mov rdi, qword [0x04000285] 	       489	char_dev.c	FUNCTION_18	CALL_1
0x4000285	            0x31c9	                            xor ecx, ecx	       489	char_dev.c	FUNCTION_18	CALL_1
0x4000287	    0x49c7c1000000	                               mov r9, 0	       489	char_dev.c	FUNCTION_18	CALL_1
0x400028e	    0x49c7c0000000	                               mov r8, 0	       489	char_dev.c	FUNCTION_18	CALL_1
0x4000295	      0xe800000000	                          call 0x400029a	       489	char_dev.c	FUNCTION_18	CALL_1
0x400029a	            0x85c0	                           test eax, eax	       491	char_dev.c	FUNCTION_18	IF_1
0x400029c	            0x89c5	                            mov ebp, eax	       489	char_dev.c	FUNCTION_18	CALL_1
0x400029e	              0x5a	                                 pop rdx	       491	char_dev.c	FUNCTION_18	IF_1
0x400029f	            0x7509	                           jne 0x40002aa	       491	char_dev.c	FUNCTION_18	IF_1
0x40002a1	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       494	char_dev.c	FUNCTION_18	CALL_2
0x40002a5	      0xe800000000	                          call 0x40002aa	       494	char_dev.c	FUNCTION_18	CALL_2
0x40002aa	            0x89e8	                            mov eax, ebp	       497	char_dev.c	FUNCTION_18
0x40002ac	              0x5b	                                 pop rbx	       497	char_dev.c	FUNCTION_18
0x40002ad	              0x5d	                                 pop rbp	       497	char_dev.c	FUNCTION_18
0x40002ae	              0xc3	                                     ret	       497	char_dev.c	FUNCTION_18
__unregister_chrdev_region	WHILE,0:CALL,3:SWITCH,0:FOR,1:functions,0:ELSE,0:DO,0:IF,2	44
0x40000e0	            0x4155	                                push r13	       176	char_dev.c	FUNCTION_5
0x40000e2	      0xb881808080	                     mov eax, 0x80808081	        46	char_dev.c	FUNCTION_1
0x40000e7	            0x4154	                                push r12	       176	char_dev.c	FUNCTION_5
0x40000e9	              0x55	                                push rbp	       176	char_dev.c	FUNCTION_5
0x40000ea	              0x53	                                push rbx	       176	char_dev.c	FUNCTION_5
0x40000eb	            0x89fb	                            mov ebx, edi	       176	char_dev.c	FUNCTION_5
0x40000ed	          0x4889dd	                            mov rbp, rbx	       176	char_dev.c	FUNCTION_5
0x40000f0	    0x48c7c7000000	                              mov rdi, 0	       180	char_dev.c	FUNCTION_5	CALL_2
0x40000f7	          0x4189f4	                           mov r12d, esi	       176	char_dev.c	FUNCTION_5
0x40000fa	        0x480fafd8	                           imul rbx, rax	        46	char_dev.c	FUNCTION_1
0x40000fe	          0x4189d5	                           mov r13d, edx	       176	char_dev.c	FUNCTION_5
0x4000101	        0x48c1eb27	                           shr rbx, 0x27	        46	char_dev.c	FUNCTION_1
0x4000105	            0x89d8	                            mov eax, ebx	        46	char_dev.c	FUNCTION_1
0x4000107	          0xc1e008	                              shl eax, 8	        46	char_dev.c	FUNCTION_1
0x400010a	            0x29d8	                            sub eax, ebx	        46	char_dev.c	FUNCTION_1
0x400010c	            0x89eb	                            mov ebx, ebp	        46	char_dev.c	FUNCTION_1
0x400010e	            0x29c3	                            sub ebx, eax	        46	char_dev.c	FUNCTION_1
0x4000110	          0x4863db	                         movsxd rbx, ebx	       181	char_dev.c	FUNCTION_5	FOR_1
0x4000113	      0xe800000000	                          call 0x4000118	       180	char_dev.c	FUNCTION_5	CALL_2
0x4000118	    0x488d04dd0000	                        lea rax, [rbx*8]	       181	char_dev.c	FUNCTION_5	FOR_1
0x4000120	    0x488b1cdd0000	                  mov rbx, qword [rbx*8]	       181	char_dev.c	FUNCTION_5	FOR_1
0x4000128	          0x4885db	                           test rbx, rbx	       181	char_dev.c	FUNCTION_5	FOR_1
0x400012b	            0x750d	                           jne 0x400013a	       181	char_dev.c	FUNCTION_5	FOR_1
0x400012d	            0xeb22	                           jmp 0x4000151	       181	char_dev.c	FUNCTION_5	FOR_1
0x400012f	          0x4889d8	                            mov rax, rbx	       181	char_dev.c	FUNCTION_5	FOR_1
0x4000132	          0x488b1b	                    mov rbx, qword [rbx]	       181	char_dev.c	FUNCTION_5	FOR_1
0x4000135	          0x4885db	                           test rbx, rbx	       181	char_dev.c	FUNCTION_5	FOR_1
0x4000138	            0x7417	                            je 0x4000151	       181	char_dev.c	FUNCTION_5	FOR_1
0x400013a	          0x3b6b08	                cmp ebp, dword [rbx + 8]	       182	char_dev.c	FUNCTION_5	FOR_1	IF_1
0x400013d	            0x75f0	                           jne 0x400012f	       182	char_dev.c	FUNCTION_5	FOR_1	IF_1
0x400013f	        0x4439630c	            cmp dword [rbx + 0xc], r12d 	       182	char_dev.c	FUNCTION_5	FOR_1	IF_1
0x4000143	            0x75ea	                           jne 0x400012f	       182	char_dev.c	FUNCTION_5	FOR_1	IF_1
0x4000145	        0x44396b10	           cmp dword [rbx + 0x10], r13d 	       183	char_dev.c	FUNCTION_5	FOR_1	IF_1
0x4000149	            0x75e4	                           jne 0x400012f	       183	char_dev.c	FUNCTION_5	FOR_1	IF_1
0x400014b	          0x488b13	                    mov rdx, qword [rbx]	       188	char_dev.c	FUNCTION_5	IF_2
0x400014e	          0x488910	                    mov qword [rax], rdx	       188	char_dev.c	FUNCTION_5	IF_2
0x4000151	    0x48c7c7000000	                              mov rdi, 0	       190	char_dev.c	FUNCTION_5	CALL_3
0x4000158	      0xe800000000	                          call 0x400015d	       190	char_dev.c	FUNCTION_5	CALL_3
0x400015d	          0x4889d8	                            mov rax, rbx	       192	char_dev.c	FUNCTION_5
0x4000160	              0x5b	                                 pop rbx	       192	char_dev.c	FUNCTION_5
0x4000161	              0x5d	                                 pop rbp	       192	char_dev.c	FUNCTION_5
0x4000162	            0x415c	                                 pop r12	       192	char_dev.c	FUNCTION_5
0x4000164	            0x415d	                                 pop r13	       192	char_dev.c	FUNCTION_5
0x4000166	              0xc3	                                     ret	       192	char_dev.c	FUNCTION_5
cdev_device_add	WHILE,0:CALL,4:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,3	34
0x4000300	              0x55	                                push rbp	       538	char_dev.c	FUNCTION_20
0x4000301	              0x53	                                push rbx	       538	char_dev.c	FUNCTION_20
0x4000302	          0x4889fd	                            mov rbp, rdi	       538	char_dev.c	FUNCTION_20
0x4000305	    0x8b8660020000	           mov eax, dword [rsi + 0x260] 	       541	char_dev.c	FUNCTION_20	IF_1
0x400030b	          0x4889f3	                            mov rbx, rsi	       538	char_dev.c	FUNCTION_20
0x400030e	            0x85c0	                           test eax, eax	       541	char_dev.c	FUNCTION_20	IF_1
0x4000310	            0x7425	                            je 0x4000337	       541	char_dev.c	FUNCTION_20	IF_1
0x4000312	        0xf6464c01	               test byte [rsi + 0x4c], 1	       510	char_dev.c	FUNCTION_19	CALL_1
0x4000316	        0x488d4610	                   lea rax, [rsi + 0x10]	       542	char_dev.c	FUNCTION_20	IF_1	CALL_1
0x400031a	            0x743b	                            je 0x4000357	       510	char_dev.c	FUNCTION_19	CALL_1
0x400031c	        0x48894518	            mov qword [rbp + 0x18], rax 	       511	char_dev.c	FUNCTION_19
0x4000320	    0x8bb360020000	           mov esi, dword [rbx + 0x260] 	       544	char_dev.c	FUNCTION_20	IF_1	CALL_2
0x4000326	      0xba01000000	                              mov edx, 1	       544	char_dev.c	FUNCTION_20	IF_1	CALL_2
0x400032b	          0x4889ef	                            mov rdi, rbp	       544	char_dev.c	FUNCTION_20	IF_1	CALL_2
0x400032e	      0xe800000000	                          call 0x4000333	       544	char_dev.c	FUNCTION_20	IF_1	CALL_2
0x4000333	            0x85c0	                           test eax, eax	       545	char_dev.c	FUNCTION_20	IF_1	IF_2
0x4000335	            0x7510	                           jne 0x4000347	       545	char_dev.c	FUNCTION_20	IF_1	IF_2
0x4000337	          0x4889df	                            mov rdi, rbx	       549	char_dev.c	FUNCTION_20	CALL_3
0x400033a	      0xe800000000	                          call 0x400033f	       549	char_dev.c	FUNCTION_20	CALL_3
0x400033f	            0x89c3	                            mov ebx, eax	       549	char_dev.c	FUNCTION_20	CALL_3
0x4000341	            0x31c0	                            xor eax, eax	       549	char_dev.c	FUNCTION_20	CALL_3
0x4000343	            0x85db	                           test ebx, ebx	       550	char_dev.c	FUNCTION_20	IF_3
0x4000345	            0x7503	                           jne 0x400034a	       550	char_dev.c	FUNCTION_20	IF_3
0x4000347	              0x5b	                                 pop rbx	       554	char_dev.c	FUNCTION_20
0x4000348	              0x5d	                                 pop rbp	       554	char_dev.c	FUNCTION_20
0x4000349	              0xc3	                                     ret	       554	char_dev.c	FUNCTION_20
0x400034a	          0x4889ef	                            mov rdi, rbp	       551	char_dev.c	FUNCTION_20	CALL_4
0x400034d	      0xe800000000	                          call 0x4000352	       551	char_dev.c	FUNCTION_20	CALL_4
0x4000352	            0x89d8	                            mov eax, ebx	       551	char_dev.c	FUNCTION_20	CALL_4
0x4000354	              0x5b	                                 pop rbx	       554	char_dev.c	FUNCTION_20
0x4000355	              0x5d	                                 pop rbp	       554	char_dev.c	FUNCTION_20
0x4000356	              0xc3	                                     ret	       554	char_dev.c	FUNCTION_20
0x4000357	             0xf0b	                                     ud2	       554	char_dev.c	FUNCTION_20
0x4000359	            0xebc1	                           jmp 0x400031c	       510	char_dev.c	FUNCTION_19	CALL_1
exact_match	WHILE,0:CALL,0:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,0	2
0x4000090	          0x4889d0	                            mov rax, rdx	       461	char_dev.c	FUNCTION_16
0x4000093	              0xc3	                                     ret	       464	char_dev.c	FUNCTION_16
chrdev_show	WHILE,0:CALL,4:SWITCH,0:FOR,1:functions,0:ELSE,0:DO,0:IF,1	40
0x4000810	            0x4154	                                push r12	        52	char_dev.c	FUNCTION_2
0x4000812	              0x55	                                push rbp	        52	char_dev.c	FUNCTION_2
0x4000813	          0x4989fc	                            mov r12, rdi	        52	char_dev.c	FUNCTION_2
0x4000816	              0x53	                                push rbx	        52	char_dev.c	FUNCTION_2
0x4000817	          0x4889f5	                            mov rbp, rsi	        52	char_dev.c	FUNCTION_2
0x400081a	    0x48c7c7000000	                              mov rdi, 0	        55	char_dev.c	FUNCTION_2	CALL_1
0x4000821	      0xe800000000	                          call 0x4000826	        55	char_dev.c	FUNCTION_2	CALL_1
0x4000826	            0x89ea	                            mov edx, ebp	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x4000828	      0xb881808080	                     mov eax, 0x80808081	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x400082d	            0x89ee	                            mov esi, ebp	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x400082f	        0x480fafc2	                           imul rax, rdx	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x4000833	        0x48c1e827	                           shr rax, 0x27	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x4000837	            0x89c2	                            mov edx, eax	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x4000839	          0xc1e208	                              shl edx, 8	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x400083c	            0x29c2	                            sub edx, eax	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x400083e	            0x29d6	                            sub esi, edx	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x4000840	          0x4863c6	                         movsxd rax, esi	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x4000843	    0x488b1cc50000	                  mov rbx, qword [rax*8]	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x400084b	          0x4885db	                           test rbx, rbx	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x400084e	            0x750a	                           jne 0x400085a	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x4000850	            0xeb2e	                           jmp 0x4000880	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x4000852	          0x488b1b	                    mov rbx, qword [rbx]	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x4000855	          0x4885db	                           test rbx, rbx	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x4000858	            0x7426	                            je 0x4000880	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x400085a	          0x8b4308	                mov eax, dword [rbx + 8]	        57	char_dev.c	FUNCTION_2	FOR_1	IF_1
0x400085d	          0x4839c5	                            cmp rbp, rax	        57	char_dev.c	FUNCTION_2	FOR_1	IF_1
0x4000860	          0x4889c2	                            mov rdx, rax	        57	char_dev.c	FUNCTION_2	FOR_1	IF_1
0x4000863	            0x75ed	                           jne 0x4000852	        57	char_dev.c	FUNCTION_2	FOR_1	IF_1
0x4000865	        0x488d4b14	                   lea rcx, [rbx + 0x14]	        58	char_dev.c	FUNCTION_2	FOR_1	CALL_3
0x4000869	    0x48c7c6000000	                              mov rsi, 0	        58	char_dev.c	FUNCTION_2	FOR_1	CALL_3
0x4000870	          0x4c89e7	                            mov rdi, r12	        58	char_dev.c	FUNCTION_2	FOR_1	CALL_3
0x4000873	      0xe800000000	                          call 0x4000878	        58	char_dev.c	FUNCTION_2	FOR_1	CALL_3
0x4000878	          0x488b1b	                    mov rbx, qword [rbx]	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x400087b	          0x4885db	                           test rbx, rbx	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x400087e	            0x75da	                           jne 0x400085a	        56	char_dev.c	FUNCTION_2	FOR_1	CALL_2
0x4000880	              0x5b	                                 pop rbx	        61	char_dev.c	FUNCTION_2
0x4000881	              0x5d	                                 pop rbp	        61	char_dev.c	FUNCTION_2
0x4000882	            0x415c	                                 pop r12	        61	char_dev.c	FUNCTION_2
0x4000884	    0x48c7c7000000	                              mov rdi, 0	        60	char_dev.c	FUNCTION_2	CALL_4
0x400088b	      0xe900000000	                        jmp sym.cdev_put	        60	char_dev.c	FUNCTION_2	CALL_4
