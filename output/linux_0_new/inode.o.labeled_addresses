devpts_pty_kill	FOR,0:CALL,4:functions,0:ELSE,0:DO,0:IF,0:WHILE,0:SWITCH,0	15
0x4000ad0	              0x53	                                push rbx	       642	inode.c	FUNCTION_19
0x4000ad1	        0x488b4768	            mov rax, qword [rdi + 0x68] 	       643	inode.c	FUNCTION_19	CALL_1
0x4000ad5	          0x4889fb	                            mov rbx, rdi	       642	inode.c	FUNCTION_19
0x4000ad8	    0x48817860d11c	         cmp qword [rax + 0x60], 0x1cd1 	       643	inode.c	FUNCTION_19	CALL_1
0x4000ae0	            0x7522	                           jne 0x4000b04	       643	inode.c	FUNCTION_19	CALL_1
0x4000ae2	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	       646	inode.c	FUNCTION_19	CALL_2
0x4000ae6	    0x48c743780000	               mov qword [rbx + 0x78], 0	       645	inode.c	FUNCTION_19
0x4000aee	      0xe800000000	                          call 0x4000af3	       646	inode.c	FUNCTION_19	CALL_2
0x4000af3	          0x4889df	                            mov rdi, rbx	       647	inode.c	FUNCTION_19	CALL_3
0x4000af6	      0xe800000000	                          call 0x4000afb	       647	inode.c	FUNCTION_19	CALL_3
0x4000afb	          0x4889df	                            mov rdi, rbx	       648	inode.c	FUNCTION_19	CALL_4
0x4000afe	              0x5b	                                 pop rbx	       649	inode.c	FUNCTION_19
0x4000aff	      0xe900000000	                           jmp 0x4000b04	       648	inode.c	FUNCTION_19	CALL_4
0x4000b04	             0xf0b	                                     ud2	       648	inode.c	FUNCTION_19	CALL_4
0x4000b06	            0xebda	                           jmp 0x4000ae2	       643	inode.c	FUNCTION_19	CALL_1
devpts_show_options	FOR,0:CALL,8:functions,0:ELSE,0:DO,0:IF,3:WHILE,0:SWITCH,0	40
0x4000080	              0x55	                                push rbp	       409	inode.c	FUNCTION_10
0x4000081	              0x53	                                push rbx	       409	inode.c	FUNCTION_10
0x4000082	          0x4889fd	                            mov rbp, rdi	       409	inode.c	FUNCTION_10
0x4000085	        0x488b4668	            mov rax, qword [rsi + 0x68] 	       409	inode.c	FUNCTION_10
0x4000089	    0x488b98080400	           mov rbx, qword [rax + 0x408] 	       409	inode.c	FUNCTION_10
0x4000090	          0x8b5310	            mov edx, dword [rbx + 0x10] 	       413	inode.c	FUNCTION_10	IF_1
0x4000093	            0x85d2	                           test edx, edx	       413	inode.c	FUNCTION_10	IF_1
0x4000095	            0x7419	                            je 0x40000b0	       413	inode.c	FUNCTION_10	IF_1
0x4000097	          0x8b5318	            mov edx, dword [rbx + 0x18] 	       413	inode.c	FUNCTION_10	IF_1
0x400009a	    0x48c7c6000000	                              mov rsi, 0	       414	inode.c	FUNCTION_10	IF_1	CALL_2
0x40000a1	          0x83faff	             cmp edx, 0xffffffffffffffff	       167	uidgid.h	FUNCTION_43	IF_1
0x40000a4	     0xf4415000000	           cmove edx, dword [0x040000ab]	       167	uidgid.h	FUNCTION_43	IF_1
0x40000ab	      0xe800000000	                          call 0x40000b0	       414	inode.c	FUNCTION_10	IF_1	CALL_2
0x40000b0	          0x8b4314	            mov eax, dword [rbx + 0x14] 	       416	inode.c	FUNCTION_10	IF_2
0x40000b3	            0x85c0	                           test eax, eax	       416	inode.c	FUNCTION_10	IF_2
0x40000b5	            0x741c	                            je 0x40000d3	       416	inode.c	FUNCTION_10	IF_2
0x40000b7	          0x8b531c	            mov edx, dword [rbx + 0x1c] 	       416	inode.c	FUNCTION_10	IF_2
0x40000ba	    0x48c7c6000000	                              mov rsi, 0	       417	inode.c	FUNCTION_10	IF_2	CALL_4
0x40000c1	          0x4889ef	                            mov rdi, rbp	       417	inode.c	FUNCTION_10	IF_2	CALL_4
0x40000c4	          0x83faff	             cmp edx, 0xffffffffffffffff	       175	uidgid.h	FUNCTION_44	IF_1
0x40000c7	     0xf4415000000	           cmove edx, dword [0x040000ce]	       175	uidgid.h	FUNCTION_44	IF_1
0x40000ce	      0xe800000000	                          call 0x40000d3	       417	inode.c	FUNCTION_10	IF_2	CALL_4
0x40000d3	         0xfb75320	           movzx edx, word [rbx + 0x20] 	       419	inode.c	FUNCTION_10	CALL_6
0x40000d7	    0x48c7c6000000	                              mov rsi, 0	       419	inode.c	FUNCTION_10	CALL_6
0x40000de	          0x4889ef	                            mov rdi, rbp	       419	inode.c	FUNCTION_10	CALL_6
0x40000e1	      0xe800000000	                          call 0x40000e6	       419	inode.c	FUNCTION_10	CALL_6
0x40000e6	         0xfb75322	           movzx edx, word [rbx + 0x22] 	       420	inode.c	FUNCTION_10	CALL_7
0x40000ea	    0x48c7c6000000	                              mov rsi, 0	       420	inode.c	FUNCTION_10	CALL_7
0x40000f1	          0x4889ef	                            mov rdi, rbp	       420	inode.c	FUNCTION_10	CALL_7
0x40000f4	      0xe800000000	                          call 0x40000f9	       420	inode.c	FUNCTION_10	CALL_7
0x40000f9	          0x8b5328	            mov edx, dword [rbx + 0x28] 	       421	inode.c	FUNCTION_10	IF_3
0x40000fc	    0x81faffff0f00	                        cmp edx, 0xfffff	       421	inode.c	FUNCTION_10	IF_3
0x4000102	            0x7f0f	                            jg 0x4000113	       421	inode.c	FUNCTION_10	IF_3
0x4000104	    0x48c7c6000000	                              mov rsi, 0	       422	inode.c	FUNCTION_10	CALL_8
0x400010b	          0x4889ef	                            mov rdi, rbp	       422	inode.c	FUNCTION_10	CALL_8
0x400010e	      0xe800000000	                          call 0x4000113	       422	inode.c	FUNCTION_10	CALL_8
0x4000113	            0x31c0	                            xor eax, eax	       425	inode.c	FUNCTION_10
0x4000115	              0x5b	                                 pop rbx	       425	inode.c	FUNCTION_10
0x4000116	              0x5d	                                 pop rbp	       425	inode.c	FUNCTION_10
0x4000117	              0xc3	                                     ret	       425	inode.c	FUNCTION_10
devpts_kill_index	FOR,0:CALL,3:functions,0:ELSE,0:DO,0:IF,0:WHILE,0:SWITCH,0	14
0x40008b0	              0x55	                                push rbp	       569	inode.c	FUNCTION_16
0x40008b1	              0x53	                                push rbx	       569	inode.c	FUNCTION_16
0x40008b2	            0x89f5	                            mov ebp, esi	       569	inode.c	FUNCTION_16
0x40008b4	          0x4889fb	                            mov rbx, rdi	       569	inode.c	FUNCTION_16
0x40008b7	    0x48c7c7000000	                              mov rdi, 0	       570	inode.c	FUNCTION_16	CALL_1
0x40008be	      0xe800000000	                          call 0x40008c3	       570	inode.c	FUNCTION_16	CALL_1
0x40008c3	          0x4889df	                            mov rdi, rbx	       571	inode.c	FUNCTION_16	CALL_2
0x40008c6	            0x89ee	                            mov esi, ebp	       571	inode.c	FUNCTION_16	CALL_2
0x40008c8	      0xe800000000	                          call 0x40008cd	       571	inode.c	FUNCTION_16	CALL_2
0x40008cd	    0x832d00000000	               sub dword [0x040008d4], 1	       572	inode.c	FUNCTION_16
0x40008d4	    0x48c7c7000000	                              mov rdi, 0	       573	inode.c	FUNCTION_16	CALL_3
0x40008db	              0x5b	                                 pop rbx	       574	inode.c	FUNCTION_16
0x40008dc	              0x5d	                                 pop rbp	       574	inode.c	FUNCTION_16
0x40008dd	      0xe900000000	                           jmp 0x40008e2	       573	inode.c	FUNCTION_16	CALL_3
devpts_kill_sb	FOR,0:CALL,4:functions,0:ELSE,0:DO,0:IF,1:WHILE,0:SWITCH,0	14
0x4000040	              0x55	                                push rbp	       652	inode.c	FUNCTION_20
0x4000041	              0x53	                                push rbx	       653	inode.c	FUNCTION_20	CALL_1
0x4000042	          0x4889fd	                            mov rbp, rdi	       653	inode.c	FUNCTION_20	CALL_1
0x4000045	    0x488b9f080400	           mov rbx, qword [rdi + 0x408] 	       653	inode.c	FUNCTION_20	CALL_1
0x400004c	          0x4885db	                           test rbx, rbx	       653	inode.c	FUNCTION_20	CALL_1
0x400004f	            0x7408	                            je 0x4000059	       653	inode.c	FUNCTION_20	CALL_1
0x4000051	          0x4889df	                            mov rdi, rbx	       654	inode.c	FUNCTION_20	IF_1
0x4000054	      0xe800000000	                          call 0x4000059	       655	inode.c	FUNCTION_20	IF_1	CALL_2
0x4000059	          0x4889df	                            mov rdi, rbx	       655	inode.c	FUNCTION_20	IF_1	CALL_2
0x400005c	      0xe800000000	                          call 0x4000061	       655	inode.c	FUNCTION_20	IF_1	CALL_2
0x4000061	          0x4889ef	                            mov rdi, rbp	       658	inode.c	FUNCTION_20
0x4000064	              0x5b	                                 pop rbx	       520	inode.c	FUNCTION_14
0x4000065	              0x5d	                                 pop rbp	       520	inode.c	FUNCTION_14
0x4000066	      0xe900000000	                           jmp 0x400006b	       519	inode.c	FUNCTION_14	CALL_4
devpts_release	FOR,0:CALL,1:functions,0:ELSE,0:DO,0:IF,0:WHILE,0:SWITCH,0	2
0x40007b0	        0x488b7f30	            mov rdi, qword [rdi + 0x30] 	       238	inode.c	FUNCTION_5	CALL_1
0x40007b4	      0xe900000000	                           jmp 0x40007b9	       238	inode.c	FUNCTION_5	CALL_1
devpts_mntget	FOR,0:CALL,8:functions,0:ELSE,0:DO,0:IF,4:WHILE,1:SWITCH,0	64
0x4000620	              0x55	                                push rbp	       174	inode.c	FUNCTION_3
0x4000621	          0x4889e5	                            mov rbp, rsp	       174	inode.c	FUNCTION_3
0x4000624	            0x4154	                                push r12	       174	inode.c	FUNCTION_3
0x4000626	            0x4152	                                push r10	       174	inode.c	FUNCTION_3
0x4000628	              0x53	                                push rbx	       174	inode.c	FUNCTION_3
0x4000629	          0x4989f4	                            mov r12, rsi	       174	inode.c	FUNCTION_3
0x400062c	        0x4883ec18	                           sub rsp, 0x18	       174	inode.c	FUNCTION_3
0x4000630	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	       178	inode.c	FUNCTION_3
0x4000634	    0x65488b042528	                mov rax, qword gs:[0x28]	       174	inode.c	FUNCTION_3
0x400063d	        0x488945e0	             mov qword [rbp - 0x20], rax	       174	inode.c	FUNCTION_3
0x4000641	            0x31c0	                            xor eax, eax	       174	inode.c	FUNCTION_3
0x4000643	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       178	inode.c	FUNCTION_3
0x4000647	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	       179	inode.c	FUNCTION_3	CALL_1
0x400064b	        0x488955d8	             mov qword [rbp - 0x28], rdx	       178	inode.c	FUNCTION_3
0x400064f	        0x488945d0	             mov qword [rbp - 0x30], rax	       178	inode.c	FUNCTION_3
0x4000653	      0xe800000000	                          call 0x4000658	       179	inode.c	FUNCTION_3	CALL_1
0x4000658	            0xeb0d	                           jmp 0x4000667	       184	inode.c	FUNCTION_3	WHILE_1
0x400065a	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	       185	inode.c	FUNCTION_3	WHILE_1	IF_1	CALL_2
0x400065e	      0xe800000000	                          call 0x4000663	       185	inode.c	FUNCTION_3	WHILE_1	IF_1	CALL_2
0x4000663	            0x85c0	                           test eax, eax	       185	inode.c	FUNCTION_3	WHILE_1	IF_1	CALL_2
0x4000665	            0x7471	                            je 0x40006d8	       185	inode.c	FUNCTION_3	WHILE_1	IF_1	CALL_2
0x4000667	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       184	inode.c	FUNCTION_3	WHILE_1
0x400066b	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       184	inode.c	FUNCTION_3	WHILE_1
0x400066f	          0x483908	                    cmp qword [rax], rcx	       184	inode.c	FUNCTION_3	WHILE_1
0x4000672	            0x74e6	                            je 0x400065a	       184	inode.c	FUNCTION_3	WHILE_1
0x4000674	        0x488b4008	                mov rax, qword [rax + 8]	       189	inode.c	FUNCTION_3	IF_2
0x4000678	    0x48817860d11c	         cmp qword [rax + 0x60], 0x1cd1 	       189	inode.c	FUNCTION_3	IF_2
0x4000680	            0x7468	                            je 0x40006ea	       189	inode.c	FUNCTION_3	IF_2
0x4000682	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	       191	inode.c	FUNCTION_3	CALL_4
0x4000686	      0xe8a5fcffff	               call sym.devpts_ptmx_path	       191	inode.c	FUNCTION_3	CALL_4
0x400068b	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	       192	inode.c	FUNCTION_3	CALL_5
0x400068f	          0x4863d8	                         movsxd rbx, eax	       191	inode.c	FUNCTION_3	CALL_4
0x4000692	      0xe800000000	                          call 0x4000697	       192	inode.c	FUNCTION_3	CALL_5
0x4000697	            0x85db	                           test ebx, ebx	       193	inode.c	FUNCTION_3	IF_3
0x4000699	            0x7563	                           jne 0x40006fe	       193	inode.c	FUNCTION_3	IF_3
0x400069b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       194	inode.c	FUNCTION_3	IF_3	IF_4	CALL_6
0x400069f	        0x488b5008	                mov rdx, qword [rax + 8]	       194	inode.c	FUNCTION_3	IF_3	IF_4	CALL_6
0x40006a3	    0x4c3ba2080400	           cmp r12, qword [rdx + 0x408] 	       194	inode.c	FUNCTION_3	IF_3	IF_4	CALL_6
0x40006aa	            0x7412	                            je 0x40006be	       194	inode.c	FUNCTION_3	IF_3	IF_4	CALL_6
0x40006ac	    0x48c7c3edffff	             mov rbx, 0xffffffffffffffed	       194	inode.c	FUNCTION_3	IF_3	IF_4	CALL_6
0x40006b3	          0x4889c7	                            mov rdi, rax	       200	inode.c	FUNCTION_3	CALL_7
0x40006b6	      0xe800000000	                          call 0x40006bb	       200	inode.c	FUNCTION_3	CALL_7
0x40006bb	          0x4889d8	                            mov rax, rbx	       201	inode.c	FUNCTION_3	CALL_8
0x40006be	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       202	inode.c	FUNCTION_3
0x40006c2	    0x654833342528	                xor rsi, qword gs:[0x28]	       202	inode.c	FUNCTION_3
0x40006cb	            0x7537	                           jne 0x4000704	       202	inode.c	FUNCTION_3
0x40006cd	        0x4883c418	                           add rsp, 0x18	       202	inode.c	FUNCTION_3
0x40006d1	              0x5b	                                 pop rbx	       202	inode.c	FUNCTION_3
0x40006d2	            0x415a	                                 pop r10	       202	inode.c	FUNCTION_3
0x40006d4	            0x415c	                                 pop r12	       202	inode.c	FUNCTION_3
0x40006d6	              0x5d	                                 pop rbp	       202	inode.c	FUNCTION_3
0x40006d7	              0xc3	                                     ret	       202	inode.c	FUNCTION_3
0x40006d8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       202	inode.c	FUNCTION_3
0x40006dc	        0x488b4008	                mov rax, qword [rax + 8]	       189	inode.c	FUNCTION_3	IF_2
0x40006e0	    0x48817860d11c	         cmp qword [rax + 0x60], 0x1cd1 	       189	inode.c	FUNCTION_3	IF_2
0x40006e8	            0x7598	                           jne 0x4000682	       189	inode.c	FUNCTION_3	IF_2
0x40006ea	    0x4c3ba0080400	           cmp r12, qword [rax + 0x408] 	       189	inode.c	FUNCTION_3	IF_2
0x40006f1	            0x758f	                           jne 0x4000682	       189	inode.c	FUNCTION_3	IF_2
0x40006f3	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	       192	inode.c	FUNCTION_3	CALL_5
0x40006f7	      0xe800000000	                          call 0x40006fc	       192	inode.c	FUNCTION_3	CALL_5
0x40006fc	            0xeb9d	                           jmp 0x400069b	       192	inode.c	FUNCTION_3	CALL_5
0x40006fe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       192	inode.c	FUNCTION_3	CALL_5
0x4000702	            0xebaf	                           jmp 0x40006b3	       192	inode.c	FUNCTION_3	CALL_5
0x4000704	      0xe800000000	                          call 0x4000709	       202	inode.c	FUNCTION_3
devpts_mount	FOR,0:CALL,1:functions,0:ELSE,0:DO,0:IF,0:WHILE,0:SWITCH,0	3
0x4000070	          0x4889ca	                            mov rdx, rcx	       508	inode.c	FUNCTION_13
0x4000073	    0x48c7c1000000	                              mov rcx, 0	       509	inode.c	FUNCTION_13	CALL_1
0x400007a	      0xe900000000	                           jmp 0x400007f	       509	inode.c	FUNCTION_13	CALL_1
devpts_get_priv	FOR,0:CALL,0:functions,0:ELSE,0:DO,0:IF,1:WHILE,0:SWITCH,0	6
0x4000ab0	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	       630	inode.c	FUNCTION_18	IF_1
0x4000ab4	            0x31c0	                            xor eax, eax	       631	inode.c	FUNCTION_18	IF_1
0x4000ab6	    0x48817a60d11c	         cmp qword [rdx + 0x60], 0x1cd1 	       630	inode.c	FUNCTION_18	IF_1
0x4000abe	            0x7504	                           jne 0x4000ac4	       630	inode.c	FUNCTION_18	IF_1
0x4000ac0	        0x488b4778	            mov rax, qword [rdi + 0x78] 	       632	inode.c	FUNCTION_18
0x4000ac4	            0xf3c3	                                     ret	       633	inode.c	FUNCTION_18
init_devpts_fs	FOR,0:CALL,2:functions,0:ELSE,0:DO,0:IF,1:WHILE,0:SWITCH,0	12
0x4000040	              0x55	                                push rbp	       652	inode.c	FUNCTION_20
0x4000041	              0x53	                                push rbx	       653	inode.c	FUNCTION_20	CALL_1
0x4000042	          0x4889fd	                            mov rbp, rdi	       653	inode.c	FUNCTION_20	CALL_1
0x4000045	    0x488b9f080400	           mov rbx, qword [rdi + 0x408] 	       653	inode.c	FUNCTION_20	CALL_1
0x400004c	          0x4885db	                           test rbx, rbx	       653	inode.c	FUNCTION_20	CALL_1
0x400004f	            0x7408	                            je 0x4000059	       653	inode.c	FUNCTION_20	CALL_1
0x4000051	          0x4889df	                            mov rdi, rbx	       654	inode.c	FUNCTION_20	IF_1
0x4000054	      0xe800000000	                          call 0x4000059	       655	inode.c	FUNCTION_20	IF_1	CALL_2
0x4000059	          0x4889df	                            mov rdi, rbx	       655	inode.c	FUNCTION_20	IF_1	CALL_2
0x400005c	      0xe800000000	                          call 0x4000061	       655	inode.c	FUNCTION_20	IF_1	CALL_2
0x4000061	              0x48	                                 invalid	       658	inode.c	FUNCTION_20
0x4000062	              0x89	                                 invalid	       658	inode.c	FUNCTION_20
devpts_remount	FOR,0:CALL,3:functions,0:ELSE,0:DO,0:IF,0:WHILE,0:SWITCH,0	16
0x40002f0	              0x53	                                push rbx	       390	inode.c	FUNCTION_9
0x40002f1	    0x488b9f080400	           mov rbx, qword [rdi + 0x408] 	       390	inode.c	FUNCTION_9
0x40002f8	          0x4889d0	                            mov rax, rdx	       390	inode.c	FUNCTION_9
0x40002fb	      0xbe01000000	                              mov esi, 1	       395	inode.c	FUNCTION_9	CALL_2
0x4000300	          0x4889c7	                            mov rdi, rax	       395	inode.c	FUNCTION_9	CALL_2
0x4000303	        0x488d5310	                   lea rdx, [rbx + 0x10]	       393	inode.c	FUNCTION_9
0x4000307	      0xe814feffff	            call sym.parse_mount_options	       395	inode.c	FUNCTION_9	CALL_2
0x400030c	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	       395	inode.c	FUNCTION_9	CALL_2
0x4000310	         0xfb75322	           movzx edx, word [rbx + 0x22] 	       395	inode.c	FUNCTION_9	CALL_2
0x4000314	          0x4885c9	                           test rcx, rcx	       383	inode.c	FUNCTION_8	IF_1
0x4000317	            0x740a	                            je 0x4000323	       383	inode.c	FUNCTION_8	IF_1
0x4000319	        0x488b4930	            mov rcx, qword [rcx + 0x30] 	       383	inode.c	FUNCTION_8	IF_1
0x400031d	          0x80ce20	                             or dh, 0x20	       385	inode.c	FUNCTION_8	IF_1
0x4000320	          0x668911	                      mov word [rcx], dx	       385	inode.c	FUNCTION_8	IF_1
0x4000323	              0x5b	                                 pop rbx	       406	inode.c	FUNCTION_9
0x4000324	              0xc3	                                     ret	       406	inode.c	FUNCTION_9
