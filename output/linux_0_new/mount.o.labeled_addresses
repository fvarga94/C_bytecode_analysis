kernfs_sop_show_path	SWITCH,0:FOR,0:WHILE,0:CALL,4:DO,0:functions,0:IF,1:ELSE,0	22
0x40000e0	        0x488b4630	            mov rax, qword [rsi + 0x30] 	        46	mount.c	FUNCTION_3
0x40000e4	          0x4885c0	                           test rax, rax	        75	kernfs-internal.h	FUNCTION_21	IF_1	CALL_1
0x40000e7	            0x743f	                            je 0x4000128	        75	kernfs-internal.h	FUNCTION_21	IF_1	CALL_1
0x40000e9	    0x488b88380200	           mov rcx, qword [rax + 0x238] 	        77	kernfs-internal.h	FUNCTION_21	CALL_2
0x40000f0	        0x488b4108	                mov rax, qword [rcx + 8]	        43	kernfs-internal.h	FUNCTION_20	IF_1
0x40000f4	          0x4885c0	                           test rax, rax	        43	kernfs-internal.h	FUNCTION_20	IF_1
0x40000f7	        0x480f44c1	                          cmove rax, rcx	        43	kernfs-internal.h	FUNCTION_20	IF_1
0x40000fb	        0x488b5050	            mov rdx, qword [rax + 0x50] 	        45	kernfs-internal.h	FUNCTION_20
0x40000ff	        0x488b4230	            mov rax, qword [rdx + 0x30] 	        49	mount.c	FUNCTION_3
0x4000103	          0x4885c0	                           test rax, rax	        51	mount.c	FUNCTION_3	IF_1
0x4000106	            0x7411	                            je 0x4000119	        51	mount.c	FUNCTION_3	IF_1
0x4000108	        0x488b4028	            mov rax, qword [rax + 0x28] 	        51	mount.c	FUNCTION_3	IF_1
0x400010c	          0x4885c0	                           test rax, rax	        51	mount.c	FUNCTION_3	IF_1
0x400010f	            0x7408	                            je 0x4000119	        51	mount.c	FUNCTION_3	IF_1
0x4000111	          0x4889ce	                            mov rsi, rcx	        52	mount.c	FUNCTION_3	CALL_3
0x4000114	      0xe900000000	                           jmp 0x4000119	        52	mount.c	FUNCTION_3	CALL_3
0x4000119	    0x48c7c2000000	                              mov rdx, 0	        54	mount.c	FUNCTION_3	CALL_4
0x4000120	      0xe800000000	                          call 0x4000125	        54	mount.c	FUNCTION_3	CALL_4
0x4000125	            0x31c0	                            xor eax, eax	        56	mount.c	FUNCTION_3
0x4000127	              0xc3	                                     ret	        56	mount.c	FUNCTION_3
0x4000128	            0x31c9	                            xor ecx, ecx	        76	kernfs-internal.h	FUNCTION_21	IF_1
0x400012a	            0xebc4	                           jmp 0x40000f0	        76	kernfs-internal.h	FUNCTION_21	IF_1
kernfs_fh_to_parent	SWITCH,0:FOR,0:WHILE,0:CALL,1:DO,0:functions,0:IF,0:ELSE,0	2
0x4000180	    0x49c7c0000000	                               mov r8, 0	       123	mount.c	FUNCTION_7	CALL_1
0x4000187	      0xe900000000	                           jmp 0x400018c	       123	mount.c	FUNCTION_7	CALL_1
kernfs_sop_show_options	SWITCH,0:FOR,0:WHILE,0:CALL,3:DO,0:functions,0:IF,1:ELSE,0	19
0x4000070	        0x488b4630	            mov rax, qword [rsi + 0x30] 	        36	mount.c	FUNCTION_2
0x4000074	          0x4885c0	                           test rax, rax	        75	kernfs-internal.h	FUNCTION_21	IF_1	CALL_1
0x4000077	            0x7430	                            je 0x40000a9	        75	kernfs-internal.h	FUNCTION_21	IF_1	CALL_1
0x4000079	    0x488b90380200	           mov rdx, qword [rax + 0x238] 	        77	kernfs-internal.h	FUNCTION_21	CALL_2
0x4000080	        0x488b4208	                mov rax, qword [rdx + 8]	        43	kernfs-internal.h	FUNCTION_20	IF_1
0x4000084	          0x4885c0	                           test rax, rax	        43	kernfs-internal.h	FUNCTION_20	IF_1
0x4000087	        0x480f44c2	                          cmove rax, rdx	        43	kernfs-internal.h	FUNCTION_20	IF_1
0x400008b	        0x488b7050	            mov rsi, qword [rax + 0x50] 	        45	kernfs-internal.h	FUNCTION_20
0x400008f	        0x488b4630	            mov rax, qword [rsi + 0x30] 	        38	mount.c	FUNCTION_2
0x4000093	          0x4885c0	                           test rax, rax	        40	mount.c	FUNCTION_2	IF_1
0x4000096	            0x740e	                            je 0x40000a6	        40	mount.c	FUNCTION_2	IF_1
0x4000098	        0x488b4008	                mov rax, qword [rax + 8]	        40	mount.c	FUNCTION_2	IF_1
0x400009c	          0x4885c0	                           test rax, rax	        40	mount.c	FUNCTION_2	IF_1
0x400009f	            0x7405	                            je 0x40000a6	        40	mount.c	FUNCTION_2	IF_1
0x40000a1	      0xe900000000	                           jmp 0x40000a6	        41	mount.c	FUNCTION_2	CALL_3
0x40000a6	            0x31c0	                            xor eax, eax	        43	mount.c	FUNCTION_2
0x40000a8	              0xc3	                                     ret	        43	mount.c	FUNCTION_2
0x40000a9	            0x31d2	                            xor edx, edx	        76	kernfs-internal.h	FUNCTION_21	IF_1
0x40000ab	            0xebd3	                           jmp 0x4000080	        76	kernfs-internal.h	FUNCTION_21	IF_1
kernfs_test_super	SWITCH,0:FOR,0:WHILE,0:CALL,0:DO,0:functions,0:IF,0:ELSE,0	11
0x40000b0	    0x488b97080400	           mov rdx, qword [rdi + 0x408] 	       261	mount.c	FUNCTION_13
0x40000b7	            0x31c0	                            xor eax, eax	       264	mount.c	FUNCTION_13
0x40000b9	        0x488b4e08	                mov rcx, qword [rsi + 8]	       264	mount.c	FUNCTION_13
0x40000bd	        0x48394a08	                cmp qword [rdx + 8], rcx	       264	mount.c	FUNCTION_13
0x40000c1	            0x7402	                            je 0x40000c5	       264	mount.c	FUNCTION_13
0x40000c3	            0xf3c3	                                     ret	       265	mount.c	FUNCTION_13
0x40000c5	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       264	mount.c	FUNCTION_13
0x40000c9	        0x48394210	            cmp qword [rdx + 0x10], rax 	       264	mount.c	FUNCTION_13
0x40000cd	           0xf94c0	                                 sete al	       264	mount.c	FUNCTION_13
0x40000d0	           0xfb6c0	                           movzx eax, al	       264	mount.c	FUNCTION_13
0x40000d3	              0xc3	                                     ret	       265	mount.c	FUNCTION_13
kernfs_fh_to_dentry	SWITCH,0:FOR,0:WHILE,0:CALL,1:DO,0:functions,0:IF,0:ELSE,0	2
0x4000200	    0x49c7c0000000	                               mov r8, 0	       116	mount.c	FUNCTION_6	CALL_1
0x4000207	      0xe900000000	                           jmp 0x400020c	       116	mount.c	FUNCTION_6	CALL_1
kernfs_super_ns	SWITCH,0:FOR,0:WHILE,0:CALL,0:DO,0:functions,0:IF,0:ELSE,0	3
0x4000370	    0x488b87080400	           mov rax, qword [rdi + 0x408] 	       286	mount.c	FUNCTION_15
0x4000377	        0x488b4010	            mov rax, qword [rax + 0x10] 	       286	mount.c	FUNCTION_15
0x400037b	              0xc3	                                     ret	       287	mount.c	FUNCTION_15
kernfs_set_super	SWITCH,0:FOR,0:WHILE,0:CALL,1:DO,0:functions,0:IF,1:ELSE,0	11
0x4000130	              0x55	                                push rbp	       268	mount.c	FUNCTION_14
0x4000131	              0x53	                                push rbx	       268	mount.c	FUNCTION_14
0x4000132	          0x4889f5	                            mov rbp, rsi	       268	mount.c	FUNCTION_14
0x4000135	          0x4889fb	                            mov rbx, rdi	       268	mount.c	FUNCTION_14
0x4000138	      0xe800000000	                          call 0x400013d	       270	mount.c	FUNCTION_14	CALL_1
0x400013d	            0x85c0	                           test eax, eax	       271	mount.c	FUNCTION_14	IF_1
0x400013f	            0x7507	                           jne 0x4000148	       271	mount.c	FUNCTION_14	IF_1
0x4000141	    0x4889ab080400	            mov qword [rbx + 0x408], rbp	       272	mount.c	FUNCTION_14	IF_1
0x4000148	              0x5b	                                 pop rbx	       274	mount.c	FUNCTION_14
0x4000149	              0x5d	                                 pop rbp	       274	mount.c	FUNCTION_14
0x400014a	              0xc3	                                     ret	       274	mount.c	FUNCTION_14
kernfs_get_parent_dentry	SWITCH,0:FOR,0:WHILE,0:CALL,3:DO,0:functions,0:IF,0:ELSE,0	11
0x4000150	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       128	mount.c	FUNCTION_8
0x4000154	          0x4885c0	                           test rax, rax	        75	kernfs-internal.h	FUNCTION_21	IF_1	CALL_1
0x4000157	            0x741c	                            je 0x4000175	        75	kernfs-internal.h	FUNCTION_21	IF_1	CALL_1
0x4000159	    0x488b80380200	           mov rax, qword [rax + 0x238] 	        77	kernfs-internal.h	FUNCTION_21	CALL_2
0x4000160	        0x488b7f68	            mov rdi, qword [rdi + 0x68] 	       131	mount.c	FUNCTION_8	CALL_3
0x4000164	        0x488b7008	                mov rsi, qword [rax + 8]	       131	mount.c	FUNCTION_8	CALL_3
0x4000168	      0xe800000000	                          call 0x400016d	       131	mount.c	FUNCTION_8	CALL_3
0x400016d	          0x4889c7	                            mov rdi, rax	       131	mount.c	FUNCTION_8	CALL_3
0x4000170	      0xe900000000	                           jmp 0x4000175	       131	mount.c	FUNCTION_8	CALL_3
0x4000175	            0x31c0	                            xor eax, eax	        76	kernfs-internal.h	FUNCTION_21	IF_1
0x4000177	            0xebe7	                           jmp 0x4000160	        76	kernfs-internal.h	FUNCTION_21	IF_1
kernfs_get_node_by_id	SWITCH,0:FOR,0:WHILE,0:CALL,2:DO,0:functions,0:IF,2:ELSE,0	19
0x4000210	              0x53	                                push rbx	        74	mount.c	FUNCTION_4
0x4000211	          0x4889f3	                            mov rbx, rsi	        74	mount.c	FUNCTION_4
0x4000214	            0x8b36	                    mov esi, dword [rsi]	        77	mount.c	FUNCTION_4	CALL_1
0x4000216	      0xe800000000	                          call 0x400021b	        77	mount.c	FUNCTION_4	CALL_1
0x400021b	          0x4885c0	                           test rax, rax	        78	mount.c	FUNCTION_4	IF_1
0x400021e	            0x7416	                            je 0x4000236	        78	mount.c	FUNCTION_4	IF_1
0x4000220	          0x8b5304	                mov edx, dword [rbx + 4]	        80	mount.c	FUNCTION_4	IF_2
0x4000223	          0x39506c	            cmp dword [rax + 0x6c], edx 	        80	mount.c	FUNCTION_4	IF_2
0x4000226	            0x7502	                           jne 0x400022a	        80	mount.c	FUNCTION_4	IF_2
0x4000228	              0x5b	                                 pop rbx	        85	mount.c	FUNCTION_4
0x4000229	              0xc3	                                     ret	        85	mount.c	FUNCTION_4
0x400022a	          0x4889c7	                            mov rdi, rax	        81	mount.c	FUNCTION_4	IF_2	CALL_2
0x400022d	      0xe800000000	                          call 0x4000232	        81	mount.c	FUNCTION_4	IF_2	CALL_2
0x4000232	            0x31c0	                            xor eax, eax	        82	mount.c	FUNCTION_4	IF_2
0x4000234	              0x5b	                                 pop rbx	        85	mount.c	FUNCTION_4
0x4000235	              0xc3	                                     ret	        85	mount.c	FUNCTION_4
0x4000236	            0x31c0	                            xor eax, eax	        79	mount.c	FUNCTION_4	IF_1
0x4000238	              0x5b	                                 pop rbx	        85	mount.c	FUNCTION_4
0x4000239	              0xc3	                                     ret	        85	mount.c	FUNCTION_4
kernfs_sop_remount_fs	SWITCH,0:FOR,0:WHILE,0:CALL,1:DO,0:functions,0:IF,1:ELSE,0	11
0x4000040	    0x488b87080400	           mov rax, qword [rdi + 0x408] 	        27	mount.c	FUNCTION_1
0x4000047	        0x488b7808	                mov rdi, qword [rax + 8]	        27	mount.c	FUNCTION_1
0x400004b	        0x488b4730	            mov rax, qword [rdi + 0x30] 	        28	mount.c	FUNCTION_1
0x400004f	          0x4885c0	                           test rax, rax	        30	mount.c	FUNCTION_1	IF_1
0x4000052	            0x740d	                            je 0x4000061	        30	mount.c	FUNCTION_1	IF_1
0x4000054	          0x488b00	                    mov rax, qword [rax]	        30	mount.c	FUNCTION_1	IF_1
0x4000057	          0x4885c0	                           test rax, rax	        30	mount.c	FUNCTION_1	IF_1
0x400005a	            0x7405	                            je 0x4000061	        30	mount.c	FUNCTION_1	IF_1
0x400005c	      0xe900000000	                           jmp 0x4000061	        31	mount.c	FUNCTION_1	CALL_1
0x4000061	            0x31c0	                            xor eax, eax	        33	mount.c	FUNCTION_1
0x4000063	              0xc3	                                     ret	        33	mount.c	FUNCTION_1
kernfs_root_from_sb	SWITCH,0:FOR,0:WHILE,0:CALL,0:DO,0:functions,0:IF,1:ELSE,0	6
0x4000240	            0x31c0	                            xor eax, eax	       151	mount.c	FUNCTION_9
0x4000242	    0x48817f300000	               cmp qword [rdi + 0x30], 0	       149	mount.c	FUNCTION_9	IF_1
0x400024a	            0x750b	                           jne 0x4000257	       149	mount.c	FUNCTION_9	IF_1
0x400024c	    0x488b87080400	           mov rax, qword [rdi + 0x408] 	       150	mount.c	FUNCTION_9	IF_1
0x4000253	        0x488b4008	                mov rax, qword [rax + 8]	       150	mount.c	FUNCTION_9	IF_1
0x4000257	            0xf3c3	                                     ret	       152	mount.c	FUNCTION_9
kernfs_init	SWITCH,0:FOR,0:WHILE,0:CALL,1:DO,0:functions,0:IF,0:ELSE,0	10
0x4000040	    0x488b87080400	           mov rax, qword [rdi + 0x408] 	        27	mount.c	FUNCTION_1
0x4000047	        0x488b7808	                mov rdi, qword [rax + 8]	        27	mount.c	FUNCTION_1
0x400004b	        0x488b4730	            mov rax, qword [rdi + 0x30] 	        28	mount.c	FUNCTION_1
0x400004f	          0x4885c0	                           test rax, rax	        30	mount.c	FUNCTION_1	IF_1
0x4000052	            0x740d	                            je 0x4000061	        30	mount.c	FUNCTION_1	IF_1
0x4000054	          0x488b00	                    mov rax, qword [rax]	        30	mount.c	FUNCTION_1	IF_1
0x4000057	          0x4885c0	                           test rax, rax	        30	mount.c	FUNCTION_1	IF_1
0x400005a	            0x7405	                            je 0x4000061	        30	mount.c	FUNCTION_1	IF_1
0x400005c	      0xe900000000	                           jmp 0x4000061	        31	mount.c	FUNCTION_1	CALL_1
0x4000061	            0x31c0	                            xor eax, eax	        33	mount.c	FUNCTION_1
kernfs_fh_get_inode	SWITCH,0:FOR,0:WHILE,0:CALL,8:DO,0:functions,0:IF,4:ELSE,0	35
0x4000190	          0x4885f6	                           test rsi, rsi	        94	mount.c	FUNCTION_5	IF_1
0x4000193	            0x7508	                           jne 0x400019d	        94	mount.c	FUNCTION_5	IF_1
0x4000195	    0x48c7c08cffff	             mov rax, 0xffffffffffffff8c	        95	mount.c	FUNCTION_5	CALL_1
0x400019c	              0xc3	                                     ret	       111	mount.c	FUNCTION_5
0x400019d	            0x4154	                                push r12	        89	mount.c	FUNCTION_5
0x400019f	              0x55	                                push rbp	        89	mount.c	FUNCTION_5
0x40001a0	            0x89d5	                            mov ebp, edx	        89	mount.c	FUNCTION_5
0x40001a2	              0x53	                                push rbx	        89	mount.c	FUNCTION_5
0x40001a3	    0x488b87080400	           mov rax, qword [rdi + 0x408] 	        97	mount.c	FUNCTION_5	CALL_2
0x40001aa	          0x4889fb	                            mov rbx, rdi	        97	mount.c	FUNCTION_5	CALL_2
0x40001ad	        0x488b7808	                mov rdi, qword [rax + 8]	        97	mount.c	FUNCTION_5	CALL_2
0x40001b1	      0xe800000000	                          call 0x40001b6	        97	mount.c	FUNCTION_5	CALL_2
0x40001b6	          0x4885c0	                           test rax, rax	        98	mount.c	FUNCTION_5	IF_2
0x40001b9	          0x4989c4	                            mov r12, rax	        97	mount.c	FUNCTION_5	CALL_2
0x40001bc	            0x7432	                            je 0x40001f0	        98	mount.c	FUNCTION_5	IF_2
0x40001be	          0x4889df	                            mov rdi, rbx	       100	mount.c	FUNCTION_5	CALL_4
0x40001c1	          0x4889c6	                            mov rsi, rax	       100	mount.c	FUNCTION_5	CALL_4
0x40001c4	      0xe800000000	                          call 0x40001c9	       100	mount.c	FUNCTION_5	CALL_4
0x40001c9	          0x4c89e7	                            mov rdi, r12	       101	mount.c	FUNCTION_5	CALL_5
0x40001cc	          0x4889c3	                            mov rbx, rax	       100	mount.c	FUNCTION_5	CALL_4
0x40001cf	      0xe800000000	                          call 0x40001d4	       101	mount.c	FUNCTION_5	CALL_5
0x40001d4	          0x4885db	                           test rbx, rbx	       102	mount.c	FUNCTION_5	IF_3
0x40001d7	            0x7417	                            je 0x40001f0	       102	mount.c	FUNCTION_5	IF_3
0x40001d9	            0x85ed	                           test ebp, ebp	       105	mount.c	FUNCTION_5	IF_4
0x40001db	          0x4889d8	                            mov rax, rbx	       105	mount.c	FUNCTION_5	IF_4
0x40001de	            0x7417	                            je 0x40001f7	       105	mount.c	FUNCTION_5	IF_4
0x40001e0	    0x3bab28020000	           cmp ebp, dword [rbx + 0x228] 	       105	mount.c	FUNCTION_5	IF_4
0x40001e6	            0x740f	                            je 0x40001f7	       105	mount.c	FUNCTION_5	IF_4
0x40001e8	          0x4889df	                            mov rdi, rbx	       107	mount.c	FUNCTION_5	IF_4	CALL_7
0x40001eb	      0xe800000000	                          call 0x40001f0	       107	mount.c	FUNCTION_5	IF_4	CALL_7
0x40001f0	    0x48c7c08cffff	             mov rax, 0xffffffffffffff8c	       108	mount.c	FUNCTION_5	IF_4	CALL_8
0x40001f7	              0x5b	                                 pop rbx	       111	mount.c	FUNCTION_5
0x40001f8	              0x5d	                                 pop rbp	       111	mount.c	FUNCTION_5
0x40001f9	            0x415c	                                 pop r12	       111	mount.c	FUNCTION_5
0x40001fb	              0xc3	                                     ret	       111	mount.c	FUNCTION_5
