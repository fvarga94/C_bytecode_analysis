cfg80211_process_disassoc	IF,1:ELSE,0:functions,0:FOR,0:WHILE,0:DO,0:CALL,8:SWITCH,0	54
0x4000710	          0x4c8b07	                     mov r8, qword [rdi]	        92	mlme.c	FUNCTION_4	CALL_1
0x4000713	          0x4d85c0	                             test r8, r8	       112	core.h	FUNCTION_29	CALL_1
0x4000716	     0xf84a0000000	                            je 0x40007bc	       112	core.h	FUNCTION_29	CALL_1
0x400071c	            0x4155	                                push r13	        91	mlme.c	FUNCTION_4
0x400071e	            0x4154	                                push r12	        91	mlme.c	FUNCTION_4
0x4000720	          0x4889d1	                            mov rcx, rdx	        91	mlme.c	FUNCTION_4
0x4000723	              0x55	                                push rbp	        91	mlme.c	FUNCTION_4
0x4000724	              0x53	                                push rbx	        91	mlme.c	FUNCTION_4
0x4000725	          0x4889f3	                            mov rbx, rsi	        91	mlme.c	FUNCTION_4
0x4000728	      0x440fb76618	          movzx r12d, word [rsi + 0x18] 	        95	mlme.c	FUNCTION_4	CALL_2
0x400072d	        0x488b7720	            mov rsi, qword [rdi + 0x20] 	        96	mlme.c	FUNCTION_4	CALL_3
0x4000731	          0x4889fd	                            mov rbp, rdi	        96	mlme.c	FUNCTION_4	CALL_3
0x4000734	         0xfb7430e	            movzx eax, word [rbx + 0xe] 	        96	mlme.c	FUNCTION_4	CALL_3
0x4000738	    0x488bbed80200	           mov rdi, qword [rsi + 0x2d8] 	        96	mlme.c	FUNCTION_4	CALL_3
0x400073f	        0x66334704	                  xor ax, word [rdi + 4]	        96	mlme.c	FUNCTION_4	CALL_3
0x4000743	            0x8b17	                    mov edx, dword [rdi]	        96	mlme.c	FUNCTION_4	CALL_3
0x4000745	    0x498db820fdff	                   lea rdi, [r8 - 0x2e0]	        98	mlme.c	FUNCTION_4	CALL_4
0x400074c	          0x33530a	              xor edx, dword [rbx + 0xa]	        96	mlme.c	FUNCTION_4	CALL_3
0x400074f	    0x41b8c0004001	                      mov r8d, 0x14000c0	        98	mlme.c	FUNCTION_4	CALL_4
0x4000755	           0xfb7c0	                           movzx eax, ax	        96	mlme.c	FUNCTION_4	CALL_3
0x4000758	             0x9c2	                             or edx, eax	        96	mlme.c	FUNCTION_4	CALL_3
0x400075a	          0x4889da	                            mov rdx, rbx	        98	mlme.c	FUNCTION_4	CALL_4
0x400075d	        0x410f95c5	                              setne r13b	        96	mlme.c	FUNCTION_4	CALL_3
0x4000761	      0xe800000000	                          call 0x4000766	        98	mlme.c	FUNCTION_4	CALL_4
0x4000766	    0x488b85f00000	            mov rax, qword [rbp + 0xf0] 	       100	mlme.c	FUNCTION_4	IF_1	CALL_5
0x400076d	          0x4885c0	                           test rax, rax	       100	mlme.c	FUNCTION_4	IF_1	CALL_5
0x4000770	            0x741b	                            je 0x400078d	       100	mlme.c	FUNCTION_4	IF_1	CALL_5
0x4000772	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	       100	mlme.c	FUNCTION_4	IF_1	CALL_5
0x4000778	     0xfb780a40000	           movzx eax, word [rax + 0xa4] 	       100	mlme.c	FUNCTION_4	IF_1	CALL_5
0x400077f	        0x66334314	               xor ax, word [rbx + 0x14]	       100	mlme.c	FUNCTION_4	IF_1	CALL_5
0x4000783	          0x335310	             xor edx, dword [rbx + 0x10]	       100	mlme.c	FUNCTION_4	IF_1	CALL_5
0x4000786	           0xfb7c0	                           movzx eax, ax	       100	mlme.c	FUNCTION_4	IF_1	CALL_5
0x4000789	             0x9c2	                             or edx, eax	       100	mlme.c	FUNCTION_4	IF_1	CALL_5
0x400078b	            0x7409	                            je 0x4000796	       100	mlme.c	FUNCTION_4	IF_1	CALL_5
0x400078d	             0xf0b	                                     ud2	       100	mlme.c	FUNCTION_4	IF_1	CALL_5
0x400078f	              0x5b	                                 pop rbx	       106	mlme.c	FUNCTION_4
0x4000790	              0x5d	                                 pop rbp	       106	mlme.c	FUNCTION_4
0x4000791	            0x415c	                                 pop r12	       106	mlme.c	FUNCTION_4
0x4000793	            0x415d	                                 pop r13	       106	mlme.c	FUNCTION_4
0x4000795	              0xc3	                                     ret	       106	mlme.c	FUNCTION_4
0x4000796	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	       104	mlme.c	FUNCTION_4	CALL_7
0x400079a	          0x4589e8	                           mov r8d, r13d	       104	mlme.c	FUNCTION_4	CALL_7
0x400079d	        0x410fb7cc	                         movzx ecx, r12w	       104	mlme.c	FUNCTION_4	CALL_7
0x40007a1	        0x4183e001	                              and r8d, 1	       104	mlme.c	FUNCTION_4	CALL_7
0x40007a5	            0x31d2	                            xor edx, edx	       104	mlme.c	FUNCTION_4	CALL_7
0x40007a7	            0x31f6	                            xor esi, esi	       104	mlme.c	FUNCTION_4	CALL_7
0x40007a9	      0xe800000000	                          call 0x40007ae	       104	mlme.c	FUNCTION_4	CALL_7
0x40007ae	          0x4889ef	                            mov rdi, rbp	       105	mlme.c	FUNCTION_4	CALL_8
0x40007b1	              0x5b	                                 pop rbx	       106	mlme.c	FUNCTION_4
0x40007b2	              0x5d	                                 pop rbp	       106	mlme.c	FUNCTION_4
0x40007b3	            0x415c	                                 pop r12	       106	mlme.c	FUNCTION_4
0x40007b5	            0x415d	                                 pop r13	       106	mlme.c	FUNCTION_4
0x40007b7	      0xe900000000	                           jmp 0x40007bc	       105	mlme.c	FUNCTION_4	CALL_8
0x40007bc	             0xf0b	                                     ud2	       105	mlme.c	FUNCTION_4	CALL_8
cfg80211_mlme_unreg_wk	IF,0:ELSE,0:functions,0:FOR,0:WHILE,0:DO,0:CALL,4:SWITCH,0	7
0x4001470	              0x53	                                push rbx	       456	mlme.c	FUNCTION_19
0x4001471	          0x4889fb	                            mov rbx, rdi	       456	mlme.c	FUNCTION_19
0x4001474	      0xe800000000	                          call 0x4001479	       462	mlme.c	FUNCTION_19	CALL_2
0x4001479	    0x488dbb38ffff	                   lea rdi, [rbx - 0xc8]	       463	mlme.c	FUNCTION_19	CALL_3
0x4001480	      0xe8bbebffff	call sym.cfg80211_process_mlme_unregistrations	       463	mlme.c	FUNCTION_19	CALL_3
0x4001485	              0x5b	                                 pop rbx	       465	mlme.c	FUNCTION_19
0x4001486	      0xe900000000	                           jmp 0x400148b	       464	mlme.c	FUNCTION_19	CALL_4
cfg80211_process_deauth	IF,1:ELSE,0:functions,0:FOR,0:WHILE,0:DO,0:CALL,7:SWITCH,0	64
0x40004a0	          0x4c8b07	                     mov r8, qword [rdi]	        73	mlme.c	FUNCTION_3	CALL_1
0x40004a3	          0x4d85c0	                             test r8, r8	       112	core.h	FUNCTION_29	CALL_1
0x40004a6	     0xf84c4000000	                            je 0x4000570	       112	core.h	FUNCTION_29	CALL_1
0x40004ac	            0x4157	                                push r15	        72	mlme.c	FUNCTION_3
0x40004ae	            0x4156	                                push r14	        72	mlme.c	FUNCTION_3
0x40004b0	          0x4889d1	                            mov rcx, rdx	        72	mlme.c	FUNCTION_3
0x40004b3	            0x4155	                                push r13	        72	mlme.c	FUNCTION_3
0x40004b5	            0x4154	                                push r12	        72	mlme.c	FUNCTION_3
0x40004b7	          0x4989fc	                            mov r12, rdi	        72	mlme.c	FUNCTION_3
0x40004ba	              0x55	                                push rbp	        72	mlme.c	FUNCTION_3
0x40004bb	              0x53	                                push rbx	        72	mlme.c	FUNCTION_3
0x40004bc	          0x4889f3	                            mov rbx, rsi	        72	mlme.c	FUNCTION_3
0x40004bf	        0x4883ec08	                              sub rsp, 8	        72	mlme.c	FUNCTION_3
0x40004c3	         0xfb74618	           movzx eax, word [rsi + 0x18] 	        76	mlme.c	FUNCTION_3	CALL_2
0x40004c7	        0x488b7720	            mov rsi, qword [rdi + 0x20] 	        77	mlme.c	FUNCTION_3	CALL_3
0x40004cb	    0x498db820fdff	                   lea rdi, [r8 - 0x2e0]	        79	mlme.c	FUNCTION_3	CALL_4
0x40004d2	    0x41b8c0004001	                      mov r8d, 0x14000c0	        79	mlme.c	FUNCTION_3	CALL_4
0x40004d8	        0x448b6b0a	            mov r13d, dword [rbx + 0xa] 	       322	etherdevice.h	FUNCTION_157
0x40004dc	      0x440fb7730e	           movzx r14d, word [rbx + 0xe] 	       323	etherdevice.h	FUNCTION_157
0x40004e1	    0x488b96d80200	           mov rdx, qword [rsi + 0x2d8] 	        77	mlme.c	FUNCTION_3	CALL_3
0x40004e8	      0x6689442406	                  mov word [rsp + 6], ax	        76	mlme.c	FUNCTION_3	CALL_2
0x40004ed	          0x448b3a	                   mov r15d, dword [rdx]	       322	etherdevice.h	FUNCTION_157
0x40004f0	         0xfb76a04	               movzx ebp, word [rdx + 4]	       323	etherdevice.h	FUNCTION_157
0x40004f4	          0x4889da	                            mov rdx, rbx	        79	mlme.c	FUNCTION_3	CALL_4
0x40004f7	      0xe800000000	                          call 0x40004fc	        79	mlme.c	FUNCTION_3	CALL_4
0x40004fc	    0x498b9424f000	            mov rdx, qword [r12 + 0xf0] 	        81	mlme.c	FUNCTION_3	IF_1
0x4000504	          0x4885d2	                           test rdx, rdx	        81	mlme.c	FUNCTION_3	IF_1
0x4000507	            0x741b	                            je 0x4000524	        81	mlme.c	FUNCTION_3	IF_1
0x4000509	    0x8b8aa0000000	            mov ecx, dword [rdx + 0xa0] 	        81	mlme.c	FUNCTION_3	IF_1
0x400050f	     0xfb792a40000	           movzx edx, word [rdx + 0xa4] 	        81	mlme.c	FUNCTION_3	IF_1
0x4000516	        0x66335314	               xor dx, word [rbx + 0x14]	        81	mlme.c	FUNCTION_3	IF_1
0x400051a	          0x334b10	             xor ecx, dword [rbx + 0x10]	        81	mlme.c	FUNCTION_3	IF_1
0x400051d	           0xfb7d2	                           movzx edx, dx	        81	mlme.c	FUNCTION_3	IF_1
0x4000520	             0x9d1	                             or ecx, edx	        81	mlme.c	FUNCTION_3	IF_1
0x4000522	            0x740f	                            je 0x4000533	        81	mlme.c	FUNCTION_3	IF_1
0x4000524	        0x4883c408	                              add rsp, 8	        87	mlme.c	FUNCTION_3
0x4000528	              0x5b	                                 pop rbx	        87	mlme.c	FUNCTION_3
0x4000529	              0x5d	                                 pop rbp	        87	mlme.c	FUNCTION_3
0x400052a	            0x415c	                                 pop r12	        87	mlme.c	FUNCTION_3
0x400052c	            0x415d	                                 pop r13	        87	mlme.c	FUNCTION_3
0x400052e	            0x415e	                                 pop r14	        87	mlme.c	FUNCTION_3
0x4000530	            0x415f	                                 pop r15	        87	mlme.c	FUNCTION_3
0x4000532	              0xc3	                                     ret	        87	mlme.c	FUNCTION_3
0x4000533	          0x4431f5	                           xor ebp, r14d	        85	mlme.c	FUNCTION_3	CALL_6
0x4000536	          0x4531fd	                          xor r13d, r15d	        85	mlme.c	FUNCTION_3	CALL_6
0x4000539	       0xfb74c2406	               movzx ecx, word [rsp + 6]	        85	mlme.c	FUNCTION_3	CALL_6
0x400053e	           0xfb7ed	                           movzx ebp, bp	        85	mlme.c	FUNCTION_3	CALL_6
0x4000541	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	        85	mlme.c	FUNCTION_3	CALL_6
0x4000546	          0x4109ed	                            or r13d, ebp	        85	mlme.c	FUNCTION_3	CALL_6
0x4000549	        0x410f95c0	                               setne r8b	        85	mlme.c	FUNCTION_3	CALL_6
0x400054d	            0x31d2	                            xor edx, edx	        85	mlme.c	FUNCTION_3	CALL_6
0x400054f	            0x31f6	                            xor esi, esi	        85	mlme.c	FUNCTION_3	CALL_6
0x4000551	        0x450fb6c0	                          movzx r8d, r8b	        85	mlme.c	FUNCTION_3	CALL_6
0x4000555	      0xe800000000	                          call 0x400055a	        85	mlme.c	FUNCTION_3	CALL_6
0x400055a	        0x4883c408	                              add rsp, 8	        87	mlme.c	FUNCTION_3
0x400055e	          0x4c89e7	                            mov rdi, r12	        86	mlme.c	FUNCTION_3	CALL_7
0x4000561	              0x5b	                                 pop rbx	        87	mlme.c	FUNCTION_3
0x4000562	              0x5d	                                 pop rbp	        87	mlme.c	FUNCTION_3
0x4000563	            0x415c	                                 pop r12	        87	mlme.c	FUNCTION_3
0x4000565	            0x415d	                                 pop r13	        87	mlme.c	FUNCTION_3
0x4000567	            0x415e	                                 pop r14	        87	mlme.c	FUNCTION_3
0x4000569	            0x415f	                                 pop r15	        87	mlme.c	FUNCTION_3
0x400056b	      0xe900000000	                           jmp 0x4000570	        86	mlme.c	FUNCTION_3	CALL_7
0x4000570	             0xf0b	                                     ud2	        86	mlme.c	FUNCTION_3	CALL_7
cfg80211_mlme_down	IF,2:ELSE,0:functions,0:FOR,0:WHILE,0:DO,0:CALL,2:SWITCH,0	28
0x40013f0	        0x4883ec10	                           sub rsp, 0x10	       397	mlme.c	FUNCTION_17
0x40013f4	    0x488b96c80200	           mov rdx, qword [rsi + 0x2c8] 	       398	mlme.c	FUNCTION_17
0x40013fb	    0x65488b042528	                mov rax, qword gs:[0x28]	       397	mlme.c	FUNCTION_17
0x4001404	      0x4889442408	                mov qword [rsp + 8], rax	       397	mlme.c	FUNCTION_17
0x4001409	            0x31c0	                            xor eax, eax	       397	mlme.c	FUNCTION_17
0x400140b	          0x488b07	                    mov rax, qword [rdi]	       403	mlme.c	FUNCTION_17	IF_1
0x400140e	    0x4883b8400100	              cmp qword [rax + 0x140], 0	       403	mlme.c	FUNCTION_17	IF_1
0x4001416	            0x743a	                            je 0x4001452	       403	mlme.c	FUNCTION_17	IF_1
0x4001418	    0x488b82f00000	            mov rax, qword [rdx + 0xf0] 	       406	mlme.c	FUNCTION_17	IF_2
0x400141f	          0x4885c0	                           test rax, rax	       406	mlme.c	FUNCTION_17	IF_2
0x4001422	            0x742e	                            je 0x4001452	       406	mlme.c	FUNCTION_17	IF_2
0x4001424	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	       409	mlme.c	FUNCTION_17	CALL_1
0x400142a	     0xfb780a40000	           movzx eax, word [rax + 0xa4] 	       409	mlme.c	FUNCTION_17	CALL_1
0x4001431	    0x41b903000000	                              mov r9d, 3	       410	mlme.c	FUNCTION_17	CALL_2
0x4001437	          0x4531c0	                            xor r8d, r8d	       410	mlme.c	FUNCTION_17	CALL_2
0x400143a	            0x31c9	                            xor ecx, ecx	       410	mlme.c	FUNCTION_17	CALL_2
0x400143c	        0x89542402	                mov dword [rsp + 2], edx	       409	mlme.c	FUNCTION_17	CALL_1
0x4001440	      0x6689442406	                  mov word [rsp + 6], ax	       409	mlme.c	FUNCTION_17	CALL_1
0x4001445	            0x6a00	                                  push 0	       410	mlme.c	FUNCTION_17	CALL_2
0x4001447	      0x488d54240a	                    lea rdx, [rsp + 0xa]	       410	mlme.c	FUNCTION_17	CALL_2
0x400144c	      0xe800000000	                          call 0x4001451	       410	mlme.c	FUNCTION_17	CALL_2
0x4001451	              0x58	                                 pop rax	       410	mlme.c	FUNCTION_17	CALL_2
0x4001452	      0x488b442408	                mov rax, qword [rsp + 8]	       412	mlme.c	FUNCTION_17
0x4001457	    0x654833042528	                xor rax, qword gs:[0x28]	       412	mlme.c	FUNCTION_17
0x4001460	            0x7505	                           jne 0x4001467	       412	mlme.c	FUNCTION_17
0x4001462	        0x4883c410	                           add rsp, 0x10	       412	mlme.c	FUNCTION_17
0x4001466	              0xc3	                                     ret	       412	mlme.c	FUNCTION_17
0x4001467	      0xe800000000	                          call 0x400146c	       412	mlme.c	FUNCTION_17
