pccard_get_tuple_data	CALL,2:functions,0:DO,0:FOR,0:ELSE,0:WHILE,0:IF,4:SWITCH,0	31
0x4001ca0	          0x4885ff	                           test rdi, rdi	       639	cistpl.c	FUNCTION_13	IF_1
0x4001ca3	            0x744c	                            je 0x4001cf1	       639	cistpl.c	FUNCTION_13	IF_1
0x4001ca5	         0xfb64615	           movzx eax, byte [rsi + 0x15] 	       642	cistpl.c	FUNCTION_13	IF_2
0x4001ca9	         0xfb65616	           movzx edx, byte [rsi + 0x16] 	       642	cistpl.c	FUNCTION_13	IF_2
0x4001cad	            0x38d0	                              cmp al, dl	       642	cistpl.c	FUNCTION_13	IF_2
0x4001caf	            0x723a	                            jb 0x4001ceb	       642	cistpl.c	FUNCTION_13	IF_2
0x4001cb1	           0xfb6c8	                           movzx ecx, al	       644	cistpl.c	FUNCTION_13
0x4001cb4	          0x884618	               mov byte [rsi + 0x18], al	       645	cistpl.c	FUNCTION_13
0x4001cb7	            0x31c0	                            xor eax, eax	       647	cistpl.c	FUNCTION_13	IF_3
0x4001cb9	            0x29d1	                            sub ecx, edx	       646	cistpl.c	FUNCTION_13	IF_3
0x4001cbb	            0x7502	                           jne 0x4001cbf	       646	cistpl.c	FUNCTION_13	IF_3
0x4001cbd	            0xf3c3	                                     ret	       655	cistpl.c	FUNCTION_13
0x4001cbf	          0x4889f0	                            mov rax, rsi	       655	cistpl.c	FUNCTION_13
0x4001cc2	         0xfb67617	           movzx esi, byte [rsi + 0x17] 	       648	cistpl.c	FUNCTION_13	CALL_1
0x4001cc6	        0x4c8b4020	              mov r8, qword [rax + 0x20]	       648	cistpl.c	FUNCTION_13	CALL_1
0x4001cca	            0x39ce	                            cmp esi, ecx	       648	cistpl.c	FUNCTION_13	CALL_1
0x4001ccc	           0xf46ce	                         cmovbe ecx, esi	       648	cistpl.c	FUNCTION_13	CALL_1
0x4001ccf	         0xfb67009	               movzx esi, byte [rax + 9]	       648	cistpl.c	FUNCTION_13	CALL_1
0x4001cd3	           0x35010	             add edx, dword [rax + 0x10]	       648	cistpl.c	FUNCTION_13	CALL_1
0x4001cd6	            0x89c9	                            mov ecx, ecx	       648	cistpl.c	FUNCTION_13	CALL_1
0x4001cd8	          0x83e60f	                            and esi, 0xf	       648	cistpl.c	FUNCTION_13	CALL_1
0x4001cdb	      0xe8f0f4ffff	                 call sym.read_cis_cache	       648	cistpl.c	FUNCTION_13	CALL_1
0x4001ce0	            0x85c0	                           test eax, eax	       652	cistpl.c	FUNCTION_13	IF_4
0x4001ce2	           0xf95c0	                                setne al	       652	cistpl.c	FUNCTION_13	IF_4
0x4001ce5	           0xfb6c0	                           movzx eax, al	       652	cistpl.c	FUNCTION_13	IF_4
0x4001ce8	            0xf7d8	                                 neg eax	       652	cistpl.c	FUNCTION_13	IF_4
0x4001cea	              0xc3	                                     ret	       652	cistpl.c	FUNCTION_13	IF_4
0x4001ceb	      0xb8e4ffffff	                     mov eax, 0xffffffe4	       643	cistpl.c	FUNCTION_13	IF_2
0x4001cf0	              0xc3	                                     ret	       655	cistpl.c	FUNCTION_13
0x4001cf1	      0xb8eaffffff	                     mov eax, 0xffffffea	       640	cistpl.c	FUNCTION_13	IF_1
0x4001cf6	              0xc3	                                     ret	       640	cistpl.c	FUNCTION_13	IF_1
pccard_store_cis	CALL,3:functions,0:DO,0:FOR,0:ELSE,0:WHILE,0:IF,4:SWITCH,0	29
0x4001720	    0x4981f9ff0100	                           cmp r9, 0x1ff	      1586	cistpl.c	FUNCTION_40	IF_2
0x4001727	            0x7750	                            ja 0x4001779	      1586	cistpl.c	FUNCTION_40	IF_2
0x4001729	          0x4d85c0	                             test r8, r8	      1586	cistpl.c	FUNCTION_40	IF_2
0x400172c	            0x754b	                           jne 0x4001779	      1586	cistpl.c	FUNCTION_40	IF_2
0x400172e	    0xf686d4fdffff	              test byte [rsi - 0x22c], 8	      1589	cistpl.c	FUNCTION_40	IF_3
0x4001735	    0x48c7c2edffff	             mov rdx, 0xffffffffffffffed	      1590	cistpl.c	FUNCTION_40	IF_3
0x400173c	            0x7442	                            je 0x4001780	      1589	cistpl.c	FUNCTION_40	IF_3
0x400173e	              0x55	                                push rbp	      1577	cistpl.c	FUNCTION_40
0x400173f	    0x488daec0fdff	                  lea rbp, [rsi - 0x240]	      1577	cistpl.c	FUNCTION_40
0x4001746	              0x53	                                push rbx	      1577	cistpl.c	FUNCTION_40
0x4001747	          0x4c89ca	                             mov rdx, r9	      1592	cistpl.c	FUNCTION_40	CALL_2
0x400174a	          0x4889ce	                            mov rsi, rcx	      1592	cistpl.c	FUNCTION_40	CALL_2
0x400174d	          0x4c89cb	                             mov rbx, r9	      1592	cistpl.c	FUNCTION_40	CALL_2
0x4001750	          0x4889ef	                            mov rdi, rbp	      1592	cistpl.c	FUNCTION_40	CALL_2
0x4001753	      0xe800000000	                          call 0x4001758	      1592	cistpl.c	FUNCTION_40	CALL_2
0x4001758	            0x85c0	                           test eax, eax	      1593	cistpl.c	FUNCTION_40	IF_4
0x400175a	    0x48c7c2fbffff	             mov rdx, 0xfffffffffffffffb	      1594	cistpl.c	FUNCTION_40	IF_4
0x4001761	            0x7510	                           jne 0x4001773	      1593	cistpl.c	FUNCTION_40	IF_4
0x4001763	      0xbe10000000	                           mov esi, 0x10	      1596	cistpl.c	FUNCTION_40	CALL_3
0x4001768	          0x4889ef	                            mov rdi, rbp	      1596	cistpl.c	FUNCTION_40	CALL_3
0x400176b	      0xe800000000	                          call 0x4001770	      1596	cistpl.c	FUNCTION_40	CALL_3
0x4001770	          0x4889da	                            mov rdx, rbx	      1598	cistpl.c	FUNCTION_40
0x4001773	          0x4889d0	                            mov rax, rdx	      1599	cistpl.c	FUNCTION_40
0x4001776	              0x5b	                                 pop rbx	      1599	cistpl.c	FUNCTION_40
0x4001777	              0x5d	                                 pop rbp	      1599	cistpl.c	FUNCTION_40
0x4001778	              0xc3	                                     ret	      1599	cistpl.c	FUNCTION_40
0x4001779	    0x48c7c2eaffff	             mov rdx, 0xffffffffffffffea	      1587	cistpl.c	FUNCTION_40	IF_2
0x4001780	          0x4889d0	                            mov rax, rdx	      1599	cistpl.c	FUNCTION_40
0x4001783	              0xc3	                                     ret	      1599	cistpl.c	FUNCTION_40
release_cis_mem	CALL,6:functions,0:DO,0:FOR,0:ELSE,0:WHILE,0:IF,2:SWITCH,0	34
0x4000fc0	              0x55	                                push rbp	        63	cistpl.c	FUNCTION_1
0x4000fc1	    0x488dafe00100	                  lea rbp, [rdi + 0x1e0]	        64	cistpl.c	FUNCTION_1	CALL_1
0x4000fc8	              0x53	                                push rbx	        63	cistpl.c	FUNCTION_1
0x4000fc9	          0x4889fb	                            mov rbx, rdi	        63	cistpl.c	FUNCTION_1
0x4000fcc	          0x4889ef	                            mov rdi, rbp	        64	cistpl.c	FUNCTION_1	CALL_1
0x4000fcf	      0xe800000000	                          call 0x4000fd4	        64	cistpl.c	FUNCTION_1	CALL_1
0x4000fd4	         0xfb64321	           movzx eax, byte [rbx + 0x21] 	        65	cistpl.c	FUNCTION_1	IF_1
0x4000fd8	            0xa801	                              test al, 1	        65	cistpl.c	FUNCTION_1	IF_1
0x4000fda	            0x750a	                           jne 0x4000fe6	        65	cistpl.c	FUNCTION_1	IF_1
0x4000fdc	          0x4889ef	                            mov rdi, rbp	        76	cistpl.c	FUNCTION_1	CALL_6
0x4000fdf	              0x5b	                                 pop rbx	        77	cistpl.c	FUNCTION_1
0x4000fe0	              0x5d	                                 pop rbp	        77	cistpl.c	FUNCTION_1
0x4000fe1	      0xe900000000	                           jmp 0x4000fe6	        76	cistpl.c	FUNCTION_1	CALL_6
0x4000fe6	          0x83e0fe	                     and eax, 0xfffffffe	        66	cistpl.c	FUNCTION_1	IF_1
0x4000fe9	          0x4889df	                            mov rdi, rbx	        67	cistpl.c	FUNCTION_1	IF_1	CALL_2
0x4000fec	        0x488d7320	                   lea rsi, [rbx + 0x20]	        67	cistpl.c	FUNCTION_1	IF_1	CALL_2
0x4000ff0	          0x884321	               mov byte [rbx + 0x21], al	        66	cistpl.c	FUNCTION_1	IF_1
0x4000ff3	    0x488b83600100	           mov rax, qword [rbx + 0x160] 	        67	cistpl.c	FUNCTION_1	IF_1	CALL_2
0x4000ffa	        0x488b4028	            mov rax, qword [rax + 0x28] 	        67	cistpl.c	FUNCTION_1	IF_1	CALL_2
0x4000ffe	      0xe800000000	                          call 0x4001003	        67	cistpl.c	FUNCTION_1	IF_1	CALL_2
0x4001003	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	        68	cistpl.c	FUNCTION_1	IF_1	IF_2
0x4001007	          0x4885ff	                           test rdi, rdi	        68	cistpl.c	FUNCTION_1	IF_1	IF_2
0x400100a	            0x7416	                            je 0x4001022	        68	cistpl.c	FUNCTION_1	IF_1	IF_2
0x400100c	      0xe800000000	                          call 0x4001011	        69	cistpl.c	FUNCTION_1	IF_1	IF_2	CALL_3
0x4001011	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	        70	cistpl.c	FUNCTION_1	IF_1	IF_2	CALL_4
0x4001015	      0xe800000000	                          call 0x400101a	        70	cistpl.c	FUNCTION_1	IF_1	IF_2	CALL_4
0x400101a	    0x48c743380000	               mov qword [rbx + 0x38], 0	        71	cistpl.c	FUNCTION_1	IF_1	IF_2
0x4001022	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	        73	cistpl.c	FUNCTION_1	IF_1	CALL_5
0x4001026	      0xe800000000	                          call 0x400102b	        73	cistpl.c	FUNCTION_1	IF_1	CALL_5
0x400102b	    0x48c743400000	               mov qword [rbx + 0x40], 0	        74	cistpl.c	FUNCTION_1	IF_1
0x4001033	          0x4889ef	                            mov rdi, rbp	        76	cistpl.c	FUNCTION_1	CALL_6
0x4001036	              0x5b	                                 pop rbx	        77	cistpl.c	FUNCTION_1
0x4001037	              0x5d	                                 pop rbp	        77	cistpl.c	FUNCTION_1
0x4001038	      0xe900000000	                           jmp 0x400103d	        76	cistpl.c	FUNCTION_1	CALL_6
parse_strings	CALL,0:functions,0:DO,0:FOR,2:ELSE,0:WHILE,0:IF,6:SWITCH,0	61
0x4000040	          0x4839f7	                            cmp rdi, rsi	       767	cistpl.c	FUNCTION_18	IF_1
0x4000043	     0xf8493000000	                            je 0x40000dc	       767	cistpl.c	FUNCTION_18	IF_1
0x4000049	              0x55	                                push rbp	       764	cistpl.c	FUNCTION_18
0x400004a	            0x31ed	                            xor ebp, ebp	       771	cistpl.c	FUNCTION_18	FOR_1	IF_2
0x400004c	            0x85d2	                           test edx, edx	       770	cistpl.c	FUNCTION_18	FOR_1
0x400004e	              0x53	                                push rbx	       764	cistpl.c	FUNCTION_18
0x400004f	            0x7e6e	                           jle 0x40000bf	       770	cistpl.c	FUNCTION_18	FOR_1
0x4000051	          0x803fff	                    cmp byte [rdi], 0xff	       771	cistpl.c	FUNCTION_18	FOR_1	IF_2
0x4000054	            0x7469	                            je 0x40000bf	       771	cistpl.c	FUNCTION_18	FOR_1	IF_2
0x4000056	            0x31c0	                            xor eax, eax	       771	cistpl.c	FUNCTION_18	FOR_1	IF_2
0x4000058	            0x31db	                            xor ebx, ebx	       776	cistpl.c	FUNCTION_18	FOR_1	FOR_2
0x400005a	          0x418800	                       mov byte [r8], al	       773	cistpl.c	FUNCTION_18	FOR_1
0x400005d	            0xeb0c	                           jmp 0x400006b	       773	cistpl.c	FUNCTION_18	FOR_1
0x400005f	        0x4883c701	                              add rdi, 1	       779	cistpl.c	FUNCTION_18	FOR_1	FOR_2	IF_4
0x4000063	          0x4963c3	                        movsxd rax, r11d	       776	cistpl.c	FUNCTION_18	FOR_1	FOR_2
0x4000066	          0x4839fe	                            cmp rsi, rdi	       779	cistpl.c	FUNCTION_18	FOR_1	FOR_2	IF_4
0x4000069	            0x744c	                            je 0x40000b7	       779	cistpl.c	FUNCTION_18	FOR_1	FOR_2	IF_4
0x400006b	        0x440fb617	                  movzx r10d, byte [rdi]	       776	cistpl.c	FUNCTION_18	FOR_1	FOR_2
0x400006f	        0x448d5801	                     lea r11d, [rax + 1]	       776	cistpl.c	FUNCTION_18	FOR_1	FOR_2
0x4000073	        0x4180faff	                          cmp r10b, 0xff	       776	cistpl.c	FUNCTION_18	FOR_1	FOR_2
0x4000077	        0x440f44d3	                         cmove r10d, ebx	       776	cistpl.c	FUNCTION_18	FOR_1	FOR_2
0x400007b	        0x44881401	              mov byte [rcx + rax], r10b	       776	cistpl.c	FUNCTION_18	FOR_1	FOR_2
0x400007f	           0xfb607	                   movzx eax, byte [rdi]	       777	cistpl.c	FUNCTION_18	FOR_1	FOR_2	IF_3
0x4000082	        0x448d50ff	                     lea r10d, [rax - 1]	       777	cistpl.c	FUNCTION_18	FOR_1	FOR_2	IF_3
0x4000086	        0x4180fafd	                          cmp r10b, 0xfd	       777	cistpl.c	FUNCTION_18	FOR_1	FOR_2	IF_3
0x400008a	            0x76d3	                           jbe 0x400005f	       777	cistpl.c	FUNCTION_18	FOR_1	FOR_2	IF_3
0x400008c	          0x83c501	                              add ebp, 1	       774	cistpl.c	FUNCTION_18	FOR_1
0x400008f	            0x3cff	                            cmp al, 0xff	       782	cistpl.c	FUNCTION_18	FOR_1	IF_5
0x4000091	            0x742c	                            je 0x40000bf	       782	cistpl.c	FUNCTION_18	FOR_1	IF_5
0x4000093	        0x4c8d5701	                      lea r10, [rdi + 1]	       782	cistpl.c	FUNCTION_18	FOR_1	IF_5
0x4000097	          0x4c39d6	                            cmp rsi, r10	       782	cistpl.c	FUNCTION_18	FOR_1	IF_5
0x400009a	            0x7423	                            je 0x40000bf	       782	cistpl.c	FUNCTION_18	FOR_1	IF_5
0x400009c	            0x39ea	                            cmp edx, ebp	       770	cistpl.c	FUNCTION_18	FOR_1
0x400009e	            0x7433	                            je 0x40000d3	       770	cistpl.c	FUNCTION_18	FOR_1
0x40000a0	        0x4983c001	                               add r8, 1	       770	cistpl.c	FUNCTION_18	FOR_1
0x40000a4	        0x807f01ff	                cmp byte [rdi + 1], 0xff	       771	cistpl.c	FUNCTION_18	FOR_1	IF_2
0x40000a8	            0x7408	                            je 0x40000b2	       771	cistpl.c	FUNCTION_18	FOR_1	IF_2
0x40000aa	          0x4963c3	                        movsxd rax, r11d	       776	cistpl.c	FUNCTION_18	FOR_1	FOR_2
0x40000ad	          0x4c89d7	                            mov rdi, r10	       776	cistpl.c	FUNCTION_18	FOR_1	FOR_2
0x40000b0	            0xeba8	                           jmp 0x400005a	       776	cistpl.c	FUNCTION_18	FOR_1	FOR_2
0x40000b2	          0x4d85c9	                             test r9, r9	       785	cistpl.c	FUNCTION_18	IF_6
0x40000b5	            0x750d	                           jne 0x40000c4	       785	cistpl.c	FUNCTION_18	IF_6
0x40000b7	      0xb8eaffffff	                     mov eax, 0xffffffea	       790	cistpl.c	FUNCTION_18
0x40000bc	              0x5b	                                 pop rbx	       791	cistpl.c	FUNCTION_18
0x40000bd	              0x5d	                                 pop rbp	       791	cistpl.c	FUNCTION_18
0x40000be	              0xc3	                                     ret	       791	cistpl.c	FUNCTION_18
0x40000bf	          0x4d85c9	                             test r9, r9	       785	cistpl.c	FUNCTION_18	IF_6
0x40000c2	            0x7407	                            je 0x40000cb	       785	cistpl.c	FUNCTION_18	IF_6
0x40000c4	          0x418829	                      mov byte [r9], bpl	       786	cistpl.c	FUNCTION_18	IF_6
0x40000c7	            0x31c0	                            xor eax, eax	       787	cistpl.c	FUNCTION_18	IF_6
0x40000c9	            0xebf1	                           jmp 0x40000bc	       787	cistpl.c	FUNCTION_18	IF_6
0x40000cb	            0x39d5	                            cmp ebp, edx	       790	cistpl.c	FUNCTION_18
0x40000cd	            0x75e8	                           jne 0x40000b7	       790	cistpl.c	FUNCTION_18
0x40000cf	            0x31c0	                            xor eax, eax	       790	cistpl.c	FUNCTION_18
0x40000d1	            0xebe9	                           jmp 0x40000bc	       790	cistpl.c	FUNCTION_18
0x40000d3	          0x4d85c9	                             test r9, r9	       785	cistpl.c	FUNCTION_18	IF_6
0x40000d6	            0x75ec	                           jne 0x40000c4	       785	cistpl.c	FUNCTION_18	IF_6
0x40000d8	            0x31c0	                            xor eax, eax	       790	cistpl.c	FUNCTION_18
0x40000da	            0xebe0	                           jmp 0x40000bc	       790	cistpl.c	FUNCTION_18
0x40000dc	      0xb8eaffffff	                     mov eax, 0xffffffea	       790	cistpl.c	FUNCTION_18
0x40000e1	              0xc3	                                     ret	       791	cistpl.c	FUNCTION_18
parse_power	CALL,0:functions,0:DO,0:FOR,1:ELSE,4:WHILE,1:IF,8:SWITCH,0	76
0x40000f0	          0x4839f7	                            cmp rdi, rsi	       912	cistpl.c	FUNCTION_26	IF_1
0x40000f3	     0xf84dd000000	                            je 0x40001d6	       912	cistpl.c	FUNCTION_26	IF_1
0x40000f9	              0x55	                                push rbp	       908	cistpl.c	FUNCTION_26
0x40000fa	              0x53	                                push rbx	       908	cistpl.c	FUNCTION_26
0x40000fb	        0x488d4a04	                      lea rcx, [rdx + 4]	       908	cistpl.c	FUNCTION_26
0x40000ff	           0xfb61f	                   movzx ebx, byte [rdi]	       914	cistpl.c	FUNCTION_26
0x4000102	          0x4989d0	                             mov r8, rdx	       914	cistpl.c	FUNCTION_26
0x4000105	        0xc6420100	                   mov byte [rdx + 1], 0	       915	cistpl.c	FUNCTION_26
0x4000109	        0x4883c701	                              add rdi, 1	       916	cistpl.c	FUNCTION_26
0x400010d	          0x4531db	                          xor r11d, r11d	       917	cistpl.c	FUNCTION_26	FOR_1
0x4000110	      0xbdcdcccccc	                     mov ebp, 0xcccccccd	       921	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x4000115	    0x41ba1f85eb51	                    mov r10d, 0x51eb851f	       927	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	IF_5
0x400011b	            0x881a	                      mov byte [rdx], bl	       914	cistpl.c	FUNCTION_26
0x400011d	        0x440fa3db	                            bt ebx, r11d	       918	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x4000121	     0xf838a000000	                           jae 0x40001b1	       918	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x4000127	          0x4839fe	                            cmp rsi, rdi	       919	cistpl.c	FUNCTION_26	FOR_1	IF_2	IF_3
0x400012a	     0xf84a1000000	                            je 0x40001d1	       919	cistpl.c	FUNCTION_26	FOR_1	IF_2	IF_3
0x4000130	           0xfb607	                   movzx eax, byte [rdi]	       921	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x4000133	            0x89c2	                            mov edx, eax	       921	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x4000135	          0x83e007	                              and eax, 7	       921	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x4000138	          0xc0ea03	                               shr dl, 3	       921	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x400013b	          0x83e20f	                            and edx, 0xf	       921	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x400013e	     0xfb692000000	                   movzx edx, byte [rdx]	       921	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x4000145	     0xfaf14850000	                 imul edx, dword [rax*4]	       921	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x400014d	            0x89d0	                            mov eax, edx	       921	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x400014f	            0xf7e5	                                 mul ebp	       921	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x4000151	          0xc1ea03	                              shr edx, 3	       921	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x4000154	            0x8911	                    mov dword [rcx], edx	       921	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x4000156	           0xfb607	                   movzx eax, byte [rdi]	       922	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x4000159	          0x4889c2	                            mov rdx, rax	       922	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x400015c	          0x83e207	                              and edx, 7	       922	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x400015f	    0x448b0c950000	                  mov r9d, dword [rdx*4]	       922	cistpl.c	FUNCTION_26	FOR_1	IF_2
0x4000167	            0xeb14	                           jmp 0x400017d	       923	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1
0x4000169	           0xfb6d2	                           movzx edx, dl	       927	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	IF_5
0x400016c	        0x410fafd1	                           imul edx, r9d	       927	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	IF_5
0x4000170	            0x89d0	                            mov eax, edx	       927	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	IF_5
0x4000172	          0x41f7e2	                                mul r10d	       927	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	IF_5
0x4000175	          0xc1ea05	                              shr edx, 5	       927	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	IF_5
0x4000178	             0x111	                    add dword [rcx], edx	       927	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	IF_5
0x400017a	           0xfb607	                   movzx eax, byte [rdi]	       927	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	IF_5
0x400017d	        0x4883c701	                              add rdi, 1	       924	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	IF_4
0x4000181	            0x84c0	                             test al, al	       923	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1
0x4000183	            0x792c	                           jns 0x40001b1	       923	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1
0x4000185	          0x4839fe	                            cmp rsi, rdi	       924	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	IF_4
0x4000188	            0x7447	                            je 0x40001d1	       924	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	IF_4
0x400018a	           0xfb607	                   movzx eax, byte [rdi]	       926	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	IF_5
0x400018d	            0x89c2	                            mov edx, eax	       926	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	IF_5
0x400018f	          0x83e27f	                           and edx, 0x7f	       926	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	IF_5
0x4000192	          0x80fa63	                            cmp dl, 0x63	       926	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	IF_5
0x4000195	            0x76d2	                           jbe 0x4000169	       926	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	IF_5
0x4000197	            0x3c7d	                            cmp al, 0x7d	       929	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	ELSE_1	IF_6
0x4000199	            0x740f	                            je 0x40001aa	       929	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	ELSE_1	IF_6
0x400019b	            0x3c7e	                            cmp al, 0x7e	       931	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	ELSE_2	IF_7
0x400019d	            0x742a	                            je 0x40001c9	       931	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	ELSE_2	IF_7
0x400019f	            0x3c7f	                            cmp al, 0x7f	       933	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	ELSE_3	IF_8
0x40001a1	            0x752e	                           jne 0x40001d1	       933	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	ELSE_3	IF_8
0x40001a3	      0x4180480102	                     or byte [r8 + 1], 2	       934	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	ELSE_3	IF_8
0x40001a8	            0xebd0	                           jmp 0x400017a	       934	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	ELSE_3	IF_8
0x40001aa	      0x4180480101	                     or byte [r8 + 1], 1	       930	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	ELSE_1	IF_6
0x40001af	            0xebc9	                           jmp 0x400017a	       930	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	ELSE_1	IF_6
0x40001b1	        0x4183c301	                             add r11d, 1	       917	cistpl.c	FUNCTION_26	FOR_1
0x40001b5	        0x4883c104	                              add rcx, 4	       917	cistpl.c	FUNCTION_26	FOR_1
0x40001b9	        0x4183fb07	                             cmp r11d, 7	       917	cistpl.c	FUNCTION_26	FOR_1
0x40001bd	     0xf855affffff	                           jne 0x400011d	       917	cistpl.c	FUNCTION_26	FOR_1
0x40001c3	          0x4889f8	                            mov rax, rdi	       917	cistpl.c	FUNCTION_26	FOR_1
0x40001c6	              0x5b	                                 pop rbx	       941	cistpl.c	FUNCTION_26	ELSE_4
0x40001c7	              0x5d	                                 pop rbp	       941	cistpl.c	FUNCTION_26	ELSE_4
0x40001c8	              0xc3	                                     ret	       941	cistpl.c	FUNCTION_26	ELSE_4
0x40001c9	    0xc70100000000	                      mov dword [rcx], 0	       932	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	ELSE_2	IF_7
0x40001cf	            0xeba9	                           jmp 0x400017a	       932	cistpl.c	FUNCTION_26	FOR_1	IF_2	WHILE_1	ELSE_2	IF_7
0x40001d1	            0x31c0	                            xor eax, eax	       913	cistpl.c	FUNCTION_26	IF_1
0x40001d3	              0x5b	                                 pop rbx	       941	cistpl.c	FUNCTION_26	ELSE_4
0x40001d4	              0x5d	                                 pop rbp	       941	cistpl.c	FUNCTION_26	ELSE_4
0x40001d5	              0xc3	                                     ret	       941	cistpl.c	FUNCTION_26	ELSE_4
0x40001d6	            0x31c0	                            xor eax, eax	       913	cistpl.c	FUNCTION_26	IF_1
0x40001d8	              0xc3	                                     ret	       941	cistpl.c	FUNCTION_26	ELSE_4
pccard_get_first_tuple	CALL,3:functions,0:DO,0:FOR,0:ELSE,1:WHILE,0:IF,5:SWITCH,0	57
0x4001be0	          0x4885ff	                           test rdi, rdi	       450	cistpl.c	FUNCTION_10	IF_1
0x4001be3	     0xf84ac000000	                            je 0x4001c95	       450	cistpl.c	FUNCTION_10	IF_1
0x4001be9	          0x8b4714	            mov eax, dword [rdi + 0x14] 	       453	cistpl.c	FUNCTION_10	IF_2
0x4001bec	      0x2508800000	                         and eax, 0x8008	       453	cistpl.c	FUNCTION_10	IF_2
0x4001bf1	          0x83f808	                              cmp eax, 8	       453	cistpl.c	FUNCTION_10	IF_2
0x4001bf4	     0xf8595000000	                           jne 0x4001c8f	       453	cistpl.c	FUNCTION_10	IF_2
0x4001bfa	            0x4155	                                push r13	       449	cistpl.c	FUNCTION_10
0x4001bfc	            0x4154	                                push r12	       449	cistpl.c	FUNCTION_10
0x4001bfe	          0x4189f4	                           mov r12d, esi	       449	cistpl.c	FUNCTION_10
0x4001c01	              0x55	                                push rbp	       449	cistpl.c	FUNCTION_10
0x4001c02	              0x53	                                push rbx	       449	cistpl.c	FUNCTION_10
0x4001c03	          0x4889fd	                            mov rbp, rdi	       449	cistpl.c	FUNCTION_10
0x4001c06	    0xc74208000000	                  mov dword [rdx + 8], 0	       455	cistpl.c	FUNCTION_10
0x4001c0d	        0xc6421500	                mov byte [rdx + 0x15], 0	       455	cistpl.c	FUNCTION_10
0x4001c11	          0x4889d3	                            mov rbx, rdx	       455	cistpl.c	FUNCTION_10
0x4001c14	    0xc7420c000000	                mov dword [rdx + 0xc], 0	       458	cistpl.c	FUNCTION_10
0x4001c1b	    0xc74210000000	               mov dword [rdx + 0x10], 0	       458	cistpl.c	FUNCTION_10
0x4001c22	        0xc6420810	                mov byte [rdx + 8], 0x10	       459	cistpl.c	FUNCTION_10
0x4001c26	        0xc6420901	                   mov byte [rdx + 9], 1	       459	cistpl.c	FUNCTION_10
0x4001c2a	      0x66837f1c01	                cmp word [rdi + 0x1c], 1	       461	cistpl.c	FUNCTION_10	IF_3
0x4001c2f	            0x7605	                           jbe 0x4001c36	       461	cistpl.c	FUNCTION_10	IF_3
0x4001c31	          0xf60202	                      test byte [rdx], 2	       461	cistpl.c	FUNCTION_10	IF_3
0x4001c34	            0x7414	                            je 0x4001c4a	       461	cistpl.c	FUNCTION_10	IF_3
0x4001c36	          0x4889da	                            mov rdx, rbx	       472	cistpl.c	FUNCTION_10	CALL_3
0x4001c39	          0x4489e6	                           mov esi, r12d	       472	cistpl.c	FUNCTION_10	CALL_3
0x4001c3c	          0x4889ef	                            mov rdi, rbp	       472	cistpl.c	FUNCTION_10	CALL_3
0x4001c3f	              0x5b	                                 pop rbx	       473	cistpl.c	FUNCTION_10
0x4001c40	              0x5d	                                 pop rbp	       473	cistpl.c	FUNCTION_10
0x4001c41	            0x415c	                                 pop r12	       473	cistpl.c	FUNCTION_10
0x4001c43	            0x415d	                                 pop r13	       473	cistpl.c	FUNCTION_10
0x4001c45	      0xe946fbffff	           jmp sym.pccard_get_next_tuple	       472	cistpl.c	FUNCTION_10	CALL_3
0x4001c4a	      0x440fb66a04	              movzx r13d, byte [rdx + 4]	       462	cistpl.c	FUNCTION_10	IF_3
0x4001c4f	        0xc6420406	                   mov byte [rdx + 4], 6	       463	cistpl.c	FUNCTION_10	IF_3
0x4001c53	      0xe800000000	                          call 0x4001c58	       464	cistpl.c	FUNCTION_10	IF_3	IF_4	CALL_1
0x4001c58	            0x85c0	                           test eax, eax	       464	cistpl.c	FUNCTION_10	IF_3	IF_4	CALL_1
0x4001c5a	            0x7411	                            je 0x4001c6d	       464	cistpl.c	FUNCTION_10	IF_3	IF_4	CALL_1
0x4001c5c	        0xc6431500	                mov byte [rbx + 0x15], 0	       469	cistpl.c	FUNCTION_10	IF_3	ELSE_1
0x4001c60	    0xc74310000000	               mov dword [rbx + 0x10], 0	       469	cistpl.c	FUNCTION_10	IF_3	ELSE_1
0x4001c67	        0x44886b04	                mov byte [rbx + 4], r13b	       470	cistpl.c	FUNCTION_10	IF_3
0x4001c6b	            0xebc9	                           jmp 0x4001c36	       470	cistpl.c	FUNCTION_10	IF_3
0x4001c6d	        0xc6430413	                mov byte [rbx + 4], 0x13	       465	cistpl.c	FUNCTION_10	IF_3	IF_4
0x4001c71	          0x4889da	                            mov rdx, rbx	       466	cistpl.c	FUNCTION_10	IF_3	IF_4	IF_5	CALL_2
0x4001c74	          0x4489e6	                           mov esi, r12d	       466	cistpl.c	FUNCTION_10	IF_3	IF_4	IF_5	CALL_2
0x4001c77	          0x4889ef	                            mov rdi, rbp	       466	cistpl.c	FUNCTION_10	IF_3	IF_4	IF_5	CALL_2
0x4001c7a	      0xe800000000	                          call 0x4001c7f	       466	cistpl.c	FUNCTION_10	IF_3	IF_4	IF_5	CALL_2
0x4001c7f	            0x85c0	                           test eax, eax	       466	cistpl.c	FUNCTION_10	IF_3	IF_4	IF_5	CALL_2
0x4001c81	            0x74e4	                            je 0x4001c67	       466	cistpl.c	FUNCTION_10	IF_3	IF_4	IF_5	CALL_2
0x4001c83	              0x5b	                                 pop rbx	       473	cistpl.c	FUNCTION_10
0x4001c84	      0xb8e4ffffff	                     mov eax, 0xffffffe4	       467	cistpl.c	FUNCTION_10	IF_3	IF_4	IF_5
0x4001c89	              0x5d	                                 pop rbp	       473	cistpl.c	FUNCTION_10
0x4001c8a	            0x415c	                                 pop r12	       473	cistpl.c	FUNCTION_10
0x4001c8c	            0x415d	                                 pop r13	       473	cistpl.c	FUNCTION_10
0x4001c8e	              0xc3	                                     ret	       473	cistpl.c	FUNCTION_10
0x4001c8f	      0xb8edffffff	                     mov eax, 0xffffffed	       454	cistpl.c	FUNCTION_10	IF_2
0x4001c94	              0xc3	                                     ret	       454	cistpl.c	FUNCTION_10	IF_2
0x4001c95	      0xb8eaffffff	                     mov eax, 0xffffffea	       451	cistpl.c	FUNCTION_10	IF_1
0x4001c9a	              0xc3	                                     ret	       473	cistpl.c	FUNCTION_10
