pci_cfg_access_unlock	ELSE,0:CALL,4:IF,0:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0	18
0x4000930	              0x53	                                push rbx	       316	access.c	FUNCTION_9
0x4000931	          0x4889fb	                            mov rbx, rdi	       316	access.c	FUNCTION_9
0x4000934	    0x48c7c7000000	                              mov rdi, 0	       319	access.c	FUNCTION_9	CALL_1
0x400093b	      0xe800000000	                          call 0x4000940	       319	access.c	FUNCTION_9	CALL_1
0x4000940	    0xf68339060000	          test byte [rbx + 0x639], 0x40 	       325	access.c	FUNCTION_9	CALL_2
0x4000947	            0x742c	                            je 0x4000975	       325	access.c	FUNCTION_9	CALL_2
0x4000949	    0x80a339060000	            and byte [rbx + 0x639], 0xbf	       327	access.c	FUNCTION_9
0x4000950	          0x4889c6	                            mov rsi, rax	       328	access.c	FUNCTION_9	CALL_3
0x4000953	    0x48c7c7000000	                              mov rdi, 0	       328	access.c	FUNCTION_9	CALL_3
0x400095a	      0xe800000000	                          call 0x400095f	       328	access.c	FUNCTION_9	CALL_3
0x400095f	              0x5b	                                 pop rbx	       331	access.c	FUNCTION_9
0x4000960	            0x31c9	                            xor ecx, ecx	       330	access.c	FUNCTION_9	CALL_4
0x4000962	            0x31d2	                            xor edx, edx	       330	access.c	FUNCTION_9	CALL_4
0x4000964	      0xbe03000000	                              mov esi, 3	       330	access.c	FUNCTION_9	CALL_4
0x4000969	    0x48c7c7000000	                              mov rdi, 0	       330	access.c	FUNCTION_9	CALL_4
0x4000970	      0xe900000000	                           jmp 0x4000975	       330	access.c	FUNCTION_9	CALL_4
0x4000975	             0xf0b	                                     ud2	       330	access.c	FUNCTION_9	CALL_4
0x4000977	            0xebd0	                           jmp 0x4000949	       325	access.c	FUNCTION_9	CALL_2
pcie_capability_clear_and_set_dword	ELSE,0:CALL,2:IF,1:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0	34
0x4000ee0	            0x4155	                                push r13	       521	access.c	FUNCTION_21
0x4000ee2	            0x4154	                                push r12	       521	access.c	FUNCTION_21
0x4000ee4	          0x4189f5	                           mov r13d, esi	       521	access.c	FUNCTION_21
0x4000ee7	              0x55	                                push rbp	       521	access.c	FUNCTION_21
0x4000ee8	              0x53	                                push rbx	       521	access.c	FUNCTION_21
0x4000ee9	            0x89d3	                            mov ebx, edx	       521	access.c	FUNCTION_21
0x4000eeb	          0x4989fc	                            mov r12, rdi	       521	access.c	FUNCTION_21
0x4000eee	            0x89cd	                            mov ebp, ecx	       521	access.c	FUNCTION_21
0x4000ef0	        0x4883ec10	                           sub rsp, 0x10	       521	access.c	FUNCTION_21
0x4000ef4	      0x488d542404	                      lea rdx, [rsp + 4]	       525	access.c	FUNCTION_21	CALL_1
0x4000ef9	    0x65488b042528	                mov rax, qword gs:[0x28]	       521	access.c	FUNCTION_21
0x4000f02	      0x4889442408	                mov qword [rsp + 8], rax	       521	access.c	FUNCTION_21
0x4000f07	            0x31c0	                            xor eax, eax	       521	access.c	FUNCTION_21
0x4000f09	      0xe800000000	                          call 0x4000f0e	       525	access.c	FUNCTION_21	CALL_1
0x4000f0e	            0x85c0	                           test eax, eax	       526	access.c	FUNCTION_21	IF_1
0x4000f10	            0x7519	                           jne 0x4000f2b	       526	access.c	FUNCTION_21	IF_1
0x4000f12	            0xf7d3	                                 not ebx	       528	access.c	FUNCTION_21	IF_1
0x4000f14	        0x235c2404	                and ebx, dword [rsp + 4]	       528	access.c	FUNCTION_21	IF_1
0x4000f18	          0x4489ee	                           mov esi, r13d	       529	access.c	FUNCTION_21	IF_1	CALL_2
0x4000f1b	          0x4c89e7	                            mov rdi, r12	       529	access.c	FUNCTION_21	IF_1	CALL_2
0x4000f1e	             0x9eb	                             or ebx, ebp	       528	access.c	FUNCTION_21	IF_1
0x4000f20	            0x89da	                            mov edx, ebx	       528	access.c	FUNCTION_21	IF_1
0x4000f22	        0x895c2404	                mov dword [rsp + 4], ebx	       528	access.c	FUNCTION_21	IF_1
0x4000f26	      0xe800000000	                          call 0x4000f2b	       529	access.c	FUNCTION_21	IF_1	CALL_2
0x4000f2b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       533	access.c	FUNCTION_21
0x4000f30	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       533	access.c	FUNCTION_21
0x4000f39	            0x750b	                           jne 0x4000f46	       533	access.c	FUNCTION_21
0x4000f3b	        0x4883c410	                           add rsp, 0x10	       533	access.c	FUNCTION_21
0x4000f3f	              0x5b	                                 pop rbx	       533	access.c	FUNCTION_21
0x4000f40	              0x5d	                                 pop rbp	       533	access.c	FUNCTION_21
0x4000f41	            0x415c	                                 pop r12	       533	access.c	FUNCTION_21
0x4000f43	            0x415d	                                 pop r13	       533	access.c	FUNCTION_21
0x4000f45	              0xc3	                                     ret	       533	access.c	FUNCTION_21
0x4000f46	      0xe800000000	                          call 0x4000f4b	       533	access.c	FUNCTION_21
pcie_capability_clear_and_set_word	ELSE,0:CALL,2:IF,1:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0	34
0x4000de0	            0x4155	                                push r13	       504	access.c	FUNCTION_20
0x4000de2	            0x4154	                                push r12	       504	access.c	FUNCTION_20
0x4000de4	          0x4189f5	                           mov r13d, esi	       504	access.c	FUNCTION_20
0x4000de7	              0x55	                                push rbp	       504	access.c	FUNCTION_20
0x4000de8	              0x53	                                push rbx	       504	access.c	FUNCTION_20
0x4000de9	            0x89d5	                            mov ebp, edx	       504	access.c	FUNCTION_20
0x4000deb	          0x4989fc	                            mov r12, rdi	       504	access.c	FUNCTION_20
0x4000dee	            0x89cb	                            mov ebx, ecx	       504	access.c	FUNCTION_20
0x4000df0	        0x4883ec10	                           sub rsp, 0x10	       504	access.c	FUNCTION_20
0x4000df4	      0x488d542406	                      lea rdx, [rsp + 6]	       508	access.c	FUNCTION_20	CALL_1
0x4000df9	    0x65488b042528	                mov rax, qword gs:[0x28]	       504	access.c	FUNCTION_20
0x4000e02	      0x4889442408	                mov qword [rsp + 8], rax	       504	access.c	FUNCTION_20
0x4000e07	            0x31c0	                            xor eax, eax	       504	access.c	FUNCTION_20
0x4000e09	      0xe800000000	                          call 0x4000e0e	       508	access.c	FUNCTION_20	CALL_1
0x4000e0e	            0x85c0	                           test eax, eax	       509	access.c	FUNCTION_20	IF_1
0x4000e10	            0x751c	                           jne 0x4000e2e	       509	access.c	FUNCTION_20	IF_1
0x4000e12	            0xf7d5	                                 not ebp	       511	access.c	FUNCTION_20	IF_1
0x4000e14	      0x66236c2406	                  and bp, word [rsp + 6]	       511	access.c	FUNCTION_20	IF_1
0x4000e19	          0x4489ee	                           mov esi, r13d	       512	access.c	FUNCTION_20	IF_1	CALL_2
0x4000e1c	          0x4c89e7	                            mov rdi, r12	       512	access.c	FUNCTION_20	IF_1	CALL_2
0x4000e1f	             0x9eb	                             or ebx, ebp	       511	access.c	FUNCTION_20	IF_1
0x4000e21	           0xfb7d3	                           movzx edx, bx	       512	access.c	FUNCTION_20	IF_1	CALL_2
0x4000e24	      0x66895c2406	                  mov word [rsp + 6], bx	       511	access.c	FUNCTION_20	IF_1
0x4000e29	      0xe800000000	                          call 0x4000e2e	       512	access.c	FUNCTION_20	IF_1	CALL_2
0x4000e2e	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       516	access.c	FUNCTION_20
0x4000e33	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       516	access.c	FUNCTION_20
0x4000e3c	            0x750b	                           jne 0x4000e49	       516	access.c	FUNCTION_20
0x4000e3e	        0x4883c410	                           add rsp, 0x10	       516	access.c	FUNCTION_20
0x4000e42	              0x5b	                                 pop rbx	       516	access.c	FUNCTION_20
0x4000e43	              0x5d	                                 pop rbp	       516	access.c	FUNCTION_20
0x4000e44	            0x415c	                                 pop r12	       516	access.c	FUNCTION_20
0x4000e46	            0x415d	                                 pop r13	       516	access.c	FUNCTION_20
0x4000e48	              0xc3	                                     ret	       516	access.c	FUNCTION_20
0x4000e49	      0xe800000000	                          call 0x4000e4e	       516	access.c	FUNCTION_20
pci_bus_set_ops	ELSE,0:CALL,2:IF,0:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0	17
0x40002c0	            0x4154	                                push r12	       184	access.c	FUNCTION_5
0x40002c2	              0x55	                                push rbp	       184	access.c	FUNCTION_5
0x40002c3	          0x4989f4	                            mov r12, rsi	       184	access.c	FUNCTION_5
0x40002c6	              0x53	                                push rbx	       184	access.c	FUNCTION_5
0x40002c7	          0x4889fb	                            mov rbx, rdi	       184	access.c	FUNCTION_5
0x40002ca	    0x48c7c7000000	                              mov rdi, 0	       188	access.c	FUNCTION_5	CALL_1
0x40002d1	      0xe800000000	                          call 0x40002d6	       188	access.c	FUNCTION_5	CALL_1
0x40002d6	    0x488babc00000	            mov rbp, qword [rbx + 0xc0] 	       189	access.c	FUNCTION_5
0x40002dd	          0x4889c6	                            mov rsi, rax	       191	access.c	FUNCTION_5	CALL_2
0x40002e0	    0x4c89a3c00000	             mov qword [rbx + 0xc0], r12	       190	access.c	FUNCTION_5
0x40002e7	    0x48c7c7000000	                              mov rdi, 0	       191	access.c	FUNCTION_5	CALL_2
0x40002ee	      0xe800000000	                          call 0x40002f3	       191	access.c	FUNCTION_5	CALL_2
0x40002f3	          0x4889e8	                            mov rax, rbp	       193	access.c	FUNCTION_5
0x40002f6	              0x5b	                                 pop rbx	       193	access.c	FUNCTION_5
0x40002f7	              0x5d	                                 pop rbp	       193	access.c	FUNCTION_5
0x40002f8	            0x415c	                                 pop r12	       193	access.c	FUNCTION_5
0x40002fa	              0xc3	                                     ret	       193	access.c	FUNCTION_5
pci_cfg_access_trylock	ELSE,1:CALL,2:IF,1:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0	19
0x4000300	              0x55	                                push rbp	       294	access.c	FUNCTION_8
0x4000301	              0x53	                                push rbx	       294	access.c	FUNCTION_8
0x4000302	          0x4889fd	                            mov rbp, rdi	       294	access.c	FUNCTION_8
0x4000305	    0x48c7c7000000	                              mov rdi, 0	       298	access.c	FUNCTION_8	CALL_1
0x400030c	            0x31db	                            xor ebx, ebx	       298	access.c	FUNCTION_8	CALL_1
0x400030e	      0xe800000000	                          call 0x4000313	       298	access.c	FUNCTION_8	CALL_1
0x4000313	     0xfb695390600	          movzx edx, byte [rbp + 0x639] 	       299	access.c	FUNCTION_8	IF_1
0x400031a	          0xf6c240	                           test dl, 0x40	       299	access.c	FUNCTION_8	IF_1
0x400031d	            0x750e	                           jne 0x400032d	       299	access.c	FUNCTION_8	IF_1
0x400031f	          0x83ca40	                            or edx, 0x40	       302	access.c	FUNCTION_8	ELSE_1
0x4000322	      0xbb01000000	                              mov ebx, 1	       296	access.c	FUNCTION_8
0x4000327	    0x889539060000	              mov byte [rbp + 0x639], dl	       302	access.c	FUNCTION_8	ELSE_1
0x400032d	          0x4889c6	                            mov rsi, rax	       303	access.c	FUNCTION_8	CALL_2
0x4000330	    0x48c7c7000000	                              mov rdi, 0	       303	access.c	FUNCTION_8	CALL_2
0x4000337	      0xe800000000	                          call 0x400033c	       303	access.c	FUNCTION_8	CALL_2
0x400033c	            0x89d8	                            mov eax, ebx	       306	access.c	FUNCTION_8
0x400033e	              0x5b	                                 pop rbx	       306	access.c	FUNCTION_8
0x400033f	              0x5d	                                 pop rbp	       306	access.c	FUNCTION_8
0x4000340	              0xc3	                                     ret	       306	access.c	FUNCTION_8
