page_not_mapped	DO,0:functions,0:FOR,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0	4
0x40000c0	      0xe800000000	                          call 0x40000c5	      1688	rmap.c	FUNCTION_47	CALL_1
0x40000c5	          0x83f001	                              xor eax, 1	      1688	rmap.c	FUNCTION_47	CALL_1
0x40000c8	           0xfb6c0	                           movzx eax, al	      1688	rmap.c	FUNCTION_47	CALL_1
0x40000cb	              0xc3	                                     ret	      1689	rmap.c	FUNCTION_47
invalid_page_referenced_vma	DO,0:functions,0:FOR,0:IF,1:WHILE,0:CALL,1:ELSE,0:SWITCH,0	2
0x4000040	            0x31c0	                            xor eax, eax	       823	rmap.c	FUNCTION_27
0x4000042	              0xc3	                                     ret	       823	rmap.c	FUNCTION_27
page_add_anon_rmap	DO,0:functions,0:FOR,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0	5
0x4000a40	          0x80f901	                               cmp cl, 1	      1089	rmap.c	FUNCTION_35	CALL_1
0x4000a43	            0x19c9	                            sbb ecx, ecx	      1089	rmap.c	FUNCTION_35	CALL_1
0x4000a45	            0xf7d1	                                 not ecx	      1089	rmap.c	FUNCTION_35	CALL_1
0x4000a47	          0x83e102	                              and ecx, 2	      1089	rmap.c	FUNCTION_35	CALL_1
0x4000a4a	      0xe971ffffff	           jmp sym.do_page_add_anon_rmap	      1089	rmap.c	FUNCTION_35	CALL_1
flush_tlb_batched_pending	DO,0:functions,0:FOR,0:IF,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0	12
0x4000800	    0x80bfa4030000	               cmp byte [rdi + 0x3a4], 0	       660	rmap.c	FUNCTION_21	IF_1
0x4000807	            0x7501	                           jne 0x400080a	       660	rmap.c	FUNCTION_21	IF_1
0x4000809	              0xc3	                                     ret	       670	rmap.c	FUNCTION_21
0x400080a	              0x53	                                push rbx	       659	rmap.c	FUNCTION_21
0x400080b	            0x31c9	                            xor ecx, ecx	       661	rmap.c	FUNCTION_21	IF_1	CALL_1
0x400080d	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       661	rmap.c	FUNCTION_21	IF_1	CALL_1
0x4000814	            0x31f6	                            xor esi, esi	       661	rmap.c	FUNCTION_21	IF_1	CALL_1
0x4000816	          0x4889fb	                            mov rbx, rdi	       661	rmap.c	FUNCTION_21	IF_1	CALL_1
0x4000819	      0xe800000000	                          call 0x400081e	       661	rmap.c	FUNCTION_21	IF_1	CALL_1
0x400081e	    0xc683a4030000	               mov byte [rbx + 0x3a4], 0	       668	rmap.c	FUNCTION_21	IF_1
0x4000825	              0x5b	                                 pop rbx	       670	rmap.c	FUNCTION_21
0x4000826	              0xc3	                                     ret	       670	rmap.c	FUNCTION_21
anon_vma_init	DO,0:functions,0:FOR,0:IF,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0	25
0x4000040	            0x31c0	                            xor eax, eax	       823	rmap.c	FUNCTION_27
0x4000042	              0xc3	                                     ret	       823	rmap.c	FUNCTION_27
0x4000043	           0xf1f00	                         nop dword [rax]	       823	rmap.c	FUNCTION_27
0x4000046	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       823	rmap.c	FUNCTION_27
0x4000050	        0x488b4750	            mov rax, qword [rdi + 0x50] 	       957	rmap.c	FUNCTION_30
0x4000054	        0x48c1e803	                              shr rax, 3	       957	rmap.c	FUNCTION_30
0x4000058	        0x4883f001	                              xor rax, 1	       957	rmap.c	FUNCTION_30
0x400005c	          0x83e001	                              and eax, 1	       957	rmap.c	FUNCTION_30
0x400005f	              0xc3	                                     ret	       962	rmap.c	FUNCTION_30
0x4000060	        0x488b5750	            mov rdx, qword [rdi + 0x50] 	      1625	rmap.c	FUNCTION_43
0x4000064	            0x31c0	                            xor eax, eax	      1628	rmap.c	FUNCTION_43	IF_1
0x4000066	          0xf6c601	                              test dh, 1	      1627	rmap.c	FUNCTION_43	IF_1
0x4000069	            0x7410	                            je 0x400007b	      1627	rmap.c	FUNCTION_43	IF_1
0x400006b	    0x81e200800100	                        and edx, 0x18000	      1630	rmap.c	FUNCTION_43	IF_2
0x4000071	    0x4881fa008001	                        cmp rdx, 0x18000	      1630	rmap.c	FUNCTION_43	IF_2
0x4000078	           0xf94c0	                                 sete al	      1630	rmap.c	FUNCTION_43	IF_2
0x400007b	            0xf3c3	                                     ret	      1640	rmap.c	FUNCTION_44
0x400007d	           0xf1f00	                         nop dword [rax]	      1640	rmap.c	FUNCTION_44
0x4000080	              0x53	                                push rbx	       423	rmap.c	FUNCTION_12
0x4000081	          0x4889fb	                            mov rbx, rdi	       423	rmap.c	FUNCTION_12
0x4000084	        0x488d7f08	                      lea rdi, [rdi + 8]	       426	rmap.c	FUNCTION_12	CALL_1
0x4000088	              0x48	                                 invalid	       426	rmap.c	FUNCTION_12	CALL_1
0x4000089	              0xc7	                                 invalid	       426	rmap.c	FUNCTION_12	CALL_1
0x400008a	              0xc2	                                 invalid	       426	rmap.c	FUNCTION_12	CALL_1
0x400008b	               0x0	                                 invalid	       426	rmap.c	FUNCTION_12	CALL_1
invalid_migration_vma	DO,0:functions,0:FOR,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0	8
0x4000060	        0x488b5750	            mov rdx, qword [rdi + 0x50] 	      1625	rmap.c	FUNCTION_43
0x4000064	            0x31c0	                            xor eax, eax	      1628	rmap.c	FUNCTION_43	IF_1
0x4000066	          0xf6c601	                              test dh, 1	      1627	rmap.c	FUNCTION_43	IF_1
0x4000069	            0x7410	                            je 0x400007b	      1627	rmap.c	FUNCTION_43	IF_1
0x400006b	    0x81e200800100	                        and edx, 0x18000	      1630	rmap.c	FUNCTION_43	IF_2
0x4000071	    0x4881fa008001	                        cmp rdx, 0x18000	      1630	rmap.c	FUNCTION_43	IF_2
0x4000078	           0xf94c0	                                 sete al	      1630	rmap.c	FUNCTION_43	IF_2
0x400007b	            0xf3c3	                                     ret	      1640	rmap.c	FUNCTION_44
try_to_munlock	DO,0:functions,0:FOR,0:IF,0:WHILE,0:CALL,7:ELSE,0:SWITCH,0	17
0x4001c30	        0x4883ec30	                           sub rsp, 0x30	      1701	rmap.c	FUNCTION_48
0x4001c34	          0x4889e6	                            mov rsi, rsp	      1713	rmap.c	FUNCTION_48	CALL_7
0x4001c37	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1702	rmap.c	FUNCTION_48
0x4001c40	    0x48c704240200	                      mov qword [rsp], 2	      1702	rmap.c	FUNCTION_48
0x4001c48	    0x65488b042528	                mov rax, qword gs:[0x28]	      1701	rmap.c	FUNCTION_48
0x4001c51	      0x4889442428	             mov qword [rsp + 0x28], rax	      1701	rmap.c	FUNCTION_48
0x4001c56	            0x31c0	                            xor eax, eax	      1701	rmap.c	FUNCTION_48
0x4001c58	    0x48c744240800	                  mov qword [rsp + 8], 0	      1702	rmap.c	FUNCTION_48
0x4001c61	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1702	rmap.c	FUNCTION_48
0x4001c6a	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1702	rmap.c	FUNCTION_48
0x4001c73	      0xe800000000	                          call 0x4001c78	      1713	rmap.c	FUNCTION_48	CALL_7
0x4001c78	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1714	rmap.c	FUNCTION_48
0x4001c7d	    0x654833042528	                xor rax, qword gs:[0x28]	      1714	rmap.c	FUNCTION_48
0x4001c86	            0x7505	                           jne 0x4001c8d	      1714	rmap.c	FUNCTION_48
0x4001c88	        0x4883c430	                           add rsp, 0x30	      1714	rmap.c	FUNCTION_48
0x4001c8c	              0xc3	                                     ret	      1714	rmap.c	FUNCTION_48
0x4001c8d	      0xe800000000	                          call 0x4001c92	      1714	rmap.c	FUNCTION_48
invalid_mkclean_vma	DO,0:functions,0:FOR,0:IF,1:WHILE,0:CALL,0:ELSE,0:SWITCH,0	5
0x4000050	        0x488b4750	            mov rax, qword [rdi + 0x50] 	       957	rmap.c	FUNCTION_30
0x4000054	        0x48c1e803	                              shr rax, 3	       957	rmap.c	FUNCTION_30
0x4000058	        0x4883f001	                              xor rax, 1	       957	rmap.c	FUNCTION_30
0x400005c	          0x83e001	                              and eax, 1	       957	rmap.c	FUNCTION_30
0x400005f	              0xc3	                                     ret	       962	rmap.c	FUNCTION_30
