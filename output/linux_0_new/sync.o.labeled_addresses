fdatawrite_one_bdev	DO,0:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:CALL,1	3
0x4000060	        0x488b4708	                mov rax, qword [rdi + 8]	        85	sync.c	FUNCTION_5	CALL_1
0x4000064	        0x488b7830	            mov rdi, qword [rax + 0x30] 	        85	sync.c	FUNCTION_5	CALL_1
0x4000068	      0xe900000000	                           jmp 0x400006d	        85	sync.c	FUNCTION_5	CALL_1
fdatawait_one_bdev	DO,0:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:CALL,1	3
0x4000050	        0x488b4708	                mov rax, qword [rdi + 8]	        95	sync.c	FUNCTION_6	CALL_1
0x4000054	        0x488b7830	            mov rdi, qword [rax + 0x30] 	        95	sync.c	FUNCTION_6	CALL_1
0x4000058	      0xe900000000	                           jmp 0x400005d	        95	sync.c	FUNCTION_6	CALL_1
ksys_sync	DO,0:IF,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:CALL,8	34
0x4000410	        0x4883ec10	                           sub rsp, 0x10	       109	sync.c	FUNCTION_7
0x4000414	      0xbf02000000	                              mov edi, 2	       112	sync.c	FUNCTION_7	CALL_1
0x4000419	    0x65488b042528	                mov rax, qword gs:[0x28]	       109	sync.c	FUNCTION_7
0x4000422	      0x4889442408	                mov qword [rsp + 8], rax	       109	sync.c	FUNCTION_7
0x4000427	            0x31c0	                            xor eax, eax	       109	sync.c	FUNCTION_7
0x4000429	    0xc70424000000	                      mov dword [rsp], 0	       110	sync.c	FUNCTION_7
0x4000430	    0xc74424040100	                  mov dword [rsp + 4], 1	       110	sync.c	FUNCTION_7
0x4000438	      0xe800000000	                          call 0x400043d	       112	sync.c	FUNCTION_7	CALL_1
0x400043d	            0x31f6	                            xor esi, esi	       113	sync.c	FUNCTION_7	CALL_2
0x400043f	    0x48c7c7000000	                              mov rdi, 0	       113	sync.c	FUNCTION_7	CALL_2
0x4000446	      0xe800000000	                          call 0x400044b	       113	sync.c	FUNCTION_7	CALL_2
0x400044b	    0x48c7c7000000	                              mov rdi, 0	       114	sync.c	FUNCTION_7	CALL_3
0x4000452	          0x4889e6	                            mov rsi, rsp	       114	sync.c	FUNCTION_7	CALL_3
0x4000455	      0xe800000000	                          call 0x400045a	       114	sync.c	FUNCTION_7	CALL_3
0x400045a	      0x488d742404	                      lea rsi, [rsp + 4]	       115	sync.c	FUNCTION_7	CALL_4
0x400045f	    0x48c7c7000000	                              mov rdi, 0	       115	sync.c	FUNCTION_7	CALL_4
0x4000466	      0xe800000000	                          call 0x400046b	       115	sync.c	FUNCTION_7	CALL_4
0x400046b	            0x31f6	                            xor esi, esi	       116	sync.c	FUNCTION_7	CALL_5
0x400046d	    0x48c7c7000000	                              mov rdi, 0	       116	sync.c	FUNCTION_7	CALL_5
0x4000474	      0xe800000000	                          call 0x4000479	       116	sync.c	FUNCTION_7	CALL_5
0x4000479	            0x31f6	                            xor esi, esi	       117	sync.c	FUNCTION_7	CALL_6
0x400047b	    0x48c7c7000000	                              mov rdi, 0	       117	sync.c	FUNCTION_7	CALL_6
0x4000482	      0xe800000000	                          call 0x4000487	       117	sync.c	FUNCTION_7	CALL_6
0x4000487	    0x8b0500000000	            mov eax, dword [0x0400048d] 	       118	sync.c	FUNCTION_7	IF_1	CALL_7
0x400048d	            0x85c0	                           test eax, eax	       118	sync.c	FUNCTION_7	IF_1	CALL_7
0x400048f	            0x7515	                           jne 0x40004a6	       118	sync.c	FUNCTION_7	IF_1	CALL_7
0x4000491	      0x488b442408	                mov rax, qword [rsp + 8]	       120	sync.c	FUNCTION_7
0x4000496	    0x654833042528	                xor rax, qword gs:[0x28]	       120	sync.c	FUNCTION_7
0x400049f	            0x750c	                           jne 0x40004ad	       120	sync.c	FUNCTION_7
0x40004a1	        0x4883c410	                           add rsp, 0x10	       120	sync.c	FUNCTION_7
0x40004a5	              0xc3	                                     ret	       120	sync.c	FUNCTION_7
0x40004a6	      0xe800000000	                          call 0x40004ab	       119	sync.c	FUNCTION_7	CALL_8
0x40004ab	            0xebe4	                           jmp 0x4000491	       120	sync.c	FUNCTION_7
0x40004ad	      0xe800000000	                          call 0x40004b2	       120	sync.c	FUNCTION_7
do_sync_work	DO,0:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:CALL,8	36
0x4000070	              0x53	                                push rbx	       129	sync.c	FUNCTION_9
0x4000071	          0x4889fb	                            mov rbx, rdi	       129	sync.c	FUNCTION_9
0x4000074	    0x48c7c7000000	                              mov rdi, 0	       136	sync.c	FUNCTION_9	CALL_1
0x400007b	        0x4883ec10	                           sub rsp, 0x10	       129	sync.c	FUNCTION_9
0x400007f	      0x488d742404	                      lea rsi, [rsp + 4]	       136	sync.c	FUNCTION_9	CALL_1
0x4000084	    0xc74424040000	                  mov dword [rsp + 4], 0	       130	sync.c	FUNCTION_9
0x400008c	    0x65488b042528	                mov rax, qword gs:[0x28]	       129	sync.c	FUNCTION_9
0x4000095	      0x4889442408	                mov qword [rsp + 8], rax	       129	sync.c	FUNCTION_9
0x400009a	            0x31c0	                            xor eax, eax	       129	sync.c	FUNCTION_9
0x400009c	      0xe800000000	                          call 0x40000a1	       136	sync.c	FUNCTION_9	CALL_1
0x40000a1	      0x488d742404	                      lea rsi, [rsp + 4]	       137	sync.c	FUNCTION_9	CALL_2
0x40000a6	    0x48c7c7000000	                              mov rdi, 0	       137	sync.c	FUNCTION_9	CALL_2
0x40000ad	      0xe800000000	                          call 0x40000b2	       137	sync.c	FUNCTION_9	CALL_2
0x40000b2	            0x31f6	                            xor esi, esi	       138	sync.c	FUNCTION_9	CALL_3
0x40000b4	    0x48c7c7000000	                              mov rdi, 0	       138	sync.c	FUNCTION_9	CALL_3
0x40000bb	      0xe800000000	                          call 0x40000c0	       138	sync.c	FUNCTION_9	CALL_3
0x40000c0	      0x488d742404	                      lea rsi, [rsp + 4]	       139	sync.c	FUNCTION_9	CALL_4
0x40000c5	    0x48c7c7000000	                              mov rdi, 0	       139	sync.c	FUNCTION_9	CALL_4
0x40000cc	      0xe800000000	                          call 0x40000d1	       139	sync.c	FUNCTION_9	CALL_4
0x40000d1	      0x488d742404	                      lea rsi, [rsp + 4]	       140	sync.c	FUNCTION_9	CALL_5
0x40000d6	    0x48c7c7000000	                              mov rdi, 0	       140	sync.c	FUNCTION_9	CALL_5
0x40000dd	      0xe800000000	                          call 0x40000e2	       140	sync.c	FUNCTION_9	CALL_5
0x40000e2	            0x31f6	                            xor esi, esi	       141	sync.c	FUNCTION_9	CALL_6
0x40000e4	    0x48c7c7000000	                              mov rdi, 0	       141	sync.c	FUNCTION_9	CALL_6
0x40000eb	      0xe800000000	                          call 0x40000f0	       141	sync.c	FUNCTION_9	CALL_6
0x40000f0	    0x48c7c7000000	                              mov rdi, 0	       142	sync.c	FUNCTION_9	CALL_7
0x40000f7	      0xe800000000	                          call 0x40000fc	       142	sync.c	FUNCTION_9	CALL_7
0x40000fc	          0x4889df	                            mov rdi, rbx	       143	sync.c	FUNCTION_9	CALL_8
0x40000ff	      0xe800000000	                          call 0x4000104	       143	sync.c	FUNCTION_9	CALL_8
0x4000104	      0x488b442408	                mov rax, qword [rsp + 8]	       144	sync.c	FUNCTION_9
0x4000109	    0x654833042528	                xor rax, qword gs:[0x28]	       144	sync.c	FUNCTION_9
0x4000112	            0x7506	                           jne 0x400011a	       144	sync.c	FUNCTION_9
0x4000114	        0x4883c410	                           add rsp, 0x10	       144	sync.c	FUNCTION_9
0x4000118	              0x5b	                                 pop rbx	       144	sync.c	FUNCTION_9
0x4000119	              0xc3	                                     ret	       144	sync.c	FUNCTION_9
0x400011a	      0xe800000000	                          call 0x400011f	       144	sync.c	FUNCTION_9
sync_inodes_one_sb	DO,0:IF,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:CALL,2	4
0x4000040	        0xf6475001	               test byte [rdi + 0x50], 1	        73	sync.c	FUNCTION_3	IF_1	CALL_1
0x4000044	            0x7402	                            je 0x4000048	        73	sync.c	FUNCTION_3	IF_1	CALL_1
0x4000046	            0xf3c3	                                     ret	        73	sync.c	FUNCTION_3	IF_1	CALL_1
0x4000048	      0xe900000000	                           jmp 0x400004d	        74	sync.c	FUNCTION_3	CALL_2
