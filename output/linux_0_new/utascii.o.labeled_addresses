acpi_ut_valid_nameseg	DO,0:ELSE,0:functions,0:IF,1:FOR,1:CALL,1:WHILE,0:SWITCH,0	12
0x400006a	          0x4989f9	                             mov r9, rdi	        28	utascii.c	FUNCTION_1
0x400006d	          0x4531c0	                            xor r8d, r8d	        28	utascii.c	FUNCTION_1
0x4000070	      0x430fbe3c01	               movsx edi, byte [r9 + r8]	        34	utascii.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000075	          0x4489c6	                            mov esi, r8d	        34	utascii.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000078	      0xe800000000	                          call 0x400007d	        34	utascii.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400007d	            0x84c0	                             test al, al	        34	utascii.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400007f	            0x740b	                            je 0x400008c	        34	utascii.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000081	          0x49ffc0	                                  inc r8	        34	utascii.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000084	        0x4983f804	                               cmp r8, 4	        33	utascii.c	FUNCTION_1	FOR_1
0x4000088	            0x75e6	                           jne 0x4000070	        33	utascii.c	FUNCTION_1	FOR_1
0x400008a	            0xb001	                               mov al, 1	        39	utascii.c	FUNCTION_1
0x400008c	              0xc3	                                     ret	        40	utascii.c	FUNCTION_1
acpi_ut_check_and_repair_ascii	DO,0:ELSE,0:functions,0:IF,2:FOR,1:CALL,1:WHILE,0:SWITCH,0	15
0x400008d	            0x31c0	                            xor eax, eax	        96	utascii.c	FUNCTION_3	FOR_1
0x400008f	          0x41b120	                           mov r9b, 0x20	       103	utascii.c	FUNCTION_3	FOR_1	IF_2
0x4000092	            0x39c2	                            cmp edx, eax	        96	utascii.c	FUNCTION_3	FOR_1
0x4000094	            0x7624	                           jbe 0x40000ba	        96	utascii.c	FUNCTION_3	FOR_1
0x4000096	          0x8a0c07	                mov cl, byte [rdi + rax]	        97	utascii.c	FUNCTION_3	FOR_1
0x4000099	          0x880c06	                mov byte [rsi + rax], cl	        97	utascii.c	FUNCTION_3	FOR_1
0x400009c	      0x440fb60407	             movzx r8d, byte [rdi + rax]	        99	utascii.c	FUNCTION_3	FOR_1	IF_1
0x40000a1	          0x4584c0	                           test r8b, r8b	        99	utascii.c	FUNCTION_3	FOR_1	IF_1
0x40000a4	            0x7414	                            je 0x40000ba	        99	utascii.c	FUNCTION_3	FOR_1	IF_1
0x40000a6	    0x41f680000000	                    test byte [r8], 0x97	       103	utascii.c	FUNCTION_3	FOR_1	IF_2
0x40000ae	        0x410f44c9	                          cmove ecx, r9d	       103	utascii.c	FUNCTION_3	FOR_1	IF_2
0x40000b2	          0x880c06	                mov byte [rsi + rax], cl	       103	utascii.c	FUNCTION_3	FOR_1	IF_2
0x40000b5	          0x48ffc0	                                 inc rax	       103	utascii.c	FUNCTION_3	FOR_1	IF_2
0x40000b8	            0xebd8	                           jmp 0x4000092	       103	utascii.c	FUNCTION_3	FOR_1	IF_2
0x40000ba	              0xc3	                                     ret	       103	utascii.c	FUNCTION_3	FOR_1	IF_2
