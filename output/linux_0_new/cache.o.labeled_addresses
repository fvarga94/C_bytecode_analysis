open_flush_procfs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,2:ELSE,0	20
0x4000920	              0x55	                                push rbp	      1567	cache.c	FUNCTION_60
0x4000921	              0x53	                                push rbx	      1567	cache.c	FUNCTION_60
0x4000922	          0x4889f5	                            mov rbp, rsi	      1567	cache.c	FUNCTION_60
0x4000925	          0x4889fb	                            mov rbx, rdi	      1567	cache.c	FUNCTION_60
0x4000928	      0xe800000000	                          call 0x400092d	      1568	cache.c	FUNCTION_60	CALL_1
0x400092d	          0x4885c0	                           test rax, rax	      1424	cache.c	FUNCTION_48	IF_1	CALL_1
0x4000930	            0x7419	                            je 0x400094b	      1424	cache.c	FUNCTION_48	IF_1	CALL_1
0x4000932	          0x488b38	                    mov rdi, qword [rax]	      1424	cache.c	FUNCTION_48	IF_1	CALL_1
0x4000935	      0xe800000000	                          call 0x400093a	      1424	cache.c	FUNCTION_48	IF_1	CALL_1
0x400093a	            0x84c0	                             test al, al	      1424	cache.c	FUNCTION_48	IF_1	CALL_1
0x400093c	            0x740d	                            je 0x400094b	      1424	cache.c	FUNCTION_48	IF_1	CALL_1
0x400093e	          0x4889ee	                            mov rsi, rbp	      1426	cache.c	FUNCTION_48	CALL_2
0x4000941	          0x4889df	                            mov rdi, rbx	      1426	cache.c	FUNCTION_48	CALL_2
0x4000944	              0x5b	                                 pop rbx	      1571	cache.c	FUNCTION_60
0x4000945	              0x5d	                                 pop rbp	      1571	cache.c	FUNCTION_60
0x4000946	      0xe900000000	                           jmp 0x400094b	      1426	cache.c	FUNCTION_48	CALL_2
0x400094b	      0xb8f3ffffff	                     mov eax, 0xfffffff3	      1571	cache.c	FUNCTION_60
0x4000950	              0x5b	                                 pop rbx	      1571	cache.c	FUNCTION_60
0x4000951	              0x5d	                                 pop rbp	      1571	cache.c	FUNCTION_60
0x4000952	              0xc3	                                     ret	      1571	cache.c	FUNCTION_60
content_open_procfs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,2:ELSE,0	7
0x4000b30	              0x53	                                push rbx	      1546	cache.c	FUNCTION_58
0x4000b31	          0x4889f3	                            mov rbx, rsi	      1546	cache.c	FUNCTION_58
0x4000b34	      0xe800000000	                          call 0x4000b39	      1547	cache.c	FUNCTION_58	CALL_1
0x4000b39	          0x4889df	                            mov rdi, rbx	      1549	cache.c	FUNCTION_58	CALL_2
0x4000b3c	          0x4889c6	                            mov rsi, rax	      1549	cache.c	FUNCTION_58	CALL_2
0x4000b3f	              0x5b	                                 pop rbx	      1550	cache.c	FUNCTION_58
0x4000b40	      0xe97bffffff	            jmp sym.content_open.isra.20	      1549	cache.c	FUNCTION_58	CALL_2
sunrpc_cache_register_pipefs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,1:functions,0:CALL,3:ELSE,0	10
0x4000960	              0x53	                                push rbx	      1827	cache.c	FUNCTION_84
0x4000961	           0xfb7d2	                           movzx edx, dx	      1828	cache.c	FUNCTION_84	CALL_1
0x4000964	          0x4889cb	                            mov rbx, rcx	      1827	cache.c	FUNCTION_84
0x4000967	      0xe800000000	                          call 0x400096c	      1828	cache.c	FUNCTION_84	CALL_1
0x400096c	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      1829	cache.c	FUNCTION_84	IF_1	CALL_2
0x4000972	            0x7709	                            ja 0x400097d	      1829	cache.c	FUNCTION_84	IF_1	CALL_2
0x4000974	    0x488983c80000	             mov qword [rbx + 0xc8], rax	      1831	cache.c	FUNCTION_84
0x400097b	            0x31c0	                            xor eax, eax	      1832	cache.c	FUNCTION_84
0x400097d	              0x5b	                                 pop rbx	      1833	cache.c	FUNCTION_84
0x400097e	              0xc3	                                     ret	      1833	cache.c	FUNCTION_84
qword_add	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,2:functions,0:CALL,1:ELSE,1	42
0x4000580	            0x4157	                                push r15	      1087	cache.c	FUNCTION_36
0x4000582	            0x4156	                                push r14	      1087	cache.c	FUNCTION_36
0x4000584	            0x4155	                                push r13	      1087	cache.c	FUNCTION_36
0x4000586	            0x4154	                                push r12	      1087	cache.c	FUNCTION_36
0x4000588	              0x55	                                push rbp	      1087	cache.c	FUNCTION_36
0x4000589	              0x53	                                push rbx	      1087	cache.c	FUNCTION_36
0x400058a	            0x8b1e	                    mov ebx, dword [rsi]	      1089	cache.c	FUNCTION_36
0x400058c	            0x85db	                           test ebx, ebx	      1092	cache.c	FUNCTION_36	IF_1
0x400058e	            0x7852	                            js 0x40005e2	      1092	cache.c	FUNCTION_36	IF_1
0x4000590	          0x4c8b37	                    mov r14, qword [rdi]	      1088	cache.c	FUNCTION_36
0x4000593	          0x4989d5	                            mov r13, rdx	      1088	cache.c	FUNCTION_36
0x4000596	          0x4989fc	                            mov r12, rdi	      1088	cache.c	FUNCTION_36
0x4000599	          0x4c63fb	                         movsxd r15, ebx	      1094	cache.c	FUNCTION_36	CALL_1
0x400059c	          0x4889d7	                            mov rdi, rdx	        65	string_helpers.h	FUNCTION_172	CALL_2
0x400059f	          0x4889f5	                            mov rbp, rsi	        65	string_helpers.h	FUNCTION_172	CALL_2
0x40005a2	      0xe800000000	                          call 0x40005a7	        65	string_helpers.h	FUNCTION_172	CALL_2
0x40005a7	    0x49c7c1000000	                               mov r9, 0	        65	string_helpers.h	FUNCTION_172	CALL_2
0x40005ae	    0x41b808000000	                              mov r8d, 8	        65	string_helpers.h	FUNCTION_172	CALL_2
0x40005b4	          0x4c89f9	                            mov rcx, r15	        65	string_helpers.h	FUNCTION_172	CALL_2
0x40005b7	          0x4c89f2	                            mov rdx, r14	        65	string_helpers.h	FUNCTION_172	CALL_2
0x40005ba	          0x4889c6	                            mov rsi, rax	        65	string_helpers.h	FUNCTION_172	CALL_2
0x40005bd	          0x4c89ef	                            mov rdi, r13	        65	string_helpers.h	FUNCTION_172	CALL_2
0x40005c0	      0xe800000000	                          call 0x40005c5	        65	string_helpers.h	FUNCTION_172	CALL_2
0x40005c5	            0x39c3	                            cmp ebx, eax	      1095	cache.c	FUNCTION_36	IF_2
0x40005c7	            0x7e24	                           jle 0x40005ed	      1095	cache.c	FUNCTION_36	IF_2
0x40005c9	          0x4863d0	                         movsxd rdx, eax	      1099	cache.c	FUNCTION_36	ELSE_1
0x40005cc	            0x29c3	                            sub ebx, eax	      1100	cache.c	FUNCTION_36	ELSE_1
0x40005ce	      0x4d8d7c1601	                lea r15, [r14 + rdx + 1]	      1101	cache.c	FUNCTION_36	ELSE_1
0x40005d3	      0x41c6041620	              mov byte [r14 + rdx], 0x20	      1101	cache.c	FUNCTION_36	ELSE_1
0x40005d8	          0x83eb01	                              sub ebx, 1	      1102	cache.c	FUNCTION_36	ELSE_1
0x40005db	        0x4d893c24	                    mov qword [r12], r15	      1104	cache.c	FUNCTION_36
0x40005df	          0x895d00	                    mov dword [rbp], ebx	      1105	cache.c	FUNCTION_36
0x40005e2	              0x5b	                                 pop rbx	      1106	cache.c	FUNCTION_36
0x40005e3	              0x5d	                                 pop rbp	      1106	cache.c	FUNCTION_36
0x40005e4	            0x415c	                                 pop r12	      1106	cache.c	FUNCTION_36
0x40005e6	            0x415d	                                 pop r13	      1106	cache.c	FUNCTION_36
0x40005e8	            0x415e	                                 pop r14	      1106	cache.c	FUNCTION_36
0x40005ea	            0x415f	                                 pop r15	      1106	cache.c	FUNCTION_36
0x40005ec	              0xc3	                                     ret	      1106	cache.c	FUNCTION_36
0x40005ed	          0x4d01f7	                            add r15, r14	      1096	cache.c	FUNCTION_36	IF_2
0x40005f0	      0xbbffffffff	                     mov ebx, 0xffffffff	      1097	cache.c	FUNCTION_36	IF_2
0x40005f5	            0xebe4	                           jmp 0x40005db	      1097	cache.c	FUNCTION_36	IF_2
write_flush_procfs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,3:ELSE,0	17
0x4002a60	            0x4154	                                push r12	      1591	cache.c	FUNCTION_63
0x4002a62	              0x55	                                push rbp	      1591	cache.c	FUNCTION_63
0x4002a63	          0x4989cc	                            mov r12, rcx	      1591	cache.c	FUNCTION_63
0x4002a66	              0x53	                                push rbx	      1591	cache.c	FUNCTION_63
0x4002a67	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      1592	cache.c	FUNCTION_63	CALL_2
0x4002a6b	          0x4889f3	                            mov rbx, rsi	      1591	cache.c	FUNCTION_63
0x4002a6e	          0x4889d5	                            mov rbp, rdx	      1591	cache.c	FUNCTION_63
0x4002a71	      0xe800000000	                          call 0x4002a76	      1592	cache.c	FUNCTION_63	CALL_2
0x4002a76	          0x4c89e2	                            mov rdx, r12	      1594	cache.c	FUNCTION_63	CALL_3
0x4002a79	          0x4889ee	                            mov rsi, rbp	      1594	cache.c	FUNCTION_63	CALL_3
0x4002a7c	          0x4889df	                            mov rdi, rbx	      1594	cache.c	FUNCTION_63	CALL_3
0x4002a7f	              0x5b	                                 pop rbx	      1595	cache.c	FUNCTION_63
0x4002a80	              0x5d	                                 pop rbp	      1595	cache.c	FUNCTION_63
0x4002a81	            0x415c	                                 pop r12	      1595	cache.c	FUNCTION_63
0x4002a83	        0x488d4878	                   lea rcx, [rax + 0x78]	      1595	cache.c	FUNCTION_63
0x4002a87	    0x4c8d80900000	                    lea r8, [rax + 0x90]	      1594	cache.c	FUNCTION_63	CALL_3
0x4002a8e	      0xe9ddfeffff	             jmp sym.write_flush.isra.25	      1594	cache.c	FUNCTION_63	CALL_3
content_open_pipefs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,2:ELSE,0	4
0x4000b50	          0x4889f0	                            mov rax, rsi	      1765	cache.c	FUNCTION_78
0x4000b53	    0x488bb7400200	           mov rsi, qword [rdi + 0x240] 	      1768	cache.c	FUNCTION_78	CALL_2
0x4000b5a	          0x4889c7	                            mov rdi, rax	      1768	cache.c	FUNCTION_78	CALL_2
0x4000b5d	      0xe95effffff	            jmp sym.content_open.isra.20	      1768	cache.c	FUNCTION_78	CALL_2
cache_release_pipefs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,2:ELSE,0	4
0x4000ca0	          0x4889f0	                            mov rax, rsi	      1747	cache.c	FUNCTION_77
0x4000ca3	    0x488bb7400200	           mov rsi, qword [rdi + 0x240] 	      1750	cache.c	FUNCTION_77	CALL_2
0x4000caa	    0x488db8c80000	                   lea rdi, [rax + 0xc8]	      1750	cache.c	FUNCTION_77	CALL_2
0x4000cb1	      0xe9bafeffff	           jmp sym.cache_release.isra.21	      1750	cache.c	FUNCTION_77	CALL_2
cache_unregister_net	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,2:ELSE,0	10
0x40015c0	              0x53	                                push rbx	      1671	cache.c	FUNCTION_69
0x40015c1	          0x4889fb	                            mov rbx, rdi	      1671	cache.c	FUNCTION_69
0x40015c4	    0x488bbfc80000	            mov rdi, qword [rdi + 0xc8] 	      1607	cache.c	FUNCTION_64	IF_1
0x40015cb	          0x4885ff	                           test rdi, rdi	      1607	cache.c	FUNCTION_64	IF_1
0x40015ce	            0x7410	                            je 0x40015e0	      1607	cache.c	FUNCTION_64	IF_1
0x40015d0	      0xe800000000	                          call 0x40015d5	      1608	cache.c	FUNCTION_64	IF_1	CALL_1
0x40015d5	    0x48c783c80000	               mov qword [rbx + 0xc8], 0	      1609	cache.c	FUNCTION_64	IF_1
0x40015e0	          0x4889df	                            mov rdi, rbx	      1673	cache.c	FUNCTION_69	CALL_2
0x40015e3	              0x5b	                                 pop rbx	      1674	cache.c	FUNCTION_69
0x40015e4	      0xe947feffff	     jmp sym.sunrpc_destroy_cache_detail	      1673	cache.c	FUNCTION_69	CALL_2
content_release_procfs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,2:ELSE,0	18
0x4000790	            0x4154	                                push r12	      1553	cache.c	FUNCTION_59
0x4000792	              0x55	                                push rbp	      1553	cache.c	FUNCTION_59
0x4000793	          0x4989f4	                            mov r12, rsi	      1553	cache.c	FUNCTION_59
0x4000796	              0x53	                                push rbx	      1553	cache.c	FUNCTION_59
0x4000797	          0x4889fb	                            mov rbx, rdi	      1553	cache.c	FUNCTION_59
0x400079a	      0xe800000000	                          call 0x400079f	      1554	cache.c	FUNCTION_59	CALL_1
0x400079f	          0x4c89e6	                            mov rsi, r12	      1416	cache.c	FUNCTION_47	CALL_1
0x40007a2	          0x4889c5	                            mov rbp, rax	      1554	cache.c	FUNCTION_59	CALL_1
0x40007a5	          0x4889df	                            mov rdi, rbx	      1416	cache.c	FUNCTION_47	CALL_1
0x40007a8	      0xe800000000	                          call 0x40007ad	      1416	cache.c	FUNCTION_47	CALL_1
0x40007ad	        0x488b7d00	                    mov rdi, qword [rbp]	      1417	cache.c	FUNCTION_47	CALL_2
0x40007b1	            0x89c3	                            mov ebx, eax	      1416	cache.c	FUNCTION_47	CALL_1
0x40007b3	      0xe800000000	                          call 0x40007b8	      1417	cache.c	FUNCTION_47	CALL_2
0x40007b8	            0x89d8	                            mov eax, ebx	      1557	cache.c	FUNCTION_59
0x40007ba	              0x5b	                                 pop rbx	      1557	cache.c	FUNCTION_59
0x40007bb	              0x5d	                                 pop rbp	      1557	cache.c	FUNCTION_59
0x40007bc	            0x415c	                                 pop r12	      1557	cache.c	FUNCTION_59
0x40007be	              0xc3	                                     ret	      1557	cache.c	FUNCTION_59
cache_poll_pipefs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,3:ELSE,0	3
0x4000480	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      1725	cache.c	FUNCTION_74	CALL_2
0x4000484	    0x488b90400200	           mov rdx, qword [rax + 0x240] 	      1727	cache.c	FUNCTION_74	CALL_3
0x400048b	      0xe900fdffff	                      jmp sym.cache_poll	      1727	cache.c	FUNCTION_74	CALL_3
qword_get	DO,0:WHILE,4:FOR,0:SWITCH,0:IF,5:functions,0:CALL,5:ELSE,2	111
0x4000600	            0x4157	                                push r15	      1230	cache.c	FUNCTION_41
0x4000602	            0x4156	                                push r14	      1230	cache.c	FUNCTION_41
0x4000604	            0x4155	                                push r13	      1230	cache.c	FUNCTION_41
0x4000606	            0x4154	                                push r12	      1230	cache.c	FUNCTION_41
0x4000608	          0x4989f5	                            mov r13, rsi	      1230	cache.c	FUNCTION_41
0x400060b	              0x55	                                push rbp	      1230	cache.c	FUNCTION_41
0x400060c	              0x53	                                push rbx	      1230	cache.c	FUNCTION_41
0x400060d	          0x4989fc	                            mov r12, rdi	      1230	cache.c	FUNCTION_41
0x4000610	          0x488b1f	                    mov rbx, qword [rdi]	      1232	cache.c	FUNCTION_41
0x4000613	           0xfb603	                   movzx eax, byte [rbx]	      1235	cache.c	FUNCTION_41	WHILE_1
0x4000616	            0x3c20	                            cmp al, 0x20	      1235	cache.c	FUNCTION_41	WHILE_1
0x4000618	            0x750b	                           jne 0x4000625	      1235	cache.c	FUNCTION_41	WHILE_1
0x400061a	        0x4883c301	                              add rbx, 1	      1235	cache.c	FUNCTION_41	WHILE_1
0x400061e	           0xfb603	                   movzx eax, byte [rbx]	      1235	cache.c	FUNCTION_41	WHILE_1
0x4000621	            0x3c20	                            cmp al, 0x20	      1235	cache.c	FUNCTION_41	WHILE_1
0x4000623	            0x74f5	                            je 0x400061a	      1235	cache.c	FUNCTION_41	WHILE_1
0x4000625	            0x3c5c	                            cmp al, 0x5c	      1237	cache.c	FUNCTION_41	IF_1
0x4000627	     0xf8491000000	                            je 0x40006be	      1237	cache.c	FUNCTION_41	IF_1
0x400062d	        0x498d7d01	                      lea rdi, [r13 + 1]	      1237	cache.c	FUNCTION_41	IF_1
0x4000631	          0x4531c0	                            xor r8d, r8d	      1240	cache.c	FUNCTION_41	IF_1	WHILE_2
0x4000634	          0x83ea01	                              sub edx, 1	      1257	cache.c	FUNCTION_41	ELSE_1	WHILE_3
0x4000637	            0xeb0f	                           jmp 0x4000648	      1257	cache.c	FUNCTION_41	ELSE_1	WHILE_3
0x4000639	        0x4883c301	                              add rbx, 1	      1269	cache.c	FUNCTION_41	ELSE_1	WHILE_3	ELSE_2
0x400063d	          0x884fff	                  mov byte [rdi - 1], cl	      1269	cache.c	FUNCTION_41	ELSE_1	WHILE_3	ELSE_2
0x4000640	        0x4983c001	                               add r8, 1	      1269	cache.c	FUNCTION_41	ELSE_1	WHILE_3	ELSE_2
0x4000644	        0x4883c701	                              add rdi, 1	      1269	cache.c	FUNCTION_41	ELSE_1	WHILE_3	ELSE_2
0x4000648	           0xfb60b	                   movzx ecx, byte [rbx]	      1257	cache.c	FUNCTION_41	ELSE_1	WHILE_3
0x400064b	          0x4489c5	                            mov ebp, r8d	      1257	cache.c	FUNCTION_41	ELSE_1	WHILE_3
0x400064e	        0x4c8d6fff	                      lea r13, [rdi - 1]	      1257	cache.c	FUNCTION_41	ELSE_1	WHILE_3
0x4000652	          0xf6c1df	                           test cl, 0xdf	      1257	cache.c	FUNCTION_41	ELSE_1	WHILE_3
0x4000655	     0xf84c2000000	                            je 0x400071d	      1257	cache.c	FUNCTION_41	ELSE_1	WHILE_3
0x400065b	          0x80f90a	                             cmp cl, 0xa	      1257	cache.c	FUNCTION_41	ELSE_1	WHILE_3
0x400065e	     0xf84b9000000	                            je 0x400071d	      1257	cache.c	FUNCTION_41	ELSE_1	WHILE_3
0x4000664	          0x4139d0	                            cmp r8d, edx	      1257	cache.c	FUNCTION_41	ELSE_1	WHILE_3
0x4000667	     0xf8dd4000000	                           jge 0x4000741	      1257	cache.c	FUNCTION_41	ELSE_1	WHILE_3
0x400066d	          0x80f95c	                            cmp cl, 0x5c	      1258	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4
0x4000670	            0x75c7	                           jne 0x4000639	      1258	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4
0x4000672	         0xfbe4301	               movsx eax, byte [rbx + 1]	      1259	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4	CALL_3
0x4000676	          0x8d70d0	                   lea esi, [rax - 0x30]	      1259	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4	CALL_3
0x4000679	        0x4080fe03	                              cmp sil, 3	      1259	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4	CALL_3
0x400067d	            0x77ba	                            ja 0x4000639	      1259	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4	CALL_3
0x400067f	         0xfbe7302	               movsx esi, byte [rbx + 2]	      1260	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4	CALL_4
0x4000683	        0x448d4ed0	                   lea r9d, [rsi - 0x30]	      1259	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4	CALL_3
0x4000687	        0x4180f907	                              cmp r9b, 7	      1259	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4	CALL_3
0x400068b	            0x77ac	                            ja 0x4000639	      1259	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4	CALL_3
0x400068d	      0x440fbe4b03	               movsx r9d, byte [rbx + 3]	      1261	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4	CALL_5
0x4000692	        0x458d51d0	                   lea r10d, [r9 - 0x30]	      1260	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4	CALL_4
0x4000696	        0x4180fa07	                             cmp r10b, 7	      1260	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4	CALL_4
0x400069a	            0x779d	                            ja 0x4000639	      1260	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4	CALL_4
0x400069c	    0x8d0cc580feff	                lea ecx, [rax*8 - 0x180]	      1264	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4
0x40006a3	          0x8d46d0	                   lea eax, [rsi - 0x30]	      1265	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4
0x40006a6	        0x4883c304	                              add rbx, 4	      1265	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4
0x40006aa	             0x9c8	                             or eax, ecx	      1265	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4
0x40006ac	    0x8d0cc5000000	                        lea ecx, [rax*8]	      1265	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4
0x40006b3	        0x418d41d0	                    lea eax, [r9 - 0x30]	      1266	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4
0x40006b7	             0x9c8	                             or eax, ecx	      1266	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4
0x40006b9	          0x8847ff	                  mov byte [rdi - 1], al	      1266	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4
0x40006bc	            0xeb82	                           jmp 0x4000640	      1261	cache.c	FUNCTION_41	ELSE_1	WHILE_3	IF_4	CALL_5
0x40006be	        0x807b0178	                cmp byte [rbx + 1], 0x78	      1237	cache.c	FUNCTION_41	IF_1
0x40006c2	     0xf8565ffffff	                           jne 0x400062d	      1237	cache.c	FUNCTION_41	IF_1
0x40006c8	        0x448d72ff	                     lea r14d, [rdx - 1]	      1240	cache.c	FUNCTION_41	IF_1	WHILE_2
0x40006cc	        0x4883c302	                              add rbx, 2	      1239	cache.c	FUNCTION_41	IF_1
0x40006d0	            0x31ed	                            xor ebp, ebp	      1240	cache.c	FUNCTION_41	IF_1	WHILE_2
0x40006d2	          0x4585f6	                         test r14d, r14d	      1240	cache.c	FUNCTION_41	IF_1	WHILE_2
0x40006d5	            0x7f2a	                            jg 0x4000701	      1240	cache.c	FUNCTION_41	IF_1	WHILE_2
0x40006d7	            0xeb37	                           jmp 0x4000710	      1240	cache.c	FUNCTION_41	IF_1	WHILE_2
0x40006d9	         0xfbe7b01	               movsx edi, byte [rbx + 1]	      1247	cache.c	FUNCTION_41	IF_1	WHILE_2	CALL_2
0x40006dd	      0xe800000000	                          call 0x40006e2	      1247	cache.c	FUNCTION_41	IF_1	WHILE_2	CALL_2
0x40006e2	            0x85c0	                           test eax, eax	      1248	cache.c	FUNCTION_41	IF_1	WHILE_2	IF_3
0x40006e4	            0x782a	                            js 0x4000710	      1248	cache.c	FUNCTION_41	IF_1	WHILE_2	IF_3
0x40006e6	        0x41c1e704	                             shl r15d, 4	      1251	cache.c	FUNCTION_41	IF_1	WHILE_2
0x40006ea	          0x83c501	                              add ebp, 1	      1253	cache.c	FUNCTION_41	IF_1	WHILE_2
0x40006ed	        0x4983c501	                              add r13, 1	      1251	cache.c	FUNCTION_41	IF_1	WHILE_2
0x40006f1	          0x4109c7	                            or r15d, eax	      1251	cache.c	FUNCTION_41	IF_1	WHILE_2
0x40006f4	        0x4883c302	                              add rbx, 2	      1252	cache.c	FUNCTION_41	IF_1	WHILE_2
0x40006f8	          0x4439f5	                           cmp ebp, r14d	      1240	cache.c	FUNCTION_41	IF_1	WHILE_2
0x40006fb	        0x45887dff	                mov byte [r13 - 1], r15b	      1251	cache.c	FUNCTION_41	IF_1	WHILE_2
0x40006ff	            0x740f	                            je 0x4000710	      1240	cache.c	FUNCTION_41	IF_1	WHILE_2
0x4000701	           0xfbe3b	                   movsx edi, byte [rbx]	      1243	cache.c	FUNCTION_41	IF_1	WHILE_2	CALL_1
0x4000704	      0xe800000000	                          call 0x4000709	      1243	cache.c	FUNCTION_41	IF_1	WHILE_2	CALL_1
0x4000709	            0x85c0	                           test eax, eax	      1244	cache.c	FUNCTION_41	IF_1	WHILE_2	IF_2
0x400070b	          0x4189c7	                           mov r15d, eax	      1243	cache.c	FUNCTION_41	IF_1	WHILE_2	CALL_1
0x400070e	            0x79c9	                           jns 0x40006d9	      1244	cache.c	FUNCTION_41	IF_1	WHILE_2	IF_2
0x4000710	           0xfb60b	                   movzx ecx, byte [rbx]	      1275	cache.c	FUNCTION_41	IF_5
0x4000713	          0xf6c1df	                           test cl, 0xdf	      1275	cache.c	FUNCTION_41	IF_5
0x4000716	            0x7405	                            je 0x400071d	      1275	cache.c	FUNCTION_41	IF_5
0x4000718	          0x80f90a	                             cmp cl, 0xa	      1275	cache.c	FUNCTION_41	IF_5
0x400071b	            0x7524	                           jne 0x4000741	      1275	cache.c	FUNCTION_41	IF_5
0x400071d	          0x80f920	                            cmp cl, 0x20	      1277	cache.c	FUNCTION_41	WHILE_4
0x4000720	            0x7509	                           jne 0x400072b	      1277	cache.c	FUNCTION_41	WHILE_4
0x4000722	        0x4883c301	                              add rbx, 1	      1277	cache.c	FUNCTION_41	WHILE_4
0x4000726	          0x803b20	                    cmp byte [rbx], 0x20	      1277	cache.c	FUNCTION_41	WHILE_4
0x4000729	            0x74f7	                            je 0x4000722	      1277	cache.c	FUNCTION_41	WHILE_4
0x400072b	        0x49891c24	                    mov qword [r12], rbx	      1278	cache.c	FUNCTION_41
0x400072f	            0x89e8	                            mov eax, ebp	      1280	cache.c	FUNCTION_41
0x4000731	      0x41c6450000	                       mov byte [r13], 0	      1279	cache.c	FUNCTION_41
0x4000736	              0x5b	                                 pop rbx	      1281	cache.c	FUNCTION_41
0x4000737	              0x5d	                                 pop rbp	      1281	cache.c	FUNCTION_41
0x4000738	            0x415c	                                 pop r12	      1281	cache.c	FUNCTION_41
0x400073a	            0x415d	                                 pop r13	      1281	cache.c	FUNCTION_41
0x400073c	            0x415e	                                 pop r14	      1281	cache.c	FUNCTION_41
0x400073e	            0x415f	                                 pop r15	      1281	cache.c	FUNCTION_41
0x4000740	              0xc3	                                     ret	      1281	cache.c	FUNCTION_41
0x4000741	              0x5b	                                 pop rbx	      1281	cache.c	FUNCTION_41
0x4000742	      0xb8ffffffff	                     mov eax, 0xffffffff	      1276	cache.c	FUNCTION_41	IF_5
0x4000747	              0x5d	                                 pop rbp	      1281	cache.c	FUNCTION_41
0x4000748	            0x415c	                                 pop r12	      1281	cache.c	FUNCTION_41
0x400074a	            0x415d	                                 pop r13	      1281	cache.c	FUNCTION_41
0x400074c	            0x415e	                                 pop r14	      1281	cache.c	FUNCTION_41
0x400074e	            0x415f	                                 pop r15	      1281	cache.c	FUNCTION_41
0x4000750	              0xc3	                                     ret	      1281	cache.c	FUNCTION_41
cache_restart_thread	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,2:ELSE,0	2
0x4000570	        0x4883c738	                           add rdi, 0x38	       593	cache.c	FUNCTION_19	CALL_2
0x4000574	      0xe900000000	                           jmp 0x4000579	       593	cache.c	FUNCTION_19	CALL_2
cache_destroy_net	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,2:ELSE,0	7
0x4000490	              0x53	                                push rbx	      1701	cache.c	FUNCTION_71
0x4000491	          0x4889fb	                            mov rbx, rdi	      1701	cache.c	FUNCTION_71
0x4000494	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      1702	cache.c	FUNCTION_71	CALL_1
0x4000498	      0xe800000000	                          call 0x400049d	      1702	cache.c	FUNCTION_71	CALL_1
0x400049d	          0x4889df	                            mov rdi, rbx	      1703	cache.c	FUNCTION_71	CALL_2
0x40004a0	              0x5b	                                 pop rbx	      1704	cache.c	FUNCTION_71
0x40004a1	      0xe900000000	                           jmp 0x40004a6	      1703	cache.c	FUNCTION_71	CALL_2
cache_flush	DO,0:WHILE,2:FOR,0:SWITCH,0:IF,0:functions,0:CALL,4:ELSE,0	13
0x4002940	            0xeb05	                           jmp 0x4002947	       483	cache.c	FUNCTION_14	WHILE_1	CALL_1
0x4002942	      0xe800000000	                          call 0x4002947	       484	cache.c	FUNCTION_14	CALL_2
0x4002947	      0xe8d4fcffff	                    call sym.cache_clean	       483	cache.c	FUNCTION_14	WHILE_1	CALL_1
0x400294c	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       483	cache.c	FUNCTION_14	WHILE_1	CALL_1
0x400294f	            0x75f1	                           jne 0x4002942	       483	cache.c	FUNCTION_14	WHILE_1	CALL_1
0x4002951	      0xe8cafcffff	                    call sym.cache_clean	       485	cache.c	FUNCTION_14	WHILE_2	CALL_3
0x4002956	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       485	cache.c	FUNCTION_14	WHILE_2	CALL_3
0x4002959	            0x740f	                            je 0x400296a	       485	cache.c	FUNCTION_14	WHILE_2	CALL_3
0x400295b	      0xe800000000	                          call 0x4002960	       486	cache.c	FUNCTION_14	CALL_4
0x4002960	      0xe8bbfcffff	                    call sym.cache_clean	       485	cache.c	FUNCTION_14	WHILE_2	CALL_3
0x4002965	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       485	cache.c	FUNCTION_14	WHILE_2	CALL_3
0x4002968	            0x75f1	                           jne 0x400295b	       485	cache.c	FUNCTION_14	WHILE_2	CALL_3
0x400296a	            0xf3c3	                                     ret	       487	cache.c	FUNCTION_14
cache_poll_procfs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,3:ELSE,0	12
0x4000760	              0x55	                                push rbp	      1505	cache.c	FUNCTION_54
0x4000761	              0x53	                                push rbx	      1505	cache.c	FUNCTION_54
0x4000762	          0x4889fb	                            mov rbx, rdi	      1505	cache.c	FUNCTION_54
0x4000765	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      1506	cache.c	FUNCTION_54	CALL_2
0x4000769	          0x4889f5	                            mov rbp, rsi	      1505	cache.c	FUNCTION_54
0x400076c	      0xe800000000	                          call 0x4000771	      1506	cache.c	FUNCTION_54	CALL_2
0x4000771	          0x4889ee	                            mov rsi, rbp	      1508	cache.c	FUNCTION_54	CALL_3
0x4000774	          0x4889df	                            mov rdi, rbx	      1508	cache.c	FUNCTION_54	CALL_3
0x4000777	          0x4889c2	                            mov rdx, rax	      1508	cache.c	FUNCTION_54	CALL_3
0x400077a	              0x5b	                                 pop rbx	      1509	cache.c	FUNCTION_54
0x400077b	              0x5d	                                 pop rbp	      1509	cache.c	FUNCTION_54
0x400077c	      0xe90ffaffff	                      jmp sym.cache_poll	      1508	cache.c	FUNCTION_54	CALL_3
cache_open_procfs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,2:ELSE,0	11
0x40008f0	              0x55	                                push rbp	      1521	cache.c	FUNCTION_56
0x40008f1	              0x53	                                push rbx	      1521	cache.c	FUNCTION_56
0x40008f2	          0x4889f5	                            mov rbp, rsi	      1521	cache.c	FUNCTION_56
0x40008f5	          0x4889fb	                            mov rbx, rdi	      1521	cache.c	FUNCTION_56
0x40008f8	      0xe800000000	                          call 0x40008fd	      1522	cache.c	FUNCTION_56	CALL_1
0x40008fd	          0x4889ee	                            mov rsi, rbp	      1524	cache.c	FUNCTION_56	CALL_2
0x4000900	          0x4889df	                            mov rdi, rbx	      1524	cache.c	FUNCTION_56	CALL_2
0x4000903	          0x4889c2	                            mov rdx, rax	      1524	cache.c	FUNCTION_56	CALL_2
0x4000906	              0x5b	                                 pop rbx	      1525	cache.c	FUNCTION_56
0x4000907	              0x5d	                                 pop rbp	      1525	cache.c	FUNCTION_56
0x4000908	      0xe903ffffff	                      jmp sym.cache_open	      1524	cache.c	FUNCTION_56	CALL_2
sunrpc_cache_unregister_pipefs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,1:functions,0:CALL,1:ELSE,0	10
0x4000980	          0x4889f8	                            mov rax, rdi	      1837	cache.c	FUNCTION_85
0x4000983	    0x488bbfc80000	            mov rdi, qword [rdi + 0xc8] 	      1838	cache.c	FUNCTION_85	IF_1
0x400098a	          0x4885ff	                           test rdi, rdi	      1838	cache.c	FUNCTION_85	IF_1
0x400098d	            0x7415	                            je 0x40009a4	      1838	cache.c	FUNCTION_85	IF_1
0x400098f	              0x53	                                push rbx	      1837	cache.c	FUNCTION_85
0x4000990	          0x4889c3	                            mov rbx, rax	      1837	cache.c	FUNCTION_85
0x4000993	      0xe800000000	                          call 0x4000998	      1839	cache.c	FUNCTION_85	IF_1	CALL_1
0x4000998	    0x48c783c80000	               mov qword [rbx + 0xc8], 0	      1840	cache.c	FUNCTION_85	IF_1
0x40009a3	              0x5b	                                 pop rbx	      1842	cache.c	FUNCTION_85
0x40009a4	            0xf3c3	                                     ret	      1842	cache.c	FUNCTION_85
release_flush_procfs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,2:ELSE,0	5
0x40007c0	      0xe800000000	                          call 0x40007c5	      1575	cache.c	FUNCTION_61	CALL_1
0x40007c5	          0x488b38	                    mov rdi, qword [rax]	      1432	cache.c	FUNCTION_49	CALL_1
0x40007c8	      0xe800000000	                          call 0x40007cd	      1432	cache.c	FUNCTION_49	CALL_1
0x40007cd	            0x31c0	                            xor eax, eax	      1578	cache.c	FUNCTION_61
0x40007cf	              0xc3	                                     ret	      1578	cache.c	FUNCTION_61
content_release_pipefs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,2:ELSE,0	11
0x40007d0	              0x55	                                push rbp	      1772	cache.c	FUNCTION_79
0x40007d1	              0x53	                                push rbx	      1772	cache.c	FUNCTION_79
0x40007d2	    0x488baf400200	           mov rbp, qword [rdi + 0x240] 	      1773	cache.c	FUNCTION_79	CALL_1
0x40007d9	      0xe800000000	                          call 0x40007de	      1416	cache.c	FUNCTION_47	CALL_1
0x40007de	            0x89c3	                            mov ebx, eax	      1416	cache.c	FUNCTION_47	CALL_1
0x40007e0	        0x488b7d00	                    mov rdi, qword [rbp]	      1417	cache.c	FUNCTION_47	CALL_2
0x40007e4	      0xe800000000	                          call 0x40007e9	      1417	cache.c	FUNCTION_47	CALL_2
0x40007e9	            0x89d8	                            mov eax, ebx	      1776	cache.c	FUNCTION_79
0x40007eb	              0x5b	                                 pop rbx	      1776	cache.c	FUNCTION_79
0x40007ec	              0x5d	                                 pop rbp	      1776	cache.c	FUNCTION_79
0x40007ed	              0xc3	                                     ret	      1776	cache.c	FUNCTION_79
write_flush_pipefs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,3:ELSE,0	9
0x4002aa0	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      1811	cache.c	FUNCTION_83	CALL_2
0x4002aa4	          0x4989f1	                             mov r9, rsi	      1810	cache.c	FUNCTION_83
0x4002aa7	          0x4889d6	                            mov rsi, rdx	      1810	cache.c	FUNCTION_83
0x4002aaa	          0x4889ca	                            mov rdx, rcx	      1810	cache.c	FUNCTION_83
0x4002aad	          0x4c89cf	                             mov rdi, r9	      1813	cache.c	FUNCTION_83	CALL_3
0x4002ab0	    0x488b80400200	           mov rax, qword [rax + 0x240] 	      1811	cache.c	FUNCTION_83	CALL_2
0x4002ab7	        0x488d4878	                   lea rcx, [rax + 0x78]	      1811	cache.c	FUNCTION_83	CALL_2
0x4002abb	    0x4c8d80900000	                    lea r8, [rax + 0x90]	      1813	cache.c	FUNCTION_83	CALL_3
0x4002ac2	      0xe9a9feffff	             jmp sym.write_flush.isra.25	      1813	cache.c	FUNCTION_83	CALL_3
cache_ioctl_pipefs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,3:ELSE,0	6
0x4000d70	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      1734	cache.c	FUNCTION_75	CALL_2
0x4000d74	    0x488bbfc80000	            mov rdi, qword [rdi + 0xc8] 	      1736	cache.c	FUNCTION_75	CALL_3
0x4000d7b	    0x488b88400200	           mov rcx, qword [rax + 0x240] 	      1736	cache.c	FUNCTION_75	CALL_3
0x4000d82	      0xe839ffffff	            call sym.cache_ioctl.isra.22	      1736	cache.c	FUNCTION_75	CALL_3
0x4000d87	            0x4898	                                    cdqe	      1736	cache.c	FUNCTION_75	CALL_3
0x4000d89	              0xc3	                                     ret	      1737	cache.c	FUNCTION_75
open_flush_pipefs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,2:ELSE,0	22
0x4000ef0	    0x488b87400200	           mov rax, qword [rdi + 0x240] 	      1787	cache.c	FUNCTION_80	CALL_1
0x4000ef7	          0x4885c0	                           test rax, rax	      1424	cache.c	FUNCTION_48	IF_1	CALL_1
0x4000efa	            0x7429	                            je 0x4000f25	      1424	cache.c	FUNCTION_48	IF_1	CALL_1
0x4000efc	              0x55	                                push rbp	      1786	cache.c	FUNCTION_80
0x4000efd	              0x53	                                push rbx	      1786	cache.c	FUNCTION_80
0x4000efe	          0x4889fb	                            mov rbx, rdi	      1786	cache.c	FUNCTION_80
0x4000f01	          0x488b38	                    mov rdi, qword [rax]	      1424	cache.c	FUNCTION_48	IF_1	CALL_1
0x4000f04	          0x4889f5	                            mov rbp, rsi	      1424	cache.c	FUNCTION_48	IF_1	CALL_1
0x4000f07	      0xe800000000	                          call 0x4000f0c	      1424	cache.c	FUNCTION_48	IF_1	CALL_1
0x4000f0c	            0x84c0	                             test al, al	      1424	cache.c	FUNCTION_48	IF_1	CALL_1
0x4000f0e	            0x740d	                            je 0x4000f1d	      1424	cache.c	FUNCTION_48	IF_1	CALL_1
0x4000f10	          0x4889ee	                            mov rsi, rbp	      1426	cache.c	FUNCTION_48	CALL_2
0x4000f13	          0x4889df	                            mov rdi, rbx	      1426	cache.c	FUNCTION_48	CALL_2
0x4000f16	              0x5b	                                 pop rbx	      1790	cache.c	FUNCTION_80
0x4000f17	              0x5d	                                 pop rbp	      1790	cache.c	FUNCTION_80
0x4000f18	      0xe900000000	                           jmp 0x4000f1d	      1426	cache.c	FUNCTION_48	CALL_2
0x4000f1d	      0xb8f3ffffff	                     mov eax, 0xfffffff3	      1790	cache.c	FUNCTION_80
0x4000f22	              0x5b	                                 pop rbx	      1790	cache.c	FUNCTION_80
0x4000f23	              0x5d	                                 pop rbp	      1790	cache.c	FUNCTION_80
0x4000f24	              0xc3	                                     ret	      1790	cache.c	FUNCTION_80
0x4000f25	      0xb8f3ffffff	                     mov eax, 0xfffffff3	      1790	cache.c	FUNCTION_80
0x4000f2a	              0xc3	                                     ret	      1790	cache.c	FUNCTION_80
cache_release_procfs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,2:ELSE,0	7
0x4000c80	              0x53	                                push rbx	      1528	cache.c	FUNCTION_57
0x4000c81	          0x4889f3	                            mov rbx, rsi	      1528	cache.c	FUNCTION_57
0x4000c84	      0xe800000000	                          call 0x4000c89	      1529	cache.c	FUNCTION_57	CALL_1
0x4000c89	    0x488dbbc80000	                   lea rdi, [rbx + 0xc8]	      1529	cache.c	FUNCTION_57	CALL_1
0x4000c90	          0x4889c6	                            mov rsi, rax	      1531	cache.c	FUNCTION_57	CALL_2
0x4000c93	              0x5b	                                 pop rbx	      1532	cache.c	FUNCTION_57
0x4000c94	      0xe9d7feffff	           jmp sym.cache_release.isra.21	      1531	cache.c	FUNCTION_57	CALL_2
cache_read_procfs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,3:ELSE,0	16
0x4002340	            0x4154	                                push r12	      1490	cache.c	FUNCTION_52
0x4002342	              0x55	                                push rbp	      1490	cache.c	FUNCTION_52
0x4002343	          0x4989d4	                            mov r12, rdx	      1490	cache.c	FUNCTION_52
0x4002346	              0x53	                                push rbx	      1490	cache.c	FUNCTION_52
0x4002347	          0x4889fb	                            mov rbx, rdi	      1490	cache.c	FUNCTION_52
0x400234a	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      1491	cache.c	FUNCTION_52	CALL_2
0x400234e	          0x4889f5	                            mov rbp, rsi	      1490	cache.c	FUNCTION_52
0x4002351	      0xe800000000	                          call 0x4002356	      1491	cache.c	FUNCTION_52	CALL_2
0x4002356	          0x4c89e2	                            mov rdx, r12	      1493	cache.c	FUNCTION_52	CALL_3
0x4002359	          0x4889ee	                            mov rsi, rbp	      1493	cache.c	FUNCTION_52	CALL_3
0x400235c	          0x4889df	                            mov rdi, rbx	      1493	cache.c	FUNCTION_52	CALL_3
0x400235f	              0x5b	                                 pop rbx	      1494	cache.c	FUNCTION_52
0x4002360	              0x5d	                                 pop rbp	      1494	cache.c	FUNCTION_52
0x4002361	            0x415c	                                 pop r12	      1494	cache.c	FUNCTION_52
0x4002363	          0x4889c1	                            mov rcx, rax	      1493	cache.c	FUNCTION_52	CALL_3
0x4002366	      0xe965fcffff	              jmp sym.cache_read.isra.24	      1493	cache.c	FUNCTION_52	CALL_3
cache_open_pipefs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,2:ELSE,0	2
0x4000910	    0x488b97400200	           mov rdx, qword [rdi + 0x240] 	      1743	cache.c	FUNCTION_76	CALL_2
0x4000917	      0xe9f4feffff	                      jmp sym.cache_open	      1743	cache.c	FUNCTION_76	CALL_2
release_flush_pipefs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,2:ELSE,0	5
0x40007f0	    0x488b87400200	           mov rax, qword [rdi + 0x240] 	      1793	cache.c	FUNCTION_81
0x40007f7	          0x488b38	                    mov rdi, qword [rax]	      1432	cache.c	FUNCTION_49	CALL_1
0x40007fa	      0xe800000000	                          call 0x40007ff	      1432	cache.c	FUNCTION_49	CALL_1
0x40007ff	            0x31c0	                            xor eax, eax	      1797	cache.c	FUNCTION_81
0x4000801	              0xc3	                                     ret	      1797	cache.c	FUNCTION_81
cache_read_pipefs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,3:ELSE,0	3
0x4002370	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      1710	cache.c	FUNCTION_72	CALL_2
0x4002374	    0x488b88400200	           mov rcx, qword [rax + 0x240] 	      1712	cache.c	FUNCTION_72	CALL_3
0x400237b	      0xe950fcffff	              jmp sym.cache_read.isra.24	      1712	cache.c	FUNCTION_72	CALL_3
cache_ioctl_procfs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,3:ELSE,0	18
0x4000d40	            0x4154	                                push r12	      1513	cache.c	FUNCTION_55
0x4000d42	              0x55	                                push rbp	      1513	cache.c	FUNCTION_55
0x4000d43	          0x4989d4	                            mov r12, rdx	      1513	cache.c	FUNCTION_55
0x4000d46	              0x53	                                push rbx	      1513	cache.c	FUNCTION_55
0x4000d47	          0x4889fb	                            mov rbx, rdi	      1513	cache.c	FUNCTION_55
0x4000d4a	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      1515	cache.c	FUNCTION_55	CALL_2
0x4000d4e	            0x89f5	                            mov ebp, esi	      1513	cache.c	FUNCTION_55
0x4000d50	      0xe800000000	                          call 0x4000d55	      1515	cache.c	FUNCTION_55	CALL_2
0x4000d55	    0x488bbbc80000	            mov rdi, qword [rbx + 0xc8] 	      1517	cache.c	FUNCTION_55	CALL_3
0x4000d5c	          0x4c89e2	                            mov rdx, r12	      1517	cache.c	FUNCTION_55	CALL_3
0x4000d5f	            0x89ee	                            mov esi, ebp	      1517	cache.c	FUNCTION_55	CALL_3
0x4000d61	          0x4889c1	                            mov rcx, rax	      1517	cache.c	FUNCTION_55	CALL_3
0x4000d64	      0xe857ffffff	            call sym.cache_ioctl.isra.22	      1517	cache.c	FUNCTION_55	CALL_3
0x4000d69	              0x5b	                                 pop rbx	      1518	cache.c	FUNCTION_55
0x4000d6a	            0x4898	                                    cdqe	      1517	cache.c	FUNCTION_55	CALL_3
0x4000d6c	              0x5d	                                 pop rbp	      1518	cache.c	FUNCTION_55
0x4000d6d	            0x415c	                                 pop r12	      1518	cache.c	FUNCTION_55
0x4000d6f	              0xc3	                                     ret	      1518	cache.c	FUNCTION_55
read_flush_procfs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,3:ELSE,0	16
0x4000e20	            0x4154	                                push r12	      1582	cache.c	FUNCTION_62
0x4000e22	              0x55	                                push rbp	      1582	cache.c	FUNCTION_62
0x4000e23	          0x4989cc	                            mov r12, rcx	      1582	cache.c	FUNCTION_62
0x4000e26	              0x53	                                push rbx	      1582	cache.c	FUNCTION_62
0x4000e27	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      1583	cache.c	FUNCTION_62	CALL_2
0x4000e2b	          0x4889f3	                            mov rbx, rsi	      1582	cache.c	FUNCTION_62
0x4000e2e	          0x4889d5	                            mov rbp, rdx	      1582	cache.c	FUNCTION_62
0x4000e31	      0xe800000000	                          call 0x4000e36	      1583	cache.c	FUNCTION_62	CALL_2
0x4000e36	          0x4c89e2	                            mov rdx, r12	      1585	cache.c	FUNCTION_62	CALL_3
0x4000e39	          0x4889ee	                            mov rsi, rbp	      1585	cache.c	FUNCTION_62	CALL_3
0x4000e3c	          0x4889df	                            mov rdi, rbx	      1585	cache.c	FUNCTION_62	CALL_3
0x4000e3f	              0x5b	                                 pop rbx	      1586	cache.c	FUNCTION_62
0x4000e40	              0x5d	                                 pop rbp	      1586	cache.c	FUNCTION_62
0x4000e41	            0x415c	                                 pop r12	      1586	cache.c	FUNCTION_62
0x4000e43	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      1585	cache.c	FUNCTION_62	CALL_3
0x4000e47	      0xe944ffffff	              jmp sym.read_flush.isra.26	      1585	cache.c	FUNCTION_62	CALL_3
read_flush_pipefs	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,3:ELSE,0	8
0x4000e50	          0x4889f0	                            mov rax, rsi	      1801	cache.c	FUNCTION_82
0x4000e53	          0x4889d6	                            mov rsi, rdx	      1801	cache.c	FUNCTION_82
0x4000e56	          0x4889ca	                            mov rdx, rcx	      1801	cache.c	FUNCTION_82
0x4000e59	        0x488b4f20	            mov rcx, qword [rdi + 0x20] 	      1802	cache.c	FUNCTION_82	CALL_2
0x4000e5d	          0x4889c7	                            mov rdi, rax	      1804	cache.c	FUNCTION_82	CALL_3
0x4000e60	    0x488b89400200	           mov rcx, qword [rcx + 0x240] 	      1804	cache.c	FUNCTION_82	CALL_3
0x4000e67	        0x488b4978	            mov rcx, qword [rcx + 0x78] 	      1804	cache.c	FUNCTION_82	CALL_3
0x4000e6b	      0xe920ffffff	              jmp sym.read_flush.isra.26	      1804	cache.c	FUNCTION_82	CALL_3
