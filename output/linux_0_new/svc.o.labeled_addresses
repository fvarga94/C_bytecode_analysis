svc_create	CALL,1:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0:functions,0	3
0x40015f0	          0x4889d1	                            mov rcx, rdx	       491	svc.c	FUNCTION_19	CALL_1
0x40015f3	      0xba01000000	                              mov edx, 1	       491	svc.c	FUNCTION_19	CALL_1
0x40015f8	      0xe923feffff	                    jmp sym.__svc_create	       491	svc.c	FUNCTION_19	CALL_1
svc_pool_map_put	CALL,4:ELSE,0:DO,0:IF,1:FOR,0:WHILE,0:SWITCH,0:functions,0	13
0x40001d0	    0x48c7c7000000	                              mov rdi, 0	       271	svc.c	FUNCTION_8	CALL_1
0x40001d7	      0xe800000000	                          call 0x40001dc	       271	svc.c	FUNCTION_8	CALL_1
0x40001dc	    0x832d00000000	               sub dword [0x040001e3], 1	       273	svc.c	FUNCTION_8	IF_1
0x40001e3	            0x7538	                           jne 0x400021d	       273	svc.c	FUNCTION_8	IF_1
0x40001e5	    0x488b3d000000	            mov rdi, qword [0x040001ec] 	       274	svc.c	FUNCTION_8	IF_1	CALL_2
0x40001ec	      0xe800000000	                          call 0x40001f1	       274	svc.c	FUNCTION_8	IF_1	CALL_2
0x40001f1	    0x488b3d000000	            mov rdi, qword [0x040001f8] 	       276	svc.c	FUNCTION_8	IF_1	CALL_3
0x40001f8	    0x48c705000000	               mov qword [0x04000203], 0	       275	svc.c	FUNCTION_8	IF_1
0x4000203	      0xe800000000	                          call 0x4000208	       276	svc.c	FUNCTION_8	IF_1	CALL_3
0x4000208	    0x48c705000000	               mov qword [0x04000213], 0	       277	svc.c	FUNCTION_8	IF_1
0x4000213	    0xc70500000000	               mov dword [0x0400021d], 0	       278	svc.c	FUNCTION_8	IF_1
0x400021d	    0x48c7c7000000	                              mov rdi, 0	       281	svc.c	FUNCTION_8	CALL_4
0x4000224	      0xe900000000	                           jmp 0x4000229	       281	svc.c	FUNCTION_8	CALL_4
svc_register	CALL,4:ELSE,0:DO,0:IF,6:FOR,2:WHILE,0:SWITCH,0:functions,0	147
0x4001aa0	            0x4157	                                push r15	      1009	svc.c	FUNCTION_39
0x4001aa2	            0x4156	                                push r14	      1009	svc.c	FUNCTION_39
0x4001aa4	            0x4155	                                push r13	      1009	svc.c	FUNCTION_39
0x4001aa6	            0x4154	                                push r12	      1009	svc.c	FUNCTION_39
0x4001aa8	              0x55	                                push rbp	      1009	svc.c	FUNCTION_39
0x4001aa9	              0x53	                                push rbx	      1009	svc.c	FUNCTION_39
0x4001aaa	        0x4883ec40	                           sub rsp, 0x40	      1009	svc.c	FUNCTION_39
0x4001aae	    0x65488b042528	                mov rax, qword gs:[0x28]	      1009	svc.c	FUNCTION_39
0x4001ab7	      0x4889442438	             mov qword [rsp + 0x38], rax	      1009	svc.c	FUNCTION_39
0x4001abc	            0x31c0	                            xor eax, eax	      1009	svc.c	FUNCTION_39
0x4001abe	          0x4489c0	                            mov eax, r8d	      1015	svc.c	FUNCTION_39	CALL_1
0x4001ac1	        0x48893424	                    mov qword [rsp], rsi	      1009	svc.c	FUNCTION_39
0x4001ac5	          0x6609c8	                               or ax, cx	      1015	svc.c	FUNCTION_39	CALL_1
0x4001ac8	     0xf8430020000	                            je 0x4001cfe	      1015	svc.c	FUNCTION_39	CALL_1
0x4001ace	          0x4c8b27	                    mov r12, qword [rdi]	      1019	svc.c	FUNCTION_39	FOR_1
0x4001ad1	          0x4589c5	                           mov r13d, r8d	      1019	svc.c	FUNCTION_39	FOR_1
0x4001ad4	            0x31c0	                            xor eax, eax	      1013	svc.c	FUNCTION_39
0x4001ad6	          0x4531c0	                            xor r8d, r8d	      1019	svc.c	FUNCTION_39	FOR_1
0x4001ad9	          0x4d85e4	                           test r12, r12	      1019	svc.c	FUNCTION_39	FOR_1
0x4001adc	     0xf848f010000	                            je 0x4001c71	      1019	svc.c	FUNCTION_39	FOR_1
0x4001ae2	        0x410fb7c5	                         movzx eax, r13w	       889	svc.c	FUNCTION_36	CALL_2
0x4001ae6	          0x4189d7	                           mov r15d, edx	       889	svc.c	FUNCTION_36	CALL_2
0x4001ae9	          0x4189ce	                           mov r14d, ecx	       889	svc.c	FUNCTION_36	CALL_2
0x4001aec	        0x89442414	             mov dword [rsp + 0x14], eax	       889	svc.c	FUNCTION_36	CALL_2
0x4001af0	      0x6641c1c508	                             rol r13w, 8	       889	svc.c	FUNCTION_36	CALL_2
0x4001af5	        0x410fb7c6	                         movzx eax, r14w	       913	svc.c	FUNCTION_36	CALL_4
0x4001af9	            0x31db	                            xor ebx, ebx	      1020	svc.c	FUNCTION_39	FOR_1	FOR_2
0x4001afb	        0x89442410	             mov dword [rsp + 0x10], eax	       913	svc.c	FUNCTION_36	CALL_4
0x4001aff	      0x418b442414	            mov eax, dword [r12 + 0x14] 	      1020	svc.c	FUNCTION_39	FOR_1	FOR_2
0x4001b04	            0x85c0	                           test eax, eax	      1020	svc.c	FUNCTION_39	FOR_1	FOR_2
0x4001b06	     0xf8586000000	                           jne 0x4001b92	      1020	svc.c	FUNCTION_39	FOR_1	FOR_2
0x4001b0c	      0xe950010000	                           jmp 0x4001c61	      1020	svc.c	FUNCTION_39	FOR_1	FOR_2
0x4001b11	        0x4183ff0a	                           cmp r15d, 0xa	       981	svc.c	FUNCTION_38	SWITCH_1
0x4001b15	     0xf8579010000	                           jne 0x4001c94	       981	svc.c	FUNCTION_38	SWITCH_1
0x4001b1b	      0xba0a000000	                            mov edx, 0xa	       934	svc.c	FUNCTION_37
0x4001b20	      0x664183fe06	                             cmp r14w, 6	       942	svc.c	FUNCTION_37	SWITCH_1
0x4001b25	    0x48c744241c00	               mov qword [rsp + 0x1c], 0	       934	svc.c	FUNCTION_37
0x4001b2e	    0x48c744242400	               mov qword [rsp + 0x24], 0	       934	svc.c	FUNCTION_37
0x4001b37	    0x48c744242c00	               mov qword [rsp + 0x2c], 0	       934	svc.c	FUNCTION_37
0x4001b40	    0xc74424340000	               mov dword [rsp + 0x34], 0	       934	svc.c	FUNCTION_37
0x4001b48	      0x668954241c	               mov word [rsp + 0x1c], dx	       934	svc.c	FUNCTION_37
0x4001b4d	    0x6644896c241e	             mov word [rsp + 0x1e], r13w	       934	svc.c	FUNCTION_37
0x4001b53	     0xf846b010000	                            je 0x4001cc4	       942	svc.c	FUNCTION_37	SWITCH_1
0x4001b59	      0x664183fe11	                          cmp r14w, 0x11	       942	svc.c	FUNCTION_37	SWITCH_1
0x4001b5e	    0x49c7c0000000	                               mov r8, 0	       944	svc.c	FUNCTION_37	SWITCH_1
0x4001b65	     0xf8460010000	                            je 0x4001ccb	       942	svc.c	FUNCTION_37	SWITCH_1
0x4001b6b	    0x41b8a4ffffff	                     mov r8d, 0xffffffa4	       950	svc.c	FUNCTION_37	SWITCH_1
0x4001b71	        0x807d1d00	                cmp byte [rbp + 0x1d], 0	      1047	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_5
0x4001b75	     0xf85d5000000	                           jne 0x4001c50	      1047	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_5
0x4001b7b	          0x4585c0	                           test r8d, r8d	      1052	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_6
0x4001b7e	     0xf8886010000	                            js 0x4001d0a	      1052	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_6
0x4001b84	          0x83c301	                              add ebx, 1	      1020	svc.c	FUNCTION_39	FOR_1	FOR_2
0x4001b87	      0x41395c2414	            cmp dword [r12 + 0x14], ebx 	      1020	svc.c	FUNCTION_39	FOR_1	FOR_2
0x4001b8c	     0xf86cf000000	                           jbe 0x4001c61	      1020	svc.c	FUNCTION_39	FOR_1	FOR_2
0x4001b92	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      1021	svc.c	FUNCTION_39	FOR_1	FOR_2
0x4001b97	            0x89d8	                            mov eax, ebx	      1021	svc.c	FUNCTION_39	FOR_1	FOR_2
0x4001b99	        0x488b2cc2	            mov rbp, qword [rdx + rax*8]	      1021	svc.c	FUNCTION_39	FOR_1	FOR_2
0x4001b9d	          0x4885ed	                           test rbp, rbp	      1022	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_2
0x4001ba0	            0x74e2	                            je 0x4001b84	      1022	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_2
0x4001ba2	        0x807d1c00	                cmp byte [rbp + 0x1c], 0	      1034	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x4001ba6	            0x75dc	                           jne 0x4001b84	      1034	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x4001ba8	      0x664183fe11	                          cmp r14w, 0x11	      1041	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_4
0x4001bad	            0x7506	                           jne 0x4001bb5	      1041	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_4
0x4001baf	        0x807d1e00	                cmp byte [rbp + 0x1e], 0	      1041	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_4
0x4001bb3	            0x75cf	                           jne 0x4001b84	      1041	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_4
0x4001bb5	        0x4183ff02	                             cmp r15d, 2	       981	svc.c	FUNCTION_38	SWITCH_1
0x4001bb9	      0x458b5c2408	               mov r11d, dword [r12 + 8]	      1044	svc.c	FUNCTION_39	FOR_1	FOR_2	CALL_3
0x4001bbe	     0xf854dffffff	                           jne 0x4001b11	       981	svc.c	FUNCTION_38	SWITCH_1
0x4001bc4	      0xb902000000	                              mov ecx, 2	       886	svc.c	FUNCTION_36
0x4001bc9	      0x664183fe06	                             cmp r14w, 6	       894	svc.c	FUNCTION_36	SWITCH_1
0x4001bce	    0x48c744241c00	               mov qword [rsp + 0x1c], 0	       886	svc.c	FUNCTION_36
0x4001bd7	    0x48c744242400	               mov qword [rsp + 0x24], 0	       886	svc.c	FUNCTION_36
0x4001be0	      0x66894c241c	               mov word [rsp + 0x1c], cx	       886	svc.c	FUNCTION_36
0x4001be5	    0x6644896c241e	             mov word [rsp + 0x1e], r13w	       886	svc.c	FUNCTION_36
0x4001beb	     0xf8401010000	                            je 0x4001cf2	       894	svc.c	FUNCTION_36	SWITCH_1
0x4001bf1	      0x664183fe11	                          cmp r14w, 0x11	       894	svc.c	FUNCTION_36	SWITCH_1
0x4001bf6	    0x49c7c0000000	                               mov r8, 0	       896	svc.c	FUNCTION_36	SWITCH_1
0x4001bfd	     0xf8568ffffff	                           jne 0x4001b6b	       894	svc.c	FUNCTION_36	SWITCH_1
0x4001c03	        0x488b3c24	                    mov rdi, qword [rsp]	       905	svc.c	FUNCTION_36	CALL_3
0x4001c07	      0x488d4c241c	                   lea rcx, [rsp + 0x1c]	       905	svc.c	FUNCTION_36	CALL_3
0x4001c0c	          0x4489de	                           mov esi, r11d	       905	svc.c	FUNCTION_36	CALL_3
0x4001c0f	            0x89da	                            mov edx, ebx	       905	svc.c	FUNCTION_36	CALL_3
0x4001c11	      0x44895c240c	             mov dword [rsp + 0xc], r11d	       905	svc.c	FUNCTION_36	CALL_3
0x4001c16	      0xe800000000	                          call 0x4001c1b	       905	svc.c	FUNCTION_36	CALL_3
0x4001c1b	          0x83f8a3	             cmp eax, 0xffffffffffffffa3	       912	svc.c	FUNCTION_36	IF_1
0x4001c1e	          0x4189c0	                            mov r8d, eax	       905	svc.c	FUNCTION_36	CALL_3
0x4001c21	      0x448b5c240c	            mov r11d, dword [rsp + 0xc] 	       912	svc.c	FUNCTION_36	IF_1
0x4001c26	     0xf8545ffffff	                           jne 0x4001b71	       912	svc.c	FUNCTION_36	IF_1
0x4001c2c	      0x448b442414	            mov r8d, dword [rsp + 0x14] 	       913	svc.c	FUNCTION_36	CALL_4
0x4001c31	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	       913	svc.c	FUNCTION_36	CALL_4
0x4001c35	            0x89da	                            mov edx, ebx	       913	svc.c	FUNCTION_36	CALL_4
0x4001c37	        0x488b3c24	                    mov rdi, qword [rsp]	       913	svc.c	FUNCTION_36	CALL_4
0x4001c3b	          0x4489de	                           mov esi, r11d	       913	svc.c	FUNCTION_36	CALL_4
0x4001c3e	      0xe800000000	                          call 0x4001c43	       913	svc.c	FUNCTION_36	CALL_4
0x4001c43	        0x807d1d00	                cmp byte [rbp + 0x1d], 0	      1047	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_5
0x4001c47	          0x4189c0	                            mov r8d, eax	       913	svc.c	FUNCTION_36	CALL_4
0x4001c4a	     0xf842bffffff	                            je 0x4001b7b	      1047	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_5
0x4001c50	          0x4531c0	                            xor r8d, r8d	      1048	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_5
0x4001c53	          0x83c301	                              add ebx, 1	      1020	svc.c	FUNCTION_39	FOR_1	FOR_2
0x4001c56	      0x41395c2414	            cmp dword [r12 + 0x14], ebx 	      1020	svc.c	FUNCTION_39	FOR_1	FOR_2
0x4001c5b	     0xf8731ffffff	                            ja 0x4001b92	      1020	svc.c	FUNCTION_39	FOR_1	FOR_2
0x4001c61	        0x4d8b2424	                    mov r12, qword [r12]	      1019	svc.c	FUNCTION_39	FOR_1
0x4001c65	          0x4d85e4	                           test r12, r12	      1019	svc.c	FUNCTION_39	FOR_1
0x4001c68	     0xf8587feffff	                           jne 0x4001af5	      1019	svc.c	FUNCTION_39	FOR_1
0x4001c6e	          0x4489c0	                            mov eax, r8d	      1019	svc.c	FUNCTION_39	FOR_1
0x4001c71	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1062	svc.c	FUNCTION_39
0x4001c76	    0x654833342528	                xor rsi, qword gs:[0x28]	      1062	svc.c	FUNCTION_39
0x4001c7f	     0xf858c000000	                           jne 0x4001d11	      1062	svc.c	FUNCTION_39
0x4001c85	        0x4883c440	                           add rsp, 0x40	      1062	svc.c	FUNCTION_39
0x4001c89	              0x5b	                                 pop rbx	      1062	svc.c	FUNCTION_39
0x4001c8a	              0x5d	                                 pop rbp	      1062	svc.c	FUNCTION_39
0x4001c8b	            0x415c	                                 pop r12	      1062	svc.c	FUNCTION_39
0x4001c8d	            0x415d	                                 pop r13	      1062	svc.c	FUNCTION_39
0x4001c8f	            0x415e	                                 pop r14	      1062	svc.c	FUNCTION_39
0x4001c91	            0x415f	                                 pop r15	      1062	svc.c	FUNCTION_39
0x4001c93	              0xc3	                                     ret	      1062	svc.c	FUNCTION_39
0x4001c94	        0x807d1d00	                cmp byte [rbp + 0x1d], 0	      1047	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_5
0x4001c98	            0x75b6	                           jne 0x4001c50	      1047	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_5
0x4001c9a	      0xb961000000	                           mov ecx, 0x61	      1047	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_5
0x4001c9f	    0x41b89fffffff	                     mov r8d, 0xffffff9f	       979	svc.c	FUNCTION_38
0x4001ca5	      0x498b742420	            mov rsi, qword [r12 + 0x20] 	      1053	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_6	CALL_4
0x4001caa	            0x89da	                            mov edx, ebx	      1053	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_6	CALL_4
0x4001cac	    0x48c7c7000000	                              mov rdi, 0	      1053	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_6	CALL_4
0x4001cb3	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1053	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_6	CALL_4
0x4001cb8	      0xe800000000	                          call 0x4001cbd	      1053	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_6	CALL_4
0x4001cbd	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1056	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_6
0x4001cc2	            0xeb9d	                           jmp 0x4001c61	      1056	svc.c	FUNCTION_39	FOR_1	FOR_2	IF_6
0x4001cc4	    0x49c7c0000000	                               mov r8, 0	       947	svc.c	FUNCTION_37	SWITCH_1
0x4001ccb	        0x488b3c24	                    mov rdi, qword [rsp]	       953	svc.c	FUNCTION_37	CALL_2
0x4001ccf	      0x488d4c241c	                   lea rcx, [rsp + 0x1c]	       953	svc.c	FUNCTION_37	CALL_2
0x4001cd4	            0x89da	                            mov edx, ebx	       953	svc.c	FUNCTION_37	CALL_2
0x4001cd6	          0x4489de	                           mov esi, r11d	       953	svc.c	FUNCTION_37	CALL_2
0x4001cd9	      0xe800000000	                          call 0x4001cde	       953	svc.c	FUNCTION_37	CALL_2
0x4001cde	          0x4189c0	                            mov r8d, eax	       953	svc.c	FUNCTION_37	CALL_2
0x4001ce1	          0x83f8a3	             cmp eax, 0xffffffffffffffa3	       961	svc.c	FUNCTION_37	IF_1
0x4001ce4	      0xb89fffffff	                     mov eax, 0xffffff9f	       961	svc.c	FUNCTION_37	IF_1
0x4001ce9	        0x440f44c0	                          cmove r8d, eax	       961	svc.c	FUNCTION_37	IF_1
0x4001ced	      0xe97ffeffff	                           jmp 0x4001b71	       961	svc.c	FUNCTION_37	IF_1
0x4001cf2	    0x49c7c0000000	                               mov r8, 0	       899	svc.c	FUNCTION_36	SWITCH_1
0x4001cf9	      0xe905ffffff	                           jmp 0x4001c03	       899	svc.c	FUNCTION_36	SWITCH_1
0x4001cfe	             0xf0b	                                     ud2	       899	svc.c	FUNCTION_36	SWITCH_1
0x4001d00	      0xb8eaffffff	                     mov eax, 0xffffffea	      1017	svc.c	FUNCTION_39	IF_1
0x4001d05	      0xe967ffffff	                           jmp 0x4001c71	      1017	svc.c	FUNCTION_39	IF_1
0x4001d0a	          0x4489c1	                            mov ecx, r8d	      1017	svc.c	FUNCTION_39	IF_1
0x4001d0d	            0xf7d9	                                 neg ecx	      1017	svc.c	FUNCTION_39	IF_1
0x4001d0f	            0xeb94	                           jmp 0x4001ca5	      1017	svc.c	FUNCTION_39	IF_1
0x4001d11	      0xe800000000	                  call section_end..text	      1062	svc.c	FUNCTION_39
param_set_pool_mode	CALL,6:ELSE,4:DO,0:IF,5:FOR,0:WHILE,0:SWITCH,0:functions,0	50
0x4000060	              0x55	                                push rbp	        54	svc.c	FUNCTION_1
0x4000061	              0x53	                                push rbx	        54	svc.c	FUNCTION_1
0x4000062	          0x4889fb	                            mov rbx, rdi	        54	svc.c	FUNCTION_1
0x4000065	    0x48c7c7000000	                              mov rdi, 0	        59	svc.c	FUNCTION_1	CALL_1
0x400006c	        0x488b6e20	            mov rbp, qword [rsi + 0x20] 	        55	svc.c	FUNCTION_1
0x4000070	      0xe800000000	                          call 0x4000075	        59	svc.c	FUNCTION_1	CALL_1
0x4000075	    0x8b0500000000	            mov eax, dword [0x0400007b] 	        62	svc.c	FUNCTION_1	IF_1
0x400007b	            0x85c0	                           test eax, eax	        62	svc.c	FUNCTION_1	IF_1
0x400007d	     0xf8587000000	                           jne 0x400010a	        62	svc.c	FUNCTION_1	IF_1
0x4000083	      0xb904000000	                              mov ecx, 4	        66	svc.c	FUNCTION_1	IF_2	CALL_2
0x4000088	    0x48c7c7000000	                              mov rdi, 0	        66	svc.c	FUNCTION_1	IF_2	CALL_2
0x400008f	          0x4889de	                            mov rsi, rbx	        66	svc.c	FUNCTION_1	IF_2	CALL_2
0x4000092	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        66	svc.c	FUNCTION_1	IF_2	CALL_2
0x4000094	            0x745e	                            je 0x40000f4	        66	svc.c	FUNCTION_1	IF_2	CALL_2
0x4000096	      0xb906000000	                              mov ecx, 6	        68	svc.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x400009b	    0x48c7c7000000	                              mov rdi, 0	        68	svc.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000a2	          0x4889de	                            mov rsi, rbx	        68	svc.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000a5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        68	svc.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000a7	            0x7440	                            je 0x40000e9	        68	svc.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000a9	      0xb906000000	                              mov ecx, 6	        70	svc.c	FUNCTION_1	ELSE_2	IF_4	CALL_4
0x40000ae	    0x48c7c7000000	                              mov rdi, 0	        70	svc.c	FUNCTION_1	ELSE_2	IF_4	CALL_4
0x40000b5	          0x4889de	                            mov rsi, rbx	        70	svc.c	FUNCTION_1	ELSE_2	IF_4	CALL_4
0x40000b8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        70	svc.c	FUNCTION_1	ELSE_2	IF_4	CALL_4
0x40000ba	            0x7443	                            je 0x40000ff	        70	svc.c	FUNCTION_1	ELSE_2	IF_4	CALL_4
0x40000bc	      0xb907000000	                              mov ecx, 7	        72	svc.c	FUNCTION_1	ELSE_3	IF_5	CALL_5
0x40000c1	    0x48c7c7000000	                              mov rdi, 0	        72	svc.c	FUNCTION_1	ELSE_3	IF_5	CALL_5
0x40000c8	          0x4889de	                            mov rsi, rbx	        72	svc.c	FUNCTION_1	ELSE_3	IF_5	CALL_5
0x40000cb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        72	svc.c	FUNCTION_1	ELSE_3	IF_5	CALL_5
0x40000cd	            0x7542	                           jne 0x4000111	        72	svc.c	FUNCTION_1	ELSE_3	IF_5	CALL_5
0x40000cf	    0xc74500020000	                      mov dword [rbp], 2	        73	svc.c	FUNCTION_1	ELSE_3	IF_5
0x40000d6	            0x31db	                            xor ebx, ebx	        65	svc.c	FUNCTION_1
0x40000d8	    0x48c7c7000000	                              mov rdi, 0	        78	svc.c	FUNCTION_1	CALL_6
0x40000df	      0xe800000000	                          call 0x40000e4	        78	svc.c	FUNCTION_1	CALL_6
0x40000e4	            0x89d8	                            mov eax, ebx	        80	svc.c	FUNCTION_1
0x40000e6	              0x5b	                                 pop rbx	        80	svc.c	FUNCTION_1
0x40000e7	              0x5d	                                 pop rbp	        80	svc.c	FUNCTION_1
0x40000e8	              0xc3	                                     ret	        80	svc.c	FUNCTION_1
0x40000e9	    0xc74500000000	                      mov dword [rbp], 0	        69	svc.c	FUNCTION_1	ELSE_1	IF_3
0x40000f0	            0x31db	                            xor ebx, ebx	        65	svc.c	FUNCTION_1
0x40000f2	            0xebe4	                           jmp 0x40000d8	        65	svc.c	FUNCTION_1
0x40000f4	    0xc74500ffffff	            mov dword [rbp], 0xffffffff 	        67	svc.c	FUNCTION_1	IF_2
0x40000fb	            0x31db	                            xor ebx, ebx	        65	svc.c	FUNCTION_1
0x40000fd	            0xebd9	                           jmp 0x40000d8	        65	svc.c	FUNCTION_1
0x40000ff	    0xc74500010000	                      mov dword [rbp], 1	        71	svc.c	FUNCTION_1	ELSE_2	IF_4
0x4000106	            0x31db	                            xor ebx, ebx	        65	svc.c	FUNCTION_1
0x4000108	            0xebce	                           jmp 0x40000d8	        65	svc.c	FUNCTION_1
0x400010a	      0xbbf0ffffff	                     mov ebx, 0xfffffff0	        61	svc.c	FUNCTION_1
0x400010f	            0xebc7	                           jmp 0x40000d8	        61	svc.c	FUNCTION_1
0x4000111	      0xbbeaffffff	                     mov ebx, 0xffffffea	        75	svc.c	FUNCTION_1	ELSE_4
0x4000116	            0xebc0	                           jmp 0x40000d8	        75	svc.c	FUNCTION_1	ELSE_4
svc_rpcb_cleanup	CALL,2:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0:functions,0	6
0x4000cc0	              0x53	                                push rbx	       373	svc.c	FUNCTION_13
0x4000cc1	          0x4889f3	                            mov rbx, rsi	       373	svc.c	FUNCTION_13
0x4000cc4	      0xe8e7feffff	         call sym.svc_unregister.isra.12	       374	svc.c	FUNCTION_13	CALL_1
0x4000cc9	          0x4889df	                            mov rdi, rbx	       375	svc.c	FUNCTION_13	CALL_2
0x4000ccc	              0x5b	                                 pop rbx	       376	svc.c	FUNCTION_13
0x4000ccd	      0xe900000000	                           jmp 0x4000cd2	       375	svc.c	FUNCTION_13	CALL_2
svc_max_payload	CALL,0:ELSE,0:DO,0:IF,1:FOR,0:WHILE,0:SWITCH,0:functions,0	8
0x4000040	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      1529	svc.c	FUNCTION_47
0x4000044	    0x488b97380100	           mov rdx, qword [rdi + 0x138] 	      1531	svc.c	FUNCTION_47	IF_1
0x400004b	          0x488b00	                    mov rax, qword [rax]	      1529	svc.c	FUNCTION_47
0x400004e	          0x8b521c	            mov edx, dword [rdx + 0x1c] 	      1531	svc.c	FUNCTION_47	IF_1
0x4000051	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1529	svc.c	FUNCTION_47
0x4000054	            0x39d0	                            cmp eax, edx	      1533	svc.c	FUNCTION_47
0x4000056	           0xf47c2	                          cmova eax, edx	      1533	svc.c	FUNCTION_47
0x4000059	              0xc3	                                     ret	      1534	svc.c	FUNCTION_47
svc_shutdown_net	CALL,2:ELSE,0:DO,0:IF,1:FOR,0:WHILE,0:SWITCH,0:functions,0	17
0x4000230	              0x55	                                push rbp	       513	svc.c	FUNCTION_21
0x4000231	              0x53	                                push rbx	       513	svc.c	FUNCTION_21
0x4000232	          0x4889fb	                            mov rbx, rdi	       513	svc.c	FUNCTION_21
0x4000235	          0x4889f5	                            mov rbp, rsi	       513	svc.c	FUNCTION_21
0x4000238	      0xe800000000	                          call 0x400023d	       514	svc.c	FUNCTION_21	CALL_1
0x400023d	    0x488b83900000	            mov rax, qword [rbx + 0x90] 	       516	svc.c	FUNCTION_21	IF_1
0x4000244	          0x488b00	                    mov rax, qword [rax]	       516	svc.c	FUNCTION_21	IF_1
0x4000247	          0x4885c0	                           test rax, rax	       516	svc.c	FUNCTION_21	IF_1
0x400024a	            0x740d	                            je 0x4000259	       516	svc.c	FUNCTION_21	IF_1
0x400024c	          0x4889ee	                            mov rsi, rbp	       517	svc.c	FUNCTION_21	CALL_2
0x400024f	          0x4889df	                            mov rdi, rbx	       517	svc.c	FUNCTION_21	CALL_2
0x4000252	              0x5b	                                 pop rbx	       518	svc.c	FUNCTION_21
0x4000253	              0x5d	                                 pop rbp	       518	svc.c	FUNCTION_21
0x4000254	      0xe900000000	                           jmp 0x4000259	       517	svc.c	FUNCTION_21	CALL_2
0x4000259	              0x5b	                                 pop rbx	       518	svc.c	FUNCTION_21
0x400025a	              0x5d	                                 pop rbp	       518	svc.c	FUNCTION_21
0x400025b	              0xc3	                                     ret	       518	svc.c	FUNCTION_21
svc_create_pooled	CALL,3:ELSE,0:DO,0:IF,1:FOR,0:WHILE,0:SWITCH,0:functions,0	24
0x40019e0	            0x4154	                                push r12	       498	svc.c	FUNCTION_20
0x40019e2	              0x55	                                push rbp	       498	svc.c	FUNCTION_20
0x40019e3	          0x4989d4	                            mov r12, rdx	       498	svc.c	FUNCTION_20
0x40019e6	              0x53	                                push rbx	       498	svc.c	FUNCTION_20
0x40019e7	            0x89f5	                            mov ebp, esi	       498	svc.c	FUNCTION_20
0x40019e9	          0x4889fb	                            mov rbx, rdi	       498	svc.c	FUNCTION_20
0x40019ec	        0x4883ec08	                              sub rsp, 8	       498	svc.c	FUNCTION_20
0x40019f0	      0xe800000000	                          call 0x40019f5	       500	svc.c	FUNCTION_20	CALL_1
0x40019f5	          0x4c89e1	                            mov rcx, r12	       502	svc.c	FUNCTION_20	CALL_2
0x40019f8	            0x89c2	                            mov edx, eax	       502	svc.c	FUNCTION_20	CALL_2
0x40019fa	            0x89ee	                            mov esi, ebp	       502	svc.c	FUNCTION_20	CALL_2
0x40019fc	          0x4889df	                            mov rdi, rbx	       502	svc.c	FUNCTION_20	CALL_2
0x40019ff	      0xe81cfaffff	                   call sym.__svc_create	       502	svc.c	FUNCTION_20	CALL_2
0x4001a04	          0x4885c0	                           test rax, rax	       503	svc.c	FUNCTION_20	IF_1
0x4001a07	            0x7409	                            je 0x4001a12	       503	svc.c	FUNCTION_20	IF_1
0x4001a09	        0x4883c408	                              add rsp, 8	       509	svc.c	FUNCTION_20
0x4001a0d	              0x5b	                                 pop rbx	       509	svc.c	FUNCTION_20
0x4001a0e	              0x5d	                                 pop rbp	       509	svc.c	FUNCTION_20
0x4001a0f	            0x415c	                                 pop r12	       509	svc.c	FUNCTION_20
0x4001a11	              0xc3	                                     ret	       509	svc.c	FUNCTION_20
0x4001a12	        0x48890424	                    mov qword [rsp], rax	       509	svc.c	FUNCTION_20
0x4001a16	      0xe800000000	                          call 0x4001a1b	       507	svc.c	FUNCTION_20	CALL_3
0x4001a1b	        0x488b0424	                    mov rax, qword [rsp]	       507	svc.c	FUNCTION_20	CALL_3
0x4001a1f	            0xebe8	                           jmp 0x4001a09	       508	svc.c	FUNCTION_20
svc_fill_write_vector	CALL,6:ELSE,0:DO,0:IF,1:FOR,0:WHILE,1:SWITCH,0:functions,0	43
0x4000120	            0x31c0	                            xor eax, eax	      1555	svc.c	FUNCTION_48
0x4000122	      0x48837e0800	                  cmp qword [rsi + 8], 0	      1556	svc.c	FUNCTION_48	IF_1
0x4000127	    0x4c8d87580a00	                   lea r8, [rdi + 0xa58]	      1548	svc.c	FUNCTION_48
0x400012e	            0x7425	                            je 0x4000155	      1556	svc.c	FUNCTION_48	IF_1
0x4000130	          0x488b06	                    mov rax, qword [rsi]	      1557	svc.c	FUNCTION_48	IF_1
0x4000133	    0x488987580a00	            mov qword [rdi + 0xa58], rax	      1557	svc.c	FUNCTION_48	IF_1
0x400013a	        0x48395608	                cmp qword [rsi + 8], rdx	      1558	svc.c	FUNCTION_48	IF_1	CALL_1
0x400013e	          0x4889d0	                            mov rax, rdx	      1558	svc.c	FUNCTION_48	IF_1	CALL_1
0x4000141	      0x480f464608	             cmovbe rax, qword [rsi + 8]	      1558	svc.c	FUNCTION_48	IF_1	CALL_1
0x4000146	    0x488987600a00	            mov qword [rdi + 0xa60], rax	      1558	svc.c	FUNCTION_48	IF_1	CALL_1
0x400014d	          0x4829c2	                            sub rdx, rax	      1559	svc.c	FUNCTION_48	IF_1
0x4000150	      0xb801000000	                              mov eax, 1	      1560	svc.c	FUNCTION_48	IF_1
0x4000155	    0x8b8fc8010000	           mov ecx, dword [rdi + 0x1c8] 	      1563	svc.c	FUNCTION_48	CALL_2
0x400015b	            0x85c9	                           test ecx, ecx	      1563	svc.c	FUNCTION_48	CALL_2
0x400015d	            0x7561	                           jne 0x40001c0	      1563	svc.c	FUNCTION_48	CALL_2
0x400015f	          0x4885d2	                           test rdx, rdx	      1565	svc.c	FUNCTION_48	WHILE_1
0x4000162	    0x488bbfc00100	           mov rdi, qword [rdi + 0x1c0] 	      1564	svc.c	FUNCTION_48
0x4000169	            0x7450	                            je 0x40001bb	      1565	svc.c	FUNCTION_48	WHILE_1
0x400016b	    0x41b900100000	                         mov r9d, 0x1000	      1567	svc.c	FUNCTION_48	WHILE_1	CALL_4
0x4000171	          0x488b0f	                    mov rcx, qword [rdi]	      1566	svc.c	FUNCTION_48	WHILE_1	CALL_3
0x4000174	    0x482b0d000000	             sub rcx, qword [0x0400017b]	      1566	svc.c	FUNCTION_48	WHILE_1	CALL_3
0x400017b	            0x89c6	                            mov esi, eax	      1566	svc.c	FUNCTION_48	WHILE_1	CALL_3
0x400017d	        0x48c1e604	                              shl rsi, 4	      1566	svc.c	FUNCTION_48	WHILE_1	CALL_3
0x4000181	          0x4c01c6	                             add rsi, r8	      1566	svc.c	FUNCTION_48	WHILE_1	CALL_3
0x4000184	        0x48c1f906	                              sar rcx, 6	      1566	svc.c	FUNCTION_48	WHILE_1	CALL_3
0x4000188	        0x48c1e10c	                            shl rcx, 0xc	      1566	svc.c	FUNCTION_48	WHILE_1	CALL_3
0x400018c	    0x48030d000000	             add rcx, qword [0x04000193]	      1566	svc.c	FUNCTION_48	WHILE_1	CALL_3
0x4000193	    0x4881fa001000	                         cmp rdx, 0x1000	      1567	svc.c	FUNCTION_48	WHILE_1	CALL_4
0x400019a	          0x48890e	                    mov qword [rsi], rcx	      1566	svc.c	FUNCTION_48	WHILE_1	CALL_3
0x400019d	          0x4c89c9	                             mov rcx, r9	      1567	svc.c	FUNCTION_48	WHILE_1	CALL_4
0x40001a0	        0x480f46ca	                         cmovbe rcx, rdx	      1567	svc.c	FUNCTION_48	WHILE_1	CALL_4
0x40001a4	          0x83c001	                              add eax, 1	      1569	svc.c	FUNCTION_48	WHILE_1
0x40001a7	        0x4883c708	                              add rdi, 8	      1571	svc.c	FUNCTION_48	WHILE_1
0x40001ab	          0x4829ca	                            sub rdx, rcx	      1565	svc.c	FUNCTION_48	WHILE_1
0x40001ae	        0x48894e08	                mov qword [rsi + 8], rcx	      1567	svc.c	FUNCTION_48	WHILE_1	CALL_4
0x40001b2	            0x75bd	                           jne 0x4000171	      1565	svc.c	FUNCTION_48	WHILE_1
0x40001b4	      0x3d03010000	                          cmp eax, 0x103	      1574	svc.c	FUNCTION_48	CALL_6
0x40001b9	            0x7702	                            ja 0x40001bd	      1574	svc.c	FUNCTION_48	CALL_6
0x40001bb	            0xf3c3	                                     ret	      1576	svc.c	FUNCTION_48
0x40001bd	             0xf0b	                                     ud2	      1576	svc.c	FUNCTION_48
0x40001bf	              0xc3	                                     ret	      1576	svc.c	FUNCTION_48
0x40001c0	             0xf0b	                                     ud2	      1576	svc.c	FUNCTION_48
0x40001c2	            0xeb9b	                           jmp 0x400015f	      1563	svc.c	FUNCTION_48	CALL_2
