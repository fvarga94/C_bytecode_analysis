intel_dp_add_mst_connector	WHILE,0:CALL,11:IF,3:functions,1:ELSE,0:SWITCH,0:DO,0:FOR,0	79
0x4000200	            0x4157	                                push r15	       435	intel_dp_mst.c	FUNCTION_19
0x4000202	            0x4156	                                push r14	       435	intel_dp_mst.c	FUNCTION_19
0x4000204	    0x4c8dbf10faff	                  lea r15, [rdi - 0x5f0]	       436	intel_dp_mst.c	FUNCTION_19	CALL_1
0x400020b	            0x4155	                                push r13	       435	intel_dp_mst.c	FUNCTION_19
0x400020d	            0x4154	                                push r12	       435	intel_dp_mst.c	FUNCTION_19
0x400020f	          0x4989d6	                            mov r14, rdx	       435	intel_dp_mst.c	FUNCTION_19
0x4000212	              0x55	                                push rbp	       435	intel_dp_mst.c	FUNCTION_19
0x4000213	              0x53	                                push rbx	       435	intel_dp_mst.c	FUNCTION_19
0x4000214	          0x4889f5	                            mov rbp, rsi	       435	intel_dp_mst.c	FUNCTION_19
0x4000217	          0x4889fb	                            mov rbx, rdi	       435	intel_dp_mst.c	FUNCTION_19
0x400021a	    0x4c8baf08f9ff	            mov r13, qword [rdi - 0x6f8]	       438	intel_dp_mst.c	FUNCTION_19
0x4000221	      0xe800000000	                          call 0x4000226	       445	intel_dp_mst.c	FUNCTION_19	CALL_4
0x4000226	          0x4885c0	                           test rax, rax	       446	intel_dp_mst.c	FUNCTION_19	IF_1
0x4000229	     0xf84d7000000	                            je 0x4000306	       446	intel_dp_mst.c	FUNCTION_19	IF_1
0x400022f	      0xb90a000000	                            mov ecx, 0xa	       450	intel_dp_mst.c	FUNCTION_19	CALL_5
0x4000234	    0x48c7c2000000	                              mov rdx, 0	       450	intel_dp_mst.c	FUNCTION_19	CALL_5
0x400023b	          0x4889c6	                            mov rsi, rax	       450	intel_dp_mst.c	FUNCTION_19	CALL_5
0x400023e	          0x4c89ef	                            mov rdi, r13	       450	intel_dp_mst.c	FUNCTION_19	CALL_5
0x4000241	          0x4989c4	                            mov r12, rax	       450	intel_dp_mst.c	FUNCTION_19	CALL_5
0x4000244	      0xe800000000	                          call 0x4000249	       450	intel_dp_mst.c	FUNCTION_19	CALL_5
0x4000249	            0x85c0	                           test eax, eax	       452	intel_dp_mst.c	FUNCTION_19	IF_2
0x400024b	     0xf85b9000000	                           jne 0x400030a	       452	intel_dp_mst.c	FUNCTION_19	IF_2
0x4000251	    0x4989ac24c804	            mov qword [r12 + 0x4c8], rbp	       461	intel_dp_mst.c	FUNCTION_19
0x4000259	    0x49c784240803	              mov qword [r12 + 0x308], 0	       987	drm_modeset_helper_vtables.h	FUNCTION_29
0x4000265	        0x4883eb18	                           sub rbx, 0x18	       987	drm_modeset_helper_vtables.h	FUNCTION_29
0x4000269	    0x49c784243004	              mov qword [r12 + 0x430], 0	       459	intel_dp_mst.c	FUNCTION_19
0x4000275	    0x4d89bc24d004	            mov qword [r12 + 0x4d0], r15	       460	intel_dp_mst.c	FUNCTION_19
0x400027d	            0x31ed	                            xor ebp, ebp	       463	intel_dp_mst.c	FUNCTION_19	FUNCTION_1
0x400027f	    0x4180bd700600	               cmp byte [r13 + 0x670], 0	       463	intel_dp_mst.c	FUNCTION_19	FUNCTION_1
0x4000287	            0x7515	                           jne 0x400029e	       463	intel_dp_mst.c	FUNCTION_19	FUNCTION_1
0x4000289	            0xeb37	                           jmp 0x40002c2	       463	intel_dp_mst.c	FUNCTION_19	FUNCTION_1
0x400028b	    0x410fb6857006	          movzx eax, byte [r13 + 0x670] 	       463	intel_dp_mst.c	FUNCTION_19	FUNCTION_1
0x4000293	          0x83c501	                              add ebp, 1	       463	intel_dp_mst.c	FUNCTION_19	FUNCTION_1
0x4000296	        0x4883c308	                              add rbx, 8	       463	intel_dp_mst.c	FUNCTION_19	FUNCTION_1
0x400029a	            0x39e8	                            cmp eax, ebp	       463	intel_dp_mst.c	FUNCTION_19	FUNCTION_1
0x400029c	            0x7e24	                           jle 0x40002c2	       463	intel_dp_mst.c	FUNCTION_19	FUNCTION_1
0x400029e	          0x488b33	                    mov rsi, qword [rbx]	       467	intel_dp_mst.c	FUNCTION_19	FUNCTION_1	CALL_1
0x40002a1	          0x4c89e7	                            mov rdi, r12	       467	intel_dp_mst.c	FUNCTION_19	FUNCTION_1	CALL_1
0x40002a4	      0xe800000000	                          call 0x40002a9	       467	intel_dp_mst.c	FUNCTION_19	FUNCTION_1	CALL_1
0x40002a9	            0x85c0	                           test eax, eax	       469	intel_dp_mst.c	FUNCTION_19	FUNCTION_1	IF_1
0x40002ab	            0x74de	                            je 0x400028b	       469	intel_dp_mst.c	FUNCTION_19	FUNCTION_1	IF_1
0x40002ad	          0x4c89e7	                            mov rdi, r12	       483	intel_dp_mst.c	FUNCTION_19	CALL_11
0x40002b0	      0xe800000000	                          call 0x40002b5	       483	intel_dp_mst.c	FUNCTION_19	CALL_11
0x40002b5	            0x31c0	                            xor eax, eax	       484	intel_dp_mst.c	FUNCTION_19
0x40002b7	              0x5b	                                 pop rbx	       485	intel_dp_mst.c	FUNCTION_19
0x40002b8	              0x5d	                                 pop rbp	       485	intel_dp_mst.c	FUNCTION_19
0x40002b9	            0x415c	                                 pop r12	       485	intel_dp_mst.c	FUNCTION_19
0x40002bb	            0x415d	                                 pop r13	       485	intel_dp_mst.c	FUNCTION_19
0x40002bd	            0x415e	                                 pop r14	       485	intel_dp_mst.c	FUNCTION_19
0x40002bf	            0x415f	                                 pop r15	       485	intel_dp_mst.c	FUNCTION_19
0x40002c1	              0xc3	                                     ret	       485	intel_dp_mst.c	FUNCTION_19
0x40002c2	      0x498d5c2428	                   lea rbx, [r12 + 0x28]	       473	intel_dp_mst.c	FUNCTION_19	CALL_8
0x40002c7	    0x498bb5480400	           mov rsi, qword [r13 + 0x448] 	       473	intel_dp_mst.c	FUNCTION_19	CALL_8
0x40002ce	            0x31d2	                            xor edx, edx	       473	intel_dp_mst.c	FUNCTION_19	CALL_8
0x40002d0	          0x4889df	                            mov rdi, rbx	       473	intel_dp_mst.c	FUNCTION_19	CALL_8
0x40002d3	      0xe800000000	                          call 0x40002d8	       473	intel_dp_mst.c	FUNCTION_19	CALL_8
0x40002d8	    0x498bb5500400	           mov rsi, qword [r13 + 0x450] 	       474	intel_dp_mst.c	FUNCTION_19	CALL_9
0x40002df	            0x31d2	                            xor edx, edx	       474	intel_dp_mst.c	FUNCTION_19	CALL_9
0x40002e1	          0x4889df	                            mov rdi, rbx	       474	intel_dp_mst.c	FUNCTION_19	CALL_9
0x40002e4	      0xe800000000	                          call 0x40002e9	       474	intel_dp_mst.c	FUNCTION_19	CALL_9
0x40002e9	          0x4c89f6	                            mov rsi, r14	       476	intel_dp_mst.c	FUNCTION_19	CALL_10
0x40002ec	          0x4c89e7	                            mov rdi, r12	       476	intel_dp_mst.c	FUNCTION_19	CALL_10
0x40002ef	      0xe800000000	                          call 0x40002f4	       476	intel_dp_mst.c	FUNCTION_19	CALL_10
0x40002f4	            0x85c0	                           test eax, eax	       477	intel_dp_mst.c	FUNCTION_19	IF_3
0x40002f6	            0x75b5	                           jne 0x40002ad	       477	intel_dp_mst.c	FUNCTION_19	IF_3
0x40002f8	              0x5b	                                 pop rbx	       485	intel_dp_mst.c	FUNCTION_19
0x40002f9	          0x4c89e0	                            mov rax, r12	       480	intel_dp_mst.c	FUNCTION_19
0x40002fc	              0x5d	                                 pop rbp	       485	intel_dp_mst.c	FUNCTION_19
0x40002fd	            0x415c	                                 pop r12	       485	intel_dp_mst.c	FUNCTION_19
0x40002ff	            0x415d	                                 pop r13	       485	intel_dp_mst.c	FUNCTION_19
0x4000301	            0x415e	                                 pop r14	       485	intel_dp_mst.c	FUNCTION_19
0x4000303	            0x415f	                                 pop r15	       485	intel_dp_mst.c	FUNCTION_19
0x4000305	              0xc3	                                     ret	       485	intel_dp_mst.c	FUNCTION_19
0x4000306	            0x31c0	                            xor eax, eax	       447	intel_dp_mst.c	FUNCTION_19	IF_1
0x4000308	            0xebad	                           jmp 0x40002b7	       447	intel_dp_mst.c	FUNCTION_19	IF_1
0x400030a	          0x4c89e7	                            mov rdi, r12	       453	intel_dp_mst.c	FUNCTION_19	IF_2	CALL_6
0x400030d	      0xe800000000	                          call 0x4000312	       453	intel_dp_mst.c	FUNCTION_19	IF_2	CALL_6
0x4000312	            0x31c0	                            xor eax, eax	       454	intel_dp_mst.c	FUNCTION_19	IF_2
0x4000314	            0xeba1	                           jmp 0x40002b7	       454	intel_dp_mst.c	FUNCTION_19	IF_2
intel_dp_mst_hotplug	WHILE,0:CALL,3:IF,0:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	2
0x4000140	    0x488bbf08f9ff	            mov rdi, qword [rdi - 0x6f8]	       524	intel_dp_mst.c	FUNCTION_22	CALL_3
0x4000147	      0xe900000000	                           jmp 0x400014c	       524	intel_dp_mst.c	FUNCTION_22	CALL_3
intel_dp_destroy_mst_connector	WHILE,0:CALL,8:IF,1:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	28
0x4000150	              0x55	                                push rbp	       500	intel_dp_mst.c	FUNCTION_21
0x4000151	              0x53	                                push rbx	       500	intel_dp_mst.c	FUNCTION_21
0x4000152	      0xbf04000000	                              mov edi, 4	       504	intel_dp_mst.c	FUNCTION_21	CALL_3
0x4000157	        0x488b4e48	            mov rcx, qword [rsi + 0x48] 	       504	intel_dp_mst.c	FUNCTION_21	CALL_3
0x400015b	          0x8b5628	            mov edx, dword [rsi + 0x28] 	       504	intel_dp_mst.c	FUNCTION_21	CALL_3
0x400015e	          0x4889f3	                            mov rbx, rsi	       500	intel_dp_mst.c	FUNCTION_21
0x4000161	          0x488b2e	                    mov rbp, qword [rsi]	       502	intel_dp_mst.c	FUNCTION_21	CALL_2
0x4000164	    0x48c7c6000000	                              mov rsi, 0	       504	intel_dp_mst.c	FUNCTION_21	CALL_3
0x400016b	      0xe800000000	                          call 0x4000170	       504	intel_dp_mst.c	FUNCTION_21	CALL_3
0x4000170	          0x4889df	                            mov rdi, rbx	       505	intel_dp_mst.c	FUNCTION_21	CALL_4
0x4000173	      0xe800000000	                          call 0x4000178	       505	intel_dp_mst.c	FUNCTION_21	CALL_4
0x4000178	    0x488bbd186f00	          mov rdi, qword [rbp + 0x6f18] 	       507	intel_dp_mst.c	FUNCTION_21	IF_1
0x400017f	          0x4885ff	                           test rdi, rdi	       507	intel_dp_mst.c	FUNCTION_21	IF_1
0x4000182	            0x7408	                            je 0x400018c	       507	intel_dp_mst.c	FUNCTION_21	IF_1
0x4000184	          0x4889de	                            mov rsi, rbx	       508	intel_dp_mst.c	FUNCTION_21	IF_1	CALL_5
0x4000187	      0xe800000000	                          call 0x400018c	       508	intel_dp_mst.c	FUNCTION_21	IF_1	CALL_5
0x400018c	          0x488b03	                    mov rax, qword [rbx]	       511	intel_dp_mst.c	FUNCTION_21	CALL_6
0x400018f	            0x31f6	                            xor esi, esi	       511	intel_dp_mst.c	FUNCTION_21	CALL_6
0x4000191	    0x488db8180200	                  lea rdi, [rax + 0x218]	       511	intel_dp_mst.c	FUNCTION_21	CALL_6
0x4000198	      0xe800000000	                          call 0x400019d	       511	intel_dp_mst.c	FUNCTION_21	CALL_6
0x400019d	          0x488b03	                    mov rax, qword [rbx]	       513	intel_dp_mst.c	FUNCTION_21	CALL_7
0x40001a0	    0x48c783d00400	              mov qword [rbx + 0x4d0], 0	       512	intel_dp_mst.c	FUNCTION_21
0x40001ab	    0x488db8180200	                  lea rdi, [rax + 0x218]	       513	intel_dp_mst.c	FUNCTION_21	CALL_7
0x40001b2	      0xe800000000	                          call 0x40001b7	       513	intel_dp_mst.c	FUNCTION_21	CALL_7
0x40001b7	        0x488d7b28	                   lea rdi, [rbx + 0x28]	      1051	drm_connector.h	FUNCTION_49	CALL_1
0x40001bb	              0x5b	                                 pop rbx	       516	intel_dp_mst.c	FUNCTION_21
0x40001bc	              0x5d	                                 pop rbp	       516	intel_dp_mst.c	FUNCTION_21
0x40001bd	      0xe900000000	                           jmp 0x40001c2	      1051	drm_connector.h	FUNCTION_49	CALL_1
intel_dp_mst_encoder_cleanup	WHILE,0:CALL,1:IF,1:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	5
0x4000b60	    0x80bfcb060000	               cmp byte [rdi + 0x6cb], 0	       610	intel_dp_mst.c	FUNCTION_26	IF_1
0x4000b67	            0x7502	                           jne 0x4000b6b	       610	intel_dp_mst.c	FUNCTION_26	IF_1
0x4000b69	            0xf3c3	                                     ret	       610	intel_dp_mst.c	FUNCTION_26	IF_1
0x4000b6b	    0x4881c7f80600	                          add rdi, 0x6f8	       613	intel_dp_mst.c	FUNCTION_26	CALL_1
0x4000b72	      0xe900000000	                   jmp section_end..text	       613	intel_dp_mst.c	FUNCTION_26	CALL_1
intel_mst_atomic_best_encoder	WHILE,0:CALL,2:IF,1:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	9
0x4000090	    0x488b87d00400	           mov rax, qword [rdi + 0x4d0] 	       386	intel_dp_mst.c	FUNCTION_15
0x4000097	        0x488b5608	                mov rdx, qword [rsi + 8]	       387	intel_dp_mst.c	FUNCTION_15	CALL_2
0x400009b	          0x4885c0	                           test rax, rax	       389	intel_dp_mst.c	FUNCTION_15	IF_1
0x400009e	            0x7410	                            je 0x40000b0	       389	intel_dp_mst.c	FUNCTION_15	IF_1
0x40000a0	    0x486392b00400	        movsxd rdx, dword [rdx + 0x4b0] 	       391	intel_dp_mst.c	FUNCTION_15
0x40000a7	    0x488b84d0d805	   mov rax, qword [rax + rdx*8 + 0x5d8] 	       391	intel_dp_mst.c	FUNCTION_15
0x40000af	              0xc3	                                     ret	       391	intel_dp_mst.c	FUNCTION_15
0x40000b0	            0x31c0	                            xor eax, eax	       390	intel_dp_mst.c	FUNCTION_15	IF_1
0x40000b2	              0xc3	                                     ret	       392	intel_dp_mst.c	FUNCTION_15
intel_dp_mst_atomic_check	WHILE,0:CALL,8:IF,3:functions,0:ELSE,1:SWITCH,0:DO,0:FOR,0	57
0x4000320	        0x488b4e20	            mov rcx, qword [rsi + 0x20] 	       103	intel_dp_mst.c	FUNCTION_2
0x4000324	        0x48634770	         movsxd rax, dword [rdi + 0x70] 	       517	drm_atomic.h	FUNCTION_42	CALL_1
0x4000328	            0x31d2	                            xor edx, edx	       517	drm_atomic.h	FUNCTION_42	CALL_1
0x400032a	          0x3b4128	            cmp eax, dword [rcx + 0x28] 	       519	drm_atomic.h	FUNCTION_42	IF_1
0x400032d	            0x7d0c	                           jge 0x400033b	       519	drm_atomic.h	FUNCTION_42	IF_1
0x400032f	        0x48c1e005	                              shl rax, 5	       522	drm_atomic.h	FUNCTION_42
0x4000333	        0x48034130	             add rax, qword [rcx + 0x30]	       522	drm_atomic.h	FUNCTION_42
0x4000337	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       522	drm_atomic.h	FUNCTION_42
0x400033b	        0x488b4208	                mov rax, qword [rdx + 8]	       110	intel_dp_mst.c	FUNCTION_2
0x400033f	          0x4885c0	                           test rax, rax	       111	intel_dp_mst.c	FUNCTION_2	IF_1
0x4000342	            0x7470	                            je 0x40003b4	       111	intel_dp_mst.c	FUNCTION_2	IF_1
0x4000344	              0x55	                                push rbp	       102	intel_dp_mst.c	FUNCTION_2
0x4000345	              0x53	                                push rbx	       102	intel_dp_mst.c	FUNCTION_2
0x4000346	        0x4883ec08	                              sub rsp, 8	       102	intel_dp_mst.c	FUNCTION_2
0x400034a	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	       431	drm_atomic.h	FUNCTION_37	CALL_1
0x4000350	        0x488d0440	                  lea rax, [rax + rax*2]	       431	drm_atomic.h	FUNCTION_37	CALL_1
0x4000354	        0x48c1e004	                              shl rax, 4	       431	drm_atomic.h	FUNCTION_37	CALL_1
0x4000358	        0x48034120	             add rax, qword [rcx + 0x20]	       431	drm_atomic.h	FUNCTION_37	CALL_1
0x400035c	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       431	drm_atomic.h	FUNCTION_37	CALL_1
0x4000360	         0xfb6430a	            movzx eax, byte [rbx + 0xa] 	       893	drm_atomic.h	FUNCTION_45
0x4000364	    0x8babe0020000	           mov ebp, dword [rbx + 0x2e0] 	       115	intel_dp_mst.c	FUNCTION_2	CALL_3
0x400036a	            0xa802	                              test al, 2	       893	drm_atomic.h	FUNCTION_45
0x400036c	            0x7508	                           jne 0x4000376	       893	drm_atomic.h	FUNCTION_45
0x400036e	            0xa804	                              test al, 4	       893	drm_atomic.h	FUNCTION_45
0x4000370	            0x7504	                           jne 0x4000376	       893	drm_atomic.h	FUNCTION_45
0x4000372	            0xa808	                              test al, 8	       893	drm_atomic.h	FUNCTION_45
0x4000374	            0x7435	                            je 0x40003ab	       893	drm_atomic.h	FUNCTION_45
0x4000376	            0x85ed	                           test ebp, ebp	       116	intel_dp_mst.c	FUNCTION_2	IF_2	CALL_4
0x4000378	            0x7e31	                           jle 0x40003ab	       116	intel_dp_mst.c	FUNCTION_2	IF_2	CALL_4
0x400037a	        0x488b4210	            mov rax, qword [rdx + 0x10] 	       121	intel_dp_mst.c	FUNCTION_2	IF_2	CALL_5
0x400037e	          0x4889cf	                            mov rdi, rcx	       123	intel_dp_mst.c	FUNCTION_2	IF_2	CALL_6
0x4000381	            0x89ea	                            mov edx, ebp	       123	intel_dp_mst.c	FUNCTION_2	IF_2	CALL_6
0x4000383	    0x488bb0080100	           mov rsi, qword [rax + 0x108] 	       121	intel_dp_mst.c	FUNCTION_2	IF_2	CALL_5
0x400038a	    0x4881c6f80600	                          add rsi, 0x6f8	       121	intel_dp_mst.c	FUNCTION_2	IF_2	CALL_5
0x4000391	      0xe800000000	                          call 0x4000396	       123	intel_dp_mst.c	FUNCTION_2	IF_2	CALL_6
0x4000396	            0x85c0	                           test eax, eax	       124	intel_dp_mst.c	FUNCTION_2	IF_2	IF_3
0x4000398	            0x751d	                           jne 0x40003b7	       124	intel_dp_mst.c	FUNCTION_2	IF_2	IF_3
0x400039a	    0xc783e0020000	              mov dword [rbx + 0x2e0], 0	       127	intel_dp_mst.c	FUNCTION_2	IF_2	CALL_8
0x40003a4	        0x4883c408	                              add rsp, 8	       130	intel_dp_mst.c	FUNCTION_2
0x40003a8	              0x5b	                                 pop rbx	       130	intel_dp_mst.c	FUNCTION_2
0x40003a9	              0x5d	                                 pop rbp	       130	intel_dp_mst.c	FUNCTION_2
0x40003aa	              0xc3	                                     ret	       130	intel_dp_mst.c	FUNCTION_2
0x40003ab	        0x4883c408	                              add rsp, 8	       130	intel_dp_mst.c	FUNCTION_2
0x40003af	            0x31c0	                            xor eax, eax	       112	intel_dp_mst.c	FUNCTION_2	IF_1
0x40003b1	              0x5b	                                 pop rbx	       130	intel_dp_mst.c	FUNCTION_2
0x40003b2	              0x5d	                                 pop rbp	       130	intel_dp_mst.c	FUNCTION_2
0x40003b3	              0xc3	                                     ret	       130	intel_dp_mst.c	FUNCTION_2
0x40003b4	            0x31c0	                            xor eax, eax	       112	intel_dp_mst.c	FUNCTION_2	IF_1
0x40003b6	              0xc3	                                     ret	       130	intel_dp_mst.c	FUNCTION_2
0x40003b7	            0x89c1	                            mov ecx, eax	       125	intel_dp_mst.c	FUNCTION_2	IF_2	CALL_7
0x40003b9	            0x89ea	                            mov edx, ebp	       125	intel_dp_mst.c	FUNCTION_2	IF_2	CALL_7
0x40003bb	    0x48c7c6000000	                              mov rsi, 0	       125	intel_dp_mst.c	FUNCTION_2	IF_2	CALL_7
0x40003c2	      0xbf04000000	                              mov edi, 4	       125	intel_dp_mst.c	FUNCTION_2	IF_2	CALL_7
0x40003c7	        0x89442404	                mov dword [rsp + 4], eax	       125	intel_dp_mst.c	FUNCTION_2	IF_2	CALL_7
0x40003cb	      0xe800000000	                          call 0x40003d0	       125	intel_dp_mst.c	FUNCTION_2	IF_2	CALL_7
0x40003d0	        0x8b442404	                mov eax, dword [rsp + 4]	       125	intel_dp_mst.c	FUNCTION_2	IF_2	CALL_7
0x40003d4	            0xebce	                           jmp 0x40003a4	       125	intel_dp_mst.c	FUNCTION_2	IF_2	CALL_7
intel_dp_mst_encoder_destroy	WHILE,0:CALL,3:IF,0:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	6
0x40009c0	              0x53	                                push rbx	       412	intel_dp_mst.c	FUNCTION_17
0x40009c1	          0x4889fb	                            mov rbx, rdi	       412	intel_dp_mst.c	FUNCTION_17
0x40009c4	      0xe800000000	                          call 0x40009c9	       415	intel_dp_mst.c	FUNCTION_17	CALL_2
0x40009c9	          0x4889df	                            mov rdi, rbx	       416	intel_dp_mst.c	FUNCTION_17	CALL_3
0x40009cc	              0x5b	                                 pop rbx	       417	intel_dp_mst.c	FUNCTION_17
0x40009cd	      0xe900000000	                           jmp 0x40009d2	       416	intel_dp_mst.c	FUNCTION_17	CALL_3
intel_dp_mst_detect	WHILE,0:CALL,2:IF,1:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	8
0x40004f0	    0x488bb7d00400	           mov rsi, qword [rdi + 0x4d0] 	       316	intel_dp_mst.c	FUNCTION_11
0x40004f7	          0x4885f6	                           test rsi, rsi	       318	intel_dp_mst.c	FUNCTION_11	IF_1
0x40004fa	            0x7413	                            je 0x400050f	       318	intel_dp_mst.c	FUNCTION_11	IF_1
0x40004fc	    0x488b97c80400	           mov rdx, qword [rdi + 0x4c8] 	       320	intel_dp_mst.c	FUNCTION_11	CALL_2
0x4000503	    0x4881c6f00500	                          add rsi, 0x5f0	       320	intel_dp_mst.c	FUNCTION_11	CALL_2
0x400050a	      0xe900000000	                           jmp 0x400050f	       320	intel_dp_mst.c	FUNCTION_11	CALL_2
0x400050f	      0xb802000000	                              mov eax, 2	       321	intel_dp_mst.c	FUNCTION_11
0x4000514	              0xc3	                                     ret	       321	intel_dp_mst.c	FUNCTION_11
intel_dp_mst_enc_get_config	WHILE,0:CALL,2:IF,0:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	2
0x4000520	    0x488bbf080100	           mov rdi, qword [rdi + 0x108] 	       291	intel_dp_mst.c	FUNCTION_9	CALL_2
0x4000527	      0xe900000000	                           jmp 0x400052c	       291	intel_dp_mst.c	FUNCTION_9	CALL_2
intel_mst_post_disable_dp	WHILE,0:CALL,8:IF,1:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	40
0x4000700	            0x4156	                                push r14	       159	intel_dp_mst.c	FUNCTION_4
0x4000702	            0x4155	                                push r13	       159	intel_dp_mst.c	FUNCTION_4
0x4000704	          0x4989f6	                            mov r14, rsi	       159	intel_dp_mst.c	FUNCTION_4
0x4000707	            0x4154	                                push r12	       159	intel_dp_mst.c	FUNCTION_4
0x4000709	              0x55	                                push rbp	       159	intel_dp_mst.c	FUNCTION_4
0x400070a	          0x4989fc	                            mov r12, rdi	       159	intel_dp_mst.c	FUNCTION_4
0x400070d	              0x53	                                push rbx	       159	intel_dp_mst.c	FUNCTION_4
0x400070e	    0x488b9f080100	           mov rbx, qword [rdi + 0x108] 	       161	intel_dp_mst.c	FUNCTION_4
0x4000715	          0x4c8b2a	                    mov r13, qword [rdx]	       164	intel_dp_mst.c	FUNCTION_4	CALL_2
0x4000718	    0x488dabf80600	                  lea rbp, [rbx + 0x6f8]	       167	intel_dp_mst.c	FUNCTION_4	CALL_3
0x400071f	          0x4889ef	                            mov rdi, rbp	       167	intel_dp_mst.c	FUNCTION_4	CALL_3
0x4000722	      0xe800000000	                          call 0x4000727	       167	intel_dp_mst.c	FUNCTION_4	CALL_3
0x4000727	          0x4889ef	                            mov rdi, rbp	       169	intel_dp_mst.c	FUNCTION_4	CALL_4
0x400072a	      0xe800000000	                          call 0x400072f	       169	intel_dp_mst.c	FUNCTION_4	CALL_4
0x400072f	    0x498bb5c80400	           mov rsi, qword [r13 + 0x4c8] 	       171	intel_dp_mst.c	FUNCTION_4	CALL_5
0x4000736	          0x4889ef	                            mov rdi, rbp	       171	intel_dp_mst.c	FUNCTION_4	CALL_5
0x4000739	      0xe800000000	                          call 0x400073e	       171	intel_dp_mst.c	FUNCTION_4	CALL_5
0x400073e	    0x498bb5c80400	           mov rsi, qword [r13 + 0x4c8] 	       177	intel_dp_mst.c	FUNCTION_4	CALL_6
0x4000745	            0x31d2	                            xor edx, edx	       177	intel_dp_mst.c	FUNCTION_4	CALL_6
0x4000747	          0x4889ef	                            mov rdi, rbp	       177	intel_dp_mst.c	FUNCTION_4	CALL_6
0x400074a	      0xe800000000	                          call 0x400074f	       177	intel_dp_mst.c	FUNCTION_4	CALL_6
0x400074f	    0x83abd0060000	              sub dword [rbx + 0x6d0], 1	       180	intel_dp_mst.c	FUNCTION_4
0x4000756	    0x49c784241001	              mov qword [r12 + 0x110], 0	       182	intel_dp_mst.c	FUNCTION_4
0x4000762	    0x8b93d0060000	           mov edx, dword [rbx + 0x6d0] 	       183	intel_dp_mst.c	FUNCTION_4	IF_1
0x4000768	            0x85d2	                           test edx, edx	       183	intel_dp_mst.c	FUNCTION_4	IF_1
0x400076a	            0x751a	                           jne 0x4000786	       183	intel_dp_mst.c	FUNCTION_4	IF_1
0x400076c	            0x31d2	                            xor edx, edx	       184	intel_dp_mst.c	FUNCTION_4	IF_1	CALL_7
0x400076e	    0x488b83b80000	            mov rax, qword [rbx + 0xb8] 	       184	intel_dp_mst.c	FUNCTION_4	IF_1	CALL_7
0x4000775	          0x4c89f6	                            mov rsi, r14	       184	intel_dp_mst.c	FUNCTION_4	IF_1	CALL_7
0x4000778	          0x4889df	                            mov rdi, rbx	       184	intel_dp_mst.c	FUNCTION_4	IF_1	CALL_7
0x400077b	      0xe800000000	                          call 0x4000780	       184	intel_dp_mst.c	FUNCTION_4	IF_1	CALL_7
0x4000780	    0x8b93d0060000	           mov edx, dword [rbx + 0x6d0] 	       184	intel_dp_mst.c	FUNCTION_4	IF_1	CALL_7
0x4000786	              0x5b	                                 pop rbx	       188	intel_dp_mst.c	FUNCTION_4
0x4000787	              0x5d	                                 pop rbp	       188	intel_dp_mst.c	FUNCTION_4
0x4000788	            0x415c	                                 pop r12	       188	intel_dp_mst.c	FUNCTION_4
0x400078a	            0x415d	                                 pop r13	       188	intel_dp_mst.c	FUNCTION_4
0x400078c	            0x415e	                                 pop r14	       188	intel_dp_mst.c	FUNCTION_4
0x400078e	    0x48c7c6000000	                              mov rsi, 0	       187	intel_dp_mst.c	FUNCTION_4	CALL_8
0x4000795	      0xbf04000000	                              mov edi, 4	       187	intel_dp_mst.c	FUNCTION_4	CALL_8
0x400079a	      0xe900000000	                           jmp 0x400079f	       187	intel_dp_mst.c	FUNCTION_4	CALL_8
intel_mst_best_encoder	WHILE,0:CALL,1:IF,1:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	7
0x40000c0	    0x488b87d00400	           mov rax, qword [rdi + 0x4d0] 	       397	intel_dp_mst.c	FUNCTION_16
0x40000c7	          0x4885c0	                           test rax, rax	       398	intel_dp_mst.c	FUNCTION_16	IF_1
0x40000ca	            0x7408	                            je 0x40000d4	       398	intel_dp_mst.c	FUNCTION_16	IF_1
0x40000cc	    0x488b80d80500	           mov rax, qword [rax + 0x5d8] 	       400	intel_dp_mst.c	FUNCTION_16
0x40000d3	              0xc3	                                     ret	       400	intel_dp_mst.c	FUNCTION_16
0x40000d4	            0x31c0	                            xor eax, eax	       399	intel_dp_mst.c	FUNCTION_16	IF_1
0x40000d6	              0xc3	                                     ret	       401	intel_dp_mst.c	FUNCTION_16
intel_dp_mst_get_hw_state	WHILE,0:CALL,1:IF,2:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	22
0x40000e0	        0x4883ec10	                           sub rsp, 0x10	       424	intel_dp_mst.c	FUNCTION_18
0x40000e4	    0x488b97200400	           mov rdx, qword [rdi + 0x420] 	       425	intel_dp_mst.c	FUNCTION_18	IF_1
0x40000eb	    0x65488b042528	                mov rax, qword gs:[0x28]	       424	intel_dp_mst.c	FUNCTION_18
0x40000f4	      0x4889442408	                mov qword [rsp + 8], rax	       424	intel_dp_mst.c	FUNCTION_18
0x40000f9	            0x31c0	                            xor eax, eax	       424	intel_dp_mst.c	FUNCTION_18
0x40000fb	          0x4885d2	                           test rdx, rdx	       425	intel_dp_mst.c	FUNCTION_18	IF_1
0x40000fe	            0x7437	                            je 0x4000137	       425	intel_dp_mst.c	FUNCTION_18	IF_1
0x4000100	    0x488b8ff00300	           mov rcx, qword [rdi + 0x3f0] 	       425	intel_dp_mst.c	FUNCTION_18	IF_1
0x4000107	      0x4883790800	                  cmp qword [rcx + 8], 0	       425	intel_dp_mst.c	FUNCTION_18	IF_1
0x400010c	            0x7414	                            je 0x4000122	       425	intel_dp_mst.c	FUNCTION_18	IF_1
0x400010e	    0x488b82c80000	            mov rax, qword [rdx + 0xc8] 	       427	intel_dp_mst.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x4000115	      0x488d742404	                      lea rsi, [rsp + 4]	       427	intel_dp_mst.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x400011a	          0x4889d7	                            mov rdi, rdx	       427	intel_dp_mst.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x400011d	      0xe800000000	                          call 0x4000122	       427	intel_dp_mst.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x4000122	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       432	intel_dp_mst.c	FUNCTION_18
0x4000127	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       432	intel_dp_mst.c	FUNCTION_18
0x4000130	            0x7509	                           jne 0x400013b	       432	intel_dp_mst.c	FUNCTION_18
0x4000132	        0x4883c410	                           add rsp, 0x10	       432	intel_dp_mst.c	FUNCTION_18
0x4000136	              0xc3	                                     ret	       432	intel_dp_mst.c	FUNCTION_18
0x4000137	            0x31c0	                            xor eax, eax	       431	intel_dp_mst.c	FUNCTION_18
0x4000139	            0xebe7	                           jmp 0x4000122	       431	intel_dp_mst.c	FUNCTION_18
0x400013b	      0xe800000000	           call sym.intel_dp_mst_hotplug	       432	intel_dp_mst.c	FUNCTION_18
intel_dp_mst_enc_get_hw_state	WHILE,0:CALL,1:IF,1:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	5
0x4000070	    0x8b8700010000	           mov eax, dword [rdi + 0x100] 	       279	intel_dp_mst.c	FUNCTION_8
0x4000076	            0x8906	                    mov dword [rsi], eax	       279	intel_dp_mst.c	FUNCTION_8
0x4000078	    0x4883bf100100	              cmp qword [rdi + 0x110], 0	       279	intel_dp_mst.c	FUNCTION_8
0x4000080	           0xf95c0	                                setne al	       279	intel_dp_mst.c	FUNCTION_8
0x4000083	              0xc3	                                     ret	       283	intel_dp_mst.c	FUNCTION_8
intel_mst_enable_dp	WHILE,0:CALL,9:IF,2:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	55
0x4000530	            0x4157	                                push r15	       251	intel_dp_mst.c	FUNCTION_7
0x4000532	            0x4156	                                push r14	       251	intel_dp_mst.c	FUNCTION_7
0x4000534	          0x4989d6	                            mov r14, rdx	       251	intel_dp_mst.c	FUNCTION_7
0x4000537	            0x4155	                                push r13	       251	intel_dp_mst.c	FUNCTION_7
0x4000539	            0x4154	                                push r12	       251	intel_dp_mst.c	FUNCTION_7
0x400053b	          0x4989f5	                            mov r13, rsi	       251	intel_dp_mst.c	FUNCTION_7
0x400053e	              0x55	                                push rbp	       251	intel_dp_mst.c	FUNCTION_7
0x400053f	              0x53	                                push rbx	       251	intel_dp_mst.c	FUNCTION_7
0x4000540	    0x48c7c6000000	                              mov rsi, 0	       259	intel_dp_mst.c	FUNCTION_7	CALL_3
0x4000547	    0x488b9f080100	           mov rbx, qword [rdi + 0x108] 	       253	intel_dp_mst.c	FUNCTION_7
0x400054e	          0x4c8b3f	                    mov r15, qword [rdi]	       255	intel_dp_mst.c	FUNCTION_7	CALL_2
0x4000551	          0x4989fc	                            mov r12, rdi	       251	intel_dp_mst.c	FUNCTION_7
0x4000554	      0xbf04000000	                              mov edi, 4	       259	intel_dp_mst.c	FUNCTION_7	CALL_3
0x4000559	          0x8b6b74	            mov ebp, dword [rbx + 0x74] 	       256	intel_dp_mst.c	FUNCTION_7
0x400055c	    0x8b93d0060000	           mov edx, dword [rbx + 0x6d0] 	       259	intel_dp_mst.c	FUNCTION_7	CALL_3
0x4000562	          0xc1e508	                              shl ebp, 8	       259	intel_dp_mst.c	FUNCTION_7	CALL_3
0x4000565	      0xe800000000	                          call 0x400056a	       259	intel_dp_mst.c	FUNCTION_7	CALL_3
0x400056a	    0x8db544400600	                lea esi, [rbp + 0x64044]	       259	intel_dp_mst.c	FUNCTION_7	CALL_3
0x4000570	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_52	CALL_1
0x4000572	      0xba00000001	                      mov edx, 0x1000000	       191	intel_uncore.h	FUNCTION_52	CALL_1
0x4000577	    0x41b901000000	                              mov r9d, 1	       191	intel_uncore.h	FUNCTION_52	CALL_1
0x400057d	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_52	CALL_1
0x4000583	      0xb900000001	                      mov ecx, 0x1000000	       191	intel_uncore.h	FUNCTION_52	CALL_1
0x4000588	          0x4c89ff	                            mov rdi, r15	       191	intel_uncore.h	FUNCTION_52	CALL_1
0x400058b	      0xe800000000	                          call 0x4000590	       191	intel_uncore.h	FUNCTION_52	CALL_1
0x4000590	            0x85c0	                           test eax, eax	       261	intel_dp_mst.c	FUNCTION_7	IF_1	CALL_4
0x4000592	              0x5a	                                 pop rdx	       261	intel_dp_mst.c	FUNCTION_7	IF_1	CALL_4
0x4000593	            0x7544	                           jne 0x40005d9	       261	intel_dp_mst.c	FUNCTION_7	IF_1	CALL_4
0x4000595	    0x4881c3f80600	                          add rbx, 0x6f8	       268	intel_dp_mst.c	FUNCTION_7	CALL_7
0x400059c	          0x4889df	                            mov rdi, rbx	       268	intel_dp_mst.c	FUNCTION_7	CALL_7
0x400059f	      0xe800000000	                          call 0x40005a4	       268	intel_dp_mst.c	FUNCTION_7	CALL_7
0x40005a4	          0x4889df	                            mov rdi, rbx	       270	intel_dp_mst.c	FUNCTION_7	CALL_8
0x40005a7	      0xe800000000	                          call 0x40005ac	       270	intel_dp_mst.c	FUNCTION_7	CALL_8
0x40005ac	    0x4180bd490200	               cmp byte [r13 + 0x249], 0	       271	intel_dp_mst.c	FUNCTION_7	IF_2
0x40005b4	            0x750b	                           jne 0x40005c1	       271	intel_dp_mst.c	FUNCTION_7	IF_2
0x40005b6	              0x5b	                                 pop rbx	       273	intel_dp_mst.c	FUNCTION_7
0x40005b7	              0x5d	                                 pop rbp	       273	intel_dp_mst.c	FUNCTION_7
0x40005b8	            0x415c	                                 pop r12	       273	intel_dp_mst.c	FUNCTION_7
0x40005ba	            0x415d	                                 pop r13	       273	intel_dp_mst.c	FUNCTION_7
0x40005bc	            0x415e	                                 pop r14	       273	intel_dp_mst.c	FUNCTION_7
0x40005be	            0x415f	                                 pop r15	       273	intel_dp_mst.c	FUNCTION_7
0x40005c0	              0xc3	                                     ret	       273	intel_dp_mst.c	FUNCTION_7
0x40005c1	              0x5b	                                 pop rbx	       273	intel_dp_mst.c	FUNCTION_7
0x40005c2	          0x4c89f2	                            mov rdx, r14	       272	intel_dp_mst.c	FUNCTION_7	CALL_9
0x40005c5	          0x4c89ee	                            mov rsi, r13	       272	intel_dp_mst.c	FUNCTION_7	CALL_9
0x40005c8	          0x4c89e7	                            mov rdi, r12	       272	intel_dp_mst.c	FUNCTION_7	CALL_9
0x40005cb	              0x5d	                                 pop rbp	       273	intel_dp_mst.c	FUNCTION_7
0x40005cc	            0x415c	                                 pop r12	       273	intel_dp_mst.c	FUNCTION_7
0x40005ce	            0x415d	                                 pop r13	       273	intel_dp_mst.c	FUNCTION_7
0x40005d0	            0x415e	                                 pop r14	       273	intel_dp_mst.c	FUNCTION_7
0x40005d2	            0x415f	                                 pop r15	       273	intel_dp_mst.c	FUNCTION_7
0x40005d4	      0xe900000000	                           jmp 0x40005d9	       272	intel_dp_mst.c	FUNCTION_7	CALL_9
0x40005d9	    0x48c7c7000000	                              mov rdi, 0	       266	intel_dp_mst.c	FUNCTION_7	CALL_6
0x40005e0	      0xe800000000	                          call 0x40005e5	       266	intel_dp_mst.c	FUNCTION_7	CALL_6
0x40005e5	            0xebae	                           jmp 0x4000595	       266	intel_dp_mst.c	FUNCTION_7	CALL_6
intel_mst_pre_enable_dp	WHILE,0:CALL,13:IF,2:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	68
0x40005f0	            0x4157	                                push r15	       207	intel_dp_mst.c	FUNCTION_6
0x40005f2	            0x4156	                                push r14	       207	intel_dp_mst.c	FUNCTION_6
0x40005f4	          0x4989f7	                            mov r15, rsi	       207	intel_dp_mst.c	FUNCTION_6
0x40005f7	            0x4155	                                push r13	       207	intel_dp_mst.c	FUNCTION_6
0x40005f9	            0x4154	                                push r12	       207	intel_dp_mst.c	FUNCTION_6
0x40005fb	    0x48c7c6000000	                              mov rsi, 0	       224	intel_dp_mst.c	FUNCTION_6	CALL_4
0x4000602	              0x55	                                push rbp	       207	intel_dp_mst.c	FUNCTION_6
0x4000603	              0x53	                                push rbx	       207	intel_dp_mst.c	FUNCTION_6
0x4000604	    0x488b9f080100	           mov rbx, qword [rdi + 0x108] 	       209	intel_dp_mst.c	FUNCTION_6
0x400060b	          0x488b2a	                    mov rbp, qword [rdx]	       214	intel_dp_mst.c	FUNCTION_6	CALL_3
0x400060e	          0x4c8b2f	                    mov r13, qword [rdi]	       211	intel_dp_mst.c	FUNCTION_6	CALL_2
0x4000611	        0x448b6374	           mov r12d, dword [rbx + 0x74] 	       212	intel_dp_mst.c	FUNCTION_6
0x4000615	    0x4889bd200400	           mov qword [rbp + 0x420], rdi 	       221	intel_dp_mst.c	FUNCTION_6
0x400061c	    0x4c8db3f80600	                  lea r14, [rbx + 0x6f8]	       226	intel_dp_mst.c	FUNCTION_6	CALL_5
0x4000623	    0x4889af100100	            mov qword [rdi + 0x110], rbp	       222	intel_dp_mst.c	FUNCTION_6
0x400062a	    0x8b93d0060000	           mov edx, dword [rbx + 0x6d0] 	       224	intel_dp_mst.c	FUNCTION_6	CALL_4
0x4000630	      0xbf04000000	                              mov edi, 4	       224	intel_dp_mst.c	FUNCTION_6	CALL_4
0x4000635	      0xe800000000	                          call 0x400063a	       224	intel_dp_mst.c	FUNCTION_6	CALL_4
0x400063a	    0x488bb5c80400	           mov rsi, qword [rbp + 0x4c8] 	       226	intel_dp_mst.c	FUNCTION_6	CALL_5
0x4000641	      0xba01000000	                              mov edx, 1	       226	intel_dp_mst.c	FUNCTION_6	CALL_5
0x4000646	          0x4c89f7	                            mov rdi, r14	       226	intel_dp_mst.c	FUNCTION_6	CALL_5
0x4000649	      0xe800000000	                          call 0x400064e	       226	intel_dp_mst.c	FUNCTION_6	CALL_5
0x400064e	    0x8b83d0060000	           mov eax, dword [rbx + 0x6d0] 	       227	intel_dp_mst.c	FUNCTION_6	IF_1
0x4000654	            0x85c0	                           test eax, eax	       227	intel_dp_mst.c	FUNCTION_6	IF_1
0x4000656	     0xf848a000000	                            je 0x40006e6	       227	intel_dp_mst.c	FUNCTION_6	IF_1
0x400065c	    0x418b8fe00200	           mov ecx, dword [r15 + 0x2e0] 	       231	intel_dp_mst.c	FUNCTION_6	CALL_7
0x4000663	    0x418b974c0300	           mov edx, dword [r15 + 0x34c] 	       231	intel_dp_mst.c	FUNCTION_6	CALL_7
0x400066a	          0x4c89f7	                            mov rdi, r14	       231	intel_dp_mst.c	FUNCTION_6	CALL_7
0x400066d	    0x488bb5c80400	           mov rsi, qword [rbp + 0x4c8] 	       231	intel_dp_mst.c	FUNCTION_6	CALL_7
0x4000674	      0xe800000000	                          call 0x4000679	       231	intel_dp_mst.c	FUNCTION_6	CALL_7
0x4000679	            0x84c0	                             test al, al	       235	intel_dp_mst.c	FUNCTION_6	IF_2
0x400067b	            0x7453	                            je 0x40006d0	       235	intel_dp_mst.c	FUNCTION_6	IF_2
0x400067d	        0x41c1e408	                             shl r12d, 8	       242	intel_dp_mst.c	FUNCTION_6	CALL_10
0x4000681	    0x8383d0060000	              add dword [rbx + 0x6d0], 1	       241	intel_dp_mst.c	FUNCTION_6
0x4000688	          0x4c89ef	                            mov rdi, r13	       242	intel_dp_mst.c	FUNCTION_6	CALL_10
0x400068b	    0x418d9c244440	                lea ebx, [r12 + 0x64044]	       242	intel_dp_mst.c	FUNCTION_6	CALL_10
0x4000693	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	       242	intel_dp_mst.c	FUNCTION_6	CALL_10
0x400069a	      0xba01000000	                              mov edx, 1	       242	intel_dp_mst.c	FUNCTION_6	CALL_10
0x400069f	            0x89de	                            mov esi, ebx	       242	intel_dp_mst.c	FUNCTION_6	CALL_10
0x40006a1	      0xe800000000	                          call 0x40006a6	       242	intel_dp_mst.c	FUNCTION_6	CALL_10
0x40006a6	          0x4c89ef	                            mov rdi, r13	       243	intel_dp_mst.c	FUNCTION_6	CALL_12
0x40006a9	    0x4d8b85180800	            mov r8, qword [r13 + 0x818] 	       243	intel_dp_mst.c	FUNCTION_6	CALL_12
0x40006b0	            0x89de	                            mov esi, ebx	       243	intel_dp_mst.c	FUNCTION_6	CALL_12
0x40006b2	      0xb901000000	                              mov ecx, 1	       243	intel_dp_mst.c	FUNCTION_6	CALL_12
0x40006b7	            0x89c2	                            mov edx, eax	       243	intel_dp_mst.c	FUNCTION_6	CALL_12
0x40006b9	      0xe800000000	                          call 0x40006be	       243	intel_dp_mst.c	FUNCTION_6	CALL_12
0x40006be	          0x4c89f7	                            mov rdi, r14	       245	intel_dp_mst.c	FUNCTION_6	CALL_13
0x40006c1	              0x5b	                                 pop rbx	       246	intel_dp_mst.c	FUNCTION_6
0x40006c2	              0x5d	                                 pop rbp	       246	intel_dp_mst.c	FUNCTION_6
0x40006c3	            0x415c	                                 pop r12	       246	intel_dp_mst.c	FUNCTION_6
0x40006c5	            0x415d	                                 pop r13	       246	intel_dp_mst.c	FUNCTION_6
0x40006c7	            0x415e	                                 pop r14	       246	intel_dp_mst.c	FUNCTION_6
0x40006c9	            0x415f	                                 pop r15	       246	intel_dp_mst.c	FUNCTION_6
0x40006cb	      0xe900000000	                           jmp 0x40006d0	       245	intel_dp_mst.c	FUNCTION_6	CALL_13
0x40006d0	              0x5b	                                 pop rbx	       246	intel_dp_mst.c	FUNCTION_6
0x40006d1	              0x5d	                                 pop rbp	       246	intel_dp_mst.c	FUNCTION_6
0x40006d2	            0x415c	                                 pop r12	       246	intel_dp_mst.c	FUNCTION_6
0x40006d4	            0x415d	                                 pop r13	       246	intel_dp_mst.c	FUNCTION_6
0x40006d6	            0x415e	                                 pop r14	       246	intel_dp_mst.c	FUNCTION_6
0x40006d8	            0x415f	                                 pop r15	       246	intel_dp_mst.c	FUNCTION_6
0x40006da	    0x48c7c7000000	                              mov rdi, 0	       236	intel_dp_mst.c	FUNCTION_6	IF_2	CALL_8
0x40006e1	      0xe900000000	                           jmp 0x40006e6	       236	intel_dp_mst.c	FUNCTION_6	IF_2	CALL_8
0x40006e6	    0x488b83a00000	            mov rax, qword [rbx + 0xa0] 	       228	intel_dp_mst.c	FUNCTION_6	IF_1	CALL_6
0x40006ed	            0x31d2	                            xor edx, edx	       228	intel_dp_mst.c	FUNCTION_6	IF_1	CALL_6
0x40006ef	          0x4c89fe	                            mov rsi, r15	       228	intel_dp_mst.c	FUNCTION_6	IF_1	CALL_6
0x40006f2	          0x4889df	                            mov rdi, rbx	       228	intel_dp_mst.c	FUNCTION_6	IF_1	CALL_6
0x40006f5	      0xe800000000	                          call 0x40006fa	       228	intel_dp_mst.c	FUNCTION_6	IF_1	CALL_6
0x40006fa	      0xe95dffffff	                           jmp 0x400065c	       228	intel_dp_mst.c	FUNCTION_6	IF_1	CALL_6
intel_dp_mst_mode_valid	WHILE,0:CALL,6:IF,4:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	44
0x40003e0	            0x4155	                                push r13	       353	intel_dp_mst.c	FUNCTION_14
0x40003e2	            0x4154	                                push r12	       353	intel_dp_mst.c	FUNCTION_14
0x40003e4	              0x55	                                push rbp	       353	intel_dp_mst.c	FUNCTION_14
0x40003e5	              0x53	                                push rbx	       353	intel_dp_mst.c	FUNCTION_14
0x40003e6	    0x488bafd00400	           mov rbp, qword [rdi + 0x4d0] 	       355	intel_dp_mst.c	FUNCTION_14
0x40003ed	          0x488b07	                    mov rax, qword [rdi]	       356	intel_dp_mst.c	FUNCTION_14	CALL_2
0x40003f0	          0x4885ed	                           test rbp, rbp	       360	intel_dp_mst.c	FUNCTION_14	IF_1
0x40003f3	    0x448ba0d85400	         mov r12d, dword [rax + 0x54d8] 	       356	intel_dp_mst.c	FUNCTION_14	CALL_2
0x40003fa	            0x7468	                            je 0x4000464	       360	intel_dp_mst.c	FUNCTION_14	IF_1
0x40003fc	          0x4889ef	                            mov rdi, rbp	       363	intel_dp_mst.c	FUNCTION_14	CALL_3
0x40003ff	          0x4889f3	                            mov rbx, rsi	       363	intel_dp_mst.c	FUNCTION_14	CALL_3
0x4000402	      0xe800000000	                          call 0x4000407	       363	intel_dp_mst.c	FUNCTION_14	CALL_3
0x4000407	          0x4889ef	                            mov rdi, rbp	       364	intel_dp_mst.c	FUNCTION_14	CALL_4
0x400040a	          0x4189c5	                           mov r13d, eax	       363	intel_dp_mst.c	FUNCTION_14	CALL_3
0x400040d	      0xe800000000	                          call 0x4000412	       364	intel_dp_mst.c	FUNCTION_14	CALL_4
0x4000412	          0x4489ef	                           mov edi, r13d	       366	intel_dp_mst.c	FUNCTION_14	CALL_5
0x4000415	            0x89c6	                            mov esi, eax	       366	intel_dp_mst.c	FUNCTION_14	CALL_5
0x4000417	      0xe800000000	                          call 0x400041c	       366	intel_dp_mst.c	FUNCTION_14	CALL_5
0x400041c	          0x8b7b58	            mov edi, dword [rbx + 0x58] 	       367	intel_dp_mst.c	FUNCTION_14	CALL_6
0x400041f	      0xbe18000000	                           mov esi, 0x18	       367	intel_dp_mst.c	FUNCTION_14	CALL_6
0x4000424	            0x89c5	                            mov ebp, eax	       366	intel_dp_mst.c	FUNCTION_14	CALL_5
0x4000426	      0xe800000000	                          call 0x400042b	       367	intel_dp_mst.c	FUNCTION_14	CALL_6
0x400042b	          0x8b4b58	            mov ecx, dword [rbx + 0x58] 	       370	intel_dp_mst.c	FUNCTION_14	IF_2
0x400042e	      0xba10000000	                           mov edx, 0x10	       371	intel_dp_mst.c	FUNCTION_14	IF_2
0x4000433	    0x81f90f270000	                         cmp ecx, 0x270f	       370	intel_dp_mst.c	FUNCTION_14	IF_2
0x4000439	            0x7f09	                            jg 0x4000444	       370	intel_dp_mst.c	FUNCTION_14	IF_2
0x400043b	              0x5b	                                 pop rbx	       380	intel_dp_mst.c	FUNCTION_14
0x400043c	            0x89d0	                            mov eax, edx	       380	intel_dp_mst.c	FUNCTION_14
0x400043e	              0x5d	                                 pop rbp	       380	intel_dp_mst.c	FUNCTION_14
0x400043f	            0x415c	                                 pop r12	       380	intel_dp_mst.c	FUNCTION_14
0x4000441	            0x415d	                                 pop r13	       380	intel_dp_mst.c	FUNCTION_14
0x4000443	              0xc3	                                     ret	       380	intel_dp_mst.c	FUNCTION_14
0x4000444	    0xf68385000000	           test byte [rbx + 0x85], 0x10 	       373	intel_dp_mst.c	FUNCTION_14	IF_3
0x400044b	      0xba03000000	                              mov edx, 3	       374	intel_dp_mst.c	FUNCTION_14	IF_3
0x4000450	            0x75e9	                           jne 0x400043b	       373	intel_dp_mst.c	FUNCTION_14	IF_3
0x4000452	            0x39c5	                            cmp ebp, eax	       376	intel_dp_mst.c	FUNCTION_14	IF_4
0x4000454	            0x7c07	                            jl 0x400045d	       376	intel_dp_mst.c	FUNCTION_14	IF_4
0x4000456	            0x31d2	                            xor edx, edx	       379	intel_dp_mst.c	FUNCTION_14
0x4000458	          0x4139cc	                           cmp r12d, ecx	       376	intel_dp_mst.c	FUNCTION_14	IF_4
0x400045b	            0x7dde	                           jge 0x400043b	       376	intel_dp_mst.c	FUNCTION_14	IF_4
0x400045d	      0xba0f000000	                            mov edx, 0xf	       377	intel_dp_mst.c	FUNCTION_14	IF_4
0x4000462	            0xebd7	                           jmp 0x400043b	       377	intel_dp_mst.c	FUNCTION_14	IF_4
0x4000464	      0xbaffffffff	                     mov edx, 0xffffffff	       361	intel_dp_mst.c	FUNCTION_14	IF_1
0x4000469	            0xebd0	                           jmp 0x400043b	       361	intel_dp_mst.c	FUNCTION_14	IF_1
intel_mst_pre_pll_enable_dp	WHILE,0:CALL,2:IF,1:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	10
0x4000040	    0x488bbf080100	           mov rdi, qword [rdi + 0x108] 	       195	intel_dp_mst.c	FUNCTION_5
0x4000047	    0x8b87d0060000	           mov eax, dword [rdi + 0x6d0] 	       198	intel_dp_mst.c	FUNCTION_5	IF_1
0x400004d	            0x85c0	                           test eax, eax	       198	intel_dp_mst.c	FUNCTION_5	IF_1
0x400004f	            0x7513	                           jne 0x4000064	       198	intel_dp_mst.c	FUNCTION_5	IF_1
0x4000051	    0x488b87980000	            mov rax, qword [rdi + 0x98] 	       199	intel_dp_mst.c	FUNCTION_5	IF_1
0x4000058	          0x4885c0	                           test rax, rax	       198	intel_dp_mst.c	FUNCTION_5	IF_1
0x400005b	            0x7407	                            je 0x4000064	       198	intel_dp_mst.c	FUNCTION_5	IF_1
0x400005d	            0x31d2	                            xor edx, edx	       200	intel_dp_mst.c	FUNCTION_5	IF_1	CALL_2
0x400005f	      0xe900000000	                           jmp 0x4000064	       200	intel_dp_mst.c	FUNCTION_5	IF_1	CALL_2
0x4000064	            0xf3c3	                                     ret	       200	intel_dp_mst.c	FUNCTION_5	IF_1	CALL_2
intel_dp_register_mst_connector	WHILE,0:CALL,3:IF,1:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	11
0x40001d0	              0x53	                                push rbx	       488	intel_dp_mst.c	FUNCTION_20
0x40001d1	          0x488b07	                    mov rax, qword [rdi]	       491	intel_dp_mst.c	FUNCTION_20	IF_1
0x40001d4	          0x4889fb	                            mov rbx, rdi	       488	intel_dp_mst.c	FUNCTION_20
0x40001d7	    0x488bb8186f00	          mov rdi, qword [rax + 0x6f18] 	       491	intel_dp_mst.c	FUNCTION_20	IF_1
0x40001de	          0x4885ff	                           test rdi, rdi	       491	intel_dp_mst.c	FUNCTION_20	IF_1
0x40001e1	            0x7408	                            je 0x40001eb	       491	intel_dp_mst.c	FUNCTION_20	IF_1
0x40001e3	          0x4889de	                            mov rsi, rbx	       492	intel_dp_mst.c	FUNCTION_20	IF_1	CALL_2
0x40001e6	      0xe800000000	                          call 0x40001eb	       492	intel_dp_mst.c	FUNCTION_20	IF_1	CALL_2
0x40001eb	          0x4889df	                            mov rdi, rbx	       495	intel_dp_mst.c	FUNCTION_20	CALL_3
0x40001ee	              0x5b	                                 pop rbx	       496	intel_dp_mst.c	FUNCTION_20
0x40001ef	      0xe900000000	                           jmp 0x40001f4	       495	intel_dp_mst.c	FUNCTION_20	CALL_3
intel_dp_mst_compute_config	WHILE,0:CALL,15:IF,4:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	95
0x4000830	            0x4157	                                push r15	        36	intel_dp_mst.c	FUNCTION_1
0x4000832	            0x4156	                                push r14	        36	intel_dp_mst.c	FUNCTION_1
0x4000834	          0x4989f7	                            mov r15, rsi	        36	intel_dp_mst.c	FUNCTION_1
0x4000837	            0x4155	                                push r13	        36	intel_dp_mst.c	FUNCTION_1
0x4000839	            0x4154	                                push r12	        36	intel_dp_mst.c	FUNCTION_1
0x400083b	              0x55	                                push rbp	        36	intel_dp_mst.c	FUNCTION_1
0x400083c	              0x53	                                push rbx	        36	intel_dp_mst.c	FUNCTION_1
0x400083d	      0xbd18000000	                           mov ebp, 0x18	        36	intel_dp_mst.c	FUNCTION_1
0x4000842	        0x4883ec10	                           sub rsp, 0x10	        36	intel_dp_mst.c	FUNCTION_1
0x4000846	    0x488b9f080100	           mov rbx, qword [rdi + 0x108] 	        39	intel_dp_mst.c	FUNCTION_1
0x400084d	    0x488b86100200	           mov rax, qword [rsi + 0x210] 	        43	intel_dp_mst.c	FUNCTION_1
0x4000854	          0x4c8b27	                    mov r12, qword [rdi]	        37	intel_dp_mst.c	FUNCTION_1	CALL_1
0x4000857	          0x4c8b2a	                    mov r13, qword [rdx]	        42	intel_dp_mst.c	FUNCTION_1	CALL_3
0x400085a	        0x48890424	                    mov qword [rsp], rax	        43	intel_dp_mst.c	FUNCTION_1
0x400085e	    0x8b83b0010000	           mov eax, dword [rbx + 0x1b0] 	        43	intel_dp_mst.c	FUNCTION_1
0x4000864	    0xc68638020000	               mov byte [rsi + 0x238], 0	        51	intel_dp_mst.c	FUNCTION_1
0x400086b	        0x8944240c	              mov dword [rsp + 0xc], eax	        51	intel_dp_mst.c	FUNCTION_1
0x400086f	     0xfb6836e0b00	          movzx eax, byte [rbx + 0xb6e] 	        53	intel_dp_mst.c	FUNCTION_1	IF_1
0x4000876	            0x84c0	                             test al, al	        53	intel_dp_mst.c	FUNCTION_1	IF_1
0x4000878	     0xf8500010000	                           jne 0x400097e	        53	intel_dp_mst.c	FUNCTION_1	IF_1
0x400087e	    0x488dbb080100	                  lea rdi, [rbx + 0x108]	        62	intel_dp_mst.c	FUNCTION_1	CALL_6
0x4000885	      0xe800000000	                          call 0x400088a	        62	intel_dp_mst.c	FUNCTION_1	CALL_6
0x400088a	    0x488dbb080100	                  lea rdi, [rbx + 0x108]	        68	intel_dp_mst.c	FUNCTION_1	CALL_7
0x4000891	    0x418887140300	              mov byte [r15 + 0x314], al	        64	intel_dp_mst.c	FUNCTION_1
0x4000898	    0x4189afdc0200	            mov dword [r15 + 0x2dc], ebp	        66	intel_dp_mst.c	FUNCTION_1
0x400089f	          0x4189c6	                           mov r14d, eax	        62	intel_dp_mst.c	FUNCTION_1	CALL_6
0x40008a2	    0x4881c3f80600	                          add rbx, 0x6f8	        70	intel_dp_mst.c	FUNCTION_1	IF_2	CALL_8
0x40008a9	      0xe800000000	                          call 0x40008ae	        68	intel_dp_mst.c	FUNCTION_1	CALL_7
0x40008ae	    0x4189870c0300	            mov dword [r15 + 0x30c], eax	        68	intel_dp_mst.c	FUNCTION_1	CALL_7
0x40008b5	    0x498bb5c80400	           mov rsi, qword [r13 + 0x4c8] 	        70	intel_dp_mst.c	FUNCTION_1	IF_2	CALL_8
0x40008bc	          0x4889df	                            mov rdi, rbx	        70	intel_dp_mst.c	FUNCTION_1	IF_2	CALL_8
0x40008bf	      0xe800000000	                          call 0x40008c4	        70	intel_dp_mst.c	FUNCTION_1	IF_2	CALL_8
0x40008c4	            0x84c0	                             test al, al	        70	intel_dp_mst.c	FUNCTION_1	IF_2	CALL_8
0x40008c6	            0x7408	                            je 0x40008d0	        70	intel_dp_mst.c	FUNCTION_1	IF_2	CALL_8
0x40008c8	    0x41c687490200	               mov byte [r15 + 0x249], 1	        71	intel_dp_mst.c	FUNCTION_1	IF_2
0x40008d0	    0x418bbfa80000	            mov edi, dword [r15 + 0xa8] 	        73	intel_dp_mst.c	FUNCTION_1	CALL_9
0x40008d7	            0x89ee	                            mov esi, ebp	        73	intel_dp_mst.c	FUNCTION_1	CALL_9
0x40008d9	      0xe800000000	                          call 0x40008de	        73	intel_dp_mst.c	FUNCTION_1	CALL_9
0x40008de	    0x4189874c0300	            mov dword [r15 + 0x34c], eax	        74	intel_dp_mst.c	FUNCTION_1
0x40008e5	        0x488b3c24	                    mov rdi, qword [rsp]	        76	intel_dp_mst.c	FUNCTION_1	CALL_10
0x40008e9	          0x4889de	                            mov rsi, rbx	        76	intel_dp_mst.c	FUNCTION_1	CALL_10
0x40008ec	    0x498b95c80400	           mov rdx, qword [r13 + 0x4c8] 	        76	intel_dp_mst.c	FUNCTION_1	CALL_10
0x40008f3	            0x89c1	                            mov ecx, eax	        76	intel_dp_mst.c	FUNCTION_1	CALL_10
0x40008f5	      0xe800000000	                          call 0x40008fa	        76	intel_dp_mst.c	FUNCTION_1	CALL_10
0x40008fa	            0x85c0	                           test eax, eax	        78	intel_dp_mst.c	FUNCTION_1	IF_3
0x40008fc	            0x89c3	                            mov ebx, eax	        76	intel_dp_mst.c	FUNCTION_1	CALL_10
0x40008fe	     0xf8895000000	                            js 0x4000999	        78	intel_dp_mst.c	FUNCTION_1	IF_3
0x4000904	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	        83	intel_dp_mst.c	FUNCTION_1	CALL_12
0x4000909	    0x418b8f0c0300	           mov ecx, dword [r15 + 0x30c] 	        83	intel_dp_mst.c	FUNCTION_1	CALL_12
0x4000910	    0x4d8d87e00200	                   lea r8, [r15 + 0x2e0]	        83	intel_dp_mst.c	FUNCTION_1	CALL_12
0x4000917	    0x418b97a80000	            mov edx, dword [r15 + 0xa8] 	        83	intel_dp_mst.c	FUNCTION_1	CALL_12
0x400091e	          0x4489f6	                           mov esi, r14d	        83	intel_dp_mst.c	FUNCTION_1	CALL_12
0x4000921	            0x89ef	                            mov edi, ebp	        83	intel_dp_mst.c	FUNCTION_1	CALL_12
0x4000923	        0x4183e101	                              and r9d, 1	        83	intel_dp_mst.c	FUNCTION_1	CALL_12
0x4000927	      0xe800000000	                          call 0x400092c	        83	intel_dp_mst.c	FUNCTION_1	CALL_12
0x400092c	    0x41899fe00200	            mov dword [r15 + 0x2e0], ebx	        89	intel_dp_mst.c	FUNCTION_1
0x4000933	    0x41f684245b06	              test byte [r12 + 0x65b], 1	        91	intel_dp_mst.c	FUNCTION_1	IF_4	CALL_13
0x400093c	            0x751f	                           jne 0x400095d	        91	intel_dp_mst.c	FUNCTION_1	IF_4	CALL_13
0x400093e	          0x4c89fe	                            mov rsi, r15	        95	intel_dp_mst.c	FUNCTION_1	CALL_15
0x4000941	          0x4c89e7	                            mov rdi, r12	        95	intel_dp_mst.c	FUNCTION_1	CALL_15
0x4000944	      0xe800000000	                          call 0x4000949	        95	intel_dp_mst.c	FUNCTION_1	CALL_15
0x4000949	        0x4883c410	                           add rsp, 0x10	        98	intel_dp_mst.c	FUNCTION_1
0x400094d	      0xb801000000	                              mov eax, 1	        97	intel_dp_mst.c	FUNCTION_1
0x4000952	              0x5b	                                 pop rbx	        98	intel_dp_mst.c	FUNCTION_1
0x4000953	              0x5d	                                 pop rbp	        98	intel_dp_mst.c	FUNCTION_1
0x4000954	            0x415c	                                 pop r12	        98	intel_dp_mst.c	FUNCTION_1
0x4000956	            0x415d	                                 pop r13	        98	intel_dp_mst.c	FUNCTION_1
0x4000958	            0x415e	                                 pop r14	        98	intel_dp_mst.c	FUNCTION_1
0x400095a	            0x415f	                                 pop r15	        98	intel_dp_mst.c	FUNCTION_1
0x400095c	              0xc3	                                     ret	        98	intel_dp_mst.c	FUNCTION_1
0x400095d	    0x41f684247706	              test byte [r12 + 0x677], 2	        91	intel_dp_mst.c	FUNCTION_1	IF_4	CALL_13
0x4000966	            0x74d6	                            je 0x400093e	        91	intel_dp_mst.c	FUNCTION_1	IF_4	CALL_13
0x4000968	    0x410fb6bf1403	          movzx edi, byte [r15 + 0x314] 	        93	intel_dp_mst.c	FUNCTION_1	CALL_14
0x4000970	      0xe800000000	                          call 0x4000975	        93	intel_dp_mst.c	FUNCTION_1	CALL_14
0x4000975	    0x418887150300	              mov byte [r15 + 0x315], al	        92	intel_dp_mst.c	FUNCTION_1	IF_4
0x400097c	            0xebc0	                           jmp 0x400093e	        92	intel_dp_mst.c	FUNCTION_1	IF_4
0x400097e	          0x8d2c40	                  lea ebp, [rax + rax*2]	        54	intel_dp_mst.c	FUNCTION_1	IF_1
0x4000981	    0x48c7c6000000	                              mov rsi, 0	        55	intel_dp_mst.c	FUNCTION_1	IF_1	CALL_5
0x4000988	      0xbf04000000	                              mov edi, 4	        55	intel_dp_mst.c	FUNCTION_1	IF_1	CALL_5
0x400098d	            0x89ea	                            mov edx, ebp	        55	intel_dp_mst.c	FUNCTION_1	IF_1	CALL_5
0x400098f	      0xe800000000	                          call 0x4000994	        55	intel_dp_mst.c	FUNCTION_1	IF_1	CALL_5
0x4000994	      0xe9e5feffff	                           jmp 0x400087e	        55	intel_dp_mst.c	FUNCTION_1	IF_1	CALL_5
0x4000999	            0x89c2	                            mov edx, eax	        79	intel_dp_mst.c	FUNCTION_1	IF_3	CALL_11
0x400099b	    0x48c7c6000000	                              mov rsi, 0	        79	intel_dp_mst.c	FUNCTION_1	IF_3	CALL_11
0x40009a2	      0xbf04000000	                              mov edi, 4	        79	intel_dp_mst.c	FUNCTION_1	IF_3	CALL_11
0x40009a7	      0xe800000000	                          call 0x40009ac	        79	intel_dp_mst.c	FUNCTION_1	IF_3	CALL_11
0x40009ac	        0x4883c410	                           add rsp, 0x10	        98	intel_dp_mst.c	FUNCTION_1
0x40009b0	            0x31c0	                            xor eax, eax	        80	intel_dp_mst.c	FUNCTION_1	IF_3
0x40009b2	              0x5b	                                 pop rbx	        98	intel_dp_mst.c	FUNCTION_1
0x40009b3	              0x5d	                                 pop rbp	        98	intel_dp_mst.c	FUNCTION_1
0x40009b4	            0x415c	                                 pop r12	        98	intel_dp_mst.c	FUNCTION_1
0x40009b6	            0x415d	                                 pop r13	        98	intel_dp_mst.c	FUNCTION_1
0x40009b8	            0x415e	                                 pop r14	        98	intel_dp_mst.c	FUNCTION_1
0x40009ba	            0x415f	                                 pop r15	        98	intel_dp_mst.c	FUNCTION_1
0x40009bc	              0xc3	                                     ret	        98	intel_dp_mst.c	FUNCTION_1
intel_dp_mst_get_modes	WHILE,0:CALL,1:IF,0:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	21
0x4000470	    0x488bb7d00400	           mov rsi, qword [rdi + 0x4d0] 	       297	intel_dp_mst.c	FUNCTION_10
0x4000477	          0x4885f6	                           test rsi, rsi	       301	intel_dp_mst.c	FUNCTION_10	IF_1
0x400047a	            0x7435	                            je 0x40004b1	       301	intel_dp_mst.c	FUNCTION_10	IF_1
0x400047c	              0x55	                                push rbp	       346	intel_dp_mst.c	FUNCTION_13
0x400047d	              0x53	                                push rbx	       346	intel_dp_mst.c	FUNCTION_13
0x400047e	    0x4881c6f00500	                          add rsi, 0x5f0	       305	intel_dp_mst.c	FUNCTION_10	CALL_3
0x4000485	    0x488b97c80400	           mov rdx, qword [rdi + 0x4c8] 	       305	intel_dp_mst.c	FUNCTION_10	CALL_3
0x400048c	          0x4889fb	                            mov rbx, rdi	       305	intel_dp_mst.c	FUNCTION_10	CALL_3
0x400048f	      0xe800000000	                          call 0x4000494	       305	intel_dp_mst.c	FUNCTION_10	CALL_3
0x4000494	          0x4889df	                            mov rdi, rbx	       306	intel_dp_mst.c	FUNCTION_10	CALL_4
0x4000497	          0x4889c5	                            mov rbp, rax	       305	intel_dp_mst.c	FUNCTION_10	CALL_3
0x400049a	          0x4889c6	                            mov rsi, rax	       306	intel_dp_mst.c	FUNCTION_10	CALL_4
0x400049d	      0xe800000000	                          call 0x40004a2	       306	intel_dp_mst.c	FUNCTION_10	CALL_4
0x40004a2	          0x4889ef	                            mov rdi, rbp	       307	intel_dp_mst.c	FUNCTION_10	CALL_5
0x40004a5	            0x89c3	                            mov ebx, eax	       306	intel_dp_mst.c	FUNCTION_10	CALL_4
0x40004a7	      0xe800000000	                          call 0x40004ac	       307	intel_dp_mst.c	FUNCTION_10	CALL_5
0x40004ac	            0x89d8	                            mov eax, ebx	       348	intel_dp_mst.c	FUNCTION_13
0x40004ae	              0x5b	                                 pop rbx	       348	intel_dp_mst.c	FUNCTION_13
0x40004af	              0x5d	                                 pop rbp	       348	intel_dp_mst.c	FUNCTION_13
0x40004b0	              0xc3	                                     ret	       348	intel_dp_mst.c	FUNCTION_13
0x40004b1	      0xe900000000	                           jmp 0x40004b6	       302	intel_dp_mst.c	FUNCTION_10	IF_1	CALL_2
intel_mst_disable_dp	WHILE,0:CALL,7:IF,2:functions,0:ELSE,0:SWITCH,0:DO,0:FOR,0	43
0x40007a0	            0x4156	                                push r14	       135	intel_dp_mst.c	FUNCTION_3
0x40007a2	            0x4155	                                push r13	       135	intel_dp_mst.c	FUNCTION_3
0x40007a4	          0x4989d5	                            mov r13, rdx	       135	intel_dp_mst.c	FUNCTION_3
0x40007a7	            0x4154	                                push r12	       135	intel_dp_mst.c	FUNCTION_3
0x40007a9	              0x55	                                push rbp	       135	intel_dp_mst.c	FUNCTION_3
0x40007aa	          0x4989f4	                            mov r12, rsi	       135	intel_dp_mst.c	FUNCTION_3
0x40007ad	              0x53	                                push rbx	       135	intel_dp_mst.c	FUNCTION_3
0x40007ae	    0x488b9f080100	           mov rbx, qword [rdi + 0x108] 	       137	intel_dp_mst.c	FUNCTION_3
0x40007b5	    0x48c7c6000000	                              mov rsi, 0	       143	intel_dp_mst.c	FUNCTION_3	CALL_3
0x40007bc	          0x4c8b32	                    mov r14, qword [rdx]	       140	intel_dp_mst.c	FUNCTION_3	CALL_2
0x40007bf	          0x4889fd	                            mov rbp, rdi	       135	intel_dp_mst.c	FUNCTION_3
0x40007c2	      0xbf04000000	                              mov edi, 4	       143	intel_dp_mst.c	FUNCTION_3	CALL_3
0x40007c7	    0x8b93d0060000	           mov edx, dword [rbx + 0x6d0] 	       143	intel_dp_mst.c	FUNCTION_3	CALL_3
0x40007cd	    0x4881c3f80600	                          add rbx, 0x6f8	       145	intel_dp_mst.c	FUNCTION_3	CALL_4
0x40007d4	      0xe800000000	                          call 0x40007d9	       143	intel_dp_mst.c	FUNCTION_3	CALL_3
0x40007d9	    0x498bb6c80400	           mov rsi, qword [r14 + 0x4c8] 	       145	intel_dp_mst.c	FUNCTION_3	CALL_4
0x40007e0	          0x4889df	                            mov rdi, rbx	       145	intel_dp_mst.c	FUNCTION_3	CALL_4
0x40007e3	      0xe800000000	                          call 0x40007e8	       145	intel_dp_mst.c	FUNCTION_3	CALL_4
0x40007e8	          0x4889df	                            mov rdi, rbx	       147	intel_dp_mst.c	FUNCTION_3	CALL_5
0x40007eb	      0xe800000000	                          call 0x40007f0	       147	intel_dp_mst.c	FUNCTION_3	CALL_5
0x40007f0	            0x85c0	                           test eax, eax	       148	intel_dp_mst.c	FUNCTION_3	IF_1
0x40007f2	            0x752a	                           jne 0x400081e	       148	intel_dp_mst.c	FUNCTION_3	IF_1
0x40007f4	    0x4180bc244902	               cmp byte [r12 + 0x249], 0	       151	intel_dp_mst.c	FUNCTION_3	IF_2
0x40007fd	            0x7509	                           jne 0x4000808	       151	intel_dp_mst.c	FUNCTION_3	IF_2
0x40007ff	              0x5b	                                 pop rbx	       154	intel_dp_mst.c	FUNCTION_3
0x4000800	              0x5d	                                 pop rbp	       154	intel_dp_mst.c	FUNCTION_3
0x4000801	            0x415c	                                 pop r12	       154	intel_dp_mst.c	FUNCTION_3
0x4000803	            0x415d	                                 pop r13	       154	intel_dp_mst.c	FUNCTION_3
0x4000805	            0x415e	                                 pop r14	       154	intel_dp_mst.c	FUNCTION_3
0x4000807	              0xc3	                                     ret	       154	intel_dp_mst.c	FUNCTION_3
0x4000808	              0x5b	                                 pop rbx	       154	intel_dp_mst.c	FUNCTION_3
0x4000809	          0x4c89ea	                            mov rdx, r13	       152	intel_dp_mst.c	FUNCTION_3	IF_2	CALL_7
0x400080c	          0x4c89e6	                            mov rsi, r12	       152	intel_dp_mst.c	FUNCTION_3	IF_2	CALL_7
0x400080f	          0x4889ef	                            mov rdi, rbp	       152	intel_dp_mst.c	FUNCTION_3	IF_2	CALL_7
0x4000812	              0x5d	                                 pop rbp	       154	intel_dp_mst.c	FUNCTION_3
0x4000813	            0x415c	                                 pop r12	       154	intel_dp_mst.c	FUNCTION_3
0x4000815	            0x415d	                                 pop r13	       154	intel_dp_mst.c	FUNCTION_3
0x4000817	            0x415e	                                 pop r14	       154	intel_dp_mst.c	FUNCTION_3
0x4000819	      0xe900000000	                           jmp 0x400081e	       152	intel_dp_mst.c	FUNCTION_3	IF_2	CALL_7
0x400081e	            0x89c6	                            mov esi, eax	       149	intel_dp_mst.c	FUNCTION_3	IF_1	CALL_6
0x4000820	    0x48c7c7000000	                              mov rdi, 0	       149	intel_dp_mst.c	FUNCTION_3	IF_1	CALL_6
0x4000827	      0xe800000000	                          call 0x400082c	       149	intel_dp_mst.c	FUNCTION_3	IF_1	CALL_6
0x400082c	            0xebc6	                           jmp 0x40007f4	       149	intel_dp_mst.c	FUNCTION_3	IF_1	CALL_6
