reg_get_max_bandwidth	WHILE,0:FOR,0:ELSE,0:functions,0:CALL,7:IF,3:DO,0:SWITCH,0	83
0x4001940	        0x448b4710	            mov r8d, dword [rdi + 0x10] 	      1204	reg.c	FUNCTION_56	FOR_1
0x4001944	              0x53	                                push rbx	      1247	reg.c	FUNCTION_57
0x4001945	          0x4585c0	                           test r8d, r8d	      1204	reg.c	FUNCTION_56	FOR_1
0x4001948	            0x742e	                            je 0x4001978	      1204	reg.c	FUNCTION_56	FOR_1
0x400194a	        0x488d4720	                   lea rax, [rdi + 0x20]	      1205	reg.c	FUNCTION_56	FOR_1	IF_1
0x400194e	          0x4989f1	                             mov r9, rsi	      1205	reg.c	FUNCTION_56	FOR_1	IF_1
0x4001951	          0x4839c6	                            cmp rsi, rax	      1205	reg.c	FUNCTION_56	FOR_1	IF_1
0x4001954	     0xf84f1000000	                            je 0x4001a4b	      1205	reg.c	FUNCTION_56	FOR_1	IF_1
0x400195a	            0x31c0	                            xor eax, eax	      1205	reg.c	FUNCTION_56	FOR_1	IF_1
0x400195c	            0xeb12	                           jmp 0x4001970	      1205	reg.c	FUNCTION_56	FOR_1	IF_1
0x400195e	            0x89d1	                            mov ecx, edx	      1205	reg.c	FUNCTION_56	FOR_1	IF_1
0x4001960	        0x488d0c89	                  lea rcx, [rcx + rcx*4]	      1205	reg.c	FUNCTION_56	FOR_1	IF_1
0x4001964	      0x488d4ccf20	          lea rcx, [rdi + rcx*8 + 0x20] 	      1205	reg.c	FUNCTION_56	FOR_1	IF_1
0x4001969	          0x4839ce	                            cmp rsi, rcx	      1205	reg.c	FUNCTION_56	FOR_1	IF_1
0x400196c	            0x744d	                            je 0x40019bb	      1205	reg.c	FUNCTION_56	FOR_1	IF_1
0x400196e	            0x89d0	                            mov eax, edx	      1205	reg.c	FUNCTION_56	FOR_1	IF_1
0x4001970	          0x8d5001	                      lea edx, [rax + 1]	      1204	reg.c	FUNCTION_56	FOR_1
0x4001973	          0x4439c2	                            cmp edx, r8d	      1204	reg.c	FUNCTION_56	FOR_1
0x4001976	            0x75e6	                           jne 0x400195e	      1204	reg.c	FUNCTION_56	FOR_1
0x4001978	            0x31c0	                            xor eax, eax	      1209	reg.c	FUNCTION_56	IF_2
0x400197a	          0x8b5620	            mov edx, dword [rsi + 0x20] 	      1250	reg.c	FUNCTION_57	IF_1
0x400197d	    0xf7c200000100	                       test edx, 0x10000	      1250	reg.c	FUNCTION_57	IF_1
0x4001983	            0x740d	                            je 0x4001992	      1250	reg.c	FUNCTION_57	IF_1
0x4001985	      0x3d80380100	                        cmp eax, 0x13880	      1251	reg.c	FUNCTION_57	CALL_3
0x400198a	      0xb980380100	                        mov ecx, 0x13880	      1251	reg.c	FUNCTION_57	CALL_3
0x400198f	           0xf47c1	                          cmova eax, ecx	      1251	reg.c	FUNCTION_57	CALL_3
0x4001992	          0x80e680	                            and dh, 0x80	      1252	reg.c	FUNCTION_57	IF_2
0x4001995	            0x740d	                            je 0x40019a4	      1252	reg.c	FUNCTION_57	IF_2
0x4001997	      0x3d409c0000	                         cmp eax, 0x9c40	      1253	reg.c	FUNCTION_57	CALL_5
0x400199c	      0xba409c0000	                         mov edx, 0x9c40	      1253	reg.c	FUNCTION_57	CALL_5
0x40019a1	           0xf47c2	                          cmova eax, edx	      1253	reg.c	FUNCTION_57	CALL_5
0x40019a4	          0x8b5620	            mov edx, dword [rsi + 0x20] 	      1259	reg.c	FUNCTION_57	IF_3
0x40019a7	    0x81e200600000	                         and edx, 0x6000	      1259	reg.c	FUNCTION_57	IF_3
0x40019ad	    0x81fa00600000	                         cmp edx, 0x6000	      1259	reg.c	FUNCTION_57	IF_3
0x40019b3	     0xf8483000000	                            je 0x4001a3c	      1259	reg.c	FUNCTION_57	IF_3
0x40019b9	              0x5b	                                 pop rbx	      1264	reg.c	FUNCTION_57
0x40019ba	              0xc3	                                     ret	      1264	reg.c	FUNCTION_57
0x40019bb	            0x85d2	                           test edx, edx	      1214	reg.c	FUNCTION_56	WHILE_1
0x40019bd	     0xf8488000000	                            je 0x4001a4b	      1214	reg.c	FUNCTION_56	WHILE_1
0x40019c3	            0x89c1	                            mov ecx, eax	      1216	reg.c	FUNCTION_56	WHILE_1
0x40019c5	          0x448b16	                   mov r10d, dword [rsi]	      1218	reg.c	FUNCTION_56	WHILE_1	IF_3
0x40019c8	        0x488d0c89	                  lea rcx, [rcx + rcx*4]	      1216	reg.c	FUNCTION_56	WHILE_1
0x40019cc	        0x48c1e103	                              shl rcx, 3	      1216	reg.c	FUNCTION_56	WHILE_1
0x40019d0	      0x443b540f24	     cmp r10d, dword [rdi + rcx + 0x24] 	      1218	reg.c	FUNCTION_56	WHILE_1	IF_3
0x40019d5	      0x4c8d5c0f20	            lea r11, [rdi + rcx + 0x20] 	      1216	reg.c	FUNCTION_56	WHILE_1
0x40019da	            0x7622	                           jbe 0x40019fe	      1218	reg.c	FUNCTION_56	WHILE_1	IF_3
0x40019dc	            0xeb27	                           jmp 0x4001a05	      1218	reg.c	FUNCTION_56	WHILE_1	IF_3
0x40019de	          0x8d48ff	                      lea ecx, [rax - 1]	      1215	reg.c	FUNCTION_56	WHILE_1
0x40019e1	          0x458b13	                   mov r10d, dword [r11]	      1218	reg.c	FUNCTION_56	WHILE_1	IF_3
0x40019e4	          0x4889c8	                            mov rax, rcx	      1215	reg.c	FUNCTION_56	WHILE_1
0x40019e7	        0x488d0c89	                  lea rcx, [rcx + rcx*4]	      1216	reg.c	FUNCTION_56	WHILE_1
0x40019eb	        0x48c1e103	                              shl rcx, 3	      1216	reg.c	FUNCTION_56	WHILE_1
0x40019ef	      0x4439540f24	     cmp dword [rdi + rcx + 0x24], r10d 	      1218	reg.c	FUNCTION_56	WHILE_1	IF_3
0x40019f4	      0x488d5c0f20	            lea rbx, [rdi + rcx + 0x20] 	      1216	reg.c	FUNCTION_56	WHILE_1
0x40019f9	            0x720a	                            jb 0x4001a05	      1218	reg.c	FUNCTION_56	WHILE_1	IF_3
0x40019fb	          0x4989db	                            mov r11, rbx	      1216	reg.c	FUNCTION_56	WHILE_1
0x40019fe	            0x85c0	                           test eax, eax	      1214	reg.c	FUNCTION_56	WHILE_1
0x4001a00	            0x75dc	                           jne 0x40019de	      1214	reg.c	FUNCTION_56	WHILE_1
0x4001a02	          0x458b13	                   mov r10d, dword [r11]	      1214	reg.c	FUNCTION_56	WHILE_1
0x4001a05	        0x4183e801	                              sub r8d, 1	      1214	reg.c	FUNCTION_56	WHILE_1
0x4001a09	            0xeb20	                           jmp 0x4001a2b	      1214	reg.c	FUNCTION_56	WHILE_1
0x4001a0b	          0x8d4201	                      lea eax, [rdx + 1]	      1231	reg.c	FUNCTION_56	WHILE_2
0x4001a0e	        0x488d0c80	                  lea rcx, [rax + rax*4]	      1232	reg.c	FUNCTION_56	WHILE_2
0x4001a12	          0x4889c2	                            mov rdx, rax	      1231	reg.c	FUNCTION_56	WHILE_2
0x4001a15	        0x418b4104	                 mov eax, dword [r9 + 4]	      1234	reg.c	FUNCTION_56	WHILE_2	IF_4
0x4001a19	        0x48c1e103	                              shl rcx, 3	      1232	reg.c	FUNCTION_56	WHILE_2
0x4001a1d	        0x39440f20	      cmp dword [rdi + rcx + 0x20], eax 	      1234	reg.c	FUNCTION_56	WHILE_2	IF_4
0x4001a21	      0x4c8d5c0f20	            lea r11, [rdi + rcx + 0x20] 	      1232	reg.c	FUNCTION_56	WHILE_2
0x4001a26	            0x770c	                            ja 0x4001a34	      1234	reg.c	FUNCTION_56	WHILE_2	IF_4
0x4001a28	          0x4d89d9	                             mov r9, r11	      1237	reg.c	FUNCTION_56	WHILE_2
0x4001a2b	          0x4139d0	                            cmp r8d, edx	      1230	reg.c	FUNCTION_56	WHILE_2
0x4001a2e	            0x77db	                            ja 0x4001a0b	      1230	reg.c	FUNCTION_56	WHILE_2
0x4001a30	        0x418b4104	                 mov eax, dword [r9 + 4]	      1230	reg.c	FUNCTION_56	WHILE_2
0x4001a34	          0x4429d0	                           sub eax, r10d	      1242	reg.c	FUNCTION_56
0x4001a37	      0xe93effffff	                           jmp 0x400197a	      1242	reg.c	FUNCTION_56
0x4001a3c	      0x3d204e0000	                         cmp eax, 0x4e20	      1261	reg.c	FUNCTION_57	CALL_7
0x4001a41	      0xba204e0000	                         mov edx, 0x4e20	      1261	reg.c	FUNCTION_57	CALL_7
0x4001a46	           0xf47c2	                          cmova eax, edx	      1261	reg.c	FUNCTION_57	CALL_7
0x4001a49	              0x5b	                                 pop rbx	      1264	reg.c	FUNCTION_57
0x4001a4a	              0xc3	                                     ret	      1264	reg.c	FUNCTION_57
0x4001a4b	          0x448b16	                   mov r10d, dword [rsi]	      1264	reg.c	FUNCTION_57
0x4001a4e	            0x31d2	                            xor edx, edx	      1216	reg.c	FUNCTION_56	WHILE_1
0x4001a50	            0xebb3	                           jmp 0x4001a05	      1216	reg.c	FUNCTION_56	WHILE_1
wiphy_apply_custom_regulatory	WHILE,0:FOR,1:ELSE,0:functions,0:CALL,3:IF,1:DO,0:SWITCH,0	63
0x4001c30	            0x4157	                                push r15	      2345	reg.c	FUNCTION_100
0x4001c32	            0x4156	                                push r14	      2345	reg.c	FUNCTION_100
0x4001c34	            0x4155	                                push r13	      2345	reg.c	FUNCTION_100
0x4001c36	            0x4154	                                push r12	      2345	reg.c	FUNCTION_100
0x4001c38	              0x55	                                push rbp	      2345	reg.c	FUNCTION_100
0x4001c39	              0x53	                                push rbx	      2345	reg.c	FUNCTION_100
0x4001c3a	          0x4889f5	                            mov rbp, rsi	      2345	reg.c	FUNCTION_100
0x4001c3d	          0x4889fb	                            mov rbx, rdi	      2345	reg.c	FUNCTION_100
0x4001c40	        0x4883ec08	                              sub rsp, 8	      2345	reg.c	FUNCTION_100
0x4001c44	          0x8b4738	            mov eax, dword [rdi + 0x38] 	      2349	reg.c	FUNCTION_100	CALL_1
0x4001c47	            0xa801	                              test al, 1	      2349	reg.c	FUNCTION_100	CALL_1
0x4001c49	            0x7474	                            je 0x4001cbf	      2349	reg.c	FUNCTION_100	CALL_1
0x4001c4b	          0x83c801	                               or eax, 1	      2351	reg.c	FUNCTION_100
0x4001c4e	    0x4c8da3f80000	                   lea r12, [rbx + 0xf8]	      2351	reg.c	FUNCTION_100
0x4001c55	          0x4531ed	                          xor r13d, r13d	      2347	reg.c	FUNCTION_100
0x4001c58	          0x894338	             mov dword [rbx + 0x38], eax	      2351	reg.c	FUNCTION_100
0x4001c5b	    0x488d83100100	                  lea rax, [rbx + 0x110]	      2351	reg.c	FUNCTION_100
0x4001c62	        0x4883c338	                           add rbx, 0x38	      2351	reg.c	FUNCTION_100
0x4001c66	        0x48890424	                    mov qword [rsp], rax	      2351	reg.c	FUNCTION_100
0x4001c6a	        0x4d8b3424	                    mov r14, qword [r12]	      2354	reg.c	FUNCTION_100	FOR_1	IF_1
0x4001c6e	          0x4d85f6	                           test r14, r14	      2354	reg.c	FUNCTION_100	FOR_1	IF_1
0x4001c71	            0x742e	                            je 0x4001ca1	      2354	reg.c	FUNCTION_100	FOR_1	IF_1
0x4001c73	        0x418b4614	            mov eax, dword [r14 + 0x14] 	      2338	reg.c	ELSE_3	FUNCTION_99	FOR_1
0x4001c77	          0x4531ff	                          xor r15d, r15d	      2338	reg.c	ELSE_3	FUNCTION_99	FOR_1
0x4001c7a	            0x85c0	                           test eax, eax	      2338	reg.c	ELSE_3	FUNCTION_99	FOR_1
0x4001c7c	            0x741f	                            je 0x4001c9d	      2338	reg.c	ELSE_3	FUNCTION_99	FOR_1
0x4001c7e	          0x4489fe	                           mov esi, r15d	      2339	reg.c	ELSE_3	FUNCTION_99	CALL_1
0x4001c81	          0x4889ea	                            mov rdx, rbp	      2339	reg.c	ELSE_3	FUNCTION_99	CALL_1
0x4001c84	          0x4889df	                            mov rdi, rbx	      2339	reg.c	ELSE_3	FUNCTION_99	CALL_1
0x4001c87	        0x48c1e606	                              shl rsi, 6	      2339	reg.c	ELSE_3	FUNCTION_99	CALL_1
0x4001c8b	          0x490336	                    add rsi, qword [r14]	      2339	reg.c	ELSE_3	FUNCTION_99	CALL_1
0x4001c8e	        0x4183c701	                             add r15d, 1	      2338	reg.c	ELSE_3	FUNCTION_99	FOR_1
0x4001c92	      0xe889feffff	  call sym.handle_channel_custom.isra.16	      2339	reg.c	ELSE_3	FUNCTION_99	CALL_1
0x4001c97	        0x453b7e14	           cmp r15d, dword [r14 + 0x14] 	      2338	reg.c	ELSE_3	FUNCTION_99	FOR_1
0x4001c9b	            0x72e1	                            jb 0x4001c7e	      2338	reg.c	ELSE_3	FUNCTION_99	FOR_1
0x4001c9d	        0x4183c501	                             add r13d, 1	      2357	reg.c	FUNCTION_100	FOR_1
0x4001ca1	        0x4983c408	                              add r12, 8	      2357	reg.c	FUNCTION_100	FOR_1
0x4001ca5	        0x4c3b2424	                    cmp r12, qword [rsp]	      2353	reg.c	FUNCTION_100	FOR_1
0x4001ca9	            0x75bf	                           jne 0x4001c6a	      2353	reg.c	FUNCTION_100	FOR_1
0x4001cab	          0x4585ed	                         test r13d, r13d	      2364	reg.c	FUNCTION_100	CALL_3
0x4001cae	            0x7425	                            je 0x4001cd5	      2364	reg.c	FUNCTION_100	CALL_3
0x4001cb0	        0x4883c408	                              add rsp, 8	      2365	reg.c	FUNCTION_100
0x4001cb4	              0x5b	                                 pop rbx	      2365	reg.c	FUNCTION_100
0x4001cb5	              0x5d	                                 pop rbp	      2365	reg.c	FUNCTION_100
0x4001cb6	            0x415c	                                 pop r12	      2365	reg.c	FUNCTION_100
0x4001cb8	            0x415d	                                 pop r13	      2365	reg.c	FUNCTION_100
0x4001cba	            0x415e	                                 pop r14	      2365	reg.c	FUNCTION_100
0x4001cbc	            0x415f	                                 pop r15	      2365	reg.c	FUNCTION_100
0x4001cbe	              0xc3	                                     ret	      2365	reg.c	FUNCTION_100
0x4001cbf	    0x48c7c7000000	                              mov rdi, 0	      2349	reg.c	FUNCTION_100	CALL_1
0x4001cc6	      0xe800000000	                          call 0x4001ccb	      2349	reg.c	FUNCTION_100	CALL_1
0x4001ccb	             0xf0b	                                     ud2	      2349	reg.c	FUNCTION_100	CALL_1
0x4001ccd	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      2349	reg.c	FUNCTION_100	CALL_1
0x4001cd0	      0xe976ffffff	                           jmp 0x4001c4b	      2349	reg.c	FUNCTION_100	CALL_1
0x4001cd5	             0xf0b	                                     ud2	      2349	reg.c	FUNCTION_100	CALL_1
0x4001cd7	        0x4883c408	                              add rsp, 8	      2365	reg.c	FUNCTION_100
0x4001cdb	              0x5b	                                 pop rbx	      2365	reg.c	FUNCTION_100
0x4001cdc	              0x5d	                                 pop rbp	      2365	reg.c	FUNCTION_100
0x4001cdd	            0x415c	                                 pop r12	      2365	reg.c	FUNCTION_100
0x4001cdf	            0x415d	                                 pop r13	      2365	reg.c	FUNCTION_100
0x4001ce1	            0x415e	                                 pop r14	      2365	reg.c	FUNCTION_100
0x4001ce3	            0x415f	                                 pop r15	      2365	reg.c	FUNCTION_100
0x4001ce5	              0xc3	                                     ret	      2365	reg.c	FUNCTION_100
crda_timeout_work	WHILE,0:FOR,0:ELSE,0:functions,0:CALL,4:IF,0:DO,0:SWITCH,0	5
0x40034c0	      0xe800000000	                          call 0x40034c5	       524	reg.c	FUNCTION_23	CALL_2
0x40034c5	    0x830500000000	               add dword [0x040034cc], 1	       525	reg.c	FUNCTION_23
0x40034cc	      0xbf01000000	                              mov edi, 1	       526	reg.c	FUNCTION_23	CALL_3
0x40034d1	      0xe8aafaffff	    call sym.restore_regulatory_settings	       526	reg.c	FUNCTION_23	CALL_3
0x40034d6	      0xe900000000	                           jmp 0x40034db	       527	reg.c	FUNCTION_23	CALL_4
set_wmm_rule	WHILE,0:FOR,1:ELSE,0:functions,0:CALL,6:IF,0:DO,0:SWITCH,0	43
0x4000120	        0x4c8d4720	                    lea r8, [rdi + 0x20]	       865	reg.c	FUNCTION_44
0x4000124	      0xba01000000	                              mov edx, 1	       869	reg.c	FUNCTION_44	FOR_1
0x4000129	           0xfb60e	                   movzx ecx, byte [rsi]	       869	reg.c	FUNCTION_44	FOR_1
0x400012c	            0x89d0	                            mov eax, edx	       869	reg.c	FUNCTION_44	FOR_1
0x400012e	        0x4883c708	                              add rdi, 8	       869	reg.c	FUNCTION_44	FOR_1
0x4000132	        0x4883c604	                              add rsi, 4	       869	reg.c	FUNCTION_44	FOR_1
0x4000136	          0xc0e904	                               shr cl, 4	       869	reg.c	FUNCTION_44	FOR_1
0x4000139	            0xd3e0	                             shl eax, cl	       869	reg.c	FUNCTION_44	FOR_1
0x400013b	          0x83e801	                              sub eax, 1	       869	reg.c	FUNCTION_44	FOR_1
0x400013e	        0x668947f8	                  mov word [rdi - 8], ax	       869	reg.c	FUNCTION_44	FOR_1
0x4000142	         0xfb64efc	               movzx ecx, byte [rsi - 4]	       871	reg.c	FUNCTION_44	FOR_1	CALL_2
0x4000146	            0x89d0	                            mov eax, edx	       871	reg.c	FUNCTION_44	FOR_1	CALL_2
0x4000148	          0x83e10f	                            and ecx, 0xf	       871	reg.c	FUNCTION_44	FOR_1	CALL_2
0x400014b	            0xd3e0	                             shl eax, cl	       871	reg.c	FUNCTION_44	FOR_1	CALL_2
0x400014d	          0x83e801	                              sub eax, 1	       871	reg.c	FUNCTION_44	FOR_1	CALL_2
0x4000150	        0x668947fa	                  mov word [rdi - 6], ax	       871	reg.c	FUNCTION_44	FOR_1	CALL_2
0x4000154	         0xfb646fd	               movzx eax, byte [rsi - 3]	       872	reg.c	FUNCTION_44	FOR_1
0x4000158	          0x8847fe	                  mov byte [rdi - 2], al	       872	reg.c	FUNCTION_44	FOR_1
0x400015b	         0xfb746fe	               movzx eax, word [rsi - 2]	       873	reg.c	FUNCTION_44	FOR_1	CALL_3
0x400015f	        0x66c1c008	                               rol ax, 8	       873	reg.c	FUNCTION_44	FOR_1	CALL_3
0x4000163	      0x6669c0e803	                      imul ax, ax, 0x3e8	       873	reg.c	FUNCTION_44	FOR_1	CALL_3
0x4000168	        0x668947fc	                  mov word [rdi - 4], ax	       873	reg.c	FUNCTION_44	FOR_1	CALL_3
0x400016c	         0xfb64e0c	            movzx ecx, byte [rsi + 0xc] 	       874	reg.c	FUNCTION_44	FOR_1	CALL_4
0x4000170	            0x89d0	                            mov eax, edx	       874	reg.c	FUNCTION_44	FOR_1	CALL_4
0x4000172	          0xc0e904	                               shr cl, 4	       874	reg.c	FUNCTION_44	FOR_1	CALL_4
0x4000175	            0xd3e0	                             shl eax, cl	       874	reg.c	FUNCTION_44	FOR_1	CALL_4
0x4000177	          0x83e801	                              sub eax, 1	       874	reg.c	FUNCTION_44	FOR_1	CALL_4
0x400017a	        0x66894718	               mov word [rdi + 0x18], ax	       874	reg.c	FUNCTION_44	FOR_1	CALL_4
0x400017e	         0xfb64e0c	            movzx ecx, byte [rsi + 0xc] 	       875	reg.c	FUNCTION_44	FOR_1	CALL_5
0x4000182	            0x89d0	                            mov eax, edx	       875	reg.c	FUNCTION_44	FOR_1	CALL_5
0x4000184	          0x83e10f	                            and ecx, 0xf	       875	reg.c	FUNCTION_44	FOR_1	CALL_5
0x4000187	            0xd3e0	                             shl eax, cl	       875	reg.c	FUNCTION_44	FOR_1	CALL_5
0x4000189	          0x83e801	                              sub eax, 1	       875	reg.c	FUNCTION_44	FOR_1	CALL_5
0x400018c	        0x6689471a	               mov word [rdi + 0x1a], ax	       875	reg.c	FUNCTION_44	FOR_1	CALL_5
0x4000190	         0xfb6460d	            movzx eax, byte [rsi + 0xd] 	       876	reg.c	FUNCTION_44	FOR_1
0x4000194	          0x88471e	               mov byte [rdi + 0x1e], al	       876	reg.c	FUNCTION_44	FOR_1
0x4000197	         0xfb7460e	            movzx eax, word [rsi + 0xe] 	       877	reg.c	FUNCTION_44	FOR_1	CALL_6
0x400019b	        0x66c1c008	                               rol ax, 8	       877	reg.c	FUNCTION_44	FOR_1	CALL_6
0x400019f	      0x6669c0e803	                      imul ax, ax, 0x3e8	       877	reg.c	FUNCTION_44	FOR_1	CALL_6
0x40001a4	        0x6689471c	               mov word [rdi + 0x1c], ax	       877	reg.c	FUNCTION_44	FOR_1	CALL_6
0x40001a8	          0x4c39c7	                             cmp rdi, r8	       868	reg.c	FUNCTION_44	FOR_1
0x40001ab	     0xf8578ffffff	                           jne 0x4000129	       868	reg.c	FUNCTION_44	FOR_1
0x40001b1	            0xf3c3	                                     ret	       879	reg.c	FUNCTION_44
regdb_fw_cb	WHILE,0:FOR,0:ELSE,4:functions,0:CALL,13:IF,7:DO,0:SWITCH,0	59
0x40033d0	          0x4885ff	                           test rdi, rdi	      1077	reg.c	FUNCTION_50	IF_1
0x40033d3	            0x4154	                                push r12	      1072	reg.c	FUNCTION_50
0x40033d5	              0x55	                                push rbp	      1072	reg.c	FUNCTION_50
0x40033d6	          0x4889f5	                            mov rbp, rsi	      1072	reg.c	FUNCTION_50
0x40033d9	              0x53	                                push rbx	      1072	reg.c	FUNCTION_50
0x40033da	          0x4889fb	                            mov rbx, rdi	      1072	reg.c	FUNCTION_50
0x40033dd	     0xf8481000000	                            je 0x4003464	      1077	reg.c	FUNCTION_50	IF_1
0x40033e3	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1080	reg.c	FUNCTION_50	ELSE_1	IF_2	CALL_2
0x40033e7	            0x8b33	                    mov esi, dword [rbx]	      1080	reg.c	FUNCTION_50	ELSE_1	IF_2	CALL_2
0x40033e9	      0xe802d4ffff	                    call sym.valid_regdb	      1080	reg.c	FUNCTION_50	ELSE_1	IF_2	CALL_2
0x40033ee	            0x84c0	                             test al, al	      1080	reg.c	FUNCTION_50	ELSE_1	IF_2	CALL_2
0x40033f0	     0xf84ad000000	                            je 0x40034a3	      1080	reg.c	FUNCTION_50	ELSE_1	IF_2	CALL_2
0x40033f6	      0xe800000000	                          call 0x40033fb	      1085	reg.c	FUNCTION_50	CALL_4
0x40033fb	    0x488b05000000	            mov rax, qword [0x04003402] 	      1086	reg.c	FUNCTION_50	IF_3	CALL_6
0x4003402	          0x4885c0	                           test rax, rax	      1086	reg.c	FUNCTION_50	IF_3	CALL_6
0x4003405	            0x742d	                            je 0x4003434	      1086	reg.c	FUNCTION_50	IF_3	CALL_6
0x4003407	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      1086	reg.c	FUNCTION_50	IF_3	CALL_6
0x400340d	            0x7725	                            ja 0x4003434	      1086	reg.c	FUNCTION_50	IF_3	CALL_6
0x400340f	             0xf0b	                                     ud2	      1086	reg.c	FUNCTION_50	IF_3	CALL_6
0x4003411	      0xbf01000000	                              mov edi, 1	      1101	reg.c	FUNCTION_50	CALL_10
0x4003416	      0xe865fbffff	    call sym.restore_regulatory_settings	      1101	reg.c	FUNCTION_50	CALL_10
0x400341b	      0xe800000000	                          call 0x4003420	      1103	reg.c	FUNCTION_50	CALL_11
0x4003420	          0x4889ef	                            mov rdi, rbp	      1105	reg.c	FUNCTION_50	CALL_12
0x4003423	      0xe800000000	                          call 0x4003428	      1105	reg.c	FUNCTION_50	CALL_12
0x4003428	          0x4889df	                            mov rdi, rbx	      1107	reg.c	FUNCTION_50	CALL_13
0x400342b	              0x5b	                                 pop rbx	      1108	reg.c	FUNCTION_50
0x400342c	              0x5d	                                 pop rbp	      1108	reg.c	FUNCTION_50
0x400342d	            0x415c	                                 pop r12	      1108	reg.c	FUNCTION_50
0x400342f	      0xe900000000	                           jmp 0x4003434	      1107	reg.c	FUNCTION_50	CALL_13
0x4003434	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1091	reg.c	FUNCTION_50	ELSE_3	IF_5	CALL_8
0x4003438	          0x488b33	                    mov rsi, qword [rbx]	      1091	reg.c	FUNCTION_50	ELSE_3	IF_5	CALL_8
0x400343b	      0xbac0004001	                      mov edx, 0x14000c0	      1091	reg.c	FUNCTION_50	ELSE_3	IF_5	CALL_8
0x4003440	      0xe800000000	                          call 0x4003445	      1091	reg.c	FUNCTION_50	ELSE_3	IF_5	CALL_8
0x4003445	          0x4885c0	                           test rax, rax	      1092	reg.c	FUNCTION_50	ELSE_3	IF_5	IF_6
0x4003448	            0x74c7	                            je 0x4003411	      1092	reg.c	FUNCTION_50	ELSE_3	IF_5	IF_6
0x400344a	          0x4885ed	                           test rbp, rbp	      1094	reg.c	FUNCTION_50	ELSE_3	IF_5	IF_6	CALL_9
0x400344d	    0x488905000000	            mov qword [0x04003454], rax 	      1093	reg.c	FUNCTION_50	ELSE_3	IF_5	IF_6
0x4003454	            0x74c5	                            je 0x400341b	      1094	reg.c	FUNCTION_50	ELSE_3	IF_5	IF_6	CALL_9
0x4003456	          0x4889ef	                            mov rdi, rbp	      1094	reg.c	FUNCTION_50	ELSE_3	IF_5	IF_6	CALL_9
0x4003459	      0xe802deffff	                    call sym.query_regdb	      1094	reg.c	FUNCTION_50	ELSE_3	IF_5	IF_6	CALL_9
0x400345e	            0x85c0	                           test eax, eax	      1100	reg.c	FUNCTION_50	IF_7
0x4003460	            0x74b9	                            je 0x400341b	      1100	reg.c	FUNCTION_50	IF_7
0x4003462	            0xebad	                           jmp 0x4003411	      1100	reg.c	FUNCTION_50	IF_7
0x4003464	    0x48c7c7000000	                              mov rdi, 0	      1078	reg.c	FUNCTION_50	IF_1	CALL_1
0x400346b	    0x41bcc3ffffff	                    mov r12d, 0xffffffc3	      1079	reg.c	FUNCTION_50	IF_1
0x4003471	      0xe800000000	                          call 0x4003476	      1078	reg.c	FUNCTION_50	IF_1	CALL_1
0x4003476	      0xe800000000	                          call 0x400347b	      1085	reg.c	FUNCTION_50	CALL_4
0x400347b	    0x488b15000000	            mov rdx, qword [0x04003482] 	      1086	reg.c	FUNCTION_50	IF_3	CALL_6
0x4003482	          0x4885d2	                           test rdx, rdx	      1086	reg.c	FUNCTION_50	IF_3	CALL_6
0x4003485	            0x740d	                            je 0x4003494	      1086	reg.c	FUNCTION_50	IF_3	CALL_6
0x4003487	    0x4881fa00f0ff	             cmp rdx, 0xfffffffffffff000	      1086	reg.c	FUNCTION_50	IF_3	CALL_6
0x400348e	     0xf867bffffff	                           jbe 0x400340f	      1086	reg.c	FUNCTION_50	IF_3	CALL_6
0x4003494	          0x4963c4	                        movsxd rax, r12d	      1089	reg.c	FUNCTION_50	ELSE_2	IF_4	CALL_7
0x4003497	    0x488905000000	            mov qword [0x0400349e], rax 	      1089	reg.c	FUNCTION_50	ELSE_2	IF_4	CALL_7
0x400349e	      0xe96effffff	                           jmp 0x4003411	      1089	reg.c	FUNCTION_50	ELSE_2	IF_4	CALL_7
0x40034a3	    0x48c7c7000000	                              mov rdi, 0	      1081	reg.c	FUNCTION_50	ELSE_1	IF_2	CALL_3
0x40034aa	    0x41bceaffffff	                    mov r12d, 0xffffffea	      1082	reg.c	FUNCTION_50	ELSE_1	IF_2
0x40034b0	      0xe800000000	                          call 0x40034b5	      1081	reg.c	FUNCTION_50	ELSE_1	IF_2	CALL_3
0x40034b5	            0xebbf	                           jmp 0x4003476	      1081	reg.c	FUNCTION_50	ELSE_1	IF_2	CALL_3
map_regdom_flags	WHILE,0:FOR,0:ELSE,0:functions,0:CALL,0:IF,9:DO,0:SWITCH,0	39
0x4000040	            0x89f8	                            mov eax, edi	      1567	reg.c	FUNCTION_66	IF_1
0x4000042	      0x2580010000	                          and eax, 0x180	      1567	reg.c	FUNCTION_66	IF_1
0x4000047	          0x83f801	                              cmp eax, 1	      1568	reg.c	FUNCTION_66	IF_1
0x400004a	            0x19c0	                            sbb eax, eax	      1568	reg.c	FUNCTION_66	IF_1
0x400004c	            0xf7d0	                                 not eax	      1568	reg.c	FUNCTION_66	IF_1
0x400004e	          0x83e002	                              and eax, 2	      1568	reg.c	FUNCTION_66	IF_1
0x4000051	            0x89c2	                            mov edx, eax	      1570	reg.c	FUNCTION_66	IF_2
0x4000053	          0x83ca08	                               or edx, 8	      1570	reg.c	FUNCTION_66	IF_2
0x4000056	        0x40f6c710	                          test dil, 0x10	      1570	reg.c	FUNCTION_66	IF_2
0x400005a	           0xf45c2	                         cmovne eax, edx	      1570	reg.c	FUNCTION_66	IF_2
0x400005d	            0x89c2	                            mov edx, eax	      1572	reg.c	FUNCTION_66	IF_3
0x400005f	          0x83ca40	                            or edx, 0x40	      1572	reg.c	FUNCTION_66	IF_3
0x4000062	        0x40f6c701	                             test dil, 1	      1572	reg.c	FUNCTION_66	IF_3
0x4000066	           0xf45c2	                         cmovne eax, edx	      1572	reg.c	FUNCTION_66	IF_3
0x4000069	            0x89c2	                            mov edx, eax	      1574	reg.c	FUNCTION_66	IF_4
0x400006b	          0x80ce02	                                or dh, 2	      1574	reg.c	FUNCTION_66	IF_4
0x400006e	        0x40f6c708	                             test dil, 8	      1574	reg.c	FUNCTION_66	IF_4
0x4000072	           0xf45c2	                         cmovne eax, edx	      1574	reg.c	FUNCTION_66	IF_4
0x4000075	            0x89c2	                            mov edx, eax	      1576	reg.c	FUNCTION_66	IF_5
0x4000077	          0x80ce04	                                or dh, 4	      1576	reg.c	FUNCTION_66	IF_5
0x400007a	    0xf7c700100000	                        test edi, 0x1000	      1576	reg.c	FUNCTION_66	IF_5
0x4000080	           0xf45c2	                         cmovne eax, edx	      1576	reg.c	FUNCTION_66	IF_5
0x4000083	            0x89c2	                            mov edx, eax	      1578	reg.c	FUNCTION_66	IF_6
0x4000085	          0x83ca20	                            or edx, 0x20	      1578	reg.c	FUNCTION_66	IF_6
0x4000088	    0xf7c700200000	                        test edi, 0x2000	      1578	reg.c	FUNCTION_66	IF_6
0x400008e	           0xf45c2	                         cmovne eax, edx	      1578	reg.c	FUNCTION_66	IF_6
0x4000091	            0x89c2	                            mov edx, eax	      1580	reg.c	FUNCTION_66	IF_7
0x4000093	          0x83ca10	                            or edx, 0x10	      1580	reg.c	FUNCTION_66	IF_7
0x4000096	    0xf7c700400000	                        test edi, 0x4000	      1580	reg.c	FUNCTION_66	IF_7
0x400009c	           0xf45c2	                         cmovne eax, edx	      1580	reg.c	FUNCTION_66	IF_7
0x400009f	            0x89c2	                            mov edx, eax	      1582	reg.c	FUNCTION_66	IF_8
0x40000a1	          0x80ca80	                             or dl, 0x80	      1582	reg.c	FUNCTION_66	IF_8
0x40000a4	    0xf7c700800000	                        test edi, 0x8000	      1582	reg.c	FUNCTION_66	IF_8
0x40000aa	           0xf45c2	                         cmovne eax, edx	      1582	reg.c	FUNCTION_66	IF_8
0x40000ad	            0x89c2	                            mov edx, eax	      1584	reg.c	FUNCTION_66	IF_9
0x40000af	          0x80ce01	                                or dh, 1	      1584	reg.c	FUNCTION_66	IF_9
0x40000b2	    0x81e700000100	                        and edi, 0x10000	      1584	reg.c	FUNCTION_66	IF_9
0x40000b8	           0xf45c2	                         cmovne eax, edx	      1584	reg.c	FUNCTION_66	IF_9
0x40000bb	              0xc3	                                     ret	      1586	reg.c	FUNCTION_66
regulatory_indoor_allowed	WHILE,0:FOR,0:ELSE,0:functions,0:CALL,0:IF,0:DO,0:SWITCH,0	2
0x4003e40	     0xfb605000000	           movzx eax, byte [0x04003e47] 	      3775	reg.c	FUNCTION_148
0x4003e47	              0xc3	                                     ret	      3775	reg.c	FUNCTION_148
freq_reg_info_regd	WHILE,0:FOR,1:ELSE,0:functions,0:CALL,5:IF,4:DO,0:SWITCH,0	86
0x40001c0	          0x4885f6	                           test rsi, rsi	      1596	reg.c	FUNCTION_67	IF_1
0x40001c3	     0xf84e9000000	                            je 0x40002b2	      1596	reg.c	FUNCTION_67	IF_1
0x40001c9	          0x8b4610	            mov eax, dword [rsi + 0x10] 	      1599	reg.c	FUNCTION_67	FOR_1
0x40001cc	            0x85c0	                           test eax, eax	      1599	reg.c	FUNCTION_67	FOR_1
0x40001ce	     0xf84e6000000	                            je 0x40002ba	      1599	reg.c	FUNCTION_67	FOR_1
0x40001d4	            0x4157	                                push r15	      1591	reg.c	FUNCTION_67
0x40001d6	            0x4156	                                push r14	      1591	reg.c	FUNCTION_67
0x40001d8	          0x4989f6	                            mov r14, rsi	      1591	reg.c	FUNCTION_67
0x40001db	            0x4155	                                push r13	      1591	reg.c	FUNCTION_67
0x40001dd	            0x4154	                                push r12	      1591	reg.c	FUNCTION_67
0x40001df	              0x55	                                push rbp	      1591	reg.c	FUNCTION_67
0x40001e0	              0x53	                                push rbx	      1591	reg.c	FUNCTION_67
0x40001e1	            0x89fb	                            mov ebx, edi	      1591	reg.c	FUNCTION_67
0x40001e3	        0x4883ec08	                              sub rsp, 8	      1591	reg.c	FUNCTION_67
0x40001e7	    0x81ff41a5ae02	                      cmp edi, 0x2aea541	      1591	reg.c	FUNCTION_67
0x40001ed	          0x4519e4	                          sbb r12d, r12d	      1591	reg.c	FUNCTION_67
0x40001f0	        0x89542404	                mov dword [rsp + 4], edx	      1591	reg.c	FUNCTION_67
0x40001f4	          0x4531ff	                          xor r15d, r15d	      1599	reg.c	FUNCTION_67	FOR_1
0x40001f7	    0x4181e400ee85	                    and r12d, 0xff85ee00	      1599	reg.c	FUNCTION_67	FOR_1
0x40001fe	          0x4531ed	                          xor r13d, r13d	      1599	reg.c	FUNCTION_67	FOR_1
0x4000201	    0x4181c4809698	                      add r12d, 0x989680	      1599	reg.c	FUNCTION_67	FOR_1
0x4000208	            0xeb3d	                           jmp 0x4000247	      1599	reg.c	FUNCTION_67	FOR_1
0x400020a	          0x4c01f1	                            add rcx, r14	      1333	reg.c	FUNCTION_60	IF_1	CALL_1
0x400020d	            0x89da	                            mov edx, ebx	      1333	reg.c	FUNCTION_60	IF_1	CALL_1
0x400020f	          0x2b5120	             sub edx, dword [rcx + 0x20]	      1333	reg.c	FUNCTION_60	IF_1	CALL_1
0x4000212	            0x89d0	                            mov eax, edx	      1333	reg.c	FUNCTION_60	IF_1	CALL_1
0x4000214	          0xc1f81f	                           sar eax, 0x1f	      1333	reg.c	FUNCTION_60	IF_1	CALL_1
0x4000217	            0x31c2	                            xor edx, eax	      1333	reg.c	FUNCTION_60	IF_1	CALL_1
0x4000219	            0x29c2	                            sub edx, eax	      1333	reg.c	FUNCTION_60	IF_1	CALL_1
0x400021b	          0x4439e2	                           cmp edx, r12d	      1333	reg.c	FUNCTION_60	IF_1	CALL_1
0x400021e	            0x763c	                           jbe 0x400025c	      1333	reg.c	FUNCTION_60	IF_1	CALL_1
0x4000220	            0x89d8	                            mov eax, ebx	      1335	reg.c	FUNCTION_60	IF_2	CALL_2
0x4000222	          0x2b4124	             sub eax, dword [rcx + 0x24]	      1335	reg.c	FUNCTION_60	IF_2	CALL_2
0x4000225	              0x99	                                     cdq	      1335	reg.c	FUNCTION_60	IF_2	CALL_2
0x4000226	            0x31d0	                            xor eax, edx	      1335	reg.c	FUNCTION_60	IF_2	CALL_2
0x4000228	            0x29d0	                            sub eax, edx	      1335	reg.c	FUNCTION_60	IF_2	CALL_2
0x400022a	          0x4139c4	                           cmp r12d, eax	      1335	reg.c	FUNCTION_60	IF_2	CALL_2
0x400022d	            0x732d	                           jae 0x400025c	      1335	reg.c	FUNCTION_60	IF_2	CALL_2
0x400022f	        0x8b542404	                mov edx, dword [rsp + 4]	      1614	reg.c	FUNCTION_67	FOR_1	CALL_3
0x4000233	            0x89de	                            mov esi, ebx	      1614	reg.c	FUNCTION_67	FOR_1	CALL_3
0x4000235	          0x4889ef	                            mov rdi, rbp	      1614	reg.c	FUNCTION_67	FOR_1	CALL_3
0x4000238	        0x4183c501	                             add r13d, 1	      1599	reg.c	FUNCTION_67	FOR_1
0x400023c	      0xe800000000	                          call 0x4000241	      1614	reg.c	FUNCTION_67	FOR_1	CALL_3
0x4000241	        0x45396e10	           cmp dword [r14 + 0x10], r13d 	      1599	reg.c	FUNCTION_67	FOR_1
0x4000245	            0x7637	                           jbe 0x400027e	      1599	reg.c	FUNCTION_67	FOR_1
0x4000247	          0x4963c5	                        movsxd rax, r13d	      1603	reg.c	FUNCTION_67	FOR_1
0x400024a	        0x488d0c80	                  lea rcx, [rax + rax*4]	      1603	reg.c	FUNCTION_67	FOR_1
0x400024e	        0x48c1e103	                              shl rcx, 3	      1603	reg.c	FUNCTION_67	FOR_1
0x4000252	          0x4584ff	                         test r15b, r15b	      1611	reg.c	FUNCTION_67	FOR_1	IF_2
0x4000255	      0x498d6c0e20	            lea rbp, [r14 + rcx + 0x20] 	      1603	reg.c	FUNCTION_67	FOR_1
0x400025a	            0x74ae	                            je 0x400020a	      1611	reg.c	FUNCTION_67	FOR_1	IF_2
0x400025c	        0x8b542404	                mov edx, dword [rsp + 4]	      1614	reg.c	FUNCTION_67	FOR_1	CALL_3
0x4000260	            0x89de	                            mov esi, ebx	      1614	reg.c	FUNCTION_67	FOR_1	CALL_3
0x4000262	          0x4889ef	                            mov rdi, rbp	      1614	reg.c	FUNCTION_67	FOR_1	CALL_3
0x4000265	      0xe800000000	                          call 0x400026a	      1614	reg.c	FUNCTION_67	FOR_1	CALL_3
0x400026a	            0x84c0	                             test al, al	      1616	reg.c	FUNCTION_67	FOR_1	IF_3
0x400026c	            0x7532	                           jne 0x40002a0	      1616	reg.c	FUNCTION_67	FOR_1	IF_3
0x400026e	        0x4183c501	                             add r13d, 1	      1599	reg.c	FUNCTION_67	FOR_1
0x4000272	        0x45396e10	           cmp dword [r14 + 0x10], r13d 	      1599	reg.c	FUNCTION_67	FOR_1
0x4000276	    0x41bf01000000	                             mov r15d, 1	      1599	reg.c	FUNCTION_67	FOR_1
0x400027c	            0x77c9	                            ja 0x4000247	      1599	reg.c	FUNCTION_67	FOR_1
0x400027e	          0x4584ff	                         test r15b, r15b	      1620	reg.c	FUNCTION_67	IF_4
0x4000281	    0x48c7c0eaffff	             mov rax, 0xffffffffffffffea	      1623	reg.c	FUNCTION_67	CALL_5
0x4000288	            0x7519	                           jne 0x40002a3	      1620	reg.c	FUNCTION_67	IF_4
0x400028a	        0x4883c408	                              add rsp, 8	      1624	reg.c	FUNCTION_67
0x400028e	    0x48c7c0deffff	             mov rax, 0xffffffffffffffde	      1621	reg.c	FUNCTION_67	CALL_4
0x4000295	              0x5b	                                 pop rbx	      1624	reg.c	FUNCTION_67
0x4000296	              0x5d	                                 pop rbp	      1624	reg.c	FUNCTION_67
0x4000297	            0x415c	                                 pop r12	      1624	reg.c	FUNCTION_67
0x4000299	            0x415d	                                 pop r13	      1624	reg.c	FUNCTION_67
0x400029b	            0x415e	                                 pop r14	      1624	reg.c	FUNCTION_67
0x400029d	            0x415f	                                 pop r15	      1624	reg.c	FUNCTION_67
0x400029f	              0xc3	                                     ret	      1624	reg.c	FUNCTION_67
0x40002a0	          0x4889e8	                            mov rax, rbp	      1603	reg.c	FUNCTION_67	FOR_1
0x40002a3	        0x4883c408	                              add rsp, 8	      1624	reg.c	FUNCTION_67
0x40002a7	              0x5b	                                 pop rbx	      1624	reg.c	FUNCTION_67
0x40002a8	              0x5d	                                 pop rbp	      1624	reg.c	FUNCTION_67
0x40002a9	            0x415c	                                 pop r12	      1624	reg.c	FUNCTION_67
0x40002ab	            0x415d	                                 pop r13	      1624	reg.c	FUNCTION_67
0x40002ad	            0x415e	                                 pop r14	      1624	reg.c	FUNCTION_67
0x40002af	            0x415f	                                 pop r15	      1624	reg.c	FUNCTION_67
0x40002b1	              0xc3	                                     ret	      1624	reg.c	FUNCTION_67
0x40002b2	    0x48c7c0eaffff	             mov rax, 0xffffffffffffffea	      1623	reg.c	FUNCTION_67	CALL_5
0x40002b9	              0xc3	                                     ret	      1624	reg.c	FUNCTION_67
0x40002ba	    0x48c7c0deffff	             mov rax, 0xffffffffffffffde	      1621	reg.c	FUNCTION_67	CALL_4
0x40002c1	              0xc3	                                     ret	      1624	reg.c	FUNCTION_67
regulatory_hint_disconnect	WHILE,0:FOR,0:ELSE,0:functions,0:CALL,2:IF,0:DO,0:SWITCH,0	2
0x4003680	            0x31ff	                            xor edi, edi	      3261	reg.c	FUNCTION_129	CALL_2
0x4003682	      0xe9f9f8ffff	     jmp sym.restore_regulatory_settings	      3261	reg.c	FUNCTION_129	CALL_2
regulatory_init	WHILE,0:FOR,0:ELSE,0:functions,0:CALL,8:IF,1:DO,0:SWITCH,0	50
0x4000040	            0x89f8	                            mov eax, edi	      1567	reg.c	FUNCTION_66	IF_1
0x4000042	      0x2580010000	                          and eax, 0x180	      1567	reg.c	FUNCTION_66	IF_1
0x4000047	          0x83f801	                              cmp eax, 1	      1568	reg.c	FUNCTION_66	IF_1
0x400004a	            0x19c0	                            sbb eax, eax	      1568	reg.c	FUNCTION_66	IF_1
0x400004c	            0xf7d0	                                 not eax	      1568	reg.c	FUNCTION_66	IF_1
0x400004e	          0x83e002	                              and eax, 2	      1568	reg.c	FUNCTION_66	IF_1
0x4000051	            0x89c2	                            mov edx, eax	      1570	reg.c	FUNCTION_66	IF_2
0x4000053	          0x83ca08	                               or edx, 8	      1570	reg.c	FUNCTION_66	IF_2
0x4000056	        0x40f6c710	                          test dil, 0x10	      1570	reg.c	FUNCTION_66	IF_2
0x400005a	           0xf45c2	                         cmovne eax, edx	      1570	reg.c	FUNCTION_66	IF_2
0x400005d	            0x89c2	                            mov edx, eax	      1572	reg.c	FUNCTION_66	IF_3
0x400005f	          0x83ca40	                            or edx, 0x40	      1572	reg.c	FUNCTION_66	IF_3
0x4000062	        0x40f6c701	                             test dil, 1	      1572	reg.c	FUNCTION_66	IF_3
0x4000066	           0xf45c2	                         cmovne eax, edx	      1572	reg.c	FUNCTION_66	IF_3
0x4000069	            0x89c2	                            mov edx, eax	      1574	reg.c	FUNCTION_66	IF_4
0x400006b	          0x80ce02	                                or dh, 2	      1574	reg.c	FUNCTION_66	IF_4
0x400006e	        0x40f6c708	                             test dil, 8	      1574	reg.c	FUNCTION_66	IF_4
0x4000072	           0xf45c2	                         cmovne eax, edx	      1574	reg.c	FUNCTION_66	IF_4
0x4000075	            0x89c2	                            mov edx, eax	      1576	reg.c	FUNCTION_66	IF_5
0x4000077	          0x80ce04	                                or dh, 4	      1576	reg.c	FUNCTION_66	IF_5
0x400007a	    0xf7c700100000	                        test edi, 0x1000	      1576	reg.c	FUNCTION_66	IF_5
0x4000080	           0xf45c2	                         cmovne eax, edx	      1576	reg.c	FUNCTION_66	IF_5
0x4000083	            0x89c2	                            mov edx, eax	      1578	reg.c	FUNCTION_66	IF_6
0x4000085	          0x83ca20	                            or edx, 0x20	      1578	reg.c	FUNCTION_66	IF_6
0x4000088	    0xf7c700200000	                        test edi, 0x2000	      1578	reg.c	FUNCTION_66	IF_6
0x400008e	           0xf45c2	                         cmovne eax, edx	      1578	reg.c	FUNCTION_66	IF_6
0x4000091	            0x89c2	                            mov edx, eax	      1580	reg.c	FUNCTION_66	IF_7
0x4000093	          0x83ca10	                            or edx, 0x10	      1580	reg.c	FUNCTION_66	IF_7
0x4000096	    0xf7c700400000	                        test edi, 0x4000	      1580	reg.c	FUNCTION_66	IF_7
0x400009c	           0xf45c2	                         cmovne eax, edx	      1580	reg.c	FUNCTION_66	IF_7
0x400009f	            0x89c2	                            mov edx, eax	      1582	reg.c	FUNCTION_66	IF_8
0x40000a1	          0x80ca80	                             or dl, 0x80	      1582	reg.c	FUNCTION_66	IF_8
0x40000a4	    0xf7c700800000	                        test edi, 0x8000	      1582	reg.c	FUNCTION_66	IF_8
0x40000aa	           0xf45c2	                         cmovne eax, edx	      1582	reg.c	FUNCTION_66	IF_8
0x40000ad	            0x89c2	                            mov edx, eax	      1584	reg.c	FUNCTION_66	IF_9
0x40000af	          0x80ce01	                                or dh, 1	      1584	reg.c	FUNCTION_66	IF_9
0x40000b2	    0x81e700000100	                        and edi, 0x10000	      1584	reg.c	FUNCTION_66	IF_9
0x40000b8	           0xf45c2	                         cmovne eax, edx	      1584	reg.c	FUNCTION_66	IF_9
0x40000bb	              0xc3	                                     ret	      1586	reg.c	FUNCTION_66
0x40000bc	         0xf1f4000	                         nop dword [rax]	      1586	reg.c	FUNCTION_66
0x40000c0	          0x8b4f10	            mov ecx, dword [rdi + 0x10] 	      1292	reg.c	FUNCTION_59	IF_1
0x40000c3	            0x31c0	                            xor eax, eax	      1293	reg.c	FUNCTION_59	IF_1
0x40000c5	            0x85c9	                           test ecx, ecx	      1292	reg.c	FUNCTION_59	IF_1
0x40000c7	            0x744e	                            je 0x4000117	      1292	reg.c	FUNCTION_59	IF_1
0x40000c9	          0x83f940	                           cmp ecx, 0x40	      1295	reg.c	FUNCTION_59	IF_2	CALL_1
0x40000cc	            0x774d	                            ja 0x400011b	      1295	reg.c	FUNCTION_59	IF_2	CALL_1
0x40000ce	          0x8d41ff	                      lea eax, [rcx - 1]	      1295	reg.c	FUNCTION_59	IF_2	CALL_1
0x40000d1	              0x48	                                 invalid	      1295	reg.c	FUNCTION_59	IF_2	CALL_1
0x40000d2	              0x8d	                                 invalid	      1295	reg.c	FUNCTION_59	IF_2	CALL_1
0x40000d3	              0x57	                                push rdi	      1295	reg.c	FUNCTION_59	IF_2	CALL_1
reg_supported_dfs_region	WHILE,0:FOR,0:ELSE,0:functions,0:CALL,1:IF,0:DO,0:SWITCH,1	3
0x4003840	          0x83ff03	                              cmp edi, 3	      3388	reg.c	FUNCTION_134	SWITCH_1
0x4003843	           0xf96c0	                                setbe al	      3388	reg.c	FUNCTION_134	SWITCH_1
0x4003846	              0xc3	                                     ret	      3393	reg.c	FUNCTION_134
print_rd_rules	WHILE,0:FOR,1:ELSE,3:functions,0:CALL,8:IF,3:DO,0:SWITCH,0	74
0x40028c0	            0x4156	                                push r14	      3330	reg.c	FUNCTION_133
0x40028c2	            0x4155	                                push r13	      3330	reg.c	FUNCTION_133
0x40028c4	            0x4154	                                push r12	      3330	reg.c	FUNCTION_133
0x40028c6	              0x55	                                push rbp	      3330	reg.c	FUNCTION_133
0x40028c7	              0x53	                                push rbx	      3330	reg.c	FUNCTION_133
0x40028c8	        0x4883ec48	                           sub rsp, 0x48	      3330	reg.c	FUNCTION_133
0x40028cc	    0x65488b042528	                mov rax, qword gs:[0x28]	      3330	reg.c	FUNCTION_133
0x40028d5	      0x4889442440	             mov qword [rsp + 0x40], rax	      3330	reg.c	FUNCTION_133
0x40028da	            0x31c0	                            xor eax, eax	      3330	reg.c	FUNCTION_133
0x40028dc	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      3339	reg.c	FUNCTION_133	FOR_1
0x40028df	            0x85c0	                           test eax, eax	      3339	reg.c	FUNCTION_133	FOR_1
0x40028e1	     0xf84d0000000	                            je 0x40029b7	      3339	reg.c	FUNCTION_133	FOR_1
0x40028e7	          0x4889fd	                            mov rbp, rdi	      3339	reg.c	FUNCTION_133	FOR_1
0x40028ea	          0x4531e4	                          xor r12d, r12d	      3339	reg.c	FUNCTION_133	FOR_1
0x40028ed	    0x41bdd34d6210	                    mov r13d, 0x10624dd3	      3353	reg.c	FUNCTION_133	FOR_1	IF_2	CALL_5
0x40028f3	            0xeb64	                           jmp 0x4002959	      3353	reg.c	FUNCTION_133	FOR_1	IF_2	CALL_5
0x40028f5	      0x488d740520	            lea rsi, [rbp + rax + 0x20] 	      3340	reg.c	FUNCTION_133	FOR_1
0x40028fa	          0x4889ef	                            mov rdi, rbp	      3345	reg.c	FUNCTION_133	FOR_1	IF_1	CALL_2
0x40028fd	      0xe800000000	                          call 0x4002902	      3345	reg.c	FUNCTION_133	FOR_1	IF_1	CALL_2
0x4002902	        0x418b4e28	            mov ecx, dword [r14 + 0x28] 	      3345	reg.c	FUNCTION_133	FOR_1	IF_1	CALL_2
0x4002906	          0x4189c0	                            mov r8d, eax	      3345	reg.c	FUNCTION_133	FOR_1	IF_1	CALL_2
0x4002909	    0x48c7c2000000	                              mov rdx, 0	      3345	reg.c	FUNCTION_133	FOR_1	IF_1	CALL_2
0x4002910	      0xbe20000000	                           mov esi, 0x20	      3345	reg.c	FUNCTION_133	FOR_1	IF_1	CALL_2
0x4002915	          0x4889e7	                            mov rdi, rsp	      3345	reg.c	FUNCTION_133	FOR_1	IF_1	CALL_2
0x4002918	      0xe800000000	                          call 0x400291d	      3345	reg.c	FUNCTION_133	FOR_1	IF_1	CALL_2
0x400291d	        0x488d049b	                  lea rax, [rbx + rbx*4]	      3352	reg.c	FUNCTION_133	FOR_1	IF_2
0x4002921	      0x488d44c500	                  lea rax, [rbp + rax*8]	      3352	reg.c	FUNCTION_133	FOR_1	IF_2
0x4002926	        0xf6404010	           test byte [rax + 0x40], 0x10 	      3352	reg.c	FUNCTION_133	FOR_1	IF_2
0x400292a	            0x746b	                            je 0x4002997	      3352	reg.c	FUNCTION_133	FOR_1	IF_2
0x400292c	          0x8b5044	            mov edx, dword [rax + 0x44] 	      3353	reg.c	FUNCTION_133	FOR_1	IF_2	CALL_5
0x400292f	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3353	reg.c	FUNCTION_133	FOR_1	IF_2	CALL_5
0x4002934	      0xbe20000000	                           mov esi, 0x20	      3353	reg.c	FUNCTION_133	FOR_1	IF_2	CALL_5
0x4002939	        0x4183c401	                             add r12d, 1	      3339	reg.c	FUNCTION_133	FOR_1
0x400293d	            0x89d0	                            mov eax, edx	      3353	reg.c	FUNCTION_133	FOR_1	IF_2	CALL_5
0x400293f	          0x41f7e5	                                mul r13d	      3353	reg.c	FUNCTION_133	FOR_1	IF_2	CALL_5
0x4002942	            0x89d1	                            mov ecx, edx	      3353	reg.c	FUNCTION_133	FOR_1	IF_2	CALL_5
0x4002944	    0x48c7c2000000	                              mov rdx, 0	      3353	reg.c	FUNCTION_133	FOR_1	IF_2	CALL_5
0x400294b	          0xc1e906	                              shr ecx, 6	      3353	reg.c	FUNCTION_133	FOR_1	IF_2	CALL_5
0x400294e	      0xe800000000	                          call 0x4002953	      3353	reg.c	FUNCTION_133	FOR_1	IF_2	CALL_5
0x4002953	        0x44396510	           cmp dword [rbp + 0x10], r12d 	      3339	reg.c	FUNCTION_133	FOR_1
0x4002957	            0x765e	                           jbe 0x40029b7	      3339	reg.c	FUNCTION_133	FOR_1
0x4002959	          0x4489e3	                           mov ebx, r12d	      3344	reg.c	FUNCTION_133	FOR_1	IF_1
0x400295c	        0x488d049b	                  lea rax, [rbx + rbx*4]	      3344	reg.c	FUNCTION_133	FOR_1	IF_1
0x4002960	        0x48c1e003	                              shl rax, 3	      3344	reg.c	FUNCTION_133	FOR_1	IF_1
0x4002964	      0x4c8d740500	                    lea r14, [rbp + rax]	      3344	reg.c	FUNCTION_133	FOR_1	IF_1
0x4002969	      0x41f6464108	               test byte [r14 + 0x41], 8	      3344	reg.c	FUNCTION_133	FOR_1	IF_1
0x400296e	            0x7585	                           jne 0x40028f5	      3344	reg.c	FUNCTION_133	FOR_1	IF_1
0x4002970	        0x418b4e28	            mov ecx, dword [r14 + 0x28] 	      3349	reg.c	FUNCTION_133	FOR_1	ELSE_1	CALL_4
0x4002974	    0x48c7c2000000	                              mov rdx, 0	      3349	reg.c	FUNCTION_133	FOR_1	ELSE_1	CALL_4
0x400297b	      0xbe20000000	                           mov esi, 0x20	      3349	reg.c	FUNCTION_133	FOR_1	ELSE_1	CALL_4
0x4002980	          0x4889e7	                            mov rdi, rsp	      3349	reg.c	FUNCTION_133	FOR_1	ELSE_1	CALL_4
0x4002983	      0xe800000000	                          call 0x4002988	      3349	reg.c	FUNCTION_133	FOR_1	ELSE_1	CALL_4
0x4002988	        0x488d049b	                  lea rax, [rbx + rbx*4]	      3352	reg.c	FUNCTION_133	FOR_1	IF_2
0x400298c	      0x488d44c500	                  lea rax, [rbp + rax*8]	      3352	reg.c	FUNCTION_133	FOR_1	IF_2
0x4002991	        0xf6404010	           test byte [rax + 0x40], 0x10 	      3352	reg.c	FUNCTION_133	FOR_1	IF_2
0x4002995	            0x7595	                           jne 0x400292c	      3352	reg.c	FUNCTION_133	FOR_1	IF_2
0x4002997	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3356	reg.c	FUNCTION_133	FOR_1	CALL_6
0x400299c	    0x48c7c2000000	                              mov rdx, 0	      3356	reg.c	FUNCTION_133	FOR_1	CALL_6
0x40029a3	      0xbe20000000	                           mov esi, 0x20	      3356	reg.c	FUNCTION_133	FOR_1	CALL_6
0x40029a8	        0x4183c401	                             add r12d, 1	      3339	reg.c	FUNCTION_133	FOR_1
0x40029ac	      0xe800000000	                          call 0x40029b1	      3356	reg.c	FUNCTION_133	FOR_1	CALL_6
0x40029b1	        0x44396510	           cmp dword [rbp + 0x10], r12d 	      3339	reg.c	FUNCTION_133	FOR_1
0x40029b5	            0x77a2	                            ja 0x4002959	      3339	reg.c	FUNCTION_133	FOR_1
0x40029b7	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      3379	reg.c	FUNCTION_133
0x40029bc	    0x654833042528	                xor rax, qword gs:[0x28]	      3379	reg.c	FUNCTION_133
0x40029c5	            0x750d	                           jne 0x40029d4	      3379	reg.c	FUNCTION_133
0x40029c7	        0x4883c448	                           add rsp, 0x48	      3379	reg.c	FUNCTION_133
0x40029cb	              0x5b	                                 pop rbx	      3379	reg.c	FUNCTION_133
0x40029cc	              0x5d	                                 pop rbp	      3379	reg.c	FUNCTION_133
0x40029cd	            0x415c	                                 pop r12	      3379	reg.c	FUNCTION_133
0x40029cf	            0x415d	                                 pop r13	      3379	reg.c	FUNCTION_133
0x40029d1	            0x415e	                                 pop r14	      3379	reg.c	FUNCTION_133
0x40029d3	              0xc3	                                     ret	      3379	reg.c	FUNCTION_133
0x40029d4	      0xe800000000	                          call 0x40029d9	      3379	reg.c	FUNCTION_133
reg_rules_intersect	WHILE,0:FOR,0:ELSE,1:functions,0:CALL,9:IF,5:DO,0:SWITCH,0	102
0x4002b20	            0x4157	                                push r15	      1364	reg.c	FUNCTION_62
0x4002b22	            0x4156	                                push r14	      1364	reg.c	FUNCTION_62
0x4002b24	          0x4989f1	                             mov r9, rsi	      1364	reg.c	FUNCTION_62
0x4002b27	            0x4155	                                push r13	      1364	reg.c	FUNCTION_62
0x4002b29	            0x4154	                                push r12	      1364	reg.c	FUNCTION_62
0x4002b2b	          0x4d89c4	                             mov r12, r8	      1364	reg.c	FUNCTION_62
0x4002b2e	              0x55	                                push rbp	      1364	reg.c	FUNCTION_62
0x4002b2f	              0x53	                                push rbx	      1364	reg.c	FUNCTION_62
0x4002b30	          0x4889d3	                            mov rbx, rdx	      1364	reg.c	FUNCTION_62
0x4002b33	          0x4889cd	                            mov rbp, rcx	      1364	reg.c	FUNCTION_62
0x4002b36	        0x4883ec10	                           sub rsp, 0x10	      1364	reg.c	FUNCTION_62
0x4002b3a	          0x448b31	                   mov r14d, dword [rcx]	      1379	reg.c	FUNCTION_62	CALL_1
0x4002b3d	          0x443932	                   cmp dword [rdx], r14d	      1379	reg.c	FUNCTION_62	CALL_1
0x4002b40	        0x440f4332	                cmovae r14d, dword [rdx]	      1379	reg.c	FUNCTION_62	CALL_1
0x4002b44	          0x458930	                    mov dword [r8], r14d	      1379	reg.c	FUNCTION_62	CALL_1
0x4002b47	        0x448b6904	               mov r13d, dword [rcx + 4]	      1381	reg.c	FUNCTION_62	CALL_2
0x4002b4b	        0x44396a04	               cmp dword [rdx + 4], r13d	      1381	reg.c	FUNCTION_62	CALL_2
0x4002b4f	      0x440f466a04	            cmovbe r13d, dword [rdx + 4]	      1381	reg.c	FUNCTION_62	CALL_2
0x4002b54	          0x4539ee	                          cmp r14d, r13d	      1381	reg.c	FUNCTION_62	CALL_2
0x4002b57	        0x45896804	                mov dword [r8 + 4], r13d	      1381	reg.c	FUNCTION_62	CALL_2
0x4002b5b	        0x448b7a08	               mov r15d, dword [rdx + 8]	      1384	reg.c	FUNCTION_62
0x4002b5f	           0xf93c1	                                setae cl	      1384	reg.c	FUNCTION_62
0x4002b62	        0xf6432108	               test byte [rbx + 0x21], 8	      1387	reg.c	FUNCTION_62	IF_1
0x4002b66	          0x8b5508	                mov edx, dword [rbp + 8]	      1385	reg.c	FUNCTION_62
0x4002b69	     0xf85d8000000	                           jne 0x4002c47	      1387	reg.c	FUNCTION_62	IF_1
0x4002b6f	        0xf6452108	               test byte [rbp + 0x21], 8	      1389	reg.c	FUNCTION_62	IF_2
0x4002b73	     0xf85b5000000	                           jne 0x4002c2e	      1389	reg.c	FUNCTION_62	IF_2
0x4002b79	          0x4139d7	                           cmp r15d, edx	      1392	reg.c	FUNCTION_62	CALL_5
0x4002b7c	        0x440f47fa	                         cmova r15d, edx	      1392	reg.c	FUNCTION_62	CALL_5
0x4002b80	      0x45897c2408	               mov dword [r12 + 8], r15d	      1392	reg.c	FUNCTION_62	CALL_5
0x4002b85	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      1394	reg.c	FUNCTION_62
0x4002b88	           0xb5520	              or edx, dword [rbp + 0x20]	      1394	reg.c	FUNCTION_62
0x4002b8b	      0x4189542420	             mov dword [r12 + 0x20], edx	      1394	reg.c	FUNCTION_62
0x4002b90	        0xf6432108	               test byte [rbx + 0x21], 8	      1404	reg.c	FUNCTION_62	IF_3
0x4002b94	            0x740a	                            je 0x4002ba0	      1404	reg.c	FUNCTION_62	IF_3
0x4002b96	        0xf6452108	               test byte [rbp + 0x21], 8	      1404	reg.c	FUNCTION_62	IF_3
0x4002b9a	     0xf8581000000	                           jne 0x4002c21	      1404	reg.c	FUNCTION_62	IF_3
0x4002ba0	          0x80e6f7	                            and dh, 0xf7	      1408	reg.c	FUNCTION_62	ELSE_1
0x4002ba3	      0x4189542420	             mov dword [r12 + 0x20], edx	      1408	reg.c	FUNCTION_62	ELSE_1
0x4002ba8	          0x4489ea	                           mov edx, r13d	      1410	reg.c	FUNCTION_62
0x4002bab	          0x4429f2	                           sub edx, r14d	      1410	reg.c	FUNCTION_62
0x4002bae	          0x4139d7	                           cmp r15d, edx	      1411	reg.c	FUNCTION_62	IF_4
0x4002bb1	            0x7605	                           jbe 0x4002bb8	      1411	reg.c	FUNCTION_62	IF_4
0x4002bb3	      0x4189542408	                mov dword [r12 + 8], edx	      1412	reg.c	FUNCTION_62	IF_4
0x4002bb8	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      1414	reg.c	FUNCTION_62	CALL_6
0x4002bbb	          0x394310	            cmp dword [rbx + 0x10], eax 	      1414	reg.c	FUNCTION_62	CALL_6
0x4002bbe	         0xf464310	          cmovbe eax, dword [rbx + 0x10]	      1414	reg.c	FUNCTION_62	CALL_6
0x4002bc2	      0x4189442410	             mov dword [r12 + 0x10], eax	      1414	reg.c	FUNCTION_62	CALL_6
0x4002bc7	          0x8b450c	              mov eax, dword [rbp + 0xc]	      1416	reg.c	FUNCTION_62	CALL_7
0x4002bca	          0x39430c	              cmp dword [rbx + 0xc], eax	      1416	reg.c	FUNCTION_62	CALL_7
0x4002bcd	         0xf46430c	           cmovbe eax, dword [rbx + 0xc]	      1416	reg.c	FUNCTION_62	CALL_7
0x4002bd1	      0x418944240c	              mov dword [r12 + 0xc], eax	      1416	reg.c	FUNCTION_62	CALL_7
0x4002bd6	          0x8b4524	            mov eax, dword [rbp + 0x24] 	      1419	reg.c	FUNCTION_62	CALL_8
0x4002bd9	          0x394324	            cmp dword [rbx + 0x24], eax 	      1419	reg.c	FUNCTION_62	CALL_8
0x4002bdc	         0xf434324	          cmovae eax, dword [rbx + 0x24]	      1419	reg.c	FUNCTION_62	CALL_8
0x4002be0	          0x4585ed	                         test r13d, r13d	      1280	reg.c	FUNCTION_58	IF_3
0x4002be3	      0x4189442424	             mov dword [r12 + 0x24], eax	      1419	reg.c	FUNCTION_62	CALL_8
0x4002be8	           0xf94c0	                                 sete al	      1280	reg.c	FUNCTION_58	IF_3
0x4002beb	             0x8c8	                               or al, cl	      1280	reg.c	FUNCTION_58	IF_3
0x4002bed	            0x751e	                           jne 0x4002c0d	      1280	reg.c	FUNCTION_58	IF_3
0x4002bef	          0x4585f6	                         test r14d, r14d	      1280	reg.c	FUNCTION_58	IF_3
0x4002bf2	            0x7419	                            je 0x4002c0d	      1280	reg.c	FUNCTION_58	IF_3
0x4002bf4	      0x413b542408	                cmp edx, dword [r12 + 8]	      1425	reg.c	FUNCTION_62
0x4002bf9	            0x19c0	                            sbb eax, eax	      1425	reg.c	FUNCTION_62
0x4002bfb	        0x4883c410	                           add rsp, 0x10	      1426	reg.c	FUNCTION_62
0x4002bff	              0x5b	                                 pop rbx	      1426	reg.c	FUNCTION_62
0x4002c00	          0x83e0ea	                     and eax, 0xffffffea	      1425	reg.c	FUNCTION_62
0x4002c03	              0x5d	                                 pop rbp	      1426	reg.c	FUNCTION_62
0x4002c04	            0x415c	                                 pop r12	      1426	reg.c	FUNCTION_62
0x4002c06	            0x415d	                                 pop r13	      1426	reg.c	FUNCTION_62
0x4002c08	            0x415e	                                 pop r14	      1426	reg.c	FUNCTION_62
0x4002c0a	            0x415f	                                 pop r15	      1426	reg.c	FUNCTION_62
0x4002c0c	              0xc3	                                     ret	      1426	reg.c	FUNCTION_62
0x4002c0d	        0x4883c410	                           add rsp, 0x10	      1426	reg.c	FUNCTION_62
0x4002c11	      0xb8eaffffff	                     mov eax, 0xffffffea	      1423	reg.c	FUNCTION_62	IF_5
0x4002c16	              0x5b	                                 pop rbx	      1426	reg.c	FUNCTION_62
0x4002c17	              0x5d	                                 pop rbp	      1426	reg.c	FUNCTION_62
0x4002c18	            0x415c	                                 pop r12	      1426	reg.c	FUNCTION_62
0x4002c1a	            0x415d	                                 pop r13	      1426	reg.c	FUNCTION_62
0x4002c1c	            0x415e	                                 pop r14	      1426	reg.c	FUNCTION_62
0x4002c1e	            0x415f	                                 pop r15	      1426	reg.c	FUNCTION_62
0x4002c20	              0xc3	                                     ret	      1426	reg.c	FUNCTION_62
0x4002c21	          0x80ce08	                                or dh, 8	      1406	reg.c	FUNCTION_62	IF_3
0x4002c24	      0x4189542420	             mov dword [r12 + 0x20], edx	      1406	reg.c	FUNCTION_62	IF_3
0x4002c29	      0xe97affffff	                           jmp 0x4002ba8	      1406	reg.c	FUNCTION_62	IF_3
0x4002c2e	          0x4889ee	                            mov rsi, rbp	      1390	reg.c	FUNCTION_62	CALL_4
0x4002c31	          0x4c89cf	                             mov rdi, r9	      1390	reg.c	FUNCTION_62	CALL_4
0x4002c34	          0x880c24	                      mov byte [rsp], cl	      1390	reg.c	FUNCTION_62	CALL_4
0x4002c37	      0xe800000000	                          call 0x4002c3c	      1390	reg.c	FUNCTION_62	CALL_4
0x4002c3c	            0x89c2	                            mov edx, eax	      1390	reg.c	FUNCTION_62	CALL_4
0x4002c3e	         0xfb60c24	                   movzx ecx, byte [rsp]	      1390	reg.c	FUNCTION_62	CALL_4
0x4002c42	      0xe932ffffff	                           jmp 0x4002b79	      1390	reg.c	FUNCTION_62	CALL_4
0x4002c47	      0x4889742408	                mov qword [rsp + 8], rsi	      1390	reg.c	FUNCTION_62	CALL_4
0x4002c4c	          0x4889de	                            mov rsi, rbx	      1388	reg.c	FUNCTION_62	CALL_3
0x4002c4f	        0x884c2407	                  mov byte [rsp + 7], cl	      1388	reg.c	FUNCTION_62	CALL_3
0x4002c53	          0x891424	                    mov dword [rsp], edx	      1388	reg.c	FUNCTION_62	CALL_3
0x4002c56	      0xe800000000	                          call 0x4002c5b	      1388	reg.c	FUNCTION_62	CALL_3
0x4002c5b	          0x4189c7	                           mov r15d, eax	      1388	reg.c	FUNCTION_62	CALL_3
0x4002c5e	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1388	reg.c	FUNCTION_62	CALL_3
0x4002c63	       0xfb64c2407	               movzx ecx, byte [rsp + 7]	      1388	reg.c	FUNCTION_62	CALL_3
0x4002c68	          0x8b1424	                    mov edx, dword [rsp]	      1388	reg.c	FUNCTION_62	CALL_3
0x4002c6b	      0xe9fffeffff	                           jmp 0x4002b6f	      1388	reg.c	FUNCTION_62	CALL_3
reg_query_regdb_wmm	WHILE,1:FOR,0:ELSE,0:functions,0:CALL,4:IF,3:DO,0:SWITCH,0	91
0x4000be0	    0x4c8b15000000	            mov r10, qword [0x04000be7] 	       916	reg.c	FUNCTION_46
0x4000be7	          0x4d85d2	                           test r10, r10	       919	reg.c	FUNCTION_46	IF_1
0x4000bea	     0xf8420010000	                            je 0x4000d10	       919	reg.c	FUNCTION_46	IF_1
0x4000bf0	    0x4981fa00f0ff	             cmp r10, 0xfffffffffffff000	       922	reg.c	FUNCTION_46	IF_2	CALL_1
0x4000bf7	     0xf87de000000	                            ja 0x4000cdb	       922	reg.c	FUNCTION_46	IF_2	CALL_1
0x4000bfd	              0x55	                                push rbp	       915	reg.c	FUNCTION_46
0x4000bfe	              0x53	                                push rbx	       915	reg.c	FUNCTION_46
0x4000bff	          0x4889d5	                            mov rbp, rdx	       915	reg.c	FUNCTION_46
0x4000c02	      0x450fb7420a	            movzx r8d, word [r10 + 0xa] 	       926	reg.c	FUNCTION_46	WHILE_1
0x4000c07	        0x498d5208	                      lea rdx, [r10 + 8]	       925	reg.c	FUNCTION_46
0x4000c0b	      0xb8c3ffffff	                     mov eax, 0xffffffc3	       920	reg.c	FUNCTION_46	IF_1
0x4000c10	        0x664585c0	                           test r8w, r8w	       926	reg.c	FUNCTION_46	WHILE_1
0x4000c14	     0xf84be000000	                            je 0x4000cd8	       926	reg.c	FUNCTION_46	WHILE_1
0x4000c1a	          0x4885ff	                           test rdi, rdi	       926	reg.c	FUNCTION_46	WHILE_1
0x4000c1d	           0xf94c0	                                 sete al	       926	reg.c	FUNCTION_46	WHILE_1
0x4000c20	            0xeb13	                           jmp 0x4000c35	       926	reg.c	FUNCTION_46	WHILE_1
0x4000c22	        0x4883c204	                              add rdx, 4	       931	reg.c	FUNCTION_46	WHILE_1
0x4000c26	      0x440fb74202	               movzx r8d, word [rdx + 2]	       926	reg.c	FUNCTION_46	WHILE_1
0x4000c2b	        0x664585c0	                           test r8w, r8w	       926	reg.c	FUNCTION_46	WHILE_1
0x4000c2f	     0xf849e000000	                            je 0x4000cd3	       926	reg.c	FUNCTION_46	WHILE_1
0x4000c35	          0x4885d2	                           test rdx, rdx	       391	reg.c	FUNCTION_17	IF_1
0x4000c38	            0x74e8	                            je 0x4000c22	       391	reg.c	FUNCTION_17	IF_1
0x4000c3a	            0x84c0	                             test al, al	       391	reg.c	FUNCTION_17	IF_1
0x4000c3c	            0x75e4	                           jne 0x4000c22	       391	reg.c	FUNCTION_17	IF_1
0x4000c3e	           0xfb61a	                   movzx ebx, byte [rdx]	       393	reg.c	FUNCTION_17
0x4000c41	            0x381f	                      cmp byte [rdi], bl	       393	reg.c	FUNCTION_17
0x4000c43	            0x75dd	                           jne 0x4000c22	       393	reg.c	FUNCTION_17
0x4000c45	         0xfb65a01	               movzx ebx, byte [rdx + 1]	       393	reg.c	FUNCTION_17
0x4000c49	          0x385f01	                  cmp byte [rdi + 1], bl	       393	reg.c	FUNCTION_17
0x4000c4c	            0x75d4	                           jne 0x4000c22	       393	reg.c	FUNCTION_17
0x4000c4e	      0x6641c1c008	                              rol r8w, 8	       885	reg.c	FUNCTION_45	CALL_1
0x4000c53	      0xb8c3ffffff	                     mov eax, 0xffffffc3	       920	reg.c	FUNCTION_46	IF_1
0x4000c58	    0x4a8d14850000	                         lea rdx, [r8*4]	       886	reg.c	FUNCTION_45
0x4000c60	    0x81e2fcff0300	                        and edx, 0x3fffc	       886	reg.c	FUNCTION_45
0x4000c66	          0x4c01d2	                            add rdx, r10	       886	reg.c	FUNCTION_45
0x4000c69	      0x440fb65a01	              movzx r11d, byte [rdx + 1]	       889	reg.c	FUNCTION_45	FOR_1
0x4000c6e	          0x4585db	                         test r11d, r11d	       889	reg.c	FUNCTION_45	FOR_1
0x4000c71	            0x7465	                            je 0x4000cd8	       889	reg.c	FUNCTION_45	FOR_1
0x4000c73	           0xfb602	                   movzx eax, byte [rdx]	       889	reg.c	FUNCTION_45	FOR_1
0x4000c76	          0x4531c9	                            xor r9d, r9d	       889	reg.c	FUNCTION_45	FOR_1
0x4000c79	      0xbfd34d6210	                     mov edi, 0x10624dd3	       899	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_6
0x4000c7e	          0x83c001	                              add eax, 1	       899	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_6
0x4000c81	      0x25fe010000	                          and eax, 0x1fe	       899	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_6
0x4000c86	        0x488d1c02	                    lea rbx, [rdx + rax]	       899	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_6
0x4000c8a	      0x460fb7044b	            movzx r8d, word [rbx + r9*2]	       891	reg.c	FUNCTION_45	FOR_1	CALL_3
0x4000c8f	      0x6641c1c008	                              rol r8w, 8	       891	reg.c	FUNCTION_45	FOR_1	CALL_3
0x4000c94	        0x49c1e002	                               shl r8, 2	       892	reg.c	FUNCTION_45	FOR_1
0x4000c98	    0x4181e0fcff03	                        and r8d, 0x3fffc	       892	reg.c	FUNCTION_45	FOR_1
0x4000c9f	          0x4d01d0	                             add r8, r10	       892	reg.c	FUNCTION_45	FOR_1
0x4000ca2	        0x41803813	                     cmp byte [r8], 0x13	       896	reg.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4000ca6	            0x7622	                           jbe 0x4000cca	       896	reg.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4000ca8	        0x418b5004	                 mov edx, dword [r8 + 4]	       899	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_6
0x4000cac	             0xfca	                               bswap edx	       899	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_6
0x4000cae	            0x89d0	                            mov eax, edx	       899	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_6
0x4000cb0	            0xf7e7	                                 mul edi	       899	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_6
0x4000cb2	          0xc1ea06	                              shr edx, 6	       899	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_6
0x4000cb5	            0x39f2	                            cmp edx, esi	       899	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_6
0x4000cb7	            0x7711	                            ja 0x4000cca	       899	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_6
0x4000cb9	        0x418b5008	                 mov edx, dword [r8 + 8]	       900	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_8
0x4000cbd	             0xfca	                               bswap edx	       900	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_8
0x4000cbf	            0x89d0	                            mov eax, edx	       899	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_6
0x4000cc1	            0xf7e7	                                 mul edi	       899	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_6
0x4000cc3	          0xc1ea06	                              shr edx, 6	       899	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_6
0x4000cc6	            0x39d6	                            cmp esi, edx	       899	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_6
0x4000cc8	            0x7615	                           jbe 0x4000cdf	       899	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_6
0x4000cca	        0x4983c101	                               add r9, 1	       899	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_6
0x4000cce	          0x4539cb	                           cmp r11d, r9d	       889	reg.c	FUNCTION_45	FOR_1
0x4000cd1	            0x7fb7	                            jg 0x4000c8a	       889	reg.c	FUNCTION_45	FOR_1
0x4000cd3	      0xb8c3ffffff	                     mov eax, 0xffffffc3	       920	reg.c	FUNCTION_46	IF_1
0x4000cd8	              0x5b	                                 pop rbx	       935	reg.c	FUNCTION_46
0x4000cd9	              0x5d	                                 pop rbp	       935	reg.c	FUNCTION_46
0x4000cda	              0xc3	                                     ret	       935	reg.c	FUNCTION_46
0x4000cdb	          0x4489d0	                           mov eax, r10d	       923	reg.c	FUNCTION_46	CALL_2
0x4000cde	              0xc3	                                     ret	       923	reg.c	FUNCTION_46	CALL_2
0x4000cdf	      0x450fb74812	            movzx r9d, word [r8 + 0x12] 	       901	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_9
0x4000ce4	          0x4889cf	                            mov rdi, rcx	       901	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_9
0x4000ce7	      0x6641c1c108	                              rol r9w, 8	       901	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_9
0x4000cec	        0x450fb7c9	                          movzx r9d, r9w	       901	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_9
0x4000cf0	        0x41c1e102	                              shl r9d, 2	       901	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_9
0x4000cf4	          0x4963f1	                         movsxd rsi, r9d	       903	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_10
0x4000cf7	          0x4c01d6	                            add rsi, r10	       903	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_10
0x4000cfa	      0xe821f4ffff	                   call sym.set_wmm_rule	       903	reg.c	FUNCTION_45	FOR_1	IF_2	CALL_10
0x4000cff	          0x4885ed	                           test rbp, rbp	       904	reg.c	FUNCTION_45	FOR_1	IF_2	IF_3
0x4000d02	            0x7408	                            je 0x4000d0c	       904	reg.c	FUNCTION_45	FOR_1	IF_2	IF_3
0x4000d04	        0x44894d00	                    mov dword [rbp], r9d	       905	reg.c	FUNCTION_45	FOR_1	IF_2	IF_3
0x4000d08	            0x31c0	                            xor eax, eax	       906	reg.c	FUNCTION_45	FOR_1	IF_2
0x4000d0a	            0xebcc	                           jmp 0x4000cd8	       906	reg.c	FUNCTION_45	FOR_1	IF_2
0x4000d0c	            0x31c0	                            xor eax, eax	       906	reg.c	FUNCTION_45	FOR_1	IF_2
0x4000d0e	            0xebc8	                           jmp 0x4000cd8	       906	reg.c	FUNCTION_45	FOR_1	IF_2
0x4000d10	      0xb8c3ffffff	                     mov eax, 0xffffffc3	       920	reg.c	FUNCTION_46	IF_1
0x4000d15	              0xc3	                                     ret	       935	reg.c	FUNCTION_46
cfg80211_get_unii	WHILE,0:FOR,0:ELSE,0:functions,0:CALL,0:IF,5:DO,0:SWITCH,0	23
0x4003de0	    0x8d97e2ebffff	                 lea edx, [rdi - 0x141e]	      3750	reg.c	FUNCTION_147	IF_1
0x4003de6	            0x31c0	                            xor eax, eax	      3751	reg.c	FUNCTION_147	IF_1
0x4003de8	          0x83fa64	                           cmp edx, 0x64	      3750	reg.c	FUNCTION_147	IF_1
0x4003deb	            0x7620	                           jbe 0x4003e0d	      3750	reg.c	FUNCTION_147	IF_1
0x4003ded	    0x8d977debffff	                 lea edx, [rdi - 0x1483]	      3754	reg.c	FUNCTION_147	IF_2
0x4003df3	      0xb801000000	                              mov eax, 1	      3755	reg.c	FUNCTION_147	IF_2
0x4003df8	          0x83fa63	                           cmp edx, 0x63	      3754	reg.c	FUNCTION_147	IF_2
0x4003dfb	            0x7610	                           jbe 0x4003e0d	      3754	reg.c	FUNCTION_147	IF_2
0x4003dfd	    0x8d9719ebffff	                 lea edx, [rdi - 0x14e7]	      3758	reg.c	FUNCTION_147	IF_3
0x4003e03	      0xb802000000	                              mov eax, 2	      3759	reg.c	FUNCTION_147	IF_3
0x4003e08	          0x83fa77	                           cmp edx, 0x77	      3758	reg.c	FUNCTION_147	IF_3
0x4003e0b	            0x7702	                            ja 0x4003e0f	      3758	reg.c	FUNCTION_147	IF_3
0x4003e0d	            0xf3c3	                                     ret	      3770	reg.c	FUNCTION_147
0x4003e0f	    0x8d97a1eaffff	                 lea edx, [rdi - 0x155f]	      3762	reg.c	FUNCTION_147	IF_4
0x4003e15	      0xb803000000	                              mov eax, 3	      3763	reg.c	FUNCTION_147	IF_4
0x4003e1a	    0x81fafe000000	                           cmp edx, 0xfe	      3762	reg.c	FUNCTION_147	IF_4
0x4003e20	            0x76eb	                           jbe 0x4003e0d	      3762	reg.c	FUNCTION_147	IF_4
0x4003e22	    0x81ef5e160000	                         sub edi, 0x165e	      3766	reg.c	FUNCTION_147	IF_5
0x4003e28	          0x83ff64	                           cmp edi, 0x64	      3769	reg.c	FUNCTION_147
0x4003e2b	            0x19c0	                            sbb eax, eax	      3769	reg.c	FUNCTION_147
0x4003e2d	          0x83e01a	                           and eax, 0x1a	      3769	reg.c	FUNCTION_147
0x4003e30	          0x83e816	                           sub eax, 0x16	      3769	reg.c	FUNCTION_147
0x4003e33	              0xc3	                                     ret	      3770	reg.c	FUNCTION_147
regulatory_set_wiphy_regd_sync_rtnl	WHILE,0:FOR,0:ELSE,0:functions,0:CALL,3:IF,1:DO,0:SWITCH,0	29
0x4002ab0	              0x55	                                push rbp	      3688	reg.c	FUNCTION_144
0x4002ab1	              0x53	                                push rbx	      3688	reg.c	FUNCTION_144
0x4002ab2	          0x4889f5	                            mov rbp, rsi	      3688	reg.c	FUNCTION_144
0x4002ab5	          0x4889fb	                            mov rbx, rdi	      3688	reg.c	FUNCTION_144
0x4002ab8	        0x4883ec08	                              sub rsp, 8	      3688	reg.c	FUNCTION_144
0x4002abc	      0xe800000000	                          call 0x4002ac1	      3691	reg.c	FUNCTION_144	CALL_1
0x4002ac1	            0x85c0	                           test eax, eax	      3691	reg.c	FUNCTION_144	CALL_1
0x4002ac3	            0x7423	                            je 0x4002ae8	      3691	reg.c	FUNCTION_144	CALL_1
0x4002ac5	          0x4889ee	                            mov rsi, rbp	      3693	reg.c	FUNCTION_144	CALL_2
0x4002ac8	          0x4889df	                            mov rdi, rbx	      3693	reg.c	FUNCTION_144	CALL_2
0x4002acb	      0xe810ffffff	    call sym.__regulatory_set_wiphy_regd	      3693	reg.c	FUNCTION_144	CALL_2
0x4002ad0	            0x85c0	                           test eax, eax	      3694	reg.c	FUNCTION_144	IF_1
0x4002ad2	            0x750d	                           jne 0x4002ae1	      3694	reg.c	FUNCTION_144	IF_1
0x4002ad4	        0x89442404	                mov dword [rsp + 4], eax	      3694	reg.c	FUNCTION_144	IF_1
0x4002ad8	      0xe813f2ffff	 call sym.reg_process_self_managed_hints	      3698	reg.c	FUNCTION_144	CALL_3
0x4002add	        0x8b442404	                mov eax, dword [rsp + 4]	      3698	reg.c	FUNCTION_144	CALL_3
0x4002ae1	        0x4883c408	                              add rsp, 8	      3700	reg.c	FUNCTION_144
0x4002ae5	              0x5b	                                 pop rbx	      3700	reg.c	FUNCTION_144
0x4002ae6	              0x5d	                                 pop rbp	      3700	reg.c	FUNCTION_144
0x4002ae7	              0xc3	                                     ret	      3700	reg.c	FUNCTION_144
0x4002ae8	    0x803d00000000	                cmp byte [0x04002aef], 0	      3691	reg.c	FUNCTION_144	CALL_1
0x4002aef	            0x75d4	                           jne 0x4002ac5	      3691	reg.c	FUNCTION_144	CALL_1
0x4002af1	      0xba6b0e0000	                          mov edx, 0xe6b	      3691	reg.c	FUNCTION_144	CALL_1
0x4002af6	    0x48c7c6000000	                              mov rsi, 0	      3691	reg.c	FUNCTION_144	CALL_1
0x4002afd	    0x48c7c7000000	                              mov rdi, 0	      3691	reg.c	FUNCTION_144	CALL_1
0x4002b04	    0xc60500000000	                mov byte [0x04002b0b], 1	      3691	reg.c	FUNCTION_144	CALL_1
0x4002b0b	      0xe800000000	                          call 0x4002b10	      3691	reg.c	FUNCTION_144	CALL_1
0x4002b10	             0xf0b	                                     ud2	      3691	reg.c	FUNCTION_144	CALL_1
0x4002b12	            0xebb1	                           jmp 0x4002ac5	      3691	reg.c	FUNCTION_144	CALL_1
is_valid_rd	WHILE,0:FOR,1:ELSE,0:functions,0:CALL,2:IF,3:DO,0:SWITCH,0	37
0x40000c0	          0x8b4f10	            mov ecx, dword [rdi + 0x10] 	      1292	reg.c	FUNCTION_59	IF_1
0x40000c3	            0x31c0	                            xor eax, eax	      1293	reg.c	FUNCTION_59	IF_1
0x40000c5	            0x85c9	                           test ecx, ecx	      1292	reg.c	FUNCTION_59	IF_1
0x40000c7	            0x744e	                            je 0x4000117	      1292	reg.c	FUNCTION_59	IF_1
0x40000c9	          0x83f940	                           cmp ecx, 0x40	      1295	reg.c	FUNCTION_59	IF_2	CALL_1
0x40000cc	            0x774d	                            ja 0x400011b	      1295	reg.c	FUNCTION_59	IF_2	CALL_1
0x40000ce	          0x8d41ff	                      lea eax, [rcx - 1]	      1295	reg.c	FUNCTION_59	IF_2	CALL_1
0x40000d1	        0x488d5720	                   lea rdx, [rdi + 0x20]	      1295	reg.c	FUNCTION_59	IF_2	CALL_1
0x40000d5	        0x488d0480	                  lea rax, [rax + rax*4]	      1295	reg.c	FUNCTION_59	IF_2	CALL_1
0x40000d9	      0x4c8d44c748	           lea r8, [rdi + rax*8 + 0x48] 	      1295	reg.c	FUNCTION_59	IF_2	CALL_1
0x40000de	            0xeb29	                           jmp 0x4000109	      1295	reg.c	FUNCTION_59	IF_2	CALL_1
0x40000e0	          0x8b7204	                mov esi, dword [rdx + 4]	      1272	reg.c	FUNCTION_58	IF_1
0x40000e3	            0x85f6	                           test esi, esi	      1272	reg.c	FUNCTION_58	IF_1
0x40000e5	        0x400f94c7	                                sete dil	      1272	reg.c	FUNCTION_58	IF_1
0x40000e9	            0x39f1	                            cmp ecx, esi	      1272	reg.c	FUNCTION_58	IF_1
0x40000eb	           0xf97c0	                                 seta al	      1272	reg.c	FUNCTION_58	IF_1
0x40000ee	          0x4008f8	                              or al, dil	      1275	reg.c	FUNCTION_58	IF_2
0x40000f1	            0x751c	                           jne 0x400010f	      1275	reg.c	FUNCTION_58	IF_2
0x40000f3	            0x89f7	                            mov edi, esi	      1278	reg.c	FUNCTION_58
0x40000f5	            0x29cf	                            sub edi, ecx	      1278	reg.c	FUNCTION_58
0x40000f7	            0x39f1	                            cmp ecx, esi	      1280	reg.c	FUNCTION_58	IF_3
0x40000f9	            0x731c	                           jae 0x4000117	      1280	reg.c	FUNCTION_58	IF_3
0x40000fb	          0x3b7a08	                cmp edi, dword [rdx + 8]	      1280	reg.c	FUNCTION_58	IF_3
0x40000fe	            0x7219	                            jb 0x4000119	      1280	reg.c	FUNCTION_58	IF_3
0x4000100	        0x4883c228	                           add rdx, 0x28	      1280	reg.c	FUNCTION_58	IF_3
0x4000104	          0x4c39c2	                             cmp rdx, r8	      1298	reg.c	FUNCTION_59	FOR_1
0x4000107	            0x7409	                            je 0x4000112	      1298	reg.c	FUNCTION_59	FOR_1
0x4000109	            0x8b0a	                    mov ecx, dword [rdx]	      1272	reg.c	FUNCTION_58	IF_1
0x400010b	            0x85c9	                           test ecx, ecx	      1272	reg.c	FUNCTION_58	IF_1
0x400010d	            0x75d1	                           jne 0x40000e0	      1272	reg.c	FUNCTION_58	IF_1
0x400010f	            0x31c0	                            xor eax, eax	      1293	reg.c	FUNCTION_59	IF_1
0x4000111	              0xc3	                                     ret	      1293	reg.c	FUNCTION_59	IF_1
0x4000112	      0xb801000000	                              mov eax, 1	      1304	reg.c	FUNCTION_59
0x4000117	            0xf3c3	                                     ret	      1305	reg.c	FUNCTION_59
0x4000119	            0xf3c3	                                     ret	      1305	reg.c	FUNCTION_59
0x400011b	             0xf0b	                                     ud2	      1305	reg.c	FUNCTION_59
0x400011d	              0xc3	                                     ret	      1295	reg.c	FUNCTION_59	IF_2	CALL_1
