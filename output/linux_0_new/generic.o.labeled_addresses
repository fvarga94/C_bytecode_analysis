generic_resume	SWITCH,0:IF,1:WHILE,0:DO,0:FOR,0:functions,0:ELSE,1:CALL,2	4
0x4000040	      0x48837f3800	               cmp qword [rdi + 0x38], 0	       236	generic.c	FUNCTION_8	IF_1
0x4000045	            0x7405	                            je 0x400004c	       236	generic.c	FUNCTION_8	IF_1
0x4000047	      0xe900000000	                           jmp 0x400004c	       239	generic.c	FUNCTION_8	CALL_2
0x400004c	      0xe900000000	                           jmp 0x4000051	       237	generic.c	FUNCTION_8	CALL_1
generic_disconnect	SWITCH,0:IF,1:WHILE,0:DO,0:FOR,0:functions,0:ELSE,0:CALL,2	11
0x4000090	              0x53	                                push rbx	       190	generic.c	FUNCTION_6
0x4000091	          0x4889fb	                            mov rbx, rdi	       190	generic.c	FUNCTION_6
0x4000094	      0xe800000000	                          call 0x4000099	       191	generic.c	FUNCTION_6	CALL_1
0x4000099	    0x4883bb900300	              cmp qword [rbx + 0x390], 0	       195	generic.c	FUNCTION_6	IF_1
0x40000a1	            0x740e	                            je 0x40000b1	       195	generic.c	FUNCTION_6	IF_1
0x40000a3	          0x4889df	                            mov rdi, rbx	       196	generic.c	FUNCTION_6	CALL_2
0x40000a6	      0xbeffffffff	                     mov esi, 0xffffffff	       196	generic.c	FUNCTION_6	CALL_2
0x40000ab	              0x5b	                                 pop rbx	       197	generic.c	FUNCTION_6
0x40000ac	      0xe900000000	                           jmp 0x40000b1	       196	generic.c	FUNCTION_6	CALL_2
0x40000b1	              0x5b	                                 pop rbx	       197	generic.c	FUNCTION_6
0x40000b2	              0xc3	                                     ret	       197	generic.c	FUNCTION_6
generic_suspend	SWITCH,0:IF,2:WHILE,0:DO,0:FOR,0:functions,0:ELSE,2:CALL,2	12
0x4000060	      0x48837f3800	               cmp qword [rdi + 0x38], 0	       210	generic.c	FUNCTION_7	IF_1
0x4000065	            0x7418	                            je 0x400007f	       210	generic.c	FUNCTION_7	IF_1
0x4000067	          0x83fe01	                              cmp esi, 1	       218	generic.c	FUNCTION_7	ELSE_1	IF_2
0x400006a	            0x7405	                            je 0x4000071	       218	generic.c	FUNCTION_7	ELSE_1	IF_2
0x400006c	          0x83fe08	                              cmp esi, 8	       218	generic.c	FUNCTION_7	ELSE_1	IF_2
0x400006f	            0x7506	                           jne 0x4000077	       218	generic.c	FUNCTION_7	ELSE_1	IF_2
0x4000071	        0x837f1c04	               cmp dword [rdi + 0x1c], 4	       219	generic.c	FUNCTION_7	ELSE_1	IF_2
0x4000075	            0x7605	                           jbe 0x400007c	       219	generic.c	FUNCTION_7	ELSE_1	IF_2
0x4000077	      0xe900000000	                           jmp 0x400007c	       222	generic.c	FUNCTION_7	CALL_2
0x400007c	            0x31c0	                            xor eax, eax	       225	generic.c	FUNCTION_7
0x400007e	              0xc3	                                     ret	       225	generic.c	FUNCTION_7
0x400007f	      0xe900000000	                           jmp 0x4000084	       211	generic.c	FUNCTION_7	CALL_1
generic_probe	SWITCH,0:IF,3:WHILE,0:DO,0:FOR,0:functions,0:ELSE,1:CALL,5	36
0x4000270	              0x55	                                push rbp	       163	generic.c	FUNCTION_5
0x4000271	              0x53	                                push rbx	       163	generic.c	FUNCTION_5
0x4000272	          0x4889fb	                            mov rbx, rdi	       163	generic.c	FUNCTION_5
0x4000275	    0xf687a4040000	              test byte [rdi + 0x4a4], 8	       169	generic.c	FUNCTION_5	IF_1
0x400027c	            0x7442	                            je 0x40002c0	       169	generic.c	FUNCTION_5	IF_1
0x400027e	      0xe800000000	                          call 0x4000283	       172	generic.c	FUNCTION_5	ELSE_1	CALL_2
0x4000283	            0x85c0	                           test eax, eax	       173	generic.c	FUNCTION_5	ELSE_1	IF_2
0x4000285	            0x89c5	                            mov ebp, eax	       172	generic.c	FUNCTION_5	ELSE_1	CALL_2
0x4000287	            0x782a	                            js 0x40002b3	       173	generic.c	FUNCTION_5	ELSE_1	IF_2
0x4000289	            0x89c6	                            mov esi, eax	       174	generic.c	FUNCTION_5	ELSE_1	IF_2	CALL_3
0x400028b	          0x4889df	                            mov rdi, rbx	       174	generic.c	FUNCTION_5	ELSE_1	IF_2	CALL_3
0x400028e	      0xe800000000	                          call 0x4000293	       174	generic.c	FUNCTION_5	ELSE_1	IF_2	CALL_3
0x4000293	            0x85c0	                           test eax, eax	       175	generic.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x4000295	            0x741c	                            je 0x40002b3	       175	generic.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x4000297	          0x83f8ed	             cmp eax, 0xffffffffffffffed	       175	generic.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x400029a	            0x7417	                            je 0x40002b3	       175	generic.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x400029c	    0x488dbb980000	                   lea rdi, [rbx + 0x98]	       176	generic.c	FUNCTION_5	ELSE_1	IF_2	IF_3	CALL_4
0x40002a3	            0x89c1	                            mov ecx, eax	       176	generic.c	FUNCTION_5	ELSE_1	IF_2	IF_3	CALL_4
0x40002a5	            0x89ea	                            mov edx, ebp	       176	generic.c	FUNCTION_5	ELSE_1	IF_2	IF_3	CALL_4
0x40002a7	    0x48c7c6000000	                              mov rsi, 0	       176	generic.c	FUNCTION_5	ELSE_1	IF_2	IF_3	CALL_4
0x40002ae	      0xe800000000	                          call 0x40002b3	       176	generic.c	FUNCTION_5	ELSE_1	IF_2	IF_3	CALL_4
0x40002b3	          0x4889df	                            mov rdi, rbx	       184	generic.c	FUNCTION_5	CALL_5
0x40002b6	      0xe800000000	                          call 0x40002bb	       184	generic.c	FUNCTION_5	CALL_5
0x40002bb	            0x31c0	                            xor eax, eax	       187	generic.c	FUNCTION_5
0x40002bd	              0x5b	                                 pop rbx	       187	generic.c	FUNCTION_5
0x40002be	              0x5d	                                 pop rbp	       187	generic.c	FUNCTION_5
0x40002bf	              0xc3	                                     ret	       187	generic.c	FUNCTION_5
0x40002c0	    0x488dbf980000	                   lea rdi, [rdi + 0x98]	       170	generic.c	FUNCTION_5	CALL_1
0x40002c7	    0x48c7c6000000	                              mov rsi, 0	       170	generic.c	FUNCTION_5	CALL_1
0x40002ce	      0xe800000000	                          call 0x40002d3	       170	generic.c	FUNCTION_5	CALL_1
0x40002d3	          0x4889df	                            mov rdi, rbx	       184	generic.c	FUNCTION_5	CALL_5
0x40002d6	      0xe800000000	                          call 0x40002db	       184	generic.c	FUNCTION_5	CALL_5
0x40002db	            0x31c0	                            xor eax, eax	       187	generic.c	FUNCTION_5
0x40002dd	              0x5b	                                 pop rbx	       187	generic.c	FUNCTION_5
0x40002de	              0x5d	                                 pop rbp	       187	generic.c	FUNCTION_5
0x40002df	              0xc3	                                     ret	       187	generic.c	FUNCTION_5
