match_token	CALL,1:DO,0:FOR,1:IF,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	138
0x40000d0	            0x4157	                                push r15	       108	parser.c	FUNCTION_2
0x40000d2	            0x4156	                                push r14	       108	parser.c	FUNCTION_2
0x40000d4	            0x4155	                                push r13	       108	parser.c	FUNCTION_2
0x40000d6	            0x4154	                                push r12	       108	parser.c	FUNCTION_2
0x40000d8	              0x55	                                push rbp	       108	parser.c	FUNCTION_2
0x40000d9	              0x53	                                push rbx	       108	parser.c	FUNCTION_2
0x40000da	        0x4883ec28	                           sub rsp, 0x28	       108	parser.c	FUNCTION_2
0x40000de	        0x4c8b7e08	                mov r15, qword [rsi + 8]	       111	parser.c	FUNCTION_2	FOR_1	CALL_1
0x40000e2	    0x65488b0c2528	                mov rcx, qword gs:[0x28]	       108	parser.c	FUNCTION_2
0x40000eb	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       108	parser.c	FUNCTION_2
0x40000f0	            0x31c9	                            xor ecx, ecx	       108	parser.c	FUNCTION_2
0x40000f2	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       108	parser.c	FUNCTION_2
0x40000f7	        0x48893424	                    mov qword [rsp], rsi	       108	parser.c	FUNCTION_2
0x40000fb	          0x4d85ff	                           test r15, r15	        31	parser.c	FUNCTION_1	IF_1
0x40000fe	      0x4889542408	                mov qword [rsp + 8], rdx	       108	parser.c	FUNCTION_2
0x4000103	      0x4c897c2418	             mov qword [rsp + 0x18], r15	       108	parser.c	FUNCTION_2
0x4000108	     0xf8407010000	                            je 0x4000215	        31	parser.c	FUNCTION_1	IF_1
0x400010e	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       108	parser.c	FUNCTION_2
0x4000113	          0x4531e4	                          xor r12d, r12d	       108	parser.c	FUNCTION_2
0x4000116	      0xbe25000000	                           mov esi, 0x25	        36	parser.c	FUNCTION_1	WHILE_1	CALL_1
0x400011b	          0x4c89ff	                            mov rdi, r15	        36	parser.c	FUNCTION_1	WHILE_1	CALL_1
0x400011e	      0xe800000000	                          call 0x4000123	        36	parser.c	FUNCTION_1	WHILE_1	CALL_1
0x4000123	          0x4885c0	                           test rax, rax	        37	parser.c	FUNCTION_1	WHILE_1	IF_2
0x4000126	          0x4989c5	                            mov r13, rax	        36	parser.c	FUNCTION_1	WHILE_1	CALL_1
0x4000129	     0xf8494010000	                            je 0x40002c3	        37	parser.c	FUNCTION_1	WHILE_1	IF_2
0x400012f	          0x4889c5	                            mov rbp, rax	        40	parser.c	FUNCTION_1	WHILE_1	IF_3	CALL_3
0x4000132	          0x4889de	                            mov rsi, rbx	        40	parser.c	FUNCTION_1	WHILE_1	IF_3	CALL_3
0x4000135	          0x4c89ff	                            mov rdi, r15	        40	parser.c	FUNCTION_1	WHILE_1	IF_3	CALL_3
0x4000138	          0x4c29fd	                            sub rbp, r15	        40	parser.c	FUNCTION_1	WHILE_1	IF_3	CALL_3
0x400013b	          0x4889ea	                            mov rdx, rbp	        40	parser.c	FUNCTION_1	WHILE_1	IF_3	CALL_3
0x400013e	      0xe800000000	                          call 0x4000143	        40	parser.c	FUNCTION_1	WHILE_1	IF_3	CALL_3
0x4000143	            0x85c0	                           test eax, eax	        40	parser.c	FUNCTION_1	WHILE_1	IF_3	CALL_3
0x4000145	     0xf85af000000	                           jne 0x40001fa	        40	parser.c	FUNCTION_1	WHILE_1	IF_3	CALL_3
0x400014b	        0x498d7d01	                      lea rdi, [r13 + 1]	        44	parser.c	FUNCTION_1	WHILE_1
0x400014f	        0x4c8d342b	                    lea r14, [rbx + rbp]	        43	parser.c	FUNCTION_1	WHILE_1
0x4000153	      0x48897c2418	             mov qword [rsp + 0x18], rdi	        44	parser.c	FUNCTION_1	WHILE_1
0x4000158	      0x410fbe4501	               movsx eax, byte [r13 + 1]	        46	parser.c	FUNCTION_1	WHILE_1	IF_4	CALL_4
0x400015d	            0x89c2	                            mov edx, eax	        46	parser.c	FUNCTION_1	WHILE_1	IF_4	CALL_4
0x400015f	          0x83e830	                           sub eax, 0x30	        46	parser.c	FUNCTION_1	WHILE_1	IF_4	CALL_4
0x4000162	          0x83f809	                              cmp eax, 9	        46	parser.c	FUNCTION_1	WHILE_1	IF_4	CALL_4
0x4000165	     0xf8625010000	                           jbe 0x4000290	        46	parser.c	FUNCTION_1	WHILE_1	IF_4	CALL_4
0x400016b	          0x80fa25	                            cmp dl, 0x25	        48	parser.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5
0x400016e	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	        35	parser.c	FUNCTION_1	WHILE_1
0x4000175	     0xf842c010000	                            je 0x40002a7	        48	parser.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5
0x400017b	        0x4183fc02	                             cmp r12d, 2	        55	parser.c	FUNCTION_1	WHILE_1	IF_7
0x400017f	            0x7f79	                            jg 0x40001fa	        55	parser.c	FUNCTION_1	WHILE_1	IF_7
0x4000181	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        59	parser.c	FUNCTION_1	WHILE_1	SWITCH_1
0x4000186	          0x4963dc	                        movsxd rbx, r12d	        58	parser.c	FUNCTION_1	WHILE_1
0x4000189	        0x48c1e304	                              shl rbx, 4	        58	parser.c	FUNCTION_1	WHILE_1
0x400018d	      0x48035c2408	                add rbx, qword [rsp + 8]	        58	parser.c	FUNCTION_1	WHILE_1
0x4000192	        0x4c8d7801	                      lea r15, [rax + 1]	        59	parser.c	FUNCTION_1	WHILE_1	SWITCH_1
0x4000196	          0x4c8933	                    mov qword [rbx], r14	        58	parser.c	FUNCTION_1	WHILE_1
0x4000199	      0x4c897c2418	             mov qword [rsp + 0x18], r15	        59	parser.c	FUNCTION_1	WHILE_1	SWITCH_1
0x400019e	           0xfb600	                   movzx eax, byte [rax]	        59	parser.c	FUNCTION_1	WHILE_1	SWITCH_1
0x40001a1	          0x83e864	                           sub eax, 0x64	        59	parser.c	FUNCTION_1	WHILE_1	SWITCH_1
0x40001a4	            0x3c14	                            cmp al, 0x14	        59	parser.c	FUNCTION_1	WHILE_1	SWITCH_1
0x40001a6	            0x7752	                            ja 0x40001fa	        59	parser.c	FUNCTION_1	WHILE_1	SWITCH_1
0x40001a8	           0xfb6c0	                           movzx eax, al	        59	parser.c	FUNCTION_1	WHILE_1	SWITCH_1
0x40001ab	    0x488b04c50000	                  mov rax, qword [rax*8]	        59	parser.c	FUNCTION_1	WHILE_1	SWITCH_1
0x40001b3	      0xe900000000	                           jmp 0x40001b8	        59	parser.c	FUNCTION_1	WHILE_1	SWITCH_1
0x40001b8	        0x488d7308	                      lea rsi, [rbx + 8]	        80	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_10
0x40001bc	      0xba10000000	                           mov edx, 0x10	        80	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_10
0x40001c1	          0x4c89f7	                            mov rdi, r14	        80	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_10
0x40001c4	      0xe800000000	                          call 0x40001c9	        80	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_10
0x40001c9	        0x488b4308	                mov rax, qword [rbx + 8]	        82	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	IF_10
0x40001cd	          0x483b03	                    cmp rax, qword [rbx]	        82	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	IF_10
0x40001d0	            0x7428	                            je 0x40001fa	        82	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	IF_10
0x40001d2	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	        82	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	IF_10
0x40001d7	          0x4889c3	                            mov rbx, rax	        82	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	IF_10
0x40001da	        0x4183c401	                             add r12d, 1	        89	parser.c	FUNCTION_1	WHILE_1
0x40001de	      0xe933ffffff	                           jmp 0x4000116	        89	parser.c	FUNCTION_1	WHILE_1
0x40001e3	        0x488d7308	                      lea rsi, [rbx + 8]	        74	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_8
0x40001e7	            0x31d2	                            xor edx, edx	        74	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_8
0x40001e9	          0x4c89f7	                            mov rdi, r14	        74	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_8
0x40001ec	      0xe800000000	                          call 0x40001f1	        74	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_8
0x40001f1	        0x488b4308	                mov rax, qword [rbx + 8]	        82	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	IF_10
0x40001f5	          0x483b03	                    cmp rax, qword [rbx]	        82	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	IF_10
0x40001f8	            0x75d8	                           jne 0x40001d2	        82	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	IF_10
0x40001fa	      0x4883042410	                   add qword [rsp], 0x10	       111	parser.c	FUNCTION_2	FOR_1	CALL_1
0x40001ff	        0x488b0424	                    mov rax, qword [rsp]	       111	parser.c	FUNCTION_2	FOR_1	CALL_1
0x4000203	        0x4c8b7808	                mov r15, qword [rax + 8]	       111	parser.c	FUNCTION_2	FOR_1	CALL_1
0x4000207	          0x4d85ff	                           test r15, r15	        31	parser.c	FUNCTION_1	IF_1
0x400020a	      0x4c897c2418	             mov qword [rsp + 0x18], r15	        31	parser.c	FUNCTION_1	IF_1
0x400020f	     0xf85f9feffff	                           jne 0x400010e	        31	parser.c	FUNCTION_1	IF_1
0x4000215	        0x488b0424	                    mov rax, qword [rsp]	       114	parser.c	FUNCTION_2
0x4000219	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       115	parser.c	FUNCTION_2
0x400021e	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       115	parser.c	FUNCTION_2
0x4000227	            0x8b00	                    mov eax, dword [rax]	       114	parser.c	FUNCTION_2
0x4000229	     0xf85ac000000	                           jne 0x40002db	       115	parser.c	FUNCTION_2
0x400022f	        0x4883c428	                           add rsp, 0x28	       115	parser.c	FUNCTION_2
0x4000233	              0x5b	                                 pop rbx	       115	parser.c	FUNCTION_2
0x4000234	              0x5d	                                 pop rbp	       115	parser.c	FUNCTION_2
0x4000235	            0x415c	                                 pop r12	       115	parser.c	FUNCTION_2
0x4000237	            0x415d	                                 pop r13	       115	parser.c	FUNCTION_2
0x4000239	            0x415e	                                 pop r14	       115	parser.c	FUNCTION_2
0x400023b	            0x415f	                                 pop r15	       115	parser.c	FUNCTION_2
0x400023d	              0xc3	                                     ret	       115	parser.c	FUNCTION_2
0x400023e	          0x4c89f7	                            mov rdi, r14	        61	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_6
0x4000241	      0xe800000000	                          call 0x4000246	        61	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_6
0x4000246	          0x4885c0	                           test rax, rax	        63	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	IF_8
0x4000249	            0x74af	                            je 0x40001fa	        63	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	IF_8
0x400024b	          0x83fdff	             cmp ebp, 0xffffffffffffffff	        65	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	IF_9
0x400024e	            0x7405	                            je 0x4000255	        65	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	IF_9
0x4000250	          0x4839e8	                            cmp rax, rbp	        65	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	IF_9
0x4000253	            0x7303	                           jae 0x4000258	        65	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	IF_9
0x4000255	          0x4863e8	                         movsxd rbp, eax	        65	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	IF_9
0x4000258	          0x4c01f5	                            add rbp, r14	        67	parser.c	FUNCTION_1	WHILE_1	SWITCH_1
0x400025b	        0x48896b08	                mov qword [rbx + 8], rbp	        67	parser.c	FUNCTION_1	WHILE_1	SWITCH_1
0x400025f	          0x4889eb	                            mov rbx, rbp	        67	parser.c	FUNCTION_1	WHILE_1	SWITCH_1
0x4000262	      0xe973ffffff	                           jmp 0x40001da	        67	parser.c	FUNCTION_1	WHILE_1	SWITCH_1
0x4000267	        0x488d7308	                      lea rsi, [rbx + 8]	        71	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_7
0x400026b	            0x31d2	                            xor edx, edx	        71	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_7
0x400026d	          0x4c89f7	                            mov rdi, r14	        71	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_7
0x4000270	      0xe800000000	                          call 0x4000275	        71	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_7
0x4000275	      0xe94fffffff	                           jmp 0x40001c9	        71	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_7
0x400027a	        0x488d7308	                      lea rsi, [rbx + 8]	        77	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_9
0x400027e	      0xba08000000	                              mov edx, 8	        77	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_9
0x4000283	          0x4c89f7	                            mov rdi, r14	        77	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_9
0x4000286	      0xe800000000	                          call 0x400028b	        77	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_9
0x400028b	      0xe939ffffff	                           jmp 0x40001c9	        77	parser.c	FUNCTION_1	WHILE_1	SWITCH_1	CALL_9
0x4000290	      0x488d742418	                   lea rsi, [rsp + 0x18]	        47	parser.c	FUNCTION_1	WHILE_1	CALL_5
0x4000295	      0xba0a000000	                            mov edx, 0xa	        47	parser.c	FUNCTION_1	WHILE_1	CALL_5
0x400029a	      0xe800000000	                          call 0x400029f	        47	parser.c	FUNCTION_1	WHILE_1	CALL_5
0x400029f	          0x4863e8	                         movsxd rbp, eax	        47	parser.c	FUNCTION_1	WHILE_1	CALL_5
0x40002a2	      0xe9d4feffff	                           jmp 0x400017b	        47	parser.c	FUNCTION_1	WHILE_1	CALL_5
0x40002a7	        0x41803e25	                    cmp byte [r14], 0x25	        49	parser.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x40002ab	     0xf8549ffffff	                           jne 0x40001fa	        49	parser.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x40002b1	        0x4d8d7d02	                      lea r15, [r13 + 2]	        51	parser.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5
0x40002b5	        0x498d5e01	                      lea rbx, [r14 + 1]	        49	parser.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x40002b9	      0x4c897c2418	             mov qword [rsp + 0x18], r15	        51	parser.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5
0x40002be	      0xe953feffff	                           jmp 0x4000116	        51	parser.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5
0x40002c3	          0x4889de	                            mov rsi, rbx	        38	parser.c	FUNCTION_1	WHILE_1	CALL_2
0x40002c6	          0x4c89ff	                            mov rdi, r15	        38	parser.c	FUNCTION_1	WHILE_1	CALL_2
0x40002c9	      0xe800000000	                          call 0x40002ce	        38	parser.c	FUNCTION_1	WHILE_1	CALL_2
0x40002ce	            0x85c0	                           test eax, eax	       111	parser.c	FUNCTION_2	FOR_1	CALL_1
0x40002d0	     0xf8524ffffff	                           jne 0x40001fa	       111	parser.c	FUNCTION_2	FOR_1	CALL_1
0x40002d6	      0xe93affffff	                           jmp 0x4000215	       111	parser.c	FUNCTION_2	FOR_1	CALL_1
0x40002db	      0xe800000000	                  call sym.match_strlcpy	       115	parser.c	FUNCTION_2
match_wildcard	CALL,0:DO,0:FOR,0:IF,4:SWITCH,1:ELSE,1:WHILE,1:functions,0	48
0x4000040	        0x440fb606	                   movzx r8d, byte [rsi]	       258	parser.c	FUNCTION_9
0x4000044	           0xfb607	                   movzx eax, byte [rdi]	       258	parser.c	FUNCTION_9
0x4000047	          0x4889fa	                            mov rdx, rdi	       260	parser.c	FUNCTION_9
0x400004a	          0x4889f1	                            mov rcx, rsi	       259	parser.c	FUNCTION_9
0x400004d	          0x4531c9	                            xor r9d, r9d	       261	parser.c	FUNCTION_9
0x4000050	          0x4584c0	                           test r8b, r8b	       263	parser.c	FUNCTION_9	WHILE_1
0x4000053	            0x7429	                            je 0x400007e	       263	parser.c	FUNCTION_9	WHILE_1
0x4000055	            0x3c2a	                            cmp al, 0x2a	       264	parser.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4000057	            0x7442	                            je 0x400009b	       264	parser.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4000059	            0x3c3f	                            cmp al, 0x3f	       264	parser.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400005b	            0x742b	                            je 0x4000088	       264	parser.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400005d	          0x4138c0	                             cmp r8b, al	       277	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_2
0x4000060	            0x7426	                            je 0x4000088	       277	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_2
0x4000062	          0x4584c9	                           test r9b, r9b	       281	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	ELSE_1	IF_3
0x4000065	            0x745e	                            je 0x40000c5	       281	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	ELSE_1	IF_3
0x4000067	      0x440fb64601	               movzx r8d, byte [rsi + 1]	       281	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	ELSE_1	IF_3
0x400006c	        0x488d4e01	                      lea rcx, [rsi + 1]	       283	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	ELSE_1
0x4000070	           0xfb607	                   movzx eax, byte [rdi]	       283	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	ELSE_1
0x4000073	          0x4889fa	                            mov rdx, rdi	       285	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	ELSE_1
0x4000076	          0x4889ce	                            mov rsi, rcx	       283	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	ELSE_1
0x4000079	          0x4584c0	                           test r8b, r8b	       263	parser.c	FUNCTION_9	WHILE_1
0x400007c	            0x75d7	                           jne 0x4000055	       263	parser.c	FUNCTION_9	WHILE_1
0x400007e	            0x3c2a	                            cmp al, 0x2a	       291	parser.c	FUNCTION_9	IF_4
0x4000080	            0x7439	                            je 0x40000bb	       291	parser.c	FUNCTION_9	IF_4
0x4000082	            0x84c0	                             test al, al	       293	parser.c	FUNCTION_9
0x4000084	           0xf94c0	                                 sete al	       293	parser.c	FUNCTION_9
0x4000087	              0xc3	                                     ret	       293	parser.c	FUNCTION_9
0x4000088	      0x440fb64101	               movzx r8d, byte [rcx + 1]	       293	parser.c	FUNCTION_9
0x400008d	         0xfb64201	               movzx eax, byte [rdx + 1]	       293	parser.c	FUNCTION_9
0x4000091	        0x4883c101	                              add rcx, 1	       278	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_2
0x4000095	        0x4883c201	                              add rdx, 1	       279	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_2
0x4000099	            0xebb5	                           jmp 0x4000050	       279	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_2
0x400009b	         0xfb64201	               movzx eax, byte [rdx + 1]	       272	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_1
0x400009f	        0x488d7a01	                      lea rdi, [rdx + 1]	       272	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_1
0x40000a3	            0x84c0	                             test al, al	       272	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_1
0x40000a5	            0x740e	                            je 0x40000b5	       272	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_1
0x40000a7	          0x4889fa	                            mov rdx, rdi	       272	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_1
0x40000aa	          0x4889ce	                            mov rsi, rcx	       271	parser.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40000ad	    0x41b901000000	                              mov r9d, 1	       270	parser.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40000b3	            0xeb9b	                           jmp 0x4000050	       270	parser.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40000b5	      0xb801000000	                              mov eax, 1	       273	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_1
0x40000ba	              0xc3	                                     ret	       273	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_1
0x40000bb	         0xfb64201	               movzx eax, byte [rdx + 1]	       273	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_1
0x40000bf	            0x84c0	                             test al, al	       293	parser.c	FUNCTION_9
0x40000c1	           0xf94c0	                                 sete al	       293	parser.c	FUNCTION_9
0x40000c4	              0xc3	                                     ret	       293	parser.c	FUNCTION_9
0x40000c5	            0x31c0	                            xor eax, eax	       282	parser.c	FUNCTION_9	WHILE_1	SWITCH_1	ELSE_1	IF_3
0x40000c7	              0xc3	                                     ret	       294	parser.c	FUNCTION_9
match_hex	CALL,1:DO,0:FOR,0:IF,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	2
0x4000440	      0xba10000000	                           mov edx, 0x10	       242	parser.c	FUNCTION_8	CALL_1
0x4000445	      0xe916ffffff	                    jmp sym.match_number	       242	parser.c	FUNCTION_8	CALL_1
match_strlcpy	CALL,1:DO,0:FOR,0:IF,1:SWITCH,0:ELSE,0:WHILE,0:functions,0	18
0x40002e0	          0x4889f0	                            mov rax, rsi	       308	parser.c	FUNCTION_10
0x40002e3	              0x55	                                push rbp	       308	parser.c	FUNCTION_10
0x40002e4	              0x53	                                push rbx	       308	parser.c	FUNCTION_10
0x40002e5	          0x488b36	                    mov rsi, qword [rsi]	       309	parser.c	FUNCTION_10
0x40002e8	        0x488b5808	                mov rbx, qword [rax + 8]	       309	parser.c	FUNCTION_10
0x40002ec	          0x4829f3	                            sub rbx, rsi	       309	parser.c	FUNCTION_10
0x40002ef	          0x4885d2	                           test rdx, rdx	       311	parser.c	FUNCTION_10	IF_1
0x40002f2	            0x7417	                            je 0x400030b	       311	parser.c	FUNCTION_10	IF_1
0x40002f4	        0x488d6aff	                      lea rbp, [rdx - 1]	       312	parser.c	FUNCTION_10	IF_1
0x40002f8	          0x4839d3	                            cmp rbx, rdx	       312	parser.c	FUNCTION_10	IF_1
0x40002fb	        0x480f42eb	                          cmovb rbp, rbx	       312	parser.c	FUNCTION_10	IF_1
0x40002ff	          0x4889ea	                            mov rdx, rbp	       313	parser.c	FUNCTION_10	IF_1	CALL_1
0x4000302	      0xe800000000	                          call 0x4000307	       313	parser.c	FUNCTION_10	IF_1	CALL_1
0x4000307	        0xc6042800	                 mov byte [rax + rbp], 0	       314	parser.c	FUNCTION_10	IF_1
0x400030b	          0x4889d8	                            mov rax, rbx	       317	parser.c	FUNCTION_10
0x400030e	              0x5b	                                 pop rbx	       317	parser.c	FUNCTION_10
0x400030f	              0x5d	                                 pop rbp	       317	parser.c	FUNCTION_10
0x4000310	              0xc3	                                     ret	       317	parser.c	FUNCTION_10
match_octal	CALL,1:DO,0:FOR,0:IF,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	2
0x4000430	      0xba08000000	                              mov edx, 8	       227	parser.c	FUNCTION_7	CALL_1
0x4000435	      0xe926ffffff	                    jmp sym.match_number	       227	parser.c	FUNCTION_7	CALL_1
match_int	CALL,1:DO,0:FOR,0:IF,0:SWITCH,0:ELSE,0:WHILE,0:functions,0	2
0x4000420	            0x31d2	                            xor edx, edx	       195	parser.c	FUNCTION_5	CALL_1
0x4000422	      0xe939ffffff	                    jmp sym.match_number	       195	parser.c	FUNCTION_5	CALL_1
