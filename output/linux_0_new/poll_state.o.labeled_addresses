cpuidle_poll_state_init	IF,0:WHILE,0:FOR,0:functions,0:SWITCH,0:ELSE,0:CALL,2:DO,0	17
0x4000040	    0x48ba43505549	         movabs rdx, 0x20454c4449555043 	        44	poll_state.c	FUNCTION_2	CALL_2
0x400004a	    0x48b9434f5245	          movabs rcx, 0x4c4f502045524f43	        44	poll_state.c	FUNCTION_2	CALL_2
0x4000054	      0xb84c450000	                         mov eax, 0x454c	        44	poll_state.c	FUNCTION_2	CALL_2
0x4000059	    0xc74718504f4c	     mov dword [rdi + 0x18], 0x4c4c4f50 	        43	poll_state.c	FUNCTION_2	CALL_1
0x4000060	        0xc6471c00	                mov byte [rdi + 0x1c], 0	        43	poll_state.c	FUNCTION_2	CALL_1
0x4000064	        0x48895728	             mov qword [rdi + 0x28], rdx	        44	poll_state.c	FUNCTION_2	CALL_2
0x4000068	        0x48894f30	             mov qword [rdi + 0x30], rcx	        44	poll_state.c	FUNCTION_2	CALL_2
0x400006c	    0xc747384c2049	     mov dword [rdi + 0x38], 0x4449204c 	        44	poll_state.c	FUNCTION_2	CALL_2
0x4000073	        0x6689473c	               mov word [rdi + 0x3c], ax	        44	poll_state.c	FUNCTION_2	CALL_2
0x4000077	        0xc6473e00	                mov byte [rdi + 0x3e], 0	        44	poll_state.c	FUNCTION_2	CALL_2
0x400007b	    0xc7474c000000	               mov dword [rdi + 0x4c], 0	        45	poll_state.c	FUNCTION_2
0x4000082	    0xc74754000000	               mov dword [rdi + 0x54], 0	        46	poll_state.c	FUNCTION_2
0x4000089	    0xc74750ffffff	     mov dword [rdi + 0x50], 0xffffffff 	        47	poll_state.c	FUNCTION_2
0x4000090	    0x48c747600000	               mov qword [rdi + 0x60], 0	        48	poll_state.c	FUNCTION_2
0x4000098	        0xc6475800	                mov byte [rdi + 0x58], 0	        49	poll_state.c	FUNCTION_2
0x400009c	    0xc74748010000	               mov dword [rdi + 0x48], 1	        50	poll_state.c	FUNCTION_2
0x40000a3	              0xc3	                                     ret	        50	poll_state.c	FUNCTION_2
