piix_pata_prereset	IF,1:SWITCH,0:FOR,0:WHILE,0:CALL,3:DO,0:ELSE,0:functions,0	23
0x4000810	              0x55	                                push rbp	       555	ata_piix.c	FUNCTION_3
0x4000811	              0x53	                                push rbx	       555	ata_piix.c	FUNCTION_3
0x4000812	          0x4889fb	                            mov rbx, rdi	       555	ata_piix.c	FUNCTION_3
0x4000815	          0x488b07	                    mov rax, qword [rdi]	       556	ata_piix.c	FUNCTION_3
0x4000818	          0x4889f5	                            mov rbp, rsi	       555	ata_piix.c	FUNCTION_3
0x400081b	          0x8b502c	            mov edx, dword [rax + 0x2c] 	       559	ata_piix.c	FUNCTION_3	IF_1	CALL_2
0x400081e	    0x488b80783300	          mov rax, qword [rax + 0x3378] 	       557	ata_piix.c	FUNCTION_3	CALL_1
0x4000825	        0x488b7808	                mov rdi, qword [rax + 8]	       559	ata_piix.c	FUNCTION_3	IF_1	CALL_2
0x4000829	        0x488d1452	                  lea rdx, [rdx + rdx*2]	       559	ata_piix.c	FUNCTION_3	IF_1	CALL_2
0x400082d	    0x488d34d50000	                        lea rsi, [rdx*8]	       559	ata_piix.c	FUNCTION_3	IF_1	CALL_2
0x4000835	    0x4881efa00000	                           sub rdi, 0xa0	       559	ata_piix.c	FUNCTION_3	IF_1	CALL_2
0x400083c	      0xe800000000	                          call 0x4000841	       559	ata_piix.c	FUNCTION_3	IF_1	CALL_2
0x4000841	            0x85c0	                           test eax, eax	       559	ata_piix.c	FUNCTION_3	IF_1	CALL_2
0x4000843	            0x740d	                            je 0x4000852	       559	ata_piix.c	FUNCTION_3	IF_1	CALL_2
0x4000845	          0x4889ee	                            mov rsi, rbp	       561	ata_piix.c	FUNCTION_3	CALL_3
0x4000848	          0x4889df	                            mov rdi, rbx	       561	ata_piix.c	FUNCTION_3	CALL_3
0x400084b	              0x5b	                                 pop rbx	       562	ata_piix.c	FUNCTION_3
0x400084c	              0x5d	                                 pop rbp	       562	ata_piix.c	FUNCTION_3
0x400084d	      0xe900000000	                           jmp 0x4000852	       561	ata_piix.c	FUNCTION_3	CALL_3
0x4000852	      0xb8feffffff	                     mov eax, 0xfffffffe	       562	ata_piix.c	FUNCTION_3
0x4000857	              0x5b	                                 pop rbx	       562	ata_piix.c	FUNCTION_3
0x4000858	              0x5d	                                 pop rbp	       562	ata_piix.c	FUNCTION_3
0x4000859	              0xc3	                                     ret	       562	ata_piix.c	FUNCTION_3
ich_pata_cable_detect	IF,2:SWITCH,0:FOR,0:WHILE,1:CALL,1:DO,0:ELSE,0:functions,0	30
0x4000040	    0x488b87783300	          mov rax, qword [rdi + 0x3378] 	       524	ata_piix.c	FUNCTION_2	CALL_1
0x4000047	      0xbadf270000	                         mov edx, 0x27df	       525	ata_piix.c	FUNCTION_2
0x400004c	        0x488b7008	                mov rsi, qword [rax + 8]	       524	ata_piix.c	FUNCTION_2	CALL_1
0x4000050	        0x4c8b4020	              mov r8, qword [rax + 0x20]	       525	ata_piix.c	FUNCTION_2
0x4000054	    0x48c7c0000000	                              mov rax, 0	       525	ata_piix.c	FUNCTION_2
0x400005b	         0xfb74e9e	            movzx ecx, word [rsi - 0x62]	       525	ata_piix.c	FUNCTION_2
0x400005f	            0xeb0c	                           jmp 0x400006d	       525	ata_piix.c	FUNCTION_2
0x4000061	        0x4883c006	                              add rax, 6	       536	ata_piix.c	FUNCTION_2	WHILE_1
0x4000065	           0xfb710	                   movzx edx, word [rax]	       530	ata_piix.c	FUNCTION_2	WHILE_1
0x4000068	          0x6685d2	                             test dx, dx	       530	ata_piix.c	FUNCTION_2	WHILE_1
0x400006b	            0x741f	                            je 0x400008c	       530	ata_piix.c	FUNCTION_2	WHILE_1
0x400006d	          0x6639d1	                              cmp cx, dx	       531	ata_piix.c	FUNCTION_2	WHILE_1	IF_1
0x4000070	            0x75ef	                           jne 0x4000061	       531	ata_piix.c	FUNCTION_2	WHILE_1	IF_1
0x4000072	         0xfb756a0	            movzx edx, word [rsi - 0x60]	       531	ata_piix.c	FUNCTION_2	WHILE_1	IF_1
0x4000076	        0x66395002	                  cmp word [rax + 2], dx	       531	ata_piix.c	FUNCTION_2	WHILE_1	IF_1
0x400007a	            0x75e5	                           jne 0x4000061	       531	ata_piix.c	FUNCTION_2	WHILE_1	IF_1
0x400007c	         0xfb756a2	            movzx edx, word [rsi - 0x5e]	       532	ata_piix.c	FUNCTION_2	WHILE_1	IF_1
0x4000080	        0x66395004	                  cmp word [rax + 4], dx	       532	ata_piix.c	FUNCTION_2	WHILE_1	IF_1
0x4000084	            0x75db	                           jne 0x4000061	       532	ata_piix.c	FUNCTION_2	WHILE_1	IF_1
0x4000086	      0xb803000000	                              mov eax, 3	       534	ata_piix.c	FUNCTION_2	WHILE_1	IF_1
0x400008b	              0xc3	                                     ret	       544	ata_piix.c	FUNCTION_2
0x400008c	        0x837f2c01	               cmp dword [rdi + 0x2c], 1	       540	ata_piix.c	FUNCTION_2
0x4000090	            0x19c0	                            sbb eax, eax	       540	ata_piix.c	FUNCTION_2
0x4000092	            0x2470	                            and al, 0x70	       540	ata_piix.c	FUNCTION_2
0x4000094	       0x5c0000000	                           add eax, 0xc0	       540	ata_piix.c	FUNCTION_2
0x4000099	        0x41234008	                 and eax, dword [r8 + 8]	       541	ata_piix.c	FUNCTION_2	IF_2
0x400009d	          0x83f801	                              cmp eax, 1	       542	ata_piix.c	FUNCTION_2	IF_2
0x40000a0	            0x19c0	                            sbb eax, eax	       542	ata_piix.c	FUNCTION_2	IF_2
0x40000a2	          0x83c002	                              add eax, 2	       542	ata_piix.c	FUNCTION_2	IF_2
0x40000a5	              0xc3	                                     ret	       542	ata_piix.c	FUNCTION_2	IF_2
piix_exit	IF,0:SWITCH,0:FOR,0:WHILE,0:CALL,1:DO,0:ELSE,0:functions,0	2
0x4000040	    0x488b87783300	          mov rax, qword [rdi + 0x3378] 	       524	ata_piix.c	FUNCTION_2	CALL_1
0x4000047	      0xbadf270000	                         mov edx, 0x27df	       525	ata_piix.c	FUNCTION_2
piix_set_piomode	IF,0:SWITCH,0:FOR,0:WHILE,0:CALL,1:DO,0:ELSE,0:functions,0	4
0x40007f0	     0xfb686280300	          movzx eax, byte [rsi + 0x328] 	       665	ata_piix.c	FUNCTION_5	CALL_1
0x40007f7	          0x8d50f8	                      lea edx, [rax - 8]	       665	ata_piix.c	FUNCTION_5	CALL_1
0x40007fa	           0xfb6d2	                           movzx edx, dl	       665	ata_piix.c	FUNCTION_5	CALL_1
0x40007fd	      0xe9defbffff	                jmp sym.piix_set_timings	       665	ata_piix.c	FUNCTION_5	CALL_1
ich_set_dmamode	IF,0:SWITCH,0:FOR,0:WHILE,0:CALL,1:DO,0:ELSE,0:functions,0	2
0x40007d0	      0xba01000000	                              mov edx, 1	       776	ata_piix.c	FUNCTION_8	CALL_1
0x40007d5	      0xe936feffff	             jmp sym.do_pata_set_dmamode	       776	ata_piix.c	FUNCTION_8	CALL_1
piix_init	IF,1:SWITCH,0:FOR,0:WHILE,0:CALL,3:DO,0:ELSE,0:functions,0	10
0x4000040	    0x488b87783300	          mov rax, qword [rdi + 0x3378] 	       524	ata_piix.c	FUNCTION_2	CALL_1
0x4000047	      0xbadf270000	                         mov edx, 0x27df	       525	ata_piix.c	FUNCTION_2
0x400004c	        0x488b7008	                mov rsi, qword [rax + 8]	       524	ata_piix.c	FUNCTION_2	CALL_1
0x4000050	        0x4c8b4020	              mov r8, qword [rax + 0x20]	       525	ata_piix.c	FUNCTION_2
0x4000054	    0x48c7c0000000	                              mov rax, 0	       525	ata_piix.c	FUNCTION_2
0x400005b	         0xfb74e9e	            movzx ecx, word [rsi - 0x62]	       525	ata_piix.c	FUNCTION_2
0x400005f	            0xeb0c	                           jmp 0x400006d	       525	ata_piix.c	FUNCTION_2
0x4000061	              0x48	                                 invalid	       536	ata_piix.c	FUNCTION_2	WHILE_1
0x4000062	              0x83	                                 invalid	       536	ata_piix.c	FUNCTION_2	WHILE_1
0x4000063	              0xc0	                                 invalid	       536	ata_piix.c	FUNCTION_2	WHILE_1
piix_sidpr_scr_write	IF,1:SWITCH,0:FOR,0:WHILE,0:CALL,3:DO,0:ELSE,0:functions,0	25
0x4000330	              0x55	                                push rbp	       817	ata_piix.c	FUNCTION_11
0x4000331	              0x53	                                push rbx	       817	ata_piix.c	FUNCTION_11
0x4000332	          0x83fe02	                              cmp esi, 2	       820	ata_piix.c	FUNCTION_11	IF_1	CALL_1
0x4000335	          0x488b0f	                    mov rcx, qword [rdi]	       818	ata_piix.c	FUNCTION_11
0x4000338	    0x488b81783300	          mov rax, qword [rcx + 0x3378] 	       818	ata_piix.c	FUNCTION_11
0x400033f	        0x488b6820	            mov rbp, qword [rax + 0x20] 	       818	ata_piix.c	FUNCTION_11
0x4000343	      0xb8eaffffff	                     mov eax, 0xffffffea	       818	ata_piix.c	FUNCTION_11
0x4000348	            0x7731	                            ja 0x400037b	       820	ata_piix.c	FUNCTION_11	IF_1	CALL_1
0x400034a	          0x8b4708	                mov eax, dword [rdi + 8]	       798	ata_piix.c	FUNCTION_9	CALL_1
0x400034d	            0x89d3	                            mov ebx, edx	       798	ata_piix.c	FUNCTION_9	CALL_1
0x400034f	          0x8b512c	            mov edx, dword [rcx + 0x2c] 	       798	ata_piix.c	FUNCTION_9	CALL_1
0x4000352	            0x89f6	                            mov esi, esi	       798	ata_piix.c	FUNCTION_9	CALL_1
0x4000354	          0x8d3c50	                  lea edi, [rax + rdx*2]	       798	ata_piix.c	FUNCTION_9	CALL_1
0x4000357	          0xc1e708	                              shl edi, 8	       798	ata_piix.c	FUNCTION_9	CALL_1
0x400035a	     0xb3cb5000000	                   or edi, dword [rsi*4]	       798	ata_piix.c	FUNCTION_9	CALL_1
0x4000361	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	       798	ata_piix.c	FUNCTION_9	CALL_1
0x4000365	      0xe800000000	                          call 0x400036a	       798	ata_piix.c	FUNCTION_9	CALL_1
0x400036a	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	       824	ata_piix.c	FUNCTION_11	CALL_3
0x400036e	            0x89df	                            mov edi, ebx	       824	ata_piix.c	FUNCTION_11	CALL_3
0x4000370	        0x4883c604	                              add rsi, 4	       824	ata_piix.c	FUNCTION_11	CALL_3
0x4000374	      0xe800000000	                          call 0x4000379	       824	ata_piix.c	FUNCTION_11	CALL_3
0x4000379	            0x31c0	                            xor eax, eax	       825	ata_piix.c	FUNCTION_11
0x400037b	              0x5b	                                 pop rbx	       826	ata_piix.c	FUNCTION_11
0x400037c	              0x5d	                                 pop rbp	       826	ata_piix.c	FUNCTION_11
0x400037d	              0xc3	                                     ret	       826	ata_piix.c	FUNCTION_11
piix_irq_check	IF,1:SWITCH,0:FOR,0:WHILE,0:CALL,2:DO,0:ELSE,0:functions,0	10
0x40002d0	    0x4883bf980000	               cmp qword [rdi + 0x98], 0	       836	ata_piix.c	FUNCTION_13	IF_1	CALL_1
0x40002d8	            0x7417	                            je 0x40002f1	       836	ata_piix.c	FUNCTION_13	IF_1	CALL_1
0x40002da	        0x488b4708	                mov rax, qword [rdi + 8]	       839	ata_piix.c	FUNCTION_13	CALL_2
0x40002de	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	       839	ata_piix.c	FUNCTION_13	CALL_2
0x40002e5	      0xe800000000	                          call 0x40002ea	       839	ata_piix.c	FUNCTION_13	CALL_2
0x40002ea	          0xc0e802	                               shr al, 2	       839	ata_piix.c	FUNCTION_13	CALL_2
0x40002ed	          0x83e001	                              and eax, 1	       839	ata_piix.c	FUNCTION_13	CALL_2
0x40002f0	              0xc3	                                     ret	       839	ata_piix.c	FUNCTION_13	CALL_2
0x40002f1	            0x31c0	                            xor eax, eax	       837	ata_piix.c	FUNCTION_13	IF_1
0x40002f3	              0xc3	                                     ret	       840	ata_piix.c	FUNCTION_13
piix_sidpr_set_lpm	IF,0:SWITCH,0:FOR,0:WHILE,0:CALL,1:DO,0:ELSE,0:functions,0	2
0x4000320	            0x31d2	                            xor edx, edx	       831	ata_piix.c	FUNCTION_12	CALL_1
0x4000322	      0xe900000000	                           jmp 0x4000327	       831	ata_piix.c	FUNCTION_12	CALL_1
piix_sidpr_scr_read	IF,1:SWITCH,0:FOR,0:WHILE,0:CALL,3:DO,0:ELSE,0:functions,0	25
0x4000380	              0x55	                                push rbp	       804	ata_piix.c	FUNCTION_10
0x4000381	              0x53	                                push rbx	       804	ata_piix.c	FUNCTION_10
0x4000382	          0x83fe02	                              cmp esi, 2	       807	ata_piix.c	FUNCTION_10	IF_1	CALL_1
0x4000385	          0x488b0f	                    mov rcx, qword [rdi]	       805	ata_piix.c	FUNCTION_10
0x4000388	    0x488b81783300	          mov rax, qword [rcx + 0x3378] 	       805	ata_piix.c	FUNCTION_10
0x400038f	        0x488b6820	            mov rbp, qword [rax + 0x20] 	       805	ata_piix.c	FUNCTION_10
0x4000393	      0xb8eaffffff	                     mov eax, 0xffffffea	       805	ata_piix.c	FUNCTION_10
0x4000398	            0x7732	                            ja 0x40003cc	       807	ata_piix.c	FUNCTION_10	IF_1	CALL_1
0x400039a	          0x8b4708	                mov eax, dword [rdi + 8]	       798	ata_piix.c	FUNCTION_9	CALL_1
0x400039d	          0x4889d3	                            mov rbx, rdx	       798	ata_piix.c	FUNCTION_9	CALL_1
0x40003a0	          0x8b512c	            mov edx, dword [rcx + 0x2c] 	       798	ata_piix.c	FUNCTION_9	CALL_1
0x40003a3	            0x89f6	                            mov esi, esi	       798	ata_piix.c	FUNCTION_9	CALL_1
0x40003a5	          0x8d3c50	                  lea edi, [rax + rdx*2]	       798	ata_piix.c	FUNCTION_9	CALL_1
0x40003a8	          0xc1e708	                              shl edi, 8	       798	ata_piix.c	FUNCTION_9	CALL_1
0x40003ab	     0xb3cb5000000	                   or edi, dword [rsi*4]	       798	ata_piix.c	FUNCTION_9	CALL_1
0x40003b2	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	       798	ata_piix.c	FUNCTION_9	CALL_1
0x40003b6	      0xe800000000	                          call 0x40003bb	       798	ata_piix.c	FUNCTION_9	CALL_1
0x40003bb	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       811	ata_piix.c	FUNCTION_10	CALL_3
0x40003bf	        0x4883c704	                              add rdi, 4	       811	ata_piix.c	FUNCTION_10	CALL_3
0x40003c3	      0xe800000000	                          call 0x40003c8	       811	ata_piix.c	FUNCTION_10	CALL_3
0x40003c8	            0x8903	                    mov dword [rbx], eax	       811	ata_piix.c	FUNCTION_10	CALL_3
0x40003ca	            0x31c0	                            xor eax, eax	       812	ata_piix.c	FUNCTION_10
0x40003cc	              0x5b	                                 pop rbx	       813	ata_piix.c	FUNCTION_10
0x40003cd	              0x5d	                                 pop rbp	       813	ata_piix.c	FUNCTION_10
0x40003ce	              0xc3	                                     ret	       813	ata_piix.c	FUNCTION_10
piix_port_start	IF,1:SWITCH,0:FOR,0:WHILE,0:CALL,1:DO,0:ELSE,0:functions,0	4
0x4000300	        0xf6471b40	           test byte [rdi + 0x1b], 0x40 	       505	ata_piix.c	FUNCTION_1	IF_1
0x4000304	            0x7507	                           jne 0x400030d	       505	ata_piix.c	FUNCTION_1	IF_1
0x4000306	    0x814f20000030	         or dword [rdi + 0x20], 0x300000	       506	ata_piix.c	FUNCTION_1	IF_1
0x400030d	      0xe900000000	                           jmp 0x4000312	       508	ata_piix.c	FUNCTION_1	CALL_1
piix_remove_one	IF,0:SWITCH,0:FOR,0:WHILE,0:CALL,3:DO,0:ELSE,0:functions,0	10
0x40002a0	              0x53	                                push rbx	      1765	ata_piix.c	FUNCTION_28
0x40002a1	    0x488b87380100	           mov rax, qword [rdi + 0x138] 	      1767	ata_piix.c	FUNCTION_28
0x40002a8	          0x4889fb	                            mov rbx, rdi	      1765	ata_piix.c	FUNCTION_28
0x40002ab	      0xbe54000000	                           mov esi, 0x54	      1769	ata_piix.c	FUNCTION_28	CALL_2
0x40002b0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1769	ata_piix.c	FUNCTION_28	CALL_2
0x40002b4	          0x8b5008	                mov edx, dword [rax + 8]	      1769	ata_piix.c	FUNCTION_28	CALL_2
0x40002b7	      0xe800000000	                          call 0x40002bc	      1769	ata_piix.c	FUNCTION_28	CALL_2
0x40002bc	          0x4889df	                            mov rdi, rbx	      1771	ata_piix.c	FUNCTION_28	CALL_3
0x40002bf	              0x5b	                                 pop rbx	      1772	ata_piix.c	FUNCTION_28
0x40002c0	      0xe900000000	                           jmp 0x40002c5	      1771	ata_piix.c	FUNCTION_28	CALL_3
piix_set_dmamode	IF,0:SWITCH,0:FOR,0:WHILE,0:CALL,1:DO,0:ELSE,0:functions,0	2
0x40007e0	            0x31d2	                            xor edx, edx	       760	ata_piix.c	FUNCTION_7	CALL_1
0x40007e2	      0xe929feffff	             jmp sym.do_pata_set_dmamode	       760	ata_piix.c	FUNCTION_7	CALL_1
piix_vmw_bmdma_status	IF,0:SWITCH,0:FOR,0:WHILE,0:CALL,1:DO,0:ELSE,0:functions,0	3
0x40003d0	      0xe800000000	                          call 0x40003d5	      1075	ata_piix.c	FUNCTION_17	CALL_1
0x40003d5	          0x83e0fd	                     and eax, 0xfffffffd	      1075	ata_piix.c	FUNCTION_17	CALL_1
0x40003d8	              0xc3	                                     ret	      1076	ata_piix.c	FUNCTION_17
