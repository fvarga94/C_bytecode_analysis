exar_resume	functions,0:WHILE,0:CALL,3:IF,1:FOR,1:ELSE,0:SWITCH,0:DO,0	19
0x4000240	              0x55	                                push rbp	       544	8250_exar.c	FUNCTION_16
0x4000241	              0x53	                                push rbx	       544	8250_exar.c	FUNCTION_16
0x4000242	    0x488baf980000	            mov rbp, qword [rdi + 0x98] 	       544	8250_exar.c	FUNCTION_16
0x4000249	          0x8b4500	                    mov eax, dword [rbp]	       549	8250_exar.c	FUNCTION_16	FOR_1
0x400024c	            0x85c0	                           test eax, eax	       549	8250_exar.c	FUNCTION_16	FOR_1
0x400024e	            0x7419	                            je 0x4000269	       549	8250_exar.c	FUNCTION_16	FOR_1
0x4000250	            0x31db	                            xor ebx, ebx	       549	8250_exar.c	FUNCTION_16	FOR_1
0x4000252	            0x89d8	                            mov eax, ebx	       550	8250_exar.c	FUNCTION_16	FOR_1	IF_1
0x4000254	        0x8b7c8518	    mov edi, dword [rbp + rax*4 + 0x18] 	       550	8250_exar.c	FUNCTION_16	FOR_1	IF_1
0x4000258	            0x85ff	                           test edi, edi	       550	8250_exar.c	FUNCTION_16	FOR_1	IF_1
0x400025a	            0x7805	                            js 0x4000261	       550	8250_exar.c	FUNCTION_16	FOR_1	IF_1
0x400025c	      0xe800000000	                          call 0x4000261	       551	8250_exar.c	FUNCTION_16	FOR_1	IF_1
0x4000261	          0x83c301	                              add ebx, 1	       549	8250_exar.c	FUNCTION_16	FOR_1
0x4000264	          0x395d00	                    cmp dword [rbp], ebx	       549	8250_exar.c	FUNCTION_16	FOR_1
0x4000267	            0x77e9	                            ja 0x4000252	       549	8250_exar.c	FUNCTION_16	FOR_1
0x4000269	            0x31c0	                            xor eax, eax	       554	8250_exar.c	FUNCTION_16
0x400026b	              0x5b	                                 pop rbx	       554	8250_exar.c	FUNCTION_16
0x400026c	              0x5d	                                 pop rbp	       554	8250_exar.c	FUNCTION_16
0x400026d	              0xc3	                                     ret	       554	8250_exar.c	FUNCTION_16
exar_misc_handler	functions,0:WHILE,0:CALL,1:IF,0:FOR,0:ELSE,0:SWITCH,0:DO,0	5
0x4000310	        0x488b7e10	            mov rdi, qword [rsi + 0x10] 	       436	8250_exar.c	FUNCTION_12	CALL_1
0x4000314	        0x4883ef80	             sub rdi, 0xffffffffffffff80	       436	8250_exar.c	FUNCTION_12	CALL_1
0x4000318	      0xe800000000	                          call 0x400031d	       436	8250_exar.c	FUNCTION_12	CALL_1
0x400031d	      0xb801000000	                              mov eax, 1	       439	8250_exar.c	FUNCTION_12
0x4000322	              0xc3	                                     ret	       439	8250_exar.c	FUNCTION_12
exar_pci_remove	functions,0:WHILE,0:CALL,3:IF,1:FOR,1:ELSE,0:SWITCH,0:DO,0	28
0x40002c0	            0x4154	                                push r12	       515	8250_exar.c	FUNCTION_14
0x40002c2	              0x55	                                push rbp	       515	8250_exar.c	FUNCTION_14
0x40002c3	          0x4989fc	                            mov r12, rdi	       515	8250_exar.c	FUNCTION_14
0x40002c6	              0x53	                                push rbx	       515	8250_exar.c	FUNCTION_14
0x40002c7	    0x488baf380100	           mov rbp, qword [rdi + 0x138] 	       515	8250_exar.c	FUNCTION_14
0x40002ce	            0x31db	                            xor ebx, ebx	       515	8250_exar.c	FUNCTION_14
0x40002d0	          0x8b4500	                    mov eax, dword [rbp]	       519	8250_exar.c	FUNCTION_14	FOR_1
0x40002d3	            0x85c0	                           test eax, eax	       519	8250_exar.c	FUNCTION_14	FOR_1
0x40002d5	            0x7413	                            je 0x40002ea	       519	8250_exar.c	FUNCTION_14	FOR_1
0x40002d7	            0x89d8	                            mov eax, ebx	       520	8250_exar.c	FUNCTION_14	CALL_2
0x40002d9	          0x83c301	                              add ebx, 1	       519	8250_exar.c	FUNCTION_14	FOR_1
0x40002dc	        0x8b7c8518	    mov edi, dword [rbp + rax*4 + 0x18] 	       520	8250_exar.c	FUNCTION_14	CALL_2
0x40002e0	      0xe800000000	                          call 0x40002e5	       520	8250_exar.c	FUNCTION_14	CALL_2
0x40002e5	          0x395d00	                    cmp dword [rbp], ebx	       519	8250_exar.c	FUNCTION_14	FOR_1
0x40002e8	            0x77ed	                            ja 0x40002d7	       519	8250_exar.c	FUNCTION_14	FOR_1
0x40002ea	        0x488b4508	                mov rax, qword [rbp + 8]	       522	8250_exar.c	FUNCTION_14	IF_1
0x40002ee	        0x488b4018	            mov rax, qword [rax + 0x18] 	       522	8250_exar.c	FUNCTION_14	IF_1
0x40002f2	          0x4885c0	                           test rax, rax	       522	8250_exar.c	FUNCTION_14	IF_1
0x40002f5	            0x740c	                            je 0x4000303	       522	8250_exar.c	FUNCTION_14	IF_1
0x40002f7	              0x5b	                                 pop rbx	       524	8250_exar.c	FUNCTION_14
0x40002f8	          0x4c89e7	                            mov rdi, r12	       523	8250_exar.c	FUNCTION_14	CALL_3
0x40002fb	              0x5d	                                 pop rbp	       524	8250_exar.c	FUNCTION_14
0x40002fc	            0x415c	                                 pop r12	       524	8250_exar.c	FUNCTION_14
0x40002fe	      0xe900000000	                           jmp 0x4000303	       523	8250_exar.c	FUNCTION_14	CALL_3
0x4000303	              0x5b	                                 pop rbx	       524	8250_exar.c	FUNCTION_14
0x4000304	              0x5d	                                 pop rbp	       524	8250_exar.c	FUNCTION_14
0x4000305	            0x415c	                                 pop r12	       524	8250_exar.c	FUNCTION_14
0x4000307	              0xc3	                                     ret	       524	8250_exar.c	FUNCTION_14
exar_suspend	functions,0:WHILE,0:CALL,4:IF,2:FOR,1:ELSE,0:SWITCH,0:DO,0	28
0x4000270	            0x4154	                                push r12	       527	8250_exar.c	FUNCTION_15
0x4000272	              0x55	                                push rbp	       527	8250_exar.c	FUNCTION_15
0x4000273	    0x4c8da760ffff	                   lea r12, [rdi - 0xa0]	       528	8250_exar.c	FUNCTION_15	CALL_1
0x400027a	              0x53	                                push rbx	       527	8250_exar.c	FUNCTION_15
0x400027b	    0x488baf980000	            mov rbp, qword [rdi + 0x98] 	       527	8250_exar.c	FUNCTION_15
0x4000282	            0x31db	                            xor ebx, ebx	       527	8250_exar.c	FUNCTION_15
0x4000284	          0x8b4500	                    mov eax, dword [rbp]	       532	8250_exar.c	FUNCTION_15	FOR_1
0x4000287	            0x85c0	                           test eax, eax	       532	8250_exar.c	FUNCTION_15	FOR_1
0x4000289	            0x7417	                            je 0x40002a2	       532	8250_exar.c	FUNCTION_15	FOR_1
0x400028b	            0x89d8	                            mov eax, ebx	       533	8250_exar.c	FUNCTION_15	FOR_1	IF_1
0x400028d	        0x8b7c8518	    mov edi, dword [rbp + rax*4 + 0x18] 	       533	8250_exar.c	FUNCTION_15	FOR_1	IF_1
0x4000291	            0x85ff	                           test edi, edi	       533	8250_exar.c	FUNCTION_15	FOR_1	IF_1
0x4000293	            0x7805	                            js 0x400029a	       533	8250_exar.c	FUNCTION_15	FOR_1	IF_1
0x4000295	      0xe800000000	                          call 0x400029a	       534	8250_exar.c	FUNCTION_15	FOR_1	IF_1
0x400029a	          0x83c301	                              add ebx, 1	       532	8250_exar.c	FUNCTION_15	FOR_1
0x400029d	          0x395d00	                    cmp dword [rbp], ebx	       532	8250_exar.c	FUNCTION_15	FOR_1
0x40002a0	            0x77e9	                            ja 0x400028b	       532	8250_exar.c	FUNCTION_15	FOR_1
0x40002a2	        0x488b4508	                mov rax, qword [rbp + 8]	       537	8250_exar.c	FUNCTION_15	IF_2
0x40002a6	        0x488b4018	            mov rax, qword [rax + 0x18] 	       537	8250_exar.c	FUNCTION_15	IF_2
0x40002aa	          0x4885c0	                           test rax, rax	       537	8250_exar.c	FUNCTION_15	IF_2
0x40002ad	            0x7408	                            je 0x40002b7	       537	8250_exar.c	FUNCTION_15	IF_2
0x40002af	          0x4c89e7	                            mov rdi, r12	       538	8250_exar.c	FUNCTION_15	CALL_4
0x40002b2	      0xe800000000	                          call 0x40002b7	       538	8250_exar.c	FUNCTION_15	CALL_4
0x40002b7	              0x5b	                                 pop rbx	       541	8250_exar.c	FUNCTION_15
0x40002b8	            0x31c0	                            xor eax, eax	       541	8250_exar.c	FUNCTION_15
0x40002ba	              0x5d	                                 pop rbp	       541	8250_exar.c	FUNCTION_15
0x40002bb	            0x415c	                                 pop r12	       541	8250_exar.c	FUNCTION_15
0x40002bd	              0xc3	                                     ret	       541	8250_exar.c	FUNCTION_15
pci_connect_tech_setup	functions,0:WHILE,0:CALL,1:IF,0:FOR,0:ELSE,0:SWITCH,0:DO,0	13
0x4000110	          0xc1e109	                              shl ecx, 9	       137	8250_exar.c	FUNCTION_1	CALL_1
0x4000113	    0xc78298000000	      mov dword [rdx + 0x98], 0x1c20000 	       199	8250_exar.c	FUNCTION_3
0x400011d	        0x488b4708	                mov rax, qword [rdi + 8]	       199	8250_exar.c	FUNCTION_3
0x4000121	          0x4989c8	                             mov r8, rcx	       137	8250_exar.c	FUNCTION_1	CALL_1
0x4000124	    0xc682a2000000	                mov byte [rdx + 0xa2], 2	       136	8250_exar.c	FUNCTION_1
0x400012b	    0x4c0386780300	             add r8, qword [rsi + 0x378]	       137	8250_exar.c	FUNCTION_1	CALL_1
0x4000132	    0x4c8982280100	             mov qword [rdx + 0x128], r8	       137	8250_exar.c	FUNCTION_1	CALL_1
0x4000139	        0x48034f10	             add rcx, qword [rdi + 0x10]	       138	8250_exar.c	FUNCTION_1
0x400013d	        0x48894a10	             mov qword [rdx + 0x10], rcx	       138	8250_exar.c	FUNCTION_1
0x4000141	          0x8b4004	                mov eax, dword [rax + 4]	       139	8250_exar.c	FUNCTION_1
0x4000144	    0x8882a1000000	               mov byte [rdx + 0xa1], al	       139	8250_exar.c	FUNCTION_1
0x400014a	            0x31c0	                            xor eax, eax	       201	8250_exar.c	FUNCTION_3
0x400014c	              0xc3	                                     ret	       201	8250_exar.c	FUNCTION_3
pci_xr17c154_setup	functions,0:WHILE,0:CALL,1:IF,0:FOR,0:ELSE,0:SWITCH,0:DO,0	13
0x4000150	          0xc1e109	                              shl ecx, 9	       137	8250_exar.c	FUNCTION_1	CALL_1
0x4000153	    0xc78298000000	       mov dword [rdx + 0x98], 0xe10000 	       210	8250_exar.c	FUNCTION_4
0x400015d	        0x488b4708	                mov rax, qword [rdi + 8]	       210	8250_exar.c	FUNCTION_4
0x4000161	          0x4989c8	                             mov r8, rcx	       137	8250_exar.c	FUNCTION_1	CALL_1
0x4000164	    0xc682a2000000	                mov byte [rdx + 0xa2], 2	       136	8250_exar.c	FUNCTION_1
0x400016b	    0x4c0386780300	             add r8, qword [rsi + 0x378]	       137	8250_exar.c	FUNCTION_1	CALL_1
0x4000172	    0x4c8982280100	             mov qword [rdx + 0x128], r8	       137	8250_exar.c	FUNCTION_1	CALL_1
0x4000179	        0x48034f10	             add rcx, qword [rdi + 0x10]	       138	8250_exar.c	FUNCTION_1
0x400017d	        0x48894a10	             mov qword [rdx + 0x10], rcx	       138	8250_exar.c	FUNCTION_1
0x4000181	          0x8b4004	                mov eax, dword [rax + 4]	       139	8250_exar.c	FUNCTION_1
0x4000184	    0x8882a1000000	               mov byte [rdx + 0xa1], al	       139	8250_exar.c	FUNCTION_1
0x400018a	            0x31c0	                            xor eax, eax	       212	8250_exar.c	FUNCTION_4
0x400018c	              0xc3	                                     ret	       212	8250_exar.c	FUNCTION_4
__xr17v35x_register_gpio	functions,0:WHILE,0:CALL,6:IF,2:FOR,0:ELSE,0:SWITCH,0:DO,0	56
0x40005c0	            0x4156	                                push r14	       240	8250_exar.c	FUNCTION_6
0x40005c2	            0x4155	                                push r13	       240	8250_exar.c	FUNCTION_6
0x40005c4	          0x4989f5	                            mov r13, rsi	       240	8250_exar.c	FUNCTION_6
0x40005c7	            0x4154	                                push r12	       240	8250_exar.c	FUNCTION_6
0x40005c9	              0x55	                                push rbp	       240	8250_exar.c	FUNCTION_6
0x40005ca	          0x4989fc	                            mov r12, rdi	       240	8250_exar.c	FUNCTION_6
0x40005cd	              0x53	                                push rbx	       240	8250_exar.c	FUNCTION_6
0x40005ce	      0xbefeffffff	                     mov esi, 0xfffffffe	       243	8250_exar.c	FUNCTION_6	CALL_1
0x40005d3	    0x48c7c7000000	                              mov rdi, 0	       243	8250_exar.c	FUNCTION_6	CALL_1
0x40005da	      0xe800000000	                          call 0x40005df	       243	8250_exar.c	FUNCTION_6	CALL_1
0x40005df	          0x4885c0	                           test rax, rax	       244	8250_exar.c	FUNCTION_6	IF_1
0x40005e2	     0xf848a000000	                            je 0x4000672	       244	8250_exar.c	FUNCTION_6	IF_1
0x40005e8	          0x4889c3	                            mov rbx, rax	       244	8250_exar.c	FUNCTION_6	IF_1
0x40005eb	    0x498d8424a000	                   lea rax, [r12 + 0xa0]	       247	8250_exar.c	FUNCTION_6
0x40005f3	            0x31ed	                            xor ebp, ebp	       248	8250_exar.c	FUNCTION_6	CALL_3
0x40005f5	        0x48894310	             mov qword [rbx + 0x10], rax	       247	8250_exar.c	FUNCTION_6
0x40005f9	    0x4d8bb424f802	           mov r14, qword [r12 + 0x2f8] 	       248	8250_exar.c	FUNCTION_6	CALL_3
0x4000601	          0x4c89f7	                            mov rdi, r14	       248	8250_exar.c	FUNCTION_6	CALL_3
0x4000604	      0xe800000000	                          call 0x4000609	       248	8250_exar.c	FUNCTION_6	CALL_3
0x4000609	            0x84c0	                             test al, al	       248	8250_exar.c	FUNCTION_6	CALL_3
0x400060b	            0x7533	                           jne 0x4000640	       248	8250_exar.c	FUNCTION_6	CALL_3
0x400060d	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       248	8250_exar.c	FUNCTION_6	CALL_3
0x4000611	          0x4889ee	                            mov rsi, rbp	       248	8250_exar.c	FUNCTION_6	CALL_3
0x4000614	      0xe800000000	                          call 0x4000619	       248	8250_exar.c	FUNCTION_6	CALL_3
0x4000619	          0x4c89ee	                            mov rsi, r13	       250	8250_exar.c	FUNCTION_6	IF_2	CALL_4
0x400061c	          0x4889df	                            mov rdi, rbx	       250	8250_exar.c	FUNCTION_6	IF_2	CALL_4
0x400061f	      0xe800000000	                          call 0x4000624	       250	8250_exar.c	FUNCTION_6	IF_2	CALL_4
0x4000624	            0x85c0	                           test eax, eax	       250	8250_exar.c	FUNCTION_6	IF_2	CALL_4
0x4000626	            0x783e	                            js 0x4000666	       250	8250_exar.c	FUNCTION_6	IF_2	CALL_4
0x4000628	          0x4889df	                            mov rdi, rbx	       251	8250_exar.c	FUNCTION_6	IF_2	CALL_5
0x400062b	      0xe800000000	                          call 0x4000630	       251	8250_exar.c	FUNCTION_6	IF_2	CALL_5
0x4000630	            0x85c0	                           test eax, eax	       250	8250_exar.c	FUNCTION_6	IF_2	CALL_4
0x4000632	            0x7832	                            js 0x4000666	       250	8250_exar.c	FUNCTION_6	IF_2	CALL_4
0x4000634	          0x4889d8	                            mov rax, rbx	       250	8250_exar.c	FUNCTION_6	IF_2	CALL_4
0x4000637	              0x5b	                                 pop rbx	       257	8250_exar.c	FUNCTION_6
0x4000638	              0x5d	                                 pop rbp	       257	8250_exar.c	FUNCTION_6
0x4000639	            0x415c	                                 pop r12	       257	8250_exar.c	FUNCTION_6
0x400063b	            0x415d	                                 pop r13	       257	8250_exar.c	FUNCTION_6
0x400063d	            0x415e	                                 pop r14	       257	8250_exar.c	FUNCTION_6
0x400063f	              0xc3	                                     ret	       257	8250_exar.c	FUNCTION_6
0x4000640	        0x4983fe10	                           cmp r14, 0x10	       248	8250_exar.c	FUNCTION_6	CALL_3
0x4000644	            0x74c7	                            je 0x400060d	       248	8250_exar.c	FUNCTION_6	CALL_3
0x4000646	    0x4d8ba424f802	           mov r12, qword [r12 + 0x2f8] 	       248	8250_exar.c	FUNCTION_6	CALL_3
0x400064e	          0x4c89e7	                            mov rdi, r12	       248	8250_exar.c	FUNCTION_6	CALL_3
0x4000651	        0x4983ec10	                           sub r12, 0x10	       248	8250_exar.c	FUNCTION_6	CALL_3
0x4000655	      0xe800000000	                          call 0x400065a	       248	8250_exar.c	FUNCTION_6	CALL_3
0x400065a	            0x84c0	                             test al, al	       248	8250_exar.c	FUNCTION_6	CALL_3
0x400065c	        0x490f45ec	                         cmovne rbp, r12	       248	8250_exar.c	FUNCTION_6	CALL_3
0x4000660	        0x4883c510	                           add rbp, 0x10	       449	acpi_bus.h	FUNCTION_22
0x4000664	            0xeba7	                           jmp 0x400060d	       449	acpi_bus.h	FUNCTION_22
0x4000666	          0x4889df	                            mov rdi, rbx	       252	8250_exar.c	FUNCTION_6	IF_2	CALL_6
0x4000669	      0xe800000000	                          call 0x400066e	       252	8250_exar.c	FUNCTION_6	IF_2	CALL_6
0x400066e	            0x31c0	                            xor eax, eax	       253	8250_exar.c	FUNCTION_6	IF_2
0x4000670	            0xebc5	                           jmp 0x4000637	       253	8250_exar.c	FUNCTION_6	IF_2
0x4000672	            0x31c0	                            xor eax, eax	       245	8250_exar.c	FUNCTION_6	IF_1
0x4000674	            0xebc1	                           jmp 0x4000637	       245	8250_exar.c	FUNCTION_6	IF_1
pci_xr17v35x_exit	functions,0:WHILE,0:CALL,3:IF,0:FOR,0:ELSE,0:SWITCH,0:DO,0	10
0x4000590	              0x53	                                push rbx	       413	8250_exar.c	FUNCTION_11
0x4000591	    0x488b87380100	           mov rax, qword [rdi + 0x138] 	       415	8250_exar.c	FUNCTION_11	CALL_2
0x4000598	          0x8b7818	            mov edi, dword [rax + 0x18] 	       415	8250_exar.c	FUNCTION_11	CALL_2
0x400059b	      0xe800000000	                          call 0x40005a0	       415	8250_exar.c	FUNCTION_11	CALL_2
0x40005a0	    0x488bb8800100	           mov rdi, qword [rax + 0x180] 	       418	8250_exar.c	FUNCTION_11	CALL_3
0x40005a7	          0x4889c3	                            mov rbx, rax	       415	8250_exar.c	FUNCTION_11	CALL_2
0x40005aa	      0xe800000000	                          call 0x40005af	       418	8250_exar.c	FUNCTION_11	CALL_3
0x40005af	    0x48c783800100	              mov qword [rbx + 0x180], 0	       419	8250_exar.c	FUNCTION_11
0x40005ba	              0x5b	                                 pop rbx	       420	8250_exar.c	FUNCTION_11
0x40005bb	              0xc3	                                     ret	       420	8250_exar.c	FUNCTION_11
