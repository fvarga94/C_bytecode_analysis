proc_fd_instantiate	ELSE,0:DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:CALL,6:IF,1	38
0x4000110	            0x4155	                                push r13	       184	fd.c	FUNCTION_7
0x4000112	            0x4154	                                push r12	       184	fd.c	FUNCTION_7
0x4000114	          0x4989d5	                            mov r13, rdx	       184	fd.c	FUNCTION_7
0x4000117	              0x55	                                push rbp	       184	fd.c	FUNCTION_7
0x4000118	          0x4889fd	                            mov rbp, rdi	       184	fd.c	FUNCTION_7
0x400011b	              0x53	                                push rbx	       184	fd.c	FUNCTION_7
0x400011c	        0x488b7f68	            mov rdi, qword [rdi + 0x68] 	       189	fd.c	FUNCTION_7	CALL_1
0x4000120	      0xba00a00000	                         mov edx, 0xa000	       189	fd.c	FUNCTION_7	CALL_1
0x4000125	          0x4989f4	                            mov r12, rsi	       184	fd.c	FUNCTION_7
0x4000128	      0xe800000000	                          call 0x400012d	       189	fd.c	FUNCTION_7	CALL_1
0x400012d	          0x4885c0	                           test rax, rax	       190	fd.c	FUNCTION_7	IF_1
0x4000130	            0x7451	                            je 0x4000183	       190	fd.c	FUNCTION_7	IF_1
0x4000132	          0x4889c3	                            mov rbx, rax	       190	fd.c	FUNCTION_7	IF_1
0x4000135	        0x418b4504	                mov eax, dword [r13 + 4]	       194	fd.c	FUNCTION_7
0x4000139	          0x4c89e7	                            mov rdi, r12	       200	fd.c	FUNCTION_7	CALL_4
0x400013c	    0x48c743200000	               mov qword [rbx + 0x20], 0	       196	fd.c	FUNCTION_7
0x4000144	    0x48c743504000	           mov qword [rbx + 0x50], 0x40 	       197	fd.c	FUNCTION_7
0x400014c	          0x4889de	                            mov rsi, rbx	       200	fd.c	FUNCTION_7	CALL_4
0x400014f	    0x48c743c80000	               mov qword [rbx - 0x38], 0	       199	fd.c	FUNCTION_7
0x4000157	          0x8943c0	             mov dword [rbx - 0x40], eax	       194	fd.c	FUNCTION_7
0x400015a	        0x418b5500	                    mov edx, dword [r13]	       200	fd.c	FUNCTION_7	CALL_4
0x400015e	      0xe84dffffff	            call sym.tid_fd_update_inode	       200	fd.c	FUNCTION_7	CALL_4
0x4000163	          0x4889ef	                            mov rdi, rbp	       202	fd.c	FUNCTION_7	CALL_5
0x4000166	    0x48c7c6000000	                              mov rsi, 0	       202	fd.c	FUNCTION_7	CALL_5
0x400016d	      0xe800000000	                          call 0x4000172	       202	fd.c	FUNCTION_7	CALL_5
0x4000172	          0x4889ee	                            mov rsi, rbp	       203	fd.c	FUNCTION_7	CALL_6
0x4000175	          0x4889df	                            mov rdi, rbx	       203	fd.c	FUNCTION_7	CALL_6
0x4000178	              0x5b	                                 pop rbx	       204	fd.c	FUNCTION_7
0x4000179	              0x5d	                                 pop rbp	       204	fd.c	FUNCTION_7
0x400017a	            0x415c	                                 pop r12	       204	fd.c	FUNCTION_7
0x400017c	            0x415d	                                 pop r13	       204	fd.c	FUNCTION_7
0x400017e	      0xe900000000	                           jmp 0x4000183	       203	fd.c	FUNCTION_7	CALL_6
0x4000183	              0x5b	                                 pop rbx	       204	fd.c	FUNCTION_7
0x4000184	    0x48c7c0feffff	             mov rax, 0xfffffffffffffffe	       204	fd.c	FUNCTION_7
0x400018b	              0x5d	                                 pop rbp	       204	fd.c	FUNCTION_7
0x400018c	            0x415c	                                 pop r12	       204	fd.c	FUNCTION_7
0x400018e	            0x415d	                                 pop r13	       204	fd.c	FUNCTION_7
0x4000190	              0xc3	                                     ret	       204	fd.c	FUNCTION_7
proc_readfd	ELSE,0:DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:CALL,1:IF,0	2
0x4000650	    0x48c7c2000000	                              mov rdx, 0	       278	fd.c	FUNCTION_10	CALL_1
0x4000657	      0xe904feffff	              jmp sym.proc_readfd_common	       278	fd.c	FUNCTION_10	CALL_1
proc_fdinfo_instantiate	ELSE,0:DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:CALL,6:IF,1	36
0x40001a0	            0x4155	                                push r13	       323	fd.c	FUNCTION_13
0x40001a2	            0x4154	                                push r12	       323	fd.c	FUNCTION_13
0x40001a4	          0x4989d5	                            mov r13, rdx	       323	fd.c	FUNCTION_13
0x40001a7	              0x55	                                push rbp	       323	fd.c	FUNCTION_13
0x40001a8	          0x4889fd	                            mov rbp, rdi	       323	fd.c	FUNCTION_13
0x40001ab	              0x53	                                push rbx	       323	fd.c	FUNCTION_13
0x40001ac	        0x488b7f68	            mov rdi, qword [rdi + 0x68] 	       328	fd.c	FUNCTION_13	CALL_1
0x40001b0	      0xba00810000	                         mov edx, 0x8100	       328	fd.c	FUNCTION_13	CALL_1
0x40001b5	          0x4989f4	                            mov r12, rsi	       323	fd.c	FUNCTION_13
0x40001b8	      0xe800000000	                          call 0x40001bd	       328	fd.c	FUNCTION_13	CALL_1
0x40001bd	          0x4885c0	                           test rax, rax	       329	fd.c	FUNCTION_13	IF_1
0x40001c0	            0x7442	                            je 0x4000204	       329	fd.c	FUNCTION_13	IF_1
0x40001c2	          0x4889c3	                            mov rbx, rax	       329	fd.c	FUNCTION_13	IF_1
0x40001c5	        0x418b4504	                mov eax, dword [r13 + 4]	       333	fd.c	FUNCTION_13
0x40001c9	          0x4c89e7	                            mov rdi, r12	       336	fd.c	FUNCTION_13	CALL_4
0x40001cc	          0x4889de	                            mov rsi, rbx	       336	fd.c	FUNCTION_13	CALL_4
0x40001cf	    0x48c783580100	              mov qword [rbx + 0x158], 0	       335	fd.c	FUNCTION_13
0x40001da	            0x31d2	                            xor edx, edx	       336	fd.c	FUNCTION_13	CALL_4
0x40001dc	          0x8943c0	             mov dword [rbx - 0x40], eax	       333	fd.c	FUNCTION_13
0x40001df	      0xe8ccfeffff	            call sym.tid_fd_update_inode	       336	fd.c	FUNCTION_13	CALL_4
0x40001e4	          0x4889ef	                            mov rdi, rbp	       338	fd.c	FUNCTION_13	CALL_5
0x40001e7	    0x48c7c6000000	                              mov rsi, 0	       338	fd.c	FUNCTION_13	CALL_5
0x40001ee	      0xe800000000	                          call 0x40001f3	       338	fd.c	FUNCTION_13	CALL_5
0x40001f3	          0x4889ee	                            mov rsi, rbp	       339	fd.c	FUNCTION_13	CALL_6
0x40001f6	          0x4889df	                            mov rdi, rbx	       339	fd.c	FUNCTION_13	CALL_6
0x40001f9	              0x5b	                                 pop rbx	       340	fd.c	FUNCTION_13
0x40001fa	              0x5d	                                 pop rbp	       340	fd.c	FUNCTION_13
0x40001fb	            0x415c	                                 pop r12	       340	fd.c	FUNCTION_13
0x40001fd	            0x415d	                                 pop r13	       340	fd.c	FUNCTION_13
0x40001ff	      0xe900000000	                           jmp 0x4000204	       339	fd.c	FUNCTION_13	CALL_6
0x4000204	              0x5b	                                 pop rbx	       340	fd.c	FUNCTION_13
0x4000205	    0x48c7c0feffff	             mov rax, 0xfffffffffffffffe	       340	fd.c	FUNCTION_13
0x400020c	              0x5d	                                 pop rbp	       340	fd.c	FUNCTION_13
0x400020d	            0x415c	                                 pop r12	       340	fd.c	FUNCTION_13
0x400020f	            0x415d	                                 pop r13	       340	fd.c	FUNCTION_13
0x4000211	              0xc3	                                     ret	       340	fd.c	FUNCTION_13
seq_fdinfo_open	ELSE,0:DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:CALL,1:IF,0	4
0x4000270	          0x4889fa	                            mov rdx, rdi	        73	fd.c	FUNCTION_2
0x4000273	          0x4889f7	                            mov rdi, rsi	        73	fd.c	FUNCTION_2
0x4000276	    0x48c7c6000000	                              mov rsi, 0	        74	fd.c	FUNCTION_2	CALL_1
0x400027d	      0xe900000000	                           jmp 0x4000282	        74	fd.c	FUNCTION_2	CALL_1
proc_lookupfd	ELSE,0:DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:CALL,1:IF,0	2
0x4000350	    0x48c7c2000000	                              mov rdx, 0	       290	fd.c	FUNCTION_11	CALL_1
0x4000357	      0xe934ffffff	            jmp sym.proc_lookupfd_common	       290	fd.c	FUNCTION_11	CALL_1
tid_fd_update_inode	ELSE,0:DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:CALL,3:IF,3	31
0x40000b0	            0x4154	                                push r12	       103	fd.c	FUNCTION_4
0x40000b2	        0x488d4e08	                      lea rcx, [rsi + 8]	       104	fd.c	FUNCTION_4	CALL_1
0x40000b6	              0x55	                                push rbp	       103	fd.c	FUNCTION_4
0x40000b7	          0x4189d4	                           mov r12d, edx	       103	fd.c	FUNCTION_4
0x40000ba	              0x53	                                push rbx	       103	fd.c	FUNCTION_4
0x40000bb	        0x488d5604	                      lea rdx, [rsi + 4]	       104	fd.c	FUNCTION_4	CALL_1
0x40000bf	          0x4889f3	                            mov rbx, rsi	       103	fd.c	FUNCTION_4
0x40000c2	            0x31f6	                            xor esi, esi	       104	fd.c	FUNCTION_4	CALL_1
0x40000c4	          0x4889fd	                            mov rbp, rdi	       103	fd.c	FUNCTION_4
0x40000c7	      0xe800000000	                          call 0x40000cc	       104	fd.c	FUNCTION_4	CALL_1
0x40000cc	           0xfb703	                   movzx eax, word [rbx]	       106	fd.c	FUNCTION_4	IF_1	CALL_2
0x40000cf	        0x662500f0	                          and ax, 0xf000	       106	fd.c	FUNCTION_4	IF_1	CALL_2
0x40000d3	        0x663d00a0	                          cmp ax, 0xa000	       106	fd.c	FUNCTION_4	IF_1	CALL_2
0x40000d7	            0x7524	                           jne 0x40000fd	       106	fd.c	FUNCTION_4	IF_1	CALL_2
0x40000d9	          0x4489e0	                           mov eax, r12d	       108	fd.c	FUNCTION_4	IF_1	IF_2
0x40000dc	          0x83e001	                              and eax, 1	       108	fd.c	FUNCTION_4	IF_1	IF_2
0x40000df	          0x83f801	                              cmp eax, 1	       109	fd.c	FUNCTION_4	IF_1	IF_2
0x40000e2	            0x19c0	                            sbb eax, eax	       109	fd.c	FUNCTION_4	IF_1	IF_2
0x40000e4	      0x25c0feffff	                     and eax, 0xfffffec0	       109	fd.c	FUNCTION_4	IF_1	IF_2
0x40000e9	       0x540a10000	                         add eax, 0xa140	       109	fd.c	FUNCTION_4	IF_1	IF_2
0x40000ee	            0x89c2	                            mov edx, eax	       111	fd.c	FUNCTION_4	IF_1	IF_3
0x40000f0	          0x80cac0	                             or dl, 0xc0	       111	fd.c	FUNCTION_4	IF_1	IF_3
0x40000f3	        0x4183e402	                             and r12d, 2	       111	fd.c	FUNCTION_4	IF_1	IF_3
0x40000f7	           0xf45c2	                         cmovne eax, edx	       111	fd.c	FUNCTION_4	IF_1	IF_3
0x40000fa	          0x668903	                      mov word [rbx], ax	       112	fd.c	FUNCTION_4	IF_1
0x40000fd	          0x4889de	                            mov rsi, rbx	       114	fd.c	FUNCTION_4	CALL_3
0x4000100	          0x4889ef	                            mov rdi, rbp	       114	fd.c	FUNCTION_4	CALL_3
0x4000103	              0x5b	                                 pop rbx	       115	fd.c	FUNCTION_4
0x4000104	              0x5d	                                 pop rbp	       115	fd.c	FUNCTION_4
0x4000105	            0x415c	                                 pop r12	       115	fd.c	FUNCTION_4
0x4000107	      0xe900000000	                           jmp 0x400010c	       114	fd.c	FUNCTION_4	CALL_3
proc_lookupfdinfo	ELSE,0:DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:CALL,1:IF,0	2
0x4000360	    0x48c7c2000000	                              mov rdx, 0	       345	fd.c	FUNCTION_14	CALL_1
0x4000367	      0xe924ffffff	            jmp sym.proc_lookupfd_common	       345	fd.c	FUNCTION_14	CALL_1
proc_readfdinfo	ELSE,0:DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:CALL,1:IF,0	2
0x4000660	    0x48c7c2000000	                              mov rdx, 0	       350	fd.c	FUNCTION_15	CALL_1
0x4000667	      0xe9f4fdffff	              jmp sym.proc_readfd_common	       350	fd.c	FUNCTION_15	CALL_1
