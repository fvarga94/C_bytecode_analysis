nfs_mount	ELSE,1:DO,0:CALL,12:functions,0:WHILE,0:IF,7:FOR,0:SWITCH,0	92
0x4000380	            0x4154	                                push r12	       147	mount_clnt.c	FUNCTION_1
0x4000382	              0x55	                                push rbp	       147	mount_clnt.c	FUNCTION_1
0x4000383	      0xb90e000000	                            mov ecx, 0xe	       157	mount_clnt.c	FUNCTION_1
0x4000388	              0x53	                                push rbx	       147	mount_clnt.c	FUNCTION_1
0x4000389	          0x4889fb	                            mov rbx, rdi	       147	mount_clnt.c	FUNCTION_1
0x400038c	    0x4881ecb80000	                           sub rsp, 0xb8	       147	mount_clnt.c	FUNCTION_1
0x4000393	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	       154	mount_clnt.c	FUNCTION_1
0x4000397	    0x65488b042528	                mov rax, qword gs:[0x28]	       147	mount_clnt.c	FUNCTION_1
0x40003a0	    0x48898424b000	             mov qword [rsp + 0xb0], rax	       147	mount_clnt.c	FUNCTION_1
0x40003a8	            0x31c0	                            xor eax, eax	       147	mount_clnt.c	FUNCTION_1
0x40003aa	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       148	mount_clnt.c	FUNCTION_1
0x40003ae	      0x488d6c2440	                   lea rbp, [rsp + 0x40]	       157	mount_clnt.c	FUNCTION_1
0x40003b3	    0x48c704240000	                      mov qword [rsp], 0	       148	mount_clnt.c	FUNCTION_1
0x40003bb	    0x48c744242000	               mov qword [rsp + 0x20], 0	       153	mount_clnt.c	FUNCTION_1
0x40003c4	    0x48c744243800	               mov qword [rsp + 0x38], 0	       153	mount_clnt.c	FUNCTION_1
0x40003cd	      0x4889542428	             mov qword [rsp + 0x28], rdx	       153	mount_clnt.c	FUNCTION_1
0x40003d2	      0x4889642430	             mov qword [rsp + 0x30], rsp	       153	mount_clnt.c	FUNCTION_1
0x40003d7	      0x4889442408	                mov qword [rsp + 8], rax	       148	mount_clnt.c	FUNCTION_1
0x40003dc	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       148	mount_clnt.c	FUNCTION_1
0x40003e0	      0x4889442410	             mov qword [rsp + 0x10], rax	       148	mount_clnt.c	FUNCTION_1
0x40003e5	        0x488b4740	            mov rax, qword [rdi + 0x40] 	       148	mount_clnt.c	FUNCTION_1
0x40003e9	          0x4889ef	                            mov rdi, rbp	       157	mount_clnt.c	FUNCTION_1
0x40003ec	      0x4889442418	             mov qword [rsp + 0x18], rax	       148	mount_clnt.c	FUNCTION_1
0x40003f1	            0x31c0	                            xor eax, eax	       157	mount_clnt.c	FUNCTION_1
0x40003f3	          0xf348ab	              rep stosq qword [rdi], rax	       157	mount_clnt.c	FUNCTION_1
0x40003f6	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       157	mount_clnt.c	FUNCTION_1
0x40003fa	          0x4889d7	                            mov rdi, rdx	       174	mount_clnt.c	FUNCTION_1	IF_1	CALL_2
0x40003fd	    0x48c784248000	               mov qword [rsp + 0x80], 0	       157	mount_clnt.c	FUNCTION_1
0x4000409	    0xc78424900000	               mov dword [rsp + 0x90], 1	       157	mount_clnt.c	FUNCTION_1
0x4000414	      0x4889442440	             mov qword [rsp + 0x40], rax	       157	mount_clnt.c	FUNCTION_1
0x4000419	         0xfb74324	           movzx eax, word [rbx + 0x24] 	       157	mount_clnt.c	FUNCTION_1
0x400041d	        0x89442448	             mov dword [rsp + 0x48], eax	       157	mount_clnt.c	FUNCTION_1
0x4000421	          0x488b03	                    mov rax, qword [rbx]	       157	mount_clnt.c	FUNCTION_1
0x4000424	      0x4889442450	             mov qword [rsp + 0x50], rax	       157	mount_clnt.c	FUNCTION_1
0x4000429	        0x488b4308	                mov rax, qword [rbx + 8]	       157	mount_clnt.c	FUNCTION_1
0x400042d	      0x4889442458	             mov qword [rsp + 0x58], rax	       157	mount_clnt.c	FUNCTION_1
0x4000432	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       157	mount_clnt.c	FUNCTION_1
0x4000436	      0x4889442470	             mov qword [rsp + 0x70], rax	       157	mount_clnt.c	FUNCTION_1
0x400043b	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       157	mount_clnt.c	FUNCTION_1
0x400043e	    0x8984248c0000	             mov dword [rsp + 0x8c], eax	       157	mount_clnt.c	FUNCTION_1
0x4000445	      0xe800000000	                          call 0x400044a	       174	mount_clnt.c	FUNCTION_1	IF_1	CALL_2
0x400044a	    0x483d00040000	                          cmp rax, 0x400	       174	mount_clnt.c	FUNCTION_1	IF_1	CALL_2
0x4000450	     0xf87af000000	                            ja 0x4000505	       174	mount_clnt.c	FUNCTION_1	IF_1	CALL_2
0x4000456	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	       177	mount_clnt.c	FUNCTION_1	IF_2
0x4000459	            0x85c9	                           test ecx, ecx	       177	mount_clnt.c	FUNCTION_1	IF_2
0x400045b	     0xf8582000000	                           jne 0x40004e3	       177	mount_clnt.c	FUNCTION_1	IF_2
0x4000461	          0x4889ef	                            mov rdi, rbp	       180	mount_clnt.c	FUNCTION_1	CALL_3
0x4000464	      0xe800000000	                          call 0x4000469	       180	mount_clnt.c	FUNCTION_1	CALL_3
0x4000469	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       181	mount_clnt.c	FUNCTION_1	IF_3	CALL_4
0x400046f	          0x4889c5	                            mov rbp, rax	       180	mount_clnt.c	FUNCTION_1	CALL_3
0x4000472	            0x7750	                            ja 0x40004c4	       181	mount_clnt.c	FUNCTION_1	IF_3	CALL_4
0x4000474	        0x488b4038	            mov rax, qword [rax + 0x38] 	       185	mount_clnt.c	FUNCTION_1	IF_4
0x4000478	      0x488d742420	                   lea rsi, [rsp + 0x20]	       189	mount_clnt.c	FUNCTION_1	CALL_5
0x400047d	      0xba00120000	                         mov edx, 0x1200	       189	mount_clnt.c	FUNCTION_1	CALL_5
0x4000482	          0x4889ef	                            mov rdi, rbp	       189	mount_clnt.c	FUNCTION_1	CALL_5
0x4000485	        0x4883c030	                           add rax, 0x30	       187	mount_clnt.c	FUNCTION_1	ELSE_1
0x4000489	      0x4889442420	             mov qword [rsp + 0x20], rax	       187	mount_clnt.c	FUNCTION_1	ELSE_1
0x400048e	      0xe800000000	                          call 0x4000493	       189	mount_clnt.c	FUNCTION_1	CALL_5
0x4000493	          0x4889ef	                            mov rdi, rbp	       190	mount_clnt.c	FUNCTION_1	CALL_6
0x4000496	          0x4189c4	                           mov r12d, eax	       189	mount_clnt.c	FUNCTION_1	CALL_5
0x4000499	      0xe800000000	                          call 0x400049e	       190	mount_clnt.c	FUNCTION_1	CALL_6
0x400049e	          0x4585e4	                         test r12d, r12d	       192	mount_clnt.c	FUNCTION_1	IF_5
0x40004a1	            0x7851	                            js 0x40004f4	       192	mount_clnt.c	FUNCTION_1	IF_5
0x40004a3	          0x8b0424	                    mov eax, dword [rsp]	       194	mount_clnt.c	FUNCTION_1	IF_6
0x40004a6	            0x85c0	                           test eax, eax	       194	mount_clnt.c	FUNCTION_1	IF_6
0x40004a8	            0x751a	                           jne 0x40004c4	       194	mount_clnt.c	FUNCTION_1	IF_6
0x40004aa	        0x837b2003	               cmp dword [rbx + 0x20], 3	       204	mount_clnt.c	FUNCTION_1	IF_7
0x40004ae	            0x7449	                            je 0x40004f9	       204	mount_clnt.c	FUNCTION_1	IF_7
0x40004b0	        0x488b5340	            mov rdx, qword [rbx + 0x40] 	       206	mount_clnt.c	FUNCTION_1	IF_7
0x40004b4	    0xc70200000000	                      mov dword [rdx], 0	       206	mount_clnt.c	FUNCTION_1	IF_7
0x40004ba	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       207	mount_clnt.c	FUNCTION_1	IF_7
0x40004be	    0xc70201000000	                      mov dword [rdx], 1	       207	mount_clnt.c	FUNCTION_1	IF_7
0x40004c4	    0x488b8c24b000	            mov rcx, qword [rsp + 0xb0] 	       225	mount_clnt.c	FUNCTION_1
0x40004cc	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       225	mount_clnt.c	FUNCTION_1
0x40004d5	            0x7535	                           jne 0x400050c	       225	mount_clnt.c	FUNCTION_1
0x40004d7	    0x4881c4b80000	                           add rsp, 0xb8	       225	mount_clnt.c	FUNCTION_1
0x40004de	              0x5b	                                 pop rbx	       225	mount_clnt.c	FUNCTION_1
0x40004df	              0x5d	                                 pop rbp	       225	mount_clnt.c	FUNCTION_1
0x40004e0	            0x415c	                                 pop r12	       225	mount_clnt.c	FUNCTION_1
0x40004e2	              0xc3	                                     ret	       225	mount_clnt.c	FUNCTION_1
0x40004e3	    0x48c784249800	               mov qword [rsp + 0x98], 8	       178	mount_clnt.c	FUNCTION_1	IF_2
0x40004ef	      0xe96dffffff	                           jmp 0x4000461	       178	mount_clnt.c	FUNCTION_1	IF_2
0x40004f4	          0x4489e0	                           mov eax, r12d	       178	mount_clnt.c	FUNCTION_1	IF_2
0x40004f7	            0xebcb	                           jmp 0x40004c4	       178	mount_clnt.c	FUNCTION_1	IF_2
0x40004f9	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       204	mount_clnt.c	FUNCTION_1	IF_7
0x40004fd	            0x8b12	                    mov edx, dword [rdx]	       204	mount_clnt.c	FUNCTION_1	IF_7
0x40004ff	            0x85d2	                           test edx, edx	       204	mount_clnt.c	FUNCTION_1	IF_7
0x4000501	            0x75c1	                           jne 0x40004c4	       204	mount_clnt.c	FUNCTION_1	IF_7
0x4000503	            0xebab	                           jmp 0x40004b0	       204	mount_clnt.c	FUNCTION_1	IF_7
0x4000505	      0xb8dcffffff	                     mov eax, 0xffffffdc	       175	mount_clnt.c	FUNCTION_1	IF_1
0x400050a	            0xebb8	                           jmp 0x40004c4	       175	mount_clnt.c	FUNCTION_1	IF_1
0x400050c	      0xe800000000	                          call 0x4000511	       225	mount_clnt.c	FUNCTION_1
mnt_xdr_enc_dirpath	ELSE,0:DO,0:CALL,1:functions,0:WHILE,0:IF,0:FOR,0:SWITCH,0	18
0x4000040	            0x4154	                                push r12	       309	mount_clnt.c	FUNCTION_4
0x4000042	              0x55	                                push rbp	       309	mount_clnt.c	FUNCTION_4
0x4000043	          0x4889d7	                            mov rdi, rdx	       300	mount_clnt.c	FUNCTION_3	CALL_1
0x4000046	              0x53	                                push rbx	       309	mount_clnt.c	FUNCTION_4
0x4000047	          0x4989f4	                            mov r12, rsi	       309	mount_clnt.c	FUNCTION_4
0x400004a	          0x4889d3	                            mov rbx, rdx	       309	mount_clnt.c	FUNCTION_4
0x400004d	      0xe800000000	                          call 0x4000052	       300	mount_clnt.c	FUNCTION_3	CALL_1
0x4000052	          0x8d7004	                      lea esi, [rax + 4]	       303	mount_clnt.c	FUNCTION_3	CALL_2
0x4000055	          0x4889c5	                            mov rbp, rax	       300	mount_clnt.c	FUNCTION_3	CALL_1
0x4000058	          0x4c89e7	                            mov rdi, r12	       303	mount_clnt.c	FUNCTION_3	CALL_2
0x400005b	      0xe800000000	                          call 0x4000060	       303	mount_clnt.c	FUNCTION_3	CALL_2
0x4000060	            0x89ea	                            mov edx, ebp	       304	mount_clnt.c	FUNCTION_3	CALL_3
0x4000062	          0x4889de	                            mov rsi, rbx	       304	mount_clnt.c	FUNCTION_3	CALL_3
0x4000065	          0x4889c7	                            mov rdi, rax	       304	mount_clnt.c	FUNCTION_3	CALL_3
0x4000068	              0x5b	                                 pop rbx	       311	mount_clnt.c	FUNCTION_4
0x4000069	              0x5d	                                 pop rbp	       311	mount_clnt.c	FUNCTION_4
0x400006a	            0x415c	                                 pop r12	       311	mount_clnt.c	FUNCTION_4
0x400006c	      0xe900000000	                           jmp 0x4000071	       304	mount_clnt.c	FUNCTION_3	CALL_3
nfs_umount	ELSE,1:DO,0:CALL,10:functions,0:WHILE,0:IF,5:FOR,0:SWITCH,0	60
0x4000520	              0x55	                                push rbp	       235	mount_clnt.c	FUNCTION_2
0x4000521	              0x53	                                push rbx	       235	mount_clnt.c	FUNCTION_2
0x4000522	      0xb90e000000	                            mov ecx, 0xe	       241	mount_clnt.c	FUNCTION_2
0x4000527	          0x4889fb	                            mov rbx, rdi	       235	mount_clnt.c	FUNCTION_2
0x400052a	    0x4881ec980000	                           sub rsp, 0x98	       235	mount_clnt.c	FUNCTION_2
0x4000531	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	       241	mount_clnt.c	FUNCTION_2
0x4000536	    0x48c704240000	                      mov qword [rsp], 0	       253	mount_clnt.c	FUNCTION_2
0x400053e	    0x48c744241000	               mov qword [rsp + 0x10], 0	       253	mount_clnt.c	FUNCTION_2
0x4000547	    0x65488b042528	                mov rax, qword gs:[0x28]	       235	mount_clnt.c	FUNCTION_2
0x4000550	    0x488984249000	             mov qword [rsp + 0x90], rax	       235	mount_clnt.c	FUNCTION_2
0x4000558	            0x31c0	                            xor eax, eax	       235	mount_clnt.c	FUNCTION_2
0x400055a	          0x4889ef	                            mov rdi, rbp	       241	mount_clnt.c	FUNCTION_2
0x400055d	    0x48c744241800	               mov qword [rsp + 0x18], 0	       253	mount_clnt.c	FUNCTION_2
0x4000566	          0xf348ab	              rep stosq qword [rdi], rax	       241	mount_clnt.c	FUNCTION_2
0x4000569	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       241	mount_clnt.c	FUNCTION_2
0x400056d	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       254	mount_clnt.c	FUNCTION_2
0x4000571	    0xc74424281100	           mov dword [rsp + 0x28], 0x11 	       241	mount_clnt.c	FUNCTION_2
0x4000579	    0x48c744244800	               mov qword [rsp + 0x48], 0	       241	mount_clnt.c	FUNCTION_2
0x4000582	    0x48c744246000	               mov qword [rsp + 0x60], 0	       241	mount_clnt.c	FUNCTION_2
0x400058b	    0xc74424700100	               mov dword [rsp + 0x70], 1	       241	mount_clnt.c	FUNCTION_2
0x4000593	      0x4889442420	             mov qword [rsp + 0x20], rax	       241	mount_clnt.c	FUNCTION_2
0x4000598	          0x488b03	                    mov rax, qword [rbx]	       241	mount_clnt.c	FUNCTION_2
0x400059b	    0x48c744247810	           mov qword [rsp + 0x78], 0x10 	       241	mount_clnt.c	FUNCTION_2
0x40005a4	      0x48897c2408	                mov qword [rsp + 8], rdi	       253	mount_clnt.c	FUNCTION_2
0x40005a9	      0x4889442430	             mov qword [rsp + 0x30], rax	       241	mount_clnt.c	FUNCTION_2
0x40005ae	        0x488b4308	                mov rax, qword [rbx + 8]	       241	mount_clnt.c	FUNCTION_2
0x40005b2	      0x4889442438	             mov qword [rsp + 0x38], rax	       241	mount_clnt.c	FUNCTION_2
0x40005b7	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       241	mount_clnt.c	FUNCTION_2
0x40005bb	      0x4889442450	             mov qword [rsp + 0x50], rax	       241	mount_clnt.c	FUNCTION_2
0x40005c0	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       241	mount_clnt.c	FUNCTION_2
0x40005c3	        0x8944246c	             mov dword [rsp + 0x6c], eax	       241	mount_clnt.c	FUNCTION_2
0x40005c7	      0xe800000000	                          call 0x40005cc	       259	mount_clnt.c	FUNCTION_2	IF_1	CALL_1
0x40005cc	    0x483d00040000	                          cmp rax, 0x400	       259	mount_clnt.c	FUNCTION_2	IF_1	CALL_1
0x40005d2	            0x7746	                            ja 0x400061a	       259	mount_clnt.c	FUNCTION_2	IF_1	CALL_1
0x40005d4	          0x8b4330	            mov eax, dword [rbx + 0x30] 	       262	mount_clnt.c	FUNCTION_2	IF_2
0x40005d7	            0x85c0	                           test eax, eax	       262	mount_clnt.c	FUNCTION_2	IF_2
0x40005d9	            0x7409	                            je 0x40005e4	       262	mount_clnt.c	FUNCTION_2	IF_2
0x40005db	    0x48c744247818	           mov qword [rsp + 0x78], 0x18 	       263	mount_clnt.c	FUNCTION_2	IF_2
0x40005e4	          0x4889ef	                            mov rdi, rbp	       265	mount_clnt.c	FUNCTION_2	CALL_2
0x40005e7	      0xe800000000	                          call 0x40005ec	       265	mount_clnt.c	FUNCTION_2	CALL_2
0x40005ec	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       266	mount_clnt.c	FUNCTION_2	IF_3	CALL_3
0x40005f2	          0x4889c5	                            mov rbp, rax	       265	mount_clnt.c	FUNCTION_2	CALL_2
0x40005f5	            0x7723	                            ja 0x400061a	       266	mount_clnt.c	FUNCTION_2	IF_3	CALL_3
0x40005f7	        0x488b4038	            mov rax, qword [rax + 0x38] 	       273	mount_clnt.c	FUNCTION_2	IF_4
0x40005fb	          0x4889ef	                            mov rdi, rbp	       277	mount_clnt.c	FUNCTION_2	CALL_5
0x40005fe	            0x31d2	                            xor edx, edx	       277	mount_clnt.c	FUNCTION_2	CALL_5
0x4000600	          0x4889e6	                            mov rsi, rsp	       277	mount_clnt.c	FUNCTION_2	CALL_5
0x4000603	    0x480590000000	                           add rax, 0x90	       275	mount_clnt.c	FUNCTION_2	ELSE_1
0x4000609	        0x48890424	                    mov qword [rsp], rax	       275	mount_clnt.c	FUNCTION_2	ELSE_1
0x400060d	      0xe800000000	                          call 0x4000612	       277	mount_clnt.c	FUNCTION_2	CALL_5
0x4000612	          0x4889ef	                            mov rdi, rbp	       278	mount_clnt.c	FUNCTION_2	CALL_6
0x4000615	      0xe800000000	                          call 0x400061a	       278	mount_clnt.c	FUNCTION_2	CALL_6
0x400061a	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	       292	mount_clnt.c	FUNCTION_2
0x4000622	    0x654833042528	                xor rax, qword gs:[0x28]	       292	mount_clnt.c	FUNCTION_2
0x400062b	            0x750a	                           jne 0x4000637	       292	mount_clnt.c	FUNCTION_2
0x400062d	    0x4881c4980000	                           add rsp, 0x98	       292	mount_clnt.c	FUNCTION_2
0x4000634	              0x5b	                                 pop rbx	       292	mount_clnt.c	FUNCTION_2
0x4000635	              0x5d	                                 pop rbp	       292	mount_clnt.c	FUNCTION_2
0x4000636	              0xc3	                                     ret	       292	mount_clnt.c	FUNCTION_2
0x4000637	      0xe800000000	                  call section_end..text	       292	mount_clnt.c	FUNCTION_2
