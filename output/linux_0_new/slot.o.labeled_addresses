pci_slot_attr_store	SWITCH,0:WHILE,0:IF,0:ELSE,0:FOR,0:DO,0:CALL,3:functions,0	10
0x4000060	        0x488b4618	            mov rax, qword [rsi + 0x18] 	        32	slot.c	FUNCTION_2	CALL_3
0x4000064	        0x4883ef28	                           sub rdi, 0x28	        30	slot.c	FUNCTION_2	CALL_1
0x4000068	          0x4989d0	                             mov r8, rdx	        29	slot.c	FUNCTION_2
0x400006b	          0x4885c0	                           test rax, rax	        32	slot.c	FUNCTION_2	CALL_3
0x400006e	            0x740b	                            je 0x400007b	        32	slot.c	FUNCTION_2	CALL_3
0x4000070	          0x4889ca	                            mov rdx, rcx	        32	slot.c	FUNCTION_2	CALL_3
0x4000073	          0x4c89c6	                             mov rsi, r8	        32	slot.c	FUNCTION_2	CALL_3
0x4000076	      0xe900000000	                           jmp 0x400007b	        32	slot.c	FUNCTION_2	CALL_3
0x400007b	    0x48c7c0fbffff	             mov rax, 0xfffffffffffffffb	        33	slot.c	FUNCTION_2
0x4000082	              0xc3	                                     ret	        33	slot.c	FUNCTION_2
cur_speed_read_file	SWITCH,0:WHILE,0:IF,0:ELSE,0:FOR,0:DO,0:CALL,1:functions,0	12
0x4000160	          0x488b07	                    mov rax, qword [rdi]	       100	slot.c	FUNCTION_6	CALL_1
0x4000163	          0x4889f1	                            mov rcx, rsi	        99	slot.c	FUNCTION_6
0x4000166	    0x48c7c2000000	                              mov rdx, 0	        88	slot.c	FUNCTION_4	ELSE_1
0x400016d	     0xfb680e30000	           movzx eax, byte [rax + 0xe3] 	       100	slot.c	FUNCTION_6	CALL_1
0x4000174	          0x83f817	                           cmp eax, 0x17	        85	slot.c	FUNCTION_4	IF_1	CALL_1
0x4000177	            0x7708	                            ja 0x4000181	        85	slot.c	FUNCTION_4	IF_1	CALL_1
0x4000179	    0x488b14c50000	                  mov rdx, qword [rax*8]	        86	slot.c	FUNCTION_4	IF_1
0x4000181	    0x48c7c6000000	                              mov rsi, 0	        90	slot.c	FUNCTION_4	CALL_2
0x4000188	          0x4889cf	                            mov rdi, rcx	        90	slot.c	FUNCTION_4	CALL_2
0x400018b	      0xe800000000	                          call 0x4000190	        90	slot.c	FUNCTION_4	CALL_2
0x4000190	            0x4898	                                    cdqe	       100	slot.c	FUNCTION_6	CALL_1
0x4000192	              0xc3	                                     ret	       101	slot.c	FUNCTION_6
max_speed_read_file	SWITCH,0:WHILE,0:IF,0:ELSE,0:FOR,0:DO,0:CALL,1:functions,0	12
0x40001a0	          0x488b07	                    mov rax, qword [rdi]	        95	slot.c	FUNCTION_5	CALL_1
0x40001a3	          0x4889f1	                            mov rcx, rsi	        94	slot.c	FUNCTION_5
0x40001a6	    0x48c7c2000000	                              mov rdx, 0	        88	slot.c	FUNCTION_4	ELSE_1
0x40001ad	     0xfb680e20000	           movzx eax, byte [rax + 0xe2] 	        95	slot.c	FUNCTION_5	CALL_1
0x40001b4	          0x83f817	                           cmp eax, 0x17	        85	slot.c	FUNCTION_4	IF_1	CALL_1
0x40001b7	            0x7708	                            ja 0x40001c1	        85	slot.c	FUNCTION_4	IF_1	CALL_1
0x40001b9	    0x488b14c50000	                  mov rdx, qword [rax*8]	        86	slot.c	FUNCTION_4	IF_1
0x40001c1	    0x48c7c6000000	                              mov rsi, 0	        90	slot.c	FUNCTION_4	CALL_2
0x40001c8	          0x4889cf	                            mov rdi, rcx	        90	slot.c	FUNCTION_4	CALL_2
0x40001cb	      0xe800000000	                          call 0x40001d0	        90	slot.c	FUNCTION_4	CALL_2
0x40001d0	            0x4898	                                    cdqe	        95	slot.c	FUNCTION_5	CALL_1
0x40001d2	              0xc3	                                     ret	        96	slot.c	FUNCTION_5
pci_hp_remove_module_link	SWITCH,0:WHILE,0:IF,0:ELSE,0:FOR,0:DO,0:CALL,1:functions,0	3
0x4000320	        0x4883c728	                           add rdi, 0x28	       394	slot.c	FUNCTION_15	CALL_1
0x4000324	    0x48c7c6000000	                              mov rsi, 0	       394	slot.c	FUNCTION_15	CALL_1
0x400032b	      0xe900000000	                   jmp sym.pci_slot_init	       394	slot.c	FUNCTION_15	CALL_1
pci_destroy_slot	SWITCH,0:WHILE,0:IF,0:ELSE,0:FOR,0:DO,0:CALL,5:functions,0	9
0x4000090	              0x53	                                push rbx	       347	slot.c	FUNCTION_13
0x4000091	          0x4889fb	                            mov rbx, rdi	       347	slot.c	FUNCTION_13
0x4000094	    0x48c7c7000000	                              mov rdi, 0	       351	slot.c	FUNCTION_13	CALL_3
0x400009b	      0xe800000000	                          call 0x40000a0	       351	slot.c	FUNCTION_13	CALL_3
0x40000a0	        0x488d7b28	                   lea rdi, [rbx + 0x28]	       352	slot.c	FUNCTION_13	CALL_4
0x40000a4	      0xe800000000	                          call 0x40000a9	       352	slot.c	FUNCTION_13	CALL_4
0x40000a9	              0x5b	                                 pop rbx	       354	slot.c	FUNCTION_13
0x40000aa	    0x48c7c7000000	                              mov rdi, 0	       353	slot.c	FUNCTION_13	CALL_5
0x40000b1	      0xe900000000	                           jmp 0x40000b6	       353	slot.c	FUNCTION_13	CALL_5
pci_slot_attr_show	SWITCH,0:WHILE,0:IF,0:ELSE,0:FOR,0:DO,0:CALL,3:functions,0	8
0x4000040	        0x488b4610	            mov rax, qword [rsi + 0x10] 	        24	slot.c	FUNCTION_1	CALL_3
0x4000044	        0x4883ef28	                           sub rdi, 0x28	        22	slot.c	FUNCTION_1	CALL_1
0x4000048	          0x4885c0	                           test rax, rax	        24	slot.c	FUNCTION_1	CALL_3
0x400004b	            0x7408	                            je 0x4000055	        24	slot.c	FUNCTION_1	CALL_3
0x400004d	          0x4889d6	                            mov rsi, rdx	        24	slot.c	FUNCTION_1	CALL_3
0x4000050	      0xe900000000	                           jmp 0x4000055	        24	slot.c	FUNCTION_1	CALL_3
0x4000055	    0x48c7c0fbffff	             mov rax, 0xfffffffffffffffb	        25	slot.c	FUNCTION_1
0x400005c	              0xc3	                                     ret	        25	slot.c	FUNCTION_1
pci_hp_create_module_link	SWITCH,0:WHILE,0:IF,3:ELSE,0:FOR,0:DO,0:CALL,4:functions,0	37
0x40002a0	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       368	slot.c	FUNCTION_14
0x40002a4	          0x4885c0	                           test rax, rax	       372	slot.c	FUNCTION_14	IF_1
0x40002a7	            0x746a	                            je 0x4000313	       372	slot.c	FUNCTION_14	IF_1
0x40002a9	          0x488b00	                    mov rax, qword [rax]	       372	slot.c	FUNCTION_14	IF_1
0x40002ac	          0x4885c0	                           test rax, rax	       372	slot.c	FUNCTION_14	IF_1
0x40002af	            0x7462	                            je 0x4000313	       372	slot.c	FUNCTION_14	IF_1
0x40002b1	              0x55	                                push rbp	       367	slot.c	FUNCTION_14
0x40002b2	              0x53	                                push rbx	       367	slot.c	FUNCTION_14
0x40002b3	          0x4889fb	                            mov rbx, rdi	       367	slot.c	FUNCTION_14
0x40002b6	        0x488b7008	                mov rsi, qword [rax + 8]	       374	slot.c	FUNCTION_14	CALL_1
0x40002ba	    0x488b3d000000	            mov rdi, qword [0x040002c1] 	       374	slot.c	FUNCTION_14	CALL_1
0x40002c1	      0xe800000000	                          call 0x40002c6	       374	slot.c	FUNCTION_14	CALL_1
0x40002c6	          0x4885c0	                           test rax, rax	       375	slot.c	FUNCTION_14	IF_2
0x40002c9	          0x4889c5	                            mov rbp, rax	       374	slot.c	FUNCTION_14	CALL_1
0x40002cc	            0x7443	                            je 0x4000311	       375	slot.c	FUNCTION_14	IF_2
0x40002ce	        0x488d7b28	                   lea rdi, [rbx + 0x28]	       377	slot.c	FUNCTION_14	CALL_2
0x40002d2	    0x48c7c2000000	                              mov rdx, 0	       377	slot.c	FUNCTION_14	CALL_2
0x40002d9	          0x4889c6	                            mov rsi, rax	       377	slot.c	FUNCTION_14	CALL_2
0x40002dc	      0xe800000000	                          call 0x40002e1	       377	slot.c	FUNCTION_14	CALL_2
0x40002e1	            0x85c0	                           test eax, eax	       378	slot.c	FUNCTION_14	IF_3
0x40002e3	            0x750a	                           jne 0x40002ef	       378	slot.c	FUNCTION_14	IF_3
0x40002e5	          0x4889ef	                            mov rdi, rbp	       381	slot.c	FUNCTION_14	CALL_4
0x40002e8	              0x5b	                                 pop rbx	       382	slot.c	FUNCTION_14
0x40002e9	              0x5d	                                 pop rbp	       382	slot.c	FUNCTION_14
0x40002ea	      0xe900000000	                           jmp 0x40002ef	       381	slot.c	FUNCTION_14	CALL_4
0x40002ef	          0x488b3b	                    mov rdi, qword [rbx]	       379	slot.c	FUNCTION_14	IF_3	CALL_3
0x40002f2	            0x89c2	                            mov edx, eax	       379	slot.c	FUNCTION_14	IF_3	CALL_3
0x40002f4	    0x48c7c6000000	                              mov rsi, 0	       379	slot.c	FUNCTION_14	IF_3	CALL_3
0x40002fb	    0x4881c7200100	                          add rdi, 0x120	       379	slot.c	FUNCTION_14	IF_3	CALL_3
0x4000302	      0xe800000000	                          call 0x4000307	       379	slot.c	FUNCTION_14	IF_3	CALL_3
0x4000307	          0x4889ef	                            mov rdi, rbp	       381	slot.c	FUNCTION_14	CALL_4
0x400030a	              0x5b	                                 pop rbx	       382	slot.c	FUNCTION_14
0x400030b	              0x5d	                                 pop rbp	       382	slot.c	FUNCTION_14
0x400030c	      0xe900000000	                           jmp 0x4000311	       381	slot.c	FUNCTION_14	CALL_4
0x4000311	              0x5b	                                 pop rbx	       382	slot.c	FUNCTION_14
0x4000312	              0x5d	                                 pop rbp	       382	slot.c	FUNCTION_14
0x4000313	            0xf3c3	                                     ret	       382	slot.c	FUNCTION_14
pci_slot_init	SWITCH,0:WHILE,0:IF,1:ELSE,0:FOR,0:DO,0:CALL,3:functions,0	15
0x4000330	    0x48c7c7000000	                              mov rdi, 0	       403	slot.c	FUNCTION_16	CALL_1
0x4000337	      0xe800000000	                          call 0x400033c	       403	slot.c	FUNCTION_16	CALL_1
0x400033c	        0x488d5018	                   lea rdx, [rax + 0x18]	       404	slot.c	FUNCTION_16	CALL_2
0x4000340	            0x31f6	                            xor esi, esi	       404	slot.c	FUNCTION_16	CALL_2
0x4000342	    0x48c7c7000000	                              mov rdi, 0	       404	slot.c	FUNCTION_16	CALL_2
0x4000349	      0xe800000000	                          call 0x400034e	       404	slot.c	FUNCTION_16	CALL_2
0x400034e	          0x4885c0	                           test rax, rax	       406	slot.c	FUNCTION_16	IF_1
0x4000351	    0x488905000000	            mov qword [0x04000358], rax 	       404	slot.c	FUNCTION_16	CALL_2
0x4000358	            0x7403	                            je 0x400035d	       406	slot.c	FUNCTION_16	IF_1
0x400035a	            0x31c0	                            xor eax, eax	       410	slot.c	FUNCTION_16
0x400035c	              0xc3	                                     ret	       411	slot.c	FUNCTION_16
0x400035d	    0x48c7c7000000	                              mov rdi, 0	       407	slot.c	FUNCTION_16	IF_1	CALL_3
0x4000364	      0xe800000000	                          call 0x4000369	       407	slot.c	FUNCTION_16	IF_1	CALL_3
0x4000369	      0xb8f4ffffff	                     mov eax, 0xfffffff4	       408	slot.c	FUNCTION_16	IF_1
0x400036e	              0xc3	                                     ret	       408	slot.c	FUNCTION_16	IF_1
pci_dev_assign_slot	SWITCH,0:WHILE,0:IF,1:ELSE,0:FOR,0:DO,0:CALL,4:functions,0	29
0x40005d0	              0x53	                                push rbx	       199	slot.c	FUNCTION_10
0x40005d1	          0x4889fb	                            mov rbx, rdi	       199	slot.c	FUNCTION_10
0x40005d4	    0x48c7c7000000	                              mov rdi, 0	       202	slot.c	FUNCTION_10	CALL_1
0x40005db	      0xe800000000	                          call 0x40005e0	       202	slot.c	FUNCTION_10	CALL_1
0x40005e0	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       203	slot.c	FUNCTION_10	CALL_2
0x40005e4	        0x488b5140	            mov rdx, qword [rcx + 0x40] 	       203	slot.c	FUNCTION_10	CALL_2
0x40005e8	        0x4883c140	                           add rcx, 0x40	       203	slot.c	FUNCTION_10	CALL_2
0x40005ec	          0x4839d1	                            cmp rcx, rdx	       203	slot.c	FUNCTION_10	CALL_2
0x40005ef	            0x7435	                            je 0x4000626	       203	slot.c	FUNCTION_10	CALL_2
0x40005f1	          0x8b7338	            mov esi, dword [rbx + 0x38] 	       203	slot.c	FUNCTION_10	CALL_2
0x40005f4	        0x488d42f8	                      lea rax, [rdx - 8]	       203	slot.c	FUNCTION_10	CALL_2
0x40005f8	          0xc1ee03	                              shr esi, 3	       203	slot.c	FUNCTION_10	CALL_2
0x40005fb	          0x83e61f	                           and esi, 0x1f	       203	slot.c	FUNCTION_10	CALL_2
0x40005fe	            0xeb0d	                           jmp 0x400060d	       203	slot.c	FUNCTION_10	CALL_2
0x4000600	        0x488b5008	                mov rdx, qword [rax + 8]	       203	slot.c	FUNCTION_10	CALL_2
0x4000604	          0x4839d1	                            cmp rcx, rdx	       203	slot.c	FUNCTION_10	CALL_2
0x4000607	        0x488d42f8	                      lea rax, [rdx - 8]	       203	slot.c	FUNCTION_10	CALL_2
0x400060b	            0x7419	                            je 0x4000626	       203	slot.c	FUNCTION_10	CALL_2
0x400060d	         0xfb65020	           movzx edx, byte [rax + 0x20] 	       204	slot.c	FUNCTION_10	IF_1	CALL_3
0x4000611	            0x39f2	                            cmp edx, esi	       204	slot.c	FUNCTION_10	IF_1	CALL_3
0x4000613	            0x75eb	                           jne 0x4000600	       204	slot.c	FUNCTION_10	IF_1	CALL_3
0x4000615	        0x48894330	             mov qword [rbx + 0x30], rax	       205	slot.c	FUNCTION_10	IF_1
0x4000619	        0x488b5008	                mov rdx, qword [rax + 8]	       203	slot.c	FUNCTION_10	CALL_2
0x400061d	          0x4839d1	                            cmp rcx, rdx	       203	slot.c	FUNCTION_10	CALL_2
0x4000620	        0x488d42f8	                      lea rax, [rdx - 8]	       203	slot.c	FUNCTION_10	CALL_2
0x4000624	            0x75e7	                           jne 0x400060d	       203	slot.c	FUNCTION_10	CALL_2
0x4000626	              0x5b	                                 pop rbx	       207	slot.c	FUNCTION_10
0x4000627	    0x48c7c7000000	                              mov rdi, 0	       206	slot.c	FUNCTION_10	CALL_4
0x400062e	      0xe900000000	                   jmp section_end..text	       206	slot.c	FUNCTION_10	CALL_4
