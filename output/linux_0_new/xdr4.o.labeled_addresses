nlm4_decode_fh	CALL,5:WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,1:DO,0:FOR,0	61
0x4000100	        0x4c8d5e0a	                    lea r11, [rsi + 0xa]	        86	xdr4.c	FUNCTION_5	CALL_1
0x4000104	        0x4c8d4602	                       lea r8, [rsi + 2]	        86	xdr4.c	FUNCTION_5	CALL_1
0x4000108	          0x4989fa	                            mov r10, rdi	        85	xdr4.c	FUNCTION_5
0x400010b	            0x31c0	                            xor eax, eax	        86	xdr4.c	FUNCTION_5	CALL_1
0x400010d	    0x48c746020000	                  mov qword [rsi + 2], 0	        86	xdr4.c	FUNCTION_5	CALL_1
0x4000115	    0x48c7467a0000	               mov qword [rsi + 0x7a], 0	        86	xdr4.c	FUNCTION_5	CALL_1
0x400011d	          0x4c89df	                            mov rdi, r11	        86	xdr4.c	FUNCTION_5	CALL_1
0x4000120	          0x4c89c1	                             mov rcx, r8	        86	xdr4.c	FUNCTION_5	CALL_1
0x4000123	        0x4d8d4a04	                       lea r9, [r10 + 4]	        87	xdr4.c	FUNCTION_5	CALL_2
0x4000127	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        86	xdr4.c	FUNCTION_5	CALL_1
0x400012b	          0x4829f9	                            sub rcx, rdi	        86	xdr4.c	FUNCTION_5	CALL_1
0x400012e	          0x83e980	             sub ecx, 0xffffffffffffff80	        86	xdr4.c	FUNCTION_5	CALL_1
0x4000131	          0xc1e903	                              shr ecx, 3	        86	xdr4.c	FUNCTION_5	CALL_1
0x4000134	          0xf348ab	              rep stosq qword [rdi], rax	        86	xdr4.c	FUNCTION_5	CALL_1
0x4000137	          0x418b12	                    mov edx, dword [r10]	        87	xdr4.c	FUNCTION_5	CALL_2
0x400013a	             0xfca	                               bswap edx	        87	xdr4.c	FUNCTION_5	CALL_2
0x400013c	      0x6681fa8000	                            cmp dx, 0x80	        88	xdr4.c	FUNCTION_5	IF_1
0x4000141	           0xfb7ca	                           movzx ecx, dx	        87	xdr4.c	FUNCTION_5	CALL_2
0x4000144	          0x668916	                      mov word [rsi], dx	        87	xdr4.c	FUNCTION_5	CALL_2
0x4000147	            0x7747	                            ja 0x4000190	        88	xdr4.c	FUNCTION_5	IF_1
0x4000149	          0x83f908	                              cmp ecx, 8	        93	xdr4.c	FUNCTION_5	CALL_4
0x400014c	            0x7244	                            jb 0x4000192	        93	xdr4.c	FUNCTION_5	CALL_4
0x400014e	        0x498b4204	                mov rax, qword [r10 + 4]	        93	xdr4.c	FUNCTION_5	CALL_4
0x4000152	          0x4c89df	                            mov rdi, r11	        93	xdr4.c	FUNCTION_5	CALL_4
0x4000155	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        93	xdr4.c	FUNCTION_5	CALL_4
0x4000159	        0x48894602	                mov qword [rsi + 2], rax	        93	xdr4.c	FUNCTION_5	CALL_4
0x400015d	            0x89c8	                            mov eax, ecx	        93	xdr4.c	FUNCTION_5	CALL_4
0x400015f	      0x498b7401f8	           mov rsi, qword [r9 + rax - 8]	        93	xdr4.c	FUNCTION_5	CALL_4
0x4000164	      0x49897400f8	           mov qword [r8 + rax - 8], rsi	        93	xdr4.c	FUNCTION_5	CALL_4
0x4000169	          0x4c89c0	                             mov rax, r8	        93	xdr4.c	FUNCTION_5	CALL_4
0x400016c	          0x4c89ce	                             mov rsi, r9	        93	xdr4.c	FUNCTION_5	CALL_4
0x400016f	          0x4829f8	                            sub rax, rdi	        93	xdr4.c	FUNCTION_5	CALL_4
0x4000172	             0x1c1	                            add ecx, eax	        93	xdr4.c	FUNCTION_5	CALL_4
0x4000174	          0x4829c6	                            sub rsi, rax	        93	xdr4.c	FUNCTION_5	CALL_4
0x4000177	            0x89c8	                            mov eax, ecx	        93	xdr4.c	FUNCTION_5	CALL_4
0x4000179	          0xc1e803	                              shr eax, 3	        93	xdr4.c	FUNCTION_5	CALL_4
0x400017c	            0x89c1	                            mov ecx, eax	        93	xdr4.c	FUNCTION_5	CALL_4
0x400017e	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	        93	xdr4.c	FUNCTION_5	CALL_4
0x4000181	           0xfb7d2	                           movzx edx, dx	        94	xdr4.c	FUNCTION_5	CALL_5
0x4000184	        0x488d4203	                      lea rax, [rdx + 3]	        94	xdr4.c	FUNCTION_5	CALL_5
0x4000188	      0x25fcff0100	                        and eax, 0x1fffc	        94	xdr4.c	FUNCTION_5	CALL_5
0x400018d	          0x4c01c8	                             add rax, r9	        94	xdr4.c	FUNCTION_5	CALL_5
0x4000190	            0xf3c3	                                     ret	        95	xdr4.c	FUNCTION_5
0x4000192	          0xf6c104	                              test cl, 4	        93	xdr4.c	FUNCTION_5	CALL_4
0x4000195	            0x7521	                           jne 0x40001b8	        93	xdr4.c	FUNCTION_5	CALL_4
0x4000197	            0x85c9	                           test ecx, ecx	        93	xdr4.c	FUNCTION_5	CALL_4
0x4000199	            0x74e6	                            je 0x4000181	        93	xdr4.c	FUNCTION_5	CALL_4
0x400019b	      0x410fb64204	               movzx eax, byte [r10 + 4]	        93	xdr4.c	FUNCTION_5	CALL_4
0x40001a0	          0xf6c102	                              test cl, 2	        93	xdr4.c	FUNCTION_5	CALL_4
0x40001a3	          0x884602	                  mov byte [rsi + 2], al	        93	xdr4.c	FUNCTION_5	CALL_4
0x40001a6	            0x74d9	                            je 0x4000181	        93	xdr4.c	FUNCTION_5	CALL_4
0x40001a8	            0x89c9	                            mov ecx, ecx	        93	xdr4.c	FUNCTION_5	CALL_4
0x40001aa	    0x410fb74409fe	          movzx eax, word [r9 + rcx - 2]	        93	xdr4.c	FUNCTION_5	CALL_4
0x40001b0	    0x6641894408fe	             mov word [r8 + rcx - 2], ax	        93	xdr4.c	FUNCTION_5	CALL_4
0x40001b6	            0xebc9	                           jmp 0x4000181	        93	xdr4.c	FUNCTION_5	CALL_4
0x40001b8	        0x418b4204	                mov eax, dword [r10 + 4]	        93	xdr4.c	FUNCTION_5	CALL_4
0x40001bc	            0x89c9	                            mov ecx, ecx	        93	xdr4.c	FUNCTION_5	CALL_4
0x40001be	          0x894602	                mov dword [rsi + 2], eax	        93	xdr4.c	FUNCTION_5	CALL_4
0x40001c1	      0x418b4409fc	           mov eax, dword [r9 + rcx - 4]	        93	xdr4.c	FUNCTION_5	CALL_4
0x40001c6	      0x41894408fc	           mov dword [r8 + rcx - 4], eax	        93	xdr4.c	FUNCTION_5	CALL_4
0x40001cb	            0xebb4	                           jmp 0x4000181	        93	xdr4.c	FUNCTION_5	CALL_4
nlm4_decode_cookie	CALL,5:WHILE,0:functions,0:SWITCH,0:ELSE,2:IF,2:DO,0:FOR,0	59
0x4000040	            0x8b17	                    mov edx, dword [rdi]	        51	xdr4.c	ELSE_2	FUNCTION_3	CALL_1
0x4000042	        0x488d4f04	                      lea rcx, [rdi + 4]	        51	xdr4.c	ELSE_2	FUNCTION_3	CALL_1
0x4000046	             0xfca	                               bswap edx	        51	xdr4.c	ELSE_2	FUNCTION_3	CALL_1
0x4000048	            0x85d2	                           test edx, edx	        53	xdr4.c	ELSE_2	FUNCTION_3	IF_1
0x400004a	     0xf8482000000	                            je 0x40000d2	        53	xdr4.c	ELSE_2	FUNCTION_3	IF_1
0x4000050	            0x31c0	                            xor eax, eax	        69	xdr4.c	FUNCTION_3
0x4000052	          0x83fa20	                           cmp edx, 0x20	        58	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2
0x4000055	            0x7757	                            ja 0x40000ae	        58	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2
0x4000057	          0x83fa08	                              cmp edx, 8	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x400005a	          0x895620	             mov dword [rsi + 0x20], edx	        60	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2
0x400005d	            0x7251	                            jb 0x40000b0	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x400005f	        0x488b4704	                mov rax, qword [rdi + 4]	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x4000063	          0x4989c9	                             mov r9, rcx	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x4000066	          0x488906	                    mov qword [rsi], rax	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x4000069	            0x89d0	                            mov eax, edx	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x400006b	      0x488b7c01f8	          mov rdi, qword [rcx + rax - 8]	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x4000070	      0x48897c06f8	          mov qword [rsi + rax - 8], rdi	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x4000075	        0x488d4608	                      lea rax, [rsi + 8]	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x4000079	        0x4883e0f8	             and rax, 0xfffffffffffffff8	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x400007d	          0x4829c6	                            sub rsi, rax	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x4000080	          0x4929f1	                             sub r9, rsi	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x4000083	             0x1d6	                            add esi, edx	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x4000085	          0x83e6f8	                     and esi, 0xfffffff8	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x4000088	          0x83fe08	                              cmp esi, 8	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x400008b	            0x7217	                            jb 0x40000a4	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x400008d	          0x83e6f8	                     and esi, 0xfffffff8	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x4000090	            0x31ff	                            xor edi, edi	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x4000092	          0x4189f8	                            mov r8d, edi	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x4000095	          0x83c708	                              add edi, 8	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x4000098	        0x4f8b1401	                mov r10, qword [r9 + r8]	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x400009c	            0x39f7	                            cmp edi, esi	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x400009e	        0x4e891400	               mov qword [rax + r8], r10	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000a2	            0x72ee	                            jb 0x4000092	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000a4	        0x488d4203	                      lea rax, [rdx + 3]	        62	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_4
0x40000a8	          0x83e0fc	                     and eax, 0xfffffffc	        62	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_4
0x40000ab	          0x4801c8	                            add rax, rcx	        62	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_4
0x40000ae	            0xf3c3	                                     ret	        72	xdr4.c	FUNCTION_3	ELSE_2
0x40000b0	          0xf6c204	                              test dl, 4	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000b3	            0x752e	                           jne 0x40000e3	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000b5	            0x85d2	                           test edx, edx	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000b7	            0x74eb	                            je 0x40000a4	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000b9	         0xfb64704	               movzx eax, byte [rdi + 4]	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000bd	          0xf6c202	                              test dl, 2	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000c0	            0x8806	                      mov byte [rsi], al	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000c2	            0x74e0	                            je 0x40000a4	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000c4	            0x89d0	                            mov eax, edx	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000c6	       0xfb77c01fe	         movzx edi, word [rcx + rax - 2]	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000cb	      0x66897c06fe	            mov word [rsi + rax - 2], di	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000d0	            0xebd2	                           jmp 0x40000a4	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000d2	    0xc74620040000	               mov dword [rsi + 0x20], 4	        55	xdr4.c	ELSE_2	FUNCTION_3	IF_1
0x40000d9	    0xc70600000000	                      mov dword [rsi], 0	        56	xdr4.c	ELSE_2	FUNCTION_3	IF_1	CALL_2
0x40000df	          0x4889c8	                            mov rax, rcx	        51	xdr4.c	ELSE_2	FUNCTION_3	CALL_1
0x40000e2	              0xc3	                                     ret	        51	xdr4.c	ELSE_2	FUNCTION_3	CALL_1
0x40000e3	          0x8b4704	                mov eax, dword [rdi + 4]	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000e6	            0x8906	                    mov dword [rsi], eax	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000e8	            0x89d0	                            mov eax, edx	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000ea	        0x8b7c01fc	          mov edi, dword [rcx + rax - 4]	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000ee	        0x897c06fc	          mov dword [rsi + rax - 4], edi	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40000f2	            0xebb0	                           jmp 0x40000a4	        61	xdr4.c	ELSE_2	FUNCTION_3	ELSE_1	IF_2	CALL_3
nlm4_encode_cookie	CALL,3:WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,0:DO,0:FOR,0	16
0x40001d0	          0x8b4620	            mov eax, dword [rsi + 0x20] 	        77	xdr4.c	FUNCTION_4	CALL_1
0x40001d3	              0x53	                                push rbx	        76	xdr4.c	FUNCTION_4
0x40001d4	        0x488d4f04	                      lea rcx, [rdi + 4]	        77	xdr4.c	FUNCTION_4	CALL_1
0x40001d8	          0x4889f3	                            mov rbx, rsi	        76	xdr4.c	FUNCTION_4
0x40001db	             0xfc8	                               bswap eax	        77	xdr4.c	FUNCTION_4	CALL_1
0x40001dd	            0x8907	                    mov dword [rdi], eax	        77	xdr4.c	FUNCTION_4	CALL_1
0x40001df	          0x8b5620	            mov edx, dword [rsi + 0x20] 	        78	xdr4.c	FUNCTION_4	CALL_2
0x40001e2	          0x4889cf	                            mov rdi, rcx	        78	xdr4.c	FUNCTION_4	CALL_2
0x40001e5	      0xe800000000	                          call 0x40001ea	        78	xdr4.c	FUNCTION_4	CALL_2
0x40001ea	          0x4889c1	                            mov rcx, rax	        78	xdr4.c	FUNCTION_4	CALL_2
0x40001ed	          0x8b4320	            mov eax, dword [rbx + 0x20] 	        80	xdr4.c	FUNCTION_4
0x40001f0	              0x5b	                                 pop rbx	        81	xdr4.c	FUNCTION_4
0x40001f1	        0x4883c003	                              add rax, 3	        80	xdr4.c	FUNCTION_4
0x40001f5	          0x83e0fc	                     and eax, 0xfffffffc	        80	xdr4.c	FUNCTION_4
0x40001f8	          0x4801c8	                            add rax, rcx	        80	xdr4.c	FUNCTION_4
0x40001fb	              0xc3	                                     ret	        81	xdr4.c	FUNCTION_4
