rpc_destroy_mempool	WHILE,0:IF,0:ELSE,0:CALL,6:functions,0:FOR,0:DO,0:SWITCH,0	18
0x4005fa0	    0x488b3d000000	            mov rdi, qword [0x04005fa7] 	      1129	sched.c	FUNCTION_67	IF_1
0x4005fa7	          0x4885ff	                           test rdi, rdi	      1129	sched.c	FUNCTION_67	IF_1
0x4005faa	            0x7427	                            je 0x4005fd3	      1129	sched.c	FUNCTION_67	IF_1
0x4005fac	    0x48c705000000	               mov qword [0x04005fb7], 0	      1134	sched.c	FUNCTION_67
0x4005fb7	      0xe800000000	                          call 0x4005fbc	      1135	sched.c	FUNCTION_67	CALL_2
0x4005fbc	    0x488b3d000000	            mov rdi, qword [0x04005fc3] 	      1136	sched.c	FUNCTION_67
0x4005fc3	    0x48c705000000	               mov qword [0x04005fce], 0	      1137	sched.c	FUNCTION_67
0x4005fce	      0xe800000000	                          call 0x4005fd3	      1138	sched.c	FUNCTION_67	CALL_3
0x4005fd3	    0x488b3d000000	            mov rdi, qword [0x04005fda] 	      1145	sched.c	FUNCTION_68	CALL_2
0x4005fda	      0xe800000000	                          call 0x4005fdf	      1145	sched.c	FUNCTION_68	CALL_2
0x4005fdf	    0x488b3d000000	            mov rdi, qword [0x04005fe6] 	      1146	sched.c	FUNCTION_68	CALL_3
0x4005fe6	      0xe800000000	                          call 0x4005feb	      1146	sched.c	FUNCTION_68	CALL_3
0x4005feb	    0x488b3d000000	            mov rdi, qword [0x04005ff2] 	      1147	sched.c	FUNCTION_68	CALL_4
0x4005ff2	      0xe800000000	                          call 0x4005ff7	      1147	sched.c	FUNCTION_68	CALL_4
0x4005ff7	    0x488b3d000000	            mov rdi, qword [0x04005ffe] 	      1148	sched.c	FUNCTION_68	CALL_5
0x4005ffe	      0xe800000000	                          call 0x4006003	      1148	sched.c	FUNCTION_68	CALL_5
0x4006003	    0x48c7c7000000	                              mov rdi, 0	       250	sched.c	FUNCTION_15	CALL_1
0x400600a	      0xe900000000	                           jmp 0x400600f	       250	sched.c	FUNCTION_15	CALL_1
rpc_exit_task	WHILE,0:IF,2:ELSE,0:CALL,5:functions,0:FOR,0:DO,0:SWITCH,0	28
0x4001d10	    0x488b87a00000	            mov rax, qword [rdi + 0xa0] 	       724	sched.c	FUNCTION_45	IF_1
0x4001d17	    0x48c747200000	               mov qword [rdi + 0x20], 0	       723	sched.c	FUNCTION_45
0x4001d1f	        0x488b4008	                mov rax, qword [rax + 8]	       724	sched.c	FUNCTION_45	IF_1
0x4001d23	          0x4885c0	                           test rax, rax	       724	sched.c	FUNCTION_45	IF_1
0x4001d26	            0x745a	                            je 0x4001d82	       724	sched.c	FUNCTION_45	IF_1
0x4001d28	              0x53	                                push rbx	       722	sched.c	FUNCTION_45
0x4001d29	          0x4889fb	                            mov rbx, rdi	       722	sched.c	FUNCTION_45
0x4001d2c	    0x488bb7980000	            mov rsi, qword [rdi + 0x98] 	       725	sched.c	FUNCTION_45	IF_1	CALL_1
0x4001d33	      0xe800000000	                          call 0x4001d38	       725	sched.c	FUNCTION_45	IF_1	CALL_1
0x4001d38	      0x48837b2000	               cmp qword [rbx + 0x20], 0	       726	sched.c	FUNCTION_45	IF_1	IF_2
0x4001d3d	            0x7442	                            je 0x4001d81	       726	sched.c	FUNCTION_45	IF_1	IF_2
0x4001d3f	    0xf683d5000000	               test byte [rbx + 0xd5], 1	       727	sched.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4001d46	            0x753c	                           jne 0x4001d84	       727	sched.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4001d48	          0x4889df	                            mov rdi, rbx	       729	sched.c	FUNCTION_45	IF_1	IF_2	CALL_4
0x4001d4b	      0xe800000000	                          call 0x4001d50	       729	sched.c	FUNCTION_45	IF_1	IF_2	CALL_4
0x4001d50	            0x31c0	                            xor eax, eax	       712	sched.c	FUNCTION_44
0x4001d52	    0x6681a3d40000	           and word [rbx + 0xd4], 0xf6df	       713	sched.c	FUNCTION_44
0x4001d5b	    0x668983d60000	               mov word [rbx + 0xd6], ax	       712	sched.c	FUNCTION_44
0x4001d62	     0xfb683da0000	           movzx eax, byte [rbx + 0xda] 	       702	sched.c	FUNCTION_43
0x4001d69	          0x83e003	                              and eax, 3	       702	sched.c	FUNCTION_43
0x4001d6c	          0x83c8a8	                      or eax, 0xffffffa8	       703	sched.c	FUNCTION_43
0x4001d6f	    0x8883da000000	               mov byte [rbx + 0xda], al	       703	sched.c	FUNCTION_43
0x4001d75	      0xe800000000	                          call 0x4001d7a	       706	sched.c	FUNCTION_43	CALL_1
0x4001d7a	    0x488983c80000	             mov qword [rbx + 0xc8], rax	       706	sched.c	FUNCTION_43	CALL_1
0x4001d81	              0x5b	                                 pop rbx	       733	sched.c	FUNCTION_45
0x4001d82	            0xf3c3	                                     ret	       733	sched.c	FUNCTION_45
0x4001d84	             0xf0b	                                     ud2	       733	sched.c	FUNCTION_45
0x4001d86	            0xebc0	                           jmp 0x4001d48	       727	sched.c	FUNCTION_45	IF_1	IF_2	CALL_3
__rpc_atrun	WHILE,0:IF,1:ELSE,0:CALL,0:functions,0:FOR,0:DO,0:SWITCH,0	5
0x40000c0	        0x837f0492	 cmp dword [rdi + 4], 0xffffffffffffff92	       675	sched.c	FUNCTION_40	IF_1
0x40000c4	            0x7402	                            je 0x40000c8	       675	sched.c	FUNCTION_40	IF_1
0x40000c6	            0xf3c3	                                     ret	       675	sched.c	FUNCTION_40	IF_1
0x40000c8	    0xc74704000000	                  mov dword [rdi + 4], 0	       676	sched.c	FUNCTION_40	IF_1
0x40000cf	              0xc3	                                     ret	       676	sched.c	FUNCTION_40	IF_1
rpc_delay	WHILE,0:IF,0:ELSE,0:CALL,1:functions,0:FOR,0:DO,0:SWITCH,0	5
0x4002c30	        0x48897728	             mov qword [rdi + 0x28], rsi	       684	sched.c	FUNCTION_41
0x4002c34	    0x48c7c2000000	                              mov rdx, 0	       685	sched.c	FUNCTION_41	CALL_1
0x4002c3b	          0x4889fe	                            mov rsi, rdi	       685	sched.c	FUNCTION_41	CALL_1
0x4002c3e	    0x48c7c7000000	                              mov rdi, 0	       685	sched.c	FUNCTION_41	CALL_1
0x4002c45	      0xe976ffffff	                    jmp sym.rpc_sleep_on	       685	sched.c	FUNCTION_41	CALL_1
rpc_init_priority_wait_queue	WHILE,0:IF,0:ELSE,0:CALL,1:functions,0:FOR,0:DO,0:SWITCH,0	2
0x4001c30	      0xba04000000	                              mov edx, 4	       238	sched.c	FUNCTION_13	CALL_1
0x4001c35	      0xe956ffffff	  jmp sym.__rpc_init_priority_wait_queue	       238	sched.c	FUNCTION_13	CALL_1
rpc_async_release	WHILE,0:IF,0:ELSE,0:CALL,2:functions,0:FOR,0:DO,0:SWITCH,0	2
0x4002760	        0x4883ef40	                           sub rdi, 0x40	      1019	sched.c	FUNCTION_57	CALL_2
0x4002764	            0xebaa	                   jmp sym.rpc_free_task	      1019	sched.c	FUNCTION_57	CALL_2
rpc_init_mempool	WHILE,0:IF,5:ELSE,0:CALL,7:functions,0:FOR,0:DO,0:SWITCH,0	64
0x4006010	      0xba01000000	                              mov edx, 1	       244	sched.c	FUNCTION_14	CALL_1
0x4006015	    0x48c7c6000000	                              mov rsi, 0	       244	sched.c	FUNCTION_14	CALL_1
0x400601c	    0x48c7c7000000	                              mov rdi, 0	       244	sched.c	FUNCTION_14	CALL_1
0x4006023	      0xe868bbffff	 call sym.__rpc_init_priority_wait_queue	       244	sched.c	FUNCTION_14	CALL_1
0x4006028	          0x4531c0	                            xor r8d, r8d	      1107	sched.c	FUNCTION_66	CALL_2
0x400602b	            0x31c9	                            xor ecx, ecx	      1107	sched.c	FUNCTION_66	CALL_2
0x400602d	            0x31d2	                            xor edx, edx	      1107	sched.c	FUNCTION_66	CALL_2
0x400602f	      0xbe0a000000	                            mov esi, 0xa	      1107	sched.c	FUNCTION_66	CALL_2
0x4006034	    0x48c7c7000000	                              mov rdi, 0	      1107	sched.c	FUNCTION_66	CALL_2
0x400603b	      0xe800000000	                          call 0x4006040	      1107	sched.c	FUNCTION_66	CALL_2
0x4006040	          0x4885c0	                           test rax, rax	      1108	sched.c	FUNCTION_66	IF_1
0x4006043	     0xf84f1000000	                            je 0x400613a	      1108	sched.c	FUNCTION_66	IF_1
0x4006049	          0x4531c0	                            xor r8d, r8d	      1112	sched.c	FUNCTION_66	CALL_3
0x400604c	            0x31c9	                            xor ecx, ecx	      1112	sched.c	FUNCTION_66	CALL_3
0x400604e	            0x31d2	                            xor edx, edx	      1112	sched.c	FUNCTION_66	CALL_3
0x4006050	      0xbe1a000000	                           mov esi, 0x1a	      1112	sched.c	FUNCTION_66	CALL_3
0x4006055	    0x48c7c7000000	                              mov rdi, 0	      1112	sched.c	FUNCTION_66	CALL_3
0x400605c	    0x488905000000	            mov qword [0x04006063], rax 	      1110	sched.c	FUNCTION_66
0x4006063	      0xe800000000	                          call 0x4006068	      1112	sched.c	FUNCTION_66	CALL_3
0x4006068	          0x4885c0	                           test rax, rax	      1113	sched.c	FUNCTION_66	IF_2
0x400606b	     0xf84b2000000	                            je 0x4006123	      1113	sched.c	FUNCTION_66	IF_2
0x4006071	          0x4531c0	                            xor r8d, r8d	      1163	sched.c	FUNCTION_69	CALL_3
0x4006074	            0x31d2	                            xor edx, edx	      1163	sched.c	FUNCTION_69	CALL_3
0x4006076	      0xb900200000	                         mov ecx, 0x2000	      1163	sched.c	FUNCTION_69	CALL_3
0x400607b	      0xbee0000000	                           mov esi, 0xe0	      1163	sched.c	FUNCTION_69	CALL_3
0x4006080	    0x48c7c7000000	                              mov rdi, 0	      1163	sched.c	FUNCTION_69	CALL_3
0x4006087	    0x488905000000	            mov qword [0x0400608e], rax 	      1115	sched.c	FUNCTION_66
0x400608e	      0xe800000000	                          call 0x4006093	      1163	sched.c	FUNCTION_69	CALL_3
0x4006093	          0x4885c0	                           test rax, rax	      1167	sched.c	FUNCTION_69	IF_2
0x4006096	    0x488905000000	            mov qword [0x0400609d], rax 	      1163	sched.c	FUNCTION_69	CALL_3
0x400609d	     0xf8497000000	                            je 0x400613a	      1167	sched.c	FUNCTION_69	IF_2
0x40060a3	          0x4531c0	                            xor r8d, r8d	      1169	sched.c	FUNCTION_69	CALL_4
0x40060a6	            0x31d2	                            xor edx, edx	      1169	sched.c	FUNCTION_69	CALL_4
0x40060a8	      0xb900200000	                         mov ecx, 0x2000	      1169	sched.c	FUNCTION_69	CALL_4
0x40060ad	      0xbe00080000	                          mov esi, 0x800	      1169	sched.c	FUNCTION_69	CALL_4
0x40060b2	    0x48c7c7000000	                              mov rdi, 0	      1169	sched.c	FUNCTION_69	CALL_4
0x40060b9	      0xe800000000	                          call 0x40060be	      1169	sched.c	FUNCTION_69	CALL_4
0x40060be	          0x4885c0	                           test rax, rax	      1173	sched.c	FUNCTION_69	IF_3
0x40060c1	    0x488905000000	            mov qword [0x040060c8], rax 	      1169	sched.c	FUNCTION_69	CALL_4
0x40060c8	            0x7470	                            je 0x400613a	      1173	sched.c	FUNCTION_69	IF_3
0x40060ca	    0x488b0d000000	            mov rcx, qword [0x040060d1] 	        69	mempool.h	FUNCTION_73	CALL_1
0x40060d1	    0x48c7c2000000	                              mov rdx, 0	        69	mempool.h	FUNCTION_73	CALL_1
0x40060d8	    0x48c7c6000000	                              mov rsi, 0	        69	mempool.h	FUNCTION_73	CALL_1
0x40060df	      0xbf08000000	                              mov edi, 8	        69	mempool.h	FUNCTION_73	CALL_1
0x40060e4	      0xe800000000	                          call 0x40060e9	        69	mempool.h	FUNCTION_73	CALL_1
0x40060e9	          0x4885c0	                           test rax, rax	      1177	sched.c	FUNCTION_69	IF_4
0x40060ec	    0x488905000000	            mov qword [0x040060f3], rax 	      1175	sched.c	FUNCTION_69	CALL_5
0x40060f3	            0x7445	                            je 0x400613a	      1177	sched.c	FUNCTION_69	IF_4
0x40060f5	    0x488b0d000000	            mov rcx, qword [0x040060fc] 	        69	mempool.h	FUNCTION_73	CALL_1
0x40060fc	    0x48c7c2000000	                              mov rdx, 0	        69	mempool.h	FUNCTION_73	CALL_1
0x4006103	    0x48c7c6000000	                              mov rsi, 0	        69	mempool.h	FUNCTION_73	CALL_1
0x400610a	      0xbf08000000	                              mov edi, 8	        69	mempool.h	FUNCTION_73	CALL_1
0x400610f	      0xe800000000	                          call 0x4006114	        69	mempool.h	FUNCTION_73	CALL_1
0x4006114	          0x4885c0	                           test rax, rax	      1181	sched.c	FUNCTION_69	IF_5
0x4006117	    0x488905000000	            mov qword [0x0400611e], rax 	      1179	sched.c	FUNCTION_69	CALL_6
0x400611e	            0x741a	                            je 0x400613a	      1181	sched.c	FUNCTION_69	IF_5
0x4006120	            0x31c0	                            xor eax, eax	      1183	sched.c	FUNCTION_69
0x4006122	              0xc3	                                     ret	      1183	sched.c	FUNCTION_69
0x4006123	    0x488b3d000000	            mov rdi, qword [0x0400612a] 	      1118	sched.c	FUNCTION_66
0x400612a	    0x48c705000000	               mov qword [0x04006135], 0	      1119	sched.c	FUNCTION_66
0x4006135	      0xe800000000	                          call 0x400613a	      1120	sched.c	FUNCTION_66	CALL_4
0x400613a	      0xe800000000	                          call 0x400613f	      1185	sched.c	FUNCTION_69	CALL_7
0x400613f	      0xb8f4ffffff	                     mov eax, 0xfffffff4	      1186	sched.c	FUNCTION_69
0x4006144	              0xc3	                                     ret	      1187	sched.c	FUNCTION_69
rpciod_up	WHILE,0:IF,0:ELSE,0:CALL,1:functions,0:FOR,0:DO,0:SWITCH,0	6
0x4005f80	            0x31ff	                            xor edi, edi	      1088	sched.c	FUNCTION_64	CALL_1
0x4005f82	      0xe800000000	                          call 0x4005f87	      1088	sched.c	FUNCTION_64	CALL_1
0x4005f87	            0x3c01	                               cmp al, 1	      1088	sched.c	FUNCTION_64	CALL_1
0x4005f89	            0x19c0	                            sbb eax, eax	      1088	sched.c	FUNCTION_64	CALL_1
0x4005f8b	          0x83e0ea	                     and eax, 0xffffffea	      1088	sched.c	FUNCTION_64	CALL_1
0x4005f8e	              0xc3	                                     ret	      1089	sched.c	FUNCTION_64
rpc_prepare_task	WHILE,0:IF,0:ELSE,0:CALL,1:functions,0:FOR,0:DO,0:SWITCH,0	4
0x40000d0	    0x488b87a00000	            mov rax, qword [rdi + 0xa0] 	       694	sched.c	FUNCTION_42	CALL_1
0x40000d7	    0x488bb7980000	            mov rsi, qword [rdi + 0x98] 	       694	sched.c	FUNCTION_42	CALL_1
0x40000de	          0x488b00	                    mov rax, qword [rax]	       694	sched.c	FUNCTION_42	CALL_1
0x40000e1	      0xe900000000	                           jmp 0x40000e6	       694	sched.c	FUNCTION_42	CALL_1
rpciod_down	WHILE,0:IF,0:ELSE,0:CALL,1:functions,0:FOR,0:DO,0:SWITCH,0	2
0x4005f90	            0x31ff	                            xor edi, edi	      1093	sched.c	FUNCTION_65	CALL_1
0x4005f92	      0xe900000000	                           jmp 0x4005f97	      1093	sched.c	FUNCTION_65	CALL_1
rpc_wake_up_next	WHILE,0:IF,0:ELSE,0:CALL,1:functions,0:FOR,0:DO,0:SWITCH,0	5
0x4005d70	          0x4889fe	                            mov rsi, rdi	       586	sched.c	FUNCTION_36
0x4005d73	    0x488b3d000000	            mov rdi, qword [0x04005d7a] 	       573	sched.c	FUNCTION_34	CALL_2
0x4005d7a	            0x31c9	                            xor ecx, ecx	       573	sched.c	FUNCTION_34	CALL_2
0x4005d7c	    0x48c7c2000000	                              mov rdx, 0	       573	sched.c	FUNCTION_34	CALL_2
0x4005d83	      0xe968feffff	         jmp sym.rpc_wake_up_first_on_wq	       573	sched.c	FUNCTION_34	CALL_2
rpc_free	WHILE,0:IF,1:ELSE,1:CALL,4:functions,0:FOR,0:DO,0:SWITCH,0	8
0x40020a0	    0x488b87b80000	            mov rax, qword [rdi + 0xb8] 	       915	sched.c	FUNCTION_52
0x40020a7	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       915	sched.c	FUNCTION_52
0x40020ae	    0x488178f80008	              cmp qword [rax - 8], 0x800	       925	sched.c	FUNCTION_52	IF_1
0x40020b6	        0x488d78f8	                      lea rdi, [rax - 8]	       919	sched.c	FUNCTION_52	CALL_1
0x40020ba	            0x7605	                           jbe 0x40020c1	       925	sched.c	FUNCTION_52	IF_1
0x40020bc	      0xe900000000	                           jmp 0x40020c1	       928	sched.c	FUNCTION_52	CALL_4
0x40020c1	    0x488b35000000	            mov rsi, qword [0x040020c8] 	       926	sched.c	FUNCTION_52	CALL_3
0x40020c8	      0xe900000000	                           jmp 0x40020cd	       926	sched.c	FUNCTION_52	CALL_3
rpc_wake_up_next_func	WHILE,0:IF,0:ELSE,0:CALL,0:functions,0:FOR,0:DO,0:SWITCH,0	2
0x40000b0	      0xb801000000	                              mov eax, 1	       580	sched.c	FUNCTION_35
0x40000b5	              0xc3	                                     ret	       580	sched.c	FUNCTION_35
rpc_put_task	WHILE,0:IF,0:ELSE,0:CALL,1:functions,0:FOR,0:DO,0:SWITCH,0	2
0x4002b30	            0x31f6	                            xor esi, esi	      1052	sched.c	FUNCTION_61	CALL_1
0x4002b32	            0xeb9c	                 jmp sym.rpc_do_put_task	      1052	sched.c	FUNCTION_61	CALL_1
rpc_async_schedule	WHILE,0:IF,0:ELSE,0:CALL,2:functions,0:FOR,0:DO,0:SWITCH,0	2
0x4002a90	        0x4883ef40	                           sub rdi, 0x40	       857	sched.c	FUNCTION_50	CALL_2
0x4002a94	      0xe9d7fcffff	                   jmp sym.__rpc_execute	       857	sched.c	FUNCTION_50	CALL_2
rpc_release_resources_task	WHILE,0:IF,1:ELSE,0:CALL,3:functions,0:FOR,0:DO,0:SWITCH,0	11
0x4001d90	              0x53	                                push rbx	      1023	sched.c	FUNCTION_58
0x4001d91	          0x4889fb	                            mov rbx, rdi	      1023	sched.c	FUNCTION_58
0x4001d94	      0xe800000000	                          call 0x4001d99	      1024	sched.c	FUNCTION_58	CALL_1
0x4001d99	    0x488bbb900000	            mov rdi, qword [rbx + 0x90] 	      1025	sched.c	FUNCTION_58	IF_1
0x4001da0	          0x4885ff	                           test rdi, rdi	      1025	sched.c	FUNCTION_58	IF_1
0x4001da3	            0x7410	                            je 0x4001db5	      1025	sched.c	FUNCTION_58	IF_1
0x4001da5	      0xe800000000	                          call 0x4001daa	      1026	sched.c	FUNCTION_58	IF_1	CALL_2
0x4001daa	    0x48c783900000	               mov qword [rbx + 0x90], 0	      1027	sched.c	FUNCTION_58	IF_1
0x4001db5	          0x4889df	                            mov rdi, rbx	      1029	sched.c	FUNCTION_58	CALL_3
0x4001db8	              0x5b	                                 pop rbx	      1030	sched.c	FUNCTION_58
0x4001db9	      0xe900000000	                           jmp 0x4001dbe	      1029	sched.c	FUNCTION_58	CALL_3
__rpc_wait_for_completion_task	WHILE,0:IF,1:ELSE,0:CALL,1:functions,0:FOR,0:DO,0:SWITCH,0	8
0x4001c50	          0x4885f6	                           test rsi, rsi	       315	sched.c	FUNCTION_21	IF_1
0x4001c53	          0x4889f2	                            mov rdx, rsi	       313	sched.c	FUNCTION_21
0x4001c56	    0x48c7c0000000	                              mov rax, 0	       315	sched.c	FUNCTION_21	IF_1
0x4001c5d	        0x480f44d0	                          cmove rdx, rax	       315	sched.c	FUNCTION_21	IF_1
0x4001c61	      0xb902010000	                          mov ecx, 0x102	       316	sched.c	FUNCTION_21	CALL_1
0x4001c66	        0x4883c730	                           add rdi, 0x30	       316	sched.c	FUNCTION_21	CALL_1
0x4001c6a	      0xbe02000000	                              mov esi, 2	       316	sched.c	FUNCTION_21	CALL_1
0x4001c6f	      0xe900000000	                           jmp 0x4001c74	       316	sched.c	FUNCTION_21	CALL_1
