nfs4_callback_null	DO,0:SWITCH,0:CALL,1:ELSE,0:WHILE,0:functions,0:IF,0:FOR,0	2
0x4000040	            0x31c0	                            xor eax, eax	        60	callback_xdr.c	FUNCTION_1
0x4000042	              0xc3	                                     ret	        60	callback_xdr.c	FUNCTION_1
decode_fh	DO,0:SWITCH,0:CALL,10:ELSE,0:WHILE,0:functions,0:IF,3:FOR,0	71
0x4000090	            0x4154	                                push r12	        95	callback_xdr.c	FUNCTION_6
0x4000092	              0x55	                                push rbp	        95	callback_xdr.c	FUNCTION_6
0x4000093	          0x4889fd	                            mov rbp, rdi	        95	callback_xdr.c	FUNCTION_6
0x4000096	              0x53	                                push rbx	        95	callback_xdr.c	FUNCTION_6
0x4000097	          0x4889f3	                            mov rbx, rsi	        95	callback_xdr.c	FUNCTION_6
0x400009a	      0xbe04000000	                              mov esi, 4	        76	callback_xdr.c	FUNCTION_4	CALL_1
0x400009f	      0xe800000000	                          call 0x40000a4	        76	callback_xdr.c	FUNCTION_4	CALL_1
0x40000a4	          0x4885c0	                           test rax, rax	        77	callback_xdr.c	FUNCTION_4	IF_1	CALL_2
0x40000a7	            0x746f	                            je 0x4000118	        77	callback_xdr.c	FUNCTION_4	IF_1	CALL_2
0x40000a9	            0x8b10	                    mov edx, dword [rax]	       101	callback_xdr.c	FUNCTION_6	CALL_4
0x40000ab	      0xb800002711	                     mov eax, 0x11270000	       103	callback_xdr.c	FUNCTION_6	CALL_5
0x40000b0	             0xfca	                               bswap edx	       101	callback_xdr.c	FUNCTION_6	CALL_4
0x40000b2	      0x6681fa8000	                            cmp dx, 0x80	       102	callback_xdr.c	FUNCTION_6	IF_2
0x40000b7	           0xfb7f2	                           movzx esi, dx	       101	callback_xdr.c	FUNCTION_6	CALL_4
0x40000ba	          0x668913	                      mov word [rbx], dx	       101	callback_xdr.c	FUNCTION_6	CALL_4
0x40000bd	            0x7605	                           jbe 0x40000c4	       102	callback_xdr.c	FUNCTION_6	IF_2
0x40000bf	              0x5b	                                 pop rbx	       110	callback_xdr.c	FUNCTION_6
0x40000c0	              0x5d	                                 pop rbp	       110	callback_xdr.c	FUNCTION_6
0x40000c1	            0x415c	                                 pop r12	       110	callback_xdr.c	FUNCTION_6
0x40000c3	              0xc3	                                     ret	       110	callback_xdr.c	FUNCTION_6
0x40000c4	          0x4889ef	                            mov rdi, rbp	        76	callback_xdr.c	FUNCTION_4	CALL_1
0x40000c7	      0xe800000000	                          call 0x40000cc	        76	callback_xdr.c	FUNCTION_4	CALL_1
0x40000cc	          0x4885c0	                           test rax, rax	        77	callback_xdr.c	FUNCTION_4	IF_1	CALL_2
0x40000cf	            0x7447	                            je 0x4000118	        77	callback_xdr.c	FUNCTION_4	IF_1	CALL_2
0x40000d1	        0x440fb723	                  movzx r12d, word [rbx]	       107	callback_xdr.c	FUNCTION_6	CALL_9
0x40000d5	        0x488d7b02	                      lea rdi, [rbx + 2]	       107	callback_xdr.c	FUNCTION_6	CALL_9
0x40000d9	          0x4889c6	                            mov rsi, rax	       107	callback_xdr.c	FUNCTION_6	CALL_9
0x40000dc	          0x4c89e2	                            mov rdx, r12	       107	callback_xdr.c	FUNCTION_6	CALL_9
0x40000df	          0x4c01e3	                            add rbx, r12	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x40000e2	      0xe800000000	                          call 0x40000e7	       107	callback_xdr.c	FUNCTION_6	CALL_9
0x40000e7	      0xb880000000	                           mov eax, 0x80	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x40000ec	        0x488d4b02	                      lea rcx, [rbx + 2]	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x40000f0	          0x4c29e0	                            sub rax, r12	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x40000f3	        0x4883f808	                              cmp rax, 8	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x40000f7	            0x7335	                           jae 0x400012e	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x40000f9	            0xa804	                              test al, 4	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x40000fb	            0x755d	                           jne 0x400015a	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x40000fd	          0x4885c0	                           test rax, rax	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x4000100	            0x740f	                            je 0x4000111	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x4000102	            0xa802	                              test al, 2	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x4000104	        0xc6430200	                   mov byte [rbx + 2], 0	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x4000108	            0x7407	                            je 0x4000111	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x400010a	            0x31d2	                            xor edx, edx	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x400010c	      0x66895401fe	            mov word [rcx + rax - 2], dx	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x4000111	            0x31c0	                            xor eax, eax	       109	callback_xdr.c	FUNCTION_6
0x4000113	              0x5b	                                 pop rbx	       110	callback_xdr.c	FUNCTION_6
0x4000114	              0x5d	                                 pop rbp	       110	callback_xdr.c	FUNCTION_6
0x4000115	            0x415c	                                 pop r12	       110	callback_xdr.c	FUNCTION_6
0x4000117	              0xc3	                                     ret	       110	callback_xdr.c	FUNCTION_6
0x4000118	    0x48c7c7000000	                              mov rdi, 0	        78	callback_xdr.c	FUNCTION_4	CALL_3
0x400011f	      0xe800000000	                          call 0x4000124	        78	callback_xdr.c	FUNCTION_4	CALL_3
0x4000124	      0xb800002722	                     mov eax, 0x22270000	       100	callback_xdr.c	FUNCTION_6	CALL_3
0x4000129	              0x5b	                                 pop rbx	       110	callback_xdr.c	FUNCTION_6
0x400012a	              0x5d	                                 pop rbp	       110	callback_xdr.c	FUNCTION_6
0x400012b	            0x415c	                                 pop r12	       110	callback_xdr.c	FUNCTION_6
0x400012d	              0xc3	                                     ret	       110	callback_xdr.c	FUNCTION_6
0x400012e	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x4000132	    0x48c743020000	                  mov qword [rbx + 2], 0	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x400013a	    0x48c74401f800	            mov qword [rcx + rax - 8], 0	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x4000143	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x4000147	          0x4829f9	                            sub rcx, rdi	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x400014a	          0x4801c1	                            add rcx, rax	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x400014d	            0x31c0	                            xor eax, eax	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x400014f	        0x48c1e903	                              shr rcx, 3	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x4000153	          0xf348ab	              rep stosq qword [rdi], rax	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x4000156	            0x31c0	                            xor eax, eax	       109	callback_xdr.c	FUNCTION_6
0x4000158	            0xebb9	                           jmp 0x4000113	       109	callback_xdr.c	FUNCTION_6
0x400015a	    0xc74302000000	                  mov dword [rbx + 2], 0	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x4000161	    0xc74401fc0000	            mov dword [rcx + rax - 4], 0	       108	callback_xdr.c	FUNCTION_6	CALL_10
0x4000169	            0x31c0	                            xor eax, eax	       109	callback_xdr.c	FUNCTION_6
0x400016b	            0xeba6	                           jmp 0x4000113	       109	callback_xdr.c	FUNCTION_6
decode_getattr_args	DO,0:SWITCH,0:CALL,3:ELSE,0:WHILE,0:functions,0:IF,1:FOR,0	44
0x4000220	            0x4154	                                push r12	       185	callback_xdr.c	FUNCTION_12
0x4000222	              0x55	                                push rbp	       185	callback_xdr.c	FUNCTION_12
0x4000223	          0x4889f5	                            mov rbp, rsi	       185	callback_xdr.c	FUNCTION_12
0x4000226	              0x53	                                push rbx	       185	callback_xdr.c	FUNCTION_12
0x4000227	          0x4889d6	                            mov rsi, rdx	       189	callback_xdr.c	FUNCTION_12	CALL_1
0x400022a	          0x4889ef	                            mov rdi, rbp	       189	callback_xdr.c	FUNCTION_12	CALL_1
0x400022d	          0x4989d4	                            mov r12, rdx	       185	callback_xdr.c	FUNCTION_12
0x4000230	      0xe85bfeffff	                      call sym.decode_fh	       189	callback_xdr.c	FUNCTION_12	CALL_1
0x4000235	            0x85c0	                           test eax, eax	       190	callback_xdr.c	FUNCTION_12	IF_1	CALL_2
0x4000237	            0x754e	                           jne 0x4000287	       190	callback_xdr.c	FUNCTION_12	IF_1	CALL_2
0x4000239	      0xbe04000000	                              mov esi, 4	        76	callback_xdr.c	FUNCTION_4	CALL_1
0x400023e	          0x4889ef	                            mov rdi, rbp	        76	callback_xdr.c	FUNCTION_4	CALL_1
0x4000241	      0xe800000000	                          call 0x4000246	        76	callback_xdr.c	FUNCTION_4	CALL_1
0x4000246	          0x4885c0	                           test rax, rax	        77	callback_xdr.c	FUNCTION_4	IF_1	CALL_2
0x4000249	            0x7441	                            je 0x400028c	        77	callback_xdr.c	FUNCTION_4	IF_1	CALL_2
0x400024b	            0x8b18	                    mov ebx, dword [rax]	       120	callback_xdr.c	FUNCTION_7	CALL_4
0x400024d	          0x4889ef	                            mov rdi, rbp	        76	callback_xdr.c	FUNCTION_4	CALL_1
0x4000250	             0xfcb	                               bswap ebx	       120	callback_xdr.c	FUNCTION_7	CALL_4
0x4000252	    0x8d349d000000	                        lea esi, [rbx*4]	        76	callback_xdr.c	FUNCTION_4	CALL_1
0x4000259	      0xe800000000	                          call 0x400025e	        76	callback_xdr.c	FUNCTION_4	CALL_1
0x400025e	          0x4885c0	                           test rax, rax	        77	callback_xdr.c	FUNCTION_4	IF_1	CALL_2
0x4000261	            0x7429	                            je 0x400028c	        77	callback_xdr.c	FUNCTION_4	IF_1	CALL_2
0x4000263	            0x85db	                           test ebx, ebx	       124	callback_xdr.c	FUNCTION_7	IF_3	CALL_8
0x4000265	            0x741e	                            je 0x4000285	       124	callback_xdr.c	FUNCTION_7	IF_3	CALL_8
0x4000267	            0x8b10	                    mov edx, dword [rax]	       125	callback_xdr.c	FUNCTION_7	CALL_9
0x4000269	          0x83fb01	                              cmp ebx, 1	       126	callback_xdr.c	FUNCTION_7	IF_4
0x400026c	             0xfca	                               bswap edx	       125	callback_xdr.c	FUNCTION_7	CALL_9
0x400026e	    0x418994248400	             mov dword [r12 + 0x84], edx	       125	callback_xdr.c	FUNCTION_7	CALL_9
0x4000276	            0x740d	                            je 0x4000285	       126	callback_xdr.c	FUNCTION_7	IF_4
0x4000278	          0x8b4004	                mov eax, dword [rax + 4]	       127	callback_xdr.c	FUNCTION_7	CALL_10
0x400027b	             0xfc8	                               bswap eax	       127	callback_xdr.c	FUNCTION_7	CALL_10
0x400027d	    0x418984248800	             mov dword [r12 + 0x88], eax	       127	callback_xdr.c	FUNCTION_7	CALL_10
0x4000285	            0x31c0	                            xor eax, eax	       128	callback_xdr.c	FUNCTION_7
0x4000287	              0x5b	                                 pop rbx	       193	callback_xdr.c	FUNCTION_12
0x4000288	              0x5d	                                 pop rbp	       193	callback_xdr.c	FUNCTION_12
0x4000289	            0x415c	                                 pop r12	       193	callback_xdr.c	FUNCTION_12
0x400028b	              0xc3	                                     ret	       193	callback_xdr.c	FUNCTION_12
0x400028c	    0x48c7c7000000	                              mov rdi, 0	        78	callback_xdr.c	FUNCTION_4	CALL_3
0x4000293	      0xe800000000	                          call 0x4000298	        78	callback_xdr.c	FUNCTION_4	CALL_3
0x4000298	      0xb800002722	                     mov eax, 0x22270000	       119	callback_xdr.c	FUNCTION_7	CALL_3
0x400029d	              0x5b	                                 pop rbx	       193	callback_xdr.c	FUNCTION_12
0x400029e	              0x5d	                                 pop rbp	       193	callback_xdr.c	FUNCTION_12
0x400029f	            0x415c	                                 pop r12	       193	callback_xdr.c	FUNCTION_12
0x40002a1	              0xc3	                                     ret	       193	callback_xdr.c	FUNCTION_12
decode_recall_args	DO,0:SWITCH,0:CALL,7:ELSE,0:WHILE,0:functions,0:IF,2:FOR,0	51
0x4000170	            0x4155	                                push r13	       197	callback_xdr.c	FUNCTION_13
0x4000172	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	       197	callback_xdr.c	FUNCTION_13
0x4000177	        0x4883e4f0	             and rsp, 0xfffffffffffffff0	       197	callback_xdr.c	FUNCTION_13
0x400017b	        0x41ff75f8	                    push qword [r13 - 8]	       197	callback_xdr.c	FUNCTION_13
0x400017f	              0x55	                                push rbp	       197	callback_xdr.c	FUNCTION_13
0x4000180	          0x4889e5	                            mov rbp, rsp	       197	callback_xdr.c	FUNCTION_13
0x4000183	            0x4155	                                push r13	       197	callback_xdr.c	FUNCTION_13
0x4000185	            0x4154	                                push r12	       197	callback_xdr.c	FUNCTION_13
0x4000187	              0x53	                                push rbx	       197	callback_xdr.c	FUNCTION_13
0x4000188	          0x4989f4	                            mov r12, rsi	       197	callback_xdr.c	FUNCTION_13
0x400018b	      0xbe10000000	                           mov esi, 0x10	        76	callback_xdr.c	FUNCTION_4	CALL_1
0x4000190	          0x4c89e7	                            mov rdi, r12	        76	callback_xdr.c	FUNCTION_4	CALL_1
0x4000193	          0x4889d3	                            mov rbx, rdx	       197	callback_xdr.c	FUNCTION_13
0x4000196	        0x4883ec08	                              sub rsp, 8	       197	callback_xdr.c	FUNCTION_13
0x400019a	    0xc78294000000	               mov dword [rdx + 0x94], 4	       144	callback_xdr.c	FUNCTION_9
0x40001a4	      0xe800000000	                          call 0x40001a9	        76	callback_xdr.c	FUNCTION_4	CALL_1
0x40001a9	          0x4885c0	                           test rax, rax	        77	callback_xdr.c	FUNCTION_4	IF_1	CALL_2
0x40001ac	            0x744c	                            je 0x40001fa	        77	callback_xdr.c	FUNCTION_4	IF_1	CALL_2
0x40001ae	        0x488b5008	                mov rdx, qword [rax + 8]	       138	callback_xdr.c	FUNCTION_8	CALL_4
0x40001b2	          0x488b00	                    mov rax, qword [rax]	       138	callback_xdr.c	FUNCTION_8	CALL_4
0x40001b5	      0xbe04000000	                              mov esi, 4	        76	callback_xdr.c	FUNCTION_4	CALL_1
0x40001ba	          0x4c89e7	                            mov rdi, r12	        76	callback_xdr.c	FUNCTION_4	CALL_1
0x40001bd	    0x488983840000	             mov qword [rbx + 0x84], rax	       138	callback_xdr.c	FUNCTION_8	CALL_4
0x40001c4	    0x4889938c0000	             mov qword [rbx + 0x8c], rdx	       138	callback_xdr.c	FUNCTION_8	CALL_4
0x40001cb	      0xe800000000	                          call 0x40001d0	        76	callback_xdr.c	FUNCTION_4	CALL_1
0x40001d0	          0x4885c0	                           test rax, rax	        77	callback_xdr.c	FUNCTION_4	IF_1	CALL_2
0x40001d3	            0x7425	                            je 0x40001fa	        77	callback_xdr.c	FUNCTION_4	IF_1	CALL_2
0x40001d5	            0x8b00	                    mov eax, dword [rax]	       208	callback_xdr.c	FUNCTION_13	CALL_6
0x40001d7	          0x4889de	                            mov rsi, rbx	       209	callback_xdr.c	FUNCTION_13	CALL_7
0x40001da	          0x4c89e7	                            mov rdi, r12	       209	callback_xdr.c	FUNCTION_13	CALL_7
0x40001dd	             0xfc8	                               bswap eax	       208	callback_xdr.c	FUNCTION_13	CALL_6
0x40001df	    0x898398000000	             mov dword [rbx + 0x98], eax	       208	callback_xdr.c	FUNCTION_13	CALL_6
0x40001e5	        0x4883c408	                              add rsp, 8	       210	callback_xdr.c	FUNCTION_13
0x40001e9	              0x5b	                                 pop rbx	       210	callback_xdr.c	FUNCTION_13
0x40001ea	            0x415c	                                 pop r12	       210	callback_xdr.c	FUNCTION_13
0x40001ec	            0x415d	                                 pop r13	       210	callback_xdr.c	FUNCTION_13
0x40001ee	              0x5d	                                 pop rbp	       210	callback_xdr.c	FUNCTION_13
0x40001ef	        0x498d65f0	                   lea rsp, [r13 - 0x10]	       210	callback_xdr.c	FUNCTION_13
0x40001f3	            0x415d	                                 pop r13	       210	callback_xdr.c	FUNCTION_13
0x40001f5	      0xe996feffff	                       jmp sym.decode_fh	       209	callback_xdr.c	FUNCTION_13	CALL_7
0x40001fa	    0x48c7c7000000	                              mov rdi, 0	        78	callback_xdr.c	FUNCTION_4	CALL_3
0x4000201	      0xe800000000	                          call 0x4000206	        78	callback_xdr.c	FUNCTION_4	CALL_3
0x4000206	        0x4883c408	                              add rsp, 8	       210	callback_xdr.c	FUNCTION_13
0x400020a	      0xb800002722	                     mov eax, 0x22270000	       210	callback_xdr.c	FUNCTION_13
0x400020f	              0x5b	                                 pop rbx	       210	callback_xdr.c	FUNCTION_13
0x4000210	            0x415c	                                 pop r12	       210	callback_xdr.c	FUNCTION_13
0x4000212	            0x415d	                                 pop r13	       210	callback_xdr.c	FUNCTION_13
0x4000214	              0x5d	                                 pop rbp	       210	callback_xdr.c	FUNCTION_13
0x4000215	        0x498d65f0	                   lea rsp, [r13 - 0x10]	       210	callback_xdr.c	FUNCTION_13
0x4000219	            0x415d	                                 pop r13	       210	callback_xdr.c	FUNCTION_13
0x400021b	              0xc3	                                     ret	       210	callback_xdr.c	FUNCTION_13
