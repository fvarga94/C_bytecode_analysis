rtc_device_release	WHILE,0:ELSE,0:CALL,3:DO,0:SWITCH,0:FOR,0:functions,0:IF,0	8
0x4000050	              0x53	                                push rbx	        31	class.c	FUNCTION_1
0x4000051	    0x8bb7d8020000	           mov esi, dword [rdi + 0x2d8] 	        33	class.c	FUNCTION_1	CALL_2
0x4000057	          0x4889fb	                            mov rbx, rdi	        31	class.c	FUNCTION_1
0x400005a	    0x48c7c7000000	                              mov rdi, 0	        33	class.c	FUNCTION_1	CALL_2
0x4000061	      0xe800000000	                          call 0x4000066	        33	class.c	FUNCTION_1	CALL_2
0x4000066	          0x4889df	                            mov rdi, rbx	        34	class.c	FUNCTION_1	CALL_3
0x4000069	              0x5b	                                 pop rbx	        35	class.c	FUNCTION_1
0x400006a	      0xe900000000	                           jmp 0x400006f	        34	class.c	FUNCTION_1	CALL_3
devm_rtc_device_release	WHILE,0:ELSE,0:CALL,2:DO,0:SWITCH,0:FOR,0:functions,0:IF,0	7
0x40000c0	              0x53	                                push rbx	       379	class.c	FUNCTION_9
0x40000c1	          0x488b1e	                    mov rbx, qword [rsi]	       380	class.c	FUNCTION_9
0x40000c4	          0x4889df	                            mov rdi, rbx	       382	class.c	FUNCTION_9	CALL_1
0x40000c7	      0xe800000000	                          call 0x40000cc	       382	class.c	FUNCTION_9	CALL_1
0x40000cc	          0x4889df	                            mov rdi, rbx	       383	class.c	FUNCTION_9	CALL_2
0x40000cf	              0x5b	                                 pop rbx	       384	class.c	FUNCTION_9
0x40000d0	            0xeb9e	           jmp sym.rtc_device_unregister	       383	class.c	FUNCTION_9	CALL_2
devm_rtc_device_register	WHILE,0:ELSE,1:CALL,6:DO,0:SWITCH,0:FOR,0:functions,0:IF,2	42
0x4000620	            0x4156	                                push r14	       411	class.c	FUNCTION_11
0x4000622	            0x4155	                                push r13	       411	class.c	FUNCTION_11
0x4000624	          0x4989ce	                            mov r14, rcx	       411	class.c	FUNCTION_11
0x4000627	            0x4154	                                push r12	       411	class.c	FUNCTION_11
0x4000629	              0x55	                                push rbp	       411	class.c	FUNCTION_11
0x400062a	          0x4989fc	                            mov r12, rdi	       411	class.c	FUNCTION_11
0x400062d	              0x53	                                push rbx	       411	class.c	FUNCTION_11
0x400062e	          0x4989d5	                            mov r13, rdx	       411	class.c	FUNCTION_11
0x4000631	          0x4889f3	                            mov rbx, rsi	       411	class.c	FUNCTION_11
0x4000634	    0x49c7c0000000	                               mov r8, 0	       414	class.c	FUNCTION_11	CALL_1
0x400063b	      0xb9ffffffff	                     mov ecx, 0xffffffff	       414	class.c	FUNCTION_11	CALL_1
0x4000640	      0xbac0004001	                      mov edx, 0x14000c0	       414	class.c	FUNCTION_11	CALL_1
0x4000645	      0xbe08000000	                              mov esi, 8	       414	class.c	FUNCTION_11	CALL_1
0x400064a	    0x48c7c7000000	                              mov rdi, 0	       414	class.c	FUNCTION_11	CALL_1
0x4000651	      0xe800000000	                          call 0x4000656	       414	class.c	FUNCTION_11	CALL_1
0x4000656	          0x4889c5	                            mov rbp, rax	       414	class.c	FUNCTION_11	CALL_1
0x4000659	    0x48c7c0f4ffff	             mov rax, 0xfffffffffffffff4	       416	class.c	FUNCTION_11	CALL_2
0x4000660	          0x4885ed	                           test rbp, rbp	       415	class.c	FUNCTION_11	IF_1
0x4000663	            0x742e	                            je 0x4000693	       415	class.c	FUNCTION_11	IF_1
0x4000665	          0x4889df	                            mov rdi, rbx	       418	class.c	FUNCTION_11	CALL_3
0x4000668	          0x4c89f1	                            mov rcx, r14	       418	class.c	FUNCTION_11	CALL_3
0x400066b	          0x4c89ea	                            mov rdx, r13	       418	class.c	FUNCTION_11	CALL_3
0x400066e	          0x4c89e6	                            mov rsi, r12	       418	class.c	FUNCTION_11	CALL_3
0x4000671	      0xe800000000	                          call 0x4000676	       418	class.c	FUNCTION_11	CALL_3
0x4000676	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       419	class.c	FUNCTION_11	IF_2	CALL_4
0x400067c	          0x4889c3	                            mov rbx, rax	       418	class.c	FUNCTION_11	CALL_3
0x400067f	            0x771b	                            ja 0x400069c	       419	class.c	FUNCTION_11	IF_2	CALL_4
0x4000681	        0x48894500	                    mov qword [rbp], rax	       420	class.c	FUNCTION_11	IF_2
0x4000685	          0x4889ee	                            mov rsi, rbp	       421	class.c	FUNCTION_11	IF_2	CALL_5
0x4000688	          0x4c89e7	                            mov rdi, r12	       421	class.c	FUNCTION_11	IF_2	CALL_5
0x400068b	      0xe800000000	                          call 0x4000690	       421	class.c	FUNCTION_11	IF_2	CALL_5
0x4000690	          0x4889d8	                            mov rax, rbx	       426	class.c	FUNCTION_11
0x4000693	              0x5b	                                 pop rbx	       427	class.c	FUNCTION_11
0x4000694	              0x5d	                                 pop rbp	       427	class.c	FUNCTION_11
0x4000695	            0x415c	                                 pop r12	       427	class.c	FUNCTION_11
0x4000697	            0x415d	                                 pop r13	       427	class.c	FUNCTION_11
0x4000699	            0x415e	                                 pop r14	       427	class.c	FUNCTION_11
0x400069b	              0xc3	                                     ret	       427	class.c	FUNCTION_11
0x400069c	          0x4889ef	                            mov rdi, rbp	       423	class.c	FUNCTION_11	ELSE_1	CALL_6
0x400069f	      0xe800000000	                          call 0x40006a4	       423	class.c	FUNCTION_11	ELSE_1	CALL_6
0x40006a4	          0x4889d8	                            mov rax, rbx	       426	class.c	FUNCTION_11
0x40006a7	            0xebea	                           jmp 0x4000693	       426	class.c	FUNCTION_11
devm_rtc_release_device	WHILE,0:ELSE,1:CALL,3:DO,0:SWITCH,0:FOR,0:functions,0:IF,1	11
0x40000e0	              0x53	                                push rbx	       450	class.c	FUNCTION_13
0x40000e1	          0x488b1e	                    mov rbx, qword [rsi]	       451	class.c	FUNCTION_13
0x40000e4	          0x4889df	                            mov rdi, rbx	       453	class.c	FUNCTION_13	CALL_1
0x40000e7	      0xe800000000	                          call 0x40000ec	       453	class.c	FUNCTION_13	CALL_1
0x40000ec	    0x80bbc8040000	               cmp byte [rbx + 0x4c8], 0	       455	class.c	FUNCTION_13	IF_1
0x40000f3	          0x4889df	                            mov rdi, rbx	       456	class.c	FUNCTION_13	CALL_2
0x40000f6	            0x7506	                           jne 0x40000fe	       455	class.c	FUNCTION_13	IF_1
0x40000f8	              0x5b	                                 pop rbx	       459	class.c	FUNCTION_13
0x40000f9	      0xe900000000	                           jmp 0x40000fe	       458	class.c	FUNCTION_13	CALL_3
0x40000fe	              0x5b	                                 pop rbx	       459	class.c	FUNCTION_13
0x40000ff	      0xe96cffffff	           jmp sym.rtc_device_unregister	       456	class.c	FUNCTION_13	CALL_2
devm_rtc_device_match	WHILE,0:ELSE,0:CALL,0:DO,0:SWITCH,0:FOR,0:functions,0:IF,0	4
0x4000040	            0x31c0	                            xor eax, eax	       390	class.c	FUNCTION_10
0x4000042	          0x483916	                    cmp qword [rsi], rdx	       390	class.c	FUNCTION_10
0x4000045	           0xf94c0	                                 sete al	       390	class.c	FUNCTION_10
0x4000048	              0xc3	                                     ret	       391	class.c	FUNCTION_10
rtc_device_unregister	WHILE,0:ELSE,0:CALL,5:DO,0:SWITCH,0:FOR,0:functions,0:IF,0	18
0x4000070	              0x55	                                push rbp	       364	class.c	FUNCTION_8
0x4000071	    0x488dafe80200	                  lea rbp, [rdi + 0x2e8]	       365	class.c	FUNCTION_8	CALL_1
0x4000078	              0x53	                                push rbx	       364	class.c	FUNCTION_8
0x4000079	          0x4889fb	                            mov rbx, rdi	       364	class.c	FUNCTION_8
0x400007c	          0x4889ef	                            mov rdi, rbp	       365	class.c	FUNCTION_8	CALL_1
0x400007f	      0xe800000000	                          call 0x4000084	       365	class.c	FUNCTION_8	CALL_1
0x4000084	          0x4889df	                            mov rdi, rbx	       370	class.c	FUNCTION_8	CALL_2
0x4000087	      0xe800000000	                          call 0x400008c	       370	class.c	FUNCTION_8	CALL_2
0x400008c	    0x488dbb080300	                  lea rdi, [rbx + 0x308]	       371	class.c	FUNCTION_8	CALL_3
0x4000093	          0x4889de	                            mov rsi, rbx	       371	class.c	FUNCTION_8	CALL_3
0x4000096	      0xe800000000	                          call 0x400009b	       371	class.c	FUNCTION_8	CALL_3
0x400009b	          0x4889ef	                            mov rdi, rbp	       373	class.c	FUNCTION_8	CALL_4
0x400009e	    0x48c783e00200	              mov qword [rbx + 0x2e0], 0	       372	class.c	FUNCTION_8
0x40000a9	      0xe800000000	                          call 0x40000ae	       373	class.c	FUNCTION_8	CALL_4
0x40000ae	          0x4889df	                            mov rdi, rbx	       374	class.c	FUNCTION_8	CALL_5
0x40000b1	              0x5b	                                 pop rbx	       375	class.c	FUNCTION_8
0x40000b2	              0x5d	                                 pop rbp	       375	class.c	FUNCTION_8
0x40000b3	      0xe900000000	                           jmp 0x40000b8	       374	class.c	FUNCTION_8	CALL_5
