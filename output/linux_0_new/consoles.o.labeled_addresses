c_start	FOR,0:functions,0:SWITCH,0:WHILE,0:ELSE,0:CALL,2:DO,0:IF,1	19
0x40001a0	              0x53	                                push rbx	        63	consoles.c	FUNCTION_2
0x40001a1	          0x4889f3	                            mov rbx, rsi	        63	consoles.c	FUNCTION_2
0x40001a4	      0xe800000000	                          call 0x40001a9	        67	consoles.c	FUNCTION_2	CALL_1
0x40001a9	    0x488b05000000	            mov rax, qword [0x040001b0] 	        68	consoles.c	FUNCTION_2	CALL_2
0x40001b0	          0x4885c0	                           test rax, rax	        68	consoles.c	FUNCTION_2	CALL_2
0x40001b3	            0x741e	                            je 0x40001d3	        68	consoles.c	FUNCTION_2	CALL_2
0x40001b5	          0x488b0b	                    mov rcx, qword [rbx]	        69	consoles.c	FUNCTION_2	IF_1
0x40001b8	          0x4885c9	                           test rcx, rcx	        69	consoles.c	FUNCTION_2	IF_1
0x40001bb	            0x7416	                            je 0x40001d3	        69	consoles.c	FUNCTION_2	IF_1
0x40001bd	            0x31d2	                            xor edx, edx	        69	consoles.c	FUNCTION_2	IF_1
0x40001bf	            0xeb09	                           jmp 0x40001ca	        69	consoles.c	FUNCTION_2	IF_1
0x40001c1	        0x4883c201	                              add rdx, 1	        69	consoles.c	FUNCTION_2	IF_1
0x40001c5	          0x4839ca	                            cmp rdx, rcx	        69	consoles.c	FUNCTION_2	IF_1
0x40001c8	            0x7409	                            je 0x40001d3	        69	consoles.c	FUNCTION_2	IF_1
0x40001ca	        0x488b4050	            mov rax, qword [rax + 0x50] 	        68	consoles.c	FUNCTION_2	CALL_2
0x40001ce	          0x4885c0	                           test rax, rax	        68	consoles.c	FUNCTION_2	CALL_2
0x40001d1	            0x75ee	                           jne 0x40001c1	        68	consoles.c	FUNCTION_2	CALL_2
0x40001d3	              0x5b	                                 pop rbx	        73	consoles.c	FUNCTION_2
0x40001d4	              0xc3	                                     ret	        73	consoles.c	FUNCTION_2
c_stop	FOR,0:functions,0:SWITCH,0:WHILE,0:ELSE,0:CALL,1:DO,0:IF,0	1
0x4000190	      0xe900000000	                           jmp 0x4000195	        84	consoles.c	FUNCTION_4	CALL_1
proc_consoles_init	FOR,0:functions,0:SWITCH,0:WHILE,0:ELSE,0:CALL,1:DO,0:IF,0	11
0x4000040	        0x48830201	                      add qword [rdx], 1	        78	consoles.c	FUNCTION_3
0x4000044	        0x488b4650	            mov rax, qword [rsi + 0x50] 	        79	consoles.c	FUNCTION_3
0x4000048	              0xc3	                                     ret	        80	consoles.c	FUNCTION_3
0x4000049	     0xf1f80000000	                         nop dword [rax]	        80	consoles.c	FUNCTION_3
0x4000050	            0x4154	                                push r12	        17	consoles.c	FUNCTION_1
0x4000052	              0x55	                                push rbp	        17	consoles.c	FUNCTION_1
0x4000053	            0x31ed	                            xor ebp, ebp	        32	consoles.c	FUNCTION_1
0x4000055	              0x53	                                push rbx	        17	consoles.c	FUNCTION_1
0x4000056	          0x4989fc	                            mov r12, rdi	        17	consoles.c	FUNCTION_1
0x4000059	          0x4889f3	                            mov rbx, rsi	        17	consoles.c	FUNCTION_1
0x400005c	        0x4883ec18	                           sub rsp, 0x18	        17	consoles.c	FUNCTION_1
c_next	FOR,0:functions,0:SWITCH,0:WHILE,0:ELSE,0:CALL,0:DO,0:IF,0	3
0x4000040	        0x48830201	                      add qword [rdx], 1	        78	consoles.c	FUNCTION_3
0x4000044	        0x488b4650	            mov rax, qword [rsi + 0x50] 	        79	consoles.c	FUNCTION_3
0x4000048	              0xc3	                                     ret	        80	consoles.c	FUNCTION_3
