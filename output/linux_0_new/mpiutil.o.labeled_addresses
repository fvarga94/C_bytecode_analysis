mpi_free	DO,0:FOR,0:functions,0:CALL,4:IF,3:ELSE,1:WHILE,0:SWITCH,0	21
0x4000040	          0x4885ff	                           test rdi, rdi	       111	mpiutil.c	FUNCTION_6	IF_1
0x4000043	            0x742a	                            je 0x400006f	       111	mpiutil.c	FUNCTION_6	IF_1
0x4000045	              0x53	                                push rbx	       110	mpiutil.c	FUNCTION_6
0x4000046	          0x8b4710	            mov eax, dword [rdi + 0x10] 	       114	mpiutil.c	FUNCTION_6	IF_2
0x4000049	          0x4889fb	                            mov rbx, rdi	       114	mpiutil.c	FUNCTION_6	IF_2
0x400004c	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       115	mpiutil.c	FUNCTION_6	CALL_1
0x4000050	            0xa804	                              test al, 4	       114	mpiutil.c	FUNCTION_6	IF_2
0x4000052	            0x7505	                           jne 0x4000059	       114	mpiutil.c	FUNCTION_6	IF_2
0x4000054	          0x4885ff	                           test rdi, rdi	        69	mpiutil.c	FUNCTION_3	IF_1
0x4000057	            0x7408	                            je 0x4000061	        69	mpiutil.c	FUNCTION_3	IF_1
0x4000059	      0xe800000000	                          call 0x400005e	        72	mpiutil.c	FUNCTION_3	CALL_1
0x400005e	          0x8b4310	            mov eax, dword [rbx + 0x10] 	        72	mpiutil.c	FUNCTION_3	CALL_1
0x4000061	          0x83e0f8	                     and eax, 0xfffffff8	       119	mpiutil.c	FUNCTION_6	IF_3
0x4000064	            0x750b	                           jne 0x4000071	       119	mpiutil.c	FUNCTION_6	IF_3
0x4000066	          0x4889df	                            mov rdi, rbx	       121	mpiutil.c	FUNCTION_6	CALL_4
0x4000069	              0x5b	                                 pop rbx	       122	mpiutil.c	FUNCTION_6
0x400006a	      0xe900000000	                           jmp 0x400006f	       121	mpiutil.c	FUNCTION_6	CALL_4
0x400006f	            0xf3c3	                                     ret	       121	mpiutil.c	FUNCTION_6	CALL_4
0x4000071	    0x48c7c7000000	                              mov rdi, 0	       120	mpiutil.c	FUNCTION_6	CALL_3
0x4000078	      0xe800000000	                          call 0x400007d	       120	mpiutil.c	FUNCTION_6	CALL_3
0x400007d	            0xebe7	                           jmp 0x4000066	       120	mpiutil.c	FUNCTION_6	CALL_3
mpi_assign_limb_space	DO,0:FOR,0:functions,0:CALL,1:IF,0:ELSE,0:WHILE,0:SWITCH,0	16
0x4000130	            0x4154	                                push r12	        76	mpiutil.c	FUNCTION_4
0x4000132	              0x55	                                push rbp	        76	mpiutil.c	FUNCTION_4
0x4000133	          0x4989f4	                            mov r12, rsi	        76	mpiutil.c	FUNCTION_4
0x4000136	              0x53	                                push rbx	        76	mpiutil.c	FUNCTION_4
0x4000137	          0x4889fb	                            mov rbx, rdi	        76	mpiutil.c	FUNCTION_4
0x400013a	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	        77	mpiutil.c	FUNCTION_4	CALL_1
0x400013e	            0x89d5	                            mov ebp, edx	        76	mpiutil.c	FUNCTION_4
0x4000140	          0x4885ff	                           test rdi, rdi	        69	mpiutil.c	FUNCTION_3	IF_1
0x4000143	            0x7405	                            je 0x400014a	        69	mpiutil.c	FUNCTION_3	IF_1
0x4000145	      0xe800000000	                          call 0x400014a	        72	mpiutil.c	FUNCTION_3	CALL_1
0x400014a	        0x4c896318	             mov qword [rbx + 0x18], r12	        78	mpiutil.c	FUNCTION_4
0x400014e	            0x892b	                    mov dword [rbx], ebp	        79	mpiutil.c	FUNCTION_4
0x4000150	              0x5b	                                 pop rbx	        80	mpiutil.c	FUNCTION_4
0x4000151	              0x5d	                                 pop rbp	        80	mpiutil.c	FUNCTION_4
0x4000152	            0x415c	                                 pop r12	        80	mpiutil.c	FUNCTION_4
0x4000154	              0xc3	                                     ret	        80	mpiutil.c	FUNCTION_4
