seqno_fence_get_timeline_name	ELSE,0:CALL,2:SWITCH,0:WHILE,0:IF,0:DO,0:functions,0:FOR,0	6
0x4000060	    0x48817f080000	                  cmp qword [rdi + 8], 0	        54	seqno-fence.h	FUNCTION_1	CALL_1
0x4000068	      0xb800000000	                              mov eax, 0	        54	seqno-fence.h	FUNCTION_1	CALL_1
0x400006d	        0x480f44c7	                          cmove rax, rdi	        54	seqno-fence.h	FUNCTION_1	CALL_1
0x4000071	        0x488b4060	            mov rax, qword [rax + 0x60] 	        35	seqno-fence.c	FUNCTION_4	CALL_2
0x4000075	        0x488b4008	                mov rax, qword [rax + 8]	        35	seqno-fence.c	FUNCTION_4	CALL_2
0x4000079	      0xe900000000	                           jmp 0x400007e	        35	seqno-fence.c	FUNCTION_4	CALL_2
seqno_release	ELSE,1:CALL,4:SWITCH,0:WHILE,0:IF,1:DO,0:functions,0:FOR,0	20
0x4000100	              0x55	                                push rbp	        53	seqno-fence.c	FUNCTION_7
0x4000101	              0x53	                                push rbx	        53	seqno-fence.c	FUNCTION_7
0x4000102	      0xbb00000000	                              mov ebx, 0	        54	seqno-fence.h	FUNCTION_1	CALL_1
0x4000107	    0x48817f080000	                  cmp qword [rdi + 8], 0	        54	seqno-fence.h	FUNCTION_1	CALL_1
0x400010f	          0x4889fd	                            mov rbp, rdi	        53	seqno-fence.c	FUNCTION_7
0x4000112	        0x480f44df	                          cmove rbx, rdi	        54	seqno-fence.h	FUNCTION_1	CALL_1
0x4000116	        0x488b7b68	            mov rdi, qword [rbx + 0x68] 	        56	seqno-fence.c	FUNCTION_7	CALL_2
0x400011a	      0xe800000000	                          call 0x400011f	        56	seqno-fence.c	FUNCTION_7	CALL_2
0x400011f	        0x488b4360	            mov rax, qword [rbx + 0x60] 	        57	seqno-fence.c	FUNCTION_7	IF_1
0x4000123	        0x488b4028	            mov rax, qword [rax + 0x28] 	        57	seqno-fence.c	FUNCTION_7	IF_1
0x4000127	          0x4885c0	                           test rax, rax	        57	seqno-fence.c	FUNCTION_7	IF_1
0x400012a	            0x740a	                            je 0x4000136	        57	seqno-fence.c	FUNCTION_7	IF_1
0x400012c	          0x4889ef	                            mov rdi, rbp	        58	seqno-fence.c	FUNCTION_7	CALL_3
0x400012f	              0x5b	                                 pop rbx	        61	seqno-fence.c	FUNCTION_7
0x4000130	              0x5d	                                 pop rbp	        61	seqno-fence.c	FUNCTION_7
0x4000131	      0xe900000000	                           jmp 0x4000136	        58	seqno-fence.c	FUNCTION_7	CALL_3
0x4000136	          0x4889df	                            mov rdi, rbx	        60	seqno-fence.c	FUNCTION_7	CALL_4
0x4000139	              0x5b	                                 pop rbx	        61	seqno-fence.c	FUNCTION_7
0x400013a	              0x5d	                                 pop rbp	        61	seqno-fence.c	FUNCTION_7
0x400013b	      0xe900000000	                   jmp section_end..text	        60	seqno-fence.c	FUNCTION_7	CALL_4
seqno_signaled	ELSE,0:CALL,2:SWITCH,0:WHILE,0:IF,0:DO,0:functions,0:FOR,0	10
0x40000a0	    0x48817f080000	                  cmp qword [rdi + 8], 0	        53	seqno-fence.h	FUNCTION_1	IF_1
0x40000a8	      0xb800000000	                              mov eax, 0	        53	seqno-fence.h	FUNCTION_1	IF_1
0x40000ad	        0x480f44c7	                          cmove rax, rdi	        53	seqno-fence.h	FUNCTION_1	IF_1
0x40000b1	        0x488b4060	            mov rax, qword [rax + 0x60] 	        49	seqno-fence.c	FUNCTION_6	CALL_2
0x40000b5	        0x488b5018	            mov rdx, qword [rax + 0x18] 	        49	seqno-fence.c	FUNCTION_6	CALL_2
0x40000b9	            0x31c0	                            xor eax, eax	        49	seqno-fence.c	FUNCTION_6	CALL_2
0x40000bb	          0x4885d2	                           test rdx, rdx	        49	seqno-fence.c	FUNCTION_6	CALL_2
0x40000be	            0x7405	                            je 0x40000c5	        49	seqno-fence.c	FUNCTION_6	CALL_2
0x40000c0	      0xe800000000	                          call 0x40000c5	        49	seqno-fence.c	FUNCTION_6	CALL_2
0x40000c5	            0xf3c3	                                     ret	        50	seqno-fence.c	FUNCTION_6
seqno_enable_signaling	ELSE,0:CALL,2:SWITCH,0:WHILE,0:IF,0:DO,0:functions,0:FOR,0	6
0x4000080	    0x48817f080000	                  cmp qword [rdi + 8], 0	        54	seqno-fence.h	FUNCTION_1	CALL_1
0x4000088	      0xb800000000	                              mov eax, 0	        54	seqno-fence.h	FUNCTION_1	CALL_1
0x400008d	        0x480f44c7	                          cmove rax, rdi	        54	seqno-fence.h	FUNCTION_1	CALL_1
0x4000091	        0x488b4060	            mov rax, qword [rax + 0x60] 	        42	seqno-fence.c	FUNCTION_5	CALL_2
0x4000095	        0x488b4010	            mov rax, qword [rax + 0x10] 	        42	seqno-fence.c	FUNCTION_5	CALL_2
0x4000099	      0xe900000000	                           jmp 0x400009e	        42	seqno-fence.c	FUNCTION_5	CALL_2
seqno_wait	ELSE,0:CALL,2:SWITCH,0:WHILE,0:IF,0:DO,0:functions,0:FOR,0	7
0x40000d0	    0x48817f080000	                  cmp qword [rdi + 8], 0	        54	seqno-fence.h	FUNCTION_1	CALL_1
0x40000d8	      0xb800000000	                              mov eax, 0	        54	seqno-fence.h	FUNCTION_1	CALL_1
0x40000dd	        0x400fb6f6	                          movzx esi, sil	        68	seqno-fence.c	FUNCTION_8	CALL_2
0x40000e1	        0x480f44c7	                          cmove rax, rdi	        54	seqno-fence.h	FUNCTION_1	CALL_1
0x40000e5	        0x488b4060	            mov rax, qword [rax + 0x60] 	        68	seqno-fence.c	FUNCTION_8	CALL_2
0x40000e9	        0x488b4020	            mov rax, qword [rax + 0x20] 	        68	seqno-fence.c	FUNCTION_8	CALL_2
0x40000ed	      0xe900000000	                           jmp 0x40000f2	        68	seqno-fence.c	FUNCTION_8	CALL_2
seqno_fence_get_driver_name	ELSE,0:CALL,2:SWITCH,0:WHILE,0:IF,0:DO,0:functions,0:FOR,0	6
0x4000040	    0x48817f080000	                  cmp qword [rdi + 8], 0	        54	seqno-fence.h	FUNCTION_1	CALL_1
0x4000048	      0xb800000000	                              mov eax, 0	        54	seqno-fence.h	FUNCTION_1	CALL_1
0x400004d	        0x480f44c7	                          cmove rax, rdi	        54	seqno-fence.h	FUNCTION_1	CALL_1
0x4000051	        0x488b4060	            mov rax, qword [rax + 0x60] 	        28	seqno-fence.c	FUNCTION_3	CALL_2
0x4000055	          0x488b00	                    mov rax, qword [rax]	        28	seqno-fence.c	FUNCTION_3	CALL_2
0x4000058	      0xe900000000	                           jmp 0x400005d	        28	seqno-fence.c	FUNCTION_3	CALL_2
