secmark_tg_exit	FOR,0:ELSE,0:SWITCH,0:WHILE,0:CALL,1:IF,0:DO,0:functions,0	4
0x4000040	    0x803d00000000	                cmp byte [0x04000047], 1	       145	xt_SECMARK.c	FUNCTION_6	CALL_1
0x4000047	            0x7402	                            je 0x400004b	       145	xt_SECMARK.c	FUNCTION_6	CALL_1
0x4000049	            0xf3c3	                                     ret	       145	xt_SECMARK.c	FUNCTION_6	CALL_1
0x400004b	              0xe9	                                 invalid	       145	xt_SECMARK.c	FUNCTION_6	CALL_1
secmark_tg_destroy	FOR,0:ELSE,0:SWITCH,1:WHILE,0:CALL,1:IF,0:DO,0:functions,0	4
0x4000040	    0x803d00000000	                cmp byte [0x04000047], 1	       145	xt_SECMARK.c	FUNCTION_6	CALL_1
0x4000047	            0x7402	                            je 0x400004b	       145	xt_SECMARK.c	FUNCTION_6	CALL_1
0x4000049	            0xf3c3	                                     ret	       145	xt_SECMARK.c	FUNCTION_6	CALL_1
0x400004b	      0xe900000000	                jmp sym.secmark_tg_check	       145	xt_SECMARK.c	FUNCTION_6	CALL_1
secmark_tg_init	FOR,0:ELSE,0:SWITCH,0:WHILE,0:CALL,1:IF,0:DO,0:functions,0	4
0x4000040	    0x803d00000000	                cmp byte [0x04000047], 1	       145	xt_SECMARK.c	FUNCTION_6	CALL_1
0x4000047	            0x7402	                            je 0x400004b	       145	xt_SECMARK.c	FUNCTION_6	CALL_1
0x4000049	            0xf3c3	                                     ret	       145	xt_SECMARK.c	FUNCTION_6	CALL_1
0x400004b	              0xe9	                                 invalid	       145	xt_SECMARK.c	FUNCTION_6	CALL_1
secmark_tg_check	FOR,0:ELSE,0:SWITCH,1:WHILE,0:CALL,6:IF,4:DO,0:functions,0	121
0x4000050	            0x4154	                                push r12	        85	xt_SECMARK.c	FUNCTION_3
0x4000052	              0x55	                                push rbp	        85	xt_SECMARK.c	FUNCTION_3
0x4000053	      0xb907000000	                              mov ecx, 7	        89	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_1
0x4000058	              0x53	                                push rbx	        85	xt_SECMARK.c	FUNCTION_3
0x4000059	        0x488b4708	                mov rax, qword [rdi + 8]	        89	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_1
0x400005d	          0x4889fd	                            mov rbp, rdi	        85	xt_SECMARK.c	FUNCTION_3
0x4000060	        0x488b5f20	            mov rbx, qword [rdi + 0x20] 	        86	xt_SECMARK.c	FUNCTION_3
0x4000064	    0x48c7c7000000	                              mov rdi, 0	        89	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_1
0x400006b	          0x4889c6	                            mov rsi, rax	        89	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_1
0x400006e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        89	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_1
0x4000070	            0x7417	                            je 0x4000089	        89	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_1
0x4000072	      0xb909000000	                              mov ecx, 9	        90	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_2
0x4000077	    0x48c7c7000000	                              mov rdi, 0	        90	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_2
0x400007e	          0x4889c6	                            mov rsi, rax	        90	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_2
0x4000081	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        89	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_1
0x4000083	     0xf8505010000	                           jne 0x400018e	        89	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_1
0x4000089	     0xfb605000000	           movzx eax, byte [0x04000090] 	        96	xt_SECMARK.c	FUNCTION_3	IF_2
0x4000090	           0xfb613	                   movzx edx, byte [rbx]	        96	xt_SECMARK.c	FUNCTION_3	IF_2
0x4000093	            0x84c0	                             test al, al	        96	xt_SECMARK.c	FUNCTION_3	IF_2
0x4000095	            0x742b	                            je 0x40000c2	        96	xt_SECMARK.c	FUNCTION_3	IF_2
0x4000097	            0x38d0	                              cmp al, dl	        96	xt_SECMARK.c	FUNCTION_3	IF_2
0x4000099	            0x7427	                            je 0x40000c2	        96	xt_SECMARK.c	FUNCTION_3	IF_2
0x400009b	    0x48c7c6000000	                              mov rsi, 0	        97	xt_SECMARK.c	FUNCTION_3	IF_2	CALL_4
0x40000a2	    0x48c7c7000000	                              mov rdi, 0	        97	xt_SECMARK.c	FUNCTION_3	IF_2	CALL_4
0x40000a9	      0xe800000000	                          call 0x40000ae	        97	xt_SECMARK.c	FUNCTION_3	IF_2	CALL_4
0x40000ae	            0x85c0	                           test eax, eax	        97	xt_SECMARK.c	FUNCTION_3	IF_2	CALL_4
0x40000b0	     0xf8563010000	                           jne 0x4000219	        97	xt_SECMARK.c	FUNCTION_3	IF_2	CALL_4
0x40000b6	      0xbdeaffffff	                     mov ebp, 0xffffffea	        93	xt_SECMARK.c	FUNCTION_3	IF_1
0x40000bb	            0x89e8	                            mov eax, ebp	       117	xt_SECMARK.c	FUNCTION_3
0x40000bd	              0x5b	                                 pop rbx	       117	xt_SECMARK.c	FUNCTION_3
0x40000be	              0x5d	                                 pop rbp	       117	xt_SECMARK.c	FUNCTION_3
0x40000bf	            0x415c	                                 pop r12	       117	xt_SECMARK.c	FUNCTION_3
0x40000c1	              0xc3	                                     ret	       117	xt_SECMARK.c	FUNCTION_3
0x40000c2	          0x80fa01	                               cmp dl, 1	       102	xt_SECMARK.c	FUNCTION_3	SWITCH_1
0x40000c5	            0x7559	                           jne 0x4000120	       102	xt_SECMARK.c	FUNCTION_3	SWITCH_1
0x40000c7	        0x4c8d6308	                      lea r12, [rbx + 8]	        59	xt_SECMARK.c	FUNCTION_2	CALL_2
0x40000cb	    0xc68307010000	               mov byte [rbx + 0x107], 0	        56	xt_SECMARK.c	FUNCTION_2
0x40000d2	    0xc74304000000	                  mov dword [rbx + 4], 0	        57	xt_SECMARK.c	FUNCTION_2
0x40000d9	          0x4c89e7	                            mov rdi, r12	        59	xt_SECMARK.c	FUNCTION_2	CALL_2
0x40000dc	      0xe800000000	                          call 0x40000e1	        59	xt_SECMARK.c	FUNCTION_2	CALL_2
0x40000e1	        0x488d5304	                      lea rdx, [rbx + 4]	        60	xt_SECMARK.c	FUNCTION_2
0x40000e5	            0x89c6	                            mov esi, eax	        59	xt_SECMARK.c	FUNCTION_2	CALL_2
0x40000e7	          0x4c89e7	                            mov rdi, r12	        59	xt_SECMARK.c	FUNCTION_2	CALL_2
0x40000ea	      0xe800000000	                          call 0x40000ef	        59	xt_SECMARK.c	FUNCTION_2	CALL_2
0x40000ef	            0x85c0	                           test eax, eax	        61	xt_SECMARK.c	FUNCTION_2	IF_1
0x40000f1	            0x7561	                           jne 0x4000154	        61	xt_SECMARK.c	FUNCTION_2	IF_1
0x40000f3	          0x8b7b04	                mov edi, dword [rbx + 4]	        68	xt_SECMARK.c	FUNCTION_2	IF_3
0x40000f6	            0x85ff	                           test edi, edi	        68	xt_SECMARK.c	FUNCTION_2	IF_3
0x40000f8	     0xf85c0000000	                           jne 0x40001be	        68	xt_SECMARK.c	FUNCTION_2	IF_3
0x40000fe	    0x48c7c6000000	                              mov rsi, 0	        69	xt_SECMARK.c	FUNCTION_2	IF_3	CALL_4
0x4000105	    0x48c7c7000000	                              mov rdi, 0	        69	xt_SECMARK.c	FUNCTION_2	IF_3	CALL_4
0x400010c	      0xe800000000	                          call 0x4000111	        69	xt_SECMARK.c	FUNCTION_2	IF_3	CALL_4
0x4000111	            0x85c0	                           test eax, eax	        69	xt_SECMARK.c	FUNCTION_2	IF_3	CALL_4
0x4000113	     0xf8520010000	                           jne 0x4000239	        69	xt_SECMARK.c	FUNCTION_2	IF_3	CALL_4
0x4000119	      0xbdfeffffff	                     mov ebp, 0xfffffffe	        71	xt_SECMARK.c	FUNCTION_2	IF_3
0x400011e	            0xeb9b	                           jmp 0x40000bb	        71	xt_SECMARK.c	FUNCTION_2	IF_3
0x4000120	    0x48c7c6000000	                              mov rsi, 0	       106	xt_SECMARK.c	FUNCTION_3	SWITCH_1	CALL_5
0x4000127	    0x48c7c7000000	                              mov rdi, 0	       106	xt_SECMARK.c	FUNCTION_3	SWITCH_1	CALL_5
0x400012e	      0xe800000000	                          call 0x4000133	       106	xt_SECMARK.c	FUNCTION_3	SWITCH_1	CALL_5
0x4000133	            0x85c0	                           test eax, eax	       106	xt_SECMARK.c	FUNCTION_3	SWITCH_1	CALL_5
0x4000135	     0xf847bffffff	                            je 0x40000b6	       106	xt_SECMARK.c	FUNCTION_3	SWITCH_1	CALL_5
0x400013b	           0xfb633	                   movzx esi, byte [rbx]	       106	xt_SECMARK.c	FUNCTION_3	SWITCH_1	CALL_5
0x400013e	    0x48c7c7000000	                              mov rdi, 0	       106	xt_SECMARK.c	FUNCTION_3	SWITCH_1	CALL_5
0x4000145	      0xbdeaffffff	                     mov ebp, 0xffffffea	       107	xt_SECMARK.c	FUNCTION_3	SWITCH_1
0x400014a	      0xe800000000	                          call 0x400014f	       106	xt_SECMARK.c	FUNCTION_3	SWITCH_1	CALL_5
0x400014f	      0xe967ffffff	                           jmp 0x40000bb	       106	xt_SECMARK.c	FUNCTION_3	SWITCH_1	CALL_5
0x4000154	          0x83f8ea	             cmp eax, 0xffffffffffffffea	        62	xt_SECMARK.c	FUNCTION_2	IF_1	IF_2
0x4000157	            0x89c5	                            mov ebp, eax	        62	xt_SECMARK.c	FUNCTION_2	IF_1	IF_2
0x4000159	     0xf855cffffff	                           jne 0x40000bb	        62	xt_SECMARK.c	FUNCTION_2	IF_1	IF_2
0x400015f	    0x48c7c6000000	                              mov rsi, 0	        63	xt_SECMARK.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x4000166	    0x48c7c7000000	                              mov rdi, 0	        63	xt_SECMARK.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x400016d	      0xe800000000	                          call 0x4000172	        63	xt_SECMARK.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x4000172	            0x85c0	                           test eax, eax	        63	xt_SECMARK.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x4000174	     0xf8441ffffff	                            je 0x40000bb	        63	xt_SECMARK.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x400017a	          0x4c89e6	                            mov rsi, r12	        63	xt_SECMARK.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x400017d	    0x48c7c7000000	                              mov rdi, 0	        63	xt_SECMARK.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x4000184	      0xe800000000	                          call 0x4000189	        63	xt_SECMARK.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x4000189	      0xe92dffffff	                           jmp 0x40000bb	        63	xt_SECMARK.c	FUNCTION_2	IF_1	IF_2	CALL_3
0x400018e	    0x48c7c6000000	                              mov rsi, 0	        91	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_3
0x4000195	    0x48c7c7000000	                              mov rdi, 0	        91	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_3
0x400019c	      0xe800000000	                          call 0x40001a1	        91	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_3
0x40001a1	            0x85c0	                           test eax, eax	        91	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_3
0x40001a3	     0xf840dffffff	                            je 0x40000b6	        91	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_3
0x40001a9	        0x488b7508	                mov rsi, qword [rbp + 8]	        91	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_3
0x40001ad	    0x48c7c7000000	                              mov rdi, 0	        91	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_3
0x40001b4	      0xe800000000	                          call 0x40001b9	        91	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_3
0x40001b9	      0xe9f8feffff	                           jmp 0x40000b6	        91	xt_SECMARK.c	FUNCTION_3	IF_1	CALL_3
0x40001be	      0xe800000000	                          call 0x40001c3	        74	xt_SECMARK.c	FUNCTION_2	CALL_5
0x40001c3	            0x85c0	                           test eax, eax	        75	xt_SECMARK.c	FUNCTION_2	IF_4
0x40001c5	            0x89c5	                            mov ebp, eax	        74	xt_SECMARK.c	FUNCTION_2	CALL_5
0x40001c7	            0x742c	                            je 0x40001f5	        75	xt_SECMARK.c	FUNCTION_2	IF_4
0x40001c9	    0x48c7c6000000	                              mov rsi, 0	        76	xt_SECMARK.c	FUNCTION_2	IF_4	CALL_6
0x40001d0	    0x48c7c7000000	                              mov rdi, 0	        76	xt_SECMARK.c	FUNCTION_2	IF_4	CALL_6
0x40001d7	      0xe800000000	                          call 0x40001dc	        76	xt_SECMARK.c	FUNCTION_2	IF_4	CALL_6
0x40001dc	            0x85c0	                           test eax, eax	        76	xt_SECMARK.c	FUNCTION_2	IF_4	CALL_6
0x40001de	     0xf84d7feffff	                            je 0x40000bb	        76	xt_SECMARK.c	FUNCTION_2	IF_4	CALL_6
0x40001e4	    0x48c7c7000000	                              mov rdi, 0	        76	xt_SECMARK.c	FUNCTION_2	IF_4	CALL_6
0x40001eb	      0xe800000000	                          call 0x40001f0	        76	xt_SECMARK.c	FUNCTION_2	IF_4	CALL_6
0x40001f0	      0xe9c6feffff	                           jmp 0x40000bb	        76	xt_SECMARK.c	FUNCTION_2	IF_4	CALL_6
0x40001f5	      0xe800000000	                          call 0x40001fa	        80	xt_SECMARK.c	FUNCTION_2	CALL_7
0x40001fa	            0x31ed	                            xor ebp, ebp	       116	xt_SECMARK.c	FUNCTION_3
0x40001fc	    0x803d00000000	                cmp byte [0x04000203], 0	       114	xt_SECMARK.c	FUNCTION_3	IF_4
0x4000203	     0xf85b2feffff	                           jne 0x40000bb	       114	xt_SECMARK.c	FUNCTION_3	IF_4
0x4000209	           0xfb603	                   movzx eax, byte [rbx]	       115	xt_SECMARK.c	FUNCTION_3	IF_4
0x400020c	              0x5b	                                 pop rbx	       117	xt_SECMARK.c	FUNCTION_3
0x400020d	    0x880500000000	               mov byte [0x04000213], al	       115	xt_SECMARK.c	FUNCTION_3	IF_4
0x4000213	            0x89e8	                            mov eax, ebp	       117	xt_SECMARK.c	FUNCTION_3
0x4000215	              0x5d	                                 pop rbp	       117	xt_SECMARK.c	FUNCTION_3
0x4000216	            0x415c	                                 pop r12	       117	xt_SECMARK.c	FUNCTION_3
0x4000218	              0xc3	                                     ret	       117	xt_SECMARK.c	FUNCTION_3
0x4000219	           0xfb613	                   movzx edx, byte [rbx]	        97	xt_SECMARK.c	FUNCTION_3	IF_2	CALL_4
0x400021c	     0xfb635000000	           movzx esi, byte [0x04000223] 	        97	xt_SECMARK.c	FUNCTION_3	IF_2	CALL_4
0x4000223	    0x48c7c7000000	                              mov rdi, 0	        97	xt_SECMARK.c	FUNCTION_3	IF_2	CALL_4
0x400022a	      0xbdeaffffff	                     mov ebp, 0xffffffea	        99	xt_SECMARK.c	FUNCTION_3	IF_2
0x400022f	      0xe800000000	                          call 0x4000234	        97	xt_SECMARK.c	FUNCTION_3	IF_2	CALL_4
0x4000234	      0xe982feffff	                           jmp 0x40000bb	        97	xt_SECMARK.c	FUNCTION_3	IF_2	CALL_4
0x4000239	          0x4c89e6	                            mov rsi, r12	        69	xt_SECMARK.c	FUNCTION_2	IF_3	CALL_4
0x400023c	    0x48c7c7000000	                              mov rdi, 0	        69	xt_SECMARK.c	FUNCTION_2	IF_3	CALL_4
0x4000243	      0xbdfeffffff	                     mov ebp, 0xfffffffe	        71	xt_SECMARK.c	FUNCTION_2	IF_3
0x4000248	      0xe800000000	                          call 0x400024d	        69	xt_SECMARK.c	FUNCTION_2	IF_3	CALL_4
0x400024d	      0xe969feffff	                           jmp 0x40000bb	        69	xt_SECMARK.c	FUNCTION_2	IF_3	CALL_4
