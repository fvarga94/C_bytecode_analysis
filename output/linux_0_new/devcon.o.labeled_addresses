generic_match	IF,1:CALL,2:WHILE,0:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,1	24
0x40001c0	            0x4154	                                push r12	        80	devcon.c	FUNCTION_2
0x40001c2	          0x4989fc	                            mov r12, rdi	        80	devcon.c	FUNCTION_2
0x40001c5	              0x55	                                push rbp	        80	devcon.c	FUNCTION_2
0x40001c6	          0x4863ee	                         movsxd rbp, esi	        80	devcon.c	FUNCTION_2
0x40001c9	              0x53	                                push rbx	        80	devcon.c	FUNCTION_2
0x40001ca	    0x48c7c3000000	                              mov rbx, 0	        84	devcon.c	FUNCTION_2	FOR_1
0x40001d1	            0xeb09	                           jmp 0x40001dc	        84	devcon.c	FUNCTION_2	FOR_1
0x40001d3	    0x4881c3a00000	                           add rbx, 0xa0	        84	devcon.c	FUNCTION_2	FOR_1
0x40001da	            0x7418	                            je 0x40001f4	        84	devcon.c	FUNCTION_2	FOR_1
0x40001dc	        0x498b14ec	            mov rdx, qword [r12 + rbp*8]	        85	devcon.c	FUNCTION_2	FOR_1	CALL_1
0x40001e0	            0x31f6	                            xor esi, esi	        85	devcon.c	FUNCTION_2	FOR_1	CALL_1
0x40001e2	          0x4889df	                            mov rdi, rbx	        85	devcon.c	FUNCTION_2	FOR_1	CALL_1
0x40001e5	      0xe800000000	                          call 0x40001ea	        85	devcon.c	FUNCTION_2	FOR_1	CALL_1
0x40001ea	          0x4885c0	                           test rax, rax	        86	devcon.c	FUNCTION_2	FOR_1	IF_1
0x40001ed	            0x74e4	                            je 0x40001d3	        86	devcon.c	FUNCTION_2	FOR_1	IF_1
0x40001ef	              0x5b	                                 pop rbx	        95	devcon.c	FUNCTION_2
0x40001f0	              0x5d	                                 pop rbp	        95	devcon.c	FUNCTION_2
0x40001f1	            0x415c	                                 pop r12	        95	devcon.c	FUNCTION_2
0x40001f3	              0xc3	                                     ret	        95	devcon.c	FUNCTION_2
0x40001f4	              0x5b	                                 pop rbx	        95	devcon.c	FUNCTION_2
0x40001f5	    0x48c7c0fbfdff	             mov rax, 0xfffffffffffffdfb	        94	devcon.c	FUNCTION_2	CALL_2
0x40001fc	              0x5d	                                 pop rbp	        95	devcon.c	FUNCTION_2
0x40001fd	            0x415c	                                 pop r12	        95	devcon.c	FUNCTION_2
0x40001ff	              0xc3	                                     ret	        95	devcon.c	FUNCTION_2
device_connection_find	IF,0:CALL,1:WHILE,0:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0	3
0x4000120	    0x48c7c1000000	                              mov rcx, 0	       110	devcon.c	FUNCTION_3	CALL_1
0x4000127	            0x31d2	                            xor edx, edx	       110	devcon.c	FUNCTION_3	CALL_1
0x4000129	      0xe912ffffff	    jmp sym.device_connection_find_match	       110	devcon.c	FUNCTION_3	CALL_1
