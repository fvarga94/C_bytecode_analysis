nlm4svc_proc_test_msg	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,2:IF,0	3
0x4000560	    0x48c7c2000000	                              mov rdx, 0	       312	svc4proc.c	FUNCTION_16	CALL_2
0x4000567	      0xbe0b000000	                            mov esi, 0xb	       312	svc4proc.c	FUNCTION_16	CALL_2
0x400056c	      0xe9cffeffff	                jmp sym.nlm4svc_callback	       312	svc4proc.c	FUNCTION_16	CALL_2
nlm4svc_retrieve_args	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,4:IF,5	66
0x4000060	            0x4156	                                push r14	        25	svc4proc.c	FUNCTION_1
0x4000062	            0x4155	                                push r13	        25	svc4proc.c	FUNCTION_1
0x4000064	            0x4154	                                push r12	        25	svc4proc.c	FUNCTION_1
0x4000066	              0x55	                                push rbp	        25	svc4proc.c	FUNCTION_1
0x4000067	              0x53	                                push rbx	        25	svc4proc.c	FUNCTION_1
0x4000068	        0x4883ec10	                           sub rsp, 0x10	        25	svc4proc.c	FUNCTION_1
0x400006c	    0x65488b042528	                mov rax, qword gs:[0x28]	        25	svc4proc.c	FUNCTION_1
0x4000075	      0x4889442408	                mov qword [rsp + 8], rax	        25	svc4proc.c	FUNCTION_1
0x400007a	            0x31c0	                            xor eax, eax	        25	svc4proc.c	FUNCTION_1
0x400007c	    0x48833d000000	               cmp qword [0x04000084], 0	        32	svc4proc.c	FUNCTION_1	IF_1
0x4000084	    0x48c704240000	                      mov qword [rsp], 0	        27	svc4proc.c	FUNCTION_1
0x400008c	      0xb800000002	                      mov eax, 0x2000000	        33	svc4proc.c	FUNCTION_1	IF_1
0x4000091	            0x7455	                            je 0x40000e8	        32	svc4proc.c	FUNCTION_1	IF_1
0x4000093	          0x4989d6	                            mov r14, rdx	        32	svc4proc.c	FUNCTION_1	IF_1
0x4000096	          0x8b5630	            mov edx, dword [rsi + 0x30] 	        36	svc4proc.c	FUNCTION_1	IF_2	CALL_1
0x4000099	          0x4889f5	                            mov rbp, rsi	        36	svc4proc.c	FUNCTION_1	IF_2	CALL_1
0x400009c	        0x488b7628	            mov rsi, qword [rsi + 0x28] 	        36	svc4proc.c	FUNCTION_1	IF_2	CALL_1
0x40000a0	          0x4889fb	                            mov rbx, rdi	        36	svc4proc.c	FUNCTION_1	IF_2	CALL_1
0x40000a3	          0x4989cd	                            mov r13, rcx	        36	svc4proc.c	FUNCTION_1	IF_2	CALL_1
0x40000a6	      0xe800000000	                          call 0x40000ab	        36	svc4proc.c	FUNCTION_1	IF_2	CALL_1
0x40000ab	          0x4885c0	                           test rax, rax	        36	svc4proc.c	FUNCTION_1	IF_2	CALL_1
0x40000ae	          0x4989c4	                            mov r12, rax	        36	svc4proc.c	FUNCTION_1	IF_2	CALL_1
0x40000b1	     0xf8486000000	                            je 0x400013d	        36	svc4proc.c	FUNCTION_1	IF_2	CALL_1
0x40000b7	    0x8b85a4010000	           mov eax, dword [rbp + 0x1a4] 	        37	svc4proc.c	FUNCTION_1	IF_2	CALL_2
0x40000bd	            0x85c0	                           test eax, eax	        37	svc4proc.c	FUNCTION_1	IF_2	CALL_2
0x40000bf	            0x7570	                           jne 0x4000131	        37	svc4proc.c	FUNCTION_1	IF_2	CALL_2
0x40000c1	          0x4d85ed	                           test r13, r13	        42	svc4proc.c	FUNCTION_1	IF_3
0x40000c4	          0x4d8926	                    mov qword [r14], r12	        39	svc4proc.c	FUNCTION_1
0x40000c7	            0x7464	                            je 0x400012d	        42	svc4proc.c	FUNCTION_1	IF_3
0x40000c9	        0x488d5534	                   lea rdx, [rbp + 0x34]	        43	svc4proc.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x40000cd	          0x4889df	                            mov rdi, rbx	        43	svc4proc.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x40000d0	          0x4889e6	                            mov rsi, rsp	        43	svc4proc.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x40000d3	      0xe800000000	                          call 0x40000d8	        43	svc4proc.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x40000d8	            0x85c0	                           test eax, eax	        43	svc4proc.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x40000da	            0x89c3	                            mov ebx, eax	        43	svc4proc.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x40000dc	            0x7427	                            je 0x4000105	        43	svc4proc.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x40000de	          0x4c89e7	                            mov rdi, r12	        56	svc4proc.c	FUNCTION_1	CALL_4
0x40000e1	      0xe800000000	                          call 0x40000e6	        56	svc4proc.c	FUNCTION_1	CALL_4
0x40000e6	            0x89d8	                            mov eax, ebx	        56	svc4proc.c	FUNCTION_1	CALL_4
0x40000e8	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        60	svc4proc.c	FUNCTION_1
0x40000ed	    0x6548330c2528	                xor rcx, qword gs:[0x28]	        60	svc4proc.c	FUNCTION_1
0x40000f6	            0x7554	                           jne 0x400014c	        60	svc4proc.c	FUNCTION_1
0x40000f8	        0x4883c410	                           add rsp, 0x10	        60	svc4proc.c	FUNCTION_1
0x40000fc	              0x5b	                                 pop rbx	        60	svc4proc.c	FUNCTION_1
0x40000fd	              0x5d	                                 pop rbp	        60	svc4proc.c	FUNCTION_1
0x40000fe	            0x415c	                                 pop r12	        60	svc4proc.c	FUNCTION_1
0x4000100	            0x415d	                                 pop r13	        60	svc4proc.c	FUNCTION_1
0x4000102	            0x415e	                                 pop r14	        60	svc4proc.c	FUNCTION_1
0x4000104	              0xc3	                                     ret	        60	svc4proc.c	FUNCTION_1
0x4000105	        0x488b0424	                    mov rax, qword [rsp]	        45	svc4proc.c	FUNCTION_1	IF_3
0x4000109	        0x49894500	                    mov qword [r13], rax	        45	svc4proc.c	FUNCTION_1	IF_3
0x400010d	    0x488b80980000	            mov rax, qword [rax + 0x98] 	        48	svc4proc.c	FUNCTION_1	IF_3
0x4000114	    0x4c89a5080100	           mov qword [rbp + 0x108], r12 	        49	svc4proc.c	FUNCTION_1	IF_3
0x400011b	    0x48c785700100	              mov qword [rbp + 0x170], 0	        50	svc4proc.c	FUNCTION_1	IF_3
0x4000126	    0x488985380100	           mov qword [rbp + 0x138], rax 	        48	svc4proc.c	FUNCTION_1	IF_3
0x400012d	            0x31c0	                            xor eax, eax	        53	svc4proc.c	FUNCTION_1
0x400012f	            0xebb7	                           jmp 0x40000e8	        53	svc4proc.c	FUNCTION_1
0x4000131	          0x4c89e7	                            mov rdi, r12	        37	svc4proc.c	FUNCTION_1	IF_2	CALL_2
0x4000134	      0xe800000000	                          call 0x4000139	        37	svc4proc.c	FUNCTION_1	IF_2	CALL_2
0x4000139	            0x85c0	                           test eax, eax	        37	svc4proc.c	FUNCTION_1	IF_2	CALL_2
0x400013b	            0x7984	                           jns 0x40000c1	        37	svc4proc.c	FUNCTION_1	IF_2	CALL_2
0x400013d	          0x4c89e7	                            mov rdi, r12	        56	svc4proc.c	FUNCTION_1	CALL_4
0x4000140	      0xe800000000	                          call 0x4000145	        56	svc4proc.c	FUNCTION_1	CALL_4
0x4000145	      0xb800000002	                      mov eax, 0x2000000	        59	svc4proc.c	FUNCTION_1
0x400014a	            0xeb9c	                           jmp 0x40000e8	        59	svc4proc.c	FUNCTION_1
0x400014c	      0xe800000000	                          call 0x4000151	        60	svc4proc.c	FUNCTION_1
nlm4svc_proc_unshare	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,9:IF,2	61
0x40001c0	            0x4154	                                push r12	       378	svc4proc.c	FUNCTION_22
0x40001c2	              0x55	                                push rbp	       378	svc4proc.c	FUNCTION_22
0x40001c3	          0x4989fc	                            mov r12, rdi	       378	svc4proc.c	FUNCTION_22
0x40001c6	              0x53	                                push rbx	       378	svc4proc.c	FUNCTION_22
0x40001c7	        0x4883ec18	                           sub rsp, 0x18	       378	svc4proc.c	FUNCTION_22
0x40001cb	    0x488bafb01a00	          mov rbp, qword [rdi + 0x1ab0] 	       379	svc4proc.c	FUNCTION_22
0x40001d2	    0x488b9fb81a00	          mov rbx, qword [rdi + 0x1ab8] 	       380	svc4proc.c	FUNCTION_22
0x40001d9	    0x65488b042528	                mov rax, qword gs:[0x28]	       378	svc4proc.c	FUNCTION_22
0x40001e2	      0x4889442410	             mov qword [rsp + 0x10], rax	       378	svc4proc.c	FUNCTION_22
0x40001e7	            0x31c0	                            xor eax, eax	       378	svc4proc.c	FUNCTION_22
0x40001e9	        0x488b4500	                    mov rax, qword [rbp]	       386	svc4proc.c	FUNCTION_22
0x40001ed	          0x488903	                    mov qword [rbx], rax	       386	svc4proc.c	FUNCTION_22
0x40001f0	        0x488b4508	                mov rax, qword [rbp + 8]	       386	svc4proc.c	FUNCTION_22
0x40001f4	        0x48894308	                mov qword [rbx + 8], rax	       386	svc4proc.c	FUNCTION_22
0x40001f8	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       386	svc4proc.c	FUNCTION_22
0x40001fc	        0x48894310	             mov qword [rbx + 0x10], rax	       386	svc4proc.c	FUNCTION_22
0x4000200	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       386	svc4proc.c	FUNCTION_22
0x4000204	        0x48894318	             mov qword [rbx + 0x18], rax	       386	svc4proc.c	FUNCTION_22
0x4000208	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       386	svc4proc.c	FUNCTION_22
0x400020b	          0x894320	             mov dword [rbx + 0x20], eax	       386	svc4proc.c	FUNCTION_22
0x400020e	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       389	svc4proc.c	FUNCTION_22	IF_1	CALL_3
0x4000212	    0x488bb8900200	           mov rdi, qword [rax + 0x290] 	       389	svc4proc.c	FUNCTION_22	IF_1	CALL_3
0x4000219	      0xe800000000	                          call 0x400021e	       389	svc4proc.c	FUNCTION_22	IF_1	CALL_3
0x400021e	            0x84c0	                             test al, al	       389	svc4proc.c	FUNCTION_22	IF_1	CALL_3
0x4000220	            0x7426	                            je 0x4000248	       389	svc4proc.c	FUNCTION_22	IF_1	CALL_3
0x4000222	    0xc74324000000	mov dword [rbx + 0x24], loc.imp.nlm4svc_decode_notify 	       390	svc4proc.c	FUNCTION_22	IF_1
0x4000229	          0x4531e4	                          xor r12d, r12d	       391	svc4proc.c	FUNCTION_22	IF_1
0x400022c	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       405	svc4proc.c	FUNCTION_22
0x4000231	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       405	svc4proc.c	FUNCTION_22
0x400023a	          0x4489e0	                           mov eax, r12d	       405	svc4proc.c	FUNCTION_22
0x400023d	            0x7565	                           jne 0x40002a4	       405	svc4proc.c	FUNCTION_22
0x400023f	        0x4883c418	                           add rsp, 0x18	       405	svc4proc.c	FUNCTION_22
0x4000243	              0x5b	                                 pop rbx	       405	svc4proc.c	FUNCTION_22
0x4000244	              0x5d	                                 pop rbp	       405	svc4proc.c	FUNCTION_22
0x4000245	            0x415c	                                 pop r12	       405	svc4proc.c	FUNCTION_22
0x4000247	              0xc3	                                     ret	       405	svc4proc.c	FUNCTION_22
0x4000248	      0x488d4c2408	                      lea rcx, [rsp + 8]	       395	svc4proc.c	FUNCTION_22	IF_2	CALL_4
0x400024d	          0x4c89e7	                            mov rdi, r12	       395	svc4proc.c	FUNCTION_22	IF_2	CALL_4
0x4000250	          0x4889e2	                            mov rdx, rsp	       395	svc4proc.c	FUNCTION_22	IF_2	CALL_4
0x4000253	          0x4889ee	                            mov rsi, rbp	       395	svc4proc.c	FUNCTION_22	IF_2	CALL_4
0x4000256	      0xe805feffff	          call sym.nlm4svc_retrieve_args	       395	svc4proc.c	FUNCTION_22	IF_2	CALL_4
0x400025b	            0x85c0	                           test eax, eax	       395	svc4proc.c	FUNCTION_22	IF_2	CALL_4
0x400025d	          0x4189c4	                           mov r12d, eax	       395	svc4proc.c	FUNCTION_22	IF_2	CALL_4
0x4000260	          0x894324	             mov dword [rbx + 0x24], eax	       395	svc4proc.c	FUNCTION_22	IF_2	CALL_4
0x4000263	            0x7416	                            je 0x400027b	       395	svc4proc.c	FUNCTION_22	IF_2	CALL_4
0x4000265	      0x3d00007530	                     cmp eax, 0x30750000	       396	svc4proc.c	FUNCTION_22	IF_2
0x400026a	    0x41bc00000000	                             mov r12d, 0	       396	svc4proc.c	FUNCTION_22	IF_2
0x4000270	      0xb80000ea60	                     mov eax, 0x60ea0000	       396	svc4proc.c	FUNCTION_22	IF_2
0x4000275	        0x440f44e0	                         cmove r12d, eax	       396	svc4proc.c	FUNCTION_22	IF_2
0x4000279	            0xebb1	                           jmp 0x400022c	       396	svc4proc.c	FUNCTION_22	IF_2
0x400027b	      0x488b742408	                mov rsi, qword [rsp + 8]	       399	svc4proc.c	FUNCTION_22	CALL_5
0x4000280	        0x488b3c24	                    mov rdi, qword [rsp]	       399	svc4proc.c	FUNCTION_22	CALL_5
0x4000284	          0x4889ea	                            mov rdx, rbp	       399	svc4proc.c	FUNCTION_22	CALL_5
0x4000287	      0xe800000000	                          call 0x400028c	       399	svc4proc.c	FUNCTION_22	CALL_5
0x400028c	        0x488b3c24	                    mov rdi, qword [rsp]	       402	svc4proc.c	FUNCTION_22	CALL_8
0x4000290	          0x894324	             mov dword [rbx + 0x24], eax	       399	svc4proc.c	FUNCTION_22	CALL_5
0x4000293	      0xe800000000	                          call 0x4000298	       402	svc4proc.c	FUNCTION_22	CALL_8
0x4000298	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       403	svc4proc.c	FUNCTION_22	CALL_9
0x400029d	      0xe800000000	                          call 0x40002a2	       403	svc4proc.c	FUNCTION_22	CALL_9
0x40002a2	            0xeb88	                           jmp 0x400022c	       404	svc4proc.c	FUNCTION_22
0x40002a4	      0xe800000000	                          call 0x40002a9	       405	svc4proc.c	FUNCTION_22
nlm4svc_proc_cancel_msg	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,2:IF,0	3
0x4000520	    0x48c7c2000000	                              mov rdx, 0	       324	svc4proc.c	FUNCTION_18	CALL_2
0x4000527	      0xbe0d000000	                            mov esi, 0xd	       324	svc4proc.c	FUNCTION_18	CALL_2
0x400052c	      0xe90fffffff	                jmp sym.nlm4svc_callback	       324	svc4proc.c	FUNCTION_18	CALL_2
nlm4svc_callback_release	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,1:IF,0	1
0x4000430	      0xe900000000	                           jmp 0x4000435	       265	svc4proc.c	FUNCTION_14	CALL_1
nlm4svc_proc_null	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,1:IF,0	2
0x4000040	            0x31c0	                            xor eax, eax	        70	svc4proc.c	FUNCTION_2
0x4000042	              0xc3	                                     ret	        70	svc4proc.c	FUNCTION_2
nlm4svc_proc_free_all	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,3:IF,1	21
0x4000160	        0x4883ec10	                           sub rsp, 0x10	       426	svc4proc.c	FUNCTION_24
0x4000164	    0x488bb7b01a00	          mov rsi, qword [rdi + 0x1ab0] 	       431	svc4proc.c	FUNCTION_24	IF_1	CALL_1
0x400016b	            0x31c9	                            xor ecx, ecx	       431	svc4proc.c	FUNCTION_24	IF_1	CALL_1
0x400016d	          0x4889e2	                            mov rdx, rsp	       431	svc4proc.c	FUNCTION_24	IF_1	CALL_1
0x4000170	    0x65488b042528	                mov rax, qword gs:[0x28]	       426	svc4proc.c	FUNCTION_24
0x4000179	      0x4889442408	                mov qword [rsp + 8], rax	       426	svc4proc.c	FUNCTION_24
0x400017e	            0x31c0	                            xor eax, eax	       426	svc4proc.c	FUNCTION_24
0x4000180	      0xe8dbfeffff	          call sym.nlm4svc_retrieve_args	       431	svc4proc.c	FUNCTION_24	IF_1	CALL_1
0x4000185	            0x85c0	                           test eax, eax	       431	svc4proc.c	FUNCTION_24	IF_1	CALL_1
0x4000187	            0x7512	                           jne 0x400019b	       431	svc4proc.c	FUNCTION_24	IF_1	CALL_1
0x4000189	        0x488b3c24	                    mov rdi, qword [rsp]	       434	svc4proc.c	FUNCTION_24	CALL_2
0x400018d	      0xe800000000	                          call 0x4000192	       434	svc4proc.c	FUNCTION_24	CALL_2
0x4000192	        0x488b3c24	                    mov rdi, qword [rsp]	       435	svc4proc.c	FUNCTION_24	CALL_3
0x4000196	      0xe800000000	                          call 0x400019b	       435	svc4proc.c	FUNCTION_24	CALL_3
0x400019b	            0x31c0	                            xor eax, eax	       437	svc4proc.c	FUNCTION_24
0x400019d	      0x488b542408	                mov rdx, qword [rsp + 8]	       437	svc4proc.c	FUNCTION_24
0x40001a2	    0x654833142528	                xor rdx, qword gs:[0x28]	       437	svc4proc.c	FUNCTION_24
0x40001ab	            0x7505	                           jne 0x40001b2	       437	svc4proc.c	FUNCTION_24
0x40001ad	        0x4883c410	                           add rsp, 0x10	       437	svc4proc.c	FUNCTION_24
0x40001b1	              0xc3	                                     ret	       437	svc4proc.c	FUNCTION_24
0x40001b2	      0xe800000000	                          call 0x40001b7	       437	svc4proc.c	FUNCTION_24
nlm4svc_proc_unlock	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,1:IF,0	2
0x4000680	    0x488bb7b81a00	          mov rsi, qword [rdi + 0x1ab8] 	       228	svc4proc.c	FUNCTION_10	CALL_1
0x4000687	      0xe9f4feffff	           jmp sym.__nlm4svc_proc_unlock	       228	svc4proc.c	FUNCTION_10	CALL_1
__nlm4svc_proc_lock	functions,0:ELSE,2:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,7:IF,3	63
0x40007a0	            0x4155	                                push r13	       110	svc4proc.c	FUNCTION_5
0x40007a2	            0x4154	                                push r12	       110	svc4proc.c	FUNCTION_5
0x40007a4	          0x4989f4	                            mov r12, rsi	       110	svc4proc.c	FUNCTION_5
0x40007a7	              0x55	                                push rbp	       110	svc4proc.c	FUNCTION_5
0x40007a8	              0x53	                                push rbx	       110	svc4proc.c	FUNCTION_5
0x40007a9	          0x4989fd	                            mov r13, rdi	       110	svc4proc.c	FUNCTION_5
0x40007ac	        0x4883ec18	                           sub rsp, 0x18	       110	svc4proc.c	FUNCTION_5
0x40007b0	    0x488b9fb01a00	          mov rbx, qword [rdi + 0x1ab0] 	       111	svc4proc.c	FUNCTION_5
0x40007b7	    0x65488b042528	                mov rax, qword gs:[0x28]	       110	svc4proc.c	FUNCTION_5
0x40007c0	      0x4889442410	             mov qword [rsp + 0x10], rax	       110	svc4proc.c	FUNCTION_5
0x40007c5	            0x31c0	                            xor eax, eax	       110	svc4proc.c	FUNCTION_5
0x40007c7	      0x488d4c2408	                      lea rcx, [rsp + 8]	       121	svc4proc.c	FUNCTION_5	IF_1	CALL_2
0x40007cc	          0x4889e2	                            mov rdx, rsp	       121	svc4proc.c	FUNCTION_5	IF_1	CALL_2
0x40007cf	          0x488b03	                    mov rax, qword [rbx]	       118	svc4proc.c	FUNCTION_5
0x40007d2	          0x488906	                    mov qword [rsi], rax	       118	svc4proc.c	FUNCTION_5
0x40007d5	        0x488b4308	                mov rax, qword [rbx + 8]	       118	svc4proc.c	FUNCTION_5
0x40007d9	        0x48894608	                mov qword [rsi + 8], rax	       118	svc4proc.c	FUNCTION_5
0x40007dd	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       118	svc4proc.c	FUNCTION_5
0x40007e1	        0x48894610	             mov qword [rsi + 0x10], rax	       118	svc4proc.c	FUNCTION_5
0x40007e5	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       118	svc4proc.c	FUNCTION_5
0x40007e9	        0x48894618	             mov qword [rsi + 0x18], rax	       118	svc4proc.c	FUNCTION_5
0x40007ed	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       118	svc4proc.c	FUNCTION_5
0x40007f0	          0x894620	             mov dword [rsi + 0x20], eax	       118	svc4proc.c	FUNCTION_5
0x40007f3	          0x4889de	                            mov rsi, rbx	       121	svc4proc.c	FUNCTION_5	IF_1	CALL_2
0x40007f6	      0xe865f8ffff	          call sym.nlm4svc_retrieve_args	       121	svc4proc.c	FUNCTION_5	IF_1	CALL_2
0x40007fb	            0x85c0	                           test eax, eax	       121	svc4proc.c	FUNCTION_5	IF_1	CALL_2
0x40007fd	            0x89c5	                            mov ebp, eax	       121	svc4proc.c	FUNCTION_5	IF_1	CALL_2
0x40007ff	      0x4189442424	             mov dword [r12 + 0x24], eax	       121	svc4proc.c	FUNCTION_5	IF_1	CALL_2
0x4000804	            0x742d	                            je 0x4000833	       121	svc4proc.c	FUNCTION_5	IF_1	CALL_2
0x4000806	      0x3d00007530	                     cmp eax, 0x30750000	       122	svc4proc.c	FUNCTION_5	IF_1
0x400080b	      0xbd00000000	                              mov ebp, 0	       122	svc4proc.c	FUNCTION_5	IF_1
0x4000810	      0xb80000ea60	                     mov eax, 0x60ea0000	       122	svc4proc.c	FUNCTION_5	IF_1
0x4000815	           0xf45c5	                         cmovne eax, ebp	       122	svc4proc.c	FUNCTION_5	IF_1
0x4000818	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       148	svc4proc.c	FUNCTION_5
0x400081d	    0x654833142528	                xor rdx, qword gs:[0x28]	       148	svc4proc.c	FUNCTION_5
0x4000826	            0x755c	                           jne 0x4000884	       148	svc4proc.c	FUNCTION_5
0x4000828	        0x4883c418	                           add rsp, 0x18	       148	svc4proc.c	FUNCTION_5
0x400082c	              0x5b	                                 pop rbx	       148	svc4proc.c	FUNCTION_5
0x400082d	              0x5d	                                 pop rbp	       148	svc4proc.c	FUNCTION_5
0x400082e	            0x415c	                                 pop r12	       148	svc4proc.c	FUNCTION_5
0x4000830	            0x415d	                                 pop r13	       148	svc4proc.c	FUNCTION_5
0x4000832	              0xc3	                                     ret	       148	svc4proc.c	FUNCTION_5
0x4000833	    0x8b839c010000	           mov eax, dword [rbx + 0x19c] 	       137	svc4proc.c	FUNCTION_5	ELSE_1	CALL_3
0x4000839	        0x488d4b28	                   lea rcx, [rbx + 0x28]	       137	svc4proc.c	FUNCTION_5	ELSE_1	CALL_3
0x400083d	          0x4989d9	                             mov r9, rbx	       137	svc4proc.c	FUNCTION_5	ELSE_1	CALL_3
0x4000840	          0x4c89ef	                            mov rdi, r13	       137	svc4proc.c	FUNCTION_5	ELSE_1	CALL_3
0x4000843	              0x50	                                push rax	       137	svc4proc.c	FUNCTION_5	ELSE_1	CALL_3
0x4000844	    0x448b83980100	           mov r8d, dword [rbx + 0x198] 	       137	svc4proc.c	FUNCTION_5	ELSE_1	CALL_3
0x400084b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       137	svc4proc.c	FUNCTION_5	ELSE_1	CALL_3
0x4000850	      0x488b542408	                mov rdx, qword [rsp + 8]	       137	svc4proc.c	FUNCTION_5	ELSE_1	CALL_3
0x4000855	      0xe800000000	                          call 0x400085a	       137	svc4proc.c	FUNCTION_5	ELSE_1	CALL_3
0x400085a	              0x5a	                                 pop rdx	       140	svc4proc.c	FUNCTION_5	IF_3
0x400085b	        0x488b3c24	                    mov rdi, qword [rsp]	       145	svc4proc.c	FUNCTION_5	CALL_6
0x400085f	      0x3d00007530	                     cmp eax, 0x30750000	       141	svc4proc.c	FUNCTION_5	IF_3
0x4000864	      0x4189442424	             mov dword [r12 + 0x24], eax	       137	svc4proc.c	FUNCTION_5	ELSE_1	CALL_3
0x4000869	      0xb80000ea60	                     mov eax, 0x60ea0000	       141	svc4proc.c	FUNCTION_5	IF_3
0x400086e	           0xf44e8	                          cmove ebp, eax	       141	svc4proc.c	FUNCTION_5	IF_3
0x4000871	      0xe800000000	                          call 0x4000876	       145	svc4proc.c	FUNCTION_5	CALL_6
0x4000876	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       146	svc4proc.c	FUNCTION_5	CALL_7
0x400087b	      0xe800000000	                          call 0x4000880	       146	svc4proc.c	FUNCTION_5	CALL_7
0x4000880	            0x89e8	                            mov eax, ebp	       147	svc4proc.c	FUNCTION_5
0x4000882	            0xeb94	                           jmp 0x4000818	       147	svc4proc.c	FUNCTION_5
0x4000884	      0xe800000000	                          call 0x4000889	       148	svc4proc.c	FUNCTION_5
nlm4svc_proc_lock_msg	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,2:IF,0	3
0x4000540	    0x48c7c2000000	                              mov rdx, 0	       318	svc4proc.c	FUNCTION_17	CALL_2
0x4000547	      0xbe0c000000	                            mov esi, 0xc	       318	svc4proc.c	FUNCTION_17	CALL_2
0x400054c	      0xe9effeffff	                jmp sym.nlm4svc_callback	       318	svc4proc.c	FUNCTION_17	CALL_2
__nlm4svc_proc_test	functions,0:ELSE,1:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,7:IF,2	60
0x40008c0	            0x4155	                                push r13	        77	svc4proc.c	FUNCTION_3
0x40008c2	            0x4154	                                push r12	        77	svc4proc.c	FUNCTION_3
0x40008c4	          0x4989fd	                            mov r13, rdi	        77	svc4proc.c	FUNCTION_3
0x40008c7	              0x55	                                push rbp	        77	svc4proc.c	FUNCTION_3
0x40008c8	              0x53	                                push rbx	        77	svc4proc.c	FUNCTION_3
0x40008c9	          0x4889f5	                            mov rbp, rsi	        77	svc4proc.c	FUNCTION_3
0x40008cc	        0x4883ec18	                           sub rsp, 0x18	        77	svc4proc.c	FUNCTION_3
0x40008d0	    0x4c8ba7b01a00	          mov r12, qword [rdi + 0x1ab0] 	        78	svc4proc.c	FUNCTION_3
0x40008d7	    0x65488b042528	                mov rax, qword gs:[0x28]	        77	svc4proc.c	FUNCTION_3
0x40008e0	      0x4889442410	             mov qword [rsp + 0x10], rax	        77	svc4proc.c	FUNCTION_3
0x40008e5	            0x31c0	                            xor eax, eax	        77	svc4proc.c	FUNCTION_3
0x40008e7	      0x488d4c2408	                      lea rcx, [rsp + 8]	        87	svc4proc.c	FUNCTION_3	IF_1	CALL_2
0x40008ec	          0x4889e2	                            mov rdx, rsp	        87	svc4proc.c	FUNCTION_3	IF_1	CALL_2
0x40008ef	        0x498b0424	                    mov rax, qword [r12]	        84	svc4proc.c	FUNCTION_3
0x40008f3	          0x488906	                    mov qword [rsi], rax	        84	svc4proc.c	FUNCTION_3
0x40008f6	      0x498b442408	                mov rax, qword [r12 + 8]	        84	svc4proc.c	FUNCTION_3
0x40008fb	        0x48894608	                mov qword [rsi + 8], rax	        84	svc4proc.c	FUNCTION_3
0x40008ff	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        84	svc4proc.c	FUNCTION_3
0x4000904	        0x48894610	             mov qword [rsi + 0x10], rax	        84	svc4proc.c	FUNCTION_3
0x4000908	      0x498b442418	            mov rax, qword [r12 + 0x18] 	        84	svc4proc.c	FUNCTION_3
0x400090d	        0x48894618	             mov qword [rsi + 0x18], rax	        84	svc4proc.c	FUNCTION_3
0x4000911	      0x418b442420	            mov eax, dword [r12 + 0x20] 	        84	svc4proc.c	FUNCTION_3
0x4000916	          0x894620	             mov dword [rsi + 0x20], eax	        84	svc4proc.c	FUNCTION_3
0x4000919	          0x4c89e6	                            mov rsi, r12	        87	svc4proc.c	FUNCTION_3	IF_1	CALL_2
0x400091c	      0xe83ff7ffff	          call sym.nlm4svc_retrieve_args	        87	svc4proc.c	FUNCTION_3	IF_1	CALL_2
0x4000921	            0x85c0	                           test eax, eax	        87	svc4proc.c	FUNCTION_3	IF_1	CALL_2
0x4000923	            0x89c3	                            mov ebx, eax	        87	svc4proc.c	FUNCTION_3	IF_1	CALL_2
0x4000925	          0x894524	            mov dword [rbp + 0x24], eax 	        87	svc4proc.c	FUNCTION_3	IF_1	CALL_2
0x4000928	            0x742d	                            je 0x4000957	        87	svc4proc.c	FUNCTION_3	IF_1	CALL_2
0x400092a	      0x3d00007530	                     cmp eax, 0x30750000	        88	svc4proc.c	FUNCTION_3	IF_1
0x400092f	      0xbb00000000	                              mov ebx, 0	        88	svc4proc.c	FUNCTION_3	IF_1
0x4000934	      0xb80000ea60	                     mov eax, 0x60ea0000	        88	svc4proc.c	FUNCTION_3	IF_1
0x4000939	           0xf45c3	                         cmovne eax, ebx	        88	svc4proc.c	FUNCTION_3	IF_1
0x400093c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       100	svc4proc.c	FUNCTION_3
0x4000941	    0x654833142528	                xor rdx, qword gs:[0x28]	       100	svc4proc.c	FUNCTION_3
0x400094a	            0x754f	                           jne 0x400099b	       100	svc4proc.c	FUNCTION_3
0x400094c	        0x4883c418	                           add rsp, 0x18	       100	svc4proc.c	FUNCTION_3
0x4000950	              0x5b	                                 pop rbx	       100	svc4proc.c	FUNCTION_3
0x4000951	              0x5d	                                 pop rbp	       100	svc4proc.c	FUNCTION_3
0x4000952	            0x415c	                                 pop r12	       100	svc4proc.c	FUNCTION_3
0x4000954	            0x415d	                                 pop r13	       100	svc4proc.c	FUNCTION_3
0x4000956	              0xc3	                                     ret	       100	svc4proc.c	FUNCTION_3
0x4000957	        0x488b1424	                    mov rdx, qword [rsp]	        91	svc4proc.c	FUNCTION_3	CALL_3
0x400095b	      0x488b742408	                mov rsi, qword [rsp + 8]	        91	svc4proc.c	FUNCTION_3	CALL_3
0x4000960	      0x498d4c2428	                   lea rcx, [r12 + 0x28]	        91	svc4proc.c	FUNCTION_3	CALL_3
0x4000965	        0x4c8d4528	                    lea r8, [rbp + 0x28]	        91	svc4proc.c	FUNCTION_3	CALL_3
0x4000969	          0x4989e9	                             mov r9, rbp	        91	svc4proc.c	FUNCTION_3	CALL_3
0x400096c	          0x4c89ef	                            mov rdi, r13	        91	svc4proc.c	FUNCTION_3	CALL_3
0x400096f	      0xe800000000	                          call 0x4000974	        91	svc4proc.c	FUNCTION_3	CALL_3
0x4000974	        0x488b3c24	                    mov rdi, qword [rsp]	        97	svc4proc.c	FUNCTION_3	CALL_6
0x4000978	      0x3d00007530	                     cmp eax, 0x30750000	        93	svc4proc.c	FUNCTION_3	IF_2
0x400097d	          0x894524	            mov dword [rbp + 0x24], eax 	        91	svc4proc.c	FUNCTION_3	CALL_3
0x4000980	      0xb80000ea60	                     mov eax, 0x60ea0000	        93	svc4proc.c	FUNCTION_3	IF_2
0x4000985	           0xf44d8	                          cmove ebx, eax	        93	svc4proc.c	FUNCTION_3	IF_2
0x4000988	      0xe800000000	                          call 0x400098d	        97	svc4proc.c	FUNCTION_3	CALL_6
0x400098d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        98	svc4proc.c	FUNCTION_3	CALL_7
0x4000992	      0xe800000000	                          call 0x4000997	        98	svc4proc.c	FUNCTION_3	CALL_7
0x4000997	            0x89d8	                            mov eax, ebx	        99	svc4proc.c	FUNCTION_3
0x4000999	            0xeba1	                           jmp 0x400093c	        99	svc4proc.c	FUNCTION_3
0x400099b	      0xe800000000	              call sym.nlm4svc_proc_test	       100	svc4proc.c	FUNCTION_3
nlm4svc_proc_test	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,1:IF,0	2
0x40009a0	    0x488bb7b81a00	          mov rsi, qword [rdi + 0x1ab8] 	       105	svc4proc.c	FUNCTION_4	CALL_1
0x40009a7	      0xe914ffffff	             jmp sym.__nlm4svc_proc_test	       105	svc4proc.c	FUNCTION_4	CALL_1
nlm4svc_proc_share	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,9:IF,2	65
0x40002b0	            0x4155	                                push r13	       344	svc4proc.c	FUNCTION_21
0x40002b2	            0x4154	                                push r12	       344	svc4proc.c	FUNCTION_21
0x40002b4	          0x4989fd	                            mov r13, rdi	       344	svc4proc.c	FUNCTION_21
0x40002b7	              0x55	                                push rbp	       344	svc4proc.c	FUNCTION_21
0x40002b8	              0x53	                                push rbx	       344	svc4proc.c	FUNCTION_21
0x40002b9	        0x4883ec18	                           sub rsp, 0x18	       344	svc4proc.c	FUNCTION_21
0x40002bd	    0x488b9fb01a00	          mov rbx, qword [rdi + 0x1ab0] 	       345	svc4proc.c	FUNCTION_21
0x40002c4	    0x488bafb81a00	          mov rbp, qword [rdi + 0x1ab8] 	       346	svc4proc.c	FUNCTION_21
0x40002cb	    0x65488b042528	                mov rax, qword gs:[0x28]	       344	svc4proc.c	FUNCTION_21
0x40002d4	      0x4889442410	             mov qword [rsp + 0x10], rax	       344	svc4proc.c	FUNCTION_21
0x40002d9	            0x31c0	                            xor eax, eax	       344	svc4proc.c	FUNCTION_21
0x40002db	          0x488b03	                    mov rax, qword [rbx]	       352	svc4proc.c	FUNCTION_21
0x40002de	        0x48894500	                    mov qword [rbp], rax	       352	svc4proc.c	FUNCTION_21
0x40002e2	        0x488b4308	                mov rax, qword [rbx + 8]	       352	svc4proc.c	FUNCTION_21
0x40002e6	        0x48894508	                mov qword [rbp + 8], rax	       352	svc4proc.c	FUNCTION_21
0x40002ea	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       352	svc4proc.c	FUNCTION_21
0x40002ee	        0x48894510	            mov qword [rbp + 0x10], rax 	       352	svc4proc.c	FUNCTION_21
0x40002f2	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       352	svc4proc.c	FUNCTION_21
0x40002f6	        0x48894518	            mov qword [rbp + 0x18], rax 	       352	svc4proc.c	FUNCTION_21
0x40002fa	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       352	svc4proc.c	FUNCTION_21
0x40002fd	          0x894520	            mov dword [rbp + 0x20], eax 	       352	svc4proc.c	FUNCTION_21
0x4000300	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       355	svc4proc.c	FUNCTION_21	IF_1	CALL_3
0x4000304	    0x488bb8900200	           mov rdi, qword [rax + 0x290] 	       355	svc4proc.c	FUNCTION_21	IF_1	CALL_3
0x400030b	      0xe800000000	                          call 0x4000310	       355	svc4proc.c	FUNCTION_21	IF_1	CALL_3
0x4000310	            0x84c0	                             test al, al	       355	svc4proc.c	FUNCTION_21	IF_1	CALL_3
0x4000312	            0x740c	                            je 0x4000320	       355	svc4proc.c	FUNCTION_21	IF_1	CALL_3
0x4000314	    0x448ba39c0100	          mov r12d, dword [rbx + 0x19c] 	       355	svc4proc.c	FUNCTION_21	IF_1	CALL_3
0x400031b	          0x4585e4	                         test r12d, r12d	       355	svc4proc.c	FUNCTION_21	IF_1	CALL_3
0x400031e	            0x744f	                            je 0x400036f	       355	svc4proc.c	FUNCTION_21	IF_1	CALL_3
0x4000320	      0x488d4c2408	                      lea rcx, [rsp + 8]	       361	svc4proc.c	FUNCTION_21	IF_2	CALL_4
0x4000325	          0x4889e2	                            mov rdx, rsp	       361	svc4proc.c	FUNCTION_21	IF_2	CALL_4
0x4000328	          0x4889de	                            mov rsi, rbx	       361	svc4proc.c	FUNCTION_21	IF_2	CALL_4
0x400032b	          0x4c89ef	                            mov rdi, r13	       361	svc4proc.c	FUNCTION_21	IF_2	CALL_4
0x400032e	      0xe82dfdffff	          call sym.nlm4svc_retrieve_args	       361	svc4proc.c	FUNCTION_21	IF_2	CALL_4
0x4000333	            0x85c0	                           test eax, eax	       361	svc4proc.c	FUNCTION_21	IF_2	CALL_4
0x4000335	          0x4189c4	                           mov r12d, eax	       361	svc4proc.c	FUNCTION_21	IF_2	CALL_4
0x4000338	          0x894524	            mov dword [rbp + 0x24], eax 	       361	svc4proc.c	FUNCTION_21	IF_2	CALL_4
0x400033b	            0x743b	                            je 0x4000378	       361	svc4proc.c	FUNCTION_21	IF_2	CALL_4
0x400033d	      0x3d00007530	                     cmp eax, 0x30750000	       362	svc4proc.c	FUNCTION_21	IF_2
0x4000342	    0x41bc00000000	                             mov r12d, 0	       362	svc4proc.c	FUNCTION_21	IF_2
0x4000348	      0xb80000ea60	                     mov eax, 0x60ea0000	       362	svc4proc.c	FUNCTION_21	IF_2
0x400034d	        0x440f44e0	                         cmove r12d, eax	       362	svc4proc.c	FUNCTION_21	IF_2
0x4000351	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       371	svc4proc.c	FUNCTION_21
0x4000356	    0x654833142528	                xor rdx, qword gs:[0x28]	       371	svc4proc.c	FUNCTION_21
0x400035f	          0x4489e0	                           mov eax, r12d	       371	svc4proc.c	FUNCTION_21
0x4000362	            0x753d	                           jne 0x40003a1	       371	svc4proc.c	FUNCTION_21
0x4000364	        0x4883c418	                           add rsp, 0x18	       371	svc4proc.c	FUNCTION_21
0x4000368	              0x5b	                                 pop rbx	       371	svc4proc.c	FUNCTION_21
0x4000369	              0x5d	                                 pop rbp	       371	svc4proc.c	FUNCTION_21
0x400036a	            0x415c	                                 pop r12	       371	svc4proc.c	FUNCTION_21
0x400036c	            0x415d	                                 pop r13	       371	svc4proc.c	FUNCTION_21
0x400036e	              0xc3	                                     ret	       371	svc4proc.c	FUNCTION_21
0x400036f	    0xc74524000000	mov dword [rbp + 0x24], loc.imp.nlm4svc_decode_notify 	       356	svc4proc.c	FUNCTION_21	IF_1
0x4000376	            0xebd9	                           jmp 0x4000351	       357	svc4proc.c	FUNCTION_21	IF_1
0x4000378	      0x488b742408	                mov rsi, qword [rsp + 8]	       365	svc4proc.c	FUNCTION_21	CALL_5
0x400037d	        0x488b3c24	                    mov rdi, qword [rsp]	       365	svc4proc.c	FUNCTION_21	CALL_5
0x4000381	          0x4889da	                            mov rdx, rbx	       365	svc4proc.c	FUNCTION_21	CALL_5
0x4000384	      0xe800000000	                          call 0x4000389	       365	svc4proc.c	FUNCTION_21	CALL_5
0x4000389	        0x488b3c24	                    mov rdi, qword [rsp]	       368	svc4proc.c	FUNCTION_21	CALL_8
0x400038d	          0x894524	            mov dword [rbp + 0x24], eax 	       365	svc4proc.c	FUNCTION_21	CALL_5
0x4000390	      0xe800000000	                          call 0x4000395	       368	svc4proc.c	FUNCTION_21	CALL_8
0x4000395	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       369	svc4proc.c	FUNCTION_21	CALL_9
0x400039a	      0xe800000000	                          call 0x400039f	       369	svc4proc.c	FUNCTION_21	CALL_9
0x400039f	            0xebb0	                           jmp 0x4000351	       370	svc4proc.c	FUNCTION_21
0x40003a1	      0xe800000000	                          call 0x40003a6	       371	svc4proc.c	FUNCTION_21
__nlm4svc_proc_unlock	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,10:IF,2	64
0x4000580	            0x4155	                                push r13	       197	svc4proc.c	FUNCTION_9
0x4000582	            0x4154	                                push r12	       197	svc4proc.c	FUNCTION_9
0x4000584	          0x4989fd	                            mov r13, rdi	       197	svc4proc.c	FUNCTION_9
0x4000587	              0x55	                                push rbp	       197	svc4proc.c	FUNCTION_9
0x4000588	              0x53	                                push rbx	       197	svc4proc.c	FUNCTION_9
0x4000589	          0x4889f3	                            mov rbx, rsi	       197	svc4proc.c	FUNCTION_9
0x400058c	        0x4883ec18	                           sub rsp, 0x18	       197	svc4proc.c	FUNCTION_9
0x4000590	    0x488bafb01a00	          mov rbp, qword [rdi + 0x1ab0] 	       198	svc4proc.c	FUNCTION_9
0x4000597	    0x65488b042528	                mov rax, qword gs:[0x28]	       197	svc4proc.c	FUNCTION_9
0x40005a0	      0x4889442410	             mov qword [rsp + 0x10], rax	       197	svc4proc.c	FUNCTION_9
0x40005a5	            0x31c0	                            xor eax, eax	       197	svc4proc.c	FUNCTION_9
0x40005a7	        0x488b4500	                    mov rax, qword [rbp]	       204	svc4proc.c	FUNCTION_9
0x40005ab	          0x488906	                    mov qword [rsi], rax	       204	svc4proc.c	FUNCTION_9
0x40005ae	        0x488b4508	                mov rax, qword [rbp + 8]	       204	svc4proc.c	FUNCTION_9
0x40005b2	        0x48894608	                mov qword [rsi + 8], rax	       204	svc4proc.c	FUNCTION_9
0x40005b6	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       204	svc4proc.c	FUNCTION_9
0x40005ba	        0x48894610	             mov qword [rsi + 0x10], rax	       204	svc4proc.c	FUNCTION_9
0x40005be	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       204	svc4proc.c	FUNCTION_9
0x40005c2	        0x48894618	             mov qword [rsi + 0x18], rax	       204	svc4proc.c	FUNCTION_9
0x40005c6	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       204	svc4proc.c	FUNCTION_9
0x40005c9	          0x894620	             mov dword [rsi + 0x20], eax	       204	svc4proc.c	FUNCTION_9
0x40005cc	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       207	svc4proc.c	FUNCTION_9	IF_1	CALL_3
0x40005d0	    0x488bb8900200	           mov rdi, qword [rax + 0x290] 	       207	svc4proc.c	FUNCTION_9	IF_1	CALL_3
0x40005d7	      0xe800000000	                          call 0x40005dc	       207	svc4proc.c	FUNCTION_9	IF_1	CALL_3
0x40005dc	            0x84c0	                             test al, al	       207	svc4proc.c	FUNCTION_9	IF_1	CALL_3
0x40005de	            0x7428	                            je 0x4000608	       207	svc4proc.c	FUNCTION_9	IF_1	CALL_3
0x40005e0	    0xc74324000000	mov dword [rbx + 0x24], loc.imp.nlm4svc_decode_notify 	       208	svc4proc.c	FUNCTION_9	IF_1
0x40005e7	          0x4531e4	                          xor r12d, r12d	       209	svc4proc.c	FUNCTION_9	IF_1
0x40005ea	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       223	svc4proc.c	FUNCTION_9
0x40005ef	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       223	svc4proc.c	FUNCTION_9
0x40005f8	          0x4489e0	                           mov eax, r12d	       223	svc4proc.c	FUNCTION_9
0x40005fb	            0x7572	                           jne 0x400066f	       223	svc4proc.c	FUNCTION_9
0x40005fd	        0x4883c418	                           add rsp, 0x18	       223	svc4proc.c	FUNCTION_9
0x4000601	              0x5b	                                 pop rbx	       223	svc4proc.c	FUNCTION_9
0x4000602	              0x5d	                                 pop rbp	       223	svc4proc.c	FUNCTION_9
0x4000603	            0x415c	                                 pop r12	       223	svc4proc.c	FUNCTION_9
0x4000605	            0x415d	                                 pop r13	       223	svc4proc.c	FUNCTION_9
0x4000607	              0xc3	                                     ret	       223	svc4proc.c	FUNCTION_9
0x4000608	      0x488d4c2408	                      lea rcx, [rsp + 8]	       213	svc4proc.c	FUNCTION_9	IF_2	CALL_4
0x400060d	          0x4889e2	                            mov rdx, rsp	       213	svc4proc.c	FUNCTION_9	IF_2	CALL_4
0x4000610	          0x4889ee	                            mov rsi, rbp	       213	svc4proc.c	FUNCTION_9	IF_2	CALL_4
0x4000613	          0x4c89ef	                            mov rdi, r13	       213	svc4proc.c	FUNCTION_9	IF_2	CALL_4
0x4000616	      0xe845faffff	          call sym.nlm4svc_retrieve_args	       213	svc4proc.c	FUNCTION_9	IF_2	CALL_4
0x400061b	            0x85c0	                           test eax, eax	       213	svc4proc.c	FUNCTION_9	IF_2	CALL_4
0x400061d	          0x4189c4	                           mov r12d, eax	       213	svc4proc.c	FUNCTION_9	IF_2	CALL_4
0x4000620	          0x894324	             mov dword [rbx + 0x24], eax	       213	svc4proc.c	FUNCTION_9	IF_2	CALL_4
0x4000623	            0x7416	                            je 0x400063b	       213	svc4proc.c	FUNCTION_9	IF_2	CALL_4
0x4000625	      0x3d00007530	                     cmp eax, 0x30750000	       214	svc4proc.c	FUNCTION_9	IF_2
0x400062a	    0x41bc00000000	                             mov r12d, 0	       214	svc4proc.c	FUNCTION_9	IF_2
0x4000630	      0xb80000ea60	                     mov eax, 0x60ea0000	       214	svc4proc.c	FUNCTION_9	IF_2
0x4000635	        0x440f44e0	                         cmove r12d, eax	       214	svc4proc.c	FUNCTION_9	IF_2
0x4000639	            0xebaf	                           jmp 0x40005ea	       214	svc4proc.c	FUNCTION_9	IF_2
0x400063b	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       217	svc4proc.c	FUNCTION_9	CALL_6
0x400063f	      0x488b742408	                mov rsi, qword [rsp + 8]	       217	svc4proc.c	FUNCTION_9	CALL_6
0x4000644	        0x488d5528	                   lea rdx, [rbp + 0x28]	       217	svc4proc.c	FUNCTION_9	CALL_6
0x4000648	    0x488bb8900200	           mov rdi, qword [rax + 0x290] 	       217	svc4proc.c	FUNCTION_9	CALL_6
0x400064f	      0xe800000000	                          call 0x4000654	       217	svc4proc.c	FUNCTION_9	CALL_6
0x4000654	        0x488b3c24	                    mov rdi, qword [rsp]	       220	svc4proc.c	FUNCTION_9	CALL_9
0x4000658	          0x894324	             mov dword [rbx + 0x24], eax	       217	svc4proc.c	FUNCTION_9	CALL_6
0x400065b	      0xe800000000	                          call 0x4000660	       220	svc4proc.c	FUNCTION_9	CALL_9
0x4000660	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       221	svc4proc.c	FUNCTION_9	CALL_10
0x4000665	      0xe800000000	                          call 0x400066a	       221	svc4proc.c	FUNCTION_9	CALL_10
0x400066a	      0xe97bffffff	                           jmp 0x40005ea	       222	svc4proc.c	FUNCTION_9
0x400066f	      0xe800000000	                          call 0x4000674	       223	svc4proc.c	FUNCTION_9
nlm4svc_callback	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,7:IF,4	53
0x4000440	            0x4156	                                push r14	       280	svc4proc.c	FUNCTION_15
0x4000442	            0x4155	                                push r13	       280	svc4proc.c	FUNCTION_15
0x4000444	          0x4989d5	                            mov r13, rdx	       280	svc4proc.c	FUNCTION_15
0x4000447	            0x4154	                                push r12	       280	svc4proc.c	FUNCTION_15
0x4000449	              0x55	                                push rbp	       280	svc4proc.c	FUNCTION_15
0x400044a	          0x4189f4	                           mov r12d, esi	       280	svc4proc.c	FUNCTION_15
0x400044d	              0x53	                                push rbx	       280	svc4proc.c	FUNCTION_15
0x400044e	    0x488b87b01a00	          mov rax, qword [rdi + 0x1ab0] 	       281	svc4proc.c	FUNCTION_15
0x4000455	          0x4889fb	                            mov rbx, rdi	       280	svc4proc.c	FUNCTION_15
0x4000458	          0x8b5030	            mov edx, dword [rax + 0x30] 	       286	svc4proc.c	FUNCTION_15	CALL_2
0x400045b	        0x488b7028	            mov rsi, qword [rax + 0x28] 	       286	svc4proc.c	FUNCTION_15	CALL_2
0x400045f	      0xe800000000	                          call 0x4000464	       286	svc4proc.c	FUNCTION_15	CALL_2
0x4000464	          0x4885c0	                           test rax, rax	       289	svc4proc.c	FUNCTION_15	IF_1
0x4000467	            0x7452	                            je 0x40004bb	       289	svc4proc.c	FUNCTION_15	IF_1
0x4000469	          0x4889c5	                            mov rbp, rax	       289	svc4proc.c	FUNCTION_15	IF_1
0x400046c	          0x4889c7	                            mov rdi, rax	       292	svc4proc.c	FUNCTION_15	CALL_3
0x400046f	      0xe800000000	                          call 0x4000474	       292	svc4proc.c	FUNCTION_15	CALL_3
0x4000474	          0x4889ef	                            mov rdi, rbp	       293	svc4proc.c	FUNCTION_15	CALL_4
0x4000477	          0x4989c6	                            mov r14, rax	       292	svc4proc.c	FUNCTION_15	CALL_3
0x400047a	      0xe800000000	                          call 0x400047f	       293	svc4proc.c	FUNCTION_15	CALL_4
0x400047f	          0x4d85f6	                           test r14, r14	       294	svc4proc.c	FUNCTION_15	IF_2
0x4000482	            0x7437	                            je 0x40004bb	       294	svc4proc.c	FUNCTION_15	IF_2
0x4000484	          0x4889df	                            mov rdi, rbx	       297	svc4proc.c	FUNCTION_15	CALL_5
0x4000487	    0x498db6c00100	                  lea rsi, [r14 + 0x1c0]	       297	svc4proc.c	FUNCTION_15	CALL_5
0x400048e	      0xe800000000	                          call 0x4000493	       297	svc4proc.c	FUNCTION_15	CALL_5
0x4000493	            0x85c0	                           test eax, eax	       298	svc4proc.c	FUNCTION_15	IF_3
0x4000495	            0x89c3	                            mov ebx, eax	       297	svc4proc.c	FUNCTION_15	CALL_5
0x4000497	            0x7530	                           jne 0x40004c9	       298	svc4proc.c	FUNCTION_15	IF_3
0x4000499	    0x41c746040100	                  mov dword [r14 + 4], 1	       303	svc4proc.c	FUNCTION_15
0x40004a1	    0x48c7c2000000	                              mov rdx, 0	       304	svc4proc.c	FUNCTION_15	IF_4	CALL_7
0x40004a8	          0x4489e6	                           mov esi, r12d	       304	svc4proc.c	FUNCTION_15	IF_4	CALL_7
0x40004ab	          0x4c89f7	                            mov rdi, r14	       304	svc4proc.c	FUNCTION_15	IF_4	CALL_7
0x40004ae	      0xe800000000	                          call 0x40004b3	       304	svc4proc.c	FUNCTION_15	IF_4	CALL_7
0x40004b3	            0x85c0	                           test eax, eax	       304	svc4proc.c	FUNCTION_15	IF_4	CALL_7
0x40004b5	            0x7804	                            js 0x40004bb	       304	svc4proc.c	FUNCTION_15	IF_4	CALL_7
0x40004b7	            0x31c0	                            xor eax, eax	       306	svc4proc.c	FUNCTION_15
0x40004b9	            0xeb05	                           jmp 0x40004c0	       306	svc4proc.c	FUNCTION_15
0x40004bb	      0xb800000005	                      mov eax, 0x5000000	       290	svc4proc.c	FUNCTION_15	IF_1
0x40004c0	              0x5b	                                 pop rbx	       307	svc4proc.c	FUNCTION_15
0x40004c1	              0x5d	                                 pop rbp	       307	svc4proc.c	FUNCTION_15
0x40004c2	            0x415c	                                 pop r12	       307	svc4proc.c	FUNCTION_15
0x40004c4	            0x415d	                                 pop r13	       307	svc4proc.c	FUNCTION_15
0x40004c6	            0x415e	                                 pop r14	       307	svc4proc.c	FUNCTION_15
0x40004c8	              0xc3	                                     ret	       307	svc4proc.c	FUNCTION_15
0x40004c9	          0x4c89f7	                            mov rdi, r14	       299	svc4proc.c	FUNCTION_15	IF_3	CALL_6
0x40004cc	      0xe800000000	                          call 0x40004d1	       299	svc4proc.c	FUNCTION_15	IF_3	CALL_6
0x40004d1	            0x89d8	                            mov eax, ebx	       300	svc4proc.c	FUNCTION_15	IF_3
0x40004d3	              0x5b	                                 pop rbx	       307	svc4proc.c	FUNCTION_15
0x40004d4	              0x5d	                                 pop rbp	       307	svc4proc.c	FUNCTION_15
0x40004d5	            0x415c	                                 pop r12	       307	svc4proc.c	FUNCTION_15
0x40004d7	            0x415d	                                 pop r13	       307	svc4proc.c	FUNCTION_15
0x40004d9	            0x415e	                                 pop r14	       307	svc4proc.c	FUNCTION_15
0x40004db	              0xc3	                                     ret	       307	svc4proc.c	FUNCTION_15
nlm4svc_proc_granted_res	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,2:IF,1	7
0x40003b0	    0x48833d000000	               cmp qword [0x040003b8], 0	       468	svc4proc.c	FUNCTION_26	IF_1
0x40003b8	            0x740f	                            je 0x40003c9	       468	svc4proc.c	FUNCTION_26	IF_1
0x40003ba	    0x488bbfb01a00	          mov rdi, qword [rdi + 0x1ab0] 	       466	svc4proc.c	FUNCTION_26
0x40003c1	          0x8b7724	            mov esi, dword [rdi + 0x24] 	       473	svc4proc.c	FUNCTION_26	CALL_2
0x40003c4	      0xe800000000	                          call 0x40003c9	       473	svc4proc.c	FUNCTION_26	CALL_2
0x40003c9	            0x31c0	                            xor eax, eax	       475	svc4proc.c	FUNCTION_26
0x40003cb	              0xc3	                                     ret	       475	svc4proc.c	FUNCTION_26
nlm4svc_proc_granted	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,1:IF,0	2
0x4000420	    0x488bb7b81a00	          mov rsi, qword [rdi + 0x1ab8] 	       251	svc4proc.c	FUNCTION_12	CALL_1
0x4000427	            0xeba7	          jmp sym.__nlm4svc_proc_granted	       251	svc4proc.c	FUNCTION_12	CALL_1
nlm4svc_proc_granted_msg	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,2:IF,0	3
0x40004e0	    0x48c7c2000000	                              mov rdx, 0	       336	svc4proc.c	FUNCTION_20	CALL_2
0x40004e7	      0xbe0f000000	                            mov esi, 0xf	       336	svc4proc.c	FUNCTION_20	CALL_2
0x40004ec	      0xe94fffffff	                jmp sym.nlm4svc_callback	       336	svc4proc.c	FUNCTION_20	CALL_2
nlm4svc_callback_exit	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,1:IF,0	1
0x4000050	            0xf3c3	                                     ret	       258	svc4proc.c	FUNCTION_13
nlm4svc_proc_unlock_msg	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,2:IF,0	3
0x4000500	    0x48c7c2000000	                              mov rdx, 0	       330	svc4proc.c	FUNCTION_19	CALL_2
0x4000507	      0xbe0e000000	                            mov esi, 0xe	       330	svc4proc.c	FUNCTION_19	CALL_2
0x400050c	      0xe92fffffff	                jmp sym.nlm4svc_callback	       330	svc4proc.c	FUNCTION_19	CALL_2
__nlm4svc_proc_cancel	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,10:IF,2	64
0x4000690	            0x4155	                                push r13	       158	svc4proc.c	FUNCTION_7
0x4000692	            0x4154	                                push r12	       158	svc4proc.c	FUNCTION_7
0x4000694	          0x4989fd	                            mov r13, rdi	       158	svc4proc.c	FUNCTION_7
0x4000697	              0x55	                                push rbp	       158	svc4proc.c	FUNCTION_7
0x4000698	              0x53	                                push rbx	       158	svc4proc.c	FUNCTION_7
0x4000699	          0x4889f3	                            mov rbx, rsi	       158	svc4proc.c	FUNCTION_7
0x400069c	        0x4883ec18	                           sub rsp, 0x18	       158	svc4proc.c	FUNCTION_7
0x40006a0	    0x488bafb01a00	          mov rbp, qword [rdi + 0x1ab0] 	       159	svc4proc.c	FUNCTION_7
0x40006a7	    0x65488b042528	                mov rax, qword gs:[0x28]	       158	svc4proc.c	FUNCTION_7
0x40006b0	      0x4889442410	             mov qword [rsp + 0x10], rax	       158	svc4proc.c	FUNCTION_7
0x40006b5	            0x31c0	                            xor eax, eax	       158	svc4proc.c	FUNCTION_7
0x40006b7	        0x488b4500	                    mov rax, qword [rbp]	       165	svc4proc.c	FUNCTION_7
0x40006bb	          0x488906	                    mov qword [rsi], rax	       165	svc4proc.c	FUNCTION_7
0x40006be	        0x488b4508	                mov rax, qword [rbp + 8]	       165	svc4proc.c	FUNCTION_7
0x40006c2	        0x48894608	                mov qword [rsi + 8], rax	       165	svc4proc.c	FUNCTION_7
0x40006c6	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       165	svc4proc.c	FUNCTION_7
0x40006ca	        0x48894610	             mov qword [rsi + 0x10], rax	       165	svc4proc.c	FUNCTION_7
0x40006ce	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       165	svc4proc.c	FUNCTION_7
0x40006d2	        0x48894618	             mov qword [rsi + 0x18], rax	       165	svc4proc.c	FUNCTION_7
0x40006d6	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       165	svc4proc.c	FUNCTION_7
0x40006d9	          0x894620	             mov dword [rsi + 0x20], eax	       165	svc4proc.c	FUNCTION_7
0x40006dc	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       168	svc4proc.c	FUNCTION_7	IF_1	CALL_3
0x40006e0	    0x488bb8900200	           mov rdi, qword [rax + 0x290] 	       168	svc4proc.c	FUNCTION_7	IF_1	CALL_3
0x40006e7	      0xe800000000	                          call 0x40006ec	       168	svc4proc.c	FUNCTION_7	IF_1	CALL_3
0x40006ec	            0x84c0	                             test al, al	       168	svc4proc.c	FUNCTION_7	IF_1	CALL_3
0x40006ee	            0x7428	                            je 0x4000718	       168	svc4proc.c	FUNCTION_7	IF_1	CALL_3
0x40006f0	    0xc74324000000	mov dword [rbx + 0x24], loc.imp.nlm4svc_decode_notify 	       169	svc4proc.c	FUNCTION_7	IF_1
0x40006f7	          0x4531e4	                          xor r12d, r12d	       170	svc4proc.c	FUNCTION_7	IF_1
0x40006fa	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       184	svc4proc.c	FUNCTION_7
0x40006ff	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       184	svc4proc.c	FUNCTION_7
0x4000708	          0x4489e0	                           mov eax, r12d	       184	svc4proc.c	FUNCTION_7
0x400070b	            0x7572	                           jne 0x400077f	       184	svc4proc.c	FUNCTION_7
0x400070d	        0x4883c418	                           add rsp, 0x18	       184	svc4proc.c	FUNCTION_7
0x4000711	              0x5b	                                 pop rbx	       184	svc4proc.c	FUNCTION_7
0x4000712	              0x5d	                                 pop rbp	       184	svc4proc.c	FUNCTION_7
0x4000713	            0x415c	                                 pop r12	       184	svc4proc.c	FUNCTION_7
0x4000715	            0x415d	                                 pop r13	       184	svc4proc.c	FUNCTION_7
0x4000717	              0xc3	                                     ret	       184	svc4proc.c	FUNCTION_7
0x4000718	      0x488d4c2408	                      lea rcx, [rsp + 8]	       174	svc4proc.c	FUNCTION_7	IF_2	CALL_4
0x400071d	          0x4889e2	                            mov rdx, rsp	       174	svc4proc.c	FUNCTION_7	IF_2	CALL_4
0x4000720	          0x4889ee	                            mov rsi, rbp	       174	svc4proc.c	FUNCTION_7	IF_2	CALL_4
0x4000723	          0x4c89ef	                            mov rdi, r13	       174	svc4proc.c	FUNCTION_7	IF_2	CALL_4
0x4000726	      0xe835f9ffff	          call sym.nlm4svc_retrieve_args	       174	svc4proc.c	FUNCTION_7	IF_2	CALL_4
0x400072b	            0x85c0	                           test eax, eax	       174	svc4proc.c	FUNCTION_7	IF_2	CALL_4
0x400072d	          0x4189c4	                           mov r12d, eax	       174	svc4proc.c	FUNCTION_7	IF_2	CALL_4
0x4000730	          0x894324	             mov dword [rbx + 0x24], eax	       174	svc4proc.c	FUNCTION_7	IF_2	CALL_4
0x4000733	            0x7416	                            je 0x400074b	       174	svc4proc.c	FUNCTION_7	IF_2	CALL_4
0x4000735	      0x3d00007530	                     cmp eax, 0x30750000	       175	svc4proc.c	FUNCTION_7	IF_2
0x400073a	    0x41bc00000000	                             mov r12d, 0	       175	svc4proc.c	FUNCTION_7	IF_2
0x4000740	      0xb80000ea60	                     mov eax, 0x60ea0000	       175	svc4proc.c	FUNCTION_7	IF_2
0x4000745	        0x440f44e0	                         cmove r12d, eax	       175	svc4proc.c	FUNCTION_7	IF_2
0x4000749	            0xebaf	                           jmp 0x40006fa	       175	svc4proc.c	FUNCTION_7	IF_2
0x400074b	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       178	svc4proc.c	FUNCTION_7	CALL_6
0x400074f	      0x488b742408	                mov rsi, qword [rsp + 8]	       178	svc4proc.c	FUNCTION_7	CALL_6
0x4000754	        0x488d5528	                   lea rdx, [rbp + 0x28]	       178	svc4proc.c	FUNCTION_7	CALL_6
0x4000758	    0x488bb8900200	           mov rdi, qword [rax + 0x290] 	       178	svc4proc.c	FUNCTION_7	CALL_6
0x400075f	      0xe800000000	                          call 0x4000764	       178	svc4proc.c	FUNCTION_7	CALL_6
0x4000764	        0x488b3c24	                    mov rdi, qword [rsp]	       181	svc4proc.c	FUNCTION_7	CALL_9
0x4000768	          0x894324	             mov dword [rbx + 0x24], eax	       178	svc4proc.c	FUNCTION_7	CALL_6
0x400076b	      0xe800000000	                          call 0x4000770	       181	svc4proc.c	FUNCTION_7	CALL_9
0x4000770	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       182	svc4proc.c	FUNCTION_7	CALL_10
0x4000775	      0xe800000000	                          call 0x400077a	       182	svc4proc.c	FUNCTION_7	CALL_10
0x400077a	      0xe97bffffff	                           jmp 0x40006fa	       183	svc4proc.c	FUNCTION_7
0x400077f	      0xe800000000	                          call 0x4000784	       184	svc4proc.c	FUNCTION_7
nlm4svc_proc_nm_lock	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,2:IF,0	4
0x40008a0	    0x488b87b01a00	          mov rax, qword [rdi + 0x1ab0] 	       413	svc4proc.c	FUNCTION_23
0x40008a7	    0xc780a4010000	              mov dword [rax + 0x1a4], 0	       417	svc4proc.c	FUNCTION_23
0x40008b1	    0x488bb7b81a00	          mov rsi, qword [rdi + 0x1ab8] 	       153	svc4proc.c	FUNCTION_6	CALL_1
0x40008b8	      0xe9e3feffff	             jmp sym.__nlm4svc_proc_lock	       153	svc4proc.c	FUNCTION_6	CALL_1
nlm4svc_proc_cancel	functions,0:ELSE,0:DO,0:SWITCH,0:FOR,0:WHILE,0:CALL,1:IF,0	2
0x4000790	    0x488bb7b81a00	          mov rsi, qword [rdi + 0x1ab8] 	       189	svc4proc.c	FUNCTION_8	CALL_1
0x4000797	      0xe9f4feffff	           jmp sym.__nlm4svc_proc_cancel	       189	svc4proc.c	FUNCTION_8	CALL_1
