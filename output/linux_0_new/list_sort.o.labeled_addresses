merge	FOR,0:functions,0:CALL,0:SWITCH,0:ELSE,1:DO,0:WHILE,1:IF,1	54
0x4000040	            0x4156	                                push r14	        21	list_sort.c	FUNCTION_1
0x4000042	            0x4155	                                push r13	        21	list_sort.c	FUNCTION_1
0x4000044	            0x4154	                                push r12	        21	list_sort.c	FUNCTION_1
0x4000046	              0x55	                                push rbp	        21	list_sort.c	FUNCTION_1
0x4000047	          0x4889d5	                            mov rbp, rdx	        21	list_sort.c	FUNCTION_1
0x400004a	              0x53	                                push rbx	        21	list_sort.c	FUNCTION_1
0x400004b	          0x4889cb	                            mov rbx, rcx	        21	list_sort.c	FUNCTION_1
0x400004e	        0x4883ec18	                           sub rsp, 0x18	        21	list_sort.c	FUNCTION_1
0x4000052	    0x65488b042528	                mov rax, qword gs:[0x28]	        21	list_sort.c	FUNCTION_1
0x400005b	      0x4889442410	             mov qword [rsp + 0x10], rax	        21	list_sort.c	FUNCTION_1
0x4000060	            0x31c0	                            xor eax, eax	        21	list_sort.c	FUNCTION_1
0x4000062	          0x4885c9	                           test rcx, rcx	        24	list_sort.c	FUNCTION_1	WHILE_1
0x4000065	            0x7472	                            je 0x40000d9	        24	list_sort.c	FUNCTION_1	WHILE_1
0x4000067	          0x4885d2	                           test rdx, rdx	        24	list_sort.c	FUNCTION_1	WHILE_1
0x400006a	            0x746d	                            je 0x40000d9	        24	list_sort.c	FUNCTION_1	WHILE_1
0x400006c	          0x4989fd	                            mov r13, rdi	        24	list_sort.c	FUNCTION_1	WHILE_1
0x400006f	          0x4989f6	                            mov r14, rsi	        24	list_sort.c	FUNCTION_1	WHILE_1
0x4000072	          0x4989e4	                            mov r12, rsp	        24	list_sort.c	FUNCTION_1	WHILE_1
0x4000075	            0xeb14	                           jmp 0x400008b	        24	list_sort.c	FUNCTION_1	WHILE_1
0x4000077	          0x4885ed	                           test rbp, rbp	        24	list_sort.c	FUNCTION_1	WHILE_1
0x400007a	        0x49891c24	                    mov qword [r12], rbx	        30	list_sort.c	FUNCTION_1	WHILE_1	ELSE_1
0x400007e	          0x4989dc	                            mov r12, rbx	        31	list_sort.c	FUNCTION_1	WHILE_1	ELSE_1
0x4000081	          0x488b1b	                    mov rbx, qword [rbx]	        31	list_sort.c	FUNCTION_1	WHILE_1	ELSE_1
0x4000084	            0x7427	                            je 0x40000ad	        24	list_sort.c	FUNCTION_1	WHILE_1
0x4000086	          0x4885db	                           test rbx, rbx	        24	list_sort.c	FUNCTION_1	WHILE_1
0x4000089	            0x7422	                            je 0x40000ad	        24	list_sort.c	FUNCTION_1	WHILE_1
0x400008b	          0x4889da	                            mov rdx, rbx	        26	list_sort.c	FUNCTION_1	WHILE_1	IF_1
0x400008e	          0x4889ee	                            mov rsi, rbp	        26	list_sort.c	FUNCTION_1	WHILE_1	IF_1
0x4000091	          0x4c89ef	                            mov rdi, r13	        26	list_sort.c	FUNCTION_1	WHILE_1	IF_1
0x4000094	      0xe800000000	                          call 0x4000099	        26	list_sort.c	FUNCTION_1	WHILE_1	IF_1
0x4000099	            0x85c0	                           test eax, eax	        26	list_sort.c	FUNCTION_1	WHILE_1	IF_1
0x400009b	            0x7fda	                            jg 0x4000077	        26	list_sort.c	FUNCTION_1	WHILE_1	IF_1
0x400009d	        0x49892c24	                    mov qword [r12], rbp	        27	list_sort.c	FUNCTION_1	WHILE_1	IF_1
0x40000a1	          0x4989ec	                            mov r12, rbp	        27	list_sort.c	FUNCTION_1	WHILE_1	IF_1
0x40000a4	        0x488b6d00	                    mov rbp, qword [rbp]	        28	list_sort.c	FUNCTION_1	WHILE_1	IF_1
0x40000a8	          0x4885ed	                           test rbp, rbp	        24	list_sort.c	FUNCTION_1	WHILE_1
0x40000ab	            0x75d9	                           jne 0x4000086	        24	list_sort.c	FUNCTION_1	WHILE_1
0x40000ad	          0x4885ed	                           test rbp, rbp	        35	list_sort.c	FUNCTION_1
0x40000b0	        0x480f45dd	                         cmovne rbx, rbp	        35	list_sort.c	FUNCTION_1
0x40000b4	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	        37	list_sort.c	FUNCTION_1
0x40000b9	    0x6548330c2528	                xor rcx, qword gs:[0x28]	        37	list_sort.c	FUNCTION_1
0x40000c2	        0x49891c24	                    mov qword [r12], rbx	        35	list_sort.c	FUNCTION_1
0x40000c6	        0x488b0424	                    mov rax, qword [rsp]	        37	list_sort.c	FUNCTION_1
0x40000ca	            0x7512	                           jne 0x40000de	        37	list_sort.c	FUNCTION_1
0x40000cc	        0x4883c418	                           add rsp, 0x18	        37	list_sort.c	FUNCTION_1
0x40000d0	              0x5b	                                 pop rbx	        37	list_sort.c	FUNCTION_1
0x40000d1	              0x5d	                                 pop rbp	        37	list_sort.c	FUNCTION_1
0x40000d2	            0x415c	                                 pop r12	        37	list_sort.c	FUNCTION_1
0x40000d4	            0x415d	                                 pop r13	        37	list_sort.c	FUNCTION_1
0x40000d6	            0x415e	                                 pop r14	        37	list_sort.c	FUNCTION_1
0x40000d8	              0xc3	                                     ret	        37	list_sort.c	FUNCTION_1
0x40000d9	          0x4989e4	                            mov r12, rsp	        22	list_sort.c	FUNCTION_1
0x40000dc	            0xebcf	                           jmp 0x40000ad	        22	list_sort.c	FUNCTION_1
0x40000de	      0xe800000000	                          call 0x40000e3	        37	list_sort.c	FUNCTION_1
