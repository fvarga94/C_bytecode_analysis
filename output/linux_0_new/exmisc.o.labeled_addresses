acpi_ex_do_logical_op	ELSE,1:FOR,0:SWITCH,3:CALL,11:WHILE,0:functions,0:IF,13:DO,0	129
0x40001d0	            0x4157	                                push r15	       276	exmisc.c	FUNCTION_4
0x40001d2	            0x4156	                                push r14	       276	exmisc.c	FUNCTION_4
0x40001d4	            0x4155	                                push r13	       276	exmisc.c	FUNCTION_4
0x40001d6	            0x4154	                                push r12	       276	exmisc.c	FUNCTION_4
0x40001d8	          0x4189fd	                           mov r13d, edi	       276	exmisc.c	FUNCTION_4
0x40001db	              0x55	                                push rbp	       276	exmisc.c	FUNCTION_4
0x40001dc	              0x53	                                push rbx	       276	exmisc.c	FUNCTION_4
0x40001dd	          0x4989f4	                            mov r12, rsi	       276	exmisc.c	FUNCTION_4
0x40001e0	          0x4889d5	                            mov rbp, rdx	       276	exmisc.c	FUNCTION_4
0x40001e3	        0x4883ec20	                           sub rsp, 0x20	       276	exmisc.c	FUNCTION_4
0x40001e7	        0x48890c24	                    mov qword [rsp], rcx	       276	exmisc.c	FUNCTION_4
0x40001eb	         0xfb64e09	               movzx ecx, byte [rsi + 9]	       295	exmisc.c	FUNCTION_4	SWITCH_1
0x40001ef	    0x65488b042528	                mov rax, qword gs:[0x28]	       276	exmisc.c	FUNCTION_4
0x40001f8	      0x4889442418	             mov qword [rsp + 0x18], rax	       276	exmisc.c	FUNCTION_4
0x40001fd	            0x31c0	                            xor eax, eax	       276	exmisc.c	FUNCTION_4
0x40001ff	      0x4889542410	             mov qword [rsp + 0x10], rdx	       277	exmisc.c	FUNCTION_4
0x4000204	          0x80f902	                               cmp cl, 2	       295	exmisc.c	FUNCTION_4	SWITCH_1
0x4000207	            0x742e	                            je 0x4000237	       295	exmisc.c	FUNCTION_4	SWITCH_1
0x4000209	          0x80f903	                               cmp cl, 3	       295	exmisc.c	FUNCTION_4	SWITCH_1
0x400020c	            0x743d	                            je 0x400024b	       295	exmisc.c	FUNCTION_4	SWITCH_1
0x400020e	          0x80f901	                               cmp cl, 1	       295	exmisc.c	FUNCTION_4	SWITCH_1
0x4000211	    0x48c7c2000000	                              mov rdx, 0	       316	exmisc.c	FUNCTION_4	SWITCH_1	CALL_5
0x4000218	      0xbe3e010000	                          mov esi, 0x13e	       316	exmisc.c	FUNCTION_4	SWITCH_1	CALL_5
0x400021d	     0xf852d010000	                           jne 0x4000350	       295	exmisc.c	FUNCTION_4	SWITCH_1
0x4000223	      0x488d742410	                   lea rsi, [rsp + 0x10]	       298	exmisc.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000228	      0xba01000000	                              mov edx, 1	       298	exmisc.c	FUNCTION_4	SWITCH_1	CALL_2
0x400022d	          0x4889ef	                            mov rdi, rbp	       298	exmisc.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000230	      0xe800000000	                          call 0x4000235	       298	exmisc.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000235	            0xeb21	                           jmp 0x4000258	       298	exmisc.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000237	      0x488d742410	                   lea rsi, [rsp + 0x10]	       304	exmisc.c	FUNCTION_4	SWITCH_1
0x400023c	      0xba02000000	                              mov edx, 2	       304	exmisc.c	FUNCTION_4	SWITCH_1
0x4000241	          0x4889ef	                            mov rdi, rbp	       304	exmisc.c	FUNCTION_4	SWITCH_1
0x4000244	      0xe800000000	                          call 0x4000249	       304	exmisc.c	FUNCTION_4	SWITCH_1
0x4000249	            0xeb0d	                           jmp 0x4000258	       304	exmisc.c	FUNCTION_4	SWITCH_1
0x400024b	      0x488d742410	                   lea rsi, [rsp + 0x10]	       311	exmisc.c	FUNCTION_4	SWITCH_1	CALL_4
0x4000250	          0x4889d7	                            mov rdi, rdx	       311	exmisc.c	FUNCTION_4	SWITCH_1	CALL_4
0x4000253	      0xe800000000	                          call 0x4000258	       311	exmisc.c	FUNCTION_4	SWITCH_1	CALL_4
0x4000258	            0x31db	                            xor ebx, ebx	       283	exmisc.c	FUNCTION_4
0x400025a	            0x85c0	                           test eax, eax	       323	exmisc.c	FUNCTION_4	IF_1	CALL_6
0x400025c	          0x4189c6	                           mov r14d, eax	       311	exmisc.c	FUNCTION_4	SWITCH_1	CALL_4
0x400025f	     0xf85ff000000	                           jne 0x4000364	       323	exmisc.c	FUNCTION_4	IF_1	CALL_6
0x4000265	    0x41807c240901	                   cmp byte [r12 + 9], 1	       330	exmisc.c	FUNCTION_4	IF_2
0x400026b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       330	exmisc.c	FUNCTION_4	IF_2
0x4000270	            0x7557	                           jne 0x40002c9	       330	exmisc.c	FUNCTION_4	IF_2
0x4000272	    0x664181fd9400	                          cmp r13w, 0x94	       338	exmisc.c	FUNCTION_4	IF_2	SWITCH_2
0x4000278	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       335	exmisc.c	FUNCTION_4	IF_2
0x400027d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       336	exmisc.c	FUNCTION_4	IF_2
0x4000281	            0x741b	                            je 0x400029e	       338	exmisc.c	FUNCTION_4	IF_2	SWITCH_2
0x4000283	    0x664181fd9500	                          cmp r13w, 0x95	       338	exmisc.c	FUNCTION_4	IF_2	SWITCH_2
0x4000289	            0x741e	                            je 0x40002a9	       338	exmisc.c	FUNCTION_4	IF_2	SWITCH_2
0x400028b	    0x664181fd9300	                          cmp r13w, 0x93	       338	exmisc.c	FUNCTION_4	IF_2	SWITCH_2
0x4000291	            0x7521	                           jne 0x40002b4	       338	exmisc.c	FUNCTION_4	IF_2	SWITCH_2
0x4000293	          0x4839c2	                            cmp rdx, rax	       283	exmisc.c	FUNCTION_4
0x4000296	           0xf94c3	                                 sete bl	       283	exmisc.c	FUNCTION_4
0x4000299	      0xe9c6000000	                           jmp 0x4000364	       283	exmisc.c	FUNCTION_4
0x400029e	          0x4839c2	                            cmp rdx, rax	       283	exmisc.c	FUNCTION_4
0x40002a1	           0xf97c3	                                 seta bl	       283	exmisc.c	FUNCTION_4
0x40002a4	      0xe9bb000000	                           jmp 0x4000364	       283	exmisc.c	FUNCTION_4
0x40002a9	          0x4839c2	                            cmp rdx, rax	       283	exmisc.c	FUNCTION_4
0x40002ac	           0xf92c3	                                 setb bl	       283	exmisc.c	FUNCTION_4
0x40002af	      0xe9b0000000	                           jmp 0x4000364	       283	exmisc.c	FUNCTION_4
0x40002b4	        0x410fb7cd	                         movzx ecx, r13w	       362	exmisc.c	FUNCTION_4	IF_2	SWITCH_2	CALL_7
0x40002b8	    0x48c7c2000000	                              mov rdx, 0	       362	exmisc.c	FUNCTION_4	IF_2	SWITCH_2	CALL_7
0x40002bf	      0xbe6b010000	                          mov esi, 0x16b	       362	exmisc.c	FUNCTION_4	IF_2	SWITCH_2	CALL_7
0x40002c4	      0xe987000000	                           jmp 0x4000350	       362	exmisc.c	FUNCTION_4	IF_2	SWITCH_2	CALL_7
0x40002c9	      0x418b4c2418	            mov ecx, dword [r12 + 0x18] 	       374	exmisc.c	FUNCTION_4	ELSE_1
0x40002ce	        0x448b7818	           mov r15d, dword [rax + 0x18] 	       375	exmisc.c	FUNCTION_4	ELSE_1
0x40002d2	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       379	exmisc.c	FUNCTION_4	ELSE_1	CALL_8
0x40002d6	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       379	exmisc.c	FUNCTION_4	ELSE_1	CALL_8
0x40002db	          0x4489fa	                           mov edx, r15d	       379	exmisc.c	FUNCTION_4	ELSE_1	CALL_8
0x40002de	          0x4439f9	                           cmp ecx, r15d	       379	exmisc.c	FUNCTION_4	ELSE_1	CALL_8
0x40002e1	        0x894c240c	              mov dword [rsp + 0xc], ecx	       379	exmisc.c	FUNCTION_4	ELSE_1	CALL_8
0x40002e5	        0x480f46d1	                         cmovbe rdx, rcx	       379	exmisc.c	FUNCTION_4	ELSE_1	CALL_8
0x40002e9	      0xe800000000	                          call 0x40002ee	       379	exmisc.c	FUNCTION_4	ELSE_1	CALL_8
0x40002ee	    0x664181fd9400	                          cmp r13w, 0x94	       383	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3
0x40002f4	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       383	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3
0x40002f8	            0x741d	                            je 0x4000317	       383	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3
0x40002fa	    0x664181fd9500	                          cmp r13w, 0x95	       383	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3
0x4000300	            0x7429	                            je 0x400032b	       383	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3
0x4000302	    0x664181fd9300	                          cmp r13w, 0x93	       383	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3
0x4000308	            0x7536	                           jne 0x4000340	       383	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3
0x400030a	          0x4439f9	                           cmp ecx, r15d	       283	exmisc.c	FUNCTION_4
0x400030d	           0xf94c3	                                 sete bl	       283	exmisc.c	FUNCTION_4
0x4000310	            0x85c0	                           test eax, eax	       283	exmisc.c	FUNCTION_4
0x4000312	           0xf94c0	                                 sete al	       283	exmisc.c	FUNCTION_4
0x4000315	            0xeb10	                           jmp 0x4000327	       283	exmisc.c	FUNCTION_4
0x4000317	          0x83f800	                              cmp eax, 0	       398	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3	IF_7
0x400031a	            0xb301	                               mov bl, 1	       399	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3	IF_7
0x400031c	            0x7f46	                            jg 0x4000364	       398	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3	IF_7
0x400031e	           0xf94c3	                                 sete bl	       283	exmisc.c	FUNCTION_4
0x4000321	          0x4439f9	                           cmp ecx, r15d	       283	exmisc.c	FUNCTION_4
0x4000324	           0xf97c0	                                 seta al	       283	exmisc.c	FUNCTION_4
0x4000327	            0x21c3	                            and ebx, eax	       283	exmisc.c	FUNCTION_4
0x4000329	            0xeb39	                           jmp 0x4000364	       283	exmisc.c	FUNCTION_4
0x400032b	            0x31db	                            xor ebx, ebx	       283	exmisc.c	FUNCTION_4
0x400032d	            0x85c0	                           test eax, eax	       415	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3	IF_10
0x400032f	            0x7f33	                            jg 0x4000364	       415	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3	IF_10
0x4000331	          0x4439f9	                           cmp ecx, r15d	       283	exmisc.c	FUNCTION_4
0x4000334	           0xf92c3	                                 setb bl	       283	exmisc.c	FUNCTION_4
0x4000337	            0x85c0	                           test eax, eax	       283	exmisc.c	FUNCTION_4
0x4000339	           0xf95c0	                                setne al	       283	exmisc.c	FUNCTION_4
0x400033c	             0x9c3	                             or ebx, eax	       283	exmisc.c	FUNCTION_4
0x400033e	            0xeb24	                           jmp 0x4000364	       283	exmisc.c	FUNCTION_4
0x4000340	        0x410fb7cd	                         movzx ecx, r13w	       432	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3	CALL_9
0x4000344	    0x48c7c2000000	                              mov rdx, 0	       432	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3	CALL_9
0x400034b	      0xbeb1010000	                          mov esi, 0x1b1	       432	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3	CALL_9
0x4000350	    0x48c7c7000000	                              mov rdi, 0	       432	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3	CALL_9
0x4000357	            0x31db	                            xor ebx, ebx	       283	exmisc.c	FUNCTION_4
0x4000359	    0x41be0f300000	                        mov r14d, 0x300f	       434	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3
0x400035f	      0xe800000000	                          call 0x4000364	       432	exmisc.c	FUNCTION_4	ELSE_1	SWITCH_3	CALL_9
0x4000364	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       443	exmisc.c	FUNCTION_4	IF_13
0x4000369	          0x4839fd	                            cmp rbp, rdi	       443	exmisc.c	FUNCTION_4	IF_13
0x400036c	            0x7405	                            je 0x4000373	       443	exmisc.c	FUNCTION_4	IF_13
0x400036e	      0xe800000000	                          call 0x4000373	       444	exmisc.c	FUNCTION_4	IF_13	CALL_10
0x4000373	        0x488b0424	                    mov rax, qword [rsp]	       449	exmisc.c	FUNCTION_4
0x4000377	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       451	exmisc.c	FUNCTION_4
0x400037c	    0x654833342528	                xor rsi, qword gs:[0x28]	       451	exmisc.c	FUNCTION_4
0x4000385	            0x8818	                      mov byte [rax], bl	       449	exmisc.c	FUNCTION_4
0x4000387	          0x4489f0	                           mov eax, r14d	       451	exmisc.c	FUNCTION_4
0x400038a	            0x7405	                            je 0x4000391	       451	exmisc.c	FUNCTION_4
0x400038c	      0xe800000000	                          call 0x4000391	       451	exmisc.c	FUNCTION_4
0x4000391	        0x4883c420	                           add rsp, 0x20	       451	exmisc.c	FUNCTION_4
0x4000395	              0x5b	                                 pop rbx	       451	exmisc.c	FUNCTION_4
0x4000396	              0x5d	                                 pop rbp	       451	exmisc.c	FUNCTION_4
0x4000397	            0x415c	                                 pop r12	       451	exmisc.c	FUNCTION_4
0x4000399	            0x415d	                                 pop r13	       451	exmisc.c	FUNCTION_4
0x400039b	            0x415e	                                 pop r14	       451	exmisc.c	FUNCTION_4
0x400039d	            0x415f	                                 pop r15	       451	exmisc.c	FUNCTION_4
0x400039f	              0xc3	                                     ret	       451	exmisc.c	FUNCTION_4
acpi_ex_do_math_op	ELSE,0:FOR,0:SWITCH,1:CALL,1:WHILE,0:functions,0:IF,2:DO,0	44
0x40000f9	          0x83ef72	                           sub edi, 0x72	       127	exmisc.c	FUNCTION_2	SWITCH_1
0x40000fc	          0x4889d1	                            mov rcx, rdx	       123	exmisc.c	FUNCTION_2
0x40000ff	        0x6683ff0d	                             cmp di, 0xd	       127	exmisc.c	FUNCTION_2	SWITCH_1
0x4000103	            0x7774	                            ja 0x4000179	       127	exmisc.c	FUNCTION_2	SWITCH_1
0x4000105	           0xfb7ff	                           movzx edi, di	       127	exmisc.c	FUNCTION_2	SWITCH_1
0x4000108	    0x488b04fd0000	                  mov rax, qword [rdi*8]	       127	exmisc.c	FUNCTION_2	SWITCH_1
0x4000110	      0xe900000000	                           jmp 0x4000115	       127	exmisc.c	FUNCTION_2	SWITCH_1
0x4000115	        0x488d0416	                    lea rax, [rsi + rdx]	       130	exmisc.c	FUNCTION_2	SWITCH_1
0x4000119	              0xc3	                                     ret	       130	exmisc.c	FUNCTION_2	SWITCH_1
0x400011a	          0x4889f0	                            mov rax, rsi	       134	exmisc.c	FUNCTION_2	SWITCH_1
0x400011d	          0x4821d0	                            and rax, rdx	       134	exmisc.c	FUNCTION_2	SWITCH_1
0x4000120	              0xc3	                                     ret	       134	exmisc.c	FUNCTION_2	SWITCH_1
0x4000121	          0x4821d6	                            and rsi, rdx	       138	exmisc.c	FUNCTION_2	SWITCH_1
0x4000124	            0xeb0a	                           jmp 0x4000130	       138	exmisc.c	FUNCTION_2	SWITCH_1
0x4000126	          0x4889f0	                            mov rax, rsi	       142	exmisc.c	FUNCTION_2	SWITCH_1
0x4000129	          0x4809d0	                             or rax, rdx	       142	exmisc.c	FUNCTION_2	SWITCH_1
0x400012c	              0xc3	                                     ret	       142	exmisc.c	FUNCTION_2	SWITCH_1
0x400012d	          0x4809d6	                             or rsi, rdx	       146	exmisc.c	FUNCTION_2	SWITCH_1
0x4000130	          0x4889f0	                            mov rax, rsi	       146	exmisc.c	FUNCTION_2	SWITCH_1
0x4000133	          0x48f7d0	                                 not rax	       146	exmisc.c	FUNCTION_2	SWITCH_1
0x4000136	              0xc3	                                     ret	       146	exmisc.c	FUNCTION_2	SWITCH_1
0x4000137	          0x4889f0	                            mov rax, rsi	       150	exmisc.c	FUNCTION_2	SWITCH_1
0x400013a	          0x4831d0	                            xor rax, rdx	       150	exmisc.c	FUNCTION_2	SWITCH_1
0x400013d	              0xc3	                                     ret	       150	exmisc.c	FUNCTION_2	SWITCH_1
0x400013e	          0x4889f0	                            mov rax, rsi	       154	exmisc.c	FUNCTION_2	SWITCH_1
0x4000141	        0x480fafc2	                           imul rax, rdx	       154	exmisc.c	FUNCTION_2	SWITCH_1
0x4000145	              0xc3	                                     ret	       154	exmisc.c	FUNCTION_2	SWITCH_1
0x4000146	          0x4889f7	                            mov rdi, rsi	       165	exmisc.c	FUNCTION_2	SWITCH_1
0x4000149	     0xfb605000000	           movzx eax, byte [0x04000150] 	       162	exmisc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000150	          0x48d3e7	                             shl rdi, cl	       165	exmisc.c	FUNCTION_2	SWITCH_1
0x4000153	            0xeb0d	                           jmp 0x4000162	       165	exmisc.c	FUNCTION_2	SWITCH_1
0x4000155	     0xfb605000000	           movzx eax, byte [0x0400015c] 	       173	exmisc.c	FUNCTION_2	SWITCH_1	IF_2
0x400015c	          0x4889f7	                            mov rdi, rsi	       176	exmisc.c	FUNCTION_2	SWITCH_1
0x400015f	          0x48d3ef	                             shr rdi, cl	       176	exmisc.c	FUNCTION_2	SWITCH_1
0x4000162	      0xbe00000000	                              mov esi, 0	       176	exmisc.c	FUNCTION_2	SWITCH_1
0x4000167	          0x4839c1	                            cmp rcx, rax	       176	exmisc.c	FUNCTION_2	SWITCH_1
0x400016a	          0x4889f0	                            mov rax, rsi	       176	exmisc.c	FUNCTION_2	SWITCH_1
0x400016d	        0x480f42c7	                          cmovb rax, rdi	       176	exmisc.c	FUNCTION_2	SWITCH_1
0x4000171	              0xc3	                                     ret	       176	exmisc.c	FUNCTION_2	SWITCH_1
0x4000172	          0x4889f0	                            mov rax, rsi	       180	exmisc.c	FUNCTION_2	SWITCH_1
0x4000175	          0x4829d0	                            sub rax, rdx	       180	exmisc.c	FUNCTION_2	SWITCH_1
0x4000178	              0xc3	                                     ret	       180	exmisc.c	FUNCTION_2	SWITCH_1
0x4000179	            0x31c0	                            xor eax, eax	       184	exmisc.c	FUNCTION_2	SWITCH_1
0x400017b	              0xc3	                                     ret	       186	exmisc.c	FUNCTION_2
acpi_ex_do_logical_numeric_op	ELSE,0:FOR,0:SWITCH,1:CALL,3:WHILE,0:functions,0:IF,2:DO,0	27
0x400017c	      0x6681ff9000	                            cmp di, 0x90	       217	exmisc.c	FUNCTION_3	SWITCH_1
0x4000181	              0x53	                                push rbx	       211	exmisc.c	FUNCTION_3
0x4000182	          0x4889cb	                            mov rbx, rcx	       211	exmisc.c	FUNCTION_3
0x4000185	            0x740f	                            je 0x4000196	       217	exmisc.c	FUNCTION_3	SWITCH_1
0x4000187	      0x6681ff9100	                            cmp di, 0x91	       217	exmisc.c	FUNCTION_3	SWITCH_1
0x400018c	            0x751c	                           jne 0x40001aa	       217	exmisc.c	FUNCTION_3	SWITCH_1
0x400018e	          0x4809d6	                             or rsi, rdx	       221	exmisc.c	FUNCTION_3	SWITCH_1	IF_1
0x4000191	           0xf95c2	                                setne dl	       221	exmisc.c	FUNCTION_3	SWITCH_1	IF_1
0x4000194	            0xeb10	                           jmp 0x40001a6	       221	exmisc.c	FUNCTION_3	SWITCH_1	IF_1
0x4000196	          0x4885f6	                           test rsi, rsi	       221	exmisc.c	FUNCTION_3	SWITCH_1	IF_1
0x4000199	           0xf95c1	                                setne cl	       221	exmisc.c	FUNCTION_3	SWITCH_1	IF_1
0x400019c	          0x4885d2	                           test rdx, rdx	       221	exmisc.c	FUNCTION_3	SWITCH_1	IF_1
0x400019f	           0xf95c0	                                setne al	       221	exmisc.c	FUNCTION_3	SWITCH_1	IF_1
0x40001a2	            0x21c1	                            and ecx, eax	       221	exmisc.c	FUNCTION_3	SWITCH_1	IF_1
0x40001a4	            0x88ca	                              mov dl, cl	       221	exmisc.c	FUNCTION_3	SWITCH_1	IF_1
0x40001a6	            0x31c0	                            xor eax, eax	       212	exmisc.c	FUNCTION_3
0x40001a8	            0xeb22	                           jmp 0x40001cc	       212	exmisc.c	FUNCTION_3
0x40001aa	           0xfb7cf	                           movzx ecx, di	       234	exmisc.c	FUNCTION_3	SWITCH_1	CALL_2
0x40001ad	    0x48c7c2000000	                              mov rdx, 0	       234	exmisc.c	FUNCTION_3	SWITCH_1	CALL_2
0x40001b4	      0xbeeb000000	                           mov esi, 0xeb	       234	exmisc.c	FUNCTION_3	SWITCH_1	CALL_2
0x40001b9	    0x48c7c7000000	                              mov rdi, 0	       234	exmisc.c	FUNCTION_3	SWITCH_1	CALL_2
0x40001c0	      0xe800000000	                          call 0x40001c5	       234	exmisc.c	FUNCTION_3	SWITCH_1	CALL_2
0x40001c5	            0x31d2	                            xor edx, edx	       213	exmisc.c	FUNCTION_3
0x40001c7	      0xb80f300000	                         mov eax, 0x300f	       236	exmisc.c	FUNCTION_3	SWITCH_1
0x40001cc	            0x8813	                      mov byte [rbx], dl	       242	exmisc.c	FUNCTION_3
0x40001ce	              0x5b	                                 pop rbx	       244	exmisc.c	FUNCTION_3
0x40001cf	              0xc3	                                     ret	       244	exmisc.c	FUNCTION_3
acpi_ex_get_object_reference	ELSE,0:FOR,0:SWITCH,2:CALL,13:WHILE,0:functions,0:IF,2:DO,0	50
0x4000040	              0x55	                                push rbp	        36	exmisc.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        36	exmisc.c	FUNCTION_1
0x4000042	          0x4889f5	                            mov rbp, rsi	        36	exmisc.c	FUNCTION_1
0x4000045	    0x48c706000000	                      mov qword [rsi], 0	        42	exmisc.c	FUNCTION_1
0x400004c	         0xfb64f08	               movzx ecx, byte [rdi + 8]	        44	exmisc.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000050	          0x4889fb	                            mov rbx, rdi	        36	exmisc.c	FUNCTION_1
0x4000053	          0x80f90e	                             cmp cl, 0xe	        44	exmisc.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000056	            0x7424	                            je 0x400007c	        44	exmisc.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000058	          0x80f90f	                             cmp cl, 0xf	        44	exmisc.c	FUNCTION_1	SWITCH_1	CALL_2
0x400005b	            0x7464	                            je 0x40000c1	        44	exmisc.c	FUNCTION_1	SWITCH_1	CALL_2
0x400005d	    0x48c7c2000000	                              mov rdx, 0	        81	exmisc.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000064	      0xbe52000000	                           mov esi, 0x52	        81	exmisc.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000069	    0x48c7c7000000	                              mov rdi, 0	        81	exmisc.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000070	      0xe800000000	                          call 0x4000075	        81	exmisc.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000075	      0xba08000000	                              mov edx, 8	        83	exmisc.c	FUNCTION_1	SWITCH_1	CALL_8
0x400007a	            0xeb78	                           jmp 0x40000f4	        83	exmisc.c	FUNCTION_1	SWITCH_1	CALL_8
0x400007c	        0x807f0914	                cmp byte [rdi + 9], 0x14	        47	exmisc.c	FUNCTION_1	SWITCH_1	IF_1
0x4000080	      0xba03300000	                         mov edx, 0x3003	        48	exmisc.c	FUNCTION_1	SWITCH_1	IF_1	CALL_3
0x4000085	            0x756d	                           jne 0x40000f4	        47	exmisc.c	FUNCTION_1	SWITCH_1	IF_1
0x4000087	         0xfb64f0d	            movzx ecx, byte [rdi + 0xd] 	        54	exmisc.c	FUNCTION_1	SWITCH_1	SWITCH_2
0x400008b	          0x80f906	                               cmp cl, 6	        54	exmisc.c	FUNCTION_1	SWITCH_1	SWITCH_2
0x400008e	            0x7712	                            ja 0x40000a2	        54	exmisc.c	FUNCTION_1	SWITCH_1	SWITCH_2
0x4000090	      0xb801000000	                              mov eax, 1	        54	exmisc.c	FUNCTION_1	SWITCH_1	SWITCH_2
0x4000095	          0x48d3e0	                             shl rax, cl	        54	exmisc.c	FUNCTION_1	SWITCH_1	SWITCH_2
0x4000098	            0xa843	                           test al, 0x43	        54	exmisc.c	FUNCTION_1	SWITCH_1	SWITCH_2
0x400009a	            0x7406	                            je 0x40000a2	        54	exmisc.c	FUNCTION_1	SWITCH_1	SWITCH_2
0x400009c	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	        61	exmisc.c	FUNCTION_1	SWITCH_1	SWITCH_2
0x40000a0	            0xeb1f	                           jmp 0x40000c1	        70	exmisc.c	FUNCTION_1	SWITCH_1
0x40000a2	    0x48c7c2000000	                              mov rdx, 0	        66	exmisc.c	FUNCTION_1	SWITCH_1	SWITCH_2	CALL_4
0x40000a9	      0xbe43000000	                           mov esi, 0x43	        66	exmisc.c	FUNCTION_1	SWITCH_1	SWITCH_2	CALL_4
0x40000ae	    0x48c7c7000000	                              mov rdi, 0	        66	exmisc.c	FUNCTION_1	SWITCH_1	SWITCH_2	CALL_4
0x40000b5	      0xe800000000	                          call 0x40000ba	        66	exmisc.c	FUNCTION_1	SWITCH_1	SWITCH_2	CALL_4
0x40000ba	      0xba03300000	                         mov edx, 0x3003	        68	exmisc.c	FUNCTION_1	SWITCH_1	SWITCH_2	CALL_5
0x40000bf	            0xeb33	                           jmp 0x40000f4	        68	exmisc.c	FUNCTION_1	SWITCH_1	SWITCH_2	CALL_5
0x40000c1	      0xba80000000	                           mov edx, 0x80	        88	exmisc.c	FUNCTION_1
0x40000c6	      0xb914000000	                           mov ecx, 0x14	        88	exmisc.c	FUNCTION_1
0x40000cb	      0xbe59000000	                           mov esi, 0x59	        88	exmisc.c	FUNCTION_1
0x40000d0	    0x48c7c7000000	                              mov rdi, 0	        88	exmisc.c	FUNCTION_1
0x40000d7	      0xe800000000	                          call 0x40000dc	        88	exmisc.c	FUNCTION_1
0x40000dc	          0x4885c0	                           test rax, rax	        90	exmisc.c	FUNCTION_1	IF_2
0x40000df	      0xba04000000	                              mov edx, 4	        91	exmisc.c	FUNCTION_1	IF_2	CALL_10
0x40000e4	            0x740e	                            je 0x40000f4	        90	exmisc.c	FUNCTION_1	IF_2
0x40000e6	        0xc6400d02	                 mov byte [rax + 0xd], 2	        94	exmisc.c	FUNCTION_1
0x40000ea	        0x48895810	             mov qword [rax + 0x10], rbx	        95	exmisc.c	FUNCTION_1
0x40000ee	            0x31d2	                            xor edx, edx	       103	exmisc.c	FUNCTION_1	CALL_13
0x40000f0	        0x48894500	                    mov qword [rbp], rax	        96	exmisc.c	FUNCTION_1
0x40000f4	            0x89d0	                            mov eax, edx	       104	exmisc.c	FUNCTION_1
0x40000f6	              0x5b	                                 pop rbx	       104	exmisc.c	FUNCTION_1
0x40000f7	              0x5d	                                 pop rbp	       104	exmisc.c	FUNCTION_1
0x40000f8	              0xc3	                                     ret	       104	exmisc.c	FUNCTION_1
