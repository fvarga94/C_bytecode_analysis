deflate_stored	functions,0:WHILE,0:FOR,1:CALL,5:SWITCH,0:ELSE,0:IF,6:DO,0	112
0x4000e80	            0x4154	                                push r12	       857	deflate.c	FUNCTION_11
0x4000e82	              0x55	                                push rbp	       857	deflate.c	FUNCTION_11
0x4000e83	          0x4189f4	                           mov r12d, esi	       857	deflate.c	FUNCTION_11
0x4000e86	              0x53	                                push rbx	       857	deflate.c	FUNCTION_11
0x4000e87	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       864	deflate.c	FUNCTION_11	IF_1
0x4000e8b	          0x4889fb	                            mov rbx, rdi	       857	deflate.c	FUNCTION_11
0x4000e8e	        0x488d68fb	                      lea rbp, [rax - 5]	       864	deflate.c	FUNCTION_11	IF_1
0x4000e92	      0xb8ffff0000	                         mov eax, 0xffff	       861	deflate.c	FUNCTION_11
0x4000e97	    0x4881fdffff00	                         cmp rbp, 0xffff	       861	deflate.c	FUNCTION_11
0x4000e9e	        0x480f43e8	                         cmovae rbp, rax	       861	deflate.c	FUNCTION_11
0x4000ea2	      0xe99c000000	                           jmp 0x4000f43	       861	deflate.c	FUNCTION_11
0x4000ea7	     0x38394000000	             add eax, dword [rbx + 0x94]	       883	deflate.c	FUNCTION_11	FOR_1
0x4000ead	    0x488b8b800000	            mov rcx, qword [rbx + 0x80] 	       887	deflate.c	FUNCTION_11	FOR_1
0x4000eb4	    0xc7839c000000	               mov dword [rbx + 0x9c], 0	       884	deflate.c	FUNCTION_11	FOR_1
0x4000ebe	      0x488d540d00	                    lea rdx, [rbp + rcx]	       887	deflate.c	FUNCTION_11	FOR_1
0x4000ec3	            0x85c0	                           test eax, eax	       888	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000ec5	    0x898394000000	             mov dword [rbx + 0x94], eax	       883	deflate.c	FUNCTION_11	FOR_1
0x4000ecb	            0x7407	                            je 0x4000ed4	       888	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000ecd	            0x89c6	                            mov esi, eax	       888	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000ecf	          0x4839f2	                            cmp rdx, rsi	       888	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000ed2	            0x775a	                            ja 0x4000f2e	       888	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000ed4	            0x29d0	                            sub eax, edx	       890	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000ed6	    0x899394000000	             mov dword [rbx + 0x94], edx	       891	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000edc	            0x89d2	                            mov edx, edx	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000ede	          0x4829ca	                            sub rdx, rcx	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000ee1	            0x31f6	                            xor esi, esi	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000ee3	          0x4885c9	                           test rcx, rcx	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000ee6	    0x89839c000000	             mov dword [rbx + 0x9c], eax	       890	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000eec	            0x7806	                            js 0x4000ef4	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000eee	            0x89ce	                            mov esi, ecx	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000ef0	        0x48037348	             add rsi, qword [rbx + 0x48]	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000ef4	            0x31c9	                            xor ecx, ecx	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000ef6	          0x4889df	                            mov rdi, rbx	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000ef9	      0xe800000000	                          call 0x4000efe	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000efe	    0x8b8394000000	            mov eax, dword [rbx + 0x94] 	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000f04	          0x488b3b	                    mov rdi, qword [rbx]	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000f07	    0x488983800000	             mov qword [rbx + 0x80], rax	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000f0e	      0xe81df8ffff	                  call sym.flush_pending	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000f13	          0x488b03	                    mov rax, qword [rbx]	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000f16	      0x4883782000	               cmp qword [rax + 0x20], 0	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000f1b	     0xf84a7000000	                            je 0x4000fc8	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000f21	    0x8b8394000000	            mov eax, dword [rbx + 0x94] 	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000f27	    0x488b8b800000	            mov rcx, qword [rbx + 0x80] 	       892	deflate.c	FUNCTION_11	FOR_1	IF_5
0x4000f2e	          0x8b7b38	            mov edi, dword [rbx + 0x38] 	       897	deflate.c	FUNCTION_11	FOR_1	IF_6	CALL_5
0x4000f31	            0x89c6	                            mov esi, eax	       897	deflate.c	FUNCTION_11	FOR_1	IF_6	CALL_5
0x4000f33	            0x29ce	                            sub esi, ecx	       897	deflate.c	FUNCTION_11	FOR_1	IF_6	CALL_5
0x4000f35	    0x8d97fafeffff	                  lea edx, [rdi - 0x106]	       897	deflate.c	FUNCTION_11	FOR_1	IF_6	CALL_5
0x4000f3b	            0x39d6	                            cmp esi, edx	       897	deflate.c	FUNCTION_11	FOR_1	IF_6	CALL_5
0x4000f3d	     0xf838c000000	                           jae 0x4000fcf	       897	deflate.c	FUNCTION_11	FOR_1	IF_6	CALL_5
0x4000f43	    0x8b839c000000	            mov eax, dword [rbx + 0x9c] 	       871	deflate.c	FUNCTION_11	FOR_1	IF_2
0x4000f49	          0x83f801	                              cmp eax, 1	       871	deflate.c	FUNCTION_11	FOR_1	IF_2
0x4000f4c	     0xf8755ffffff	                            ja 0x4000ea7	       871	deflate.c	FUNCTION_11	FOR_1	IF_2
0x4000f52	          0x4889df	                            mov rdi, rbx	       876	deflate.c	FUNCTION_11	FOR_1	IF_2	CALL_3
0x4000f55	      0xe816f3ffff	                    call sym.fill_window	       876	deflate.c	FUNCTION_11	FOR_1	IF_2	CALL_3
0x4000f5a	    0x8b839c000000	            mov eax, dword [rbx + 0x9c] 	       877	deflate.c	FUNCTION_11	FOR_1	IF_2	IF_3
0x4000f60	            0x85c0	                           test eax, eax	       877	deflate.c	FUNCTION_11	FOR_1	IF_2	IF_3
0x4000f62	     0xf853fffffff	                           jne 0x4000ea7	       877	deflate.c	FUNCTION_11	FOR_1	IF_2	IF_3
0x4000f68	          0x4585e4	                         test r12d, r12d	       877	deflate.c	FUNCTION_11	FOR_1	IF_2	IF_3
0x4000f6b	            0x745b	                            je 0x4000fc8	       877	deflate.c	FUNCTION_11	FOR_1	IF_2	IF_3
0x4000f6d	    0x8b9394000000	            mov edx, dword [rbx + 0x94] 	       901	deflate.c	FUNCTION_11
0x4000f73	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	       901	deflate.c	FUNCTION_11
0x4000f7a	            0x31c9	                            xor ecx, ecx	       901	deflate.c	FUNCTION_11
0x4000f7c	        0x4183fc05	                             cmp r12d, 5	       901	deflate.c	FUNCTION_11
0x4000f80	           0xf94c1	                                 sete cl	       901	deflate.c	FUNCTION_11
0x4000f83	            0x31f6	                            xor esi, esi	       901	deflate.c	FUNCTION_11
0x4000f85	          0x4829c2	                            sub rdx, rax	       901	deflate.c	FUNCTION_11
0x4000f88	          0x4885c0	                           test rax, rax	       901	deflate.c	FUNCTION_11
0x4000f8b	            0x7809	                            js 0x4000f96	       901	deflate.c	FUNCTION_11
0x4000f8d	            0x89c0	                            mov eax, eax	       901	deflate.c	FUNCTION_11
0x4000f8f	        0x48034348	             add rax, qword [rbx + 0x48]	       901	deflate.c	FUNCTION_11
0x4000f93	          0x4889c6	                            mov rsi, rax	       901	deflate.c	FUNCTION_11
0x4000f96	          0x4889df	                            mov rdi, rbx	       901	deflate.c	FUNCTION_11
0x4000f99	      0xe800000000	                          call 0x4000f9e	       901	deflate.c	FUNCTION_11
0x4000f9e	    0x8b8394000000	            mov eax, dword [rbx + 0x94] 	       901	deflate.c	FUNCTION_11
0x4000fa4	          0x488b3b	                    mov rdi, qword [rbx]	       901	deflate.c	FUNCTION_11
0x4000fa7	    0x488983800000	             mov qword [rbx + 0x80], rax	       901	deflate.c	FUNCTION_11
0x4000fae	      0xe87df7ffff	                  call sym.flush_pending	       901	deflate.c	FUNCTION_11
0x4000fb3	          0x488b03	                    mov rax, qword [rbx]	       901	deflate.c	FUNCTION_11
0x4000fb6	      0x4883782000	               cmp qword [rax + 0x20], 0	       901	deflate.c	FUNCTION_11
0x4000fbb	            0x7556	                           jne 0x4001013	       901	deflate.c	FUNCTION_11
0x4000fbd	        0x4183fc05	                             cmp r12d, 5	       901	deflate.c	FUNCTION_11
0x4000fc1	      0xb802000000	                              mov eax, 2	       901	deflate.c	FUNCTION_11
0x4000fc6	            0x7402	                            je 0x4000fca	       901	deflate.c	FUNCTION_11
0x4000fc8	            0x31c0	                            xor eax, eax	       901	deflate.c	FUNCTION_11
0x4000fca	              0x5b	                                 pop rbx	       903	deflate.c	FUNCTION_11
0x4000fcb	              0x5d	                                 pop rbp	       903	deflate.c	FUNCTION_11
0x4000fcc	            0x415c	                                 pop r12	       903	deflate.c	FUNCTION_11
0x4000fce	              0xc3	                                     ret	       903	deflate.c	FUNCTION_11
0x4000fcf	            0x89c2	                            mov edx, eax	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4000fd1	            0x31f6	                            xor esi, esi	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4000fd3	          0x4829ca	                            sub rdx, rcx	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4000fd6	          0x4885c9	                           test rcx, rcx	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4000fd9	            0x7809	                            js 0x4000fe4	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4000fdb	            0x89c9	                            mov ecx, ecx	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4000fdd	        0x48034b48	             add rcx, qword [rbx + 0x48]	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4000fe1	          0x4889ce	                            mov rsi, rcx	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4000fe4	            0x31c9	                            xor ecx, ecx	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4000fe6	          0x4889df	                            mov rdi, rbx	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4000fe9	      0xe800000000	                          call 0x4000fee	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4000fee	    0x8b8394000000	            mov eax, dword [rbx + 0x94] 	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4000ff4	          0x488b3b	                    mov rdi, qword [rbx]	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4000ff7	    0x488983800000	             mov qword [rbx + 0x80], rax	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4000ffe	      0xe82df7ffff	                  call sym.flush_pending	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4001003	          0x488b03	                    mov rax, qword [rbx]	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4001006	      0x4883782000	               cmp qword [rax + 0x20], 0	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x400100b	     0xf8532ffffff	                           jne 0x4000f43	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4001011	            0xebb5	                           jmp 0x4000fc8	       898	deflate.c	FUNCTION_11	FOR_1	IF_6
0x4001013	            0x31c0	                            xor eax, eax	       902	deflate.c	FUNCTION_11
0x4001015	        0x4183fc05	                             cmp r12d, 5	       902	deflate.c	FUNCTION_11
0x4001019	           0xf94c0	                                 sete al	       902	deflate.c	FUNCTION_11
0x400101c	        0x8d440001	                lea eax, [rax + rax + 1]	       902	deflate.c	FUNCTION_11
0x4001020	            0xeba8	                           jmp 0x4000fca	       902	deflate.c	FUNCTION_11
zlib_deflate	functions,0:WHILE,0:FOR,0:CALL,12:SWITCH,0:ELSE,3:IF,22:DO,0	244
0x4001320	          0x4885ff	                           test rdi, rdi	       335	deflate.c	FUNCTION_5	IF_1
0x4001323	     0xf8482030000	                            je 0x40016ab	       335	deflate.c	FUNCTION_5	IF_1
0x4001329	            0x4154	                                push r12	       331	deflate.c	FUNCTION_5
0x400132b	              0x55	                                push rbp	       331	deflate.c	FUNCTION_5
0x400132c	              0x53	                                push rbx	       331	deflate.c	FUNCTION_5
0x400132d	        0x488b5f38	            mov rbx, qword [rdi + 0x38] 	       335	deflate.c	FUNCTION_5	IF_1
0x4001331	          0x4885db	                           test rbx, rbx	       335	deflate.c	FUNCTION_5	IF_1
0x4001334	     0xf84dd020000	                            je 0x4001617	       335	deflate.c	FUNCTION_5	IF_1
0x400133a	          0x83fe05	                              cmp esi, 5	       336	deflate.c	FUNCTION_5	IF_1
0x400133d	     0xf87d4020000	                            ja 0x4001617	       336	deflate.c	FUNCTION_5	IF_1
0x4001343	        0x48833f00	                      cmp qword [rdi], 0	       341	deflate.c	FUNCTION_5	IF_2
0x4001347	     0xf84bf020000	                            je 0x400160c	       341	deflate.c	FUNCTION_5	IF_2
0x400134d	          0x8b5308	                mov edx, dword [rbx + 8]	       342	deflate.c	FUNCTION_5	IF_2
0x4001350	          0x83fe05	                              cmp esi, 5	       342	deflate.c	FUNCTION_5	IF_2
0x4001353	        0x410f95c0	                               setne r8b	       342	deflate.c	FUNCTION_5	IF_2
0x4001357	    0x81fa9a020000	                          cmp edx, 0x29a	       342	deflate.c	FUNCTION_5	IF_2
0x400135d	            0x750e	                           jne 0x400136d	       342	deflate.c	FUNCTION_5	IF_2
0x400135f	          0x4584c0	                           test r8b, r8b	       342	deflate.c	FUNCTION_5	IF_2
0x4001362	      0xb8feffffff	                     mov eax, 0xfffffffe	       337	deflate.c	FUNCTION_5	IF_1
0x4001367	     0xf8585000000	                           jne 0x40013f2	       342	deflate.c	FUNCTION_5	IF_2
0x400136d	      0x48837f2000	               cmp qword [rdi + 0x20], 0	       345	deflate.c	FUNCTION_5	IF_3
0x4001372	     0xf847e020000	                            je 0x40015f6	       345	deflate.c	FUNCTION_5	IF_3
0x4001378	          0x83fa2a	                           cmp edx, 0x2a	       352	deflate.c	FUNCTION_5	IF_4
0x400137b	        0x448b4b34	            mov r9d, dword [rbx + 0x34] 	       348	deflate.c	FUNCTION_5
0x400137f	          0x48893b	                    mov qword [rbx], rdi	       347	deflate.c	FUNCTION_5
0x4001382	          0x897334	             mov dword [rbx + 0x34], esi	       349	deflate.c	FUNCTION_5
0x4001385	     0xf845a010000	                            je 0x40014e5	       352	deflate.c	FUNCTION_5	IF_4
0x400138b	        0x448b5328	           mov r10d, dword [rbx + 0x28] 	       374	deflate.c	FUNCTION_5	IF_8
0x400138f	          0x4189f4	                           mov r12d, esi	       374	deflate.c	FUNCTION_5	IF_8
0x4001392	          0x4889fd	                            mov rbp, rdi	       374	deflate.c	FUNCTION_5	IF_8
0x4001395	          0x4585d2	                         test r10d, r10d	       374	deflate.c	FUNCTION_5	IF_8
0x4001398	     0xf8517010000	                           jne 0x40014b5	       374	deflate.c	FUNCTION_5	IF_8
0x400139e	      0x48837f0800	                  cmp qword [rdi + 8], 0	       391	deflate.c	FUNCTION_5	ELSE_1	IF_10
0x40013a3	            0x7452	                            je 0x40013f7	       391	deflate.c	FUNCTION_5	ELSE_1	IF_10
0x40013a5	    0x817b089a0200	              cmp dword [rbx + 8], 0x29a	       397	deflate.c	FUNCTION_5	IF_11
0x40013ac	     0xf8444020000	                            je 0x40015f6	       397	deflate.c	FUNCTION_5	IF_11
0x40013b2	    0x486383ac0000	         movsxd rax, dword [rbx + 0xac] 	       407	deflate.c	FUNCTION_5	IF_12
0x40013b9	          0x4489e6	                           mov esi, r12d	       407	deflate.c	FUNCTION_5	IF_12
0x40013bc	          0x4889df	                            mov rdi, rbx	       407	deflate.c	FUNCTION_5	IF_12
0x40013bf	        0x48c1e004	                              shl rax, 4	       407	deflate.c	FUNCTION_5	IF_12
0x40013c3	    0x488b80000000	                    mov rax, qword [rax]	       407	deflate.c	FUNCTION_5	IF_12
0x40013ca	      0xe800000000	                          call 0x40013cf	       407	deflate.c	FUNCTION_5	IF_12
0x40013cf	          0x8d50fe	                      lea edx, [rax - 2]	       409	deflate.c	FUNCTION_5	IF_12	IF_13
0x40013d2	          0x83fa01	                              cmp edx, 1	       409	deflate.c	FUNCTION_5	IF_12	IF_13
0x40013d5	     0xf8625020000	                           jbe 0x4001600	       409	deflate.c	FUNCTION_5	IF_12	IF_13
0x40013db	      0xa9fdffffff	                    test eax, 0xfffffffd	       412	deflate.c	FUNCTION_5	IF_12	IF_14
0x40013e0	            0x753e	                           jne 0x4001420	       412	deflate.c	FUNCTION_5	IF_12	IF_14
0x40013e2	      0x48837d2000	               cmp qword [rbp + 0x20], 0	       413	deflate.c	FUNCTION_5	IF_12	IF_14	IF_15
0x40013e7	            0x7507	                           jne 0x40013f0	       413	deflate.c	FUNCTION_5	IF_12	IF_14	IF_15
0x40013e9	    0xc74334ffffff	     mov dword [rbx + 0x34], 0xffffffff 	       414	deflate.c	FUNCTION_5	IF_12	IF_14	IF_15
0x40013f0	            0x31c0	                            xor eax, eax	       416	deflate.c	FUNCTION_5	IF_12	IF_14
0x40013f2	              0x5b	                                 pop rbx	       462	deflate.c	FUNCTION_5
0x40013f3	              0x5d	                                 pop rbp	       462	deflate.c	FUNCTION_5
0x40013f4	            0x415c	                                 pop r12	       462	deflate.c	FUNCTION_5
0x40013f6	              0xc3	                                     ret	       462	deflate.c	FUNCTION_5
0x40013f7	          0x4439ce	                            cmp esi, r9d	       391	deflate.c	FUNCTION_5	ELSE_1	IF_10
0x40013fa	            0x7f09	                            jg 0x4001405	       391	deflate.c	FUNCTION_5	ELSE_1	IF_10
0x40013fc	          0x4584c0	                           test r8b, r8b	       391	deflate.c	FUNCTION_5	ELSE_1	IF_10
0x40013ff	     0xf85f1010000	                           jne 0x40015f6	       391	deflate.c	FUNCTION_5	ELSE_1	IF_10
0x4001405	          0x8b4308	                mov eax, dword [rbx + 8]	       397	deflate.c	FUNCTION_5	IF_11
0x4001408	    0x8bbb9c000000	            mov edi, dword [rbx + 0x9c] 	       403	deflate.c	FUNCTION_5	IF_12
0x400140e	            0x85ff	                           test edi, edi	       403	deflate.c	FUNCTION_5	IF_12
0x4001410	            0x75a0	                           jne 0x40013b2	       403	deflate.c	FUNCTION_5	IF_12
0x4001412	          0x4585e4	                         test r12d, r12d	       403	deflate.c	FUNCTION_5	IF_12
0x4001415	            0x74d9	                            je 0x40013f0	       403	deflate.c	FUNCTION_5	IF_12
0x4001417	      0x3d9a020000	                          cmp eax, 0x29a	       404	deflate.c	FUNCTION_5	IF_12
0x400141c	            0x7594	                           jne 0x40013b2	       404	deflate.c	FUNCTION_5	IF_12
0x400141e	            0xeb09	                           jmp 0x4001429	       404	deflate.c	FUNCTION_5	IF_12
0x4001420	          0x83f801	                              cmp eax, 1	       425	deflate.c	FUNCTION_5	IF_12	IF_16
0x4001423	     0xf84f8010000	                            je 0x4001621	       425	deflate.c	FUNCTION_5	IF_12	IF_16
0x4001429	        0x4183fc05	                             cmp r12d, 5	       450	deflate.c	FUNCTION_5	IF_21
0x400142d	            0x75c1	                           jne 0x40013f0	       450	deflate.c	FUNCTION_5	IF_21
0x400142f	          0x8b4b2c	            mov ecx, dword [rbx + 0x2c] 	       451	deflate.c	FUNCTION_5	IF_22
0x4001432	      0xb801000000	                              mov eax, 1	       451	deflate.c	FUNCTION_5	IF_22
0x4001437	            0x85c9	                           test ecx, ecx	       451	deflate.c	FUNCTION_5	IF_22
0x4001439	            0x75b7	                           jne 0x40013f2	       451	deflate.c	FUNCTION_5	IF_22
0x400143b	        0x48634328	         movsxd rax, dword [rbx + 0x28] 	       293	deflate.c	FUNCTION_3	CALL_1
0x400143f	        0x488b5550	            mov rdx, qword [rbp + 0x50] 	       454	deflate.c	FUNCTION_5	CALL_10
0x4001443	          0x4889ef	                            mov rdi, rbp	       456	deflate.c	FUNCTION_5	CALL_12
0x4001446	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       293	deflate.c	FUNCTION_3	CALL_1
0x400144a	        0x48c1ea10	                           shr rdx, 0x10	       454	deflate.c	FUNCTION_5	CALL_10
0x400144e	          0x8d7001	                      lea esi, [rax + 1]	       293	deflate.c	FUNCTION_3	CALL_1
0x4001451	          0x897328	             mov dword [rbx + 0x28], esi	       293	deflate.c	FUNCTION_3	CALL_1
0x4001454	            0x89d6	                            mov esi, edx	       293	deflate.c	FUNCTION_3	CALL_1
0x4001456	          0xc1ee08	                              shr esi, 8	       293	deflate.c	FUNCTION_3	CALL_1
0x4001459	        0x40883401	               mov byte [rcx + rax], sil	       293	deflate.c	FUNCTION_3	CALL_1
0x400145d	        0x48634328	         movsxd rax, dword [rbx + 0x28] 	       294	deflate.c	FUNCTION_3	CALL_2
0x4001461	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       294	deflate.c	FUNCTION_3	CALL_2
0x4001465	          0x8d7001	                      lea esi, [rax + 1]	       294	deflate.c	FUNCTION_3	CALL_2
0x4001468	          0x897328	             mov dword [rbx + 0x28], esi	       294	deflate.c	FUNCTION_3	CALL_2
0x400146b	          0x881401	                mov byte [rcx + rax], dl	       294	deflate.c	FUNCTION_3	CALL_2
0x400146e	        0x48634328	         movsxd rax, dword [rbx + 0x28] 	       293	deflate.c	FUNCTION_3	CALL_1
0x4001472	         0xfb75550	           movzx edx, word [rbp + 0x50] 	       455	deflate.c	FUNCTION_5	CALL_11
0x4001476	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       293	deflate.c	FUNCTION_3	CALL_1
0x400147a	          0x8d7001	                      lea esi, [rax + 1]	       293	deflate.c	FUNCTION_3	CALL_1
0x400147d	          0x897328	             mov dword [rbx + 0x28], esi	       293	deflate.c	FUNCTION_3	CALL_1
0x4001480	            0x89d6	                            mov esi, edx	       293	deflate.c	FUNCTION_3	CALL_1
0x4001482	          0xc1ee08	                              shr esi, 8	       293	deflate.c	FUNCTION_3	CALL_1
0x4001485	        0x40883401	               mov byte [rcx + rax], sil	       293	deflate.c	FUNCTION_3	CALL_1
0x4001489	        0x48634328	         movsxd rax, dword [rbx + 0x28] 	       294	deflate.c	FUNCTION_3	CALL_2
0x400148d	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       294	deflate.c	FUNCTION_3	CALL_2
0x4001491	          0x8d7001	                      lea esi, [rax + 1]	       294	deflate.c	FUNCTION_3	CALL_2
0x4001494	          0x897328	             mov dword [rbx + 0x28], esi	       294	deflate.c	FUNCTION_3	CALL_2
0x4001497	          0x881401	                mov byte [rcx + rax], dl	       294	deflate.c	FUNCTION_3	CALL_2
0x400149a	      0xe891f2ffff	                  call sym.flush_pending	       456	deflate.c	FUNCTION_5	CALL_12
0x400149f	          0x8b5328	            mov edx, dword [rbx + 0x28] 	       461	deflate.c	FUNCTION_5
0x40014a2	            0x31c0	                            xor eax, eax	       461	deflate.c	FUNCTION_5
0x40014a4	    0xc7432cffffff	     mov dword [rbx + 0x2c], 0xffffffff 	       460	deflate.c	FUNCTION_5
0x40014ab	            0x85d2	                           test edx, edx	       461	deflate.c	FUNCTION_5
0x40014ad	           0xf94c0	                                 sete al	       461	deflate.c	FUNCTION_5
0x40014b0	      0xe93dffffff	                           jmp 0x40013f2	       461	deflate.c	FUNCTION_5
0x40014b5	      0xe876f2ffff	                  call sym.flush_pending	       375	deflate.c	FUNCTION_5	IF_8	CALL_4
0x40014ba	      0x48837d2000	               cmp qword [rbp + 0x20], 0	       376	deflate.c	FUNCTION_5	IF_8	IF_9
0x40014bf	     0xf8424ffffff	                            je 0x40013e9	       376	deflate.c	FUNCTION_5	IF_8	IF_9
0x40014c5	          0x8b4308	                mov eax, dword [rbx + 8]	       397	deflate.c	FUNCTION_5	IF_11
0x40014c8	        0x488b5508	                mov rdx, qword [rbp + 8]	       397	deflate.c	FUNCTION_5	IF_11
0x40014cc	      0x3d9a020000	                          cmp eax, 0x29a	       397	deflate.c	FUNCTION_5	IF_11
0x40014d1	     0xf8416010000	                            je 0x40015ed	       397	deflate.c	FUNCTION_5	IF_11
0x40014d7	          0x4885d2	                           test rdx, rdx	       403	deflate.c	FUNCTION_5	IF_12
0x40014da	     0xf8428ffffff	                            je 0x4001408	       403	deflate.c	FUNCTION_5	IF_12
0x40014e0	      0xe9cdfeffff	                           jmp 0x40013b2	       403	deflate.c	FUNCTION_5	IF_12
0x40014e5	    0x8b8bac000000	            mov ecx, dword [rbx + 0xac] 	       355	deflate.c	FUNCTION_5	IF_4
0x40014eb	          0x8b433c	            mov eax, dword [rbx + 0x3c] 	       354	deflate.c	FUNCTION_5	IF_4
0x40014ee	    0x448b9b940000	           mov r11d, dword [rbx + 0x94] 	       359	deflate.c	FUNCTION_5	IF_4	IF_6
0x40014f5	    0xc74308710000	               mov dword [rbx + 8], 0x71	       362	deflate.c	FUNCTION_5	IF_4
0x40014fc	          0x8d51ff	                      lea edx, [rcx - 1]	       355	deflate.c	FUNCTION_5	IF_4
0x40014ff	          0xc1e00c	                            shl eax, 0xc	       354	deflate.c	FUNCTION_5	IF_4
0x4001502	      0xb903000000	                              mov ecx, 3	       358	deflate.c	FUNCTION_5	IF_4
0x4001507	      0x2d00780000	                         sub eax, 0x7800	       354	deflate.c	FUNCTION_5	IF_4
0x400150c	            0xd1fa	                              sar edx, 1	       355	deflate.c	FUNCTION_5	IF_4
0x400150e	          0x83fa03	                              cmp edx, 3	       358	deflate.c	FUNCTION_5	IF_4
0x4001511	           0xf46ca	                         cmovbe ecx, edx	       358	deflate.c	FUNCTION_5	IF_4
0x4001514	      0xba85104208	                      mov edx, 0x8421085	       360	deflate.c	FUNCTION_5	IF_4
0x4001519	          0xc1e106	                              shl ecx, 6	       358	deflate.c	FUNCTION_5	IF_4
0x400151c	             0x9c1	                             or ecx, eax	       358	deflate.c	FUNCTION_5	IF_4
0x400151e	            0x89c8	                            mov eax, ecx	       359	deflate.c	FUNCTION_5	IF_4	IF_6
0x4001520	          0x83c820	                            or eax, 0x20	       359	deflate.c	FUNCTION_5	IF_4	IF_6
0x4001523	          0x4585db	                         test r11d, r11d	       359	deflate.c	FUNCTION_5	IF_4	IF_6
0x4001526	           0xf45c8	                         cmovne ecx, eax	       359	deflate.c	FUNCTION_5	IF_4	IF_6
0x4001529	            0x89c8	                            mov eax, ecx	       360	deflate.c	FUNCTION_5	IF_4
0x400152b	            0xf7e2	                                 mul edx	       360	deflate.c	FUNCTION_5	IF_4
0x400152d	            0x29d1	                            sub ecx, edx	       360	deflate.c	FUNCTION_5	IF_4
0x400152f	            0xd1e9	                              shr ecx, 1	       360	deflate.c	FUNCTION_5	IF_4
0x4001531	             0x1ca	                            add edx, ecx	       360	deflate.c	FUNCTION_5	IF_4
0x4001533	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       293	deflate.c	FUNCTION_3	CALL_1
0x4001537	          0xc1ea04	                              shr edx, 4	       360	deflate.c	FUNCTION_5	IF_4
0x400153a	            0x89d0	                            mov eax, edx	       360	deflate.c	FUNCTION_5	IF_4
0x400153c	          0xc1e005	                              shl eax, 5	       360	deflate.c	FUNCTION_5	IF_4
0x400153f	            0x29d0	                            sub eax, edx	       360	deflate.c	FUNCTION_5	IF_4
0x4001541	        0x48635328	         movsxd rdx, dword [rbx + 0x28] 	       293	deflate.c	FUNCTION_3	CALL_1
0x4001545	          0x83c01f	                           add eax, 0x1f	       360	deflate.c	FUNCTION_5	IF_4
0x4001548	        0x448d5201	                     lea r10d, [rdx + 1]	       293	deflate.c	FUNCTION_3	CALL_1
0x400154c	        0x44895328	            mov dword [rbx + 0x28], r10d	       293	deflate.c	FUNCTION_3	CALL_1
0x4001550	          0x4189c2	                           mov r10d, eax	       293	deflate.c	FUNCTION_3	CALL_1
0x4001553	        0x41c1ea08	                             shr r10d, 8	       293	deflate.c	FUNCTION_3	CALL_1
0x4001557	        0x44881411	              mov byte [rcx + rdx], r10b	       293	deflate.c	FUNCTION_3	CALL_1
0x400155b	        0x48635328	         movsxd rdx, dword [rbx + 0x28] 	       294	deflate.c	FUNCTION_3	CALL_2
0x400155f	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       294	deflate.c	FUNCTION_3	CALL_2
0x4001563	        0x448d5201	                     lea r10d, [rdx + 1]	       294	deflate.c	FUNCTION_3	CALL_2
0x4001567	        0x44895328	            mov dword [rbx + 0x28], r10d	       294	deflate.c	FUNCTION_3	CALL_2
0x400156b	          0x880411	                mov byte [rcx + rdx], al	       294	deflate.c	FUNCTION_3	CALL_2
0x400156e	    0x8bab94000000	            mov ebp, dword [rbx + 0x94] 	       366	deflate.c	FUNCTION_5	IF_4	IF_7
0x4001574	            0x85ed	                           test ebp, ebp	       366	deflate.c	FUNCTION_5	IF_4	IF_7
0x4001576	            0x7468	                            je 0x40015e0	       366	deflate.c	FUNCTION_5	IF_4	IF_7
0x4001578	        0x48634328	         movsxd rax, dword [rbx + 0x28] 	       293	deflate.c	FUNCTION_3	CALL_1
0x400157c	        0x488b5750	            mov rdx, qword [rdi + 0x50] 	       367	deflate.c	FUNCTION_5	IF_4	IF_7	CALL_2
0x4001580	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       293	deflate.c	FUNCTION_3	CALL_1
0x4001584	        0x48c1ea10	                           shr rdx, 0x10	       367	deflate.c	FUNCTION_5	IF_4	IF_7	CALL_2
0x4001588	        0x448d5001	                     lea r10d, [rax + 1]	       293	deflate.c	FUNCTION_3	CALL_1
0x400158c	        0x44895328	            mov dword [rbx + 0x28], r10d	       293	deflate.c	FUNCTION_3	CALL_1
0x4001590	          0x4189d2	                           mov r10d, edx	       293	deflate.c	FUNCTION_3	CALL_1
0x4001593	        0x41c1ea08	                             shr r10d, 8	       293	deflate.c	FUNCTION_3	CALL_1
0x4001597	        0x44881401	              mov byte [rcx + rax], r10b	       293	deflate.c	FUNCTION_3	CALL_1
0x400159b	        0x48634328	         movsxd rax, dword [rbx + 0x28] 	       294	deflate.c	FUNCTION_3	CALL_2
0x400159f	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       294	deflate.c	FUNCTION_3	CALL_2
0x40015a3	        0x448d5001	                     lea r10d, [rax + 1]	       294	deflate.c	FUNCTION_3	CALL_2
0x40015a7	        0x44895328	            mov dword [rbx + 0x28], r10d	       294	deflate.c	FUNCTION_3	CALL_2
0x40015ab	          0x881401	                mov byte [rcx + rax], dl	       294	deflate.c	FUNCTION_3	CALL_2
0x40015ae	        0x48634328	         movsxd rax, dword [rbx + 0x28] 	       293	deflate.c	FUNCTION_3	CALL_1
0x40015b2	         0xfb75750	           movzx edx, word [rdi + 0x50] 	       368	deflate.c	FUNCTION_5	IF_4	IF_7	CALL_3
0x40015b6	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       293	deflate.c	FUNCTION_3	CALL_1
0x40015ba	        0x448d5001	                     lea r10d, [rax + 1]	       293	deflate.c	FUNCTION_3	CALL_1
0x40015be	        0x44895328	            mov dword [rbx + 0x28], r10d	       293	deflate.c	FUNCTION_3	CALL_1
0x40015c2	          0x4189d2	                           mov r10d, edx	       293	deflate.c	FUNCTION_3	CALL_1
0x40015c5	        0x41c1ea08	                             shr r10d, 8	       293	deflate.c	FUNCTION_3	CALL_1
0x40015c9	        0x44881401	              mov byte [rcx + rax], r10b	       293	deflate.c	FUNCTION_3	CALL_1
0x40015cd	        0x48634328	         movsxd rax, dword [rbx + 0x28] 	       294	deflate.c	FUNCTION_3	CALL_2
0x40015d1	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       294	deflate.c	FUNCTION_3	CALL_2
0x40015d5	        0x448d5001	                     lea r10d, [rax + 1]	       294	deflate.c	FUNCTION_3	CALL_2
0x40015d9	        0x44895328	            mov dword [rbx + 0x28], r10d	       294	deflate.c	FUNCTION_3	CALL_2
0x40015dd	          0x881401	                mov byte [rcx + rax], dl	       294	deflate.c	FUNCTION_3	CALL_2
0x40015e0	    0x48c747500100	               mov qword [rdi + 0x50], 1	       370	deflate.c	FUNCTION_5	IF_4
0x40015e8	      0xe99efdffff	                           jmp 0x400138b	       370	deflate.c	FUNCTION_5	IF_4
0x40015ed	          0x4885d2	                           test rdx, rdx	       397	deflate.c	FUNCTION_5	IF_11
0x40015f0	     0xf8412feffff	                            je 0x4001408	       397	deflate.c	FUNCTION_5	IF_11
0x40015f6	      0xb8fbffffff	                     mov eax, 0xfffffffb	       345	deflate.c	FUNCTION_5	IF_3
0x40015fb	      0xe9f2fdffff	                           jmp 0x40013f2	       345	deflate.c	FUNCTION_5	IF_3
0x4001600	    0xc743089a0200	              mov dword [rbx + 8], 0x29a	       410	deflate.c	FUNCTION_5	IF_12	IF_13
0x4001607	      0xe9cffdffff	                           jmp 0x40013db	       410	deflate.c	FUNCTION_5	IF_12	IF_13
0x400160c	      0x48837f0800	                  cmp qword [rdi + 8], 0	       341	deflate.c	FUNCTION_5	IF_2
0x4001611	     0xf8436fdffff	                            je 0x400134d	       341	deflate.c	FUNCTION_5	IF_2
0x4001617	      0xb8feffffff	                     mov eax, 0xfffffffe	       337	deflate.c	FUNCTION_5	IF_1
0x400161c	      0xe9d1fdffff	                           jmp 0x40013f2	       337	deflate.c	FUNCTION_5	IF_1
0x4001621	        0x4183fc01	                             cmp r12d, 1	       426	deflate.c	FUNCTION_5	IF_12	IF_16	IF_17
0x4001625	            0x747a	                            je 0x40016a1	       426	deflate.c	FUNCTION_5	IF_12	IF_16	IF_17
0x4001627	        0x4183fc02	                             cmp r12d, 2	       428	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_2	IF_18
0x400162b	            0x746a	                            je 0x4001697	       428	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_2	IF_18
0x400162d	            0x31c9	                            xor ecx, ecx	       433	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	CALL_7
0x400162f	            0x31d2	                            xor edx, edx	       433	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	CALL_7
0x4001631	            0x31f6	                            xor esi, esi	       433	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	CALL_7
0x4001633	          0x4889df	                            mov rdi, rbx	       433	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	CALL_7
0x4001636	      0xe800000000	                          call 0x400163b	       433	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	CALL_7
0x400163b	        0x4183fc04	                             cmp r12d, 4	       437	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	IF_19
0x400163f	            0x7418	                            je 0x4001659	       437	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	IF_19
0x4001641	          0x4889ef	                            mov rdi, rbp	       441	deflate.c	FUNCTION_5	IF_12	IF_16	CALL_8
0x4001644	      0xe8e7f0ffff	                  call sym.flush_pending	       441	deflate.c	FUNCTION_5	IF_12	IF_16	CALL_8
0x4001649	      0x48837d2000	               cmp qword [rbp + 0x20], 0	       442	deflate.c	FUNCTION_5	IF_12	IF_16	IF_20
0x400164e	     0xf85d5fdffff	                           jne 0x4001429	       442	deflate.c	FUNCTION_5	IF_12	IF_16	IF_20
0x4001654	      0xe990fdffff	                           jmp 0x40013e9	       442	deflate.c	FUNCTION_5	IF_12	IF_16	IF_20
0x4001659	          0x8b436c	            mov eax, dword [rbx + 0x6c] 	       438	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	IF_19
0x400165c	            0x31f6	                            xor esi, esi	       438	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	IF_19
0x400165e	          0x8d50ff	                      lea edx, [rax - 1]	       438	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	IF_19
0x4001661	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       438	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	IF_19
0x4001665	        0x66893450	              mov word [rax + rdx*2], si	       438	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	IF_19
0x4001669	          0x8b436c	            mov eax, dword [rbx + 0x6c] 	       438	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	IF_19
0x400166c	            0x31f6	                            xor esi, esi	       438	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	IF_19
0x400166e	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	       438	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	IF_19
0x4001672	          0x8d50ff	                      lea edx, [rax - 1]	       438	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	IF_19
0x4001675	          0x4801d2	                            add rdx, rdx	       438	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	IF_19
0x4001678	      0xe800000000	                          call 0x400167d	       438	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_3	IF_19
0x400167d	          0x4889ef	                            mov rdi, rbp	       441	deflate.c	FUNCTION_5	IF_12	IF_16	CALL_8
0x4001680	      0xe8abf0ffff	                  call sym.flush_pending	       441	deflate.c	FUNCTION_5	IF_12	IF_16	CALL_8
0x4001685	      0x48837d2000	               cmp qword [rbp + 0x20], 0	       442	deflate.c	FUNCTION_5	IF_12	IF_16	IF_20
0x400168a	     0xf8459fdffff	                            je 0x40013e9	       442	deflate.c	FUNCTION_5	IF_12	IF_16	IF_20
0x4001690	            0x31c0	                            xor eax, eax	       416	deflate.c	FUNCTION_5	IF_12	IF_14
0x4001692	      0xe95bfdffff	                           jmp 0x40013f2	       416	deflate.c	FUNCTION_5	IF_12	IF_14
0x4001697	          0x4889df	                            mov rdi, rbx	       431	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_2	IF_18	CALL_6
0x400169a	      0xe800000000	                          call 0x400169f	       431	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_2	IF_18	CALL_6
0x400169f	            0xebdc	                           jmp 0x400167d	       431	deflate.c	FUNCTION_5	IF_12	IF_16	ELSE_2	IF_18	CALL_6
0x40016a1	          0x4889df	                            mov rdi, rbx	       427	deflate.c	FUNCTION_5	IF_12	IF_16	IF_17	CALL_5
0x40016a4	      0xe800000000	                          call 0x40016a9	       427	deflate.c	FUNCTION_5	IF_12	IF_16	IF_17	CALL_5
0x40016a9	            0xebd2	                           jmp 0x400167d	       427	deflate.c	FUNCTION_5	IF_12	IF_16	IF_17	CALL_5
0x40016ab	      0xb8feffffff	                     mov eax, 0xfffffffe	       337	deflate.c	FUNCTION_5	IF_1
0x40016b0	              0xc3	                                     ret	       462	deflate.c	FUNCTION_5
longest_match	functions,0:WHILE,1:FOR,0:CALL,9:SWITCH,0:ELSE,0:IF,8:DO,3	138
0x4000040	            0x4157	                                push r15	       558	deflate.c	FUNCTION_9
0x4000042	            0x4156	                                push r14	       558	deflate.c	FUNCTION_9
0x4000044	          0x4531d2	                          xor r10d, r10d	       558	deflate.c	FUNCTION_9
0x4000047	            0x4155	                                push r13	       558	deflate.c	FUNCTION_9
0x4000049	            0x4154	                                push r12	       558	deflate.c	FUNCTION_9
0x400004b	              0x55	                                push rbp	       558	deflate.c	FUNCTION_9
0x400004c	              0x53	                                push rbx	       558	deflate.c	FUNCTION_9
0x400004d	        0x4883ec10	                           sub rsp, 0x10	       558	deflate.c	FUNCTION_9
0x4000051	          0x8b5f38	            mov ebx, dword [rdi + 0x38] 	       565	deflate.c	FUNCTION_9	CALL_1
0x4000054	    0x448b9f940000	           mov r11d, dword [rdi + 0x94] 	       560	deflate.c	FUNCTION_9
0x400005b	        0x4c8b4f48	              mov r9, qword [rdi + 0x48]	       560	deflate.c	FUNCTION_9
0x400005f	    0x448b87a00000	            mov r8d, dword [rdi + 0xa0] 	       563	deflate.c	FUNCTION_9
0x4000066	    0x8b8fa4000000	            mov ecx, dword [rdi + 0xa4] 	       559	deflate.c	FUNCTION_9
0x400006c	    0x448bbfb80000	           mov r15d, dword [rdi + 0xb8] 	       564	deflate.c	FUNCTION_9
0x4000073	    0x8dabfafeffff	                  lea ebp, [rbx - 0x106]	       566	deflate.c	FUNCTION_9	CALL_2
0x4000079	        0x4f8d2419	                     lea r12, [r9 + r11]	       560	deflate.c	FUNCTION_9
0x400007d	          0x4489c0	                            mov eax, r8d	       563	deflate.c	FUNCTION_9
0x4000080	          0x4139eb	                           cmp r11d, ebp	       566	deflate.c	FUNCTION_9	CALL_2
0x4000083	            0x760a	                           jbe 0x400008f	       566	deflate.c	FUNCTION_9	CALL_2
0x4000085	    0x458d93060100	                 lea r10d, [r11 + 0x106]	       566	deflate.c	FUNCTION_9	CALL_2
0x400008c	          0x4129da	                           sub r10d, ebx	       566	deflate.c	FUNCTION_9	CALL_2
0x400008f	    0x4b8d94190201	            lea rdx, [r9 + r11 + 0x102] 	       581	deflate.c	FUNCTION_9
0x4000097	    0x448bb79c0000	           mov r14d, dword [rdi + 0x9c] 	       598	deflate.c	FUNCTION_9	IF_2
0x400009e	        0x488b6f58	            mov rbp, qword [rdi + 0x58] 	       570	deflate.c	FUNCTION_9
0x40000a2	          0x8b5f40	            mov ebx, dword [rdi + 0x40] 	       571	deflate.c	FUNCTION_9
0x40000a5	        0x48891424	                    mov qword [rsp], rdx	       581	deflate.c	FUNCTION_9
0x40000a9	          0x4963d0	                         movsxd rdx, r8d	       582	deflate.c	FUNCTION_9
0x40000ac	    0x450fb66c14ff	        movzx r13d, byte [r12 + rdx - 1]	       582	deflate.c	FUNCTION_9
0x40000b2	      0x450fb61c14	            movzx r11d, byte [r12 + rdx]	       583	deflate.c	FUNCTION_9
0x40000b7	            0x89ca	                            mov edx, ecx	       593	deflate.c	FUNCTION_9	IF_1
0x40000b9	          0xc1ea02	                              shr edx, 2	       593	deflate.c	FUNCTION_9	IF_1
0x40000bc	    0x443b87b40000	            cmp r8d, dword [rdi + 0xb4] 	       593	deflate.c	FUNCTION_9	IF_1
0x40000c3	           0xf43ca	                         cmovae ecx, edx	       593	deflate.c	FUNCTION_9	IF_1
0x40000c6	          0x4539fe	                          cmp r14d, r15d	       598	deflate.c	FUNCTION_9	IF_2
0x40000c9	        0x450f42fe	                        cmovb r15d, r14d	       598	deflate.c	FUNCTION_9	IF_2
0x40000cd	            0xeb19	                           jmp 0x40000e8	       598	deflate.c	FUNCTION_9	IF_2
0x40000cf	            0x21de	                            and esi, ebx	       686	deflate.c	FUNCTION_9	WHILE_1
0x40000d1	       0xfb7747500	           movzx esi, word [rbp + rsi*2]	       686	deflate.c	FUNCTION_9	WHILE_1
0x40000d6	          0x4139f2	                           cmp r10d, esi	       687	deflate.c	FUNCTION_9	WHILE_1
0x40000d9	     0xf8320010000	                           jae 0x40001ff	       687	deflate.c	FUNCTION_9	WHILE_1
0x40000df	          0x83e901	                              sub ecx, 1	       687	deflate.c	FUNCTION_9	WHILE_1
0x40000e2	     0xf8417010000	                            je 0x40001ff	       687	deflate.c	FUNCTION_9	WHILE_1
0x40000e8	            0x89f2	                            mov edx, esi	       604	deflate.c	FUNCTION_9	DO_1
0x40000ea	          0x4c63c0	                          movsxd r8, eax	       644	deflate.c	FUNCTION_9	DO_1	IF_5
0x40000ed	          0x4c01ca	                             add rdx, r9	       604	deflate.c	FUNCTION_9	DO_1
0x40000f0	        0x463a1c02	               cmp r11b, byte [rdx + r8]	       644	deflate.c	FUNCTION_9	DO_1	IF_5
0x40000f4	            0x75d9	                           jne 0x40000cf	       644	deflate.c	FUNCTION_9	DO_1	IF_5
0x40000f6	      0x463a6c02ff	           cmp r13b, byte [rdx + r8 - 1]	       644	deflate.c	FUNCTION_9	DO_1	IF_5
0x40000fb	            0x75d2	                           jne 0x40000cf	       644	deflate.c	FUNCTION_9	DO_1	IF_5
0x40000fd	      0x450fb60424	                   movzx r8d, byte [r12]	       645	deflate.c	FUNCTION_9	DO_1	IF_5
0x4000102	          0x443802	                     cmp byte [rdx], r8b	       645	deflate.c	FUNCTION_9	DO_1	IF_5
0x4000105	            0x75c8	                           jne 0x40000cf	       645	deflate.c	FUNCTION_9	DO_1	IF_5
0x4000107	    0x450fb6442401	               movzx r8d, byte [r12 + 1]	       646	deflate.c	FUNCTION_9	DO_1	IF_5
0x400010d	        0x44384201	                 cmp byte [rdx + 1], r8b	       646	deflate.c	FUNCTION_9	DO_1	IF_5
0x4000111	            0x75bc	                           jne 0x40000cf	       646	deflate.c	FUNCTION_9	DO_1	IF_5
0x4000113	        0x4983c402	                              add r12, 2	       655	deflate.c	FUNCTION_9	DO_1
0x4000117	        0x4883c202	                              add rdx, 2	       655	deflate.c	FUNCTION_9	DO_1
0x400011b	        0x8944240c	              mov dword [rsp + 0xc], eax	       655	deflate.c	FUNCTION_9	DO_1
0x400011f	        0x4c8b0424	                     mov r8, qword [rsp]	       655	deflate.c	FUNCTION_9	DO_1
0x4000123	            0xeb78	                           jmp 0x400019d	       655	deflate.c	FUNCTION_9	DO_1
0x4000125	         0xfb64202	               movzx eax, byte [rdx + 2]	       662	deflate.c	FUNCTION_9	DO_1	DO_3
0x4000129	      0x4138442402	                  cmp byte [r12 + 2], al	       662	deflate.c	FUNCTION_9	DO_1	DO_3
0x400012e	     0xf8519010000	                           jne 0x400024d	       662	deflate.c	FUNCTION_9	DO_1	DO_3
0x4000134	         0xfb64203	               movzx eax, byte [rdx + 3]	       662	deflate.c	FUNCTION_9	DO_1	DO_3
0x4000138	      0x4138442403	                  cmp byte [r12 + 3], al	       662	deflate.c	FUNCTION_9	DO_1	DO_3
0x400013d	     0xf85fd000000	                           jne 0x4000240	       662	deflate.c	FUNCTION_9	DO_1	DO_3
0x4000143	         0xfb64204	               movzx eax, byte [rdx + 4]	       663	deflate.c	FUNCTION_9	DO_1
0x4000147	      0x4138442404	                  cmp byte [r12 + 4], al	       663	deflate.c	FUNCTION_9	DO_1
0x400014c	     0xf85e1000000	                           jne 0x4000233	       663	deflate.c	FUNCTION_9	DO_1
0x4000152	         0xfb64205	               movzx eax, byte [rdx + 5]	       663	deflate.c	FUNCTION_9	DO_1
0x4000156	      0x4138442405	                  cmp byte [r12 + 5], al	       663	deflate.c	FUNCTION_9	DO_1
0x400015b	     0xf85c8000000	                           jne 0x4000229	       663	deflate.c	FUNCTION_9	DO_1
0x4000161	         0xfb64206	               movzx eax, byte [rdx + 6]	       664	deflate.c	FUNCTION_9	DO_1
0x4000165	      0x4138442406	                  cmp byte [r12 + 6], al	       664	deflate.c	FUNCTION_9	DO_1
0x400016a	     0xf85af000000	                           jne 0x400021f	       664	deflate.c	FUNCTION_9	DO_1
0x4000170	         0xfb64207	               movzx eax, byte [rdx + 7]	       664	deflate.c	FUNCTION_9	DO_1
0x4000174	      0x4138442407	                  cmp byte [r12 + 7], al	       664	deflate.c	FUNCTION_9	DO_1
0x4000179	     0xf8596000000	                           jne 0x4000215	       664	deflate.c	FUNCTION_9	DO_1
0x400017f	        0x4883c208	                              add rdx, 8	       664	deflate.c	FUNCTION_9	DO_1
0x4000183	        0x4983c408	                              add r12, 8	       664	deflate.c	FUNCTION_9	DO_1
0x4000187	           0xfb602	                   movzx eax, byte [rdx]	       665	deflate.c	FUNCTION_9	DO_1
0x400018a	        0x41380424	                      cmp byte [r12], al	       665	deflate.c	FUNCTION_9	DO_1
0x400018e	     0xf85c6000000	                           jne 0x400025a	       665	deflate.c	FUNCTION_9	DO_1
0x4000194	          0x4d39e0	                             cmp r8, r12	       665	deflate.c	FUNCTION_9	DO_1
0x4000197	     0xf86bd000000	                           jbe 0x400025a	       665	deflate.c	FUNCTION_9	DO_1
0x400019d	         0xfb64201	               movzx eax, byte [rdx + 1]	       666	deflate.c	FUNCTION_9	DO_1
0x40001a1	      0x4138442401	                  cmp byte [r12 + 1], al	       666	deflate.c	FUNCTION_9	DO_1
0x40001a6	     0xf8479ffffff	                            je 0x4000125	       666	deflate.c	FUNCTION_9	DO_1
0x40001ac	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       666	deflate.c	FUNCTION_9	DO_1
0x40001b0	        0x4983c401	                              add r12, 1	       666	deflate.c	FUNCTION_9	DO_1
0x40001b4	        0x4c8b0424	                     mov r8, qword [rsp]	       670	deflate.c	FUNCTION_9	DO_1
0x40001b8	          0x4c89c2	                             mov rdx, r8	       670	deflate.c	FUNCTION_9	DO_1
0x40001bb	          0x4c29e2	                            sub rdx, r12	       670	deflate.c	FUNCTION_9	DO_1
0x40001be	    0x41bc02010000	                         mov r12d, 0x102	       670	deflate.c	FUNCTION_9	DO_1
0x40001c4	          0x4129d4	                           sub r12d, edx	       670	deflate.c	FUNCTION_9	DO_1
0x40001c7	          0x4489e2	                           mov edx, r12d	       670	deflate.c	FUNCTION_9	DO_1
0x40001ca	    0x4d8da0fefeff	                   lea r12, [r8 - 0x102]	       671	deflate.c	FUNCTION_9	DO_1
0x40001d1	            0x39d0	                            cmp eax, edx	       675	deflate.c	FUNCTION_9	DO_1	IF_6
0x40001d3	     0xf8df6feffff	                           jge 0x40000cf	       675	deflate.c	FUNCTION_9	DO_1	IF_6
0x40001d9	          0x4139d7	                           cmp r15d, edx	       678	deflate.c	FUNCTION_9	DO_1	IF_6	IF_7
0x40001dc	    0x89b798000000	             mov dword [rdi + 0x98], esi	       676	deflate.c	FUNCTION_9	DO_1	IF_6
0x40001e2	            0x7e19	                           jle 0x40001fd	       678	deflate.c	FUNCTION_9	DO_1	IF_6	IF_7
0x40001e4	          0x4863c2	                         movsxd rax, edx	       682	deflate.c	FUNCTION_9	DO_1	IF_6
0x40001e7	    0x450fb66c04ff	        movzx r13d, byte [r12 + rax - 1]	       682	deflate.c	FUNCTION_9	DO_1	IF_6
0x40001ed	    0x450fb69c00fe	     movzx r11d, byte [r8 + rax - 0x102]	       683	deflate.c	FUNCTION_9	DO_1	IF_6
0x40001f6	            0x89d0	                            mov eax, edx	       683	deflate.c	FUNCTION_9	DO_1	IF_6
0x40001f8	      0xe9d2feffff	                           jmp 0x40000cf	       683	deflate.c	FUNCTION_9	DO_1	IF_6
0x40001fd	            0x89d0	                            mov eax, edx	       670	deflate.c	FUNCTION_9	DO_1
0x40001ff	          0x4439f0	                           cmp eax, r14d	       670	deflate.c	FUNCTION_9	DO_1
0x4000202	        0x410f47c6	                         cmova eax, r14d	       670	deflate.c	FUNCTION_9	DO_1
0x4000206	        0x4883c410	                           add rsp, 0x10	       691	deflate.c	FUNCTION_9
0x400020a	              0x5b	                                 pop rbx	       691	deflate.c	FUNCTION_9
0x400020b	              0x5d	                                 pop rbp	       691	deflate.c	FUNCTION_9
0x400020c	            0x415c	                                 pop r12	       691	deflate.c	FUNCTION_9
0x400020e	            0x415d	                                 pop r13	       691	deflate.c	FUNCTION_9
0x4000210	            0x415e	                                 pop r14	       691	deflate.c	FUNCTION_9
0x4000212	            0x415f	                                 pop r15	       691	deflate.c	FUNCTION_9
0x4000214	              0xc3	                                     ret	       691	deflate.c	FUNCTION_9
0x4000215	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       691	deflate.c	FUNCTION_9
0x4000219	        0x4983c407	                              add r12, 7	       664	deflate.c	FUNCTION_9	DO_1
0x400021d	            0xeb95	                           jmp 0x40001b4	       664	deflate.c	FUNCTION_9	DO_1
0x400021f	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       664	deflate.c	FUNCTION_9	DO_1
0x4000223	        0x4983c406	                              add r12, 6	       664	deflate.c	FUNCTION_9	DO_1
0x4000227	            0xeb8b	                           jmp 0x40001b4	       664	deflate.c	FUNCTION_9	DO_1
0x4000229	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       664	deflate.c	FUNCTION_9	DO_1
0x400022d	        0x4983c405	                              add r12, 5	       663	deflate.c	FUNCTION_9	DO_1
0x4000231	            0xeb81	                           jmp 0x40001b4	       663	deflate.c	FUNCTION_9	DO_1
0x4000233	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       663	deflate.c	FUNCTION_9	DO_1
0x4000237	        0x4983c404	                              add r12, 4	       663	deflate.c	FUNCTION_9	DO_1
0x400023b	      0xe974ffffff	                           jmp 0x40001b4	       663	deflate.c	FUNCTION_9	DO_1
0x4000240	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       663	deflate.c	FUNCTION_9	DO_1
0x4000244	        0x4983c403	                              add r12, 3	       662	deflate.c	FUNCTION_9	DO_1	DO_3
0x4000248	      0xe967ffffff	                           jmp 0x40001b4	       662	deflate.c	FUNCTION_9	DO_1	DO_3
0x400024d	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       662	deflate.c	FUNCTION_9	DO_1	DO_3
0x4000251	        0x4983c402	                              add r12, 2	       662	deflate.c	FUNCTION_9	DO_1	DO_3
0x4000255	      0xe95affffff	                           jmp 0x40001b4	       662	deflate.c	FUNCTION_9	DO_1	DO_3
0x400025a	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       662	deflate.c	FUNCTION_9	DO_1	DO_3
0x400025e	      0xe951ffffff	                           jmp 0x40001b4	       662	deflate.c	FUNCTION_9	DO_1	DO_3
deflate_fast	functions,0:WHILE,0:FOR,1:CALL,6:SWITCH,0:ELSE,2:IF,9:DO,1	184
0x4000bb0	            0x4154	                                push r12	       916	deflate.c	FUNCTION_12
0x4000bb2	          0x4531e4	                          xor r12d, r12d	       917	deflate.c	FUNCTION_12
0x4000bb5	              0x55	                                push rbp	       916	deflate.c	FUNCTION_12
0x4000bb6	            0x89f5	                            mov ebp, esi	       916	deflate.c	FUNCTION_12
0x4000bb8	              0x53	                                push rbx	       916	deflate.c	FUNCTION_12
0x4000bb9	          0x4889fb	                            mov rbx, rdi	       916	deflate.c	FUNCTION_12
0x4000bbc	    0x81bb9c000000	          cmp dword [rbx + 0x9c], 0x105 	       926	deflate.c	FUNCTION_12	FOR_1	IF_1
0x4000bc6	     0xf860c020000	                           jbe 0x4000dd8	       926	deflate.c	FUNCTION_12	FOR_1	IF_1
0x4000bcc	    0x8b9394000000	            mov edx, dword [rbx + 0x94] 	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000bd2	        0x488b4b48	            mov rcx, qword [rbx + 0x48] 	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000bd6	          0x8d4202	                      lea eax, [rdx + 2]	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000bd9	          0x235340	             and edx, dword [rbx + 0x40]	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000bdc	         0xfb63401	             movzx esi, byte [rcx + rax]	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000be0	          0x8b4b78	            mov ecx, dword [rbx + 0x78] 	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000be3	          0x8b4368	            mov eax, dword [rbx + 0x68] 	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000be6	            0xd3e0	                             shl eax, cl	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000be8	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000bec	            0x31f0	                            xor eax, esi	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000bee	          0x234374	             and eax, dword [rbx + 0x74]	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000bf1	          0x894368	             mov dword [rbx + 0x68], eax	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000bf4	      0x440fb72441	          movzx r12d, word [rcx + rax*2]	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000bf9	        0x488b4b58	            mov rcx, qword [rbx + 0x58] 	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000bfd	      0x6644892451	            mov word [rcx + rdx*2], r12w	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000c02	          0x8b5368	            mov edx, dword [rbx + 0x68] 	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000c05	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000c09	    0x8b8b94000000	            mov ecx, dword [rbx + 0x94] 	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000c0f	        0x66890c50	              mov word [rax + rdx*2], cx	       938	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000c13	          0x4585e4	                         test r12d, r12d	       944	deflate.c	FUNCTION_12	FOR_1	IF_5	CALL_2
0x4000c16	     0xf8539010000	                           jne 0x4000d55	       944	deflate.c	FUNCTION_12	FOR_1	IF_5	CALL_2
0x4000c1c	    0x8bb394000000	            mov esi, dword [rbx + 0x94] 	       944	deflate.c	FUNCTION_12	FOR_1	IF_5	CALL_2
0x4000c22	    0x8b8388000000	            mov eax, dword [rbx + 0x88] 	       944	deflate.c	FUNCTION_12	FOR_1	IF_5	CALL_2
0x4000c28	          0x83f802	                              cmp eax, 2	       954	deflate.c	FUNCTION_12	FOR_1	IF_7
0x4000c2b	     0xf8609010000	                           jbe 0x4000d3a	       954	deflate.c	FUNCTION_12	FOR_1	IF_7
0x4000c31	    0x2bb398000000	             sub esi, dword [rbx + 0x98]	       957	deflate.c	FUNCTION_12	FOR_1	IF_7	CALL_4
0x4000c37	          0x8d50fd	                      lea edx, [rax - 3]	       957	deflate.c	FUNCTION_12	FOR_1	IF_7	CALL_4
0x4000c3a	          0x4889df	                            mov rdi, rbx	       957	deflate.c	FUNCTION_12	FOR_1	IF_7	CALL_4
0x4000c3d	      0xe800000000	                          call 0x4000c42	       957	deflate.c	FUNCTION_12	FOR_1	IF_7	CALL_4
0x4000c42	    0x8b9388000000	            mov edx, dword [rbx + 0x88] 	       960	deflate.c	FUNCTION_12	FOR_1	IF_7
0x4000c48	    0x8b8b9c000000	            mov ecx, dword [rbx + 0x9c] 	       960	deflate.c	FUNCTION_12	FOR_1	IF_7
0x4000c4e	            0x29d1	                            sub ecx, edx	       960	deflate.c	FUNCTION_12	FOR_1	IF_7
0x4000c50	    0x3b93a8000000	            cmp edx, dword [rbx + 0xa8] 	       965	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8
0x4000c56	    0x898b9c000000	             mov dword [rbx + 0x9c], ecx	       960	deflate.c	FUNCTION_12	FOR_1	IF_7
0x4000c5c	     0xf872f010000	                            ja 0x4000d91	       965	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8
0x4000c62	          0x83f902	                              cmp ecx, 2	       965	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8
0x4000c65	     0xf8626010000	                           jbe 0x4000d91	       965	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8
0x4000c6b	          0x83ea01	                              sub edx, 1	       967	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8
0x4000c6e	    0x899388000000	             mov dword [rbx + 0x88], edx	       967	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8
0x4000c74	    0x8b9394000000	            mov edx, dword [rbx + 0x94] 	       969	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000c7a	        0x488b4b48	            mov rcx, qword [rbx + 0x48] 	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000c7e	          0x8d7201	                      lea esi, [rdx + 1]	       969	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000c81	          0x83c203	                              add edx, 3	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000c84	    0x89b394000000	             mov dword [rbx + 0x94], esi	       969	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000c8a	         0xfb63c11	             movzx edi, byte [rcx + rdx]	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000c8e	          0x8b4b78	            mov ecx, dword [rbx + 0x78] 	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000c91	          0x8b5368	            mov edx, dword [rbx + 0x68] 	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000c94	          0x237340	             and esi, dword [rbx + 0x40]	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000c97	            0xd3e2	                             shl edx, cl	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000c99	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000c9d	            0x31fa	                            xor edx, edi	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000c9f	          0x235374	             and edx, dword [rbx + 0x74]	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000ca2	          0x895368	             mov dword [rbx + 0x68], edx	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000ca5	      0x440fb72451	          movzx r12d, word [rcx + rdx*2]	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000caa	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000cae	      0x6644892472	            mov word [rdx + rsi*2], r12w	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000cb3	          0x8b4b68	            mov ecx, dword [rbx + 0x68] 	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000cb6	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000cba	    0x8bb394000000	            mov esi, dword [rbx + 0x94] 	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000cc0	        0x6689344a	              mov word [rdx + rcx*2], si	       970	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000cc4	    0x8bbb88000000	            mov edi, dword [rbx + 0x88] 	       974	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000cca	          0x8d57ff	                      lea edx, [rdi - 1]	       974	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000ccd	            0x85d2	                           test edx, edx	       974	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000ccf	    0x899388000000	             mov dword [rbx + 0x88], edx	       974	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000cd5	            0x759d	                           jne 0x4000c74	       974	deflate.c	FUNCTION_12	FOR_1	IF_7	IF_8	DO_1
0x4000cd7	    0x838394000000	               add dword [rbx + 0x94], 1	       993	deflate.c	FUNCTION_12	FOR_1	ELSE_2
0x4000cde	            0x85c0	                           test eax, eax	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000ce0	     0xf84d6feffff	                            je 0x4000bbc	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000ce6	    0x8b9394000000	            mov edx, dword [rbx + 0x94] 	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000cec	            0x31f6	                            xor esi, esi	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000cee	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000cf5	          0x4829c2	                            sub rdx, rax	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000cf8	          0x4885c0	                           test rax, rax	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000cfb	            0x7809	                            js 0x4000d06	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000cfd	            0x89c0	                            mov eax, eax	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000cff	        0x48034348	             add rax, qword [rbx + 0x48]	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000d03	          0x4889c6	                            mov rsi, rax	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000d06	            0x31c9	                            xor ecx, ecx	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000d08	          0x4889df	                            mov rdi, rbx	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000d0b	      0xe800000000	                          call 0x4000d10	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000d10	    0x8b8394000000	            mov eax, dword [rbx + 0x94] 	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000d16	          0x488b3b	                    mov rdi, qword [rbx]	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000d19	    0x488983800000	             mov qword [rbx + 0x80], rax	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000d20	      0xe80bfaffff	                  call sym.flush_pending	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000d25	          0x488b03	                    mov rax, qword [rbx]	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000d28	      0x4883782000	               cmp qword [rax + 0x20], 0	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000d2d	     0xf8589feffff	                           jne 0x4000bbc	       995	deflate.c	FUNCTION_12	FOR_1	IF_9
0x4000d33	            0x31c0	                            xor eax, eax	       997	deflate.c	FUNCTION_12
0x4000d35	              0x5b	                                 pop rbx	       999	deflate.c	FUNCTION_12
0x4000d36	              0x5d	                                 pop rbp	       999	deflate.c	FUNCTION_12
0x4000d37	            0x415c	                                 pop r12	       999	deflate.c	FUNCTION_12
0x4000d39	              0xc3	                                     ret	       999	deflate.c	FUNCTION_12
0x4000d3a	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       991	deflate.c	FUNCTION_12	FOR_1	ELSE_2	CALL_6
0x4000d3e	          0x4889df	                            mov rdi, rbx	       991	deflate.c	FUNCTION_12	FOR_1	ELSE_2	CALL_6
0x4000d41	         0xfb61430	             movzx edx, byte [rax + rsi]	       991	deflate.c	FUNCTION_12	FOR_1	ELSE_2	CALL_6
0x4000d45	            0x31f6	                            xor esi, esi	       991	deflate.c	FUNCTION_12	FOR_1	ELSE_2	CALL_6
0x4000d47	      0xe800000000	                          call 0x4000d4c	       991	deflate.c	FUNCTION_12	FOR_1	ELSE_2	CALL_6
0x4000d4c	    0x83ab9c000000	               sub dword [rbx + 0x9c], 1	       992	deflate.c	FUNCTION_12	FOR_1	ELSE_2
0x4000d53	            0xeb82	                           jmp 0x4000cd7	       992	deflate.c	FUNCTION_12	FOR_1	ELSE_2
0x4000d55	    0x8bb394000000	            mov esi, dword [rbx + 0x94] 	       944	deflate.c	FUNCTION_12	FOR_1	IF_5	CALL_2
0x4000d5b	          0x8b4338	            mov eax, dword [rbx + 0x38] 	       944	deflate.c	FUNCTION_12	FOR_1	IF_5	CALL_2
0x4000d5e	      0x2d06010000	                          sub eax, 0x106	       944	deflate.c	FUNCTION_12	FOR_1	IF_5	CALL_2
0x4000d63	            0x89f2	                            mov edx, esi	       944	deflate.c	FUNCTION_12	FOR_1	IF_5	CALL_2
0x4000d65	          0x4429e2	                           sub edx, r12d	       944	deflate.c	FUNCTION_12	FOR_1	IF_5	CALL_2
0x4000d68	            0x39c2	                            cmp edx, eax	       944	deflate.c	FUNCTION_12	FOR_1	IF_5	CALL_2
0x4000d6a	            0x7761	                            ja 0x4000dcd	       944	deflate.c	FUNCTION_12	FOR_1	IF_5	CALL_2
0x4000d6c	    0x83bbb0000000	               cmp dword [rbx + 0xb0], 2	       949	deflate.c	FUNCTION_12	FOR_1	IF_5	IF_6
0x4000d73	            0x7458	                            je 0x4000dcd	       949	deflate.c	FUNCTION_12	FOR_1	IF_5	IF_6
0x4000d75	          0x4489e6	                           mov esi, r12d	       950	deflate.c	FUNCTION_12	FOR_1	IF_5	IF_6	CALL_3
0x4000d78	          0x4889df	                            mov rdi, rbx	       950	deflate.c	FUNCTION_12	FOR_1	IF_5	IF_6	CALL_3
0x4000d7b	      0xe8c0f2ffff	                  call sym.longest_match	       950	deflate.c	FUNCTION_12	FOR_1	IF_5	IF_6	CALL_3
0x4000d80	    0x8bb394000000	            mov esi, dword [rbx + 0x94] 	       950	deflate.c	FUNCTION_12	FOR_1	IF_5	IF_6	CALL_3
0x4000d86	    0x898388000000	             mov dword [rbx + 0x88], eax	       950	deflate.c	FUNCTION_12	FOR_1	IF_5	IF_6	CALL_3
0x4000d8c	      0xe997feffff	                           jmp 0x4000c28	       950	deflate.c	FUNCTION_12	FOR_1	IF_5	IF_6	CALL_3
0x4000d91	     0x39394000000	             add edx, dword [rbx + 0x94]	       977	deflate.c	FUNCTION_12	FOR_1	IF_7	ELSE_1
0x4000d97	        0x488b4b48	            mov rcx, qword [rbx + 0x48] 	       979	deflate.c	FUNCTION_12	FOR_1	IF_7	ELSE_1
0x4000d9b	    0xc78388000000	               mov dword [rbx + 0x88], 0	       978	deflate.c	FUNCTION_12	FOR_1	IF_7	ELSE_1
0x4000da5	            0x89d6	                            mov esi, edx	       979	deflate.c	FUNCTION_12	FOR_1	IF_7	ELSE_1
0x4000da7	    0x899394000000	             mov dword [rbx + 0x94], edx	       977	deflate.c	FUNCTION_12	FOR_1	IF_7	ELSE_1
0x4000dad	          0x83c201	                              add edx, 1	       980	deflate.c	FUNCTION_12	FOR_1	IF_7	ELSE_1
0x4000db0	         0xfb63431	             movzx esi, byte [rcx + rsi]	       979	deflate.c	FUNCTION_12	FOR_1	IF_7	ELSE_1
0x4000db4	          0x897368	             mov dword [rbx + 0x68], esi	       979	deflate.c	FUNCTION_12	FOR_1	IF_7	ELSE_1
0x4000db7	         0xfb61411	             movzx edx, byte [rcx + rdx]	       980	deflate.c	FUNCTION_12	FOR_1	IF_7	ELSE_1
0x4000dbb	          0x8b4b78	            mov ecx, dword [rbx + 0x78] 	       980	deflate.c	FUNCTION_12	FOR_1	IF_7	ELSE_1
0x4000dbe	            0xd3e6	                             shl esi, cl	       980	deflate.c	FUNCTION_12	FOR_1	IF_7	ELSE_1
0x4000dc0	            0x31d6	                            xor esi, edx	       980	deflate.c	FUNCTION_12	FOR_1	IF_7	ELSE_1
0x4000dc2	          0x237374	             and esi, dword [rbx + 0x74]	       980	deflate.c	FUNCTION_12	FOR_1	IF_7	ELSE_1
0x4000dc5	          0x897368	             mov dword [rbx + 0x68], esi	       980	deflate.c	FUNCTION_12	FOR_1	IF_7	ELSE_1
0x4000dc8	      0xe911ffffff	                           jmp 0x4000cde	       980	deflate.c	FUNCTION_12	FOR_1	IF_7	ELSE_1
0x4000dcd	    0x8b8388000000	            mov eax, dword [rbx + 0x88] 	       980	deflate.c	FUNCTION_12	FOR_1	IF_7	ELSE_1
0x4000dd3	      0xe950feffff	                           jmp 0x4000c28	       980	deflate.c	FUNCTION_12	FOR_1	IF_7	ELSE_1
0x4000dd8	          0x4889df	                            mov rdi, rbx	       927	deflate.c	FUNCTION_12	FOR_1	IF_1	CALL_1
0x4000ddb	      0xe890f4ffff	                    call sym.fill_window	       927	deflate.c	FUNCTION_12	FOR_1	IF_1	CALL_1
0x4000de0	    0x8b839c000000	            mov eax, dword [rbx + 0x9c] 	       928	deflate.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000de6	      0x3d05010000	                          cmp eax, 0x105	       928	deflate.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000deb	     0xf87dbfdffff	                            ja 0x4000bcc	       928	deflate.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000df1	            0x85ed	                           test ebp, ebp	       928	deflate.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000df3	     0xf843affffff	                            je 0x4000d33	       928	deflate.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000df9	            0x85c0	                           test eax, eax	       931	deflate.c	FUNCTION_12	FOR_1	IF_1	IF_3
0x4000dfb	            0x740e	                            je 0x4000e0b	       931	deflate.c	FUNCTION_12	FOR_1	IF_1	IF_3
0x4000dfd	          0x83f802	                              cmp eax, 2	       937	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000e00	     0xf860dfeffff	                           jbe 0x4000c13	       937	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000e06	      0xe9c1fdffff	                           jmp 0x4000bcc	       937	deflate.c	FUNCTION_12	FOR_1	IF_4
0x4000e0b	    0x8b9394000000	            mov edx, dword [rbx + 0x94] 	       997	deflate.c	FUNCTION_12
0x4000e11	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	       997	deflate.c	FUNCTION_12
0x4000e18	            0x31c9	                            xor ecx, ecx	       997	deflate.c	FUNCTION_12
0x4000e1a	          0x83fd05	                              cmp ebp, 5	       997	deflate.c	FUNCTION_12
0x4000e1d	           0xf94c1	                                 sete cl	       997	deflate.c	FUNCTION_12
0x4000e20	            0x31f6	                            xor esi, esi	       997	deflate.c	FUNCTION_12
0x4000e22	          0x4829c2	                            sub rdx, rax	       997	deflate.c	FUNCTION_12
0x4000e25	          0x4885c0	                           test rax, rax	       997	deflate.c	FUNCTION_12
0x4000e28	            0x7809	                            js 0x4000e33	       997	deflate.c	FUNCTION_12
0x4000e2a	            0x89c0	                            mov eax, eax	       997	deflate.c	FUNCTION_12
0x4000e2c	        0x48034348	             add rax, qword [rbx + 0x48]	       997	deflate.c	FUNCTION_12
0x4000e30	          0x4889c6	                            mov rsi, rax	       997	deflate.c	FUNCTION_12
0x4000e33	          0x4889df	                            mov rdi, rbx	       997	deflate.c	FUNCTION_12
0x4000e36	      0xe800000000	                          call 0x4000e3b	       997	deflate.c	FUNCTION_12
0x4000e3b	    0x8b8394000000	            mov eax, dword [rbx + 0x94] 	       997	deflate.c	FUNCTION_12
0x4000e41	          0x488b3b	                    mov rdi, qword [rbx]	       997	deflate.c	FUNCTION_12
0x4000e44	    0x488983800000	             mov qword [rbx + 0x80], rax	       997	deflate.c	FUNCTION_12
0x4000e4b	      0xe8e0f8ffff	                  call sym.flush_pending	       997	deflate.c	FUNCTION_12
0x4000e50	          0x488b03	                    mov rax, qword [rbx]	       997	deflate.c	FUNCTION_12
0x4000e53	      0x4883782000	               cmp qword [rax + 0x20], 0	       997	deflate.c	FUNCTION_12
0x4000e58	            0x7513	                           jne 0x4000e6d	       997	deflate.c	FUNCTION_12
0x4000e5a	          0x83fd05	                              cmp ebp, 5	       997	deflate.c	FUNCTION_12
0x4000e5d	      0xb802000000	                              mov eax, 2	       997	deflate.c	FUNCTION_12
0x4000e62	     0xf85cbfeffff	                           jne 0x4000d33	       997	deflate.c	FUNCTION_12
0x4000e68	      0xe9c8feffff	                           jmp 0x4000d35	       997	deflate.c	FUNCTION_12
0x4000e6d	            0x31c0	                            xor eax, eax	       998	deflate.c	FUNCTION_12
0x4000e6f	          0x83fd05	                              cmp ebp, 5	       998	deflate.c	FUNCTION_12
0x4000e72	           0xf94c0	                                 sete al	       998	deflate.c	FUNCTION_12
0x4000e75	              0x5b	                                 pop rbx	       999	deflate.c	FUNCTION_12
0x4000e76	        0x8d440001	                lea eax, [rax + rax + 1]	       998	deflate.c	FUNCTION_12
0x4000e7a	              0x5d	                                 pop rbp	       999	deflate.c	FUNCTION_12
0x4000e7b	            0x415c	                                 pop r12	       999	deflate.c	FUNCTION_12
0x4000e7d	              0xc3	                                     ret	       999	deflate.c	FUNCTION_12
zlib_deflateInit2	functions,0:WHILE,0:FOR,0:CALL,4:SWITCH,0:ELSE,0:IF,4:DO,0	102
0x4001180	          0x4885ff	                           test rdi, rdi	       186	deflate.c	FUNCTION_1	IF_1
0x4001183	     0xf8487010000	                            je 0x4001310	       186	deflate.c	FUNCTION_1	IF_1
0x4001189	          0x83feff	             cmp esi, 0xffffffffffffffff	       190	deflate.c	FUNCTION_1	IF_2
0x400118c	      0xb806000000	                              mov eax, 6	       190	deflate.c	FUNCTION_1	IF_2
0x4001191	            0x4155	                                push r13	       175	deflate.c	FUNCTION_1
0x4001193	           0xf44f0	                          cmove esi, eax	       190	deflate.c	FUNCTION_1	IF_2
0x4001196	            0x4154	                                push r12	       175	deflate.c	FUNCTION_1
0x4001198	              0x55	                                push rbp	       175	deflate.c	FUNCTION_1
0x4001199	            0x31ed	                            xor ebp, ebp	       177	deflate.c	FUNCTION_1
0x400119b	            0x85c9	                           test ecx, ecx	       194	deflate.c	FUNCTION_1	IF_3
0x400119d	              0x53	                                push rbx	       175	deflate.c	FUNCTION_1
0x400119e	    0x48c747300000	               mov qword [rdi + 0x30], 0	       188	deflate.c	FUNCTION_1
0x40011a6	            0x89cb	                            mov ebx, ecx	       188	deflate.c	FUNCTION_1
0x40011a8	     0xf884a010000	                            js 0x40012f8	       194	deflate.c	FUNCTION_1	IF_3
0x40011ae	        0x418d40ff	                       lea eax, [r8 - 1]	       198	deflate.c	FUNCTION_1	IF_4
0x40011b2	          0x83f807	                              cmp eax, 7	       198	deflate.c	FUNCTION_1	IF_4
0x40011b5	     0xf8749010000	                            ja 0x4001304	       198	deflate.c	FUNCTION_1	IF_4
0x40011bb	          0x8d43f7	                      lea eax, [rbx - 9]	       198	deflate.c	FUNCTION_1	IF_4
0x40011be	          0x83f806	                              cmp eax, 6	       198	deflate.c	FUNCTION_1	IF_4
0x40011c1	     0xf873d010000	                            ja 0x4001304	       198	deflate.c	FUNCTION_1	IF_4
0x40011c7	          0x83fa08	                              cmp edx, 8	       198	deflate.c	FUNCTION_1	IF_4
0x40011ca	     0xf8534010000	                           jne 0x4001304	       198	deflate.c	FUNCTION_1	IF_4
0x40011d0	          0x83fe09	                              cmp esi, 9	       200	deflate.c	FUNCTION_1	IF_4
0x40011d3	     0xf872b010000	                            ja 0x4001304	       200	deflate.c	FUNCTION_1	IF_4
0x40011d9	        0x4183f902	                              cmp r9d, 2	       200	deflate.c	FUNCTION_1	IF_4
0x40011dd	     0xf8721010000	                            ja 0x4001304	       200	deflate.c	FUNCTION_1	IF_4
0x40011e3	        0x4c8b5740	            mov r10, qword [rdi + 0x40] 	       192	deflate.c	FUNCTION_1
0x40011e7	            0x89d9	                            mov ecx, ebx	       211	deflate.c	FUNCTION_1	CALL_1
0x40011e9	      0xba02000000	                              mov edx, 2	       211	deflate.c	FUNCTION_1	CALL_1
0x40011ee	            0xd3e2	                             shl edx, cl	       211	deflate.c	FUNCTION_1	CALL_1
0x40011f0	    0x41bb01000000	                             mov r11d, 1	       213	deflate.c	FUNCTION_1	CALL_2
0x40011f6	          0x4863d2	                         movsxd rdx, edx	       211	deflate.c	FUNCTION_1	CALL_1
0x40011f9	    0x498d82481700	                 lea rax, [r10 + 0x1748]	       209	deflate.c	FUNCTION_1
0x4001200	    0x498982281700	          mov qword [r10 + 0x1728], rax 	       210	deflate.c	FUNCTION_1
0x4001207	          0x4801d0	                            add rax, rdx	       211	deflate.c	FUNCTION_1	CALL_1
0x400120a	          0x4489da	                           mov edx, r11d	       213	deflate.c	FUNCTION_1	CALL_2
0x400120d	            0xd3e2	                             shl edx, cl	       213	deflate.c	FUNCTION_1	CALL_2
0x400120f	    0x498982301700	          mov qword [r10 + 0x1730], rax 	       212	deflate.c	FUNCTION_1
0x4001216	          0x4863ca	                         movsxd rcx, edx	       213	deflate.c	FUNCTION_1	CALL_2
0x4001219	        0x4c8d2448	                  lea r12, [rax + rcx*2]	       213	deflate.c	FUNCTION_1	CALL_2
0x400121d	        0x418d4807	                       lea ecx, [r8 + 7]	       215	deflate.c	FUNCTION_1	CALL_3
0x4001221	          0x4489d8	                           mov eax, r11d	       216	deflate.c	FUNCTION_1
0x4001224	            0xd3e0	                             shl eax, cl	       216	deflate.c	FUNCTION_1
0x4001226	    0x4d89a2381700	          mov qword [r10 + 0x1738], r12 	       214	deflate.c	FUNCTION_1
0x400122d	          0x4c63e8	                         movsxd r13, eax	       216	deflate.c	FUNCTION_1
0x4001230	        0x4f8d246c	                  lea r12, [r12 + r13*2]	       216	deflate.c	FUNCTION_1
0x4001234	    0x4d89a2401700	          mov qword [r10 + 0x1740], r12 	       216	deflate.c	FUNCTION_1
0x400123b	        0x4c895738	             mov qword [rdi + 0x38], r10	       219	deflate.c	FUNCTION_1
0x400123f	        0x4189426c	             mov dword [r10 + 0x6c], eax	       228	deflate.c	FUNCTION_1
0x4001243	          0x83e801	                              sub eax, 1	       229	deflate.c	FUNCTION_1
0x4001246	        0x41895238	             mov dword [r10 + 0x38], edx	       224	deflate.c	FUNCTION_1
0x400124a	        0x41894274	             mov dword [r10 + 0x74], eax	       229	deflate.c	FUNCTION_1
0x400124e	          0x83ea01	                              sub edx, 1	       225	deflate.c	FUNCTION_1
0x4001251	        0x418d4009	                       lea eax, [r8 + 9]	       230	deflate.c	FUNCTION_1
0x4001255	        0x41895240	             mov dword [r10 + 0x40], edx	       225	deflate.c	FUNCTION_1
0x4001259	      0xbaabaaaaaa	                     mov edx, 0xaaaaaaab	       230	deflate.c	FUNCTION_1
0x400125e	        0x41894a70	             mov dword [r10 + 0x70], ecx	       227	deflate.c	FUNCTION_1
0x4001262	            0xf7e2	                                 mul edx	       230	deflate.c	FUNCTION_1
0x4001264	    0x498b82281700	          mov rax, qword [r10 + 0x1728] 	       232	deflate.c	FUNCTION_1
0x400126b	        0x418d4806	                       lea ecx, [r8 + 6]	       236	deflate.c	FUNCTION_1
0x400126f	          0x49893a	                    mov qword [r10], rdi	       220	deflate.c	FUNCTION_1
0x4001272	        0x41896a2c	             mov dword [r10 + 0x2c], ebp	       222	deflate.c	FUNCTION_1
0x4001276	          0x41d3e3	                            shl r11d, cl	       236	deflate.c	FUNCTION_1
0x4001279	        0x41895a3c	             mov dword [r10 + 0x3c], ebx	       223	deflate.c	FUNCTION_1
0x400127d	    0x4189b2ac0000	             mov dword [r10 + 0xac], esi	       245	deflate.c	FUNCTION_1
0x4001284	        0x49894248	             mov qword [r10 + 0x48], rax	       232	deflate.c	FUNCTION_1
0x4001288	    0x498b82301700	          mov rax, qword [r10 + 0x1730] 	       233	deflate.c	FUNCTION_1
0x400128f	            0xd1ea	                              shr edx, 1	       230	deflate.c	FUNCTION_1
0x4001291	        0x41895278	             mov dword [r10 + 0x78], edx	       230	deflate.c	FUNCTION_1
0x4001295	    0x498b92401700	          mov rdx, qword [r10 + 0x1740] 	       238	deflate.c	FUNCTION_1
0x400129c	    0x45899af01600	         mov dword [r10 + 0x16f0], r11d 	       236	deflate.c	FUNCTION_1
0x40012a3	    0x45898ab00000	             mov dword [r10 + 0xb0], r9d	       246	deflate.c	FUNCTION_1
0x40012aa	        0x49894258	             mov qword [r10 + 0x58], rax	       233	deflate.c	FUNCTION_1
0x40012ae	    0x498b82381700	          mov rax, qword [r10 + 0x1738] 	       234	deflate.c	FUNCTION_1
0x40012b5	        0x49895210	             mov qword [r10 + 0x10], rdx	       239	deflate.c	FUNCTION_1
0x40012b9	      0x41c6423108	                mov byte [r10 + 0x31], 8	       247	deflate.c	FUNCTION_1
0x40012be	        0x49894260	             mov qword [r10 + 0x60], rax	       234	deflate.c	FUNCTION_1
0x40012c2	          0x4963c3	                        movsxd rax, r11d	       240	deflate.c	FUNCTION_1
0x40012c5	          0x41d1eb	                             shr r11d, 1	       242	deflate.c	FUNCTION_1
0x40012c8	    0x488d0c850000	                        lea rcx, [rax*4]	       240	deflate.c	FUNCTION_1
0x40012d0	        0x488d0440	                  lea rax, [rax + rax*2]	       243	deflate.c	FUNCTION_1
0x40012d4	        0x49894a18	             mov qword [r10 + 0x18], rcx	       240	deflate.c	FUNCTION_1
0x40012d8	        0x4a8d0c5a	                  lea rcx, [rdx + r11*2]	       242	deflate.c	FUNCTION_1
0x40012dc	          0x4801d0	                            add rax, rdx	       243	deflate.c	FUNCTION_1
0x40012df	    0x498982e81600	          mov qword [r10 + 0x16e8], rax 	       243	deflate.c	FUNCTION_1
0x40012e6	    0x49898af81600	          mov qword [r10 + 0x16f8], rcx 	       242	deflate.c	FUNCTION_1
0x40012ed	              0x5b	                                 pop rbx	       250	deflate.c	FUNCTION_1
0x40012ee	              0x5d	                                 pop rbp	       250	deflate.c	FUNCTION_1
0x40012ef	            0x415c	                                 pop r12	       250	deflate.c	FUNCTION_1
0x40012f1	            0x415d	                                 pop r13	       250	deflate.c	FUNCTION_1
0x40012f3	      0xe938fdffff	               jmp sym.zlib_deflateReset	       249	deflate.c	FUNCTION_1	CALL_4
0x40012f8	            0xf7db	                                 neg ebx	       196	deflate.c	FUNCTION_1	IF_3
0x40012fa	      0xbd01000000	                              mov ebp, 1	       195	deflate.c	FUNCTION_1	IF_3
0x40012ff	      0xe9aafeffff	                           jmp 0x40011ae	       195	deflate.c	FUNCTION_1	IF_3
0x4001304	              0x5b	                                 pop rbx	       250	deflate.c	FUNCTION_1
0x4001305	      0xb8feffffff	                     mov eax, 0xfffffffe	       250	deflate.c	FUNCTION_1
0x400130a	              0x5d	                                 pop rbp	       250	deflate.c	FUNCTION_1
0x400130b	            0x415c	                                 pop r12	       250	deflate.c	FUNCTION_1
0x400130d	            0x415d	                                 pop r13	       250	deflate.c	FUNCTION_1
0x400130f	              0xc3	                                     ret	       250	deflate.c	FUNCTION_1
0x4001310	      0xb8feffffff	                     mov eax, 0xfffffffe	       250	deflate.c	FUNCTION_1
0x4001315	              0xc3	                                     ret	       250	deflate.c	FUNCTION_1
zlib_deflate_workspacesize	functions,0:WHILE,0:FOR,0:CALL,5:SWITCH,0:ELSE,0:IF,1:DO,0	27
0x4001710	            0x89f8	                            mov eax, edi	      1124	deflate.c	FUNCTION_14
0x4001712	          0xc1f81f	                           sar eax, 0x1f	      1124	deflate.c	FUNCTION_14
0x4001715	            0x31c7	                            xor edi, eax	      1124	deflate.c	FUNCTION_14
0x4001717	            0x29c7	                            sub edi, eax	      1124	deflate.c	FUNCTION_14
0x4001719	          0x8d46ff	                      lea eax, [rsi - 1]	      1129	deflate.c	FUNCTION_14	CALL_1
0x400171c	          0x83f807	                              cmp eax, 7	      1129	deflate.c	FUNCTION_14	CALL_1
0x400171f	            0x7738	                            ja 0x4001759	      1129	deflate.c	FUNCTION_14	CALL_1
0x4001721	          0x8d47f7	                      lea eax, [rdi - 9]	      1129	deflate.c	FUNCTION_14	CALL_1
0x4001724	          0x83f806	                              cmp eax, 6	      1129	deflate.c	FUNCTION_14	CALL_1
0x4001727	            0x7730	                            ja 0x4001759	      1129	deflate.c	FUNCTION_14	CALL_1
0x4001729	          0x8d4e06	                      lea ecx, [rsi + 6]	      1132	deflate.c	FUNCTION_14
0x400172c	      0xb801000000	                              mov eax, 1	      1132	deflate.c	FUNCTION_14
0x4001731	          0x4189c0	                            mov r8d, eax	      1132	deflate.c	FUNCTION_14
0x4001734	            0x89c2	                            mov edx, eax	      1132	deflate.c	FUNCTION_14
0x4001736	          0x41d3e0	                             shl r8d, cl	      1132	deflate.c	FUNCTION_14
0x4001739	            0x89f9	                            mov ecx, edi	      1132	deflate.c	FUNCTION_14
0x400173b	            0xd3e2	                             shl edx, cl	      1132	deflate.c	FUNCTION_14
0x400173d	          0x8d4e07	                      lea ecx, [rsi + 7]	      1132	deflate.c	FUNCTION_14
0x4001740	        0x428d1442	                   lea edx, [rdx + r8*2]	      1132	deflate.c	FUNCTION_14
0x4001744	            0xd3e0	                             shl eax, cl	      1132	deflate.c	FUNCTION_14
0x4001746	            0x89f9	                            mov ecx, edi	      1132	deflate.c	FUNCTION_14
0x4001748	             0x1d0	                            add eax, edx	      1132	deflate.c	FUNCTION_14
0x400174a	      0xba02000000	                              mov edx, 2	      1132	deflate.c	FUNCTION_14
0x400174f	            0xd3e2	                             shl edx, cl	      1132	deflate.c	FUNCTION_14
0x4001751	    0x8d8442481700	         lea eax, [rdx + rax*2 + 0x1748]	      1132	deflate.c	FUNCTION_14
0x4001758	              0xc3	                                     ret	      1137	deflate.c	FUNCTION_14
0x4001759	             0xf0b	                                     ud2	      1137	deflate.c	FUNCTION_14
deflate_slow	functions,0:WHILE,0:FOR,1:CALL,9:SWITCH,0:ELSE,2:IF,14:DO,1	253
0x40007a0	            0x4155	                                push r13	      1010	deflate.c	FUNCTION_13
0x40007a2	            0x4154	                                push r12	      1010	deflate.c	FUNCTION_13
0x40007a4	          0x4531ed	                          xor r13d, r13d	      1011	deflate.c	FUNCTION_13
0x40007a7	              0x55	                                push rbp	      1010	deflate.c	FUNCTION_13
0x40007a8	              0x53	                                push rbx	      1010	deflate.c	FUNCTION_13
0x40007a9	            0x89f5	                            mov ebp, esi	      1010	deflate.c	FUNCTION_13
0x40007ab	    0x8b879c000000	            mov eax, dword [rdi + 0x9c] 	      1010	deflate.c	FUNCTION_13
0x40007b1	          0x4889fb	                            mov rbx, rdi	      1010	deflate.c	FUNCTION_13
0x40007b4	      0x3d05010000	                          cmp eax, 0x105	      1021	deflate.c	FUNCTION_13	FOR_1	IF_1
0x40007b9	     0xf8608010000	                           jbe 0x40008c7	      1021	deflate.c	FUNCTION_13	FOR_1	IF_1
0x40007bf	    0x8b9394000000	            mov edx, dword [rbx + 0x94] 	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40007c5	        0x488b4b48	            mov rcx, qword [rbx + 0x48] 	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40007c9	          0x8d4202	                      lea eax, [rdx + 2]	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40007cc	          0x235340	             and edx, dword [rbx + 0x40]	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40007cf	         0xfb63401	             movzx esi, byte [rcx + rax]	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40007d3	          0x8b4b78	            mov ecx, dword [rbx + 0x78] 	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40007d6	          0x8b4368	            mov eax, dword [rbx + 0x68] 	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40007d9	            0xd3e0	                             shl eax, cl	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40007db	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40007df	            0x31f0	                            xor eax, esi	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40007e1	          0x234374	             and eax, dword [rbx + 0x74]	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40007e4	          0x894368	             mov dword [rbx + 0x68], eax	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40007e7	      0x440fb72c41	          movzx r13d, word [rcx + rax*2]	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40007ec	        0x488b4b58	            mov rcx, qword [rbx + 0x58] 	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40007f0	      0x6644892c51	            mov word [rcx + rdx*2], r13w	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40007f5	          0x8b5368	            mov edx, dword [rbx + 0x68] 	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40007f8	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40007fc	    0x8b8b94000000	            mov ecx, dword [rbx + 0x94] 	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x4000802	        0x66890c50	              mov word [rax + rdx*2], cx	      1033	deflate.c	FUNCTION_13	FOR_1	IF_4
0x4000806	    0x8b9388000000	            mov edx, dword [rbx + 0x88] 	      1038	deflate.c	FUNCTION_13	FOR_1
0x400080c	    0x8b8398000000	            mov eax, dword [rbx + 0x98] 	      1038	deflate.c	FUNCTION_13	FOR_1
0x4000812	          0x4585ed	                         test r13d, r13d	      1041	deflate.c	FUNCTION_13	FOR_1	IF_5
0x4000815	    0xc78388000000	               mov dword [rbx + 0x88], 2	      1039	deflate.c	FUNCTION_13	FOR_1
0x400081f	    0x8993a0000000	             mov dword [rbx + 0xa0], edx	      1038	deflate.c	FUNCTION_13	FOR_1
0x4000825	    0x89838c000000	             mov dword [rbx + 0x8c], eax	      1038	deflate.c	FUNCTION_13	FOR_1
0x400082b	            0x744c	                            je 0x4000879	      1041	deflate.c	FUNCTION_13	FOR_1	IF_5
0x400082d	    0x3b93a8000000	            cmp edx, dword [rbx + 0xa8] 	      1041	deflate.c	FUNCTION_13	FOR_1	IF_5
0x4000833	    0x8b8b94000000	            mov ecx, dword [rbx + 0x94] 	      1042	deflate.c	FUNCTION_13	FOR_1	IF_5	CALL_2
0x4000839	            0x7344	                           jae 0x400087f	      1041	deflate.c	FUNCTION_13	FOR_1	IF_5
0x400083b	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      1041	deflate.c	FUNCTION_13	FOR_1	IF_5
0x400083e	            0x89ce	                            mov esi, ecx	      1041	deflate.c	FUNCTION_13	FOR_1	IF_5
0x4000840	          0x4429ee	                           sub esi, r13d	      1041	deflate.c	FUNCTION_13	FOR_1	IF_5
0x4000843	      0x2d06010000	                          sub eax, 0x106	      1041	deflate.c	FUNCTION_13	FOR_1	IF_5
0x4000848	            0x39c6	                            cmp esi, eax	      1041	deflate.c	FUNCTION_13	FOR_1	IF_5
0x400084a	            0x7733	                            ja 0x400087f	      1041	deflate.c	FUNCTION_13	FOR_1	IF_5
0x400084c	    0x83bbb0000000	               cmp dword [rbx + 0xb0], 2	      1047	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_6
0x4000853	     0xf8470020000	                            je 0x4000ac9	      1047	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_6
0x4000859	          0x4489ee	                           mov esi, r13d	      1048	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_6	CALL_3
0x400085c	          0x4889df	                            mov rdi, rbx	      1048	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_6	CALL_3
0x400085f	      0xe8dcf7ffff	                  call sym.longest_match	      1048	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_6	CALL_3
0x4000864	          0x83f805	                              cmp eax, 5	      1052	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
0x4000867	    0x898388000000	             mov dword [rbx + 0x88], eax	      1048	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_6	CALL_3
0x400086d	     0xf8639020000	                           jbe 0x4000aac	      1052	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
0x4000873	    0x8b93a0000000	            mov edx, dword [rbx + 0xa0] 	      1052	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
0x4000879	    0x8b8b94000000	            mov ecx, dword [rbx + 0x94] 	      1052	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
0x400087f	          0x83fa02	                              cmp edx, 2	      1065	deflate.c	FUNCTION_13	FOR_1	IF_8
0x4000882	            0x760c	                           jbe 0x4000890	      1065	deflate.c	FUNCTION_13	FOR_1	IF_8
0x4000884	    0x399388000000	            cmp dword [rbx + 0x88], edx 	      1065	deflate.c	FUNCTION_13	FOR_1	IF_8
0x400088a	     0xf86f3000000	                           jbe 0x4000983	      1065	deflate.c	FUNCTION_13	FOR_1	IF_8
0x4000890	    0x8b9390000000	            mov edx, dword [rbx + 0x90] 	      1092	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11
0x4000896	            0x85d2	                           test edx, edx	      1092	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11
0x4000898	            0x7564	                           jne 0x40008fe	      1092	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11
0x400089a	    0x8b839c000000	            mov eax, dword [rbx + 0x9c] 	      1110	deflate.c	FUNCTION_13	FOR_1	ELSE_2
0x40008a0	          0x83c101	                              add ecx, 1	      1109	deflate.c	FUNCTION_13	FOR_1	ELSE_2
0x40008a3	    0xc78390000000	               mov dword [rbx + 0x90], 1	      1108	deflate.c	FUNCTION_13	FOR_1	ELSE_2
0x40008ad	    0x898b94000000	             mov dword [rbx + 0x94], ecx	      1109	deflate.c	FUNCTION_13	FOR_1	ELSE_2
0x40008b3	          0x83e801	                              sub eax, 1	      1110	deflate.c	FUNCTION_13	FOR_1	ELSE_2
0x40008b6	      0x3d05010000	                          cmp eax, 0x105	      1021	deflate.c	FUNCTION_13	FOR_1	IF_1
0x40008bb	    0x89839c000000	             mov dword [rbx + 0x9c], eax	      1110	deflate.c	FUNCTION_13	FOR_1	ELSE_2
0x40008c1	     0xf87f8feffff	                            ja 0x40007bf	      1021	deflate.c	FUNCTION_13	FOR_1	IF_1
0x40008c7	          0x4889df	                            mov rdi, rbx	      1022	deflate.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x40008ca	      0xe8a1f9ffff	                    call sym.fill_window	      1022	deflate.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x40008cf	    0x8b839c000000	            mov eax, dword [rbx + 0x9c] 	      1023	deflate.c	FUNCTION_13	FOR_1	IF_1	IF_2
0x40008d5	      0x3d05010000	                          cmp eax, 0x105	      1023	deflate.c	FUNCTION_13	FOR_1	IF_1	IF_2
0x40008da	     0xf87dffeffff	                            ja 0x40007bf	      1023	deflate.c	FUNCTION_13	FOR_1	IF_1	IF_2
0x40008e0	            0x85ed	                           test ebp, ebp	      1023	deflate.c	FUNCTION_13	FOR_1	IF_1	IF_2
0x40008e2	     0xf8492000000	                            je 0x400097a	      1023	deflate.c	FUNCTION_13	FOR_1	IF_1	IF_2
0x40008e8	            0x85c0	                           test eax, eax	      1026	deflate.c	FUNCTION_13	FOR_1	IF_1	IF_3
0x40008ea	     0xf84e4010000	                            je 0x4000ad4	      1026	deflate.c	FUNCTION_13	FOR_1	IF_1	IF_3
0x40008f0	          0x83f802	                              cmp eax, 2	      1032	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40008f3	     0xf860dffffff	                           jbe 0x4000806	      1032	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40008f9	      0xe9c1feffff	                           jmp 0x40007bf	      1032	deflate.c	FUNCTION_13	FOR_1	IF_4
0x40008fe	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      1098	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12	CALL_6
0x4000902	          0x8d41ff	                      lea eax, [rcx - 1]	      1098	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12	CALL_6
0x4000905	            0x31f6	                            xor esi, esi	      1098	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12	CALL_6
0x4000907	          0x4889df	                            mov rdi, rbx	      1098	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12	CALL_6
0x400090a	         0xfb61402	             movzx edx, byte [rdx + rax]	      1098	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12	CALL_6
0x400090e	      0xe800000000	                          call 0x4000913	      1098	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12	CALL_6
0x4000913	            0x85c0	                           test eax, eax	      1098	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12	CALL_6
0x4000915	            0x743f	                            je 0x4000956	      1098	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12	CALL_6
0x4000917	    0x8b9394000000	            mov edx, dword [rbx + 0x94] 	      1099	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12
0x400091d	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	      1099	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12
0x4000924	            0x31f6	                            xor esi, esi	      1099	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12
0x4000926	          0x4829c2	                            sub rdx, rax	      1099	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12
0x4000929	          0x4885c0	                           test rax, rax	      1099	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12
0x400092c	            0x7809	                            js 0x4000937	      1099	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12
0x400092e	            0x89c0	                            mov eax, eax	      1099	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12
0x4000930	        0x48034348	             add rax, qword [rbx + 0x48]	      1099	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12
0x4000934	          0x4889c6	                            mov rsi, rax	      1099	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12
0x4000937	          0x4889df	                            mov rdi, rbx	      1099	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12
0x400093a	            0x31c9	                            xor ecx, ecx	      1099	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12
0x400093c	      0xe800000000	                          call 0x4000941	      1099	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12
0x4000941	    0x8b8394000000	            mov eax, dword [rbx + 0x94] 	      1099	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12
0x4000947	          0x488b3b	                    mov rdi, qword [rbx]	      1099	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12
0x400094a	    0x488983800000	             mov qword [rbx + 0x80], rax	      1099	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12
0x4000951	      0xe8dafdffff	                  call sym.flush_pending	      1099	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_12
0x4000956	    0x8b839c000000	            mov eax, dword [rbx + 0x9c] 	      1102	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11
0x400095c	          0x488b13	                    mov rdx, qword [rbx]	      1103	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_13
0x400095f	    0x838394000000	               add dword [rbx + 0x94], 1	      1101	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11
0x4000966	          0x83e801	                              sub eax, 1	      1102	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11
0x4000969	    0x89839c000000	             mov dword [rbx + 0x9c], eax	      1102	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11
0x400096f	      0x48837a2000	               cmp qword [rdx + 0x20], 0	      1103	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_13
0x4000974	     0xf853afeffff	                           jne 0x40007b4	      1103	deflate.c	FUNCTION_13	FOR_1	ELSE_1	IF_11	IF_13
0x400097a	            0x31c0	                            xor eax, eax	      1119	deflate.c	FUNCTION_13
0x400097c	              0x5b	                                 pop rbx	      1121	deflate.c	FUNCTION_13
0x400097d	              0x5d	                                 pop rbp	      1121	deflate.c	FUNCTION_13
0x400097e	            0x415c	                                 pop r12	      1121	deflate.c	FUNCTION_13
0x4000980	            0x415d	                                 pop r13	      1121	deflate.c	FUNCTION_13
0x4000982	              0xc3	                                     ret	      1121	deflate.c	FUNCTION_13
0x4000983	    0x8bb38c000000	            mov esi, dword [rbx + 0x8c] 	      1071	deflate.c	FUNCTION_13	FOR_1	IF_8	CALL_4
0x4000989	    0x8b839c000000	            mov eax, dword [rbx + 0x9c] 	      1066	deflate.c	FUNCTION_13	FOR_1	IF_8
0x400098f	          0x83ea03	                              sub edx, 3	      1071	deflate.c	FUNCTION_13	FOR_1	IF_8	CALL_4
0x4000992	          0x4889df	                            mov rdi, rbx	      1071	deflate.c	FUNCTION_13	FOR_1	IF_8	CALL_4
0x4000995	            0xf7d6	                                 not esi	      1071	deflate.c	FUNCTION_13	FOR_1	IF_8	CALL_4
0x4000997	      0x448d6401fd	               lea r12d, [rcx + rax - 3]	      1066	deflate.c	FUNCTION_13	FOR_1	IF_8
0x400099c	             0x1ce	                            add esi, ecx	      1071	deflate.c	FUNCTION_13	FOR_1	IF_8	CALL_4
0x400099e	      0xe800000000	                          call 0x40009a3	      1071	deflate.c	FUNCTION_13	FOR_1	IF_8	CALL_4
0x40009a3	    0x8bbb9c000000	            mov edi, dword [rbx + 0x9c] 	      1079	deflate.c	FUNCTION_13	FOR_1	IF_8
0x40009a9	    0x8b8ba0000000	            mov ecx, dword [rbx + 0xa0] 	      1079	deflate.c	FUNCTION_13	FOR_1	IF_8
0x40009af	          0x8d5701	                      lea edx, [rdi + 1]	      1079	deflate.c	FUNCTION_13	FOR_1	IF_8
0x40009b2	            0x29ca	                            sub edx, ecx	      1079	deflate.c	FUNCTION_13	FOR_1	IF_8
0x40009b4	          0x83e902	                              sub ecx, 2	      1080	deflate.c	FUNCTION_13	FOR_1	IF_8
0x40009b7	    0x898ba0000000	             mov dword [rbx + 0xa0], ecx	      1080	deflate.c	FUNCTION_13	FOR_1	IF_8
0x40009bd	    0x89939c000000	             mov dword [rbx + 0x9c], edx	      1079	deflate.c	FUNCTION_13	FOR_1	IF_8
0x40009c3	    0x8b8b94000000	            mov ecx, dword [rbx + 0x94] 	      1079	deflate.c	FUNCTION_13	FOR_1	IF_8
0x40009c9	            0xeb5a	                           jmp 0x4000a25	      1079	deflate.c	FUNCTION_13	FOR_1	IF_8
0x40009cb	          0x8d5103	                      lea edx, [rcx + 3]	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x40009ce	        0x488b4b48	            mov rcx, qword [rbx + 0x48] 	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x40009d2	          0x237340	             and esi, dword [rbx + 0x40]	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x40009d5	         0xfb63c11	             movzx edi, byte [rcx + rdx]	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x40009d9	          0x8b4b78	            mov ecx, dword [rbx + 0x78] 	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x40009dc	          0x8b5368	            mov edx, dword [rbx + 0x68] 	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x40009df	            0xd3e2	                             shl edx, cl	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x40009e1	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x40009e5	            0x31fa	                            xor edx, edi	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x40009e7	          0x235374	             and edx, dword [rbx + 0x74]	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x40009ea	          0x895368	             mov dword [rbx + 0x68], edx	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x40009ed	      0x440fb72c51	          movzx r13d, word [rcx + rdx*2]	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x40009f2	        0x488b4b58	            mov rcx, qword [rbx + 0x58] 	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x40009f6	      0x6644892c71	            mov word [rcx + rsi*2], r13w	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x40009fb	          0x8b4b68	            mov ecx, dword [rbx + 0x68] 	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x40009fe	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x4000a02	    0x8bb394000000	            mov esi, dword [rbx + 0x94] 	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x4000a08	        0x6689344a	              mov word [rdx + rcx*2], si	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x4000a0c	    0x8b8b94000000	            mov ecx, dword [rbx + 0x94] 	      1083	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x4000a12	    0x8bbba0000000	            mov edi, dword [rbx + 0xa0] 	      1085	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1
0x4000a18	          0x8d57ff	                      lea edx, [rdi - 1]	      1085	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1
0x4000a1b	            0x85d2	                           test edx, edx	      1085	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1
0x4000a1d	    0x8993a0000000	             mov dword [rbx + 0xa0], edx	      1085	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1
0x4000a23	            0x7412	                            je 0x4000a37	      1085	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1
0x4000a25	          0x8d7101	                      lea esi, [rcx + 1]	      1082	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x4000a28	          0x4139f4	                           cmp r12d, esi	      1082	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x4000a2b	    0x89b394000000	             mov dword [rbx + 0x94], esi	      1082	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x4000a31	            0x7398	                           jae 0x40009cb	      1082	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x4000a33	            0x89f1	                            mov ecx, esi	      1082	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x4000a35	            0xebdb	                           jmp 0x4000a12	      1082	deflate.c	FUNCTION_13	FOR_1	IF_8	DO_1	IF_9
0x4000a37	          0x83c101	                              add ecx, 1	      1088	deflate.c	FUNCTION_13	FOR_1	IF_8
0x4000a3a	            0x85c0	                           test eax, eax	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a3c	    0xc78390000000	               mov dword [rbx + 0x90], 0	      1086	deflate.c	FUNCTION_13	FOR_1	IF_8
0x4000a46	    0xc78388000000	               mov dword [rbx + 0x88], 2	      1087	deflate.c	FUNCTION_13	FOR_1	IF_8
0x4000a50	    0x898b94000000	             mov dword [rbx + 0x94], ecx	      1088	deflate.c	FUNCTION_13	FOR_1	IF_8
0x4000a56	            0x7449	                            je 0x4000aa1	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a58	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a5f	            0x89ca	                            mov edx, ecx	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a61	            0x31f6	                            xor esi, esi	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a63	          0x4829c2	                            sub rdx, rax	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a66	          0x4885c0	                           test rax, rax	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a69	            0x7809	                            js 0x4000a74	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a6b	            0x89c0	                            mov eax, eax	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a6d	        0x48034348	             add rax, qword [rbx + 0x48]	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a71	          0x4889c6	                            mov rsi, rax	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a74	            0x31c9	                            xor ecx, ecx	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a76	          0x4889df	                            mov rdi, rbx	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a79	      0xe800000000	                          call 0x4000a7e	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a7e	    0x8b8394000000	            mov eax, dword [rbx + 0x94] 	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a84	          0x488b3b	                    mov rdi, qword [rbx]	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a87	    0x488983800000	             mov qword [rbx + 0x80], rax	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a8e	      0xe89dfcffff	                  call sym.flush_pending	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a93	          0x488b03	                    mov rax, qword [rbx]	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a96	      0x4883782000	               cmp qword [rax + 0x20], 0	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000a9b	     0xf84d9feffff	                            je 0x400097a	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000aa1	    0x8b839c000000	            mov eax, dword [rbx + 0x9c] 	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000aa7	      0xe908fdffff	                           jmp 0x40007b4	      1090	deflate.c	FUNCTION_13	FOR_1	IF_8	IF_10
0x4000aac	    0x83bbb0000000	               cmp dword [rbx + 0xb0], 1	      1052	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
0x4000ab3	    0x8b8b94000000	            mov ecx, dword [rbx + 0x94] 	      1052	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
0x4000ab9	     0xf85be000000	                           jne 0x4000b7d	      1052	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
0x4000abf	    0xc78388000000	               mov dword [rbx + 0x88], 2	      1059	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
0x4000ac9	    0x8b93a0000000	            mov edx, dword [rbx + 0xa0] 	      1059	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
0x4000acf	      0xe9abfdffff	                           jmp 0x400087f	      1059	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
0x4000ad4	    0x8b8390000000	            mov eax, dword [rbx + 0x90] 	      1114	deflate.c	FUNCTION_13	IF_14
0x4000ada	            0x85c0	                           test eax, eax	      1114	deflate.c	FUNCTION_13	IF_14
0x4000adc	            0x7575	                           jne 0x4000b53	      1114	deflate.c	FUNCTION_13	IF_14
0x4000ade	    0x8b9394000000	            mov edx, dword [rbx + 0x94] 	      1119	deflate.c	FUNCTION_13
0x4000ae4	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	      1119	deflate.c	FUNCTION_13
0x4000aeb	            0x31c9	                            xor ecx, ecx	      1119	deflate.c	FUNCTION_13
0x4000aed	          0x83fd05	                              cmp ebp, 5	      1119	deflate.c	FUNCTION_13
0x4000af0	           0xf94c1	                                 sete cl	      1119	deflate.c	FUNCTION_13
0x4000af3	            0x31f6	                            xor esi, esi	      1119	deflate.c	FUNCTION_13
0x4000af5	          0x4829c2	                            sub rdx, rax	      1119	deflate.c	FUNCTION_13
0x4000af8	          0x4885c0	                           test rax, rax	      1119	deflate.c	FUNCTION_13
0x4000afb	            0x7809	                            js 0x4000b06	      1119	deflate.c	FUNCTION_13
0x4000afd	            0x89c0	                            mov eax, eax	      1119	deflate.c	FUNCTION_13
0x4000aff	        0x48034348	             add rax, qword [rbx + 0x48]	      1119	deflate.c	FUNCTION_13
0x4000b03	          0x4889c6	                            mov rsi, rax	      1119	deflate.c	FUNCTION_13
0x4000b06	          0x4889df	                            mov rdi, rbx	      1119	deflate.c	FUNCTION_13
0x4000b09	      0xe800000000	                          call 0x4000b0e	      1119	deflate.c	FUNCTION_13
0x4000b0e	    0x8b8394000000	            mov eax, dword [rbx + 0x94] 	      1119	deflate.c	FUNCTION_13
0x4000b14	          0x488b3b	                    mov rdi, qword [rbx]	      1119	deflate.c	FUNCTION_13
0x4000b17	    0x488983800000	             mov qword [rbx + 0x80], rax	      1119	deflate.c	FUNCTION_13
0x4000b1e	      0xe80dfcffff	                  call sym.flush_pending	      1119	deflate.c	FUNCTION_13
0x4000b23	          0x488b03	                    mov rax, qword [rbx]	      1119	deflate.c	FUNCTION_13
0x4000b26	      0x4883782000	               cmp qword [rax + 0x20], 0	      1119	deflate.c	FUNCTION_13
0x4000b2b	            0x7513	                           jne 0x4000b40	      1119	deflate.c	FUNCTION_13
0x4000b2d	          0x83fd05	                              cmp ebp, 5	      1119	deflate.c	FUNCTION_13
0x4000b30	      0xb802000000	                              mov eax, 2	      1119	deflate.c	FUNCTION_13
0x4000b35	     0xf853ffeffff	                           jne 0x400097a	      1119	deflate.c	FUNCTION_13
0x4000b3b	      0xe93cfeffff	                           jmp 0x400097c	      1119	deflate.c	FUNCTION_13
0x4000b40	            0x31c0	                            xor eax, eax	      1120	deflate.c	FUNCTION_13
0x4000b42	          0x83fd05	                              cmp ebp, 5	      1120	deflate.c	FUNCTION_13
0x4000b45	           0xf94c0	                                 sete al	      1120	deflate.c	FUNCTION_13
0x4000b48	              0x5b	                                 pop rbx	      1121	deflate.c	FUNCTION_13
0x4000b49	        0x8d440001	                lea eax, [rax + rax + 1]	      1120	deflate.c	FUNCTION_13
0x4000b4d	              0x5d	                                 pop rbp	      1121	deflate.c	FUNCTION_13
0x4000b4e	            0x415c	                                 pop r12	      1121	deflate.c	FUNCTION_13
0x4000b50	            0x415d	                                 pop r13	      1121	deflate.c	FUNCTION_13
0x4000b52	              0xc3	                                     ret	      1121	deflate.c	FUNCTION_13
0x4000b53	    0x8b8394000000	            mov eax, dword [rbx + 0x94] 	      1116	deflate.c	FUNCTION_13	IF_14	CALL_9
0x4000b59	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      1116	deflate.c	FUNCTION_13	IF_14	CALL_9
0x4000b5d	            0x31f6	                            xor esi, esi	      1116	deflate.c	FUNCTION_13	IF_14	CALL_9
0x4000b5f	          0x4889df	                            mov rdi, rbx	      1116	deflate.c	FUNCTION_13	IF_14	CALL_9
0x4000b62	          0x83e801	                              sub eax, 1	      1116	deflate.c	FUNCTION_13	IF_14	CALL_9
0x4000b65	         0xfb61402	             movzx edx, byte [rdx + rax]	      1116	deflate.c	FUNCTION_13	IF_14	CALL_9
0x4000b69	      0xe800000000	                          call 0x4000b6e	      1116	deflate.c	FUNCTION_13	IF_14	CALL_9
0x4000b6e	    0xc78390000000	               mov dword [rbx + 0x90], 0	      1117	deflate.c	FUNCTION_13	IF_14
0x4000b78	      0xe961ffffff	                           jmp 0x4000ade	      1117	deflate.c	FUNCTION_13	IF_14
0x4000b7d	          0x83f803	                              cmp eax, 3	      1052	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
0x4000b80	     0xf8543ffffff	                           jne 0x4000ac9	      1052	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
0x4000b86	            0x89c8	                            mov eax, ecx	      1053	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
0x4000b88	    0x2b8398000000	             sub eax, dword [rbx + 0x98]	      1053	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
0x4000b8e	      0x3d00100000	                         cmp eax, 0x1000	      1053	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
0x4000b93	     0xf8726ffffff	                            ja 0x4000abf	      1053	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
0x4000b99	    0x8b93a0000000	            mov edx, dword [rbx + 0xa0] 	      1053	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
0x4000b9f	      0xe9dbfcffff	                           jmp 0x400087f	      1053	deflate.c	FUNCTION_13	FOR_1	IF_5	IF_7
fill_window	functions,0:WHILE,1:FOR,0:CALL,4:SWITCH,0:ELSE,2:IF,5:DO,3	315
0x4000270	            0x4157	                                push r15	       736	deflate.c	FUNCTION_10
0x4000272	            0x4156	                                push r14	       736	deflate.c	FUNCTION_10
0x4000274	            0x4155	                                push r13	       736	deflate.c	FUNCTION_10
0x4000276	            0x4154	                                push r12	       736	deflate.c	FUNCTION_10
0x4000278	              0x55	                                push rbp	       736	deflate.c	FUNCTION_10
0x4000279	              0x53	                                push rbx	       736	deflate.c	FUNCTION_10
0x400027a	    0x4881ec880000	                           sub rsp, 0x88	       736	deflate.c	FUNCTION_10
0x4000281	          0x8b7738	            mov esi, dword [rdi + 0x38] 	       740	deflate.c	FUNCTION_10
0x4000284	    0x8b879c000000	            mov eax, dword [rdi + 0x9c] 	       740	deflate.c	FUNCTION_10
0x400028a	      0x48897c2420	             mov qword [rsp + 0x20], rdi	       736	deflate.c	FUNCTION_10
0x400028f	          0x4889f1	                            mov rcx, rsi	       740	deflate.c	FUNCTION_10
0x4000292	        0x89742450	             mov dword [rsp + 0x50], esi	       740	deflate.c	FUNCTION_10
0x4000296	      0x4889742478	             mov qword [rsp + 0x78], rsi	       760	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	CALL_2
0x400029b	          0x8d51ff	                      lea edx, [rcx - 1]	       760	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	CALL_2
0x400029e	          0x4801f6	                            add rsi, rsi	       780	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x40002a1	    0x48c7c1feffff	             mov rcx, 0xfffffffffffffffe	       780	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x40002a8	      0x4889742468	             mov qword [rsp + 0x68], rsi	       780	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x40002ad	          0x4889ce	                            mov rsi, rcx	       780	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x40002b0	    0x48898c248000	             mov qword [rsp + 0x80], rcx	       780	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x40002b8	          0x4801d2	                            add rdx, rdx	       780	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x40002bb	          0x4829d6	                            sub rsi, rdx	       780	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x40002be	      0x4889742470	             mov qword [rsp + 0x70], rsi	       780	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x40002c3	      0xe913010000	                           jmp 0x40003db	       780	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x40002c8	             0x9d0	                             or eax, edx	       746	deflate.c	FUNCTION_10	DO_1	IF_1
0x40002ca	     0xf853a010000	                           jne 0x400040a	       746	deflate.c	FUNCTION_10	DO_1	IF_1
0x40002d0	        0x8b5c2450	            mov ebx, dword [rsp + 0x50] 	       740	deflate.c	FUNCTION_10
0x40002d4	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       790	deflate.c	FUNCTION_10	DO_1	IF_4
0x40002d9	          0x488b01	                    mov rax, qword [rcx]	       790	deflate.c	FUNCTION_10	DO_1	IF_4
0x40002dc	        0x488b5008	                mov rdx, qword [rax + 8]	       790	deflate.c	FUNCTION_10	DO_1	IF_4
0x40002e0	          0x4889c6	                            mov rsi, rax	       790	deflate.c	FUNCTION_10	DO_1	IF_4
0x40002e3	      0x4889442438	             mov qword [rsp + 0x38], rax	       790	deflate.c	FUNCTION_10	DO_1	IF_4
0x40002e8	          0x4885d2	                           test rdx, rdx	       790	deflate.c	FUNCTION_10	DO_1	IF_4
0x40002eb	     0xf8421040000	                            je 0x4000712	       790	deflate.c	FUNCTION_10	DO_1	IF_4
0x40002f1	    0x8b819c000000	            mov eax, dword [rcx + 0x9c] 	       805	deflate.c	FUNCTION_10	DO_1	CALL_4
0x40002f7	            0x39d3	                            cmp ebx, edx	       805	deflate.c	FUNCTION_10	DO_1	CALL_4
0x40002f9	           0xf47da	                          cmova ebx, edx	       805	deflate.c	FUNCTION_10	DO_1	CALL_4
0x40002fc	        0x895c2444	             mov dword [rsp + 0x44], ebx	       805	deflate.c	FUNCTION_10	DO_1	CALL_4
0x4000300	        0x89442430	             mov dword [rsp + 0x30], eax	       805	deflate.c	FUNCTION_10	DO_1	CALL_4
0x4000304	            0x31c0	                            xor eax, eax	       502	deflate.c	FUNCTION_7	IF_2
0x4000306	            0x85db	                           test ebx, ebx	       502	deflate.c	FUNCTION_7	IF_2
0x4000308	            0x7472	                            je 0x400037c	       502	deflate.c	FUNCTION_7	IF_2
0x400030a	          0x4889c8	                            mov rax, rcx	       805	deflate.c	FUNCTION_10	DO_1	CALL_4
0x400030d	        0x488b4948	            mov rcx, qword [rcx + 0x48] 	       805	deflate.c	FUNCTION_10	DO_1	CALL_4
0x4000311	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	       805	deflate.c	FUNCTION_10	DO_1	CALL_4
0x4000317	      0x48894c2448	             mov qword [rsp + 0x48], rcx	       805	deflate.c	FUNCTION_10	DO_1	CALL_4
0x400031c	        0x89442454	             mov dword [rsp + 0x54], eax	       805	deflate.c	FUNCTION_10	DO_1	CALL_4
0x4000320	            0x89d8	                            mov eax, ebx	       504	deflate.c	FUNCTION_7
0x4000322	          0x4829c2	                            sub rdx, rax	       504	deflate.c	FUNCTION_7
0x4000325	      0x4889442458	             mov qword [rsp + 0x58], rax	       504	deflate.c	FUNCTION_7
0x400032a	        0x488b4638	            mov rax, qword [rsi + 0x38] 	       506	deflate.c	FUNCTION_7	IF_3
0x400032e	        0x48895608	                mov qword [rsi + 8], rdx	       504	deflate.c	FUNCTION_7
0x4000332	          0x8b482c	            mov ecx, dword [rax + 0x2c] 	       506	deflate.c	FUNCTION_7	IF_3
0x4000335	            0x85c9	                           test ecx, ecx	       506	deflate.c	FUNCTION_7	IF_3
0x4000337	     0xf8498010000	                            je 0x40004d5	       506	deflate.c	FUNCTION_7	IF_3
0x400033d	          0x488b36	                    mov rsi, qword [rsi]	       506	deflate.c	FUNCTION_7	IF_3
0x4000340	        0x8b7c2454	            mov edi, dword [rsp + 0x54] 	       509	deflate.c	FUNCTION_7	CALL_2
0x4000344	        0x8b442430	            mov eax, dword [rsp + 0x30] 	       509	deflate.c	FUNCTION_7	CALL_2
0x4000348	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	       509	deflate.c	FUNCTION_7	CALL_2
0x400034d	          0x4801c7	                            add rdi, rax	       509	deflate.c	FUNCTION_7	CALL_2
0x4000350	      0x48037c2448	             add rdi, qword [rsp + 0x48]	       509	deflate.c	FUNCTION_7	CALL_2
0x4000355	          0x4889da	                            mov rdx, rbx	       509	deflate.c	FUNCTION_7	CALL_2
0x4000358	      0xe800000000	                          call 0x400035d	       509	deflate.c	FUNCTION_7	CALL_2
0x400035d	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       510	deflate.c	FUNCTION_7
0x4000362	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       510	deflate.c	FUNCTION_7
0x4000367	          0x48011e	                    add qword [rsi], rbx	       510	deflate.c	FUNCTION_7
0x400036a	        0x48015e10	            add qword [rsi + 0x10], rbx 	       511	deflate.c	FUNCTION_7
0x400036e	    0x8b809c000000	            mov eax, dword [rax + 0x9c] 	       511	deflate.c	FUNCTION_7
0x4000374	        0x89442430	             mov dword [rsp + 0x30], eax	       511	deflate.c	FUNCTION_7
0x4000378	        0x8b442444	            mov eax, dword [rsp + 0x44] 	       511	deflate.c	FUNCTION_7
0x400037c	         0x3442430	             add eax, dword [rsp + 0x30]	       806	deflate.c	FUNCTION_10	DO_1
0x4000380	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       806	deflate.c	FUNCTION_10	DO_1
0x4000385	          0x83f802	                              cmp eax, 2	       809	deflate.c	FUNCTION_10	DO_1	IF_5
0x4000388	    0x89869c000000	             mov dword [rsi + 0x9c], eax	       806	deflate.c	FUNCTION_10	DO_1
0x400038e	            0x7638	                           jbe 0x40003c8	       809	deflate.c	FUNCTION_10	DO_1	IF_5
0x4000390	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       810	deflate.c	FUNCTION_10	DO_1	IF_5
0x4000395	    0x8b9794000000	            mov edx, dword [rdi + 0x94] 	       810	deflate.c	FUNCTION_10	DO_1	IF_5
0x400039b	        0x488b4f48	            mov rcx, qword [rdi + 0x48] 	       810	deflate.c	FUNCTION_10	DO_1	IF_5
0x400039f	          0x4889d6	                            mov rsi, rdx	       810	deflate.c	FUNCTION_10	DO_1	IF_5
0x40003a2	         0xfb61411	             movzx edx, byte [rcx + rdx]	       810	deflate.c	FUNCTION_10	DO_1	IF_5
0x40003a6	          0x83c601	                              add esi, 1	       811	deflate.c	FUNCTION_10	DO_1	IF_5
0x40003a9	          0x895768	             mov dword [rdi + 0x68], edx	       810	deflate.c	FUNCTION_10	DO_1	IF_5
0x40003ac	         0xfb63431	             movzx esi, byte [rcx + rsi]	       811	deflate.c	FUNCTION_10	DO_1	IF_5
0x40003b0	          0x8b4f78	            mov ecx, dword [rdi + 0x78] 	       811	deflate.c	FUNCTION_10	DO_1	IF_5
0x40003b3	            0xd3e2	                             shl edx, cl	       811	deflate.c	FUNCTION_10	DO_1	IF_5
0x40003b5	            0x31f2	                            xor edx, esi	       811	deflate.c	FUNCTION_10	DO_1	IF_5
0x40003b7	          0x235774	             and edx, dword [rdi + 0x74]	       811	deflate.c	FUNCTION_10	DO_1	IF_5
0x40003ba	      0x3d05010000	                          cmp eax, 0x105	       820	deflate.c	FUNCTION_10	WHILE_1
0x40003bf	          0x895768	             mov dword [rdi + 0x68], edx	       811	deflate.c	FUNCTION_10	DO_1	IF_5
0x40003c2	     0xf874a030000	                            ja 0x4000712	       820	deflate.c	FUNCTION_10	WHILE_1
0x40003c8	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       820	deflate.c	FUNCTION_10	WHILE_1
0x40003cd	          0x488b16	                    mov rdx, qword [rsi]	       820	deflate.c	FUNCTION_10	WHILE_1
0x40003d0	      0x48837a0800	                  cmp qword [rdx + 8], 0	       820	deflate.c	FUNCTION_10	WHILE_1
0x40003d5	     0xf8437030000	                            je 0x4000712	       820	deflate.c	FUNCTION_10	WHILE_1
0x40003db	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       743	deflate.c	FUNCTION_10	DO_1
0x40003e0	    0x8b9694000000	            mov edx, dword [rsi + 0x94] 	       743	deflate.c	FUNCTION_10	DO_1
0x40003e6	        0x488b7650	            mov rsi, qword [rsi + 0x50] 	       743	deflate.c	FUNCTION_10	DO_1
0x40003ea	        0x48893424	                    mov qword [rsp], rsi	       743	deflate.c	FUNCTION_10	DO_1
0x40003ee	          0x8b1c24	                    mov ebx, dword [rsp]	       743	deflate.c	FUNCTION_10	DO_1
0x40003f1	            0x29c3	                            sub ebx, eax	       743	deflate.c	FUNCTION_10	DO_1
0x40003f3	            0x29d3	                            sub ebx, edx	       746	deflate.c	FUNCTION_10	DO_1	IF_1
0x40003f5	     0xf84cdfeffff	                            je 0x40002c8	       746	deflate.c	FUNCTION_10	DO_1	IF_1
0x40003fb	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       749	deflate.c	FUNCTION_10	DO_1	ELSE_1	IF_2
0x40003fe	            0x750a	                           jne 0x400040a	       749	deflate.c	FUNCTION_10	DO_1	ELSE_1	IF_2
0x4000400	      0xbbfeffffff	                     mov ebx, 0xfffffffe	       753	deflate.c	FUNCTION_10	DO_1	ELSE_1	IF_2
0x4000405	      0xe9cafeffff	                           jmp 0x40002d4	       753	deflate.c	FUNCTION_10	DO_1	ELSE_1	IF_2
0x400040a	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       758	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	CALL_1
0x400040f	        0x8b442450	            mov eax, dword [rsp + 0x50] 	       758	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	CALL_1
0x4000413	           0x34638	             add eax, dword [rsi + 0x38]	       758	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	CALL_1
0x4000416	      0x2d06010000	                          sub eax, 0x106	       758	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	CALL_1
0x400041b	            0x39c2	                            cmp edx, eax	       758	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	CALL_1
0x400041d	     0xf82b1feffff	                            jb 0x40002d4	       758	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	CALL_1
0x4000423	      0x4c8b742478	            mov r14, qword [rsp + 0x78] 	       760	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	CALL_2
0x4000428	        0x488b7e48	            mov rdi, qword [rsi + 0x48] 	       760	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	CALL_2
0x400042c	          0x4989f7	                            mov r15, rsi	       760	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	CALL_2
0x400042f	        0x4a8d3437	                    lea rsi, [rdi + r14]	       760	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	CALL_2
0x4000433	          0x4c89f2	                            mov rdx, r14	       760	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	CALL_2
0x4000436	      0xe800000000	                          call 0x400043b	       760	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	CALL_2
0x400043b	        0x418b4f6c	            mov ecx, dword [r15 + 0x6c] 	       772	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x400043f	        0x498b5760	            mov rdx, qword [r15 + 0x60] 	       773	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x4000443	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	       773	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x400044b	        0x8b742450	            mov esi, dword [rsp + 0x50] 	       762	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x400044f	    0x4d29b7800000	             sub qword [r15 + 0x80], r14	       764	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x4000456	    0x4129b7980000	             sub dword [r15 + 0x98], esi	       762	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x400045d	          0x4889c8	                            mov rax, rcx	       772	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x4000460	    0x4129b7940000	             sub dword [r15 + 0x94], esi	       763	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x4000467	        0x488d0c4a	                  lea rcx, [rdx + rcx*2]	       773	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x400046b	          0x83e801	                              sub eax, 1	       773	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x400046e	          0x4801c0	                            add rax, rax	       773	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x4000471	          0x4829c7	                            sub rdi, rax	       773	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x4000474	          0x4801cf	                            add rdi, rcx	       773	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x4000477	        0x4883e902	                              sub rcx, 2	       775	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_2
0x400047b	           0xfb711	                   movzx edx, word [rcx]	       775	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_2
0x400047e	            0x89d0	                            mov eax, edx	       776	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_2
0x4000480	            0x29f0	                            sub eax, esi	       776	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_2
0x4000482	            0x39d6	                            cmp esi, edx	       776	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_2
0x4000484	      0xba00000000	                              mov edx, 0	       776	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_2
0x4000489	           0xf47c2	                          cmova eax, edx	       776	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_2
0x400048c	          0x4839f9	                            cmp rcx, rdi	       777	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_2
0x400048f	          0x668901	                      mov word [rcx], ax	       776	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_2
0x4000492	            0x75e3	                           jne 0x4000477	       777	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_2
0x4000494	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       780	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x4000499	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       780	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x400049e	        0x8b742450	            mov esi, dword [rsp + 0x50] 	       780	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x40004a2	        0x48034858	             add rcx, qword [rax + 0x58]	       780	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x40004a6	      0x488b442470	            mov rax, qword [rsp + 0x70] 	       780	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x40004ab	        0x488d3c01	                    lea rdi, [rcx + rax]	       780	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x40004af	        0x4883e902	                              sub rcx, 2	       782	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_3
0x40004b3	           0xfb711	                   movzx edx, word [rcx]	       782	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_3
0x40004b6	            0x89d0	                            mov eax, edx	       783	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_3
0x40004b8	            0x29f0	                            sub eax, esi	       783	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_3
0x40004ba	            0x39d6	                            cmp esi, edx	       783	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_3
0x40004bc	      0xba00000000	                              mov edx, 0	       783	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_3
0x40004c1	           0xf47c2	                          cmova eax, edx	       783	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_3
0x40004c4	          0x4839f9	                            cmp rcx, rdi	       787	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_3
0x40004c7	          0x668901	                      mov word [rcx], ax	       783	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_3
0x40004ca	            0x75e3	                           jne 0x40004af	       787	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3	DO_3
0x40004cc	         0x35c2450	             add ebx, dword [rsp + 0x50]	       788	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x40004d0	      0xe9fffdffff	                           jmp 0x40002d4	       788	deflate.c	FUNCTION_10	DO_1	ELSE_2	IF_3
0x40004d5	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       507	deflate.c	FUNCTION_7	IF_3	CALL_1
0x40004da	          0x488b06	                    mov rax, qword [rsi]	       507	deflate.c	FUNCTION_7	IF_3	CALL_1
0x40004dd	          0x4889c1	                            mov rcx, rax	       507	deflate.c	FUNCTION_7	IF_3	CALL_1
0x40004e0	      0x4889442460	             mov qword [rsp + 0x60], rax	       507	deflate.c	FUNCTION_7	IF_3	CALL_1
0x40004e5	        0x488b4650	            mov rax, qword [rsi + 0x50] 	       507	deflate.c	FUNCTION_7	IF_3	CALL_1
0x40004e9	        0x440fb7f8	                          movzx r15d, ax	        82	zutil.h	FUNCTION_15
0x40004ed	        0x48c1e810	                           shr rax, 0x10	        83	zutil.h	FUNCTION_15
0x40004f1	          0x4885c9	                           test rcx, rcx	        86	zutil.h	FUNCTION_15	IF_1
0x40004f4	           0xfb7c0	                           movzx eax, ax	        83	zutil.h	FUNCTION_15
0x40004f7	      0x4889442410	             mov qword [rsp + 0x10], rax	        83	zutil.h	FUNCTION_15
0x40004fc	     0xf8422020000	                            je 0x4000724	        86	zutil.h	FUNCTION_15	IF_1
0x4000502	        0x8b442444	            mov eax, dword [rsp + 0x44] 	        86	zutil.h	FUNCTION_15	IF_1
0x4000506	          0x4989c9	                             mov r9, rcx	        86	zutil.h	FUNCTION_15	IF_1
0x4000509	        0x8944242c	             mov dword [rsp + 0x2c], eax	        86	zutil.h	FUNCTION_15	IF_1
0x400050d	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	        89	zutil.h	FUNCTION_15	WHILE_1
0x4000511	      0xb8b0150000	                         mov eax, 0x15b0	        89	zutil.h	FUNCTION_15	WHILE_1
0x4000516	    0x81f9b0150000	                         cmp ecx, 0x15b0	        89	zutil.h	FUNCTION_15	WHILE_1
0x400051c	           0xf46c1	                         cmovbe eax, ecx	        89	zutil.h	FUNCTION_15	WHILE_1
0x400051f	            0x29c1	                            sub ecx, eax	        90	zutil.h	FUNCTION_15	WHILE_1
0x4000521	          0x83f80f	                            cmp eax, 0xf	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000524	        0x894c242c	             mov dword [rsp + 0x2c], ecx	        90	zutil.h	FUNCTION_15	WHILE_1
0x4000528	     0xf869d010000	                           jbe 0x40006cb	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x400052e	          0x83e810	                           sub eax, 0x10	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000531	        0x89442440	             mov dword [rsp + 0x40], eax	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000535	          0xc1e804	                              shr eax, 4	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000538	        0x89442434	             mov dword [rsp + 0x34], eax	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x400053c	        0x4883c001	                              add rax, 1	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000540	        0x48c1e004	                              shl rax, 4	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000544	          0x4c01c8	                             add rax, r9	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000547	      0x4889442418	             mov qword [rsp + 0x18], rax	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x400054c	        0x450fb631	                   movzx r14d, byte [r9]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000550	      0x450fb66902	               movzx r13d, byte [r9 + 2]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000555	        0x4983c110	                            add r9, 0x10	        93	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000559	      0x450fb661f4	             movzx r12d, byte [r9 - 0xc]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x400055e	      0x410fb669f5	              movzx ebp, byte [r9 - 0xb]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000563	      0x450fb659f7	               movzx r11d, byte [r9 - 9]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000568	      0x450fb651f8	               movzx r10d, byte [r9 - 8]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x400056d	      0x450fb641f9	                movzx r8d, byte [r9 - 7]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000572	      0x410fb679fa	                movzx edi, byte [r9 - 6]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000577	        0x4b8d043e	                    lea rax, [r14 + r15]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x400057b	      0x450fb671f1	             movzx r14d, byte [r9 - 0xf]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000580	      0x410fb671fb	                movzx esi, byte [r9 - 5]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000585	      0x410fb649fc	                movzx ecx, byte [r9 - 4]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x400058a	      0x410fb651fd	                movzx edx, byte [r9 - 3]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x400058f	        0x48890424	                    mov qword [rsp], rax	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000593	      0x450fb679ff	               movzx r15d, byte [r9 - 1]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000598	          0x4901c6	                            add r14, rax	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x400059b	      0x410fb641fe	                movzx eax, byte [r9 - 2]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005a0	      0x4b8d5c3500	                    lea rbx, [r13 + r14]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005a5	      0x450fb669f3	             movzx r13d, byte [r9 - 0xd]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005aa	        0x4c033424	                    add r14, qword [rsp]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005ae	      0x48895c2408	                mov qword [rsp + 8], rbx	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005b3	      0x4c03742408	                add r14, qword [rsp + 8]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005b8	          0x4901dd	                            add r13, rbx	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005bb	      0x410fb659f6	              movzx ebx, byte [r9 - 0xa]	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005c0	          0x4d01ec	                            add r12, r13	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005c3	          0x4d01ee	                            add r14, r13	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005c6	          0x4c01e5	                            add rbp, r12	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005c9	          0x4d01e6	                            add r14, r12	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005cc	          0x4801eb	                            add rbx, rbp	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005cf	          0x4c01f5	                            add rbp, r14	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005d2	          0x4901db	                            add r11, rbx	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005d5	          0x4801eb	                            add rbx, rbp	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005d8	          0x4d01da	                            add r10, r11	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005db	          0x4901db	                            add r11, rbx	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005de	          0x4d01d0	                             add r8, r10	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005e1	          0x4d01da	                            add r10, r11	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005e4	          0x4c01c7	                             add rdi, r8	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005e7	          0x4d01d0	                             add r8, r10	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005ea	          0x4801fe	                            add rsi, rdi	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005ed	          0x4c01c7	                             add rdi, r8	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005f0	          0x4801f1	                            add rcx, rsi	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005f3	          0x4801fe	                            add rsi, rdi	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005f6	          0x4801ca	                            add rdx, rcx	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005f9	          0x4801f1	                            add rcx, rsi	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005fc	          0x4801d0	                            add rax, rdx	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40005ff	          0x4801ca	                            add rdx, rcx	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000602	          0x4901c7	                            add r15, rax	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000605	          0x4801d0	                            add rax, rdx	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000608	          0x4c01f8	                            add rax, r15	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x400060b	      0x4801442410	            add qword [rsp + 0x10], rax 	        92	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000610	      0x4c3b4c2418	              cmp r9, qword [rsp + 0x18]	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x4000615	     0xf8531ffffff	                           jne 0x400054c	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x400061b	        0x8b442434	            mov eax, dword [rsp + 0x34] 	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x400061f	        0x8b742440	            mov esi, dword [rsp + 0x40] 	        96	zutil.h	FUNCTION_15	WHILE_1	IF_2	DO_1
0x4000623	          0xc1e004	                              shl eax, 4	        96	zutil.h	FUNCTION_15	WHILE_1	IF_2	DO_1
0x4000626	            0x29c6	                            sub esi, eax	        96	zutil.h	FUNCTION_15	WHILE_1	IF_2	DO_1
0x4000628	            0x89f0	                            mov eax, esi	        96	zutil.h	FUNCTION_15	WHILE_1	IF_2	DO_1
0x400062a	     0xf85a0000000	                           jne 0x40006d0	        96	zutil.h	FUNCTION_15	WHILE_1	IF_2	DO_1
0x4000630	    0x48b8cdc52f0d	             movabs rax, 0xf00e10d2fc5cd	       100	zutil.h	FUNCTION_15	WHILE_1
0x400063a	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       101	zutil.h	FUNCTION_15	WHILE_1
0x400063f	          0x49f7e7	                                 mul r15	       100	zutil.h	FUNCTION_15	WHILE_1
0x4000642	          0x4c89f8	                            mov rax, r15	       100	zutil.h	FUNCTION_15	WHILE_1
0x4000645	          0x4829d0	                            sub rax, rdx	       100	zutil.h	FUNCTION_15	WHILE_1
0x4000648	          0x48d1e8	                              shr rax, 1	       100	zutil.h	FUNCTION_15	WHILE_1
0x400064b	          0x4801c2	                            add rdx, rax	       100	zutil.h	FUNCTION_15	WHILE_1
0x400064e	        0x48c1ea0f	                            shr rdx, 0xf	       100	zutil.h	FUNCTION_15	WHILE_1
0x4000652	          0x4889d1	                            mov rcx, rdx	       100	zutil.h	FUNCTION_15	WHILE_1
0x4000655	          0x4889d0	                            mov rax, rdx	       100	zutil.h	FUNCTION_15	WHILE_1
0x4000658	        0x48c1e104	                              shl rcx, 4	       100	zutil.h	FUNCTION_15	WHILE_1
0x400065c	        0x48c1e010	                           shl rax, 0x10	       100	zutil.h	FUNCTION_15	WHILE_1
0x4000660	          0x4829c8	                            sub rax, rcx	       100	zutil.h	FUNCTION_15	WHILE_1
0x4000663	          0x4801c2	                            add rdx, rax	       100	zutil.h	FUNCTION_15	WHILE_1
0x4000666	    0x48b8cdc52f0d	             movabs rax, 0xf00e10d2fc5cd	       101	zutil.h	FUNCTION_15	WHILE_1
0x4000670	          0x4929d7	                            sub r15, rdx	       100	zutil.h	FUNCTION_15	WHILE_1
0x4000673	          0x48f7e6	                                 mul rsi	       101	zutil.h	FUNCTION_15	WHILE_1
0x4000676	          0x4889f0	                            mov rax, rsi	       101	zutil.h	FUNCTION_15	WHILE_1
0x4000679	          0x4829d0	                            sub rax, rdx	       101	zutil.h	FUNCTION_15	WHILE_1
0x400067c	          0x48d1e8	                              shr rax, 1	       101	zutil.h	FUNCTION_15	WHILE_1
0x400067f	          0x4801c2	                            add rdx, rax	       101	zutil.h	FUNCTION_15	WHILE_1
0x4000682	        0x48c1ea0f	                            shr rdx, 0xf	       101	zutil.h	FUNCTION_15	WHILE_1
0x4000686	          0x4889d1	                            mov rcx, rdx	       101	zutil.h	FUNCTION_15	WHILE_1
0x4000689	          0x4889d0	                            mov rax, rdx	       101	zutil.h	FUNCTION_15	WHILE_1
0x400068c	        0x48c1e104	                              shl rcx, 4	       101	zutil.h	FUNCTION_15	WHILE_1
0x4000690	        0x48c1e010	                           shl rax, 0x10	       101	zutil.h	FUNCTION_15	WHILE_1
0x4000694	          0x4829c8	                            sub rax, rcx	       101	zutil.h	FUNCTION_15	WHILE_1
0x4000697	          0x4801c2	                            add rdx, rax	       101	zutil.h	FUNCTION_15	WHILE_1
0x400069a	          0x4889f0	                            mov rax, rsi	       101	zutil.h	FUNCTION_15	WHILE_1
0x400069d	          0x4829d0	                            sub rax, rdx	       101	zutil.h	FUNCTION_15	WHILE_1
0x40006a0	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	        88	zutil.h	FUNCTION_15	WHILE_1
0x40006a4	      0x4889442410	             mov qword [rsp + 0x10], rax	       101	zutil.h	FUNCTION_15	WHILE_1
0x40006a9	            0x85d2	                           test edx, edx	        88	zutil.h	FUNCTION_15	WHILE_1
0x40006ab	     0xf855cfeffff	                           jne 0x400050d	        88	zutil.h	FUNCTION_15	WHILE_1
0x40006b1	        0x48c1e010	                           shl rax, 0x10	       103	zutil.h	FUNCTION_15
0x40006b5	          0x4909c7	                             or r15, rax	       103	zutil.h	FUNCTION_15
0x40006b8	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       507	deflate.c	FUNCTION_7	IF_3	CALL_1
0x40006bd	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	       507	deflate.c	FUNCTION_7	IF_3	CALL_1
0x40006c2	        0x4c897850	             mov qword [rax + 0x50], r15	       507	deflate.c	FUNCTION_7	IF_3	CALL_1
0x40006c6	      0xe975fcffff	                           jmp 0x4000340	       507	deflate.c	FUNCTION_7	IF_3	CALL_1
0x40006cb	      0x4c894c2418	              mov qword [rsp + 0x18], r9	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40006d0	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40006d5	          0x83e801	                              sub eax, 1	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40006d8	          0x4889c2	                            mov rdx, rax	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40006db	      0x488d740101	                lea rsi, [rcx + rax + 1]	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40006e0	          0x4889c8	                            mov rax, rcx	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40006e3	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	        91	zutil.h	FUNCTION_15	WHILE_1	WHILE_2
0x40006e8	        0x4883c001	                              add rax, 1	        97	zutil.h	FUNCTION_15	WHILE_1	IF_2	DO_1
0x40006ec	         0xfb678ff	               movzx edi, byte [rax - 1]	        97	zutil.h	FUNCTION_15	WHILE_1	IF_2	DO_1
0x40006f0	          0x4901ff	                            add r15, rdi	        97	zutil.h	FUNCTION_15	WHILE_1	IF_2	DO_1
0x40006f3	          0x4c01f9	                            add rcx, r15	        98	zutil.h	FUNCTION_15	WHILE_1	IF_2	DO_1
0x40006f6	          0x4839f0	                            cmp rax, rsi	        99	zutil.h	FUNCTION_15	WHILE_1	IF_2	DO_1
0x40006f9	            0x75ed	                           jne 0x40006e8	        99	zutil.h	FUNCTION_15	WHILE_1	IF_2	DO_1
0x40006fb	      0x48894c2410	             mov qword [rsp + 0x10], rcx	        99	zutil.h	FUNCTION_15	WHILE_1	IF_2	DO_1
0x4000700	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	        99	zutil.h	FUNCTION_15	WHILE_1	IF_2	DO_1
0x4000705	          0x4863c2	                         movsxd rax, edx	        99	zutil.h	FUNCTION_15	WHILE_1	IF_2	DO_1
0x4000708	      0x4c8d4c0101	                 lea r9, [rcx + rax + 1]	        99	zutil.h	FUNCTION_15	WHILE_1	IF_2	DO_1
0x400070d	      0xe91effffff	                           jmp 0x4000630	        99	zutil.h	FUNCTION_15	WHILE_1	IF_2	DO_1
0x4000712	    0x4881c4880000	                           add rsp, 0x88	       821	deflate.c	FUNCTION_10
0x4000719	              0x5b	                                 pop rbx	       821	deflate.c	FUNCTION_10
0x400071a	              0x5d	                                 pop rbp	       821	deflate.c	FUNCTION_10
0x400071b	            0x415c	                                 pop r12	       821	deflate.c	FUNCTION_10
0x400071d	            0x415d	                                 pop r13	       821	deflate.c	FUNCTION_10
0x400071f	            0x415e	                                 pop r14	       821	deflate.c	FUNCTION_10
0x4000721	            0x415f	                                 pop r15	       821	deflate.c	FUNCTION_10
0x4000723	              0xc3	                                     ret	       821	deflate.c	FUNCTION_10
0x4000724	    0x41bf01000000	                             mov r15d, 1	        86	zutil.h	FUNCTION_15	IF_1
0x400072a	            0xeb8c	                           jmp 0x40006b8	        86	zutil.h	FUNCTION_15	IF_1
zlib_deflateReset	functions,0:WHILE,0:FOR,0:CALL,2:SWITCH,0:ELSE,0:IF,2:DO,0	68
0x4001030	          0x4885ff	                           test rdi, rdi	       259	deflate.c	FUNCTION_2	IF_1
0x4001033	     0xf8435010000	                            je 0x400116e	       259	deflate.c	FUNCTION_2	IF_1
0x4001039	              0x53	                                push rbx	       256	deflate.c	FUNCTION_2
0x400103a	        0x488b5f38	            mov rbx, qword [rdi + 0x38] 	       259	deflate.c	FUNCTION_2	IF_1
0x400103e	          0x4885db	                           test rbx, rbx	       259	deflate.c	FUNCTION_2	IF_1
0x4001041	     0xf842d010000	                            je 0x4001174	       259	deflate.c	FUNCTION_2	IF_1
0x4001047	    0x48c747280000	               mov qword [rdi + 0x28], 0	       262	deflate.c	FUNCTION_2
0x400104f	    0x48c747100000	               mov qword [rdi + 0x10], 0	       262	deflate.c	FUNCTION_2
0x4001057	    0x48c747300000	               mov qword [rdi + 0x30], 0	       263	deflate.c	FUNCTION_2
0x400105f	    0xc74748020000	               mov dword [rdi + 0x48], 2	       264	deflate.c	FUNCTION_2
0x4001066	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       268	deflate.c	FUNCTION_2
0x400106a	    0xc74328000000	               mov dword [rbx + 0x28], 0	       267	deflate.c	FUNCTION_2
0x4001071	        0x48894320	             mov qword [rbx + 0x20], rax	       268	deflate.c	FUNCTION_2
0x4001075	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	       270	deflate.c	FUNCTION_2	IF_2
0x4001078	            0x85c0	                           test eax, eax	       270	deflate.c	FUNCTION_2	IF_2
0x400107a	     0xf88dd000000	                            js 0x400115d	       270	deflate.c	FUNCTION_2	IF_2
0x4001080	          0x83f801	                              cmp eax, 1	       273	deflate.c	FUNCTION_2
0x4001083	            0x19c0	                            sbb eax, eax	       273	deflate.c	FUNCTION_2
0x4001085	          0x83e0b9	                     and eax, 0xffffffb9	       273	deflate.c	FUNCTION_2
0x4001088	          0x83c071	                           add eax, 0x71	       273	deflate.c	FUNCTION_2
0x400108b	          0x894308	                mov dword [rbx + 8], eax	       273	deflate.c	FUNCTION_2
0x400108e	    0x48c747500100	               mov qword [rdi + 0x50], 1	       274	deflate.c	FUNCTION_2
0x4001096	          0x4889df	                            mov rdi, rbx	       277	deflate.c	FUNCTION_2	CALL_1
0x4001099	    0xc74334000000	               mov dword [rbx + 0x34], 0	       275	deflate.c	FUNCTION_2
0x40010a0	      0xe800000000	                          call 0x40010a5	       277	deflate.c	FUNCTION_2	CALL_1
0x40010a5	          0x8b4338	            mov eax, dword [rbx + 0x38] 	       523	deflate.c	FUNCTION_8
0x40010a8	            0x31c9	                            xor ecx, ecx	       525	deflate.c	FUNCTION_8
0x40010aa	            0x31f6	                            xor esi, esi	       525	deflate.c	FUNCTION_8
0x40010ac	          0x4801c0	                            add rax, rax	       523	deflate.c	FUNCTION_8
0x40010af	        0x48894350	             mov qword [rbx + 0x50], rax	       523	deflate.c	FUNCTION_8
0x40010b3	          0x8b436c	            mov eax, dword [rbx + 0x6c] 	       525	deflate.c	FUNCTION_8
0x40010b6	          0x8d50ff	                      lea edx, [rax - 1]	       525	deflate.c	FUNCTION_8
0x40010b9	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       525	deflate.c	FUNCTION_8
0x40010bd	        0x66890c50	              mov word [rax + rdx*2], cx	       525	deflate.c	FUNCTION_8
0x40010c1	          0x8b436c	            mov eax, dword [rbx + 0x6c] 	       525	deflate.c	FUNCTION_8
0x40010c4	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	       525	deflate.c	FUNCTION_8
0x40010c8	          0x8d50ff	                      lea edx, [rax - 1]	       525	deflate.c	FUNCTION_8
0x40010cb	          0x4801d2	                            add rdx, rdx	       525	deflate.c	FUNCTION_8
0x40010ce	      0xe800000000	                          call 0x40010d3	       525	deflate.c	FUNCTION_8
0x40010d3	    0x486383ac0000	         movsxd rax, dword [rbx + 0xac] 	       529	deflate.c	FUNCTION_8
0x40010da	    0xc78394000000	               mov dword [rbx + 0x94], 0	       534	deflate.c	FUNCTION_8
0x40010e4	    0x48c783800000	               mov qword [rbx + 0x80], 0	       535	deflate.c	FUNCTION_8
0x40010ef	    0xc7839c000000	               mov dword [rbx + 0x9c], 0	       536	deflate.c	FUNCTION_8
0x40010f9	    0xc783a0000000	               mov dword [rbx + 0xa0], 2	       537	deflate.c	FUNCTION_8
0x4001103	    0xc78388000000	               mov dword [rbx + 0x88], 2	       537	deflate.c	FUNCTION_8
0x400110d	    0xc78390000000	               mov dword [rbx + 0x90], 0	       538	deflate.c	FUNCTION_8
0x4001117	    0xc74368000000	               mov dword [rbx + 0x68], 0	       539	deflate.c	FUNCTION_8
0x400111e	        0x48c1e004	                              shl rax, 4	       529	deflate.c	FUNCTION_8
0x4001122	     0xfb790000000	                   movzx edx, word [rax]	       529	deflate.c	FUNCTION_8
0x4001129	    0x8993a8000000	             mov dword [rbx + 0xa8], edx	       529	deflate.c	FUNCTION_8
0x400112f	     0xfb790000000	                   movzx edx, word [rax]	       530	deflate.c	FUNCTION_8
0x4001136	    0x8993b4000000	             mov dword [rbx + 0xb4], edx	       530	deflate.c	FUNCTION_8
0x400113c	     0xfb790000000	                   movzx edx, word [rax]	       531	deflate.c	FUNCTION_8
0x4001143	    0x480500000000	                              add rax, 0	       529	deflate.c	FUNCTION_8
0x4001149	         0xfb74006	               movzx eax, word [rax + 6]	       532	deflate.c	FUNCTION_8
0x400114d	    0x8993b8000000	             mov dword [rbx + 0xb8], edx	       531	deflate.c	FUNCTION_8
0x4001153	    0x8983a4000000	             mov dword [rbx + 0xa4], eax	       532	deflate.c	FUNCTION_8
0x4001159	            0x31c0	                            xor eax, eax	       280	deflate.c	FUNCTION_2
0x400115b	              0x5b	                                 pop rbx	       281	deflate.c	FUNCTION_2
0x400115c	              0xc3	                                     ret	       281	deflate.c	FUNCTION_2
0x400115d	    0xc7432c000000	               mov dword [rbx + 0x2c], 0	       271	deflate.c	FUNCTION_2	IF_2
0x4001164	      0xb82a000000	                           mov eax, 0x2a	       273	deflate.c	FUNCTION_2
0x4001169	      0xe91dffffff	                           jmp 0x400108b	       273	deflate.c	FUNCTION_2
0x400116e	      0xb8feffffff	                     mov eax, 0xfffffffe	       260	deflate.c	FUNCTION_2	IF_1
0x4001173	              0xc3	                                     ret	       281	deflate.c	FUNCTION_2
0x4001174	      0xb8feffffff	                     mov eax, 0xfffffffe	       260	deflate.c	FUNCTION_2	IF_1
0x4001179	              0x5b	                                 pop rbx	       281	deflate.c	FUNCTION_2
0x400117a	              0xc3	                                     ret	       281	deflate.c	FUNCTION_2
flush_pending	functions,0:WHILE,0:FOR,0:CALL,1:SWITCH,0:ELSE,0:IF,4:DO,0	33
0x4000730	            0x4155	                                push r13	       306	deflate.c	FUNCTION_4
0x4000732	            0x4154	                                push r12	       306	deflate.c	FUNCTION_4
0x4000734	              0x55	                                push rbp	       306	deflate.c	FUNCTION_4
0x4000735	              0x53	                                push rbx	       306	deflate.c	FUNCTION_4
0x4000736	        0x4c8b6738	            mov r12, qword [rdi + 0x38] 	       307	deflate.c	FUNCTION_4
0x400073a	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       310	deflate.c	FUNCTION_4	IF_1
0x400073e	      0x418b542428	            mov edx, dword [r12 + 0x28] 	       308	deflate.c	FUNCTION_4
0x4000743	          0x4839c2	                            cmp rdx, rax	       310	deflate.c	FUNCTION_4	IF_1
0x4000746	          0x4889d5	                            mov rbp, rdx	       308	deflate.c	FUNCTION_4
0x4000749	           0xf47e8	                          cmova ebp, eax	       310	deflate.c	FUNCTION_4	IF_1
0x400074c	            0x85ed	                           test ebp, ebp	       311	deflate.c	FUNCTION_4	IF_2
0x400074e	            0x743e	                            je 0x400078e	       311	deflate.c	FUNCTION_4	IF_2
0x4000750	          0x4889fb	                            mov rbx, rdi	       311	deflate.c	FUNCTION_4	IF_2
0x4000753	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       313	deflate.c	FUNCTION_4	IF_3
0x4000757	          0x4189ed	                           mov r13d, ebp	       314	deflate.c	FUNCTION_4	IF_3	CALL_1
0x400075a	          0x4885ff	                           test rdi, rdi	       313	deflate.c	FUNCTION_4	IF_3
0x400075d	            0x7411	                            je 0x4000770	       313	deflate.c	FUNCTION_4	IF_3
0x400075f	      0x498b742420	            mov rsi, qword [r12 + 0x20] 	       314	deflate.c	FUNCTION_4	IF_3	CALL_1
0x4000764	          0x4c89ea	                            mov rdx, r13	       314	deflate.c	FUNCTION_4	IF_3	CALL_1
0x4000767	      0xe800000000	                          call 0x400076c	       314	deflate.c	FUNCTION_4	IF_3	CALL_1
0x400076c	        0x4c016b18	            add qword [rbx + 0x18], r13 	       315	deflate.c	FUNCTION_4	IF_3
0x4000770	      0x4d016c2420	            add qword [r12 + 0x20], r13 	       317	deflate.c	FUNCTION_4
0x4000775	        0x4c016b28	            add qword [rbx + 0x28], r13 	       318	deflate.c	FUNCTION_4
0x4000779	        0x4c296b20	             sub qword [rbx + 0x20], r13	       319	deflate.c	FUNCTION_4
0x400077d	      0x41296c2428	             sub dword [r12 + 0x28], ebp	       321	deflate.c	FUNCTION_4	IF_4
0x4000782	            0x750a	                           jne 0x400078e	       321	deflate.c	FUNCTION_4	IF_4
0x4000784	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       322	deflate.c	FUNCTION_4	IF_4
0x4000789	      0x4989442420	             mov qword [r12 + 0x20], rax	       322	deflate.c	FUNCTION_4	IF_4
0x400078e	              0x5b	                                 pop rbx	       324	deflate.c	FUNCTION_4
0x400078f	              0x5d	                                 pop rbp	       324	deflate.c	FUNCTION_4
0x4000790	            0x415c	                                 pop r12	       324	deflate.c	FUNCTION_4
0x4000792	            0x415d	                                 pop r13	       324	deflate.c	FUNCTION_4
0x4000794	              0xc3	                                     ret	       324	deflate.c	FUNCTION_4
zlib_deflateEnd	functions,0:WHILE,0:FOR,0:CALL,0:SWITCH,0:ELSE,0:IF,2:DO,0	23
0x40016c0	          0x4885ff	                           test rdi, rdi	       472	deflate.c	FUNCTION_6	IF_1
0x40016c3	            0x743e	                            je 0x4001703	       472	deflate.c	FUNCTION_6	IF_1
0x40016c5	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       472	deflate.c	FUNCTION_6	IF_1
0x40016c9	          0x4885c0	                           test rax, rax	       472	deflate.c	FUNCTION_6	IF_1
0x40016cc	            0x7435	                            je 0x4001703	       472	deflate.c	FUNCTION_6	IF_1
0x40016ce	          0x8b5008	                mov edx, dword [rax + 8]	       475	deflate.c	FUNCTION_6
0x40016d1	          0x83fa2a	                           cmp edx, 0x2a	       476	deflate.c	FUNCTION_6	IF_2
0x40016d4	           0xf95c1	                                setne cl	       476	deflate.c	FUNCTION_6	IF_2
0x40016d7	          0x83fa71	                           cmp edx, 0x71	       476	deflate.c	FUNCTION_6	IF_2
0x40016da	           0xf95c0	                                setne al	       476	deflate.c	FUNCTION_6	IF_2
0x40016dd	            0x84c1	                             test cl, al	       476	deflate.c	FUNCTION_6	IF_2
0x40016df	            0x740d	                            je 0x40016ee	       476	deflate.c	FUNCTION_6	IF_2
0x40016e1	    0x81fa9a020000	                          cmp edx, 0x29a	       476	deflate.c	FUNCTION_6	IF_2
0x40016e7	      0xb8feffffff	                     mov eax, 0xfffffffe	       472	deflate.c	FUNCTION_6	IF_1
0x40016ec	            0x751a	                           jne 0x4001708	       476	deflate.c	FUNCTION_6	IF_2
0x40016ee	            0x31c0	                            xor eax, eax	       483	deflate.c	FUNCTION_6
0x40016f0	          0x83fa71	                           cmp edx, 0x71	       483	deflate.c	FUNCTION_6
0x40016f3	    0x48c747380000	               mov qword [rdi + 0x38], 0	       481	deflate.c	FUNCTION_6
0x40016fb	           0xf95c0	                                setne al	       483	deflate.c	FUNCTION_6
0x40016fe	        0x8d4440fd	              lea eax, [rax + rax*2 - 3]	       483	deflate.c	FUNCTION_6
0x4001702	              0xc3	                                     ret	       483	deflate.c	FUNCTION_6
0x4001703	      0xb8feffffff	                     mov eax, 0xfffffffe	       472	deflate.c	FUNCTION_6	IF_1
0x4001708	            0xf3c3	                                     ret	       484	deflate.c	FUNCTION_6
