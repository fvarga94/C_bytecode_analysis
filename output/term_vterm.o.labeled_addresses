vterm_output_get_buffer_current	WHILE,0:CALL,0:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,0	7
0xb5c	              0x55	                                push rbp	       236	vterm.c	FUNCTION_19
0xb5d	          0x4889e5	                            mov rbp, rsp	       236	vterm.c	FUNCTION_19
0xb60	        0x48897df8	                mov qword [rbp - 8], rdi	       236	vterm.c	FUNCTION_19
0xb64	        0x488b45f8	                mov rax, qword [rbp - 8]	       237	vterm.c	FUNCTION_19
0xb68	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       237	vterm.c	FUNCTION_19
0xb6f	              0x5d	                                 pop rbp	       238	vterm.c	FUNCTION_19
0xb70	              0xc3	                                     ret	       238	vterm.c	FUNCTION_19
vterm_allocator_free	WHILE,0:CALL,0:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,0	17
0x4c2	              0x55	                                push rbp	        86	vterm.c	FUNCTION_7
0x4c3	          0x4889e5	                            mov rbp, rsp	        86	vterm.c	FUNCTION_7
0x4c6	        0x4883ec10	                           sub rsp, 0x10	        86	vterm.c	FUNCTION_7
0x4ca	        0x48897df8	                mov qword [rbp - 8], rdi	        86	vterm.c	FUNCTION_7
0x4ce	        0x488975f0	             mov qword [rbp - 0x10], rsi	        86	vterm.c	FUNCTION_7
0x4d2	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	vterm.c	FUNCTION_7
0x4d6	          0x488b00	                    mov rax, qword [rax]	        87	vterm.c	FUNCTION_7
0x4d9	        0x488b4008	                mov rax, qword [rax + 8]	        87	vterm.c	FUNCTION_7
0x4dd	        0x488b55f8	                mov rdx, qword [rbp - 8]	        87	vterm.c	FUNCTION_7
0x4e1	        0x488b4a08	                mov rcx, qword [rdx + 8]	        87	vterm.c	FUNCTION_7
0x4e5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        87	vterm.c	FUNCTION_7
0x4e9	          0x4889ce	                            mov rsi, rcx	        87	vterm.c	FUNCTION_7
0x4ec	          0x4889d7	                            mov rdi, rdx	        87	vterm.c	FUNCTION_7
0x4ef	            0xffd0	                                call rax	        87	vterm.c	FUNCTION_7
0x4f1	              0x90	                                     nop	        88	vterm.c	FUNCTION_7
0x4f2	              0xc9	                                   leave	        88	vterm.c	FUNCTION_7
0x4f3	              0xc3	                                     ret	        88	vterm.c	FUNCTION_7
vterm_color_equal	WHILE,0:CALL,0:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,0	21
0xdd	              0x55	                                push rbp	        61	vterm_internal.h	FUNCTION_26
0xde	          0x4889e5	                            mov rbp, rsp	        61	vterm_internal.h	FUNCTION_26
0xe1	          0x897df0	             mov dword [rbp - 0x10], edi	        61	vterm_internal.h	FUNCTION_26
0xe4	          0x8975e0	             mov dword [rbp - 0x20], esi	        61	vterm_internal.h	FUNCTION_26
0xe7	         0xfb655f0	            movzx edx, byte [rbp - 0x10]	        62	vterm_internal.h	FUNCTION_26
0xeb	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	        62	vterm_internal.h	FUNCTION_26
0xef	            0x38c2	                              cmp dl, al	        62	vterm_internal.h	FUNCTION_26
0xf1	            0x751f	                           jne 0x4000152	        62	vterm_internal.h	FUNCTION_26
0xf3	         0xfb655f1	             movzx edx, byte [rbp - 0xf]	        62	vterm_internal.h	FUNCTION_26
0xf7	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	        62	vterm_internal.h	FUNCTION_26
0xfb	            0x38c2	                              cmp dl, al	        62	vterm_internal.h	FUNCTION_26
0xfd	            0x7513	                           jne 0x4000152	        62	vterm_internal.h	FUNCTION_26
0xff	         0xfb655f2	             movzx edx, byte [rbp - 0xe]	        62	vterm_internal.h	FUNCTION_26
0x103	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	        62	vterm_internal.h	FUNCTION_26
0x107	            0x38c2	                              cmp dl, al	        62	vterm_internal.h	FUNCTION_26
0x109	            0x7507	                           jne 0x4000152	        62	vterm_internal.h	FUNCTION_26
0x10b	      0xb801000000	                              mov eax, 1	        62	vterm_internal.h	FUNCTION_26
0x110	            0xeb05	                           jmp 0x4000157	        62	vterm_internal.h	FUNCTION_26
0x112	      0xb800000000	                              mov eax, 0	        62	vterm_internal.h	FUNCTION_26
0x117	              0x5d	                                 pop rbp	        63	vterm_internal.h	FUNCTION_26
0x118	              0xc3	                                     ret	        63	vterm_internal.h	FUNCTION_26
vterm_new_with_allocator	WHILE,0:CALL,2:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,0	61
0x2e1	              0x55	                                push rbp	        40	vterm.c	FUNCTION_4
0x2e2	          0x4889e5	                            mov rbp, rsp	        40	vterm.c	FUNCTION_4
0x2e5	        0x4883ec30	                           sub rsp, 0x30	        40	vterm.c	FUNCTION_4
0x2e9	          0x897dec	             mov dword [rbp - 0x14], edi	        40	vterm.c	FUNCTION_4
0x2ec	          0x8975e8	             mov dword [rbp - 0x18], esi	        40	vterm.c	FUNCTION_4
0x2ef	        0x488955e0	             mov qword [rbp - 0x20], rdx	        40	vterm.c	FUNCTION_4
0x2f3	        0x48894dd8	             mov qword [rbp - 0x28], rcx	        40	vterm.c	FUNCTION_4
0x2f7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        42	vterm.c	FUNCTION_4
0x2fb	          0x488b00	                    mov rax, qword [rax]	        42	vterm.c	FUNCTION_4
0x2fe	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        42	vterm.c	FUNCTION_4
0x302	          0x4889d6	                            mov rsi, rdx	        42	vterm.c	FUNCTION_4
0x305	      0xbf28010000	                          mov edi, 0x128	        42	vterm.c	FUNCTION_4
0x30a	            0xffd0	                                call rax	        42	vterm.c	FUNCTION_4
0x30c	        0x488945f8	                mov qword [rbp - 8], rax	        42	vterm.c	FUNCTION_4
0x310	        0x488b45f8	                mov rax, qword [rbp - 8]	        44	vterm.c	FUNCTION_4
0x314	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        44	vterm.c	FUNCTION_4
0x318	          0x488910	                    mov qword [rax], rdx	        44	vterm.c	FUNCTION_4
0x31b	        0x488b45f8	                mov rax, qword [rbp - 8]	        45	vterm.c	FUNCTION_4
0x31f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        45	vterm.c	FUNCTION_4
0x323	        0x48895008	                mov qword [rax + 8], rdx	        45	vterm.c	FUNCTION_4
0x327	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	vterm.c	FUNCTION_4
0x32b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	        47	vterm.c	FUNCTION_4
0x32e	          0x895010	             mov dword [rax + 0x10], edx	        47	vterm.c	FUNCTION_4
0x331	        0x488b45f8	                mov rax, qword [rbp - 8]	        48	vterm.c	FUNCTION_4
0x335	          0x8b55e8	             mov edx, dword [rbp - 0x18]	        48	vterm.c	FUNCTION_4
0x338	          0x895014	             mov dword [rax + 0x14], edx	        48	vterm.c	FUNCTION_4
0x33b	        0x488b45f8	                mov rax, qword [rbp - 8]	        50	vterm.c	FUNCTION_4
0x33f	    0xc74020000000	               mov dword [rax + 0x20], 0	        50	vterm.c	FUNCTION_4
0x346	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	vterm.c	FUNCTION_4
0x34a	    0x48c780d00000	               mov qword [rax + 0xd0], 0	        52	vterm.c	FUNCTION_4
0x355	        0x488b45f8	                mov rax, qword [rbp - 8]	        53	vterm.c	FUNCTION_4
0x359	    0x48c780d80000	               mov qword [rax + 0xd8], 0	        53	vterm.c	FUNCTION_4
0x364	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	vterm.c	FUNCTION_4
0x368	    0x48c780f00000	          mov qword [rax + 0xf0], 0x1f4 	        55	vterm.c	FUNCTION_4
0x373	        0x488b45f8	                mov rax, qword [rbp - 8]	        56	vterm.c	FUNCTION_4
0x377	    0x48c780f80000	               mov qword [rax + 0xf8], 0	        56	vterm.c	FUNCTION_4
0x382	        0x488b45f8	                mov rax, qword [rbp - 8]	        57	vterm.c	FUNCTION_4	CALL_1
0x386	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	        57	vterm.c	FUNCTION_4	CALL_1
0x38d	        0x488b45f8	                mov rax, qword [rbp - 8]	        57	vterm.c	FUNCTION_4	CALL_1
0x391	          0x4889d6	                            mov rsi, rdx	        57	vterm.c	FUNCTION_4	CALL_1
0x394	          0x4889c7	                            mov rdi, rax	        57	vterm.c	FUNCTION_4	CALL_1
0x397	      0xe800000000	                          call 0x40003dc	        57	vterm.c	FUNCTION_4	CALL_1
0x39c	          0x4889c2	                            mov rdx, rax	        57	vterm.c	FUNCTION_4	CALL_1
0x39f	        0x488b45f8	                mov rax, qword [rbp - 8]	        57	vterm.c	FUNCTION_4	CALL_1
0x3a3	    0x488990e80000	             mov qword [rax + 0xe8], rdx	        57	vterm.c	FUNCTION_4	CALL_1
0x3aa	        0x488b45f8	                mov rax, qword [rbp - 8]	        59	vterm.c	FUNCTION_4
0x3ae	    0x48c780080100	          mov qword [rax + 0x108], 0xc8 	        59	vterm.c	FUNCTION_4
0x3b9	        0x488b45f8	                mov rax, qword [rbp - 8]	        60	vterm.c	FUNCTION_4
0x3bd	    0x48c780100100	              mov qword [rax + 0x110], 0	        60	vterm.c	FUNCTION_4
0x3c8	        0x488b45f8	                mov rax, qword [rbp - 8]	        61	vterm.c	FUNCTION_4	CALL_2
0x3cc	    0x488b90080100	           mov rdx, qword [rax + 0x108] 	        61	vterm.c	FUNCTION_4	CALL_2
0x3d3	        0x488b45f8	                mov rax, qword [rbp - 8]	        61	vterm.c	FUNCTION_4	CALL_2
0x3d7	          0x4889d6	                            mov rsi, rdx	        61	vterm.c	FUNCTION_4	CALL_2
0x3da	          0x4889c7	                            mov rdi, rax	        61	vterm.c	FUNCTION_4	CALL_2
0x3dd	      0xe800000000	                          call 0x4000422	        61	vterm.c	FUNCTION_4	CALL_2
0x3e2	          0x4889c2	                            mov rdx, rax	        61	vterm.c	FUNCTION_4	CALL_2
0x3e5	        0x488b45f8	                mov rax, qword [rbp - 8]	        61	vterm.c	FUNCTION_4	CALL_2
0x3e9	    0x488990000100	            mov qword [rax + 0x100], rdx	        61	vterm.c	FUNCTION_4	CALL_2
0x3f0	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	vterm.c	FUNCTION_4
0x3f4	              0xc9	                                   leave	        64	vterm.c	FUNCTION_4
0x3f5	              0xc3	                                     ret	        64	vterm.c	FUNCTION_4
vterm_get_utf8	WHILE,0:CALL,0:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,0	9
0x5a0	              0x55	                                push rbp	       108	vterm.c	FUNCTION_10
0x5a1	          0x4889e5	                            mov rbp, rsp	       108	vterm.c	FUNCTION_10
0x5a4	        0x48897df8	                mov qword [rbp - 8], rdi	       108	vterm.c	FUNCTION_10
0x5a8	        0x488b45f8	                mov rax, qword [rbp - 8]	       109	vterm.c	FUNCTION_10
0x5ac	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       109	vterm.c	FUNCTION_10
0x5b0	          0x83e001	                              and eax, 1	       109	vterm.c	FUNCTION_10
0x5b3	           0xfb6c0	                           movzx eax, al	       109	vterm.c	FUNCTION_10
0x5b6	              0x5d	                                 pop rbp	       110	vterm.c	FUNCTION_10
0x5b7	              0xc3	                                     ret	       110	vterm.c	FUNCTION_10
vterm_output_get_buffer_remaining	WHILE,0:CALL,0:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,0	11
0xb71	              0x55	                                push rbp	       241	vterm.c	FUNCTION_20
0xb72	          0x4889e5	                            mov rbp, rsp	       241	vterm.c	FUNCTION_20
0xb75	        0x48897df8	                mov qword [rbp - 8], rdi	       241	vterm.c	FUNCTION_20
0xb79	        0x488b45f8	                mov rax, qword [rbp - 8]	       242	vterm.c	FUNCTION_20
0xb7d	    0x488b90080100	           mov rdx, qword [rax + 0x108] 	       242	vterm.c	FUNCTION_20
0xb84	        0x488b45f8	                mov rax, qword [rbp - 8]	       242	vterm.c	FUNCTION_20
0xb88	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       242	vterm.c	FUNCTION_20
0xb8f	          0x4829c2	                            sub rdx, rax	       242	vterm.c	FUNCTION_20
0xb92	          0x4889d0	                            mov rax, rdx	       242	vterm.c	FUNCTION_20
0xb95	              0x5d	                                 pop rbp	       243	vterm.c	FUNCTION_20
0xb96	              0xc3	                                     ret	       243	vterm.c	FUNCTION_20
vterm_rect_contains	WHILE,0:CALL,0:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,0	32
0x2e	              0x55	                                push rbp	        64	vterm.h	FUNCTION_28
0x2f	          0x4889e5	                            mov rbp, rsp	        64	vterm.h	FUNCTION_28
0x32	              0x53	                                push rbx	        64	vterm.h	FUNCTION_28
0x33	          0x4889f8	                            mov rax, rdi	        64	vterm.h	FUNCTION_28
0x36	          0x4889c1	                            mov rcx, rax	        64	vterm.h	FUNCTION_28
0x39	          0x4889d3	                            mov rbx, rdx	        64	vterm.h	FUNCTION_28
0x3c	          0x4889f3	                            mov rbx, rsi	        64	vterm.h	FUNCTION_28
0x3f	        0x48894de0	             mov qword [rbp - 0x20], rcx	        64	vterm.h	FUNCTION_28
0x43	        0x48895de8	             mov qword [rbp - 0x18], rbx	        64	vterm.h	FUNCTION_28
0x47	        0x488955d0	             mov qword [rbp - 0x30], rdx	        64	vterm.h	FUNCTION_28
0x4b	          0x8b55d0	             mov edx, dword [rbp - 0x30]	        65	vterm.h	FUNCTION_28
0x4e	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        65	vterm.h	FUNCTION_28
0x51	            0x39c2	                            cmp edx, eax	        66	vterm.h	FUNCTION_28
0x53	            0x7c25	                            jl 0x40000ba	        66	vterm.h	FUNCTION_28
0x55	          0x8b55d0	             mov edx, dword [rbp - 0x30]	        65	vterm.h	FUNCTION_28
0x58	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        65	vterm.h	FUNCTION_28
0x5b	            0x39c2	                            cmp edx, eax	        65	vterm.h	FUNCTION_28
0x5d	            0x7d1b	                           jge 0x40000ba	        65	vterm.h	FUNCTION_28
0x5f	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        66	vterm.h	FUNCTION_28
0x62	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        66	vterm.h	FUNCTION_28
0x65	            0x39c2	                            cmp edx, eax	        65	vterm.h	FUNCTION_28
0x67	            0x7c11	                            jl 0x40000ba	        65	vterm.h	FUNCTION_28
0x69	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        66	vterm.h	FUNCTION_28
0x6c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        66	vterm.h	FUNCTION_28
0x6f	            0x39c2	                            cmp edx, eax	        66	vterm.h	FUNCTION_28
0x71	            0x7d07	                           jge 0x40000ba	        66	vterm.h	FUNCTION_28
0x73	      0xb801000000	                              mov eax, 1	        66	vterm.h	FUNCTION_28
0x78	            0xeb05	                           jmp 0x40000bf	        66	vterm.h	FUNCTION_28
0x7a	      0xb800000000	                              mov eax, 0	        66	vterm.h	FUNCTION_28
0x7f	              0x5b	                                 pop rbx	        67	vterm.h	FUNCTION_28
0x80	              0x5d	                                 pop rbp	        67	vterm.h	FUNCTION_28
0x81	              0xc3	                                     ret	        67	vterm.h	FUNCTION_28
vterm_push_output_vsprintf	WHILE,0:CALL,5:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,1:IF,4	54
0x6b3	              0x55	                                push rbp	       146	vterm.c	FUNCTION_14
0x6b4	          0x4889e5	                            mov rbp, rsp	       146	vterm.c	FUNCTION_14
0x6b7	        0x4883ec30	                           sub rsp, 0x30	       146	vterm.c	FUNCTION_14
0x6bb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       146	vterm.c	FUNCTION_14
0x6bf	        0x488975e0	             mov qword [rbp - 0x20], rsi	       146	vterm.c	FUNCTION_14
0x6c3	        0x488955d8	             mov qword [rbp - 0x28], rdx	       146	vterm.c	FUNCTION_14
0x6c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       153	vterm.c	FUNCTION_14	IF_1	CALL_1
0x6cb	          0x4889c7	                            mov rdi, rax	       153	vterm.c	FUNCTION_14	IF_1	CALL_1
0x6ce	      0xe8b3ffffff	              call sym.outbuffer_is_full	       153	vterm.c	FUNCTION_14	IF_1	CALL_1
0x6d3	            0x85c0	                           test eax, eax	       153	vterm.c	FUNCTION_14	IF_1	CALL_1
0x6d5	     0xf85a9000000	                           jne 0x40007c4	       153	vterm.c	FUNCTION_14	IF_1	CALL_1
0x6db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       160	vterm.c	FUNCTION_14
0x6df	    0x488b90080100	           mov rdx, qword [rax + 0x108] 	       160	vterm.c	FUNCTION_14
0x6e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       160	vterm.c	FUNCTION_14
0x6ea	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       160	vterm.c	FUNCTION_14
0x6f1	          0x4889d6	                            mov rsi, rdx	       159	vterm.c	FUNCTION_14	CALL_3
0x6f4	          0x4829c6	                            sub rsi, rax	       159	vterm.c	FUNCTION_14	CALL_3
0x6f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	vterm.c	FUNCTION_14	CALL_3
0x6fb	    0x488b90000100	           mov rdx, qword [rax + 0x100] 	       159	vterm.c	FUNCTION_14	CALL_3
0x702	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	vterm.c	FUNCTION_14	CALL_3
0x706	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       159	vterm.c	FUNCTION_14	CALL_3
0x70d	        0x488d3c02	                    lea rdi, [rdx + rax]	       159	vterm.c	FUNCTION_14	CALL_3
0x711	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       159	vterm.c	FUNCTION_14	CALL_3
0x715	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       159	vterm.c	FUNCTION_14	CALL_3
0x719	          0x4889d1	                            mov rcx, rdx	       159	vterm.c	FUNCTION_14	CALL_3
0x71c	          0x4889c2	                            mov rdx, rax	       159	vterm.c	FUNCTION_14	CALL_3
0x71f	      0xe800000000	                          call 0x4000764	       159	vterm.c	FUNCTION_14	CALL_3
0x724	          0x8945fc	                mov dword [rbp - 4], eax	       159	vterm.c	FUNCTION_14	CALL_3
0x727	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       163	vterm.c	FUNCTION_14	IF_2
0x72b	    0x488b80080100	           mov rax, qword [rax + 0x108] 	       163	vterm.c	FUNCTION_14	IF_2
0x732	            0x89c2	                            mov edx, eax	       163	vterm.c	FUNCTION_14	IF_2
0x734	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       163	vterm.c	FUNCTION_14	IF_2
0x738	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       163	vterm.c	FUNCTION_14	IF_2
0x73f	            0x29c2	                            sub edx, eax	       163	vterm.c	FUNCTION_14	IF_2
0x741	            0x89d0	                            mov eax, edx	       163	vterm.c	FUNCTION_14	IF_2
0x743	          0x3b45fc	                cmp eax, dword [rbp - 4]	       163	vterm.c	FUNCTION_14	IF_2
0x746	            0x751c	                           jne 0x40007a4	       163	vterm.c	FUNCTION_14	IF_2
0x748	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       165	vterm.c	FUNCTION_14	IF_2
0x74c	    0x488b80080100	           mov rax, qword [rax + 0x108] 	       165	vterm.c	FUNCTION_14	IF_2
0x753	        0x488d50ff	                      lea rdx, [rax - 1]	       165	vterm.c	FUNCTION_14	IF_2
0x757	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       165	vterm.c	FUNCTION_14	IF_2
0x75b	    0x488990100100	            mov qword [rax + 0x110], rdx	       165	vterm.c	FUNCTION_14	IF_2
0x762	            0xeb21	                           jmp 0x40007c5	       165	vterm.c	FUNCTION_14	IF_2
0x764	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       168	vterm.c	FUNCTION_14	ELSE_1
0x768	    0x488b90100100	           mov rdx, qword [rax + 0x110] 	       168	vterm.c	FUNCTION_14	ELSE_1
0x76f	          0x8b45fc	                mov eax, dword [rbp - 4]	       168	vterm.c	FUNCTION_14	ELSE_1
0x772	            0x4898	                                    cdqe	       168	vterm.c	FUNCTION_14	ELSE_1
0x774	          0x4801c2	                            add rdx, rax	       168	vterm.c	FUNCTION_14	ELSE_1
0x777	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       168	vterm.c	FUNCTION_14	ELSE_1
0x77b	    0x488990100100	            mov qword [rax + 0x110], rdx	       168	vterm.c	FUNCTION_14	ELSE_1
0x782	            0xeb01	                           jmp 0x40007c5	       168	vterm.c	FUNCTION_14	ELSE_1
0x784	              0x90	                                     nop	       155	vterm.c	FUNCTION_14	IF_1
0x785	              0xc9	                                   leave	       182	vterm.c	FUNCTION_14
0x786	              0xc3	                                     ret	       182	vterm.c	FUNCTION_14
vterm_output_get_buffer_size	WHILE,0:CALL,0:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,0	7
0xb47	              0x55	                                push rbp	       231	vterm.c	FUNCTION_18
0xb48	          0x4889e5	                            mov rbp, rsp	       231	vterm.c	FUNCTION_18
0xb4b	        0x48897df8	                mov qword [rbp - 8], rdi	       231	vterm.c	FUNCTION_18
0xb4f	        0x488b45f8	                mov rax, qword [rbp - 8]	       232	vterm.c	FUNCTION_18
0xb53	    0x488b80080100	           mov rax, qword [rax + 0x108] 	       232	vterm.c	FUNCTION_18
0xb5a	              0x5d	                                 pop rbp	       233	vterm.c	FUNCTION_18
0xb5b	              0xc3	                                     ret	       233	vterm.c	FUNCTION_18
vterm_push_output_sprintf	WHILE,0:CALL,3:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,0	41
0x787	              0x55	                                push rbp	       185	vterm.c	FUNCTION_15
0x788	          0x4889e5	                            mov rbp, rsp	       185	vterm.c	FUNCTION_15
0x78b	    0x4881ece00000	                           sub rsp, 0xe0	       185	vterm.c	FUNCTION_15
0x792	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       185	vterm.c	FUNCTION_15
0x799	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       185	vterm.c	FUNCTION_15
0x7a0	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       185	vterm.c	FUNCTION_15
0x7a7	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       185	vterm.c	FUNCTION_15
0x7ae	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       185	vterm.c	FUNCTION_15
0x7b5	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       185	vterm.c	FUNCTION_15
0x7bc	            0x84c0	                             test al, al	       185	vterm.c	FUNCTION_15
0x7be	            0x7420	                            je 0x4000820	       185	vterm.c	FUNCTION_15
0x7c0	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       185	vterm.c	FUNCTION_15
0x7c4	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       185	vterm.c	FUNCTION_15
0x7c8	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       185	vterm.c	FUNCTION_15
0x7cc	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       185	vterm.c	FUNCTION_15
0x7d0	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       185	vterm.c	FUNCTION_15
0x7d4	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       185	vterm.c	FUNCTION_15
0x7d8	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       185	vterm.c	FUNCTION_15
0x7dc	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       185	vterm.c	FUNCTION_15
0x7e0	    0x64488b042528	                mov rax, qword fs:[0x28]	       185	vterm.c	FUNCTION_15
0x7e9	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       185	vterm.c	FUNCTION_15
0x7f0	            0x31c0	                            xor eax, eax	       185	vterm.c	FUNCTION_15
0x7f2	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       187	vterm.c	FUNCTION_15	CALL_1
0x7fc	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       187	vterm.c	FUNCTION_15	CALL_1
0x806	        0x488d4510	                   lea rax, [rbp + 0x10]	       187	vterm.c	FUNCTION_15	CALL_1
0x80a	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       187	vterm.c	FUNCTION_15	CALL_1
0x811	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       187	vterm.c	FUNCTION_15	CALL_1
0x818	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       187	vterm.c	FUNCTION_15	CALL_1
0x81f	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       188	vterm.c	FUNCTION_15	CALL_2
0x826	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       188	vterm.c	FUNCTION_15	CALL_2
0x82d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       188	vterm.c	FUNCTION_15	CALL_2
0x834	          0x4889ce	                            mov rsi, rcx	       188	vterm.c	FUNCTION_15	CALL_2
0x837	          0x4889c7	                            mov rdi, rax	       188	vterm.c	FUNCTION_15	CALL_2
0x83a	      0xe800000000	                          call 0x400087f	       188	vterm.c	FUNCTION_15	CALL_2
0x83f	              0x90	                                     nop	       190	vterm.c	FUNCTION_15
0x840	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       190	vterm.c	FUNCTION_15
0x847	    0x644833042528	                xor rax, qword fs:[0x28]	       190	vterm.c	FUNCTION_15
0x850	            0x7405	                            je 0x4000897	       190	vterm.c	FUNCTION_15
0x852	      0xe800000000	                          call 0x4000897	       190	vterm.c	FUNCTION_15
0x857	              0xc9	                                   leave	       190	vterm.c	FUNCTION_15
0x858	              0xc3	                                     ret	       190	vterm.c	FUNCTION_15
vterm_set_utf8	WHILE,0:CALL,0:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,0	17
0x5b8	              0x55	                                push rbp	       113	vterm.c	FUNCTION_11
0x5b9	          0x4889e5	                            mov rbp, rsp	       113	vterm.c	FUNCTION_11
0x5bc	        0x48897df8	                mov qword [rbp - 8], rdi	       113	vterm.c	FUNCTION_11
0x5c0	          0x8975f4	              mov dword [rbp - 0xc], esi	       113	vterm.c	FUNCTION_11
0x5c3	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       114	vterm.c	FUNCTION_11
0x5c6	          0x83e001	                              and eax, 1	       114	vterm.c	FUNCTION_11
0x5c9	            0x89c2	                            mov edx, eax	       114	vterm.c	FUNCTION_11
0x5cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       114	vterm.c	FUNCTION_11
0x5cf	            0x89d1	                            mov ecx, edx	       114	vterm.c	FUNCTION_11
0x5d1	          0x83e101	                              and ecx, 1	       114	vterm.c	FUNCTION_11
0x5d4	         0xfb65018	           movzx edx, byte [rax + 0x18] 	       114	vterm.c	FUNCTION_11
0x5d8	          0x83e2fe	                     and edx, 0xfffffffe	       114	vterm.c	FUNCTION_11
0x5db	             0x9ca	                             or edx, ecx	       114	vterm.c	FUNCTION_11
0x5dd	          0x885018	               mov byte [rax + 0x18], dl	       114	vterm.c	FUNCTION_11
0x5e0	              0x90	                                     nop	       115	vterm.c	FUNCTION_11
0x5e1	              0x5d	                                 pop rbp	       115	vterm.c	FUNCTION_11
0x5e2	              0xc3	                                     ret	       115	vterm.c	FUNCTION_11
vterm_pos_cmp	WHILE,0:CALL,0:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,0	19
0x0	              0x55	                                push rbp	        46	vterm.h	FUNCTION_27
0x1	          0x4889e5	                            mov rbp, rsp	        46	vterm.h	FUNCTION_27
0x4	        0x48897df0	             mov qword [rbp - 0x10], rdi	        46	vterm.h	FUNCTION_27
0x8	        0x488975e0	             mov qword [rbp - 0x20], rsi	        46	vterm.h	FUNCTION_27
0xc	          0x8b55f0	             mov edx, dword [rbp - 0x10]	        47	vterm.h	FUNCTION_27
0xf	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        47	vterm.h	FUNCTION_27
0x12	            0x39c2	                            cmp edx, eax	        47	vterm.h	FUNCTION_27
0x14	            0x750c	                           jne 0x4000062	        47	vterm.h	FUNCTION_27
0x16	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        47	vterm.h	FUNCTION_27
0x19	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        47	vterm.h	FUNCTION_27
0x1c	            0x29c2	                            sub edx, eax	        47	vterm.h	FUNCTION_27
0x1e	            0x89d0	                            mov eax, edx	        47	vterm.h	FUNCTION_27
0x20	            0xeb0a	                           jmp 0x400006c	        47	vterm.h	FUNCTION_27
0x22	          0x8b55f0	             mov edx, dword [rbp - 0x10]	        47	vterm.h	FUNCTION_27
0x25	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        47	vterm.h	FUNCTION_27
0x28	            0x29c2	                            sub edx, eax	        47	vterm.h	FUNCTION_27
0x2a	            0x89d0	                            mov eax, edx	        47	vterm.h	FUNCTION_27
0x2c	              0x5d	                                 pop rbp	        48	vterm.h	FUNCTION_27
0x2d	              0xc3	                                     ret	        48	vterm.h	FUNCTION_27
vterm_output_read	WHILE,0:CALL,2:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,2	46
0xb97	              0x55	                                push rbp	       246	vterm.c	FUNCTION_21
0xb98	          0x4889e5	                            mov rbp, rsp	       246	vterm.c	FUNCTION_21
0xb9b	        0x4883ec20	                           sub rsp, 0x20	       246	vterm.c	FUNCTION_21
0xb9f	        0x48897df8	                mov qword [rbp - 8], rdi	       246	vterm.c	FUNCTION_21
0xba3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       246	vterm.c	FUNCTION_21
0xba7	        0x488955e8	             mov qword [rbp - 0x18], rdx	       246	vterm.c	FUNCTION_21
0xbab	        0x488b45f8	                mov rax, qword [rbp - 8]	       247	vterm.c	FUNCTION_21	IF_1
0xbaf	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       247	vterm.c	FUNCTION_21	IF_1
0xbb6	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       247	vterm.c	FUNCTION_21	IF_1
0xbba	            0x730f	                           jae 0x4000c0b	       247	vterm.c	FUNCTION_21	IF_1
0xbbc	        0x488b45f8	                mov rax, qword [rbp - 8]	       248	vterm.c	FUNCTION_21	IF_1
0xbc0	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       248	vterm.c	FUNCTION_21	IF_1
0xbc7	        0x488945e8	             mov qword [rbp - 0x18], rax	       248	vterm.c	FUNCTION_21	IF_1
0xbcb	        0x488b45f8	                mov rax, qword [rbp - 8]	       250	vterm.c	FUNCTION_21	CALL_1
0xbcf	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       250	vterm.c	FUNCTION_21	CALL_1
0xbd6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       250	vterm.c	FUNCTION_21	CALL_1
0xbda	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       250	vterm.c	FUNCTION_21	CALL_1
0xbde	          0x4889ce	                            mov rsi, rcx	       250	vterm.c	FUNCTION_21	CALL_1
0xbe1	          0x4889c7	                            mov rdi, rax	       250	vterm.c	FUNCTION_21	CALL_1
0xbe4	      0xe800000000	                          call 0x4000c29	       250	vterm.c	FUNCTION_21	CALL_1
0xbe9	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	vterm.c	FUNCTION_21	IF_2
0xbed	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       252	vterm.c	FUNCTION_21	IF_2
0xbf4	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       252	vterm.c	FUNCTION_21	IF_2
0xbf8	            0x763a	                           jbe 0x4000c74	       252	vterm.c	FUNCTION_21	IF_2
0xbfa	        0x488b45f8	                mov rax, qword [rbp - 8]	       253	vterm.c	FUNCTION_21	CALL_2
0xbfe	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       253	vterm.c	FUNCTION_21	CALL_2
0xc05	        0x482b45e8	             sub rax, qword [rbp - 0x18]	       253	vterm.c	FUNCTION_21	CALL_2
0xc09	          0x4889c2	                            mov rdx, rax	       253	vterm.c	FUNCTION_21	CALL_2
0xc0c	        0x488b45f8	                mov rax, qword [rbp - 8]	       253	vterm.c	FUNCTION_21	CALL_2
0xc10	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       253	vterm.c	FUNCTION_21	CALL_2
0xc17	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       253	vterm.c	FUNCTION_21	CALL_2
0xc1b	          0x4801c1	                            add rcx, rax	       253	vterm.c	FUNCTION_21	CALL_2
0xc1e	        0x488b45f8	                mov rax, qword [rbp - 8]	       253	vterm.c	FUNCTION_21	CALL_2
0xc22	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       253	vterm.c	FUNCTION_21	CALL_2
0xc29	          0x4889ce	                            mov rsi, rcx	       253	vterm.c	FUNCTION_21	CALL_2
0xc2c	          0x4889c7	                            mov rdi, rax	       253	vterm.c	FUNCTION_21	CALL_2
0xc2f	      0xe800000000	                          call 0x4000c74	       253	vterm.c	FUNCTION_21	CALL_2
0xc34	        0x488b45f8	                mov rax, qword [rbp - 8]	       255	vterm.c	FUNCTION_21
0xc38	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       255	vterm.c	FUNCTION_21
0xc3f	        0x482b45e8	             sub rax, qword [rbp - 0x18]	       255	vterm.c	FUNCTION_21
0xc43	          0x4889c2	                            mov rdx, rax	       255	vterm.c	FUNCTION_21
0xc46	        0x488b45f8	                mov rax, qword [rbp - 8]	       255	vterm.c	FUNCTION_21
0xc4a	    0x488990100100	            mov qword [rax + 0x110], rdx	       255	vterm.c	FUNCTION_21
0xc51	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       257	vterm.c	FUNCTION_21
0xc55	              0xc9	                                   leave	       258	vterm.c	FUNCTION_21
0xc56	              0xc3	                                     ret	       258	vterm.c	FUNCTION_21
vterm_set_size	WHILE,0:CALL,0:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,1	33
0x52f	              0x55	                                push rbp	        99	vterm.c	FUNCTION_9
0x530	          0x4889e5	                            mov rbp, rsp	        99	vterm.c	FUNCTION_9
0x533	        0x4883ec10	                           sub rsp, 0x10	        99	vterm.c	FUNCTION_9
0x537	        0x48897df8	                mov qword [rbp - 8], rdi	        99	vterm.c	FUNCTION_9
0x53b	          0x8975f4	              mov dword [rbp - 0xc], esi	        99	vterm.c	FUNCTION_9
0x53e	          0x8955f0	             mov dword [rbp - 0x10], edx	        99	vterm.c	FUNCTION_9
0x541	        0x488b45f8	                mov rax, qword [rbp - 8]	       100	vterm.c	FUNCTION_9
0x545	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       100	vterm.c	FUNCTION_9
0x548	          0x895010	             mov dword [rax + 0x10], edx	       100	vterm.c	FUNCTION_9
0x54b	        0x488b45f8	                mov rax, qword [rbp - 8]	       101	vterm.c	FUNCTION_9
0x54f	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       101	vterm.c	FUNCTION_9
0x552	          0x895014	             mov dword [rax + 0x14], edx	       101	vterm.c	FUNCTION_9
0x555	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	vterm.c	FUNCTION_9	IF_1
0x559	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       103	vterm.c	FUNCTION_9	IF_1
0x560	          0x4885c0	                           test rax, rax	       103	vterm.c	FUNCTION_9	IF_1
0x563	            0x7438	                            je 0x40005dd	       103	vterm.c	FUNCTION_9	IF_1
0x565	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	vterm.c	FUNCTION_9	IF_1
0x569	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       103	vterm.c	FUNCTION_9	IF_1
0x570	        0x488b4030	            mov rax, qword [rax + 0x30] 	       103	vterm.c	FUNCTION_9	IF_1
0x574	          0x4885c0	                           test rax, rax	       103	vterm.c	FUNCTION_9	IF_1
0x577	            0x7424	                            je 0x40005dd	       103	vterm.c	FUNCTION_9	IF_1
0x579	        0x488b45f8	                mov rax, qword [rbp - 8]	       104	vterm.c	FUNCTION_9	IF_1
0x57d	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       104	vterm.c	FUNCTION_9	IF_1
0x584	        0x488b4030	            mov rax, qword [rax + 0x30] 	       104	vterm.c	FUNCTION_9	IF_1
0x588	        0x488b55f8	                mov rdx, qword [rbp - 8]	       104	vterm.c	FUNCTION_9	IF_1
0x58c	    0x488b92d80000	            mov rdx, qword [rdx + 0xd8] 	       104	vterm.c	FUNCTION_9	IF_1
0x593	          0x8b75f0	             mov esi, dword [rbp - 0x10]	       104	vterm.c	FUNCTION_9	IF_1
0x596	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       104	vterm.c	FUNCTION_9	IF_1
0x599	            0x89cf	                            mov edi, ecx	       104	vterm.c	FUNCTION_9	IF_1
0x59b	            0xffd0	                                call rax	       104	vterm.c	FUNCTION_9	IF_1
0x59d	              0x90	                                     nop	       105	vterm.c	FUNCTION_9
0x59e	              0xc9	                                   leave	       105	vterm.c	FUNCTION_9
0x59f	              0xc3	                                     ret	       105	vterm.c	FUNCTION_9
vterm_copy_cells	WHILE,0:CALL,0:DO,0:SWITCH,0:FOR,2:functions,0:ELSE,2:IF,2	91
0xec1	              0x55	                                push rbp	       369	vterm.c	FUNCTION_25
0xec2	          0x4889e5	                            mov rbp, rsp	       369	vterm.c	FUNCTION_25
0xec5	        0x4883ec70	                           sub rsp, 0x70	       369	vterm.c	FUNCTION_25
0xec9	          0x4889f8	                            mov rax, rdi	       369	vterm.c	FUNCTION_25
0xecc	          0x4989f2	                            mov r10, rsi	       369	vterm.c	FUNCTION_25
0xecf	          0x4889c6	                            mov rsi, rax	       369	vterm.c	FUNCTION_25
0xed2	          0x4889d7	                            mov rdi, rdx	       369	vterm.c	FUNCTION_25
0xed5	          0x4c89d7	                            mov rdi, r10	       369	vterm.c	FUNCTION_25
0xed8	        0x488975b0	             mov qword [rbp - 0x50], rsi	       369	vterm.c	FUNCTION_25
0xedc	        0x48897db8	             mov qword [rbp - 0x48], rdi	       369	vterm.c	FUNCTION_25
0xee0	        0x488955a0	             mov qword [rbp - 0x60], rdx	       369	vterm.c	FUNCTION_25
0xee4	        0x48894da8	             mov qword [rbp - 0x58], rcx	       369	vterm.c	FUNCTION_25
0xee8	        0x4c894598	              mov qword [rbp - 0x68], r8	       369	vterm.c	FUNCTION_25
0xeec	        0x4c894d90	              mov qword [rbp - 0x70], r9	       369	vterm.c	FUNCTION_25
0xef0	          0x8b55a0	             mov edx, dword [rbp - 0x60]	       370	vterm.c	FUNCTION_25
0xef3	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       370	vterm.c	FUNCTION_25
0xef6	            0x29c2	                            sub edx, eax	       370	vterm.c	FUNCTION_25
0xef8	            0x89d0	                            mov eax, edx	       370	vterm.c	FUNCTION_25
0xefa	          0x8945d8	             mov dword [rbp - 0x28], eax	       370	vterm.c	FUNCTION_25
0xefd	          0x8b55a8	             mov edx, dword [rbp - 0x58]	       371	vterm.c	FUNCTION_25
0xf00	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       371	vterm.c	FUNCTION_25
0xf03	            0x29c2	                            sub edx, eax	       371	vterm.c	FUNCTION_25
0xf05	            0x89d0	                            mov eax, edx	       371	vterm.c	FUNCTION_25
0xf07	          0x8945dc	             mov dword [rbp - 0x24], eax	       371	vterm.c	FUNCTION_25
0xf0a	        0x837dd800	               cmp dword [rbp - 0x28], 0	       378	vterm.c	FUNCTION_25	IF_1
0xf0e	            0x791b	                           jns 0x4000f6b	       378	vterm.c	FUNCTION_25	IF_1
0xf10	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       379	vterm.c	FUNCTION_25	IF_1
0xf13	          0x83e801	                              sub eax, 1	       379	vterm.c	FUNCTION_25	IF_1
0xf16	          0x8945c0	             mov dword [rbp - 0x40], eax	       379	vterm.c	FUNCTION_25	IF_1
0xf19	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       380	vterm.c	FUNCTION_25	IF_1
0xf1c	          0x83e801	                              sub eax, 1	       380	vterm.c	FUNCTION_25	IF_1
0xf1f	          0x8945c4	             mov dword [rbp - 0x3c], eax	       380	vterm.c	FUNCTION_25	IF_1
0xf22	    0xc745d0ffffff	     mov dword [rbp - 0x30], 0xffffffff 	       381	vterm.c	FUNCTION_25	IF_1
0xf29	            0xeb13	                           jmp 0x4000f7e	       381	vterm.c	FUNCTION_25	IF_1
0xf2b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       384	vterm.c	FUNCTION_25	ELSE_1
0xf2e	          0x8945c0	             mov dword [rbp - 0x40], eax	       384	vterm.c	FUNCTION_25	ELSE_1
0xf31	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       385	vterm.c	FUNCTION_25	ELSE_1
0xf34	          0x8945c4	             mov dword [rbp - 0x3c], eax	       385	vterm.c	FUNCTION_25	ELSE_1
0xf37	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       386	vterm.c	FUNCTION_25	ELSE_1
0xf3e	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       389	vterm.c	FUNCTION_25	IF_2
0xf42	            0x791b	                           jns 0x4000f9f	       389	vterm.c	FUNCTION_25	IF_2
0xf44	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       390	vterm.c	FUNCTION_25	IF_2
0xf47	          0x83e801	                              sub eax, 1	       390	vterm.c	FUNCTION_25	IF_2
0xf4a	          0x8945c8	             mov dword [rbp - 0x38], eax	       390	vterm.c	FUNCTION_25	IF_2
0xf4d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       391	vterm.c	FUNCTION_25	IF_2
0xf50	          0x83e801	                              sub eax, 1	       391	vterm.c	FUNCTION_25	IF_2
0xf53	          0x8945cc	             mov dword [rbp - 0x34], eax	       391	vterm.c	FUNCTION_25	IF_2
0xf56	    0xc745d4ffffff	     mov dword [rbp - 0x2c], 0xffffffff 	       392	vterm.c	FUNCTION_25	IF_2
0xf5d	            0xeb13	                           jmp 0x4000fb2	       392	vterm.c	FUNCTION_25	IF_2
0xf5f	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       395	vterm.c	FUNCTION_25	ELSE_2
0xf62	          0x8945c8	             mov dword [rbp - 0x38], eax	       395	vterm.c	FUNCTION_25	ELSE_2
0xf65	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       396	vterm.c	FUNCTION_25	ELSE_2
0xf68	          0x8945cc	             mov dword [rbp - 0x34], eax	       396	vterm.c	FUNCTION_25	ELSE_2
0xf6b	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	       397	vterm.c	FUNCTION_25	ELSE_2
0xf72	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       400	vterm.c	FUNCTION_25	FOR_1
0xf75	          0x8945e0	             mov dword [rbp - 0x20], eax	       400	vterm.c	FUNCTION_25	FOR_1
0xf78	            0xeb51	                           jmp 0x400100b	       400	vterm.c	FUNCTION_25	FOR_1
0xf7a	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xf7d	          0x8945e4	             mov dword [rbp - 0x1c], eax	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xf80	            0xeb36	                           jmp 0x4000ff8	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xf82	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       403	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xf85	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       403	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xf88	             0x1d0	                            add eax, edx	       403	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xf8a	          0x8945f0	             mov dword [rbp - 0x10], eax	       403	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xf8d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       404	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xf90	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       404	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xf93	             0x1d0	                            add eax, edx	       404	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xf95	          0x8945f4	              mov dword [rbp - 0xc], eax	       404	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xf98	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       405	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xf9c	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       405	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xfa0	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       405	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xfa4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       405	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xfa8	          0x4889cf	                            mov rdi, rcx	       405	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xfab	            0xffd0	                                call rax	       405	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xfad	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xfb0	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xfb3	             0x1d0	                            add eax, edx	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xfb5	          0x8945e4	             mov dword [rbp - 0x1c], eax	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xfb8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xfbb	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xfbe	            0x75c2	                           jne 0x4000fc2	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0xfc0	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       400	vterm.c	FUNCTION_25	FOR_1
0xfc3	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       400	vterm.c	FUNCTION_25	FOR_1
0xfc6	             0x1d0	                            add eax, edx	       400	vterm.c	FUNCTION_25	FOR_1
0xfc8	          0x8945e0	             mov dword [rbp - 0x20], eax	       400	vterm.c	FUNCTION_25	FOR_1
0xfcb	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       400	vterm.c	FUNCTION_25	FOR_1
0xfce	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       400	vterm.c	FUNCTION_25	FOR_1
0xfd1	            0x75a7	                           jne 0x4000fba	       400	vterm.c	FUNCTION_25	FOR_1
0xfd3	              0x90	                                     nop	       407	vterm.c	FUNCTION_25
0xfd4	              0xc9	                                   leave	       407	vterm.c	FUNCTION_25
0xfd5	              0xc3	                                     ret	       407	vterm.c	FUNCTION_25
vterm_push_output_sprintf_dcs	WHILE,0:CALL,7:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,1:IF,2	76
0x9ca	              0x55	                                push rbp	       211	vterm.c	FUNCTION_17
0x9cb	          0x4889e5	                            mov rbp, rsp	       211	vterm.c	FUNCTION_17
0x9ce	    0x4881ecf00000	                           sub rsp, 0xf0	       211	vterm.c	FUNCTION_17
0x9d5	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       211	vterm.c	FUNCTION_17
0x9dc	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       211	vterm.c	FUNCTION_17
0x9e3	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       211	vterm.c	FUNCTION_17
0x9ea	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       211	vterm.c	FUNCTION_17
0x9f1	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       211	vterm.c	FUNCTION_17
0x9f8	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       211	vterm.c	FUNCTION_17
0x9ff	            0x84c0	                             test al, al	       211	vterm.c	FUNCTION_17
0xa01	            0x7420	                            je 0x4000a63	       211	vterm.c	FUNCTION_17
0xa03	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       211	vterm.c	FUNCTION_17
0xa07	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       211	vterm.c	FUNCTION_17
0xa0b	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       211	vterm.c	FUNCTION_17
0xa0f	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       211	vterm.c	FUNCTION_17
0xa13	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       211	vterm.c	FUNCTION_17
0xa17	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       211	vterm.c	FUNCTION_17
0xa1b	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       211	vterm.c	FUNCTION_17
0xa1f	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       211	vterm.c	FUNCTION_17
0xa23	    0x64488b042528	                mov rax, qword fs:[0x28]	       211	vterm.c	FUNCTION_17
0xa2c	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       211	vterm.c	FUNCTION_17
0xa33	            0x31c0	                            xor eax, eax	       211	vterm.c	FUNCTION_17
0xa35	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       212	vterm.c	FUNCTION_17
0xa3c	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       212	vterm.c	FUNCTION_17
0xa43	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       212	vterm.c	FUNCTION_17
0xa4a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       215	vterm.c	FUNCTION_17	IF_1
0xa51	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       215	vterm.c	FUNCTION_17	IF_1
0xa55	          0x83e002	                              and eax, 2	       215	vterm.c	FUNCTION_17	IF_1
0xa58	            0x84c0	                             test al, al	       215	vterm.c	FUNCTION_17	IF_1
0xa5a	            0x7520	                           jne 0x4000abc	       215	vterm.c	FUNCTION_17	IF_1
0xa5c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       216	vterm.c	FUNCTION_17	CALL_1
0xa63	      0xba50000000	                           mov edx, 0x50	       216	vterm.c	FUNCTION_17	CALL_1
0xa68	      0xbe00000000	                              mov esi, 0	       216	vterm.c	FUNCTION_17	CALL_1
0xa6d	          0x4889c7	                            mov rdi, rax	       216	vterm.c	FUNCTION_17	CALL_1
0xa70	      0xb800000000	                              mov eax, 0	       216	vterm.c	FUNCTION_17	CALL_1
0xa75	      0xe800000000	                          call 0x4000aba	       216	vterm.c	FUNCTION_17	CALL_1
0xa7a	            0xeb1e	                           jmp 0x4000ada	       216	vterm.c	FUNCTION_17	CALL_1
0xa7c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       218	vterm.c	FUNCTION_17	CALL_2
0xa83	      0xba90000000	                           mov edx, 0x90	       218	vterm.c	FUNCTION_17	CALL_2
0xa88	      0xbe00000000	                              mov esi, 0	       218	vterm.c	FUNCTION_17	CALL_2
0xa8d	          0x4889c7	                            mov rdi, rax	       218	vterm.c	FUNCTION_17	CALL_2
0xa90	      0xb800000000	                              mov eax, 0	       218	vterm.c	FUNCTION_17	CALL_2
0xa95	      0xe800000000	                          call 0x4000ada	       218	vterm.c	FUNCTION_17	CALL_2
0xa9a	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       220	vterm.c	FUNCTION_17	CALL_3
0xaa4	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       220	vterm.c	FUNCTION_17	CALL_3
0xaae	        0x488d4510	                   lea rax, [rbp + 0x10]	       220	vterm.c	FUNCTION_17	CALL_3
0xab2	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       220	vterm.c	FUNCTION_17	CALL_3
0xab9	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       220	vterm.c	FUNCTION_17	CALL_3
0xac0	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       220	vterm.c	FUNCTION_17	CALL_3
0xac7	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       221	vterm.c	FUNCTION_17	CALL_4
0xace	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	       221	vterm.c	FUNCTION_17	CALL_4
0xad5	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       221	vterm.c	FUNCTION_17	CALL_4
0xadc	          0x4889ce	                            mov rsi, rcx	       221	vterm.c	FUNCTION_17	CALL_4
0xadf	          0x4889c7	                            mov rdi, rax	       221	vterm.c	FUNCTION_17	CALL_4
0xae2	      0xe800000000	                          call 0x4000b27	       221	vterm.c	FUNCTION_17	CALL_4
0xae7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       224	vterm.c	FUNCTION_17	CALL_6
0xaee	      0xba00000000	                              mov edx, 0	       224	vterm.c	FUNCTION_17	CALL_6
0xaf3	      0xbe9c000000	                           mov esi, 0x9c	       224	vterm.c	FUNCTION_17	CALL_6
0xaf8	          0x4889c7	                            mov rdi, rax	       224	vterm.c	FUNCTION_17	CALL_6
0xafb	      0xb800000000	                              mov eax, 0	       224	vterm.c	FUNCTION_17	CALL_6
0xb00	      0xe800000000	                          call 0x4000b45	       224	vterm.c	FUNCTION_17	CALL_6
0xb05	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       226	vterm.c	FUNCTION_17	IF_2	CALL_7
0xb0c	          0x4889c7	                            mov rdi, rax	       226	vterm.c	FUNCTION_17	IF_2	CALL_7
0xb0f	      0xe872fbffff	              call sym.outbuffer_is_full	       226	vterm.c	FUNCTION_17	IF_2	CALL_7
0xb14	            0x85c0	                           test eax, eax	       226	vterm.c	FUNCTION_17	IF_2	CALL_7
0xb16	            0x7415	                            je 0x4000b6d	       226	vterm.c	FUNCTION_17	IF_2	CALL_7
0xb18	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       227	vterm.c	FUNCTION_17	IF_2
0xb1f	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       227	vterm.c	FUNCTION_17	IF_2
0xb26	    0x488990100100	            mov qword [rax + 0x110], rdx	       227	vterm.c	FUNCTION_17	IF_2
0xb2d	              0x90	                                     nop	       228	vterm.c	FUNCTION_17
0xb2e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       228	vterm.c	FUNCTION_17
0xb35	    0x644833042528	                xor rax, qword fs:[0x28]	       228	vterm.c	FUNCTION_17
0xb3e	            0x7405	                            je 0x4000b85	       228	vterm.c	FUNCTION_17
0xb40	      0xe800000000	                          call 0x4000b85	       228	vterm.c	FUNCTION_17
0xb45	              0xc9	                                   leave	       228	vterm.c	FUNCTION_17
0xb46	              0xc3	                                     ret	       228	vterm.c	FUNCTION_17
vterm_rect_move	WHILE,0:CALL,0:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,0	32
0x82	              0x55	                                push rbp	        76	vterm.h	FUNCTION_29
0x83	          0x4889e5	                            mov rbp, rsp	        76	vterm.h	FUNCTION_29
0x86	        0x48897df8	                mov qword [rbp - 8], rdi	        76	vterm.h	FUNCTION_29
0x8a	          0x8975f4	              mov dword [rbp - 0xc], esi	        76	vterm.h	FUNCTION_29
0x8d	          0x8955f0	             mov dword [rbp - 0x10], edx	        76	vterm.h	FUNCTION_29
0x90	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	vterm.h	FUNCTION_29
0x94	            0x8b10	                    mov edx, dword [rax]	        77	vterm.h	FUNCTION_29
0x96	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        77	vterm.h	FUNCTION_29
0x99	             0x1c2	                            add edx, eax	        77	vterm.h	FUNCTION_29
0x9b	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	vterm.h	FUNCTION_29
0x9f	            0x8910	                    mov dword [rax], edx	        77	vterm.h	FUNCTION_29
0xa1	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	vterm.h	FUNCTION_29
0xa5	          0x8b5004	                mov edx, dword [rax + 4]	        77	vterm.h	FUNCTION_29
0xa8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        77	vterm.h	FUNCTION_29
0xab	             0x1c2	                            add edx, eax	        77	vterm.h	FUNCTION_29
0xad	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	vterm.h	FUNCTION_29
0xb1	          0x895004	                mov dword [rax + 4], edx	        77	vterm.h	FUNCTION_29
0xb4	        0x488b45f8	                mov rax, qword [rbp - 8]	        78	vterm.h	FUNCTION_29
0xb8	          0x8b5008	                mov edx, dword [rax + 8]	        78	vterm.h	FUNCTION_29
0xbb	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        78	vterm.h	FUNCTION_29
0xbe	             0x1c2	                            add edx, eax	        78	vterm.h	FUNCTION_29
0xc0	        0x488b45f8	                mov rax, qword [rbp - 8]	        78	vterm.h	FUNCTION_29
0xc4	          0x895008	                mov dword [rax + 8], edx	        78	vterm.h	FUNCTION_29
0xc7	        0x488b45f8	                mov rax, qword [rbp - 8]	        78	vterm.h	FUNCTION_29
0xcb	          0x8b500c	              mov edx, dword [rax + 0xc]	        78	vterm.h	FUNCTION_29
0xce	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        78	vterm.h	FUNCTION_29
0xd1	             0x1c2	                            add edx, eax	        78	vterm.h	FUNCTION_29
0xd3	        0x488b45f8	                mov rax, qword [rbp - 8]	        78	vterm.h	FUNCTION_29
0xd7	          0x89500c	              mov dword [rax + 0xc], edx	        78	vterm.h	FUNCTION_29
0xda	              0x90	                                     nop	        79	vterm.h	FUNCTION_29
0xdb	              0x5d	                                 pop rbp	        79	vterm.h	FUNCTION_29
0xdc	              0xc3	                                     ret	        79	vterm.h	FUNCTION_29
vterm_get_size	WHILE,0:CALL,0:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,2	20
0x4f4	              0x55	                                push rbp	        91	vterm.c	FUNCTION_8
0x4f5	          0x4889e5	                            mov rbp, rsp	        91	vterm.c	FUNCTION_8
0x4f8	        0x48897df8	                mov qword [rbp - 8], rdi	        91	vterm.c	FUNCTION_8
0x4fc	        0x488975f0	             mov qword [rbp - 0x10], rsi	        91	vterm.c	FUNCTION_8
0x500	        0x488955e8	             mov qword [rbp - 0x18], rdx	        91	vterm.c	FUNCTION_8
0x504	      0x48837df000	               cmp qword [rbp - 0x10], 0	        92	vterm.c	FUNCTION_8	IF_1
0x509	            0x740d	                            je 0x4000558	        92	vterm.c	FUNCTION_8	IF_1
0x50b	        0x488b45f8	                mov rax, qword [rbp - 8]	        93	vterm.c	FUNCTION_8	IF_1
0x50f	          0x8b5010	            mov edx, dword [rax + 0x10] 	        93	vterm.c	FUNCTION_8	IF_1
0x512	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        93	vterm.c	FUNCTION_8	IF_1
0x516	            0x8910	                    mov dword [rax], edx	        93	vterm.c	FUNCTION_8	IF_1
0x518	      0x48837de800	               cmp qword [rbp - 0x18], 0	        94	vterm.c	FUNCTION_8	IF_2
0x51d	            0x740d	                            je 0x400056c	        94	vterm.c	FUNCTION_8	IF_2
0x51f	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	vterm.c	FUNCTION_8	IF_2
0x523	          0x8b5014	            mov edx, dword [rax + 0x14] 	        95	vterm.c	FUNCTION_8	IF_2
0x526	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	vterm.c	FUNCTION_8	IF_2
0x52a	            0x8910	                    mov dword [rax], edx	        95	vterm.c	FUNCTION_8	IF_2
0x52c	              0x90	                                     nop	        96	vterm.c	FUNCTION_8
0x52d	              0x5d	                                 pop rbp	        96	vterm.c	FUNCTION_8
0x52e	              0xc3	                                     ret	        96	vterm.c	FUNCTION_8
utf8_seqlen	WHILE,0:CALL,0:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,5	26
0x119	              0x55	                                push rbp	         9	utf8.h	FUNCTION_30
0x11a	          0x4889e5	                            mov rbp, rsp	         9	utf8.h	FUNCTION_30
0x11d	        0x48897df8	                mov qword [rbp - 8], rdi	         9	utf8.h	FUNCTION_30
0x121	      0x48837df87f	               cmp qword [rbp - 8], 0x7f	        10	utf8.h	FUNCTION_30	IF_1
0x126	            0x7f07	                            jg 0x400016f	        10	utf8.h	FUNCTION_30	IF_1
0x128	      0xb801000000	                              mov eax, 1	        10	utf8.h	FUNCTION_30	IF_1
0x12d	            0xeb49	                           jmp 0x40001b8	        10	utf8.h	FUNCTION_30	IF_1
0x12f	    0x48817df8ff07	              cmp qword [rbp - 8], 0x7ff	        11	utf8.h	FUNCTION_30	IF_2
0x137	            0x7f07	                            jg 0x4000180	        11	utf8.h	FUNCTION_30	IF_2
0x139	      0xb802000000	                              mov eax, 2	        11	utf8.h	FUNCTION_30	IF_2
0x13e	            0xeb38	                           jmp 0x40001b8	        11	utf8.h	FUNCTION_30	IF_2
0x140	    0x48817df8ffff	            cmp qword [rbp - 8], 0xffff 	        12	utf8.h	FUNCTION_30	IF_3
0x148	            0x7f07	                            jg 0x4000191	        12	utf8.h	FUNCTION_30	IF_3
0x14a	      0xb803000000	                              mov eax, 3	        12	utf8.h	FUNCTION_30	IF_3
0x14f	            0xeb27	                           jmp 0x40001b8	        12	utf8.h	FUNCTION_30	IF_3
0x151	    0x48817df8ffff	          cmp qword [rbp - 8], 0x1fffff 	        13	utf8.h	FUNCTION_30	IF_4
0x159	            0x7f07	                            jg 0x40001a2	        13	utf8.h	FUNCTION_30	IF_4
0x15b	      0xb804000000	                              mov eax, 4	        13	utf8.h	FUNCTION_30	IF_4
0x160	            0xeb16	                           jmp 0x40001b8	        13	utf8.h	FUNCTION_30	IF_4
0x162	    0x48817df8ffff	         cmp qword [rbp - 8], 0x3ffffff 	        14	utf8.h	FUNCTION_30	IF_5
0x16a	            0x7f07	                            jg 0x40001b3	        14	utf8.h	FUNCTION_30	IF_5
0x16c	      0xb805000000	                              mov eax, 5	        14	utf8.h	FUNCTION_30	IF_5
0x171	            0xeb05	                           jmp 0x40001b8	        14	utf8.h	FUNCTION_30	IF_5
0x173	      0xb806000000	                              mov eax, 6	        15	utf8.h	FUNCTION_30
0x178	              0x5d	                                 pop rbp	        16	utf8.h	FUNCTION_30
0x179	              0xc3	                                     ret	        16	utf8.h	FUNCTION_30
vterm_scroll_rect	WHILE,0:CALL,2:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,4:IF,8	140
0xd25	              0x55	                                push rbp	       302	vterm.c	FUNCTION_24
0xd26	          0x4889e5	                            mov rbp, rsp	       302	vterm.c	FUNCTION_24
0xd29	        0x4883ec60	                           sub rsp, 0x60	       302	vterm.c	FUNCTION_24
0xd2d	          0x4889f8	                            mov rax, rdi	       302	vterm.c	FUNCTION_24
0xd30	          0x4989f2	                            mov r10, rsi	       302	vterm.c	FUNCTION_24
0xd33	          0x4889c6	                            mov rsi, rax	       302	vterm.c	FUNCTION_24
0xd36	          0x4889d7	                            mov rdi, rdx	       302	vterm.c	FUNCTION_24
0xd39	          0x4c89d7	                            mov rdi, r10	       302	vterm.c	FUNCTION_24
0xd3c	        0x488975c0	             mov qword [rbp - 0x40], rsi	       302	vterm.c	FUNCTION_24
0xd40	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       302	vterm.c	FUNCTION_24
0xd44	          0x8955bc	             mov dword [rbp - 0x44], edx	       302	vterm.c	FUNCTION_24
0xd47	          0x894db8	             mov dword [rbp - 0x48], ecx	       302	vterm.c	FUNCTION_24
0xd4a	        0x4c8945b0	              mov qword [rbp - 0x50], r8	       302	vterm.c	FUNCTION_24
0xd4e	        0x4c894da8	              mov qword [rbp - 0x58], r9	       302	vterm.c	FUNCTION_24
0xd52	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0xd55	              0x99	                                     cdq	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0xd56	            0x89d0	                            mov eax, edx	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0xd58	          0x3345bc	             xor eax, dword [rbp - 0x44]	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0xd5b	            0x29d0	                            sub eax, edx	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0xd5d	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0xd60	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0xd63	            0x29d1	                            sub ecx, edx	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0xd65	            0x89ca	                            mov edx, ecx	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0xd67	            0x39d0	                            cmp eax, edx	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0xd69	            0x7d19	                           jge 0x4000dc4	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0xd6b	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       307	vterm.c	FUNCTION_24	IF_1	CALL_2
0xd6e	              0x99	                                     cdq	       307	vterm.c	FUNCTION_24	IF_1	CALL_2
0xd6f	            0x89d0	                            mov eax, edx	       307	vterm.c	FUNCTION_24	IF_1	CALL_2
0xd71	          0x3345b8	             xor eax, dword [rbp - 0x48]	       307	vterm.c	FUNCTION_24	IF_1	CALL_2
0xd74	            0x29d0	                            sub eax, edx	       307	vterm.c	FUNCTION_24	IF_1	CALL_2
0xd76	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	       307	vterm.c	FUNCTION_24	IF_1	CALL_2
0xd79	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       307	vterm.c	FUNCTION_24	IF_1	CALL_2
0xd7c	            0x29d1	                            sub ecx, edx	       307	vterm.c	FUNCTION_24	IF_1	CALL_2
0xd7e	            0x89ca	                            mov edx, ecx	       307	vterm.c	FUNCTION_24	IF_1	CALL_2
0xd80	            0x39d0	                            cmp eax, edx	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0xd82	            0x7c1c	                            jl 0x4000de0	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0xd84	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	       309	vterm.c	FUNCTION_24	IF_1
0xd88	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       309	vterm.c	FUNCTION_24	IF_1
0xd8c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       309	vterm.c	FUNCTION_24	IF_1
0xd90	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	       309	vterm.c	FUNCTION_24	IF_1
0xd94	      0xba00000000	                              mov edx, 0	       309	vterm.c	FUNCTION_24	IF_1
0xd99	            0xffd0	                                call rax	       309	vterm.c	FUNCTION_24	IF_1
0xd9b	      0xe91f010000	                           jmp 0x4000eff	       309	vterm.c	FUNCTION_24	IF_1
0xda0	        0x837db800	               cmp dword [rbp - 0x48], 0	       313	vterm.c	FUNCTION_24	IF_2
0xda4	            0x7822	                            js 0x4000e08	       313	vterm.c	FUNCTION_24	IF_2
0xda6	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       318	vterm.c	FUNCTION_24	IF_2
0xda9	          0x8945f8	                mov dword [rbp - 8], eax	       318	vterm.c	FUNCTION_24	IF_2
0xdac	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       319	vterm.c	FUNCTION_24	IF_2
0xdaf	          0x2b45b8	             sub eax, dword [rbp - 0x48]	       319	vterm.c	FUNCTION_24	IF_2
0xdb2	          0x8945fc	                mov dword [rbp - 4], eax	       319	vterm.c	FUNCTION_24	IF_2
0xdb5	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       320	vterm.c	FUNCTION_24	IF_2
0xdb8	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       320	vterm.c	FUNCTION_24	IF_2
0xdbb	             0x1d0	                            add eax, edx	       320	vterm.c	FUNCTION_24	IF_2
0xdbd	          0x8945e8	             mov dword [rbp - 0x18], eax	       320	vterm.c	FUNCTION_24	IF_2
0xdc0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       321	vterm.c	FUNCTION_24	IF_2
0xdc3	          0x8945ec	             mov dword [rbp - 0x14], eax	       321	vterm.c	FUNCTION_24	IF_2
0xdc6	            0xeb28	                           jmp 0x4000e30	       321	vterm.c	FUNCTION_24	IF_2
0xdc8	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       328	vterm.c	FUNCTION_24	ELSE_1
0xdcb	            0xf7d8	                                 neg eax	       328	vterm.c	FUNCTION_24	ELSE_1
0xdcd	          0x8945d8	             mov dword [rbp - 0x28], eax	       328	vterm.c	FUNCTION_24	ELSE_1
0xdd0	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       329	vterm.c	FUNCTION_24	ELSE_1
0xdd3	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       329	vterm.c	FUNCTION_24	ELSE_1
0xdd6	             0x1d0	                            add eax, edx	       329	vterm.c	FUNCTION_24	ELSE_1
0xdd8	          0x8945f8	                mov dword [rbp - 8], eax	       329	vterm.c	FUNCTION_24	ELSE_1
0xddb	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       330	vterm.c	FUNCTION_24	ELSE_1
0xdde	          0x8945fc	                mov dword [rbp - 4], eax	       330	vterm.c	FUNCTION_24	ELSE_1
0xde1	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       331	vterm.c	FUNCTION_24	ELSE_1
0xde4	          0x8945e8	             mov dword [rbp - 0x18], eax	       331	vterm.c	FUNCTION_24	ELSE_1
0xde7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       332	vterm.c	FUNCTION_24	ELSE_1
0xdea	          0x2b45d8	             sub eax, dword [rbp - 0x28]	       332	vterm.c	FUNCTION_24	ELSE_1
0xded	          0x8945ec	             mov dword [rbp - 0x14], eax	       332	vterm.c	FUNCTION_24	ELSE_1
0xdf0	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       335	vterm.c	FUNCTION_24	IF_3
0xdf4	            0x7822	                            js 0x4000e58	       335	vterm.c	FUNCTION_24	IF_3
0xdf6	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       336	vterm.c	FUNCTION_24	IF_3
0xdf9	          0x8945f0	             mov dword [rbp - 0x10], eax	       336	vterm.c	FUNCTION_24	IF_3
0xdfc	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       337	vterm.c	FUNCTION_24	IF_3
0xdff	          0x2b45bc	             sub eax, dword [rbp - 0x44]	       337	vterm.c	FUNCTION_24	IF_3
0xe02	          0x8945f4	              mov dword [rbp - 0xc], eax	       337	vterm.c	FUNCTION_24	IF_3
0xe05	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       338	vterm.c	FUNCTION_24	IF_3
0xe08	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       338	vterm.c	FUNCTION_24	IF_3
0xe0b	             0x1d0	                            add eax, edx	       338	vterm.c	FUNCTION_24	IF_3
0xe0d	          0x8945e0	             mov dword [rbp - 0x20], eax	       338	vterm.c	FUNCTION_24	IF_3
0xe10	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       339	vterm.c	FUNCTION_24	IF_3
0xe13	          0x8945e4	             mov dword [rbp - 0x1c], eax	       339	vterm.c	FUNCTION_24	IF_3
0xe16	            0xeb28	                           jmp 0x4000e80	       339	vterm.c	FUNCTION_24	IF_3
0xe18	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       342	vterm.c	FUNCTION_24	ELSE_2
0xe1b	            0xf7d8	                                 neg eax	       342	vterm.c	FUNCTION_24	ELSE_2
0xe1d	          0x8945dc	             mov dword [rbp - 0x24], eax	       342	vterm.c	FUNCTION_24	ELSE_2
0xe20	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       343	vterm.c	FUNCTION_24	ELSE_2
0xe23	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       343	vterm.c	FUNCTION_24	ELSE_2
0xe26	             0x1d0	                            add eax, edx	       343	vterm.c	FUNCTION_24	ELSE_2
0xe28	          0x8945f0	             mov dword [rbp - 0x10], eax	       343	vterm.c	FUNCTION_24	ELSE_2
0xe2b	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       344	vterm.c	FUNCTION_24	ELSE_2
0xe2e	          0x8945f4	              mov dword [rbp - 0xc], eax	       344	vterm.c	FUNCTION_24	ELSE_2
0xe31	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       345	vterm.c	FUNCTION_24	ELSE_2
0xe34	          0x8945e0	             mov dword [rbp - 0x20], eax	       345	vterm.c	FUNCTION_24	ELSE_2
0xe37	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       346	vterm.c	FUNCTION_24	ELSE_2
0xe3a	          0x2b45dc	             sub eax, dword [rbp - 0x24]	       346	vterm.c	FUNCTION_24	ELSE_2
0xe3d	          0x8945e4	             mov dword [rbp - 0x1c], eax	       346	vterm.c	FUNCTION_24	ELSE_2
0xe40	      0x48837db000	               cmp qword [rbp - 0x50], 0	       349	vterm.c	FUNCTION_24	IF_4
0xe45	            0x7421	                            je 0x4000ea8	       349	vterm.c	FUNCTION_24	IF_4
0xe47	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       350	vterm.c	FUNCTION_24	IF_4
0xe4b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       350	vterm.c	FUNCTION_24	IF_4
0xe4f	        0x488b7df0	             mov rdi, qword [rbp - 0x10]	       350	vterm.c	FUNCTION_24	IF_4
0xe53	        0x488b75f8	                mov rsi, qword [rbp - 8]	       350	vterm.c	FUNCTION_24	IF_4
0xe57	        0x4c8b4db0	              mov r9, qword [rbp - 0x50]	       350	vterm.c	FUNCTION_24	IF_4
0xe5b	        0x4c8b4510	              mov r8, qword [rbp + 0x10]	       350	vterm.c	FUNCTION_24	IF_4
0xe5f	          0x4889d1	                            mov rcx, rdx	       350	vterm.c	FUNCTION_24	IF_4
0xe62	          0x4889c2	                            mov rdx, rax	       350	vterm.c	FUNCTION_24	IF_4
0xe65	          0x41ffd1	                                 call r9	       350	vterm.c	FUNCTION_24	IF_4
0xe68	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       352	vterm.c	FUNCTION_24	IF_5
0xe6c	            0x7e0b	                           jle 0x4000eb9	       352	vterm.c	FUNCTION_24	IF_5
0xe6e	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       353	vterm.c	FUNCTION_24	IF_5
0xe71	          0x2b45bc	             sub eax, dword [rbp - 0x44]	       353	vterm.c	FUNCTION_24	IF_5
0xe74	          0x8945c0	             mov dword [rbp - 0x40], eax	       353	vterm.c	FUNCTION_24	IF_5
0xe77	            0xeb0f	                           jmp 0x4000ec8	       353	vterm.c	FUNCTION_24	IF_5
0xe79	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       354	vterm.c	FUNCTION_24	ELSE_3	IF_6
0xe7d	            0x7909	                           jns 0x4000ec8	       354	vterm.c	FUNCTION_24	ELSE_3	IF_6
0xe7f	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       355	vterm.c	FUNCTION_24	ELSE_3	IF_6
0xe82	          0x2b45bc	             sub eax, dword [rbp - 0x44]	       355	vterm.c	FUNCTION_24	ELSE_3	IF_6
0xe85	          0x8945c4	             mov dword [rbp - 0x3c], eax	       355	vterm.c	FUNCTION_24	ELSE_3	IF_6
0xe88	        0x837db800	               cmp dword [rbp - 0x48], 0	       357	vterm.c	FUNCTION_24	IF_7
0xe8c	            0x7e0b	                           jle 0x4000ed9	       357	vterm.c	FUNCTION_24	IF_7
0xe8e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       358	vterm.c	FUNCTION_24	IF_7
0xe91	          0x2b45b8	             sub eax, dword [rbp - 0x48]	       358	vterm.c	FUNCTION_24	IF_7
0xe94	          0x8945c8	             mov dword [rbp - 0x38], eax	       358	vterm.c	FUNCTION_24	IF_7
0xe97	            0xeb0f	                           jmp 0x4000ee8	       358	vterm.c	FUNCTION_24	IF_7
0xe99	        0x837db800	               cmp dword [rbp - 0x48], 0	       359	vterm.c	FUNCTION_24	ELSE_4	IF_8
0xe9d	            0x7909	                           jns 0x4000ee8	       359	vterm.c	FUNCTION_24	ELSE_4	IF_8
0xe9f	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       360	vterm.c	FUNCTION_24	ELSE_4	IF_8
0xea2	          0x2b45b8	             sub eax, dword [rbp - 0x48]	       360	vterm.c	FUNCTION_24	ELSE_4	IF_8
0xea5	          0x8945cc	             mov dword [rbp - 0x34], eax	       360	vterm.c	FUNCTION_24	ELSE_4	IF_8
0xea8	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	       362	vterm.c	FUNCTION_24
0xeac	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       362	vterm.c	FUNCTION_24
0xeb0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       362	vterm.c	FUNCTION_24
0xeb4	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	       362	vterm.c	FUNCTION_24
0xeb8	      0xba00000000	                              mov edx, 0	       362	vterm.c	FUNCTION_24
0xebd	            0xffd0	                                call rax	       362	vterm.c	FUNCTION_24
0xebf	              0xc9	                                   leave	       363	vterm.c	FUNCTION_24
0xec0	              0xc3	                                     ret	       363	vterm.c	FUNCTION_24
default_free	WHILE,0:CALL,1:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,0	11
0x29b	              0x55	                                push rbp	        25	vterm.c	FUNCTION_2
0x29c	          0x4889e5	                            mov rbp, rsp	        25	vterm.c	FUNCTION_2
0x29f	        0x4883ec10	                           sub rsp, 0x10	        25	vterm.c	FUNCTION_2
0x2a3	        0x48897df8	                mov qword [rbp - 8], rdi	        25	vterm.c	FUNCTION_2
0x2a7	        0x488975f0	             mov qword [rbp - 0x10], rsi	        25	vterm.c	FUNCTION_2
0x2ab	        0x488b45f8	                mov rax, qword [rbp - 8]	        26	vterm.c	FUNCTION_2	CALL_1
0x2af	          0x4889c7	                            mov rdi, rax	        26	vterm.c	FUNCTION_2	CALL_1
0x2b2	      0xe800000000	                          call 0x40002f7	        26	vterm.c	FUNCTION_2	CALL_1
0x2b7	              0x90	                                     nop	        27	vterm.c	FUNCTION_2
0x2b8	              0xc9	                                   leave	        27	vterm.c	FUNCTION_2
0x2b9	              0xc3	                                     ret	        27	vterm.c	FUNCTION_2
vterm_push_output_sprintf_ctrl	WHILE,0:CALL,6:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,1:IF,2	74
0x859	              0x55	                                push rbp	       193	vterm.c	FUNCTION_16
0x85a	          0x4889e5	                            mov rbp, rsp	       193	vterm.c	FUNCTION_16
0x85d	    0x4881ec000100	                          sub rsp, 0x100	       193	vterm.c	FUNCTION_16
0x864	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       193	vterm.c	FUNCTION_16
0x86b	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	       193	vterm.c	FUNCTION_16
0x872	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       193	vterm.c	FUNCTION_16
0x879	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       193	vterm.c	FUNCTION_16
0x880	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       193	vterm.c	FUNCTION_16
0x887	            0x84c0	                             test al, al	       193	vterm.c	FUNCTION_16
0x889	            0x7420	                            je 0x40008eb	       193	vterm.c	FUNCTION_16
0x88b	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       193	vterm.c	FUNCTION_16
0x88f	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       193	vterm.c	FUNCTION_16
0x893	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       193	vterm.c	FUNCTION_16
0x897	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       193	vterm.c	FUNCTION_16
0x89b	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       193	vterm.c	FUNCTION_16
0x89f	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       193	vterm.c	FUNCTION_16
0x8a3	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       193	vterm.c	FUNCTION_16
0x8a7	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       193	vterm.c	FUNCTION_16
0x8ab	    0x4088b514ffff	              mov byte [rbp - 0xec], sil	       193	vterm.c	FUNCTION_16
0x8b2	    0x64488b042528	                mov rax, qword fs:[0x28]	       193	vterm.c	FUNCTION_16
0x8bb	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       193	vterm.c	FUNCTION_16
0x8c2	            0x31c0	                            xor eax, eax	       193	vterm.c	FUNCTION_16
0x8c4	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       194	vterm.c	FUNCTION_16
0x8cb	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       194	vterm.c	FUNCTION_16
0x8d2	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       194	vterm.c	FUNCTION_16
0x8d9	     0xfb68514ffff	            movzx eax, byte [rbp - 0xec]	       197	vterm.c	FUNCTION_16	IF_1
0x8e0	            0x84c0	                             test al, al	       197	vterm.c	FUNCTION_16	IF_1
0x8e2	            0x7937	                           jns 0x400095b	       197	vterm.c	FUNCTION_16	IF_1
0x8e4	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       197	vterm.c	FUNCTION_16	IF_1
0x8eb	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       197	vterm.c	FUNCTION_16	IF_1
0x8ef	          0x83e002	                              and eax, 2	       197	vterm.c	FUNCTION_16	IF_1
0x8f2	            0x84c0	                             test al, al	       197	vterm.c	FUNCTION_16	IF_1
0x8f4	            0x7525	                           jne 0x400095b	       197	vterm.c	FUNCTION_16	IF_1
0x8f6	     0xfb68514ffff	            movzx eax, byte [rbp - 0xec]	       198	vterm.c	FUNCTION_16	CALL_1
0x8fd	          0x8d50c0	                   lea edx, [rax - 0x40]	       198	vterm.c	FUNCTION_16	CALL_1
0x900	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       198	vterm.c	FUNCTION_16	CALL_1
0x907	      0xbe00000000	                              mov esi, 0	       198	vterm.c	FUNCTION_16	CALL_1
0x90c	          0x4889c7	                            mov rdi, rax	       198	vterm.c	FUNCTION_16	CALL_1
0x90f	      0xb800000000	                              mov eax, 0	       198	vterm.c	FUNCTION_16	CALL_1
0x914	      0xe800000000	                          call 0x4000959	       198	vterm.c	FUNCTION_16	CALL_1
0x919	            0xeb20	                           jmp 0x400097b	       198	vterm.c	FUNCTION_16	CALL_1
0x91b	     0xfb69514ffff	            movzx edx, byte [rbp - 0xec]	       200	vterm.c	FUNCTION_16	CALL_2
0x922	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       200	vterm.c	FUNCTION_16	CALL_2
0x929	      0xbe00000000	                              mov esi, 0	       200	vterm.c	FUNCTION_16	CALL_2
0x92e	          0x4889c7	                            mov rdi, rax	       200	vterm.c	FUNCTION_16	CALL_2
0x931	      0xb800000000	                              mov eax, 0	       200	vterm.c	FUNCTION_16	CALL_2
0x936	      0xe800000000	                          call 0x400097b	       200	vterm.c	FUNCTION_16	CALL_2
0x93b	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	       202	vterm.c	FUNCTION_16	CALL_3
0x945	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       202	vterm.c	FUNCTION_16	CALL_3
0x94f	        0x488d4510	                   lea rax, [rbp + 0x10]	       202	vterm.c	FUNCTION_16	CALL_3
0x953	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       202	vterm.c	FUNCTION_16	CALL_3
0x95a	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       202	vterm.c	FUNCTION_16	CALL_3
0x961	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       202	vterm.c	FUNCTION_16	CALL_3
0x968	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       203	vterm.c	FUNCTION_16	CALL_4
0x96f	    0x488b8d08ffff	             mov rcx, qword [rbp - 0xf8]	       203	vterm.c	FUNCTION_16	CALL_4
0x976	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       203	vterm.c	FUNCTION_16	CALL_4
0x97d	          0x4889ce	                            mov rsi, rcx	       203	vterm.c	FUNCTION_16	CALL_4
0x980	          0x4889c7	                            mov rdi, rax	       203	vterm.c	FUNCTION_16	CALL_4
0x983	      0xe800000000	                          call 0x40009c8	       203	vterm.c	FUNCTION_16	CALL_4
0x988	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       206	vterm.c	FUNCTION_16	IF_2	CALL_6
0x98f	          0x4889c7	                            mov rdi, rax	       206	vterm.c	FUNCTION_16	IF_2	CALL_6
0x992	      0xe8effcffff	              call sym.outbuffer_is_full	       206	vterm.c	FUNCTION_16	IF_2	CALL_6
0x997	            0x85c0	                           test eax, eax	       206	vterm.c	FUNCTION_16	IF_2	CALL_6
0x999	            0x7415	                            je 0x40009f0	       206	vterm.c	FUNCTION_16	IF_2	CALL_6
0x99b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       207	vterm.c	FUNCTION_16	IF_2
0x9a2	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       207	vterm.c	FUNCTION_16	IF_2
0x9a9	    0x488990100100	            mov qword [rax + 0x110], rdx	       207	vterm.c	FUNCTION_16	IF_2
0x9b0	              0x90	                                     nop	       208	vterm.c	FUNCTION_16
0x9b1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       208	vterm.c	FUNCTION_16
0x9b8	    0x644833042528	                xor rax, qword fs:[0x28]	       208	vterm.c	FUNCTION_16
0x9c1	            0x7405	                            je 0x4000a08	       208	vterm.c	FUNCTION_16
0x9c3	      0xe800000000	                          call 0x4000a08	       208	vterm.c	FUNCTION_16
0x9c8	              0xc9	                                   leave	       208	vterm.c	FUNCTION_16
0x9c9	              0xc3	                                     ret	       208	vterm.c	FUNCTION_16
default_malloc	WHILE,0:CALL,2:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,1	19
0x259	              0x55	                                push rbp	        17	vterm.c	FUNCTION_1
0x25a	          0x4889e5	                            mov rbp, rsp	        17	vterm.c	FUNCTION_1
0x25d	        0x4883ec20	                           sub rsp, 0x20	        17	vterm.c	FUNCTION_1
0x261	        0x48897de8	             mov qword [rbp - 0x18], rdi	        17	vterm.c	FUNCTION_1
0x265	        0x488975e0	             mov qword [rbp - 0x20], rsi	        17	vterm.c	FUNCTION_1
0x269	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        18	vterm.c	FUNCTION_1	CALL_1
0x26d	          0x4889c7	                            mov rdi, rax	        18	vterm.c	FUNCTION_1	CALL_1
0x270	      0xe800000000	                          call 0x40002b5	        18	vterm.c	FUNCTION_1	CALL_1
0x275	        0x488945f8	                mov qword [rbp - 8], rax	        18	vterm.c	FUNCTION_1	CALL_1
0x279	      0x48837df800	                  cmp qword [rbp - 8], 0	        19	vterm.c	FUNCTION_1	IF_1
0x27e	            0x7415	                            je 0x40002d5	        19	vterm.c	FUNCTION_1	IF_1
0x280	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        20	vterm.c	FUNCTION_1	CALL_2
0x284	        0x488b45f8	                mov rax, qword [rbp - 8]	        20	vterm.c	FUNCTION_1	CALL_2
0x288	      0xbe00000000	                              mov esi, 0	        20	vterm.c	FUNCTION_1	CALL_2
0x28d	          0x4889c7	                            mov rdi, rax	        20	vterm.c	FUNCTION_1	CALL_2
0x290	      0xe800000000	                          call 0x40002d5	        20	vterm.c	FUNCTION_1	CALL_2
0x295	        0x488b45f8	                mov rax, qword [rbp - 8]	        21	vterm.c	FUNCTION_1
0x299	              0xc9	                                   leave	        22	vterm.c	FUNCTION_1
0x29a	              0xc3	                                     ret	        22	vterm.c	FUNCTION_1
outbuffer_is_full	WHILE,0:CALL,0:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,0	13
0x686	              0x55	                                push rbp	       129	vterm.c	FUNCTION_13
0x687	          0x4889e5	                            mov rbp, rsp	       129	vterm.c	FUNCTION_13
0x68a	        0x48897df8	                mov qword [rbp - 8], rdi	       129	vterm.c	FUNCTION_13
0x68e	        0x488b45f8	                mov rax, qword [rbp - 8]	       130	vterm.c	FUNCTION_13
0x692	    0x488b90100100	           mov rdx, qword [rax + 0x110] 	       130	vterm.c	FUNCTION_13
0x699	        0x488b45f8	                mov rax, qword [rbp - 8]	       130	vterm.c	FUNCTION_13
0x69d	    0x488b80080100	           mov rax, qword [rax + 0x108] 	       130	vterm.c	FUNCTION_13
0x6a4	        0x4883e801	                              sub rax, 1	       130	vterm.c	FUNCTION_13
0x6a8	          0x4839c2	                            cmp rdx, rax	       130	vterm.c	FUNCTION_13
0x6ab	           0xf93c0	                                setae al	       130	vterm.c	FUNCTION_13
0x6ae	           0xfb6c0	                           movzx eax, al	       130	vterm.c	FUNCTION_13
0x6b1	              0x5d	                                 pop rbp	       131	vterm.c	FUNCTION_13
0x6b2	              0xc3	                                     ret	       131	vterm.c	FUNCTION_13
vterm_new	WHILE,0:CALL,1:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,0	13
0x2ba	              0x55	                                push rbp	        35	vterm.c	FUNCTION_3
0x2bb	          0x4889e5	                            mov rbp, rsp	        35	vterm.c	FUNCTION_3
0x2be	        0x4883ec10	                           sub rsp, 0x10	        35	vterm.c	FUNCTION_3
0x2c2	          0x897dfc	                mov dword [rbp - 4], edi	        35	vterm.c	FUNCTION_3
0x2c5	          0x8975f8	                mov dword [rbp - 8], esi	        35	vterm.c	FUNCTION_3
0x2c8	          0x8b75f8	                mov esi, dword [rbp - 8]	        36	vterm.c	FUNCTION_3	CALL_1
0x2cb	          0x8b45fc	                mov eax, dword [rbp - 4]	        36	vterm.c	FUNCTION_3	CALL_1
0x2ce	      0xb900000000	                              mov ecx, 0	        36	vterm.c	FUNCTION_3	CALL_1
0x2d3	      0xba00000000	                              mov edx, 0	        36	vterm.c	FUNCTION_3	CALL_1
0x2d8	            0x89c7	                            mov edi, eax	        36	vterm.c	FUNCTION_3	CALL_1
0x2da	      0xe800000000	                          call 0x400031f	        36	vterm.c	FUNCTION_3	CALL_1
0x2df	              0xc9	                                   leave	        37	vterm.c	FUNCTION_3
0x2e0	              0xc3	                                     ret	        37	vterm.c	FUNCTION_3
vterm_get_attr_type	WHILE,0:CALL,0:DO,0:SWITCH,1:FOR,0:functions,0:ELSE,0:IF,0	31
0xc57	              0x55	                                push rbp	       261	vterm.c	FUNCTION_22
0xc58	          0x4889e5	                            mov rbp, rsp	       261	vterm.c	FUNCTION_22
0xc5b	          0x897dfc	                mov dword [rbp - 4], edi	       261	vterm.c	FUNCTION_22
0xc5e	        0x837dfc0a	                cmp dword [rbp - 4], 0xa	       262	vterm.c	FUNCTION_22	SWITCH_1
0xc62	            0x7753	                            ja 0x4000cf7	       262	vterm.c	FUNCTION_22	SWITCH_1
0xc64	          0x8b45fc	                mov eax, dword [rbp - 4]	       262	vterm.c	FUNCTION_22	SWITCH_1
0xc67	    0x488b04c50000	                  mov rax, qword [rax*8]	       262	vterm.c	FUNCTION_22	SWITCH_1
0xc6f	            0xffe0	                                 jmp rax	       262	vterm.c	FUNCTION_22	SWITCH_1
0xc71	      0xb801000000	                              mov eax, 1	       263	vterm.c	FUNCTION_22	SWITCH_1
0xc76	            0xeb44	                           jmp 0x4000cfc	       263	vterm.c	FUNCTION_22	SWITCH_1
0xc78	      0xb802000000	                              mov eax, 2	       264	vterm.c	FUNCTION_22	SWITCH_1
0xc7d	            0xeb3d	                           jmp 0x4000cfc	       264	vterm.c	FUNCTION_22	SWITCH_1
0xc7f	      0xb801000000	                              mov eax, 1	       265	vterm.c	FUNCTION_22	SWITCH_1
0xc84	            0xeb36	                           jmp 0x4000cfc	       265	vterm.c	FUNCTION_22	SWITCH_1
0xc86	      0xb801000000	                              mov eax, 1	       266	vterm.c	FUNCTION_22	SWITCH_1
0xc8b	            0xeb2f	                           jmp 0x4000cfc	       266	vterm.c	FUNCTION_22	SWITCH_1
0xc8d	      0xb801000000	                              mov eax, 1	       267	vterm.c	FUNCTION_22	SWITCH_1
0xc92	            0xeb28	                           jmp 0x4000cfc	       267	vterm.c	FUNCTION_22	SWITCH_1
0xc94	      0xb801000000	                              mov eax, 1	       268	vterm.c	FUNCTION_22	SWITCH_1
0xc99	            0xeb21	                           jmp 0x4000cfc	       268	vterm.c	FUNCTION_22	SWITCH_1
0xc9b	      0xb802000000	                              mov eax, 2	       269	vterm.c	FUNCTION_22	SWITCH_1
0xca0	            0xeb1a	                           jmp 0x4000cfc	       269	vterm.c	FUNCTION_22	SWITCH_1
0xca2	      0xb804000000	                              mov eax, 4	       270	vterm.c	FUNCTION_22	SWITCH_1
0xca7	            0xeb13	                           jmp 0x4000cfc	       270	vterm.c	FUNCTION_22	SWITCH_1
0xca9	      0xb804000000	                              mov eax, 4	       271	vterm.c	FUNCTION_22	SWITCH_1
0xcae	            0xeb0c	                           jmp 0x4000cfc	       271	vterm.c	FUNCTION_22	SWITCH_1
0xcb0	      0xb800000000	                              mov eax, 0	       273	vterm.c	FUNCTION_22	SWITCH_1
0xcb5	            0xeb05	                           jmp 0x4000cfc	       273	vterm.c	FUNCTION_22	SWITCH_1
0xcb7	      0xb800000000	                              mov eax, 0	       275	vterm.c	FUNCTION_22
0xcbc	              0x5d	                                 pop rbp	       276	vterm.c	FUNCTION_22
0xcbd	              0xc3	                                     ret	       276	vterm.c	FUNCTION_22
vterm_push_output_bytes	WHILE,0:CALL,2:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,1	40
0x5e3	              0x55	                                push rbp	       118	vterm.c	FUNCTION_12
0x5e4	          0x4889e5	                            mov rbp, rsp	       118	vterm.c	FUNCTION_12
0x5e7	        0x4883ec20	                           sub rsp, 0x20	       118	vterm.c	FUNCTION_12
0x5eb	        0x48897df8	                mov qword [rbp - 8], rdi	       118	vterm.c	FUNCTION_12
0x5ef	        0x488975f0	             mov qword [rbp - 0x10], rsi	       118	vterm.c	FUNCTION_12
0x5f3	        0x488955e8	             mov qword [rbp - 0x18], rdx	       118	vterm.c	FUNCTION_12
0x5f7	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	vterm.c	FUNCTION_12	IF_1
0x5fb	    0x488b90080100	           mov rdx, qword [rax + 0x108] 	       119	vterm.c	FUNCTION_12	IF_1
0x602	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	vterm.c	FUNCTION_12	IF_1
0x606	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       119	vterm.c	FUNCTION_12	IF_1
0x60d	          0x4829c2	                            sub rdx, rax	       119	vterm.c	FUNCTION_12	IF_1
0x610	          0x4889d0	                            mov rax, rdx	       119	vterm.c	FUNCTION_12	IF_1
0x613	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       119	vterm.c	FUNCTION_12	IF_1
0x617	            0x7320	                           jae 0x4000679	       119	vterm.c	FUNCTION_12	IF_1
0x619	        0x488b45f8	                mov rax, qword [rbp - 8]	       121	vterm.c	FUNCTION_12	IF_1
0x61d	    0x488b90080100	           mov rdx, qword [rax + 0x108] 	       121	vterm.c	FUNCTION_12	IF_1
0x624	        0x488b45f8	                mov rax, qword [rbp - 8]	       121	vterm.c	FUNCTION_12	IF_1
0x628	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       121	vterm.c	FUNCTION_12	IF_1
0x62f	          0x4829c2	                            sub rdx, rax	       121	vterm.c	FUNCTION_12	IF_1
0x632	          0x4889d0	                            mov rax, rdx	       121	vterm.c	FUNCTION_12	IF_1
0x635	        0x488945e8	             mov qword [rbp - 0x18], rax	       121	vterm.c	FUNCTION_12	IF_1
0x639	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	vterm.c	FUNCTION_12	CALL_2
0x63d	    0x488b90000100	           mov rdx, qword [rax + 0x100] 	       124	vterm.c	FUNCTION_12	CALL_2
0x644	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	vterm.c	FUNCTION_12	CALL_2
0x648	    0x488b80100100	           mov rax, qword [rax + 0x110] 	       124	vterm.c	FUNCTION_12	CALL_2
0x64f	        0x488d0c02	                    lea rcx, [rdx + rax]	       124	vterm.c	FUNCTION_12	CALL_2
0x653	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       124	vterm.c	FUNCTION_12	CALL_2
0x657	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       124	vterm.c	FUNCTION_12	CALL_2
0x65b	          0x4889c6	                            mov rsi, rax	       124	vterm.c	FUNCTION_12	CALL_2
0x65e	          0x4889cf	                            mov rdi, rcx	       124	vterm.c	FUNCTION_12	CALL_2
0x661	      0xe800000000	                          call 0x40006a6	       124	vterm.c	FUNCTION_12	CALL_2
0x666	        0x488b45f8	                mov rax, qword [rbp - 8]	       125	vterm.c	FUNCTION_12
0x66a	    0x488b90100100	           mov rdx, qword [rax + 0x110] 	       125	vterm.c	FUNCTION_12
0x671	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       125	vterm.c	FUNCTION_12
0x675	          0x4801c2	                            add rdx, rax	       125	vterm.c	FUNCTION_12
0x678	        0x488b45f8	                mov rax, qword [rbp - 8]	       125	vterm.c	FUNCTION_12
0x67c	    0x488990100100	            mov qword [rax + 0x110], rdx	       125	vterm.c	FUNCTION_12
0x683	              0x90	                                     nop	       126	vterm.c	FUNCTION_12
0x684	              0xc9	                                   leave	       126	vterm.c	FUNCTION_12
0x685	              0xc3	                                     ret	       126	vterm.c	FUNCTION_12
vterm_allocator_malloc	WHILE,0:CALL,0:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,0	16
0x492	              0x55	                                push rbp	        81	vterm.c	FUNCTION_6
0x493	          0x4889e5	                            mov rbp, rsp	        81	vterm.c	FUNCTION_6
0x496	        0x4883ec10	                           sub rsp, 0x10	        81	vterm.c	FUNCTION_6
0x49a	        0x48897df8	                mov qword [rbp - 8], rdi	        81	vterm.c	FUNCTION_6
0x49e	        0x488975f0	             mov qword [rbp - 0x10], rsi	        81	vterm.c	FUNCTION_6
0x4a2	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	vterm.c	FUNCTION_6
0x4a6	          0x488b00	                    mov rax, qword [rax]	        82	vterm.c	FUNCTION_6
0x4a9	          0x488b00	                    mov rax, qword [rax]	        82	vterm.c	FUNCTION_6
0x4ac	        0x488b55f8	                mov rdx, qword [rbp - 8]	        82	vterm.c	FUNCTION_6
0x4b0	        0x488b4a08	                mov rcx, qword [rdx + 8]	        82	vterm.c	FUNCTION_6
0x4b4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        82	vterm.c	FUNCTION_6
0x4b8	          0x4889ce	                            mov rsi, rcx	        82	vterm.c	FUNCTION_6
0x4bb	          0x4889d7	                            mov rdi, rdx	        82	vterm.c	FUNCTION_6
0x4be	            0xffd0	                                call rax	        82	vterm.c	FUNCTION_6
0x4c0	              0xc9	                                   leave	        83	vterm.c	FUNCTION_6
0x4c1	              0xc3	                                     ret	        83	vterm.c	FUNCTION_6
vterm_get_prop_type	WHILE,0:CALL,0:DO,0:SWITCH,1:FOR,0:functions,0:ELSE,0:IF,0	31
0xcbe	              0x55	                                push rbp	       279	vterm.c	FUNCTION_23
0xcbf	          0x4889e5	                            mov rbp, rsp	       279	vterm.c	FUNCTION_23
0xcc2	          0x897dfc	                mov dword [rbp - 4], edi	       279	vterm.c	FUNCTION_23
0xcc5	        0x837dfc0a	                cmp dword [rbp - 4], 0xa	       280	vterm.c	FUNCTION_23	SWITCH_1
0xcc9	            0x7753	                            ja 0x4000d5e	       280	vterm.c	FUNCTION_23	SWITCH_1
0xccb	          0x8b45fc	                mov eax, dword [rbp - 4]	       280	vterm.c	FUNCTION_23	SWITCH_1
0xcce	    0x488b04c50000	                  mov rax, qword [rax*8]	       280	vterm.c	FUNCTION_23	SWITCH_1
0xcd6	            0xffe0	                                 jmp rax	       280	vterm.c	FUNCTION_23	SWITCH_1
0xcd8	      0xb801000000	                              mov eax, 1	       281	vterm.c	FUNCTION_23	SWITCH_1
0xcdd	            0xeb44	                           jmp 0x4000d63	       281	vterm.c	FUNCTION_23	SWITCH_1
0xcdf	      0xb801000000	                              mov eax, 1	       282	vterm.c	FUNCTION_23	SWITCH_1
0xce4	            0xeb3d	                           jmp 0x4000d63	       282	vterm.c	FUNCTION_23	SWITCH_1
0xce6	      0xb801000000	                              mov eax, 1	       283	vterm.c	FUNCTION_23	SWITCH_1
0xceb	            0xeb36	                           jmp 0x4000d63	       283	vterm.c	FUNCTION_23	SWITCH_1
0xced	      0xb803000000	                              mov eax, 3	       284	vterm.c	FUNCTION_23	SWITCH_1
0xcf2	            0xeb2f	                           jmp 0x4000d63	       284	vterm.c	FUNCTION_23	SWITCH_1
0xcf4	      0xb803000000	                              mov eax, 3	       285	vterm.c	FUNCTION_23	SWITCH_1
0xcf9	            0xeb28	                           jmp 0x4000d63	       285	vterm.c	FUNCTION_23	SWITCH_1
0xcfb	      0xb801000000	                              mov eax, 1	       286	vterm.c	FUNCTION_23	SWITCH_1
0xd00	            0xeb21	                           jmp 0x4000d63	       286	vterm.c	FUNCTION_23	SWITCH_1
0xd02	      0xb802000000	                              mov eax, 2	       287	vterm.c	FUNCTION_23	SWITCH_1
0xd07	            0xeb1a	                           jmp 0x4000d63	       287	vterm.c	FUNCTION_23	SWITCH_1
0xd09	      0xb802000000	                              mov eax, 2	       288	vterm.c	FUNCTION_23	SWITCH_1
0xd0e	            0xeb13	                           jmp 0x4000d63	       288	vterm.c	FUNCTION_23	SWITCH_1
0xd10	      0xb803000000	                              mov eax, 3	       289	vterm.c	FUNCTION_23	SWITCH_1
0xd15	            0xeb0c	                           jmp 0x4000d63	       289	vterm.c	FUNCTION_23	SWITCH_1
0xd17	      0xb800000000	                              mov eax, 0	       291	vterm.c	FUNCTION_23	SWITCH_1
0xd1c	            0xeb05	                           jmp 0x4000d63	       291	vterm.c	FUNCTION_23	SWITCH_1
0xd1e	      0xb800000000	                              mov eax, 0	       293	vterm.c	FUNCTION_23
0xd23	              0x5d	                                 pop rbp	       294	vterm.c	FUNCTION_23
0xd24	              0xc3	                                     ret	       294	vterm.c	FUNCTION_23
fill_utf8	WHILE,1:CALL,1:DO,0:SWITCH,1:FOR,0:functions,0:ELSE,0:IF,0	73
0x17a	              0x55	                                push rbp	        24	utf8.h	FUNCTION_31
0x17b	          0x4889e5	                            mov rbp, rsp	        24	utf8.h	FUNCTION_31
0x17e	        0x4883ec20	                           sub rsp, 0x20	        24	utf8.h	FUNCTION_31
0x182	        0x48897de8	             mov qword [rbp - 0x18], rdi	        24	utf8.h	FUNCTION_31
0x186	        0x488975e0	             mov qword [rbp - 0x20], rsi	        24	utf8.h	FUNCTION_31
0x18a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        25	utf8.h	FUNCTION_31	CALL_1
0x18e	          0x4889c7	                            mov rdi, rax	        25	utf8.h	FUNCTION_31	CALL_1
0x191	      0xe800000000	                          call 0x40001d6	        25	utf8.h	FUNCTION_31	CALL_1
0x196	          0x8945fc	                mov dword [rbp - 4], eax	        25	utf8.h	FUNCTION_31	CALL_1
0x199	          0x8b45fc	                mov eax, dword [rbp - 4]	        28	utf8.h	FUNCTION_31
0x19c	          0x8945f8	                mov dword [rbp - 8], eax	        28	utf8.h	FUNCTION_31
0x19f	            0xeb22	                           jmp 0x4000203	        29	utf8.h	FUNCTION_31	WHILE_1
0x1a1	        0x836df801	                  sub dword [rbp - 8], 1	        30	utf8.h	FUNCTION_31	WHILE_1
0x1a5	          0x8b45f8	                mov eax, dword [rbp - 8]	        31	utf8.h	FUNCTION_31	WHILE_1
0x1a8	          0x4863d0	                         movsxd rdx, eax	        31	utf8.h	FUNCTION_31	WHILE_1
0x1ab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        31	utf8.h	FUNCTION_31	WHILE_1
0x1af	          0x4801d0	                            add rax, rdx	        31	utf8.h	FUNCTION_31	WHILE_1
0x1b2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        31	utf8.h	FUNCTION_31	WHILE_1
0x1b6	          0x83e23f	                           and edx, 0x3f	        31	utf8.h	FUNCTION_31	WHILE_1
0x1b9	          0x83ca80	                      or edx, 0xffffff80	        31	utf8.h	FUNCTION_31	WHILE_1
0x1bc	            0x8810	                      mov byte [rax], dl	        31	utf8.h	FUNCTION_31	WHILE_1
0x1be	      0x48c17de806	               sar qword [rbp - 0x18], 6	        32	utf8.h	FUNCTION_31	WHILE_1
0x1c3	        0x837df801	                  cmp dword [rbp - 8], 1	        29	utf8.h	FUNCTION_31	WHILE_1
0x1c7	            0x7fd8	                            jg 0x40001e1	        29	utf8.h	FUNCTION_31	WHILE_1
0x1c9	        0x837dfc06	                  cmp dword [rbp - 4], 6	        35	utf8.h	FUNCTION_31	SWITCH_1
0x1cd	     0xf8781000000	                            ja 0x4000294	        35	utf8.h	FUNCTION_31	SWITCH_1
0x1d3	          0x8b45fc	                mov eax, dword [rbp - 4]	        35	utf8.h	FUNCTION_31	SWITCH_1
0x1d6	    0x488b04c50000	                  mov rax, qword [rax*8]	        35	utf8.h	FUNCTION_31	SWITCH_1
0x1de	            0xffe0	                                 jmp rax	        35	utf8.h	FUNCTION_31	SWITCH_1
0x1e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        36	utf8.h	FUNCTION_31	SWITCH_1
0x1e4	          0x83e07f	                           and eax, 0x7f	        36	utf8.h	FUNCTION_31	SWITCH_1
0x1e7	            0x89c2	                            mov edx, eax	        36	utf8.h	FUNCTION_31	SWITCH_1
0x1e9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        36	utf8.h	FUNCTION_31	SWITCH_1
0x1ed	            0x8810	                      mov byte [rax], dl	        36	utf8.h	FUNCTION_31	SWITCH_1
0x1ef	            0xeb63	                           jmp 0x4000294	        36	utf8.h	FUNCTION_31	SWITCH_1
0x1f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        37	utf8.h	FUNCTION_31	SWITCH_1
0x1f5	          0x83e01f	                           and eax, 0x1f	        37	utf8.h	FUNCTION_31	SWITCH_1
0x1f8	          0x83c8c0	                      or eax, 0xffffffc0	        37	utf8.h	FUNCTION_31	SWITCH_1
0x1fb	            0x89c2	                            mov edx, eax	        37	utf8.h	FUNCTION_31	SWITCH_1
0x1fd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        37	utf8.h	FUNCTION_31	SWITCH_1
0x201	            0x8810	                      mov byte [rax], dl	        37	utf8.h	FUNCTION_31	SWITCH_1
0x203	            0xeb4f	                           jmp 0x4000294	        37	utf8.h	FUNCTION_31	SWITCH_1
0x205	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        38	utf8.h	FUNCTION_31	SWITCH_1
0x209	          0x83e00f	                            and eax, 0xf	        38	utf8.h	FUNCTION_31	SWITCH_1
0x20c	          0x83c8e0	                      or eax, 0xffffffe0	        38	utf8.h	FUNCTION_31	SWITCH_1
0x20f	            0x89c2	                            mov edx, eax	        38	utf8.h	FUNCTION_31	SWITCH_1
0x211	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        38	utf8.h	FUNCTION_31	SWITCH_1
0x215	            0x8810	                      mov byte [rax], dl	        38	utf8.h	FUNCTION_31	SWITCH_1
0x217	            0xeb3b	                           jmp 0x4000294	        38	utf8.h	FUNCTION_31	SWITCH_1
0x219	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        39	utf8.h	FUNCTION_31	SWITCH_1
0x21d	          0x83e007	                              and eax, 7	        39	utf8.h	FUNCTION_31	SWITCH_1
0x220	          0x83c8f0	                      or eax, 0xfffffff0	        39	utf8.h	FUNCTION_31	SWITCH_1
0x223	            0x89c2	                            mov edx, eax	        39	utf8.h	FUNCTION_31	SWITCH_1
0x225	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        39	utf8.h	FUNCTION_31	SWITCH_1
0x229	            0x8810	                      mov byte [rax], dl	        39	utf8.h	FUNCTION_31	SWITCH_1
0x22b	            0xeb27	                           jmp 0x4000294	        39	utf8.h	FUNCTION_31	SWITCH_1
0x22d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        40	utf8.h	FUNCTION_31	SWITCH_1
0x231	          0x83e003	                              and eax, 3	        40	utf8.h	FUNCTION_31	SWITCH_1
0x234	          0x83c8f8	                      or eax, 0xfffffff8	        40	utf8.h	FUNCTION_31	SWITCH_1
0x237	            0x89c2	                            mov edx, eax	        40	utf8.h	FUNCTION_31	SWITCH_1
0x239	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        40	utf8.h	FUNCTION_31	SWITCH_1
0x23d	            0x8810	                      mov byte [rax], dl	        40	utf8.h	FUNCTION_31	SWITCH_1
0x23f	            0xeb13	                           jmp 0x4000294	        40	utf8.h	FUNCTION_31	SWITCH_1
0x241	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	utf8.h	FUNCTION_31	SWITCH_1
0x245	          0x83e001	                              and eax, 1	        41	utf8.h	FUNCTION_31	SWITCH_1
0x248	          0x83c8fc	                      or eax, 0xfffffffc	        41	utf8.h	FUNCTION_31	SWITCH_1
0x24b	            0x89c2	                            mov edx, eax	        41	utf8.h	FUNCTION_31	SWITCH_1
0x24d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        41	utf8.h	FUNCTION_31	SWITCH_1
0x251	            0x8810	                      mov byte [rax], dl	        41	utf8.h	FUNCTION_31	SWITCH_1
0x253	              0x90	                                     nop	        41	utf8.h	FUNCTION_31	SWITCH_1
0x254	          0x8b45fc	                mov eax, dword [rbp - 4]	        44	utf8.h	FUNCTION_31
0x257	              0xc9	                                   leave	        45	utf8.h	FUNCTION_31
0x258	              0xc3	                                     ret	        45	utf8.h	FUNCTION_31
vterm_free	WHILE,0:CALL,5:DO,0:SWITCH,0:FOR,0:functions,0:ELSE,0:IF,2	40
0x3f6	              0x55	                                push rbp	        67	vterm.c	FUNCTION_5
0x3f7	          0x4889e5	                            mov rbp, rsp	        67	vterm.c	FUNCTION_5
0x3fa	        0x4883ec10	                           sub rsp, 0x10	        67	vterm.c	FUNCTION_5
0x3fe	        0x48897df8	                mov qword [rbp - 8], rdi	        67	vterm.c	FUNCTION_5
0x402	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	vterm.c	FUNCTION_5	IF_1
0x406	    0x488b80200100	           mov rax, qword [rax + 0x120] 	        68	vterm.c	FUNCTION_5	IF_1
0x40d	          0x4885c0	                           test rax, rax	        68	vterm.c	FUNCTION_5	IF_1
0x410	            0x7413	                            je 0x4000465	        68	vterm.c	FUNCTION_5	IF_1
0x412	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	vterm.c	FUNCTION_5	CALL_1
0x416	    0x488b80200100	           mov rax, qword [rax + 0x120] 	        69	vterm.c	FUNCTION_5	CALL_1
0x41d	          0x4889c7	                            mov rdi, rax	        69	vterm.c	FUNCTION_5	CALL_1
0x420	      0xe800000000	                          call 0x4000465	        69	vterm.c	FUNCTION_5	CALL_1
0x425	        0x488b45f8	                mov rax, qword [rbp - 8]	        71	vterm.c	FUNCTION_5	IF_2
0x429	    0x488b80180100	           mov rax, qword [rax + 0x118] 	        71	vterm.c	FUNCTION_5	IF_2
0x430	          0x4885c0	                           test rax, rax	        71	vterm.c	FUNCTION_5	IF_2
0x433	            0x7413	                            je 0x4000488	        71	vterm.c	FUNCTION_5	IF_2
0x435	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	vterm.c	FUNCTION_5	CALL_2
0x439	    0x488b80180100	           mov rax, qword [rax + 0x118] 	        72	vterm.c	FUNCTION_5	CALL_2
0x440	          0x4889c7	                            mov rdi, rax	        72	vterm.c	FUNCTION_5	CALL_2
0x443	      0xe800000000	                          call 0x4000488	        72	vterm.c	FUNCTION_5	CALL_2
0x448	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	vterm.c	FUNCTION_5	CALL_3
0x44c	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	        74	vterm.c	FUNCTION_5	CALL_3
0x453	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	vterm.c	FUNCTION_5	CALL_3
0x457	          0x4889d6	                            mov rsi, rdx	        74	vterm.c	FUNCTION_5	CALL_3
0x45a	          0x4889c7	                            mov rdi, rax	        74	vterm.c	FUNCTION_5	CALL_3
0x45d	      0xe800000000	                          call 0x40004a2	        74	vterm.c	FUNCTION_5	CALL_3
0x462	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	vterm.c	FUNCTION_5	CALL_4
0x466	    0x488b90000100	           mov rdx, qword [rax + 0x100] 	        75	vterm.c	FUNCTION_5	CALL_4
0x46d	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	vterm.c	FUNCTION_5	CALL_4
0x471	          0x4889d6	                            mov rsi, rdx	        75	vterm.c	FUNCTION_5	CALL_4
0x474	          0x4889c7	                            mov rdi, rax	        75	vterm.c	FUNCTION_5	CALL_4
0x477	      0xe800000000	                          call 0x40004bc	        75	vterm.c	FUNCTION_5	CALL_4
0x47c	        0x488b55f8	                mov rdx, qword [rbp - 8]	        77	vterm.c	FUNCTION_5	CALL_5
0x480	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	vterm.c	FUNCTION_5	CALL_5
0x484	          0x4889d6	                            mov rsi, rdx	        77	vterm.c	FUNCTION_5	CALL_5
0x487	          0x4889c7	                            mov rdi, rax	        77	vterm.c	FUNCTION_5	CALL_5
0x48a	      0xe800000000	                          call 0x40004cf	        77	vterm.c	FUNCTION_5	CALL_5
0x48f	              0x90	                                     nop	        78	vterm.c	FUNCTION_5
0x490	              0xc9	                                   leave	        78	vterm.c	FUNCTION_5
0x491	              0xc3	                                     ret	        78	vterm.c	FUNCTION_5
