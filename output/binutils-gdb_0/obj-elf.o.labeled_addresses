obj_elf_get_vtable_entry	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,8:DO,0:IF,3:WHILE,0	53
0x4002933	              0x55	                                push rbp	      1536	obj-elf.c	FUNCTION_37
0x4002934	          0x4889e5	                            mov rbp, rsp	      1536	obj-elf.c	FUNCTION_37
0x4002937	        0x4883ec10	                           sub rsp, 0x10	      1536	obj-elf.c	FUNCTION_37
0x400293b	    0x488b05000000	            mov rax, qword [0x04002942] 	      1540	obj-elf.c	FUNCTION_37	IF_1
0x4002942	           0xfb600	                   movzx eax, byte [rax]	      1540	obj-elf.c	FUNCTION_37	IF_1
0x4002945	            0x3c23	                            cmp al, 0x23	      1540	obj-elf.c	FUNCTION_37	IF_1
0x4002947	            0x7512	                           jne 0x400295b	      1540	obj-elf.c	FUNCTION_37	IF_1
0x4002949	    0x488b05000000	            mov rax, qword [0x04002950] 	      1541	obj-elf.c	FUNCTION_37	IF_1
0x4002950	        0x4883c001	                              add rax, 1	      1541	obj-elf.c	FUNCTION_37	IF_1
0x4002954	    0x488905000000	            mov qword [0x0400295b], rax 	      1541	obj-elf.c	FUNCTION_37	IF_1
0x400295b	      0xe8d2deffff	call sym.get_sym_from_input_line_and_check	      1543	obj-elf.c	FUNCTION_37	CALL_1
0x4002960	        0x488945f0	             mov qword [rbp - 0x10], rax	      1543	obj-elf.c	FUNCTION_37	CALL_1
0x4002964	    0x488b05000000	            mov rax, qword [0x0400296b] 	      1544	obj-elf.c	FUNCTION_37	IF_2
0x400296b	           0xfb600	                   movzx eax, byte [rax]	      1544	obj-elf.c	FUNCTION_37	IF_2
0x400296e	            0x3c2c	                            cmp al, 0x2c	      1544	obj-elf.c	FUNCTION_37	IF_2
0x4002970	            0x7423	                            je 0x4002995	      1544	obj-elf.c	FUNCTION_37	IF_2
0x4002972	      0xbf00000000	                              mov edi, 0	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x4002977	      0xe800000000	                          call 0x400297c	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x400297c	          0x4889c7	                            mov rdi, rax	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x400297f	      0xb800000000	                              mov eax, 0	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x4002984	      0xe800000000	                          call 0x4002989	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x4002989	      0xe800000000	                          call 0x400298e	      1547	obj-elf.c	FUNCTION_37	IF_2	CALL_4
0x400298e	      0xb800000000	                              mov eax, 0	      1548	obj-elf.c	FUNCTION_37	IF_2
0x4002993	            0xeb7c	                           jmp 0x4002a11	      1548	obj-elf.c	FUNCTION_37	IF_2
0x4002995	    0x488b05000000	            mov rax, qword [0x0400299c] 	      1551	obj-elf.c	FUNCTION_37
0x400299c	        0x4883c001	                              add rax, 1	      1551	obj-elf.c	FUNCTION_37
0x40029a0	    0x488905000000	            mov qword [0x040029a7], rax 	      1551	obj-elf.c	FUNCTION_37
0x40029a7	    0x488b05000000	            mov rax, qword [0x040029ae] 	      1552	obj-elf.c	FUNCTION_37	IF_3
0x40029ae	           0xfb600	                   movzx eax, byte [rax]	      1552	obj-elf.c	FUNCTION_37	IF_3
0x40029b1	            0x3c23	                            cmp al, 0x23	      1552	obj-elf.c	FUNCTION_37	IF_3
0x40029b3	            0x7512	                           jne 0x40029c7	      1552	obj-elf.c	FUNCTION_37	IF_3
0x40029b5	    0x488b05000000	            mov rax, qword [0x040029bc] 	      1553	obj-elf.c	FUNCTION_37	IF_3
0x40029bc	        0x4883c001	                              add rax, 1	      1553	obj-elf.c	FUNCTION_37	IF_3
0x40029c0	    0x488905000000	            mov qword [0x040029c7], rax 	      1553	obj-elf.c	FUNCTION_37	IF_3
0x40029c7	      0xe800000000	                          call 0x40029cc	      1555	obj-elf.c	FUNCTION_37	CALL_5
0x40029cc	        0x488945f8	                mov qword [rbp - 8], rax	      1555	obj-elf.c	FUNCTION_37	CALL_5
0x40029d0	      0xe800000000	                          call 0x40029d5	      1557	obj-elf.c	FUNCTION_37	CALL_6
0x40029d5	      0xe800000000	                          call 0x40029da	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x40029da	            0x89c6	                            mov esi, eax	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x40029dc	    0x488b05000000	            mov rax, qword [0x040029e3] 	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x40029e3	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x40029e7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x40029eb	        0x4883ec08	                              sub rsp, 8	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x40029ef	      0x68a4050000	                              push 0x5a4	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x40029f4	    0x41b900000000	                              mov r9d, 0	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x40029fa	          0x4989c8	                             mov r8, rcx	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x40029fd	          0x4889d1	                            mov rcx, rdx	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4002a00	      0xba00000000	                              mov edx, 0	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4002a05	          0x4889c7	                            mov rdi, rax	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4002a08	      0xe800000000	                          call 0x4002a0d	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4002a0d	        0x4883c410	                           add rsp, 0x10	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4002a11	              0xc9	                                   leave	      1561	obj-elf.c	FUNCTION_37
0x4002a12	              0xc3	                                     ret	      1561	obj-elf.c	FUNCTION_37
elf_obj_symbol_new_hook	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,2:DO,0:IF,1:WHILE,0	15
0x4002f40	              0x55	                                push rbp	      1772	obj-elf.c	FUNCTION_45
0x4002f41	          0x4889e5	                            mov rbp, rsp	      1772	obj-elf.c	FUNCTION_45
0x4002f44	        0x4883ec20	                           sub rsp, 0x20	      1772	obj-elf.c	FUNCTION_45
0x4002f48	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1772	obj-elf.c	FUNCTION_45
0x4002f4c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1775	obj-elf.c	FUNCTION_45	CALL_1
0x4002f50	          0x4889c7	                            mov rdi, rax	      1775	obj-elf.c	FUNCTION_45	CALL_1
0x4002f53	      0xe800000000	                          call 0x4002f58	      1775	obj-elf.c	FUNCTION_45	CALL_1
0x4002f58	        0x488945f8	                mov qword [rbp - 8], rax	      1775	obj-elf.c	FUNCTION_45	CALL_1
0x4002f5c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1776	obj-elf.c	FUNCTION_45
0x4002f60	    0x48c740080000	                  mov qword [rax + 8], 0	      1776	obj-elf.c	FUNCTION_45
0x4002f68	        0x488b45f8	                mov rax, qword [rbp - 8]	      1777	obj-elf.c	FUNCTION_45
0x4002f6c	    0x48c740100000	               mov qword [rax + 0x10], 0	      1777	obj-elf.c	FUNCTION_45
0x4002f74	              0x90	                                     nop	      1783	obj-elf.c	FUNCTION_45
0x4002f75	              0xc9	                                   leave	      1783	obj-elf.c	FUNCTION_45
0x4002f76	              0xc3	                                     ret	      1783	obj-elf.c	FUNCTION_45
obj_elf_line	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,3:DO,0:IF,0:WHILE,0	12
0x4002411	              0x55	                                push rbp	      1372	obj-elf.c	FUNCTION_33
0x4002412	          0x4889e5	                            mov rbp, rsp	      1372	obj-elf.c	FUNCTION_33
0x4002415	        0x4883ec10	                           sub rsp, 0x10	      1372	obj-elf.c	FUNCTION_33
0x4002419	          0x897dfc	                mov dword [rbp - 4], edi	      1372	obj-elf.c	FUNCTION_33
0x400241c	      0xe800000000	                          call 0x4002421	      1375	obj-elf.c	FUNCTION_33	CALL_2
0x4002421	            0x89c6	                            mov esi, eax	      1375	obj-elf.c	FUNCTION_33	CALL_2
0x4002423	      0xbf00000000	                              mov edi, 0	      1375	obj-elf.c	FUNCTION_33	CALL_2
0x4002428	      0xe800000000	                          call 0x400242d	      1375	obj-elf.c	FUNCTION_33	CALL_2
0x400242d	      0xe800000000	                          call 0x4002432	      1376	obj-elf.c	FUNCTION_33	CALL_3
0x4002432	              0x90	                                     nop	      1377	obj-elf.c	FUNCTION_33
0x4002433	              0xc9	                                   leave	      1377	obj-elf.c	FUNCTION_33
0x4002434	              0xc3	                                     ret	      1377	obj-elf.c	FUNCTION_33
obj_elf_section_type	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,13:DO,0:IF,10:WHILE,0	132
0x4001452	              0x55	                                push rbp	       873	obj-elf.c	FUNCTION_22
0x4001453	          0x4889e5	                            mov rbp, rsp	       873	obj-elf.c	FUNCTION_22
0x4001456	        0x4883ec40	                           sub rsp, 0x40	       873	obj-elf.c	FUNCTION_22
0x400145a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       873	obj-elf.c	FUNCTION_22
0x400145e	        0x488975d0	             mov qword [rbp - 0x30], rsi	       873	obj-elf.c	FUNCTION_22
0x4001462	          0x8955cc	             mov dword [rbp - 0x34], edx	       873	obj-elf.c	FUNCTION_22
0x4001465	    0x64488b042528	                mov rax, qword fs:[0x28]	       873	obj-elf.c	FUNCTION_22
0x400146e	        0x488945f8	                mov qword [rbp - 8], rax	       873	obj-elf.c	FUNCTION_22
0x4001472	            0x31c0	                            xor eax, eax	       873	obj-elf.c	FUNCTION_22
0x4001474	      0x48837dd008	               cmp qword [rbp - 0x30], 8	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x4001479	            0x7524	                           jne 0x400149f	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x400147b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x400147f	      0xba08000000	                              mov edx, 8	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x4001484	      0xbe00000000	                              mov esi, 0	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x4001489	          0x4889c7	                            mov rdi, rax	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x400148c	      0xe800000000	                          call 0x4001491	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x4001491	            0x85c0	                           test eax, eax	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x4001493	            0x750a	                           jne 0x400149f	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x4001495	      0xb801000000	                              mov eax, 1	       875	obj-elf.c	FUNCTION_22	IF_1
0x400149a	      0xe992010000	                           jmp 0x4001631	       875	obj-elf.c	FUNCTION_22	IF_1
0x400149f	      0x48837dd006	               cmp qword [rbp - 0x30], 6	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x40014a4	            0x7524	                           jne 0x40014ca	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x40014a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x40014aa	      0xba06000000	                              mov edx, 6	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x40014af	      0xbe00000000	                              mov esi, 0	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x40014b4	          0x4889c7	                            mov rdi, rax	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x40014b7	      0xe800000000	                          call 0x40014bc	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x40014bc	            0x85c0	                           test eax, eax	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x40014be	            0x750a	                           jne 0x40014ca	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x40014c0	      0xb808000000	                              mov eax, 8	       877	obj-elf.c	FUNCTION_22	IF_2
0x40014c5	      0xe967010000	                           jmp 0x4001631	       877	obj-elf.c	FUNCTION_22	IF_2
0x40014ca	      0x48837dd004	               cmp qword [rbp - 0x30], 4	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40014cf	            0x7524	                           jne 0x40014f5	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40014d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40014d5	      0xba04000000	                              mov edx, 4	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40014da	      0xbe00000000	                              mov esi, 0	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40014df	          0x4889c7	                            mov rdi, rax	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40014e2	      0xe800000000	                          call 0x40014e7	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40014e7	            0x85c0	                           test eax, eax	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40014e9	            0x750a	                           jne 0x40014f5	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40014eb	      0xb807000000	                              mov eax, 7	       879	obj-elf.c	FUNCTION_22	IF_3
0x40014f0	      0xe93c010000	                           jmp 0x4001631	       879	obj-elf.c	FUNCTION_22	IF_3
0x40014f5	      0x48837dd00a	            cmp qword [rbp - 0x30], 0xa 	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x40014fa	            0x7524	                           jne 0x4001520	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x40014fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x4001500	      0xba0a000000	                            mov edx, 0xa	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x4001505	      0xbe00000000	                              mov esi, 0	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x400150a	          0x4889c7	                            mov rdi, rax	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x400150d	      0xe800000000	                          call 0x4001512	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x4001512	            0x85c0	                           test eax, eax	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x4001514	            0x750a	                           jne 0x4001520	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x4001516	      0xb80e000000	                            mov eax, 0xe	       881	obj-elf.c	FUNCTION_22	IF_4
0x400151b	      0xe911010000	                           jmp 0x4001631	       881	obj-elf.c	FUNCTION_22	IF_4
0x4001520	      0x48837dd00a	            cmp qword [rbp - 0x30], 0xa 	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x4001525	            0x7524	                           jne 0x400154b	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x4001527	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x400152b	      0xba0a000000	                            mov edx, 0xa	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x4001530	      0xbe00000000	                              mov esi, 0	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x4001535	          0x4889c7	                            mov rdi, rax	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x4001538	      0xe800000000	                          call 0x400153d	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x400153d	            0x85c0	                           test eax, eax	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x400153f	            0x750a	                           jne 0x400154b	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x4001541	      0xb80f000000	                            mov eax, 0xf	       883	obj-elf.c	FUNCTION_22	IF_5
0x4001546	      0xe9e6000000	                           jmp 0x4001631	       883	obj-elf.c	FUNCTION_22	IF_5
0x400154b	      0x48837dd00d	            cmp qword [rbp - 0x30], 0xd 	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x4001550	            0x7524	                           jne 0x4001576	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x4001552	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x4001556	      0xba0d000000	                            mov edx, 0xd	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x400155b	      0xbe00000000	                              mov esi, 0	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x4001560	          0x4889c7	                            mov rdi, rax	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x4001563	      0xe800000000	                          call 0x4001568	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x4001568	            0x85c0	                           test eax, eax	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x400156a	            0x750a	                           jne 0x4001576	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x400156c	      0xb810000000	                           mov eax, 0x10	       885	obj-elf.c	FUNCTION_22	IF_6
0x4001571	      0xe9bb000000	                           jmp 0x4001631	       885	obj-elf.c	FUNCTION_22	IF_6
0x4001576	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       889	obj-elf.c	FUNCTION_22	CALL_7
0x400157a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       889	obj-elf.c	FUNCTION_22	CALL_7
0x400157e	          0x4889d6	                            mov rsi, rdx	       889	obj-elf.c	FUNCTION_22	CALL_7
0x4001581	          0x4889c7	                            mov rdi, rax	       889	obj-elf.c	FUNCTION_22	CALL_7
0x4001584	      0xe800000000	                          call 0x4001589	       889	obj-elf.c	FUNCTION_22	CALL_7
0x4001589	          0x8945e8	             mov dword [rbp - 0x18], eax	       889	obj-elf.c	FUNCTION_22	CALL_7
0x400158c	        0x837de800	               cmp dword [rbp - 0x18], 0	       890	obj-elf.c	FUNCTION_22	IF_7
0x4001590	            0x7808	                            js 0x400159a	       890	obj-elf.c	FUNCTION_22	IF_7
0x4001592	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       891	obj-elf.c	FUNCTION_22	IF_7
0x4001595	      0xe997000000	                           jmp 0x4001631	       891	obj-elf.c	FUNCTION_22	IF_7
0x400159a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       895	obj-elf.c	FUNCTION_22	IF_8	CALL_8
0x400159e	           0xfb600	                   movzx eax, byte [rax]	       895	obj-elf.c	FUNCTION_22	IF_8	CALL_8
0x40015a1	           0xfbec0	                           movsx eax, al	       895	obj-elf.c	FUNCTION_22	IF_8	CALL_8
0x40015a4	           0xfb6c0	                           movzx eax, al	       895	obj-elf.c	FUNCTION_22	IF_8	CALL_8
0x40015a7	            0x4898	                                    cdqe	       895	obj-elf.c	FUNCTION_22	IF_8	CALL_8
0x40015a9	     0xfb784000000	             movzx eax, word [rax + rax]	       895	obj-elf.c	FUNCTION_22	IF_8	CALL_8
0x40015b1	           0xfb7c0	                           movzx eax, ax	       895	obj-elf.c	FUNCTION_22	IF_8	CALL_8
0x40015b4	          0x83e004	                              and eax, 4	       895	obj-elf.c	FUNCTION_22	IF_8	CALL_8
0x40015b7	            0x85c0	                           test eax, eax	       895	obj-elf.c	FUNCTION_22	IF_8	CALL_8
0x40015b9	            0x7454	                            je 0x400160f	       895	obj-elf.c	FUNCTION_22	IF_8	CALL_8
0x40015bb	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       898	obj-elf.c	FUNCTION_22	IF_8	CALL_9
0x40015bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       898	obj-elf.c	FUNCTION_22	IF_8	CALL_9
0x40015c3	      0xba00000000	                              mov edx, 0	       898	obj-elf.c	FUNCTION_22	IF_8	CALL_9
0x40015c8	          0x4889ce	                            mov rsi, rcx	       898	obj-elf.c	FUNCTION_22	IF_8	CALL_9
0x40015cb	          0x4889c7	                            mov rdi, rax	       898	obj-elf.c	FUNCTION_22	IF_8	CALL_9
0x40015ce	      0xe800000000	                          call 0x40015d3	       898	obj-elf.c	FUNCTION_22	IF_8	CALL_9
0x40015d3	          0x8945ec	             mov dword [rbp - 0x14], eax	       898	obj-elf.c	FUNCTION_22	IF_8	CALL_9
0x40015d6	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       900	obj-elf.c	FUNCTION_22	IF_8	IF_9
0x40015da	            0x742e	                            je 0x400160a	       900	obj-elf.c	FUNCTION_22	IF_8	IF_9
0x40015dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       900	obj-elf.c	FUNCTION_22	IF_8	IF_9
0x40015e0	          0x4889c2	                            mov rdx, rax	       900	obj-elf.c	FUNCTION_22	IF_8	IF_9
0x40015e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       900	obj-elf.c	FUNCTION_22	IF_8	IF_9
0x40015e7	          0x4829c2	                            sub rdx, rax	       900	obj-elf.c	FUNCTION_22	IF_8	IF_9
0x40015ea	          0x4889d0	                            mov rax, rdx	       900	obj-elf.c	FUNCTION_22	IF_8	IF_9
0x40015ed	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       900	obj-elf.c	FUNCTION_22	IF_8	IF_9
0x40015f1	            0x7417	                            je 0x400160a	       900	obj-elf.c	FUNCTION_22	IF_8	IF_9
0x40015f3	      0xbf00000000	                              mov edi, 0	       901	obj-elf.c	FUNCTION_22	IF_8	CALL_11
0x40015f8	      0xe800000000	                          call 0x40015fd	       901	obj-elf.c	FUNCTION_22	IF_8	CALL_11
0x40015fd	          0x4889c7	                            mov rdi, rax	       901	obj-elf.c	FUNCTION_22	IF_8	CALL_11
0x4001600	      0xb800000000	                              mov eax, 0	       901	obj-elf.c	FUNCTION_22	IF_8	CALL_11
0x4001605	      0xe800000000	                          call 0x400160a	       901	obj-elf.c	FUNCTION_22	IF_8	CALL_11
0x400160a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       903	obj-elf.c	FUNCTION_22	IF_8
0x400160d	            0xeb22	                           jmp 0x4001631	       903	obj-elf.c	FUNCTION_22	IF_8
0x400160f	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       906	obj-elf.c	FUNCTION_22	IF_10
0x4001613	            0x7417	                            je 0x400162c	       906	obj-elf.c	FUNCTION_22	IF_10
0x4001615	      0xbf00000000	                              mov edi, 0	       907	obj-elf.c	FUNCTION_22	CALL_13
0x400161a	      0xe800000000	                          call 0x400161f	       907	obj-elf.c	FUNCTION_22	CALL_13
0x400161f	          0x4889c7	                            mov rdi, rax	       907	obj-elf.c	FUNCTION_22	CALL_13
0x4001622	      0xb800000000	                              mov eax, 0	       907	obj-elf.c	FUNCTION_22	CALL_13
0x4001627	      0xe800000000	                          call 0x400162c	       907	obj-elf.c	FUNCTION_22	CALL_13
0x400162c	      0xb800000000	                              mov eax, 0	       908	obj-elf.c	FUNCTION_22
0x4001631	        0x488b4df8	                mov rcx, qword [rbp - 8]	       909	obj-elf.c	FUNCTION_22
0x4001635	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       909	obj-elf.c	FUNCTION_22
0x400163e	            0x7405	                            je 0x4001645	       909	obj-elf.c	FUNCTION_22
0x4001640	      0xe800000000	                          call 0x4001645	       909	obj-elf.c	FUNCTION_22
0x4001645	              0xc9	                                   leave	       909	obj-elf.c	FUNCTION_22
0x4001646	              0xc3	                                     ret	       909	obj-elf.c	FUNCTION_22
elf_separate_stab_sections	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,0:DO,0:IF,0:WHILE,0	5
0x400483b	              0x55	                                push rbp	      2675	obj-elf.c	FUNCTION_66
0x400483c	          0x4889e5	                            mov rbp, rsp	      2675	obj-elf.c	FUNCTION_66
0x400483f	      0xb801000000	                              mov eax, 1	      2679	obj-elf.c	FUNCTION_66
0x4004844	              0x5d	                                 pop rbp	      2681	obj-elf.c	FUNCTION_66
0x4004845	              0xc3	                                     ret	      2681	obj-elf.c	FUNCTION_66
obj_elf_visibility	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,5:DO,1:IF,2:WHILE,0	76
0x4000a22	              0x55	                                push rbp	       473	obj-elf.c	FUNCTION_18
0x4000a23	          0x4889e5	                            mov rbp, rsp	       473	obj-elf.c	FUNCTION_18
0x4000a26	        0x4883ec30	                           sub rsp, 0x30	       473	obj-elf.c	FUNCTION_18
0x4000a2a	          0x897ddc	             mov dword [rbp - 0x24], edi	       473	obj-elf.c	FUNCTION_18
0x4000a2d	      0xe800feffff	call sym.get_sym_from_input_line_and_check	       481	obj-elf.c	FUNCTION_18	DO_1	CALL_1
0x4000a32	        0x488945e8	             mov qword [rbp - 0x18], rax	       481	obj-elf.c	FUNCTION_18	DO_1	CALL_1
0x4000a36	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       483	obj-elf.c	FUNCTION_18	DO_1	CALL_2
0x4000a3a	          0x4889c7	                            mov rdi, rax	       483	obj-elf.c	FUNCTION_18	DO_1	CALL_2
0x4000a3d	      0xe800000000	                          call 0x4000a42	       483	obj-elf.c	FUNCTION_18	DO_1	CALL_2
0x4000a42	        0x488945f0	             mov qword [rbp - 0x10], rax	       483	obj-elf.c	FUNCTION_18	DO_1	CALL_2
0x4000a46	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a4a	          0x488b00	                    mov rax, qword [rax]	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a4d	          0x4885c0	                           test rax, rax	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a50	            0x742c	                            je 0x4000a7e	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a52	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a56	          0x488b00	                    mov rax, qword [rax]	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a59	        0x488b4008	                mov rax, qword [rax + 8]	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a5d	          0x8b4008	                mov eax, dword [rax + 8]	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a60	          0x83f805	                              cmp eax, 5	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a63	            0x7519	                           jne 0x4000a7e	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a65	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a69	          0x488b00	                    mov rax, qword [rax]	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a6c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a73	          0x4885c0	                           test rax, rax	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a76	            0x7406	                            je 0x4000a7e	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a78	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a7c	            0xeb05	                           jmp 0x4000a83	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a7e	      0xb800000000	                              mov eax, 0	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a83	        0x488945f8	                mov qword [rbp - 8], rax	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000a87	      0x48837df800	                  cmp qword [rbp - 8], 0	       486	obj-elf.c	FUNCTION_18	DO_1
0x4000a8c	            0x7514	                           jne 0x4000aa2	       486	obj-elf.c	FUNCTION_18	DO_1
0x4000a8e	      0xba00000000	                              mov edx, 0	       486	obj-elf.c	FUNCTION_18	DO_1
0x4000a93	      0xbee6010000	                          mov esi, 0x1e6	       486	obj-elf.c	FUNCTION_18	DO_1
0x4000a98	      0xbf00000000	                              mov edi, 0	       486	obj-elf.c	FUNCTION_18	DO_1
0x4000a9d	      0xe800000000	                          call 0x4000aa2	       486	obj-elf.c	FUNCTION_18	DO_1
0x4000aa2	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	obj-elf.c	FUNCTION_18	DO_1
0x4000aa6	         0xfb64049	           movzx eax, byte [rax + 0x49] 	       488	obj-elf.c	FUNCTION_18	DO_1
0x4000aaa	          0x83e0fc	                     and eax, 0xfffffffc	       488	obj-elf.c	FUNCTION_18	DO_1
0x4000aad	            0x89c2	                            mov edx, eax	       488	obj-elf.c	FUNCTION_18	DO_1
0x4000aaf	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	obj-elf.c	FUNCTION_18	DO_1
0x4000ab3	          0x885049	               mov byte [rax + 0x49], dl	       488	obj-elf.c	FUNCTION_18	DO_1
0x4000ab6	        0x488b45f8	                mov rax, qword [rbp - 8]	       489	obj-elf.c	FUNCTION_18	DO_1
0x4000aba	         0xfb64049	           movzx eax, byte [rax + 0x49] 	       489	obj-elf.c	FUNCTION_18	DO_1
0x4000abe	            0x89c2	                            mov edx, eax	       489	obj-elf.c	FUNCTION_18	DO_1
0x4000ac0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       489	obj-elf.c	FUNCTION_18	DO_1
0x4000ac3	             0x9d0	                             or eax, edx	       489	obj-elf.c	FUNCTION_18	DO_1
0x4000ac5	            0x89c2	                            mov edx, eax	       489	obj-elf.c	FUNCTION_18	DO_1
0x4000ac7	        0x488b45f8	                mov rax, qword [rbp - 8]	       489	obj-elf.c	FUNCTION_18	DO_1
0x4000acb	          0x885049	               mov byte [rax + 0x49], dl	       489	obj-elf.c	FUNCTION_18	DO_1
0x4000ace	    0x488b05000000	            mov rax, qword [0x04000ad5] 	       491	obj-elf.c	FUNCTION_18	DO_1
0x4000ad5	           0xfb600	                   movzx eax, byte [rax]	       491	obj-elf.c	FUNCTION_18	DO_1
0x4000ad8	           0xfbec0	                           movsx eax, al	       491	obj-elf.c	FUNCTION_18	DO_1
0x4000adb	          0x8945e4	             mov dword [rbp - 0x1c], eax	       491	obj-elf.c	FUNCTION_18	DO_1
0x4000ade	        0x837de42c	           cmp dword [rbp - 0x1c], 0x2c 	       492	obj-elf.c	FUNCTION_18	DO_1	IF_1
0x4000ae2	            0x7547	                           jne 0x4000b2b	       492	obj-elf.c	FUNCTION_18	DO_1	IF_1
0x4000ae4	    0x488b05000000	            mov rax, qword [0x04000aeb] 	       494	obj-elf.c	FUNCTION_18	DO_1	IF_1
0x4000aeb	        0x4883c001	                              add rax, 1	       494	obj-elf.c	FUNCTION_18	DO_1	IF_1
0x4000aef	    0x488905000000	            mov qword [0x04000af6], rax 	       494	obj-elf.c	FUNCTION_18	DO_1	IF_1
0x4000af6	    0x488b05000000	            mov rax, qword [0x04000afd] 	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x4000afd	           0xfb600	                   movzx eax, byte [rax]	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x4000b00	            0x3c20	                            cmp al, 0x20	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x4000b02	            0x7512	                           jne 0x4000b16	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x4000b04	    0x488b05000000	            mov rax, qword [0x04000b0b] 	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x4000b0b	        0x4883c001	                              add rax, 1	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x4000b0f	    0x488905000000	            mov qword [0x04000b16], rax 	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x4000b16	    0x488b05000000	            mov rax, qword [0x04000b1d] 	       498	obj-elf.c	FUNCTION_18	DO_1	IF_1	IF_2
0x4000b1d	           0xfb600	                   movzx eax, byte [rax]	       498	obj-elf.c	FUNCTION_18	DO_1	IF_1	IF_2
0x4000b20	            0x3c0a	                             cmp al, 0xa	       498	obj-elf.c	FUNCTION_18	DO_1	IF_1	IF_2
0x4000b22	            0x7507	                           jne 0x4000b2b	       498	obj-elf.c	FUNCTION_18	DO_1	IF_1	IF_2
0x4000b24	    0xc745e40a0000	             mov dword [rbp - 0x1c], 0xa	       499	obj-elf.c	FUNCTION_18	DO_1	IF_1	IF_2
0x4000b2b	        0x837de42c	           cmp dword [rbp - 0x1c], 0x2c 	       502	obj-elf.c	FUNCTION_18
0x4000b2f	     0xf84f8feffff	                            je 0x4000a2d	       502	obj-elf.c	FUNCTION_18
0x4000b35	      0xe800000000	                          call 0x4000b3a	       504	obj-elf.c	FUNCTION_18	CALL_5
0x4000b3a	              0x90	                                     nop	       505	obj-elf.c	FUNCTION_18
0x4000b3b	              0xc9	                                   leave	       505	obj-elf.c	FUNCTION_18
0x4000b3c	              0xc3	                                     ret	       505	obj-elf.c	FUNCTION_18
obj_elf_parse_section_letters	FOR,0:SWITCH,1:functions,0:ELSE,2:CALL,5:DO,0:IF,4:WHILE,1	123
0x4001251	              0x55	                                push rbp	       788	obj-elf.c	FUNCTION_21
0x4001252	          0x4889e5	                            mov rbp, rsp	       788	obj-elf.c	FUNCTION_21
0x4001255	        0x4883ec50	                           sub rsp, 0x50	       788	obj-elf.c	FUNCTION_21
0x4001259	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       788	obj-elf.c	FUNCTION_21
0x400125d	        0x488975c0	             mov qword [rbp - 0x40], rsi	       788	obj-elf.c	FUNCTION_21
0x4001261	        0x488955b8	             mov qword [rbp - 0x48], rdx	       788	obj-elf.c	FUNCTION_21
0x4001265	    0x64488b042528	                mov rax, qword fs:[0x28]	       788	obj-elf.c	FUNCTION_21
0x400126e	        0x488945f8	                mov qword [rbp - 8], rax	       788	obj-elf.c	FUNCTION_21
0x4001272	            0x31c0	                            xor eax, eax	       788	obj-elf.c	FUNCTION_21
0x4001274	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       789	obj-elf.c	FUNCTION_21
0x400127c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       790	obj-elf.c	FUNCTION_21
0x4001280	    0xc70000000000	                      mov dword [rax], 0	       790	obj-elf.c	FUNCTION_21
0x4001286	      0xe9a2010000	                           jmp 0x400142d	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x400128b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400128f	           0xfb600	                   movzx eax, byte [rax]	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4001292	           0xfbec0	                           movsx eax, al	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4001295	          0x83e83f	                           sub eax, 0x3f	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4001298	          0x83f839	                           cmp eax, 0x39	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400129b	     0xf87c8000000	                            ja 0x4001369	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012a1	            0x89c0	                            mov eax, eax	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012a3	    0x488b04c50000	                  mov rax, qword [rax*8]	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012ab	            0xffe0	                                 jmp rax	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012ad	      0x48834de802	                or qword [rbp - 0x18], 2	       797	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012b2	      0xe96c010000	                           jmp 0x4001423	       798	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012b7	      0xb800000080	                     mov eax, 0x80000000	       800	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012bc	        0x480945e8	              or qword [rbp - 0x18], rax	       800	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012c0	      0xe95e010000	                           jmp 0x4001423	       801	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012c5	      0x48834de801	                or qword [rbp - 0x18], 1	       803	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012ca	      0xe954010000	                           jmp 0x4001423	       804	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012cf	      0x48834de804	                or qword [rbp - 0x18], 4	       806	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012d4	      0xe94a010000	                           jmp 0x4001423	       807	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012d9	      0x48834de810	             or qword [rbp - 0x18], 0x10	       809	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012de	      0xe940010000	                           jmp 0x4001423	       810	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012e3	      0x48834de820	             or qword [rbp - 0x18], 0x20	       812	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012e8	      0xe936010000	                           jmp 0x4001423	       813	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012ed	    0x48814de80002	            or qword [rbp - 0x18], 0x200	       815	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012f5	      0xe929010000	                           jmp 0x4001423	       816	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40012fa	    0x48814de80004	            or qword [rbp - 0x18], 0x400	       818	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4001302	      0xe91c010000	                           jmp 0x4001423	       819	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4001307	    0x48814de80000	        or qword [rbp - 0x18], 0x1000000	       821	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400130f	      0xe90f010000	                           jmp 0x4001423	       822	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4001314	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       824	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4001318	    0xc70001000000	                      mov dword [rax], 1	       824	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400131e	      0xe900010000	                           jmp 0x4001423	       825	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4001323	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       828	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x4001327	        0x4883e801	                              sub rax, 1	       828	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x400132b	           0xfb600	                   movzx eax, byte [rax]	       828	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x400132e	            0x3c61	                            cmp al, 0x61	       828	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x4001330	            0x7537	                           jne 0x4001369	       828	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x4001332	      0x48834de810	             or qword [rbp - 0x18], 0x10	       830	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x4001337	      0x48837dc001	               cmp qword [rbp - 0x40], 1	       831	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x400133c	     0xf86e0000000	                           jbe 0x4001422	       831	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x4001342	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       831	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x4001346	        0x4883c001	                              add rax, 1	       831	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x400134a	           0xfb600	                   movzx eax, byte [rax]	       831	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x400134d	            0x3c73	                            cmp al, 0x73	       831	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x400134f	     0xf85cd000000	                           jne 0x4001422	       831	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x4001355	      0x48834de820	             or qword [rbp - 0x18], 0x20	       833	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x400135a	      0x488345c801	               add qword [rbp - 0x38], 1	       834	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x400135f	      0x48836dc001	               sub qword [rbp - 0x40], 1	       834	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x4001364	      0xe9b9000000	                           jmp 0x4001422	       836	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x4001369	      0xbf00000000	                              mov edi, 0	       841	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_1
0x400136e	      0xe800000000	                          call 0x4001373	       841	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_1
0x4001373	        0x488945d8	             mov qword [rbp - 0x28], rax	       841	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_1
0x4001377	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       844	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_2
0x400137b	           0xfb600	                   movzx eax, byte [rax]	       844	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_2
0x400137e	           0xfbec0	                           movsx eax, al	       844	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_2
0x4001381	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       844	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_2
0x4001385	          0x4889d6	                            mov rsi, rdx	       844	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_2
0x4001388	            0x89c7	                            mov edi, eax	       844	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_2
0x400138a	      0xe800000000	                          call 0x400138f	       844	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_2
0x400138f	        0x488945f0	             mov qword [rbp - 0x10], rax	       844	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_2
0x4001393	      0x48837df0ff	cmp qword [rbp - 0x10], 0xffffffffffffffff	       845	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_3
0x4001398	            0x740a	                            je 0x40013a4	       845	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_3
0x400139a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       846	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_3
0x400139e	        0x480945e8	              or qword [rbp - 0x18], rax	       846	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_3
0x40013a2	            0xeb7f	                           jmp 0x4001423	       863	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40013a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       849	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_3
0x40013a8	           0xfb600	                   movzx eax, byte [rax]	       849	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_3
0x40013ab	           0xfbec0	                           movsx eax, al	       849	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_3
0x40013ae	           0xfb6c0	                           movzx eax, al	       849	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_3
0x40013b1	            0x4898	                                    cdqe	       849	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_3
0x40013b3	     0xfb784000000	             movzx eax, word [rax + rax]	       849	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_3
0x40013bb	           0xfb7c0	                           movzx eax, ax	       849	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_3
0x40013be	          0x83e004	                              and eax, 4	       849	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_3
0x40013c1	            0x85c0	                           test eax, eax	       849	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_3
0x40013c3	            0x7447	                            je 0x400140c	       849	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_3
0x40013c5	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       853	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_4
0x40013c9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       853	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_4
0x40013cd	      0xba00000000	                              mov edx, 0	       853	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_4
0x40013d2	          0x4889ce	                            mov rsi, rcx	       853	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_4
0x40013d5	          0x4889c7	                            mov rdi, rax	       853	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_4
0x40013d8	      0xe800000000	                          call 0x40013dd	       853	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_4
0x40013dd	        0x480945e8	              or qword [rbp - 0x18], rax	       853	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_4
0x40013e1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       856	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40013e5	        0x4883e801	                              sub rax, 1	       856	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40013e9	        0x488945e0	             mov qword [rbp - 0x20], rax	       856	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40013ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       857	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40013f1	          0x4889c2	                            mov rdx, rax	       857	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40013f4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       857	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40013f8	          0x4829c2	                            sub rdx, rax	       857	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40013fb	          0x4889d0	                            mov rax, rdx	       857	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40013fe	        0x482945c0	             sub qword [rbp - 0x40], rax	       857	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4001402	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       858	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4001406	        0x488945c8	             mov qword [rbp - 0x38], rax	       858	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x400140a	            0xeb17	                           jmp 0x4001423	       863	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400140c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       861	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_5
0x4001410	          0x4889c6	                            mov rsi, rax	       861	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_5
0x4001413	      0xbf00000000	                              mov edi, 0	       861	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_5
0x4001418	      0xb800000000	                              mov eax, 0	       861	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_5
0x400141d	      0xe800000000	                          call 0x4001422	       861	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_5
0x4001422	              0x90	                                     nop	       836	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x4001423	      0x488345c801	               add qword [rbp - 0x38], 1	       865	obj-elf.c	FUNCTION_21	WHILE_1
0x4001428	      0x48836dc001	               sub qword [rbp - 0x40], 1	       865	obj-elf.c	FUNCTION_21	WHILE_1
0x400142d	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x4001432	     0xf8553feffff	                           jne 0x400128b	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x4001438	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       868	obj-elf.c	FUNCTION_21
0x400143c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       869	obj-elf.c	FUNCTION_21
0x4001440	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       869	obj-elf.c	FUNCTION_21
0x4001449	            0x7405	                            je 0x4001450	       869	obj-elf.c	FUNCTION_21
0x400144b	      0xe800000000	                          call 0x4001450	       869	obj-elf.c	FUNCTION_21
0x4001450	              0xc9	                                   leave	       869	obj-elf.c	FUNCTION_21
0x4001451	              0xc3	                                     ret	       869	obj-elf.c	FUNCTION_21
elf_s_set_align	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:DO,0:IF,0:WHILE,0	14
0x40001bc	              0x55	                                push rbp	       239	obj-elf.c	FUNCTION_6
0x40001bd	          0x4889e5	                            mov rbp, rsp	       239	obj-elf.c	FUNCTION_6
0x40001c0	        0x4883ec10	                           sub rsp, 0x10	       239	obj-elf.c	FUNCTION_6
0x40001c4	        0x48897df8	                mov qword [rbp - 8], rdi	       239	obj-elf.c	FUNCTION_6
0x40001c8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       239	obj-elf.c	FUNCTION_6
0x40001cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       240	obj-elf.c	FUNCTION_6	CALL_1
0x40001d0	          0x4889c7	                            mov rdi, rax	       240	obj-elf.c	FUNCTION_6	CALL_1
0x40001d3	      0xe800000000	                          call 0x40001d8	       240	obj-elf.c	FUNCTION_6	CALL_1
0x40001d8	          0x4889c2	                            mov rdx, rax	       240	obj-elf.c	FUNCTION_6	CALL_1
0x40001db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       240	obj-elf.c	FUNCTION_6	CALL_1
0x40001df	        0x48894230	             mov qword [rdx + 0x30], rax	       240	obj-elf.c	FUNCTION_6	CALL_1
0x40001e3	              0x90	                                     nop	       241	obj-elf.c	FUNCTION_6
0x40001e4	              0xc9	                                   leave	       241	obj-elf.c	FUNCTION_6
0x40001e5	              0xc3	                                     ret	       241	obj-elf.c	FUNCTION_6
obj_elf_text	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,3:DO,0:IF,0:WHILE,0	14
0x400224b	              0x55	                                push rbp	      1254	obj-elf.c	FUNCTION_27
0x400224c	          0x4889e5	                            mov rbp, rsp	      1254	obj-elf.c	FUNCTION_27
0x400224f	        0x4883ec10	                           sub rsp, 0x10	      1254	obj-elf.c	FUNCTION_27
0x4002253	          0x897dfc	                mov dword [rbp - 4], edi	      1254	obj-elf.c	FUNCTION_27
0x4002256	    0x488b05000000	            mov rax, qword [0x0400225d] 	      1259	obj-elf.c	FUNCTION_27
0x400225d	    0x488905000000	            mov qword [0x04002264], rax 	      1259	obj-elf.c	FUNCTION_27
0x4002264	    0x8b0500000000	            mov eax, dword [0x0400226a] 	      1260	obj-elf.c	FUNCTION_27
0x400226a	    0x890500000000	            mov dword [0x04002270], eax 	      1260	obj-elf.c	FUNCTION_27
0x4002270	          0x8b45fc	                mov eax, dword [rbp - 4]	      1261	obj-elf.c	FUNCTION_27	CALL_2
0x4002273	            0x89c7	                            mov edi, eax	      1261	obj-elf.c	FUNCTION_27	CALL_2
0x4002275	      0xe800000000	                          call 0x400227a	      1261	obj-elf.c	FUNCTION_27	CALL_2
0x400227a	              0x90	                                     nop	      1266	obj-elf.c	FUNCTION_27
0x400227b	              0xc9	                                   leave	      1266	obj-elf.c	FUNCTION_27
0x400227c	              0xc3	                                     ret	      1266	obj-elf.c	FUNCTION_27
elf_frob_symbol	FOR,0:SWITCH,0:functions,0:ELSE,5:CALL,49:DO,0:IF,16:WHILE,0	246
0x4003d93	              0x55	                                push rbp	      2211	obj-elf.c	FUNCTION_57
0x4003d94	          0x4889e5	                            mov rbp, rsp	      2211	obj-elf.c	FUNCTION_57
0x4003d97	            0x4154	                                push r12	      2211	obj-elf.c	FUNCTION_57
0x4003d99	              0x53	                                push rbx	      2211	obj-elf.c	FUNCTION_57
0x4003d9a	        0x4883ec40	                           sub rsp, 0x40	      2211	obj-elf.c	FUNCTION_57
0x4003d9e	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2211	obj-elf.c	FUNCTION_57
0x4003da2	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2211	obj-elf.c	FUNCTION_57
0x4003da6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2220	obj-elf.c	FUNCTION_57	CALL_2
0x4003daa	          0x4889c7	                            mov rdi, rax	      2220	obj-elf.c	FUNCTION_57	CALL_2
0x4003dad	      0xe800000000	                          call 0x4003db2	      2220	obj-elf.c	FUNCTION_57	CALL_2
0x4003db2	        0x488945c8	             mov qword [rbp - 0x38], rax	      2220	obj-elf.c	FUNCTION_57	CALL_2
0x4003db6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2222	obj-elf.c	FUNCTION_57
0x4003dba	        0x488b4008	                mov rax, qword [rax + 8]	      2222	obj-elf.c	FUNCTION_57
0x4003dbe	        0x488945d0	             mov qword [rbp - 0x30], rax	      2222	obj-elf.c	FUNCTION_57
0x4003dc2	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      2223	obj-elf.c	FUNCTION_57	IF_2
0x4003dc7	     0xf84b3000000	                            je 0x4003e80	      2223	obj-elf.c	FUNCTION_57	IF_2
0x4003dcd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2225	obj-elf.c	FUNCTION_57	IF_2	IF_3	CALL_3
0x4003dd1	          0x4889c7	                            mov rdi, rax	      2225	obj-elf.c	FUNCTION_57	IF_2	IF_3	CALL_3
0x4003dd4	      0xe800000000	                          call 0x4003dd9	      2225	obj-elf.c	FUNCTION_57	IF_2	IF_3	CALL_3
0x4003dd9	            0x85c0	                           test eax, eax	      2225	obj-elf.c	FUNCTION_57	IF_2	IF_3	CALL_3
0x4003ddb	            0x7429	                            je 0x4003e06	      2225	obj-elf.c	FUNCTION_57	IF_2	IF_3	CALL_3
0x4003ddd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2226	obj-elf.c	FUNCTION_57	IF_2	IF_3
0x4003de1	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      2226	obj-elf.c	FUNCTION_57	IF_2	IF_3
0x4003de5	            0x3c02	                               cmp al, 2	      2226	obj-elf.c	FUNCTION_57	IF_2	IF_3
0x4003de7	            0x751d	                           jne 0x4003e06	      2226	obj-elf.c	FUNCTION_57	IF_2	IF_3
0x4003de9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x4003ded	          0x4889c7	                            mov rdi, rax	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x4003df0	      0xe800000000	                          call 0x4003df5	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x4003df5	          0x4889c2	                            mov rdx, rax	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x4003df8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x4003dfc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x4003e00	        0x48894238	             mov qword [rdx + 0x38], rax	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x4003e04	            0xeb5e	                           jmp 0x4003e64	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x4003e06	    0x8b0500000000	            mov eax, dword [0x04003e0c] 	      2230	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x4003e0c	            0x85c0	                           test eax, eax	      2230	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x4003e0e	            0x752b	                           jne 0x4003e3b	      2230	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x4003e10	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4003e14	          0x4889c7	                            mov rdi, rax	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4003e17	      0xe800000000	                          call 0x4003e1c	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4003e1c	          0x4889c3	                            mov rbx, rax	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4003e1f	      0xbf00000000	                              mov edi, 0	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4003e24	      0xe800000000	                          call 0x4003e29	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4003e29	          0x4889de	                            mov rsi, rbx	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4003e2c	          0x4889c7	                            mov rdi, rax	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4003e2f	      0xb800000000	                              mov eax, 0	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4003e34	      0xe800000000	                          call 0x4003e39	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4003e39	            0xeb29	                           jmp 0x4003e64	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4003e3b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4003e3f	          0x4889c7	                            mov rdi, rax	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4003e42	      0xe800000000	                          call 0x4003e47	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4003e47	          0x4889c3	                            mov rbx, rax	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4003e4a	      0xbf00000000	                              mov edi, 0	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4003e4f	      0xe800000000	                          call 0x4003e54	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4003e54	          0x4889de	                            mov rsi, rbx	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4003e57	          0x4889c7	                            mov rdi, rax	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4003e5a	      0xb800000000	                              mov eax, 0	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4003e5f	      0xe800000000	                          call 0x4003e64	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4003e64	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2237	obj-elf.c	FUNCTION_57	IF_2	CALL_11
0x4003e68	        0x488b4008	                mov rax, qword [rax + 8]	      2237	obj-elf.c	FUNCTION_57	IF_2	CALL_11
0x4003e6c	          0x4889c7	                            mov rdi, rax	      2237	obj-elf.c	FUNCTION_57	IF_2	CALL_11
0x4003e6f	      0xe800000000	                          call 0x4003e74	      2237	obj-elf.c	FUNCTION_57	IF_2	CALL_11
0x4003e74	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2238	obj-elf.c	FUNCTION_57	IF_2
0x4003e78	    0x48c740080000	                  mov qword [rax + 8], 0	      2238	obj-elf.c	FUNCTION_57	IF_2
0x4003e80	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2241	obj-elf.c	FUNCTION_57	IF_5
0x4003e84	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2241	obj-elf.c	FUNCTION_57	IF_5
0x4003e88	          0x4885c0	                           test rax, rax	      2241	obj-elf.c	FUNCTION_57	IF_5
0x4003e8b	     0xf8446020000	                            je 0x40040d7	      2241	obj-elf.c	FUNCTION_57	IF_5
0x4003e91	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2245	obj-elf.c	FUNCTION_57	IF_5	CALL_12
0x4003e95	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2245	obj-elf.c	FUNCTION_57	IF_5	CALL_12
0x4003e99	      0xbe40000000	                           mov esi, 0x40	      2245	obj-elf.c	FUNCTION_57	IF_5	CALL_12
0x4003e9e	          0x4889c7	                            mov rdi, rax	      2245	obj-elf.c	FUNCTION_57	IF_5	CALL_12
0x4003ea1	      0xe800000000	                          call 0x4003ea6	      2245	obj-elf.c	FUNCTION_57	IF_5	CALL_12
0x4003ea6	        0x488945d8	             mov qword [rbp - 0x28], rax	      2245	obj-elf.c	FUNCTION_57	IF_5	CALL_12
0x4003eaa	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2246	obj-elf.c	FUNCTION_57	IF_5	IF_6
0x4003eaf	            0x750f	                           jne 0x4003ec0	      2246	obj-elf.c	FUNCTION_57	IF_5	IF_6
0x4003eb1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2248	obj-elf.c	FUNCTION_57	IF_5	IF_6
0x4003eb5	    0xc70001000000	                      mov dword [rax], 1	      2248	obj-elf.c	FUNCTION_57	IF_5	IF_6
0x4003ebb	      0xe917020000	                           jmp 0x40040d7	      2248	obj-elf.c	FUNCTION_57	IF_5	IF_6
0x4003ec0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2261	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_13
0x4003ec4	          0x4889c7	                            mov rdi, rax	      2261	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_13
0x4003ec7	      0xe800000000	                          call 0x4003ecc	      2261	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_13
0x4003ecc	            0x85c0	                           test eax, eax	      2261	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_13
0x4003ece	            0x7557	                           jne 0x4003f27	      2261	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_13
0x4003ed0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2266	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8
0x4003ed4	        0x4883c001	                              add rax, 1	      2266	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8
0x4003ed8	           0xfb600	                   movzx eax, byte [rax]	      2266	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8
0x4003edb	            0x3c40	                            cmp al, 0x40	      2266	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8
0x4003edd	            0x752c	                           jne 0x4003f0b	      2266	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8
0x4003edf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x4003ee3	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x4003ee7	      0xbf00000000	                              mov edi, 0	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x4003eec	      0xe800000000	                          call 0x4003ef1	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x4003ef1	          0x4889de	                            mov rsi, rbx	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x4003ef4	          0x4889c7	                            mov rdi, rax	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x4003ef7	      0xb800000000	                              mov eax, 0	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x4003efc	      0xe800000000	                          call 0x4003f01	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x4003f01	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2271	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8
0x4003f05	    0xc70001000000	                      mov dword [rax], 1	      2271	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8
0x4003f0b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2273	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_16
0x4003f0f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2273	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_16
0x4003f13	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2273	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_16
0x4003f17	          0x4889d6	                            mov rsi, rdx	      2273	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_16
0x4003f1a	          0x4889c7	                            mov rdi, rax	      2273	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_16
0x4003f1d	      0xe800000000	                          call 0x4003f22	      2273	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_16
0x4003f22	      0xe9b0010000	                           jmp 0x40040d7	      2273	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_16
0x4003f27	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4003f2b	        0x4883c001	                              add rax, 1	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4003f2f	           0xfb600	                   movzx eax, byte [rax]	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4003f32	            0x3c40	                            cmp al, 0x40	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4003f34	            0x7562	                           jne 0x4003f98	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4003f36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4003f3a	        0x4883c002	                              add rax, 2	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4003f3e	           0xfb600	                   movzx eax, byte [rax]	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4003f41	            0x3c40	                            cmp al, 0x40	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4003f43	            0x7553	                           jne 0x4003f98	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4003f45	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2283	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_17
0x4003f49	        0x4883c003	                              add rax, 3	      2283	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_17
0x4003f4d	          0x4889c7	                            mov rdi, rax	      2283	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_17
0x4003f50	      0xe800000000	                          call 0x4003f55	      2283	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_17
0x4003f55	        0x4883c001	                              add rax, 1	      2283	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_17
0x4003f59	        0x488945e0	             mov qword [rbp - 0x20], rax	      2283	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_17
0x4003f5d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2284	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_18
0x4003f61	        0x488d7003	                      lea rsi, [rax + 3]	      2284	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_18
0x4003f65	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2284	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_18
0x4003f69	        0x488d4802	                      lea rcx, [rax + 2]	      2284	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_18
0x4003f6d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2284	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_18
0x4003f71	          0x4889c2	                            mov rdx, rax	      2284	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_18
0x4003f74	          0x4889cf	                            mov rdi, rcx	      2284	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_18
0x4003f77	      0xe800000000	                          call 0x4003f7c	      2284	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_18
0x4003f7c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2285	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_19
0x4003f80	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2285	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_19
0x4003f84	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2285	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_19
0x4003f88	          0x4889d6	                            mov rsi, rdx	      2285	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_19
0x4003f8b	          0x4889c7	                            mov rdi, rax	      2285	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_19
0x4003f8e	      0xe800000000	                          call 0x4003f93	      2285	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_19
0x4003f93	      0xe93f010000	                           jmp 0x40040d7	      2278	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4003f98	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2298	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_20
0x4003f9c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2298	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_20
0x4003fa0	          0x4889c7	                            mov rdi, rax	      2298	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_20
0x4003fa3	      0xe800000000	                          call 0x4003fa8	      2298	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_20
0x4003fa8	        0x488945e8	             mov qword [rbp - 0x18], rax	      2298	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_20
0x4003fac	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2301	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_21
0x4003fb0	          0x4889c7	                            mov rdi, rax	      2301	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_21
0x4003fb3	      0xe800000000	                          call 0x4003fb8	      2301	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_21
0x4003fb8	            0x85c0	                           test eax, eax	      2301	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_21
0x4003fba	            0x7443	                            je 0x4003fff	      2301	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_21
0x4003fbc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4003fc0	          0x4889c7	                            mov rdi, rax	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4003fc3	      0xe800000000	                          call 0x4003fc8	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4003fc8	          0x4989c4	                            mov r12, rax	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4003fcb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4003fcf	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4003fd3	      0xbf00000000	                              mov edi, 0	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4003fd8	      0xe800000000	                          call 0x4003fdd	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4003fdd	          0x4c89e2	                            mov rdx, r12	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4003fe0	          0x4889de	                            mov rsi, rbx	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4003fe3	          0x4889c7	                            mov rdi, rax	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4003fe6	      0xb800000000	                              mov eax, 0	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4003feb	      0xe800000000	                          call 0x4003ff0	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4003ff0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2305	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10
0x4003ff4	    0xc70001000000	                      mov dword [rax], 1	      2305	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10
0x4003ffa	      0xe921010000	                           jmp 0x4004120	      2306	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10
0x4003fff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2309	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_26
0x4004003	          0x4889c7	                            mov rdi, rax	      2309	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_26
0x4004006	      0xe800000000	                          call 0x400400b	      2309	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_26
0x400400b	          0x4889c2	                            mov rdx, rax	      2309	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_26
0x400400e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2309	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_26
0x4004012	          0x4889d6	                            mov rsi, rdx	      2309	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_26
0x4004015	          0x4889c7	                            mov rdi, rax	      2309	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_26
0x4004018	      0xe800000000	                          call 0x400401d	      2309	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_26
0x400401d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2314	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_28
0x4004021	          0x4889c7	                            mov rdi, rax	      2314	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_28
0x4004024	      0xe800000000	                          call 0x4004029	      2314	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_28
0x4004029	          0x4889c3	                            mov rbx, rax	      2314	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_28
0x400402c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2315	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_29
0x4004030	          0x4889c7	                            mov rdi, rax	      2315	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_29
0x4004033	      0xe800000000	                          call 0x4004038	      2315	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_29
0x4004038	          0x488b00	                    mov rax, qword [rax]	      2315	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_29
0x400403b	          0x4829c3	                            sub rbx, rax	      2313	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_27
0x400403e	          0x4889da	                            mov rdx, rbx	      2313	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_27
0x4004041	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2313	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_27
0x4004045	          0x4889d6	                            mov rsi, rdx	      2313	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_27
0x4004048	          0x4889c7	                            mov rdi, rax	      2313	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_27
0x400404b	      0xe800000000	                          call 0x4004050	      2313	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_27
0x4004050	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x4004054	          0x4889c7	                            mov rdi, rax	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x4004057	      0xe800000000	                          call 0x400405c	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x400405c	          0x4889c2	                            mov rdx, rax	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x400405f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x4004063	          0x4889d6	                            mov rsi, rdx	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x4004066	          0x4889c7	                            mov rdi, rax	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x4004069	      0xe800000000	                          call 0x400406e	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x400406e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2320	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_32
0x4004072	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2320	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_32
0x4004076	          0x4889d6	                            mov rsi, rdx	      2320	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_32
0x4004079	          0x4889c7	                            mov rdi, rax	      2320	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_32
0x400407c	      0xe800000000	                          call 0x4004081	      2320	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_32
0x4004081	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x4004085	          0x4889c7	                            mov rdi, rax	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x4004088	      0xe800000000	                          call 0x400408d	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x400408d	          0x4889c3	                            mov rbx, rax	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x4004090	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x4004094	          0x4889c7	                            mov rdi, rax	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x4004097	      0xe800000000	                          call 0x400409c	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x400409c	          0x884349	               mov byte [rbx + 0x49], al	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x400409f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2324	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_11	CALL_35
0x40040a3	          0x4889c7	                            mov rdi, rax	      2324	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_11	CALL_35
0x40040a6	      0xe800000000	                          call 0x40040ab	      2324	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_11	CALL_35
0x40040ab	            0x85c0	                           test eax, eax	      2324	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_11	CALL_35
0x40040ad	            0x740c	                            je 0x40040bb	      2324	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_11	CALL_35
0x40040af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2325	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_36
0x40040b3	          0x4889c7	                            mov rdi, rax	      2325	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_36
0x40040b6	      0xe800000000	                          call 0x40040bb	      2325	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_36
0x40040bb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2327	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_12	CALL_37
0x40040bf	          0x4889c7	                            mov rdi, rax	      2327	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_12	CALL_37
0x40040c2	      0xe800000000	                          call 0x40040c7	      2327	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_12	CALL_37
0x40040c7	            0x85c0	                           test eax, eax	      2327	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_12	CALL_37
0x40040c9	            0x740c	                            je 0x40040d7	      2327	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_12	CALL_37
0x40040cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2328	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_38
0x40040cf	          0x4889c7	                            mov rdi, rax	      2328	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_38
0x40040d2	      0xe800000000	                          call 0x40040d7	      2328	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_38
0x40040d7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2334	obj-elf.c	FUNCTION_57	IF_13	CALL_39
0x40040db	          0x4889c7	                            mov rdi, rax	      2334	obj-elf.c	FUNCTION_57	IF_13	CALL_39
0x40040de	      0xe800000000	                          call 0x40040e3	      2334	obj-elf.c	FUNCTION_57	IF_13	CALL_39
0x40040e3	            0x85c0	                           test eax, eax	      2334	obj-elf.c	FUNCTION_57	IF_13	CALL_39
0x40040e5	            0x7439	                            je 0x4004120	      2334	obj-elf.c	FUNCTION_57	IF_13	CALL_39
0x40040e7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2336	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_40
0x40040eb	          0x4889c7	                            mov rdi, rax	      2336	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_40
0x40040ee	      0xe800000000	                          call 0x40040f3	      2336	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_40
0x40040f3	            0x85c0	                           test eax, eax	      2336	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_40
0x40040f5	            0x7429	                            je 0x4004120	      2336	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_40
0x40040f7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x40040fb	          0x4889c7	                            mov rdi, rax	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x40040fe	      0xe800000000	                          call 0x4004103	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4004103	          0x4889c3	                            mov rbx, rax	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4004106	      0xbf00000000	                              mov edi, 0	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x400410b	      0xe800000000	                          call 0x4004110	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4004110	          0x4889de	                            mov rsi, rbx	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4004113	          0x4889c7	                            mov rdi, rax	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4004116	      0xb800000000	                              mov eax, 0	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x400411b	      0xe800000000	                          call 0x4004120	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4004120	        0x4883c440	                           add rsp, 0x40	      2357	obj-elf.c	FUNCTION_57
0x4004124	              0x5b	                                 pop rbx	      2357	obj-elf.c	FUNCTION_57
0x4004125	            0x415c	                                 pop r12	      2357	obj-elf.c	FUNCTION_57
0x4004127	              0x5d	                                 pop rbp	      2357	obj-elf.c	FUNCTION_57
0x4004128	              0xc3	                                     ret	      2357	obj-elf.c	FUNCTION_57
obj_elf_section_word	FOR,0:SWITCH,0:functions,0:ELSE,1:CALL,9:DO,0:IF,7:WHILE,0	92
0x4001647	              0x55	                                push rbp	       913	obj-elf.c	FUNCTION_23
0x4001648	          0x4889e5	                            mov rbp, rsp	       913	obj-elf.c	FUNCTION_23
0x400164b	        0x4883ec30	                           sub rsp, 0x30	       913	obj-elf.c	FUNCTION_23
0x400164f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       913	obj-elf.c	FUNCTION_23
0x4001653	        0x488975e0	             mov qword [rbp - 0x20], rsi	       913	obj-elf.c	FUNCTION_23
0x4001657	        0x488955d8	             mov qword [rbp - 0x28], rdx	       913	obj-elf.c	FUNCTION_23
0x400165b	      0x48837de005	               cmp qword [rbp - 0x20], 5	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4001660	            0x7524	                           jne 0x4001686	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4001662	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4001666	      0xba05000000	                              mov edx, 5	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x400166b	      0xbe00000000	                              mov esi, 0	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4001670	          0x4889c7	                            mov rdi, rax	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4001673	      0xe800000000	                          call 0x4001678	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4001678	            0x85c0	                           test eax, eax	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x400167a	            0x750a	                           jne 0x4001686	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x400167c	      0xb801000000	                              mov eax, 1	       917	obj-elf.c	FUNCTION_23	IF_1
0x4001681	      0xe915010000	                           jmp 0x400179b	       917	obj-elf.c	FUNCTION_23	IF_1
0x4001686	      0x48837de005	               cmp qword [rbp - 0x20], 5	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x400168b	            0x7524	                           jne 0x40016b1	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x400168d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x4001691	      0xba05000000	                              mov edx, 5	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x4001696	      0xbe00000000	                              mov esi, 0	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x400169b	          0x4889c7	                            mov rdi, rax	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x400169e	      0xe800000000	                          call 0x40016a3	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x40016a3	            0x85c0	                           test eax, eax	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x40016a5	            0x750a	                           jne 0x40016b1	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x40016a7	      0xb802000000	                              mov eax, 2	       919	obj-elf.c	FUNCTION_23	IF_2
0x40016ac	      0xe9ea000000	                           jmp 0x400179b	       919	obj-elf.c	FUNCTION_23	IF_2
0x40016b1	      0x48837de009	               cmp qword [rbp - 0x20], 9	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40016b6	            0x7524	                           jne 0x40016dc	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40016b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40016bc	      0xba09000000	                              mov edx, 9	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40016c1	      0xbe00000000	                              mov esi, 0	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40016c6	          0x4889c7	                            mov rdi, rax	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40016c9	      0xe800000000	                          call 0x40016ce	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40016ce	            0x85c0	                           test eax, eax	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40016d0	            0x750a	                           jne 0x40016dc	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40016d2	      0xb804000000	                              mov eax, 4	       921	obj-elf.c	FUNCTION_23	IF_3
0x40016d7	      0xe9bf000000	                           jmp 0x400179b	       921	obj-elf.c	FUNCTION_23	IF_3
0x40016dc	      0x48837de007	               cmp qword [rbp - 0x20], 7	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x40016e1	            0x7524	                           jne 0x4001707	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x40016e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x40016e7	      0xba07000000	                              mov edx, 7	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x40016ec	      0xbe00000000	                              mov esi, 0	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x40016f1	          0x4889c7	                            mov rdi, rax	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x40016f4	      0xe800000000	                          call 0x40016f9	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x40016f9	            0x85c0	                           test eax, eax	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x40016fb	            0x750a	                           jne 0x4001707	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x40016fd	      0xb800000080	                     mov eax, 0x80000000	       923	obj-elf.c	FUNCTION_23	IF_4
0x4001702	      0xe994000000	                           jmp 0x400179b	       923	obj-elf.c	FUNCTION_23	IF_4
0x4001707	      0x48837de003	               cmp qword [rbp - 0x20], 3	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x400170c	            0x7521	                           jne 0x400172f	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x400170e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4001712	      0xba03000000	                              mov edx, 3	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4001717	      0xbe00000000	                              mov esi, 0	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x400171c	          0x4889c7	                            mov rdi, rax	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x400171f	      0xe800000000	                          call 0x4001724	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4001724	            0x85c0	                           test eax, eax	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4001726	            0x7507	                           jne 0x400172f	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4001728	      0xb800040000	                          mov eax, 0x400	       925	obj-elf.c	FUNCTION_23	IF_5
0x400172d	            0xeb6c	                           jmp 0x400179b	       925	obj-elf.c	FUNCTION_23	IF_5
0x400172f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       929	obj-elf.c	FUNCTION_23	CALL_6
0x4001733	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       929	obj-elf.c	FUNCTION_23	CALL_6
0x4001737	          0x4889d6	                            mov rsi, rdx	       929	obj-elf.c	FUNCTION_23	CALL_6
0x400173a	          0x4889c7	                            mov rdi, rax	       929	obj-elf.c	FUNCTION_23	CALL_6
0x400173d	      0xe800000000	                          call 0x4001742	       929	obj-elf.c	FUNCTION_23	CALL_6
0x4001742	        0x488945f8	                mov qword [rbp - 8], rax	       929	obj-elf.c	FUNCTION_23	CALL_6
0x4001746	      0x48837df800	                  cmp qword [rbp - 8], 0	       930	obj-elf.c	FUNCTION_23	IF_6
0x400174b	            0x7406	                            je 0x4001753	       930	obj-elf.c	FUNCTION_23	IF_6
0x400174d	        0x488b45f8	                mov rax, qword [rbp - 8]	       931	obj-elf.c	FUNCTION_23	IF_6
0x4001751	            0xeb48	                           jmp 0x400179b	       931	obj-elf.c	FUNCTION_23	IF_6
0x4001753	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       935	obj-elf.c	FUNCTION_23	CALL_7
0x4001757	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       935	obj-elf.c	FUNCTION_23	CALL_7
0x400175b	      0xba00000000	                              mov edx, 0	       935	obj-elf.c	FUNCTION_23	CALL_7
0x4001760	          0x4889ce	                            mov rsi, rcx	       935	obj-elf.c	FUNCTION_23	CALL_7
0x4001763	          0x4889c7	                            mov rdi, rax	       935	obj-elf.c	FUNCTION_23	CALL_7
0x4001766	      0xe8e7fcffff	           call sym.obj_elf_section_type	       935	obj-elf.c	FUNCTION_23	CALL_7
0x400176b	          0x8945f4	              mov dword [rbp - 0xc], eax	       935	obj-elf.c	FUNCTION_23	CALL_7
0x400176e	        0x837df400	                cmp dword [rbp - 0xc], 0	       936	obj-elf.c	FUNCTION_23	IF_7
0x4001772	            0x740b	                            je 0x400177f	       936	obj-elf.c	FUNCTION_23	IF_7
0x4001774	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       937	obj-elf.c	FUNCTION_23	IF_7
0x4001778	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       937	obj-elf.c	FUNCTION_23	IF_7
0x400177b	            0x8910	                    mov dword [rax], edx	       937	obj-elf.c	FUNCTION_23	IF_7
0x400177d	            0xeb17	                           jmp 0x4001796	       937	obj-elf.c	FUNCTION_23	IF_7
0x400177f	      0xbf00000000	                              mov edi, 0	       939	obj-elf.c	FUNCTION_23	CALL_9
0x4001784	      0xe800000000	                          call 0x4001789	       939	obj-elf.c	FUNCTION_23	CALL_9
0x4001789	          0x4889c7	                            mov rdi, rax	       939	obj-elf.c	FUNCTION_23	CALL_9
0x400178c	      0xb800000000	                              mov eax, 0	       939	obj-elf.c	FUNCTION_23	CALL_9
0x4001791	      0xe800000000	                          call 0x4001796	       939	obj-elf.c	FUNCTION_23	CALL_9
0x4001796	      0xb800000000	                              mov eax, 0	       941	obj-elf.c	FUNCTION_23
0x400179b	              0xc9	                                   leave	       942	obj-elf.c	FUNCTION_23
0x400179c	              0xc3	                                     ret	       942	obj-elf.c	FUNCTION_23
obj_elf_section_change_hook	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,0:DO,0:IF,0:WHILE,0	9
0x40022f8	              0x55	                                push rbp	      1312	obj-elf.c	FUNCTION_30
0x40022f9	          0x4889e5	                            mov rbp, rsp	      1312	obj-elf.c	FUNCTION_30
0x40022fc	    0x488b05000000	            mov rax, qword [0x04002303] 	      1313	obj-elf.c	FUNCTION_30
0x4002303	    0x488905000000	            mov qword [0x0400230a], rax 	      1313	obj-elf.c	FUNCTION_30
0x400230a	    0x8b0500000000	            mov eax, dword [0x04002310] 	      1314	obj-elf.c	FUNCTION_30
0x4002310	    0x890500000000	            mov dword [0x04002316], eax 	      1314	obj-elf.c	FUNCTION_30
0x4002316	              0x90	                                     nop	      1315	obj-elf.c	FUNCTION_30
0x4002317	              0x5d	                                 pop rbp	      1315	obj-elf.c	FUNCTION_30
0x4002318	              0xc3	                                     ret	      1315	obj-elf.c	FUNCTION_30
skip_past_char	FOR,0:SWITCH,0:functions,0:ELSE,1:CALL,0:DO,0:IF,1:WHILE,0	20
0x4002a26	              0x55	                                push rbp	      1576	obj-elf.c	FUNCTION_39
0x4002a27	          0x4889e5	                            mov rbp, rsp	      1576	obj-elf.c	FUNCTION_39
0x4002a2a	        0x48897df8	                mov qword [rbp - 8], rdi	      1576	obj-elf.c	FUNCTION_39
0x4002a2e	            0x89f0	                            mov eax, esi	      1576	obj-elf.c	FUNCTION_39
0x4002a30	          0x8845f4	                mov byte [rbp - 0xc], al	      1576	obj-elf.c	FUNCTION_39
0x4002a33	        0x488b45f8	                mov rax, qword [rbp - 8]	      1577	obj-elf.c	FUNCTION_39	IF_1
0x4002a37	          0x488b00	                    mov rax, qword [rax]	      1577	obj-elf.c	FUNCTION_39	IF_1
0x4002a3a	           0xfb600	                   movzx eax, byte [rax]	      1577	obj-elf.c	FUNCTION_39	IF_1
0x4002a3d	          0x3a45f4	                cmp al, byte [rbp - 0xc]	      1577	obj-elf.c	FUNCTION_39	IF_1
0x4002a40	            0x7519	                           jne 0x4002a5b	      1577	obj-elf.c	FUNCTION_39	IF_1
0x4002a42	        0x488b45f8	                mov rax, qword [rbp - 8]	      1579	obj-elf.c	FUNCTION_39	IF_1
0x4002a46	          0x488b00	                    mov rax, qword [rax]	      1579	obj-elf.c	FUNCTION_39	IF_1
0x4002a49	        0x488d5001	                      lea rdx, [rax + 1]	      1579	obj-elf.c	FUNCTION_39	IF_1
0x4002a4d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1579	obj-elf.c	FUNCTION_39	IF_1
0x4002a51	          0x488910	                    mov qword [rax], rdx	      1579	obj-elf.c	FUNCTION_39	IF_1
0x4002a54	      0xb800000000	                              mov eax, 0	      1580	obj-elf.c	FUNCTION_39	IF_1
0x4002a59	            0xeb05	                           jmp 0x4002a60	      1580	obj-elf.c	FUNCTION_39	IF_1
0x4002a5b	      0xb8ffffffff	                     mov eax, 0xffffffff	      1583	obj-elf.c	FUNCTION_39	ELSE_1
0x4002a60	              0x5d	                                 pop rbp	      1584	obj-elf.c	FUNCTION_39	ELSE_1
0x4002a61	              0xc3	                                     ret	      1584	obj-elf.c	FUNCTION_39	ELSE_1
obj_elf_subsection	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,5:DO,0:IF,0:WHILE,0	19
0x40022af	              0x55	                                push rbp	      1288	obj-elf.c	FUNCTION_29
0x40022b0	          0x4889e5	                            mov rbp, rsp	      1288	obj-elf.c	FUNCTION_29
0x40022b3	        0x4883ec20	                           sub rsp, 0x20	      1288	obj-elf.c	FUNCTION_29
0x40022b7	          0x897dec	             mov dword [rbp - 0x14], edi	      1288	obj-elf.c	FUNCTION_29
0x40022ba	    0x488b05000000	            mov rax, qword [0x040022c1] 	      1295	obj-elf.c	FUNCTION_29
0x40022c1	    0x488905000000	            mov qword [0x040022c8], rax 	      1295	obj-elf.c	FUNCTION_29
0x40022c8	    0x8b0500000000	            mov eax, dword [0x040022ce] 	      1296	obj-elf.c	FUNCTION_29
0x40022ce	    0x890500000000	            mov dword [0x040022d4], eax 	      1296	obj-elf.c	FUNCTION_29
0x40022d4	      0xe800000000	                          call 0x40022d9	      1298	obj-elf.c	FUNCTION_29	CALL_2
0x40022d9	          0x8945fc	                mov dword [rbp - 4], eax	      1298	obj-elf.c	FUNCTION_29	CALL_2
0x40022dc	    0x488b05000000	            mov rax, qword [0x040022e3] 	      1299	obj-elf.c	FUNCTION_29	CALL_3
0x40022e3	          0x8b55fc	                mov edx, dword [rbp - 4]	      1299	obj-elf.c	FUNCTION_29	CALL_3
0x40022e6	            0x89d6	                            mov esi, edx	      1299	obj-elf.c	FUNCTION_29	CALL_3
0x40022e8	          0x4889c7	                            mov rdi, rax	      1299	obj-elf.c	FUNCTION_29	CALL_3
0x40022eb	      0xe800000000	                          call 0x40022f0	      1299	obj-elf.c	FUNCTION_29	CALL_3
0x40022f0	      0xe800000000	                          call 0x40022f5	      1300	obj-elf.c	FUNCTION_29	CALL_4
0x40022f5	              0x90	                                     nop	      1305	obj-elf.c	FUNCTION_29
0x40022f6	              0xc9	                                   leave	      1305	obj-elf.c	FUNCTION_29
0x40022f7	              0xc3	                                     ret	      1305	obj-elf.c	FUNCTION_29
obj_elf_version	FOR,0:SWITCH,0:functions,0:ELSE,1:CALL,20:DO,0:IF,1:WHILE,1	127
0x4003095	              0x55	                                push rbp	      1814	obj-elf.c	FUNCTION_47
0x4003096	          0x4889e5	                            mov rbp, rsp	      1814	obj-elf.c	FUNCTION_47
0x4003099	    0x4881ec900000	                           sub rsp, 0x90	      1814	obj-elf.c	FUNCTION_47
0x40030a0	    0x89bd7cffffff	             mov dword [rbp - 0x84], edi	      1814	obj-elf.c	FUNCTION_47
0x40030a6	    0x64488b042528	                mov rax, qword fs:[0x28]	      1814	obj-elf.c	FUNCTION_47
0x40030af	        0x488945f8	                mov qword [rbp - 8], rax	      1814	obj-elf.c	FUNCTION_47
0x40030b3	            0x31c0	                            xor eax, eax	      1814	obj-elf.c	FUNCTION_47
0x40030b5	    0x488b05000000	            mov rax, qword [0x040030bc] 	      1818	obj-elf.c	FUNCTION_47
0x40030bc	        0x48894590	             mov qword [rbp - 0x70], rax	      1818	obj-elf.c	FUNCTION_47
0x40030c0	    0x8b0500000000	            mov eax, dword [0x040030c6] 	      1819	obj-elf.c	FUNCTION_47
0x40030c6	          0x894584	             mov dword [rbp - 0x7c], eax	      1819	obj-elf.c	FUNCTION_47
0x40030c9	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1822	obj-elf.c	FUNCTION_47
0x40030d1	    0x488b05000000	            mov rax, qword [0x040030d8] 	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x40030d8	           0xfb600	                   movzx eax, byte [rax]	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x40030db	            0x3c20	                            cmp al, 0x20	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x40030dd	            0x7512	                           jne 0x40030f1	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x40030df	    0x488b05000000	            mov rax, qword [0x040030e6] 	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x40030e6	        0x4883c001	                              add rax, 1	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x40030ea	    0x488905000000	            mov qword [0x040030f1], rax 	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x40030f1	    0x488b05000000	            mov rax, qword [0x040030f8] 	      1825	obj-elf.c	FUNCTION_47	IF_1
0x40030f8	           0xfb600	                   movzx eax, byte [rax]	      1825	obj-elf.c	FUNCTION_47	IF_1
0x40030fb	            0x3c22	                            cmp al, 0x22	      1825	obj-elf.c	FUNCTION_47	IF_1
0x40030fd	     0xf8588010000	                           jne 0x400328b	      1825	obj-elf.c	FUNCTION_47	IF_1
0x4003103	    0x488b05000000	            mov rax, qword [0x0400310a] 	      1829	obj-elf.c	FUNCTION_47	IF_1
0x400310a	        0x4883c001	                              add rax, 1	      1829	obj-elf.c	FUNCTION_47	IF_1
0x400310e	    0x488905000000	            mov qword [0x04003115], rax 	      1829	obj-elf.c	FUNCTION_47	IF_1
0x4003115	    0x488b05000000	            mov rax, qword [0x0400311c] 	      1830	obj-elf.c	FUNCTION_47	IF_1
0x400311c	        0x488945a0	             mov qword [rbp - 0x60], rax	      1830	obj-elf.c	FUNCTION_47	IF_1
0x4003120	      0xe800000000	                          call 0x4003125	      1832	obj-elf.c	FUNCTION_47	IF_1	WHILE_1	CALL_3
0x4003125	          0x894588	             mov dword [rbp - 0x78], eax	      1832	obj-elf.c	FUNCTION_47	IF_1	WHILE_1	CALL_3
0x4003128	    0x817d88ff0000	           cmp dword [rbp - 0x78], 0xff 	      1832	obj-elf.c	FUNCTION_47	IF_1	WHILE_1	CALL_3
0x400312f	            0x76ef	                           jbe 0x4003120	      1832	obj-elf.c	FUNCTION_47	IF_1	WHILE_1	CALL_3
0x4003131	    0x488b05000000	            mov rax, qword [0x04003138] 	      1834	obj-elf.c	FUNCTION_47	IF_1
0x4003138	           0xfb600	                   movzx eax, byte [rax]	      1834	obj-elf.c	FUNCTION_47	IF_1
0x400313b	           0xfbec0	                           movsx eax, al	      1834	obj-elf.c	FUNCTION_47	IF_1
0x400313e	          0x894588	             mov dword [rbp - 0x78], eax	      1834	obj-elf.c	FUNCTION_47	IF_1
0x4003141	    0x488b05000000	            mov rax, qword [0x04003148] 	      1835	obj-elf.c	FUNCTION_47	IF_1
0x4003148	          0xc60000	                       mov byte [rax], 0	      1835	obj-elf.c	FUNCTION_47	IF_1
0x400314b	    0x488b05000000	            mov rax, qword [0x04003152] 	      1836	obj-elf.c	FUNCTION_47	IF_1
0x4003152	        0x4883e801	                              sub rax, 1	      1836	obj-elf.c	FUNCTION_47	IF_1
0x4003156	          0xc60000	                       mov byte [rax], 0	      1836	obj-elf.c	FUNCTION_47	IF_1
0x4003159	    0x488b05000000	            mov rax, qword [0x04003160] 	      1837	obj-elf.c	FUNCTION_47	IF_1
0x4003160	          0x8b5588	             mov edx, dword [rbp - 0x78]	      1837	obj-elf.c	FUNCTION_47	IF_1
0x4003163	            0x8810	                      mov byte [rax], dl	      1837	obj-elf.c	FUNCTION_47	IF_1
0x4003165	      0xbe00000000	                              mov esi, 0	      1840	obj-elf.c	FUNCTION_47	IF_1	CALL_4
0x400316a	      0xbf00000000	                              mov edi, 0	      1840	obj-elf.c	FUNCTION_47	IF_1	CALL_4
0x400316f	      0xe800000000	                          call 0x4003174	      1840	obj-elf.c	FUNCTION_47	IF_1	CALL_4
0x4003174	        0x48894598	             mov qword [rbp - 0x68], rax	      1840	obj-elf.c	FUNCTION_47	IF_1	CALL_4
0x4003178	    0x488b05000000	            mov rax, qword [0x0400317f] 	      1841	obj-elf.c	FUNCTION_47	IF_1	CALL_5
0x400317f	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      1841	obj-elf.c	FUNCTION_47	IF_1	CALL_5
0x4003183	      0xba08010000	                          mov edx, 0x108	      1841	obj-elf.c	FUNCTION_47	IF_1	CALL_5
0x4003188	          0x4889ce	                            mov rsi, rcx	      1841	obj-elf.c	FUNCTION_47	IF_1	CALL_5
0x400318b	          0x4889c7	                            mov rdi, rax	      1841	obj-elf.c	FUNCTION_47	IF_1	CALL_5
0x400318e	      0xe800000000	                          call 0x4003193	      1841	obj-elf.c	FUNCTION_47	IF_1	CALL_5
0x4003193	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1844	obj-elf.c	FUNCTION_47	IF_1	CALL_6
0x4003197	      0xbe02000000	                              mov esi, 2	      1844	obj-elf.c	FUNCTION_47	IF_1	CALL_6
0x400319c	          0x4889c7	                            mov rdi, rax	      1844	obj-elf.c	FUNCTION_47	IF_1	CALL_6
0x400319f	      0xe800000000	                          call 0x40031a4	      1844	obj-elf.c	FUNCTION_47	IF_1	CALL_6
0x40031a4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1847	obj-elf.c	FUNCTION_47	IF_1	CALL_7
0x40031a8	          0x4889c7	                            mov rdi, rax	      1847	obj-elf.c	FUNCTION_47	IF_1	CALL_7
0x40031ab	      0xe800000000	                          call 0x40031b0	      1847	obj-elf.c	FUNCTION_47	IF_1	CALL_7
0x40031b0	          0x83c001	                              add eax, 1	      1847	obj-elf.c	FUNCTION_47	IF_1	CALL_7
0x40031b3	          0x89458c	             mov dword [rbp - 0x74], eax	      1847	obj-elf.c	FUNCTION_47	IF_1	CALL_7
0x40031b6	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1851	obj-elf.c	FUNCTION_47	IF_1
0x40031b9	        0x488945b0	             mov qword [rbp - 0x50], rax	      1851	obj-elf.c	FUNCTION_47	IF_1
0x40031bd	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1852	obj-elf.c	FUNCTION_47	IF_1
0x40031c5	    0x48c745c00100	               mov qword [rbp - 0x40], 1	      1853	obj-elf.c	FUNCTION_47	IF_1
0x40031cd	      0xbf04000000	                              mov edi, 4	      1854	obj-elf.c	FUNCTION_47	IF_1	CALL_8
0x40031d2	      0xe800000000	                          call 0x40031d7	      1854	obj-elf.c	FUNCTION_47	IF_1	CALL_8
0x40031d7	        0x488945a8	             mov qword [rbp - 0x58], rax	      1854	obj-elf.c	FUNCTION_47	IF_1	CALL_8
0x40031db	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1855	obj-elf.c	FUNCTION_47	IF_1	CALL_9
0x40031df	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1855	obj-elf.c	FUNCTION_47	IF_1	CALL_9
0x40031e3	      0xba04000000	                              mov edx, 4	      1855	obj-elf.c	FUNCTION_47	IF_1	CALL_9
0x40031e8	          0x4889ce	                            mov rsi, rcx	      1855	obj-elf.c	FUNCTION_47	IF_1	CALL_9
0x40031eb	          0x4889c7	                            mov rdi, rax	      1855	obj-elf.c	FUNCTION_47	IF_1	CALL_9
0x40031ee	      0xe800000000	                          call 0x40031f3	      1855	obj-elf.c	FUNCTION_47	IF_1	CALL_9
0x40031f3	      0xbf04000000	                              mov edi, 4	      1856	obj-elf.c	FUNCTION_47	IF_1	CALL_10
0x40031f8	      0xe800000000	                          call 0x40031fd	      1856	obj-elf.c	FUNCTION_47	IF_1	CALL_10
0x40031fd	        0x488945a8	             mov qword [rbp - 0x58], rax	      1856	obj-elf.c	FUNCTION_47	IF_1	CALL_10
0x4003201	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      1857	obj-elf.c	FUNCTION_47	IF_1	CALL_11
0x4003205	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1857	obj-elf.c	FUNCTION_47	IF_1	CALL_11
0x4003209	      0xba04000000	                              mov edx, 4	      1857	obj-elf.c	FUNCTION_47	IF_1	CALL_11
0x400320e	          0x4889ce	                            mov rsi, rcx	      1857	obj-elf.c	FUNCTION_47	IF_1	CALL_11
0x4003211	          0x4889c7	                            mov rdi, rax	      1857	obj-elf.c	FUNCTION_47	IF_1	CALL_11
0x4003214	      0xe800000000	                          call 0x4003219	      1857	obj-elf.c	FUNCTION_47	IF_1	CALL_11
0x4003219	      0xbf04000000	                              mov edi, 4	      1858	obj-elf.c	FUNCTION_47	IF_1	CALL_12
0x400321e	      0xe800000000	                          call 0x4003223	      1858	obj-elf.c	FUNCTION_47	IF_1	CALL_12
0x4003223	        0x488945a8	             mov qword [rbp - 0x58], rax	      1858	obj-elf.c	FUNCTION_47	IF_1	CALL_12
0x4003227	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      1859	obj-elf.c	FUNCTION_47	IF_1	CALL_13
0x400322b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1859	obj-elf.c	FUNCTION_47	IF_1	CALL_13
0x400322f	      0xba04000000	                              mov edx, 4	      1859	obj-elf.c	FUNCTION_47	IF_1	CALL_13
0x4003234	          0x4889ce	                            mov rsi, rcx	      1859	obj-elf.c	FUNCTION_47	IF_1	CALL_13
0x4003237	          0x4889c7	                            mov rdi, rax	      1859	obj-elf.c	FUNCTION_47	IF_1	CALL_13
0x400323a	      0xe800000000	                          call 0x400323f	      1859	obj-elf.c	FUNCTION_47	IF_1	CALL_13
0x400323f	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1860	obj-elf.c	FUNCTION_47	IF_1	CALL_14
0x4003242	          0x4889c7	                            mov rdi, rax	      1860	obj-elf.c	FUNCTION_47	IF_1	CALL_14
0x4003245	      0xe800000000	                          call 0x400324a	      1860	obj-elf.c	FUNCTION_47	IF_1	CALL_14
0x400324a	        0x488945a8	             mov qword [rbp - 0x58], rax	      1860	obj-elf.c	FUNCTION_47	IF_1	CALL_14
0x400324e	          0x8b558c	             mov edx, dword [rbp - 0x74]	      1861	obj-elf.c	FUNCTION_47	IF_1	CALL_15
0x4003251	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1861	obj-elf.c	FUNCTION_47	IF_1	CALL_15
0x4003255	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1861	obj-elf.c	FUNCTION_47	IF_1	CALL_15
0x4003259	          0x4889ce	                            mov rsi, rcx	      1861	obj-elf.c	FUNCTION_47	IF_1	CALL_15
0x400325c	          0x4889c7	                            mov rdi, rax	      1861	obj-elf.c	FUNCTION_47	IF_1	CALL_15
0x400325f	      0xe800000000	                          call 0x4003264	      1861	obj-elf.c	FUNCTION_47	IF_1	CALL_15
0x4003264	      0xba00000000	                              mov edx, 0	      1863	obj-elf.c	FUNCTION_47	IF_1	CALL_16
0x4003269	      0xbe00000000	                              mov esi, 0	      1863	obj-elf.c	FUNCTION_47	IF_1	CALL_16
0x400326e	      0xbf02000000	                              mov edi, 2	      1863	obj-elf.c	FUNCTION_47	IF_1	CALL_16
0x4003273	      0xe800000000	                          call 0x4003278	      1863	obj-elf.c	FUNCTION_47	IF_1	CALL_16
0x4003278	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      1865	obj-elf.c	FUNCTION_47	IF_1	CALL_17
0x400327b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1865	obj-elf.c	FUNCTION_47	IF_1	CALL_17
0x400327f	            0x89d6	                            mov esi, edx	      1865	obj-elf.c	FUNCTION_47	IF_1	CALL_17
0x4003281	          0x4889c7	                            mov rdi, rax	      1865	obj-elf.c	FUNCTION_47	IF_1	CALL_17
0x4003284	      0xe800000000	                          call 0x4003289	      1865	obj-elf.c	FUNCTION_47	IF_1	CALL_17
0x4003289	            0xeb17	                           jmp 0x40032a2	      1865	obj-elf.c	FUNCTION_47	IF_1	CALL_17
0x400328b	      0xbf00000000	                              mov edi, 0	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x4003290	      0xe800000000	                          call 0x4003295	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x4003295	          0x4889c7	                            mov rdi, rax	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x4003298	      0xb800000000	                              mov eax, 0	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x400329d	      0xe800000000	                          call 0x40032a2	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x40032a2	      0xe800000000	                          call 0x40032a7	      1870	obj-elf.c	FUNCTION_47	CALL_20
0x40032a7	              0x90	                                     nop	      1871	obj-elf.c	FUNCTION_47
0x40032a8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1871	obj-elf.c	FUNCTION_47
0x40032ac	    0x644833042528	                xor rax, qword fs:[0x28]	      1871	obj-elf.c	FUNCTION_47
0x40032b5	            0x7405	                            je 0x40032bc	      1871	obj-elf.c	FUNCTION_47
0x40032b7	      0xe800000000	                          call 0x40032bc	      1871	obj-elf.c	FUNCTION_47
0x40032bc	              0xc9	                                   leave	      1871	obj-elf.c	FUNCTION_47
0x40032bd	              0xc3	                                     ret	      1871	obj-elf.c	FUNCTION_47
obj_elf_change_section	FOR,0:SWITCH,0:functions,0:ELSE,12:CALL,39:DO,0:IF,27:WHILE,0	426
0x4000bd4	              0x55	                                push rbp	       568	obj-elf.c	FUNCTION_20
0x4000bd5	          0x4889e5	                            mov rbp, rsp	       568	obj-elf.c	FUNCTION_20
0x4000bd8	    0x4881ec900000	                           sub rsp, 0x90	       568	obj-elf.c	FUNCTION_20
0x4000bdf	        0x48897d98	             mov qword [rbp - 0x68], rdi	       568	obj-elf.c	FUNCTION_20
0x4000be3	          0x897594	             mov dword [rbp - 0x6c], esi	       568	obj-elf.c	FUNCTION_20
0x4000be6	          0x895590	             mov dword [rbp - 0x70], edx	       568	obj-elf.c	FUNCTION_20
0x4000be9	        0x48894d88	             mov qword [rbp - 0x78], rcx	       568	obj-elf.c	FUNCTION_20
0x4000bed	        0x44894584	             mov dword [rbp - 0x7c], r8d	       568	obj-elf.c	FUNCTION_20
0x4000bf1	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       568	obj-elf.c	FUNCTION_20
0x4000bf8	    0x64488b042528	                mov rax, qword fs:[0x28]	       568	obj-elf.c	FUNCTION_20
0x4000c01	        0x488945f8	                mov qword [rbp - 8], rax	       568	obj-elf.c	FUNCTION_20
0x4000c05	            0x31c0	                            xor eax, eax	       568	obj-elf.c	FUNCTION_20
0x4000c07	        0x837d1800	               cmp dword [rbp + 0x18], 0	       581	obj-elf.c	FUNCTION_20	IF_1
0x4000c0b	            0x745f	                            je 0x4000c6c	       581	obj-elf.c	FUNCTION_20	IF_1
0x4000c0d	      0xbf20000000	                           mov edi, 0x20	       584	obj-elf.c	FUNCTION_20	IF_1	CALL_2
0x4000c12	      0xe800000000	                          call 0x4000c17	       584	obj-elf.c	FUNCTION_20	IF_1	CALL_2
0x4000c17	        0x488945b8	             mov qword [rbp - 0x48], rax	       584	obj-elf.c	FUNCTION_20	IF_1	CALL_2
0x4000c1b	    0x488b15000000	            mov rdx, qword [0x04000c22] 	       585	obj-elf.c	FUNCTION_20	IF_1
0x4000c22	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       585	obj-elf.c	FUNCTION_20	IF_1
0x4000c26	          0x488910	                    mov qword [rax], rdx	       585	obj-elf.c	FUNCTION_20	IF_1
0x4000c29	    0x488b15000000	            mov rdx, qword [0x04000c30] 	       586	obj-elf.c	FUNCTION_20	IF_1
0x4000c30	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       586	obj-elf.c	FUNCTION_20	IF_1
0x4000c34	        0x48895008	                mov qword [rax + 8], rdx	       586	obj-elf.c	FUNCTION_20	IF_1
0x4000c38	    0x488b15000000	            mov rdx, qword [0x04000c3f] 	       587	obj-elf.c	FUNCTION_20	IF_1
0x4000c3f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       587	obj-elf.c	FUNCTION_20	IF_1
0x4000c43	        0x48895010	             mov qword [rax + 0x10], rdx	       587	obj-elf.c	FUNCTION_20	IF_1
0x4000c47	    0x8b1500000000	            mov edx, dword [0x04000c4d] 	       588	obj-elf.c	FUNCTION_20	IF_1
0x4000c4d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       588	obj-elf.c	FUNCTION_20	IF_1
0x4000c51	          0x895018	             mov dword [rax + 0x18], edx	       588	obj-elf.c	FUNCTION_20	IF_1
0x4000c54	    0x8b1500000000	            mov edx, dword [0x04000c5a] 	       589	obj-elf.c	FUNCTION_20	IF_1
0x4000c5a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       589	obj-elf.c	FUNCTION_20	IF_1
0x4000c5e	          0x89501c	             mov dword [rax + 0x1c], edx	       589	obj-elf.c	FUNCTION_20	IF_1
0x4000c61	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       590	obj-elf.c	FUNCTION_20	IF_1
0x4000c65	    0x488905000000	            mov qword [0x04000c6c], rax 	       590	obj-elf.c	FUNCTION_20	IF_1
0x4000c6c	    0x488b05000000	            mov rax, qword [0x04000c73] 	       592	obj-elf.c	FUNCTION_20
0x4000c73	    0x488905000000	            mov qword [0x04000c7a], rax 	       592	obj-elf.c	FUNCTION_20
0x4000c7a	    0x8b0500000000	            mov eax, dword [0x04000c80] 	       593	obj-elf.c	FUNCTION_20
0x4000c80	    0x890500000000	            mov dword [0x04000c86], eax 	       593	obj-elf.c	FUNCTION_20
0x4000c86	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       595	obj-elf.c	FUNCTION_20
0x4000c8d	        0x488945e0	             mov qword [rbp - 0x20], rax	       595	obj-elf.c	FUNCTION_20
0x4000c91	          0x8b4590	             mov eax, dword [rbp - 0x70]	       596	obj-elf.c	FUNCTION_20
0x4000c94	          0x8945e8	             mov dword [rbp - 0x18], eax	       596	obj-elf.c	FUNCTION_20
0x4000c97	    0x488b05000000	            mov rax, qword [0x04000c9e] 	       597	obj-elf.c	FUNCTION_20	CALL_3
0x4000c9e	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       597	obj-elf.c	FUNCTION_20	CALL_3
0x4000ca2	        0x488b7598	             mov rsi, qword [rbp - 0x68]	       597	obj-elf.c	FUNCTION_20	CALL_3
0x4000ca6	          0x4889d1	                            mov rcx, rdx	       597	obj-elf.c	FUNCTION_20	CALL_3
0x4000ca9	      0xba00000000	                              mov edx, 0	       597	obj-elf.c	FUNCTION_20	CALL_3
0x4000cae	          0x4889c7	                            mov rdi, rax	       597	obj-elf.c	FUNCTION_20	CALL_3
0x4000cb1	      0xe800000000	                          call 0x4000cb6	       597	obj-elf.c	FUNCTION_20	CALL_3
0x4000cb6	        0x488945c0	             mov qword [rbp - 0x40], rax	       597	obj-elf.c	FUNCTION_20	CALL_3
0x4000cba	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       599	obj-elf.c	FUNCTION_20	IF_2
0x4000cbf	            0x741b	                            je 0x4000cdc	       599	obj-elf.c	FUNCTION_20	IF_2
0x4000cc1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       601	obj-elf.c	FUNCTION_20	IF_2
0x4000cc5	        0x488945b0	             mov qword [rbp - 0x50], rax	       601	obj-elf.c	FUNCTION_20	IF_2
0x4000cc9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       602	obj-elf.c	FUNCTION_20	IF_2	CALL_4
0x4000ccd	      0xbe00000000	                              mov esi, 0	       602	obj-elf.c	FUNCTION_20	IF_2	CALL_4
0x4000cd2	          0x4889c7	                            mov rdi, rax	       602	obj-elf.c	FUNCTION_20	IF_2	CALL_4
0x4000cd5	      0xe800000000	                          call 0x4000cda	       602	obj-elf.c	FUNCTION_20	IF_2	CALL_4
0x4000cda	            0xeb15	                           jmp 0x4000cf1	       602	obj-elf.c	FUNCTION_20	IF_2	CALL_4
0x4000cdc	        0x488b4598	             mov rax, qword [rbp - 0x68]	       605	obj-elf.c	FUNCTION_20	CALL_5
0x4000ce0	      0xbe00000000	                              mov esi, 0	       605	obj-elf.c	FUNCTION_20	CALL_5
0x4000ce5	          0x4889c7	                            mov rdi, rax	       605	obj-elf.c	FUNCTION_20	CALL_5
0x4000ce8	      0xe800000000	                          call 0x4000ced	       605	obj-elf.c	FUNCTION_20	CALL_5
0x4000ced	        0x488945b0	             mov qword [rbp - 0x50], rax	       605	obj-elf.c	FUNCTION_20	CALL_5
0x4000cf1	    0x488b05000000	            mov rax, qword [0x04000cf8] 	       607	obj-elf.c	FUNCTION_20	CALL_6
0x4000cf8	        0x488b4008	                mov rax, qword [rax + 8]	       607	obj-elf.c	FUNCTION_20	CALL_6
0x4000cfc	    0x488b80680300	           mov rax, qword [rax + 0x368] 	       607	obj-elf.c	FUNCTION_20	CALL_6
0x4000d03	        0x488945c8	             mov qword [rbp - 0x38], rax	       607	obj-elf.c	FUNCTION_20	CALL_6
0x4000d07	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       608	obj-elf.c	FUNCTION_20
0x4000d0b	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       608	obj-elf.c	FUNCTION_20
0x4000d12	    0x488b15000000	            mov rdx, qword [0x04000d19] 	       608	obj-elf.c	FUNCTION_20
0x4000d19	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       608	obj-elf.c	FUNCTION_20
0x4000d1d	          0x4889ce	                            mov rsi, rcx	       608	obj-elf.c	FUNCTION_20
0x4000d20	          0x4889d7	                            mov rdi, rdx	       608	obj-elf.c	FUNCTION_20
0x4000d23	            0xffd0	                                call rax	       608	obj-elf.c	FUNCTION_20
0x4000d25	        0x488945d0	             mov qword [rbp - 0x30], rax	       608	obj-elf.c	FUNCTION_20
0x4000d29	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       610	obj-elf.c	FUNCTION_20	IF_3
0x4000d2e	     0xf8431020000	                            je 0x4000f65	       610	obj-elf.c	FUNCTION_20	IF_3
0x4000d34	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       612	obj-elf.c	FUNCTION_20	IF_3
0x4000d3b	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       614	obj-elf.c	FUNCTION_20	IF_3	IF_4
0x4000d3f	            0x750f	                           jne 0x4000d50	       614	obj-elf.c	FUNCTION_20	IF_3	IF_4
0x4000d41	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       615	obj-elf.c	FUNCTION_20	IF_3	IF_4
0x4000d45	          0x8b4010	            mov eax, dword [rax + 0x10] 	       615	obj-elf.c	FUNCTION_20	IF_3	IF_4
0x4000d48	          0x894594	             mov dword [rbp - 0x6c], eax	       615	obj-elf.c	FUNCTION_20	IF_3	IF_4
0x4000d4b	      0xe9ca000000	                           jmp 0x4000e1a	       615	obj-elf.c	FUNCTION_20	IF_3	IF_4
0x4000d50	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       616	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5
0x4000d54	          0x8b4010	            mov eax, dword [rax + 0x10] 	       616	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5
0x4000d57	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       616	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5
0x4000d5a	     0xf84ba000000	                            je 0x4000e1a	       616	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5
0x4000d60	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       618	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000d65	     0xf8581000000	                           jne 0x4000dec	       618	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000d6b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       631	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000d6f	    0x488b80000300	           mov rax, qword [rax + 0x300] 	       631	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000d76	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	       631	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000d7a	            0x3c40	                            cmp al, 0x40	       631	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000d7c	            0x7512	                           jne 0x4000d90	       631	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000d7e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       632	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000d82	        0x488b4018	            mov rax, qword [rax + 0x18] 	       632	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000d86	      0x2500000010	                     and eax, 0x10000000	       632	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000d8b	          0x4885c0	                           test rax, rax	       632	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000d8e	            0x755c	                           jne 0x4000dec	       632	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000d90	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       634	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000d94	          0x8b4010	            mov eax, dword [rax + 0x10] 	       634	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000d97	          0x83f80e	                            cmp eax, 0xe	       634	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000d9a	            0x7450	                            je 0x4000dec	       634	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000d9c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       635	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000da0	          0x8b4010	            mov eax, dword [rax + 0x10] 	       635	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000da3	          0x83f80f	                            cmp eax, 0xf	       635	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000da6	            0x7444	                            je 0x4000dec	       635	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000da8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       636	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000dac	          0x8b4010	            mov eax, dword [rax + 0x10] 	       636	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000daf	          0x83f810	                           cmp eax, 0x10	       636	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000db2	            0x7438	                            je 0x4000dec	       636	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4000db4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       639	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7
0x4000db8	          0x8b4010	            mov eax, dword [rax + 0x10] 	       639	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7
0x4000dbb	          0x83f807	                              cmp eax, 7	       639	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7
0x4000dbe	            0x7459	                            je 0x4000e19	       639	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7
0x4000dc0	    0x817d94ffffff	     cmp dword [rbp - 0x6c], 0x6fffffff 	       641	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7
0x4000dc7	            0x7750	                            ja 0x4000e19	       641	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7
0x4000dc9	      0xbf00000000	                              mov edi, 0	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4000dce	      0xe800000000	                          call 0x4000dd3	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4000dd3	          0x4889c2	                            mov rdx, rax	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4000dd6	        0x488b4598	             mov rax, qword [rbp - 0x68]	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4000dda	          0x4889c6	                            mov rsi, rax	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4000ddd	          0x4889d7	                            mov rdi, rdx	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4000de0	      0xb800000000	                              mov eax, 0	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4000de5	      0xe800000000	                          call 0x4000dea	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4000dea	            0xeb2d	                           jmp 0x4000e19	       639	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7
0x4000dec	      0xbf00000000	                              mov edi, 0	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4000df1	      0xe800000000	                          call 0x4000df6	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4000df6	          0x4889c2	                            mov rdx, rax	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4000df9	        0x488b4598	             mov rax, qword [rbp - 0x68]	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4000dfd	          0x4889c6	                            mov rsi, rax	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4000e00	          0x4889d7	                            mov rdi, rdx	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4000e03	      0xb800000000	                              mov eax, 0	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4000e08	      0xe800000000	                          call 0x4000e0d	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4000e0d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       649	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3
0x4000e11	          0x8b4010	            mov eax, dword [rax + 0x10] 	       649	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3
0x4000e14	          0x894594	             mov dword [rbp - 0x6c], eax	       649	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3
0x4000e17	            0xeb01	                           jmp 0x4000e1a	       649	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3
0x4000e19	              0x90	                                     nop	       639	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7
0x4000e1a	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       653	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4000e1f	     0xf8527010000	                           jne 0x4000f4c	       653	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4000e25	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       654	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4000e29	        0x488b4018	            mov rax, qword [rax + 0x18] 	       654	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4000e2d	          0x48f7d0	                                 not rax	       654	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4000e30	        0x48234588	             and rax, qword [rbp - 0x78]	       654	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4000e34	      0x25ffff0f00	                        and eax, 0xfffff	       654	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4000e39	          0x4885c0	                           test rax, rax	       653	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4000e3c	     0xf840a010000	                            je 0x4000f4c	       653	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4000e42	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       660	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4000e46	          0x8b4010	            mov eax, dword [rax + 0x10] 	       660	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4000e49	          0x83f807	                              cmp eax, 7	       660	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4000e4c	            0x7516	                           jne 0x4000e64	       660	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4000e4e	      0x48837d8802	               cmp qword [rbp - 0x78], 2	       661	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4000e53	     0xf84f2000000	                            je 0x4000f4b	       661	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4000e59	      0x48837d8804	               cmp qword [rbp - 0x78], 4	       661	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4000e5e	     0xf84e7000000	                            je 0x4000f4b	       661	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4000e64	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       665	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e68	          0x8b400c	              mov eax, dword [rax + 0xc]	       665	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e6b	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	       665	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e6e	            0x7533	                           jne 0x4000ea3	       665	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e70	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       666	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e74	          0x8b4008	                mov eax, dword [rax + 8]	       666	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e77	            0x89c2	                            mov edx, eax	       666	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e79	        0x488b4598	             mov rax, qword [rbp - 0x68]	       666	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e7d	          0x4801d0	                            add rax, rdx	       666	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e80	           0xfb600	                   movzx eax, byte [rax]	       666	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e83	            0x3c2e	                            cmp al, 0x2e	       666	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e85	            0x751c	                           jne 0x4000ea3	       666	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e87	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       668	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e8b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       668	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e8f	          0x48f7d0	                                 not rax	       668	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e92	        0x48234588	             and rax, qword [rbp - 0x78]	       668	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e96	        0x4883e0cf	             and rax, 0xffffffffffffffcf	       670	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e9a	          0x4885c0	                           test rax, rax	       667	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000e9d	     0xf84a9000000	                            je 0x4000f4c	       667	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4000ea3	      0x48837d8802	               cmp qword [rbp - 0x78], 2	       673	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11
0x4000ea8	            0x7548	                           jne 0x4000ef2	       673	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11
0x4000eaa	        0x488b4598	             mov rax, qword [rbp - 0x68]	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x4000eae	      0xbe00000000	                              mov esi, 0	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x4000eb3	          0x4889c7	                            mov rdi, rax	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x4000eb6	      0xe800000000	                          call 0x4000ebb	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x4000ebb	            0x85c0	                           test eax, eax	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x4000ebd	            0x742a	                            je 0x4000ee9	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x4000ebf	        0x488b4598	             mov rax, qword [rbp - 0x68]	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x4000ec3	      0xbe00000000	                              mov esi, 0	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x4000ec8	          0x4889c7	                            mov rdi, rax	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x4000ecb	      0xe800000000	                          call 0x4000ed0	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x4000ed0	            0x85c0	                           test eax, eax	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x4000ed2	            0x7415	                            je 0x4000ee9	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x4000ed4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       676	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_13
0x4000ed8	      0xbe00000000	                              mov esi, 0	       676	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_13
0x4000edd	          0x4889c7	                            mov rdi, rax	       676	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_13
0x4000ee0	      0xe800000000	                          call 0x4000ee5	       676	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_13
0x4000ee5	            0x85c0	                           test eax, eax	       676	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_13
0x4000ee7	            0x7509	                           jne 0x4000ef2	       676	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_13
0x4000ee9	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       677	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11
0x4000ef0	            0xeb5a	                           jmp 0x4000f4c	       677	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11
0x4000ef2	      0x48837d8804	               cmp qword [rbp - 0x78], 4	       679	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12
0x4000ef7	            0x751e	                           jne 0x4000f17	       679	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12
0x4000ef9	        0x488b4598	             mov rax, qword [rbp - 0x68]	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x4000efd	      0xbe00000000	                              mov esi, 0	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x4000f02	          0x4889c7	                            mov rdi, rax	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x4000f05	      0xe800000000	                          call 0x4000f0a	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x4000f0a	            0x85c0	                           test eax, eax	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x4000f0c	            0x7509	                           jne 0x4000f17	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x4000f0e	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       681	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12
0x4000f15	            0xeb35	                           jmp 0x4000f4c	       681	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12
0x4000f17	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       697	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15
0x4000f1f	            0x7521	                           jne 0x4000f42	       697	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15
0x4000f21	      0xbf00000000	                              mov edi, 0	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4000f26	      0xe800000000	                          call 0x4000f2b	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4000f2b	          0x4889c2	                            mov rdx, rax	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4000f2e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4000f32	          0x4889c6	                            mov rsi, rax	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4000f35	          0x4889d7	                            mov rdi, rdx	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4000f38	      0xb800000000	                              mov eax, 0	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4000f3d	      0xe800000000	                          call 0x4000f42	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4000f42	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       700	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9
0x4000f49	            0xeb01	                           jmp 0x4000f4c	       700	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9
0x4000f4b	              0x90	                                     nop	       660	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4000f4c	        0x837dac00	               cmp dword [rbp - 0x54], 0	       704	obj-elf.c	FUNCTION_20	IF_3	IF_16
0x4000f50	            0x7513	                           jne 0x4000f65	       704	obj-elf.c	FUNCTION_20	IF_3	IF_16
0x4000f52	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       704	obj-elf.c	FUNCTION_20	IF_3	IF_16
0x4000f57	            0x750c	                           jne 0x4000f65	       704	obj-elf.c	FUNCTION_20	IF_3	IF_16
0x4000f59	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       705	obj-elf.c	FUNCTION_20	IF_3	IF_16
0x4000f5d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       705	obj-elf.c	FUNCTION_20	IF_3	IF_16
0x4000f61	        0x48094588	              or qword [rbp - 0x78], rax	       705	obj-elf.c	FUNCTION_20	IF_3	IF_16
0x4000f65	        0x488b4588	             mov rax, qword [rbp - 0x78]	       708	obj-elf.c	FUNCTION_20	IF_17
0x4000f69	      0x2502000001	                      and eax, 0x1000002	       708	obj-elf.c	FUNCTION_20	IF_17
0x4000f6e	    0x483d00000001	                      cmp rax, 0x1000000	       708	obj-elf.c	FUNCTION_20	IF_17
0x4000f74	            0x7521	                           jne 0x4000f97	       708	obj-elf.c	FUNCTION_20	IF_17
0x4000f76	      0xbf00000000	                              mov edi, 0	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4000f7b	      0xe800000000	                          call 0x4000f80	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4000f80	          0x4889c2	                            mov rdx, rax	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4000f83	        0x488b4598	             mov rax, qword [rbp - 0x68]	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4000f87	          0x4889c6	                            mov rsi, rax	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4000f8a	          0x4889d7	                            mov rdi, rdx	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4000f8d	      0xb800000000	                              mov eax, 0	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4000f92	      0xe800000000	                          call 0x4000f97	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4000f97	        0x488b4588	             mov rax, qword [rbp - 0x78]	       713	obj-elf.c	FUNCTION_20
0x4000f9b	          0x83e001	                              and eax, 1	       713	obj-elf.c	FUNCTION_20
0x4000f9e	          0x4885c0	                           test rax, rax	       713	obj-elf.c	FUNCTION_20
0x4000fa1	            0x7407	                            je 0x4000faa	       713	obj-elf.c	FUNCTION_20
0x4000fa3	      0xba04000000	                              mov edx, 4	       713	obj-elf.c	FUNCTION_20
0x4000fa8	            0xeb05	                           jmp 0x4000faf	       713	obj-elf.c	FUNCTION_20
0x4000faa	      0xba0c000000	                            mov edx, 0xc	       713	obj-elf.c	FUNCTION_20
0x4000faf	        0x488b4588	             mov rax, qword [rbp - 0x78]	       714	obj-elf.c	FUNCTION_20
0x4000fb3	          0x83e002	                              and eax, 2	       714	obj-elf.c	FUNCTION_20
0x4000fb6	          0x4885c0	                           test rax, rax	       714	obj-elf.c	FUNCTION_20
0x4000fb9	           0xf95c0	                                setne al	       714	obj-elf.c	FUNCTION_20
0x4000fbc	           0xfb6c0	                           movzx eax, al	       714	obj-elf.c	FUNCTION_20
0x4000fbf	             0x9c2	                             or edx, eax	       714	obj-elf.c	FUNCTION_20
0x4000fc1	        0x488b4588	             mov rax, qword [rbp - 0x78]	       715	obj-elf.c	FUNCTION_20
0x4000fc5	          0x83e002	                              and eax, 2	       715	obj-elf.c	FUNCTION_20
0x4000fc8	          0x4885c0	                           test rax, rax	       715	obj-elf.c	FUNCTION_20
0x4000fcb	            0x740d	                            je 0x4000fda	       715	obj-elf.c	FUNCTION_20
0x4000fcd	        0x837d9408	               cmp dword [rbp - 0x6c], 8	       715	obj-elf.c	FUNCTION_20
0x4000fd1	            0x7407	                            je 0x4000fda	       715	obj-elf.c	FUNCTION_20
0x4000fd3	      0xb802000000	                              mov eax, 2	       715	obj-elf.c	FUNCTION_20
0x4000fd8	            0xeb05	                           jmp 0x4000fdf	       715	obj-elf.c	FUNCTION_20
0x4000fda	      0xb800000000	                              mov eax, 0	       715	obj-elf.c	FUNCTION_20
0x4000fdf	             0x9c2	                             or edx, eax	       715	obj-elf.c	FUNCTION_20
0x4000fe1	        0x488b4588	             mov rax, qword [rbp - 0x78]	       716	obj-elf.c	FUNCTION_20
0x4000fe5	          0x83e004	                              and eax, 4	       716	obj-elf.c	FUNCTION_20
0x4000fe8	          0x4885c0	                           test rax, rax	       716	obj-elf.c	FUNCTION_20
0x4000feb	            0x7407	                            je 0x4000ff4	       716	obj-elf.c	FUNCTION_20
0x4000fed	      0xb810000000	                           mov eax, 0x10	       716	obj-elf.c	FUNCTION_20
0x4000ff2	            0xeb05	                           jmp 0x4000ff9	       716	obj-elf.c	FUNCTION_20
0x4000ff4	      0xb800000000	                              mov eax, 0	       716	obj-elf.c	FUNCTION_20
0x4000ff9	             0x9c2	                             or edx, eax	       716	obj-elf.c	FUNCTION_20
0x4000ffb	        0x488b4588	             mov rax, qword [rbp - 0x78]	       717	obj-elf.c	FUNCTION_20
0x4000fff	          0x83e010	                           and eax, 0x10	       717	obj-elf.c	FUNCTION_20
0x4001002	          0x4885c0	                           test rax, rax	       717	obj-elf.c	FUNCTION_20
0x4001005	            0x7407	                            je 0x400100e	       717	obj-elf.c	FUNCTION_20
0x4001007	      0xb800008000	                       mov eax, 0x800000	       717	obj-elf.c	FUNCTION_20
0x400100c	            0xeb05	                           jmp 0x4001013	       717	obj-elf.c	FUNCTION_20
0x400100e	      0xb800000000	                              mov eax, 0	       717	obj-elf.c	FUNCTION_20
0x4001013	             0x9c2	                             or edx, eax	       717	obj-elf.c	FUNCTION_20
0x4001015	        0x488b4588	             mov rax, qword [rbp - 0x78]	       718	obj-elf.c	FUNCTION_20
0x4001019	          0x83e020	                           and eax, 0x20	       718	obj-elf.c	FUNCTION_20
0x400101c	          0x4885c0	                           test rax, rax	       718	obj-elf.c	FUNCTION_20
0x400101f	            0x7407	                            je 0x4001028	       718	obj-elf.c	FUNCTION_20
0x4001021	      0xb800000001	                      mov eax, 0x1000000	       718	obj-elf.c	FUNCTION_20
0x4001026	            0xeb05	                           jmp 0x400102d	       718	obj-elf.c	FUNCTION_20
0x4001028	      0xb800000000	                              mov eax, 0	       718	obj-elf.c	FUNCTION_20
0x400102d	             0x9c2	                             or edx, eax	       718	obj-elf.c	FUNCTION_20
0x400102f	        0x488b4588	             mov rax, qword [rbp - 0x78]	       719	obj-elf.c	FUNCTION_20
0x4001033	      0x2500000080	                     and eax, 0x80000000	       719	obj-elf.c	FUNCTION_20
0x4001038	          0x4885c0	                           test rax, rax	       719	obj-elf.c	FUNCTION_20
0x400103b	            0x7407	                            je 0x4001044	       719	obj-elf.c	FUNCTION_20
0x400103d	      0xb800800000	                         mov eax, 0x8000	       719	obj-elf.c	FUNCTION_20
0x4001042	            0xeb05	                           jmp 0x4001049	       719	obj-elf.c	FUNCTION_20
0x4001044	      0xb800000000	                              mov eax, 0	       719	obj-elf.c	FUNCTION_20
0x4001049	             0x9c2	                             or edx, eax	       719	obj-elf.c	FUNCTION_20
0x400104b	        0x488b4588	             mov rax, qword [rbp - 0x78]	       720	obj-elf.c	FUNCTION_20
0x400104f	      0x2500040000	                          and eax, 0x400	       720	obj-elf.c	FUNCTION_20
0x4001054	             0x9d0	                             or eax, edx	       720	obj-elf.c	FUNCTION_20
0x4001056	          0x8945a8	             mov dword [rbp - 0x58], eax	       712	obj-elf.c	FUNCTION_20
0x4001059	        0x837d1000	               cmp dword [rbp + 0x10], 0	       725	obj-elf.c	FUNCTION_20	IF_18
0x400105d	            0x7407	                            je 0x4001066	       725	obj-elf.c	FUNCTION_20	IF_18
0x400105f	    0x814da8000002	          or dword [rbp - 0x58], 0x20000	       726	obj-elf.c	FUNCTION_20	IF_18
0x4001066	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       728	obj-elf.c	FUNCTION_20	IF_19
0x400106b	     0xf85fd000000	                           jne 0x400116e	       728	obj-elf.c	FUNCTION_20	IF_19
0x4001071	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       732	obj-elf.c	FUNCTION_20	IF_19	IF_20
0x4001075	            0x750d	                           jne 0x4001084	       732	obj-elf.c	FUNCTION_20	IF_19	IF_20
0x4001077	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       733	obj-elf.c	FUNCTION_20	IF_19	CALL_20
0x400107a	            0x89c7	                            mov edi, eax	       733	obj-elf.c	FUNCTION_20	IF_19	CALL_20
0x400107c	      0xe800000000	                          call 0x4001081	       733	obj-elf.c	FUNCTION_20	IF_19	CALL_20
0x4001081	          0x894594	             mov dword [rbp - 0x6c], eax	       733	obj-elf.c	FUNCTION_20	IF_19	CALL_20
0x4001084	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       734	obj-elf.c	FUNCTION_20	IF_19	CALL_21
0x4001088	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       734	obj-elf.c	FUNCTION_20	IF_19	CALL_21
0x400108f	          0x8b5594	             mov edx, dword [rbp - 0x6c]	       734	obj-elf.c	FUNCTION_20	IF_19	CALL_21
0x4001092	          0x895004	                mov dword [rax + 4], edx	       734	obj-elf.c	FUNCTION_20	IF_19	CALL_21
0x4001095	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       735	obj-elf.c	FUNCTION_20	IF_19	CALL_22
0x4001099	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       735	obj-elf.c	FUNCTION_20	IF_19	CALL_22
0x40010a0	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       735	obj-elf.c	FUNCTION_20	IF_19	CALL_22
0x40010a4	        0x48895008	                mov qword [rax + 8], rdx	       735	obj-elf.c	FUNCTION_20	IF_19	CALL_22
0x40010a8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       736	obj-elf.c	FUNCTION_20	IF_19	CALL_23
0x40010ac	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       736	obj-elf.c	FUNCTION_20	IF_19	CALL_23
0x40010b3	          0x8b5590	             mov edx, dword [rbp - 0x70]	       736	obj-elf.c	FUNCTION_20	IF_19	CALL_23
0x40010b6	          0x89502c	             mov dword [rax + 0x2c], edx	       736	obj-elf.c	FUNCTION_20	IF_19	CALL_23
0x40010b9	        0x837d9408	               cmp dword [rbp - 0x6c], 8	       739	obj-elf.c	FUNCTION_20	IF_19	IF_21
0x40010bd	            0x7515	                           jne 0x40010d4	       739	obj-elf.c	FUNCTION_20	IF_19	IF_21
0x40010bf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       740	obj-elf.c	FUNCTION_20	IF_19	CALL_24
0x40010c3	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       740	obj-elf.c	FUNCTION_20	IF_19	CALL_24
0x40010ca	         0xfb65008	               movzx edx, byte [rax + 8]	       740	obj-elf.c	FUNCTION_20	IF_19	CALL_24
0x40010ce	          0x83ca02	                               or edx, 2	       740	obj-elf.c	FUNCTION_20	IF_19	CALL_24
0x40010d1	          0x885008	                  mov byte [rax + 8], dl	       740	obj-elf.c	FUNCTION_20	IF_19	CALL_24
0x40010d4	    0x488b05000000	            mov rax, qword [0x040010db] 	       742	obj-elf.c	FUNCTION_20	IF_19	CALL_25
0x40010db	          0x8b55a8	             mov edx, dword [rbp - 0x58]	       742	obj-elf.c	FUNCTION_20	IF_19	CALL_25
0x40010de	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       742	obj-elf.c	FUNCTION_20	IF_19	CALL_25
0x40010e2	          0x4889ce	                            mov rsi, rcx	       742	obj-elf.c	FUNCTION_20	IF_19	CALL_25
0x40010e5	          0x4889c7	                            mov rdi, rax	       742	obj-elf.c	FUNCTION_20	IF_19	CALL_25
0x40010e8	      0xe800000000	                          call 0x40010ed	       742	obj-elf.c	FUNCTION_20	IF_19	CALL_25
0x40010ed	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       743	obj-elf.c	FUNCTION_20	IF_19	IF_22
0x40010f0	      0x2500008000	                       and eax, 0x800000	       743	obj-elf.c	FUNCTION_20	IF_19	IF_22
0x40010f5	            0x85c0	                           test eax, eax	       743	obj-elf.c	FUNCTION_20	IF_19	IF_22
0x40010f7	            0x740d	                            je 0x4001106	       743	obj-elf.c	FUNCTION_20	IF_19	IF_22
0x40010f9	          0x8b5584	             mov edx, dword [rbp - 0x7c]	       744	obj-elf.c	FUNCTION_20	IF_19	IF_22
0x40010fc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       744	obj-elf.c	FUNCTION_20	IF_19	IF_22
0x4001100	    0x8990c4000000	             mov dword [rax + 0xc4], edx	       744	obj-elf.c	FUNCTION_20	IF_19	IF_22
0x4001106	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       745	obj-elf.c	FUNCTION_20	IF_19	CALL_26
0x400110a	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       745	obj-elf.c	FUNCTION_20	IF_19	CALL_26
0x4001111	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       745	obj-elf.c	FUNCTION_20	IF_19	CALL_26
0x4001118	    0x488990b00000	             mov qword [rax + 0xb0], rdx	       745	obj-elf.c	FUNCTION_20	IF_19	CALL_26
0x400111f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       748	obj-elf.c	FUNCTION_20	IF_19	CALL_27
0x4001123	          0x4889c7	                            mov rdi, rax	       748	obj-elf.c	FUNCTION_20	IF_19	CALL_27
0x4001126	      0xe800000000	                          call 0x400112b	       748	obj-elf.c	FUNCTION_20	IF_19	CALL_27
0x400112b	        0x488945d8	             mov qword [rbp - 0x28], rax	       748	obj-elf.c	FUNCTION_20	IF_19	CALL_27
0x400112f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       749	obj-elf.c	FUNCTION_20	IF_19	IF_23
0x4001134	            0x741f	                            je 0x4001155	       749	obj-elf.c	FUNCTION_20	IF_19	IF_23
0x4001136	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       750	obj-elf.c	FUNCTION_20	IF_19	CALL_28
0x400113a	    0x488b90f80000	            mov rdx, qword [rax + 0xf8] 	       750	obj-elf.c	FUNCTION_20	IF_19	CALL_28
0x4001141	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       750	obj-elf.c	FUNCTION_20	IF_19	CALL_28
0x4001145	          0x4889d6	                            mov rsi, rdx	       750	obj-elf.c	FUNCTION_20	IF_19	CALL_28
0x4001148	          0x4889c7	                            mov rdi, rax	       750	obj-elf.c	FUNCTION_20	IF_19	CALL_28
0x400114b	      0xe800000000	                          call 0x4001150	       750	obj-elf.c	FUNCTION_20	IF_19	CALL_28
0x4001150	      0xe9e5000000	                           jmp 0x400123a	       784	obj-elf.c	FUNCTION_20
0x4001155	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       752	obj-elf.c	FUNCTION_20	IF_19	CALL_30
0x4001159	          0x4889c7	                            mov rdi, rax	       752	obj-elf.c	FUNCTION_20	IF_19	CALL_30
0x400115c	      0xe800000000	                          call 0x4001161	       752	obj-elf.c	FUNCTION_20	IF_19	CALL_30
0x4001161	          0x4889c7	                            mov rdi, rax	       752	obj-elf.c	FUNCTION_20	IF_19	CALL_30
0x4001164	      0xe800000000	                          call 0x4001169	       752	obj-elf.c	FUNCTION_20	IF_19	CALL_30
0x4001169	      0xe9cc000000	                           jmp 0x400123a	       784	obj-elf.c	FUNCTION_20
0x400116e	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       756	obj-elf.c	FUNCTION_20	ELSE_11	IF_24
0x4001172	            0x7434	                            je 0x40011a8	       756	obj-elf.c	FUNCTION_20	ELSE_11	IF_24
0x4001174	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       757	obj-elf.c	FUNCTION_20	ELSE_11	IF_24	CALL_31
0x4001178	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       757	obj-elf.c	FUNCTION_20	ELSE_11	IF_24	CALL_31
0x400117f	          0x8b4004	                mov eax, dword [rax + 4]	       757	obj-elf.c	FUNCTION_20	ELSE_11	IF_24	CALL_31
0x4001182	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       757	obj-elf.c	FUNCTION_20	ELSE_11	IF_24	CALL_31
0x4001185	            0x7421	                            je 0x40011a8	       757	obj-elf.c	FUNCTION_20	ELSE_11	IF_24	CALL_31
0x4001187	      0xbf00000000	                              mov edi, 0	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x400118c	      0xe800000000	                          call 0x4001191	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x4001191	          0x4889c2	                            mov rdx, rax	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x4001194	        0x488b4598	             mov rax, qword [rbp - 0x68]	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x4001198	          0x4889c6	                            mov rsi, rax	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x400119b	          0x4889d7	                            mov rdi, rdx	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x400119e	      0xb800000000	                              mov eax, 0	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x40011a3	      0xe800000000	                          call 0x40011a8	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x40011a8	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       760	obj-elf.c	FUNCTION_20	ELSE_11	IF_25
0x40011ad	     0xf8487000000	                            je 0x400123a	       760	obj-elf.c	FUNCTION_20	ELSE_11	IF_25
0x40011b3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       765	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_26
0x40011b7	          0x8b4020	            mov eax, dword [rax + 0x20] 	       765	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_26
0x40011ba	          0x3345a8	             xor eax, dword [rbp - 0x58]	       765	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_26
0x40011bd	      0x251b848301	                      and eax, 0x183841b	       766	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_26
0x40011c2	            0x85c0	                           test eax, eax	       765	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_26
0x40011c4	            0x7423	                            je 0x40011e9	       765	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_26
0x40011c6	      0xbf00000000	                              mov edi, 0	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40011cb	      0xe800000000	                          call 0x40011d0	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40011d0	          0x4889c2	                            mov rdx, rax	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40011d3	        0x488b4598	             mov rax, qword [rbp - 0x68]	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40011d7	          0x4889c6	                            mov rsi, rax	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40011da	          0x4889d7	                            mov rdi, rdx	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40011dd	      0xb800000000	                              mov eax, 0	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40011e2	      0xe800000000	                          call 0x40011e7	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40011e7	            0xeb13	                           jmp 0x40011fc	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40011e9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       774	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_36
0x40011ed	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       774	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_36
0x40011f4	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       774	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_36
0x40011f8	        0x48895008	                mov qword [rax + 8], rdx	       774	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_36
0x40011fc	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x40011ff	      0x2500008000	                       and eax, 0x800000	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x4001204	            0x85c0	                           test eax, eax	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x4001206	            0x7432	                            je 0x400123a	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x4001208	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x400120c	    0x8b90c4000000	            mov edx, dword [rax + 0xc4] 	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x4001212	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x4001215	            0x39c2	                            cmp edx, eax	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x4001217	            0x7421	                            je 0x400123a	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x4001219	      0xbf00000000	                              mov edi, 0	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x400121e	      0xe800000000	                          call 0x4001223	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x4001223	          0x4889c2	                            mov rdx, rax	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x4001226	        0x488b4598	             mov rax, qword [rbp - 0x68]	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x400122a	          0x4889c6	                            mov rsi, rax	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x400122d	          0x4889d7	                            mov rdi, rdx	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x4001230	      0xb800000000	                              mov eax, 0	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x4001235	      0xe800000000	                          call 0x400123a	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x400123a	              0x90	                                     nop	       784	obj-elf.c	FUNCTION_20
0x400123b	        0x488b45f8	                mov rax, qword [rbp - 8]	       784	obj-elf.c	FUNCTION_20
0x400123f	    0x644833042528	                xor rax, qword fs:[0x28]	       784	obj-elf.c	FUNCTION_20
0x4001248	            0x7405	                            je 0x400124f	       784	obj-elf.c	FUNCTION_20
0x400124a	      0xe800000000	                          call 0x400124f	       784	obj-elf.c	FUNCTION_20
0x400124f	              0xc9	                                   leave	       784	obj-elf.c	FUNCTION_20
0x4001250	              0xc3	                                     ret	       784	obj-elf.c	FUNCTION_20
obj_elf_tls_common	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,2:DO,0:IF,1:WHILE,0	19
0x40007b2	              0x55	                                push rbp	       390	obj-elf.c	FUNCTION_13
0x40007b3	          0x4889e5	                            mov rbp, rsp	       390	obj-elf.c	FUNCTION_13
0x40007b6	        0x4883ec20	                           sub rsp, 0x20	       390	obj-elf.c	FUNCTION_13
0x40007ba	          0x897dec	             mov dword [rbp - 0x14], edi	       390	obj-elf.c	FUNCTION_13
0x40007bd	      0xbe00000000	                              mov esi, 0	       391	obj-elf.c	FUNCTION_13	CALL_1
0x40007c2	      0xbf00000000	                              mov edi, 0	       391	obj-elf.c	FUNCTION_13	CALL_1
0x40007c7	      0xe800000000	                          call 0x40007cc	       391	obj-elf.c	FUNCTION_13	CALL_1
0x40007cc	        0x488945f8	                mov qword [rbp - 8], rax	       391	obj-elf.c	FUNCTION_13	CALL_1
0x40007d0	      0x48837df800	                  cmp qword [rbp - 8], 0	       393	obj-elf.c	FUNCTION_13	IF_1
0x40007d5	            0x7418	                            je 0x40007ef	       393	obj-elf.c	FUNCTION_13	IF_1
0x40007d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       394	obj-elf.c	FUNCTION_13	CALL_2
0x40007db	          0x4889c7	                            mov rdi, rax	       394	obj-elf.c	FUNCTION_13	CALL_2
0x40007de	      0xe800000000	                          call 0x40007e3	       394	obj-elf.c	FUNCTION_13	CALL_2
0x40007e3	          0x8b5018	            mov edx, dword [rax + 0x18] 	       394	obj-elf.c	FUNCTION_13	CALL_2
0x40007e6	    0x81ca00000400	                         or edx, 0x40000	       394	obj-elf.c	FUNCTION_13	CALL_2
0x40007ec	          0x895018	             mov dword [rax + 0x18], edx	       394	obj-elf.c	FUNCTION_13	CALL_2
0x40007ef	              0x90	                                     nop	       395	obj-elf.c	FUNCTION_13
0x40007f0	              0xc9	                                   leave	       395	obj-elf.c	FUNCTION_13
0x40007f1	              0xc3	                                     ret	       395	obj-elf.c	FUNCTION_13
elf_begin	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,9:DO,0:IF,0:WHILE,0	37
0x40000ab	              0x55	                                push rbp	       198	obj-elf.c	FUNCTION_1
0x40000ac	          0x4889e5	                            mov rbp, rsp	       198	obj-elf.c	FUNCTION_1
0x40000af	        0x4883ec10	                           sub rsp, 0x10	       198	obj-elf.c	FUNCTION_1
0x40000b3	    0x488b05000000	            mov rax, qword [0x040000ba] 	       202	obj-elf.c	FUNCTION_1	CALL_1
0x40000ba	      0xbe00000000	                              mov esi, 0	       202	obj-elf.c	FUNCTION_1	CALL_1
0x40000bf	          0x4889c7	                            mov rdi, rax	       202	obj-elf.c	FUNCTION_1	CALL_1
0x40000c2	      0xe800000000	                          call 0x40000c7	       202	obj-elf.c	FUNCTION_1	CALL_1
0x40000c7	        0x488945f8	                mov qword [rbp - 8], rax	       202	obj-elf.c	FUNCTION_1	CALL_1
0x40000cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       203	obj-elf.c	FUNCTION_1	CALL_3
0x40000cf	          0x4889c7	                            mov rdi, rax	       203	obj-elf.c	FUNCTION_1	CALL_3
0x40000d2	      0xe800000000	                          call 0x40000d7	       203	obj-elf.c	FUNCTION_1	CALL_3
0x40000d7	          0x4889c7	                            mov rdi, rax	       203	obj-elf.c	FUNCTION_1	CALL_3
0x40000da	      0xe800000000	                          call 0x40000df	       203	obj-elf.c	FUNCTION_1	CALL_3
0x40000df	    0x488b05000000	            mov rax, qword [0x040000e6] 	       204	obj-elf.c	FUNCTION_1	CALL_4
0x40000e6	      0xbe00000000	                              mov esi, 0	       204	obj-elf.c	FUNCTION_1	CALL_4
0x40000eb	          0x4889c7	                            mov rdi, rax	       204	obj-elf.c	FUNCTION_1	CALL_4
0x40000ee	      0xe800000000	                          call 0x40000f3	       204	obj-elf.c	FUNCTION_1	CALL_4
0x40000f3	        0x488945f8	                mov qword [rbp - 8], rax	       204	obj-elf.c	FUNCTION_1	CALL_4
0x40000f7	        0x488b45f8	                mov rax, qword [rbp - 8]	       205	obj-elf.c	FUNCTION_1	CALL_6
0x40000fb	          0x4889c7	                            mov rdi, rax	       205	obj-elf.c	FUNCTION_1	CALL_6
0x40000fe	      0xe800000000	                          call 0x4000103	       205	obj-elf.c	FUNCTION_1	CALL_6
0x4000103	          0x4889c7	                            mov rdi, rax	       205	obj-elf.c	FUNCTION_1	CALL_6
0x4000106	      0xe800000000	                          call 0x400010b	       205	obj-elf.c	FUNCTION_1	CALL_6
0x400010b	    0x488b05000000	            mov rax, qword [0x04000112] 	       206	obj-elf.c	FUNCTION_1	CALL_7
0x4000112	      0xbe00000000	                              mov esi, 0	       206	obj-elf.c	FUNCTION_1	CALL_7
0x4000117	          0x4889c7	                            mov rdi, rax	       206	obj-elf.c	FUNCTION_1	CALL_7
0x400011a	      0xe800000000	                          call 0x400011f	       206	obj-elf.c	FUNCTION_1	CALL_7
0x400011f	        0x488945f8	                mov qword [rbp - 8], rax	       206	obj-elf.c	FUNCTION_1	CALL_7
0x4000123	        0x488b45f8	                mov rax, qword [rbp - 8]	       207	obj-elf.c	FUNCTION_1	CALL_9
0x4000127	          0x4889c7	                            mov rdi, rax	       207	obj-elf.c	FUNCTION_1	CALL_9
0x400012a	      0xe800000000	                          call 0x400012f	       207	obj-elf.c	FUNCTION_1	CALL_9
0x400012f	          0x4889c7	                            mov rdi, rax	       207	obj-elf.c	FUNCTION_1	CALL_9
0x4000132	      0xe800000000	                          call 0x4000137	       207	obj-elf.c	FUNCTION_1	CALL_9
0x4000137	    0x48c705000000	               mov qword [0x04000142], 0	       208	obj-elf.c	FUNCTION_1
0x4000142	              0x90	                                     nop	       209	obj-elf.c	FUNCTION_1
0x4000143	              0xc9	                                   leave	       209	obj-elf.c	FUNCTION_1
0x4000144	              0xc3	                                     ret	       209	obj-elf.c	FUNCTION_1
obj_elf_type	FOR,0:SWITCH,0:functions,0:ELSE,10:CALL,49:DO,0:IF,16:WHILE,0	327
0x4003582	              0x55	                                push rbp	      1962	obj-elf.c	FUNCTION_50
0x4003583	          0x4889e5	                            mov rbp, rsp	      1962	obj-elf.c	FUNCTION_50
0x4003586	              0x53	                                push rbx	      1962	obj-elf.c	FUNCTION_50
0x4003587	        0x4883ec58	                           sub rsp, 0x58	      1962	obj-elf.c	FUNCTION_50
0x400358b	          0x897dac	             mov dword [rbp - 0x54], edi	      1962	obj-elf.c	FUNCTION_50
0x400358e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1962	obj-elf.c	FUNCTION_50
0x4003597	        0x488945e8	             mov qword [rbp - 0x18], rax	      1962	obj-elf.c	FUNCTION_50
0x400359b	            0x31c0	                            xor eax, eax	      1962	obj-elf.c	FUNCTION_50
0x400359d	      0xe890d2ffff	call sym.get_sym_from_input_line_and_check	      1969	obj-elf.c	FUNCTION_50	CALL_1
0x40035a2	        0x488945c0	             mov qword [rbp - 0x40], rax	      1969	obj-elf.c	FUNCTION_50	CALL_1
0x40035a6	    0x488b05000000	            mov rax, qword [0x040035ad] 	      1970	obj-elf.c	FUNCTION_50
0x40035ad	           0xfb600	                   movzx eax, byte [rax]	      1970	obj-elf.c	FUNCTION_50
0x40035b0	          0x8845bb	               mov byte [rbp - 0x45], al	      1970	obj-elf.c	FUNCTION_50
0x40035b3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1971	obj-elf.c	FUNCTION_50	CALL_2
0x40035b7	          0x4889c7	                            mov rdi, rax	      1971	obj-elf.c	FUNCTION_50	CALL_2
0x40035ba	      0xe800000000	                          call 0x40035bf	      1971	obj-elf.c	FUNCTION_50	CALL_2
0x40035bf	        0x488945c8	             mov qword [rbp - 0x38], rax	      1971	obj-elf.c	FUNCTION_50	CALL_2
0x40035c3	    0x488b05000000	            mov rax, qword [0x040035ca] 	      1973	obj-elf.c	FUNCTION_50	IF_1
0x40035ca	           0xfb600	                   movzx eax, byte [rax]	      1973	obj-elf.c	FUNCTION_50	IF_1
0x40035cd	            0x3c2c	                            cmp al, 0x2c	      1973	obj-elf.c	FUNCTION_50	IF_1
0x40035cf	            0x7512	                           jne 0x40035e3	      1973	obj-elf.c	FUNCTION_50	IF_1
0x40035d1	    0x488b05000000	            mov rax, qword [0x040035d8] 	      1974	obj-elf.c	FUNCTION_50	IF_1
0x40035d8	        0x4883c001	                              add rax, 1	      1974	obj-elf.c	FUNCTION_50	IF_1
0x40035dc	    0x488905000000	            mov qword [0x040035e3], rax 	      1974	obj-elf.c	FUNCTION_50	IF_1
0x40035e3	    0x488b05000000	            mov rax, qword [0x040035ea] 	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x40035ea	           0xfb600	                   movzx eax, byte [rax]	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x40035ed	            0x3c20	                            cmp al, 0x20	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x40035ef	            0x7512	                           jne 0x4003603	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x40035f1	    0x488b05000000	            mov rax, qword [0x040035f8] 	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x40035f8	        0x4883c001	                              add rax, 1	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x40035fc	    0x488905000000	            mov qword [0x04003603], rax 	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x4003603	    0x488b05000000	            mov rax, qword [0x0400360a] 	      1977	obj-elf.c	FUNCTION_50	IF_2
0x400360a	           0xfb600	                   movzx eax, byte [rax]	      1977	obj-elf.c	FUNCTION_50	IF_2
0x400360d	            0x3c23	                            cmp al, 0x23	      1977	obj-elf.c	FUNCTION_50	IF_2
0x400360f	            0x742a	                            je 0x400363b	      1977	obj-elf.c	FUNCTION_50	IF_2
0x4003611	    0x488b05000000	            mov rax, qword [0x04003618] 	      1978	obj-elf.c	FUNCTION_50	IF_2
0x4003618	           0xfb600	                   movzx eax, byte [rax]	      1978	obj-elf.c	FUNCTION_50	IF_2
0x400361b	            0x3c40	                            cmp al, 0x40	      1978	obj-elf.c	FUNCTION_50	IF_2
0x400361d	            0x741c	                            je 0x400363b	      1978	obj-elf.c	FUNCTION_50	IF_2
0x400361f	    0x488b05000000	            mov rax, qword [0x04003626] 	      1979	obj-elf.c	FUNCTION_50	IF_2
0x4003626	           0xfb600	                   movzx eax, byte [rax]	      1979	obj-elf.c	FUNCTION_50	IF_2
0x4003629	            0x3c22	                            cmp al, 0x22	      1979	obj-elf.c	FUNCTION_50	IF_2
0x400362b	            0x740e	                            je 0x400363b	      1979	obj-elf.c	FUNCTION_50	IF_2
0x400362d	    0x488b05000000	            mov rax, qword [0x04003634] 	      1980	obj-elf.c	FUNCTION_50	IF_2
0x4003634	           0xfb600	                   movzx eax, byte [rax]	      1980	obj-elf.c	FUNCTION_50	IF_2
0x4003637	            0x3c25	                            cmp al, 0x25	      1980	obj-elf.c	FUNCTION_50	IF_2
0x4003639	            0x7512	                           jne 0x400364d	      1980	obj-elf.c	FUNCTION_50	IF_2
0x400363b	    0x488b05000000	            mov rax, qword [0x04003642] 	      1981	obj-elf.c	FUNCTION_50	IF_2
0x4003642	        0x4883c001	                              add rax, 1	      1981	obj-elf.c	FUNCTION_50	IF_2
0x4003646	    0x488905000000	            mov qword [0x0400364d], rax 	      1981	obj-elf.c	FUNCTION_50	IF_2
0x400364d	        0x488d45bb	                   lea rax, [rbp - 0x45]	      1983	obj-elf.c	FUNCTION_50	CALL_4
0x4003651	          0x4889c7	                            mov rdi, rax	      1983	obj-elf.c	FUNCTION_50	CALL_4
0x4003654	      0xe86dfeffff	              call sym.obj_elf_type_name	      1983	obj-elf.c	FUNCTION_50	CALL_4
0x4003659	        0x488945d0	             mov qword [rbp - 0x30], rax	      1983	obj-elf.c	FUNCTION_50	CALL_4
0x400365d	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1985	obj-elf.c	FUNCTION_50
0x4003664	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x4003668	      0xbe00000000	                              mov esi, 0	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x400366d	          0x4889c7	                            mov rdi, rax	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x4003670	      0xe800000000	                          call 0x4003675	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x4003675	            0x85c0	                           test eax, eax	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x4003677	            0x742a	                            je 0x40036a3	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x4003679	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1987	obj-elf.c	FUNCTION_50	IF_3	CALL_6
0x400367d	      0xbe00000000	                              mov esi, 0	      1987	obj-elf.c	FUNCTION_50	IF_3	CALL_6
0x4003682	          0x4889c7	                            mov rdi, rax	      1987	obj-elf.c	FUNCTION_50	IF_3	CALL_6
0x4003685	      0xe800000000	                          call 0x400368a	      1987	obj-elf.c	FUNCTION_50	IF_3	CALL_6
0x400368a	            0x85c0	                           test eax, eax	      1987	obj-elf.c	FUNCTION_50	IF_3	CALL_6
0x400368c	            0x7415	                            je 0x40036a3	      1987	obj-elf.c	FUNCTION_50	IF_3	CALL_6
0x400368e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x4003692	      0xbe00000000	                              mov esi, 0	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x4003697	          0x4889c7	                            mov rdi, rax	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x400369a	      0xe800000000	                          call 0x400369f	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x400369f	            0x85c0	                           test eax, eax	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x40036a1	            0x750c	                           jne 0x40036af	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x40036a3	    0xc745bc080000	               mov dword [rbp - 0x44], 8	      1989	obj-elf.c	FUNCTION_50	IF_3
0x40036aa	      0xe972030000	                           jmp 0x4003a21	      1989	obj-elf.c	FUNCTION_50	IF_3
0x40036af	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x40036b3	      0xbe00000000	                              mov esi, 0	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x40036b8	          0x4889c7	                            mov rdi, rax	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x40036bb	      0xe800000000	                          call 0x40036c0	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x40036c0	            0x85c0	                           test eax, eax	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x40036c2	            0x742a	                            je 0x40036ee	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x40036c4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x40036c8	      0xbe00000000	                              mov esi, 0	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x40036cd	          0x4889c7	                            mov rdi, rax	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x40036d0	      0xe800000000	                          call 0x40036d5	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x40036d5	            0x85c0	                           test eax, eax	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x40036d7	            0x7415	                            je 0x40036ee	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x40036d9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x40036dd	      0xbe00000000	                              mov esi, 0	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x40036e2	          0x4889c7	                            mov rdi, rax	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x40036e5	      0xe800000000	                          call 0x40036ea	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x40036ea	            0x85c0	                           test eax, eax	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x40036ec	            0x750c	                           jne 0x40036fa	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x40036ee	    0xc745bc000001	         mov dword [rbp - 0x44], 0x10000	      1993	obj-elf.c	FUNCTION_50	ELSE_1	IF_4
0x40036f5	      0xe927030000	                           jmp 0x4003a21	      1993	obj-elf.c	FUNCTION_50	ELSE_1	IF_4
0x40036fa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x40036fe	      0xbe00000000	                              mov esi, 0	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x4003703	          0x4889c7	                            mov rdi, rax	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x4003706	      0xe800000000	                          call 0x400370b	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x400370b	            0x85c0	                           test eax, eax	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x400370d	            0x742a	                            je 0x4003739	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x400370f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1995	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_12
0x4003713	      0xbe00000000	                              mov esi, 0	      1995	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_12
0x4003718	          0x4889c7	                            mov rdi, rax	      1995	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_12
0x400371b	      0xe800000000	                          call 0x4003720	      1995	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_12
0x4003720	            0x85c0	                           test eax, eax	      1995	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_12
0x4003722	            0x7415	                            je 0x4003739	      1995	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_12
0x4003724	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x4003728	      0xbe00000000	                              mov esi, 0	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x400372d	          0x4889c7	                            mov rdi, rax	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x4003730	      0xe800000000	                          call 0x4003735	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x4003735	            0x85c0	                           test eax, eax	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x4003737	            0x750c	                           jne 0x4003745	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x4003739	    0xc745bc000005	         mov dword [rbp - 0x44], 0x50000	      1997	obj-elf.c	FUNCTION_50	ELSE_2	IF_5
0x4003740	      0xe9dc020000	                           jmp 0x4003a21	      1997	obj-elf.c	FUNCTION_50	ELSE_2	IF_5
0x4003745	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x4003749	      0xbe00000000	                              mov esi, 0	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x400374e	          0x4889c7	                            mov rdi, rax	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x4003751	      0xe800000000	                          call 0x4003756	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x4003756	            0x85c0	                           test eax, eax	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x4003758	     0xf84c3020000	                            je 0x4003a21	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x400375e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1999	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_15
0x4003762	      0xbe00000000	                              mov esi, 0	      1999	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_15
0x4003767	          0x4889c7	                            mov rdi, rax	      1999	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_15
0x400376a	      0xe800000000	                          call 0x400376f	      1999	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_15
0x400376f	            0x85c0	                           test eax, eax	      1999	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_15
0x4003771	     0xf84aa020000	                            je 0x4003a21	      1999	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_15
0x4003777	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x400377b	      0xbe00000000	                              mov esi, 0	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x4003780	          0x4889c7	                            mov rdi, rax	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x4003783	      0xe800000000	                          call 0x4003788	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x4003788	            0x85c0	                           test eax, eax	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x400378a	     0xf8491020000	                            je 0x4003a21	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x4003790	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2002	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_17
0x4003794	      0xbe00000000	                              mov esi, 0	      2002	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_17
0x4003799	          0x4889c7	                            mov rdi, rax	      2002	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_17
0x400379c	      0xe800000000	                          call 0x40037a1	      2002	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_17
0x40037a1	            0x85c0	                           test eax, eax	      2002	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_17
0x40037a3	            0x742e	                            je 0x40037d3	      2002	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_17
0x40037a5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2003	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_18
0x40037a9	      0xbe00000000	                              mov esi, 0	      2003	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_18
0x40037ae	          0x4889c7	                            mov rdi, rax	      2003	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_18
0x40037b1	      0xe800000000	                          call 0x40037b6	      2003	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_18
0x40037b6	            0x85c0	                           test eax, eax	      2003	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_18
0x40037b8	            0x7419	                            je 0x40037d3	      2003	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_18
0x40037ba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2004	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_19
0x40037be	      0xbe00000000	                              mov esi, 0	      2004	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_19
0x40037c3	          0x4889c7	                            mov rdi, rax	      2004	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_19
0x40037c6	      0xe800000000	                          call 0x40037cb	      2004	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_19
0x40037cb	            0x85c0	                           test eax, eax	      2004	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_19
0x40037cd	     0xf8511010000	                           jne 0x40038e4	      2004	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_19
0x40037d3	    0xc745bc000001	         mov dword [rbp - 0x44], 0x10000	      2006	obj-elf.c	FUNCTION_50	ELSE_4	IF_7
0x40037da	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2008	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	CALL_20
0x40037de	          0x4889c7	                            mov rdi, rax	      2008	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	CALL_20
0x40037e1	      0xe800000000	                          call 0x40037e6	      2008	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	CALL_20
0x40037e6	            0x85c0	                           test eax, eax	      2008	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	CALL_20
0x40037e8	     0xf8533020000	                           jne 0x4003a21	      2008	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	CALL_20
0x40037ee	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2010	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_21
0x40037f2	          0x4889c7	                            mov rdi, rax	      2010	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_21
0x40037f5	      0xe800000000	                          call 0x40037fa	      2010	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_21
0x40037fa	            0x85c0	                           test eax, eax	      2010	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_21
0x40037fc	            0x7465	                            je 0x4003863	      2010	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_21
0x40037fe	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2012	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_22
0x4003802	      0xbe01000000	                              mov esi, 1	      2012	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_22
0x4003807	          0x4889c7	                            mov rdi, rax	      2012	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_22
0x400380a	      0xe800000000	                          call 0x400380f	      2012	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_22
0x400380f	        0x488945c0	             mov qword [rbp - 0x40], rax	      2012	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_22
0x4003813	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2013	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_23
0x4003817	      0xbe00000000	                              mov esi, 0	      2013	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_23
0x400381c	          0x4889c7	                            mov rdi, rax	      2013	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_23
0x400381f	      0xe800000000	                          call 0x4003824	      2013	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_23
0x4003824	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2014	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_24
0x4003828	      0xbe00000000	                              mov esi, 0	      2014	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_24
0x400382d	          0x4889c7	                            mov rdi, rax	      2014	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_24
0x4003830	      0xe800000000	                          call 0x4003835	      2014	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_24
0x4003835	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2015	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_25
0x4003839	          0x4889c7	                            mov rdi, rax	      2015	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_25
0x400383c	      0xe800000000	                          call 0x4003841	      2015	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_25
0x4003841	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2016	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_26
0x4003845	      0xbe00000000	                              mov esi, 0	      2016	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_26
0x400384a	          0x4889c7	                            mov rdi, rax	      2016	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_26
0x400384d	      0xe800000000	                          call 0x4003852	      2016	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_26
0x4003852	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2017	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_27
0x4003856	          0x4889c7	                            mov rdi, rax	      2017	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_27
0x4003859	      0xe800000000	                          call 0x400385e	      2017	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_27
0x400385e	      0xe9be010000	                           jmp 0x4003a21	      2008	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	CALL_20
0x4003863	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x4003867	          0x4889c7	                            mov rdi, rax	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x400386a	      0xe800000000	                          call 0x400386f	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x400386f	            0x85c0	                           test eax, eax	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x4003871	            0x7510	                           jne 0x4003883	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x4003873	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x4003877	          0x4889c7	                            mov rdi, rax	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x400387a	      0xe800000000	                          call 0x400387f	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x400387f	            0x85c0	                           test eax, eax	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x4003881	            0x742e	                            je 0x40038b1	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x4003883	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4003887	          0x4889c7	                            mov rdi, rax	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x400388a	      0xe800000000	                          call 0x400388f	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x400388f	          0x4889c3	                            mov rbx, rax	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4003892	      0xbf00000000	                              mov edi, 0	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4003897	      0xe800000000	                          call 0x400389c	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x400389c	          0x4889de	                            mov rsi, rbx	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x400389f	          0x4889c7	                            mov rdi, rax	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x40038a2	      0xb800000000	                              mov eax, 0	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x40038a7	      0xe800000000	                          call 0x40038ac	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x40038ac	      0xe970010000	                           jmp 0x4003a21	      2008	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	CALL_20
0x40038b1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2024	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_33
0x40038b5	      0xbe00000000	                              mov esi, 0	      2024	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_33
0x40038ba	          0x4889c7	                            mov rdi, rax	      2024	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_33
0x40038bd	      0xe800000000	                          call 0x40038c2	      2024	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_33
0x40038c2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2025	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_34
0x40038c6	      0xbe00000000	                              mov esi, 0	      2025	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_34
0x40038cb	          0x4889c7	                            mov rdi, rax	      2025	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_34
0x40038ce	      0xe800000000	                          call 0x40038d3	      2025	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_34
0x40038d3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2026	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_35
0x40038d7	          0x4889c7	                            mov rdi, rax	      2026	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_35
0x40038da	      0xe800000000	                          call 0x40038df	      2026	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_35
0x40038df	      0xe93d010000	                           jmp 0x4003a21	      2008	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	CALL_20
0x40038e4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2030	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_36
0x40038e8	      0xbe00000000	                              mov esi, 0	      2030	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_36
0x40038ed	          0x4889c7	                            mov rdi, rax	      2030	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_36
0x40038f0	      0xe800000000	                          call 0x40038f5	      2030	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_36
0x40038f5	            0x85c0	                           test eax, eax	      2030	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_36
0x40038f7	            0x742a	                            je 0x4003923	      2030	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_36
0x40038f9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x40038fd	      0xbe00000000	                              mov esi, 0	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x4003902	          0x4889c7	                            mov rdi, rax	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x4003905	      0xe800000000	                          call 0x400390a	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x400390a	            0x85c0	                           test eax, eax	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x400390c	            0x7415	                            je 0x4003923	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x400390e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2032	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_38
0x4003912	      0xbe00000000	                              mov esi, 0	      2032	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_38
0x4003917	          0x4889c7	                            mov rdi, rax	      2032	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_38
0x400391a	      0xe800000000	                          call 0x400391f	      2032	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_38
0x400391f	            0x85c0	                           test eax, eax	      2032	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_38
0x4003921	            0x7566	                           jne 0x4003989	      2032	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_38
0x4003923	    0x488b05000000	            mov rax, qword [0x0400392a] 	      2036	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_39
0x400392a	        0x488b4008	                mov rax, qword [rax + 8]	      2036	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_39
0x400392e	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2036	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_39
0x4003935	        0x488945e0	             mov qword [rbp - 0x20], rax	      2036	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_39
0x4003939	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x400393d	          0x8b400c	              mov eax, dword [rax + 0xc]	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x4003940	          0x83f803	                              cmp eax, 3	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x4003943	            0x7438	                            je 0x400397d	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x4003945	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2038	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x4003949	          0x8b400c	              mov eax, dword [rax + 0xc]	      2038	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x400394c	          0x83f809	                              cmp eax, 9	      2038	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x400394f	            0x742c	                            je 0x400397d	      2038	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x4003951	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2040	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x4003955	          0x8b400c	              mov eax, dword [rax + 0xc]	      2040	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x4003958	            0x85c0	                           test eax, eax	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x400395a	            0x7421	                            je 0x400397d	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x400395c	      0xbf00000000	                              mov edi, 0	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x4003961	      0xe800000000	                          call 0x4003966	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x4003966	          0x4889c2	                            mov rdx, rax	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x4003969	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x400396d	          0x4889c6	                            mov rsi, rax	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x4003970	          0x4889d7	                            mov rdi, rdx	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x4003973	      0xb800000000	                              mov eax, 0	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x4003978	      0xe800000000	                          call 0x400397d	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x400397d	    0xc745bc080040	        mov dword [rbp - 0x44], 0x400008	      2043	obj-elf.c	FUNCTION_50	ELSE_7	IF_11
0x4003984	      0xe998000000	                           jmp 0x4003a21	      2033	obj-elf.c	FUNCTION_50	ELSE_7	IF_11
0x4003989	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2045	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_42
0x400398d	      0xbe00000000	                              mov esi, 0	      2045	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_42
0x4003992	          0x4889c7	                            mov rdi, rax	      2045	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_42
0x4003995	      0xe800000000	                          call 0x400399a	      2045	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_42
0x400399a	            0x85c0	                           test eax, eax	      2045	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_42
0x400399c	            0x7562	                           jne 0x4003a00	      2045	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_42
0x400399e	    0x488b05000000	            mov rax, qword [0x040039a5] 	      2049	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_43
0x40039a5	        0x488b4008	                mov rax, qword [rax + 8]	      2049	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_43
0x40039a9	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2049	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_43
0x40039b0	        0x488945d8	             mov qword [rbp - 0x28], rax	      2049	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_43
0x40039b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2050	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x40039b8	          0x8b400c	              mov eax, dword [rax + 0xc]	      2050	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x40039bb	          0x83f803	                              cmp eax, 3	      2050	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x40039be	            0x742c	                            je 0x40039ec	      2050	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x40039c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2052	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x40039c4	          0x8b400c	              mov eax, dword [rax + 0xc]	      2052	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x40039c7	            0x85c0	                           test eax, eax	      2050	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x40039c9	            0x7421	                            je 0x40039ec	      2050	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x40039cb	      0xbf00000000	                              mov edi, 0	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x40039d0	      0xe800000000	                          call 0x40039d5	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x40039d5	          0x4889c2	                            mov rdx, rax	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x40039d8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x40039dc	          0x4889c6	                            mov rsi, rax	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x40039df	          0x4889d7	                            mov rdi, rdx	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x40039e2	      0xb800000000	                              mov eax, 0	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x40039e7	      0xe800000000	                          call 0x40039ec	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x40039ec	    0xc745bc000081	        mov dword [rbp - 0x44], 0x810000	      2055	obj-elf.c	FUNCTION_50	ELSE_8	IF_13
0x40039f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2057	obj-elf.c	FUNCTION_50	ELSE_8	IF_13
0x40039f7	    0xc7400c030000	                mov dword [rax + 0xc], 3	      2057	obj-elf.c	FUNCTION_50	ELSE_8	IF_13
0x40039fe	            0xeb21	                           jmp 0x4003a21	      2057	obj-elf.c	FUNCTION_50	ELSE_8	IF_13
0x4003a00	      0xbf00000000	                              mov edi, 0	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4003a05	      0xe800000000	                          call 0x4003a0a	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4003a0a	          0x4889c2	                            mov rdx, rax	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4003a0d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4003a11	          0x4889c6	                            mov rsi, rax	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4003a14	          0x4889d7	                            mov rdi, rdx	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4003a17	      0xb800000000	                              mov eax, 0	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4003a1c	      0xe800000000	                          call 0x4003a21	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4003a21	    0x488b05000000	            mov rax, qword [0x04003a28] 	      2066	obj-elf.c	FUNCTION_50
0x4003a28	         0xfb655bb	            movzx edx, byte [rbp - 0x45]	      2066	obj-elf.c	FUNCTION_50
0x4003a2c	            0x8810	                      mov byte [rax], dl	      2066	obj-elf.c	FUNCTION_50
0x4003a2e	    0x488b05000000	            mov rax, qword [0x04003a35] 	      2068	obj-elf.c	FUNCTION_50	IF_16
0x4003a35	           0xfb600	                   movzx eax, byte [rax]	      2068	obj-elf.c	FUNCTION_50	IF_16
0x4003a38	            0x3c22	                            cmp al, 0x22	      2068	obj-elf.c	FUNCTION_50	IF_16
0x4003a3a	            0x7512	                           jne 0x4003a4e	      2068	obj-elf.c	FUNCTION_50	IF_16
0x4003a3c	    0x488b05000000	            mov rax, qword [0x04003a43] 	      2069	obj-elf.c	FUNCTION_50	IF_16
0x4003a43	        0x4883c001	                              add rax, 1	      2069	obj-elf.c	FUNCTION_50	IF_16
0x4003a47	    0x488905000000	            mov qword [0x04003a4e], rax 	      2069	obj-elf.c	FUNCTION_50	IF_16
0x4003a4e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2071	obj-elf.c	FUNCTION_50
0x4003a52	          0x8b5018	            mov edx, dword [rax + 0x18] 	      2071	obj-elf.c	FUNCTION_50
0x4003a55	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2071	obj-elf.c	FUNCTION_50
0x4003a58	             0x9c2	                             or edx, eax	      2071	obj-elf.c	FUNCTION_50
0x4003a5a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2071	obj-elf.c	FUNCTION_50
0x4003a5e	          0x895018	             mov dword [rax + 0x18], edx	      2071	obj-elf.c	FUNCTION_50
0x4003a61	      0xe800000000	                          call 0x4003a66	      2073	obj-elf.c	FUNCTION_50	CALL_49
0x4003a66	              0x90	                                     nop	      2074	obj-elf.c	FUNCTION_50
0x4003a67	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2074	obj-elf.c	FUNCTION_50
0x4003a6b	    0x644833042528	                xor rax, qword fs:[0x28]	      2074	obj-elf.c	FUNCTION_50
0x4003a74	            0x7405	                            je 0x4003a7b	      2074	obj-elf.c	FUNCTION_50
0x4003a76	      0xe800000000	                          call 0x4003a7b	      2074	obj-elf.c	FUNCTION_50
0x4003a7b	        0x4883c458	                           add rsp, 0x58	      2074	obj-elf.c	FUNCTION_50
0x4003a7f	              0x5b	                                 pop rbx	      2074	obj-elf.c	FUNCTION_50
0x4003a80	              0x5d	                                 pop rbp	      2074	obj-elf.c	FUNCTION_50
0x4003a81	              0xc3	                                     ret	      2074	obj-elf.c	FUNCTION_50
elf_frob_file	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,2:DO,0:IF,0:WHILE,0	10
0x4004557	              0x55	                                push rbp	      2496	obj-elf.c	FUNCTION_61
0x4004558	          0x4889e5	                            mov rbp, rsp	      2496	obj-elf.c	FUNCTION_61
0x400455b	    0x488b05000000	            mov rax, qword [0x04004562] 	      2497	obj-elf.c	FUNCTION_61	CALL_1
0x4004562	      0xba00000000	                              mov edx, 0	      2497	obj-elf.c	FUNCTION_61	CALL_1
0x4004567	      0xbe00000000	                              mov esi, 0	      2497	obj-elf.c	FUNCTION_61	CALL_1
0x400456c	          0x4889c7	                            mov rdi, rax	      2497	obj-elf.c	FUNCTION_61	CALL_1
0x400456f	      0xe800000000	                          call 0x4004574	      2497	obj-elf.c	FUNCTION_61	CALL_1
0x4004574	              0x90	                                     nop	      2502	obj-elf.c	FUNCTION_61
0x4004575	              0x5d	                                 pop rbp	      2502	obj-elf.c	FUNCTION_61
0x4004576	              0xc3	                                     ret	      2502	obj-elf.c	FUNCTION_61
obj_elf_lcomm	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,2:DO,0:IF,1:WHILE,0	19
0x40007f2	              0x55	                                push rbp	       399	obj-elf.c	FUNCTION_14
0x40007f3	          0x4889e5	                            mov rbp, rsp	       399	obj-elf.c	FUNCTION_14
0x40007f6	        0x4883ec20	                           sub rsp, 0x20	       399	obj-elf.c	FUNCTION_14
0x40007fa	          0x897dec	             mov dword [rbp - 0x14], edi	       399	obj-elf.c	FUNCTION_14
0x40007fd	      0xbe00000000	                              mov esi, 0	       400	obj-elf.c	FUNCTION_14	CALL_1
0x4000802	      0xbf00000000	                              mov edi, 0	       400	obj-elf.c	FUNCTION_14	CALL_1
0x4000807	      0xe800000000	                          call 0x400080c	       400	obj-elf.c	FUNCTION_14	CALL_1
0x400080c	        0x488945f8	                mov qword [rbp - 8], rax	       400	obj-elf.c	FUNCTION_14	CALL_1
0x4000810	      0x48837df800	                  cmp qword [rbp - 8], 0	       402	obj-elf.c	FUNCTION_14	IF_1
0x4000815	            0x7418	                            je 0x400082f	       402	obj-elf.c	FUNCTION_14	IF_1
0x4000817	        0x488b45f8	                mov rax, qword [rbp - 8]	       403	obj-elf.c	FUNCTION_14	CALL_2
0x400081b	          0x4889c7	                            mov rdi, rax	       403	obj-elf.c	FUNCTION_14	CALL_2
0x400081e	      0xe800000000	                          call 0x4000823	       403	obj-elf.c	FUNCTION_14	CALL_2
0x4000823	          0x8b5018	            mov edx, dword [rax + 0x18] 	       403	obj-elf.c	FUNCTION_14	CALL_2
0x4000826	    0x81ca00000100	                         or edx, 0x10000	       403	obj-elf.c	FUNCTION_14	CALL_2
0x400082c	          0x895018	             mov dword [rax + 0x18], edx	       403	obj-elf.c	FUNCTION_14	CALL_2
0x400082f	              0x90	                                     nop	       404	obj-elf.c	FUNCTION_14
0x4000830	              0xc9	                                   leave	       404	obj-elf.c	FUNCTION_14
0x4000831	              0xc3	                                     ret	       404	obj-elf.c	FUNCTION_14
obj_elf_local	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,5:DO,1:IF,2:WHILE,0	40
0x40008f6	              0x55	                                push rbp	       426	obj-elf.c	FUNCTION_16
0x40008f7	          0x4889e5	                            mov rbp, rsp	       426	obj-elf.c	FUNCTION_16
0x40008fa	        0x4883ec20	                           sub rsp, 0x20	       426	obj-elf.c	FUNCTION_16
0x40008fe	          0x897dec	             mov dword [rbp - 0x14], edi	       426	obj-elf.c	FUNCTION_16
0x4000901	      0xe82cffffff	call sym.get_sym_from_input_line_and_check	       432	obj-elf.c	FUNCTION_16	DO_1	CALL_1
0x4000906	        0x488945f8	                mov qword [rbp - 8], rax	       432	obj-elf.c	FUNCTION_16	DO_1	CALL_1
0x400090a	    0x488b05000000	            mov rax, qword [0x04000911] 	       433	obj-elf.c	FUNCTION_16	DO_1
0x4000911	           0xfb600	                   movzx eax, byte [rax]	       433	obj-elf.c	FUNCTION_16	DO_1
0x4000914	           0xfbec0	                           movsx eax, al	       433	obj-elf.c	FUNCTION_16	DO_1
0x4000917	          0x8945f4	              mov dword [rbp - 0xc], eax	       433	obj-elf.c	FUNCTION_16	DO_1
0x400091a	        0x488b45f8	                mov rax, qword [rbp - 8]	       434	obj-elf.c	FUNCTION_16	DO_1	CALL_2
0x400091e	          0x4889c7	                            mov rdi, rax	       434	obj-elf.c	FUNCTION_16	DO_1	CALL_2
0x4000921	      0xe800000000	                          call 0x4000926	       434	obj-elf.c	FUNCTION_16	DO_1	CALL_2
0x4000926	        0x488b45f8	                mov rax, qword [rbp - 8]	       435	obj-elf.c	FUNCTION_16	DO_1	CALL_3
0x400092a	          0x4889c7	                            mov rdi, rax	       435	obj-elf.c	FUNCTION_16	DO_1	CALL_3
0x400092d	      0xe800000000	                          call 0x4000932	       435	obj-elf.c	FUNCTION_16	DO_1	CALL_3
0x4000932	    0xc70001000000	                      mov dword [rax], 1	       435	obj-elf.c	FUNCTION_16	DO_1	CALL_3
0x4000938	        0x837df42c	            cmp dword [rbp - 0xc], 0x2c 	       436	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x400093c	            0x7547	                           jne 0x4000985	       436	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x400093e	    0x488b05000000	            mov rax, qword [0x04000945] 	       438	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x4000945	        0x4883c001	                              add rax, 1	       438	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x4000949	    0x488905000000	            mov qword [0x04000950], rax 	       438	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x4000950	    0x488b05000000	            mov rax, qword [0x04000957] 	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x4000957	           0xfb600	                   movzx eax, byte [rax]	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x400095a	            0x3c20	                            cmp al, 0x20	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x400095c	            0x7512	                           jne 0x4000970	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x400095e	    0x488b05000000	            mov rax, qword [0x04000965] 	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x4000965	        0x4883c001	                              add rax, 1	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x4000969	    0x488905000000	            mov qword [0x04000970], rax 	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x4000970	    0x488b05000000	            mov rax, qword [0x04000977] 	       440	obj-elf.c	FUNCTION_16	DO_1	IF_1	IF_2
0x4000977	           0xfb600	                   movzx eax, byte [rax]	       440	obj-elf.c	FUNCTION_16	DO_1	IF_1	IF_2
0x400097a	            0x3c0a	                             cmp al, 0xa	       440	obj-elf.c	FUNCTION_16	DO_1	IF_1	IF_2
0x400097c	            0x7507	                           jne 0x4000985	       440	obj-elf.c	FUNCTION_16	DO_1	IF_1	IF_2
0x400097e	    0xc745f40a0000	              mov dword [rbp - 0xc], 0xa	       441	obj-elf.c	FUNCTION_16	DO_1	IF_1	IF_2
0x4000985	        0x837df42c	            cmp dword [rbp - 0xc], 0x2c 	       444	obj-elf.c	FUNCTION_16
0x4000989	     0xf8472ffffff	                            je 0x4000901	       444	obj-elf.c	FUNCTION_16
0x400098f	      0xe800000000	                          call 0x4000994	       445	obj-elf.c	FUNCTION_16	CALL_5
0x4000994	              0x90	                                     nop	       446	obj-elf.c	FUNCTION_16
0x4000995	              0xc9	                                   leave	       446	obj-elf.c	FUNCTION_16
0x4000996	              0xc3	                                     ret	       446	obj-elf.c	FUNCTION_16
obj_elf_data	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,3:DO,0:IF,0:WHILE,0	14
0x4002219	              0x55	                                push rbp	      1236	obj-elf.c	FUNCTION_26
0x400221a	          0x4889e5	                            mov rbp, rsp	      1236	obj-elf.c	FUNCTION_26
0x400221d	        0x4883ec10	                           sub rsp, 0x10	      1236	obj-elf.c	FUNCTION_26
0x4002221	          0x897dfc	                mov dword [rbp - 4], edi	      1236	obj-elf.c	FUNCTION_26
0x4002224	    0x488b05000000	            mov rax, qword [0x0400222b] 	      1241	obj-elf.c	FUNCTION_26
0x400222b	    0x488905000000	            mov qword [0x04002232], rax 	      1241	obj-elf.c	FUNCTION_26
0x4002232	    0x8b0500000000	            mov eax, dword [0x04002238] 	      1242	obj-elf.c	FUNCTION_26
0x4002238	    0x890500000000	            mov dword [0x0400223e], eax 	      1242	obj-elf.c	FUNCTION_26
0x400223e	          0x8b45fc	                mov eax, dword [rbp - 4]	      1243	obj-elf.c	FUNCTION_26	CALL_2
0x4002241	            0x89c7	                            mov edi, eax	      1243	obj-elf.c	FUNCTION_26	CALL_2
0x4002243	      0xe800000000	                          call 0x4002248	      1243	obj-elf.c	FUNCTION_26	CALL_2
0x4002248	              0x90	                                     nop	      1248	obj-elf.c	FUNCTION_26
0x4002249	              0xc9	                                   leave	      1248	obj-elf.c	FUNCTION_26
0x400224a	              0xc3	                                     ret	      1248	obj-elf.c	FUNCTION_26
obj_elf_previous	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,5:DO,0:IF,1:WHILE,0	28
0x4002319	              0x55	                                push rbp	      1319	obj-elf.c	FUNCTION_31
0x400231a	          0x4889e5	                            mov rbp, rsp	      1319	obj-elf.c	FUNCTION_31
0x400231d	        0x4883ec20	                           sub rsp, 0x20	      1319	obj-elf.c	FUNCTION_31
0x4002321	          0x897dec	             mov dword [rbp - 0x14], edi	      1319	obj-elf.c	FUNCTION_31
0x4002324	    0x488b05000000	            mov rax, qword [0x0400232b] 	      1323	obj-elf.c	FUNCTION_31	IF_1
0x400232b	          0x4885c0	                           test rax, rax	      1323	obj-elf.c	FUNCTION_31	IF_1
0x400232e	            0x7519	                           jne 0x4002349	      1323	obj-elf.c	FUNCTION_31	IF_1
0x4002330	      0xbf00000000	                              mov edi, 0	      1325	obj-elf.c	FUNCTION_31	IF_1	CALL_2
0x4002335	      0xe800000000	                          call 0x400233a	      1325	obj-elf.c	FUNCTION_31	IF_1	CALL_2
0x400233a	          0x4889c7	                            mov rdi, rax	      1325	obj-elf.c	FUNCTION_31	IF_1	CALL_2
0x400233d	      0xb800000000	                              mov eax, 0	      1325	obj-elf.c	FUNCTION_31	IF_1	CALL_2
0x4002342	      0xe800000000	                          call 0x4002347	      1325	obj-elf.c	FUNCTION_31	IF_1	CALL_2
0x4002347	            0xeb3f	                           jmp 0x4002388	      1326	obj-elf.c	FUNCTION_31	IF_1
0x4002349	    0x488b05000000	            mov rax, qword [0x04002350] 	      1333	obj-elf.c	FUNCTION_31
0x4002350	        0x488945f8	                mov qword [rbp - 8], rax	      1333	obj-elf.c	FUNCTION_31
0x4002354	    0x8b0500000000	            mov eax, dword [0x0400235a] 	      1334	obj-elf.c	FUNCTION_31
0x400235a	          0x8945f4	              mov dword [rbp - 0xc], eax	      1334	obj-elf.c	FUNCTION_31
0x400235d	    0x488b05000000	            mov rax, qword [0x04002364] 	      1335	obj-elf.c	FUNCTION_31
0x4002364	    0x488905000000	            mov qword [0x0400236b], rax 	      1335	obj-elf.c	FUNCTION_31
0x400236b	    0x8b0500000000	            mov eax, dword [0x04002371] 	      1336	obj-elf.c	FUNCTION_31
0x4002371	    0x890500000000	            mov dword [0x04002377], eax 	      1336	obj-elf.c	FUNCTION_31
0x4002377	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1337	obj-elf.c	FUNCTION_31	CALL_4
0x400237a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1337	obj-elf.c	FUNCTION_31	CALL_4
0x400237e	            0x89d6	                            mov esi, edx	      1337	obj-elf.c	FUNCTION_31	CALL_4
0x4002380	          0x4889c7	                            mov rdi, rax	      1337	obj-elf.c	FUNCTION_31	CALL_4
0x4002383	      0xe800000000	                          call 0x4002388	      1337	obj-elf.c	FUNCTION_31	CALL_4
0x4002388	              0xc9	                                   leave	      1342	obj-elf.c	FUNCTION_31
0x4002389	              0xc3	                                     ret	      1342	obj-elf.c	FUNCTION_31
obj_elf_section	FOR,0:SWITCH,0:functions,0:ELSE,8:CALL,58:DO,1:IF,29:WHILE,0	489
0x40019e4	              0x55	                                push rbp	      1008	obj-elf.c	FUNCTION_25
0x40019e5	          0x4889e5	                            mov rbp, rsp	      1008	obj-elf.c	FUNCTION_25
0x40019e8	        0x4883ec70	                           sub rsp, 0x70	      1008	obj-elf.c	FUNCTION_25
0x40019ec	          0x897d9c	             mov dword [rbp - 0x64], edi	      1008	obj-elf.c	FUNCTION_25
0x40019ef	    0x64488b042528	                mov rax, qword fs:[0x28]	      1008	obj-elf.c	FUNCTION_25
0x40019f8	        0x488945f8	                mov qword [rbp - 8], rax	      1008	obj-elf.c	FUNCTION_25
0x40019fc	            0x31c0	                            xor eax, eax	      1008	obj-elf.c	FUNCTION_25
0x40019fe	    0xc745b8ffffff	     mov dword [rbp - 0x48], 0xffffffff 	      1015	obj-elf.c	FUNCTION_25
0x4001a05	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1016	obj-elf.c	FUNCTION_25
0x4001a0c	    0x8b0500000000	            mov eax, dword [0x04001a12] 	      1018	obj-elf.c	FUNCTION_25	IF_1
0x4001a12	            0x85c0	                           test eax, eax	      1018	obj-elf.c	FUNCTION_25	IF_1
0x4001a14	            0x742c	                            je 0x4001a42	      1018	obj-elf.c	FUNCTION_25	IF_1
0x4001a16	    0x488b05000000	            mov rax, qword [0x04001a1d] 	      1026	obj-elf.c	FUNCTION_25	IF_1
0x4001a1d	    0x488905000000	            mov qword [0x04001a24], rax 	      1026	obj-elf.c	FUNCTION_25	IF_1
0x4001a24	    0x8b0500000000	            mov eax, dword [0x04001a2a] 	      1027	obj-elf.c	FUNCTION_25	IF_1
0x4001a2a	    0x890500000000	            mov dword [0x04001a30], eax 	      1027	obj-elf.c	FUNCTION_25	IF_1
0x4001a30	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1029	obj-elf.c	FUNCTION_25	IF_1	CALL_2
0x4001a34	          0x4889c7	                            mov rdi, rax	      1029	obj-elf.c	FUNCTION_25	IF_1	CALL_2
0x4001a37	      0xe800000000	                          call 0x4001a3c	      1029	obj-elf.c	FUNCTION_25	IF_1	CALL_2
0x4001a3c	              0x90	                                     nop	      1035	obj-elf.c	FUNCTION_25	IF_1
0x4001a3d	      0xe9c1070000	                           jmp 0x4002203	      1035	obj-elf.c	FUNCTION_25	IF_1
0x4001a42	      0xe800000000	                          call 0x4001a47	      1038	obj-elf.c	FUNCTION_25	CALL_4
0x4001a47	        0x488945d8	             mov qword [rbp - 0x28], rax	      1038	obj-elf.c	FUNCTION_25	CALL_4
0x4001a4b	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1039	obj-elf.c	FUNCTION_25	IF_2
0x4001a50	     0xf84ac070000	                            je 0x4002202	      1039	obj-elf.c	FUNCTION_25	IF_2
0x4001a56	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      1041	obj-elf.c	FUNCTION_25
0x4001a5d	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1042	obj-elf.c	FUNCTION_25
0x4001a65	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1043	obj-elf.c	FUNCTION_25
0x4001a6d	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      1044	obj-elf.c	FUNCTION_25
0x4001a74	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      1045	obj-elf.c	FUNCTION_25
0x4001a7b	    0x488b05000000	            mov rax, qword [0x04001a82] 	      1047	obj-elf.c	FUNCTION_25	IF_3
0x4001a82	           0xfb600	                   movzx eax, byte [rax]	      1047	obj-elf.c	FUNCTION_25	IF_3
0x4001a85	            0x3c2c	                            cmp al, 0x2c	      1047	obj-elf.c	FUNCTION_25	IF_3
0x4001a87	     0xf8519070000	                           jne 0x40021a6	      1047	obj-elf.c	FUNCTION_25	IF_3
0x4001a8d	    0x488b05000000	            mov rax, qword [0x04001a94] 	      1050	obj-elf.c	FUNCTION_25	IF_3
0x4001a94	        0x4883c001	                              add rax, 1	      1050	obj-elf.c	FUNCTION_25	IF_3
0x4001a98	    0x488905000000	            mov qword [0x04001a9f], rax 	      1050	obj-elf.c	FUNCTION_25	IF_3
0x4001a9f	    0x488b05000000	            mov rax, qword [0x04001aa6] 	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x4001aa6	           0xfb600	                   movzx eax, byte [rax]	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x4001aa9	            0x3c20	                            cmp al, 0x20	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x4001aab	            0x7512	                           jne 0x4001abf	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x4001aad	    0x488b05000000	            mov rax, qword [0x04001ab4] 	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x4001ab4	        0x4883c001	                              add rax, 1	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x4001ab8	    0x488905000000	            mov qword [0x04001abf], rax 	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x4001abf	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4001ac3	     0xf8490000000	                            je 0x4001b59	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4001ac9	    0x488b05000000	            mov rax, qword [0x04001ad0] 	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4001ad0	           0xfb600	                   movzx eax, byte [rax]	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4001ad3	           0xfbec0	                           movsx eax, al	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4001ad6	           0xfb6c0	                           movzx eax, al	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4001ad9	            0x4898	                                    cdqe	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4001adb	     0xfb784000000	             movzx eax, word [rax + rax]	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4001ae3	           0xfb7c0	                           movzx eax, ax	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4001ae6	          0x83e004	                              and eax, 4	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4001ae9	            0x85c0	                           test eax, eax	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4001aeb	            0x746c	                            je 0x4001b59	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4001aed	      0xe800000000	                          call 0x4001af2	      1056	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_7
0x4001af2	          0x8945b8	             mov dword [rbp - 0x48], eax	      1056	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_7
0x4001af5	    0x488b05000000	            mov rax, qword [0x04001afc] 	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x4001afc	           0xfb600	                   movzx eax, byte [rax]	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x4001aff	            0x3c20	                            cmp al, 0x20	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x4001b01	            0x7512	                           jne 0x4001b15	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x4001b03	    0x488b05000000	            mov rax, qword [0x04001b0a] 	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x4001b0a	        0x4883c001	                              add rax, 1	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x4001b0e	    0x488905000000	            mov qword [0x04001b15], rax 	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x4001b15	    0x488b05000000	            mov rax, qword [0x04001b1c] 	      1061	obj-elf.c	FUNCTION_25	IF_3	IF_4	IF_5
0x4001b1c	           0xfb600	                   movzx eax, byte [rax]	      1061	obj-elf.c	FUNCTION_25	IF_3	IF_4	IF_5
0x4001b1f	            0x3c2c	                            cmp al, 0x2c	      1061	obj-elf.c	FUNCTION_25	IF_3	IF_4	IF_5
0x4001b21	     0xf857e060000	                           jne 0x40021a5	      1061	obj-elf.c	FUNCTION_25	IF_3	IF_4	IF_5
0x4001b27	    0x488b05000000	            mov rax, qword [0x04001b2e] 	      1065	obj-elf.c	FUNCTION_25	IF_3	IF_4
0x4001b2e	        0x4883c001	                              add rax, 1	      1065	obj-elf.c	FUNCTION_25	IF_3	IF_4
0x4001b32	    0x488905000000	            mov qword [0x04001b39], rax 	      1065	obj-elf.c	FUNCTION_25	IF_3	IF_4
0x4001b39	    0x488b05000000	            mov rax, qword [0x04001b40] 	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x4001b40	           0xfb600	                   movzx eax, byte [rax]	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x4001b43	            0x3c20	                            cmp al, 0x20	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x4001b45	            0x7512	                           jne 0x4001b59	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x4001b47	    0x488b05000000	            mov rax, qword [0x04001b4e] 	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x4001b4e	        0x4883c001	                              add rax, 1	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x4001b52	    0x488905000000	            mov qword [0x04001b59], rax 	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x4001b59	    0x488b05000000	            mov rax, qword [0x04001b60] 	      1069	obj-elf.c	FUNCTION_25	IF_3	IF_6
0x4001b60	           0xfb600	                   movzx eax, byte [rax]	      1069	obj-elf.c	FUNCTION_25	IF_3	IF_6
0x4001b63	            0x3c22	                            cmp al, 0x22	      1069	obj-elf.c	FUNCTION_25	IF_3	IF_6
0x4001b65	     0xf8540050000	                           jne 0x40020ab	      1069	obj-elf.c	FUNCTION_25	IF_3	IF_6
0x4001b6b	        0x488d45a8	                   lea rax, [rbp - 0x58]	      1073	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_10
0x4001b6f	          0x4889c7	                            mov rdi, rax	      1073	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_10
0x4001b72	      0xe800000000	                          call 0x4001b77	      1073	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_10
0x4001b77	        0x488945c0	             mov qword [rbp - 0x40], rax	      1073	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_10
0x4001b7b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1074	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_7
0x4001b7f	          0x4885c0	                           test rax, rax	      1074	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_7
0x4001b82	            0x750a	                           jne 0x4001b8e	      1074	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_7
0x4001b84	      0xe800000000	                          call 0x4001b89	      1076	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_7	CALL_11
0x4001b89	      0xe975060000	                           jmp 0x4002203	      1077	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_7
0x4001b8e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x4001b92	          0x4889c7	                            mov rdi, rax	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x4001b95	      0xe800000000	                          call 0x4001b9a	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x4001b9a	          0x4889c1	                            mov rcx, rax	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x4001b9d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x4001ba1	        0x488d55ac	                   lea rdx, [rbp - 0x54]	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x4001ba5	          0x4889ce	                            mov rsi, rcx	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x4001ba8	          0x4889c7	                            mov rdi, rax	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x4001bab	      0xe8a1f6ffff	  call sym.obj_elf_parse_section_letters	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x4001bb0	        0x480945d0	              or qword [rbp - 0x30], rax	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x4001bb4	    0x488b05000000	            mov rax, qword [0x04001bbb] 	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x4001bbb	           0xfb600	                   movzx eax, byte [rax]	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x4001bbe	            0x3c20	                            cmp al, 0x20	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x4001bc0	            0x7512	                           jne 0x4001bd4	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x4001bc2	    0x488b05000000	            mov rax, qword [0x04001bc9] 	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x4001bc9	        0x4883c001	                              add rax, 1	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x4001bcd	    0x488905000000	            mov qword [0x04001bd4], rax 	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x4001bd4	    0x488b05000000	            mov rax, qword [0x04001bdb] 	      1082	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x4001bdb	           0xfb600	                   movzx eax, byte [rax]	      1082	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x4001bde	            0x3c2c	                            cmp al, 0x2c	      1082	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x4001be0	     0xf8558010000	                           jne 0x4001d3e	      1082	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x4001be6	    0x488b05000000	            mov rax, qword [0x04001bed] 	      1085	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x4001bed	        0x488945e0	             mov qword [rbp - 0x20], rax	      1085	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x4001bf1	    0x488b05000000	            mov rax, qword [0x04001bf8] 	      1087	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x4001bf8	        0x4883c001	                              add rax, 1	      1087	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x4001bfc	    0x488905000000	            mov qword [0x04001c03], rax 	      1087	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x4001c03	    0x488b05000000	            mov rax, qword [0x04001c0a] 	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x4001c0a	           0xfb600	                   movzx eax, byte [rax]	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x4001c0d	            0x3c20	                            cmp al, 0x20	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x4001c0f	            0x7512	                           jne 0x4001c23	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x4001c11	    0x488b05000000	            mov rax, qword [0x04001c18] 	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x4001c18	        0x4883c001	                              add rax, 1	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x4001c1c	    0x488905000000	            mov qword [0x04001c23], rax 	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x4001c23	    0x488b05000000	            mov rax, qword [0x04001c2a] 	      1089	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x4001c2a	           0xfb600	                   movzx eax, byte [rax]	      1089	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x4001c2d	          0x8845a2	               mov byte [rbp - 0x5e], al	      1089	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x4001c30	        0x807da222	            cmp byte [rbp - 0x5e], 0x22 	      1090	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9
0x4001c34	            0x754f	                           jne 0x4001c85	      1090	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9
0x4001c36	        0x488d45a8	                   lea rax, [rbp - 0x58]	      1092	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_16
0x4001c3a	          0x4889c7	                            mov rdi, rax	      1092	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_16
0x4001c3d	      0xe800000000	                          call 0x4001c42	      1092	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_16
0x4001c42	        0x488945c0	             mov qword [rbp - 0x40], rax	      1092	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_16
0x4001c46	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1093	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	IF_10
0x4001c4a	          0x4885c0	                           test rax, rax	      1093	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	IF_10
0x4001c4d	            0x750b	                           jne 0x4001c5a	      1093	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	IF_10
0x4001c4f	      0xe800000000	                          call 0x4001c54	      1095	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	IF_10	CALL_17
0x4001c54	              0x90	                                     nop	      1096	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	IF_10
0x4001c55	      0xe9a9050000	                           jmp 0x4002203	      1096	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	IF_10
0x4001c5a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4001c5e	          0x4889c7	                            mov rdi, rax	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4001c61	      0xe800000000	                          call 0x4001c66	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4001c66	          0x4889c1	                            mov rcx, rax	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4001c69	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4001c6d	      0xba01000000	                              mov edx, 1	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4001c72	          0x4889ce	                            mov rsi, rcx	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4001c75	          0x4889c7	                            mov rdi, rax	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4001c78	      0xe8d5f7ffff	           call sym.obj_elf_section_type	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4001c7d	          0x8945a4	             mov dword [rbp - 0x5c], eax	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4001c80	      0xe9b9000000	                           jmp 0x4001d3e	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4001c85	        0x807da240	            cmp byte [rbp - 0x5e], 0x40 	      1100	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x4001c89	            0x740a	                            je 0x4001c95	      1100	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x4001c8b	        0x807da225	            cmp byte [rbp - 0x5e], 0x25 	      1100	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x4001c8f	     0xf859e000000	                           jne 0x4001d33	      1100	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x4001c95	    0x488b05000000	            mov rax, qword [0x04001c9c] 	      1102	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x4001c9c	        0x4883c001	                              add rax, 1	      1102	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x4001ca0	    0x488905000000	            mov qword [0x04001ca7], rax 	      1102	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x4001ca7	    0x488b05000000	            mov rax, qword [0x04001cae] 	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x4001cae	           0xfb600	                   movzx eax, byte [rax]	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x4001cb1	           0xfbec0	                           movsx eax, al	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x4001cb4	           0xfb6c0	                           movzx eax, al	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x4001cb7	            0x4898	                                    cdqe	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x4001cb9	     0xfb784000000	             movzx eax, word [rax + rax]	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x4001cc1	           0xfb7c0	                           movzx eax, ax	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x4001cc4	          0x83e004	                              and eax, 4	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x4001cc7	            0x85c0	                           test eax, eax	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x4001cc9	            0x741e	                            je 0x4001ce9	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x4001ccb	    0x488b05000000	            mov rax, qword [0x04001cd2] 	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x4001cd2	      0xba00000000	                              mov edx, 0	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x4001cd7	      0xbe00000000	                              mov esi, 0	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x4001cdc	          0x4889c7	                            mov rdi, rax	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x4001cdf	      0xe800000000	                          call 0x4001ce4	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x4001ce4	          0x8945a4	             mov dword [rbp - 0x5c], eax	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x4001ce7	            0xeb55	                           jmp 0x4001d3e	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x4001ce9	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1110	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_22
0x4001ced	          0x4889c7	                            mov rdi, rax	      1110	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_22
0x4001cf0	      0xe800000000	                          call 0x4001cf5	      1110	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_22
0x4001cf5	          0x8845a2	               mov byte [rbp - 0x5e], al	      1110	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_22
0x4001cf8	         0xfbe45a2	            movsx eax, byte [rbp - 0x5e]	      1111	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_23
0x4001cfc	            0x89c7	                            mov edi, eax	      1111	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_23
0x4001cfe	      0xe800000000	                          call 0x4001d03	      1111	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_23
0x4001d03	    0x488b05000000	            mov rax, qword [0x04001d0a] 	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4001d0a	          0x4889c2	                            mov rdx, rax	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4001d0d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4001d11	          0x4829c2	                            sub rdx, rax	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4001d14	          0x4889d0	                            mov rax, rdx	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4001d17	          0x4889c1	                            mov rcx, rax	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4001d1a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4001d1e	      0xba01000000	                              mov edx, 1	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4001d23	          0x4889ce	                            mov rsi, rcx	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4001d26	          0x4889c7	                            mov rdi, rax	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4001d29	      0xe824f7ffff	           call sym.obj_elf_section_type	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4001d2e	          0x8945a4	             mov dword [rbp - 0x5c], eax	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4001d31	            0xeb0b	                           jmp 0x4001d3e	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x4001d33	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1116	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_3
0x4001d37	    0x488905000000	            mov qword [0x04001d3e], rax 	      1116	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_3
0x4001d3e	    0x488b05000000	            mov rax, qword [0x04001d45] 	      1119	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_25
0x4001d45	           0xfb600	                   movzx eax, byte [rax]	      1119	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_25
0x4001d48	            0x3c20	                            cmp al, 0x20	      1119	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_25
0x4001d4a	            0x7512	                           jne 0x4001d5e	      1119	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_25
0x4001d4c	    0x488b05000000	            mov rax, qword [0x04001d53] 	      1119	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_25
0x4001d53	        0x4883c001	                              add rax, 1	      1119	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_25
0x4001d57	    0x488905000000	            mov qword [0x04001d5e], rax 	      1119	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_25
0x4001d5e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4001d62	          0x83e010	                           and eax, 0x10	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4001d65	          0x4885c0	                           test rax, rax	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4001d68	     0xf8497000000	                            je 0x4001e05	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4001d6e	    0x488b05000000	            mov rax, qword [0x04001d75] 	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4001d75	           0xfb600	                   movzx eax, byte [rax]	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4001d78	            0x3c2c	                            cmp al, 0x2c	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4001d7a	     0xf8585000000	                           jne 0x4001e05	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4001d80	    0x488b05000000	            mov rax, qword [0x04001d87] 	      1122	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4001d87	        0x4883c001	                              add rax, 1	      1122	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4001d8b	    0x488905000000	            mov qword [0x04001d92], rax 	      1122	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4001d92	    0x488b05000000	            mov rax, qword [0x04001d99] 	      1123	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_26
0x4001d99	           0xfb600	                   movzx eax, byte [rax]	      1123	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_26
0x4001d9c	            0x3c20	                            cmp al, 0x20	      1123	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_26
0x4001d9e	            0x7512	                           jne 0x4001db2	      1123	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_26
0x4001da0	    0x488b05000000	            mov rax, qword [0x04001da7] 	      1123	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_26
0x4001da7	        0x4883c001	                              add rax, 1	      1123	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_26
0x4001dab	    0x488905000000	            mov qword [0x04001db2], rax 	      1123	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_26
0x4001db2	      0xe800000000	                          call 0x4001db7	      1124	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_27
0x4001db7	          0x8945b0	             mov dword [rbp - 0x50], eax	      1124	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_27
0x4001dba	    0x488b05000000	            mov rax, qword [0x04001dc1] 	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x4001dc1	           0xfb600	                   movzx eax, byte [rax]	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x4001dc4	            0x3c20	                            cmp al, 0x20	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x4001dc6	            0x7512	                           jne 0x4001dda	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x4001dc8	    0x488b05000000	            mov rax, qword [0x04001dcf] 	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x4001dcf	        0x4883c001	                              add rax, 1	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x4001dd3	    0x488905000000	            mov qword [0x04001dda], rax 	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x4001dda	        0x837db000	               cmp dword [rbp - 0x50], 0	      1126	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14
0x4001dde	            0x794d	                           jns 0x4001e2d	      1126	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14
0x4001de0	      0xbf00000000	                              mov edi, 0	      1128	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14	CALL_30
0x4001de5	      0xe800000000	                          call 0x4001dea	      1128	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14	CALL_30
0x4001dea	          0x4889c7	                            mov rdi, rax	      1128	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14	CALL_30
0x4001ded	      0xb800000000	                              mov eax, 0	      1128	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14	CALL_30
0x4001df2	      0xe800000000	                          call 0x4001df7	      1128	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14	CALL_30
0x4001df7	      0x488365d0ef	and qword [rbp - 0x30], 0xffffffffffffffef	      1129	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14
0x4001dfc	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      1130	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14
0x4001e03	            0xeb28	                           jmp 0x4001e2d	      1126	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14
0x4001e05	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1133	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15
0x4001e09	          0x83e010	                           and eax, 0x10	      1133	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15
0x4001e0c	          0x4885c0	                           test rax, rax	      1133	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15
0x4001e0f	            0x741c	                            je 0x4001e2d	      1133	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15
0x4001e11	      0xbf00000000	                              mov edi, 0	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x4001e16	      0xe800000000	                          call 0x4001e1b	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x4001e1b	          0x4889c7	                            mov rdi, rax	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x4001e1e	      0xb800000000	                              mov eax, 0	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x4001e23	      0xe800000000	                          call 0x4001e28	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x4001e28	      0x488365d0ef	and qword [rbp - 0x30], 0xffffffffffffffef	      1136	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15
0x4001e2d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x4001e31	      0x2500020000	                          and eax, 0x200	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x4001e36	          0x4885c0	                           test rax, rax	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x4001e39	            0x7425	                            je 0x4001e60	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x4001e3b	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x4001e3e	            0x85c0	                           test eax, eax	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x4001e40	            0x741e	                            je 0x4001e60	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x4001e42	      0xbf00000000	                              mov edi, 0	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x4001e47	      0xe800000000	                          call 0x4001e4c	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x4001e4c	          0x4889c7	                            mov rdi, rax	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x4001e4f	      0xb800000000	                              mov eax, 0	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x4001e54	      0xe800000000	                          call 0x4001e59	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x4001e59	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      1142	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x4001e60	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4001e64	      0x2500020000	                          and eax, 0x200	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4001e69	          0x4885c0	                           test rax, rax	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4001e6c	     0xf84dc000000	                            je 0x4001f4e	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4001e72	    0x488b05000000	            mov rax, qword [0x04001e79] 	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4001e79	           0xfb600	                   movzx eax, byte [rax]	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4001e7c	            0x3c2c	                            cmp al, 0x2c	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4001e7e	     0xf85ca000000	                           jne 0x4001f4e	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4001e84	    0x488b05000000	            mov rax, qword [0x04001e8b] 	      1146	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4001e8b	        0x4883c001	                              add rax, 1	      1146	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4001e8f	    0x488905000000	            mov qword [0x04001e96], rax 	      1146	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4001e96	      0xe800000000	                          call 0x4001e9b	      1147	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	CALL_35
0x4001e9b	        0x488945c8	             mov qword [rbp - 0x38], rax	      1147	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	CALL_35
0x4001e9f	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1148	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	IF_18
0x4001ea4	            0x750d	                           jne 0x4001eb3	      1148	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	IF_18
0x4001ea6	    0x488165d0fffd	and qword [rbp - 0x30], 0xfffffffffffffdff	      1149	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	IF_18
0x4001eae	      0xe9ca000000	                           jmp 0x4001f7d	      1148	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	IF_18
0x4001eb3	    0x488b05000000	            mov rax, qword [0x04001eba] 	      1150	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19
0x4001eba	           0xfb600	                   movzx eax, byte [rax]	      1150	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19
0x4001ebd	            0x3c2c	                            cmp al, 0x2c	      1150	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19
0x4001ebf	            0x756a	                           jne 0x4001f2b	      1150	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19
0x4001ec1	    0x488b05000000	            mov rax, qword [0x04001ec8] 	      1152	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19
0x4001ec8	        0x4883c001	                              add rax, 1	      1152	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19
0x4001ecc	    0x488905000000	            mov qword [0x04001ed3], rax 	      1152	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19
0x4001ed3	    0x488b05000000	            mov rax, qword [0x04001eda] 	      1153	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	CALL_36
0x4001eda	           0xfb600	                   movzx eax, byte [rax]	      1153	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	CALL_36
0x4001edd	            0x3c20	                            cmp al, 0x20	      1153	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	CALL_36
0x4001edf	            0x7512	                           jne 0x4001ef3	      1153	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	CALL_36
0x4001ee1	    0x488b05000000	            mov rax, qword [0x04001ee8] 	      1153	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	CALL_36
0x4001ee8	        0x4883c001	                              add rax, 1	      1153	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	CALL_36
0x4001eec	    0x488905000000	            mov qword [0x04001ef3], rax 	      1153	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	CALL_36
0x4001ef3	    0x488b05000000	            mov rax, qword [0x04001efa] 	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4001efa	      0xba06000000	                              mov edx, 6	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4001eff	      0xbe00000000	                              mov esi, 0	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4001f04	          0x4889c7	                            mov rdi, rax	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4001f07	      0xe800000000	                          call 0x4001f0c	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4001f0c	            0x85c0	                           test eax, eax	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4001f0e	            0x756d	                           jne 0x4001f7d	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4001f10	    0x488b05000000	            mov rax, qword [0x04001f17] 	      1156	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x4001f17	        0x4883c006	                              add rax, 6	      1156	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x4001f1b	    0x488905000000	            mov qword [0x04001f22], rax 	      1156	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x4001f22	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      1157	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x4001f29	            0xeb52	                           jmp 0x4001f7d	      1148	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	IF_18
0x4001f2b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1160	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_6	IF_21	CALL_38
0x4001f2f	      0xba0d000000	                            mov edx, 0xd	      1160	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_6	IF_21	CALL_38
0x4001f34	      0xbe00000000	                              mov esi, 0	      1160	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_6	IF_21	CALL_38
0x4001f39	          0x4889c7	                            mov rdi, rax	      1160	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_6	IF_21	CALL_38
0x4001f3c	      0xe800000000	                          call 0x4001f41	      1160	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_6	IF_21	CALL_38
0x4001f41	            0x85c0	                           test eax, eax	      1160	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_6	IF_21	CALL_38
0x4001f43	            0x7538	                           jne 0x4001f7d	      1160	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_6	IF_21	CALL_38
0x4001f45	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      1161	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_6	IF_21
0x4001f4c	            0xeb2f	                           jmp 0x4001f7d	      1148	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	IF_18
0x4001f4e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1163	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22
0x4001f52	      0x2500020000	                          and eax, 0x200	      1163	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22
0x4001f57	          0x4885c0	                           test rax, rax	      1163	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22
0x4001f5a	            0x7422	                            je 0x4001f7e	      1163	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22
0x4001f5c	      0xbf00000000	                              mov edi, 0	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x4001f61	      0xe800000000	                          call 0x4001f66	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x4001f66	          0x4889c7	                            mov rdi, rax	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x4001f69	      0xb800000000	                              mov eax, 0	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x4001f6e	      0xe800000000	                          call 0x4001f73	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x4001f73	    0x488165d0fffd	and qword [rbp - 0x30], 0xfffffffffffffdff	      1166	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22
0x4001f7b	            0xeb01	                           jmp 0x4001f7e	      1166	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22
0x4001f7d	              0x90	                                     nop	      1148	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	IF_18
0x4001f7e	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1169	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23
0x4001f81	            0x85c0	                           test eax, eax	      1169	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23
0x4001f83	            0x744a	                            je 0x4001fcf	      1169	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23
0x4001f85	    0x488b05000000	            mov rax, qword [0x04001f8c] 	      1171	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	CALL_41
0x4001f8c	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1171	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	CALL_41
0x4001f93	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      1171	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	CALL_41
0x4001f9a	        0x488945e8	             mov qword [rbp - 0x18], rax	      1171	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	CALL_41
0x4001f9e	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1172	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4001fa3	            0x742a	                            je 0x4001fcf	      1172	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4001fa5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1174	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24	CALL_42
0x4001fa9	          0x4889c7	                            mov rdi, rax	      1174	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24	CALL_42
0x4001fac	      0xe800000000	                          call 0x4001fb1	      1174	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24	CALL_42
0x4001fb1	        0x488945c8	             mov qword [rbp - 0x38], rax	      1174	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24	CALL_42
0x4001fb5	    0x488b05000000	            mov rax, qword [0x04001fbc] 	      1175	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4001fbc	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1175	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4001fbf	      0x2500000200	                        and eax, 0x20000	      1175	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4001fc4	            0x85c0	                           test eax, eax	      1175	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4001fc6	           0xf95c0	                                setne al	      1175	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4001fc9	           0xfb6c0	                           movzx eax, al	      1175	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4001fcc	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1175	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4001fcf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4001fd3	      0x2500000001	                      and eax, 0x1000000	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4001fd8	          0x4885c0	                           test rax, rax	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4001fdb	     0xf84c5010000	                            je 0x40021a6	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4001fe1	    0x488b05000000	            mov rax, qword [0x04001fe8] 	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4001fe8	           0xfb600	                   movzx eax, byte [rax]	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4001feb	            0x3c2c	                            cmp al, 0x2c	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4001fed	     0xf85b3010000	                           jne 0x40021a6	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4001ff3	    0x488b05000000	            mov rax, qword [0x04001ffa] 	      1181	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4001ffa	        0x4883c001	                              add rax, 1	      1181	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4001ffe	    0x488905000000	            mov qword [0x04002005], rax 	      1181	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4002005	    0x488b05000000	            mov rax, qword [0x0400200c] 	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x400200c	           0xfb600	                   movzx eax, byte [rax]	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x400200f	            0x3c20	                            cmp al, 0x20	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x4002011	            0x7512	                           jne 0x4002025	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x4002013	    0x488b05000000	            mov rax, qword [0x0400201a] 	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x400201a	        0x4883c001	                              add rax, 1	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x400201e	    0x488905000000	            mov qword [0x04002025], rax 	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x4002025	    0x488b05000000	            mov rax, qword [0x0400202c] 	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x400202c	           0xfb600	                   movzx eax, byte [rax]	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x400202f	           0xfbec0	                           movsx eax, al	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x4002032	           0xfb6c0	                           movzx eax, al	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x4002035	            0x4898	                                    cdqe	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x4002037	     0xfb784000000	             movzx eax, word [rax + rax]	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x400203f	           0xfb7c0	                           movzx eax, ax	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x4002042	          0x83e004	                              and eax, 4	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x4002045	            0x85c0	                           test eax, eax	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x4002047	     0xf8459010000	                            je 0x40021a6	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x400204d	    0x488b05000000	            mov rax, qword [0x04002054] 	      1185	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26
0x4002054	        0x488945f0	             mov qword [rbp - 0x10], rax	      1185	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26
0x4002058	    0x488b05000000	            mov rax, qword [0x0400205f] 	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x400205f	      0xba00000000	                              mov edx, 0	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x4002064	      0xbe00000000	                              mov esi, 0	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x4002069	          0x4889c7	                            mov rdi, rax	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x400206c	      0xe800000000	                          call 0x4002071	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x4002071	          0x8945bc	             mov dword [rbp - 0x44], eax	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x4002074	        0x837dbcff	cmp dword [rbp - 0x44], 0xffffffffffffffff	      1188	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x4002078	     0xf8528010000	                           jne 0x40021a6	      1188	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x400207e	      0xbf00000000	                              mov edi, 0	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x4002083	      0xe800000000	                          call 0x4002088	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x4002088	          0x4889c2	                            mov rdx, rax	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x400208b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x400208f	          0x4889c6	                            mov rsi, rax	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x4002092	          0x4889d7	                            mov rdi, rdx	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x4002095	      0xb800000000	                              mov eax, 0	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x400209a	      0xe800000000	                          call 0x400209f	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x400209f	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1191	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x40020a6	      0xe9fb000000	                           jmp 0x40021a6	      1191	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x40020ab	    0x488b05000000	            mov rax, qword [0x040020b2] 	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x40020b2	           0xfb600	                   movzx eax, byte [rax]	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x40020b5	            0x3c20	                            cmp al, 0x20	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x40020b7	            0x7512	                           jne 0x40020cb	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x40020b9	    0x488b05000000	            mov rax, qword [0x040020c0] 	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x40020c0	        0x4883c001	                              add rax, 1	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x40020c4	    0x488905000000	            mov qword [0x040020cb], rax 	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x40020cb	    0x488b05000000	            mov rax, qword [0x040020d2] 	      1203	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28
0x40020d2	           0xfb600	                   movzx eax, byte [rax]	      1203	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28
0x40020d5	            0x3c23	                            cmp al, 0x23	      1203	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28
0x40020d7	            0x7421	                            je 0x40020fa	      1203	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28
0x40020d9	      0xbf00000000	                              mov edi, 0	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x40020de	      0xe800000000	                          call 0x40020e3	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x40020e3	          0x4889c7	                            mov rdi, rax	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x40020e6	      0xb800000000	                              mov eax, 0	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x40020eb	      0xe800000000	                          call 0x40020f0	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x40020f0	      0xe800000000	                          call 0x40020f5	      1206	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_51
0x40020f5	      0xe909010000	                           jmp 0x4002203	      1207	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28
0x40020fa	    0x488b05000000	            mov rax, qword [0x04002101] 	      1209	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1
0x4002101	        0x4883c001	                              add rax, 1	      1209	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1
0x4002105	    0x488905000000	            mov qword [0x0400210c], rax 	      1209	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1
0x400210c	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1210	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_52
0x4002110	          0x4889c7	                            mov rdi, rax	      1210	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_52
0x4002113	      0xe800000000	                          call 0x4002118	      1210	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_52
0x4002118	          0x8845a3	               mov byte [rbp - 0x5d], al	      1210	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_52
0x400211b	         0xfbe45a3	            movsx eax, byte [rbp - 0x5d]	      1211	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_53
0x400211f	            0x89c7	                            mov edi, eax	      1211	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_53
0x4002121	      0xe800000000	                          call 0x4002126	      1211	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_53
0x4002126	    0x488b05000000	            mov rax, qword [0x0400212d] 	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x400212d	          0x4889c2	                            mov rdx, rax	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x4002130	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x4002134	          0x4829c2	                            sub rdx, rax	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x4002137	          0x4889d0	                            mov rax, rdx	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x400213a	          0x4889c1	                            mov rcx, rax	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x400213d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x4002141	        0x488d55a4	                   lea rdx, [rbp - 0x5c]	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x4002145	          0x4889ce	                            mov rsi, rcx	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x4002148	          0x4889c7	                            mov rdi, rax	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x400214b	      0xe8f7f4ffff	           call sym.obj_elf_section_word	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x4002150	        0x480945d0	              or qword [rbp - 0x30], rax	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x4002154	    0x488b05000000	            mov rax, qword [0x0400215b] 	      1215	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_55
0x400215b	           0xfb600	                   movzx eax, byte [rax]	      1215	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_55
0x400215e	            0x3c20	                            cmp al, 0x20	      1215	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_55
0x4002160	            0x7512	                           jne 0x4002174	      1215	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_55
0x4002162	    0x488b05000000	            mov rax, qword [0x04002169] 	      1215	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_55
0x4002169	        0x4883c001	                              add rax, 1	      1215	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_55
0x400216d	    0x488905000000	            mov qword [0x04002174], rax 	      1215	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_55
0x4002174	    0x488b05000000	            mov rax, qword [0x0400217b] 	      1217	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x400217b	        0x488d5001	                      lea rdx, [rax + 1]	      1217	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x400217f	    0x488915000000	            mov qword [0x04002186], rdx 	      1217	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x4002186	           0xfb600	                   movzx eax, byte [rax]	      1217	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x4002189	            0x3c2c	                            cmp al, 0x2c	      1217	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x400218b	     0xf841affffff	                            je 0x40020ab	      1217	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x4002191	    0x488b05000000	            mov rax, qword [0x04002198] 	      1218	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x4002198	        0x4883e801	                              sub rax, 1	      1218	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x400219c	    0x488905000000	            mov qword [0x040021a3], rax 	      1218	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x40021a3	            0xeb01	                           jmp 0x40021a6	      1218	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x40021a5	              0x90	                                     nop	      1062	obj-elf.c	FUNCTION_25	IF_3	IF_4	IF_5
0x40021a6	      0xe800000000	                          call 0x40021ab	      1223	obj-elf.c	FUNCTION_25	CALL_56
0x40021ab	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40021ae	          0x4189c2	                           mov r10d, eax	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40021b1	        0x4c8b45c8	              mov r8, qword [rbp - 0x38]	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40021b5	          0x8b7db0	             mov edi, dword [rbp - 0x50]	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40021b8	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40021bc	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40021bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40021c3	          0x8b759c	             mov esi, dword [rbp - 0x64]	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40021c6	              0x56	                                push rsi	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40021c7	          0x8b75b4	             mov esi, dword [rbp - 0x4c]	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40021ca	              0x56	                                push rsi	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40021cb	          0x4d89c1	                              mov r9, r8	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40021ce	          0x4189f8	                            mov r8d, edi	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40021d1	          0x4489d6	                           mov esi, r10d	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40021d4	          0x4889c7	                            mov rdi, rax	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40021d7	      0xe800000000	                          call 0x40021dc	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40021dc	        0x4883c410	                           add rsp, 0x10	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40021e0	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      1228	obj-elf.c	FUNCTION_25	IF_29
0x40021e4	            0x741d	                            je 0x4002203	      1228	obj-elf.c	FUNCTION_25	IF_29
0x40021e6	        0x837db8ff	cmp dword [rbp - 0x48], 0xffffffffffffffff	      1228	obj-elf.c	FUNCTION_25	IF_29
0x40021ea	            0x7417	                            je 0x4002203	      1228	obj-elf.c	FUNCTION_25	IF_29
0x40021ec	    0x488b05000000	            mov rax, qword [0x040021f3] 	      1229	obj-elf.c	FUNCTION_25	CALL_58
0x40021f3	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      1229	obj-elf.c	FUNCTION_25	CALL_58
0x40021f6	            0x89d6	                            mov esi, edx	      1229	obj-elf.c	FUNCTION_25	CALL_58
0x40021f8	          0x4889c7	                            mov rdi, rax	      1229	obj-elf.c	FUNCTION_25	CALL_58
0x40021fb	      0xe800000000	                          call 0x4002200	      1229	obj-elf.c	FUNCTION_25	CALL_58
0x4002200	            0xeb01	                           jmp 0x4002203	      1229	obj-elf.c	FUNCTION_25	CALL_58
0x4002202	              0x90	                                     nop	      1040	obj-elf.c	FUNCTION_25	IF_2
0x4002203	        0x488b45f8	                mov rax, qword [rbp - 8]	      1230	obj-elf.c	FUNCTION_25
0x4002207	    0x644833042528	                xor rax, qword fs:[0x28]	      1230	obj-elf.c	FUNCTION_25
0x4002210	            0x7405	                            je 0x4002217	      1230	obj-elf.c	FUNCTION_25
0x4002212	      0xe800000000	                          call 0x4002217	      1230	obj-elf.c	FUNCTION_25
0x4002217	              0xc9	                                   leave	      1230	obj-elf.c	FUNCTION_25
0x4002218	              0xc3	                                     ret	      1230	obj-elf.c	FUNCTION_25
obj_elf_section_name	FOR,0:SWITCH,0:functions,0:ELSE,2:CALL,17:DO,0:IF,4:WHILE,2	145
0x400179d	              0x55	                                push rbp	       947	obj-elf.c	FUNCTION_24
0x400179e	          0x4889e5	                            mov rbp, rsp	       947	obj-elf.c	FUNCTION_24
0x40017a1	        0x4883ec40	                           sub rsp, 0x40	       947	obj-elf.c	FUNCTION_24
0x40017a5	    0x64488b042528	                mov rax, qword fs:[0x28]	       947	obj-elf.c	FUNCTION_24
0x40017ae	        0x488945f8	                mov qword [rbp - 8], rax	       947	obj-elf.c	FUNCTION_24
0x40017b2	            0x31c0	                            xor eax, eax	       947	obj-elf.c	FUNCTION_24
0x40017b4	    0x488b05000000	            mov rax, qword [0x040017bb] 	       950	obj-elf.c	FUNCTION_24	CALL_1
0x40017bb	           0xfb600	                   movzx eax, byte [rax]	       950	obj-elf.c	FUNCTION_24	CALL_1
0x40017be	            0x3c20	                            cmp al, 0x20	       950	obj-elf.c	FUNCTION_24	CALL_1
0x40017c0	            0x7512	                           jne 0x40017d4	       950	obj-elf.c	FUNCTION_24	CALL_1
0x40017c2	    0x488b05000000	            mov rax, qword [0x040017c9] 	       950	obj-elf.c	FUNCTION_24	CALL_1
0x40017c9	        0x4883c001	                              add rax, 1	       950	obj-elf.c	FUNCTION_24	CALL_1
0x40017cd	    0x488905000000	            mov qword [0x040017d4], rax 	       950	obj-elf.c	FUNCTION_24	CALL_1
0x40017d4	    0x488b05000000	            mov rax, qword [0x040017db] 	       951	obj-elf.c	FUNCTION_24	IF_1
0x40017db	           0xfb600	                   movzx eax, byte [rax]	       951	obj-elf.c	FUNCTION_24	IF_1
0x40017de	            0x3c22	                            cmp al, 0x22	       951	obj-elf.c	FUNCTION_24	IF_1
0x40017e0	            0x752a	                           jne 0x400180c	       951	obj-elf.c	FUNCTION_24	IF_1
0x40017e2	        0x488d45c4	                   lea rax, [rbp - 0x3c]	       955	obj-elf.c	FUNCTION_24	IF_1	CALL_2
0x40017e6	          0x4889c7	                            mov rdi, rax	       955	obj-elf.c	FUNCTION_24	IF_1	CALL_2
0x40017e9	      0xe800000000	                          call 0x40017ee	       955	obj-elf.c	FUNCTION_24	IF_1	CALL_2
0x40017ee	        0x488945d8	             mov qword [rbp - 0x28], rax	       955	obj-elf.c	FUNCTION_24	IF_1	CALL_2
0x40017f2	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       956	obj-elf.c	FUNCTION_24	IF_1	IF_2
0x40017f7	     0xf85ad010000	                           jne 0x40019aa	       956	obj-elf.c	FUNCTION_24	IF_1	IF_2
0x40017fd	      0xe800000000	                          call 0x4001802	       958	obj-elf.c	FUNCTION_24	IF_1	IF_2	CALL_3
0x4001802	      0xb800000000	                              mov eax, 0	       959	obj-elf.c	FUNCTION_24	IF_1	IF_2
0x4001807	      0xe9c2010000	                           jmp 0x40019ce	       959	obj-elf.c	FUNCTION_24	IF_1	IF_2
0x400180c	    0x488b05000000	            mov rax, qword [0x04001813] 	       964	obj-elf.c	FUNCTION_24	ELSE_1
0x4001813	        0x488945e0	             mov qword [rbp - 0x20], rax	       964	obj-elf.c	FUNCTION_24	ELSE_1
0x4001817	            0xeb05	                           jmp 0x400181e	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x4001819	      0x488345e001	               add qword [rbp - 0x20], 1	       967	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1
0x400181e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x4001822	           0xfb600	                   movzx eax, byte [rax]	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x4001825	           0xfbec0	                           movsx eax, al	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x4001828	            0x89c6	                            mov esi, eax	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x400182a	      0xbf00000000	                              mov edi, 0	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x400182f	      0xe800000000	                          call 0x4001834	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x4001834	          0x4885c0	                           test rax, rax	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x4001837	            0x74e0	                            je 0x4001819	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x4001839	    0x488b05000000	            mov rax, qword [0x04001840] 	       968	obj-elf.c	FUNCTION_24	ELSE_1	IF_3
0x4001840	        0x483945e0	            cmp qword [rbp - 0x20], rax 	       968	obj-elf.c	FUNCTION_24	ELSE_1	IF_3
0x4001844	            0x7526	                           jne 0x400186c	       968	obj-elf.c	FUNCTION_24	ELSE_1	IF_3
0x4001846	      0xbf00000000	                              mov edi, 0	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x400184b	      0xe800000000	                          call 0x4001850	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x4001850	          0x4889c7	                            mov rdi, rax	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x4001853	      0xb800000000	                              mov eax, 0	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x4001858	      0xe800000000	                          call 0x400185d	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x400185d	      0xe800000000	                          call 0x4001862	       971	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_7
0x4001862	      0xb800000000	                              mov eax, 0	       972	obj-elf.c	FUNCTION_24	ELSE_1	IF_3
0x4001867	      0xe962010000	                           jmp 0x40019ce	       972	obj-elf.c	FUNCTION_24	ELSE_1	IF_3
0x400186c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       975	obj-elf.c	FUNCTION_24	ELSE_1	CALL_8
0x4001870	    0x488b15000000	            mov rdx, qword [0x04001877] 	       975	obj-elf.c	FUNCTION_24	ELSE_1	CALL_8
0x4001877	          0x4829d0	                            sub rax, rdx	       975	obj-elf.c	FUNCTION_24	ELSE_1	CALL_8
0x400187a	          0x4889c2	                            mov rdx, rax	       975	obj-elf.c	FUNCTION_24	ELSE_1	CALL_8
0x400187d	    0x488b05000000	            mov rax, qword [0x04001884] 	       975	obj-elf.c	FUNCTION_24	ELSE_1	CALL_8
0x4001884	          0x4889d6	                            mov rsi, rdx	       975	obj-elf.c	FUNCTION_24	ELSE_1	CALL_8
0x4001887	          0x4889c7	                            mov rdi, rax	       975	obj-elf.c	FUNCTION_24	ELSE_1	CALL_8
0x400188a	      0xe8d1e7ffff	                       call sym.xmemdup0	       975	obj-elf.c	FUNCTION_24	ELSE_1	CALL_8
0x400188f	        0x488945d8	             mov qword [rbp - 0x28], rax	       975	obj-elf.c	FUNCTION_24	ELSE_1	CALL_8
0x4001893	      0xe9f9000000	                           jmp 0x4001991	       977	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2
0x4001898	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       979	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	CALL_9
0x400189c	      0xbe25000000	                           mov esi, 0x25	       979	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	CALL_9
0x40018a1	          0x4889c7	                            mov rdi, rax	       979	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	CALL_9
0x40018a4	      0xe800000000	                          call 0x40018a9	       979	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	CALL_9
0x40018a9	        0x488945e8	             mov qword [rbp - 0x18], rax	       979	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	CALL_9
0x40018ad	      0x48837de800	               cmp qword [rbp - 0x18], 0	       980	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x40018b2	     0xf84e7000000	                            je 0x400199f	       980	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x40018b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       980	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x40018bc	        0x4883c001	                              add rax, 1	       980	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x40018c0	           0xfb600	                   movzx eax, byte [rax]	       980	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x40018c3	            0x3c53	                            cmp al, 0x53	       980	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x40018c5	     0xf85d4000000	                           jne 0x400199f	       980	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x40018cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       982	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_10
0x40018cf	          0x4889c7	                            mov rdi, rax	       982	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_10
0x40018d2	      0xe800000000	                          call 0x40018d7	       982	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_10
0x40018d7	          0x8945c8	             mov dword [rbp - 0x38], eax	       982	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_10
0x40018da	    0x488b05000000	            mov rax, qword [0x040018e1] 	       983	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_11
0x40018e1	          0x488b00	                    mov rax, qword [rax]	       983	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_11
0x40018e4	          0x4889c7	                            mov rdi, rax	       983	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_11
0x40018e7	      0xe800000000	                          call 0x40018ec	       983	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_11
0x40018ec	          0x8945cc	             mov dword [rbp - 0x34], eax	       983	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_11
0x40018ef	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       984	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x40018f2	          0x8d50fe	                      lea edx, [rax - 2]	       984	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x40018f5	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       984	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x40018f8	             0x1d0	                            add eax, edx	       984	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x40018fa	          0x8945d0	             mov dword [rbp - 0x30], eax	       984	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x40018fd	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       985	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_12
0x4001900	          0x83c001	                              add eax, 1	       985	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_12
0x4001903	            0x4898	                                    cdqe	       985	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_12
0x4001905	          0x4889c7	                            mov rdi, rax	       985	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_12
0x4001908	      0xe800000000	                          call 0x400190d	       985	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_12
0x400190d	        0x488945f0	             mov qword [rbp - 0x10], rax	       985	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_12
0x4001911	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       986	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x4001915	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       986	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x4001919	          0x4829c2	                            sub rdx, rax	       986	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x400191c	          0x4889d0	                            mov rax, rdx	       986	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x400191f	          0x8945d4	             mov dword [rbp - 0x2c], eax	       986	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x4001922	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       987	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_13
0x4001925	          0x4863d0	                         movsxd rdx, eax	       987	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_13
0x4001928	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       987	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_13
0x400192c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       987	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_13
0x4001930	          0x4889ce	                            mov rsi, rcx	       987	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_13
0x4001933	          0x4889c7	                            mov rdi, rax	       987	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_13
0x4001936	      0xe800000000	                          call 0x400193b	       987	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_13
0x400193b	    0x488b05000000	            mov rax, qword [0x04001942] 	       988	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_14
0x4001942	          0x488b00	                    mov rax, qword [rax]	       988	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_14
0x4001945	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       988	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_14
0x4001948	          0x4863ca	                         movsxd rcx, edx	       988	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_14
0x400194b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       988	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_14
0x400194f	          0x4801ca	                            add rdx, rcx	       988	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_14
0x4001952	          0x4889c6	                            mov rsi, rax	       988	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_14
0x4001955	          0x4889d7	                            mov rdi, rdx	       988	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_14
0x4001958	      0xe800000000	                          call 0x400195d	       988	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_14
0x400195d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       989	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_15
0x4001961	        0x488d5002	                      lea rdx, [rax + 2]	       989	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_15
0x4001965	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       989	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_15
0x4001968	          0x4863c8	                         movsxd rcx, eax	       989	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_15
0x400196b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       989	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_15
0x400196f	          0x4801c8	                            add rax, rcx	       989	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_15
0x4001972	          0x4889d6	                            mov rsi, rdx	       989	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_15
0x4001975	          0x4889c7	                            mov rdi, rax	       989	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_15
0x4001978	      0xe800000000	                          call 0x400197d	       989	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_15
0x400197d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       990	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x4001981	          0x4889c7	                            mov rdi, rax	       990	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x4001984	      0xe800000000	                          call 0x4001989	       990	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x4001989	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       991	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x400198d	        0x488945d8	             mov qword [rbp - 0x28], rax	       991	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x4001991	    0x8b0500000000	            mov eax, dword [0x04001997] 	       977	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2
0x4001997	            0x85c0	                           test eax, eax	       977	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2
0x4001999	     0xf85f9feffff	                           jne 0x4001898	       977	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2
0x400199f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1000	obj-elf.c	FUNCTION_24	ELSE_1
0x40019a3	    0x488905000000	            mov qword [0x040019aa], rax 	      1000	obj-elf.c	FUNCTION_24	ELSE_1
0x40019aa	    0x488b05000000	            mov rax, qword [0x040019b1] 	      1002	obj-elf.c	FUNCTION_24	CALL_17
0x40019b1	           0xfb600	                   movzx eax, byte [rax]	      1002	obj-elf.c	FUNCTION_24	CALL_17
0x40019b4	            0x3c20	                            cmp al, 0x20	      1002	obj-elf.c	FUNCTION_24	CALL_17
0x40019b6	            0x7512	                           jne 0x40019ca	      1002	obj-elf.c	FUNCTION_24	CALL_17
0x40019b8	    0x488b05000000	            mov rax, qword [0x040019bf] 	      1002	obj-elf.c	FUNCTION_24	CALL_17
0x40019bf	        0x4883c001	                              add rax, 1	      1002	obj-elf.c	FUNCTION_24	CALL_17
0x40019c3	    0x488905000000	            mov qword [0x040019ca], rax 	      1002	obj-elf.c	FUNCTION_24	CALL_17
0x40019ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1003	obj-elf.c	FUNCTION_24
0x40019ce	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1004	obj-elf.c	FUNCTION_24
0x40019d2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1004	obj-elf.c	FUNCTION_24
0x40019db	            0x7405	                            je 0x40019e2	      1004	obj-elf.c	FUNCTION_24
0x40019dd	      0xe800000000	                          call 0x40019e2	      1004	obj-elf.c	FUNCTION_24
0x40019e2	              0xc9	                                   leave	      1004	obj-elf.c	FUNCTION_24
0x40019e3	              0xc3	                                     ret	      1004	obj-elf.c	FUNCTION_24
get_section	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,3:DO,0:IF,0:WHILE,0	42
0x4000b3d	              0x55	                                push rbp	       528	obj-elf.c	FUNCTION_19
0x4000b3e	          0x4889e5	                            mov rbp, rsp	       528	obj-elf.c	FUNCTION_19
0x4000b41	        0x4883ec40	                           sub rsp, 0x40	       528	obj-elf.c	FUNCTION_19
0x4000b45	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       528	obj-elf.c	FUNCTION_19
0x4000b49	        0x488975d0	             mov qword [rbp - 0x30], rsi	       528	obj-elf.c	FUNCTION_19
0x4000b4d	        0x488955c8	             mov qword [rbp - 0x38], rdx	       528	obj-elf.c	FUNCTION_19
0x4000b51	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       529	obj-elf.c	FUNCTION_19
0x4000b55	        0x488945e8	             mov qword [rbp - 0x18], rax	       529	obj-elf.c	FUNCTION_19
0x4000b59	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       530	obj-elf.c	FUNCTION_19
0x4000b5d	          0x488b00	                    mov rax, qword [rax]	       530	obj-elf.c	FUNCTION_19
0x4000b60	        0x488945f0	             mov qword [rbp - 0x10], rax	       530	obj-elf.c	FUNCTION_19
0x4000b64	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       531	obj-elf.c	FUNCTION_19	CALL_1
0x4000b68	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       531	obj-elf.c	FUNCTION_19	CALL_1
0x4000b6f	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       531	obj-elf.c	FUNCTION_19	CALL_1
0x4000b76	        0x488945f8	                mov qword [rbp - 8], rax	       531	obj-elf.c	FUNCTION_19	CALL_1
0x4000b7a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       532	obj-elf.c	FUNCTION_19	CALL_2
0x4000b7e	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       532	obj-elf.c	FUNCTION_19	CALL_2
0x4000b85	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       532	obj-elf.c	FUNCTION_19	CALL_2
0x4000b88	          0x8945e4	             mov dword [rbp - 0x1c], eax	       532	obj-elf.c	FUNCTION_19	CALL_2
0x4000b8b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       534	obj-elf.c	FUNCTION_19
0x4000b8f	          0x8b4008	                mov eax, dword [rax + 8]	       534	obj-elf.c	FUNCTION_19
0x4000b92	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       535	obj-elf.c	FUNCTION_19
0x4000b95	            0x7536	                           jne 0x4000bcd	       535	obj-elf.c	FUNCTION_19
0x4000b97	        0x488b45f8	                mov rax, qword [rbp - 8]	       535	obj-elf.c	FUNCTION_19
0x4000b9b	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       535	obj-elf.c	FUNCTION_19
0x4000b9f	            0x7425	                            je 0x4000bc6	       535	obj-elf.c	FUNCTION_19
0x4000ba1	      0x48837df800	                  cmp qword [rbp - 8], 0	       536	obj-elf.c	FUNCTION_19
0x4000ba6	            0x7425	                            je 0x4000bcd	       536	obj-elf.c	FUNCTION_19
0x4000ba8	      0x48837df000	               cmp qword [rbp - 0x10], 0	       537	obj-elf.c	FUNCTION_19
0x4000bad	            0x741e	                            je 0x4000bcd	       537	obj-elf.c	FUNCTION_19
0x4000baf	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       538	obj-elf.c	FUNCTION_19	CALL_3
0x4000bb3	        0x488b45f8	                mov rax, qword [rbp - 8]	       538	obj-elf.c	FUNCTION_19	CALL_3
0x4000bb7	          0x4889d6	                            mov rsi, rdx	       538	obj-elf.c	FUNCTION_19	CALL_3
0x4000bba	          0x4889c7	                            mov rdi, rax	       538	obj-elf.c	FUNCTION_19	CALL_3
0x4000bbd	      0xe800000000	                          call 0x4000bc2	       538	obj-elf.c	FUNCTION_19	CALL_3
0x4000bc2	            0x85c0	                           test eax, eax	       538	obj-elf.c	FUNCTION_19	CALL_3
0x4000bc4	            0x7507	                           jne 0x4000bcd	       538	obj-elf.c	FUNCTION_19	CALL_3
0x4000bc6	      0xb801000000	                              mov eax, 1	       535	obj-elf.c	FUNCTION_19
0x4000bcb	            0xeb05	                           jmp 0x4000bd2	       535	obj-elf.c	FUNCTION_19
0x4000bcd	      0xb800000000	                              mov eax, 0	       535	obj-elf.c	FUNCTION_19
0x4000bd2	              0xc9	                                   leave	       539	obj-elf.c	FUNCTION_19
0x4000bd3	              0xc3	                                     ret	       539	obj-elf.c	FUNCTION_19
elf_init_stab_section	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:DO,0:IF,1:WHILE,0	10
0x4004846	              0x55	                                push rbp	      2685	obj-elf.c	FUNCTION_67
0x4004847	          0x4889e5	                            mov rbp, rsp	      2685	obj-elf.c	FUNCTION_67
0x400484a	        0x4883ec10	                           sub rsp, 0x10	      2685	obj-elf.c	FUNCTION_67
0x400484e	        0x48897df8	                mov qword [rbp - 8], rdi	      2685	obj-elf.c	FUNCTION_67
0x4004852	        0x488b45f8	                mov rax, qword [rbp - 8]	      2689	obj-elf.c	FUNCTION_67	CALL_1
0x4004856	          0x4889c7	                            mov rdi, rax	      2689	obj-elf.c	FUNCTION_67	CALL_1
0x4004859	      0xe800000000	                          call 0x400485e	      2689	obj-elf.c	FUNCTION_67	CALL_1
0x400485e	              0x90	                                     nop	      2690	obj-elf.c	FUNCTION_67
0x400485f	              0xc9	                                   leave	      2690	obj-elf.c	FUNCTION_67
0x4004860	              0xc3	                                     ret	      2690	obj-elf.c	FUNCTION_67
obj_elf_init_stab_section	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,8:DO,0:IF,0:WHILE,0	60
0x4003b3b	              0x55	                                push rbp	      2113	obj-elf.c	FUNCTION_52
0x4003b3c	          0x4889e5	                            mov rbp, rsp	      2113	obj-elf.c	FUNCTION_52
0x4003b3f	        0x4883ec30	                           sub rsp, 0x30	      2113	obj-elf.c	FUNCTION_52
0x4003b43	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2113	obj-elf.c	FUNCTION_52
0x4003b47	    0x488b05000000	            mov rax, qword [0x04003b4e] 	      2121	obj-elf.c	FUNCTION_52	CALL_1
0x4003b4e	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2121	obj-elf.c	FUNCTION_52	CALL_1
0x4003b52	      0xba02000000	                              mov edx, 2	      2121	obj-elf.c	FUNCTION_52	CALL_1
0x4003b57	          0x4889ce	                            mov rsi, rcx	      2121	obj-elf.c	FUNCTION_52	CALL_1
0x4003b5a	          0x4889c7	                            mov rdi, rax	      2121	obj-elf.c	FUNCTION_52	CALL_1
0x4003b5d	      0xe8dec4ffff	      call sym.bfd_set_section_alignment	      2121	obj-elf.c	FUNCTION_52	CALL_1
0x4003b62	      0xbf0c000000	                            mov edi, 0xc	      2124	obj-elf.c	FUNCTION_52	CALL_2
0x4003b67	      0xe800000000	                          call 0x4003b6c	      2124	obj-elf.c	FUNCTION_52	CALL_2
0x4003b6c	        0x488945e8	             mov qword [rbp - 0x18], rax	      2124	obj-elf.c	FUNCTION_52	CALL_2
0x4003b70	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2126	obj-elf.c	FUNCTION_52	CALL_3
0x4003b74	      0xba0c000000	                            mov edx, 0xc	      2126	obj-elf.c	FUNCTION_52	CALL_3
0x4003b79	      0xbe00000000	                              mov esi, 0	      2126	obj-elf.c	FUNCTION_52	CALL_3
0x4003b7e	          0x4889c7	                            mov rdi, rax	      2126	obj-elf.c	FUNCTION_52	CALL_3
0x4003b81	      0xe800000000	                          call 0x4003b86	      2126	obj-elf.c	FUNCTION_52	CALL_3
0x4003b86	      0xbf00000000	                              mov edi, 0	      2127	obj-elf.c	FUNCTION_52	CALL_4
0x4003b8b	      0xe800000000	                          call 0x4003b90	      2127	obj-elf.c	FUNCTION_52	CALL_4
0x4003b90	        0x488945f0	             mov qword [rbp - 0x10], rax	      2127	obj-elf.c	FUNCTION_52	CALL_4
0x4003b94	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x4003b98	          0x488b00	                    mov rax, qword [rax]	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x4003b9b	      0xba00000000	                              mov edx, 0	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x4003ba0	      0xbe00000000	                              mov esi, 0	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x4003ba5	          0x4889c7	                            mov rdi, rax	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x4003ba8	      0xb800000000	                              mov eax, 0	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x4003bad	      0xe800000000	                          call 0x4003bb2	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x4003bb2	        0x488945f8	                mov qword [rbp - 8], rax	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x4003bb6	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2129	obj-elf.c	FUNCTION_52	CALL_6
0x4003bba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2129	obj-elf.c	FUNCTION_52	CALL_6
0x4003bbe	          0x4889d6	                            mov rsi, rdx	      2129	obj-elf.c	FUNCTION_52	CALL_6
0x4003bc1	          0x4889c7	                            mov rdi, rax	      2129	obj-elf.c	FUNCTION_52	CALL_6
0x4003bc4	      0xe800000000	                          call 0x4003bc9	      2129	obj-elf.c	FUNCTION_52	CALL_6
0x4003bc9	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2129	obj-elf.c	FUNCTION_52	CALL_6
0x4003bcc	        0x837de401	               cmp dword [rbp - 0x1c], 1	      2130	obj-elf.c	FUNCTION_52
0x4003bd0	            0x7425	                            je 0x4003bf7	      2130	obj-elf.c	FUNCTION_52
0x4003bd2	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2130	obj-elf.c	FUNCTION_52
0x4003bd6	            0x750b	                           jne 0x4003be3	      2130	obj-elf.c	FUNCTION_52
0x4003bd8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2130	obj-elf.c	FUNCTION_52
0x4003bdc	           0xfb600	                   movzx eax, byte [rax]	      2130	obj-elf.c	FUNCTION_52
0x4003bdf	            0x84c0	                             test al, al	      2130	obj-elf.c	FUNCTION_52
0x4003be1	            0x7414	                            je 0x4003bf7	      2130	obj-elf.c	FUNCTION_52
0x4003be3	      0xba00000000	                              mov edx, 0	      2130	obj-elf.c	FUNCTION_52
0x4003be8	      0xbe52080000	                          mov esi, 0x852	      2130	obj-elf.c	FUNCTION_52
0x4003bed	      0xbf00000000	                              mov edi, 0	      2130	obj-elf.c	FUNCTION_52
0x4003bf2	      0xe800000000	                          call 0x4003bf7	      2130	obj-elf.c	FUNCTION_52
0x4003bf7	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      2131	obj-elf.c	FUNCTION_52	CALL_7
0x4003bfa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2131	obj-elf.c	FUNCTION_52	CALL_7
0x4003bfe	      0xba04000000	                              mov edx, 4	      2131	obj-elf.c	FUNCTION_52	CALL_7
0x4003c03	          0x4889ce	                            mov rsi, rcx	      2131	obj-elf.c	FUNCTION_52	CALL_7
0x4003c06	          0x4889c7	                            mov rdi, rax	      2131	obj-elf.c	FUNCTION_52	CALL_7
0x4003c09	      0xe800000000	                          call 0x4003c0e	      2131	obj-elf.c	FUNCTION_52	CALL_7
0x4003c0e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2132	obj-elf.c	FUNCTION_52	CALL_8
0x4003c12	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      2132	obj-elf.c	FUNCTION_52	CALL_8
0x4003c19	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2132	obj-elf.c	FUNCTION_52	CALL_8
0x4003c1d	        0x48895050	             mov qword [rax + 0x50], rdx	      2132	obj-elf.c	FUNCTION_52	CALL_8
0x4003c21	              0x90	                                     nop	      2133	obj-elf.c	FUNCTION_52
0x4003c22	              0xc9	                                   leave	      2133	obj-elf.c	FUNCTION_52
0x4003c23	              0xc3	                                     ret	      2133	obj-elf.c	FUNCTION_52
bfd_set_section_alignment	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,0:DO,0:IF,0:WHILE,0	11
0x4000040	              0x55	                                push rbp	      1695	bfd.h	FUNCTION_70
0x4000041	          0x4889e5	                            mov rbp, rsp	      1695	bfd.h	FUNCTION_70
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	      1695	bfd.h	FUNCTION_70
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1695	bfd.h	FUNCTION_70
0x400004c	          0x8955ec	             mov dword [rbp - 0x14], edx	      1695	bfd.h	FUNCTION_70
0x400004f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1696	bfd.h	FUNCTION_70
0x4000053	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1696	bfd.h	FUNCTION_70
0x4000056	          0x895070	             mov dword [rax + 0x70], edx	      1696	bfd.h	FUNCTION_70
0x4000059	      0xb801000000	                              mov eax, 1	      1697	bfd.h	FUNCTION_70
0x400005e	              0x5d	                                 pop rbp	      1698	bfd.h	FUNCTION_70
0x400005f	              0xc3	                                     ret	      1698	bfd.h	FUNCTION_70
elf_obj_read_begin_hook	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:DO,0:IF,1:WHILE,0	5
0x4002f39	              0x55	                                push rbp	      1763	obj-elf.c	FUNCTION_44
0x4002f3a	          0x4889e5	                            mov rbp, rsp	      1763	obj-elf.c	FUNCTION_44
0x4002f3d	              0x90	                                     nop	      1768	obj-elf.c	FUNCTION_44
0x4002f3e	              0x5d	                                 pop rbp	      1768	obj-elf.c	FUNCTION_44
0x4002f3f	              0xc3	                                     ret	      1768	obj-elf.c	FUNCTION_44
obj_elf_vtable_entry	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:DO,0:IF,0:WHILE,0	8
0x4002a13	              0x55	                                push rbp	      1568	obj-elf.c	FUNCTION_38
0x4002a14	          0x4889e5	                            mov rbp, rsp	      1568	obj-elf.c	FUNCTION_38
0x4002a17	        0x4883ec10	                           sub rsp, 0x10	      1568	obj-elf.c	FUNCTION_38
0x4002a1b	          0x897dfc	                mov dword [rbp - 4], edi	      1568	obj-elf.c	FUNCTION_38
0x4002a1e	      0xe800000000	                          call 0x4002a23	      1569	obj-elf.c	FUNCTION_38	CALL_1
0x4002a23	              0x90	                                     nop	      1570	obj-elf.c	FUNCTION_38
0x4002a24	              0xc9	                                   leave	      1570	obj-elf.c	FUNCTION_38
0x4002a25	              0xc3	                                     ret	      1570	obj-elf.c	FUNCTION_38
get_sym_from_input_line_and_check	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,5:DO,0:IF,1:WHILE,0	47
0x4000832	              0x55	                                push rbp	       408	obj-elf.c	FUNCTION_15
0x4000833	          0x4889e5	                            mov rbp, rsp	       408	obj-elf.c	FUNCTION_15
0x4000836	        0x4883ec20	                           sub rsp, 0x20	       408	obj-elf.c	FUNCTION_15
0x400083a	    0x64488b042528	                mov rax, qword fs:[0x28]	       408	obj-elf.c	FUNCTION_15
0x4000843	        0x488945f8	                mov qword [rbp - 8], rax	       408	obj-elf.c	FUNCTION_15
0x4000847	            0x31c0	                            xor eax, eax	       408	obj-elf.c	FUNCTION_15
0x4000849	        0x488d45e8	                   lea rax, [rbp - 0x18]	       413	obj-elf.c	FUNCTION_15	CALL_1
0x400084d	          0x4889c7	                            mov rdi, rax	       413	obj-elf.c	FUNCTION_15	CALL_1
0x4000850	      0xe800000000	                          call 0x4000855	       413	obj-elf.c	FUNCTION_15	CALL_1
0x4000855	          0x8845e7	               mov byte [rbp - 0x19], al	       413	obj-elf.c	FUNCTION_15	CALL_1
0x4000858	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       414	obj-elf.c	FUNCTION_15	CALL_2
0x400085c	          0x4889c7	                            mov rdi, rax	       414	obj-elf.c	FUNCTION_15	CALL_2
0x400085f	      0xe800000000	                          call 0x4000864	       414	obj-elf.c	FUNCTION_15	CALL_2
0x4000864	        0x488945f0	             mov qword [rbp - 0x10], rax	       414	obj-elf.c	FUNCTION_15	CALL_2
0x4000868	    0x488b05000000	            mov rax, qword [0x0400086f] 	       415	obj-elf.c	FUNCTION_15
0x400086f	         0xfb655e7	            movzx edx, byte [rbp - 0x19]	       415	obj-elf.c	FUNCTION_15
0x4000873	            0x8810	                      mov byte [rax], dl	       415	obj-elf.c	FUNCTION_15
0x4000875	    0x488b05000000	            mov rax, qword [0x0400087c] 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400087c	           0xfb600	                   movzx eax, byte [rax]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400087f	            0x3c22	                            cmp al, 0x22	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4000881	            0x7512	                           jne 0x4000895	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4000883	    0x488b05000000	            mov rax, qword [0x0400088a] 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400088a	        0x4883c001	                              add rax, 1	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400088e	    0x488905000000	            mov qword [0x04000895], rax 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4000895	    0x488b05000000	            mov rax, qword [0x0400089c] 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400089c	           0xfb600	                   movzx eax, byte [rax]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400089f	            0x3c20	                            cmp al, 0x20	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40008a1	            0x7512	                           jne 0x40008b5	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40008a3	    0x488b05000000	            mov rax, qword [0x040008aa] 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40008aa	        0x4883c001	                              add rax, 1	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40008ae	    0x488905000000	            mov qword [0x040008b5], rax 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40008b5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       419	obj-elf.c	FUNCTION_15	IF_1
0x40008b9	    0x488b05000000	            mov rax, qword [0x040008c0] 	       419	obj-elf.c	FUNCTION_15	IF_1
0x40008c0	          0x4839c2	                            cmp rdx, rax	       419	obj-elf.c	FUNCTION_15	IF_1
0x40008c3	            0x7517	                           jne 0x40008dc	       419	obj-elf.c	FUNCTION_15	IF_1
0x40008c5	      0xbf00000000	                              mov edi, 0	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40008ca	      0xe800000000	                          call 0x40008cf	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40008cf	          0x4889c7	                            mov rdi, rax	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40008d2	      0xb800000000	                              mov eax, 0	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40008d7	      0xe800000000	                          call 0x40008dc	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40008dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       421	obj-elf.c	FUNCTION_15
0x40008e0	        0x488b4df8	                mov rcx, qword [rbp - 8]	       422	obj-elf.c	FUNCTION_15
0x40008e4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       422	obj-elf.c	FUNCTION_15
0x40008ed	            0x7405	                            je 0x40008f4	       422	obj-elf.c	FUNCTION_15
0x40008ef	      0xe800000000	                          call 0x40008f4	       422	obj-elf.c	FUNCTION_15
0x40008f4	              0xc9	                                   leave	       422	obj-elf.c	FUNCTION_15
0x40008f5	              0xc3	                                     ret	       422	obj-elf.c	FUNCTION_15
elf_common_parse	FOR,0:SWITCH,0:functions,0:ELSE,4:CALL,15:DO,0:IF,8:WHILE,2	159
0x40004e1	              0x55	                                push rbp	       309	obj-elf.c	FUNCTION_11
0x40004e2	          0x4889e5	                            mov rbp, rsp	       309	obj-elf.c	FUNCTION_11
0x40004e5	        0x4883ec40	                           sub rsp, 0x40	       309	obj-elf.c	FUNCTION_11
0x40004e9	          0x897ddc	             mov dword [rbp - 0x24], edi	       309	obj-elf.c	FUNCTION_11
0x40004ec	        0x488975d0	             mov qword [rbp - 0x30], rsi	       309	obj-elf.c	FUNCTION_11
0x40004f0	        0x488955c8	             mov qword [rbp - 0x38], rdx	       309	obj-elf.c	FUNCTION_11
0x40004f4	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       310	obj-elf.c	FUNCTION_11
0x40004fc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       311	obj-elf.c	FUNCTION_11	CALL_1
0x4000500	          0x4889c7	                            mov rdi, rax	       311	obj-elf.c	FUNCTION_11	CALL_1
0x4000503	      0xe800000000	                          call 0x4000508	       311	obj-elf.c	FUNCTION_11	CALL_1
0x4000508	            0x8b00	                    mov eax, dword [rax]	       311	obj-elf.c	FUNCTION_11	CALL_1
0x400050a	          0x8945e4	             mov dword [rbp - 0x1c], eax	       311	obj-elf.c	FUNCTION_11	CALL_1
0x400050d	    0x488b05000000	            mov rax, qword [0x04000514] 	       313	obj-elf.c	FUNCTION_11	IF_1
0x4000514	           0xfb600	                   movzx eax, byte [rax]	       313	obj-elf.c	FUNCTION_11	IF_1
0x4000517	            0x3c2c	                            cmp al, 0x2c	       313	obj-elf.c	FUNCTION_11	IF_1
0x4000519	     0xf85c3010000	                           jne 0x40006e2	       313	obj-elf.c	FUNCTION_11	IF_1
0x400051f	    0x488b05000000	            mov rax, qword [0x04000526] 	       315	obj-elf.c	FUNCTION_11	IF_1
0x4000526	        0x488945f8	                mov qword [rbp - 8], rax	       315	obj-elf.c	FUNCTION_11	IF_1
0x400052a	    0x488b05000000	            mov rax, qword [0x04000531] 	       317	obj-elf.c	FUNCTION_11	IF_1
0x4000531	        0x4883c001	                              add rax, 1	       317	obj-elf.c	FUNCTION_11	IF_1
0x4000535	    0x488905000000	            mov qword [0x0400053c], rax 	       317	obj-elf.c	FUNCTION_11	IF_1
0x400053c	    0x488b05000000	            mov rax, qword [0x04000543] 	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x4000543	           0xfb600	                   movzx eax, byte [rax]	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x4000546	            0x3c20	                            cmp al, 0x20	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x4000548	            0x7512	                           jne 0x400055c	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x400054a	    0x488b05000000	            mov rax, qword [0x04000551] 	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x4000551	        0x4883c001	                              add rax, 1	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x4000555	    0x488905000000	            mov qword [0x0400055c], rax 	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x400055c	    0x488b05000000	            mov rax, qword [0x04000563] 	       320	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x4000563	           0xfb600	                   movzx eax, byte [rax]	       320	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x4000566	            0x3c22	                            cmp al, 0x22	       320	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x4000568	     0xf854a010000	                           jne 0x40006b8	       320	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x400056e	    0x488b05000000	            mov rax, qword [0x04000575] 	       323	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x4000575	        0x4883c001	                              add rax, 1	       323	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x4000579	    0x488905000000	            mov qword [0x04000580], rax 	       323	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x4000580	    0x488b05000000	            mov rax, qword [0x04000587] 	       325	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x4000587	           0xfb600	                   movzx eax, byte [rax]	       325	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x400058a	            0x3c2e	                            cmp al, 0x2e	       325	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x400058c	            0x7512	                           jne 0x40005a0	       325	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x400058e	    0x488b05000000	            mov rax, qword [0x04000595] 	       326	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x4000595	        0x4883c001	                              add rax, 1	       326	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x4000599	    0x488905000000	            mov qword [0x040005a0], rax 	       326	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x40005a0	    0x488b05000000	            mov rax, qword [0x040005a7] 	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x40005a7	      0xba04000000	                              mov edx, 4	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x40005ac	      0xbe00000000	                              mov esi, 0	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x40005b1	          0x4889c7	                            mov rdi, rax	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x40005b4	      0xe800000000	                          call 0x40005b9	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x40005b9	            0x85c0	                           test eax, eax	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x40005bb	            0x7517	                           jne 0x40005d4	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x40005bd	    0x488b05000000	            mov rax, qword [0x040005c4] 	       329	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4
0x40005c4	        0x4883c004	                              add rax, 4	       329	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4
0x40005c8	    0x488905000000	            mov qword [0x040005cf], rax 	       329	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4
0x40005cf	      0xe9db000000	                           jmp 0x40006af	       329	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4
0x40005d4	    0x488b05000000	            mov rax, qword [0x040005db] 	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40005db	      0xba05000000	                              mov edx, 5	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40005e0	      0xbe00000000	                              mov esi, 0	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40005e5	          0x4889c7	                            mov rdi, rax	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40005e8	      0xe800000000	                          call 0x40005ed	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40005ed	            0x85c0	                           test eax, eax	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40005ef	            0x7517	                           jne 0x4000608	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40005f1	    0x488b05000000	            mov rax, qword [0x040005f8] 	       331	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5
0x40005f8	        0x4883c005	                              add rax, 5	       331	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5
0x40005fc	    0x488905000000	            mov qword [0x04000603], rax 	       331	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5
0x4000603	      0xe9a7000000	                           jmp 0x40006af	       331	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5
0x4000608	    0x488b05000000	            mov rax, qword [0x0400060f] 	       334	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x400060f	        0x488945f0	             mov qword [rbp - 0x10], rax	       334	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x4000613	      0x48836df001	               sub qword [rbp - 0x10], 1	       337	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_1
0x4000618	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       337	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_1
0x400061c	           0xfb600	                   movzx eax, byte [rax]	       337	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_1
0x400061f	            0x3c22	                            cmp al, 0x22	       337	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_1
0x4000621	            0x75f0	                           jne 0x4000613	       337	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_1
0x4000623	            0xeb19	                           jmp 0x400063e	       339	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2
0x4000625	    0x488b05000000	            mov rax, qword [0x0400062c] 	       340	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
0x400062c	        0x488d5001	                      lea rdx, [rax + 1]	       340	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
0x4000630	    0x488915000000	            mov qword [0x04000637], rdx 	       340	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
0x4000637	           0xfb600	                   movzx eax, byte [rax]	       340	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
0x400063a	            0x3c22	                            cmp al, 0x22	       340	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
0x400063c	            0x741c	                            je 0x400065a	       340	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
0x400063e	    0x488b05000000	            mov rax, qword [0x04000645] 	       339	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2
0x4000645	           0xfb600	                   movzx eax, byte [rax]	       339	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2
0x4000648	           0xfb6c0	                           movzx eax, al	       339	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2
0x400064b	            0x4898	                                    cdqe	       339	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2
0x400064d	     0xfb680000000	                   movzx eax, byte [rax]	       339	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2
0x4000654	            0x84c0	                             test al, al	       339	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2
0x4000656	            0x74cd	                            je 0x4000625	       339	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2
0x4000658	            0xeb01	                           jmp 0x400065b	       339	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2
0x400065a	              0x90	                                     nop	       341	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
0x400065b	    0x488b05000000	            mov rax, qword [0x04000662] 	       342	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x4000662	           0xfb600	                   movzx eax, byte [rax]	       342	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x4000665	          0x8845e3	               mov byte [rbp - 0x1d], al	       342	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x4000668	    0x488b05000000	            mov rax, qword [0x0400066f] 	       343	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x400066f	          0xc60000	                       mov byte [rax], 0	       343	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x4000672	      0xbf00000000	                              mov edi, 0	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4000677	      0xe800000000	                          call 0x400067c	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x400067c	          0x4889c2	                            mov rdx, rax	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x400067f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4000683	          0x4889c6	                            mov rsi, rax	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4000686	          0x4889d7	                            mov rdi, rdx	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4000689	      0xb800000000	                              mov eax, 0	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x400068e	      0xe800000000	                          call 0x4000693	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4000693	    0x488b05000000	            mov rax, qword [0x0400069a] 	       345	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x400069a	         0xfb655e3	            movzx edx, byte [rbp - 0x1d]	       345	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x400069e	            0x8810	                      mov byte [rax], dl	       345	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x40006a0	      0xe800000000	                          call 0x40006a5	       346	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_7
0x40006a5	      0xb800000000	                              mov eax, 0	       347	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x40006aa	      0xe9c8000000	                           jmp 0x4000777	       347	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x40006af	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       350	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x40006b6	            0xeb2a	                           jmp 0x40006e2	       350	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x40006b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       354	obj-elf.c	FUNCTION_11	IF_1	ELSE_3
0x40006bc	    0x488905000000	            mov qword [0x040006c3], rax 	       354	obj-elf.c	FUNCTION_11	IF_1	ELSE_3
0x40006c3	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       355	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	CALL_8
0x40006c6	            0x89c7	                            mov edi, eax	       355	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	CALL_8
0x40006c8	      0xe800000000	                          call 0x40006cd	       355	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	CALL_8
0x40006cd	        0x488945e8	             mov qword [rbp - 0x18], rax	       355	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	CALL_8
0x40006d1	      0x48837de8ff	cmp qword [rbp - 0x18], 0xffffffffffffffff	       356	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	IF_7
0x40006d6	            0x750a	                           jne 0x40006e2	       356	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	IF_7
0x40006d8	      0xb800000000	                              mov eax, 0	       357	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	IF_7
0x40006dd	      0xe995000000	                           jmp 0x4000777	       357	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	IF_7
0x40006e2	        0x837de400	               cmp dword [rbp - 0x1c], 0	       361	obj-elf.c	FUNCTION_11	IF_8
0x40006e6	            0x7427	                            je 0x400070f	       361	obj-elf.c	FUNCTION_11	IF_8
0x40006e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       363	obj-elf.c	FUNCTION_11	IF_8	CALL_9
0x40006ec	            0x89c2	                            mov edx, eax	       363	obj-elf.c	FUNCTION_11	IF_8	CALL_9
0x40006ee	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       363	obj-elf.c	FUNCTION_11	IF_8	CALL_9
0x40006f2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       363	obj-elf.c	FUNCTION_11	IF_8	CALL_9
0x40006f6	          0x4889ce	                            mov rsi, rcx	       363	obj-elf.c	FUNCTION_11	IF_8	CALL_9
0x40006f9	          0x4889c7	                            mov rdi, rax	       363	obj-elf.c	FUNCTION_11	IF_8	CALL_9
0x40006fc	      0xe800000000	                          call 0x4000701	       363	obj-elf.c	FUNCTION_11	IF_8	CALL_9
0x4000701	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       364	obj-elf.c	FUNCTION_11	IF_8	CALL_10
0x4000705	          0x4889c7	                            mov rdi, rax	       364	obj-elf.c	FUNCTION_11	IF_8	CALL_10
0x4000708	      0xe800000000	                          call 0x400070d	       364	obj-elf.c	FUNCTION_11	IF_8	CALL_10
0x400070d	            0xeb4c	                           jmp 0x400075b	       364	obj-elf.c	FUNCTION_11	IF_8	CALL_10
0x400070f	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       368	obj-elf.c	FUNCTION_11	ELSE_4	CALL_11
0x4000713	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       368	obj-elf.c	FUNCTION_11	ELSE_4	CALL_11
0x4000717	          0x4889d6	                            mov rsi, rdx	       368	obj-elf.c	FUNCTION_11	ELSE_4	CALL_11
0x400071a	          0x4889c7	                            mov rdi, rax	       368	obj-elf.c	FUNCTION_11	ELSE_4	CALL_11
0x400071d	      0xe800000000	                          call 0x4000722	       368	obj-elf.c	FUNCTION_11	ELSE_4	CALL_11
0x4000722	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       369	obj-elf.c	FUNCTION_11	ELSE_4	CALL_12
0x4000726	          0x4889c7	                            mov rdi, rax	       369	obj-elf.c	FUNCTION_11	ELSE_4	CALL_12
0x4000729	      0xe800000000	                          call 0x400072e	       369	obj-elf.c	FUNCTION_11	ELSE_4	CALL_12
0x400072e	          0x4889c2	                            mov rdx, rax	       369	obj-elf.c	FUNCTION_11	ELSE_4	CALL_12
0x4000731	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       369	obj-elf.c	FUNCTION_11	ELSE_4	CALL_12
0x4000735	        0x48894230	             mov qword [rdx + 0x30], rax	       369	obj-elf.c	FUNCTION_11	ELSE_4	CALL_12
0x4000739	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       370	obj-elf.c	FUNCTION_11	ELSE_4	CALL_13
0x400073d	          0x4889c7	                            mov rdi, rax	       370	obj-elf.c	FUNCTION_11	ELSE_4	CALL_13
0x4000740	      0xe800000000	                          call 0x4000745	       370	obj-elf.c	FUNCTION_11	ELSE_4	CALL_13
0x4000745	    0x488b15000000	            mov rdx, qword [0x0400074c] 	       371	obj-elf.c	FUNCTION_11	ELSE_4	CALL_14
0x400074c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       371	obj-elf.c	FUNCTION_11	ELSE_4	CALL_14
0x4000750	          0x4889d6	                            mov rsi, rdx	       371	obj-elf.c	FUNCTION_11	ELSE_4	CALL_14
0x4000753	          0x4889c7	                            mov rdi, rax	       371	obj-elf.c	FUNCTION_11	ELSE_4	CALL_14
0x4000756	      0xe800000000	                          call 0x400075b	       371	obj-elf.c	FUNCTION_11	ELSE_4	CALL_14
0x400075b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       374	obj-elf.c	FUNCTION_11	CALL_15
0x400075f	          0x4889c7	                            mov rdi, rax	       374	obj-elf.c	FUNCTION_11	CALL_15
0x4000762	      0xe800000000	                          call 0x4000767	       374	obj-elf.c	FUNCTION_11	CALL_15
0x4000767	          0x8b5018	            mov edx, dword [rax + 0x18] 	       374	obj-elf.c	FUNCTION_11	CALL_15
0x400076a	    0x81ca00000100	                         or edx, 0x10000	       374	obj-elf.c	FUNCTION_11	CALL_15
0x4000770	          0x895018	             mov dword [rax + 0x18], edx	       374	obj-elf.c	FUNCTION_11	CALL_15
0x4000773	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       376	obj-elf.c	FUNCTION_11
0x4000777	              0xc9	                                   leave	       377	obj-elf.c	FUNCTION_11
0x4000778	              0xc3	                                     ret	       377	obj-elf.c	FUNCTION_11
build_group_lists	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,6:DO,0:IF,3:WHILE,0	93
0x4004129	              0x55	                                push rbp	      2375	obj-elf.c	FUNCTION_58
0x400412a	          0x4889e5	                            mov rbp, rsp	      2375	obj-elf.c	FUNCTION_58
0x400412d	        0x4883ec50	                           sub rsp, 0x50	      2375	obj-elf.c	FUNCTION_58
0x4004131	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2375	obj-elf.c	FUNCTION_58
0x4004135	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2375	obj-elf.c	FUNCTION_58
0x4004139	        0x488955b8	             mov qword [rbp - 0x48], rdx	      2375	obj-elf.c	FUNCTION_58
0x400413d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2376	obj-elf.c	FUNCTION_58
0x4004141	        0x488945e0	             mov qword [rbp - 0x20], rax	      2376	obj-elf.c	FUNCTION_58
0x4004145	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2377	obj-elf.c	FUNCTION_58	CALL_1
0x4004149	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2377	obj-elf.c	FUNCTION_58	CALL_1
0x4004150	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      2377	obj-elf.c	FUNCTION_58	CALL_1
0x4004157	        0x488945e8	             mov qword [rbp - 0x18], rax	      2377	obj-elf.c	FUNCTION_58	CALL_1
0x400415b	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2382	obj-elf.c	FUNCTION_58	IF_1
0x4004160	     0xf8410010000	                            je 0x4004276	      2382	obj-elf.c	FUNCTION_58	IF_1
0x4004166	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2387	obj-elf.c	FUNCTION_58	CALL_2
0x400416a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2387	obj-elf.c	FUNCTION_58	CALL_2
0x400416e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2387	obj-elf.c	FUNCTION_58	CALL_2
0x4004172	          0x4889d6	                            mov rsi, rdx	      2387	obj-elf.c	FUNCTION_58	CALL_2
0x4004175	          0x4889c7	                            mov rdi, rax	      2387	obj-elf.c	FUNCTION_58	CALL_2
0x4004178	      0xe800000000	                          call 0x400417d	      2387	obj-elf.c	FUNCTION_58	CALL_2
0x400417d	        0x488945f0	             mov qword [rbp - 0x10], rax	      2387	obj-elf.c	FUNCTION_58	CALL_2
0x4004181	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2388	obj-elf.c	FUNCTION_58	IF_2
0x4004186	            0x744d	                            je 0x40041d5	      2388	obj-elf.c	FUNCTION_58	IF_2
0x4004188	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x400418c	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x4004193	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x4004197	          0x488b0a	                    mov rcx, qword [rdx]	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x400419a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x400419e	            0x8b12	                    mov edx, dword [rdx]	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x40041a0	            0x89d2	                            mov edx, edx	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x40041a2	        0x48c1e203	                              shl rdx, 3	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x40041a6	          0x4801ca	                            add rdx, rcx	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x40041a9	          0x488b12	                    mov rdx, qword [rdx]	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x40041ac	    0x488990c00000	             mov qword [rax + 0xc0], rdx	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x40041b3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2391	obj-elf.c	FUNCTION_58	IF_2
0x40041b7	          0x488b10	                    mov rdx, qword [rax]	      2391	obj-elf.c	FUNCTION_58	IF_2
0x40041ba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2391	obj-elf.c	FUNCTION_58	IF_2
0x40041be	            0x8b00	                    mov eax, dword [rax]	      2391	obj-elf.c	FUNCTION_58	IF_2
0x40041c0	            0x89c0	                            mov eax, eax	      2391	obj-elf.c	FUNCTION_58	IF_2
0x40041c2	        0x48c1e003	                              shl rax, 3	      2391	obj-elf.c	FUNCTION_58	IF_2
0x40041c6	          0x4801c2	                            add rdx, rax	      2391	obj-elf.c	FUNCTION_58	IF_2
0x40041c9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2391	obj-elf.c	FUNCTION_58	IF_2
0x40041cd	          0x488902	                    mov qword [rdx], rax	      2391	obj-elf.c	FUNCTION_58	IF_2
0x40041d0	      0xe9a2000000	                           jmp 0x4004277	      2392	obj-elf.c	FUNCTION_58	IF_2
0x40041d5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2397	obj-elf.c	FUNCTION_58
0x40041d9	          0x8b4008	                mov eax, dword [rax + 8]	      2397	obj-elf.c	FUNCTION_58
0x40041dc	          0x8945d8	             mov dword [rbp - 0x28], eax	      2397	obj-elf.c	FUNCTION_58
0x40041df	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2398	obj-elf.c	FUNCTION_58	IF_3
0x40041e2	          0x83e07f	                           and eax, 0x7f	      2398	obj-elf.c	FUNCTION_58	IF_3
0x40041e5	            0x85c0	                           test eax, eax	      2398	obj-elf.c	FUNCTION_58	IF_3
0x40041e7	            0x7530	                           jne 0x4004219	      2398	obj-elf.c	FUNCTION_58	IF_3
0x40041e9	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2400	obj-elf.c	FUNCTION_58	IF_3
0x40041ec	          0x83e880	             sub eax, 0xffffffffffffff80	      2400	obj-elf.c	FUNCTION_58	IF_3
0x40041ef	          0x8945dc	             mov dword [rbp - 0x24], eax	      2400	obj-elf.c	FUNCTION_58	IF_3
0x40041f2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x40041f5	    0x488d14c50000	                        lea rdx, [rax*8]	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x40041fd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x4004201	          0x488b00	                    mov rax, qword [rax]	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x4004204	          0x4889d6	                            mov rsi, rdx	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x4004207	          0x4889c7	                            mov rdi, rax	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x400420a	      0xe800000000	                          call 0x400420f	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x400420f	          0x4889c2	                            mov rdx, rax	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x4004212	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x4004216	          0x488910	                    mov qword [rax], rdx	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x4004219	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2403	obj-elf.c	FUNCTION_58
0x400421d	          0x488b00	                    mov rax, qword [rax]	      2403	obj-elf.c	FUNCTION_58
0x4004220	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2403	obj-elf.c	FUNCTION_58
0x4004223	        0x48c1e203	                              shl rdx, 3	      2403	obj-elf.c	FUNCTION_58
0x4004227	          0x4801c2	                            add rdx, rax	      2403	obj-elf.c	FUNCTION_58
0x400422a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2403	obj-elf.c	FUNCTION_58
0x400422e	          0x488902	                    mov qword [rdx], rax	      2403	obj-elf.c	FUNCTION_58
0x4004231	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2404	obj-elf.c	FUNCTION_58
0x4004235	          0x8b4008	                mov eax, dword [rax + 8]	      2404	obj-elf.c	FUNCTION_58
0x4004238	          0x8d5001	                      lea edx, [rax + 1]	      2404	obj-elf.c	FUNCTION_58
0x400423b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2404	obj-elf.c	FUNCTION_58
0x400423f	          0x895008	                mov dword [rax + 8], edx	      2404	obj-elf.c	FUNCTION_58
0x4004242	      0xbf04000000	                              mov edi, 4	      2407	obj-elf.c	FUNCTION_58	CALL_5
0x4004247	      0xe800000000	                          call 0x400424c	      2407	obj-elf.c	FUNCTION_58	CALL_5
0x400424c	        0x488945f8	                mov qword [rbp - 8], rax	      2407	obj-elf.c	FUNCTION_58	CALL_5
0x4004250	        0x488b45f8	                mov rax, qword [rbp - 8]	      2408	obj-elf.c	FUNCTION_58
0x4004254	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2408	obj-elf.c	FUNCTION_58
0x4004257	            0x8910	                    mov dword [rax], edx	      2408	obj-elf.c	FUNCTION_58
0x4004259	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2409	obj-elf.c	FUNCTION_58	CALL_6
0x400425d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2409	obj-elf.c	FUNCTION_58	CALL_6
0x4004261	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2409	obj-elf.c	FUNCTION_58	CALL_6
0x4004265	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2409	obj-elf.c	FUNCTION_58	CALL_6
0x4004269	          0x4889ce	                            mov rsi, rcx	      2409	obj-elf.c	FUNCTION_58	CALL_6
0x400426c	          0x4889c7	                            mov rdi, rax	      2409	obj-elf.c	FUNCTION_58	CALL_6
0x400426f	      0xe800000000	                          call 0x4004274	      2409	obj-elf.c	FUNCTION_58	CALL_6
0x4004274	            0xeb01	                           jmp 0x4004277	      2409	obj-elf.c	FUNCTION_58	CALL_6
0x4004276	              0x90	                                     nop	      2383	obj-elf.c	FUNCTION_58	IF_1
0x4004277	              0xc9	                                   leave	      2410	obj-elf.c	FUNCTION_58
0x4004278	              0xc3	                                     ret	      2410	obj-elf.c	FUNCTION_58
obj_elf_seen_attribute	FOR,1:SWITCH,0:functions,0:ELSE,0:CALL,0:DO,0:IF,1:WHILE,0	40
0x4002b29	              0x55	                                push rbp	      1630	obj-elf.c	FUNCTION_41
0x4002b2a	          0x4889e5	                            mov rbp, rsp	      1630	obj-elf.c	FUNCTION_41
0x4002b2d	          0x897ddc	             mov dword [rbp - 0x24], edi	      1630	obj-elf.c	FUNCTION_41
0x4002b30	          0x8975d8	             mov dword [rbp - 0x28], esi	      1630	obj-elf.c	FUNCTION_41
0x4002b33	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1635	obj-elf.c	FUNCTION_41
0x4002b36	          0xc1e806	                              shr eax, 6	      1635	obj-elf.c	FUNCTION_41
0x4002b39	          0x8945ec	             mov dword [rbp - 0x14], eax	      1635	obj-elf.c	FUNCTION_41
0x4002b3c	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1636	obj-elf.c	FUNCTION_41
0x4002b3f	          0x83e03f	                           and eax, 0x3f	      1636	obj-elf.c	FUNCTION_41
0x4002b42	      0xba01000000	                              mov edx, 1	      1636	obj-elf.c	FUNCTION_41
0x4002b47	            0x89c1	                            mov ecx, eax	      1636	obj-elf.c	FUNCTION_41
0x4002b49	          0x48d3e2	                             shl rdx, cl	      1636	obj-elf.c	FUNCTION_41
0x4002b4c	          0x4889d0	                            mov rax, rdx	      1636	obj-elf.c	FUNCTION_41
0x4002b4f	        0x488945f8	                mov qword [rbp - 8], rax	      1636	obj-elf.c	FUNCTION_41
0x4002b53	    0x488b05000000	            mov rax, qword [0x04002b5a] 	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x4002b5a	        0x488945f0	             mov qword [rbp - 0x10], rax	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x4002b5e	            0xeb3a	                           jmp 0x4002b9a	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x4002b60	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1638	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4002b64	          0x8b4008	                mov eax, dword [rax + 8]	      1638	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4002b67	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      1638	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4002b6a	            0x7523	                           jne 0x4002b8f	      1638	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4002b6c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1638	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4002b70	          0x8b400c	              mov eax, dword [rax + 0xc]	      1638	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4002b73	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1638	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4002b76	            0x7517	                           jne 0x4002b8f	      1638	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4002b78	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4002b7c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4002b80	        0x482345f8	                and rax, qword [rbp - 8]	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4002b84	          0x4885c0	                           test rax, rax	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4002b87	           0xf95c0	                                setne al	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4002b8a	           0xfb6c0	                           movzx eax, al	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4002b8d	            0xeb17	                           jmp 0x4002ba6	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4002b8f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x4002b93	          0x488b00	                    mov rax, qword [rax]	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x4002b96	        0x488945f0	             mov qword [rbp - 0x10], rax	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x4002b9a	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x4002b9f	            0x75bf	                           jne 0x4002b60	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x4002ba1	      0xb800000000	                              mov eax, 0	      1640	obj-elf.c	FUNCTION_41
0x4002ba6	              0x5d	                                 pop rbp	      1641	obj-elf.c	FUNCTION_41
0x4002ba7	              0xc3	                                     ret	      1641	obj-elf.c	FUNCTION_41
obj_elf_ident	FOR,0:SWITCH,0:functions,0:ELSE,1:CALL,8:DO,0:IF,1:WHILE,0	43
0x4003a82	              0x55	                                push rbp	      2078	obj-elf.c	FUNCTION_51
0x4003a83	          0x4889e5	                            mov rbp, rsp	      2078	obj-elf.c	FUNCTION_51
0x4003a86	        0x4883ec30	                           sub rsp, 0x30	      2078	obj-elf.c	FUNCTION_51
0x4003a8a	          0x897ddc	             mov dword [rbp - 0x24], edi	      2078	obj-elf.c	FUNCTION_51
0x4003a8d	    0x488b05000000	            mov rax, qword [0x04003a94] 	      2080	obj-elf.c	FUNCTION_51
0x4003a94	        0x488945f0	             mov qword [rbp - 0x10], rax	      2080	obj-elf.c	FUNCTION_51
0x4003a98	    0x8b0500000000	            mov eax, dword [0x04003a9e] 	      2081	obj-elf.c	FUNCTION_51
0x4003a9e	          0x8945ec	             mov dword [rbp - 0x14], eax	      2081	obj-elf.c	FUNCTION_51
0x4003aa1	    0x488b05000000	            mov rax, qword [0x04003aa8] 	      2087	obj-elf.c	FUNCTION_51	IF_1
0x4003aa8	          0x4885c0	                           test rax, rax	      2087	obj-elf.c	FUNCTION_51	IF_1
0x4003aab	            0x755c	                           jne 0x4003b09	      2087	obj-elf.c	FUNCTION_51	IF_1
0x4003aad	      0xbe00000000	                              mov esi, 0	      2090	obj-elf.c	FUNCTION_51	IF_1	CALL_2
0x4003ab2	      0xbf00000000	                              mov edi, 0	      2090	obj-elf.c	FUNCTION_51	IF_1	CALL_2
0x4003ab7	      0xe800000000	                          call 0x4003abc	      2090	obj-elf.c	FUNCTION_51	IF_1	CALL_2
0x4003abc	    0x488905000000	            mov qword [0x04003ac3], rax 	      2090	obj-elf.c	FUNCTION_51	IF_1	CALL_2
0x4003ac3	    0x488b0d000000	            mov rcx, qword [0x04003aca] 	      2091	obj-elf.c	FUNCTION_51	IF_1	CALL_3
0x4003aca	    0x488b05000000	            mov rax, qword [0x04003ad1] 	      2091	obj-elf.c	FUNCTION_51	IF_1	CALL_3
0x4003ad1	      0xba08018001	                      mov edx, 0x1800108	      2091	obj-elf.c	FUNCTION_51	IF_1	CALL_3
0x4003ad6	          0x4889ce	                            mov rsi, rcx	      2091	obj-elf.c	FUNCTION_51	IF_1	CALL_3
0x4003ad9	          0x4889c7	                            mov rdi, rax	      2091	obj-elf.c	FUNCTION_51	IF_1	CALL_3
0x4003adc	      0xe800000000	                          call 0x4003ae1	      2091	obj-elf.c	FUNCTION_51	IF_1	CALL_3
0x4003ae1	    0x488b05000000	            mov rax, qword [0x04003ae8] 	      2094	obj-elf.c	FUNCTION_51	IF_1
0x4003ae8	    0xc780c4000000	               mov dword [rax + 0xc4], 1	      2094	obj-elf.c	FUNCTION_51	IF_1
0x4003af2	      0xbf01000000	                              mov edi, 1	      2098	obj-elf.c	FUNCTION_51	IF_1	CALL_5
0x4003af7	      0xe800000000	                          call 0x4003afc	      2098	obj-elf.c	FUNCTION_51	IF_1	CALL_5
0x4003afc	        0x488945f8	                mov qword [rbp - 8], rax	      2098	obj-elf.c	FUNCTION_51	IF_1	CALL_5
0x4003b00	        0x488b45f8	                mov rax, qword [rbp - 8]	      2099	obj-elf.c	FUNCTION_51	IF_1
0x4003b04	          0xc60000	                       mov byte [rax], 0	      2099	obj-elf.c	FUNCTION_51	IF_1
0x4003b07	            0xeb14	                           jmp 0x4003b1d	      2099	obj-elf.c	FUNCTION_51	IF_1
0x4003b09	    0x488b05000000	            mov rax, qword [0x04003b10] 	      2102	obj-elf.c	FUNCTION_51	CALL_6
0x4003b10	      0xbe00000000	                              mov esi, 0	      2102	obj-elf.c	FUNCTION_51	CALL_6
0x4003b15	          0x4889c7	                            mov rdi, rax	      2102	obj-elf.c	FUNCTION_51	CALL_6
0x4003b18	      0xe800000000	                          call 0x4003b1d	      2102	obj-elf.c	FUNCTION_51	CALL_6
0x4003b1d	      0xbf09000000	                              mov edi, 9	      2103	obj-elf.c	FUNCTION_51	CALL_7
0x4003b22	      0xe800000000	                          call 0x4003b27	      2103	obj-elf.c	FUNCTION_51	CALL_7
0x4003b27	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2104	obj-elf.c	FUNCTION_51	CALL_8
0x4003b2a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2104	obj-elf.c	FUNCTION_51	CALL_8
0x4003b2e	            0x89d6	                            mov esi, edx	      2104	obj-elf.c	FUNCTION_51	CALL_8
0x4003b30	          0x4889c7	                            mov rdi, rax	      2104	obj-elf.c	FUNCTION_51	CALL_8
0x4003b33	      0xe800000000	                          call 0x4003b38	      2104	obj-elf.c	FUNCTION_51	CALL_8
0x4003b38	              0x90	                                     nop	      2105	obj-elf.c	FUNCTION_51
0x4003b39	              0xc9	                                   leave	      2105	obj-elf.c	FUNCTION_51
0x4003b3a	              0xc3	                                     ret	      2105	obj-elf.c	FUNCTION_51
elf_process_stab	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:DO,0:IF,1:WHILE,0	11
0x400481e	              0x55	                                push rbp	      2666	obj-elf.c	FUNCTION_65
0x400481f	          0x4889e5	                            mov rbp, rsp	      2666	obj-elf.c	FUNCTION_65
0x4004822	        0x48897df8	                mov qword [rbp - 8], rdi	      2666	obj-elf.c	FUNCTION_65
0x4004826	          0x8975f4	              mov dword [rbp - 0xc], esi	      2666	obj-elf.c	FUNCTION_65
0x4004829	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2666	obj-elf.c	FUNCTION_65
0x400482d	          0x894df0	             mov dword [rbp - 0x10], ecx	      2666	obj-elf.c	FUNCTION_65
0x4004830	        0x448945e4	             mov dword [rbp - 0x1c], r8d	      2666	obj-elf.c	FUNCTION_65
0x4004834	        0x44894de0	             mov dword [rbp - 0x20], r9d	      2666	obj-elf.c	FUNCTION_65
0x4004838	              0x90	                                     nop	      2671	obj-elf.c	FUNCTION_65
0x4004839	              0x5d	                                 pop rbp	      2671	obj-elf.c	FUNCTION_65
0x400483a	              0xc3	                                     ret	      2671	obj-elf.c	FUNCTION_65
elf_sec_sym_ok_for_reloc	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:DO,0:IF,0:WHILE,0	10
0x400022e	              0x55	                                push rbp	       257	obj-elf.c	FUNCTION_9
0x400022f	          0x4889e5	                            mov rbp, rsp	       257	obj-elf.c	FUNCTION_9
0x4000232	        0x48897df8	                mov qword [rbp - 8], rdi	       257	obj-elf.c	FUNCTION_9
0x4000236	        0x488b45f8	                mov rax, qword [rbp - 8]	       258	obj-elf.c	FUNCTION_9	CALL_1
0x400023a	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       258	obj-elf.c	FUNCTION_9	CALL_1
0x4000241	          0x4885c0	                           test rax, rax	       258	obj-elf.c	FUNCTION_9	CALL_1
0x4000244	           0xf95c0	                                setne al	       258	obj-elf.c	FUNCTION_9	CALL_1
0x4000247	           0xfb6c0	                           movzx eax, al	       258	obj-elf.c	FUNCTION_9	CALL_1
0x400024a	              0x5d	                                 pop rbp	       259	obj-elf.c	FUNCTION_9
0x400024b	              0xc3	                                     ret	       259	obj-elf.c	FUNCTION_9
elf_s_get_size	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:DO,0:IF,0:WHILE,0	10
0x4000156	              0x55	                                push rbp	       221	obj-elf.c	FUNCTION_3
0x4000157	          0x4889e5	                            mov rbp, rsp	       221	obj-elf.c	FUNCTION_3
0x400015a	        0x4883ec10	                           sub rsp, 0x10	       221	obj-elf.c	FUNCTION_3
0x400015e	        0x48897df8	                mov qword [rbp - 8], rdi	       221	obj-elf.c	FUNCTION_3
0x4000162	        0x488b45f8	                mov rax, qword [rbp - 8]	       222	obj-elf.c	FUNCTION_3	CALL_1
0x4000166	          0x4889c7	                            mov rdi, rax	       222	obj-elf.c	FUNCTION_3	CALL_1
0x4000169	      0xe800000000	                          call 0x400016e	       222	obj-elf.c	FUNCTION_3	CALL_1
0x400016e	        0x488b4038	            mov rax, qword [rax + 0x38] 	       222	obj-elf.c	FUNCTION_3	CALL_1
0x4000172	              0xc9	                                   leave	       223	obj-elf.c	FUNCTION_3
0x4000173	              0xc3	                                     ret	       223	obj-elf.c	FUNCTION_3
xmemdup0	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,2:DO,0:IF,0:WHILE,0	22
0x4000060	              0x55	                                push rbp	       524	as.h	FUNCTION_72
0x4000061	          0x4889e5	                            mov rbp, rsp	       524	as.h	FUNCTION_72
0x4000064	        0x4883ec20	                           sub rsp, 0x20	       524	as.h	FUNCTION_72
0x4000068	        0x48897de8	             mov qword [rbp - 0x18], rdi	       524	as.h	FUNCTION_72
0x400006c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       524	as.h	FUNCTION_72
0x4000070	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       525	as.h	FUNCTION_72	CALL_1
0x4000074	        0x4883c001	                              add rax, 1	       525	as.h	FUNCTION_72	CALL_1
0x4000078	          0x4889c7	                            mov rdi, rax	       525	as.h	FUNCTION_72	CALL_1
0x400007b	      0xe800000000	                          call 0x4000080	       525	as.h	FUNCTION_72	CALL_1
0x4000080	        0x488945f8	                mov qword [rbp - 8], rax	       525	as.h	FUNCTION_72	CALL_1
0x4000084	        0x488b55f8	                mov rdx, qword [rbp - 8]	       526	as.h	FUNCTION_72
0x4000088	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       526	as.h	FUNCTION_72
0x400008c	          0x4801d0	                            add rax, rdx	       526	as.h	FUNCTION_72
0x400008f	          0xc60000	                       mov byte [rax], 0	       526	as.h	FUNCTION_72
0x4000092	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       527	as.h	FUNCTION_72	CALL_2
0x4000096	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       527	as.h	FUNCTION_72	CALL_2
0x400009a	        0x488b45f8	                mov rax, qword [rbp - 8]	       527	as.h	FUNCTION_72	CALL_2
0x400009e	          0x4889ce	                            mov rsi, rcx	       527	as.h	FUNCTION_72	CALL_2
0x40000a1	          0x4889c7	                            mov rdi, rax	       527	as.h	FUNCTION_72	CALL_2
0x40000a4	      0xe800000000	                          call 0x40000a9	       527	as.h	FUNCTION_72	CALL_2
0x40000a9	              0xc9	                                   leave	       528	as.h	FUNCTION_72
0x40000aa	              0xc3	                                     ret	       528	as.h	FUNCTION_72
obj_elf_get_vtable_inherit	FOR,0:SWITCH,0:functions,0:ELSE,1:CALL,20:DO,0:IF,6:WHILE,0	163
0x4002683	              0x55	                                push rbp	      1458	obj-elf.c	FUNCTION_35
0x4002684	          0x4889e5	                            mov rbp, rsp	      1458	obj-elf.c	FUNCTION_35
0x4002687	              0x53	                                push rbx	      1458	obj-elf.c	FUNCTION_35
0x4002688	        0x4883ec38	                           sub rsp, 0x38	      1458	obj-elf.c	FUNCTION_35
0x400268c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1458	obj-elf.c	FUNCTION_35
0x4002695	        0x488945e8	             mov qword [rbp - 0x18], rax	      1458	obj-elf.c	FUNCTION_35
0x4002699	            0x31c0	                            xor eax, eax	      1458	obj-elf.c	FUNCTION_35
0x400269b	        0xc645c600	                mov byte [rbp - 0x3a], 0	      1461	obj-elf.c	FUNCTION_35
0x400269f	    0x488b05000000	            mov rax, qword [0x040026a6] 	      1463	obj-elf.c	FUNCTION_35	IF_1
0x40026a6	           0xfb600	                   movzx eax, byte [rax]	      1463	obj-elf.c	FUNCTION_35	IF_1
0x40026a9	            0x3c23	                            cmp al, 0x23	      1463	obj-elf.c	FUNCTION_35	IF_1
0x40026ab	            0x7512	                           jne 0x40026bf	      1463	obj-elf.c	FUNCTION_35	IF_1
0x40026ad	    0x488b05000000	            mov rax, qword [0x040026b4] 	      1464	obj-elf.c	FUNCTION_35	IF_1
0x40026b4	        0x4883c001	                              add rax, 1	      1464	obj-elf.c	FUNCTION_35	IF_1
0x40026b8	    0x488905000000	            mov qword [0x040026bf], rax 	      1464	obj-elf.c	FUNCTION_35	IF_1
0x40026bf	        0x488d45c8	                   lea rax, [rbp - 0x38]	      1466	obj-elf.c	FUNCTION_35	CALL_1
0x40026c3	          0x4889c7	                            mov rdi, rax	      1466	obj-elf.c	FUNCTION_35	CALL_1
0x40026c6	      0xe800000000	                          call 0x40026cb	      1466	obj-elf.c	FUNCTION_35	CALL_1
0x40026cb	          0x8845c7	               mov byte [rbp - 0x39], al	      1466	obj-elf.c	FUNCTION_35	CALL_1
0x40026ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1467	obj-elf.c	FUNCTION_35	CALL_2
0x40026d2	          0x4889c7	                            mov rdi, rax	      1467	obj-elf.c	FUNCTION_35	CALL_2
0x40026d5	      0xe800000000	                          call 0x40026da	      1467	obj-elf.c	FUNCTION_35	CALL_2
0x40026da	        0x488945e0	             mov qword [rbp - 0x20], rax	      1467	obj-elf.c	FUNCTION_35	CALL_2
0x40026de	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x40026e3	            0x7411	                            je 0x40026f6	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x40026e5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x40026e9	          0x4889c7	                            mov rdi, rax	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x40026ec	      0xe800000000	                          call 0x40026f1	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x40026f1	          0x4885c0	                           test rax, rax	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x40026f4	            0x7522	                           jne 0x4002718	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x40026f6	        0x488b5dc8	             mov rbx, qword [rbp - 0x38]	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x40026fa	      0xbf00000000	                              mov edi, 0	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x40026ff	      0xe800000000	                          call 0x4002704	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4002704	          0x4889de	                            mov rsi, rbx	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4002707	          0x4889c7	                            mov rdi, rax	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x400270a	      0xb800000000	                              mov eax, 0	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x400270f	      0xe800000000	                          call 0x4002714	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4002714	        0xc645c601	                mov byte [rbp - 0x3a], 1	      1477	obj-elf.c	FUNCTION_35	IF_2
0x4002718	    0x488b05000000	            mov rax, qword [0x0400271f] 	      1480	obj-elf.c	FUNCTION_35
0x400271f	         0xfb655c7	            movzx edx, byte [rbp - 0x39]	      1480	obj-elf.c	FUNCTION_35
0x4002723	            0x8810	                      mov byte [rax], dl	      1480	obj-elf.c	FUNCTION_35
0x4002725	    0x488b05000000	            mov rax, qword [0x0400272c] 	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x400272c	           0xfb600	                   movzx eax, byte [rax]	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x400272f	            0x3c22	                            cmp al, 0x22	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4002731	            0x7512	                           jne 0x4002745	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4002733	    0x488b05000000	            mov rax, qword [0x0400273a] 	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x400273a	        0x4883c001	                              add rax, 1	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x400273e	    0x488905000000	            mov qword [0x04002745], rax 	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4002745	    0x488b05000000	            mov rax, qword [0x0400274c] 	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x400274c	           0xfb600	                   movzx eax, byte [rax]	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x400274f	            0x3c20	                            cmp al, 0x20	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4002751	            0x7512	                           jne 0x4002765	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4002753	    0x488b05000000	            mov rax, qword [0x0400275a] 	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x400275a	        0x4883c001	                              add rax, 1	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x400275e	    0x488905000000	            mov qword [0x04002765], rax 	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4002765	    0x488b05000000	            mov rax, qword [0x0400276c] 	      1483	obj-elf.c	FUNCTION_35	IF_3
0x400276c	           0xfb600	                   movzx eax, byte [rax]	      1483	obj-elf.c	FUNCTION_35	IF_3
0x400276f	            0x3c2c	                            cmp al, 0x2c	      1483	obj-elf.c	FUNCTION_35	IF_3
0x4002771	            0x7426	                            je 0x4002799	      1483	obj-elf.c	FUNCTION_35	IF_3
0x4002773	      0xbf00000000	                              mov edi, 0	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x4002778	      0xe800000000	                          call 0x400277d	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x400277d	          0x4889c7	                            mov rdi, rax	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x4002780	      0xb800000000	                              mov eax, 0	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x4002785	      0xe800000000	                          call 0x400278a	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x400278a	      0xe800000000	                          call 0x400278f	      1486	obj-elf.c	FUNCTION_35	IF_3	CALL_9
0x400278f	      0xb800000000	                              mov eax, 0	      1487	obj-elf.c	FUNCTION_35	IF_3
0x4002794	      0xe96d010000	                           jmp 0x4002906	      1487	obj-elf.c	FUNCTION_35	IF_3
0x4002799	    0x488b05000000	            mov rax, qword [0x040027a0] 	      1490	obj-elf.c	FUNCTION_35
0x40027a0	        0x4883c001	                              add rax, 1	      1490	obj-elf.c	FUNCTION_35
0x40027a4	    0x488905000000	            mov qword [0x040027ab], rax 	      1490	obj-elf.c	FUNCTION_35
0x40027ab	    0x488b05000000	            mov rax, qword [0x040027b2] 	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x40027b2	           0xfb600	                   movzx eax, byte [rax]	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x40027b5	            0x3c20	                            cmp al, 0x20	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x40027b7	            0x7512	                           jne 0x40027cb	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x40027b9	    0x488b05000000	            mov rax, qword [0x040027c0] 	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x40027c0	        0x4883c001	                              add rax, 1	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x40027c4	    0x488905000000	            mov qword [0x040027cb], rax 	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x40027cb	    0x488b05000000	            mov rax, qword [0x040027d2] 	      1493	obj-elf.c	FUNCTION_35	IF_4
0x40027d2	           0xfb600	                   movzx eax, byte [rax]	      1493	obj-elf.c	FUNCTION_35	IF_4
0x40027d5	            0x3c23	                            cmp al, 0x23	      1493	obj-elf.c	FUNCTION_35	IF_4
0x40027d7	            0x7512	                           jne 0x40027eb	      1493	obj-elf.c	FUNCTION_35	IF_4
0x40027d9	    0x488b05000000	            mov rax, qword [0x040027e0] 	      1494	obj-elf.c	FUNCTION_35	IF_4
0x40027e0	        0x4883c001	                              add rax, 1	      1494	obj-elf.c	FUNCTION_35	IF_4
0x40027e4	    0x488905000000	            mov qword [0x040027eb], rax 	      1494	obj-elf.c	FUNCTION_35	IF_4
0x40027eb	    0x488b05000000	            mov rax, qword [0x040027f2] 	      1496	obj-elf.c	FUNCTION_35	IF_5
0x40027f2	           0xfb600	                   movzx eax, byte [rax]	      1496	obj-elf.c	FUNCTION_35	IF_5
0x40027f5	            0x3c30	                            cmp al, 0x30	      1496	obj-elf.c	FUNCTION_35	IF_5
0x40027f7	            0x755c	                           jne 0x4002855	      1496	obj-elf.c	FUNCTION_35	IF_5
0x40027f9	    0x488b05000000	            mov rax, qword [0x04002800] 	      1497	obj-elf.c	FUNCTION_35	IF_5
0x4002800	        0x4883c001	                              add rax, 1	      1497	obj-elf.c	FUNCTION_35	IF_5
0x4002804	           0xfb600	                   movzx eax, byte [rax]	      1497	obj-elf.c	FUNCTION_35	IF_5
0x4002807	            0x84c0	                             test al, al	      1497	obj-elf.c	FUNCTION_35	IF_5
0x4002809	            0x7428	                            je 0x4002833	      1497	obj-elf.c	FUNCTION_35	IF_5
0x400280b	    0x488b05000000	            mov rax, qword [0x04002812] 	      1498	obj-elf.c	FUNCTION_35	IF_5	CALL_11
0x4002812	        0x4883c001	                              add rax, 1	      1498	obj-elf.c	FUNCTION_35	IF_5	CALL_11
0x4002816	           0xfb600	                   movzx eax, byte [rax]	      1498	obj-elf.c	FUNCTION_35	IF_5	CALL_11
0x4002819	           0xfbec0	                           movsx eax, al	      1498	obj-elf.c	FUNCTION_35	IF_5	CALL_11
0x400281c	           0xfb6c0	                           movzx eax, al	      1498	obj-elf.c	FUNCTION_35	IF_5	CALL_11
0x400281f	            0x4898	                                    cdqe	      1498	obj-elf.c	FUNCTION_35	IF_5	CALL_11
0x4002821	     0xfb784000000	             movzx eax, word [rax + rax]	      1498	obj-elf.c	FUNCTION_35	IF_5	CALL_11
0x4002829	           0xfb7c0	                           movzx eax, ax	      1498	obj-elf.c	FUNCTION_35	IF_5	CALL_11
0x400282c	          0x83e040	                           and eax, 0x40	      1498	obj-elf.c	FUNCTION_35	IF_5	CALL_11
0x400282f	            0x85c0	                           test eax, eax	      1498	obj-elf.c	FUNCTION_35	IF_5	CALL_11
0x4002831	            0x7422	                            je 0x4002855	      1498	obj-elf.c	FUNCTION_35	IF_5	CALL_11
0x4002833	      0xbf00000000	                              mov edi, 0	      1500	obj-elf.c	FUNCTION_35	IF_5	CALL_12
0x4002838	      0xe800000000	                          call 0x400283d	      1500	obj-elf.c	FUNCTION_35	IF_5	CALL_12
0x400283d	        0x488945d8	             mov qword [rbp - 0x28], rax	      1500	obj-elf.c	FUNCTION_35	IF_5	CALL_12
0x4002841	    0x488b05000000	            mov rax, qword [0x04002848] 	      1501	obj-elf.c	FUNCTION_35	IF_5
0x4002848	        0x4883c001	                              add rax, 1	      1501	obj-elf.c	FUNCTION_35	IF_5
0x400284c	    0x488905000000	            mov qword [0x04002853], rax 	      1501	obj-elf.c	FUNCTION_35	IF_5
0x4002853	            0xeb2a	                           jmp 0x400287f	      1501	obj-elf.c	FUNCTION_35	IF_5
0x4002855	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1505	obj-elf.c	FUNCTION_35	ELSE_1	CALL_13
0x4002859	          0x4889c7	                            mov rdi, rax	      1505	obj-elf.c	FUNCTION_35	ELSE_1	CALL_13
0x400285c	      0xe800000000	                          call 0x4002861	      1505	obj-elf.c	FUNCTION_35	ELSE_1	CALL_13
0x4002861	          0x8845c7	               mov byte [rbp - 0x39], al	      1505	obj-elf.c	FUNCTION_35	ELSE_1	CALL_13
0x4002864	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1506	obj-elf.c	FUNCTION_35	ELSE_1	CALL_14
0x4002868	          0x4889c7	                            mov rdi, rax	      1506	obj-elf.c	FUNCTION_35	ELSE_1	CALL_14
0x400286b	      0xe800000000	                          call 0x4002870	      1506	obj-elf.c	FUNCTION_35	ELSE_1	CALL_14
0x4002870	        0x488945d8	             mov qword [rbp - 0x28], rax	      1506	obj-elf.c	FUNCTION_35	ELSE_1	CALL_14
0x4002874	         0xfbe45c7	            movsx eax, byte [rbp - 0x39]	      1507	obj-elf.c	FUNCTION_35	ELSE_1	CALL_15
0x4002878	            0x89c7	                            mov edi, eax	      1507	obj-elf.c	FUNCTION_35	ELSE_1	CALL_15
0x400287a	      0xe800000000	                          call 0x400287f	      1507	obj-elf.c	FUNCTION_35	ELSE_1	CALL_15
0x400287f	      0xe800000000	                          call 0x4002884	      1510	obj-elf.c	FUNCTION_35	CALL_16
0x4002884	        0x807dc600	                cmp byte [rbp - 0x3a], 0	      1512	obj-elf.c	FUNCTION_35	IF_6
0x4002888	            0x7407	                            je 0x4002891	      1512	obj-elf.c	FUNCTION_35	IF_6
0x400288a	      0xb800000000	                              mov eax, 0	      1513	obj-elf.c	FUNCTION_35	IF_6
0x400288f	            0xeb75	                           jmp 0x4002906	      1513	obj-elf.c	FUNCTION_35	IF_6
0x4002891	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x4002895	          0x4889c7	                            mov rdi, rax	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x4002898	      0xe800000000	                          call 0x400289d	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x400289d	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x40028a1	            0x3c02	                               cmp al, 2	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x40028a3	            0x7414	                            je 0x40028b9	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x40028a5	      0xba00000000	                              mov edx, 0	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x40028aa	      0xbeeb050000	                          mov esi, 0x5eb	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x40028af	      0xbf00000000	                              mov edi, 0	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x40028b4	      0xe800000000	                          call 0x40028b9	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x40028b9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1517	obj-elf.c	FUNCTION_35	CALL_20
0x40028bd	          0x4889c7	                            mov rdi, rax	      1517	obj-elf.c	FUNCTION_35	CALL_20
0x40028c0	      0xe800000000	                          call 0x40028c5	      1517	obj-elf.c	FUNCTION_35	CALL_20
0x40028c5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1517	obj-elf.c	FUNCTION_35	CALL_20
0x40028c9	            0x89c3	                            mov ebx, eax	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40028cb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40028cf	          0x4889c7	                            mov rdi, rax	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40028d2	      0xe800000000	                          call 0x40028d7	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40028d7	          0x4889c7	                            mov rdi, rax	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40028da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40028de	        0x4883ec08	                              sub rsp, 8	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40028e2	      0x68a3050000	                              push 0x5a3	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40028e7	    0x41b900000000	                              mov r9d, 0	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40028ed	    0x41b800000000	                              mov r8d, 0	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40028f3	          0x4889c1	                            mov rcx, rax	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40028f6	      0xba00000000	                              mov edx, 0	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40028fb	            0x89de	                            mov esi, ebx	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40028fd	      0xe800000000	                          call 0x4002902	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x4002902	        0x4883c410	                           add rsp, 0x10	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x4002906	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1519	obj-elf.c	FUNCTION_35
0x400290a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1519	obj-elf.c	FUNCTION_35
0x4002913	            0x7405	                            je 0x400291a	      1519	obj-elf.c	FUNCTION_35
0x4002915	      0xe800000000	                          call 0x400291a	      1519	obj-elf.c	FUNCTION_35
0x400291a	        0x488b5df8	                mov rbx, qword [rbp - 8]	      1519	obj-elf.c	FUNCTION_35
0x400291e	              0xc9	                                   leave	      1519	obj-elf.c	FUNCTION_35
0x400291f	              0xc3	                                     ret	      1519	obj-elf.c	FUNCTION_35
obj_elf_type_name	FOR,0:SWITCH,0:functions,0:ELSE,1:CALL,1:DO,0:IF,1:WHILE,1	49
0x40034c6	              0x55	                                push rbp	      1941	obj-elf.c	FUNCTION_49
0x40034c7	          0x4889e5	                            mov rbp, rsp	      1941	obj-elf.c	FUNCTION_49
0x40034ca	        0x4883ec20	                           sub rsp, 0x20	      1941	obj-elf.c	FUNCTION_49
0x40034ce	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1941	obj-elf.c	FUNCTION_49
0x40034d2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1941	obj-elf.c	FUNCTION_49
0x40034db	        0x488945f8	                mov qword [rbp - 8], rax	      1941	obj-elf.c	FUNCTION_49
0x40034df	            0x31c0	                            xor eax, eax	      1941	obj-elf.c	FUNCTION_49
0x40034e1	    0x488b05000000	            mov rax, qword [0x040034e8] 	      1944	obj-elf.c	FUNCTION_49
0x40034e8	        0x488945f0	             mov qword [rbp - 0x10], rax	      1944	obj-elf.c	FUNCTION_49
0x40034ec	    0x488b05000000	            mov rax, qword [0x040034f3] 	      1945	obj-elf.c	FUNCTION_49	IF_1
0x40034f3	           0xfb600	                   movzx eax, byte [rax]	      1945	obj-elf.c	FUNCTION_49	IF_1
0x40034f6	            0x3c2f	                            cmp al, 0x2f	      1945	obj-elf.c	FUNCTION_49	IF_1
0x40034f8	            0x7e5a	                           jle 0x4003554	      1945	obj-elf.c	FUNCTION_49	IF_1
0x40034fa	    0x488b05000000	            mov rax, qword [0x04003501] 	      1946	obj-elf.c	FUNCTION_49	IF_1
0x4003501	           0xfb600	                   movzx eax, byte [rax]	      1946	obj-elf.c	FUNCTION_49	IF_1
0x4003504	            0x3c39	                            cmp al, 0x39	      1946	obj-elf.c	FUNCTION_49	IF_1
0x4003506	            0x7f4c	                            jg 0x4003554	      1946	obj-elf.c	FUNCTION_49	IF_1
0x4003508	            0xeb12	                           jmp 0x400351c	      1948	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x400350a	    0x488b05000000	            mov rax, qword [0x04003511] 	      1950	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x4003511	        0x4883c001	                              add rax, 1	      1950	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x4003515	    0x488905000000	            mov qword [0x0400351c], rax 	      1950	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x400351c	    0x488b05000000	            mov rax, qword [0x04003523] 	      1948	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x4003523	           0xfb600	                   movzx eax, byte [rax]	      1948	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x4003526	            0x3c2f	                            cmp al, 0x2f	      1948	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x4003528	            0x7e0e	                           jle 0x4003538	      1948	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x400352a	    0x488b05000000	            mov rax, qword [0x04003531] 	      1949	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x4003531	           0xfb600	                   movzx eax, byte [rax]	      1949	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x4003534	            0x3c39	                            cmp al, 0x39	      1949	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x4003536	            0x7ed2	                           jle 0x400350a	      1949	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x4003538	    0x488b05000000	            mov rax, qword [0x0400353f] 	      1951	obj-elf.c	FUNCTION_49	IF_1
0x400353f	           0xfb610	                   movzx edx, byte [rax]	      1951	obj-elf.c	FUNCTION_49	IF_1
0x4003542	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1951	obj-elf.c	FUNCTION_49	IF_1
0x4003546	            0x8810	                      mov byte [rax], dl	      1951	obj-elf.c	FUNCTION_49	IF_1
0x4003548	    0x488b05000000	            mov rax, qword [0x0400354f] 	      1952	obj-elf.c	FUNCTION_49	IF_1
0x400354f	          0xc60000	                       mov byte [rax], 0	      1952	obj-elf.c	FUNCTION_49	IF_1
0x4003552	            0xeb14	                           jmp 0x4003568	      1952	obj-elf.c	FUNCTION_49	IF_1
0x4003554	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1955	obj-elf.c	FUNCTION_49	CALL_1
0x4003558	          0x4889c7	                            mov rdi, rax	      1955	obj-elf.c	FUNCTION_49	CALL_1
0x400355b	      0xe800000000	                          call 0x4003560	      1955	obj-elf.c	FUNCTION_49	CALL_1
0x4003560	            0x89c2	                            mov edx, eax	      1955	obj-elf.c	FUNCTION_49	CALL_1
0x4003562	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1955	obj-elf.c	FUNCTION_49	CALL_1
0x4003566	            0x8810	                      mov byte [rax], dl	      1955	obj-elf.c	FUNCTION_49	CALL_1
0x4003568	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1957	obj-elf.c	FUNCTION_49
0x400356c	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1958	obj-elf.c	FUNCTION_49
0x4003570	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1958	obj-elf.c	FUNCTION_49
0x4003579	            0x7405	                            je 0x4003580	      1958	obj-elf.c	FUNCTION_49
0x400357b	      0xe800000000	                          call 0x4003580	      1958	obj-elf.c	FUNCTION_49
0x4003580	              0xc9	                                   leave	      1958	obj-elf.c	FUNCTION_49
0x4003581	              0xc3	                                     ret	      1958	obj-elf.c	FUNCTION_49
obj_elf_common	FOR,0:SWITCH,0:functions,0:ELSE,1:CALL,2:DO,0:IF,1:WHILE,0	18
0x4000779	              0x55	                                push rbp	       381	obj-elf.c	FUNCTION_12
0x400077a	          0x4889e5	                            mov rbp, rsp	       381	obj-elf.c	FUNCTION_12
0x400077d	        0x4883ec10	                           sub rsp, 0x10	       381	obj-elf.c	FUNCTION_12
0x4000781	          0x897dfc	                mov dword [rbp - 4], edi	       381	obj-elf.c	FUNCTION_12
0x4000784	    0x8b0500000000	            mov eax, dword [0x0400078a] 	       382	obj-elf.c	FUNCTION_12	IF_1
0x400078a	            0x85c0	                           test eax, eax	       382	obj-elf.c	FUNCTION_12	IF_1
0x400078c	            0x7412	                            je 0x40007a0	       382	obj-elf.c	FUNCTION_12	IF_1
0x400078e	        0x837dfc00	                  cmp dword [rbp - 4], 0	       382	obj-elf.c	FUNCTION_12	IF_1
0x4000792	            0x740c	                            je 0x40007a0	       382	obj-elf.c	FUNCTION_12	IF_1
0x4000794	      0xbf00000000	                              mov edi, 0	       383	obj-elf.c	FUNCTION_12	CALL_1
0x4000799	      0xe800000000	                          call 0x400079e	       383	obj-elf.c	FUNCTION_12	CALL_1
0x400079e	            0xeb0f	                           jmp 0x40007af	       383	obj-elf.c	FUNCTION_12	CALL_1
0x40007a0	      0xbe00000000	                              mov esi, 0	       385	obj-elf.c	FUNCTION_12	CALL_2
0x40007a5	      0xbf00000000	                              mov edi, 0	       385	obj-elf.c	FUNCTION_12	CALL_2
0x40007aa	      0xe800000000	                          call 0x40007af	       385	obj-elf.c	FUNCTION_12	CALL_2
0x40007af	              0x90	                                     nop	       386	obj-elf.c	FUNCTION_12
0x40007b0	              0xc9	                                   leave	       386	obj-elf.c	FUNCTION_12
0x40007b1	              0xc3	                                     ret	       386	obj-elf.c	FUNCTION_12
obj_elf_size	FOR,0:SWITCH,0:functions,0:ELSE,1:CALL,17:DO,0:IF,4:WHILE,0	130
0x40032be	              0x55	                                push rbp	      1875	obj-elf.c	FUNCTION_48
0x40032bf	          0x4889e5	                            mov rbp, rsp	      1875	obj-elf.c	FUNCTION_48
0x40032c2	              0x53	                                push rbx	      1875	obj-elf.c	FUNCTION_48
0x40032c3	        0x4883ec68	                           sub rsp, 0x68	      1875	obj-elf.c	FUNCTION_48
0x40032c7	          0x897d9c	             mov dword [rbp - 0x64], edi	      1875	obj-elf.c	FUNCTION_48
0x40032ca	    0x64488b042528	                mov rax, qword fs:[0x28]	      1875	obj-elf.c	FUNCTION_48
0x40032d3	        0x488945e8	             mov qword [rbp - 0x18], rax	      1875	obj-elf.c	FUNCTION_48
0x40032d7	            0x31c0	                            xor eax, eax	      1875	obj-elf.c	FUNCTION_48
0x40032d9	        0x488d45a8	                   lea rax, [rbp - 0x58]	      1877	obj-elf.c	FUNCTION_48	CALL_1
0x40032dd	          0x4889c7	                            mov rdi, rax	      1877	obj-elf.c	FUNCTION_48	CALL_1
0x40032e0	      0xe800000000	                          call 0x40032e5	      1877	obj-elf.c	FUNCTION_48	CALL_1
0x40032e5	          0x8845a7	               mov byte [rbp - 0x59], al	      1877	obj-elf.c	FUNCTION_48	CALL_1
0x40032e8	    0x488b05000000	            mov rax, qword [0x040032ef] 	      1882	obj-elf.c	FUNCTION_48
0x40032ef	        0x488945b0	             mov qword [rbp - 0x50], rax	      1882	obj-elf.c	FUNCTION_48
0x40032f3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1883	obj-elf.c	FUNCTION_48
0x40032f7	         0xfb655a7	            movzx edx, byte [rbp - 0x59]	      1883	obj-elf.c	FUNCTION_48
0x40032fb	            0x8810	                      mov byte [rax], dl	      1883	obj-elf.c	FUNCTION_48
0x40032fd	    0x488b05000000	            mov rax, qword [0x04003304] 	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4003304	           0xfb600	                   movzx eax, byte [rax]	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4003307	            0x3c22	                            cmp al, 0x22	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4003309	            0x7512	                           jne 0x400331d	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x400330b	    0x488b05000000	            mov rax, qword [0x04003312] 	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4003312	        0x4883c001	                              add rax, 1	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4003316	    0x488905000000	            mov qword [0x0400331d], rax 	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x400331d	    0x488b05000000	            mov rax, qword [0x04003324] 	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4003324	           0xfb600	                   movzx eax, byte [rax]	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4003327	            0x3c20	                            cmp al, 0x20	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4003329	            0x7512	                           jne 0x400333d	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x400332b	    0x488b05000000	            mov rax, qword [0x04003332] 	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4003332	        0x4883c001	                              add rax, 1	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4003336	    0x488905000000	            mov qword [0x0400333d], rax 	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x400333d	    0x488b05000000	            mov rax, qword [0x04003344] 	      1885	obj-elf.c	FUNCTION_48	IF_1
0x4003344	           0xfb600	                   movzx eax, byte [rax]	      1885	obj-elf.c	FUNCTION_48	IF_1
0x4003347	            0x3c2c	                            cmp al, 0x2c	      1885	obj-elf.c	FUNCTION_48	IF_1
0x4003349	            0x7439	                            je 0x4003384	      1885	obj-elf.c	FUNCTION_48	IF_1
0x400334b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1887	obj-elf.c	FUNCTION_48	IF_1
0x400334f	          0xc60000	                       mov byte [rax], 0	      1887	obj-elf.c	FUNCTION_48	IF_1
0x4003352	        0x488b5da8	             mov rbx, qword [rbp - 0x58]	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4003356	      0xbf00000000	                              mov edi, 0	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x400335b	      0xe800000000	                          call 0x4003360	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4003360	          0x4889de	                            mov rsi, rbx	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4003363	          0x4889c7	                            mov rdi, rax	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4003366	      0xb800000000	                              mov eax, 0	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x400336b	      0xe800000000	                          call 0x4003370	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4003370	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1889	obj-elf.c	FUNCTION_48	IF_1
0x4003374	         0xfb655a7	            movzx edx, byte [rbp - 0x59]	      1889	obj-elf.c	FUNCTION_48	IF_1
0x4003378	            0x8810	                      mov byte [rax], dl	      1889	obj-elf.c	FUNCTION_48	IF_1
0x400337a	      0xe800000000	                          call 0x400337f	      1890	obj-elf.c	FUNCTION_48	IF_1	CALL_5
0x400337f	      0xe927010000	                           jmp 0x40034ab	      1890	obj-elf.c	FUNCTION_48	IF_1	CALL_5
0x4003384	    0x488b05000000	            mov rax, qword [0x0400338b] 	      1893	obj-elf.c	FUNCTION_48
0x400338b	        0x4883c001	                              add rax, 1	      1893	obj-elf.c	FUNCTION_48
0x400338f	    0x488905000000	            mov qword [0x04003396], rax 	      1893	obj-elf.c	FUNCTION_48
0x4003396	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1894	obj-elf.c	FUNCTION_48	CALL_6
0x400339a	      0xba01000000	                              mov edx, 1	      1894	obj-elf.c	FUNCTION_48	CALL_6
0x400339f	          0x4889c6	                            mov rsi, rax	      1894	obj-elf.c	FUNCTION_48	CALL_6
0x40033a2	      0xbf00000000	                              mov edi, 0	      1894	obj-elf.c	FUNCTION_48	CALL_6
0x40033a7	      0xe800000000	                          call 0x40033ac	      1894	obj-elf.c	FUNCTION_48	CALL_6
0x40033ac	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	      1895	obj-elf.c	FUNCTION_48	IF_2
0x40033b0	            0x3c01	                               cmp al, 1	      1895	obj-elf.c	FUNCTION_48	IF_2
0x40033b2	            0x7523	                           jne 0x40033d7	      1895	obj-elf.c	FUNCTION_48	IF_2
0x40033b4	      0xbf00000000	                              mov edi, 0	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x40033b9	      0xe800000000	                          call 0x40033be	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x40033be	          0x4889c7	                            mov rdi, rax	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x40033c1	      0xb800000000	                              mov eax, 0	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x40033c6	      0xe800000000	                          call 0x40033cb	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x40033cb	        0xc645d802	                mov byte [rbp - 0x28], 2	      1898	obj-elf.c	FUNCTION_48	IF_2
0x40033cf	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1899	obj-elf.c	FUNCTION_48	IF_2
0x40033d7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1901	obj-elf.c	FUNCTION_48
0x40033db	          0xc60000	                       mov byte [rax], 0	      1901	obj-elf.c	FUNCTION_48
0x40033de	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1902	obj-elf.c	FUNCTION_48	CALL_9
0x40033e2	          0x4889c7	                            mov rdi, rax	      1902	obj-elf.c	FUNCTION_48	CALL_9
0x40033e5	      0xe800000000	                          call 0x40033ea	      1902	obj-elf.c	FUNCTION_48	CALL_9
0x40033ea	        0x488945b8	             mov qword [rbp - 0x48], rax	      1902	obj-elf.c	FUNCTION_48	CALL_9
0x40033ee	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1903	obj-elf.c	FUNCTION_48
0x40033f2	         0xfb655a7	            movzx edx, byte [rbp - 0x59]	      1903	obj-elf.c	FUNCTION_48
0x40033f6	            0x8810	                      mov byte [rax], dl	      1903	obj-elf.c	FUNCTION_48
0x40033f8	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	      1904	obj-elf.c	FUNCTION_48	IF_3
0x40033fc	            0x3c02	                               cmp al, 2	      1904	obj-elf.c	FUNCTION_48	IF_3
0x40033fe	            0x755a	                           jne 0x400345a	      1904	obj-elf.c	FUNCTION_48	IF_3
0x4003400	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1906	obj-elf.c	FUNCTION_48	IF_3	CALL_10
0x4003404	          0x4889c7	                            mov rdi, rax	      1906	obj-elf.c	FUNCTION_48	IF_3	CALL_10
0x4003407	      0xe800000000	                          call 0x400340c	      1906	obj-elf.c	FUNCTION_48	IF_3	CALL_10
0x400340c	          0x4889c2	                            mov rdx, rax	      1906	obj-elf.c	FUNCTION_48	IF_3	CALL_10
0x400340f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1906	obj-elf.c	FUNCTION_48	IF_3	CALL_10
0x4003413	        0x48894238	             mov qword [rdx + 0x38], rax	      1906	obj-elf.c	FUNCTION_48	IF_3	CALL_10
0x4003417	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1907	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_11
0x400341b	          0x4889c7	                            mov rdi, rax	      1907	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_11
0x400341e	      0xe800000000	                          call 0x4003423	      1907	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_11
0x4003423	        0x488b4008	                mov rax, qword [rax + 8]	      1907	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_11
0x4003427	          0x4885c0	                           test rax, rax	      1907	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_11
0x400342a	            0x747a	                            je 0x40034a6	      1907	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_11
0x400342c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1909	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_12
0x4003430	          0x4889c7	                            mov rdi, rax	      1909	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_12
0x4003433	      0xe800000000	                          call 0x4003438	      1909	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_12
0x4003438	        0x488b4008	                mov rax, qword [rax + 8]	      1909	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_12
0x400343c	          0x4889c7	                            mov rdi, rax	      1909	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_12
0x400343f	      0xe800000000	                          call 0x4003444	      1909	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_12
0x4003444	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1910	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_13
0x4003448	          0x4889c7	                            mov rdi, rax	      1910	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_13
0x400344b	      0xe800000000	                          call 0x4003450	      1910	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_13
0x4003450	    0x48c740080000	                  mov qword [rax + 8], 0	      1910	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_13
0x4003458	            0xeb4c	                           jmp 0x40034a6	      1910	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_13
0x400345a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x400345e	          0x4889c7	                            mov rdi, rax	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x4003461	      0xe800000000	                          call 0x4003466	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x4003466	          0x4889c3	                            mov rbx, rax	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x4003469	      0xbf20000000	                           mov edi, 0x20	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x400346e	      0xe800000000	                          call 0x4003473	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x4003473	        0x48894308	                mov qword [rbx + 8], rax	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x4003477	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x400347b	          0x4889c7	                            mov rdi, rax	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x400347e	      0xe800000000	                          call 0x4003483	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4003483	        0x488b4008	                mov rax, qword [rax + 8]	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4003487	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x400348b	          0x488910	                    mov qword [rax], rdx	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x400348e	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4003492	        0x48895008	                mov qword [rax + 8], rdx	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4003496	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x400349a	        0x48895010	             mov qword [rax + 0x10], rdx	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x400349e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x40034a2	        0x48895018	             mov qword [rax + 0x18], rdx	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x40034a6	      0xe800000000	                          call 0x40034ab	      1918	obj-elf.c	FUNCTION_48	CALL_17
0x40034ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1919	obj-elf.c	FUNCTION_48
0x40034af	    0x644833042528	                xor rax, qword fs:[0x28]	      1919	obj-elf.c	FUNCTION_48
0x40034b8	            0x7405	                            je 0x40034bf	      1919	obj-elf.c	FUNCTION_48
0x40034ba	      0xe800000000	                          call 0x40034bf	      1919	obj-elf.c	FUNCTION_48
0x40034bf	        0x4883c468	                           add rsp, 0x68	      1919	obj-elf.c	FUNCTION_48
0x40034c3	              0x5b	                                 pop rbx	      1919	obj-elf.c	FUNCTION_48
0x40034c4	              0x5d	                                 pop rbp	      1919	obj-elf.c	FUNCTION_48
0x40034c5	              0xc3	                                     ret	      1919	obj-elf.c	FUNCTION_48
obj_elf_weak	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,4:DO,1:IF,2:WHILE,0	36
0x4000997	              0x55	                                push rbp	       450	obj-elf.c	FUNCTION_17
0x4000998	          0x4889e5	                            mov rbp, rsp	       450	obj-elf.c	FUNCTION_17
0x400099b	        0x4883ec20	                           sub rsp, 0x20	       450	obj-elf.c	FUNCTION_17
0x400099f	          0x897dec	             mov dword [rbp - 0x14], edi	       450	obj-elf.c	FUNCTION_17
0x40009a2	      0xe88bfeffff	call sym.get_sym_from_input_line_and_check	       456	obj-elf.c	FUNCTION_17	DO_1	CALL_1
0x40009a7	        0x488945f8	                mov qword [rbp - 8], rax	       456	obj-elf.c	FUNCTION_17	DO_1	CALL_1
0x40009ab	    0x488b05000000	            mov rax, qword [0x040009b2] 	       457	obj-elf.c	FUNCTION_17	DO_1
0x40009b2	           0xfb600	                   movzx eax, byte [rax]	       457	obj-elf.c	FUNCTION_17	DO_1
0x40009b5	           0xfbec0	                           movsx eax, al	       457	obj-elf.c	FUNCTION_17	DO_1
0x40009b8	          0x8945f4	              mov dword [rbp - 0xc], eax	       457	obj-elf.c	FUNCTION_17	DO_1
0x40009bb	        0x488b45f8	                mov rax, qword [rbp - 8]	       458	obj-elf.c	FUNCTION_17	DO_1	CALL_2
0x40009bf	          0x4889c7	                            mov rdi, rax	       458	obj-elf.c	FUNCTION_17	DO_1	CALL_2
0x40009c2	      0xe800000000	                          call 0x40009c7	       458	obj-elf.c	FUNCTION_17	DO_1	CALL_2
0x40009c7	        0x837df42c	            cmp dword [rbp - 0xc], 0x2c 	       459	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x40009cb	            0x7547	                           jne 0x4000a14	       459	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x40009cd	    0x488b05000000	            mov rax, qword [0x040009d4] 	       461	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x40009d4	        0x4883c001	                              add rax, 1	       461	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x40009d8	    0x488905000000	            mov qword [0x040009df], rax 	       461	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x40009df	    0x488b05000000	            mov rax, qword [0x040009e6] 	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x40009e6	           0xfb600	                   movzx eax, byte [rax]	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x40009e9	            0x3c20	                            cmp al, 0x20	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x40009eb	            0x7512	                           jne 0x40009ff	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x40009ed	    0x488b05000000	            mov rax, qword [0x040009f4] 	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x40009f4	        0x4883c001	                              add rax, 1	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x40009f8	    0x488905000000	            mov qword [0x040009ff], rax 	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x40009ff	    0x488b05000000	            mov rax, qword [0x04000a06] 	       463	obj-elf.c	FUNCTION_17	DO_1	IF_1	IF_2
0x4000a06	           0xfb600	                   movzx eax, byte [rax]	       463	obj-elf.c	FUNCTION_17	DO_1	IF_1	IF_2
0x4000a09	            0x3c0a	                             cmp al, 0xa	       463	obj-elf.c	FUNCTION_17	DO_1	IF_1	IF_2
0x4000a0b	            0x7507	                           jne 0x4000a14	       463	obj-elf.c	FUNCTION_17	DO_1	IF_1	IF_2
0x4000a0d	    0xc745f40a0000	              mov dword [rbp - 0xc], 0xa	       464	obj-elf.c	FUNCTION_17	DO_1	IF_1	IF_2
0x4000a14	        0x837df42c	            cmp dword [rbp - 0xc], 0x2c 	       467	obj-elf.c	FUNCTION_17
0x4000a18	            0x7488	                            je 0x40009a2	       467	obj-elf.c	FUNCTION_17
0x4000a1a	      0xe800000000	                          call 0x4000a1f	       468	obj-elf.c	FUNCTION_17	CALL_4
0x4000a1f	              0x90	                                     nop	       469	obj-elf.c	FUNCTION_17
0x4000a20	              0xc9	                                   leave	       469	obj-elf.c	FUNCTION_17
0x4000a21	              0xc3	                                     ret	       469	obj-elf.c	FUNCTION_17
elf_pop_insert	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,2:DO,0:IF,1:WHILE,0	7
0x4000145	              0x55	                                push rbp	       213	obj-elf.c	FUNCTION_2
0x4000146	          0x4889e5	                            mov rbp, rsp	       213	obj-elf.c	FUNCTION_2
0x4000149	      0xbf00000000	                              mov edi, 0	       214	obj-elf.c	FUNCTION_2	CALL_1
0x400014e	      0xe800000000	                          call 0x4000153	       214	obj-elf.c	FUNCTION_2	CALL_1
0x4000153	              0x90	                                     nop	       217	obj-elf.c	FUNCTION_2
0x4000154	              0x5d	                                 pop rbp	       217	obj-elf.c	FUNCTION_2
0x4000155	              0xc3	                                     ret	       217	obj-elf.c	FUNCTION_2
obj_elf_vtable_inherit	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:DO,0:IF,0:WHILE,0	8
0x4002920	              0x55	                                push rbp	      1526	obj-elf.c	FUNCTION_36
0x4002921	          0x4889e5	                            mov rbp, rsp	      1526	obj-elf.c	FUNCTION_36
0x4002924	        0x4883ec10	                           sub rsp, 0x10	      1526	obj-elf.c	FUNCTION_36
0x4002928	          0x897dfc	                mov dword [rbp - 4], edi	      1526	obj-elf.c	FUNCTION_36
0x400292b	      0xe800000000	                          call 0x4002930	      1527	obj-elf.c	FUNCTION_36	CALL_1
0x4002930	              0x90	                                     nop	      1528	obj-elf.c	FUNCTION_36
0x4002931	              0xc9	                                   leave	      1528	obj-elf.c	FUNCTION_36
0x4002932	              0xc3	                                     ret	      1528	obj-elf.c	FUNCTION_36
record_attribute	FOR,1:SWITCH,0:functions,0:ELSE,0:CALL,1:DO,0:IF,1:WHILE,0	57
0x4002a62	              0x55	                                push rbp	      1603	obj-elf.c	ELSE_1	FUNCTION_40
0x4002a63	          0x4889e5	                            mov rbp, rsp	      1603	obj-elf.c	ELSE_1	FUNCTION_40
0x4002a66	        0x4883ec30	                           sub rsp, 0x30	      1603	obj-elf.c	ELSE_1	FUNCTION_40
0x4002a6a	          0x897ddc	             mov dword [rbp - 0x24], edi	      1603	obj-elf.c	ELSE_1	FUNCTION_40
0x4002a6d	          0x8975d8	             mov dword [rbp - 0x28], esi	      1603	obj-elf.c	ELSE_1	FUNCTION_40
0x4002a70	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1608	obj-elf.c	ELSE_1	FUNCTION_40
0x4002a73	          0xc1e806	                              shr eax, 6	      1608	obj-elf.c	ELSE_1	FUNCTION_40
0x4002a76	          0x8945ec	             mov dword [rbp - 0x14], eax	      1608	obj-elf.c	ELSE_1	FUNCTION_40
0x4002a79	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1609	obj-elf.c	ELSE_1	FUNCTION_40
0x4002a7c	          0x83e03f	                           and eax, 0x3f	      1609	obj-elf.c	ELSE_1	FUNCTION_40
0x4002a7f	      0xba01000000	                              mov edx, 1	      1609	obj-elf.c	ELSE_1	FUNCTION_40
0x4002a84	            0x89c1	                            mov ecx, eax	      1609	obj-elf.c	ELSE_1	FUNCTION_40
0x4002a86	          0x48d3e2	                             shl rdx, cl	      1609	obj-elf.c	ELSE_1	FUNCTION_40
0x4002a89	          0x4889d0	                            mov rax, rdx	      1609	obj-elf.c	ELSE_1	FUNCTION_40
0x4002a8c	        0x488945f8	                mov qword [rbp - 8], rax	      1609	obj-elf.c	ELSE_1	FUNCTION_40
0x4002a90	    0x488b05000000	            mov rax, qword [0x04002a97] 	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4002a97	        0x488945f0	             mov qword [rbp - 0x10], rax	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4002a9b	            0xeb3c	                           jmp 0x4002ad9	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4002a9d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1611	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4002aa1	          0x8b4008	                mov eax, dword [rax + 8]	      1611	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4002aa4	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      1611	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4002aa7	            0x7525	                           jne 0x4002ace	      1611	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4002aa9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1611	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4002aad	          0x8b400c	              mov eax, dword [rax + 0xc]	      1611	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4002ab0	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1611	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4002ab3	            0x7519	                           jne 0x4002ace	      1611	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4002ab5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1613	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4002ab9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1613	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4002abd	        0x480b45f8	                 or rax, qword [rbp - 8]	      1613	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4002ac1	          0x4889c2	                            mov rdx, rax	      1613	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4002ac4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1613	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4002ac8	        0x48895010	             mov qword [rax + 0x10], rdx	      1613	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4002acc	            0xeb59	                           jmp 0x4002b27	      1614	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4002ace	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4002ad2	          0x488b00	                    mov rax, qword [rax]	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4002ad5	        0x488945f0	             mov qword [rbp - 0x10], rax	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4002ad9	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4002ade	            0x75bd	                           jne 0x4002a9d	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4002ae0	      0xbf18000000	                           mov edi, 0x18	      1617	obj-elf.c	ELSE_1	FUNCTION_40	CALL_1
0x4002ae5	      0xe800000000	                          call 0x4002aea	      1617	obj-elf.c	ELSE_1	FUNCTION_40	CALL_1
0x4002aea	        0x488945f0	             mov qword [rbp - 0x10], rax	      1617	obj-elf.c	ELSE_1	FUNCTION_40	CALL_1
0x4002aee	    0x488b15000000	            mov rdx, qword [0x04002af5] 	      1618	obj-elf.c	ELSE_1	FUNCTION_40
0x4002af5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1618	obj-elf.c	ELSE_1	FUNCTION_40
0x4002af9	          0x488910	                    mov qword [rax], rdx	      1618	obj-elf.c	ELSE_1	FUNCTION_40
0x4002afc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1619	obj-elf.c	ELSE_1	FUNCTION_40
0x4002b00	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1619	obj-elf.c	ELSE_1	FUNCTION_40
0x4002b03	          0x895008	                mov dword [rax + 8], edx	      1619	obj-elf.c	ELSE_1	FUNCTION_40
0x4002b06	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1620	obj-elf.c	ELSE_1	FUNCTION_40
0x4002b0a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1620	obj-elf.c	ELSE_1	FUNCTION_40
0x4002b0d	          0x89500c	              mov dword [rax + 0xc], edx	      1620	obj-elf.c	ELSE_1	FUNCTION_40
0x4002b10	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1621	obj-elf.c	ELSE_1	FUNCTION_40
0x4002b14	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1621	obj-elf.c	ELSE_1	FUNCTION_40
0x4002b18	        0x48895010	             mov qword [rax + 0x10], rdx	      1621	obj-elf.c	ELSE_1	FUNCTION_40
0x4002b1c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1622	obj-elf.c	ELSE_1	FUNCTION_40
0x4002b20	    0x488905000000	            mov qword [0x04002b27], rax 	      1622	obj-elf.c	ELSE_1	FUNCTION_40
0x4002b27	              0xc9	                                   leave	      1623	obj-elf.c	ELSE_1	FUNCTION_40
0x4002b28	              0xc3	                                     ret	      1623	obj-elf.c	ELSE_1	FUNCTION_40
elf_file_symbol	FOR,0:SWITCH,0:functions,0:ELSE,1:CALL,15:DO,0:IF,3:WHILE,0	172
0x400024c	              0x55	                                push rbp	       263	obj-elf.c	FUNCTION_10
0x400024d	          0x4889e5	                            mov rbp, rsp	       263	obj-elf.c	FUNCTION_10
0x4000250	        0x4883ec50	                           sub rsp, 0x50	       263	obj-elf.c	FUNCTION_10
0x4000254	        0x48897db8	             mov qword [rbp - 0x48], rdi	       263	obj-elf.c	FUNCTION_10
0x4000258	          0x8975b4	             mov dword [rbp - 0x4c], esi	       263	obj-elf.c	FUNCTION_10
0x400025b	        0x837db400	               cmp dword [rbp - 0x4c], 0	       264	obj-elf.c	FUNCTION_10	IF_1
0x400025f	            0x7437	                            je 0x4000298	       264	obj-elf.c	FUNCTION_10	IF_1
0x4000261	    0x488b05000000	            mov rax, qword [0x04000268] 	       265	obj-elf.c	FUNCTION_10	IF_1
0x4000268	          0x4885c0	                           test rax, rax	       265	obj-elf.c	FUNCTION_10	IF_1
0x400026b	            0x742b	                            je 0x4000298	       265	obj-elf.c	FUNCTION_10	IF_1
0x400026d	    0x488b05000000	            mov rax, qword [0x04000274] 	       266	obj-elf.c	FUNCTION_10	IF_1
0x4000274	        0x488b4008	                mov rax, qword [rax + 8]	       266	obj-elf.c	FUNCTION_10	IF_1
0x4000278	          0x4885c0	                           test rax, rax	       266	obj-elf.c	FUNCTION_10	IF_1
0x400027b	            0x741b	                            je 0x4000298	       266	obj-elf.c	FUNCTION_10	IF_1
0x400027d	    0x488b05000000	            mov rax, qword [0x04000284] 	       267	obj-elf.c	FUNCTION_10	IF_1
0x4000284	        0x488b4008	                mov rax, qword [rax + 8]	       267	obj-elf.c	FUNCTION_10	IF_1
0x4000288	          0x8b4018	            mov eax, dword [rax + 0x18] 	       267	obj-elf.c	FUNCTION_10	IF_1
0x400028b	      0x2500400000	                         and eax, 0x4000	       267	obj-elf.c	FUNCTION_10	IF_1
0x4000290	            0x85c0	                           test eax, eax	       267	obj-elf.c	FUNCTION_10	IF_1
0x4000292	     0xf8546020000	                           jne 0x40004de	       267	obj-elf.c	FUNCTION_10	IF_1
0x4000298	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x400029c	      0xb900000000	                              mov ecx, 0	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x40002a1	      0xba00000000	                              mov edx, 0	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x40002a6	      0xbe00000000	                              mov esi, 0	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x40002ab	          0x4889c7	                            mov rdi, rax	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x40002ae	      0xe800000000	                          call 0x40002b3	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x40002b3	        0x488945c8	             mov qword [rbp - 0x38], rax	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x40002b7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       273	obj-elf.c	FUNCTION_10	IF_1	CALL_2
0x40002bb	      0xbe00000000	                              mov esi, 0	       273	obj-elf.c	FUNCTION_10	IF_1	CALL_2
0x40002c0	          0x4889c7	                            mov rdi, rax	       273	obj-elf.c	FUNCTION_10	IF_1	CALL_2
0x40002c3	      0xe800000000	                          call 0x40002c8	       273	obj-elf.c	FUNCTION_10	IF_1	CALL_2
0x40002c8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       275	obj-elf.c	FUNCTION_10	IF_1	CALL_3
0x40002cc	          0x4889c7	                            mov rdi, rax	       275	obj-elf.c	FUNCTION_10	IF_1	CALL_3
0x40002cf	      0xe800000000	                          call 0x40002d4	       275	obj-elf.c	FUNCTION_10	IF_1	CALL_3
0x40002d4	        0x488945d0	             mov qword [rbp - 0x30], rax	       275	obj-elf.c	FUNCTION_10	IF_1	CALL_3
0x40002d8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x40002dc	          0x4889c7	                            mov rdi, rax	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x40002df	      0xe800000000	                          call 0x40002e4	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x40002e4	          0x4889c7	                            mov rdi, rax	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x40002e7	      0xe800000000	                          call 0x40002ec	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x40002ec	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x40002f0	     0xf834e010000	                           jae 0x4000444	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x40002f6	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x40002fe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000302	        0x4883c001	                              add rax, 1	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000306	        0x488945e0	             mov qword [rbp - 0x20], rax	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400030a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400030e	        0x488945e8	             mov qword [rbp - 0x18], rax	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000312	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000316	        0x488b4020	            mov rax, qword [rax + 0x20] 	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400031a	          0x4889c2	                            mov rdx, rax	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400031d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000321	        0x488b4018	            mov rax, qword [rax + 0x18] 	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000325	          0x4829c2	                            sub rdx, rax	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000328	          0x4889d0	                            mov rax, rdx	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400032b	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400032f	            0x7313	                           jae 0x4000344	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000331	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000335	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000339	          0x4889d6	                            mov rsi, rdx	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400033c	          0x4889c7	                            mov rdi, rax	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400033f	      0xe800000000	                          call 0x4000344	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000344	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000348	        0x488b4018	            mov rax, qword [rax + 0x18] 	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400034c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000350	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000354	          0x4889ce	                            mov rsi, rcx	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000357	          0x4889c7	                            mov rdi, rax	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400035a	      0xe800000000	                          call 0x400035f	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400035f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000363	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000367	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400036b	          0x4801c2	                            add rdx, rax	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400036e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000372	        0x48895018	             mov qword [rax + 0x18], rdx	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000376	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400037e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000382	        0x488b4010	            mov rax, qword [rax + 0x10] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000386	        0x488945f8	                mov qword [rbp - 8], rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400038a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400038e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000392	        0x483b45f8	                cmp rax, qword [rbp - 8]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000396	            0x750e	                           jne 0x40003a6	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000398	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400039c	         0xfb65050	           movzx edx, byte [rax + 0x50] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003a0	          0x83ca02	                               or edx, 2	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003a3	          0x885050	               mov byte [rax + 0x50], dl	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003a6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003aa	        0x488b4018	            mov rax, qword [rax + 0x18] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003ae	          0x4889c2	                            mov rdx, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003b1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003b5	        0x488b4030	            mov rax, qword [rax + 0x30] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003b9	          0x4801c2	                            add rdx, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003bc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003c0	        0x488b4030	            mov rax, qword [rax + 0x30] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003c4	          0x48f7d0	                                 not rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003c7	          0x4821d0	                            and rax, rdx	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003ca	          0x4889c2	                            mov rdx, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003d1	        0x48895018	             mov qword [rax + 0x18], rdx	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003d5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003d9	        0x488b4018	            mov rax, qword [rax + 0x18] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003dd	          0x4889c2	                            mov rdx, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003e4	        0x488b4008	                mov rax, qword [rax + 8]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003e8	          0x4829c2	                            sub rdx, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003eb	          0x4889d0	                            mov rax, rdx	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003ee	          0x4889c2	                            mov rdx, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003f1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003f5	        0x488b4020	            mov rax, qword [rax + 0x20] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003f9	          0x4889c1	                            mov rcx, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40003fc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000400	        0x488b4008	                mov rax, qword [rax + 8]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000404	          0x4829c1	                            sub rcx, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000407	          0x4889c8	                            mov rax, rcx	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400040a	          0x4839c2	                            cmp rdx, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400040d	            0x7610	                           jbe 0x400041f	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400040f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000413	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000417	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400041b	        0x48895018	             mov qword [rax + 0x18], rdx	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400041f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000423	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000427	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400042b	        0x48895010	             mov qword [rax + 0x10], rdx	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400042f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000433	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000437	          0x4889d6	                            mov rsi, rdx	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400043a	          0x4889c7	                            mov rdi, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400043d	      0xe800000000	                          call 0x4000442	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000442	            0xeb1e	                           jmp 0x4000462	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000444	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       282	obj-elf.c	FUNCTION_10	IF_1	CALL_10
0x4000448	          0x4889c7	                            mov rdi, rax	       282	obj-elf.c	FUNCTION_10	IF_1	CALL_10
0x400044b	      0xe800000000	                          call 0x4000450	       282	obj-elf.c	FUNCTION_10	IF_1	CALL_10
0x4000450	          0x4889c2	                            mov rdx, rax	       282	obj-elf.c	FUNCTION_10	IF_1	CALL_10
0x4000453	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       282	obj-elf.c	FUNCTION_10	IF_1	CALL_10
0x4000457	          0x4889c6	                            mov rsi, rax	       282	obj-elf.c	FUNCTION_10	IF_1	CALL_10
0x400045a	          0x4889d7	                            mov rdi, rdx	       282	obj-elf.c	FUNCTION_10	IF_1	CALL_10
0x400045d	      0xe800000000	                          call 0x4000462	       282	obj-elf.c	FUNCTION_10	IF_1	CALL_10
0x4000462	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       284	obj-elf.c	FUNCTION_10	IF_1	CALL_11
0x4000466	          0x4889c7	                            mov rdi, rax	       284	obj-elf.c	FUNCTION_10	IF_1	CALL_11
0x4000469	      0xe800000000	                          call 0x400046e	       284	obj-elf.c	FUNCTION_10	IF_1	CALL_11
0x400046e	          0x8b5018	            mov edx, dword [rax + 0x18] 	       284	obj-elf.c	FUNCTION_10	IF_1	CALL_11
0x4000471	          0x80ce40	                             or dh, 0x40	       284	obj-elf.c	FUNCTION_10	IF_1	CALL_11
0x4000474	          0x895018	             mov dword [rax + 0x18], edx	       284	obj-elf.c	FUNCTION_10	IF_1	CALL_11
0x4000477	    0x488b05000000	            mov rax, qword [0x0400047e] 	       286	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x400047e	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       286	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x4000482	            0x745a	                            je 0x40004de	       286	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x4000484	    0x488b05000000	            mov rax, qword [0x0400048b] 	       287	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x400048b	        0x488b4008	                mov rax, qword [rax + 8]	       287	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x400048f	          0x4885c0	                           test rax, rax	       287	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x4000492	            0x7417	                            je 0x40004ab	       287	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x4000494	    0x488b05000000	            mov rax, qword [0x0400049b] 	       288	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x400049b	        0x488b4008	                mov rax, qword [rax + 8]	       288	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x400049f	          0x8b4018	            mov eax, dword [rax + 0x18] 	       288	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40004a2	      0x2500400000	                         and eax, 0x4000	       288	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40004a7	            0x85c0	                           test eax, eax	       288	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40004a9	            0x7533	                           jne 0x40004de	       288	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40004ab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       290	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_12
0x40004af	      0xba00000000	                              mov edx, 0	       290	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_12
0x40004b4	      0xbe00000000	                              mov esi, 0	       290	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_12
0x40004b9	          0x4889c7	                            mov rdi, rax	       290	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_12
0x40004bc	      0xe800000000	                          call 0x40004c1	       290	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_12
0x40004c1	    0x488b35000000	            mov rsi, qword [0x040004c8] 	       291	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_13
0x40004c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       291	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_13
0x40004cc	      0xb900000000	                              mov ecx, 0	       291	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_13
0x40004d1	      0xba00000000	                              mov edx, 0	       291	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_13
0x40004d6	          0x4889c7	                            mov rdi, rax	       291	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_13
0x40004d9	      0xe800000000	                          call 0x40004de	       291	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_13
0x40004de	              0x90	                                     nop	       302	obj-elf.c	FUNCTION_10
0x40004df	              0xc9	                                   leave	       302	obj-elf.c	FUNCTION_10
0x40004e0	              0xc3	                                     ret	       302	obj-elf.c	FUNCTION_10
adjust_stab_sections	FOR,0:SWITCH,0:functions,0:ELSE,1:CALL,7:DO,0:IF,3:WHILE,0	98
0x4003c24	              0x55	                                push rbp	      2141	obj-elf.c	FUNCTION_53
0x4003c25	          0x4889e5	                            mov rbp, rsp	      2141	obj-elf.c	FUNCTION_53
0x4003c28	              0x53	                                push rbx	      2141	obj-elf.c	FUNCTION_53
0x4003c29	        0x4883ec48	                           sub rsp, 0x48	      2141	obj-elf.c	FUNCTION_53
0x4003c2d	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2141	obj-elf.c	FUNCTION_53
0x4003c31	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2141	obj-elf.c	FUNCTION_53
0x4003c35	        0x488955b8	             mov qword [rbp - 0x48], rdx	      2141	obj-elf.c	FUNCTION_53
0x4003c39	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x4003c3d	          0x488b00	                    mov rax, qword [rax]	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x4003c40	      0xba05000000	                              mov edx, 5	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x4003c45	          0x4889c6	                            mov rsi, rax	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x4003c48	      0xbf00000000	                              mov edi, 0	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x4003c4d	      0xe800000000	                          call 0x4003c52	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x4003c52	            0x85c0	                           test eax, eax	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x4003c54	     0xf852e010000	                           jne 0x4003d88	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x4003c5a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4003c5e	          0x488b18	                    mov rbx, qword [rax]	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4003c61	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4003c65	          0x488b00	                    mov rax, qword [rax]	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4003c68	          0x4889c7	                            mov rdi, rax	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4003c6b	      0xe800000000	                          call 0x4003c70	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4003c70	        0x4883e803	                              sub rax, 3	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4003c74	          0x4801d8	                            add rax, rbx	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4003c77	          0x4889c6	                            mov rsi, rax	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4003c7a	      0xbf00000000	                              mov edi, 0	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4003c7f	      0xe800000000	                          call 0x4003c84	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4003c84	            0x85c0	                           test eax, eax	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4003c86	     0xf84ff000000	                            je 0x4003d8b	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4003c8c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x4003c90	          0x488b00	                    mov rax, qword [rax]	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x4003c93	      0xba00000000	                              mov edx, 0	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x4003c98	      0xbe00000000	                              mov esi, 0	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x4003c9d	          0x4889c7	                            mov rdi, rax	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x4003ca0	      0xb800000000	                              mov eax, 0	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x4003ca5	      0xe800000000	                          call 0x4003caa	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x4003caa	        0x488945d8	             mov qword [rbp - 0x28], rax	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x4003cae	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2153	obj-elf.c	FUNCTION_53	CALL_5
0x4003cb2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2153	obj-elf.c	FUNCTION_53	CALL_5
0x4003cb6	          0x4889d6	                            mov rsi, rdx	      2153	obj-elf.c	FUNCTION_53	CALL_5
0x4003cb9	          0x4889c7	                            mov rdi, rax	      2153	obj-elf.c	FUNCTION_53	CALL_5
0x4003cbc	      0xe800000000	                          call 0x4003cc1	      2153	obj-elf.c	FUNCTION_53	CALL_5
0x4003cc1	        0x488945e0	             mov qword [rbp - 0x20], rax	      2153	obj-elf.c	FUNCTION_53	CALL_5
0x4003cc5	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2154	obj-elf.c	FUNCTION_53	IF_3
0x4003cca	            0x740d	                            je 0x4003cd9	      2154	obj-elf.c	FUNCTION_53	IF_3
0x4003ccc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2155	obj-elf.c	FUNCTION_53	IF_3
0x4003cd0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2155	obj-elf.c	FUNCTION_53	IF_3
0x4003cd4	          0x8945d0	             mov dword [rbp - 0x30], eax	      2155	obj-elf.c	FUNCTION_53	IF_3
0x4003cd7	            0xeb07	                           jmp 0x4003ce0	      2155	obj-elf.c	FUNCTION_53	IF_3
0x4003cd9	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      2157	obj-elf.c	FUNCTION_53	ELSE_1
0x4003ce0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2158	obj-elf.c	FUNCTION_53
0x4003ce4	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2158	obj-elf.c	FUNCTION_53
0x4003ce8	    0x48baabaaaaaa	          movabs rdx, 0xaaaaaaaaaaaaaaab	      2158	obj-elf.c	FUNCTION_53
0x4003cf2	          0x48f7e2	                                 mul rdx	      2158	obj-elf.c	FUNCTION_53
0x4003cf5	          0x4889d0	                            mov rax, rdx	      2158	obj-elf.c	FUNCTION_53
0x4003cf8	        0x48c1e803	                              shr rax, 3	      2158	obj-elf.c	FUNCTION_53
0x4003cfc	          0x83e801	                              sub eax, 1	      2158	obj-elf.c	FUNCTION_53
0x4003cff	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2158	obj-elf.c	FUNCTION_53
0x4003d02	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2160	obj-elf.c	FUNCTION_53	CALL_6
0x4003d06	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      2160	obj-elf.c	FUNCTION_53	CALL_6
0x4003d0d	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2160	obj-elf.c	FUNCTION_53	CALL_6
0x4003d11	        0x488945e8	             mov qword [rbp - 0x18], rax	      2160	obj-elf.c	FUNCTION_53	CALL_6
0x4003d15	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2161	obj-elf.c	FUNCTION_53
0x4003d1a	            0x7514	                           jne 0x4003d30	      2161	obj-elf.c	FUNCTION_53
0x4003d1c	      0xba00000000	                              mov edx, 0	      2161	obj-elf.c	FUNCTION_53
0x4003d21	      0xbe71080000	                          mov esi, 0x871	      2161	obj-elf.c	FUNCTION_53
0x4003d26	      0xbf00000000	                              mov edi, 0	      2161	obj-elf.c	FUNCTION_53
0x4003d2b	      0xe800000000	                          call 0x4003d30	      2161	obj-elf.c	FUNCTION_53
0x4003d30	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2163	obj-elf.c	FUNCTION_53
0x4003d34	        0x488b4008	                mov rax, qword [rax + 8]	      2163	obj-elf.c	FUNCTION_53
0x4003d38	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      2163	obj-elf.c	FUNCTION_53
0x4003d3f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2163	obj-elf.c	FUNCTION_53
0x4003d43	        0x488d4a06	                      lea rcx, [rdx + 6]	      2163	obj-elf.c	FUNCTION_53
0x4003d47	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2163	obj-elf.c	FUNCTION_53
0x4003d4a	          0x4863d2	                         movsxd rdx, edx	      2163	obj-elf.c	FUNCTION_53
0x4003d4d	          0x4889ce	                            mov rsi, rcx	      2163	obj-elf.c	FUNCTION_53
0x4003d50	          0x4889d7	                            mov rdi, rdx	      2163	obj-elf.c	FUNCTION_53
0x4003d53	            0xffd0	                                call rax	      2163	obj-elf.c	FUNCTION_53
0x4003d55	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2164	obj-elf.c	FUNCTION_53
0x4003d59	        0x488b4008	                mov rax, qword [rax + 8]	      2164	obj-elf.c	FUNCTION_53
0x4003d5d	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      2164	obj-elf.c	FUNCTION_53
0x4003d64	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2164	obj-elf.c	FUNCTION_53
0x4003d68	        0x488d4a08	                      lea rcx, [rdx + 8]	      2164	obj-elf.c	FUNCTION_53
0x4003d6c	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      2164	obj-elf.c	FUNCTION_53
0x4003d6f	          0x4863d2	                         movsxd rdx, edx	      2164	obj-elf.c	FUNCTION_53
0x4003d72	          0x4889ce	                            mov rsi, rcx	      2164	obj-elf.c	FUNCTION_53
0x4003d75	          0x4889d7	                            mov rdi, rdx	      2164	obj-elf.c	FUNCTION_53
0x4003d78	            0xffd0	                                call rax	      2164	obj-elf.c	FUNCTION_53
0x4003d7a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2165	obj-elf.c	FUNCTION_53	CALL_7
0x4003d7e	          0x4889c7	                            mov rdi, rax	      2165	obj-elf.c	FUNCTION_53	CALL_7
0x4003d81	      0xe800000000	                          call 0x4003d86	      2165	obj-elf.c	FUNCTION_53	CALL_7
0x4003d86	            0xeb04	                           jmp 0x4003d8c	      2165	obj-elf.c	FUNCTION_53	CALL_7
0x4003d88	              0x90	                                     nop	      2148	obj-elf.c	FUNCTION_53	IF_1
0x4003d89	            0xeb01	                           jmp 0x4003d8c	      2148	obj-elf.c	FUNCTION_53	IF_1
0x4003d8b	              0x90	                                     nop	      2150	obj-elf.c	FUNCTION_53	IF_2
0x4003d8c	        0x4883c448	                           add rsp, 0x48	      2166	obj-elf.c	FUNCTION_53
0x4003d90	              0x5b	                                 pop rbx	      2166	obj-elf.c	FUNCTION_53
0x4003d91	              0x5d	                                 pop rbp	      2166	obj-elf.c	FUNCTION_53
0x4003d92	              0xc3	                                     ret	      2166	obj-elf.c	FUNCTION_53
obj_elf_symver	FOR,0:SWITCH,0:functions,0:ELSE,1:CALL,31:DO,0:IF,5:WHILE,0	149
0x4002435	              0x55	                                push rbp	      1387	obj-elf.c	FUNCTION_34
0x4002436	          0x4889e5	                            mov rbp, rsp	      1387	obj-elf.c	FUNCTION_34
0x4002439	            0x4155	                                push r13	      1387	obj-elf.c	FUNCTION_34
0x400243b	            0x4154	                                push r12	      1387	obj-elf.c	FUNCTION_34
0x400243d	              0x53	                                push rbx	      1387	obj-elf.c	FUNCTION_34
0x400243e	        0x4883ec38	                           sub rsp, 0x38	      1387	obj-elf.c	FUNCTION_34
0x4002442	          0x897dbc	             mov dword [rbp - 0x44], edi	      1387	obj-elf.c	FUNCTION_34
0x4002445	    0x64488b042528	                mov rax, qword fs:[0x28]	      1387	obj-elf.c	FUNCTION_34
0x400244e	        0x488945d8	             mov qword [rbp - 0x28], rax	      1387	obj-elf.c	FUNCTION_34
0x4002452	            0x31c0	                            xor eax, eax	      1387	obj-elf.c	FUNCTION_34
0x4002454	      0xe8d9e3ffff	call sym.get_sym_from_input_line_and_check	      1393	obj-elf.c	FUNCTION_34	CALL_1
0x4002459	        0x488945d0	             mov qword [rbp - 0x30], rax	      1393	obj-elf.c	FUNCTION_34	CALL_1
0x400245d	    0x488b05000000	            mov rax, qword [0x04002464] 	      1395	obj-elf.c	FUNCTION_34	IF_1
0x4002464	           0xfb600	                   movzx eax, byte [rax]	      1395	obj-elf.c	FUNCTION_34	IF_1
0x4002467	            0x3c2c	                            cmp al, 0x2c	      1395	obj-elf.c	FUNCTION_34	IF_1
0x4002469	            0x7421	                            je 0x400248c	      1395	obj-elf.c	FUNCTION_34	IF_1
0x400246b	      0xbf00000000	                              mov edi, 0	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x4002470	      0xe800000000	                          call 0x4002475	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x4002475	          0x4889c7	                            mov rdi, rax	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x4002478	      0xb800000000	                              mov eax, 0	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x400247d	      0xe800000000	                          call 0x4002482	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x4002482	      0xe800000000	                          call 0x4002487	      1398	obj-elf.c	FUNCTION_34	IF_1	CALL_4
0x4002487	      0xe9d8010000	                           jmp 0x4002664	      1399	obj-elf.c	FUNCTION_34	IF_1
0x400248c	    0x488b05000000	            mov rax, qword [0x04002493] 	      1402	obj-elf.c	FUNCTION_34
0x4002493	        0x4883c001	                              add rax, 1	      1402	obj-elf.c	FUNCTION_34
0x4002497	    0x488905000000	            mov qword [0x0400249e], rax 	      1402	obj-elf.c	FUNCTION_34
0x400249e	    0x488b05000000	            mov rax, qword [0x040024a5] 	      1403	obj-elf.c	FUNCTION_34	CALL_5
0x40024a5	           0xfb600	                   movzx eax, byte [rax]	      1403	obj-elf.c	FUNCTION_34	CALL_5
0x40024a8	            0x3c20	                            cmp al, 0x20	      1403	obj-elf.c	FUNCTION_34	CALL_5
0x40024aa	            0x7512	                           jne 0x40024be	      1403	obj-elf.c	FUNCTION_34	CALL_5
0x40024ac	    0x488b05000000	            mov rax, qword [0x040024b3] 	      1403	obj-elf.c	FUNCTION_34	CALL_5
0x40024b3	        0x4883c001	                              add rax, 1	      1403	obj-elf.c	FUNCTION_34	CALL_5
0x40024b7	    0x488905000000	            mov qword [0x040024be], rax 	      1403	obj-elf.c	FUNCTION_34	CALL_5
0x40024be	     0xfb605000000	           movzx eax, byte [0x040024c5] 	      1406	obj-elf.c	FUNCTION_34
0x40024c5	          0x8845c6	               mov byte [rbp - 0x3a], al	      1406	obj-elf.c	FUNCTION_34
0x40024c8	     0xfb605000000	           movzx eax, byte [0x040024cf] 	      1407	obj-elf.c	FUNCTION_34
0x40024cf	          0x83c801	                               or eax, 1	      1407	obj-elf.c	FUNCTION_34
0x40024d2	    0x880500000000	               mov byte [0x040024d8], al	      1407	obj-elf.c	FUNCTION_34
0x40024d8	        0x488d45c8	                   lea rax, [rbp - 0x38]	      1408	obj-elf.c	FUNCTION_34	CALL_6
0x40024dc	          0x4889c7	                            mov rdi, rax	      1408	obj-elf.c	FUNCTION_34	CALL_6
0x40024df	      0xe800000000	                          call 0x40024e4	      1408	obj-elf.c	FUNCTION_34	CALL_6
0x40024e4	          0x8845c7	               mov byte [rbp - 0x39], al	      1408	obj-elf.c	FUNCTION_34	CALL_6
0x40024e7	         0xfb645c6	            movzx eax, byte [rbp - 0x3a]	      1409	obj-elf.c	FUNCTION_34
0x40024eb	    0x880500000000	               mov byte [0x040024f1], al	      1409	obj-elf.c	FUNCTION_34
0x40024f1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1411	obj-elf.c	FUNCTION_34	IF_2	CALL_7
0x40024f5	          0x4889c7	                            mov rdi, rax	      1411	obj-elf.c	FUNCTION_34	IF_2	CALL_7
0x40024f8	      0xe800000000	                          call 0x40024fd	      1411	obj-elf.c	FUNCTION_34	IF_2	CALL_7
0x40024fd	            0x85c0	                           test eax, eax	      1411	obj-elf.c	FUNCTION_34	IF_2	CALL_7
0x40024ff	            0x743a	                            je 0x400253b	      1411	obj-elf.c	FUNCTION_34	IF_2	CALL_7
0x4002501	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x4002505	          0x4889c7	                            mov rdi, rax	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x4002508	      0xe800000000	                          call 0x400250d	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x400250d	          0x4989c4	                            mov r12, rax	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x4002510	        0x488b5dc8	             mov rbx, qword [rbp - 0x38]	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x4002514	      0xbf00000000	                              mov edi, 0	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x4002519	      0xe800000000	                          call 0x400251e	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x400251e	          0x4c89e2	                            mov rdx, r12	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x4002521	          0x4889de	                            mov rsi, rbx	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x4002524	          0x4889c7	                            mov rdi, rax	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x4002527	      0xb800000000	                              mov eax, 0	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x400252c	      0xe800000000	                          call 0x4002531	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x4002531	      0xe800000000	                          call 0x4002536	      1415	obj-elf.c	FUNCTION_34	IF_2	CALL_11
0x4002536	      0xe929010000	                           jmp 0x4002664	      1416	obj-elf.c	FUNCTION_34	IF_2
0x400253b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1419	obj-elf.c	FUNCTION_34	IF_3	CALL_12
0x400253f	          0x4889c7	                            mov rdi, rax	      1419	obj-elf.c	FUNCTION_34	IF_3	CALL_12
0x4002542	      0xe800000000	                          call 0x4002547	      1419	obj-elf.c	FUNCTION_34	IF_3	CALL_12
0x4002547	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1419	obj-elf.c	FUNCTION_34	IF_3	CALL_12
0x400254b	          0x4885c0	                           test rax, rax	      1419	obj-elf.c	FUNCTION_34	IF_3	CALL_12
0x400254e	     0xf8593000000	                           jne 0x40025e7	      1419	obj-elf.c	FUNCTION_34	IF_3	CALL_12
0x4002554	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x4002558	          0x4889c7	                            mov rdi, rax	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x400255b	      0xe800000000	                          call 0x4002560	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x4002560	          0x4889c3	                            mov rbx, rax	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x4002563	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x4002567	          0x4889c7	                            mov rdi, rax	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x400256a	      0xe800000000	                          call 0x400256f	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x400256f	        0x48894310	             mov qword [rbx + 0x10], rax	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x4002573	         0xfbe45c7	            movsx eax, byte [rbp - 0x39]	      1423	obj-elf.c	FUNCTION_34	IF_3	CALL_15
0x4002577	            0x89c7	                            mov edi, eax	      1423	obj-elf.c	FUNCTION_34	IF_3	CALL_15
0x4002579	      0xe800000000	                          call 0x400257e	      1423	obj-elf.c	FUNCTION_34	IF_3	CALL_15
0x400257e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x4002582	          0x4889c7	                            mov rdi, rax	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x4002585	      0xe800000000	                          call 0x400258a	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x400258a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x400258e	      0xbe40000000	                           mov esi, 0x40	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x4002593	          0x4889c7	                            mov rdi, rax	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x4002596	      0xe800000000	                          call 0x400259b	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x400259b	          0x4885c0	                           test rax, rax	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x400259e	     0xf85bb000000	                           jne 0x400265f	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x40025a4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x40025a8	          0x4889c7	                            mov rdi, rax	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x40025ab	      0xe800000000	                          call 0x40025b0	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x40025b0	          0x4989c4	                            mov r12, rax	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x40025b3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1429	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_20
0x40025b7	          0x4889c7	                            mov rdi, rax	      1429	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_20
0x40025ba	      0xe800000000	                          call 0x40025bf	      1429	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_20
0x40025bf	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x40025c3	      0xbf00000000	                              mov edi, 0	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x40025c8	      0xe800000000	                          call 0x40025cd	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x40025cd	          0x4c89e2	                            mov rdx, r12	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x40025d0	          0x4889de	                            mov rsi, rbx	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x40025d3	          0x4889c7	                            mov rdi, rax	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x40025d6	      0xb800000000	                              mov eax, 0	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x40025db	      0xe800000000	                          call 0x40025e0	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x40025e0	      0xe800000000	                          call 0x40025e5	      1431	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_22
0x40025e5	            0xeb7d	                           jmp 0x4002664	      1432	obj-elf.c	FUNCTION_34	IF_3	IF_4
0x40025e7	        0x488b5dc8	             mov rbx, qword [rbp - 0x38]	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40025eb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40025ef	          0x4889c7	                            mov rdi, rax	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40025f2	      0xe800000000	                          call 0x40025f7	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40025f7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40025fb	          0x4889de	                            mov rsi, rbx	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40025fe	          0x4889c7	                            mov rdi, rax	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x4002601	      0xe800000000	                          call 0x4002606	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x4002606	            0x85c0	                           test eax, eax	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x4002608	            0x744a	                            je 0x4002654	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x400260a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x400260e	          0x4889c7	                            mov rdi, rax	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x4002611	      0xe800000000	                          call 0x4002616	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x4002616	          0x4989c5	                            mov r13, rax	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x4002619	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1440	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_27
0x400261d	          0x4889c7	                            mov rdi, rax	      1440	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_27
0x4002620	      0xe800000000	                          call 0x4002625	      1440	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_27
0x4002625	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x4002629	        0x488b5dc8	             mov rbx, qword [rbp - 0x38]	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x400262d	      0xbf00000000	                              mov edi, 0	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x4002632	      0xe800000000	                          call 0x4002637	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x4002637	          0x4c89e9	                            mov rcx, r13	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x400263a	          0x4c89e2	                            mov rdx, r12	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x400263d	          0x4889de	                            mov rsi, rbx	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x4002640	          0x4889c7	                            mov rdi, rax	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x4002643	      0xb800000000	                              mov eax, 0	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x4002648	      0xe800000000	                          call 0x400264d	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x400264d	      0xe800000000	                          call 0x4002652	      1442	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_29
0x4002652	            0xeb10	                           jmp 0x4002664	      1443	obj-elf.c	FUNCTION_34	ELSE_1	IF_5
0x4002654	         0xfbe45c7	            movsx eax, byte [rbp - 0x39]	      1446	obj-elf.c	FUNCTION_34	ELSE_1	CALL_30
0x4002658	            0x89c7	                            mov edi, eax	      1446	obj-elf.c	FUNCTION_34	ELSE_1	CALL_30
0x400265a	      0xe800000000	                          call 0x400265f	      1446	obj-elf.c	FUNCTION_34	ELSE_1	CALL_30
0x400265f	      0xe800000000	                          call 0x4002664	      1449	obj-elf.c	FUNCTION_34	CALL_31
0x4002664	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1450	obj-elf.c	FUNCTION_34
0x4002668	    0x644833042528	                xor rax, qword fs:[0x28]	      1450	obj-elf.c	FUNCTION_34
0x4002671	            0x7405	                            je 0x4002678	      1450	obj-elf.c	FUNCTION_34
0x4002673	      0xe800000000	                          call 0x4002678	      1450	obj-elf.c	FUNCTION_34
0x4002678	        0x4883c438	                           add rsp, 0x38	      1450	obj-elf.c	FUNCTION_34
0x400267c	              0x5b	                                 pop rbx	      1450	obj-elf.c	FUNCTION_34
0x400267d	            0x415c	                                 pop r12	      1450	obj-elf.c	FUNCTION_34
0x400267f	            0x415d	                                 pop r13	      1450	obj-elf.c	FUNCTION_34
0x4002681	              0x5d	                                 pop rbp	      1450	obj-elf.c	FUNCTION_34
0x4002682	              0xc3	                                     ret	      1450	obj-elf.c	FUNCTION_34
free_section_idx	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:DO,0:IF,0:WHILE,0	11
0x4004279	              0x55	                                push rbp	      2413	obj-elf.c	FUNCTION_59
0x400427a	          0x4889e5	                            mov rbp, rsp	      2413	obj-elf.c	FUNCTION_59
0x400427d	        0x4883ec10	                           sub rsp, 0x10	      2413	obj-elf.c	FUNCTION_59
0x4004281	        0x48897df8	                mov qword [rbp - 8], rdi	      2413	obj-elf.c	FUNCTION_59
0x4004285	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2413	obj-elf.c	FUNCTION_59
0x4004289	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2414	obj-elf.c	FUNCTION_59	CALL_1
0x400428d	          0x4889c7	                            mov rdi, rax	      2414	obj-elf.c	FUNCTION_59	CALL_1
0x4004290	      0xe800000000	                          call 0x4004295	      2414	obj-elf.c	FUNCTION_59	CALL_1
0x4004295	              0x90	                                     nop	      2415	obj-elf.c	FUNCTION_59
0x4004296	              0xc9	                                   leave	      2415	obj-elf.c	FUNCTION_59
0x4004297	              0xc3	                                     ret	      2415	obj-elf.c	FUNCTION_59
obj_elf_vendor_attribute	FOR,1:SWITCH,1:functions,0:ELSE,1:CALL,29:DO,0:IF,10:WHILE,0	226
0x4002ba8	              0x55	                                push rbp	      1648	obj-elf.c	FUNCTION_42
0x4002ba9	          0x4889e5	                            mov rbp, rsp	      1648	obj-elf.c	FUNCTION_42
0x4002bac	        0x4883ec60	                           sub rsp, 0x60	      1648	obj-elf.c	FUNCTION_42
0x4002bb0	          0x897dac	             mov dword [rbp - 0x54], edi	      1648	obj-elf.c	FUNCTION_42
0x4002bb3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1648	obj-elf.c	FUNCTION_42
0x4002bbc	        0x488945f8	                mov qword [rbp - 8], rax	      1648	obj-elf.c	FUNCTION_42
0x4002bc0	            0x31c0	                            xor eax, eax	      1648	obj-elf.c	FUNCTION_42
0x4002bc2	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      1652	obj-elf.c	FUNCTION_42
0x4002bc9	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1653	obj-elf.c	FUNCTION_42
0x4002bd1	    0x488b05000000	            mov rax, qword [0x04002bd8] 	      1656	obj-elf.c	FUNCTION_42
0x4002bd8	           0xfb600	                   movzx eax, byte [rax]	      1656	obj-elf.c	FUNCTION_42
0x4002bdb	            0x3c20	                            cmp al, 0x20	      1656	obj-elf.c	FUNCTION_42
0x4002bdd	            0x7512	                           jne 0x4002bf1	      1656	obj-elf.c	FUNCTION_42
0x4002bdf	    0x488b05000000	            mov rax, qword [0x04002be6] 	      1656	obj-elf.c	FUNCTION_42
0x4002be6	        0x4883c001	                              add rax, 1	      1656	obj-elf.c	FUNCTION_42
0x4002bea	    0x488905000000	            mov qword [0x04002bf1], rax 	      1656	obj-elf.c	FUNCTION_42
0x4002bf1	    0x488b05000000	            mov rax, qword [0x04002bf8] 	      1657	obj-elf.c	FUNCTION_42
0x4002bf8	        0x488945c0	             mov qword [rbp - 0x40], rax	      1657	obj-elf.c	FUNCTION_42
0x4002bfc	    0x488b05000000	            mov rax, qword [0x04002c03] 	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x4002c03	           0xfb600	                   movzx eax, byte [rax]	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x4002c06	           0xfbec0	                           movsx eax, al	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x4002c09	           0xfb6c0	                           movzx eax, al	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x4002c0c	            0x4898	                                    cdqe	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x4002c0e	     0xfb784000000	             movzx eax, word [rax + rax]	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x4002c16	           0xfb7c0	                           movzx eax, ax	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x4002c19	          0x83e004	                              and eax, 4	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x4002c1c	            0x85c0	                           test eax, eax	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x4002c1e	            0x7444	                            je 0x4002c64	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x4002c20	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1660	obj-elf.c	FUNCTION_42	IF_1	CALL_2
0x4002c24	      0xba01000000	                              mov edx, 1	      1660	obj-elf.c	FUNCTION_42	IF_1	CALL_2
0x4002c29	          0x4889c6	                            mov rsi, rax	      1660	obj-elf.c	FUNCTION_42	IF_1	CALL_2
0x4002c2c	      0xbf00000000	                              mov edi, 0	      1660	obj-elf.c	FUNCTION_42	IF_1	CALL_2
0x4002c31	      0xe800000000	                          call 0x4002c36	      1660	obj-elf.c	FUNCTION_42	IF_1	CALL_2
0x4002c36	         0xfb645e8	            movzx eax, byte [rbp - 0x18]	      1661	obj-elf.c	FUNCTION_42	IF_1	IF_2
0x4002c3a	            0x3c02	                               cmp al, 2	      1661	obj-elf.c	FUNCTION_42	IF_1	IF_2
0x4002c3c	     0xf85a1020000	                           jne 0x4002ee3	      1661	obj-elf.c	FUNCTION_42	IF_1	IF_2
0x4002c42	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1663	obj-elf.c	FUNCTION_42	IF_1
0x4002c46	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1663	obj-elf.c	FUNCTION_42	IF_1
0x4002c49	      0xe9bf000000	                           jmp 0x4002d0d	      1663	obj-elf.c	FUNCTION_42	IF_1
0x4002c4e	        0x8345b801	               add dword [rbp - 0x48], 1	      1672	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1
0x4002c52	    0x488b05000000	            mov rax, qword [0x04002c59] 	      1671	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1
0x4002c59	        0x4883c001	                              add rax, 1	      1671	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1
0x4002c5d	    0x488905000000	            mov qword [0x04002c64], rax 	      1671	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1
0x4002c64	    0x488b05000000	            mov rax, qword [0x04002c6b] 	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4002c6b	           0xfb600	                   movzx eax, byte [rax]	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4002c6e	           0xfbec0	                           movsx eax, al	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4002c71	           0xfb6c0	                           movzx eax, al	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4002c74	            0x4898	                                    cdqe	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4002c76	     0xfb784000000	             movzx eax, word [rax + rax]	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4002c7e	           0xfb7c0	                           movzx eax, ax	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4002c81	      0x258c000000	                           and eax, 0x8c	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4002c86	            0x85c0	                           test eax, eax	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4002c88	            0x75c4	                           jne 0x4002c4e	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4002c8a	    0x488b05000000	            mov rax, qword [0x04002c91] 	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4002c91	           0xfb600	                   movzx eax, byte [rax]	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4002c94	            0x3c5f	                            cmp al, 0x5f	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4002c96	            0x74b6	                            je 0x4002c4e	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4002c98	        0x837db800	               cmp dword [rbp - 0x48], 0	      1673	obj-elf.c	FUNCTION_42	ELSE_1	IF_3
0x4002c9c	     0xf8444020000	                            je 0x4002ee6	      1673	obj-elf.c	FUNCTION_42	ELSE_1	IF_3
0x4002ca2	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      1676	obj-elf.c	FUNCTION_42	ELSE_1	CALL_4
0x4002ca5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1676	obj-elf.c	FUNCTION_42	ELSE_1	CALL_4
0x4002ca9	          0x4889d6	                            mov rsi, rdx	      1676	obj-elf.c	FUNCTION_42	ELSE_1	CALL_4
0x4002cac	          0x4889c7	                            mov rdi, rax	      1676	obj-elf.c	FUNCTION_42	ELSE_1	CALL_4
0x4002caf	      0xe800000000	                          call 0x4002cb4	      1676	obj-elf.c	FUNCTION_42	ELSE_1	CALL_4
0x4002cb4	        0x488945c8	             mov qword [rbp - 0x38], rax	      1676	obj-elf.c	FUNCTION_42	ELSE_1	CALL_4
0x4002cb8	    0xc745b4ffffff	     mov dword [rbp - 0x4c], 0xffffffff 	      1682	obj-elf.c	FUNCTION_42	ELSE_1
0x4002cbf	        0x837db4ff	cmp dword [rbp - 0x4c], 0xffffffffffffffff	      1683	obj-elf.c	FUNCTION_42	ELSE_1	IF_4
0x4002cc3	            0x753c	                           jne 0x4002d01	      1683	obj-elf.c	FUNCTION_42	ELSE_1	IF_4
0x4002cc5	      0xbf00000000	                              mov edi, 0	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x4002cca	      0xe800000000	                          call 0x4002ccf	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x4002ccf	          0x4889c2	                            mov rdx, rax	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x4002cd2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x4002cd6	          0x4889c6	                            mov rsi, rax	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x4002cd9	          0x4889d7	                            mov rdi, rdx	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x4002cdc	      0xb800000000	                              mov eax, 0	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x4002ce1	      0xe800000000	                          call 0x4002ce6	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x4002ce6	      0xe800000000	                          call 0x4002ceb	      1686	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_7
0x4002ceb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1687	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_8
0x4002cef	          0x4889c7	                            mov rdi, rax	      1687	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_8
0x4002cf2	      0xe800000000	                          call 0x4002cf7	      1687	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_8
0x4002cf7	      0xb800000000	                              mov eax, 0	      1688	obj-elf.c	FUNCTION_42	ELSE_1	IF_4
0x4002cfc	      0xe90a020000	                           jmp 0x4002f0b	      1688	obj-elf.c	FUNCTION_42	ELSE_1	IF_4
0x4002d01	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1690	obj-elf.c	FUNCTION_42	ELSE_1	CALL_9
0x4002d05	          0x4889c7	                            mov rdi, rax	      1690	obj-elf.c	FUNCTION_42	ELSE_1	CALL_9
0x4002d08	      0xe800000000	                          call 0x4002d0d	      1690	obj-elf.c	FUNCTION_42	ELSE_1	CALL_9
0x4002d0d	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1693	obj-elf.c	FUNCTION_42	CALL_10
0x4002d10	    0x488b05000000	            mov rax, qword [0x04002d17] 	      1693	obj-elf.c	FUNCTION_42	CALL_10
0x4002d17	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	      1693	obj-elf.c	FUNCTION_42	CALL_10
0x4002d1a	            0x89ce	                            mov esi, ecx	      1693	obj-elf.c	FUNCTION_42	CALL_10
0x4002d1c	          0x4889c7	                            mov rdi, rax	      1693	obj-elf.c	FUNCTION_42	CALL_10
0x4002d1f	      0xe800000000	                          call 0x4002d24	      1693	obj-elf.c	FUNCTION_42	CALL_10
0x4002d24	          0x8945bc	             mov dword [rbp - 0x44], eax	      1693	obj-elf.c	FUNCTION_42	CALL_10
0x4002d27	      0xbe2c000000	                           mov esi, 0x2c	      1695	obj-elf.c	FUNCTION_42	IF_5
0x4002d2c	      0xbf00000000	                              mov edi, 0	      1695	obj-elf.c	FUNCTION_42	IF_5
0x4002d31	      0xe8f0fcffff	                 call sym.skip_past_char	      1695	obj-elf.c	FUNCTION_42	IF_5
0x4002d36	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1695	obj-elf.c	FUNCTION_42	IF_5
0x4002d39	     0xf84aa010000	                            je 0x4002ee9	      1695	obj-elf.c	FUNCTION_42	IF_5
0x4002d3f	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1697	obj-elf.c	FUNCTION_42	IF_6
0x4002d42	          0x83e001	                              and eax, 1	      1697	obj-elf.c	FUNCTION_42	IF_6
0x4002d45	            0x85c0	                           test eax, eax	      1697	obj-elf.c	FUNCTION_42	IF_6
0x4002d47	            0x744b	                            je 0x4002d94	      1697	obj-elf.c	FUNCTION_42	IF_6
0x4002d49	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1699	obj-elf.c	FUNCTION_42	IF_6	CALL_11
0x4002d4d	      0xba01000000	                              mov edx, 1	      1699	obj-elf.c	FUNCTION_42	IF_6	CALL_11
0x4002d52	          0x4889c6	                            mov rsi, rax	      1699	obj-elf.c	FUNCTION_42	IF_6	CALL_11
0x4002d55	      0xbf00000000	                              mov edi, 0	      1699	obj-elf.c	FUNCTION_42	IF_6	CALL_11
0x4002d5a	      0xe800000000	                          call 0x4002d5f	      1699	obj-elf.c	FUNCTION_42	IF_6	CALL_11
0x4002d5f	         0xfb645e8	            movzx eax, byte [rbp - 0x18]	      1700	obj-elf.c	FUNCTION_42	IF_6	IF_7
0x4002d63	            0x3c02	                               cmp al, 2	      1700	obj-elf.c	FUNCTION_42	IF_6	IF_7
0x4002d65	            0x7426	                            je 0x4002d8d	      1700	obj-elf.c	FUNCTION_42	IF_6	IF_7
0x4002d67	      0xbf00000000	                              mov edi, 0	      1702	obj-elf.c	FUNCTION_42	IF_6	IF_7	CALL_13
0x4002d6c	      0xe800000000	                          call 0x4002d71	      1702	obj-elf.c	FUNCTION_42	IF_6	IF_7	CALL_13
0x4002d71	          0x4889c7	                            mov rdi, rax	      1702	obj-elf.c	FUNCTION_42	IF_6	IF_7	CALL_13
0x4002d74	      0xb800000000	                              mov eax, 0	      1702	obj-elf.c	FUNCTION_42	IF_6	IF_7	CALL_13
0x4002d79	      0xe800000000	                          call 0x4002d7e	      1702	obj-elf.c	FUNCTION_42	IF_6	IF_7	CALL_13
0x4002d7e	      0xe800000000	                          call 0x4002d83	      1703	obj-elf.c	FUNCTION_42	IF_6	IF_7	CALL_14
0x4002d83	      0xb800000000	                              mov eax, 0	      1704	obj-elf.c	FUNCTION_42	IF_6	IF_7
0x4002d88	      0xe97e010000	                           jmp 0x4002f0b	      1704	obj-elf.c	FUNCTION_42	IF_6	IF_7
0x4002d8d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1706	obj-elf.c	FUNCTION_42	IF_6
0x4002d91	          0x8945b8	             mov dword [rbp - 0x48], eax	      1706	obj-elf.c	FUNCTION_42	IF_6
0x4002d94	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1708	obj-elf.c	FUNCTION_42	IF_8
0x4002d97	          0x83e003	                              and eax, 3	      1708	obj-elf.c	FUNCTION_42	IF_8
0x4002d9a	          0x83f803	                              cmp eax, 3	      1708	obj-elf.c	FUNCTION_42	IF_8
0x4002d9d	            0x753a	                           jne 0x4002dd9	      1708	obj-elf.c	FUNCTION_42	IF_8
0x4002d9f	      0xbe2c000000	                           mov esi, 0x2c	      1709	obj-elf.c	FUNCTION_42	IF_8
0x4002da4	      0xbf00000000	                              mov edi, 0	      1709	obj-elf.c	FUNCTION_42	IF_8
0x4002da9	      0xe878fcffff	                 call sym.skip_past_char	      1709	obj-elf.c	FUNCTION_42	IF_8
0x4002dae	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1709	obj-elf.c	FUNCTION_42	IF_8
0x4002db1	            0x7526	                           jne 0x4002dd9	      1709	obj-elf.c	FUNCTION_42	IF_8
0x4002db3	      0xbf00000000	                              mov edi, 0	      1711	obj-elf.c	FUNCTION_42	IF_8	CALL_16
0x4002db8	      0xe800000000	                          call 0x4002dbd	      1711	obj-elf.c	FUNCTION_42	IF_8	CALL_16
0x4002dbd	          0x4889c7	                            mov rdi, rax	      1711	obj-elf.c	FUNCTION_42	IF_8	CALL_16
0x4002dc0	      0xb800000000	                              mov eax, 0	      1711	obj-elf.c	FUNCTION_42	IF_8	CALL_16
0x4002dc5	      0xe800000000	                          call 0x4002dca	      1711	obj-elf.c	FUNCTION_42	IF_8	CALL_16
0x4002dca	      0xe800000000	                          call 0x4002dcf	      1712	obj-elf.c	FUNCTION_42	IF_8	CALL_17
0x4002dcf	      0xb800000000	                              mov eax, 0	      1713	obj-elf.c	FUNCTION_42	IF_8
0x4002dd4	      0xe932010000	                           jmp 0x4002f0b	      1713	obj-elf.c	FUNCTION_42	IF_8
0x4002dd9	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1715	obj-elf.c	FUNCTION_42	IF_9
0x4002ddc	          0x83e002	                              and eax, 2	      1715	obj-elf.c	FUNCTION_42	IF_9
0x4002ddf	            0x85c0	                           test eax, eax	      1715	obj-elf.c	FUNCTION_42	IF_9
0x4002de1	            0x7442	                            je 0x4002e25	      1715	obj-elf.c	FUNCTION_42	IF_9
0x4002de3	    0x488b05000000	            mov rax, qword [0x04002dea] 	      1719	obj-elf.c	FUNCTION_42	IF_9
0x4002dea	           0xfb600	                   movzx eax, byte [rax]	      1719	obj-elf.c	FUNCTION_42	IF_9
0x4002ded	            0x3c20	                            cmp al, 0x20	      1719	obj-elf.c	FUNCTION_42	IF_9
0x4002def	            0x7512	                           jne 0x4002e03	      1719	obj-elf.c	FUNCTION_42	IF_9
0x4002df1	    0x488b05000000	            mov rax, qword [0x04002df8] 	      1719	obj-elf.c	FUNCTION_42	IF_9
0x4002df8	        0x4883c001	                              add rax, 1	      1719	obj-elf.c	FUNCTION_42	IF_9
0x4002dfc	    0x488905000000	            mov qword [0x04002e03], rax 	      1719	obj-elf.c	FUNCTION_42	IF_9
0x4002e03	    0x488b05000000	            mov rax, qword [0x04002e0a] 	      1720	obj-elf.c	FUNCTION_42	IF_9	IF_10
0x4002e0a	           0xfb600	                   movzx eax, byte [rax]	      1720	obj-elf.c	FUNCTION_42	IF_9	IF_10
0x4002e0d	            0x3c22	                            cmp al, 0x22	      1720	obj-elf.c	FUNCTION_42	IF_9	IF_10
0x4002e0f	     0xf85aa000000	                           jne 0x4002ebf	      1720	obj-elf.c	FUNCTION_42	IF_9	IF_10
0x4002e15	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1722	obj-elf.c	FUNCTION_42	IF_9	CALL_18
0x4002e19	          0x4889c7	                            mov rdi, rax	      1722	obj-elf.c	FUNCTION_42	IF_9	CALL_18
0x4002e1c	      0xe800000000	                          call 0x4002e21	      1722	obj-elf.c	FUNCTION_42	IF_9	CALL_18
0x4002e21	        0x488945c0	             mov qword [rbp - 0x40], rax	      1722	obj-elf.c	FUNCTION_42	IF_9	CALL_18
0x4002e25	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1725	obj-elf.c	FUNCTION_42	CALL_19
0x4002e28	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1725	obj-elf.c	FUNCTION_42	CALL_19
0x4002e2b	            0x89d6	                            mov esi, edx	      1725	obj-elf.c	FUNCTION_42	CALL_19
0x4002e2d	            0x89c7	                            mov edi, eax	      1725	obj-elf.c	FUNCTION_42	CALL_19
0x4002e2f	      0xe82efcffff	               call sym.record_attribute	      1725	obj-elf.c	FUNCTION_42	CALL_19
0x4002e34	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4002e37	          0x83e003	                              and eax, 3	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4002e3a	          0x83f802	                              cmp eax, 2	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4002e3d	            0x742d	                            je 0x4002e6c	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4002e3f	          0x83f803	                              cmp eax, 3	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4002e42	            0x7407	                            je 0x4002e4b	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4002e44	          0x83f801	                              cmp eax, 1	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4002e47	            0x743e	                            je 0x4002e87	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4002e49	            0xeb56	                           jmp 0x4002ea1	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4002e4b	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4002e4e	    0x488b05000000	            mov rax, qword [0x04002e55] 	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4002e55	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4002e59	          0x8b4db8	             mov ecx, dword [rbp - 0x48]	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4002e5c	          0x8b75ac	             mov esi, dword [rbp - 0x54]	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4002e5f	          0x4989f8	                             mov r8, rdi	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4002e62	          0x4889c7	                            mov rdi, rax	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4002e65	      0xe800000000	                          call 0x4002e6a	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4002e6a	            0xeb49	                           jmp 0x4002eb5	      1730	obj-elf.c	FUNCTION_42	SWITCH_1
0x4002e6c	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1732	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_21
0x4002e6f	    0x488b05000000	            mov rax, qword [0x04002e76] 	      1732	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_21
0x4002e76	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      1732	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_21
0x4002e7a	          0x8b75ac	             mov esi, dword [rbp - 0x54]	      1732	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_21
0x4002e7d	          0x4889c7	                            mov rdi, rax	      1732	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_21
0x4002e80	      0xe800000000	                          call 0x4002e85	      1732	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_21
0x4002e85	            0xeb2e	                           jmp 0x4002eb5	      1733	obj-elf.c	FUNCTION_42	SWITCH_1
0x4002e87	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1735	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_22
0x4002e8a	    0x488b05000000	            mov rax, qword [0x04002e91] 	      1735	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_22
0x4002e91	          0x8b4db8	             mov ecx, dword [rbp - 0x48]	      1735	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_22
0x4002e94	          0x8b75ac	             mov esi, dword [rbp - 0x54]	      1735	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_22
0x4002e97	          0x4889c7	                            mov rdi, rax	      1735	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_22
0x4002e9a	      0xe800000000	                          call 0x4002e9f	      1735	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_22
0x4002e9f	            0xeb14	                           jmp 0x4002eb5	      1736	obj-elf.c	FUNCTION_42	SWITCH_1
0x4002ea1	      0xba00000000	                              mov edx, 0	      1738	obj-elf.c	FUNCTION_42	SWITCH_1
0x4002ea6	      0xbeca060000	                          mov esi, 0x6ca	      1738	obj-elf.c	FUNCTION_42	SWITCH_1
0x4002eab	      0xbf00000000	                              mov edi, 0	      1738	obj-elf.c	FUNCTION_42	SWITCH_1
0x4002eb0	      0xe800000000	                          call 0x4002eb5	      1738	obj-elf.c	FUNCTION_42	SWITCH_1
0x4002eb5	      0xe800000000	                          call 0x4002eba	      1741	obj-elf.c	FUNCTION_42	CALL_23
0x4002eba	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1742	obj-elf.c	FUNCTION_42
0x4002ebd	            0xeb4c	                           jmp 0x4002f0b	      1742	obj-elf.c	FUNCTION_42
0x4002ebf	              0x90	                                     nop	      1721	obj-elf.c	FUNCTION_42	IF_9	IF_10
0x4002ec0	      0xbf00000000	                              mov edi, 0	      1744	obj-elf.c	FUNCTION_42	CALL_25
0x4002ec5	      0xe800000000	                          call 0x4002eca	      1744	obj-elf.c	FUNCTION_42	CALL_25
0x4002eca	          0x4889c7	                            mov rdi, rax	      1744	obj-elf.c	FUNCTION_42	CALL_25
0x4002ecd	      0xb800000000	                              mov eax, 0	      1744	obj-elf.c	FUNCTION_42	CALL_25
0x4002ed2	      0xe800000000	                          call 0x4002ed7	      1744	obj-elf.c	FUNCTION_42	CALL_25
0x4002ed7	      0xe800000000	                          call 0x4002edc	      1745	obj-elf.c	FUNCTION_42	CALL_26
0x4002edc	      0xb800000000	                              mov eax, 0	      1746	obj-elf.c	FUNCTION_42
0x4002ee1	            0xeb28	                           jmp 0x4002f0b	      1746	obj-elf.c	FUNCTION_42
0x4002ee3	              0x90	                                     nop	      1662	obj-elf.c	FUNCTION_42	IF_1	IF_2
0x4002ee4	            0xeb04	                           jmp 0x4002eea	      1662	obj-elf.c	FUNCTION_42	IF_1	IF_2
0x4002ee6	              0x90	                                     nop	      1674	obj-elf.c	FUNCTION_42	ELSE_1	IF_3
0x4002ee7	            0xeb01	                           jmp 0x4002eea	      1674	obj-elf.c	FUNCTION_42	ELSE_1	IF_3
0x4002ee9	              0x90	                                     nop	      1696	obj-elf.c	FUNCTION_42	IF_5
0x4002eea	      0xbf00000000	                              mov edi, 0	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x4002eef	      0xe800000000	                          call 0x4002ef4	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x4002ef4	          0x4889c7	                            mov rdi, rax	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x4002ef7	      0xb800000000	                              mov eax, 0	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x4002efc	      0xe800000000	                          call 0x4002f01	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x4002f01	      0xe800000000	                          call 0x4002f06	      1749	obj-elf.c	FUNCTION_42	CALL_29
0x4002f06	      0xb800000000	                              mov eax, 0	      1750	obj-elf.c	FUNCTION_42
0x4002f0b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1751	obj-elf.c	FUNCTION_42
0x4002f0f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1751	obj-elf.c	FUNCTION_42
0x4002f18	            0x7405	                            je 0x4002f1f	      1751	obj-elf.c	FUNCTION_42
0x4002f1a	      0xe800000000	                          call 0x4002f1f	      1751	obj-elf.c	FUNCTION_42
0x4002f1f	              0xc9	                                   leave	      1751	obj-elf.c	FUNCTION_42
0x4002f20	              0xc3	                                     ret	      1751	obj-elf.c	FUNCTION_42
obj_elf_popsection	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,6:DO,0:IF,1:WHILE,0	35
0x400238a	              0x55	                                push rbp	      1346	obj-elf.c	FUNCTION_32
0x400238b	          0x4889e5	                            mov rbp, rsp	      1346	obj-elf.c	FUNCTION_32
0x400238e	        0x4883ec20	                           sub rsp, 0x20	      1346	obj-elf.c	FUNCTION_32
0x4002392	          0x897dec	             mov dword [rbp - 0x14], edi	      1346	obj-elf.c	FUNCTION_32
0x4002395	    0x488b05000000	            mov rax, qword [0x0400239c] 	      1347	obj-elf.c	FUNCTION_32
0x400239c	        0x488945f8	                mov qword [rbp - 8], rax	      1347	obj-elf.c	FUNCTION_32
0x40023a0	      0x48837df800	                  cmp qword [rbp - 8], 0	      1349	obj-elf.c	FUNCTION_32	IF_1
0x40023a5	            0x7519	                           jne 0x40023c0	      1349	obj-elf.c	FUNCTION_32	IF_1
0x40023a7	      0xbf00000000	                              mov edi, 0	      1351	obj-elf.c	FUNCTION_32	IF_1	CALL_2
0x40023ac	      0xe800000000	                          call 0x40023b1	      1351	obj-elf.c	FUNCTION_32	IF_1	CALL_2
0x40023b1	          0x4889c7	                            mov rdi, rax	      1351	obj-elf.c	FUNCTION_32	IF_1	CALL_2
0x40023b4	      0xb800000000	                              mov eax, 0	      1351	obj-elf.c	FUNCTION_32	IF_1	CALL_2
0x40023b9	      0xe800000000	                          call 0x40023be	      1351	obj-elf.c	FUNCTION_32	IF_1	CALL_2
0x40023be	            0xeb4f	                           jmp 0x400240f	      1352	obj-elf.c	FUNCTION_32	IF_1
0x40023c0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1359	obj-elf.c	FUNCTION_32
0x40023c4	          0x488b00	                    mov rax, qword [rax]	      1359	obj-elf.c	FUNCTION_32
0x40023c7	    0x488905000000	            mov qword [0x040023ce], rax 	      1359	obj-elf.c	FUNCTION_32
0x40023ce	        0x488b45f8	                mov rax, qword [rbp - 8]	      1360	obj-elf.c	FUNCTION_32
0x40023d2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1360	obj-elf.c	FUNCTION_32
0x40023d6	    0x488905000000	            mov qword [0x040023dd], rax 	      1360	obj-elf.c	FUNCTION_32
0x40023dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1361	obj-elf.c	FUNCTION_32
0x40023e1	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1361	obj-elf.c	FUNCTION_32
0x40023e4	    0x890500000000	            mov dword [0x040023ea], eax 	      1361	obj-elf.c	FUNCTION_32
0x40023ea	        0x488b45f8	                mov rax, qword [rbp - 8]	      1362	obj-elf.c	FUNCTION_32	CALL_4
0x40023ee	          0x8b5018	            mov edx, dword [rax + 0x18] 	      1362	obj-elf.c	FUNCTION_32	CALL_4
0x40023f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1362	obj-elf.c	FUNCTION_32	CALL_4
0x40023f5	        0x488b4008	                mov rax, qword [rax + 8]	      1362	obj-elf.c	FUNCTION_32	CALL_4
0x40023f9	            0x89d6	                            mov esi, edx	      1362	obj-elf.c	FUNCTION_32	CALL_4
0x40023fb	          0x4889c7	                            mov rdi, rax	      1362	obj-elf.c	FUNCTION_32	CALL_4
0x40023fe	      0xe800000000	                          call 0x4002403	      1362	obj-elf.c	FUNCTION_32	CALL_4
0x4002403	        0x488b45f8	                mov rax, qword [rbp - 8]	      1363	obj-elf.c	FUNCTION_32	CALL_5
0x4002407	          0x4889c7	                            mov rdi, rax	      1363	obj-elf.c	FUNCTION_32	CALL_5
0x400240a	      0xe800000000	                          call 0x400240f	      1363	obj-elf.c	FUNCTION_32	CALL_5
0x400240f	              0xc9	                                   leave	      1368	obj-elf.c	FUNCTION_32
0x4002410	              0xc3	                                     ret	      1368	obj-elf.c	FUNCTION_32
elf_adjust_symtab	FOR,2:SWITCH,0:functions,0:ELSE,0:CALL,24:DO,0:IF,4:WHILE,0	166
0x4004298	              0x55	                                push rbp	      2421	obj-elf.c	FUNCTION_60
0x4004299	          0x4889e5	                            mov rbp, rsp	      2421	obj-elf.c	FUNCTION_60
0x400429c	              0x53	                                push rbx	      2421	obj-elf.c	FUNCTION_60
0x400429d	        0x4883ec38	                           sub rsp, 0x38	      2421	obj-elf.c	FUNCTION_60
0x40042a1	    0xc70500000000	               mov dword [0x040042ab], 0	      2425	obj-elf.c	FUNCTION_60
0x40042ab	    0x48c705000000	               mov qword [0x040042b6], 0	      2426	obj-elf.c	FUNCTION_60
0x40042b6	      0xe800000000	                          call 0x40042bb	      2427	obj-elf.c	FUNCTION_60	CALL_1
0x40042bb	    0x488905000000	            mov qword [0x040042c2], rax 	      2427	obj-elf.c	FUNCTION_60	CALL_1
0x40042c2	    0x488b05000000	            mov rax, qword [0x040042c9] 	      2428	obj-elf.c	FUNCTION_60	CALL_2
0x40042c9	      0xba00000000	                              mov edx, 0	      2428	obj-elf.c	FUNCTION_60	CALL_2
0x40042ce	      0xbe00000000	                              mov esi, 0	      2428	obj-elf.c	FUNCTION_60	CALL_2
0x40042d3	          0x4889c7	                            mov rdi, rax	      2428	obj-elf.c	FUNCTION_60	CALL_2
0x40042d6	      0xe800000000	                          call 0x40042db	      2428	obj-elf.c	FUNCTION_60	CALL_2
0x40042db	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x40042e2	      0xe959020000	                           jmp 0x4004540	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x40042e7	    0x488b05000000	            mov rax, qword [0x040042ee] 	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x40042ee	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x40042f1	        0x48c1e203	                              shl rdx, 3	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x40042f5	          0x4801d0	                            add rax, rdx	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x40042f8	          0x488b00	                    mov rax, qword [rax]	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x40042fb	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x4004302	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x4004309	        0x488945e0	             mov qword [rbp - 0x20], rax	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x400430d	    0xc745cc084100	       mov dword [rbp - 0x34], 0x2004108	      2442	obj-elf.c	FUNCTION_60	FOR_1
0x4004314	    0x488b05000000	            mov rax, qword [0x0400431b] 	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x400431b	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x400431e	        0x48c1e203	                              shl rdx, 3	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x4004322	          0x4801d0	                            add rax, rdx	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x4004325	          0x488b00	                    mov rax, qword [rax]	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x4004328	        0x488945d0	             mov qword [rbp - 0x30], rax	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x400432c	            0xeb6d	                           jmp 0x400439b	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x400432e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2444	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x4004332	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2444	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x4004335	          0x3345cc	             xor eax, dword [rbp - 0x34]	      2444	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x4004338	      0x2500000200	                        and eax, 0x20000	      2444	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x400433d	            0x85c0	                           test eax, eax	      2444	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x400433f	            0x7444	                            je 0x4004385	      2444	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x4004341	    0x814dcc000002	          or dword [rbp - 0x34], 0x20000	      2446	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x4004348	    0x488b05000000	            mov rax, qword [0x0400434f] 	      2447	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2
0x400434f	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      2447	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2
0x4004352	        0x48c1e203	                              shl rdx, 3	      2447	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2
0x4004356	          0x4801d0	                            add rax, rdx	      2447	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2
0x4004359	          0x488b00	                    mov rax, qword [rax]	      2447	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2
0x400435c	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2447	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2
0x4004360	            0x7423	                            je 0x4004385	      2447	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2
0x4004362	      0xbf00000000	                              mov edi, 0	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4004367	      0xe800000000	                          call 0x400436c	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x400436c	          0x4889c2	                            mov rdx, rax	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x400436f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4004373	          0x4889c6	                            mov rsi, rax	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4004376	          0x4889d7	                            mov rdi, rdx	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4004379	      0xb800000000	                              mov eax, 0	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x400437e	      0xe800000000	                          call 0x4004383	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4004383	            0xeb1d	                           jmp 0x40043a2	      2451	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2
0x4004385	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x4004389	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x4004390	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x4004397	        0x488945d0	             mov qword [rbp - 0x30], rax	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x400439b	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x40043a0	            0x758c	                           jne 0x400432e	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x40043a2	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2455	obj-elf.c	FUNCTION_60	FOR_1
0x40043aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2456	obj-elf.c	FUNCTION_60	FOR_1	CALL_7
0x40043ae	      0xbe00000000	                              mov esi, 0	      2456	obj-elf.c	FUNCTION_60	FOR_1	CALL_7
0x40043b3	          0x4889c7	                            mov rdi, rax	      2456	obj-elf.c	FUNCTION_60	FOR_1	CALL_7
0x40043b6	      0xe800000000	                          call 0x40043bb	      2456	obj-elf.c	FUNCTION_60	FOR_1	CALL_7
0x40043bb	        0x488945d0	             mov qword [rbp - 0x30], rax	      2456	obj-elf.c	FUNCTION_60	FOR_1	CALL_7
0x40043bf	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      2457	obj-elf.c	FUNCTION_60	FOR_1	IF_3
0x40043c4	            0x743c	                            je 0x4004402	      2457	obj-elf.c	FUNCTION_60	FOR_1	IF_3
0x40043c6	    0x488b05000000	            mov rax, qword [0x040043cd] 	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x40043cd	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x40043d0	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x40043d4	          0x4889ce	                            mov rsi, rcx	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x40043d7	          0x4889c7	                            mov rdi, rax	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x40043da	      0xe800000000	                          call 0x40043df	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x40043df	            0x85c0	                           test eax, eax	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x40043e1	            0x741f	                            je 0x4004402	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x40043e3	    0x488b05000000	            mov rax, qword [0x040043ea] 	      2459	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_9
0x40043ea	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2459	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_9
0x40043ee	      0xba02000000	                              mov edx, 2	      2459	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_9
0x40043f3	          0x4889ce	                            mov rsi, rcx	      2459	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_9
0x40043f6	          0x4889c7	                            mov rdi, rax	      2459	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_9
0x40043f9	      0xe842bcffff	      call sym.bfd_set_section_alignment	      2459	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_9
0x40043fe	            0x85c0	                           test eax, eax	      2459	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_9
0x4004400	            0x7529	                           jne 0x400442b	      2459	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_9
0x4004402	      0xe800000000	                          call 0x4004407	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4004407	            0x89c7	                            mov edi, eax	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4004409	      0xe800000000	                          call 0x400440e	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x400440e	          0x4889c3	                            mov rbx, rax	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4004411	      0xbf00000000	                              mov edi, 0	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4004416	      0xe800000000	                          call 0x400441b	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x400441b	          0x4889de	                            mov rsi, rbx	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x400441e	          0x4889c7	                            mov rdi, rax	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4004421	      0xb800000000	                              mov eax, 0	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4004426	      0xe800000000	                          call 0x400442b	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x400442b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2464	obj-elf.c	FUNCTION_60	FOR_1	CALL_14
0x400442f	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2464	obj-elf.c	FUNCTION_60	FOR_1	CALL_14
0x4004436	    0xc74004110000	               mov dword [rax + 4], 0x11	      2464	obj-elf.c	FUNCTION_60	FOR_1	CALL_14
0x400443d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2467	obj-elf.c	FUNCTION_60	FOR_1	CALL_15
0x4004441	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2467	obj-elf.c	FUNCTION_60	FOR_1	CALL_15
0x4004448	    0x488b15000000	            mov rdx, qword [0x0400444f] 	      2467	obj-elf.c	FUNCTION_60	FOR_1	CALL_15
0x400444f	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      2467	obj-elf.c	FUNCTION_60	FOR_1	CALL_15
0x4004452	        0x48c1e103	                              shl rcx, 3	      2467	obj-elf.c	FUNCTION_60	FOR_1	CALL_15
0x4004456	          0x4801ca	                            add rdx, rcx	      2467	obj-elf.c	FUNCTION_60	FOR_1	CALL_15
0x4004459	          0x488b12	                    mov rdx, qword [rdx]	      2467	obj-elf.c	FUNCTION_60	FOR_1	CALL_15
0x400445c	    0x488990c00000	             mov qword [rax + 0xc0], rdx	      2467	obj-elf.c	FUNCTION_60	FOR_1	CALL_15
0x4004463	    0x488b05000000	            mov rax, qword [0x0400446a] 	      2468	obj-elf.c	FUNCTION_60	FOR_1	CALL_16
0x400446a	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      2468	obj-elf.c	FUNCTION_60	FOR_1	CALL_16
0x400446d	        0x48c1e203	                              shl rdx, 3	      2468	obj-elf.c	FUNCTION_60	FOR_1	CALL_16
0x4004471	          0x4801d0	                            add rax, rdx	      2468	obj-elf.c	FUNCTION_60	FOR_1	CALL_16
0x4004474	          0x488b00	                    mov rax, qword [rax]	      2468	obj-elf.c	FUNCTION_60	FOR_1	CALL_16
0x4004477	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2468	obj-elf.c	FUNCTION_60	FOR_1	CALL_16
0x400447e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2468	obj-elf.c	FUNCTION_60	FOR_1	CALL_16
0x4004482	    0x488990b80000	             mov qword [rax + 0xb8], rdx	      2468	obj-elf.c	FUNCTION_60	FOR_1	CALL_16
0x4004489	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2471	obj-elf.c	FUNCTION_60	FOR_1	CALL_17
0x400448d	          0x4889c7	                            mov rdi, rax	      2471	obj-elf.c	FUNCTION_60	FOR_1	CALL_17
0x4004490	      0xe800000000	                          call 0x4004495	      2471	obj-elf.c	FUNCTION_60	FOR_1	CALL_17
0x4004495	        0x488945d8	             mov qword [rbp - 0x28], rax	      2471	obj-elf.c	FUNCTION_60	FOR_1	CALL_17
0x4004499	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2472	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x400449e	            0x743a	                            je 0x40044da	      2472	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044a0	    0x488b05000000	            mov rax, qword [0x040044a7] 	      2473	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044a7	        0x483945d8	            cmp qword [rbp - 0x28], rax 	      2473	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044ab	            0x7471	                            je 0x400451e	      2473	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2474	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044b1	           0xfb600	                   movzx eax, byte [rax]	      2474	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044b4	          0x83e001	                              and eax, 1	      2474	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044b7	            0x84c0	                             test al, al	      2474	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044b9	            0x751f	                           jne 0x40044da	      2474	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2475	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044bf	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2475	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044c3	          0x4885c0	                           test rax, rax	      2475	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044c6	            0x7412	                            je 0x40044da	      2475	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2476	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044cc	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2476	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044d0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2476	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044d4	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      2476	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044d8	            0x7444	                            je 0x400451e	      2476	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40044da	    0x488b15000000	            mov rdx, qword [0x040044e1] 	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x40044e1	    0x488b35000000	            mov rsi, qword [0x040044e8] 	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x40044e8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x40044ec	          0x4889d1	                            mov rcx, rdx	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x40044ef	      0xba00000000	                              mov edx, 0	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x40044f4	          0x4889c7	                            mov rdi, rax	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x40044f7	      0xe800000000	                          call 0x40044fc	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x40044fc	        0x488945d8	             mov qword [rbp - 0x28], rax	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x4004500	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2486	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_21
0x4004504	          0x4889c7	                            mov rdi, rax	      2486	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_21
0x4004507	      0xe800000000	                          call 0x400450c	      2486	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_21
0x400450c	    0xc70001000000	                      mov dword [rax], 1	      2486	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_21
0x4004512	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2488	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_22
0x4004516	          0x4889c7	                            mov rdi, rax	      2488	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_22
0x4004519	      0xe800000000	                          call 0x400451e	      2488	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_22
0x400451e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2490	obj-elf.c	FUNCTION_60	FOR_1	CALL_24
0x4004522	    0x488b98e00000	            mov rbx, qword [rax + 0xe0] 	      2490	obj-elf.c	FUNCTION_60	FOR_1	CALL_24
0x4004529	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2490	obj-elf.c	FUNCTION_60	FOR_1	CALL_24
0x400452d	          0x4889c7	                            mov rdi, rax	      2490	obj-elf.c	FUNCTION_60	FOR_1	CALL_24
0x4004530	      0xe800000000	                          call 0x4004535	      2490	obj-elf.c	FUNCTION_60	FOR_1	CALL_24
0x4004535	    0x488983b00000	             mov qword [rbx + 0xb0], rax	      2490	obj-elf.c	FUNCTION_60	FOR_1	CALL_24
0x400453c	        0x8345c801	               add dword [rbp - 0x38], 1	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x4004540	    0x8b0500000000	            mov eax, dword [0x04004546] 	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x4004546	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x4004549	     0xf8798fdffff	                            ja 0x40042e7	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x400454f	              0x90	                                     nop	      2492	obj-elf.c	FUNCTION_60
0x4004550	        0x4883c438	                           add rsp, 0x38	      2492	obj-elf.c	FUNCTION_60
0x4004554	              0x5b	                                 pop rbx	      2492	obj-elf.c	FUNCTION_60
0x4004555	              0x5d	                                 pop rbp	      2492	obj-elf.c	FUNCTION_60
0x4004556	              0xc3	                                     ret	      2492	obj-elf.c	FUNCTION_60
elf_s_set_other	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:DO,0:IF,0:WHILE,0	14
0x4000207	              0x55	                                push rbp	       251	obj-elf.c	FUNCTION_8
0x4000208	          0x4889e5	                            mov rbp, rsp	       251	obj-elf.c	FUNCTION_8
0x400020b	        0x4883ec10	                           sub rsp, 0x10	       251	obj-elf.c	FUNCTION_8
0x400020f	        0x48897df8	                mov qword [rbp - 8], rdi	       251	obj-elf.c	FUNCTION_8
0x4000213	          0x8975f4	              mov dword [rbp - 0xc], esi	       251	obj-elf.c	FUNCTION_8
0x4000216	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	obj-elf.c	FUNCTION_8	CALL_1
0x400021a	          0x4889c7	                            mov rdi, rax	       252	obj-elf.c	FUNCTION_8	CALL_1
0x400021d	      0xe800000000	                          call 0x4000222	       252	obj-elf.c	FUNCTION_8	CALL_1
0x4000222	          0x4889c2	                            mov rdx, rax	       252	obj-elf.c	FUNCTION_8	CALL_1
0x4000225	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       252	obj-elf.c	FUNCTION_8	CALL_1
0x4000228	          0x884249	               mov byte [rdx + 0x49], al	       252	obj-elf.c	FUNCTION_8	CALL_1
0x400022b	              0x90	                                     nop	       253	obj-elf.c	FUNCTION_8
0x400022c	              0xc9	                                   leave	       253	obj-elf.c	FUNCTION_8
0x400022d	              0xc3	                                     ret	       253	obj-elf.c	FUNCTION_8
elf_generate_asm_lineno	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:DO,0:IF,1:WHILE,0	5
0x4004817	              0x55	                                push rbp	      2652	obj-elf.c	FUNCTION_64
0x4004818	          0x4889e5	                            mov rbp, rsp	      2652	obj-elf.c	FUNCTION_64
0x400481b	              0x90	                                     nop	      2657	obj-elf.c	FUNCTION_64
0x400481c	              0x5d	                                 pop rbp	      2657	obj-elf.c	FUNCTION_64
0x400481d	              0xc3	                                     ret	      2657	obj-elf.c	FUNCTION_64
elf_copy_symbol_attributes	FOR,0:SWITCH,0:functions,0:ELSE,1:CALL,11:DO,0:IF,3:WHILE,0	81
0x4002f77	              0x55	                                push rbp	      1791	obj-elf.c	FUNCTION_46
0x4002f78	          0x4889e5	                            mov rbp, rsp	      1791	obj-elf.c	FUNCTION_46
0x4002f7b	            0x4154	                                push r12	      1791	obj-elf.c	FUNCTION_46
0x4002f7d	              0x53	                                push rbx	      1791	obj-elf.c	FUNCTION_46
0x4002f7e	        0x4883ec20	                           sub rsp, 0x20	      1791	obj-elf.c	FUNCTION_46
0x4002f82	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1791	obj-elf.c	FUNCTION_46
0x4002f86	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1791	obj-elf.c	FUNCTION_46
0x4002f8a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1792	obj-elf.c	FUNCTION_46	CALL_1
0x4002f8e	          0x4889c7	                            mov rdi, rax	      1792	obj-elf.c	FUNCTION_46	CALL_1
0x4002f91	      0xe800000000	                          call 0x4002f96	      1792	obj-elf.c	FUNCTION_46	CALL_1
0x4002f96	        0x488945e0	             mov qword [rbp - 0x20], rax	      1792	obj-elf.c	FUNCTION_46	CALL_1
0x4002f9a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1793	obj-elf.c	FUNCTION_46	CALL_2
0x4002f9e	          0x4889c7	                            mov rdi, rax	      1793	obj-elf.c	FUNCTION_46	CALL_2
0x4002fa1	      0xe800000000	                          call 0x4002fa6	      1793	obj-elf.c	FUNCTION_46	CALL_2
0x4002fa6	        0x488945e8	             mov qword [rbp - 0x18], rax	      1793	obj-elf.c	FUNCTION_46	CALL_2
0x4002faa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1794	obj-elf.c	FUNCTION_46	IF_1
0x4002fae	        0x488b4008	                mov rax, qword [rax + 8]	      1794	obj-elf.c	FUNCTION_46	IF_1
0x4002fb2	          0x4885c0	                           test rax, rax	      1794	obj-elf.c	FUNCTION_46	IF_1
0x4002fb5	            0x7452	                            je 0x4003009	      1794	obj-elf.c	FUNCTION_46	IF_1
0x4002fb7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1796	obj-elf.c	FUNCTION_46	IF_1	IF_2
0x4002fbb	        0x488b4008	                mov rax, qword [rax + 8]	      1796	obj-elf.c	FUNCTION_46	IF_1	IF_2
0x4002fbf	          0x4885c0	                           test rax, rax	      1796	obj-elf.c	FUNCTION_46	IF_1	IF_2
0x4002fc2	            0x7515	                           jne 0x4002fd9	      1796	obj-elf.c	FUNCTION_46	IF_1	IF_2
0x4002fc4	      0xbf20000000	                           mov edi, 0x20	      1797	obj-elf.c	FUNCTION_46	IF_1	CALL_3
0x4002fc9	      0xe800000000	                          call 0x4002fce	      1797	obj-elf.c	FUNCTION_46	IF_1	CALL_3
0x4002fce	          0x4889c2	                            mov rdx, rax	      1797	obj-elf.c	FUNCTION_46	IF_1	CALL_3
0x4002fd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1797	obj-elf.c	FUNCTION_46	IF_1	CALL_3
0x4002fd5	        0x48895008	                mov qword [rax + 8], rdx	      1797	obj-elf.c	FUNCTION_46	IF_1	CALL_3
0x4002fd9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4002fdd	        0x488b4008	                mov rax, qword [rax + 8]	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4002fe1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4002fe5	        0x488b5208	                mov rdx, qword [rdx + 8]	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4002fe9	          0x488b0a	                    mov rcx, qword [rdx]	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4002fec	          0x488908	                    mov qword [rax], rcx	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4002fef	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4002ff3	        0x48894808	                mov qword [rax + 8], rcx	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4002ff7	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4002ffb	        0x48894810	             mov qword [rax + 0x10], rcx	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4002fff	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4003003	        0x48895018	             mov qword [rax + 0x18], rdx	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4003007	            0xeb29	                           jmp 0x4003032	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4003009	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1802	obj-elf.c	FUNCTION_46	ELSE_1	IF_3
0x400300d	        0x488b4008	                mov rax, qword [rax + 8]	      1802	obj-elf.c	FUNCTION_46	ELSE_1	IF_3
0x4003011	          0x4885c0	                           test rax, rax	      1802	obj-elf.c	FUNCTION_46	ELSE_1	IF_3
0x4003014	            0x7410	                            je 0x4003026	      1802	obj-elf.c	FUNCTION_46	ELSE_1	IF_3
0x4003016	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1803	obj-elf.c	FUNCTION_46	ELSE_1	CALL_4
0x400301a	        0x488b4008	                mov rax, qword [rax + 8]	      1803	obj-elf.c	FUNCTION_46	ELSE_1	CALL_4
0x400301e	          0x4889c7	                            mov rdi, rax	      1803	obj-elf.c	FUNCTION_46	ELSE_1	CALL_4
0x4003021	      0xe800000000	                          call 0x4003026	      1803	obj-elf.c	FUNCTION_46	ELSE_1	CALL_4
0x4003026	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1804	obj-elf.c	FUNCTION_46	ELSE_1
0x400302a	    0x48c740080000	                  mov qword [rax + 8], 0	      1804	obj-elf.c	FUNCTION_46	ELSE_1
0x4003032	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4003036	          0x4889c7	                            mov rdi, rax	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4003039	      0xe800000000	                          call 0x400303e	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x400303e	          0x4889c3	                            mov rbx, rax	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4003041	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4003045	          0x4889c7	                            mov rdi, rax	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4003048	      0xe800000000	                          call 0x400304d	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x400304d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4003051	        0x48894338	             mov qword [rbx + 0x38], rax	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4003055	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4003059	          0x4889c7	                            mov rdi, rax	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x400305c	      0xe800000000	                          call 0x4003061	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4003061	          0x4889c3	                            mov rbx, rax	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4003064	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4003068	          0x4889c7	                            mov rdi, rax	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x400306b	      0xe800000000	                          call 0x4003070	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4003070	          0x83e003	                              and eax, 3	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4003073	          0x4189c4	                           mov r12d, eax	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4003076	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x400307a	          0x4889c7	                            mov rdi, rax	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x400307d	      0xe800000000	                          call 0x4003082	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4003082	          0x83e0fc	                     and eax, 0xfffffffc	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4003085	          0x4409e0	                            or eax, r12d	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4003088	          0x884349	               mov byte [rbx + 0x49], al	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x400308b	              0x90	                                     nop	      1810	obj-elf.c	FUNCTION_46
0x400308c	        0x4883c420	                           add rsp, 0x20	      1810	obj-elf.c	FUNCTION_46
0x4003090	              0x5b	                                 pop rbx	      1810	obj-elf.c	FUNCTION_46
0x4003091	            0x415c	                                 pop r12	      1810	obj-elf.c	FUNCTION_46
0x4003093	              0x5d	                                 pop rbp	      1810	obj-elf.c	FUNCTION_46
0x4003094	              0xc3	                                     ret	      1810	obj-elf.c	FUNCTION_46
elf_s_get_align	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:DO,0:IF,0:WHILE,0	10
0x400019e	              0x55	                                push rbp	       233	obj-elf.c	FUNCTION_5
0x400019f	          0x4889e5	                            mov rbp, rsp	       233	obj-elf.c	FUNCTION_5
0x40001a2	        0x4883ec10	                           sub rsp, 0x10	       233	obj-elf.c	FUNCTION_5
0x40001a6	        0x48897df8	                mov qword [rbp - 8], rdi	       233	obj-elf.c	FUNCTION_5
0x40001aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       234	obj-elf.c	FUNCTION_5	CALL_1
0x40001ae	          0x4889c7	                            mov rdi, rax	       234	obj-elf.c	FUNCTION_5	CALL_1
0x40001b1	      0xe800000000	                          call 0x40001b6	       234	obj-elf.c	FUNCTION_5	CALL_1
0x40001b6	        0x488b4030	            mov rax, qword [rax + 0x30] 	       234	obj-elf.c	FUNCTION_5	CALL_1
0x40001ba	              0xc9	                                   leave	       235	obj-elf.c	FUNCTION_5
0x40001bb	              0xc3	                                     ret	       235	obj-elf.c	FUNCTION_5
obj_elf_struct	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,3:DO,0:IF,0:WHILE,0	14
0x400227d	              0x55	                                push rbp	      1272	obj-elf.c	FUNCTION_28
0x400227e	          0x4889e5	                            mov rbp, rsp	      1272	obj-elf.c	FUNCTION_28
0x4002281	        0x4883ec10	                           sub rsp, 0x10	      1272	obj-elf.c	FUNCTION_28
0x4002285	          0x897dfc	                mov dword [rbp - 4], edi	      1272	obj-elf.c	FUNCTION_28
0x4002288	    0x488b05000000	            mov rax, qword [0x0400228f] 	      1277	obj-elf.c	FUNCTION_28
0x400228f	    0x488905000000	            mov qword [0x04002296], rax 	      1277	obj-elf.c	FUNCTION_28
0x4002296	    0x8b0500000000	            mov eax, dword [0x0400229c] 	      1278	obj-elf.c	FUNCTION_28
0x400229c	    0x890500000000	            mov dword [0x040022a2], eax 	      1278	obj-elf.c	FUNCTION_28
0x40022a2	          0x8b45fc	                mov eax, dword [rbp - 4]	      1279	obj-elf.c	FUNCTION_28	CALL_2
0x40022a5	            0x89c7	                            mov edi, eax	      1279	obj-elf.c	FUNCTION_28	CALL_2
0x40022a7	      0xe800000000	                          call 0x40022ac	      1279	obj-elf.c	FUNCTION_28	CALL_2
0x40022ac	              0x90	                                     nop	      1284	obj-elf.c	FUNCTION_28
0x40022ad	              0xc9	                                   leave	      1284	obj-elf.c	FUNCTION_28
0x40022ae	              0xc3	                                     ret	      1284	obj-elf.c	FUNCTION_28
elf_s_get_other	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,2:DO,0:IF,0:WHILE,0	11
0x40001e6	              0x55	                                push rbp	       245	obj-elf.c	FUNCTION_7
0x40001e7	          0x4889e5	                            mov rbp, rsp	       245	obj-elf.c	FUNCTION_7
0x40001ea	        0x4883ec10	                           sub rsp, 0x10	       245	obj-elf.c	FUNCTION_7
0x40001ee	        0x48897df8	                mov qword [rbp - 8], rdi	       245	obj-elf.c	FUNCTION_7
0x40001f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       246	obj-elf.c	FUNCTION_7	CALL_2
0x40001f6	          0x4889c7	                            mov rdi, rax	       246	obj-elf.c	FUNCTION_7	CALL_2
0x40001f9	      0xe800000000	                          call 0x40001fe	       246	obj-elf.c	FUNCTION_7	CALL_2
0x40001fe	         0xfb64049	           movzx eax, byte [rax + 0x49] 	       246	obj-elf.c	FUNCTION_7	CALL_2
0x4000202	           0xfb6c0	                           movzx eax, al	       246	obj-elf.c	FUNCTION_7	CALL_2
0x4000205	              0xc9	                                   leave	       247	obj-elf.c	FUNCTION_7
0x4000206	              0xc3	                                     ret	       247	obj-elf.c	FUNCTION_7
obj_elf_gnu_attribute	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:DO,0:IF,0:WHILE,0	9
0x4002f21	              0x55	                                push rbp	      1757	obj-elf.c	FUNCTION_43
0x4002f22	          0x4889e5	                            mov rbp, rsp	      1757	obj-elf.c	FUNCTION_43
0x4002f25	        0x4883ec10	                           sub rsp, 0x10	      1757	obj-elf.c	FUNCTION_43
0x4002f29	          0x897dfc	                mov dword [rbp - 4], edi	      1757	obj-elf.c	FUNCTION_43
0x4002f2c	      0xbf01000000	                              mov edi, 1	      1758	obj-elf.c	FUNCTION_43	CALL_1
0x4002f31	      0xe800000000	                          call 0x4002f36	      1758	obj-elf.c	FUNCTION_43	CALL_1
0x4002f36	              0x90	                                     nop	      1759	obj-elf.c	FUNCTION_43
0x4002f37	              0xc9	                                   leave	      1759	obj-elf.c	FUNCTION_43
0x4002f38	              0xc3	                                     ret	      1759	obj-elf.c	FUNCTION_43
elf_s_set_size	FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:DO,0:IF,0:WHILE,0	14
0x4000174	              0x55	                                push rbp	       227	obj-elf.c	FUNCTION_4
0x4000175	          0x4889e5	                            mov rbp, rsp	       227	obj-elf.c	FUNCTION_4
0x4000178	        0x4883ec10	                           sub rsp, 0x10	       227	obj-elf.c	FUNCTION_4
0x400017c	        0x48897df8	                mov qword [rbp - 8], rdi	       227	obj-elf.c	FUNCTION_4
0x4000180	        0x488975f0	             mov qword [rbp - 0x10], rsi	       227	obj-elf.c	FUNCTION_4
0x4000184	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	obj-elf.c	FUNCTION_4	CALL_1
0x4000188	          0x4889c7	                            mov rdi, rax	       228	obj-elf.c	FUNCTION_4	CALL_1
0x400018b	      0xe800000000	                          call 0x4000190	       228	obj-elf.c	FUNCTION_4	CALL_1
0x4000190	          0x4889c2	                            mov rdx, rax	       228	obj-elf.c	FUNCTION_4	CALL_1
0x4000193	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       228	obj-elf.c	FUNCTION_4	CALL_1
0x4000197	        0x48894238	             mov qword [rdx + 0x38], rax	       228	obj-elf.c	FUNCTION_4	CALL_1
0x400019b	              0x90	                                     nop	       229	obj-elf.c	FUNCTION_4
0x400019c	              0xc9	                                   leave	       229	obj-elf.c	FUNCTION_4
0x400019d	              0xc3	                                     ret	       229	obj-elf.c	FUNCTION_4
elf_frob_file_before_adjust	FOR,1:SWITCH,0:functions,0:ELSE,1:CALL,14:DO,0:IF,6:WHILE,0	99
0x4004577	              0x55	                                push rbp	      2508	obj-elf.c	FUNCTION_62
0x4004578	          0x4889e5	                            mov rbp, rsp	      2508	obj-elf.c	FUNCTION_62
0x400457b	        0x4883ec20	                           sub rsp, 0x20	      2508	obj-elf.c	FUNCTION_62
0x400457f	    0x488b05000000	            mov rax, qword [0x04004586] 	      2509	obj-elf.c	FUNCTION_62	IF_1
0x4004586	          0x4885c0	                           test rax, rax	      2509	obj-elf.c	FUNCTION_62	IF_1
0x4004589	     0xf8453010000	                            je 0x40046e2	      2509	obj-elf.c	FUNCTION_62	IF_1
0x400458f	    0x488b05000000	            mov rax, qword [0x04004596] 	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x4004596	        0x488945e8	             mov qword [rbp - 0x18], rax	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x400459a	      0xe938010000	                           jmp 0x40046d7	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x400459f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2514	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	CALL_2
0x40045a3	          0x4889c7	                            mov rdi, rax	      2514	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	CALL_2
0x40045a6	      0xe800000000	                          call 0x40045ab	      2514	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	CALL_2
0x40045ab	            0x85c0	                           test eax, eax	      2514	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	CALL_2
0x40045ad	     0xf8514010000	                           jne 0x40046c7	      2514	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	CALL_2
0x40045b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2516	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_3
0x40045b7	          0x4889c7	                            mov rdi, rax	      2516	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_3
0x40045ba	      0xe800000000	                          call 0x40045bf	      2516	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_3
0x40045bf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2516	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_3
0x40045c3	          0x4885c0	                           test rax, rax	      2516	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_3
0x40045c6	     0xf84b5000000	                            je 0x4004681	      2516	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_3
0x40045cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x40045d0	          0x4889c7	                            mov rdi, rax	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x40045d3	      0xe800000000	                          call 0x40045d8	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x40045d8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x40045dc	      0xbe40000000	                           mov esi, 0x40	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x40045e1	          0x4889c7	                            mov rdi, rax	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x40045e4	      0xe800000000	                          call 0x40045e9	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x40045e9	        0x488945f0	             mov qword [rbp - 0x10], rax	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x40045ed	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40045f2	            0x7455	                            je 0x4004649	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40045f4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40045f8	        0x4883c001	                              add rax, 1	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40045fc	           0xfb600	                   movzx eax, byte [rax]	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40045ff	            0x3c40	                            cmp al, 0x40	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4004601	            0x7546	                           jne 0x4004649	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4004603	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4004607	        0x4883c002	                              add rax, 2	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x400460b	           0xfb600	                   movzx eax, byte [rax]	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x400460e	            0x3c40	                            cmp al, 0x40	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4004610	            0x7537	                           jne 0x4004649	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4004612	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2528	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_6
0x4004616	        0x4883c003	                              add rax, 3	      2528	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_6
0x400461a	          0x4889c7	                            mov rdi, rax	      2528	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_6
0x400461d	      0xe800000000	                          call 0x4004622	      2528	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_6
0x4004622	        0x4883c001	                              add rax, 1	      2528	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_6
0x4004626	        0x488945f8	                mov qword [rbp - 8], rax	      2528	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_6
0x400462a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2529	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_7
0x400462e	        0x488d7003	                      lea rsi, [rax + 3]	      2529	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_7
0x4004632	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2529	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_7
0x4004636	        0x488d4801	                      lea rcx, [rax + 1]	      2529	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_7
0x400463a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2529	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_7
0x400463e	          0x4889c2	                            mov rdx, rax	      2529	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_7
0x4004641	          0x4889cf	                            mov rdi, rcx	      2529	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_7
0x4004644	      0xe800000000	                          call 0x4004649	      2529	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_7
0x4004649	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2531	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_8
0x400464d	          0x4889c7	                            mov rdi, rax	      2531	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_8
0x4004650	      0xe800000000	                          call 0x4004655	      2531	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_8
0x4004655	            0x85c0	                           test eax, eax	      2531	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_8
0x4004657	            0x756e	                           jne 0x40046c7	      2531	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_8
0x4004659	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2532	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_9
0x400465d	          0x4889c7	                            mov rdi, rax	      2532	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_9
0x4004660	      0xe800000000	                          call 0x4004665	      2532	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_9
0x4004665	            0x85c0	                           test eax, eax	      2532	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_9
0x4004667	            0x755e	                           jne 0x40046c7	      2532	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_9
0x4004669	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2533	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_10
0x400466d	      0xba00000000	                              mov edx, 0	      2533	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_10
0x4004672	      0xbe00000000	                              mov esi, 0	      2533	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_10
0x4004677	          0x4889c7	                            mov rdi, rax	      2533	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_10
0x400467a	      0xe800000000	                          call 0x400467f	      2533	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_10
0x400467f	            0xeb46	                           jmp 0x40046c7	      2533	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_10
0x4004681	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2539	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_11
0x4004685	          0x4889c7	                            mov rdi, rax	      2539	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_11
0x4004688	      0xe800000000	                          call 0x400468d	      2539	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_11
0x400468d	            0x85c0	                           test eax, eax	      2539	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_11
0x400468f	            0x7436	                            je 0x40046c7	      2539	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_11
0x4004691	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2540	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_12
0x4004695	          0x4889c7	                            mov rdi, rax	      2540	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_12
0x4004698	      0xe800000000	                          call 0x400469d	      2540	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_12
0x400469d	            0x85c0	                           test eax, eax	      2540	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_12
0x400469f	            0x7526	                           jne 0x40046c7	      2540	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_12
0x40046a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2541	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_13
0x40046a5	          0x4889c7	                            mov rdi, rax	      2541	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_13
0x40046a8	      0xe800000000	                          call 0x40046ad	      2541	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_13
0x40046ad	            0x85c0	                           test eax, eax	      2541	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_13
0x40046af	            0x7516	                           jne 0x40046c7	      2541	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_13
0x40046b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2542	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6
0x40046b5	      0xba00000000	                              mov edx, 0	      2542	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6
0x40046ba	      0xbe00000000	                              mov esi, 0	      2542	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6
0x40046bf	          0x4889c7	                            mov rdi, rax	      2542	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6
0x40046c2	      0xe800000000	                          call 0x40046c7	      2542	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6
0x40046c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x40046cb	          0x4889c7	                            mov rdi, rax	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x40046ce	      0xe800000000	                          call 0x40046d3	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x40046d3	        0x488945e8	             mov qword [rbp - 0x18], rax	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x40046d7	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x40046dc	     0xf85bdfeffff	                           jne 0x400459f	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x40046e2	              0x90	                                     nop	      2545	obj-elf.c	FUNCTION_62
0x40046e3	              0xc9	                                   leave	      2545	obj-elf.c	FUNCTION_62
0x40046e4	              0xc3	                                     ret	      2545	obj-elf.c	FUNCTION_62
elf_frob_file_after_relocs	FOR,2:SWITCH,0:functions,0:ELSE,0:CALL,29:DO,0:IF,4:WHILE,0	73
0x40046e5	              0x55	                                push rbp	      2554	obj-elf.c	FUNCTION_63
0x40046e6	          0x4889e5	                            mov rbp, rsp	      2554	obj-elf.c	FUNCTION_63
0x40046e9	              0x53	                                push rbx	      2554	obj-elf.c	FUNCTION_63
0x40046ea	        0x4883ec38	                           sub rsp, 0x38	      2554	obj-elf.c	FUNCTION_63
0x40046ee	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x40046f5	      0xe9e3000000	                           jmp 0x40047dd	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x40046fa	    0x488b05000000	            mov rax, qword [0x04004701] 	      2563	obj-elf.c	FUNCTION_63	FOR_1
0x4004701	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      2563	obj-elf.c	FUNCTION_63	FOR_1
0x4004704	        0x48c1e203	                              shl rdx, 3	      2563	obj-elf.c	FUNCTION_63	FOR_1
0x4004708	          0x4801d0	                            add rax, rdx	      2563	obj-elf.c	FUNCTION_63	FOR_1
0x400470b	          0x488b00	                    mov rax, qword [rax]	      2563	obj-elf.c	FUNCTION_63	FOR_1
0x400470e	        0x488945e0	             mov qword [rbp - 0x20], rax	      2563	obj-elf.c	FUNCTION_63	FOR_1
0x4004712	    0x48c745d80400	               mov qword [rbp - 0x28], 4	      2564	obj-elf.c	FUNCTION_63	FOR_1
0x400471a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x400471e	        0x488945d0	             mov qword [rbp - 0x30], rax	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x4004722	            0xeb34	                           jmp 0x4004758	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x4004724	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x4004728	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x400472b	          0x83e004	                              and eax, 4	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x400472e	            0x85c0	                           test eax, eax	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x4004730	            0x7407	                            je 0x4004739	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x4004732	      0xb808000000	                              mov eax, 8	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x4004737	            0xeb05	                           jmp 0x400473e	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x4004739	      0xb804000000	                              mov eax, 4	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x400473e	        0x480145d8	            add qword [rbp - 0x28], rax 	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x4004742	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x4004746	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x400474d	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x4004754	        0x488945d0	             mov qword [rbp - 0x30], rax	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x4004758	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x400475d	            0x75c5	                           jne 0x4004724	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x400475f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2568	obj-elf.c	FUNCTION_63	FOR_1	CALL_2
0x4004763	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2568	obj-elf.c	FUNCTION_63	FOR_1	CALL_2
0x400476a	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      2568	obj-elf.c	FUNCTION_63	FOR_1	CALL_2
0x4004771	        0x488945e8	             mov qword [rbp - 0x18], rax	      2568	obj-elf.c	FUNCTION_63	FOR_1	CALL_2
0x4004775	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2569	obj-elf.c	FUNCTION_63	FOR_1	CALL_3
0x4004779	      0xbe00000000	                              mov esi, 0	      2569	obj-elf.c	FUNCTION_63	FOR_1	CALL_3
0x400477e	          0x4889c7	                            mov rdi, rax	      2569	obj-elf.c	FUNCTION_63	FOR_1	CALL_3
0x4004781	      0xe800000000	                          call 0x4004786	      2569	obj-elf.c	FUNCTION_63	FOR_1	CALL_3
0x4004786	    0x488b05000000	            mov rax, qword [0x0400478d] 	      2570	obj-elf.c	FUNCTION_63	FOR_1	CALL_4
0x400478d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2570	obj-elf.c	FUNCTION_63	FOR_1	CALL_4
0x4004791	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2570	obj-elf.c	FUNCTION_63	FOR_1	CALL_4
0x4004795	          0x4889ce	                            mov rsi, rcx	      2570	obj-elf.c	FUNCTION_63	FOR_1	CALL_4
0x4004798	          0x4889c7	                            mov rdi, rax	      2570	obj-elf.c	FUNCTION_63	FOR_1	CALL_4
0x400479b	      0xe800000000	                          call 0x40047a0	      2570	obj-elf.c	FUNCTION_63	FOR_1	CALL_4
0x40047a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2571	obj-elf.c	FUNCTION_63	FOR_1	CALL_5
0x40047a4	          0x4889c7	                            mov rdi, rax	      2571	obj-elf.c	FUNCTION_63	FOR_1	CALL_5
0x40047a7	      0xe800000000	                          call 0x40047ac	      2571	obj-elf.c	FUNCTION_63	FOR_1	CALL_5
0x40047ac	          0x4889c2	                            mov rdx, rax	      2571	obj-elf.c	FUNCTION_63	FOR_1	CALL_5
0x40047af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2571	obj-elf.c	FUNCTION_63	FOR_1	CALL_5
0x40047b3	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      2571	obj-elf.c	FUNCTION_63	FOR_1	CALL_5
0x40047ba	    0x488b1d000000	            mov rbx, qword [0x040047c1] 	      2572	obj-elf.c	FUNCTION_63	FOR_1	CALL_6
0x40047c1	      0xe800000000	                          call 0x40047c6	      2572	obj-elf.c	FUNCTION_63	FOR_1	CALL_6
0x40047c6	        0x48894310	             mov qword [rbx + 0x10], rax	      2572	obj-elf.c	FUNCTION_63	FOR_1	CALL_6
0x40047ca	    0x488b05000000	            mov rax, qword [0x040047d1] 	      2573	obj-elf.c	FUNCTION_63	FOR_1	CALL_7
0x40047d1	          0x4889c7	                            mov rdi, rax	      2573	obj-elf.c	FUNCTION_63	FOR_1	CALL_7
0x40047d4	      0xe800000000	                          call 0x40047d9	      2573	obj-elf.c	FUNCTION_63	FOR_1	CALL_7
0x40047d9	        0x8345cc01	               add dword [rbp - 0x34], 1	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x40047dd	    0x8b0500000000	            mov eax, dword [0x040047e3] 	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x40047e3	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x40047e6	     0xf870effffff	                            ja 0x40046fa	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x40047ec	    0x488b05000000	            mov rax, qword [0x040047f3] 	      2577	obj-elf.c	FUNCTION_63	CALL_8
0x40047f3	      0xbe00000000	                              mov esi, 0	      2577	obj-elf.c	FUNCTION_63	CALL_8
0x40047f8	          0x4889c7	                            mov rdi, rax	      2577	obj-elf.c	FUNCTION_63	CALL_8
0x40047fb	      0xe800000000	                          call 0x4004800	      2577	obj-elf.c	FUNCTION_63	CALL_8
0x4004800	    0x488b05000000	            mov rax, qword [0x04004807] 	      2578	obj-elf.c	FUNCTION_63	CALL_9
0x4004807	          0x4889c7	                            mov rdi, rax	      2578	obj-elf.c	FUNCTION_63	CALL_9
0x400480a	      0xe800000000	                          call 0x400480f	      2578	obj-elf.c	FUNCTION_63	CALL_9
0x400480f	              0x90	                                     nop	      2648	obj-elf.c	FUNCTION_63
0x4004810	        0x4883c438	                           add rsp, 0x38	      2648	obj-elf.c	FUNCTION_63
0x4004814	              0x5b	                                 pop rbx	      2648	obj-elf.c	FUNCTION_63
0x4004815	              0x5d	                                 pop rbp	      2648	obj-elf.c	FUNCTION_63
0x4004816	              0xc3	                                     ret	      2648	obj-elf.c	FUNCTION_63
