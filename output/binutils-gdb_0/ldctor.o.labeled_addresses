ctor_prio	FOR,0:WHILE,1:functions,0:DO,0:ELSE,0:SWITCH,0:IF,4:CALL,3	60
0x4000243	              0x55	                                push rbp	       125	ldctor.c	FUNCTION_2
0x4000244	          0x4889e5	                            mov rbp, rsp	       125	ldctor.c	FUNCTION_2
0x4000247	        0x4883ec10	                           sub rsp, 0x10	       125	ldctor.c	FUNCTION_2
0x400024b	        0x48897df8	                mov qword [rbp - 8], rdi	       125	ldctor.c	FUNCTION_2
0x400024f	            0xeb05	                           jmp 0x4000256	       130	ldctor.c	FUNCTION_2	WHILE_1
0x4000251	      0x488345f801	                  add qword [rbp - 8], 1	       131	ldctor.c	FUNCTION_2	WHILE_1
0x4000256	        0x488b45f8	                mov rax, qword [rbp - 8]	       130	ldctor.c	FUNCTION_2	WHILE_1
0x400025a	           0xfb600	                   movzx eax, byte [rax]	       130	ldctor.c	FUNCTION_2	WHILE_1
0x400025d	            0x3c5f	                            cmp al, 0x5f	       130	ldctor.c	FUNCTION_2	WHILE_1
0x400025f	            0x74f0	                            je 0x4000251	       130	ldctor.c	FUNCTION_2	WHILE_1
0x4000261	        0x488b45f8	                mov rax, qword [rbp - 8]	       133	ldctor.c	FUNCTION_2	IF_1	CALL_1
0x4000265	      0xba07000000	                              mov edx, 7	       133	ldctor.c	FUNCTION_2	IF_1	CALL_1
0x400026a	      0xbe00000000	                              mov esi, 0	       133	ldctor.c	FUNCTION_2	IF_1	CALL_1
0x400026f	          0x4889c7	                            mov rdi, rax	       133	ldctor.c	FUNCTION_2	IF_1	CALL_1
0x4000272	      0xe800000000	                          call 0x4000277	       133	ldctor.c	FUNCTION_2	IF_1	CALL_1
0x4000277	            0x85c0	                           test eax, eax	       133	ldctor.c	FUNCTION_2	IF_1	CALL_1
0x4000279	            0x740a	                            je 0x4000285	       133	ldctor.c	FUNCTION_2	IF_1	CALL_1
0x400027b	      0xb8ffffffff	                     mov eax, 0xffffffff	       134	ldctor.c	FUNCTION_2	IF_1
0x4000280	      0xe983000000	                           jmp 0x4000308	       134	ldctor.c	FUNCTION_2	IF_1
0x4000285	      0x488345f807	                  add qword [rbp - 8], 7	       136	ldctor.c	FUNCTION_2
0x400028a	        0x488b45f8	                mov rax, qword [rbp - 8]	       138	ldctor.c	FUNCTION_2	IF_2
0x400028e	           0xfb610	                   movzx edx, byte [rax]	       138	ldctor.c	FUNCTION_2	IF_2
0x4000291	        0x488b45f8	                mov rax, qword [rbp - 8]	       138	ldctor.c	FUNCTION_2	IF_2
0x4000295	        0x4883c002	                              add rax, 2	       138	ldctor.c	FUNCTION_2	IF_2
0x4000299	           0xfb600	                   movzx eax, byte [rax]	       138	ldctor.c	FUNCTION_2	IF_2
0x400029c	            0x38c2	                              cmp dl, al	       138	ldctor.c	FUNCTION_2	IF_2
0x400029e	            0x7407	                            je 0x40002a7	       138	ldctor.c	FUNCTION_2	IF_2
0x40002a0	      0xb8ffffffff	                     mov eax, 0xffffffff	       139	ldctor.c	FUNCTION_2	IF_2
0x40002a5	            0xeb61	                           jmp 0x4000308	       139	ldctor.c	FUNCTION_2	IF_2
0x40002a7	        0x488b45f8	                mov rax, qword [rbp - 8]	       140	ldctor.c	FUNCTION_2	IF_3
0x40002ab	        0x4883c001	                              add rax, 1	       140	ldctor.c	FUNCTION_2	IF_3
0x40002af	           0xfb600	                   movzx eax, byte [rax]	       140	ldctor.c	FUNCTION_2	IF_3
0x40002b2	            0x3c49	                            cmp al, 0x49	       140	ldctor.c	FUNCTION_2	IF_3
0x40002b4	            0x7416	                            je 0x40002cc	       140	ldctor.c	FUNCTION_2	IF_3
0x40002b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       140	ldctor.c	FUNCTION_2	IF_3
0x40002ba	        0x4883c001	                              add rax, 1	       140	ldctor.c	FUNCTION_2	IF_3
0x40002be	           0xfb600	                   movzx eax, byte [rax]	       140	ldctor.c	FUNCTION_2	IF_3
0x40002c1	            0x3c44	                            cmp al, 0x44	       140	ldctor.c	FUNCTION_2	IF_3
0x40002c3	            0x7407	                            je 0x40002cc	       140	ldctor.c	FUNCTION_2	IF_3
0x40002c5	      0xb8ffffffff	                     mov eax, 0xffffffff	       141	ldctor.c	FUNCTION_2	IF_3
0x40002ca	            0xeb3c	                           jmp 0x4000308	       141	ldctor.c	FUNCTION_2	IF_3
0x40002cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       142	ldctor.c	FUNCTION_2	IF_4	CALL_2
0x40002d0	        0x4883c003	                              add rax, 3	       142	ldctor.c	FUNCTION_2	IF_4	CALL_2
0x40002d4	           0xfb600	                   movzx eax, byte [rax]	       142	ldctor.c	FUNCTION_2	IF_4	CALL_2
0x40002d7	           0xfbec0	                           movsx eax, al	       142	ldctor.c	FUNCTION_2	IF_4	CALL_2
0x40002da	           0xfb6c0	                           movzx eax, al	       142	ldctor.c	FUNCTION_2	IF_4	CALL_2
0x40002dd	            0x4898	                                    cdqe	       142	ldctor.c	FUNCTION_2	IF_4	CALL_2
0x40002df	     0xfb784000000	             movzx eax, word [rax + rax]	       142	ldctor.c	FUNCTION_2	IF_4	CALL_2
0x40002e7	           0xfb7c0	                           movzx eax, ax	       142	ldctor.c	FUNCTION_2	IF_4	CALL_2
0x40002ea	          0x83e004	                              and eax, 4	       142	ldctor.c	FUNCTION_2	IF_4	CALL_2
0x40002ed	            0x85c0	                           test eax, eax	       142	ldctor.c	FUNCTION_2	IF_4	CALL_2
0x40002ef	            0x7507	                           jne 0x40002f8	       142	ldctor.c	FUNCTION_2	IF_4	CALL_2
0x40002f1	      0xb8ffffffff	                     mov eax, 0xffffffff	       143	ldctor.c	FUNCTION_2	IF_4
0x40002f6	            0xeb10	                           jmp 0x4000308	       143	ldctor.c	FUNCTION_2	IF_4
0x40002f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       145	ldctor.c	FUNCTION_2	CALL_3
0x40002fc	        0x4883c003	                              add rax, 3	       145	ldctor.c	FUNCTION_2	CALL_3
0x4000300	          0x4889c7	                            mov rdi, rax	       145	ldctor.c	FUNCTION_2	CALL_3
0x4000303	      0xe800000000	                          call 0x4000308	       145	ldctor.c	FUNCTION_2	CALL_3
0x4000308	              0xc9	                                   leave	       146	ldctor.c	FUNCTION_2
0x4000309	              0xc3	                                     ret	       146	ldctor.c	FUNCTION_2
ldctor_build_sets	FOR,6:WHILE,1:functions,0:DO,0:ELSE,4:SWITCH,1:IF,16:CALL,50	437
0x40003cb	              0x55	                                push rbp	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40003cc	          0x4889e5	                            mov rbp, rsp	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40003cf	            0x4155	                                push r13	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40003d1	            0x4154	                                push r12	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40003d3	              0x53	                                push rbx	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40003d4	        0x4883ec48	                           sub rsp, 0x48	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40003d8	    0x8b0500000000	            mov eax, dword [0x040003de] 	       207	ldctor.c	ELSE_3	FUNCTION_4	IF_1
0x40003de	            0x85c0	                           test eax, eax	       207	ldctor.c	ELSE_3	FUNCTION_4	IF_1
0x40003e0	     0xf8583060000	                           jne 0x4000a69	       207	ldctor.c	ELSE_3	FUNCTION_4	IF_1
0x40003e6	    0xc70500000000	               mov dword [0x040003f0], 1	       209	ldctor.c	ELSE_3	FUNCTION_4
0x40003f0	    0x8b0500000000	            mov eax, dword [0x040003f6] 	       211	ldctor.c	ELSE_3	FUNCTION_4	IF_2
0x40003f6	            0x85c0	                           test eax, eax	       211	ldctor.c	ELSE_3	FUNCTION_4	IF_2
0x40003f8	     0xf846b010000	                            je 0x4000569	       211	ldctor.c	ELSE_3	FUNCTION_4	IF_2
0x40003fe	    0x488b05000000	            mov rax, qword [0x04000405] 	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000405	        0x488945b8	             mov qword [rbp - 0x48], rax	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000409	      0xe950010000	                           jmp 0x400055e	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x400040e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x4000412	        0x488b4020	            mov rax, qword [rax + 0x20] 	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x4000416	          0x4885c0	                           test rax, rax	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x4000419	     0xf8433010000	                            je 0x4000552	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x400041f	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       222	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000426	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x400042a	        0x488b4020	            mov rax, qword [rax + 0x20] 	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x400042e	        0x488945c0	             mov qword [rbp - 0x40], rax	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x4000432	            0xeb0f	                           jmp 0x4000443	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x4000434	        0x8345a401	               add dword [rbp - 0x5c], 1	       224	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x4000438	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x400043c	          0x488b00	                    mov rax, qword [rax]	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x400043f	        0x488945c0	             mov qword [rbp - 0x40], rax	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x4000443	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x4000448	            0x75ea	                           jne 0x4000434	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x400044a	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x400044d	            0x4898	                                    cdqe	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x400044f	        0x48c1e003	                              shl rax, 3	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x4000453	          0x4889c7	                            mov rdi, rax	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x4000456	      0xe800000000	                          call 0x400045b	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x400045b	        0x488945d8	             mov qword [rbp - 0x28], rax	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x400045f	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       228	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000466	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x400046a	        0x488b4020	            mov rax, qword [rax + 0x20] 	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x400046e	        0x488945c0	             mov qword [rbp - 0x40], rax	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000472	            0xeb2a	                           jmp 0x400049e	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000474	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       231	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000477	            0x4898	                                    cdqe	       231	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000479	    0x488d14c50000	                        lea rdx, [rax*8]	       231	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000481	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       231	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000485	          0x4801c2	                            add rdx, rax	       231	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000488	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       231	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x400048c	          0x488902	                    mov qword [rdx], rax	       231	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x400048f	        0x8345a801	               add dword [rbp - 0x58], 1	       232	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000493	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000497	          0x488b00	                    mov rax, qword [rax]	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x400049a	        0x488945c0	             mov qword [rbp - 0x40], rax	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x400049e	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x40004a3	            0x75cf	                           jne 0x4000474	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x40004a5	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x40004a8	          0x4863f0	                         movsxd rsi, eax	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x40004ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x40004af	      0xb900000000	                              mov ecx, 0	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x40004b4	      0xba08000000	                              mov edx, 8	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x40004b9	          0x4889c7	                            mov rdi, rax	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x40004bc	      0xe800000000	                          call 0x40004c1	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x40004c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       237	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40004c5	          0x488b00	                    mov rax, qword [rax]	       237	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40004c8	        0x488945c0	             mov qword [rbp - 0x40], rax	       237	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40004cc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       238	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40004d0	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       238	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40004d4	        0x48895020	             mov qword [rax + 0x20], rdx	       238	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40004d8	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x40004df	            0xeb3a	                           jmp 0x400051b	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x40004e1	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x40004e4	            0x4898	                                    cdqe	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x40004e6	    0x488d14c50000	                        lea rdx, [rax*8]	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x40004ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x40004f2	          0x4801d0	                            add rax, rdx	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x40004f5	          0x488b00	                    mov rax, qword [rax]	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x40004f8	          0x8b55a8	             mov edx, dword [rbp - 0x58]	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x40004fb	          0x4863d2	                         movsxd rdx, edx	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x40004fe	        0x4883c201	                              add rdx, 1	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000502	    0x488d0cd50000	                        lea rcx, [rdx*8]	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400050a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400050e	          0x4801ca	                            add rdx, rcx	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000511	          0x488b12	                    mov rdx, qword [rdx]	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000514	          0x488910	                    mov qword [rax], rdx	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000517	        0x8345a801	               add dword [rbp - 0x58], 1	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400051b	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400051e	          0x83e801	                              sub eax, 1	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000521	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000524	            0x7fbb	                            jg 0x40004e1	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000526	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       241	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000529	            0x4898	                                    cdqe	       241	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x400052b	    0x488d14c50000	                        lea rdx, [rax*8]	       241	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000533	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       241	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000537	          0x4801d0	                            add rax, rdx	       241	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x400053a	          0x488b00	                    mov rax, qword [rax]	       241	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x400053d	    0x48c700000000	                      mov qword [rax], 0	       241	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000544	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       243	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_3
0x4000548	          0x4889c7	                            mov rdi, rax	       243	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_3
0x400054b	      0xe800000000	                          call 0x4000550	       243	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_3
0x4000550	            0xeb01	                           jmp 0x4000553	       243	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_3
0x4000552	              0x90	                                     nop	       220	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x4000553	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000557	          0x488b00	                    mov rax, qword [rax]	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x400055a	        0x488945b8	             mov qword [rbp - 0x48], rax	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x400055e	      0x48837db800	               cmp qword [rbp - 0x48], 0	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000563	     0xf85a5feffff	                           jne 0x400040e	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000569	      0xbf00000000	                              mov edi, 0	       247	ldctor.c	ELSE_3	FUNCTION_4	CALL_4
0x400056e	      0xe800000000	                          call 0x4000573	       247	ldctor.c	ELSE_3	FUNCTION_4	CALL_4
0x4000573	      0xbf00000000	                              mov edi, 0	       248	ldctor.c	ELSE_3	FUNCTION_4	CALL_5
0x4000578	      0xe800000000	                          call 0x400057d	       248	ldctor.c	ELSE_3	FUNCTION_4	CALL_5
0x400057d	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       250	ldctor.c	ELSE_3	FUNCTION_4
0x4000584	    0x488b05000000	            mov rax, qword [0x0400058b] 	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x400058b	        0x488945b8	             mov qword [rbp - 0x48], rax	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x400058f	      0xe9c3040000	                           jmp 0x4000a57	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x4000594	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x4000598	        0x488b4008	                mov rax, qword [rax + 8]	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x400059c	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x40005a0	            0x3c03	                               cmp al, 3	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x40005a2	     0xf84a3040000	                            je 0x4000a4b	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x40005a8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       261	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x40005ac	        0x488b4008	                mov rax, qword [rax + 8]	       261	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x40005b0	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       261	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x40005b4	            0x3c04	                               cmp al, 4	       261	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x40005b6	     0xf848f040000	                            je 0x4000a4b	       261	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x40005bc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x40005c0	          0x8b5010	            mov edx, dword [rax + 0x10] 	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x40005c3	    0x488b05000000	            mov rax, qword [0x040005ca] 	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x40005ca	            0x89d6	                            mov esi, edx	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x40005cc	          0x4889c7	                            mov rdi, rax	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x40005cf	      0xe800000000	                          call 0x40005d4	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x40005d4	        0x488945d0	             mov qword [rbp - 0x30], rax	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x40005d8	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       275	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5
0x40005dd	     0xf856e010000	                           jne 0x4000751	       275	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5
0x40005e3	     0xfb605000000	           movzx eax, byte [0x040005ea] 	       277	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_7
0x40005ea	          0x83e003	                              and eax, 3	       277	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_7
0x40005ed	            0x3c02	                               cmp al, 2	       277	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_7
0x40005ef	            0x7550	                           jne 0x4000641	       277	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_7
0x40005f1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       282	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6
0x40005f5	        0x488b4008	                mov rax, qword [rax + 8]	       282	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6
0x40005f9	        0x4c8b6008	                mov r12, qword [rax + 8]	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x40005fd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000601	          0x8b4010	            mov eax, dword [rax + 0x10] 	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000604	            0x89c7	                            mov edi, eax	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000606	      0xe800000000	                          call 0x400060b	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x400060b	          0x4989c5	                            mov r13, rax	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x400060e	    0x488b05000000	            mov rax, qword [0x04000615] 	       280	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_10
0x4000615	        0x488b4008	                mov rax, qword [rax + 8]	       280	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_10
0x4000619	          0x488b18	                    mov rbx, qword [rax]	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x400061c	      0xbf00000000	                              mov edi, 0	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000621	      0xe800000000	                          call 0x4000626	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000626	          0x4c89e1	                            mov rcx, r12	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000629	          0x4c89ea	                            mov rdx, r13	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x400062c	          0x4889de	                            mov rsi, rbx	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x400062f	          0x4889c7	                            mov rdi, rax	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000632	      0xb800000000	                              mov eax, 0	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000637	      0xe800000000	                          call 0x400063c	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x400063c	      0xe90b040000	                           jmp 0x4000a4c	       283	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6
0x4000641	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x4000645	        0x488b4020	            mov rax, qword [rax + 0x20] 	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x4000649	        0x488b4010	            mov rax, qword [rax + 0x10] 	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x400064d	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x4000654	          0x4885c0	                           test rax, rax	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x4000657	            0x7428	                            je 0x4000681	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x4000659	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x400065d	          0x8b5010	            mov edx, dword [rax + 0x10] 	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x4000660	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x4000664	        0x488b4020	            mov rax, qword [rax + 0x20] 	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x4000668	        0x488b4010	            mov rax, qword [rax + 0x10] 	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x400066c	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x4000673	            0x89d6	                            mov esi, edx	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x4000675	          0x4889c7	                            mov rdi, rax	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x4000678	      0xe800000000	                          call 0x400067d	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x400067d	        0x488945d0	             mov qword [rbp - 0x30], rax	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x4000681	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       291	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8
0x4000686	     0xf85c5000000	                           jne 0x4000751	       291	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8
0x400068c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x4000690	        0x488b4020	            mov rax, qword [rax + 0x20] 	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x4000694	        0x488b4010	            mov rax, qword [rax + 0x10] 	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x4000698	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x400069f	          0x4885c0	                           test rax, rax	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x40006a2	            0x7551	                           jne 0x40006f5	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x40006a4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       298	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x40006a8	        0x488b4008	                mov rax, qword [rax + 8]	       298	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x40006ac	        0x4c8b6008	                mov r12, qword [rax + 8]	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40006b0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40006b4	          0x8b4010	            mov eax, dword [rax + 0x10] 	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40006b7	            0x89c7	                            mov edi, eax	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40006b9	      0xe800000000	                          call 0x40006be	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40006be	          0x4989c5	                            mov r13, rax	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40006c1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       296	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_15
0x40006c5	        0x488b4020	            mov rax, qword [rax + 0x20] 	       296	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_15
0x40006c9	        0x488b4010	            mov rax, qword [rax + 0x10] 	       296	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_15
0x40006cd	          0x488b18	                    mov rbx, qword [rax]	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40006d0	      0xbf00000000	                              mov edi, 0	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40006d5	      0xe800000000	                          call 0x40006da	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40006da	          0x4c89e1	                            mov rcx, r12	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40006dd	          0x4c89ea	                            mov rdx, r13	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40006e0	          0x4889de	                            mov rsi, rbx	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40006e3	          0x4889c7	                            mov rdi, rax	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40006e6	      0xb800000000	                              mov eax, 0	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40006eb	      0xe800000000	                          call 0x40006f0	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40006f0	      0xe957030000	                           jmp 0x4000a4c	       304	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8
0x40006f5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       303	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1
0x40006f9	        0x488b4008	                mov rax, qword [rax + 8]	       303	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1
0x40006fd	        0x4c8b6008	                mov r12, qword [rax + 8]	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000701	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000705	          0x8b4010	            mov eax, dword [rax + 0x10] 	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000708	            0x89c7	                            mov edi, eax	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x400070a	      0xe800000000	                          call 0x400070f	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x400070f	          0x4989c5	                            mov r13, rax	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000712	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       301	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_19
0x4000716	        0x488b4020	            mov rax, qword [rax + 0x20] 	       301	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_19
0x400071a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       301	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_19
0x400071e	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       301	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_19
0x4000725	        0x488b4008	                mov rax, qword [rax + 8]	       301	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_19
0x4000729	          0x488b18	                    mov rbx, qword [rax]	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x400072c	      0xbf00000000	                              mov edi, 0	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000731	      0xe800000000	                          call 0x4000736	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000736	          0x4c89e1	                            mov rcx, r12	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000739	          0x4c89ea	                            mov rdx, r13	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x400073c	          0x4889de	                            mov rsi, rbx	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x400073f	          0x4889c7	                            mov rdi, rax	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000742	      0xb800000000	                              mov eax, 0	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000747	      0xe800000000	                          call 0x400074c	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x400074c	      0xe9fb020000	                           jmp 0x4000a4c	       304	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8
0x4000751	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       308	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_21
0x4000755	          0x4889c7	                            mov rdi, rax	       308	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_21
0x4000758	      0xe800000000	                          call 0x400075d	       308	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_21
0x400075d	          0x8945b4	             mov dword [rbp - 0x4c], eax	       308	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_21
0x4000760	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000763	          0x83f802	                              cmp eax, 2	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000766	            0x7421	                            je 0x4000789	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000768	          0x83f802	                              cmp eax, 2	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400076b	            0x7f07	                            jg 0x4000774	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400076d	          0x83f801	                              cmp eax, 1	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000770	            0x740e	                            je 0x4000780	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000772	            0xeb45	                           jmp 0x40007b9	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000774	          0x83f804	                              cmp eax, 4	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000777	            0x7419	                            je 0x4000792	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000779	          0x83f808	                              cmp eax, 8	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400077c	            0x741d	                            je 0x400079b	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400077e	            0xeb39	                           jmp 0x40007b9	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000780	    0xc745ac1e0100	          mov dword [rbp - 0x54], 0x11e 	       311	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000787	            0xeb70	                           jmp 0x40007f9	       311	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000789	    0xc745ac1d0100	          mov dword [rbp - 0x54], 0x11d 	       312	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000790	            0xeb67	                           jmp 0x40007f9	       312	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000792	    0xc745ac1c0100	          mov dword [rbp - 0x54], 0x11c 	       313	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000799	            0xeb5e	                           jmp 0x40007f9	       313	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400079b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       315	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	IF_10
0x400079f	          0x8b4018	            mov eax, dword [rax + 0x18] 	       315	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	IF_10
0x40007a2	          0x83f802	                              cmp eax, 2	       315	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	IF_10
0x40007a5	            0x7509	                           jne 0x40007b0	       315	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	IF_10
0x40007a7	    0xc745ac1b0100	          mov dword [rbp - 0x54], 0x11b 	       316	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	IF_10
0x40007ae	            0xeb49	                           jmp 0x40007f9	       319	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x40007b0	    0xc745ac1a0100	          mov dword [rbp - 0x54], 0x11a 	       318	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	ELSE_2
0x40007b7	            0xeb40	                           jmp 0x40007f9	       319	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x40007b9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       322	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_24
0x40007bd	        0x488b4008	                mov rax, qword [rax + 8]	       322	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_24
0x40007c1	        0x488b5808	                mov rbx, qword [rax + 8]	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40007c5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40007c9	          0x4889c7	                            mov rdi, rax	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40007cc	      0xe800000000	                          call 0x40007d1	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40007d1	          0x4189c4	                           mov r12d, eax	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40007d4	      0xbf00000000	                              mov edi, 0	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40007d9	      0xe800000000	                          call 0x40007de	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40007de	          0x4889da	                            mov rdx, rbx	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40007e1	          0x4489e6	                           mov esi, r12d	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40007e4	          0x4889c7	                            mov rdi, rax	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40007e7	      0xb800000000	                              mov eax, 0	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40007ec	      0xe800000000	                          call 0x40007f1	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40007f1	    0xc745ac1c0100	          mov dword [rbp - 0x54], 0x11c 	       323	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x40007f8	              0x90	                                     nop	       324	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x40007f9	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40007fc	            0x4898	                                    cdqe	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40007fe	          0x4889c7	                            mov rdi, rax	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x4000801	      0xe800000000	                          call 0x4000806	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x4000806	          0x4889c6	                            mov rsi, rax	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x4000809	      0xbf17010000	                          mov edi, 0x117	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x400080e	      0xe800000000	                          call 0x4000813	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x4000813	      0xba00000000	                              mov edx, 0	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x4000818	          0x4889c6	                            mov rsi, rax	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x400081b	      0xbf00000000	                              mov edi, 0	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x4000820	      0xe800000000	                          call 0x4000825	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x4000825	          0x4889c7	                            mov rdi, rax	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x4000828	      0xe800000000	                          call 0x400082d	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x400082d	      0xbe00000000	                              mov esi, 0	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000832	      0xbf03010000	                          mov edi, 0x103	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000837	      0xe800000000	                          call 0x400083c	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x400083c	          0x4889c1	                            mov rcx, rax	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x400083f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000843	        0x488b4008	                mov rax, qword [rax + 8]	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000847	        0x488b4008	                mov rax, qword [rax + 8]	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x400084b	      0xba00000000	                              mov edx, 0	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000850	          0x4889ce	                            mov rsi, rcx	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000853	          0x4889c7	                            mov rdi, rax	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000856	      0xe800000000	                          call 0x400085b	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x400085b	          0x4889c7	                            mov rdi, rax	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x400085e	      0xe800000000	                          call 0x4000863	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000863	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x4000867	        0x488b4018	            mov rax, qword [rax + 0x18] 	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x400086b	          0x4889c7	                            mov rdi, rax	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x400086e	      0xe800000000	                          call 0x4000873	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x4000873	          0x4889c2	                            mov rdx, rax	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x4000876	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x4000879	          0x4889d6	                            mov rsi, rdx	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x400087c	            0x89c7	                            mov edi, eax	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x400087e	      0xe800000000	                          call 0x4000883	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x4000883	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x4000887	        0x488b4020	            mov rax, qword [rax + 0x20] 	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x400088b	        0x488945c8	             mov qword [rbp - 0x38], rax	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x400088f	      0xe990010000	                           jmp 0x4000a24	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x4000894	    0x488b05000000	            mov rax, qword [0x0400089b] 	       338	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11
0x400089b	          0x4885c0	                           test rax, rax	       338	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11
0x400089e	     0xf84d6000000	                            je 0x400097a	       338	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11
0x40008a4	        0x837da000	               cmp dword [rbp - 0x60], 0	       342	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12
0x40008a8	            0x751e	                           jne 0x40008c8	       342	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12
0x40008aa	      0xbf00000000	                              mov edi, 0	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x40008af	      0xe800000000	                          call 0x40008b4	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x40008b4	          0x4889c7	                            mov rdi, rax	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x40008b7	      0xb800000000	                              mov eax, 0	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x40008bc	      0xe800000000	                          call 0x40008c1	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x40008c1	    0xc745a0010000	               mov dword [rbp - 0x60], 1	       345	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12
0x40008c8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x40008cc	        0x488b4008	                mov rax, qword [rax + 8]	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x40008d0	        0x488b4008	                mov rax, qword [rax + 8]	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x40008d4	          0x4889c6	                            mov rsi, rax	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x40008d7	      0xbf00000000	                              mov edi, 0	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x40008dc	      0xb800000000	                              mov eax, 0	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x40008e1	      0xe800000000	                          call 0x40008e6	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x40008e6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x40008ea	        0x488b4008	                mov rax, qword [rax + 8]	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x40008ee	        0x488b4008	                mov rax, qword [rax + 8]	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x40008f2	          0x4889c7	                            mov rdi, rax	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x40008f5	      0xe800000000	                          call 0x40008fa	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x40008fa	          0x8945b0	             mov dword [rbp - 0x50], eax	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x40008fd	        0x837db012	           cmp dword [rbp - 0x50], 0x12 	       351	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x4000901	            0x7e17	                           jle 0x400091a	       351	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x4000903	      0xe800000000	                          call 0x4000908	       353	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13	CALL_38
0x4000908	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       354	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x400090f	            0xeb09	                           jmp 0x400091a	       356	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1
0x4000911	      0xe800000000	                          call 0x4000916	       358	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1	CALL_39
0x4000916	        0x8345b001	               add dword [rbp - 0x50], 1	       359	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1
0x400091a	        0x837db013	           cmp dword [rbp - 0x50], 0x13 	       356	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1
0x400091e	            0x7ef1	                           jle 0x4000911	       356	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1
0x4000920	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       362	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_14
0x4000924	        0x488b4008	                mov rax, qword [rax + 8]	       362	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_14
0x4000928	          0x4885c0	                           test rax, rax	       362	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_14
0x400092b	            0x741c	                            je 0x4000949	       362	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_14
0x400092d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       363	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_40
0x4000931	        0x488b4008	                mov rax, qword [rax + 8]	       363	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_40
0x4000935	          0x4889c6	                            mov rsi, rax	       363	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_40
0x4000938	      0xbf00000000	                              mov edi, 0	       363	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_40
0x400093d	      0xb800000000	                              mov eax, 0	       363	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_40
0x4000942	      0xe800000000	                          call 0x4000947	       363	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_40
0x4000947	            0xeb31	                           jmp 0x400097a	       363	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_40
0x4000949	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x400094d	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x4000951	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x4000955	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x4000959	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x400095d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x4000961	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x4000968	          0x4889c6	                            mov rsi, rax	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x400096b	      0xbf00000000	                              mov edi, 0	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x4000970	      0xb800000000	                              mov eax, 0	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x4000975	      0xe800000000	                          call 0x400097a	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x400097a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       369	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15	CALL_42
0x400097e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       369	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15	CALL_42
0x4000982	    0x483d00000000	                              cmp rax, 0	       369	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15	CALL_42
0x4000988	            0x741c	                            je 0x40009a6	       369	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15	CALL_42
0x400098a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       370	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15
0x400098e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       370	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15
0x4000992	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       370	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15
0x4000996	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       370	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15
0x400099a	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       370	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15
0x400099d	    0x81ca00002000	                        or edx, 0x200000	       370	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15
0x40009a3	          0x895020	             mov dword [rax + 0x20], edx	       370	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15
0x40009a6	     0xfb605000000	           movzx eax, byte [0x040009ad] 	       372	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_43
0x40009ad	          0x83e003	                              and eax, 3	       372	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_43
0x40009b0	            0x3c02	                               cmp al, 2	       372	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_43
0x40009b2	            0x753a	                           jne 0x40009ee	       372	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_43
0x40009b4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       374	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_45
0x40009b8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       374	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_45
0x40009bc	          0x4889c7	                            mov rdi, rax	       374	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_45
0x40009bf	      0xe800000000	                          call 0x40009c4	       374	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_45
0x40009c4	          0x4889c7	                            mov rdi, rax	       374	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_45
0x40009c7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x40009cb	        0x488b4808	                mov rcx, qword [rax + 8]	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x40009cf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x40009d3	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x40009d7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x40009db	          0x8b4010	            mov eax, dword [rax + 0x10] 	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x40009de	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x40009e2	          0x4989f8	                             mov r8, rdi	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x40009e5	            0x89c7	                            mov edi, eax	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x40009e7	      0xe800000000	                          call 0x40009ec	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x40009ec	            0xeb2b	                           jmp 0x4000a19	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x40009ee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x40009f2	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x40009f6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x40009fa	        0x488b4010	            mov rax, qword [rax + 0x10] 	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x40009fe	          0x4889d6	                            mov rsi, rdx	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x4000a01	          0x4889c7	                            mov rdi, rax	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x4000a04	      0xe800000000	                          call 0x4000a09	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x4000a09	          0x4889c2	                            mov rdx, rax	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x4000a0c	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x4000a0f	          0x4889d6	                            mov rsi, rdx	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x4000a12	            0x89c7	                            mov edi, eax	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x4000a14	      0xe800000000	                          call 0x4000a19	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x4000a19	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x4000a1d	          0x488b00	                    mov rax, qword [rax]	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x4000a20	        0x488945c8	             mov qword [rbp - 0x38], rax	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x4000a24	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x4000a29	     0xf8565feffff	                           jne 0x4000894	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x4000a2f	      0xbf00000000	                              mov edi, 0	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x4000a34	      0xe800000000	                          call 0x4000a39	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x4000a39	          0x4889c2	                            mov rdx, rax	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x4000a3c	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x4000a3f	          0x4889d6	                            mov rsi, rdx	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x4000a42	            0x89c7	                            mov edi, eax	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x4000a44	      0xe800000000	                          call 0x4000a49	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x4000a49	            0xeb01	                           jmp 0x4000a4c	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x4000a4b	              0x90	                                     nop	       262	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x4000a4c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x4000a50	          0x488b00	                    mov rax, qword [rax]	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x4000a53	        0x488945b8	             mov qword [rbp - 0x48], rax	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x4000a57	      0x48837db800	               cmp qword [rbp - 0x48], 0	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x4000a5c	     0xf8532fbffff	                           jne 0x4000594	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x4000a62	      0xe800000000	                          call 0x4000a67	       382	ldctor.c	FUNCTION_4	ELSE_3	CALL_50
0x4000a67	            0xeb01	                           jmp 0x4000a6a	       382	ldctor.c	FUNCTION_4	ELSE_3	CALL_50
0x4000a69	              0x90	                                     nop	       208	ldctor.c	ELSE_3	FUNCTION_4	IF_1
0x4000a6a	        0x4883c448	                           add rsp, 0x48	       383	ldctor.c	FUNCTION_4	ELSE_3
0x4000a6e	              0x5b	                                 pop rbx	       383	ldctor.c	FUNCTION_4	ELSE_3
0x4000a6f	            0x415c	                                 pop r12	       383	ldctor.c	FUNCTION_4	ELSE_3
0x4000a71	            0x415d	                                 pop r13	       383	ldctor.c	FUNCTION_4	ELSE_3
0x4000a73	              0x5d	                                 pop rbp	       383	ldctor.c	FUNCTION_4	ELSE_3
0x4000a74	              0xc3	                                     ret	       383	ldctor.c	FUNCTION_4	ELSE_3
ctor_cmp	FOR,0:WHILE,0:functions,0:DO,0:ELSE,3:SWITCH,0:IF,6:CALL,2	54
0x400030a	              0x55	                                push rbp	       153	ldctor.c	FUNCTION_3
0x400030b	          0x4889e5	                            mov rbp, rsp	       153	ldctor.c	FUNCTION_3
0x400030e	        0x4883ec40	                           sub rsp, 0x40	       153	ldctor.c	FUNCTION_3
0x4000312	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       153	ldctor.c	FUNCTION_3
0x4000316	        0x488975c0	             mov qword [rbp - 0x40], rsi	       153	ldctor.c	FUNCTION_3
0x400031a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       154	ldctor.c	FUNCTION_3
0x400031e	        0x488945f0	             mov qword [rbp - 0x10], rax	       154	ldctor.c	FUNCTION_3
0x4000322	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       156	ldctor.c	FUNCTION_3
0x4000326	        0x488945f8	                mov qword [rbp - 8], rax	       156	ldctor.c	FUNCTION_3
0x400032a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       163	ldctor.c	FUNCTION_3
0x400032e	          0x488b00	                    mov rax, qword [rax]	       163	ldctor.c	FUNCTION_3
0x4000331	        0x488b4008	                mov rax, qword [rax + 8]	       163	ldctor.c	FUNCTION_3
0x4000335	        0x488945e0	             mov qword [rbp - 0x20], rax	       163	ldctor.c	FUNCTION_3
0x4000339	      0x48837de000	               cmp qword [rbp - 0x20], 0	       164	ldctor.c	FUNCTION_3	IF_1
0x400033e	            0x7508	                           jne 0x4000348	       164	ldctor.c	FUNCTION_3	IF_1
0x4000340	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       165	ldctor.c	FUNCTION_3	IF_1
0x4000348	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	ldctor.c	FUNCTION_3
0x400034c	          0x488b00	                    mov rax, qword [rax]	       166	ldctor.c	FUNCTION_3
0x400034f	        0x488b4008	                mov rax, qword [rax + 8]	       166	ldctor.c	FUNCTION_3
0x4000353	        0x488945e8	             mov qword [rbp - 0x18], rax	       166	ldctor.c	FUNCTION_3
0x4000357	      0x48837de800	               cmp qword [rbp - 0x18], 0	       167	ldctor.c	FUNCTION_3	IF_2
0x400035c	            0x7508	                           jne 0x4000366	       167	ldctor.c	FUNCTION_3	IF_2
0x400035e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       168	ldctor.c	FUNCTION_3	IF_2
0x4000366	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       174	ldctor.c	FUNCTION_3	CALL_1
0x400036a	          0x4889c7	                            mov rdi, rax	       174	ldctor.c	FUNCTION_3	CALL_1
0x400036d	      0xe8d1feffff	                      call sym.ctor_prio	       174	ldctor.c	FUNCTION_3	CALL_1
0x4000372	          0x8945d8	             mov dword [rbp - 0x28], eax	       174	ldctor.c	FUNCTION_3	CALL_1
0x4000375	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       175	ldctor.c	FUNCTION_3	CALL_2
0x4000379	          0x4889c7	                            mov rdi, rax	       175	ldctor.c	FUNCTION_3	CALL_2
0x400037c	      0xe8c2feffff	                      call sym.ctor_prio	       175	ldctor.c	FUNCTION_3	CALL_2
0x4000381	          0x8945dc	             mov dword [rbp - 0x24], eax	       175	ldctor.c	FUNCTION_3	CALL_2
0x4000384	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       178	ldctor.c	FUNCTION_3	IF_3
0x4000387	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       178	ldctor.c	FUNCTION_3	IF_3
0x400038a	            0x7d07	                           jge 0x4000393	       178	ldctor.c	FUNCTION_3	IF_3
0x400038c	      0xb801000000	                              mov eax, 1	       179	ldctor.c	FUNCTION_3	IF_3
0x4000391	            0xeb36	                           jmp 0x40003c9	       179	ldctor.c	FUNCTION_3	IF_3
0x4000393	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       180	ldctor.c	FUNCTION_3	ELSE_1	IF_4
0x4000396	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       180	ldctor.c	FUNCTION_3	ELSE_1	IF_4
0x4000399	            0x7e07	                           jle 0x40003a2	       180	ldctor.c	FUNCTION_3	ELSE_1	IF_4
0x400039b	      0xb8ffffffff	                     mov eax, 0xffffffff	       181	ldctor.c	FUNCTION_3	ELSE_1	IF_4
0x40003a0	            0xeb27	                           jmp 0x40003c9	       181	ldctor.c	FUNCTION_3	ELSE_1	IF_4
0x40003a2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       185	ldctor.c	FUNCTION_3	IF_5
0x40003a6	        0x483b45f8	                cmp rax, qword [rbp - 8]	       185	ldctor.c	FUNCTION_3	IF_5
0x40003aa	            0x7307	                           jae 0x40003b3	       185	ldctor.c	FUNCTION_3	IF_5
0x40003ac	      0xb8ffffffff	                     mov eax, 0xffffffff	       186	ldctor.c	FUNCTION_3	IF_5
0x40003b1	            0xeb16	                           jmp 0x40003c9	       186	ldctor.c	FUNCTION_3	IF_5
0x40003b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       187	ldctor.c	FUNCTION_3	ELSE_2	IF_6
0x40003b7	        0x483b45f8	                cmp rax, qword [rbp - 8]	       187	ldctor.c	FUNCTION_3	ELSE_2	IF_6
0x40003bb	            0x7607	                           jbe 0x40003c4	       187	ldctor.c	FUNCTION_3	ELSE_2	IF_6
0x40003bd	      0xb801000000	                              mov eax, 1	       188	ldctor.c	FUNCTION_3	ELSE_2	IF_6
0x40003c2	            0xeb05	                           jmp 0x40003c9	       188	ldctor.c	FUNCTION_3	ELSE_2	IF_6
0x40003c4	      0xb800000000	                              mov eax, 0	       190	ldctor.c	FUNCTION_3	ELSE_3
0x40003c9	              0xc9	                                   leave	       191	ldctor.c	FUNCTION_3	ELSE_3
0x40003ca	              0xc3	                                     ret	       191	ldctor.c	FUNCTION_3	ELSE_3
ldctor_add_set_entry	FOR,2:WHILE,0:functions,0:DO,0:ELSE,1:SWITCH,0:IF,4:CALL,9	132
0x4000040	              0x55	                                push rbp	        60	ldctor.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        60	ldctor.c	FUNCTION_1
0x4000044	              0x53	                                push rbx	        60	ldctor.c	FUNCTION_1
0x4000045	        0x4883ec58	                           sub rsp, 0x58	        60	ldctor.c	FUNCTION_1
0x4000049	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        60	ldctor.c	FUNCTION_1
0x400004d	          0x8975c4	             mov dword [rbp - 0x3c], esi	        60	ldctor.c	FUNCTION_1
0x4000050	        0x488955b8	             mov qword [rbp - 0x48], rdx	        60	ldctor.c	FUNCTION_1
0x4000054	        0x48894db0	             mov qword [rbp - 0x50], rcx	        60	ldctor.c	FUNCTION_1
0x4000058	        0x4c8945a8	              mov qword [rbp - 0x58], r8	        60	ldctor.c	FUNCTION_1
0x400005c	    0x488b05000000	            mov rax, qword [0x04000063] 	        65	ldctor.c	FUNCTION_1	FOR_1
0x4000063	        0x488945d8	             mov qword [rbp - 0x28], rax	        65	ldctor.c	FUNCTION_1	FOR_1
0x4000067	            0xeb19	                           jmp 0x4000082	        65	ldctor.c	FUNCTION_1	FOR_1
0x4000069	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x400006d	        0x488b4008	                mov rax, qword [rax + 8]	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x4000071	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x4000075	            0x7414	                            je 0x400008b	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x4000077	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        65	ldctor.c	FUNCTION_1	FOR_1
0x400007b	          0x488b00	                    mov rax, qword [rax]	        65	ldctor.c	FUNCTION_1	FOR_1
0x400007e	        0x488945d8	             mov qword [rbp - 0x28], rax	        65	ldctor.c	FUNCTION_1	FOR_1
0x4000082	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        65	ldctor.c	FUNCTION_1	FOR_1
0x4000087	            0x75e0	                           jne 0x4000069	        65	ldctor.c	FUNCTION_1	FOR_1
0x4000089	            0xeb01	                           jmp 0x400008c	        65	ldctor.c	FUNCTION_1	FOR_1
0x400008b	              0x90	                                     nop	        67	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x400008c	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        69	ldctor.c	FUNCTION_1	IF_2
0x4000091	            0x755a	                           jne 0x40000ed	        69	ldctor.c	FUNCTION_1	IF_2
0x4000093	      0xbf28000000	                           mov edi, 0x28	        71	ldctor.c	FUNCTION_1	IF_2	CALL_1
0x4000098	      0xe800000000	                          call 0x400009d	        71	ldctor.c	FUNCTION_1	IF_2	CALL_1
0x400009d	        0x488945d8	             mov qword [rbp - 0x28], rax	        71	ldctor.c	FUNCTION_1	IF_2	CALL_1
0x40000a1	    0x488b15000000	            mov rdx, qword [0x040000a8] 	        72	ldctor.c	FUNCTION_1	IF_2
0x40000a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        72	ldctor.c	FUNCTION_1	IF_2
0x40000ac	          0x488910	                    mov qword [rax], rdx	        72	ldctor.c	FUNCTION_1	IF_2
0x40000af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        73	ldctor.c	FUNCTION_1	IF_2
0x40000b3	    0x488905000000	            mov qword [0x040000ba], rax 	        73	ldctor.c	FUNCTION_1	IF_2
0x40000ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        74	ldctor.c	FUNCTION_1	IF_2
0x40000be	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        74	ldctor.c	FUNCTION_1	IF_2
0x40000c2	        0x48895008	                mov qword [rax + 8], rdx	        74	ldctor.c	FUNCTION_1	IF_2
0x40000c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        75	ldctor.c	FUNCTION_1	IF_2
0x40000ca	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	        75	ldctor.c	FUNCTION_1	IF_2
0x40000cd	          0x895010	             mov dword [rax + 0x10], edx	        75	ldctor.c	FUNCTION_1	IF_2
0x40000d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        76	ldctor.c	FUNCTION_1	IF_2
0x40000d4	    0x48c740180000	               mov qword [rax + 0x18], 0	        76	ldctor.c	FUNCTION_1	IF_2
0x40000dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        77	ldctor.c	FUNCTION_1	IF_2
0x40000e0	    0x48c740200000	               mov qword [rax + 0x20], 0	        77	ldctor.c	FUNCTION_1	IF_2
0x40000e8	      0xe9ce000000	                           jmp 0x40001bb	        77	ldctor.c	FUNCTION_1	IF_2
0x40000ed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        81	ldctor.c	FUNCTION_1	ELSE_1	IF_3
0x40000f1	          0x8b4010	            mov eax, dword [rax + 0x10] 	        81	ldctor.c	FUNCTION_1	ELSE_1	IF_3
0x40000f4	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	        81	ldctor.c	FUNCTION_1	ELSE_1	IF_3
0x40000f7	            0x7427	                            je 0x4000120	        81	ldctor.c	FUNCTION_1	ELSE_1	IF_3
0x40000f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000fd	        0x488b5808	                mov rbx, qword [rax + 8]	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x4000101	      0xbf00000000	                              mov edi, 0	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x4000106	      0xe800000000	                          call 0x400010b	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x400010b	          0x4889de	                            mov rsi, rbx	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x400010e	          0x4889c7	                            mov rdi, rax	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x4000111	      0xb800000000	                              mov eax, 0	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x4000116	      0xe800000000	                          call 0x400011b	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x400011b	      0xe91c010000	                           jmp 0x400023c	        85	ldctor.c	FUNCTION_1	ELSE_1	IF_3
0x4000120	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        95	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000124	        0x488b4020	            mov rax, qword [rax + 0x20] 	        95	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000128	          0x4885c0	                           test rax, rax	        95	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x400012b	     0xf848a000000	                            je 0x40001bb	        95	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000131	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        96	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000135	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	        96	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x400013c	          0x4885c0	                           test rax, rax	        96	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x400013f	            0x747a	                            je 0x40001bb	        96	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000141	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000145	        0x488b4020	            mov rax, qword [rax + 0x20] 	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000149	        0x488b4010	            mov rax, qword [rax + 0x10] 	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x400014d	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000154	          0x4885c0	                           test rax, rax	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000157	            0x7462	                            je 0x40001bb	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000159	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        99	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_6
0x400015d	        0x488b4020	            mov rax, qword [rax + 0x20] 	        99	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_6
0x4000161	        0x488b4010	            mov rax, qword [rax + 0x10] 	        99	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_6
0x4000165	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	        99	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_6
0x400016c	        0x488b4008	                mov rax, qword [rax + 8]	        99	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_6
0x4000170	          0x488b10	                    mov rdx, qword [rax]	        99	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_6
0x4000173	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x4000177	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x400017e	        0x488b4008	                mov rax, qword [rax + 8]	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x4000182	          0x488b00	                    mov rax, qword [rax]	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x4000185	          0x4889d6	                            mov rsi, rdx	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x4000188	          0x4889c7	                            mov rdi, rax	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x400018b	      0xe800000000	                          call 0x4000190	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x4000190	            0x85c0	                           test eax, eax	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x4000192	            0x7427	                            je 0x40001bb	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x4000194	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x4000198	        0x488b5808	                mov rbx, qword [rax + 8]	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x400019c	      0xbf00000000	                              mov edi, 0	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40001a1	      0xe800000000	                          call 0x40001a6	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40001a6	          0x4889de	                            mov rsi, rbx	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40001a9	          0x4889c7	                            mov rdi, rax	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40001ac	      0xb800000000	                              mov eax, 0	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40001b1	      0xe800000000	                          call 0x40001b6	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40001b6	      0xe981000000	                           jmp 0x400023c	       103	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x40001bb	      0xbf20000000	                           mov edi, 0x20	       107	ldctor.c	FUNCTION_1	CALL_9
0x40001c0	      0xe800000000	                          call 0x40001c5	       107	ldctor.c	FUNCTION_1	CALL_9
0x40001c5	        0x488945e8	             mov qword [rbp - 0x18], rax	       107	ldctor.c	FUNCTION_1	CALL_9
0x40001c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       108	ldctor.c	FUNCTION_1
0x40001cd	    0x48c700000000	                      mov qword [rax], 0	       108	ldctor.c	FUNCTION_1
0x40001d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       109	ldctor.c	FUNCTION_1
0x40001d8	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       109	ldctor.c	FUNCTION_1
0x40001dc	        0x48895008	                mov qword [rax + 8], rdx	       109	ldctor.c	FUNCTION_1
0x40001e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       110	ldctor.c	FUNCTION_1
0x40001e4	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       110	ldctor.c	FUNCTION_1
0x40001e8	        0x48895010	             mov qword [rax + 0x10], rdx	       110	ldctor.c	FUNCTION_1
0x40001ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       111	ldctor.c	FUNCTION_1
0x40001f0	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       111	ldctor.c	FUNCTION_1
0x40001f4	        0x48895018	             mov qword [rax + 0x18], rdx	       111	ldctor.c	FUNCTION_1
0x40001f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       113	ldctor.c	FUNCTION_1	FOR_2
0x40001fc	        0x4883c020	                           add rax, 0x20	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000200	        0x488945e0	             mov qword [rbp - 0x20], rax	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000204	            0xeb0b	                           jmp 0x4000211	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000206	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       113	ldctor.c	FUNCTION_1	FOR_2
0x400020a	          0x488b00	                    mov rax, qword [rax]	       113	ldctor.c	FUNCTION_1	FOR_2
0x400020d	        0x488945e0	             mov qword [rbp - 0x20], rax	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000211	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000215	          0x488b00	                    mov rax, qword [rax]	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000218	          0x4885c0	                           test rax, rax	       113	ldctor.c	FUNCTION_1	FOR_2
0x400021b	            0x75e9	                           jne 0x4000206	       113	ldctor.c	FUNCTION_1	FOR_2
0x400021d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       115	ldctor.c	FUNCTION_1
0x4000221	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       115	ldctor.c	FUNCTION_1
0x4000225	          0x488910	                    mov qword [rax], rdx	       115	ldctor.c	FUNCTION_1
0x4000228	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       117	ldctor.c	FUNCTION_1
0x400022c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       117	ldctor.c	FUNCTION_1
0x4000230	        0x488d5001	                      lea rdx, [rax + 1]	       117	ldctor.c	FUNCTION_1
0x4000234	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       117	ldctor.c	FUNCTION_1
0x4000238	        0x48895018	             mov qword [rax + 0x18], rdx	       117	ldctor.c	FUNCTION_1
0x400023c	        0x4883c458	                           add rsp, 0x58	       118	ldctor.c	FUNCTION_1
0x4000240	              0x5b	                                 pop rbx	       118	ldctor.c	FUNCTION_1
0x4000241	              0x5d	                                 pop rbp	       118	ldctor.c	FUNCTION_1
0x4000242	              0xc3	                                     ret	       118	ldctor.c	FUNCTION_1
