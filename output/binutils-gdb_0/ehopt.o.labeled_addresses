eh_frame_estimate_size_before_relax	WHILE,0:IF,3:CALL,2:ELSE,3:SWITCH,0:DO,0:FOR,0:functions,0	49
0x4000a2d	              0x55	                                push rbp	       472	ehopt.c	FUNCTION_3
0x4000a2e	          0x4889e5	                            mov rbp, rsp	       472	ehopt.c	FUNCTION_3
0x4000a31	        0x4883ec20	                           sub rsp, 0x20	       472	ehopt.c	FUNCTION_3
0x4000a35	        0x48897de8	             mov qword [rbp - 0x18], rdi	       472	ehopt.c	FUNCTION_3
0x4000a39	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       474	ehopt.c	FUNCTION_3
0x4000a3d	          0x8b4060	            mov eax, dword [rax + 0x60] 	       474	ehopt.c	FUNCTION_3
0x4000a40	          0xc1e803	                              shr eax, 3	       474	ehopt.c	FUNCTION_3
0x4000a43	          0x8945f4	              mov dword [rbp - 0xc], eax	       474	ehopt.c	FUNCTION_3
0x4000a46	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       477	ehopt.c	FUNCTION_3	CALL_1
0x4000a4a	        0x488b4028	            mov rax, qword [rax + 0x28] 	       477	ehopt.c	FUNCTION_3	CALL_1
0x4000a4e	          0x4889c7	                            mov rdi, rax	       477	ehopt.c	FUNCTION_3	CALL_1
0x4000a51	      0xe800000000	                          call 0x4000a56	       477	ehopt.c	FUNCTION_3	CALL_1
0x4000a56	        0x488945f8	                mov qword [rbp - 8], rax	       477	ehopt.c	FUNCTION_3	CALL_1
0x4000a5a	        0x837df400	                cmp dword [rbp - 0xc], 0	       479	ehopt.c	FUNCTION_3	CALL_2
0x4000a5e	            0x7f14	                            jg 0x4000a74	       479	ehopt.c	FUNCTION_3	CALL_2
0x4000a60	      0xba00000000	                              mov edx, 0	       479	ehopt.c	FUNCTION_3	CALL_2
0x4000a65	      0xbedf010000	                          mov esi, 0x1df	       479	ehopt.c	FUNCTION_3	CALL_2
0x4000a6a	      0xbf00000000	                              mov edi, 0	       479	ehopt.c	FUNCTION_3	CALL_2
0x4000a6f	      0xe800000000	                          call 0x4000a74	       479	ehopt.c	FUNCTION_3	CALL_2
0x4000a74	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       480	ehopt.c	FUNCTION_3
0x4000a77	          0x4863c8	                         movsxd rcx, eax	       480	ehopt.c	FUNCTION_3
0x4000a7a	        0x488b45f8	                mov rax, qword [rbp - 8]	       480	ehopt.c	FUNCTION_3
0x4000a7e	            0x4899	                                     cqo	       480	ehopt.c	FUNCTION_3
0x4000a80	          0x48f7f9	                                idiv rcx	       480	ehopt.c	FUNCTION_3
0x4000a83	        0x488945f8	                mov qword [rbp - 8], rax	       480	ehopt.c	FUNCTION_3
0x4000a87	      0x48837df83f	               cmp qword [rbp - 8], 0x3f	       481	ehopt.c	FUNCTION_3	IF_1
0x4000a8c	            0x7f09	                            jg 0x4000a97	       481	ehopt.c	FUNCTION_3	IF_1
0x4000a8e	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       482	ehopt.c	FUNCTION_3	IF_1
0x4000a95	            0xeb2d	                           jmp 0x4000ac4	       482	ehopt.c	FUNCTION_3	IF_1
0x4000a97	    0x48817df8ff00	               cmp qword [rbp - 8], 0xff	       483	ehopt.c	FUNCTION_3	ELSE_1	IF_2
0x4000a9f	            0x7f09	                            jg 0x4000aaa	       483	ehopt.c	FUNCTION_3	ELSE_1	IF_2
0x4000aa1	    0xc745f0010000	               mov dword [rbp - 0x10], 1	       484	ehopt.c	FUNCTION_3	ELSE_1	IF_2
0x4000aa8	            0xeb1a	                           jmp 0x4000ac4	       484	ehopt.c	FUNCTION_3	ELSE_1	IF_2
0x4000aaa	    0x48817df8ffff	            cmp qword [rbp - 8], 0xffff 	       485	ehopt.c	FUNCTION_3	ELSE_2	IF_3
0x4000ab2	            0x7f09	                            jg 0x4000abd	       485	ehopt.c	FUNCTION_3	ELSE_2	IF_3
0x4000ab4	    0xc745f0020000	               mov dword [rbp - 0x10], 2	       486	ehopt.c	FUNCTION_3	ELSE_2	IF_3
0x4000abb	            0xeb07	                           jmp 0x4000ac4	       486	ehopt.c	FUNCTION_3	ELSE_2	IF_3
0x4000abd	    0xc745f0040000	               mov dword [rbp - 0x10], 4	       488	ehopt.c	FUNCTION_3	ELSE_3
0x4000ac4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       490	ehopt.c	FUNCTION_3
0x4000ac8	          0x8b4060	            mov eax, dword [rax + 0x60] 	       490	ehopt.c	FUNCTION_3
0x4000acb	          0x83e0f8	                     and eax, 0xfffffff8	       490	ehopt.c	FUNCTION_3
0x4000ace	            0x89c2	                            mov edx, eax	       490	ehopt.c	FUNCTION_3
0x4000ad0	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       490	ehopt.c	FUNCTION_3
0x4000ad3	             0x9c2	                             or edx, eax	       490	ehopt.c	FUNCTION_3
0x4000ad5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       490	ehopt.c	FUNCTION_3
0x4000ad9	          0x895060	             mov dword [rax + 0x60], edx	       490	ehopt.c	FUNCTION_3
0x4000adc	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       492	ehopt.c	FUNCTION_3
0x4000adf	              0xc9	                                   leave	       493	ehopt.c	FUNCTION_3
0x4000ae0	              0xc3	                                     ret	       493	ehopt.c	FUNCTION_3
eh_frame_relax_frag	WHILE,0:IF,0:CALL,1:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0	16
0x4000ae1	              0x55	                                push rbp	       501	ehopt.c	FUNCTION_4
0x4000ae2	          0x4889e5	                            mov rbp, rsp	       501	ehopt.c	FUNCTION_4
0x4000ae5	        0x4883ec20	                           sub rsp, 0x20	       501	ehopt.c	FUNCTION_4
0x4000ae9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       501	ehopt.c	FUNCTION_4
0x4000aed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       504	ehopt.c	FUNCTION_4
0x4000af1	          0x8b4060	            mov eax, dword [rax + 0x60] 	       504	ehopt.c	FUNCTION_4
0x4000af4	          0x83e007	                              and eax, 7	       504	ehopt.c	FUNCTION_4
0x4000af7	          0x8945f8	                mov dword [rbp - 8], eax	       504	ehopt.c	FUNCTION_4
0x4000afa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       505	ehopt.c	FUNCTION_4	CALL_1
0x4000afe	          0x4889c7	                            mov rdi, rax	       505	ehopt.c	FUNCTION_4	CALL_1
0x4000b01	      0xe800000000	                          call 0x4000b06	       505	ehopt.c	FUNCTION_4	CALL_1
0x4000b06	          0x8945fc	                mov dword [rbp - 4], eax	       505	ehopt.c	FUNCTION_4	CALL_1
0x4000b09	          0x8b45fc	                mov eax, dword [rbp - 4]	       506	ehopt.c	FUNCTION_4
0x4000b0c	          0x2b45f8	                sub eax, dword [rbp - 8]	       506	ehopt.c	FUNCTION_4
0x4000b0f	              0xc9	                                   leave	       507	ehopt.c	FUNCTION_4
0x4000b10	              0xc3	                                     ret	       507	ehopt.c	FUNCTION_4
check_eh_frame	WHILE,0:IF,25:CALL,14:ELSE,12:SWITCH,1:DO,0:FOR,0:functions,0	419
0x4000439	              0x55	                                push rbp	       257	ehopt.c	FUNCTION_2
0x400043a	          0x4889e5	                            mov rbp, rsp	       257	ehopt.c	FUNCTION_2
0x400043d	            0x4154	                                push r12	       257	ehopt.c	FUNCTION_2
0x400043f	              0x53	                                push rbx	       257	ehopt.c	FUNCTION_2
0x4000440	        0x4883ec20	                           sub rsp, 0x20	       257	ehopt.c	FUNCTION_2
0x4000444	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       257	ehopt.c	FUNCTION_2
0x4000448	        0x488975d0	             mov qword [rbp - 0x30], rsi	       257	ehopt.c	FUNCTION_2
0x400044c	    0x8b0500000000	            mov eax, dword [0x04000452] 	       278	ehopt.c	FUNCTION_2	IF_1
0x4000452	            0x85c0	                           test eax, eax	       278	ehopt.c	FUNCTION_2	IF_1
0x4000454	            0x740a	                            je 0x4000460	       278	ehopt.c	FUNCTION_2	IF_1
0x4000456	      0xb800000000	                              mov eax, 0	       279	ehopt.c	FUNCTION_2	IF_1
0x400045b	      0xe9c4050000	                           jmp 0x4000a24	       279	ehopt.c	FUNCTION_2	IF_1
0x4000460	    0x488b05000000	            mov rax, qword [0x04000467] 	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x4000467	          0x488b00	                    mov rax, qword [rax]	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x400046a	      0xba09000000	                              mov edx, 9	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x400046f	      0xbe00000000	                              mov esi, 0	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x4000474	          0x4889c7	                            mov rdi, rax	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x4000477	      0xe800000000	                          call 0x400047c	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x400047c	            0x85c0	                           test eax, eax	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x400047e	            0x751f	                           jne 0x400049f	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x4000480	    0x488b05000000	            mov rax, qword [0x04000487] 	       288	ehopt.c	FUNCTION_2	IF_3	CALL_3
0x4000487	          0x488b00	                    mov rax, qword [rax]	       288	ehopt.c	FUNCTION_2	IF_3	CALL_3
0x400048a	        0x4883c009	                              add rax, 9	       288	ehopt.c	FUNCTION_2	IF_3	CALL_3
0x400048e	           0xfb600	                   movzx eax, byte [rax]	       288	ehopt.c	FUNCTION_2	IF_3	CALL_3
0x4000491	            0x3c5f	                            cmp al, 0x5f	       288	ehopt.c	FUNCTION_2	IF_3	CALL_3
0x4000493	            0x740a	                            je 0x400049f	       288	ehopt.c	FUNCTION_2	IF_3	CALL_3
0x4000495	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       289	ehopt.c	FUNCTION_2	IF_3
0x400049d	            0xeb34	                           jmp 0x40004d3	       289	ehopt.c	FUNCTION_2	IF_3
0x400049f	    0x488b05000000	            mov rax, qword [0x040004a6] 	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x40004a6	          0x488b00	                    mov rax, qword [rax]	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x40004a9	      0xba0c000000	                            mov edx, 0xc	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x40004ae	      0xbe00000000	                              mov esi, 0	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x40004b3	          0x4889c7	                            mov rdi, rax	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x40004b6	      0xe800000000	                          call 0x40004bb	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x40004bb	            0x85c0	                           test eax, eax	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x40004bd	            0x750a	                           jne 0x40004c9	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x40004bf	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       291	ehopt.c	FUNCTION_2	ELSE_1	IF_4
0x40004c7	            0xeb0a	                           jmp 0x40004d3	       291	ehopt.c	FUNCTION_2	ELSE_1	IF_4
0x40004c9	      0xb800000000	                              mov eax, 0	       293	ehopt.c	FUNCTION_2	ELSE_2
0x40004ce	      0xe951050000	                           jmp 0x4000a24	       293	ehopt.c	FUNCTION_2	ELSE_2
0x40004d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40004d7	            0x8b00	                    mov eax, dword [rax]	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40004d9	            0x85c0	                           test eax, eax	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40004db	            0x741e	                            je 0x40004fb	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40004dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40004e1	        0x488b4010	            mov rax, qword [rax + 0x10] 	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40004e5	          0x4889c7	                            mov rdi, rax	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40004e8	      0xe800000000	                          call 0x40004ed	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40004ed	            0x85c0	                           test eax, eax	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40004ef	            0x740a	                            je 0x40004fb	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40004f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       300	ehopt.c	FUNCTION_2	ELSE_2	IF_5
0x40004f5	    0xc70000000000	                      mov dword [rax], 0	       300	ehopt.c	FUNCTION_2	ELSE_2	IF_5
0x40004fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       303	ehopt.c	FUNCTION_2	SWITCH_1
0x40004ff	            0x8b00	                    mov eax, dword [rax]	       303	ehopt.c	FUNCTION_2	SWITCH_1
0x4000501	          0x83f808	                              cmp eax, 8	       303	ehopt.c	FUNCTION_2	SWITCH_1
0x4000504	     0xf8715050000	                            ja 0x4000a1f	       303	ehopt.c	FUNCTION_2	SWITCH_1
0x400050a	            0x89c0	                            mov eax, eax	       303	ehopt.c	FUNCTION_2	SWITCH_1
0x400050c	    0x488b04c50000	                  mov rax, qword [rax*8]	       303	ehopt.c	FUNCTION_2	SWITCH_1
0x4000514	            0xffe0	                                 jmp rax	       303	ehopt.c	FUNCTION_2	SWITCH_1
0x4000516	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       306	ehopt.c	FUNCTION_2	SWITCH_1	IF_6
0x400051a	            0x8b00	                    mov eax, dword [rax]	       306	ehopt.c	FUNCTION_2	SWITCH_1	IF_6
0x400051c	          0x83f804	                              cmp eax, 4	       306	ehopt.c	FUNCTION_2	SWITCH_1	IF_6
0x400051f	     0xf85ea040000	                           jne 0x4000a0f	       306	ehopt.c	FUNCTION_2	SWITCH_1	IF_6
0x4000525	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000529	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x400052d	            0x3c03	                               cmp al, 3	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x400052f	            0x7410	                            je 0x4000541	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000531	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000535	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000539	            0x3c14	                            cmp al, 0x14	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x400053b	     0xf85ce040000	                           jne 0x4000a0f	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000541	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       318	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7	CALL_7
0x4000545	          0x488b00	                    mov rax, qword [rax]	       318	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7	CALL_7
0x4000548	          0x4889c7	                            mov rdi, rax	       318	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7	CALL_7
0x400054b	      0xe800000000	                          call 0x4000550	       318	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7	CALL_7
0x4000550	            0x85c0	                           test eax, eax	       318	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7	CALL_7
0x4000552	     0xf85b7040000	                           jne 0x4000a0f	       318	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7	CALL_7
0x4000558	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       320	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x400055c	    0xc70001000000	                      mov dword [rax], 1	       320	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000562	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       321	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000566	          0x488b10	                    mov rdx, qword [rax]	       321	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000569	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       321	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x400056d	        0x48895010	             mov qword [rax + 0x10], rdx	       321	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000571	      0xe999040000	                           jmp 0x4000a0f	       324	ehopt.c	FUNCTION_2	SWITCH_1
0x4000576	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       329	ehopt.c	FUNCTION_2	SWITCH_1
0x400057a	            0x8b00	                    mov eax, dword [rax]	       329	ehopt.c	FUNCTION_2	SWITCH_1
0x400057c	          0x8d5001	                      lea edx, [rax + 1]	       329	ehopt.c	FUNCTION_2	SWITCH_1
0x400057f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       329	ehopt.c	FUNCTION_2	SWITCH_1
0x4000583	            0x8910	                    mov dword [rax], edx	       329	ehopt.c	FUNCTION_2	SWITCH_1
0x4000585	      0xe995040000	                           jmp 0x4000a1f	       330	ehopt.c	FUNCTION_2	SWITCH_1
0x400058a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       334	ehopt.c	FUNCTION_2	SWITCH_1	IF_8
0x400058e	          0x8b4004	                mov eax, dword [rax + 4]	       334	ehopt.c	FUNCTION_2	SWITCH_1	IF_8
0x4000591	            0x85c0	                           test eax, eax	       334	ehopt.c	FUNCTION_2	SWITCH_1	IF_8
0x4000593	            0x7533	                           jne 0x40005c8	       334	ehopt.c	FUNCTION_2	SWITCH_1	IF_8
0x4000595	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x4000599	        0x4883c008	                              add rax, 8	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x400059d	          0x4889c7	                            mov rdi, rax	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x40005a0	      0xe89bfaffff	                   call sym.get_cie_info	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x40005a5	            0x89c2	                            mov edx, eax	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x40005a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x40005ab	          0x895004	                mov dword [rax + 4], edx	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x40005ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x40005b2	          0x8b4004	                mov eax, dword [rax + 4]	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x40005b5	            0x85c0	                           test eax, eax	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x40005b7	            0x750f	                           jne 0x40005c8	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x40005b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       336	ehopt.c	FUNCTION_2	SWITCH_1	IF_8
0x40005bd	    0xc70008000000	                      mov dword [rax], 8	       336	ehopt.c	FUNCTION_2	SWITCH_1	IF_8
0x40005c3	      0xe957040000	                           jmp 0x4000a1f	       345	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4
0x40005c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       337	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40005cc	          0x8b400c	              mov eax, dword [rax + 0xc]	       337	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40005cf	            0x85c0	                           test eax, eax	       337	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40005d1	            0x7425	                            je 0x40005f8	       337	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40005d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       339	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40005d7	    0xc70004000000	                      mov dword [rax], 4	       339	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40005dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       340	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40005e1	    0xc74024000000	               mov dword [rax + 0x24], 0	       340	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40005e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       341	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40005ec	    0xc74028000000	               mov dword [rax + 0x28], 0	       341	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40005f3	      0xe927040000	                           jmp 0x4000a1f	       345	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4
0x40005f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       344	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4
0x40005fc	    0xc70006000000	                      mov dword [rax], 6	       344	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4
0x4000602	      0xe918040000	                           jmp 0x4000a1f	       345	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4
0x4000607	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x400060b	            0x8b00	                    mov eax, dword [rax]	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x400060d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x4000610	            0x7529	                           jne 0x400063b	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x4000612	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x4000616	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x400061a	            0x3c02	                               cmp al, 2	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x400061c	            0x751d	                           jne 0x400063b	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x400061e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       351	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x4000622	        0x488b4010	            mov rax, qword [rax + 0x10] 	       351	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x4000626	            0x89c2	                            mov edx, eax	       351	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x4000628	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       351	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x400062c	          0x895024	             mov dword [rax + 0x24], edx	       351	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x400062f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       352	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x4000633	    0xc70005000000	                      mov dword [rax], 5	       352	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x4000639	            0xeb7a	                           jmp 0x40006b5	       352	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x400063b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       354	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x400063f	            0x8b00	                    mov eax, dword [rax]	       354	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000641	          0x83f801	                              cmp eax, 1	       354	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000644	            0x7562	                           jne 0x40006a8	       354	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000646	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       354	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x400064a	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       354	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x400064e	            0x3c02	                               cmp al, 2	       354	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000650	            0x7556	                           jne 0x40006a8	       354	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000652	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       356	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000656	        0x488b4010	            mov rax, qword [rax + 0x10] 	       356	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x400065a	          0x8845e3	               mov byte [rbp - 0x1d], al	       356	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x400065d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000661	          0x8b5024	            mov edx, dword [rax + 0x24] 	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000664	         0xfb645e3	            movzx eax, byte [rbp - 0x1d]	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000668	          0x83e07f	                           and eax, 0x7f	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x400066b	            0x89c6	                            mov esi, eax	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x400066d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000671	          0x8b4028	            mov eax, dword [rax + 0x28] 	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000674	            0x89c1	                            mov ecx, eax	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000676	            0xd3e6	                             shl esi, cl	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000678	            0x89f0	                            mov eax, esi	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x400067a	             0x9c2	                             or edx, eax	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x400067c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000680	          0x895024	             mov dword [rax + 0x24], edx	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000683	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       358	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000687	          0x8b4028	            mov eax, dword [rax + 0x28] 	       358	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x400068a	          0x8d5007	                      lea edx, [rax + 7]	       358	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x400068d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       358	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000691	          0x895028	             mov dword [rax + 0x28], edx	       358	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000694	         0xfb645e3	            movzx eax, byte [rbp - 0x1d]	       359	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11	IF_12
0x4000698	            0x84c0	                             test al, al	       359	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11	IF_12
0x400069a	            0x7818	                            js 0x40006b4	       359	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11	IF_12
0x400069c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       360	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11	IF_12
0x40006a0	    0xc70005000000	                      mov dword [rax], 5	       360	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11	IF_12
0x40006a6	            0xeb0c	                           jmp 0x40006b4	       355	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x40006a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       363	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_6
0x40006ac	    0xc70008000000	                      mov dword [rax], 8	       363	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_6
0x40006b2	            0xeb01	                           jmp 0x40006b5	       363	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_6
0x40006b4	              0x90	                                     nop	       355	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x40006b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       364	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x40006b9	            0x8b00	                    mov eax, dword [rax]	       364	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x40006bb	          0x83f805	                              cmp eax, 5	       364	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x40006be	     0xf854e030000	                           jne 0x4000a12	       364	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x40006c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       364	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x40006c8	          0x8b4024	            mov eax, dword [rax + 0x24] 	       364	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x40006cb	            0x85c0	                           test eax, eax	       364	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x40006cd	     0xf853f030000	                           jne 0x4000a12	       364	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x40006d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       365	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x40006d7	    0xc70006000000	                      mov dword [rax], 6	       365	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x40006dd	      0xe930030000	                           jmp 0x4000a12	       366	ehopt.c	FUNCTION_2	SWITCH_1
0x40006e2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       369	ehopt.c	FUNCTION_2	SWITCH_1	IF_14
0x40006e6	            0x8b00	                    mov eax, dword [rax]	       369	ehopt.c	FUNCTION_2	SWITCH_1	IF_14
0x40006e8	            0x85c0	                           test eax, eax	       369	ehopt.c	FUNCTION_2	SWITCH_1	IF_14
0x40006ea	            0x790f	                           jns 0x40006fb	       369	ehopt.c	FUNCTION_2	SWITCH_1	IF_14
0x40006ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       370	ehopt.c	FUNCTION_2	SWITCH_1	IF_14
0x40006f0	    0xc70008000000	                      mov dword [rax], 8	       370	ehopt.c	FUNCTION_2	SWITCH_1	IF_14
0x40006f6	      0xe91a030000	                           jmp 0x4000a15	       379	ehopt.c	FUNCTION_2	SWITCH_1
0x40006fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x40006ff	          0x8b4024	            mov eax, dword [rax + 0x24] 	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x4000702	            0x89c2	                            mov edx, eax	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x4000704	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x4000708	            0x8b00	                    mov eax, dword [rax]	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x400070a	            0x29c2	                            sub edx, eax	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x400070c	            0x89d0	                            mov eax, edx	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x400070e	            0x89c2	                            mov edx, eax	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x4000710	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x4000714	          0x895024	             mov dword [rax + 0x24], edx	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x4000717	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x400071b	          0x8b4024	            mov eax, dword [rax + 0x24] 	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x400071e	          0x8945e4	             mov dword [rbp - 0x1c], eax	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x4000721	        0x837de400	               cmp dword [rbp - 0x1c], 0	       374	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	IF_15
0x4000725	            0x750f	                           jne 0x4000736	       374	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	IF_15
0x4000727	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       375	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	IF_15
0x400072b	    0xc70006000000	                      mov dword [rax], 6	       375	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	IF_15
0x4000731	      0xe9df020000	                           jmp 0x4000a15	       379	ehopt.c	FUNCTION_2	SWITCH_1
0x4000736	        0x837de400	               cmp dword [rbp - 0x1c], 0	       376	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	ELSE_8	IF_16
0x400073a	     0xf89d5020000	                           jns 0x4000a15	       376	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	ELSE_8	IF_16
0x4000740	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       377	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	ELSE_8	IF_16
0x4000744	    0xc70008000000	                      mov dword [rax], 8	       377	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	ELSE_8	IF_16
0x400074a	      0xe9c6020000	                           jmp 0x4000a15	       379	ehopt.c	FUNCTION_2	SWITCH_1
0x400074f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       382	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000753	            0x8b00	                    mov eax, dword [rax]	       382	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000755	          0x83f801	                              cmp eax, 1	       382	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000758	     0xf85ba020000	                           jne 0x4000a18	       382	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x400075e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       383	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000762	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       383	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000766	            0x3c02	                               cmp al, 2	       383	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000768	     0xf85aa020000	                           jne 0x4000a18	       383	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x400076e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       384	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000772	        0x488b4010	            mov rax, qword [rax + 0x10] 	       384	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000776	        0x4883f804	                              cmp rax, 4	       384	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x400077a	     0xf8598020000	                           jne 0x4000a18	       384	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000780	      0xbf01000000	                              mov edi, 1	       388	ehopt.c	FUNCTION_2	SWITCH_1	IF_17	CALL_9
0x4000785	      0xe800000000	                          call 0x400078a	       388	ehopt.c	FUNCTION_2	SWITCH_1	IF_17	CALL_9
0x400078a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       389	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x400078e	    0xc70007000000	                      mov dword [rax], 7	       389	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000794	    0x488b15000000	            mov rdx, qword [0x0400079b] 	       390	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x400079b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x400079f	        0x48895018	             mov qword [rax + 0x18], rdx	       390	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x40007a3	      0xe800000000	                          call 0x40007a8	       391	ehopt.c	FUNCTION_2	SWITCH_1	IF_17	CALL_10
0x40007a8	            0x89c2	                            mov edx, eax	       391	ehopt.c	FUNCTION_2	SWITCH_1	IF_17	CALL_10
0x40007aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       391	ehopt.c	FUNCTION_2	SWITCH_1	IF_17	CALL_10
0x40007ae	          0x895020	             mov dword [rax + 0x20], edx	       391	ehopt.c	FUNCTION_2	SWITCH_1	IF_17	CALL_10
0x40007b1	      0xe962020000	                           jmp 0x4000a18	       393	ehopt.c	FUNCTION_2	SWITCH_1
0x40007b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       396	ehopt.c	FUNCTION_2	SWITCH_1
0x40007ba	    0xc70006000000	                      mov dword [rax], 6	       396	ehopt.c	FUNCTION_2	SWITCH_1
0x40007c0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       397	ehopt.c	FUNCTION_2	SWITCH_1	IF_18
0x40007c4	            0x8b00	                    mov eax, dword [rax]	       397	ehopt.c	FUNCTION_2	SWITCH_1	IF_18
0x40007c6	          0x83f804	                              cmp eax, 4	       397	ehopt.c	FUNCTION_2	SWITCH_1	IF_18
0x40007c9	     0xf854c020000	                           jne 0x4000a1b	       397	ehopt.c	FUNCTION_2	SWITCH_1	IF_18
0x40007cf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       399	ehopt.c	FUNCTION_2	SWITCH_1	IF_19
0x40007d3	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       399	ehopt.c	FUNCTION_2	SWITCH_1	IF_19
0x40007d7	            0x3c02	                               cmp al, 2	       399	ehopt.c	FUNCTION_2	SWITCH_1	IF_19
0x40007d9	     0xf85aa000000	                           jne 0x4000889	       399	ehopt.c	FUNCTION_2	SWITCH_1	IF_19
0x40007df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       405	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40007e3	        0x488b4010	            mov rax, qword [rax + 0x10] 	       405	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40007e7	        0x4883f83f	                           cmp rax, 0x3f	       405	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40007eb	            0x7f2e	                            jg 0x400081b	       405	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40007ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       407	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40007f1	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       407	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40007f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       407	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40007f9	          0x8b4820	            mov ecx, dword [rax + 0x20] 	       407	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40007fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       408	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x4000800	        0x488b4010	            mov rax, qword [rax + 0x10] 	       408	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x4000804	          0x83c840	                            or eax, 0x40	       408	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x4000807	            0x89c6	                            mov esi, eax	       408	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x4000809	          0x4863c1	                         movsxd rax, ecx	       408	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x400080c	      0x408874027c	        mov byte [rdx + rax + 0x7c], sil	       408	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x4000811	      0xb801000000	                              mov eax, 1	       410	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x4000816	      0xe909020000	                           jmp 0x4000a24	       410	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x400081b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       412	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x400081f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       412	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x4000823	    0x483dff000000	                           cmp rax, 0xff	       412	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x4000829	            0x7f25	                            jg 0x4000850	       412	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x400082b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       414	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x400082f	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       414	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x4000833	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       414	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x4000837	          0x8b4020	            mov eax, dword [rax + 0x20] 	       414	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x400083a	            0x4898	                                    cdqe	       414	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x400083c	      0xc644027c02	          mov byte [rdx + rax + 0x7c], 2	       414	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x4000841	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       415	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x4000845	    0xc70001000000	                      mov dword [rax], 1	       415	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x400084b	      0xe9ce010000	                           jmp 0x4000a1e	       456	ehopt.c	FUNCTION_2	SWITCH_1
0x4000850	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       417	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000854	        0x488b4010	            mov rax, qword [rax + 0x10] 	       417	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000858	    0x483dffff0000	                         cmp rax, 0xffff	       417	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x400085e	     0xf8fba010000	                            jg 0x4000a1e	       417	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000864	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       419	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000868	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       419	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x400086c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       419	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000870	          0x8b4020	            mov eax, dword [rax + 0x20] 	       419	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000873	            0x4898	                                    cdqe	       419	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000875	      0xc644027c03	          mov byte [rdx + rax + 0x7c], 3	       419	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x400087a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       420	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x400087e	    0xc70002000000	                      mov dword [rax], 2	       420	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000884	      0xe995010000	                           jmp 0x4000a1e	       456	ehopt.c	FUNCTION_2	SWITCH_1
0x4000889	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       423	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x400088d	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       423	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x4000891	            0x3c14	                            cmp al, 0x14	       423	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x4000893	            0x755c	                           jne 0x40008f1	       423	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x4000895	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       423	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x4000899	          0x8b4008	                mov eax, dword [rax + 8]	       423	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x400089c	          0x83f801	                              cmp eax, 1	       423	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x400089f	            0x7550	                           jne 0x40008f1	       423	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x40008a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       430	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x40008a5	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       430	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x40008a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       430	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x40008ad	          0x8b4020	            mov eax, dword [rax + 0x20] 	       430	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x40008b0	          0x4c63e0	                         movsxd r12, eax	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x40008b3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x40008b7	          0x4889c7	                            mov rdi, rax	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x40008ba	      0xe800000000	                          call 0x40008bf	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x40008bf	        0x4883ec08	                              sub rsp, 8	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x40008c3	              0x53	                                push rbx	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x40008c4	          0x4d89e1	                             mov r9, r12	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x40008c7	          0x4989c0	                             mov r8, rax	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x40008ca	      0xb908000000	                              mov ecx, 8	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x40008cf	      0xba00000000	                              mov edx, 0	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x40008d4	      0xbe04000000	                              mov esi, 4	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x40008d9	      0xbf0c000000	                            mov edi, 0xc	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x40008de	      0xe800000000	                          call 0x40008e3	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x40008e3	        0x4883c410	                           add rsp, 0x10	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x40008e7	      0xb801000000	                              mov eax, 1	       431	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x40008ec	      0xe933010000	                           jmp 0x4000a24	       431	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x40008f1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       433	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x40008f5	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       433	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x40008f9	            0x3c0b	                             cmp al, 0xb	       433	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x40008fb	            0x7410	                            je 0x400090d	       433	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x40008fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       434	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x4000901	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       434	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x4000905	            0x3c0e	                             cmp al, 0xe	       434	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x4000907	     0xf8511010000	                           jne 0x4000a1e	       434	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x400090d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       435	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x4000911	          0x8b4008	                mov eax, dword [rax + 8]	       435	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x4000914	          0x83f801	                              cmp eax, 1	       435	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x4000917	     0xf8601010000	                           jbe 0x4000a1e	       435	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x400091d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       437	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000921	          0x488b00	                    mov rax, qword [rax]	       437	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000924	        0x488b4008	                mov rax, qword [rax + 8]	       437	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000928	          0x4885c0	                           test rax, rax	       437	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400092b	     0xf84ed000000	                            je 0x4000a1e	       437	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000931	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       438	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000935	        0x488b4008	                mov rax, qword [rax + 8]	       438	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000939	        0x488b4008	                mov rax, qword [rax + 8]	       438	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400093d	          0x4885c0	                           test rax, rax	       438	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000940	     0xf84d8000000	                            je 0x4000a1e	       438	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000946	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       439	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400094a	          0x488b00	                    mov rax, qword [rax]	       439	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400094d	         0xfb64028	           movzx eax, byte [rax + 0x28] 	       439	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000951	            0x3c14	                            cmp al, 0x14	       439	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000953	     0xf85c5000000	                           jne 0x4000a1e	       439	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000959	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       440	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400095d	        0x488b4008	                mov rax, qword [rax + 8]	       440	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000961	         0xfb64028	           movzx eax, byte [rax + 0x28] 	       440	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000965	            0x3c02	                               cmp al, 2	       440	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000967	     0xf85b1000000	                           jne 0x4000a1e	       440	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400096d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       441	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000971	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       441	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000975	            0x3c0b	                             cmp al, 0xb	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000977	            0x750e	                           jne 0x4000987	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000979	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       442	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400097d	        0x488b4008	                mov rax, qword [rax + 8]	       442	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000981	        0x488b4020	            mov rax, qword [rax + 0x20] 	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000985	            0xeb19	                           jmp 0x40009a0	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000987	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400098b	        0x488b4008	                mov rax, qword [rax + 8]	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400098f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000993	      0xba01000000	                              mov edx, 1	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000998	            0x89c1	                            mov ecx, eax	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400099a	          0x48d3e2	                             shl rdx, cl	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400099d	          0x4889d0	                            mov rax, rdx	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40009a0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       444	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40009a4	          0x8b5208	                mov edx, dword [rdx + 8]	       444	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40009a7	            0x89d2	                            mov edx, edx	       444	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40009a9	          0x4839d0	                            cmp rax, rdx	       441	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40009ac	            0x7570	                           jne 0x4000a1e	       441	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40009ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40009b2	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       452	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40009b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40009ba	          0x8b4020	            mov eax, dword [rax + 0x20] 	       452	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40009bd	          0x4c63e0	                         movsxd r12, eax	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40009c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       451	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_14
0x40009c4	          0x488b00	                    mov rax, qword [rax]	       451	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_14
0x40009c7	        0x4883c010	                           add rax, 0x10	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40009cb	          0x4889c7	                            mov rdi, rax	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40009ce	      0xe800000000	                          call 0x40009d3	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40009d3	          0x4889c2	                            mov rdx, rax	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40009d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40009da	          0x8b4008	                mov eax, dword [rax + 8]	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40009dd	          0xc1e003	                              shl eax, 3	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40009e0	        0x4883ec08	                              sub rsp, 8	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40009e4	              0x53	                                push rbx	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40009e5	          0x4d89e1	                             mov r9, r12	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40009e8	          0x4989d0	                             mov r8, rdx	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40009eb	            0x89c1	                            mov ecx, eax	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40009ed	      0xba00000000	                              mov edx, 0	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40009f2	      0xbe04000000	                              mov esi, 4	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40009f7	      0xbf0c000000	                            mov edi, 0xc	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40009fc	      0xe800000000	                          call 0x4000a01	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x4000a01	        0x4883c410	                           add rsp, 0x10	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x4000a05	      0xb801000000	                              mov eax, 1	       453	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000a0a	            0xeb18	                           jmp 0x4000a24	       453	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000a0c	              0x90	                                     nop	       460	ehopt.c	FUNCTION_2	SWITCH_1
0x4000a0d	            0xeb10	                           jmp 0x4000a1f	       460	ehopt.c	FUNCTION_2	SWITCH_1
0x4000a0f	              0x90	                                     nop	       324	ehopt.c	FUNCTION_2	SWITCH_1
0x4000a10	            0xeb0d	                           jmp 0x4000a1f	       324	ehopt.c	FUNCTION_2	SWITCH_1
0x4000a12	              0x90	                                     nop	       366	ehopt.c	FUNCTION_2	SWITCH_1
0x4000a13	            0xeb0a	                           jmp 0x4000a1f	       366	ehopt.c	FUNCTION_2	SWITCH_1
0x4000a15	              0x90	                                     nop	       379	ehopt.c	FUNCTION_2	SWITCH_1
0x4000a16	            0xeb07	                           jmp 0x4000a1f	       379	ehopt.c	FUNCTION_2	SWITCH_1
0x4000a18	              0x90	                                     nop	       393	ehopt.c	FUNCTION_2	SWITCH_1
0x4000a19	            0xeb04	                           jmp 0x4000a1f	       393	ehopt.c	FUNCTION_2	SWITCH_1
0x4000a1b	              0x90	                                     nop	       398	ehopt.c	FUNCTION_2	SWITCH_1	IF_18
0x4000a1c	            0xeb01	                           jmp 0x4000a1f	       398	ehopt.c	FUNCTION_2	SWITCH_1	IF_18
0x4000a1e	              0x90	                                     nop	       456	ehopt.c	FUNCTION_2	SWITCH_1
0x4000a1f	      0xb800000000	                              mov eax, 0	       463	ehopt.c	FUNCTION_2
0x4000a24	        0x488d65f0	                   lea rsp, [rbp - 0x10]	       464	ehopt.c	FUNCTION_2
0x4000a28	              0x5b	                                 pop rbx	       464	ehopt.c	FUNCTION_2
0x4000a29	            0x415c	                                 pop r12	       464	ehopt.c	FUNCTION_2
0x4000a2b	              0x5d	                                 pop rbp	       464	ehopt.c	FUNCTION_2
0x4000a2c	              0xc3	                                     ret	       464	ehopt.c	FUNCTION_2
get_cie_info	WHILE,8:IF,13:CALL,5:ELSE,4:SWITCH,0:DO,0:FOR,0:functions,0	294
0x4000040	              0x55	                                push rbp	       104	ehopt.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       104	ehopt.c	FUNCTION_1
0x4000044	        0x4883ec50	                           sub rsp, 0x50	       104	ehopt.c	FUNCTION_1
0x4000048	        0x48897db8	             mov qword [rbp - 0x48], rdi	       104	ehopt.c	FUNCTION_1
0x400004c	    0x64488b042528	                mov rax, qword fs:[0x28]	       104	ehopt.c	FUNCTION_1
0x4000055	        0x488945f8	                mov qword [rbp - 8], rax	       104	ehopt.c	FUNCTION_1
0x4000059	            0x31c0	                            xor eax, eax	       104	ehopt.c	FUNCTION_1
0x400005b	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       111	ehopt.c	FUNCTION_1
0x4000062	    0x488b05000000	            mov rax, qword [0x04000069] 	       115	ehopt.c	FUNCTION_1	CALL_1
0x4000069	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       115	ehopt.c	FUNCTION_1	CALL_1
0x4000070	          0x488b00	                    mov rax, qword [rax]	       115	ehopt.c	FUNCTION_1	CALL_1
0x4000073	          0x488b00	                    mov rax, qword [rax]	       115	ehopt.c	FUNCTION_1	CALL_1
0x4000076	        0x488945d0	             mov qword [rbp - 0x30], rax	       115	ehopt.c	FUNCTION_1	CALL_1
0x400007a	    0x488b05000000	            mov rax, qword [0x04000081] 	       116	ehopt.c	FUNCTION_1	CALL_2
0x4000081	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       116	ehopt.c	FUNCTION_1	CALL_2
0x4000088	          0x488b00	                    mov rax, qword [rax]	       116	ehopt.c	FUNCTION_1	CALL_2
0x400008b	        0x488b4020	            mov rax, qword [rax + 0x20] 	       116	ehopt.c	FUNCTION_1	CALL_2
0x400008f	        0x488945d8	             mov qword [rbp - 0x28], rax	       116	ehopt.c	FUNCTION_1	CALL_2
0x4000093	    0x488b05000000	            mov rax, qword [0x0400009a] 	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x400009a	          0x488b00	                    mov rax, qword [rax]	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x400009d	      0xba0c000000	                            mov edx, 0xc	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x40000a2	      0xbe00000000	                              mov esi, 0	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x40000a7	          0x4889c7	                            mov rdi, rax	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x40000aa	      0xe800000000	                          call 0x40000af	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x40000af	            0x85c0	                           test eax, eax	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x40000b1	            0x7506	                           jne 0x40000b9	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x40000b3	        0xc645c3ff	            mov byte [rbp - 0x3d], 0xff 	       123	ehopt.c	FUNCTION_1	IF_1
0x40000b7	            0xeb04	                           jmp 0x40000bd	       123	ehopt.c	FUNCTION_1	IF_1
0x40000b9	        0xc645c300	                mov byte [rbp - 0x3d], 0	       125	ehopt.c	FUNCTION_1	ELSE_1
0x40000bd	    0xc745c4040000	               mov dword [rbp - 0x3c], 4	       127	ehopt.c	FUNCTION_1	ELSE_1
0x40000c4	            0xeb1e	                           jmp 0x40000e4	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000c6	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       130	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000c9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       130	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000cd	        0x488b4010	            mov rax, qword [rax + 0x10] 	       130	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000d1	            0x29c2	                            sub edx, eax	       130	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000d3	            0x89d0	                            mov eax, edx	       130	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000d5	          0x8945c4	             mov dword [rbp - 0x3c], eax	       130	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000d8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       131	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000dc	        0x488b4038	            mov rax, qword [rax + 0x38] 	       131	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000e0	        0x488945d0	             mov qword [rbp - 0x30], rax	       131	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000e4	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000e9	            0x7413	                            je 0x40000fe	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000eb	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000ee	          0x4863d0	                         movsxd rdx, eax	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000f1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000f5	        0x488b4010	            mov rax, qword [rax + 0x10] 	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000f9	          0x4839c2	                            cmp rdx, rax	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000fc	            0x7dc8	                           jge 0x40000c6	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000fe	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       133	ehopt.c	FUNCTION_1	IF_2
0x4000103	            0x746e	                            je 0x4000173	       133	ehopt.c	FUNCTION_1	IF_2
0x4000105	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       134	ehopt.c	FUNCTION_1	IF_2
0x4000109	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       134	ehopt.c	FUNCTION_1	IF_2
0x400010d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       134	ehopt.c	FUNCTION_1	IF_2
0x4000110	            0x4898	                                    cdqe	       134	ehopt.c	FUNCTION_1	IF_2
0x4000112	          0x4829c2	                            sub rdx, rax	       134	ehopt.c	FUNCTION_1	IF_2
0x4000115	          0x4889d0	                            mov rax, rdx	       134	ehopt.c	FUNCTION_1	IF_2
0x4000118	        0x4883f803	                              cmp rax, 3	       134	ehopt.c	FUNCTION_1	IF_2
0x400011c	            0x7e55	                           jle 0x4000173	       134	ehopt.c	FUNCTION_1	IF_2
0x400011e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       135	ehopt.c	FUNCTION_1	IF_2
0x4000122	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       135	ehopt.c	FUNCTION_1	IF_2
0x4000125	            0x4898	                                    cdqe	       135	ehopt.c	FUNCTION_1	IF_2
0x4000127	       0xfb644027c	     movzx eax, byte [rdx + rax + 0x7c] 	       135	ehopt.c	FUNCTION_1	IF_2
0x400012c	          0x3a45c3	               cmp al, byte [rbp - 0x3d]	       135	ehopt.c	FUNCTION_1	IF_2
0x400012f	            0x7542	                           jne 0x4000173	       135	ehopt.c	FUNCTION_1	IF_2
0x4000131	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       136	ehopt.c	FUNCTION_1	IF_2
0x4000134	          0x83c001	                              add eax, 1	       136	ehopt.c	FUNCTION_1	IF_2
0x4000137	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       136	ehopt.c	FUNCTION_1	IF_2
0x400013b	            0x4898	                                    cdqe	       136	ehopt.c	FUNCTION_1	IF_2
0x400013d	       0xfb644027c	     movzx eax, byte [rdx + rax + 0x7c] 	       136	ehopt.c	FUNCTION_1	IF_2
0x4000142	          0x3a45c3	               cmp al, byte [rbp - 0x3d]	       136	ehopt.c	FUNCTION_1	IF_2
0x4000145	            0x752c	                           jne 0x4000173	       136	ehopt.c	FUNCTION_1	IF_2
0x4000147	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       137	ehopt.c	FUNCTION_1	IF_2
0x400014a	          0x83c002	                              add eax, 2	       137	ehopt.c	FUNCTION_1	IF_2
0x400014d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       137	ehopt.c	FUNCTION_1	IF_2
0x4000151	            0x4898	                                    cdqe	       137	ehopt.c	FUNCTION_1	IF_2
0x4000153	       0xfb644027c	     movzx eax, byte [rdx + rax + 0x7c] 	       137	ehopt.c	FUNCTION_1	IF_2
0x4000158	          0x3a45c3	               cmp al, byte [rbp - 0x3d]	       137	ehopt.c	FUNCTION_1	IF_2
0x400015b	            0x7516	                           jne 0x4000173	       137	ehopt.c	FUNCTION_1	IF_2
0x400015d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       138	ehopt.c	FUNCTION_1	IF_2
0x4000160	          0x83c003	                              add eax, 3	       138	ehopt.c	FUNCTION_1	IF_2
0x4000163	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       138	ehopt.c	FUNCTION_1	IF_2
0x4000167	            0x4898	                                    cdqe	       138	ehopt.c	FUNCTION_1	IF_2
0x4000169	       0xfb644027c	     movzx eax, byte [rdx + rax + 0x7c] 	       138	ehopt.c	FUNCTION_1	IF_2
0x400016e	          0x3a45c3	               cmp al, byte [rbp - 0x3d]	       138	ehopt.c	FUNCTION_1	IF_2
0x4000171	            0x740a	                            je 0x400017d	       138	ehopt.c	FUNCTION_1	IF_2
0x4000173	      0xb800000000	                              mov eax, 0	       139	ehopt.c	FUNCTION_1	IF_2
0x4000178	      0xe9a6020000	                           jmp 0x4000423	       139	ehopt.c	FUNCTION_1	IF_2
0x400017d	        0x8345c404	               add dword [rbp - 0x3c], 4	       143	ehopt.c	FUNCTION_1
0x4000181	            0xeb1e	                           jmp 0x40001a1	       144	ehopt.c	FUNCTION_1	WHILE_2
0x4000183	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       146	ehopt.c	FUNCTION_1	WHILE_2
0x4000186	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       146	ehopt.c	FUNCTION_1	WHILE_2
0x400018a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       146	ehopt.c	FUNCTION_1	WHILE_2
0x400018e	            0x29c2	                            sub edx, eax	       146	ehopt.c	FUNCTION_1	WHILE_2
0x4000190	            0x89d0	                            mov eax, edx	       146	ehopt.c	FUNCTION_1	WHILE_2
0x4000192	          0x8945c4	             mov dword [rbp - 0x3c], eax	       146	ehopt.c	FUNCTION_1	WHILE_2
0x4000195	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       147	ehopt.c	FUNCTION_1	WHILE_2
0x4000199	        0x488b4038	            mov rax, qword [rax + 0x38] 	       147	ehopt.c	FUNCTION_1	WHILE_2
0x400019d	        0x488945d0	             mov qword [rbp - 0x30], rax	       147	ehopt.c	FUNCTION_1	WHILE_2
0x40001a1	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       144	ehopt.c	FUNCTION_1	WHILE_2
0x40001a6	            0x7413	                            je 0x40001bb	       144	ehopt.c	FUNCTION_1	WHILE_2
0x40001a8	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       144	ehopt.c	FUNCTION_1	WHILE_2
0x40001ab	          0x4863d0	                         movsxd rdx, eax	       144	ehopt.c	FUNCTION_1	WHILE_2
0x40001ae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       144	ehopt.c	FUNCTION_1	WHILE_2
0x40001b2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       144	ehopt.c	FUNCTION_1	WHILE_2
0x40001b6	          0x4839c2	                            cmp rdx, rax	       144	ehopt.c	FUNCTION_1	WHILE_2
0x40001b9	            0x7dc8	                           jge 0x4000183	       144	ehopt.c	FUNCTION_1	WHILE_2
0x40001bb	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       149	ehopt.c	FUNCTION_1	IF_3
0x40001c0	            0x742a	                            je 0x40001ec	       149	ehopt.c	FUNCTION_1	IF_3
0x40001c2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       150	ehopt.c	FUNCTION_1	IF_3
0x40001c6	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       150	ehopt.c	FUNCTION_1	IF_3
0x40001ca	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       150	ehopt.c	FUNCTION_1	IF_3
0x40001cd	            0x4898	                                    cdqe	       150	ehopt.c	FUNCTION_1	IF_3
0x40001cf	          0x4829c2	                            sub rdx, rax	       150	ehopt.c	FUNCTION_1	IF_3
0x40001d2	          0x4889d0	                            mov rax, rdx	       150	ehopt.c	FUNCTION_1	IF_3
0x40001d5	          0x4885c0	                           test rax, rax	       150	ehopt.c	FUNCTION_1	IF_3
0x40001d8	            0x7e12	                           jle 0x40001ec	       150	ehopt.c	FUNCTION_1	IF_3
0x40001da	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       151	ehopt.c	FUNCTION_1	IF_3
0x40001de	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       151	ehopt.c	FUNCTION_1	IF_3
0x40001e1	            0x4898	                                    cdqe	       151	ehopt.c	FUNCTION_1	IF_3
0x40001e3	       0xfb644027c	     movzx eax, byte [rdx + rax + 0x7c] 	       151	ehopt.c	FUNCTION_1	IF_3
0x40001e8	            0x3c01	                               cmp al, 1	       151	ehopt.c	FUNCTION_1	IF_3
0x40001ea	            0x740a	                            je 0x40001f6	       151	ehopt.c	FUNCTION_1	IF_3
0x40001ec	      0xb800000000	                              mov eax, 0	       152	ehopt.c	FUNCTION_1	IF_3
0x40001f1	      0xe92d020000	                           jmp 0x4000423	       152	ehopt.c	FUNCTION_1	IF_3
0x40001f6	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       156	ehopt.c	FUNCTION_1
0x40001fd	        0x8345c401	               add dword [rbp - 0x3c], 1	       157	ehopt.c	FUNCTION_1
0x4000201	            0xeb1e	                           jmp 0x4000221	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000203	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       162	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000206	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       162	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x400020a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       162	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x400020e	            0x29c2	                            sub edx, eax	       162	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000210	            0x89d0	                            mov eax, edx	       162	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000212	          0x8945c4	             mov dword [rbp - 0x3c], eax	       162	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000215	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       163	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000219	        0x488b4038	            mov rax, qword [rax + 0x38] 	       163	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x400021d	        0x488945d0	             mov qword [rbp - 0x30], rax	       163	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000221	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000226	            0x7413	                            je 0x400023b	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000228	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x400022b	          0x4863d0	                         movsxd rdx, eax	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x400022e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000232	        0x488b4010	            mov rax, qword [rax + 0x10] 	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000236	          0x4839c2	                            cmp rdx, rax	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000239	            0x7dc8	                           jge 0x4000203	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x400023b	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       165	ehopt.c	FUNCTION_1	WHILE_3	IF_4
0x4000240	            0x7531	                           jne 0x4000273	       165	ehopt.c	FUNCTION_1	WHILE_3	IF_4
0x4000242	      0xb800000000	                              mov eax, 0	       166	ehopt.c	FUNCTION_1	WHILE_3	IF_4
0x4000247	      0xe9d7010000	                           jmp 0x4000423	       166	ehopt.c	FUNCTION_1	WHILE_3	IF_4
0x400024c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       170	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x400024f	          0x83f808	                              cmp eax, 8	       170	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x4000252	            0x771b	                            ja 0x400026f	       170	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x4000254	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       172	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x4000258	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       172	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x400025b	            0x4898	                                    cdqe	       172	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x400025d	       0xfb654027c	     movzx edx, byte [rdx + rax + 0x7c] 	       172	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x4000262	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       172	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x4000265	            0x4898	                                    cdqe	       172	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x4000267	        0x885405e0	         mov byte [rbp + rax - 0x20], dl	       172	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x400026b	        0x8345c801	               add dword [rbp - 0x38], 1	       173	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x400026f	        0x8345c401	               add dword [rbp - 0x3c], 1	       175	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000273	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000276	          0x4863d0	                         movsxd rdx, eax	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000279	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x400027d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000281	          0x4839c2	                            cmp rdx, rax	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000284	            0x7d12	                           jge 0x4000298	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000286	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x400028a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x400028d	            0x4898	                                    cdqe	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x400028f	       0xfb644027c	     movzx eax, byte [rdx + rax + 0x7c] 	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000294	            0x84c0	                             test al, al	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000296	            0x75b4	                           jne 0x400024c	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000298	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       177	ehopt.c	FUNCTION_1	WHILE_3	IF_6
0x400029b	          0x4863d0	                         movsxd rdx, eax	       177	ehopt.c	FUNCTION_1	WHILE_3	IF_6
0x400029e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       177	ehopt.c	FUNCTION_1	WHILE_3	IF_6
0x40002a2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       177	ehopt.c	FUNCTION_1	WHILE_3	IF_6
0x40002a6	          0x4839c2	                            cmp rdx, rax	       177	ehopt.c	FUNCTION_1	WHILE_3	IF_6
0x40002a9	            0x7c05	                            jl 0x40002b0	       177	ehopt.c	FUNCTION_1	WHILE_3	IF_6
0x40002ab	      0xe951ffffff	                           jmp 0x4000201	       179	ehopt.c	FUNCTION_1	WHILE_3
0x40002b0	              0x90	                                     nop	       178	ehopt.c	FUNCTION_1	WHILE_3	IF_6
0x40002b1	        0x8345c401	               add dword [rbp - 0x3c], 1	       180	ehopt.c	FUNCTION_1
0x40002b5	            0xeb1e	                           jmp 0x40002d5	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40002b7	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       183	ehopt.c	FUNCTION_1	WHILE_6
0x40002ba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       183	ehopt.c	FUNCTION_1	WHILE_6
0x40002be	        0x488b4010	            mov rax, qword [rax + 0x10] 	       183	ehopt.c	FUNCTION_1	WHILE_6
0x40002c2	            0x29c2	                            sub edx, eax	       183	ehopt.c	FUNCTION_1	WHILE_6
0x40002c4	            0x89d0	                            mov eax, edx	       183	ehopt.c	FUNCTION_1	WHILE_6
0x40002c6	          0x8945c4	             mov dword [rbp - 0x3c], eax	       183	ehopt.c	FUNCTION_1	WHILE_6
0x40002c9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       184	ehopt.c	FUNCTION_1	WHILE_6
0x40002cd	        0x488b4038	            mov rax, qword [rax + 0x38] 	       184	ehopt.c	FUNCTION_1	WHILE_6
0x40002d1	        0x488945d0	             mov qword [rbp - 0x30], rax	       184	ehopt.c	FUNCTION_1	WHILE_6
0x40002d5	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40002da	            0x7413	                            je 0x40002ef	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40002dc	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40002df	          0x4863d0	                         movsxd rdx, eax	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40002e2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40002e6	        0x488b4010	            mov rax, qword [rax + 0x10] 	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40002ea	          0x4839c2	                            cmp rdx, rax	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40002ed	            0x7dc8	                           jge 0x40002b7	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40002ef	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       186	ehopt.c	FUNCTION_1	IF_7
0x40002f4	            0x750a	                           jne 0x4000300	       186	ehopt.c	FUNCTION_1	IF_7
0x40002f6	      0xb800000000	                              mov eax, 0	       187	ehopt.c	FUNCTION_1	IF_7
0x40002fb	      0xe923010000	                           jmp 0x4000423	       187	ehopt.c	FUNCTION_1	IF_7
0x4000300	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       189	ehopt.c	FUNCTION_1
0x4000303	            0x4898	                                    cdqe	       189	ehopt.c	FUNCTION_1
0x4000305	      0xc64405e000	          mov byte [rbp + rax - 0x20], 0	       189	ehopt.c	FUNCTION_1
0x400030a	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	       190	ehopt.c	FUNCTION_1	IF_8
0x400030e	            0x84c0	                             test al, al	       190	ehopt.c	FUNCTION_1	IF_8
0x4000310	     0xf84c0000000	                            je 0x40003d6	       190	ehopt.c	FUNCTION_1	IF_8
0x4000316	        0x488d45e0	                   lea rax, [rbp - 0x20]	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x400031a	      0xbe00000000	                              mov esi, 0	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x400031f	          0x4889c7	                            mov rdi, rax	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x4000322	      0xe800000000	                          call 0x4000327	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x4000327	            0x85c0	                           test eax, eax	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x4000329	     0xf8598000000	                           jne 0x40003c7	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x400032f	            0xeb0c	                           jmp 0x400033d	       198	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000331	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       200	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000335	        0x488b4040	            mov rax, qword [rax + 0x40] 	       200	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000339	        0x488945d8	             mov qword [rbp - 0x28], rax	       200	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x400033d	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       198	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000342	            0x7420	                            je 0x4000364	       198	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000344	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000348	        0x488b4008	                mov rax, qword [rax + 8]	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x400034c	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000350	            0x75df	                           jne 0x4000331	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000352	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000356	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x400035a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x400035d	            0x4898	                                    cdqe	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x400035f	          0x4839c2	                            cmp rdx, rax	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000362	            0x75cd	                           jne 0x4000331	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000364	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       201	ehopt.c	FUNCTION_1	ELSE_2	IF_9	IF_10
0x4000369	            0x7506	                           jne 0x4000371	       201	ehopt.c	FUNCTION_1	ELSE_2	IF_9	IF_10
0x400036b	        0x8345c404	               add dword [rbp - 0x3c], 4	       202	ehopt.c	FUNCTION_1	ELSE_2	IF_9	IF_10
0x400036f	            0xeb2e	                           jmp 0x400039f	       202	ehopt.c	FUNCTION_1	ELSE_2	IF_9	IF_10
0x4000371	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       204	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3
0x4000375	         0xfb64002	               movzx eax, byte [rax + 2]	       204	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3
0x4000379	           0xfb6c0	                           movzx eax, al	       204	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3
0x400037c	           0x145c4	             add dword [rbp - 0x3c], eax	       204	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3
0x400037f	            0xeb1e	                           jmp 0x400039f	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x4000381	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       207	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x4000384	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       207	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x4000388	        0x488b4010	            mov rax, qword [rax + 0x10] 	       207	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x400038c	            0x29c2	                            sub edx, eax	       207	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x400038e	            0x89d0	                            mov eax, edx	       207	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x4000390	          0x8945c4	             mov dword [rbp - 0x3c], eax	       207	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x4000393	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       208	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x4000397	        0x488b4038	            mov rax, qword [rax + 0x38] 	       208	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x400039b	        0x488945d0	             mov qword [rbp - 0x30], rax	       208	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x400039f	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x40003a4	            0x7413	                            je 0x40003b9	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x40003a6	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x40003a9	          0x4863d0	                         movsxd rdx, eax	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x40003ac	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x40003b0	        0x488b4010	            mov rax, qword [rax + 0x10] 	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x40003b4	          0x4839c2	                            cmp rdx, rax	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x40003b7	            0x7dc8	                           jge 0x4000381	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x40003b9	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       210	ehopt.c	FUNCTION_1	ELSE_2	IF_9	IF_11
0x40003be	            0x7516	                           jne 0x40003d6	       210	ehopt.c	FUNCTION_1	ELSE_2	IF_9	IF_11
0x40003c0	      0xb800000000	                              mov eax, 0	       211	ehopt.c	FUNCTION_1	ELSE_2	IF_9	IF_11
0x40003c5	            0xeb5c	                           jmp 0x4000423	       211	ehopt.c	FUNCTION_1	ELSE_2	IF_9	IF_11
0x40003c7	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	       213	ehopt.c	FUNCTION_1	ELSE_4	IF_12
0x40003cb	            0x3c7a	                            cmp al, 0x7a	       213	ehopt.c	FUNCTION_1	ELSE_4	IF_12
0x40003cd	            0x7407	                            je 0x40003d6	       213	ehopt.c	FUNCTION_1	ELSE_4	IF_12
0x40003cf	      0xb800000000	                              mov eax, 0	       214	ehopt.c	FUNCTION_1	ELSE_4	IF_12
0x40003d4	            0xeb4d	                           jmp 0x4000423	       214	ehopt.c	FUNCTION_1	ELSE_4	IF_12
0x40003d6	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       219	ehopt.c	FUNCTION_1
0x40003da	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       219	ehopt.c	FUNCTION_1
0x40003dd	            0x4898	                                    cdqe	       219	ehopt.c	FUNCTION_1
0x40003df	       0xfb644027c	     movzx eax, byte [rdx + rax + 0x7c] 	       219	ehopt.c	FUNCTION_1
0x40003e4	           0xfbec0	                           movsx eax, al	       219	ehopt.c	FUNCTION_1
0x40003e7	      0x25ff000000	                           and eax, 0xff	       219	ehopt.c	FUNCTION_1
0x40003ec	          0x8945cc	             mov dword [rbp - 0x34], eax	       219	ehopt.c	FUNCTION_1
0x40003ef	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       220	ehopt.c	FUNCTION_1	IF_13
0x40003f2	      0x2580000000	                           and eax, 0x80	       220	ehopt.c	FUNCTION_1	IF_13
0x40003f7	            0x85c0	                           test eax, eax	       220	ehopt.c	FUNCTION_1	IF_13
0x40003f9	            0x7407	                            je 0x4000402	       220	ehopt.c	FUNCTION_1	IF_13
0x40003fb	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       221	ehopt.c	FUNCTION_1	IF_13
0x4000402	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       223	ehopt.c	FUNCTION_1
0x4000405	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       223	ehopt.c	FUNCTION_1
0x4000409	            0x8910	                    mov dword [rax], edx	       223	ehopt.c	FUNCTION_1
0x400040b	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	       224	ehopt.c	FUNCTION_1
0x400040f	            0x3c7a	                            cmp al, 0x7a	       224	ehopt.c	FUNCTION_1
0x4000411	           0xf94c0	                                 sete al	       224	ehopt.c	FUNCTION_1
0x4000414	           0xfb6d0	                           movzx edx, al	       224	ehopt.c	FUNCTION_1
0x4000417	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       224	ehopt.c	FUNCTION_1
0x400041b	          0x895004	                mov dword [rax + 4], edx	       224	ehopt.c	FUNCTION_1
0x400041e	      0xb801000000	                              mov eax, 1	       226	ehopt.c	FUNCTION_1
0x4000423	        0x488b4df8	                mov rcx, qword [rbp - 8]	       227	ehopt.c	FUNCTION_1
0x4000427	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       227	ehopt.c	FUNCTION_1
0x4000430	            0x7405	                            je 0x4000437	       227	ehopt.c	FUNCTION_1
0x4000432	      0xe800000000	                          call 0x4000437	       227	ehopt.c	FUNCTION_1
0x4000437	              0xc9	                                   leave	       227	ehopt.c	FUNCTION_1
0x4000438	              0xc3	                                     ret	       227	ehopt.c	FUNCTION_1
eh_frame_convert_frag	WHILE,0:IF,0:CALL,7:ELSE,0:SWITCH,1:DO,0:FOR,0:functions,0	122
0x4000b11	              0x55	                                push rbp	       515	ehopt.c	FUNCTION_5
0x4000b12	          0x4889e5	                            mov rbp, rsp	       515	ehopt.c	FUNCTION_5
0x4000b15	        0x4883ec30	                           sub rsp, 0x30	       515	ehopt.c	FUNCTION_5
0x4000b19	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       515	ehopt.c	FUNCTION_5
0x4000b1d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       520	ehopt.c	FUNCTION_5
0x4000b21	        0x488b4030	            mov rax, qword [rax + 0x30] 	       520	ehopt.c	FUNCTION_5
0x4000b25	        0x488945f0	             mov qword [rbp - 0x10], rax	       520	ehopt.c	FUNCTION_5
0x4000b29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       521	ehopt.c	FUNCTION_5
0x4000b2d	        0x488b4020	            mov rax, qword [rax + 0x20] 	       521	ehopt.c	FUNCTION_5
0x4000b31	          0x8945e8	             mov dword [rbp - 0x18], eax	       521	ehopt.c	FUNCTION_5
0x4000b34	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       523	ehopt.c	FUNCTION_5	CALL_1
0x4000b38	        0x488b4028	            mov rax, qword [rax + 0x28] 	       523	ehopt.c	FUNCTION_5	CALL_1
0x4000b3c	          0x4889c7	                            mov rdi, rax	       523	ehopt.c	FUNCTION_5	CALL_1
0x4000b3f	      0xe800000000	                          call 0x4000b44	       523	ehopt.c	FUNCTION_5	CALL_1
0x4000b44	        0x488945f8	                mov qword [rbp - 8], rax	       523	ehopt.c	FUNCTION_5	CALL_1
0x4000b48	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       525	ehopt.c	FUNCTION_5
0x4000b4c	          0x8b4060	            mov eax, dword [rax + 0x60] 	       525	ehopt.c	FUNCTION_5
0x4000b4f	          0xc1e803	                              shr eax, 3	       525	ehopt.c	FUNCTION_5
0x4000b52	          0x8945ec	             mov dword [rbp - 0x14], eax	       525	ehopt.c	FUNCTION_5
0x4000b55	        0x837dec00	               cmp dword [rbp - 0x14], 0	       526	ehopt.c	FUNCTION_5	CALL_2
0x4000b59	            0x7f14	                            jg 0x4000b6f	       526	ehopt.c	FUNCTION_5	CALL_2
0x4000b5b	      0xba00000000	                              mov edx, 0	       526	ehopt.c	FUNCTION_5	CALL_2
0x4000b60	      0xbe0e020000	                          mov esi, 0x20e	       526	ehopt.c	FUNCTION_5	CALL_2
0x4000b65	      0xbf00000000	                              mov edi, 0	       526	ehopt.c	FUNCTION_5	CALL_2
0x4000b6a	      0xe800000000	                          call 0x4000b6f	       526	ehopt.c	FUNCTION_5	CALL_2
0x4000b6f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       527	ehopt.c	FUNCTION_5
0x4000b72	          0x4863f0	                         movsxd rsi, eax	       527	ehopt.c	FUNCTION_5
0x4000b75	        0x488b45f8	                mov rax, qword [rbp - 8]	       527	ehopt.c	FUNCTION_5
0x4000b79	            0x4899	                                     cqo	       527	ehopt.c	FUNCTION_5
0x4000b7b	          0x48f7fe	                                idiv rsi	       527	ehopt.c	FUNCTION_5
0x4000b7e	        0x488945f8	                mov qword [rbp - 8], rax	       527	ehopt.c	FUNCTION_5
0x4000b82	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000b86	          0x8b4060	            mov eax, dword [rax + 0x60] 	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000b89	          0x83e007	                              and eax, 7	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000b8c	          0x83f801	                              cmp eax, 1	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000b8f	            0x7445	                            je 0x4000bd6	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000b91	          0x83f801	                              cmp eax, 1	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000b94	            0x720a	                            jb 0x4000ba0	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000b96	          0x83f802	                              cmp eax, 2	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000b99	            0x747f	                            je 0x4000c1a	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000b9b	      0xe9cf000000	                           jmp 0x4000c6f	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000ba0	      0x48837df83f	               cmp qword [rbp - 8], 0x3f	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000ba5	            0x7e14	                           jle 0x4000bbb	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000ba7	      0xba00000000	                              mov edx, 0	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000bac	      0xbe13020000	                          mov esi, 0x213	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000bb1	      0xbf00000000	                              mov edi, 0	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000bb6	      0xe800000000	                          call 0x4000bbb	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000bbb	        0x488b45f8	                mov rax, qword [rbp - 8]	       532	ehopt.c	FUNCTION_5	SWITCH_1
0x4000bbf	          0x83c840	                            or eax, 0x40	       532	ehopt.c	FUNCTION_5	SWITCH_1
0x4000bc2	            0x89c1	                            mov ecx, eax	       532	ehopt.c	FUNCTION_5	SWITCH_1
0x4000bc4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       532	ehopt.c	FUNCTION_5	SWITCH_1
0x4000bc8	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       532	ehopt.c	FUNCTION_5	SWITCH_1
0x4000bcb	            0x4898	                                    cdqe	       532	ehopt.c	FUNCTION_5	SWITCH_1
0x4000bcd	        0x884c027c	         mov byte [rdx + rax + 0x7c], cl	       532	ehopt.c	FUNCTION_5	SWITCH_1
0x4000bd1	      0xe9c1000000	                           jmp 0x4000c97	       533	ehopt.c	FUNCTION_5	SWITCH_1
0x4000bd6	    0x48817df8ff00	               cmp qword [rbp - 8], 0xff	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
0x4000bde	            0x7e14	                           jle 0x4000bf4	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
0x4000be0	      0xba00000000	                              mov edx, 0	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
0x4000be5	      0xbe18020000	                          mov esi, 0x218	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
0x4000bea	      0xbf00000000	                              mov edi, 0	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
0x4000bef	      0xe800000000	                          call 0x4000bf4	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
0x4000bf4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       537	ehopt.c	FUNCTION_5	SWITCH_1
0x4000bf8	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       537	ehopt.c	FUNCTION_5	SWITCH_1
0x4000bfb	            0x4898	                                    cdqe	       537	ehopt.c	FUNCTION_5	SWITCH_1
0x4000bfd	      0xc644027c02	          mov byte [rdx + rax + 0x7c], 2	       537	ehopt.c	FUNCTION_5	SWITCH_1
0x4000c02	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       538	ehopt.c	FUNCTION_5	SWITCH_1
0x4000c06	        0x488b4010	            mov rax, qword [rax + 0x10] 	       538	ehopt.c	FUNCTION_5	SWITCH_1
0x4000c0a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       538	ehopt.c	FUNCTION_5	SWITCH_1
0x4000c0e	            0x89d1	                            mov ecx, edx	       538	ehopt.c	FUNCTION_5	SWITCH_1
0x4000c10	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       538	ehopt.c	FUNCTION_5	SWITCH_1
0x4000c14	        0x884c027c	         mov byte [rdx + rax + 0x7c], cl	       538	ehopt.c	FUNCTION_5	SWITCH_1
0x4000c18	            0xeb7d	                           jmp 0x4000c97	       539	ehopt.c	FUNCTION_5	SWITCH_1
0x4000c1a	    0x48817df8ffff	            cmp qword [rbp - 8], 0xffff 	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x4000c22	            0x7e14	                           jle 0x4000c38	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x4000c24	      0xba00000000	                              mov edx, 0	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x4000c29	      0xbe1e020000	                          mov esi, 0x21e	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x4000c2e	      0xbf00000000	                              mov edi, 0	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x4000c33	      0xe800000000	                          call 0x4000c38	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x4000c38	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       543	ehopt.c	FUNCTION_5	SWITCH_1
0x4000c3c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       543	ehopt.c	FUNCTION_5	SWITCH_1
0x4000c3f	            0x4898	                                    cdqe	       543	ehopt.c	FUNCTION_5	SWITCH_1
0x4000c41	      0xc644027c03	          mov byte [rdx + rax + 0x7c], 3	       543	ehopt.c	FUNCTION_5	SWITCH_1
0x4000c46	        0x488b45f8	                mov rax, qword [rbp - 8]	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x4000c4a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x4000c4e	        0x488d4a7c	                   lea rcx, [rdx + 0x7c]	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x4000c52	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x4000c56	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x4000c5a	          0x4801d1	                            add rcx, rdx	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x4000c5d	      0xba02000000	                              mov edx, 2	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x4000c62	          0x4889c6	                            mov rsi, rax	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x4000c65	          0x4889cf	                            mov rdi, rcx	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x4000c68	      0xe800000000	                          call 0x4000c6d	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x4000c6d	            0xeb28	                           jmp 0x4000c97	       545	ehopt.c	FUNCTION_5	SWITCH_1
0x4000c6f	        0x488b45f8	                mov rax, qword [rbp - 8]	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000c73	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000c77	        0x488d4a7c	                   lea rcx, [rdx + 0x7c]	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000c7b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000c7f	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000c83	          0x4801d1	                            add rcx, rdx	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000c86	      0xba04000000	                              mov edx, 4	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000c8b	          0x4889c6	                            mov rsi, rax	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000c8e	          0x4889cf	                            mov rdi, rcx	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000c91	      0xe800000000	                          call 0x4000c96	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000c96	              0x90	                                     nop	       549	ehopt.c	FUNCTION_5	SWITCH_1
0x4000c97	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       552	ehopt.c	FUNCTION_5
0x4000c9b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       552	ehopt.c	FUNCTION_5
0x4000c9f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       552	ehopt.c	FUNCTION_5
0x4000ca3	          0x8b4060	            mov eax, dword [rax + 0x60] 	       552	ehopt.c	FUNCTION_5
0x4000ca6	            0x89c0	                            mov eax, eax	       552	ehopt.c	FUNCTION_5
0x4000ca8	          0x83e007	                              and eax, 7	       552	ehopt.c	FUNCTION_5
0x4000cab	          0x4801c2	                            add rdx, rax	       552	ehopt.c	FUNCTION_5
0x4000cae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       552	ehopt.c	FUNCTION_5
0x4000cb2	        0x48895010	             mov qword [rax + 0x10], rdx	       552	ehopt.c	FUNCTION_5
0x4000cb6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       553	ehopt.c	FUNCTION_5
0x4000cba	    0xc7405c010000	               mov dword [rax + 0x5c], 1	       553	ehopt.c	FUNCTION_5
0x4000cc1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       554	ehopt.c	FUNCTION_5
0x4000cc5	    0xc74060000000	               mov dword [rax + 0x60], 0	       554	ehopt.c	FUNCTION_5
0x4000ccc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       555	ehopt.c	FUNCTION_5
0x4000cd0	    0x48c740200000	               mov qword [rax + 0x20], 0	       555	ehopt.c	FUNCTION_5
0x4000cd8	              0x90	                                     nop	       556	ehopt.c	FUNCTION_5
0x4000cd9	              0xc9	                                   leave	       556	ehopt.c	FUNCTION_5
0x4000cda	              0xc3	                                     ret	       556	ehopt.c	FUNCTION_5
