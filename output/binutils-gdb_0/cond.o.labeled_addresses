s_ifeqs	WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,13:DO,0:IF,2	174
0x40013ca	              0x55	                                push rbp	       460	cond.c	FUNCTION_9
0x40013cb	          0x4889e5	                            mov rbp, rsp	       460	cond.c	FUNCTION_9
0x40013ce	    0x4881eca00000	                           sub rsp, 0xa0	       460	cond.c	FUNCTION_9
0x40013d5	    0x89bd6cffffff	             mov dword [rbp - 0x94], edi	       460	cond.c	FUNCTION_9
0x40013db	    0x64488b042528	                mov rax, qword fs:[0x28]	       460	cond.c	FUNCTION_9
0x40013e4	        0x488945f8	                mov qword [rbp - 8], rax	       460	cond.c	FUNCTION_9
0x40013e8	            0x31c0	                            xor eax, eax	       460	cond.c	FUNCTION_9
0x40013ea	    0x488d8574ffff	                   lea rax, [rbp - 0x8c]	       466	cond.c	FUNCTION_9	CALL_1
0x40013f1	          0x4889c7	                            mov rdi, rax	       466	cond.c	FUNCTION_9	CALL_1
0x40013f4	      0xe800000000	                          call 0x40013f9	       466	cond.c	FUNCTION_9	CALL_1
0x40013f9	        0x48894580	             mov qword [rbp - 0x80], rax	       466	cond.c	FUNCTION_9	CALL_1
0x40013fd	    0x488b05000000	            mov rax, qword [0x04001404] 	       468	cond.c	FUNCTION_9	CALL_2
0x4001404	           0xfb600	                   movzx eax, byte [rax]	       468	cond.c	FUNCTION_9	CALL_2
0x4001407	            0x3c20	                            cmp al, 0x20	       468	cond.c	FUNCTION_9	CALL_2
0x4001409	            0x7512	                           jne 0x400141d	       468	cond.c	FUNCTION_9	CALL_2
0x400140b	    0x488b05000000	            mov rax, qword [0x04001412] 	       468	cond.c	FUNCTION_9	CALL_2
0x4001412	        0x4883c001	                              add rax, 1	       468	cond.c	FUNCTION_9	CALL_2
0x4001416	    0x488905000000	            mov qword [0x0400141d], rax 	       468	cond.c	FUNCTION_9	CALL_2
0x400141d	    0x488b05000000	            mov rax, qword [0x04001424] 	       469	cond.c	FUNCTION_9	IF_1
0x4001424	           0xfb600	                   movzx eax, byte [rax]	       469	cond.c	FUNCTION_9	IF_1
0x4001427	            0x3c2c	                            cmp al, 0x2c	       469	cond.c	FUNCTION_9	IF_1
0x4001429	            0x7421	                            je 0x400144c	       469	cond.c	FUNCTION_9	IF_1
0x400142b	      0xbf00000000	                              mov edi, 0	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4001430	      0xe800000000	                          call 0x4001435	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4001435	          0x4889c7	                            mov rdi, rax	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4001438	      0xb800000000	                              mov eax, 0	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x400143d	      0xe800000000	                          call 0x4001442	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4001442	      0xe800000000	                          call 0x4001447	       472	cond.c	FUNCTION_9	IF_1	CALL_5
0x4001447	      0xe916020000	                           jmp 0x4001662	       472	cond.c	FUNCTION_9	IF_1	CALL_5
0x400144c	    0x488b05000000	            mov rax, qword [0x04001453] 	       476	cond.c	FUNCTION_9
0x4001453	        0x4883c001	                              add rax, 1	       476	cond.c	FUNCTION_9
0x4001457	    0x488905000000	            mov qword [0x0400145e], rax 	       476	cond.c	FUNCTION_9
0x400145e	    0x488d8578ffff	                   lea rax, [rbp - 0x88]	       478	cond.c	FUNCTION_9	CALL_6
0x4001465	          0x4889c7	                            mov rdi, rax	       478	cond.c	FUNCTION_9	CALL_6
0x4001468	      0xe800000000	                          call 0x400146d	       478	cond.c	FUNCTION_9	CALL_6
0x400146d	        0x48894588	             mov qword [rbp - 0x78], rax	       478	cond.c	FUNCTION_9	CALL_6
0x4001471	    0x8b9574ffffff	             mov edx, dword [rbp - 0x8c]	       480	cond.c	FUNCTION_9	CALL_7
0x4001477	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       480	cond.c	FUNCTION_9	CALL_7
0x400147d	            0x39c2	                            cmp edx, eax	       480	cond.c	FUNCTION_9	CALL_7
0x400147f	            0x7527	                           jne 0x40014a8	       480	cond.c	FUNCTION_9	CALL_7
0x4001481	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	       480	cond.c	FUNCTION_9	CALL_7
0x4001487	          0x4863d0	                         movsxd rdx, eax	       480	cond.c	FUNCTION_9	CALL_7
0x400148a	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       480	cond.c	FUNCTION_9	CALL_7
0x400148e	        0x488b4580	             mov rax, qword [rbp - 0x80]	       480	cond.c	FUNCTION_9	CALL_7
0x4001492	          0x4889ce	                            mov rsi, rcx	       480	cond.c	FUNCTION_9	CALL_7
0x4001495	          0x4889c7	                            mov rdi, rax	       480	cond.c	FUNCTION_9	CALL_7
0x4001498	      0xe800000000	                          call 0x400149d	       480	cond.c	FUNCTION_9	CALL_7
0x400149d	            0x85c0	                           test eax, eax	       480	cond.c	FUNCTION_9	CALL_7
0x400149f	            0x7507	                           jne 0x40014a8	       480	cond.c	FUNCTION_9	CALL_7
0x40014a1	      0xb801000000	                              mov eax, 1	       480	cond.c	FUNCTION_9	CALL_7
0x40014a6	            0xeb05	                           jmp 0x40014ad	       480	cond.c	FUNCTION_9	CALL_7
0x40014a8	      0xb800000000	                              mov eax, 0	       480	cond.c	FUNCTION_9	CALL_7
0x40014ad	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       480	cond.c	FUNCTION_9	CALL_7
0x40014b3	        0x488d45c0	                   lea rax, [rbp - 0x40]	       482	cond.c	FUNCTION_9	CALL_8
0x40014b7	          0x4889c7	                            mov rdi, rax	       482	cond.c	FUNCTION_9	CALL_8
0x40014ba	      0xe805030000	              call sym.initialize_cframe	       482	cond.c	FUNCTION_9	CALL_8
0x40014bf	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       483	cond.c	FUNCTION_9
0x40014c2	            0x85c0	                           test eax, eax	       483	cond.c	FUNCTION_9
0x40014c4	            0x750e	                           jne 0x40014d4	       483	cond.c	FUNCTION_9
0x40014c6	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       483	cond.c	FUNCTION_9
0x40014cc	    0x3b856cffffff	             cmp eax, dword [rbp - 0x94]	       483	cond.c	FUNCTION_9
0x40014d2	            0x7507	                           jne 0x40014db	       483	cond.c	FUNCTION_9
0x40014d4	      0xb801000000	                              mov eax, 1	       483	cond.c	FUNCTION_9
0x40014d9	            0xeb05	                           jmp 0x40014e0	       483	cond.c	FUNCTION_9
0x40014db	      0xb800000000	                              mov eax, 0	       483	cond.c	FUNCTION_9
0x40014e0	          0x8945ec	             mov dword [rbp - 0x14], eax	       483	cond.c	FUNCTION_9
0x40014e3	    0x48c745900000	               mov qword [rbp - 0x70], 0	       485	cond.c	FUNCTION_9	CALL_9
0x40014eb	        0x488b4590	             mov rax, qword [rbp - 0x70]	       485	cond.c	FUNCTION_9	CALL_9
0x40014ef	        0x48894598	             mov qword [rbp - 0x68], rax	       485	cond.c	FUNCTION_9	CALL_9
0x40014f3	    0x48c745a03800	           mov qword [rbp - 0x60], 0x38 	       485	cond.c	FUNCTION_9	CALL_9
0x40014fb	        0x488b4598	             mov rax, qword [rbp - 0x68]	       485	cond.c	FUNCTION_9	CALL_9
0x40014ff	        0x488945a8	             mov qword [rbp - 0x58], rax	       485	cond.c	FUNCTION_9	CALL_9
0x4001503	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       485	cond.c	FUNCTION_9	CALL_9
0x4001507	        0x488b4020	            mov rax, qword [rax + 0x20] 	       485	cond.c	FUNCTION_9	CALL_9
0x400150b	          0x4889c2	                            mov rdx, rax	       485	cond.c	FUNCTION_9	CALL_9
0x400150e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       485	cond.c	FUNCTION_9	CALL_9
0x4001512	        0x488b4018	            mov rax, qword [rax + 0x18] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001516	          0x4829c2	                            sub rdx, rax	       485	cond.c	FUNCTION_9	CALL_9
0x4001519	          0x4889d0	                            mov rax, rdx	       485	cond.c	FUNCTION_9	CALL_9
0x400151c	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       485	cond.c	FUNCTION_9	CALL_9
0x4001520	            0x7313	                           jae 0x4001535	       485	cond.c	FUNCTION_9	CALL_9
0x4001522	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       485	cond.c	FUNCTION_9	CALL_9
0x4001526	        0x488b4598	             mov rax, qword [rbp - 0x68]	       485	cond.c	FUNCTION_9	CALL_9
0x400152a	          0x4889d6	                            mov rsi, rdx	       485	cond.c	FUNCTION_9	CALL_9
0x400152d	          0x4889c7	                            mov rdi, rax	       485	cond.c	FUNCTION_9	CALL_9
0x4001530	      0xe800000000	                          call 0x4001535	       485	cond.c	FUNCTION_9	CALL_9
0x4001535	        0x488b4598	             mov rax, qword [rbp - 0x68]	       485	cond.c	FUNCTION_9	CALL_9
0x4001539	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       485	cond.c	FUNCTION_9	CALL_9
0x400153d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       485	cond.c	FUNCTION_9	CALL_9
0x4001541	          0x4801c2	                            add rdx, rax	       485	cond.c	FUNCTION_9	CALL_9
0x4001544	        0x488b4598	             mov rax, qword [rbp - 0x68]	       485	cond.c	FUNCTION_9	CALL_9
0x4001548	        0x48895018	             mov qword [rax + 0x18], rdx	       485	cond.c	FUNCTION_9	CALL_9
0x400154c	        0x488b4590	             mov rax, qword [rbp - 0x70]	       485	cond.c	FUNCTION_9	CALL_9
0x4001550	        0x488945b0	             mov qword [rbp - 0x50], rax	       485	cond.c	FUNCTION_9	CALL_9
0x4001554	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       485	cond.c	FUNCTION_9	CALL_9
0x4001558	        0x488b4010	            mov rax, qword [rax + 0x10] 	       485	cond.c	FUNCTION_9	CALL_9
0x400155c	        0x488945b8	             mov qword [rbp - 0x48], rax	       485	cond.c	FUNCTION_9	CALL_9
0x4001560	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       485	cond.c	FUNCTION_9	CALL_9
0x4001564	        0x488b4018	            mov rax, qword [rax + 0x18] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001568	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       485	cond.c	FUNCTION_9	CALL_9
0x400156c	            0x750e	                           jne 0x400157c	       485	cond.c	FUNCTION_9	CALL_9
0x400156e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       485	cond.c	FUNCTION_9	CALL_9
0x4001572	         0xfb65050	           movzx edx, byte [rax + 0x50] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001576	          0x83ca02	                               or edx, 2	       485	cond.c	FUNCTION_9	CALL_9
0x4001579	          0x885050	               mov byte [rax + 0x50], dl	       485	cond.c	FUNCTION_9	CALL_9
0x400157c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       485	cond.c	FUNCTION_9	CALL_9
0x4001580	        0x488b4018	            mov rax, qword [rax + 0x18] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001584	          0x4889c2	                            mov rdx, rax	       485	cond.c	FUNCTION_9	CALL_9
0x4001587	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       485	cond.c	FUNCTION_9	CALL_9
0x400158b	        0x488b4030	            mov rax, qword [rax + 0x30] 	       485	cond.c	FUNCTION_9	CALL_9
0x400158f	          0x4801c2	                            add rdx, rax	       485	cond.c	FUNCTION_9	CALL_9
0x4001592	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       485	cond.c	FUNCTION_9	CALL_9
0x4001596	        0x488b4030	            mov rax, qword [rax + 0x30] 	       485	cond.c	FUNCTION_9	CALL_9
0x400159a	          0x48f7d0	                                 not rax	       485	cond.c	FUNCTION_9	CALL_9
0x400159d	          0x4821d0	                            and rax, rdx	       485	cond.c	FUNCTION_9	CALL_9
0x40015a0	          0x4889c2	                            mov rdx, rax	       485	cond.c	FUNCTION_9	CALL_9
0x40015a3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       485	cond.c	FUNCTION_9	CALL_9
0x40015a7	        0x48895018	             mov qword [rax + 0x18], rdx	       485	cond.c	FUNCTION_9	CALL_9
0x40015ab	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       485	cond.c	FUNCTION_9	CALL_9
0x40015af	        0x488b4018	            mov rax, qword [rax + 0x18] 	       485	cond.c	FUNCTION_9	CALL_9
0x40015b3	          0x4889c2	                            mov rdx, rax	       485	cond.c	FUNCTION_9	CALL_9
0x40015b6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       485	cond.c	FUNCTION_9	CALL_9
0x40015ba	        0x488b4008	                mov rax, qword [rax + 8]	       485	cond.c	FUNCTION_9	CALL_9
0x40015be	          0x4829c2	                            sub rdx, rax	       485	cond.c	FUNCTION_9	CALL_9
0x40015c1	          0x4889d0	                            mov rax, rdx	       485	cond.c	FUNCTION_9	CALL_9
0x40015c4	          0x4889c2	                            mov rdx, rax	       485	cond.c	FUNCTION_9	CALL_9
0x40015c7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       485	cond.c	FUNCTION_9	CALL_9
0x40015cb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       485	cond.c	FUNCTION_9	CALL_9
0x40015cf	          0x4889c1	                            mov rcx, rax	       485	cond.c	FUNCTION_9	CALL_9
0x40015d2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       485	cond.c	FUNCTION_9	CALL_9
0x40015d6	        0x488b4008	                mov rax, qword [rax + 8]	       485	cond.c	FUNCTION_9	CALL_9
0x40015da	          0x4829c1	                            sub rcx, rax	       485	cond.c	FUNCTION_9	CALL_9
0x40015dd	          0x4889c8	                            mov rax, rcx	       485	cond.c	FUNCTION_9	CALL_9
0x40015e0	          0x4839c2	                            cmp rdx, rax	       485	cond.c	FUNCTION_9	CALL_9
0x40015e3	            0x7610	                           jbe 0x40015f5	       485	cond.c	FUNCTION_9	CALL_9
0x40015e5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       485	cond.c	FUNCTION_9	CALL_9
0x40015e9	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       485	cond.c	FUNCTION_9	CALL_9
0x40015ed	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       485	cond.c	FUNCTION_9	CALL_9
0x40015f1	        0x48895018	             mov qword [rax + 0x18], rdx	       485	cond.c	FUNCTION_9	CALL_9
0x40015f5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       485	cond.c	FUNCTION_9	CALL_9
0x40015f9	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       485	cond.c	FUNCTION_9	CALL_9
0x40015fd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       485	cond.c	FUNCTION_9	CALL_9
0x4001601	        0x48895010	             mov qword [rax + 0x10], rdx	       485	cond.c	FUNCTION_9	CALL_9
0x4001605	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       485	cond.c	FUNCTION_9	CALL_9
0x4001609	    0x488905000000	            mov qword [0x04001610], rax 	       484	cond.c	FUNCTION_9
0x4001610	    0x488b05000000	            mov rax, qword [0x04001617] 	       486	cond.c	FUNCTION_9	CALL_10
0x4001617	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       486	cond.c	FUNCTION_9	CALL_10
0x400161b	      0xba38000000	                           mov edx, 0x38	       486	cond.c	FUNCTION_9	CALL_10
0x4001620	          0x4889ce	                            mov rsi, rcx	       486	cond.c	FUNCTION_9	CALL_10
0x4001623	          0x4889c7	                            mov rdi, rax	       486	cond.c	FUNCTION_9	CALL_10
0x4001626	      0xe800000000	                          call 0x400162b	       486	cond.c	FUNCTION_9	CALL_10
0x400162b	    0x8b0500000000	            mov eax, dword [0x04001631] 	       488	cond.c	FUNCTION_9	IF_2	CALL_11
0x4001631	          0x83e020	                           and eax, 0x20	       488	cond.c	FUNCTION_9	IF_2	CALL_11
0x4001634	            0x85c0	                           test eax, eax	       488	cond.c	FUNCTION_9	IF_2	CALL_11
0x4001636	            0x7425	                            je 0x400165d	       488	cond.c	FUNCTION_9	IF_2	CALL_11
0x4001638	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       489	cond.c	FUNCTION_9	IF_2
0x400163b	            0x85c0	                           test eax, eax	       489	cond.c	FUNCTION_9	IF_2
0x400163d	            0x741e	                            je 0x400165d	       489	cond.c	FUNCTION_9	IF_2
0x400163f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       490	cond.c	FUNCTION_9	IF_2
0x4001643	          0x4885c0	                           test rax, rax	       490	cond.c	FUNCTION_9	IF_2
0x4001646	            0x740b	                            je 0x4001653	       490	cond.c	FUNCTION_9	IF_2
0x4001648	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       491	cond.c	FUNCTION_9	IF_2
0x400164c	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       491	cond.c	FUNCTION_9	IF_2
0x400164f	            0x85c0	                           test eax, eax	       491	cond.c	FUNCTION_9	IF_2
0x4001651	            0x750a	                           jne 0x400165d	       491	cond.c	FUNCTION_9	IF_2
0x4001653	      0xbf02000000	                              mov edi, 2	       492	cond.c	FUNCTION_9	CALL_12
0x4001658	      0xe800000000	                          call 0x400165d	       492	cond.c	FUNCTION_9	CALL_12
0x400165d	      0xe800000000	                          call 0x4001662	       494	cond.c	FUNCTION_9	CALL_13
0x4001662	        0x488b45f8	                mov rax, qword [rbp - 8]	       495	cond.c	FUNCTION_9
0x4001666	    0x644833042528	                xor rax, qword fs:[0x28]	       495	cond.c	FUNCTION_9
0x400166f	            0x7405	                            je 0x4001676	       495	cond.c	FUNCTION_9
0x4001671	      0xe800000000	                          call 0x4001676	       495	cond.c	FUNCTION_9
0x4001676	              0xc9	                                   leave	       495	cond.c	FUNCTION_9
0x4001677	              0xc3	                                     ret	       495	cond.c	FUNCTION_9
s_ifc	WHILE,0:ELSE,1:functions,0:SWITCH,0:FOR,0:CALL,13:DO,0:IF,4	187
0x4000af9	              0x55	                                push rbp	       265	cond.c	FUNCTION_5
0x4000afa	          0x4889e5	                            mov rbp, rsp	       265	cond.c	FUNCTION_5
0x4000afd	    0x4881ecb00000	                           sub rsp, 0xb0	       265	cond.c	FUNCTION_5
0x4000b04	    0x89bd5cffffff	             mov dword [rbp - 0xa4], edi	       265	cond.c	FUNCTION_5
0x4000b0a	    0x64488b042528	                mov rax, qword fs:[0x28]	       265	cond.c	FUNCTION_5
0x4000b13	        0x488945f8	                mov qword [rbp - 8], rax	       265	cond.c	FUNCTION_5
0x4000b17	            0x31c0	                            xor eax, eax	       265	cond.c	FUNCTION_5
0x4000b19	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       266	cond.c	FUNCTION_5
0x4000b24	    0xc6856bffffff	                mov byte [rbp - 0x95], 0	       267	cond.c	FUNCTION_5
0x4000b2b	    0x8b0500000000	            mov eax, dword [0x04000b31] 	       273	cond.c	FUNCTION_5	IF_1
0x4000b31	            0x85c0	                           test eax, eax	       273	cond.c	FUNCTION_5	IF_1
0x4000b33	            0x7416	                            je 0x4000b4b	       273	cond.c	FUNCTION_5	IF_1
0x4000b35	    0x488d856bffff	                   lea rax, [rbp - 0x95]	       274	cond.c	FUNCTION_5	CALL_1
0x4000b3c	          0x4889c7	                            mov rdi, rax	       274	cond.c	FUNCTION_5	CALL_1
0x4000b3f	      0xe800000000	                          call 0x4000b44	       274	cond.c	FUNCTION_5	CALL_1
0x4000b44	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       274	cond.c	FUNCTION_5	CALL_1
0x4000b4b	    0x488d856cffff	                   lea rax, [rbp - 0x94]	       276	cond.c	FUNCTION_5	CALL_2
0x4000b52	          0x4889c6	                            mov rsi, rax	       276	cond.c	FUNCTION_5	CALL_2
0x4000b55	      0xbf2c000000	                           mov edi, 0x2c	       276	cond.c	FUNCTION_5	CALL_2
0x4000b5a	      0xe808feffff	                 call sym.get_mri_string	       276	cond.c	FUNCTION_5	CALL_2
0x4000b5f	        0x48894580	             mov qword [rbp - 0x80], rax	       276	cond.c	FUNCTION_5	CALL_2
0x4000b63	    0x488b05000000	            mov rax, qword [0x04000b6a] 	       278	cond.c	FUNCTION_5	IF_2
0x4000b6a	           0xfb600	                   movzx eax, byte [rax]	       278	cond.c	FUNCTION_5	IF_2
0x4000b6d	            0x3c2c	                            cmp al, 0x2c	       278	cond.c	FUNCTION_5	IF_2
0x4000b6f	            0x7419	                            je 0x4000b8a	       278	cond.c	FUNCTION_5	IF_2
0x4000b71	      0xbf00000000	                              mov edi, 0	       279	cond.c	FUNCTION_5	CALL_4
0x4000b76	      0xe800000000	                          call 0x4000b7b	       279	cond.c	FUNCTION_5	CALL_4
0x4000b7b	          0x4889c7	                            mov rdi, rax	       279	cond.c	FUNCTION_5	CALL_4
0x4000b7e	      0xb800000000	                              mov eax, 0	       279	cond.c	FUNCTION_5	CALL_4
0x4000b83	      0xe800000000	                          call 0x4000b88	       279	cond.c	FUNCTION_5	CALL_4
0x4000b88	            0xeb12	                           jmp 0x4000b9c	       279	cond.c	FUNCTION_5	CALL_4
0x4000b8a	    0x488b05000000	            mov rax, qword [0x04000b91] 	       281	cond.c	FUNCTION_5	ELSE_1
0x4000b91	        0x4883c001	                              add rax, 1	       281	cond.c	FUNCTION_5	ELSE_1
0x4000b95	    0x488905000000	            mov qword [0x04000b9c], rax 	       281	cond.c	FUNCTION_5	ELSE_1
0x4000b9c	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       283	cond.c	FUNCTION_5	CALL_5
0x4000ba3	          0x4889c6	                            mov rsi, rax	       283	cond.c	FUNCTION_5	CALL_5
0x4000ba6	      0xbf3b000000	                           mov edi, 0x3b	       283	cond.c	FUNCTION_5	CALL_5
0x4000bab	      0xe8b7fdffff	                 call sym.get_mri_string	       283	cond.c	FUNCTION_5	CALL_5
0x4000bb0	        0x48894588	             mov qword [rbp - 0x78], rax	       283	cond.c	FUNCTION_5	CALL_5
0x4000bb4	    0x8b956cffffff	             mov edx, dword [rbp - 0x94]	       285	cond.c	FUNCTION_5	CALL_6
0x4000bba	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	       285	cond.c	FUNCTION_5	CALL_6
0x4000bc0	            0x39c2	                            cmp edx, eax	       285	cond.c	FUNCTION_5	CALL_6
0x4000bc2	            0x7527	                           jne 0x4000beb	       285	cond.c	FUNCTION_5	CALL_6
0x4000bc4	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	       285	cond.c	FUNCTION_5	CALL_6
0x4000bca	          0x4863d0	                         movsxd rdx, eax	       285	cond.c	FUNCTION_5	CALL_6
0x4000bcd	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       285	cond.c	FUNCTION_5	CALL_6
0x4000bd1	        0x488b4580	             mov rax, qword [rbp - 0x80]	       285	cond.c	FUNCTION_5	CALL_6
0x4000bd5	          0x4889ce	                            mov rsi, rcx	       285	cond.c	FUNCTION_5	CALL_6
0x4000bd8	          0x4889c7	                            mov rdi, rax	       285	cond.c	FUNCTION_5	CALL_6
0x4000bdb	      0xe800000000	                          call 0x4000be0	       285	cond.c	FUNCTION_5	CALL_6
0x4000be0	            0x85c0	                           test eax, eax	       285	cond.c	FUNCTION_5	CALL_6
0x4000be2	            0x7507	                           jne 0x4000beb	       285	cond.c	FUNCTION_5	CALL_6
0x4000be4	      0xb801000000	                              mov eax, 1	       285	cond.c	FUNCTION_5	CALL_6
0x4000be9	            0xeb05	                           jmp 0x4000bf0	       285	cond.c	FUNCTION_5	CALL_6
0x4000beb	      0xb800000000	                              mov eax, 0	       285	cond.c	FUNCTION_5	CALL_6
0x4000bf0	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	       285	cond.c	FUNCTION_5	CALL_6
0x4000bf6	        0x488d45c0	                   lea rax, [rbp - 0x40]	       287	cond.c	FUNCTION_5	CALL_7
0x4000bfa	          0x4889c7	                            mov rdi, rax	       287	cond.c	FUNCTION_5	CALL_7
0x4000bfd	      0xe8c20b0000	              call sym.initialize_cframe	       287	cond.c	FUNCTION_5	CALL_7
0x4000c02	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       288	cond.c	FUNCTION_5
0x4000c05	            0x85c0	                           test eax, eax	       288	cond.c	FUNCTION_5
0x4000c07	            0x750e	                           jne 0x4000c17	       288	cond.c	FUNCTION_5
0x4000c09	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	       288	cond.c	FUNCTION_5
0x4000c0f	    0x3b855cffffff	             cmp eax, dword [rbp - 0xa4]	       288	cond.c	FUNCTION_5
0x4000c15	            0x7507	                           jne 0x4000c1e	       288	cond.c	FUNCTION_5
0x4000c17	      0xb801000000	                              mov eax, 1	       288	cond.c	FUNCTION_5
0x4000c1c	            0xeb05	                           jmp 0x4000c23	       288	cond.c	FUNCTION_5
0x4000c1e	      0xb800000000	                              mov eax, 0	       288	cond.c	FUNCTION_5
0x4000c23	          0x8945ec	             mov dword [rbp - 0x14], eax	       288	cond.c	FUNCTION_5
0x4000c26	    0x48c745900000	               mov qword [rbp - 0x70], 0	       290	cond.c	FUNCTION_5	CALL_8
0x4000c2e	        0x488b4590	             mov rax, qword [rbp - 0x70]	       290	cond.c	FUNCTION_5	CALL_8
0x4000c32	        0x48894598	             mov qword [rbp - 0x68], rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000c36	    0x48c745a03800	           mov qword [rbp - 0x60], 0x38 	       290	cond.c	FUNCTION_5	CALL_8
0x4000c3e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       290	cond.c	FUNCTION_5	CALL_8
0x4000c42	        0x488945a8	             mov qword [rbp - 0x58], rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000c46	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       290	cond.c	FUNCTION_5	CALL_8
0x4000c4a	        0x488b4020	            mov rax, qword [rax + 0x20] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000c4e	          0x4889c2	                            mov rdx, rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000c51	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       290	cond.c	FUNCTION_5	CALL_8
0x4000c55	        0x488b4018	            mov rax, qword [rax + 0x18] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000c59	          0x4829c2	                            sub rdx, rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000c5c	          0x4889d0	                            mov rax, rdx	       290	cond.c	FUNCTION_5	CALL_8
0x4000c5f	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       290	cond.c	FUNCTION_5	CALL_8
0x4000c63	            0x7313	                           jae 0x4000c78	       290	cond.c	FUNCTION_5	CALL_8
0x4000c65	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       290	cond.c	FUNCTION_5	CALL_8
0x4000c69	        0x488b4598	             mov rax, qword [rbp - 0x68]	       290	cond.c	FUNCTION_5	CALL_8
0x4000c6d	          0x4889d6	                            mov rsi, rdx	       290	cond.c	FUNCTION_5	CALL_8
0x4000c70	          0x4889c7	                            mov rdi, rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000c73	      0xe800000000	                          call 0x4000c78	       290	cond.c	FUNCTION_5	CALL_8
0x4000c78	        0x488b4598	             mov rax, qword [rbp - 0x68]	       290	cond.c	FUNCTION_5	CALL_8
0x4000c7c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000c80	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       290	cond.c	FUNCTION_5	CALL_8
0x4000c84	          0x4801c2	                            add rdx, rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000c87	        0x488b4598	             mov rax, qword [rbp - 0x68]	       290	cond.c	FUNCTION_5	CALL_8
0x4000c8b	        0x48895018	             mov qword [rax + 0x18], rdx	       290	cond.c	FUNCTION_5	CALL_8
0x4000c8f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       290	cond.c	FUNCTION_5	CALL_8
0x4000c93	        0x488945b0	             mov qword [rbp - 0x50], rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000c97	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       290	cond.c	FUNCTION_5	CALL_8
0x4000c9b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000c9f	        0x488945b8	             mov qword [rbp - 0x48], rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000ca3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       290	cond.c	FUNCTION_5	CALL_8
0x4000ca7	        0x488b4018	            mov rax, qword [rax + 0x18] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000cab	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       290	cond.c	FUNCTION_5	CALL_8
0x4000caf	            0x750e	                           jne 0x4000cbf	       290	cond.c	FUNCTION_5	CALL_8
0x4000cb1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       290	cond.c	FUNCTION_5	CALL_8
0x4000cb5	         0xfb65050	           movzx edx, byte [rax + 0x50] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000cb9	          0x83ca02	                               or edx, 2	       290	cond.c	FUNCTION_5	CALL_8
0x4000cbc	          0x885050	               mov byte [rax + 0x50], dl	       290	cond.c	FUNCTION_5	CALL_8
0x4000cbf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       290	cond.c	FUNCTION_5	CALL_8
0x4000cc3	        0x488b4018	            mov rax, qword [rax + 0x18] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000cc7	          0x4889c2	                            mov rdx, rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000cca	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       290	cond.c	FUNCTION_5	CALL_8
0x4000cce	        0x488b4030	            mov rax, qword [rax + 0x30] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000cd2	          0x4801c2	                            add rdx, rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000cd5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       290	cond.c	FUNCTION_5	CALL_8
0x4000cd9	        0x488b4030	            mov rax, qword [rax + 0x30] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000cdd	          0x48f7d0	                                 not rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000ce0	          0x4821d0	                            and rax, rdx	       290	cond.c	FUNCTION_5	CALL_8
0x4000ce3	          0x4889c2	                            mov rdx, rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000ce6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       290	cond.c	FUNCTION_5	CALL_8
0x4000cea	        0x48895018	             mov qword [rax + 0x18], rdx	       290	cond.c	FUNCTION_5	CALL_8
0x4000cee	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       290	cond.c	FUNCTION_5	CALL_8
0x4000cf2	        0x488b4018	            mov rax, qword [rax + 0x18] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000cf6	          0x4889c2	                            mov rdx, rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000cf9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       290	cond.c	FUNCTION_5	CALL_8
0x4000cfd	        0x488b4008	                mov rax, qword [rax + 8]	       290	cond.c	FUNCTION_5	CALL_8
0x4000d01	          0x4829c2	                            sub rdx, rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000d04	          0x4889d0	                            mov rax, rdx	       290	cond.c	FUNCTION_5	CALL_8
0x4000d07	          0x4889c2	                            mov rdx, rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000d0a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       290	cond.c	FUNCTION_5	CALL_8
0x4000d0e	        0x488b4020	            mov rax, qword [rax + 0x20] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000d12	          0x4889c1	                            mov rcx, rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000d15	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       290	cond.c	FUNCTION_5	CALL_8
0x4000d19	        0x488b4008	                mov rax, qword [rax + 8]	       290	cond.c	FUNCTION_5	CALL_8
0x4000d1d	          0x4829c1	                            sub rcx, rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000d20	          0x4889c8	                            mov rax, rcx	       290	cond.c	FUNCTION_5	CALL_8
0x4000d23	          0x4839c2	                            cmp rdx, rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000d26	            0x7610	                           jbe 0x4000d38	       290	cond.c	FUNCTION_5	CALL_8
0x4000d28	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       290	cond.c	FUNCTION_5	CALL_8
0x4000d2c	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000d30	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       290	cond.c	FUNCTION_5	CALL_8
0x4000d34	        0x48895018	             mov qword [rax + 0x18], rdx	       290	cond.c	FUNCTION_5	CALL_8
0x4000d38	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       290	cond.c	FUNCTION_5	CALL_8
0x4000d3c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000d40	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       290	cond.c	FUNCTION_5	CALL_8
0x4000d44	        0x48895010	             mov qword [rax + 0x10], rdx	       290	cond.c	FUNCTION_5	CALL_8
0x4000d48	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       290	cond.c	FUNCTION_5	CALL_8
0x4000d4c	    0x488905000000	            mov qword [0x04000d53], rax 	       289	cond.c	FUNCTION_5
0x4000d53	    0x488b05000000	            mov rax, qword [0x04000d5a] 	       291	cond.c	FUNCTION_5	CALL_9
0x4000d5a	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       291	cond.c	FUNCTION_5	CALL_9
0x4000d5e	      0xba38000000	                           mov edx, 0x38	       291	cond.c	FUNCTION_5	CALL_9
0x4000d63	          0x4889ce	                            mov rsi, rcx	       291	cond.c	FUNCTION_5	CALL_9
0x4000d66	          0x4889c7	                            mov rdi, rax	       291	cond.c	FUNCTION_5	CALL_9
0x4000d69	      0xe800000000	                          call 0x4000d6e	       291	cond.c	FUNCTION_5	CALL_9
0x4000d6e	    0x8b0500000000	            mov eax, dword [0x04000d74] 	       293	cond.c	FUNCTION_5	IF_3	CALL_10
0x4000d74	          0x83e020	                           and eax, 0x20	       293	cond.c	FUNCTION_5	IF_3	CALL_10
0x4000d77	            0x85c0	                           test eax, eax	       293	cond.c	FUNCTION_5	IF_3	CALL_10
0x4000d79	            0x7425	                            je 0x4000da0	       293	cond.c	FUNCTION_5	IF_3	CALL_10
0x4000d7b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       294	cond.c	FUNCTION_5	IF_3
0x4000d7e	            0x85c0	                           test eax, eax	       294	cond.c	FUNCTION_5	IF_3
0x4000d80	            0x741e	                            je 0x4000da0	       294	cond.c	FUNCTION_5	IF_3
0x4000d82	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       295	cond.c	FUNCTION_5	IF_3
0x4000d86	          0x4885c0	                           test rax, rax	       295	cond.c	FUNCTION_5	IF_3
0x4000d89	            0x740b	                            je 0x4000d96	       295	cond.c	FUNCTION_5	IF_3
0x4000d8b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       296	cond.c	FUNCTION_5	IF_3
0x4000d8f	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       296	cond.c	FUNCTION_5	IF_3
0x4000d92	            0x85c0	                           test eax, eax	       296	cond.c	FUNCTION_5	IF_3
0x4000d94	            0x750a	                           jne 0x4000da0	       296	cond.c	FUNCTION_5	IF_3
0x4000d96	      0xbf02000000	                              mov edi, 2	       297	cond.c	FUNCTION_5	CALL_11
0x4000d9b	      0xe800000000	                          call 0x4000da0	       297	cond.c	FUNCTION_5	CALL_11
0x4000da0	    0x8b0500000000	            mov eax, dword [0x04000da6] 	       299	cond.c	FUNCTION_5	IF_4
0x4000da6	            0x85c0	                           test eax, eax	       299	cond.c	FUNCTION_5	IF_4
0x4000da8	            0x741b	                            je 0x4000dc5	       299	cond.c	FUNCTION_5	IF_4
0x4000daa	     0xfb6856bffff	            movzx eax, byte [rbp - 0x95]	       300	cond.c	FUNCTION_5	CALL_12
0x4000db1	           0xfbed0	                           movsx edx, al	       300	cond.c	FUNCTION_5	CALL_12
0x4000db4	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       300	cond.c	FUNCTION_5	CALL_12
0x4000dbb	            0x89d6	                            mov esi, edx	       300	cond.c	FUNCTION_5	CALL_12
0x4000dbd	          0x4889c7	                            mov rdi, rax	       300	cond.c	FUNCTION_5	CALL_12
0x4000dc0	      0xe800000000	                          call 0x4000dc5	       300	cond.c	FUNCTION_5	CALL_12
0x4000dc5	      0xe800000000	                          call 0x4000dca	       302	cond.c	FUNCTION_5	CALL_13
0x4000dca	              0x90	                                     nop	       303	cond.c	FUNCTION_5
0x4000dcb	        0x488b45f8	                mov rax, qword [rbp - 8]	       303	cond.c	FUNCTION_5
0x4000dcf	    0x644833042528	                xor rax, qword fs:[0x28]	       303	cond.c	FUNCTION_5
0x4000dd8	            0x7405	                            je 0x4000ddf	       303	cond.c	FUNCTION_5
0x4000dda	      0xe800000000	                          call 0x4000ddf	       303	cond.c	FUNCTION_5
0x4000ddf	              0xc9	                                   leave	       303	cond.c	FUNCTION_5
0x4000de0	              0xc3	                                     ret	       303	cond.c	FUNCTION_5
s_else	WHILE,1:ELSE,3:functions,0:SWITCH,0:FOR,0:CALL,13:DO,0:IF,5	106
0x400121f	              0x55	                                push rbp	       413	cond.c	FUNCTION_8
0x4001220	          0x4889e5	                            mov rbp, rsp	       413	cond.c	FUNCTION_8
0x4001223	              0x53	                                push rbx	       413	cond.c	FUNCTION_8
0x4001224	        0x4883ec18	                           sub rsp, 0x18	       413	cond.c	FUNCTION_8
0x4001228	          0x897dec	             mov dword [rbp - 0x14], edi	       413	cond.c	FUNCTION_8
0x400122b	    0x488b05000000	            mov rax, qword [0x04001232] 	       414	cond.c	FUNCTION_8	IF_1
0x4001232	          0x4885c0	                           test rax, rax	       414	cond.c	FUNCTION_8	IF_1
0x4001235	            0x751c	                           jne 0x4001253	       414	cond.c	FUNCTION_8	IF_1
0x4001237	      0xbf00000000	                              mov edi, 0	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x400123c	      0xe800000000	                          call 0x4001241	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x4001241	          0x4889c7	                            mov rdi, rax	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x4001244	      0xb800000000	                              mov eax, 0	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x4001249	      0xe800000000	                          call 0x400124e	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x400124e	      0xe932010000	                           jmp 0x4001385	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x4001253	    0x488b05000000	            mov rax, qword [0x0400125a] 	       418	cond.c	FUNCTION_8	ELSE_1	IF_2
0x400125a	          0x8b4028	            mov eax, dword [rax + 0x28] 	       418	cond.c	FUNCTION_8	ELSE_1	IF_2
0x400125d	            0x85c0	                           test eax, eax	       418	cond.c	FUNCTION_8	ELSE_1	IF_2
0x400125f	            0x747d	                            je 0x40012de	       418	cond.c	FUNCTION_8	ELSE_1	IF_2
0x4001261	      0xbf00000000	                              mov edi, 0	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x4001266	      0xe800000000	                          call 0x400126b	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x400126b	          0x4889c7	                            mov rdi, rax	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x400126e	      0xb800000000	                              mov eax, 0	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x4001273	      0xe800000000	                          call 0x4001278	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x4001278	      0xbf00000000	                              mov edi, 0	       423	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_6
0x400127d	      0xe800000000	                          call 0x4001282	       423	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_6
0x4001282	          0x4889c2	                            mov rdx, rax	       423	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_6
0x4001285	    0x488b05000000	            mov rax, qword [0x0400128c] 	       422	cond.c	FUNCTION_8	ELSE_1	IF_2
0x400128c	          0x8b4818	            mov ecx, dword [rax + 0x18] 	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x400128f	    0x488b05000000	            mov rax, qword [0x04001296] 	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x4001296	        0x488b4010	            mov rax, qword [rax + 0x10] 	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x400129a	            0x89ce	                            mov esi, ecx	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x400129c	          0x4889c7	                            mov rdi, rax	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x400129f	      0xb800000000	                              mov eax, 0	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x40012a4	      0xe800000000	                          call 0x40012a9	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x40012a9	      0xbf00000000	                              mov edi, 0	       426	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_8
0x40012ae	      0xe800000000	                          call 0x40012b3	       426	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_8
0x40012b3	          0x4889c2	                            mov rdx, rax	       426	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_8
0x40012b6	    0x488b05000000	            mov rax, qword [0x040012bd] 	       425	cond.c	FUNCTION_8	ELSE_1	IF_2
0x40012bd	          0x8b4808	                mov ecx, dword [rax + 8]	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x40012c0	    0x488b05000000	            mov rax, qword [0x040012c7] 	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x40012c7	          0x488b00	                    mov rax, qword [rax]	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x40012ca	            0x89ce	                            mov esi, ecx	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x40012cc	          0x4889c7	                            mov rdi, rax	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x40012cf	      0xb800000000	                              mov eax, 0	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x40012d4	      0xe800000000	                          call 0x40012d9	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x40012d9	      0xe9a7000000	                           jmp 0x4001385	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x40012de	    0x488b1d000000	            mov rbx, qword [0x040012e5] 	       430	cond.c	FUNCTION_8	ELSE_2
0x40012e5	    0x488b05000000	            mov rax, qword [0x040012ec] 	       431	cond.c	FUNCTION_8	ELSE_2	CALL_9
0x40012ec	        0x4883c018	                           add rax, 0x18	       431	cond.c	FUNCTION_8	ELSE_2	CALL_9
0x40012f0	          0x4889c7	                            mov rdi, rax	       431	cond.c	FUNCTION_8	ELSE_2	CALL_9
0x40012f3	      0xe800000000	                          call 0x40012f8	       431	cond.c	FUNCTION_8	ELSE_2	CALL_9
0x40012f8	        0x48894310	             mov qword [rbx + 0x10], rax	       431	cond.c	FUNCTION_8	ELSE_2	CALL_9
0x40012fc	    0x488b05000000	            mov rax, qword [0x04001303] 	       433	cond.c	FUNCTION_8	ELSE_2
0x4001303	    0x488b15000000	            mov rdx, qword [0x0400130a] 	       434	cond.c	FUNCTION_8	ELSE_2
0x400130a	          0x8b4a30	            mov ecx, dword [rdx + 0x30] 	       434	cond.c	FUNCTION_8	ELSE_2
0x400130d	    0x488b15000000	            mov rdx, qword [0x04001314] 	       434	cond.c	FUNCTION_8	ELSE_2
0x4001314	          0x8b522c	            mov edx, dword [rdx + 0x2c] 	       434	cond.c	FUNCTION_8	ELSE_2
0x4001317	            0x85d2	                           test edx, edx	       434	cond.c	FUNCTION_8	ELSE_2
0x4001319	           0xf94c2	                                 sete dl	       434	cond.c	FUNCTION_8	ELSE_2
0x400131c	           0xfb6d2	                           movzx edx, dl	       434	cond.c	FUNCTION_8	ELSE_2
0x400131f	             0x9ca	                             or edx, ecx	       434	cond.c	FUNCTION_8	ELSE_2
0x4001321	          0x89502c	             mov dword [rax + 0x2c], edx	       433	cond.c	FUNCTION_8	ELSE_2
0x4001324	    0x8b0500000000	            mov eax, dword [0x0400132a] 	       436	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_10
0x400132a	          0x83e020	                           and eax, 0x20	       436	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_10
0x400132d	            0x85c0	                           test eax, eax	       436	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_10
0x400132f	            0x7446	                            je 0x4001377	       436	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_10
0x4001331	    0x488b05000000	            mov rax, qword [0x04001338] 	       437	cond.c	FUNCTION_8	ELSE_2	IF_3
0x4001338	        0x488b4020	            mov rax, qword [rax + 0x20] 	       437	cond.c	FUNCTION_8	ELSE_2	IF_3
0x400133c	          0x4885c0	                           test rax, rax	       437	cond.c	FUNCTION_8	ELSE_2	IF_3
0x400133f	            0x7412	                            je 0x4001353	       437	cond.c	FUNCTION_8	ELSE_2	IF_3
0x4001341	    0x488b05000000	            mov rax, qword [0x04001348] 	       438	cond.c	FUNCTION_8	ELSE_2	IF_3
0x4001348	        0x488b4020	            mov rax, qword [rax + 0x20] 	       438	cond.c	FUNCTION_8	ELSE_2	IF_3
0x400134c	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       438	cond.c	FUNCTION_8	ELSE_2	IF_3
0x400134f	            0x85c0	                           test eax, eax	       438	cond.c	FUNCTION_8	ELSE_2	IF_3
0x4001351	            0x7524	                           jne 0x4001377	       438	cond.c	FUNCTION_8	ELSE_2	IF_3
0x4001353	    0x488b05000000	            mov rax, qword [0x0400135a] 	       440	cond.c	FUNCTION_8	ELSE_2	IF_3	IF_4
0x400135a	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       440	cond.c	FUNCTION_8	ELSE_2	IF_3	IF_4
0x400135d	            0x85c0	                           test eax, eax	       440	cond.c	FUNCTION_8	ELSE_2	IF_3	IF_4
0x400135f	            0x750c	                           jne 0x400136d	       440	cond.c	FUNCTION_8	ELSE_2	IF_3	IF_4
0x4001361	      0xbf01000000	                              mov edi, 1	       441	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_11
0x4001366	      0xe800000000	                          call 0x400136b	       441	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_11
0x400136b	            0xeb0a	                           jmp 0x4001377	       441	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_11
0x400136d	      0xbf02000000	                              mov edi, 2	       443	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_12
0x4001372	      0xe800000000	                          call 0x4001377	       443	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_12
0x4001377	    0x488b05000000	            mov rax, qword [0x0400137e] 	       446	cond.c	FUNCTION_8	ELSE_2
0x400137e	    0xc74028010000	               mov dword [rax + 0x28], 1	       446	cond.c	FUNCTION_8	ELSE_2
0x4001385	    0x8b0500000000	            mov eax, dword [0x0400138b] 	       449	cond.c	FUNCTION_8	IF_5
0x400138b	            0x85c0	                           test eax, eax	       449	cond.c	FUNCTION_8	IF_5
0x400138d	            0x742e	                            je 0x40013bd	       449	cond.c	FUNCTION_8	IF_5
0x400138f	            0xeb12	                           jmp 0x40013a3	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001391	    0x488b05000000	            mov rax, qword [0x04001398] 	       452	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001398	        0x4883c001	                              add rax, 1	       452	cond.c	FUNCTION_8	IF_5	WHILE_1
0x400139c	    0x488905000000	            mov qword [0x040013a3], rax 	       452	cond.c	FUNCTION_8	IF_5	WHILE_1
0x40013a3	    0x488b05000000	            mov rax, qword [0x040013aa] 	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x40013aa	           0xfb600	                   movzx eax, byte [rax]	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x40013ad	           0xfb6c0	                           movzx eax, al	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x40013b0	            0x4898	                                    cdqe	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x40013b2	     0xfb680000000	                   movzx eax, byte [rax]	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x40013b9	            0x84c0	                             test al, al	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x40013bb	            0x74d4	                            je 0x4001391	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x40013bd	      0xe800000000	                          call 0x40013c2	       455	cond.c	FUNCTION_8	CALL_13
0x40013c2	              0x90	                                     nop	       456	cond.c	FUNCTION_8
0x40013c3	        0x4883c418	                           add rsp, 0x18	       456	cond.c	FUNCTION_8
0x40013c7	              0x5b	                                 pop rbx	       456	cond.c	FUNCTION_8
0x40013c8	              0x5d	                                 pop rbp	       456	cond.c	FUNCTION_8
0x40013c9	              0xc3	                                     ret	       456	cond.c	FUNCTION_8
s_ifdef	WHILE,0:ELSE,1:functions,0:SWITCH,0:FOR,0:CALL,18:DO,0:IF,3	213
0x4000040	              0x55	                                push rbp	        70	cond.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        70	cond.c	FUNCTION_1
0x4000044	    0x4881ecb00000	                           sub rsp, 0xb0	        70	cond.c	FUNCTION_1
0x400004b	    0x89bd5cffffff	             mov dword [rbp - 0xa4], edi	        70	cond.c	FUNCTION_1
0x4000051	    0x64488b042528	                mov rax, qword fs:[0x28]	        70	cond.c	FUNCTION_1
0x400005a	        0x488945f8	                mov qword [rbp - 8], rax	        70	cond.c	FUNCTION_1
0x400005e	            0x31c0	                            xor eax, eax	        70	cond.c	FUNCTION_1
0x4000060	    0x488b05000000	            mov rax, qword [0x04000067] 	        79	cond.c	FUNCTION_1	CALL_1
0x4000067	           0xfb600	                   movzx eax, byte [rax]	        79	cond.c	FUNCTION_1	CALL_1
0x400006a	            0x3c20	                            cmp al, 0x20	        79	cond.c	FUNCTION_1	CALL_1
0x400006c	            0x7512	                           jne 0x4000080	        79	cond.c	FUNCTION_1	CALL_1
0x400006e	    0x488b05000000	            mov rax, qword [0x04000075] 	        79	cond.c	FUNCTION_1	CALL_1
0x4000075	        0x4883c001	                              add rax, 1	        79	cond.c	FUNCTION_1	CALL_1
0x4000079	    0x488905000000	            mov qword [0x04000080], rax 	        79	cond.c	FUNCTION_1	CALL_1
0x4000080	    0x488b05000000	            mov rax, qword [0x04000087] 	        80	cond.c	FUNCTION_1
0x4000087	    0x48898570ffff	             mov qword [rbp - 0x90], rax	        80	cond.c	FUNCTION_1
0x400008e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x4000095	           0xfb600	                   movzx eax, byte [rax]	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x4000098	           0xfb6c0	                           movzx eax, al	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x400009b	            0x4898	                                    cdqe	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x400009d	     0xfb680000000	                   movzx eax, byte [rax]	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x40000a4	           0xfbec0	                           movsx eax, al	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x40000a7	          0x83e002	                              and eax, 2	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x40000aa	            0x85c0	                           test eax, eax	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x40000ac	     0xf8598000000	                           jne 0x400014a	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x40000b2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x40000b9	           0xfb600	                   movzx eax, byte [rax]	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x40000bc	            0x3c22	                            cmp al, 0x22	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x40000be	     0xf8486000000	                            je 0x400014a	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x40000c4	      0xbf00000000	                              mov edi, 0	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x40000c9	      0xe800000000	                          call 0x40000ce	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x40000ce	          0x4889c7	                            mov rdi, rax	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x40000d1	      0xb800000000	                              mov eax, 0	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x40000d6	      0xe800000000	                          call 0x40000db	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x40000db	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x40000e6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x40000ed	        0x48894580	             mov qword [rbp - 0x80], rax	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x40000f1	        0x488b4580	             mov rax, qword [rbp - 0x80]	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x40000f5	        0x488b4020	            mov rax, qword [rax + 0x20] 	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x40000f9	          0x4889c2	                            mov rdx, rax	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x40000fc	        0x488b4580	             mov rax, qword [rbp - 0x80]	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000100	        0x488b4018	            mov rax, qword [rax + 0x18] 	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000104	          0x4829c2	                            sub rdx, rax	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000107	          0x4889d0	                            mov rax, rdx	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400010a	          0x4885c0	                           test rax, rax	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400010d	            0x7514	                           jne 0x4000123	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400010f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000116	      0xbe01000000	                              mov esi, 1	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400011b	          0x4889c7	                            mov rdi, rax	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400011e	      0xe800000000	                          call 0x4000123	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000123	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400012a	        0x488b4018	            mov rax, qword [rax + 0x18] 	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400012e	        0x488d4801	                      lea rcx, [rax + 1]	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000132	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000139	        0x48894a18	             mov qword [rdx + 0x18], rcx	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400013d	          0xc60000	                       mov byte [rax], 0	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000140	      0xe800000000	                          call 0x4000145	        86	cond.c	FUNCTION_1	IF_1	CALL_6
0x4000145	      0xe93a020000	                           jmp 0x4000384	        86	cond.c	FUNCTION_1	IF_1	CALL_6
0x400014a	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	        90	cond.c	FUNCTION_1	CALL_7
0x4000151	          0x4889c7	                            mov rdi, rax	        90	cond.c	FUNCTION_1	CALL_7
0x4000154	      0xe800000000	                          call 0x4000159	        90	cond.c	FUNCTION_1	CALL_7
0x4000159	    0x88856bffffff	               mov byte [rbp - 0x95], al	        90	cond.c	FUNCTION_1	CALL_7
0x400015f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	        91	cond.c	FUNCTION_1	CALL_8
0x4000166	          0x4889c7	                            mov rdi, rax	        91	cond.c	FUNCTION_1	CALL_8
0x4000169	      0xe800000000	                          call 0x400016e	        91	cond.c	FUNCTION_1	CALL_8
0x400016e	        0x48894588	             mov qword [rbp - 0x78], rax	        91	cond.c	FUNCTION_1	CALL_8
0x4000172	     0xfbe856bffff	            movsx eax, byte [rbp - 0x95]	        92	cond.c	FUNCTION_1	CALL_9
0x4000179	            0x89c7	                            mov edi, eax	        92	cond.c	FUNCTION_1	CALL_9
0x400017b	      0xe800000000	                          call 0x4000180	        92	cond.c	FUNCTION_1	CALL_9
0x4000180	        0x488d45c0	                   lea rax, [rbp - 0x40]	        94	cond.c	FUNCTION_1	CALL_10
0x4000184	          0x4889c7	                            mov rdi, rax	        94	cond.c	FUNCTION_1	CALL_10
0x4000187	      0xe838160000	              call sym.initialize_cframe	        94	cond.c	FUNCTION_1	CALL_10
0x400018c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        96	cond.c	FUNCTION_1	IF_2
0x400018f	            0x85c0	                           test eax, eax	        96	cond.c	FUNCTION_1	IF_2
0x4000191	            0x7409	                            je 0x400019c	        96	cond.c	FUNCTION_1	IF_2
0x4000193	    0xc745ec010000	               mov dword [rbp - 0x14], 1	        97	cond.c	FUNCTION_1	IF_2
0x400019a	            0xeb69	                           jmp 0x4000205	        97	cond.c	FUNCTION_1	IF_2
0x400019c	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40001a1	            0x7442	                            je 0x40001e5	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40001a3	        0x488b4588	             mov rax, qword [rbp - 0x78]	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40001a7	          0x4889c7	                            mov rdi, rax	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40001aa	      0xe800000000	                          call 0x40001af	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40001af	            0x85c0	                           test eax, eax	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40001b1	            0x7510	                           jne 0x40001c3	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40001b3	        0x488b4588	             mov rax, qword [rbp - 0x78]	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40001b7	          0x4889c7	                            mov rdi, rax	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40001ba	      0xe800000000	                          call 0x40001bf	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40001bf	            0x85c0	                           test eax, eax	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40001c1	            0x7422	                            je 0x40001e5	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40001c3	        0x488b4588	             mov rax, qword [rbp - 0x78]	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40001c7	          0x4889c7	                            mov rdi, rax	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40001ca	      0xe800000000	                          call 0x40001cf	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40001cf	          0x4889c2	                            mov rdx, rax	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40001d2	    0x488b05000000	            mov rax, qword [0x040001d9] 	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40001d9	          0x4839c2	                            cmp rdx, rax	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40001dc	            0x7407	                            je 0x40001e5	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40001de	      0xb801000000	                              mov eax, 1	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40001e3	            0xeb05	                           jmp 0x40001ea	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40001e5	      0xb800000000	                              mov eax, 0	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40001ea	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       105	cond.c	FUNCTION_1	ELSE_1
0x40001f0	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       110	cond.c	FUNCTION_1	ELSE_1
0x40001f6	    0x3b856cffffff	             cmp eax, dword [rbp - 0x94]	       110	cond.c	FUNCTION_1	ELSE_1
0x40001fc	           0xf94c0	                                 sete al	       110	cond.c	FUNCTION_1	ELSE_1
0x40001ff	           0xfb6c0	                           movzx eax, al	       110	cond.c	FUNCTION_1	ELSE_1
0x4000202	          0x8945ec	             mov dword [rbp - 0x14], eax	       110	cond.c	FUNCTION_1	ELSE_1
0x4000205	    0x48c745900000	               mov qword [rbp - 0x70], 0	       114	cond.c	FUNCTION_1	CALL_14
0x400020d	        0x488b4590	             mov rax, qword [rbp - 0x70]	       114	cond.c	FUNCTION_1	CALL_14
0x4000211	        0x48894598	             mov qword [rbp - 0x68], rax	       114	cond.c	FUNCTION_1	CALL_14
0x4000215	    0x48c745a03800	           mov qword [rbp - 0x60], 0x38 	       114	cond.c	FUNCTION_1	CALL_14
0x400021d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       114	cond.c	FUNCTION_1	CALL_14
0x4000221	        0x488945a8	             mov qword [rbp - 0x58], rax	       114	cond.c	FUNCTION_1	CALL_14
0x4000225	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       114	cond.c	FUNCTION_1	CALL_14
0x4000229	        0x488b4020	            mov rax, qword [rax + 0x20] 	       114	cond.c	FUNCTION_1	CALL_14
0x400022d	          0x4889c2	                            mov rdx, rax	       114	cond.c	FUNCTION_1	CALL_14
0x4000230	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       114	cond.c	FUNCTION_1	CALL_14
0x4000234	        0x488b4018	            mov rax, qword [rax + 0x18] 	       114	cond.c	FUNCTION_1	CALL_14
0x4000238	          0x4829c2	                            sub rdx, rax	       114	cond.c	FUNCTION_1	CALL_14
0x400023b	          0x4889d0	                            mov rax, rdx	       114	cond.c	FUNCTION_1	CALL_14
0x400023e	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       114	cond.c	FUNCTION_1	CALL_14
0x4000242	            0x7313	                           jae 0x4000257	       114	cond.c	FUNCTION_1	CALL_14
0x4000244	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       114	cond.c	FUNCTION_1	CALL_14
0x4000248	        0x488b4598	             mov rax, qword [rbp - 0x68]	       114	cond.c	FUNCTION_1	CALL_14
0x400024c	          0x4889d6	                            mov rsi, rdx	       114	cond.c	FUNCTION_1	CALL_14
0x400024f	          0x4889c7	                            mov rdi, rax	       114	cond.c	FUNCTION_1	CALL_14
0x4000252	      0xe800000000	                          call 0x4000257	       114	cond.c	FUNCTION_1	CALL_14
0x4000257	        0x488b4598	             mov rax, qword [rbp - 0x68]	       114	cond.c	FUNCTION_1	CALL_14
0x400025b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       114	cond.c	FUNCTION_1	CALL_14
0x400025f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       114	cond.c	FUNCTION_1	CALL_14
0x4000263	          0x4801c2	                            add rdx, rax	       114	cond.c	FUNCTION_1	CALL_14
0x4000266	        0x488b4598	             mov rax, qword [rbp - 0x68]	       114	cond.c	FUNCTION_1	CALL_14
0x400026a	        0x48895018	             mov qword [rax + 0x18], rdx	       114	cond.c	FUNCTION_1	CALL_14
0x400026e	        0x488b4590	             mov rax, qword [rbp - 0x70]	       114	cond.c	FUNCTION_1	CALL_14
0x4000272	        0x488945b0	             mov qword [rbp - 0x50], rax	       114	cond.c	FUNCTION_1	CALL_14
0x4000276	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       114	cond.c	FUNCTION_1	CALL_14
0x400027a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       114	cond.c	FUNCTION_1	CALL_14
0x400027e	        0x488945b8	             mov qword [rbp - 0x48], rax	       114	cond.c	FUNCTION_1	CALL_14
0x4000282	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       114	cond.c	FUNCTION_1	CALL_14
0x4000286	        0x488b4018	            mov rax, qword [rax + 0x18] 	       114	cond.c	FUNCTION_1	CALL_14
0x400028a	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       114	cond.c	FUNCTION_1	CALL_14
0x400028e	            0x750e	                           jne 0x400029e	       114	cond.c	FUNCTION_1	CALL_14
0x4000290	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       114	cond.c	FUNCTION_1	CALL_14
0x4000294	         0xfb65050	           movzx edx, byte [rax + 0x50] 	       114	cond.c	FUNCTION_1	CALL_14
0x4000298	          0x83ca02	                               or edx, 2	       114	cond.c	FUNCTION_1	CALL_14
0x400029b	          0x885050	               mov byte [rax + 0x50], dl	       114	cond.c	FUNCTION_1	CALL_14
0x400029e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       114	cond.c	FUNCTION_1	CALL_14
0x40002a2	        0x488b4018	            mov rax, qword [rax + 0x18] 	       114	cond.c	FUNCTION_1	CALL_14
0x40002a6	          0x4889c2	                            mov rdx, rax	       114	cond.c	FUNCTION_1	CALL_14
0x40002a9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       114	cond.c	FUNCTION_1	CALL_14
0x40002ad	        0x488b4030	            mov rax, qword [rax + 0x30] 	       114	cond.c	FUNCTION_1	CALL_14
0x40002b1	          0x4801c2	                            add rdx, rax	       114	cond.c	FUNCTION_1	CALL_14
0x40002b4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       114	cond.c	FUNCTION_1	CALL_14
0x40002b8	        0x488b4030	            mov rax, qword [rax + 0x30] 	       114	cond.c	FUNCTION_1	CALL_14
0x40002bc	          0x48f7d0	                                 not rax	       114	cond.c	FUNCTION_1	CALL_14
0x40002bf	          0x4821d0	                            and rax, rdx	       114	cond.c	FUNCTION_1	CALL_14
0x40002c2	          0x4889c2	                            mov rdx, rax	       114	cond.c	FUNCTION_1	CALL_14
0x40002c5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       114	cond.c	FUNCTION_1	CALL_14
0x40002c9	        0x48895018	             mov qword [rax + 0x18], rdx	       114	cond.c	FUNCTION_1	CALL_14
0x40002cd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       114	cond.c	FUNCTION_1	CALL_14
0x40002d1	        0x488b4018	            mov rax, qword [rax + 0x18] 	       114	cond.c	FUNCTION_1	CALL_14
0x40002d5	          0x4889c2	                            mov rdx, rax	       114	cond.c	FUNCTION_1	CALL_14
0x40002d8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       114	cond.c	FUNCTION_1	CALL_14
0x40002dc	        0x488b4008	                mov rax, qword [rax + 8]	       114	cond.c	FUNCTION_1	CALL_14
0x40002e0	          0x4829c2	                            sub rdx, rax	       114	cond.c	FUNCTION_1	CALL_14
0x40002e3	          0x4889d0	                            mov rax, rdx	       114	cond.c	FUNCTION_1	CALL_14
0x40002e6	          0x4889c2	                            mov rdx, rax	       114	cond.c	FUNCTION_1	CALL_14
0x40002e9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       114	cond.c	FUNCTION_1	CALL_14
0x40002ed	        0x488b4020	            mov rax, qword [rax + 0x20] 	       114	cond.c	FUNCTION_1	CALL_14
0x40002f1	          0x4889c1	                            mov rcx, rax	       114	cond.c	FUNCTION_1	CALL_14
0x40002f4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       114	cond.c	FUNCTION_1	CALL_14
0x40002f8	        0x488b4008	                mov rax, qword [rax + 8]	       114	cond.c	FUNCTION_1	CALL_14
0x40002fc	          0x4829c1	                            sub rcx, rax	       114	cond.c	FUNCTION_1	CALL_14
0x40002ff	          0x4889c8	                            mov rax, rcx	       114	cond.c	FUNCTION_1	CALL_14
0x4000302	          0x4839c2	                            cmp rdx, rax	       114	cond.c	FUNCTION_1	CALL_14
0x4000305	            0x7610	                           jbe 0x4000317	       114	cond.c	FUNCTION_1	CALL_14
0x4000307	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       114	cond.c	FUNCTION_1	CALL_14
0x400030b	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       114	cond.c	FUNCTION_1	CALL_14
0x400030f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       114	cond.c	FUNCTION_1	CALL_14
0x4000313	        0x48895018	             mov qword [rax + 0x18], rdx	       114	cond.c	FUNCTION_1	CALL_14
0x4000317	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       114	cond.c	FUNCTION_1	CALL_14
0x400031b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       114	cond.c	FUNCTION_1	CALL_14
0x400031f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       114	cond.c	FUNCTION_1	CALL_14
0x4000323	        0x48895010	             mov qword [rax + 0x10], rdx	       114	cond.c	FUNCTION_1	CALL_14
0x4000327	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       114	cond.c	FUNCTION_1	CALL_14
0x400032b	    0x488905000000	            mov qword [0x04000332], rax 	       113	cond.c	FUNCTION_1
0x4000332	    0x488b05000000	            mov rax, qword [0x04000339] 	       115	cond.c	FUNCTION_1	CALL_15
0x4000339	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       115	cond.c	FUNCTION_1	CALL_15
0x400033d	      0xba38000000	                           mov edx, 0x38	       115	cond.c	FUNCTION_1	CALL_15
0x4000342	          0x4889ce	                            mov rsi, rcx	       115	cond.c	FUNCTION_1	CALL_15
0x4000345	          0x4889c7	                            mov rdi, rax	       115	cond.c	FUNCTION_1	CALL_15
0x4000348	      0xe800000000	                          call 0x400034d	       115	cond.c	FUNCTION_1	CALL_15
0x400034d	    0x8b0500000000	            mov eax, dword [0x04000353] 	       117	cond.c	FUNCTION_1	IF_3	CALL_16
0x4000353	          0x83e020	                           and eax, 0x20	       117	cond.c	FUNCTION_1	IF_3	CALL_16
0x4000356	            0x85c0	                           test eax, eax	       117	cond.c	FUNCTION_1	IF_3	CALL_16
0x4000358	            0x7425	                            je 0x400037f	       117	cond.c	FUNCTION_1	IF_3	CALL_16
0x400035a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       118	cond.c	FUNCTION_1	IF_3
0x400035d	            0x85c0	                           test eax, eax	       118	cond.c	FUNCTION_1	IF_3
0x400035f	            0x741e	                            je 0x400037f	       118	cond.c	FUNCTION_1	IF_3
0x4000361	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       119	cond.c	FUNCTION_1	IF_3
0x4000365	          0x4885c0	                           test rax, rax	       119	cond.c	FUNCTION_1	IF_3
0x4000368	            0x740b	                            je 0x4000375	       119	cond.c	FUNCTION_1	IF_3
0x400036a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       120	cond.c	FUNCTION_1	IF_3
0x400036e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       120	cond.c	FUNCTION_1	IF_3
0x4000371	            0x85c0	                           test eax, eax	       120	cond.c	FUNCTION_1	IF_3
0x4000373	            0x750a	                           jne 0x400037f	       120	cond.c	FUNCTION_1	IF_3
0x4000375	      0xbf02000000	                              mov edi, 2	       121	cond.c	FUNCTION_1	CALL_17
0x400037a	      0xe800000000	                          call 0x400037f	       121	cond.c	FUNCTION_1	CALL_17
0x400037f	      0xe800000000	                          call 0x4000384	       123	cond.c	FUNCTION_1	CALL_18
0x4000384	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	cond.c	FUNCTION_1
0x4000388	    0x644833042528	                xor rax, qword fs:[0x28]	       124	cond.c	FUNCTION_1
0x4000391	            0x7405	                            je 0x4000398	       124	cond.c	FUNCTION_1
0x4000393	      0xe800000000	                          call 0x4000398	       124	cond.c	FUNCTION_1
0x4000398	              0xc9	                                   leave	       124	cond.c	FUNCTION_1
0x4000399	              0xc3	                                     ret	       124	cond.c	FUNCTION_1
s_endif	WHILE,1:ELSE,1:functions,0:SWITCH,0:FOR,0:CALL,6:DO,0:IF,3	79
0x40010eb	              0x55	                                push rbp	       382	cond.c	FUNCTION_7
0x40010ec	          0x4889e5	                            mov rbp, rsp	       382	cond.c	FUNCTION_7
0x40010ef	        0x4883ec30	                           sub rsp, 0x30	       382	cond.c	FUNCTION_7
0x40010f3	          0x897ddc	             mov dword [rbp - 0x24], edi	       382	cond.c	FUNCTION_7
0x40010f6	    0x488b05000000	            mov rax, qword [0x040010fd] 	       385	cond.c	FUNCTION_7	IF_1
0x40010fd	          0x4885c0	                           test rax, rax	       385	cond.c	FUNCTION_7	IF_1
0x4001100	            0x751c	                           jne 0x400111e	       385	cond.c	FUNCTION_7	IF_1
0x4001102	      0xbf00000000	                              mov edi, 0	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4001107	      0xe800000000	                          call 0x400110c	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x400110c	          0x4889c7	                            mov rdi, rax	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x400110f	      0xb800000000	                              mov eax, 0	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4001114	      0xe800000000	                          call 0x4001119	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4001119	      0xe9c1000000	                           jmp 0x40011df	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x400111e	    0x8b0500000000	            mov eax, dword [0x04001124] 	       391	cond.c	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x4001124	          0x83e020	                           and eax, 0x20	       391	cond.c	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x4001127	            0x85c0	                           test eax, eax	       391	cond.c	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x4001129	            0x743a	                            je 0x4001165	       391	cond.c	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x400112b	    0x488b05000000	            mov rax, qword [0x04001132] 	       392	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4001132	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       392	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4001135	            0x85c0	                           test eax, eax	       392	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4001137	            0x742c	                            je 0x4001165	       392	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4001139	    0x488b05000000	            mov rax, qword [0x04001140] 	       393	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4001140	        0x488b4020	            mov rax, qword [rax + 0x20] 	       393	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4001144	          0x4885c0	                           test rax, rax	       393	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4001147	            0x7412	                            je 0x400115b	       393	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4001149	    0x488b05000000	            mov rax, qword [0x04001150] 	       394	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4001150	        0x488b4020	            mov rax, qword [rax + 0x20] 	       394	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4001154	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       394	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4001157	            0x85c0	                           test eax, eax	       394	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4001159	            0x750a	                           jne 0x4001165	       394	cond.c	FUNCTION_7	ELSE_1	IF_2
0x400115b	      0xbf01000000	                              mov edi, 1	       395	cond.c	FUNCTION_7	ELSE_1	CALL_4
0x4001160	      0xe800000000	                          call 0x4001165	       395	cond.c	FUNCTION_7	ELSE_1	CALL_4
0x4001165	    0x488b05000000	            mov rax, qword [0x0400116c] 	       397	cond.c	FUNCTION_7	ELSE_1
0x400116c	        0x488945e8	             mov qword [rbp - 0x18], rax	       397	cond.c	FUNCTION_7	ELSE_1
0x4001170	    0x488b05000000	            mov rax, qword [0x04001177] 	       398	cond.c	FUNCTION_7	ELSE_1
0x4001177	        0x488b4020	            mov rax, qword [rax + 0x20] 	       398	cond.c	FUNCTION_7	ELSE_1
0x400117b	    0x488905000000	            mov qword [0x04001182], rax 	       398	cond.c	FUNCTION_7	ELSE_1
0x4001182	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x400118a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x400118e	        0x488945f8	                mov qword [rbp - 8], rax	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4001192	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4001196	        0x488b4008	                mov rax, qword [rax + 8]	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x400119a	        0x483b45f8	                cmp rax, qword [rbp - 8]	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x400119e	            0x732c	                           jae 0x40011cc	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011a0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011a4	        0x488b4020	            mov rax, qword [rax + 0x20] 	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011a8	        0x483b45f8	                cmp rax, qword [rbp - 8]	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011ac	            0x761e	                           jbe 0x40011cc	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011ae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011b2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011b6	        0x48895010	             mov qword [rax + 0x10], rdx	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011ba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011be	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011c2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011c6	        0x48895018	             mov qword [rax + 0x18], rdx	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011ca	            0xeb13	                           jmp 0x40011df	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011cc	        0x488b55f8	                mov rdx, qword [rbp - 8]	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011d0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011d4	          0x4889d6	                            mov rsi, rdx	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011d7	          0x4889c7	                            mov rdi, rax	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011da	      0xe800000000	                          call 0x40011df	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x40011df	    0x8b0500000000	            mov eax, dword [0x040011e5] 	       402	cond.c	FUNCTION_7	IF_3
0x40011e5	            0x85c0	                           test eax, eax	       402	cond.c	FUNCTION_7	IF_3
0x40011e7	            0x742e	                            je 0x4001217	       402	cond.c	FUNCTION_7	IF_3
0x40011e9	            0xeb12	                           jmp 0x40011fd	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x40011eb	    0x488b05000000	            mov rax, qword [0x040011f2] 	       405	cond.c	FUNCTION_7	IF_3	WHILE_1
0x40011f2	        0x4883c001	                              add rax, 1	       405	cond.c	FUNCTION_7	IF_3	WHILE_1
0x40011f6	    0x488905000000	            mov qword [0x040011fd], rax 	       405	cond.c	FUNCTION_7	IF_3	WHILE_1
0x40011fd	    0x488b05000000	            mov rax, qword [0x04001204] 	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4001204	           0xfb600	                   movzx eax, byte [rax]	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4001207	           0xfb6c0	                           movzx eax, al	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x400120a	            0x4898	                                    cdqe	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x400120c	     0xfb680000000	                   movzx eax, byte [rax]	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4001213	            0x84c0	                             test al, al	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4001215	            0x74d4	                            je 0x40011eb	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4001217	      0xe800000000	                          call 0x400121c	       408	cond.c	FUNCTION_7	CALL_6
0x400121c	              0x90	                                     nop	       409	cond.c	FUNCTION_7
0x400121d	              0xc9	                                   leave	       409	cond.c	FUNCTION_7
0x400121e	              0xc3	                                     ret	       409	cond.c	FUNCTION_7
s_if	WHILE,1:ELSE,1:functions,0:SWITCH,1:FOR,0:CALL,13:DO,0:IF,5	232
0x400039a	              0x55	                                push rbp	       128	cond.c	FUNCTION_2
0x400039b	          0x4889e5	                            mov rbp, rsp	       128	cond.c	FUNCTION_2
0x400039e	    0x4881ecb00000	                           sub rsp, 0xb0	       128	cond.c	FUNCTION_2
0x40003a5	    0x89bd5cffffff	             mov dword [rbp - 0xa4], edi	       128	cond.c	FUNCTION_2
0x40003ab	    0x64488b042528	                mov rax, qword fs:[0x28]	       128	cond.c	FUNCTION_2
0x40003b4	        0x488945f8	                mov qword [rbp - 8], rax	       128	cond.c	FUNCTION_2
0x40003b8	            0x31c0	                            xor eax, eax	       128	cond.c	FUNCTION_2
0x40003ba	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       132	cond.c	FUNCTION_2
0x40003c5	    0xc68563ffffff	                mov byte [rbp - 0x9d], 0	       133	cond.c	FUNCTION_2
0x40003cc	    0x8b0500000000	            mov eax, dword [0x040003d2] 	       135	cond.c	FUNCTION_2	IF_1
0x40003d2	            0x85c0	                           test eax, eax	       135	cond.c	FUNCTION_2	IF_1
0x40003d4	            0x7416	                            je 0x40003ec	       135	cond.c	FUNCTION_2	IF_1
0x40003d6	    0x488d8563ffff	                   lea rax, [rbp - 0x9d]	       136	cond.c	FUNCTION_2	CALL_1
0x40003dd	          0x4889c7	                            mov rdi, rax	       136	cond.c	FUNCTION_2	CALL_1
0x40003e0	      0xe800000000	                          call 0x40003e5	       136	cond.c	FUNCTION_2	CALL_1
0x40003e5	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       136	cond.c	FUNCTION_2	CALL_1
0x40003ec	    0x488b05000000	            mov rax, qword [0x040003f3] 	       139	cond.c	FUNCTION_2	CALL_2
0x40003f3	           0xfb600	                   movzx eax, byte [rax]	       139	cond.c	FUNCTION_2	CALL_2
0x40003f6	            0x3c20	                            cmp al, 0x20	       139	cond.c	FUNCTION_2	CALL_2
0x40003f8	            0x7512	                           jne 0x400040c	       139	cond.c	FUNCTION_2	CALL_2
0x40003fa	    0x488b05000000	            mov rax, qword [0x04000401] 	       139	cond.c	FUNCTION_2	CALL_2
0x4000401	        0x4883c001	                              add rax, 1	       139	cond.c	FUNCTION_2	CALL_2
0x4000405	    0x488905000000	            mov qword [0x0400040c], rax 	       139	cond.c	FUNCTION_2	CALL_2
0x400040c	    0x488b05000000	            mov rax, qword [0x04000413] 	       141	cond.c	FUNCTION_2	IF_2
0x4000413	          0x4885c0	                           test rax, rax	       141	cond.c	FUNCTION_2	IF_2
0x4000416	            0x7446	                            je 0x400045e	       141	cond.c	FUNCTION_2	IF_2
0x4000418	    0x488b05000000	            mov rax, qword [0x0400041f] 	       141	cond.c	FUNCTION_2	IF_2
0x400041f	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       141	cond.c	FUNCTION_2	IF_2
0x4000422	            0x85c0	                           test eax, eax	       141	cond.c	FUNCTION_2	IF_2
0x4000424	            0x7438	                            je 0x400045e	       141	cond.c	FUNCTION_2	IF_2
0x4000426	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       143	cond.c	FUNCTION_2	IF_2
0x400042e	            0xeb12	                           jmp 0x4000442	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x4000430	    0x488b05000000	            mov rax, qword [0x04000437] 	       145	cond.c	FUNCTION_2	IF_2	WHILE_1
0x4000437	        0x4883c001	                              add rax, 1	       145	cond.c	FUNCTION_2	IF_2	WHILE_1
0x400043b	    0x488905000000	            mov qword [0x04000442], rax 	       145	cond.c	FUNCTION_2	IF_2	WHILE_1
0x4000442	    0x488b05000000	            mov rax, qword [0x04000449] 	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x4000449	           0xfb600	                   movzx eax, byte [rax]	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x400044c	           0xfb6c0	                           movzx eax, al	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x400044f	            0x4898	                                    cdqe	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x4000451	     0xfb680000000	                   movzx eax, byte [rax]	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x4000458	            0x84c0	                             test al, al	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x400045a	            0x74d4	                            je 0x4000430	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x400045c	            0xeb35	                           jmp 0x4000493	       141	cond.c	FUNCTION_2	IF_2
0x400045e	        0x488d45a0	                   lea rax, [rbp - 0x60]	       149	cond.c	FUNCTION_2	ELSE_1	CALL_3
0x4000462	      0xba00000000	                              mov edx, 0	       149	cond.c	FUNCTION_2	ELSE_1	CALL_3
0x4000467	          0x4889c6	                            mov rsi, rax	       149	cond.c	FUNCTION_2	ELSE_1	CALL_3
0x400046a	      0xbf00000000	                              mov edi, 0	       149	cond.c	FUNCTION_2	ELSE_1	CALL_3
0x400046f	      0xe800000000	                          call 0x4000474	       149	cond.c	FUNCTION_2	ELSE_1	CALL_3
0x4000474	         0xfb645b8	            movzx eax, byte [rbp - 0x48]	       150	cond.c	FUNCTION_2	ELSE_1	IF_3
0x4000478	            0x3c02	                               cmp al, 2	       150	cond.c	FUNCTION_2	ELSE_1	IF_3
0x400047a	            0x7417	                            je 0x4000493	       150	cond.c	FUNCTION_2	ELSE_1	IF_3
0x400047c	      0xbf00000000	                              mov edi, 0	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x4000481	      0xe800000000	                          call 0x4000486	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x4000486	          0x4889c7	                            mov rdi, rax	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x4000489	      0xb800000000	                              mov eax, 0	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x400048e	      0xe800000000	                          call 0x4000493	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x4000493	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       154	cond.c	FUNCTION_2	SWITCH_1
0x4000499	          0x83e815	                           sub eax, 0x15	       154	cond.c	FUNCTION_2	SWITCH_1
0x400049c	          0x83f805	                              cmp eax, 5	       154	cond.c	FUNCTION_2	SWITCH_1
0x400049f	     0xf8789000000	                            ja 0x400052e	       154	cond.c	FUNCTION_2	SWITCH_1
0x40004a5	            0x89c0	                            mov eax, eax	       154	cond.c	FUNCTION_2	SWITCH_1
0x40004a7	    0x488b04c50000	                  mov rax, qword [rax*8]	       154	cond.c	FUNCTION_2	SWITCH_1
0x40004af	            0xffe0	                                 jmp rax	       154	cond.c	FUNCTION_2	SWITCH_1
0x40004b1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       156	cond.c	FUNCTION_2	SWITCH_1
0x40004b5	          0x4885c0	                           test rax, rax	       156	cond.c	FUNCTION_2	SWITCH_1
0x40004b8	           0xf94c0	                                 sete al	       156	cond.c	FUNCTION_2	SWITCH_1
0x40004bb	           0xfb6c0	                           movzx eax, al	       156	cond.c	FUNCTION_2	SWITCH_1
0x40004be	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	       156	cond.c	FUNCTION_2	SWITCH_1
0x40004c4	            0xeb7c	                           jmp 0x4000542	       156	cond.c	FUNCTION_2	SWITCH_1
0x40004c6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       157	cond.c	FUNCTION_2	SWITCH_1
0x40004ca	          0x4885c0	                           test rax, rax	       157	cond.c	FUNCTION_2	SWITCH_1
0x40004cd	           0xf95c0	                                setne al	       157	cond.c	FUNCTION_2	SWITCH_1
0x40004d0	           0xfb6c0	                           movzx eax, al	       157	cond.c	FUNCTION_2	SWITCH_1
0x40004d3	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	       157	cond.c	FUNCTION_2	SWITCH_1
0x40004d9	            0xeb67	                           jmp 0x4000542	       157	cond.c	FUNCTION_2	SWITCH_1
0x40004db	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       158	cond.c	FUNCTION_2	SWITCH_1
0x40004df	        0x48c1e83f	                           shr rax, 0x3f	       158	cond.c	FUNCTION_2	SWITCH_1
0x40004e3	           0xfb6c0	                           movzx eax, al	       158	cond.c	FUNCTION_2	SWITCH_1
0x40004e6	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	       158	cond.c	FUNCTION_2	SWITCH_1
0x40004ec	            0xeb54	                           jmp 0x4000542	       158	cond.c	FUNCTION_2	SWITCH_1
0x40004ee	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       159	cond.c	FUNCTION_2	SWITCH_1
0x40004f2	          0x4885c0	                           test rax, rax	       159	cond.c	FUNCTION_2	SWITCH_1
0x40004f5	           0xf9ec0	                                setle al	       159	cond.c	FUNCTION_2	SWITCH_1
0x40004f8	           0xfb6c0	                           movzx eax, al	       159	cond.c	FUNCTION_2	SWITCH_1
0x40004fb	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	       159	cond.c	FUNCTION_2	SWITCH_1
0x4000501	            0xeb3f	                           jmp 0x4000542	       159	cond.c	FUNCTION_2	SWITCH_1
0x4000503	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       160	cond.c	FUNCTION_2	SWITCH_1
0x4000507	          0x48f7d0	                                 not rax	       160	cond.c	FUNCTION_2	SWITCH_1
0x400050a	        0x48c1e83f	                           shr rax, 0x3f	       160	cond.c	FUNCTION_2	SWITCH_1
0x400050e	           0xfb6c0	                           movzx eax, al	       160	cond.c	FUNCTION_2	SWITCH_1
0x4000511	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	       160	cond.c	FUNCTION_2	SWITCH_1
0x4000517	            0xeb29	                           jmp 0x4000542	       160	cond.c	FUNCTION_2	SWITCH_1
0x4000519	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       161	cond.c	FUNCTION_2	SWITCH_1
0x400051d	          0x4885c0	                           test rax, rax	       161	cond.c	FUNCTION_2	SWITCH_1
0x4000520	           0xf9fc0	                                 setg al	       161	cond.c	FUNCTION_2	SWITCH_1
0x4000523	           0xfb6c0	                           movzx eax, al	       161	cond.c	FUNCTION_2	SWITCH_1
0x4000526	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	       161	cond.c	FUNCTION_2	SWITCH_1
0x400052c	            0xeb14	                           jmp 0x4000542	       161	cond.c	FUNCTION_2	SWITCH_1
0x400052e	      0xba00000000	                              mov edx, 0	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x4000533	      0xbea3000000	                           mov esi, 0xa3	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x4000538	      0xbf00000000	                              mov edi, 0	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x400053d	      0xe800000000	                          call 0x4000542	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x4000542	        0x488d45c0	                   lea rax, [rbp - 0x40]	       169	cond.c	FUNCTION_2	CALL_7
0x4000546	          0x4889c7	                            mov rdi, rax	       169	cond.c	FUNCTION_2	CALL_7
0x4000549	      0xe876120000	              call sym.initialize_cframe	       169	cond.c	FUNCTION_2	CALL_7
0x400054e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       170	cond.c	FUNCTION_2
0x4000551	            0x85c0	                           test eax, eax	       170	cond.c	FUNCTION_2
0x4000553	            0x7509	                           jne 0x400055e	       170	cond.c	FUNCTION_2
0x4000555	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	       170	cond.c	FUNCTION_2
0x400055c	            0x7507	                           jne 0x4000565	       170	cond.c	FUNCTION_2
0x400055e	      0xb801000000	                              mov eax, 1	       170	cond.c	FUNCTION_2
0x4000563	            0xeb05	                           jmp 0x400056a	       170	cond.c	FUNCTION_2
0x4000565	      0xb800000000	                              mov eax, 0	       170	cond.c	FUNCTION_2
0x400056a	          0x8945ec	             mov dword [rbp - 0x14], eax	       170	cond.c	FUNCTION_2
0x400056d	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       172	cond.c	FUNCTION_2	CALL_8
0x4000578	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       172	cond.c	FUNCTION_2	CALL_8
0x400057f	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       172	cond.c	FUNCTION_2	CALL_8
0x4000586	    0x48c745803800	           mov qword [rbp - 0x80], 0x38 	       172	cond.c	FUNCTION_2	CALL_8
0x400058e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       172	cond.c	FUNCTION_2	CALL_8
0x4000595	        0x48894588	             mov qword [rbp - 0x78], rax	       172	cond.c	FUNCTION_2	CALL_8
0x4000599	        0x488b4588	             mov rax, qword [rbp - 0x78]	       172	cond.c	FUNCTION_2	CALL_8
0x400059d	        0x488b4020	            mov rax, qword [rax + 0x20] 	       172	cond.c	FUNCTION_2	CALL_8
0x40005a1	          0x4889c2	                            mov rdx, rax	       172	cond.c	FUNCTION_2	CALL_8
0x40005a4	        0x488b4588	             mov rax, qword [rbp - 0x78]	       172	cond.c	FUNCTION_2	CALL_8
0x40005a8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       172	cond.c	FUNCTION_2	CALL_8
0x40005ac	          0x4829c2	                            sub rdx, rax	       172	cond.c	FUNCTION_2	CALL_8
0x40005af	          0x4889d0	                            mov rax, rdx	       172	cond.c	FUNCTION_2	CALL_8
0x40005b2	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       172	cond.c	FUNCTION_2	CALL_8
0x40005b6	            0x7316	                           jae 0x40005ce	       172	cond.c	FUNCTION_2	CALL_8
0x40005b8	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       172	cond.c	FUNCTION_2	CALL_8
0x40005bc	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       172	cond.c	FUNCTION_2	CALL_8
0x40005c3	          0x4889d6	                            mov rsi, rdx	       172	cond.c	FUNCTION_2	CALL_8
0x40005c6	          0x4889c7	                            mov rdi, rax	       172	cond.c	FUNCTION_2	CALL_8
0x40005c9	      0xe800000000	                          call 0x40005ce	       172	cond.c	FUNCTION_2	CALL_8
0x40005ce	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       172	cond.c	FUNCTION_2	CALL_8
0x40005d5	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       172	cond.c	FUNCTION_2	CALL_8
0x40005d9	        0x488b4580	             mov rax, qword [rbp - 0x80]	       172	cond.c	FUNCTION_2	CALL_8
0x40005dd	          0x4801c2	                            add rdx, rax	       172	cond.c	FUNCTION_2	CALL_8
0x40005e0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       172	cond.c	FUNCTION_2	CALL_8
0x40005e7	        0x48895018	             mov qword [rax + 0x18], rdx	       172	cond.c	FUNCTION_2	CALL_8
0x40005eb	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       172	cond.c	FUNCTION_2	CALL_8
0x40005f2	        0x48894590	             mov qword [rbp - 0x70], rax	       172	cond.c	FUNCTION_2	CALL_8
0x40005f6	        0x488b4590	             mov rax, qword [rbp - 0x70]	       172	cond.c	FUNCTION_2	CALL_8
0x40005fa	        0x488b4010	            mov rax, qword [rax + 0x10] 	       172	cond.c	FUNCTION_2	CALL_8
0x40005fe	        0x48894598	             mov qword [rbp - 0x68], rax	       172	cond.c	FUNCTION_2	CALL_8
0x4000602	        0x488b4590	             mov rax, qword [rbp - 0x70]	       172	cond.c	FUNCTION_2	CALL_8
0x4000606	        0x488b4018	            mov rax, qword [rax + 0x18] 	       172	cond.c	FUNCTION_2	CALL_8
0x400060a	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       172	cond.c	FUNCTION_2	CALL_8
0x400060e	            0x750e	                           jne 0x400061e	       172	cond.c	FUNCTION_2	CALL_8
0x4000610	        0x488b4590	             mov rax, qword [rbp - 0x70]	       172	cond.c	FUNCTION_2	CALL_8
0x4000614	         0xfb65050	           movzx edx, byte [rax + 0x50] 	       172	cond.c	FUNCTION_2	CALL_8
0x4000618	          0x83ca02	                               or edx, 2	       172	cond.c	FUNCTION_2	CALL_8
0x400061b	          0x885050	               mov byte [rax + 0x50], dl	       172	cond.c	FUNCTION_2	CALL_8
0x400061e	        0x488b4590	             mov rax, qword [rbp - 0x70]	       172	cond.c	FUNCTION_2	CALL_8
0x4000622	        0x488b4018	            mov rax, qword [rax + 0x18] 	       172	cond.c	FUNCTION_2	CALL_8
0x4000626	          0x4889c2	                            mov rdx, rax	       172	cond.c	FUNCTION_2	CALL_8
0x4000629	        0x488b4590	             mov rax, qword [rbp - 0x70]	       172	cond.c	FUNCTION_2	CALL_8
0x400062d	        0x488b4030	            mov rax, qword [rax + 0x30] 	       172	cond.c	FUNCTION_2	CALL_8
0x4000631	          0x4801c2	                            add rdx, rax	       172	cond.c	FUNCTION_2	CALL_8
0x4000634	        0x488b4590	             mov rax, qword [rbp - 0x70]	       172	cond.c	FUNCTION_2	CALL_8
0x4000638	        0x488b4030	            mov rax, qword [rax + 0x30] 	       172	cond.c	FUNCTION_2	CALL_8
0x400063c	          0x48f7d0	                                 not rax	       172	cond.c	FUNCTION_2	CALL_8
0x400063f	          0x4821d0	                            and rax, rdx	       172	cond.c	FUNCTION_2	CALL_8
0x4000642	          0x4889c2	                            mov rdx, rax	       172	cond.c	FUNCTION_2	CALL_8
0x4000645	        0x488b4590	             mov rax, qword [rbp - 0x70]	       172	cond.c	FUNCTION_2	CALL_8
0x4000649	        0x48895018	             mov qword [rax + 0x18], rdx	       172	cond.c	FUNCTION_2	CALL_8
0x400064d	        0x488b4590	             mov rax, qword [rbp - 0x70]	       172	cond.c	FUNCTION_2	CALL_8
0x4000651	        0x488b4018	            mov rax, qword [rax + 0x18] 	       172	cond.c	FUNCTION_2	CALL_8
0x4000655	          0x4889c2	                            mov rdx, rax	       172	cond.c	FUNCTION_2	CALL_8
0x4000658	        0x488b4590	             mov rax, qword [rbp - 0x70]	       172	cond.c	FUNCTION_2	CALL_8
0x400065c	        0x488b4008	                mov rax, qword [rax + 8]	       172	cond.c	FUNCTION_2	CALL_8
0x4000660	          0x4829c2	                            sub rdx, rax	       172	cond.c	FUNCTION_2	CALL_8
0x4000663	          0x4889d0	                            mov rax, rdx	       172	cond.c	FUNCTION_2	CALL_8
0x4000666	          0x4889c2	                            mov rdx, rax	       172	cond.c	FUNCTION_2	CALL_8
0x4000669	        0x488b4590	             mov rax, qword [rbp - 0x70]	       172	cond.c	FUNCTION_2	CALL_8
0x400066d	        0x488b4020	            mov rax, qword [rax + 0x20] 	       172	cond.c	FUNCTION_2	CALL_8
0x4000671	          0x4889c1	                            mov rcx, rax	       172	cond.c	FUNCTION_2	CALL_8
0x4000674	        0x488b4590	             mov rax, qword [rbp - 0x70]	       172	cond.c	FUNCTION_2	CALL_8
0x4000678	        0x488b4008	                mov rax, qword [rax + 8]	       172	cond.c	FUNCTION_2	CALL_8
0x400067c	          0x4829c1	                            sub rcx, rax	       172	cond.c	FUNCTION_2	CALL_8
0x400067f	          0x4889c8	                            mov rax, rcx	       172	cond.c	FUNCTION_2	CALL_8
0x4000682	          0x4839c2	                            cmp rdx, rax	       172	cond.c	FUNCTION_2	CALL_8
0x4000685	            0x7610	                           jbe 0x4000697	       172	cond.c	FUNCTION_2	CALL_8
0x4000687	        0x488b4590	             mov rax, qword [rbp - 0x70]	       172	cond.c	FUNCTION_2	CALL_8
0x400068b	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       172	cond.c	FUNCTION_2	CALL_8
0x400068f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       172	cond.c	FUNCTION_2	CALL_8
0x4000693	        0x48895018	             mov qword [rax + 0x18], rdx	       172	cond.c	FUNCTION_2	CALL_8
0x4000697	        0x488b4590	             mov rax, qword [rbp - 0x70]	       172	cond.c	FUNCTION_2	CALL_8
0x400069b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       172	cond.c	FUNCTION_2	CALL_8
0x400069f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       172	cond.c	FUNCTION_2	CALL_8
0x40006a3	        0x48895010	             mov qword [rax + 0x10], rdx	       172	cond.c	FUNCTION_2	CALL_8
0x40006a7	        0x488b4598	             mov rax, qword [rbp - 0x68]	       172	cond.c	FUNCTION_2	CALL_8
0x40006ab	    0x488905000000	            mov qword [0x040006b2], rax 	       171	cond.c	FUNCTION_2
0x40006b2	    0x488b05000000	            mov rax, qword [0x040006b9] 	       173	cond.c	FUNCTION_2	CALL_9
0x40006b9	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       173	cond.c	FUNCTION_2	CALL_9
0x40006bd	      0xba38000000	                           mov edx, 0x38	       173	cond.c	FUNCTION_2	CALL_9
0x40006c2	          0x4889ce	                            mov rsi, rcx	       173	cond.c	FUNCTION_2	CALL_9
0x40006c5	          0x4889c7	                            mov rdi, rax	       173	cond.c	FUNCTION_2	CALL_9
0x40006c8	      0xe800000000	                          call 0x40006cd	       173	cond.c	FUNCTION_2	CALL_9
0x40006cd	    0x8b0500000000	            mov eax, dword [0x040006d3] 	       175	cond.c	FUNCTION_2	IF_4	CALL_10
0x40006d3	          0x83e020	                           and eax, 0x20	       175	cond.c	FUNCTION_2	IF_4	CALL_10
0x40006d6	            0x85c0	                           test eax, eax	       175	cond.c	FUNCTION_2	IF_4	CALL_10
0x40006d8	            0x7425	                            je 0x40006ff	       175	cond.c	FUNCTION_2	IF_4	CALL_10
0x40006da	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       176	cond.c	FUNCTION_2	IF_4
0x40006dd	            0x85c0	                           test eax, eax	       176	cond.c	FUNCTION_2	IF_4
0x40006df	            0x741e	                            je 0x40006ff	       176	cond.c	FUNCTION_2	IF_4
0x40006e1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       177	cond.c	FUNCTION_2	IF_4
0x40006e5	          0x4885c0	                           test rax, rax	       177	cond.c	FUNCTION_2	IF_4
0x40006e8	            0x740b	                            je 0x40006f5	       177	cond.c	FUNCTION_2	IF_4
0x40006ea	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       178	cond.c	FUNCTION_2	IF_4
0x40006ee	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       178	cond.c	FUNCTION_2	IF_4
0x40006f1	            0x85c0	                           test eax, eax	       178	cond.c	FUNCTION_2	IF_4
0x40006f3	            0x750a	                           jne 0x40006ff	       178	cond.c	FUNCTION_2	IF_4
0x40006f5	      0xbf02000000	                              mov edi, 2	       179	cond.c	FUNCTION_2	CALL_11
0x40006fa	      0xe800000000	                          call 0x40006ff	       179	cond.c	FUNCTION_2	CALL_11
0x40006ff	    0x8b0500000000	            mov eax, dword [0x04000705] 	       181	cond.c	FUNCTION_2	IF_5
0x4000705	            0x85c0	                           test eax, eax	       181	cond.c	FUNCTION_2	IF_5
0x4000707	            0x741b	                            je 0x4000724	       181	cond.c	FUNCTION_2	IF_5
0x4000709	     0xfb68563ffff	            movzx eax, byte [rbp - 0x9d]	       182	cond.c	FUNCTION_2	CALL_12
0x4000710	           0xfbed0	                           movsx edx, al	       182	cond.c	FUNCTION_2	CALL_12
0x4000713	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       182	cond.c	FUNCTION_2	CALL_12
0x400071a	            0x89d6	                            mov esi, edx	       182	cond.c	FUNCTION_2	CALL_12
0x400071c	          0x4889c7	                            mov rdi, rax	       182	cond.c	FUNCTION_2	CALL_12
0x400071f	      0xe800000000	                          call 0x4000724	       182	cond.c	FUNCTION_2	CALL_12
0x4000724	      0xe800000000	                          call 0x4000729	       184	cond.c	FUNCTION_2	CALL_13
0x4000729	              0x90	                                     nop	       185	cond.c	FUNCTION_2
0x400072a	        0x488b45f8	                mov rax, qword [rbp - 8]	       185	cond.c	FUNCTION_2
0x400072e	    0x644833042528	                xor rax, qword fs:[0x28]	       185	cond.c	FUNCTION_2
0x4000737	            0x7405	                            je 0x400073e	       185	cond.c	FUNCTION_2
0x4000739	      0xe800000000	                          call 0x400073e	       185	cond.c	FUNCTION_2
0x400073e	              0xc9	                                   leave	       185	cond.c	FUNCTION_2
0x400073f	              0xc3	                                     ret	       185	cond.c	FUNCTION_2
cond_finish_check	WHILE,0:ELSE,1:functions,0:SWITCH,0:FOR,0:CALL,8:DO,0:IF,3	53
0x400184c	              0x55	                                push rbp	       549	cond.c	FUNCTION_12
0x400184d	          0x4889e5	                            mov rbp, rsp	       549	cond.c	FUNCTION_12
0x4001850	        0x4883ec10	                           sub rsp, 0x10	       549	cond.c	FUNCTION_12
0x4001854	          0x897dfc	                mov dword [rbp - 4], edi	       549	cond.c	FUNCTION_12
0x4001857	    0x488b05000000	            mov rax, qword [0x0400185e] 	       550	cond.c	FUNCTION_12	IF_1
0x400185e	          0x4885c0	                           test rax, rax	       550	cond.c	FUNCTION_12	IF_1
0x4001861	     0xf84b8000000	                            je 0x400191f	       550	cond.c	FUNCTION_12	IF_1
0x4001867	    0x488b05000000	            mov rax, qword [0x0400186e] 	       550	cond.c	FUNCTION_12	IF_1
0x400186e	          0x8b4034	            mov eax, dword [rax + 0x34] 	       550	cond.c	FUNCTION_12	IF_1
0x4001871	          0x3b45fc	                cmp eax, dword [rbp - 4]	       550	cond.c	FUNCTION_12	IF_1
0x4001874	     0xf8ca5000000	                            jl 0x400191f	       550	cond.c	FUNCTION_12	IF_1
0x400187a	        0x837dfc00	                  cmp dword [rbp - 4], 0	       552	cond.c	FUNCTION_12	IF_1	IF_2
0x400187e	            0x7819	                            js 0x4001899	       552	cond.c	FUNCTION_12	IF_1	IF_2
0x4001880	      0xbf00000000	                              mov edi, 0	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x4001885	      0xe800000000	                          call 0x400188a	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x400188a	          0x4889c7	                            mov rdi, rax	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x400188d	      0xb800000000	                              mov eax, 0	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x4001892	      0xe800000000	                          call 0x4001897	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x4001897	            0xeb17	                           jmp 0x40018b0	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x4001899	      0xbf00000000	                              mov edi, 0	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x400189e	      0xe800000000	                          call 0x40018a3	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x40018a3	          0x4889c7	                            mov rdi, rax	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x40018a6	      0xb800000000	                              mov eax, 0	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x40018ab	      0xe800000000	                          call 0x40018b0	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x40018b0	      0xbf00000000	                              mov edi, 0	       559	cond.c	FUNCTION_12	IF_1	CALL_6
0x40018b5	      0xe800000000	                          call 0x40018ba	       559	cond.c	FUNCTION_12	IF_1	CALL_6
0x40018ba	          0x4889c2	                            mov rdx, rax	       559	cond.c	FUNCTION_12	IF_1	CALL_6
0x40018bd	    0x488b05000000	            mov rax, qword [0x040018c4] 	       558	cond.c	FUNCTION_12	IF_1
0x40018c4	          0x8b4808	                mov ecx, dword [rax + 8]	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x40018c7	    0x488b05000000	            mov rax, qword [0x040018ce] 	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x40018ce	          0x488b00	                    mov rax, qword [rax]	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x40018d1	            0x89ce	                            mov esi, ecx	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x40018d3	          0x4889c7	                            mov rdi, rax	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x40018d6	      0xb800000000	                              mov eax, 0	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x40018db	      0xe800000000	                          call 0x40018e0	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x40018e0	    0x488b05000000	            mov rax, qword [0x040018e7] 	       560	cond.c	FUNCTION_12	IF_1	IF_3
0x40018e7	          0x8b4028	            mov eax, dword [rax + 0x28] 	       560	cond.c	FUNCTION_12	IF_1	IF_3
0x40018ea	            0x85c0	                           test eax, eax	       560	cond.c	FUNCTION_12	IF_1	IF_3
0x40018ec	            0x7431	                            je 0x400191f	       560	cond.c	FUNCTION_12	IF_1	IF_3
0x40018ee	      0xbf00000000	                              mov edi, 0	       563	cond.c	FUNCTION_12	IF_1	CALL_8
0x40018f3	      0xe800000000	                          call 0x40018f8	       563	cond.c	FUNCTION_12	IF_1	CALL_8
0x40018f8	          0x4889c2	                            mov rdx, rax	       563	cond.c	FUNCTION_12	IF_1	CALL_8
0x40018fb	    0x488b05000000	            mov rax, qword [0x04001902] 	       562	cond.c	FUNCTION_12	IF_1	IF_3
0x4001902	          0x8b4818	            mov ecx, dword [rax + 0x18] 	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x4001905	    0x488b05000000	            mov rax, qword [0x0400190c] 	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x400190c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x4001910	            0x89ce	                            mov esi, ecx	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x4001912	          0x4889c7	                            mov rdi, rax	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x4001915	      0xb800000000	                              mov eax, 0	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x400191a	      0xe800000000	                          call 0x400191f	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x400191f	              0x90	                                     nop	       565	cond.c	FUNCTION_12
0x4001920	              0xc9	                                   leave	       565	cond.c	FUNCTION_12
0x4001921	              0xc3	                                     ret	       565	cond.c	FUNCTION_12
s_ifb	WHILE,0:ELSE,1:functions,0:SWITCH,0:FOR,0:CALL,7:DO,0:IF,2	145
0x4000740	              0x55	                                push rbp	       192	cond.c	FUNCTION_3
0x4000741	          0x4889e5	                            mov rbp, rsp	       192	cond.c	FUNCTION_3
0x4000744	    0x4881ec900000	                           sub rsp, 0x90	       192	cond.c	FUNCTION_3
0x400074b	    0x89bd7cffffff	             mov dword [rbp - 0x84], edi	       192	cond.c	FUNCTION_3
0x4000751	    0x64488b042528	                mov rax, qword fs:[0x28]	       192	cond.c	FUNCTION_3
0x400075a	        0x488945f8	                mov qword [rbp - 8], rax	       192	cond.c	FUNCTION_3
0x400075e	            0x31c0	                            xor eax, eax	       192	cond.c	FUNCTION_3
0x4000760	        0x488d45c0	                   lea rax, [rbp - 0x40]	       195	cond.c	FUNCTION_3	CALL_1
0x4000764	          0x4889c7	                            mov rdi, rax	       195	cond.c	FUNCTION_3	CALL_1
0x4000767	      0xe858100000	              call sym.initialize_cframe	       195	cond.c	FUNCTION_3	CALL_1
0x400076c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       197	cond.c	FUNCTION_3	IF_1
0x400076f	            0x85c0	                           test eax, eax	       197	cond.c	FUNCTION_3	IF_1
0x4000771	            0x7409	                            je 0x400077c	       197	cond.c	FUNCTION_3	IF_1
0x4000773	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       198	cond.c	FUNCTION_3	IF_1
0x400077a	            0xeb55	                           jmp 0x40007d1	       198	cond.c	FUNCTION_3	IF_1
0x400077c	    0x488b05000000	            mov rax, qword [0x04000783] 	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x4000783	           0xfb600	                   movzx eax, byte [rax]	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x4000786	            0x3c20	                            cmp al, 0x20	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x4000788	            0x7512	                           jne 0x400079c	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x400078a	    0x488b05000000	            mov rax, qword [0x04000791] 	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x4000791	        0x4883c001	                              add rax, 1	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x4000795	    0x488905000000	            mov qword [0x0400079c], rax 	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x400079c	    0x488b05000000	            mov rax, qword [0x040007a3] 	       204	cond.c	FUNCTION_3	ELSE_1
0x40007a3	           0xfb600	                   movzx eax, byte [rax]	       204	cond.c	FUNCTION_3	ELSE_1
0x40007a6	           0xfb6c0	                           movzx eax, al	       204	cond.c	FUNCTION_3	ELSE_1
0x40007a9	            0x4898	                                    cdqe	       204	cond.c	FUNCTION_3	ELSE_1
0x40007ab	     0xfb680000000	                   movzx eax, byte [rax]	       204	cond.c	FUNCTION_3	ELSE_1
0x40007b2	           0xfbec0	                           movsx eax, al	       204	cond.c	FUNCTION_3	ELSE_1
0x40007b5	          0x89458c	             mov dword [rbp - 0x74], eax	       204	cond.c	FUNCTION_3	ELSE_1
0x40007b8	        0x837d8c00	               cmp dword [rbp - 0x74], 0	       205	cond.c	FUNCTION_3	ELSE_1
0x40007bc	           0xf94c0	                                 sete al	       205	cond.c	FUNCTION_3	ELSE_1
0x40007bf	           0xfb6c0	                           movzx eax, al	       205	cond.c	FUNCTION_3	ELSE_1
0x40007c2	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	       205	cond.c	FUNCTION_3	ELSE_1
0x40007c8	           0xf94c0	                                 sete al	       205	cond.c	FUNCTION_3	ELSE_1
0x40007cb	           0xfb6c0	                           movzx eax, al	       205	cond.c	FUNCTION_3	ELSE_1
0x40007ce	          0x8945ec	             mov dword [rbp - 0x14], eax	       205	cond.c	FUNCTION_3	ELSE_1
0x40007d1	    0x48c745900000	               mov qword [rbp - 0x70], 0	       209	cond.c	FUNCTION_3	CALL_3
0x40007d9	        0x488b4590	             mov rax, qword [rbp - 0x70]	       209	cond.c	FUNCTION_3	CALL_3
0x40007dd	        0x48894598	             mov qword [rbp - 0x68], rax	       209	cond.c	FUNCTION_3	CALL_3
0x40007e1	    0x48c745a03800	           mov qword [rbp - 0x60], 0x38 	       209	cond.c	FUNCTION_3	CALL_3
0x40007e9	        0x488b4598	             mov rax, qword [rbp - 0x68]	       209	cond.c	FUNCTION_3	CALL_3
0x40007ed	        0x488945a8	             mov qword [rbp - 0x58], rax	       209	cond.c	FUNCTION_3	CALL_3
0x40007f1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       209	cond.c	FUNCTION_3	CALL_3
0x40007f5	        0x488b4020	            mov rax, qword [rax + 0x20] 	       209	cond.c	FUNCTION_3	CALL_3
0x40007f9	          0x4889c2	                            mov rdx, rax	       209	cond.c	FUNCTION_3	CALL_3
0x40007fc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       209	cond.c	FUNCTION_3	CALL_3
0x4000800	        0x488b4018	            mov rax, qword [rax + 0x18] 	       209	cond.c	FUNCTION_3	CALL_3
0x4000804	          0x4829c2	                            sub rdx, rax	       209	cond.c	FUNCTION_3	CALL_3
0x4000807	          0x4889d0	                            mov rax, rdx	       209	cond.c	FUNCTION_3	CALL_3
0x400080a	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       209	cond.c	FUNCTION_3	CALL_3
0x400080e	            0x7313	                           jae 0x4000823	       209	cond.c	FUNCTION_3	CALL_3
0x4000810	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       209	cond.c	FUNCTION_3	CALL_3
0x4000814	        0x488b4598	             mov rax, qword [rbp - 0x68]	       209	cond.c	FUNCTION_3	CALL_3
0x4000818	          0x4889d6	                            mov rsi, rdx	       209	cond.c	FUNCTION_3	CALL_3
0x400081b	          0x4889c7	                            mov rdi, rax	       209	cond.c	FUNCTION_3	CALL_3
0x400081e	      0xe800000000	                          call 0x4000823	       209	cond.c	FUNCTION_3	CALL_3
0x4000823	        0x488b4598	             mov rax, qword [rbp - 0x68]	       209	cond.c	FUNCTION_3	CALL_3
0x4000827	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       209	cond.c	FUNCTION_3	CALL_3
0x400082b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       209	cond.c	FUNCTION_3	CALL_3
0x400082f	          0x4801c2	                            add rdx, rax	       209	cond.c	FUNCTION_3	CALL_3
0x4000832	        0x488b4598	             mov rax, qword [rbp - 0x68]	       209	cond.c	FUNCTION_3	CALL_3
0x4000836	        0x48895018	             mov qword [rax + 0x18], rdx	       209	cond.c	FUNCTION_3	CALL_3
0x400083a	        0x488b4590	             mov rax, qword [rbp - 0x70]	       209	cond.c	FUNCTION_3	CALL_3
0x400083e	        0x488945b0	             mov qword [rbp - 0x50], rax	       209	cond.c	FUNCTION_3	CALL_3
0x4000842	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       209	cond.c	FUNCTION_3	CALL_3
0x4000846	        0x488b4010	            mov rax, qword [rax + 0x10] 	       209	cond.c	FUNCTION_3	CALL_3
0x400084a	        0x488945b8	             mov qword [rbp - 0x48], rax	       209	cond.c	FUNCTION_3	CALL_3
0x400084e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       209	cond.c	FUNCTION_3	CALL_3
0x4000852	        0x488b4018	            mov rax, qword [rax + 0x18] 	       209	cond.c	FUNCTION_3	CALL_3
0x4000856	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       209	cond.c	FUNCTION_3	CALL_3
0x400085a	            0x750e	                           jne 0x400086a	       209	cond.c	FUNCTION_3	CALL_3
0x400085c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       209	cond.c	FUNCTION_3	CALL_3
0x4000860	         0xfb65050	           movzx edx, byte [rax + 0x50] 	       209	cond.c	FUNCTION_3	CALL_3
0x4000864	          0x83ca02	                               or edx, 2	       209	cond.c	FUNCTION_3	CALL_3
0x4000867	          0x885050	               mov byte [rax + 0x50], dl	       209	cond.c	FUNCTION_3	CALL_3
0x400086a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       209	cond.c	FUNCTION_3	CALL_3
0x400086e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       209	cond.c	FUNCTION_3	CALL_3
0x4000872	          0x4889c2	                            mov rdx, rax	       209	cond.c	FUNCTION_3	CALL_3
0x4000875	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       209	cond.c	FUNCTION_3	CALL_3
0x4000879	        0x488b4030	            mov rax, qword [rax + 0x30] 	       209	cond.c	FUNCTION_3	CALL_3
0x400087d	          0x4801c2	                            add rdx, rax	       209	cond.c	FUNCTION_3	CALL_3
0x4000880	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       209	cond.c	FUNCTION_3	CALL_3
0x4000884	        0x488b4030	            mov rax, qword [rax + 0x30] 	       209	cond.c	FUNCTION_3	CALL_3
0x4000888	          0x48f7d0	                                 not rax	       209	cond.c	FUNCTION_3	CALL_3
0x400088b	          0x4821d0	                            and rax, rdx	       209	cond.c	FUNCTION_3	CALL_3
0x400088e	          0x4889c2	                            mov rdx, rax	       209	cond.c	FUNCTION_3	CALL_3
0x4000891	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       209	cond.c	FUNCTION_3	CALL_3
0x4000895	        0x48895018	             mov qword [rax + 0x18], rdx	       209	cond.c	FUNCTION_3	CALL_3
0x4000899	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       209	cond.c	FUNCTION_3	CALL_3
0x400089d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       209	cond.c	FUNCTION_3	CALL_3
0x40008a1	          0x4889c2	                            mov rdx, rax	       209	cond.c	FUNCTION_3	CALL_3
0x40008a4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       209	cond.c	FUNCTION_3	CALL_3
0x40008a8	        0x488b4008	                mov rax, qword [rax + 8]	       209	cond.c	FUNCTION_3	CALL_3
0x40008ac	          0x4829c2	                            sub rdx, rax	       209	cond.c	FUNCTION_3	CALL_3
0x40008af	          0x4889d0	                            mov rax, rdx	       209	cond.c	FUNCTION_3	CALL_3
0x40008b2	          0x4889c2	                            mov rdx, rax	       209	cond.c	FUNCTION_3	CALL_3
0x40008b5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       209	cond.c	FUNCTION_3	CALL_3
0x40008b9	        0x488b4020	            mov rax, qword [rax + 0x20] 	       209	cond.c	FUNCTION_3	CALL_3
0x40008bd	          0x4889c1	                            mov rcx, rax	       209	cond.c	FUNCTION_3	CALL_3
0x40008c0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       209	cond.c	FUNCTION_3	CALL_3
0x40008c4	        0x488b4008	                mov rax, qword [rax + 8]	       209	cond.c	FUNCTION_3	CALL_3
0x40008c8	          0x4829c1	                            sub rcx, rax	       209	cond.c	FUNCTION_3	CALL_3
0x40008cb	          0x4889c8	                            mov rax, rcx	       209	cond.c	FUNCTION_3	CALL_3
0x40008ce	          0x4839c2	                            cmp rdx, rax	       209	cond.c	FUNCTION_3	CALL_3
0x40008d1	            0x7610	                           jbe 0x40008e3	       209	cond.c	FUNCTION_3	CALL_3
0x40008d3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       209	cond.c	FUNCTION_3	CALL_3
0x40008d7	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       209	cond.c	FUNCTION_3	CALL_3
0x40008db	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       209	cond.c	FUNCTION_3	CALL_3
0x40008df	        0x48895018	             mov qword [rax + 0x18], rdx	       209	cond.c	FUNCTION_3	CALL_3
0x40008e3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       209	cond.c	FUNCTION_3	CALL_3
0x40008e7	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       209	cond.c	FUNCTION_3	CALL_3
0x40008eb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       209	cond.c	FUNCTION_3	CALL_3
0x40008ef	        0x48895010	             mov qword [rax + 0x10], rdx	       209	cond.c	FUNCTION_3	CALL_3
0x40008f3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       209	cond.c	FUNCTION_3	CALL_3
0x40008f7	    0x488905000000	            mov qword [0x040008fe], rax 	       208	cond.c	FUNCTION_3
0x40008fe	    0x488b05000000	            mov rax, qword [0x04000905] 	       210	cond.c	FUNCTION_3	CALL_4
0x4000905	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       210	cond.c	FUNCTION_3	CALL_4
0x4000909	      0xba38000000	                           mov edx, 0x38	       210	cond.c	FUNCTION_3	CALL_4
0x400090e	          0x4889ce	                            mov rsi, rcx	       210	cond.c	FUNCTION_3	CALL_4
0x4000911	          0x4889c7	                            mov rdi, rax	       210	cond.c	FUNCTION_3	CALL_4
0x4000914	      0xe800000000	                          call 0x4000919	       210	cond.c	FUNCTION_3	CALL_4
0x4000919	    0x8b0500000000	            mov eax, dword [0x0400091f] 	       212	cond.c	FUNCTION_3	IF_2	CALL_5
0x400091f	          0x83e020	                           and eax, 0x20	       212	cond.c	FUNCTION_3	IF_2	CALL_5
0x4000922	            0x85c0	                           test eax, eax	       212	cond.c	FUNCTION_3	IF_2	CALL_5
0x4000924	            0x7425	                            je 0x400094b	       212	cond.c	FUNCTION_3	IF_2	CALL_5
0x4000926	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       213	cond.c	FUNCTION_3	IF_2
0x4000929	            0x85c0	                           test eax, eax	       213	cond.c	FUNCTION_3	IF_2
0x400092b	            0x741e	                            je 0x400094b	       213	cond.c	FUNCTION_3	IF_2
0x400092d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       214	cond.c	FUNCTION_3	IF_2
0x4000931	          0x4885c0	                           test rax, rax	       214	cond.c	FUNCTION_3	IF_2
0x4000934	            0x740b	                            je 0x4000941	       214	cond.c	FUNCTION_3	IF_2
0x4000936	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       215	cond.c	FUNCTION_3	IF_2
0x400093a	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       215	cond.c	FUNCTION_3	IF_2
0x400093d	            0x85c0	                           test eax, eax	       215	cond.c	FUNCTION_3	IF_2
0x400093f	            0x750a	                           jne 0x400094b	       215	cond.c	FUNCTION_3	IF_2
0x4000941	      0xbf02000000	                              mov edi, 2	       216	cond.c	FUNCTION_3	CALL_6
0x4000946	      0xe800000000	                          call 0x400094b	       216	cond.c	FUNCTION_3	CALL_6
0x400094b	      0xe800000000	                          call 0x4000950	       218	cond.c	FUNCTION_3	CALL_7
0x4000950	              0x90	                                     nop	       219	cond.c	FUNCTION_3
0x4000951	        0x488b45f8	                mov rax, qword [rbp - 8]	       219	cond.c	FUNCTION_3
0x4000955	    0x644833042528	                xor rax, qword fs:[0x28]	       219	cond.c	FUNCTION_3
0x400095e	            0x7405	                            je 0x4000965	       219	cond.c	FUNCTION_3
0x4000960	      0xe800000000	                          call 0x4000965	       219	cond.c	FUNCTION_3
0x4000965	              0xc9	                                   leave	       219	cond.c	FUNCTION_3
0x4000966	              0xc3	                                     ret	       219	cond.c	FUNCTION_3
get_mri_string	WHILE,3:ELSE,1:functions,0:SWITCH,0:FOR,0:CALL,2:DO,0:IF,3	103
0x4000967	              0x55	                                push rbp	       225	cond.c	FUNCTION_4
0x4000968	          0x4889e5	                            mov rbp, rsp	       225	cond.c	FUNCTION_4
0x400096b	          0x897dec	             mov dword [rbp - 0x14], edi	       225	cond.c	FUNCTION_4
0x400096e	        0x488975e0	             mov qword [rbp - 0x20], rsi	       225	cond.c	FUNCTION_4
0x4000972	    0x488b05000000	            mov rax, qword [0x04000979] 	       229	cond.c	FUNCTION_4	CALL_1
0x4000979	           0xfb600	                   movzx eax, byte [rax]	       229	cond.c	FUNCTION_4	CALL_1
0x400097c	            0x3c20	                            cmp al, 0x20	       229	cond.c	FUNCTION_4	CALL_1
0x400097e	            0x7512	                           jne 0x4000992	       229	cond.c	FUNCTION_4	CALL_1
0x4000980	    0x488b05000000	            mov rax, qword [0x04000987] 	       229	cond.c	FUNCTION_4	CALL_1
0x4000987	        0x4883c001	                              add rax, 1	       229	cond.c	FUNCTION_4	CALL_1
0x400098b	    0x488905000000	            mov qword [0x04000992], rax 	       229	cond.c	FUNCTION_4	CALL_1
0x4000992	    0x488b05000000	            mov rax, qword [0x04000999] 	       230	cond.c	FUNCTION_4
0x4000999	        0x488945f8	                mov qword [rbp - 8], rax	       230	cond.c	FUNCTION_4
0x400099d	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	cond.c	FUNCTION_4
0x40009a1	        0x488945f0	             mov qword [rbp - 0x10], rax	       230	cond.c	FUNCTION_4
0x40009a5	    0x488b05000000	            mov rax, qword [0x040009ac] 	       231	cond.c	FUNCTION_4	IF_1
0x40009ac	           0xfb600	                   movzx eax, byte [rax]	       231	cond.c	FUNCTION_4	IF_1
0x40009af	            0x3c27	                            cmp al, 0x27	       231	cond.c	FUNCTION_4	IF_1
0x40009b1	     0xf85c0000000	                           jne 0x4000a77	       231	cond.c	FUNCTION_4	IF_1
0x40009b7	      0x488345f001	               add qword [rbp - 0x10], 1	       233	cond.c	FUNCTION_4	IF_1
0x40009bc	    0x488b05000000	            mov rax, qword [0x040009c3] 	       234	cond.c	FUNCTION_4	IF_1
0x40009c3	        0x4883c001	                              add rax, 1	       234	cond.c	FUNCTION_4	IF_1
0x40009c7	    0x488905000000	            mov qword [0x040009ce], rax 	       234	cond.c	FUNCTION_4	IF_1
0x40009ce	            0xeb52	                           jmp 0x4000a22	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40009d0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40009d4	        0x488d5001	                      lea rdx, [rax + 1]	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40009d8	        0x488955f0	             mov qword [rbp - 0x10], rdx	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40009dc	    0x488b15000000	            mov rdx, qword [0x040009e3] 	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40009e3	        0x488d4a01	                      lea rcx, [rdx + 1]	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40009e7	    0x48890d000000	            mov qword [0x040009ee], rcx 	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40009ee	           0xfb612	                   movzx edx, byte [rdx]	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40009f1	            0x8810	                      mov byte [rax], dl	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40009f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       238	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x40009f7	        0x4883e801	                              sub rax, 1	       238	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x40009fb	           0xfb600	                   movzx eax, byte [rax]	       238	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x40009fe	            0x3c27	                            cmp al, 0x27	       238	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000a00	            0x7520	                           jne 0x4000a22	       238	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000a02	    0x488b05000000	            mov rax, qword [0x04000a09] 	       240	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x4000a09	           0xfb600	                   movzx eax, byte [rax]	       240	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x4000a0c	            0x3c27	                            cmp al, 0x27	       240	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x4000a0e	            0x752e	                           jne 0x4000a3e	       240	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x4000a10	    0x488b05000000	            mov rax, qword [0x04000a17] 	       242	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000a17	        0x4883c001	                              add rax, 1	       242	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000a1b	    0x488905000000	            mov qword [0x04000a22], rax 	       242	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000a22	    0x488b05000000	            mov rax, qword [0x04000a29] 	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x4000a29	           0xfb600	                   movzx eax, byte [rax]	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x4000a2c	           0xfb6c0	                           movzx eax, al	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x4000a2f	            0x4898	                                    cdqe	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x4000a31	     0xfb680000000	                   movzx eax, byte [rax]	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x4000a38	            0x84c0	                             test al, al	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x4000a3a	            0x7494	                            je 0x40009d0	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x4000a3c	            0xeb01	                           jmp 0x4000a3f	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x4000a3e	              0x90	                                     nop	       241	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x4000a3f	    0x488b05000000	            mov rax, qword [0x04000a46] 	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000a46	           0xfb600	                   movzx eax, byte [rax]	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000a49	            0x3c20	                            cmp al, 0x20	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000a4b	     0xf858c000000	                           jne 0x4000add	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000a51	    0x488b05000000	            mov rax, qword [0x04000a58] 	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000a58	        0x4883c001	                              add rax, 1	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000a5c	    0x488905000000	            mov qword [0x04000a63], rax 	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000a63	            0xeb78	                           jmp 0x4000add	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000a65	    0x488b05000000	            mov rax, qword [0x04000a6c] 	       251	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000a6c	        0x4883c001	                              add rax, 1	       251	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000a70	    0x488905000000	            mov qword [0x04000a77], rax 	       251	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000a77	    0x488b05000000	            mov rax, qword [0x04000a7e] 	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000a7e	           0xfb600	                   movzx eax, byte [rax]	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000a81	           0xfbec0	                           movsx eax, al	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000a84	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000a87	            0x741a	                            je 0x4000aa3	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000a89	    0x488b05000000	            mov rax, qword [0x04000a90] 	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000a90	           0xfb600	                   movzx eax, byte [rax]	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000a93	           0xfb6c0	                           movzx eax, al	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000a96	            0x4898	                                    cdqe	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000a98	     0xfb680000000	                   movzx eax, byte [rax]	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000a9f	            0x84c0	                             test al, al	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000aa1	            0x74c2	                            je 0x4000a65	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000aa3	    0x488b05000000	            mov rax, qword [0x04000aaa] 	       252	cond.c	FUNCTION_4	ELSE_1
0x4000aaa	        0x488945f0	             mov qword [rbp - 0x10], rax	       252	cond.c	FUNCTION_4	ELSE_1
0x4000aae	            0xeb05	                           jmp 0x4000ab5	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000ab0	      0x48836df001	               sub qword [rbp - 0x10], 1	       254	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000ab5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000ab9	        0x483b45f8	                cmp rax, qword [rbp - 8]	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000abd	            0x761e	                           jbe 0x4000add	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000abf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000ac3	        0x4883e801	                              sub rax, 1	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000ac7	           0xfb600	                   movzx eax, byte [rax]	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000aca	            0x3c20	                            cmp al, 0x20	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000acc	            0x74e2	                            je 0x4000ab0	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000ace	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000ad2	        0x4883e801	                              sub rax, 1	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000ad6	           0xfb600	                   movzx eax, byte [rax]	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000ad9	            0x3c09	                               cmp al, 9	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000adb	            0x74d3	                            je 0x4000ab0	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000add	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       257	cond.c	FUNCTION_4
0x4000ae1	        0x488b45f8	                mov rax, qword [rbp - 8]	       257	cond.c	FUNCTION_4
0x4000ae5	          0x4829c2	                            sub rdx, rax	       257	cond.c	FUNCTION_4
0x4000ae8	          0x4889d0	                            mov rax, rdx	       257	cond.c	FUNCTION_4
0x4000aeb	            0x89c2	                            mov edx, eax	       257	cond.c	FUNCTION_4
0x4000aed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       257	cond.c	FUNCTION_4
0x4000af1	            0x8910	                    mov dword [rax], edx	       257	cond.c	FUNCTION_4
0x4000af3	        0x488b45f8	                mov rax, qword [rbp - 8]	       258	cond.c	FUNCTION_4
0x4000af7	              0x5d	                                 pop rbp	       259	cond.c	FUNCTION_4
0x4000af8	              0xc3	                                     ret	       259	cond.c	FUNCTION_4
initialize_cframe	WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,2:DO,0:IF,0	37
0x40017c4	              0x55	                                push rbp	       533	cond.c	FUNCTION_11
0x40017c5	          0x4889e5	                            mov rbp, rsp	       533	cond.c	FUNCTION_11
0x40017c8	        0x4883ec10	                           sub rsp, 0x10	       533	cond.c	FUNCTION_11
0x40017cc	        0x48897df8	                mov qword [rbp - 8], rdi	       533	cond.c	FUNCTION_11
0x40017d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       534	cond.c	FUNCTION_11	CALL_1
0x40017d4	      0xba38000000	                           mov edx, 0x38	       534	cond.c	FUNCTION_11	CALL_1
0x40017d9	      0xbe00000000	                              mov esi, 0	       534	cond.c	FUNCTION_11	CALL_1
0x40017de	          0x4889c7	                            mov rdi, rax	       534	cond.c	FUNCTION_11	CALL_1
0x40017e1	      0xe800000000	                          call 0x40017e6	       534	cond.c	FUNCTION_11	CALL_1
0x40017e6	        0x488b45f8	                mov rax, qword [rbp - 8]	       536	cond.c	FUNCTION_11	CALL_2
0x40017ea	        0x4883c008	                              add rax, 8	       536	cond.c	FUNCTION_11	CALL_2
0x40017ee	          0x4889c7	                            mov rdi, rax	       536	cond.c	FUNCTION_11	CALL_2
0x40017f1	      0xe800000000	                          call 0x40017f6	       536	cond.c	FUNCTION_11	CALL_2
0x40017f6	          0x4889c2	                            mov rdx, rax	       536	cond.c	FUNCTION_11	CALL_2
0x40017f9	        0x488b45f8	                mov rax, qword [rbp - 8]	       536	cond.c	FUNCTION_11	CALL_2
0x40017fd	          0x488910	                    mov qword [rax], rdx	       536	cond.c	FUNCTION_11	CALL_2
0x4001800	    0x488b15000000	            mov rdx, qword [0x04001807] 	       537	cond.c	FUNCTION_11
0x4001807	        0x488b45f8	                mov rax, qword [rbp - 8]	       537	cond.c	FUNCTION_11
0x400180b	        0x48895020	             mov qword [rax + 0x20], rdx	       537	cond.c	FUNCTION_11
0x400180f	    0x488b05000000	            mov rax, qword [0x04001816] 	       538	cond.c	FUNCTION_11
0x4001816	          0x4885c0	                           test rax, rax	       538	cond.c	FUNCTION_11
0x4001819	            0x7415	                            je 0x4001830	       538	cond.c	FUNCTION_11
0x400181b	    0x488b05000000	            mov rax, qword [0x04001822] 	       538	cond.c	FUNCTION_11
0x4001822	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       538	cond.c	FUNCTION_11
0x4001825	            0x85c0	                           test eax, eax	       538	cond.c	FUNCTION_11
0x4001827	            0x7407	                            je 0x4001830	       538	cond.c	FUNCTION_11
0x4001829	      0xba01000000	                              mov edx, 1	       538	cond.c	FUNCTION_11
0x400182e	            0xeb05	                           jmp 0x4001835	       538	cond.c	FUNCTION_11
0x4001830	      0xba00000000	                              mov edx, 0	       538	cond.c	FUNCTION_11
0x4001835	        0x488b45f8	                mov rax, qword [rbp - 8]	       538	cond.c	FUNCTION_11
0x4001839	          0x895030	             mov dword [rax + 0x30], edx	       538	cond.c	FUNCTION_11
0x400183c	    0x8b1500000000	            mov edx, dword [0x04001842] 	       539	cond.c	FUNCTION_11
0x4001842	        0x488b45f8	                mov rax, qword [rbp - 8]	       539	cond.c	FUNCTION_11
0x4001846	          0x895034	             mov dword [rax + 0x34], edx	       539	cond.c	FUNCTION_11
0x4001849	              0x90	                                     nop	       540	cond.c	FUNCTION_11
0x400184a	              0xc9	                                   leave	       540	cond.c	FUNCTION_11
0x400184b	              0xc3	                                     ret	       540	cond.c	FUNCTION_11
s_elseif	WHILE,1:ELSE,4:functions,0:SWITCH,1:FOR,0:CALL,18:DO,0:IF,7	199
0x4000de1	              0x55	                                push rbp	       307	cond.c	FUNCTION_6
0x4000de2	          0x4889e5	                            mov rbp, rsp	       307	cond.c	FUNCTION_6
0x4000de5	              0x53	                                push rbx	       307	cond.c	FUNCTION_6
0x4000de6	        0x4883ec58	                           sub rsp, 0x58	       307	cond.c	FUNCTION_6
0x4000dea	          0x897dac	             mov dword [rbp - 0x54], edi	       307	cond.c	FUNCTION_6
0x4000ded	    0x64488b042528	                mov rax, qword fs:[0x28]	       307	cond.c	FUNCTION_6
0x4000df6	        0x488945e8	             mov qword [rbp - 0x18], rax	       307	cond.c	FUNCTION_6
0x4000dfa	            0x31c0	                            xor eax, eax	       307	cond.c	FUNCTION_6
0x4000dfc	    0x488b05000000	            mov rax, qword [0x04000e03] 	       308	cond.c	FUNCTION_6	IF_1
0x4000e03	          0x4885c0	                           test rax, rax	       308	cond.c	FUNCTION_6	IF_1
0x4000e06	            0x751c	                           jne 0x4000e24	       308	cond.c	FUNCTION_6	IF_1
0x4000e08	      0xbf00000000	                              mov edi, 0	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000e0d	      0xe800000000	                          call 0x4000e12	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000e12	          0x4889c7	                            mov rdi, rax	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000e15	      0xb800000000	                              mov eax, 0	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000e1a	      0xe800000000	                          call 0x4000e1f	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000e1f	      0xe9e2000000	                           jmp 0x4000f06	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000e24	    0x488b05000000	            mov rax, qword [0x04000e2b] 	       312	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000e2b	          0x8b4028	            mov eax, dword [rax + 0x28] 	       312	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000e2e	            0x85c0	                           test eax, eax	       312	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000e30	            0x747a	                            je 0x4000eac	       312	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000e32	      0xbf00000000	                              mov edi, 0	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000e37	      0xe800000000	                          call 0x4000e3c	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000e3c	          0x4889c7	                            mov rdi, rax	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000e3f	      0xb800000000	                              mov eax, 0	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000e44	      0xe800000000	                          call 0x4000e49	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000e49	      0xbf00000000	                              mov edi, 0	       317	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000e4e	      0xe800000000	                          call 0x4000e53	       317	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000e53	          0x4889c2	                            mov rdx, rax	       317	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000e56	    0x488b05000000	            mov rax, qword [0x04000e5d] 	       316	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000e5d	          0x8b4818	            mov ecx, dword [rax + 0x18] 	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000e60	    0x488b05000000	            mov rax, qword [0x04000e67] 	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000e67	        0x488b4010	            mov rax, qword [rax + 0x10] 	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000e6b	            0x89ce	                            mov esi, ecx	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000e6d	          0x4889c7	                            mov rdi, rax	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000e70	      0xb800000000	                              mov eax, 0	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000e75	      0xe800000000	                          call 0x4000e7a	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000e7a	      0xbf00000000	                              mov edi, 0	       320	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_8
0x4000e7f	      0xe800000000	                          call 0x4000e84	       320	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_8
0x4000e84	          0x4889c2	                            mov rdx, rax	       320	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_8
0x4000e87	    0x488b05000000	            mov rax, qword [0x04000e8e] 	       319	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000e8e	          0x8b4808	                mov ecx, dword [rax + 8]	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000e91	    0x488b05000000	            mov rax, qword [0x04000e98] 	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000e98	          0x488b00	                    mov rax, qword [rax]	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000e9b	            0x89ce	                            mov esi, ecx	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000e9d	          0x4889c7	                            mov rdi, rax	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000ea0	      0xb800000000	                              mov eax, 0	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000ea5	      0xe800000000	                          call 0x4000eaa	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000eaa	            0xeb5a	                           jmp 0x4000f06	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000eac	    0x488b1d000000	            mov rbx, qword [0x04000eb3] 	       324	cond.c	FUNCTION_6	ELSE_2
0x4000eb3	    0x488b05000000	            mov rax, qword [0x04000eba] 	       325	cond.c	FUNCTION_6	ELSE_2	CALL_9
0x4000eba	        0x4883c018	                           add rax, 0x18	       325	cond.c	FUNCTION_6	ELSE_2	CALL_9
0x4000ebe	          0x4889c7	                            mov rdi, rax	       325	cond.c	FUNCTION_6	ELSE_2	CALL_9
0x4000ec1	      0xe800000000	                          call 0x4000ec6	       325	cond.c	FUNCTION_6	ELSE_2	CALL_9
0x4000ec6	        0x48894310	             mov qword [rbx + 0x10], rax	       325	cond.c	FUNCTION_6	ELSE_2	CALL_9
0x4000eca	    0x488b05000000	            mov rax, qword [0x04000ed1] 	       327	cond.c	FUNCTION_6	ELSE_2
0x4000ed1	    0x488b15000000	            mov rdx, qword [0x04000ed8] 	       327	cond.c	FUNCTION_6	ELSE_2
0x4000ed8	          0x8b4a30	            mov ecx, dword [rdx + 0x30] 	       327	cond.c	FUNCTION_6	ELSE_2
0x4000edb	    0x488b15000000	            mov rdx, qword [0x04000ee2] 	       327	cond.c	FUNCTION_6	ELSE_2
0x4000ee2	          0x8b522c	            mov edx, dword [rdx + 0x2c] 	       327	cond.c	FUNCTION_6	ELSE_2
0x4000ee5	            0x85d2	                           test edx, edx	       327	cond.c	FUNCTION_6	ELSE_2
0x4000ee7	           0xf94c2	                                 sete dl	       327	cond.c	FUNCTION_6	ELSE_2
0x4000eea	           0xfb6d2	                           movzx edx, dl	       327	cond.c	FUNCTION_6	ELSE_2
0x4000eed	             0x9ca	                             or edx, ecx	       327	cond.c	FUNCTION_6	ELSE_2
0x4000eef	          0x895030	             mov dword [rax + 0x30], edx	       327	cond.c	FUNCTION_6	ELSE_2
0x4000ef2	    0x488b05000000	            mov rax, qword [0x04000ef9] 	       328	cond.c	FUNCTION_6	ELSE_2
0x4000ef9	    0x488b15000000	            mov rdx, qword [0x04000f00] 	       328	cond.c	FUNCTION_6	ELSE_2
0x4000f00	          0x8b5230	            mov edx, dword [rdx + 0x30] 	       328	cond.c	FUNCTION_6	ELSE_2
0x4000f03	          0x89502c	             mov dword [rax + 0x2c], edx	       328	cond.c	FUNCTION_6	ELSE_2
0x4000f06	    0x488b05000000	            mov rax, qword [0x04000f0d] 	       331	cond.c	FUNCTION_6	IF_3
0x4000f0d	          0x4885c0	                           test rax, rax	       331	cond.c	FUNCTION_6	IF_3
0x4000f10	            0x7422	                            je 0x4000f34	       331	cond.c	FUNCTION_6	IF_3
0x4000f12	    0x488b05000000	            mov rax, qword [0x04000f19] 	       331	cond.c	FUNCTION_6	IF_3
0x4000f19	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       331	cond.c	FUNCTION_6	IF_3
0x4000f1c	            0x85c0	                           test eax, eax	       331	cond.c	FUNCTION_6	IF_3
0x4000f1e	            0x7443	                            je 0x4000f63	       331	cond.c	FUNCTION_6	IF_3
0x4000f20	            0xeb12	                           jmp 0x4000f34	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000f22	    0x488b05000000	            mov rax, qword [0x04000f29] 	       334	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000f29	        0x4883c001	                              add rax, 1	       334	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000f2d	    0x488905000000	            mov qword [0x04000f34], rax 	       334	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000f34	    0x488b05000000	            mov rax, qword [0x04000f3b] 	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000f3b	           0xfb600	                   movzx eax, byte [rax]	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000f3e	           0xfb6c0	                           movzx eax, al	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000f41	            0x4898	                                    cdqe	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000f43	     0xfb680000000	                   movzx eax, byte [rax]	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000f4a	            0x84c0	                             test al, al	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000f4c	            0x74d4	                            je 0x4000f22	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000f4e	    0x488b05000000	            mov rax, qword [0x04000f55] 	       336	cond.c	FUNCTION_6	IF_3	IF_4
0x4000f55	          0x4885c0	                           test rax, rax	       336	cond.c	FUNCTION_6	IF_3	IF_4
0x4000f58	     0xf851a010000	                           jne 0x4001078	       336	cond.c	FUNCTION_6	IF_3	IF_4
0x4000f5e	      0xe96d010000	                           jmp 0x40010d0	       337	cond.c	FUNCTION_6	IF_3	IF_4
0x4000f63	    0x488b05000000	            mov rax, qword [0x04000f6a] 	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000f6a	           0xfb600	                   movzx eax, byte [rax]	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000f6d	            0x3c20	                            cmp al, 0x20	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000f6f	            0x7512	                           jne 0x4000f83	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000f71	    0x488b05000000	            mov rax, qword [0x04000f78] 	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000f78	        0x4883c001	                              add rax, 1	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000f7c	    0x488905000000	            mov qword [0x04000f83], rax 	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000f83	        0x488d45c0	                   lea rax, [rbp - 0x40]	       347	cond.c	FUNCTION_6	ELSE_3	CALL_11
0x4000f87	      0xba00000000	                              mov edx, 0	       347	cond.c	FUNCTION_6	ELSE_3	CALL_11
0x4000f8c	          0x4889c6	                            mov rsi, rax	       347	cond.c	FUNCTION_6	ELSE_3	CALL_11
0x4000f8f	      0xbf00000000	                              mov edi, 0	       347	cond.c	FUNCTION_6	ELSE_3	CALL_11
0x4000f94	      0xe800000000	                          call 0x4000f99	       347	cond.c	FUNCTION_6	ELSE_3	CALL_11
0x4000f99	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       348	cond.c	FUNCTION_6	ELSE_3	IF_5
0x4000f9d	            0x3c02	                               cmp al, 2	       348	cond.c	FUNCTION_6	ELSE_3	IF_5
0x4000f9f	            0x7417	                            je 0x4000fb8	       348	cond.c	FUNCTION_6	ELSE_3	IF_5
0x4000fa1	      0xbf00000000	                              mov edi, 0	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000fa6	      0xe800000000	                          call 0x4000fab	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000fab	          0x4889c7	                            mov rdi, rax	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000fae	      0xb800000000	                              mov eax, 0	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000fb3	      0xe800000000	                          call 0x4000fb8	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000fb8	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000fbb	          0x83e815	                           sub eax, 0x15	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000fbe	          0x83f805	                              cmp eax, 5	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000fc1	            0x7777	                            ja 0x400103a	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000fc3	            0x89c0	                            mov eax, eax	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000fc5	    0x488b04c50000	                  mov rax, qword [rax*8]	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000fcd	            0xffe0	                                 jmp rax	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000fcf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000fd3	          0x4885c0	                           test rax, rax	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000fd6	           0xf94c0	                                 sete al	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000fd9	           0xfb6c0	                           movzx eax, al	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000fdc	          0x8945bc	             mov dword [rbp - 0x44], eax	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000fdf	            0xeb6d	                           jmp 0x400104e	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000fe1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000fe5	          0x4885c0	                           test rax, rax	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000fe8	           0xf95c0	                                setne al	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000feb	           0xfb6c0	                           movzx eax, al	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000fee	          0x8945bc	             mov dword [rbp - 0x44], eax	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000ff1	            0xeb5b	                           jmp 0x400104e	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000ff3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       355	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000ff7	        0x48c1e83f	                           shr rax, 0x3f	       355	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000ffb	           0xfb6c0	                           movzx eax, al	       355	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000ffe	          0x8945bc	             mov dword [rbp - 0x44], eax	       355	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4001001	            0xeb4b	                           jmp 0x400104e	       355	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4001003	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4001007	          0x4885c0	                           test rax, rax	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x400100a	           0xf9ec0	                                setle al	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x400100d	           0xfb6c0	                           movzx eax, al	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4001010	          0x8945bc	             mov dword [rbp - 0x44], eax	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4001013	            0xeb39	                           jmp 0x400104e	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4001015	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4001019	          0x48f7d0	                                 not rax	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x400101c	        0x48c1e83f	                           shr rax, 0x3f	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4001020	           0xfb6c0	                           movzx eax, al	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4001023	          0x8945bc	             mov dword [rbp - 0x44], eax	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4001026	            0xeb26	                           jmp 0x400104e	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4001028	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x400102c	          0x4885c0	                           test rax, rax	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x400102f	           0xf9fc0	                                 setg al	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4001032	           0xfb6c0	                           movzx eax, al	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4001035	          0x8945bc	             mov dword [rbp - 0x44], eax	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4001038	            0xeb14	                           jmp 0x400104e	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x400103a	      0xba00000000	                              mov edx, 0	       360	cond.c	FUNCTION_6	ELSE_3	SWITCH_1	CALL_14
0x400103f	      0xbe68010000	                          mov esi, 0x168	       360	cond.c	FUNCTION_6	ELSE_3	SWITCH_1	CALL_14
0x4001044	      0xbf00000000	                              mov edi, 0	       360	cond.c	FUNCTION_6	ELSE_3	SWITCH_1	CALL_14
0x4001049	      0xe800000000	                          call 0x400104e	       360	cond.c	FUNCTION_6	ELSE_3	SWITCH_1	CALL_14
0x400104e	    0x488b05000000	            mov rax, qword [0x04001055] 	       364	cond.c	FUNCTION_6	ELSE_3
0x4001055	    0x488b15000000	            mov rdx, qword [0x0400105c] 	       364	cond.c	FUNCTION_6	ELSE_3
0x400105c	          0x8b5230	            mov edx, dword [rdx + 0x30] 	       364	cond.c	FUNCTION_6	ELSE_3
0x400105f	            0x85d2	                           test edx, edx	       364	cond.c	FUNCTION_6	ELSE_3
0x4001061	            0x7506	                           jne 0x4001069	       364	cond.c	FUNCTION_6	ELSE_3
0x4001063	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       364	cond.c	FUNCTION_6	ELSE_3
0x4001067	            0x7507	                           jne 0x4001070	       364	cond.c	FUNCTION_6	ELSE_3
0x4001069	      0xba01000000	                              mov edx, 1	       364	cond.c	FUNCTION_6	ELSE_3
0x400106e	            0xeb05	                           jmp 0x4001075	       364	cond.c	FUNCTION_6	ELSE_3
0x4001070	      0xba00000000	                              mov edx, 0	       364	cond.c	FUNCTION_6	ELSE_3
0x4001075	          0x89502c	             mov dword [rax + 0x2c], edx	       364	cond.c	FUNCTION_6	ELSE_3
0x4001078	    0x8b0500000000	            mov eax, dword [0x0400107e] 	       367	cond.c	FUNCTION_6	IF_6	CALL_15
0x400107e	          0x83e020	                           and eax, 0x20	       367	cond.c	FUNCTION_6	IF_6	CALL_15
0x4001081	            0x85c0	                           test eax, eax	       367	cond.c	FUNCTION_6	IF_6	CALL_15
0x4001083	            0x7446	                            je 0x40010cb	       367	cond.c	FUNCTION_6	IF_6	CALL_15
0x4001085	    0x488b05000000	            mov rax, qword [0x0400108c] 	       368	cond.c	FUNCTION_6	IF_6
0x400108c	        0x488b4020	            mov rax, qword [rax + 0x20] 	       368	cond.c	FUNCTION_6	IF_6
0x4001090	          0x4885c0	                           test rax, rax	       368	cond.c	FUNCTION_6	IF_6
0x4001093	            0x7412	                            je 0x40010a7	       368	cond.c	FUNCTION_6	IF_6
0x4001095	    0x488b05000000	            mov rax, qword [0x0400109c] 	       369	cond.c	FUNCTION_6	IF_6
0x400109c	        0x488b4020	            mov rax, qword [rax + 0x20] 	       369	cond.c	FUNCTION_6	IF_6
0x40010a0	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       369	cond.c	FUNCTION_6	IF_6
0x40010a3	            0x85c0	                           test eax, eax	       369	cond.c	FUNCTION_6	IF_6
0x40010a5	            0x7524	                           jne 0x40010cb	       369	cond.c	FUNCTION_6	IF_6
0x40010a7	    0x488b05000000	            mov rax, qword [0x040010ae] 	       371	cond.c	FUNCTION_6	IF_6	IF_7
0x40010ae	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       371	cond.c	FUNCTION_6	IF_6	IF_7
0x40010b1	            0x85c0	                           test eax, eax	       371	cond.c	FUNCTION_6	IF_6	IF_7
0x40010b3	            0x750c	                           jne 0x40010c1	       371	cond.c	FUNCTION_6	IF_6	IF_7
0x40010b5	      0xbf01000000	                              mov edi, 1	       372	cond.c	FUNCTION_6	IF_6	CALL_16
0x40010ba	      0xe800000000	                          call 0x40010bf	       372	cond.c	FUNCTION_6	IF_6	CALL_16
0x40010bf	            0xeb0a	                           jmp 0x40010cb	       372	cond.c	FUNCTION_6	IF_6	CALL_16
0x40010c1	      0xbf02000000	                              mov edi, 2	       374	cond.c	FUNCTION_6	IF_6	CALL_17
0x40010c6	      0xe800000000	                          call 0x40010cb	       374	cond.c	FUNCTION_6	IF_6	CALL_17
0x40010cb	      0xe800000000	                          call 0x40010d0	       377	cond.c	FUNCTION_6	CALL_18
0x40010d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       378	cond.c	FUNCTION_6
0x40010d4	    0x644833042528	                xor rax, qword fs:[0x28]	       378	cond.c	FUNCTION_6
0x40010dd	            0x7405	                            je 0x40010e4	       378	cond.c	FUNCTION_6
0x40010df	      0xe800000000	                          call 0x40010e4	       378	cond.c	FUNCTION_6
0x40010e4	        0x4883c458	                           add rsp, 0x58	       378	cond.c	FUNCTION_6
0x40010e8	              0x5b	                                 pop rbx	       378	cond.c	FUNCTION_6
0x40010e9	              0x5d	                                 pop rbp	       378	cond.c	FUNCTION_6
0x40010ea	              0xc3	                                     ret	       378	cond.c	FUNCTION_6
cond_exit_macro	WHILE,1:ELSE,0:functions,0:SWITCH,0:FOR,0:CALL,1:DO,0:IF,0	44
0x4001922	              0x55	                                push rbp	       573	cond.c	FUNCTION_13
0x4001923	          0x4889e5	                            mov rbp, rsp	       573	cond.c	FUNCTION_13
0x4001926	        0x4883ec30	                           sub rsp, 0x30	       573	cond.c	FUNCTION_13
0x400192a	          0x897ddc	             mov dword [rbp - 0x24], edi	       573	cond.c	FUNCTION_13
0x400192d	            0xeb7a	                           jmp 0x40019a9	       574	cond.c	FUNCTION_13	WHILE_1
0x400192f	    0x488b05000000	            mov rax, qword [0x04001936] 	       578	cond.c	FUNCTION_13	WHILE_1
0x4001936	        0x488945e8	             mov qword [rbp - 0x18], rax	       578	cond.c	FUNCTION_13	WHILE_1
0x400193a	    0x488b05000000	            mov rax, qword [0x04001941] 	       579	cond.c	FUNCTION_13	WHILE_1
0x4001941	        0x488b4020	            mov rax, qword [rax + 0x20] 	       579	cond.c	FUNCTION_13	WHILE_1
0x4001945	    0x488905000000	            mov qword [0x0400194c], rax 	       579	cond.c	FUNCTION_13	WHILE_1
0x400194c	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001954	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001958	        0x488945f8	                mov qword [rbp - 8], rax	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x400195c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001960	        0x488b4008	                mov rax, qword [rax + 8]	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001964	        0x483b45f8	                cmp rax, qword [rbp - 8]	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001968	            0x732c	                           jae 0x4001996	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x400196a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x400196e	        0x488b4020	            mov rax, qword [rax + 0x20] 	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001972	        0x483b45f8	                cmp rax, qword [rbp - 8]	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001976	            0x761e	                           jbe 0x4001996	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001978	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x400197c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001980	        0x48895010	             mov qword [rax + 0x10], rdx	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001984	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001988	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x400198c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001990	        0x48895018	             mov qword [rax + 0x18], rdx	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001994	            0xeb13	                           jmp 0x40019a9	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001996	        0x488b55f8	                mov rdx, qword [rbp - 8]	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x400199a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x400199e	          0x4889d6	                            mov rsi, rdx	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x40019a1	          0x4889c7	                            mov rdi, rax	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x40019a4	      0xe800000000	                          call 0x40019a9	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x40019a9	    0x488b05000000	            mov rax, qword [0x040019b0] 	       574	cond.c	FUNCTION_13	WHILE_1
0x40019b0	          0x4885c0	                           test rax, rax	       574	cond.c	FUNCTION_13	WHILE_1
0x40019b3	            0x7413	                            je 0x40019c8	       574	cond.c	FUNCTION_13	WHILE_1
0x40019b5	    0x488b05000000	            mov rax, qword [0x040019bc] 	       574	cond.c	FUNCTION_13	WHILE_1
0x40019bc	          0x8b4034	            mov eax, dword [rax + 0x34] 	       574	cond.c	FUNCTION_13	WHILE_1
0x40019bf	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       574	cond.c	FUNCTION_13	WHILE_1
0x40019c2	     0xf8d67ffffff	                           jge 0x400192f	       574	cond.c	FUNCTION_13	WHILE_1
0x40019c8	              0x90	                                     nop	       582	cond.c	FUNCTION_13
0x40019c9	              0xc9	                                   leave	       582	cond.c	FUNCTION_13
0x40019ca	              0xc3	                                     ret	       582	cond.c	FUNCTION_13
ignore_input	WHILE,0:ELSE,1:functions,0:SWITCH,0:FOR,0:CALL,6:DO,0:IF,4	94
0x4001678	              0x55	                                push rbp	       499	cond.c	FUNCTION_10
0x4001679	          0x4889e5	                            mov rbp, rsp	       499	cond.c	FUNCTION_10
0x400167c	        0x4883ec10	                           sub rsp, 0x10	       499	cond.c	FUNCTION_10
0x4001680	    0x488b05000000	            mov rax, qword [0x04001687] 	       502	cond.c	FUNCTION_10
0x4001687	        0x488945f8	                mov qword [rbp - 8], rax	       502	cond.c	FUNCTION_10
0x400168b	        0x488b45f8	                mov rax, qword [rbp - 8]	       511	cond.c	FUNCTION_10	ELSE_1	IF_3
0x400168f	        0x4883e801	                              sub rax, 1	       511	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001693	           0xfb600	                   movzx eax, byte [rax]	       511	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001696	            0x3c2e	                            cmp al, 0x2e	       511	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001698	            0x742e	                            je 0x40016c8	       511	cond.c	FUNCTION_10	ELSE_1	IF_3
0x400169a	    0x488b05000000	            mov rax, qword [0x040016a1] 	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x40016a1	          0x4885c0	                           test rax, rax	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x40016a4	            0x7418	                            je 0x40016be	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x40016a6	    0x488b05000000	            mov rax, qword [0x040016ad] 	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x40016ad	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x40016b0	            0x85c0	                           test eax, eax	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x40016b2	            0x740a	                            je 0x40016be	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x40016b4	      0xb801000000	                              mov eax, 1	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x40016b9	      0xe904010000	                           jmp 0x40017c2	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x40016be	      0xb800000000	                              mov eax, 0	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x40016c3	      0xe9fa000000	                           jmp 0x40017c2	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x40016c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       516	cond.c	FUNCTION_10	IF_4
0x40016cc	           0xfb600	                   movzx eax, byte [rax]	       516	cond.c	FUNCTION_10	IF_4
0x40016cf	            0x3c69	                            cmp al, 0x69	       516	cond.c	FUNCTION_10	IF_4
0x40016d1	            0x740b	                            je 0x40016de	       516	cond.c	FUNCTION_10	IF_4
0x40016d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       517	cond.c	FUNCTION_10	IF_4
0x40016d7	           0xfb600	                   movzx eax, byte [rax]	       517	cond.c	FUNCTION_10	IF_4
0x40016da	            0x3c49	                            cmp al, 0x49	       517	cond.c	FUNCTION_10	IF_4
0x40016dc	            0x7552	                           jne 0x4001730	       517	cond.c	FUNCTION_10	IF_4
0x40016de	        0x488b45f8	                mov rax, qword [rbp - 8]	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40016e2	      0xba02000000	                              mov edx, 2	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40016e7	      0xbe00000000	                              mov esi, 0	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40016ec	          0x4889c7	                            mov rdi, rax	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40016ef	      0xe800000000	                          call 0x40016f4	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40016f4	            0x85c0	                           test eax, eax	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40016f6	     0xf8498000000	                            je 0x4001794	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40016fc	        0x488b45f8	                mov rax, qword [rbp - 8]	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x4001700	      0xba05000000	                              mov edx, 5	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x4001705	      0xbe00000000	                              mov esi, 0	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x400170a	          0x4889c7	                            mov rdi, rax	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x400170d	      0xe800000000	                          call 0x4001712	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x4001712	            0x85c0	                           test eax, eax	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x4001714	            0x747e	                            je 0x4001794	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x4001716	        0x488b45f8	                mov rax, qword [rbp - 8]	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x400171a	      0xba06000000	                              mov edx, 6	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x400171f	      0xbe00000000	                              mov esi, 0	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x4001724	          0x4889c7	                            mov rdi, rax	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x4001727	      0xe800000000	                          call 0x400172c	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x400172c	            0x85c0	                           test eax, eax	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x400172e	            0x7464	                            je 0x4001794	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x4001730	        0x488b45f8	                mov rax, qword [rbp - 8]	       521	cond.c	FUNCTION_10	IF_4
0x4001734	           0xfb600	                   movzx eax, byte [rax]	       521	cond.c	FUNCTION_10	IF_4
0x4001737	            0x3c65	                            cmp al, 0x65	       521	cond.c	FUNCTION_10	IF_4
0x4001739	            0x740b	                            je 0x4001746	       521	cond.c	FUNCTION_10	IF_4
0x400173b	        0x488b45f8	                mov rax, qword [rbp - 8]	       522	cond.c	FUNCTION_10	IF_4
0x400173f	           0xfb600	                   movzx eax, byte [rax]	       522	cond.c	FUNCTION_10	IF_4
0x4001742	            0x3c45	                            cmp al, 0x45	       522	cond.c	FUNCTION_10	IF_4
0x4001744	            0x7555	                           jne 0x400179b	       522	cond.c	FUNCTION_10	IF_4
0x4001746	        0x488b45f8	                mov rax, qword [rbp - 8]	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x400174a	      0xba04000000	                              mov edx, 4	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x400174f	      0xbe00000000	                              mov esi, 0	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x4001754	          0x4889c7	                            mov rdi, rax	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x4001757	      0xe800000000	                          call 0x400175c	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x400175c	            0x85c0	                           test eax, eax	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x400175e	            0x7434	                            je 0x4001794	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x4001760	        0x488b45f8	                mov rax, qword [rbp - 8]	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x4001764	      0xba05000000	                              mov edx, 5	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x4001769	      0xbe00000000	                              mov esi, 0	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x400176e	          0x4889c7	                            mov rdi, rax	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x4001771	      0xe800000000	                          call 0x4001776	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x4001776	            0x85c0	                           test eax, eax	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x4001778	            0x741a	                            je 0x4001794	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x400177a	        0x488b45f8	                mov rax, qword [rbp - 8]	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x400177e	      0xba04000000	                              mov edx, 4	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x4001783	      0xbe00000000	                              mov esi, 0	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x4001788	          0x4889c7	                            mov rdi, rax	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x400178b	      0xe800000000	                          call 0x4001790	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x4001790	            0x85c0	                           test eax, eax	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x4001792	            0x7507	                           jne 0x400179b	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x4001794	      0xb800000000	                              mov eax, 0	       526	cond.c	FUNCTION_10	IF_4
0x4001799	            0xeb27	                           jmp 0x40017c2	       526	cond.c	FUNCTION_10	IF_4
0x400179b	    0x488b05000000	            mov rax, qword [0x040017a2] 	       528	cond.c	FUNCTION_10
0x40017a2	          0x4885c0	                           test rax, rax	       528	cond.c	FUNCTION_10
0x40017a5	            0x7415	                            je 0x40017bc	       528	cond.c	FUNCTION_10
0x40017a7	    0x488b05000000	            mov rax, qword [0x040017ae] 	       528	cond.c	FUNCTION_10
0x40017ae	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       528	cond.c	FUNCTION_10
0x40017b1	            0x85c0	                           test eax, eax	       528	cond.c	FUNCTION_10
0x40017b3	            0x7407	                            je 0x40017bc	       528	cond.c	FUNCTION_10
0x40017b5	      0xb801000000	                              mov eax, 1	       528	cond.c	FUNCTION_10
0x40017ba	            0xeb05	                           jmp 0x40017c1	       528	cond.c	FUNCTION_10
0x40017bc	      0xb800000000	                              mov eax, 0	       528	cond.c	FUNCTION_10
0x40017c1	              0x90	                                     nop	       528	cond.c	FUNCTION_10
0x40017c2	              0xc9	                                   leave	       529	cond.c	FUNCTION_10
0x40017c3	              0xc3	                                     ret	       529	cond.c	FUNCTION_10
