dlang_parse_string	ELSE,1:CALL,15:IF,4:SWITCH,1:functions,0:FOR,0:WHILE,1:DO,0	133
0x4001fb2	              0x55	                                push rbp	      1118	d-demangle.c	FUNCTION_22
0x4001fb3	          0x4889e5	                            mov rbp, rsp	      1118	d-demangle.c	FUNCTION_22
0x4001fb6	        0x4883ec30	                           sub rsp, 0x30	      1118	d-demangle.c	FUNCTION_22
0x4001fba	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1118	d-demangle.c	FUNCTION_22
0x4001fbe	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1118	d-demangle.c	FUNCTION_22
0x4001fc2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1118	d-demangle.c	FUNCTION_22
0x4001fcb	        0x488945f8	                mov qword [rbp - 8], rax	      1118	d-demangle.c	FUNCTION_22
0x4001fcf	            0x31c0	                            xor eax, eax	      1118	d-demangle.c	FUNCTION_22
0x4001fd1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1119	d-demangle.c	FUNCTION_22
0x4001fd5	           0xfb600	                   movzx eax, byte [rax]	      1119	d-demangle.c	FUNCTION_22
0x4001fd8	          0x8845e6	               mov byte [rbp - 0x1a], al	      1119	d-demangle.c	FUNCTION_22
0x4001fdb	      0x488345d001	               add qword [rbp - 0x30], 1	      1122	d-demangle.c	FUNCTION_22
0x4001fe0	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      1123	d-demangle.c	FUNCTION_22	CALL_1
0x4001fe4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1123	d-demangle.c	FUNCTION_22	CALL_1
0x4001fe8	          0x4889d6	                            mov rsi, rdx	      1123	d-demangle.c	FUNCTION_22	CALL_1
0x4001feb	          0x4889c7	                            mov rdi, rax	      1123	d-demangle.c	FUNCTION_22	CALL_1
0x4001fee	      0xe801e4ffff	                   call sym.dlang_number	      1123	d-demangle.c	FUNCTION_22	CALL_1
0x4001ff3	        0x488945d0	             mov qword [rbp - 0x30], rax	      1123	d-demangle.c	FUNCTION_22	CALL_1
0x4001ff7	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1124	d-demangle.c	FUNCTION_22	IF_1
0x4001ffc	            0x740b	                            je 0x4002009	      1124	d-demangle.c	FUNCTION_22	IF_1
0x4001ffe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1124	d-demangle.c	FUNCTION_22	IF_1
0x4002002	           0xfb600	                   movzx eax, byte [rax]	      1124	d-demangle.c	FUNCTION_22	IF_1
0x4002005	            0x3c5f	                            cmp al, 0x5f	      1124	d-demangle.c	FUNCTION_22	IF_1
0x4002007	            0x740a	                            je 0x4002013	      1124	d-demangle.c	FUNCTION_22	IF_1
0x4002009	      0xb800000000	                              mov eax, 0	      1125	d-demangle.c	FUNCTION_22	IF_1
0x400200e	      0xe993010000	                           jmp 0x40021a6	      1125	d-demangle.c	FUNCTION_22	IF_1
0x4002013	      0x488345d001	               add qword [rbp - 0x30], 1	      1127	d-demangle.c	FUNCTION_22
0x4002018	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1128	d-demangle.c	FUNCTION_22	CALL_2
0x400201c	      0xbe00000000	                              mov esi, 0	      1128	d-demangle.c	FUNCTION_22	CALL_2
0x4002021	          0x4889c7	                            mov rdi, rax	      1128	d-demangle.c	FUNCTION_22	CALL_2
0x4002024	      0xe820e2ffff	                  call sym.string_append	      1128	d-demangle.c	FUNCTION_22	CALL_2
0x4002029	      0xe92e010000	                           jmp 0x400215c	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x400202e	        0x488d55e7	                   lea rdx, [rbp - 0x19]	      1132	d-demangle.c	FUNCTION_22	WHILE_1	CALL_3
0x4002032	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1132	d-demangle.c	FUNCTION_22	WHILE_1	CALL_3
0x4002036	          0x4889d6	                            mov rsi, rdx	      1132	d-demangle.c	FUNCTION_22	WHILE_1	CALL_3
0x4002039	          0x4889c7	                            mov rdi, rax	      1132	d-demangle.c	FUNCTION_22	WHILE_1	CALL_3
0x400203c	      0xe8d1e4ffff	                 call sym.dlang_hexdigit	      1132	d-demangle.c	FUNCTION_22	WHILE_1	CALL_3
0x4002041	        0x488945f0	             mov qword [rbp - 0x10], rax	      1132	d-demangle.c	FUNCTION_22	WHILE_1	CALL_3
0x4002045	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1134	d-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x400204a	            0x750a	                           jne 0x4002056	      1134	d-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x400204c	      0xb800000000	                              mov eax, 0	      1135	d-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x4002051	      0xe950010000	                           jmp 0x40021a6	      1135	d-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x4002056	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x400205a	           0xfbec0	                           movsx eax, al	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x400205d	          0x83e809	                              sub eax, 9	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4002060	          0x83f817	                           cmp eax, 0x17	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4002063	     0xf878a000000	                            ja 0x40020f3	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4002069	            0x89c0	                            mov eax, eax	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x400206b	    0x488b04c50000	                  mov rax, qword [rax*8]	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4002073	            0xffe0	                                 jmp rax	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4002075	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1141	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_4
0x4002079	      0xbe00000000	                              mov esi, 0	      1141	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_4
0x400207e	          0x4889c7	                            mov rdi, rax	      1141	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_4
0x4002081	      0xe8c3e1ffff	                  call sym.string_append	      1141	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_4
0x4002086	      0xe9c9000000	                           jmp 0x4002154	      1142	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x400208b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1144	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_5
0x400208f	      0xbe00000000	                              mov esi, 0	      1144	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_5
0x4002094	          0x4889c7	                            mov rdi, rax	      1144	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_5
0x4002097	      0xe8ade1ffff	                  call sym.string_append	      1144	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_5
0x400209c	      0xe9b3000000	                           jmp 0x4002154	      1145	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x40020a1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1147	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_6
0x40020a5	      0xbe00000000	                              mov esi, 0	      1147	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_6
0x40020aa	          0x4889c7	                            mov rdi, rax	      1147	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_6
0x40020ad	      0xe897e1ffff	                  call sym.string_append	      1147	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_6
0x40020b2	      0xe99d000000	                           jmp 0x4002154	      1148	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x40020b7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1150	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_7
0x40020bb	      0xbe00000000	                              mov esi, 0	      1150	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_7
0x40020c0	          0x4889c7	                            mov rdi, rax	      1150	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_7
0x40020c3	      0xe881e1ffff	                  call sym.string_append	      1150	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_7
0x40020c8	      0xe987000000	                           jmp 0x4002154	      1151	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x40020cd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1153	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_8
0x40020d1	      0xbe00000000	                              mov esi, 0	      1153	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_8
0x40020d6	          0x4889c7	                            mov rdi, rax	      1153	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_8
0x40020d9	      0xe86be1ffff	                  call sym.string_append	      1153	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_8
0x40020de	            0xeb74	                           jmp 0x4002154	      1154	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x40020e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1156	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_9
0x40020e4	      0xbe00000000	                              mov esi, 0	      1156	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_9
0x40020e9	          0x4889c7	                            mov rdi, rax	      1156	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_9
0x40020ec	      0xe858e1ffff	                  call sym.string_append	      1156	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_9
0x40020f1	            0xeb61	                           jmp 0x4002154	      1157	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x40020f3	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x40020f7	           0xfbec0	                           movsx eax, al	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x40020fa	           0xfb6c0	                           movzx eax, al	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x40020fd	            0x4898	                                    cdqe	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x40020ff	     0xfb784000000	             movzx eax, word [rax + rax]	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4002107	           0xfb7c0	                           movzx eax, ax	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x400210a	          0x83e010	                           and eax, 0x10	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x400210d	            0x85c0	                           test eax, eax	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x400210f	            0x741a	                            je 0x400212b	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4002111	        0x488d4de7	                   lea rcx, [rbp - 0x19]	      1161	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_11
0x4002115	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1161	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_11
0x4002119	      0xba01000000	                              mov edx, 1	      1161	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_11
0x400211e	          0x4889ce	                            mov rsi, rcx	      1161	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_11
0x4002121	          0x4889c7	                            mov rdi, rax	      1161	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_11
0x4002124	      0xe888e1ffff	                 call sym.string_appendn	      1161	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_11
0x4002129	            0xeb29	                           jmp 0x4002154	      1161	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_11
0x400212b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1164	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_12
0x400212f	      0xbe00000000	                              mov esi, 0	      1164	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_12
0x4002134	          0x4889c7	                            mov rdi, rax	      1164	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_12
0x4002137	      0xe80de1ffff	                  call sym.string_append	      1164	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_12
0x400213c	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1165	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_13
0x4002140	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1165	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_13
0x4002144	      0xba02000000	                              mov edx, 2	      1165	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_13
0x4002149	          0x4889ce	                            mov rsi, rcx	      1165	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_13
0x400214c	          0x4889c7	                            mov rdi, rax	      1165	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_13
0x400214f	      0xe85de1ffff	                 call sym.string_appendn	      1165	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_13
0x4002154	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1169	d-demangle.c	FUNCTION_22	WHILE_1
0x4002158	        0x488945d0	             mov qword [rbp - 0x30], rax	      1169	d-demangle.c	FUNCTION_22	WHILE_1
0x400215c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4002160	        0x488d50ff	                      lea rdx, [rax - 1]	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4002164	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4002168	          0x4885c0	                           test rax, rax	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x400216b	     0xf85bdfeffff	                           jne 0x400202e	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4002171	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1171	d-demangle.c	FUNCTION_22	CALL_14
0x4002175	      0xbe00000000	                              mov esi, 0	      1171	d-demangle.c	FUNCTION_22	CALL_14
0x400217a	          0x4889c7	                            mov rdi, rax	      1171	d-demangle.c	FUNCTION_22	CALL_14
0x400217d	      0xe8c7e0ffff	                  call sym.string_append	      1171	d-demangle.c	FUNCTION_22	CALL_14
0x4002182	         0xfb645e6	            movzx eax, byte [rbp - 0x1a]	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4002186	            0x3c61	                            cmp al, 0x61	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4002188	            0x7418	                            je 0x40021a2	      1173	d-demangle.c	FUNCTION_22	IF_4
0x400218a	        0x488d4de6	                   lea rcx, [rbp - 0x1a]	      1174	d-demangle.c	FUNCTION_22	CALL_15
0x400218e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1174	d-demangle.c	FUNCTION_22	CALL_15
0x4002192	      0xba01000000	                              mov edx, 1	      1174	d-demangle.c	FUNCTION_22	CALL_15
0x4002197	          0x4889ce	                            mov rsi, rcx	      1174	d-demangle.c	FUNCTION_22	CALL_15
0x400219a	          0x4889c7	                            mov rdi, rax	      1174	d-demangle.c	FUNCTION_22	CALL_15
0x400219d	      0xe80fe1ffff	                 call sym.string_appendn	      1174	d-demangle.c	FUNCTION_22	CALL_15
0x40021a2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1176	d-demangle.c	FUNCTION_22
0x40021a6	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1177	d-demangle.c	FUNCTION_22
0x40021aa	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1177	d-demangle.c	FUNCTION_22
0x40021b3	            0x7405	                            je 0x40021ba	      1177	d-demangle.c	FUNCTION_22
0x40021b5	      0xe800000000	                          call 0x40021ba	      1177	d-demangle.c	FUNCTION_22
0x40021ba	              0xc9	                                   leave	      1177	d-demangle.c	FUNCTION_22
0x40021bb	              0xc3	                                     ret	      1177	d-demangle.c	FUNCTION_22
dlang_parse_template	ELSE,0:CALL,5:IF,2:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	61
0x4002c4d	              0x55	                                push rbp	      1575	d-demangle.c	FUNCTION_31
0x4002c4e	          0x4889e5	                            mov rbp, rsp	      1575	d-demangle.c	FUNCTION_31
0x4002c51	        0x4883ec30	                           sub rsp, 0x30	      1575	d-demangle.c	FUNCTION_31
0x4002c55	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1575	d-demangle.c	FUNCTION_31
0x4002c59	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1575	d-demangle.c	FUNCTION_31
0x4002c5d	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1575	d-demangle.c	FUNCTION_31
0x4002c61	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1576	d-demangle.c	FUNCTION_31
0x4002c65	        0x488945f8	                mov qword [rbp - 8], rax	      1576	d-demangle.c	FUNCTION_31
0x4002c69	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4002c6d	        0x4883c003	                              add rax, 3	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4002c71	           0xfb600	                   movzx eax, byte [rax]	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4002c74	           0xfbec0	                           movsx eax, al	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4002c77	           0xfb6c0	                           movzx eax, al	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4002c7a	            0x4898	                                    cdqe	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4002c7c	     0xfb784000000	             movzx eax, word [rax + rax]	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4002c84	           0xfb7c0	                           movzx eax, ax	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4002c87	          0x83e004	                              and eax, 4	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4002c8a	            0x85c0	                           test eax, eax	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4002c8c	            0x740f	                            je 0x4002c9d	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4002c8e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4002c92	        0x4883c003	                              add rax, 3	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4002c96	           0xfb600	                   movzx eax, byte [rax]	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4002c99	            0x3c30	                            cmp al, 0x30	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4002c9b	            0x750a	                           jne 0x4002ca7	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4002c9d	      0xb800000000	                              mov eax, 0	      1591	d-demangle.c	FUNCTION_31	IF_1
0x4002ca2	      0xe980000000	                           jmp 0x4002d27	      1591	d-demangle.c	FUNCTION_31	IF_1
0x4002ca7	      0x488345e003	               add qword [rbp - 0x20], 3	      1593	d-demangle.c	FUNCTION_31
0x4002cac	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x4002cb0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x4002cb4	      0xba03000000	                              mov edx, 3	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x4002cb9	          0x4889ce	                            mov rsi, rcx	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x4002cbc	          0x4889c7	                            mov rdi, rax	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x4002cbf	      0xe888e8ffff	               call sym.dlang_identifier	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x4002cc4	        0x488945e0	             mov qword [rbp - 0x20], rax	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x4002cc8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1599	d-demangle.c	FUNCTION_31	CALL_3
0x4002ccc	      0xbe00000000	                              mov esi, 0	      1599	d-demangle.c	FUNCTION_31	CALL_3
0x4002cd1	          0x4889c7	                            mov rdi, rax	      1599	d-demangle.c	FUNCTION_31	CALL_3
0x4002cd4	      0xe870d5ffff	                  call sym.string_append	      1599	d-demangle.c	FUNCTION_31	CALL_3
0x4002cd9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1600	d-demangle.c	FUNCTION_31	CALL_4
0x4002cdd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1600	d-demangle.c	FUNCTION_31	CALL_4
0x4002ce1	          0x4889d6	                            mov rsi, rdx	      1600	d-demangle.c	FUNCTION_31	CALL_4
0x4002ce4	          0x4889c7	                            mov rdi, rax	      1600	d-demangle.c	FUNCTION_31	CALL_4
0x4002ce7	      0xe8d9fdffff	            call sym.dlang_template_args	      1600	d-demangle.c	FUNCTION_31	CALL_4
0x4002cec	        0x488945e0	             mov qword [rbp - 0x20], rax	      1600	d-demangle.c	FUNCTION_31	CALL_4
0x4002cf0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4002cf4	      0xbe00000000	                              mov esi, 0	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4002cf9	          0x4889c7	                            mov rdi, rax	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4002cfc	      0xe848d5ffff	                  call sym.string_append	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4002d01	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1604	d-demangle.c	FUNCTION_31	IF_2
0x4002d06	            0x741b	                            je 0x4002d23	      1604	d-demangle.c	FUNCTION_31	IF_2
0x4002d08	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1604	d-demangle.c	FUNCTION_31	IF_2
0x4002d0c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1604	d-demangle.c	FUNCTION_31	IF_2
0x4002d10	          0x4829c2	                            sub rdx, rax	      1604	d-demangle.c	FUNCTION_31	IF_2
0x4002d13	          0x4889d0	                            mov rax, rdx	      1604	d-demangle.c	FUNCTION_31	IF_2
0x4002d16	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1604	d-demangle.c	FUNCTION_31	IF_2
0x4002d1a	            0x7407	                            je 0x4002d23	      1604	d-demangle.c	FUNCTION_31	IF_2
0x4002d1c	      0xb800000000	                              mov eax, 0	      1605	d-demangle.c	FUNCTION_31	IF_2
0x4002d21	            0xeb04	                           jmp 0x4002d27	      1605	d-demangle.c	FUNCTION_31	IF_2
0x4002d23	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1607	d-demangle.c	FUNCTION_31
0x4002d27	              0xc9	                                   leave	      1608	d-demangle.c	FUNCTION_31
0x4002d28	              0xc3	                                     ret	      1608	d-demangle.c	FUNCTION_31
string_need	ELSE,1:CALL,2:IF,3:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	79
0x4000040	              0x55	                                push rbp	        59	d-demangle.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        59	d-demangle.c	FUNCTION_1
0x4000044	        0x4883ec20	                           sub rsp, 0x20	        59	d-demangle.c	FUNCTION_1
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	        59	d-demangle.c	FUNCTION_1
0x400004c	          0x8975e4	             mov dword [rbp - 0x1c], esi	        59	d-demangle.c	FUNCTION_1
0x400004f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000053	          0x488b00	                    mov rax, qword [rax]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000056	          0x4885c0	                           test rax, rax	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000059	            0x754f	                           jne 0x40000aa	        62	d-demangle.c	FUNCTION_1	IF_1
0x400005b	        0x837de41f	           cmp dword [rbp - 0x1c], 0x1f 	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x400005f	            0x7f07	                            jg 0x4000068	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4000061	    0xc745e4200000	           mov dword [rbp - 0x1c], 0x20 	        66	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4000068	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400006b	            0x4898	                                    cdqe	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400006d	          0x4889c7	                            mov rdi, rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000070	      0xe800000000	                          call 0x4000075	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000075	          0x4889c2	                            mov rdx, rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000078	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400007c	          0x488910	                    mov qword [rax], rdx	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400007f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000083	          0x488b10	                    mov rdx, qword [rax]	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000086	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400008a	        0x48895008	                mov qword [rax + 8], rdx	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400008e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000092	          0x488b10	                    mov rdx, qword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000095	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000098	            0x4898	                                    cdqe	        69	d-demangle.c	FUNCTION_1	IF_1
0x400009a	          0x4801c2	                            add rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x400009d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40000a1	        0x48895010	             mov qword [rax + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x40000a5	      0xe994000000	                           jmp 0x400013e	        80	d-demangle.c	FUNCTION_1
0x40000aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000ae	        0x488b4010	            mov rax, qword [rax + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000b2	          0x4889c2	                            mov rdx, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000b9	        0x488b4008	                mov rax, qword [rax + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000bd	          0x4829c2	                            sub rdx, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000c0	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000c3	            0x4898	                                    cdqe	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000c5	          0x4839c2	                            cmp rdx, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000c8	            0x7d74	                           jge 0x400013e	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000ce	        0x488b4008	                mov rax, qword [rax + 8]	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000d2	          0x4889c2	                            mov rdx, rax	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000d9	          0x488b00	                    mov rax, qword [rax]	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000dc	          0x4829c2	                            sub rdx, rax	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000df	          0x4889d0	                            mov rax, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000e2	          0x8945fc	                mov dword [rbp - 4], eax	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000e5	          0x8b45fc	                mov eax, dword [rbp - 4]	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000e8	           0x145e4	             add dword [rbp - 0x1c], eax	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000eb	          0xd165e4	               shl dword [rbp - 0x1c], 1	        75	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40000ee	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40000f1	          0x4863d0	                         movsxd rdx, eax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40000f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40000f8	          0x488b00	                    mov rax, qword [rax]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40000fb	          0x4889d6	                            mov rsi, rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40000fe	          0x4889c7	                            mov rdi, rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000101	      0xe800000000	                          call 0x4000106	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000106	          0x4889c2	                            mov rdx, rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000109	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400010d	          0x488910	                    mov qword [rax], rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000110	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000114	          0x488b10	                    mov rdx, qword [rax]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000117	          0x8b45fc	                mov eax, dword [rbp - 4]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400011a	            0x4898	                                    cdqe	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400011c	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400011f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000123	        0x48895008	                mov qword [rax + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000127	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400012b	          0x488b10	                    mov rdx, qword [rax]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400012e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000131	            0x4898	                                    cdqe	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000133	          0x4801c2	                            add rdx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000136	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400013a	        0x48895010	             mov qword [rax + 0x10], rdx	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400013e	              0x90	                                     nop	        80	d-demangle.c	FUNCTION_1
0x400013f	              0xc9	                                   leave	        80	d-demangle.c	FUNCTION_1
0x4000140	              0xc3	                                     ret	        80	d-demangle.c	FUNCTION_1
string_prependn	ELSE,0:CALL,2:IF,1:SWITCH,0:functions,0:FOR,1:WHILE,0:DO,0	48
0x4000313	              0x55	                                push rbp	       139	d-demangle.c	FUNCTION_8
0x4000314	          0x4889e5	                            mov rbp, rsp	       139	d-demangle.c	FUNCTION_8
0x4000317	        0x4883ec30	                           sub rsp, 0x30	       139	d-demangle.c	FUNCTION_8
0x400031b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       139	d-demangle.c	FUNCTION_8
0x400031f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       139	d-demangle.c	FUNCTION_8
0x4000323	          0x8955dc	             mov dword [rbp - 0x24], edx	       139	d-demangle.c	FUNCTION_8
0x4000326	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       142	d-demangle.c	FUNCTION_8	IF_1
0x400032a	            0x747f	                            je 0x40003ab	       142	d-demangle.c	FUNCTION_8	IF_1
0x400032c	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       144	d-demangle.c	FUNCTION_8	IF_1	CALL_1
0x400032f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       144	d-demangle.c	FUNCTION_8	IF_1	CALL_1
0x4000333	            0x89d6	                            mov esi, edx	       144	d-demangle.c	FUNCTION_8	IF_1	CALL_1
0x4000335	          0x4889c7	                            mov rdi, rax	       144	d-demangle.c	FUNCTION_8	IF_1	CALL_1
0x4000338	      0xe803fdffff	                    call sym.string_need	       144	d-demangle.c	FUNCTION_8	IF_1	CALL_1
0x400033d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x4000341	        0x488b4008	                mov rax, qword [rax + 8]	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x4000345	        0x4883e801	                              sub rax, 1	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x4000349	        0x488945f8	                mov qword [rbp - 8], rax	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x400034d	            0xeb1b	                           jmp 0x400036a	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x400034f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       147	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x4000352	          0x4863d0	                         movsxd rdx, eax	       147	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x4000355	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x4000359	          0x4801c2	                            add rdx, rax	       147	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x400035c	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x4000360	           0xfb600	                   movzx eax, byte [rax]	       147	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x4000363	            0x8802	                      mov byte [rdx], al	       147	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x4000365	      0x48836df801	                  sub qword [rbp - 8], 1	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x400036a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x400036e	          0x488b00	                    mov rax, qword [rax]	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x4000371	        0x483b45f8	                cmp rax, qword [rbp - 8]	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x4000375	            0x76d8	                           jbe 0x400034f	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x4000377	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       149	d-demangle.c	FUNCTION_8	IF_1	CALL_2
0x400037a	          0x4863d0	                         movsxd rdx, eax	       149	d-demangle.c	FUNCTION_8	IF_1	CALL_2
0x400037d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	d-demangle.c	FUNCTION_8	IF_1	CALL_2
0x4000381	          0x488b00	                    mov rax, qword [rax]	       149	d-demangle.c	FUNCTION_8	IF_1	CALL_2
0x4000384	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       149	d-demangle.c	FUNCTION_8	IF_1	CALL_2
0x4000388	          0x4889ce	                            mov rsi, rcx	       149	d-demangle.c	FUNCTION_8	IF_1	CALL_2
0x400038b	          0x4889c7	                            mov rdi, rax	       149	d-demangle.c	FUNCTION_8	IF_1	CALL_2
0x400038e	      0xe800000000	                          call 0x4000393	       149	d-demangle.c	FUNCTION_8	IF_1	CALL_2
0x4000393	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       150	d-demangle.c	FUNCTION_8	IF_1
0x4000397	        0x488b5008	                mov rdx, qword [rax + 8]	       150	d-demangle.c	FUNCTION_8	IF_1
0x400039b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       150	d-demangle.c	FUNCTION_8	IF_1
0x400039e	            0x4898	                                    cdqe	       150	d-demangle.c	FUNCTION_8	IF_1
0x40003a0	          0x4801c2	                            add rdx, rax	       150	d-demangle.c	FUNCTION_8	IF_1
0x40003a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       150	d-demangle.c	FUNCTION_8	IF_1
0x40003a7	        0x48895008	                mov qword [rax + 8], rdx	       150	d-demangle.c	FUNCTION_8	IF_1
0x40003ab	              0x90	                                     nop	       152	d-demangle.c	FUNCTION_8
0x40003ac	              0xc9	                                   leave	       152	d-demangle.c	FUNCTION_8
0x40003ad	              0xc3	                                     ret	       152	d-demangle.c	FUNCTION_8
dlang_parse_structlit	ELSE,0:CALL,6:IF,3:SWITCH,0:functions,0:FOR,0:WHILE,1:DO,0	61
0x4002384	              0x55	                                push rbp	      1232	d-demangle.c	FUNCTION_25
0x4002385	          0x4889e5	                            mov rbp, rsp	      1232	d-demangle.c	FUNCTION_25
0x4002388	        0x4883ec30	                           sub rsp, 0x30	      1232	d-demangle.c	FUNCTION_25
0x400238c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1232	d-demangle.c	FUNCTION_25
0x4002390	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1232	d-demangle.c	FUNCTION_25
0x4002394	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1232	d-demangle.c	FUNCTION_25
0x4002398	    0x64488b042528	                mov rax, qword fs:[0x28]	      1232	d-demangle.c	FUNCTION_25
0x40023a1	        0x488945f8	                mov qword [rbp - 8], rax	      1232	d-demangle.c	FUNCTION_25
0x40023a5	            0x31c0	                            xor eax, eax	      1232	d-demangle.c	FUNCTION_25
0x40023a7	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      1235	d-demangle.c	FUNCTION_25	CALL_1
0x40023ab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1235	d-demangle.c	FUNCTION_25	CALL_1
0x40023af	          0x4889d6	                            mov rsi, rdx	      1235	d-demangle.c	FUNCTION_25	CALL_1
0x40023b2	          0x4889c7	                            mov rdi, rax	      1235	d-demangle.c	FUNCTION_25	CALL_1
0x40023b5	      0xe83ae0ffff	                   call sym.dlang_number	      1235	d-demangle.c	FUNCTION_25	CALL_1
0x40023ba	        0x488945e0	             mov qword [rbp - 0x20], rax	      1235	d-demangle.c	FUNCTION_25	CALL_1
0x40023be	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1236	d-demangle.c	FUNCTION_25	IF_1
0x40023c3	            0x750a	                           jne 0x40023cf	      1236	d-demangle.c	FUNCTION_25	IF_1
0x40023c5	      0xb800000000	                              mov eax, 0	      1237	d-demangle.c	FUNCTION_25	IF_1
0x40023ca	      0xe98b000000	                           jmp 0x400245a	      1237	d-demangle.c	FUNCTION_25	IF_1
0x40023cf	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1239	d-demangle.c	FUNCTION_25	IF_2
0x40023d4	            0x7413	                            je 0x40023e9	      1239	d-demangle.c	FUNCTION_25	IF_2
0x40023d6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1240	d-demangle.c	FUNCTION_25	CALL_2
0x40023da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1240	d-demangle.c	FUNCTION_25	CALL_2
0x40023de	          0x4889d6	                            mov rsi, rdx	      1240	d-demangle.c	FUNCTION_25	CALL_2
0x40023e1	          0x4889c7	                            mov rdi, rax	      1240	d-demangle.c	FUNCTION_25	CALL_2
0x40023e4	      0xe860deffff	                  call sym.string_append	      1240	d-demangle.c	FUNCTION_25	CALL_2
0x40023e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1242	d-demangle.c	FUNCTION_25	CALL_3
0x40023ed	      0xbe00000000	                              mov esi, 0	      1242	d-demangle.c	FUNCTION_25	CALL_3
0x40023f2	          0x4889c7	                            mov rdi, rax	      1242	d-demangle.c	FUNCTION_25	CALL_3
0x40023f5	      0xe84fdeffff	                  call sym.string_append	      1242	d-demangle.c	FUNCTION_25	CALL_3
0x40023fa	            0xeb38	                           jmp 0x4002434	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x40023fc	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4002400	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4002404	      0xb900000000	                              mov ecx, 0	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4002409	      0xba00000000	                              mov edx, 0	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x400240e	          0x4889c7	                            mov rdi, rax	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4002411	      0xe85a000000	                    call sym.dlang_value	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4002416	        0x488945e0	             mov qword [rbp - 0x20], rax	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x400241a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1246	d-demangle.c	FUNCTION_25	WHILE_1	IF_3
0x400241e	          0x4885c0	                           test rax, rax	      1246	d-demangle.c	FUNCTION_25	WHILE_1	IF_3
0x4002421	            0x7411	                            je 0x4002434	      1246	d-demangle.c	FUNCTION_25	WHILE_1	IF_3
0x4002423	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1247	d-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x4002427	      0xbe00000000	                              mov esi, 0	      1247	d-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x400242c	          0x4889c7	                            mov rdi, rax	      1247	d-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x400242f	      0xe815deffff	                  call sym.string_append	      1247	d-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x4002434	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4002438	        0x488d50ff	                      lea rdx, [rax - 1]	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x400243c	        0x488955f0	             mov qword [rbp - 0x10], rdx	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4002440	          0x4885c0	                           test rax, rax	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4002443	            0x75b7	                           jne 0x40023fc	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4002445	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1250	d-demangle.c	FUNCTION_25	CALL_6
0x4002449	      0xbe00000000	                              mov esi, 0	      1250	d-demangle.c	FUNCTION_25	CALL_6
0x400244e	          0x4889c7	                            mov rdi, rax	      1250	d-demangle.c	FUNCTION_25	CALL_6
0x4002451	      0xe8f3ddffff	                  call sym.string_append	      1250	d-demangle.c	FUNCTION_25	CALL_6
0x4002456	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1251	d-demangle.c	FUNCTION_25
0x400245a	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1252	d-demangle.c	FUNCTION_25
0x400245e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1252	d-demangle.c	FUNCTION_25
0x4002467	            0x7405	                            je 0x400246e	      1252	d-demangle.c	FUNCTION_25
0x4002469	      0xe800000000	                          call 0x400246e	      1252	d-demangle.c	FUNCTION_25
0x400246e	              0xc9	                                   leave	      1252	d-demangle.c	FUNCTION_25
0x400246f	              0xc3	                                     ret	      1252	d-demangle.c	FUNCTION_25
string_setlength	ELSE,0:CALL,1:IF,1:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	23
0x4000209	              0x55	                                push rbp	       110	d-demangle.c	FUNCTION_5
0x400020a	          0x4889e5	                            mov rbp, rsp	       110	d-demangle.c	FUNCTION_5
0x400020d	        0x4883ec10	                           sub rsp, 0x10	       110	d-demangle.c	FUNCTION_5
0x4000211	        0x48897df8	                mov qword [rbp - 8], rdi	       110	d-demangle.c	FUNCTION_5
0x4000215	          0x8975f4	              mov dword [rbp - 0xc], esi	       110	d-demangle.c	FUNCTION_5
0x4000218	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x400021c	          0x4889c7	                            mov rdi, rax	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x400021f	      0xe8a8ffffff	                  call sym.string_length	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4000224	            0x89c2	                            mov edx, eax	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4000226	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4000229	            0x29d0	                            sub eax, edx	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x400022b	            0x85c0	                           test eax, eax	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x400022d	            0x7917	                           jns 0x4000246	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x400022f	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	d-demangle.c	FUNCTION_5	IF_1
0x4000233	          0x488b10	                    mov rdx, qword [rax]	       113	d-demangle.c	FUNCTION_5	IF_1
0x4000236	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       113	d-demangle.c	FUNCTION_5	IF_1
0x4000239	            0x4898	                                    cdqe	       113	d-demangle.c	FUNCTION_5	IF_1
0x400023b	          0x4801c2	                            add rdx, rax	       113	d-demangle.c	FUNCTION_5	IF_1
0x400023e	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	d-demangle.c	FUNCTION_5	IF_1
0x4000242	        0x48895008	                mov qword [rax + 8], rdx	       113	d-demangle.c	FUNCTION_5	IF_1
0x4000246	              0x90	                                     nop	       115	d-demangle.c	FUNCTION_5
0x4000247	              0xc9	                                   leave	       115	d-demangle.c	FUNCTION_5
0x4000248	              0xc3	                                     ret	       115	d-demangle.c	FUNCTION_5
string_prepend	ELSE,0:CALL,2:IF,1:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	23
0x40003ae	              0x55	                                push rbp	       156	d-demangle.c	FUNCTION_9
0x40003af	          0x4889e5	                            mov rbp, rsp	       156	d-demangle.c	FUNCTION_9
0x40003b2	        0x4883ec10	                           sub rsp, 0x10	       156	d-demangle.c	FUNCTION_9
0x40003b6	        0x48897df8	                mov qword [rbp - 8], rdi	       156	d-demangle.c	FUNCTION_9
0x40003ba	        0x488975f0	             mov qword [rbp - 0x10], rsi	       156	d-demangle.c	FUNCTION_9
0x40003be	      0x48837df000	               cmp qword [rbp - 0x10], 0	       157	d-demangle.c	FUNCTION_9	IF_1
0x40003c3	            0x742c	                            je 0x40003f1	       157	d-demangle.c	FUNCTION_9	IF_1
0x40003c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       157	d-demangle.c	FUNCTION_9	IF_1
0x40003c9	           0xfb600	                   movzx eax, byte [rax]	       157	d-demangle.c	FUNCTION_9	IF_1
0x40003cc	            0x84c0	                             test al, al	       157	d-demangle.c	FUNCTION_9	IF_1
0x40003ce	            0x7421	                            je 0x40003f1	       157	d-demangle.c	FUNCTION_9	IF_1
0x40003d0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       159	d-demangle.c	FUNCTION_9	IF_1	CALL_2
0x40003d4	          0x4889c7	                            mov rdi, rax	       159	d-demangle.c	FUNCTION_9	IF_1	CALL_2
0x40003d7	      0xe800000000	                          call 0x40003dc	       159	d-demangle.c	FUNCTION_9	IF_1	CALL_2
0x40003dc	            0x89c2	                            mov edx, eax	       159	d-demangle.c	FUNCTION_9	IF_1	CALL_2
0x40003de	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       159	d-demangle.c	FUNCTION_9	IF_1	CALL_2
0x40003e2	        0x488b45f8	                mov rax, qword [rbp - 8]	       159	d-demangle.c	FUNCTION_9	IF_1	CALL_2
0x40003e6	          0x4889ce	                            mov rsi, rcx	       159	d-demangle.c	FUNCTION_9	IF_1	CALL_2
0x40003e9	          0x4889c7	                            mov rdi, rax	       159	d-demangle.c	FUNCTION_9	IF_1	CALL_2
0x40003ec	      0xe822ffffff	                call sym.string_prependn	       159	d-demangle.c	FUNCTION_9	IF_1	CALL_2
0x40003f1	              0x90	                                     nop	       161	d-demangle.c	FUNCTION_9
0x40003f2	              0xc9	                                   leave	       161	d-demangle.c	FUNCTION_9
0x40003f3	              0xc3	                                     ret	       161	d-demangle.c	FUNCTION_9
string_init	ELSE,0:CALL,0:IF,0:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	16
0x4000196	              0x55	                                push rbp	        94	d-demangle.c	FUNCTION_3
0x4000197	          0x4889e5	                            mov rbp, rsp	        94	d-demangle.c	FUNCTION_3
0x400019a	        0x48897df8	                mov qword [rbp - 8], rdi	        94	d-demangle.c	FUNCTION_3
0x400019e	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	d-demangle.c	FUNCTION_3
0x40001a2	    0x48c740100000	               mov qword [rax + 0x10], 0	        95	d-demangle.c	FUNCTION_3
0x40001aa	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	d-demangle.c	FUNCTION_3
0x40001ae	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        95	d-demangle.c	FUNCTION_3
0x40001b2	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	d-demangle.c	FUNCTION_3
0x40001b6	        0x48895008	                mov qword [rax + 8], rdx	        95	d-demangle.c	FUNCTION_3
0x40001ba	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	d-demangle.c	FUNCTION_3
0x40001be	        0x488b5008	                mov rdx, qword [rax + 8]	        95	d-demangle.c	FUNCTION_3
0x40001c2	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	d-demangle.c	FUNCTION_3
0x40001c6	          0x488910	                    mov qword [rax], rdx	        95	d-demangle.c	FUNCTION_3
0x40001c9	              0x90	                                     nop	        96	d-demangle.c	FUNCTION_3
0x40001ca	              0x5d	                                 pop rbp	        96	d-demangle.c	FUNCTION_3
0x40001cb	              0xc3	                                     ret	        96	d-demangle.c	FUNCTION_3
string_append	ELSE,0:CALL,3:IF,0:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	32
0x4000249	              0x55	                                push rbp	       119	d-demangle.c	FUNCTION_6
0x400024a	          0x4889e5	                            mov rbp, rsp	       119	d-demangle.c	FUNCTION_6
0x400024d	        0x4883ec20	                           sub rsp, 0x20	       119	d-demangle.c	FUNCTION_6
0x4000251	        0x48897de8	             mov qword [rbp - 0x18], rdi	       119	d-demangle.c	FUNCTION_6
0x4000255	        0x488975e0	             mov qword [rbp - 0x20], rsi	       119	d-demangle.c	FUNCTION_6
0x4000259	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       120	d-demangle.c	FUNCTION_6	CALL_1
0x400025d	          0x4889c7	                            mov rdi, rax	       120	d-demangle.c	FUNCTION_6	CALL_1
0x4000260	      0xe800000000	                          call 0x4000265	       120	d-demangle.c	FUNCTION_6	CALL_1
0x4000265	          0x8945fc	                mov dword [rbp - 4], eax	       120	d-demangle.c	FUNCTION_6	CALL_1
0x4000268	          0x8b55fc	                mov edx, dword [rbp - 4]	       121	d-demangle.c	FUNCTION_6	CALL_2
0x400026b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       121	d-demangle.c	FUNCTION_6	CALL_2
0x400026f	            0x89d6	                            mov esi, edx	       121	d-demangle.c	FUNCTION_6	CALL_2
0x4000271	          0x4889c7	                            mov rdi, rax	       121	d-demangle.c	FUNCTION_6	CALL_2
0x4000274	      0xe8c7fdffff	                    call sym.string_need	       121	d-demangle.c	FUNCTION_6	CALL_2
0x4000279	          0x8b45fc	                mov eax, dword [rbp - 4]	       122	d-demangle.c	FUNCTION_6	CALL_3
0x400027c	          0x4863d0	                         movsxd rdx, eax	       122	d-demangle.c	FUNCTION_6	CALL_3
0x400027f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       122	d-demangle.c	FUNCTION_6	CALL_3
0x4000283	        0x488b4008	                mov rax, qword [rax + 8]	       122	d-demangle.c	FUNCTION_6	CALL_3
0x4000287	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       122	d-demangle.c	FUNCTION_6	CALL_3
0x400028b	          0x4889ce	                            mov rsi, rcx	       122	d-demangle.c	FUNCTION_6	CALL_3
0x400028e	          0x4889c7	                            mov rdi, rax	       122	d-demangle.c	FUNCTION_6	CALL_3
0x4000291	      0xe800000000	                          call 0x4000296	       122	d-demangle.c	FUNCTION_6	CALL_3
0x4000296	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       123	d-demangle.c	FUNCTION_6
0x400029a	        0x488b5008	                mov rdx, qword [rax + 8]	       123	d-demangle.c	FUNCTION_6
0x400029e	          0x8b45fc	                mov eax, dword [rbp - 4]	       123	d-demangle.c	FUNCTION_6
0x40002a1	            0x4898	                                    cdqe	       123	d-demangle.c	FUNCTION_6
0x40002a3	          0x4801c2	                            add rdx, rax	       123	d-demangle.c	FUNCTION_6
0x40002a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       123	d-demangle.c	FUNCTION_6
0x40002aa	        0x48895008	                mov qword [rax + 8], rdx	       123	d-demangle.c	FUNCTION_6
0x40002ae	              0x90	                                     nop	       124	d-demangle.c	FUNCTION_6
0x40002af	              0xc9	                                   leave	       124	d-demangle.c	FUNCTION_6
0x40002b0	              0xc3	                                     ret	       124	d-demangle.c	FUNCTION_6
dlang_type_modifiers	ELSE,1:CALL,6:IF,2:SWITCH,1:functions,0:FOR,0:WHILE,0:DO,0	74
0x4000797	              0x55	                                push rbp	       314	d-demangle.c	FUNCTION_14
0x4000798	          0x4889e5	                            mov rbp, rsp	       314	d-demangle.c	FUNCTION_14
0x400079b	        0x4883ec10	                           sub rsp, 0x10	       314	d-demangle.c	FUNCTION_14
0x400079f	        0x48897df8	                mov qword [rbp - 8], rdi	       314	d-demangle.c	FUNCTION_14
0x40007a3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       314	d-demangle.c	FUNCTION_14
0x40007a7	      0x48837df000	               cmp qword [rbp - 0x10], 0	       315	d-demangle.c	FUNCTION_14	IF_1
0x40007ac	            0x740b	                            je 0x40007b9	       315	d-demangle.c	FUNCTION_14	IF_1
0x40007ae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       315	d-demangle.c	FUNCTION_14	IF_1
0x40007b2	           0xfb600	                   movzx eax, byte [rax]	       315	d-demangle.c	FUNCTION_14	IF_1
0x40007b5	            0x84c0	                             test al, al	       315	d-demangle.c	FUNCTION_14	IF_1
0x40007b7	            0x750a	                           jne 0x40007c3	       315	d-demangle.c	FUNCTION_14	IF_1
0x40007b9	      0xb800000000	                              mov eax, 0	       316	d-demangle.c	FUNCTION_14	IF_1
0x40007be	      0xe9d9000000	                           jmp 0x400089c	       316	d-demangle.c	FUNCTION_14	IF_1
0x40007c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40007c7	           0xfb600	                   movzx eax, byte [rax]	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40007ca	           0xfbec0	                           movsx eax, al	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40007cd	          0x83f84f	                           cmp eax, 0x4f	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40007d0	            0x7459	                            je 0x400082b	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40007d2	          0x83f84f	                           cmp eax, 0x4f	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40007d5	            0x7f0a	                            jg 0x40007e1	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40007d7	          0x83f84e	                           cmp eax, 0x4e	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40007da	            0x747a	                            je 0x4000856	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40007dc	      0xe9b7000000	                           jmp 0x4000898	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40007e1	          0x83f878	                           cmp eax, 0x78	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40007e4	            0x740a	                            je 0x40007f0	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40007e6	          0x83f879	                           cmp eax, 0x79	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40007e9	            0x7424	                            je 0x400080f	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40007eb	      0xe9a8000000	                           jmp 0x4000898	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40007f0	      0x488345f001	               add qword [rbp - 0x10], 1	       321	d-demangle.c	FUNCTION_14	SWITCH_1
0x40007f5	        0x488b45f8	                mov rax, qword [rbp - 8]	       322	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_1
0x40007f9	      0xbe00000000	                              mov esi, 0	       322	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_1
0x40007fe	          0x4889c7	                            mov rdi, rax	       322	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_1
0x4000801	      0xe843faffff	                  call sym.string_append	       322	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_1
0x4000806	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       323	d-demangle.c	FUNCTION_14	SWITCH_1
0x400080a	      0xe98d000000	                           jmp 0x400089c	       323	d-demangle.c	FUNCTION_14	SWITCH_1
0x400080f	      0x488345f001	               add qword [rbp - 0x10], 1	       325	d-demangle.c	FUNCTION_14	SWITCH_1
0x4000814	        0x488b45f8	                mov rax, qword [rbp - 8]	       326	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_2
0x4000818	      0xbe00000000	                              mov esi, 0	       326	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_2
0x400081d	          0x4889c7	                            mov rdi, rax	       326	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_2
0x4000820	      0xe824faffff	                  call sym.string_append	       326	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_2
0x4000825	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       327	d-demangle.c	FUNCTION_14	SWITCH_1
0x4000829	            0xeb71	                           jmp 0x400089c	       327	d-demangle.c	FUNCTION_14	SWITCH_1
0x400082b	      0x488345f001	               add qword [rbp - 0x10], 1	       329	d-demangle.c	FUNCTION_14	SWITCH_1
0x4000830	        0x488b45f8	                mov rax, qword [rbp - 8]	       330	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_3
0x4000834	      0xbe00000000	                              mov esi, 0	       330	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_3
0x4000839	          0x4889c7	                            mov rdi, rax	       330	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_3
0x400083c	      0xe808faffff	                  call sym.string_append	       330	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_3
0x4000841	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       331	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_4
0x4000845	        0x488b45f8	                mov rax, qword [rbp - 8]	       331	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_4
0x4000849	          0x4889d6	                            mov rsi, rdx	       331	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_4
0x400084c	          0x4889c7	                            mov rdi, rax	       331	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_4
0x400084f	      0xe843ffffff	           call sym.dlang_type_modifiers	       331	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_4
0x4000854	            0xeb46	                           jmp 0x400089c	       331	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_4
0x4000856	      0x488345f001	               add qword [rbp - 0x10], 1	       333	d-demangle.c	FUNCTION_14	SWITCH_1
0x400085b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       334	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x400085f	           0xfb600	                   movzx eax, byte [rax]	       334	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x4000862	            0x3c67	                            cmp al, 0x67	       334	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x4000864	            0x752b	                           jne 0x4000891	       334	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x4000866	      0x488345f001	               add qword [rbp - 0x10], 1	       336	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x400086b	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_5
0x400086f	      0xbe00000000	                              mov esi, 0	       337	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_5
0x4000874	          0x4889c7	                            mov rdi, rax	       337	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_5
0x4000877	      0xe8cdf9ffff	                  call sym.string_append	       337	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_5
0x400087c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       338	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_6
0x4000880	        0x488b45f8	                mov rax, qword [rbp - 8]	       338	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_6
0x4000884	          0x4889d6	                            mov rsi, rdx	       338	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_6
0x4000887	          0x4889c7	                            mov rdi, rax	       338	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_6
0x400088a	      0xe808ffffff	           call sym.dlang_type_modifiers	       338	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_6
0x400088f	            0xeb0b	                           jmp 0x400089c	       338	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_6
0x4000891	      0xb800000000	                              mov eax, 0	       341	d-demangle.c	FUNCTION_14	SWITCH_1	ELSE_1
0x4000896	            0xeb04	                           jmp 0x400089c	       341	d-demangle.c	FUNCTION_14	SWITCH_1	ELSE_1
0x4000898	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       344	d-demangle.c	FUNCTION_14	SWITCH_1	ELSE_1
0x400089c	              0xc9	                                   leave	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x400089d	              0xc3	                                     ret	       346	d-demangle.c	FUNCTION_14	ELSE_1
dlang_identifier	ELSE,5:CALL,36:IF,16:SWITCH,1:functions,0:FOR,1:WHILE,0:DO,0	350
0x400154c	              0x55	                                push rbp	       786	d-demangle.c	FUNCTION_19
0x400154d	          0x4889e5	                            mov rbp, rsp	       786	d-demangle.c	FUNCTION_19
0x4001550	        0x4883ec50	                           sub rsp, 0x50	       786	d-demangle.c	FUNCTION_19
0x4001554	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       786	d-demangle.c	FUNCTION_19
0x4001558	        0x488975c0	             mov qword [rbp - 0x40], rsi	       786	d-demangle.c	FUNCTION_19
0x400155c	          0x8955bc	             mov dword [rbp - 0x44], edx	       786	d-demangle.c	FUNCTION_19
0x400155f	    0x64488b042528	                mov rax, qword fs:[0x28]	       786	d-demangle.c	FUNCTION_19
0x4001568	        0x488945f8	                mov qword [rbp - 8], rax	       786	d-demangle.c	FUNCTION_19
0x400156c	            0x31c0	                            xor eax, eax	       786	d-demangle.c	FUNCTION_19
0x400156e	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       788	d-demangle.c	FUNCTION_19	CALL_1
0x4001572	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       788	d-demangle.c	FUNCTION_19	CALL_1
0x4001576	          0x4889d6	                            mov rsi, rdx	       788	d-demangle.c	FUNCTION_19	CALL_1
0x4001579	          0x4889c7	                            mov rdi, rax	       788	d-demangle.c	FUNCTION_19	CALL_1
0x400157c	      0xe873eeffff	                   call sym.dlang_number	       788	d-demangle.c	FUNCTION_19	CALL_1
0x4001581	        0x488945e0	             mov qword [rbp - 0x20], rax	       788	d-demangle.c	FUNCTION_19	CALL_1
0x4001585	      0x48837de000	               cmp qword [rbp - 0x20], 0	       790	d-demangle.c	FUNCTION_19	IF_1
0x400158a	            0x7409	                            je 0x4001595	       790	d-demangle.c	FUNCTION_19	IF_1
0x400158c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       790	d-demangle.c	FUNCTION_19	IF_1
0x4001590	          0x4885c0	                           test rax, rax	       790	d-demangle.c	FUNCTION_19	IF_1
0x4001593	            0x750a	                           jne 0x400159f	       790	d-demangle.c	FUNCTION_19	IF_1
0x4001595	      0xb800000000	                              mov eax, 0	       791	d-demangle.c	FUNCTION_19	IF_1
0x400159a	      0xe9c2040000	                           jmp 0x4001a61	       791	d-demangle.c	FUNCTION_19	IF_1
0x400159f	        0x837dbc04	               cmp dword [rbp - 0x44], 4	       796	d-demangle.c	FUNCTION_19	IF_2
0x40015a3	     0xf8538010000	                           jne 0x40016e1	       796	d-demangle.c	FUNCTION_19	IF_2
0x40015a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       798	d-demangle.c	FUNCTION_19	IF_2
0x40015ad	        0x488945e8	             mov qword [rbp - 0x18], rax	       798	d-demangle.c	FUNCTION_19	IF_2
0x40015b1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       800	d-demangle.c	FUNCTION_19	IF_2	CALL_2
0x40015b5	          0x4889c7	                            mov rdi, rax	       800	d-demangle.c	FUNCTION_19	IF_2	CALL_2
0x40015b8	      0xe80fecffff	                  call sym.string_length	       800	d-demangle.c	FUNCTION_19	IF_2	CALL_2
0x40015bd	          0x8945d4	             mov dword [rbp - 0x2c], eax	       800	d-demangle.c	FUNCTION_19	IF_2	CALL_2
0x40015c0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40015c4	        0x488945f0	             mov qword [rbp - 0x10], rax	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40015c8	      0xe9ff000000	                           jmp 0x40016cc	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40015cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       805	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40015d1	        0x488945c0	             mov qword [rbp - 0x40], rax	       805	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40015d5	      0x48837de800	               cmp qword [rbp - 0x18], 0	       809	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40015da	            0x7518	                           jne 0x40015f4	       809	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40015dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       811	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40015e0	        0x488945e8	             mov qword [rbp - 0x18], rax	       811	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40015e4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       812	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40015e8	        0x488945f0	             mov qword [rbp - 0x10], rax	       812	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40015ec	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       813	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40015f4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x40015f8	           0xfb600	                   movzx eax, byte [rax]	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x40015fb	           0xfbec0	                           movsx eax, al	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x40015fe	           0xfb6c0	                           movzx eax, al	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x4001601	            0x4898	                                    cdqe	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x4001603	     0xfb784000000	             movzx eax, word [rax + rax]	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x400160b	           0xfb7c0	                           movzx eax, ax	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x400160e	          0x83e004	                              and eax, 4	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x4001611	            0x85c0	                           test eax, eax	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x4001613	            0x741e	                            je 0x4001633	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x4001615	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x4001619	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x400161d	      0xba03000000	                              mov edx, 3	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x4001622	          0x4889ce	                            mov rsi, rcx	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x4001625	          0x4889c7	                            mov rdi, rax	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x4001628	      0xe807120000	          call sym.dlang_parse_qualified	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x400162d	        0x488945c0	             mov qword [rbp - 0x40], rax	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x4001631	            0xeb36	                           jmp 0x4001669	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x4001633	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x4001637	      0xba02000000	                              mov edx, 2	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x400163c	      0xbe00000000	                              mov esi, 0	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x4001641	          0x4889c7	                            mov rdi, rax	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x4001644	      0xe800000000	                          call 0x4001649	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x4001649	            0x85c0	                           test eax, eax	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x400164b	            0x751c	                           jne 0x4001669	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x400164d	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4001651	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4001655	      0xba01000000	                              mov edx, 1	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x400165a	          0x4889ce	                            mov rsi, rcx	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x400165d	          0x4889c7	                            mov rdi, rax	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4001660	      0xe8f60f0000	             call sym.dlang_parse_mangle	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4001665	        0x488945c0	             mov qword [rbp - 0x40], rax	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4001669	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x400166e	            0x741d	                            je 0x400168d	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4001670	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4001674	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4001678	          0x4829c2	                            sub rdx, rax	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x400167b	          0x4889d0	                            mov rax, rdx	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x400167e	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4001682	            0x7509	                           jne 0x400168d	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4001684	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       826	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4001688	      0xe9d4030000	                           jmp 0x4001a61	       826	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x400168d	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x4001691	    0x48ba67666666	          movabs rdx, 0x6666666666666667	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x400169b	          0x4889c8	                            mov rax, rcx	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x400169e	          0x48f7ea	                                imul rdx	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40016a1	        0x48c1fa02	                              sar rdx, 2	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40016a5	          0x4889c8	                            mov rax, rcx	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40016a8	        0x48c1f83f	                           sar rax, 0x3f	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40016ac	          0x4829c2	                            sub rdx, rax	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40016af	          0x4889d0	                            mov rax, rdx	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40016b2	        0x488945e8	             mov qword [rbp - 0x18], rax	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40016b6	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       829	d-demangle.c	FUNCTION_19	IF_2	FOR_1	CALL_7
0x40016b9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       829	d-demangle.c	FUNCTION_19	IF_2	FOR_1	CALL_7
0x40016bd	            0x89d6	                            mov esi, edx	       829	d-demangle.c	FUNCTION_19	IF_2	FOR_1	CALL_7
0x40016bf	          0x4889c7	                            mov rdi, rax	       829	d-demangle.c	FUNCTION_19	IF_2	FOR_1	CALL_7
0x40016c2	      0xe842ebffff	               call sym.string_setlength	       829	d-demangle.c	FUNCTION_19	IF_2	FOR_1	CALL_7
0x40016c7	      0x48836df001	               sub qword [rbp - 0x10], 1	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40016cc	      0x48837de000	               cmp qword [rbp - 0x20], 0	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40016d1	     0xf85f6feffff	                           jne 0x40015cd	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40016d7	      0xb800000000	                              mov eax, 0	       833	d-demangle.c	FUNCTION_19	IF_2
0x40016dc	      0xe980030000	                           jmp 0x4001a61	       833	d-demangle.c	FUNCTION_19	IF_2
0x40016e1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x40016e5	          0x4889c7	                            mov rdi, rax	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x40016e8	      0xe800000000	                          call 0x40016ed	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x40016ed	          0x4889c2	                            mov rdx, rax	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x40016f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x40016f4	          0x4839c2	                            cmp rdx, rax	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x40016f7	            0x730a	                           jae 0x4001703	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x40016f9	      0xb800000000	                              mov eax, 0	       838	d-demangle.c	FUNCTION_19	ELSE_2	IF_7
0x40016fe	      0xe95e030000	                           jmp 0x4001a61	       838	d-demangle.c	FUNCTION_19	ELSE_2	IF_7
0x4001703	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       840	d-demangle.c	FUNCTION_19	ELSE_2
0x4001707	        0x488945c0	             mov qword [rbp - 0x40], rax	       840	d-demangle.c	FUNCTION_19	ELSE_2
0x400170b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x400170f	        0x4883f804	                              cmp rax, 4	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4001713	            0x7e54	                           jle 0x4001769	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4001715	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4001719	           0xfb600	                   movzx eax, byte [rax]	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x400171c	            0x3c5f	                            cmp al, 0x5f	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x400171e	            0x7549	                           jne 0x4001769	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4001720	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4001724	        0x4883c001	                              add rax, 1	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4001728	           0xfb600	                   movzx eax, byte [rax]	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x400172b	            0x3c5f	                            cmp al, 0x5f	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x400172d	            0x753a	                           jne 0x4001769	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x400172f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4001733	        0x4883c002	                              add rax, 2	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4001737	           0xfb600	                   movzx eax, byte [rax]	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x400173a	            0x3c54	                            cmp al, 0x54	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x400173c	            0x740f	                            je 0x400174d	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x400173e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4001742	        0x4883c002	                              add rax, 2	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4001746	           0xfb600	                   movzx eax, byte [rax]	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4001749	            0x3c55	                            cmp al, 0x55	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x400174b	            0x751c	                           jne 0x4001769	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x400174d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       845	d-demangle.c	FUNCTION_19	ELSE_2	CALL_9
0x4001751	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       845	d-demangle.c	FUNCTION_19	ELSE_2	CALL_9
0x4001755	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       845	d-demangle.c	FUNCTION_19	ELSE_2	CALL_9
0x4001759	          0x4889ce	                            mov rsi, rcx	       845	d-demangle.c	FUNCTION_19	ELSE_2	CALL_9
0x400175c	          0x4889c7	                            mov rdi, rax	       845	d-demangle.c	FUNCTION_19	ELSE_2	CALL_9
0x400175f	      0xe8e9140000	           call sym.dlang_parse_template	       845	d-demangle.c	FUNCTION_19	ELSE_2	CALL_9
0x4001764	      0xe9f8020000	                           jmp 0x4001a61	       845	d-demangle.c	FUNCTION_19	ELSE_2	CALL_9
0x4001769	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x400176d	        0x4883e806	                              sub rax, 6	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001771	        0x4883f806	                              cmp rax, 6	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001775	     0xf87c1020000	                            ja 0x4001a3c	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x400177b	    0x488b04c50000	                  mov rax, qword [rax*8]	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001783	            0xffe0	                                 jmp rax	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001785	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001789	          0x4889c2	                            mov rdx, rax	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x400178c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001790	      0xbe00000000	                              mov esi, 0	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001795	          0x4889c7	                            mov rdi, rax	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001798	      0xe800000000	                          call 0x400179d	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x400179d	            0x85c0	                           test eax, eax	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x400179f	            0x7522	                           jne 0x40017c3	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40017a1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       853	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_11
0x40017a5	      0xbe00000000	                              mov esi, 0	       853	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_11
0x40017aa	          0x4889c7	                            mov rdi, rax	       853	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_11
0x40017ad	      0xe897eaffff	                  call sym.string_append	       853	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_11
0x40017b2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       854	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9
0x40017b6	        0x480145c0	            add qword [rbp - 0x40], rax 	       854	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9
0x40017ba	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       855	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9
0x40017be	      0xe99e020000	                           jmp 0x4001a61	       855	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9
0x40017c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x40017c7	          0x4889c2	                            mov rdx, rax	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x40017ca	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x40017ce	      0xbe00000000	                              mov esi, 0	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x40017d3	          0x4889c7	                            mov rdi, rax	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x40017d6	      0xe800000000	                          call 0x40017db	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x40017db	            0x85c0	                           test eax, eax	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x40017dd	            0x7522	                           jne 0x4001801	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x40017df	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       860	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_13
0x40017e3	      0xbe00000000	                              mov esi, 0	       860	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_13
0x40017e8	          0x4889c7	                            mov rdi, rax	       860	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_13
0x40017eb	      0xe859eaffff	                  call sym.string_append	       860	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_13
0x40017f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       861	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10
0x40017f4	        0x480145c0	            add qword [rbp - 0x40], rax 	       861	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10
0x40017f8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       862	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10
0x40017fc	      0xe960020000	                           jmp 0x4001a61	       862	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10
0x4001801	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001805	        0x4883c001	                              add rax, 1	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001809	          0x4889c2	                            mov rdx, rax	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x400180c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001810	      0xbe00000000	                              mov esi, 0	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001815	          0x4889c7	                            mov rdi, rax	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001818	      0xe800000000	                          call 0x400181d	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x400181d	            0x85c0	                           test eax, eax	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x400181f	            0x753f	                           jne 0x4001860	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001821	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       867	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_15
0x4001825	      0xbe00000000	                              mov esi, 0	       867	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_15
0x400182a	          0x4889c7	                            mov rdi, rax	       867	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_15
0x400182d	      0xe87cebffff	                 call sym.string_prepend	       867	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_15
0x4001832	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       868	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_17
0x4001836	          0x4889c7	                            mov rdi, rax	       868	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_17
0x4001839	      0xe88ee9ffff	                  call sym.string_length	       868	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_17
0x400183e	          0x8d50ff	                      lea edx, [rax - 1]	       868	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_17
0x4001841	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       868	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_17
0x4001845	            0x89d6	                            mov esi, edx	       868	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_17
0x4001847	          0x4889c7	                            mov rdi, rax	       868	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_17
0x400184a	      0xe8bae9ffff	               call sym.string_setlength	       868	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_17
0x400184f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       869	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11
0x4001853	        0x480145c0	            add qword [rbp - 0x40], rax 	       869	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11
0x4001857	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       870	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11
0x400185b	      0xe901020000	                           jmp 0x4001a61	       870	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11
0x4001860	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4001864	        0x4883c001	                              add rax, 1	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4001868	          0x4889c2	                            mov rdx, rax	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x400186b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x400186f	      0xbe00000000	                              mov esi, 0	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4001874	          0x4889c7	                            mov rdi, rax	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4001877	      0xe800000000	                          call 0x400187c	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x400187c	            0x85c0	                           test eax, eax	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x400187e	     0xf85ab010000	                           jne 0x4001a2f	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4001884	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       875	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_19
0x4001888	      0xbe00000000	                              mov esi, 0	       875	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_19
0x400188d	          0x4889c7	                            mov rdi, rax	       875	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_19
0x4001890	      0xe819ebffff	                 call sym.string_prepend	       875	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_19
0x4001895	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       876	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_21
0x4001899	          0x4889c7	                            mov rdi, rax	       876	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_21
0x400189c	      0xe82be9ffff	                  call sym.string_length	       876	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_21
0x40018a1	          0x8d50ff	                      lea edx, [rax - 1]	       876	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_21
0x40018a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       876	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_21
0x40018a8	            0x89d6	                            mov esi, edx	       876	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_21
0x40018aa	          0x4889c7	                            mov rdi, rax	       876	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_21
0x40018ad	      0xe857e9ffff	               call sym.string_setlength	       876	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_21
0x40018b2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       877	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12
0x40018b6	        0x480145c0	            add qword [rbp - 0x40], rax 	       877	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12
0x40018ba	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       878	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12
0x40018be	      0xe99e010000	                           jmp 0x4001a61	       878	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12
0x40018c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40018c7	        0x4883c001	                              add rax, 1	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40018cb	          0x4889c2	                            mov rdx, rax	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40018ce	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40018d2	      0xbe00000000	                              mov esi, 0	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40018d7	          0x4889c7	                            mov rdi, rax	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40018da	      0xe800000000	                          call 0x40018df	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40018df	            0x85c0	                           test eax, eax	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40018e1	     0xf854b010000	                           jne 0x4001a32	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40018e7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       886	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_23
0x40018eb	      0xbe00000000	                              mov esi, 0	       886	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_23
0x40018f0	          0x4889c7	                            mov rdi, rax	       886	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_23
0x40018f3	      0xe8b6eaffff	                 call sym.string_prepend	       886	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_23
0x40018f8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       887	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_25
0x40018fc	          0x4889c7	                            mov rdi, rax	       887	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_25
0x40018ff	      0xe8c8e8ffff	                  call sym.string_length	       887	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_25
0x4001904	          0x8d50ff	                      lea edx, [rax - 1]	       887	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_25
0x4001907	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       887	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_25
0x400190b	            0x89d6	                            mov esi, edx	       887	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_25
0x400190d	          0x4889c7	                            mov rdi, rax	       887	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_25
0x4001910	      0xe8f4e8ffff	               call sym.string_setlength	       887	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_25
0x4001915	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       888	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13
0x4001919	        0x480145c0	            add qword [rbp - 0x40], rax 	       888	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13
0x400191d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       889	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13
0x4001921	      0xe93b010000	                           jmp 0x4001a61	       889	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13
0x4001926	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x400192a	        0x4883c003	                              add rax, 3	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x400192e	          0x4889c2	                            mov rdx, rax	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x4001931	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x4001935	      0xbe00000000	                              mov esi, 0	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x400193a	          0x4889c7	                            mov rdi, rax	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x400193d	      0xe800000000	                          call 0x4001942	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x4001942	            0x85c0	                           test eax, eax	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x4001944	     0xf85eb000000	                           jne 0x4001a35	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x400194a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       897	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_27
0x400194e	      0xbe00000000	                              mov esi, 0	       897	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_27
0x4001953	          0x4889c7	                            mov rdi, rax	       897	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_27
0x4001956	      0xe8eee8ffff	                  call sym.string_append	       897	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_27
0x400195b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       898	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14
0x400195f	        0x4883c003	                              add rax, 3	       898	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14
0x4001963	        0x480145c0	            add qword [rbp - 0x40], rax 	       898	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14
0x4001967	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       899	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14
0x400196b	      0xe9f1000000	                           jmp 0x4001a61	       899	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14
0x4001970	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001974	        0x4883c001	                              add rax, 1	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001978	          0x4889c2	                            mov rdx, rax	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x400197b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x400197f	      0xbe00000000	                              mov esi, 0	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001984	          0x4889c7	                            mov rdi, rax	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001987	      0xe800000000	                          call 0x400198c	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x400198c	            0x85c0	                           test eax, eax	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x400198e	     0xf85a4000000	                           jne 0x4001a38	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001994	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       907	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_29
0x4001998	      0xbe00000000	                              mov esi, 0	       907	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_29
0x400199d	          0x4889c7	                            mov rdi, rax	       907	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_29
0x40019a0	      0xe809eaffff	                 call sym.string_prepend	       907	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_29
0x40019a5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       908	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_31
0x40019a9	          0x4889c7	                            mov rdi, rax	       908	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_31
0x40019ac	      0xe81be8ffff	                  call sym.string_length	       908	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_31
0x40019b1	          0x8d50ff	                      lea edx, [rax - 1]	       908	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_31
0x40019b4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       908	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_31
0x40019b8	            0x89d6	                            mov esi, edx	       908	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_31
0x40019ba	          0x4889c7	                            mov rdi, rax	       908	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_31
0x40019bd	      0xe847e8ffff	               call sym.string_setlength	       908	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_31
0x40019c2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       909	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15
0x40019c6	        0x480145c0	            add qword [rbp - 0x40], rax 	       909	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15
0x40019ca	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       910	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15
0x40019ce	      0xe98e000000	                           jmp 0x4001a61	       910	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15
0x40019d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x40019d7	        0x4883c001	                              add rax, 1	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x40019db	          0x4889c2	                            mov rdx, rax	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x40019de	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x40019e2	      0xbe00000000	                              mov esi, 0	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x40019e7	          0x4889c7	                            mov rdi, rax	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x40019ea	      0xe800000000	                          call 0x40019ef	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x40019ef	            0x85c0	                           test eax, eax	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x40019f1	            0x7548	                           jne 0x4001a3b	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x40019f3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       918	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_33
0x40019f7	      0xbe00000000	                              mov esi, 0	       918	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_33
0x40019fc	          0x4889c7	                            mov rdi, rax	       918	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_33
0x40019ff	      0xe8aae9ffff	                 call sym.string_prepend	       918	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_33
0x4001a04	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       919	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_35
0x4001a08	          0x4889c7	                            mov rdi, rax	       919	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_35
0x4001a0b	      0xe8bce7ffff	                  call sym.string_length	       919	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_35
0x4001a10	          0x8d50ff	                      lea edx, [rax - 1]	       919	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_35
0x4001a13	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       919	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_35
0x4001a17	            0x89d6	                            mov esi, edx	       919	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_35
0x4001a19	          0x4889c7	                            mov rdi, rax	       919	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_35
0x4001a1c	      0xe8e8e7ffff	               call sym.string_setlength	       919	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_35
0x4001a21	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       920	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16
0x4001a25	        0x480145c0	            add qword [rbp - 0x40], rax 	       920	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16
0x4001a29	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       921	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16
0x4001a2d	            0xeb32	                           jmp 0x4001a61	       921	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16
0x4001a2f	              0x90	                                     nop	       880	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001a30	            0xeb0a	                           jmp 0x4001a3c	       880	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001a32	              0x90	                                     nop	       891	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001a33	            0xeb07	                           jmp 0x4001a3c	       891	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001a35	              0x90	                                     nop	       901	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001a36	            0xeb04	                           jmp 0x4001a3c	       901	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001a38	              0x90	                                     nop	       912	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001a39	            0xeb01	                           jmp 0x4001a3c	       912	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001a3b	              0x90	                                     nop	       923	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001a3c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x4001a40	            0x89c2	                            mov edx, eax	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x4001a42	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x4001a46	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x4001a4a	          0x4889ce	                            mov rsi, rcx	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x4001a4d	          0x4889c7	                            mov rdi, rax	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x4001a50	      0xe85ce8ffff	                 call sym.string_appendn	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x4001a55	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       927	d-demangle.c	FUNCTION_19	ELSE_2
0x4001a59	        0x480145c0	            add qword [rbp - 0x40], rax 	       927	d-demangle.c	FUNCTION_19	ELSE_2
0x4001a5d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       930	d-demangle.c	FUNCTION_19
0x4001a61	        0x488b4df8	                mov rcx, qword [rbp - 8]	       931	d-demangle.c	FUNCTION_19
0x4001a65	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       931	d-demangle.c	FUNCTION_19
0x4001a6e	            0x7405	                            je 0x4001a75	       931	d-demangle.c	FUNCTION_19
0x4001a70	      0xe800000000	                          call 0x4001a75	       931	d-demangle.c	FUNCTION_19
0x4001a75	              0xc9	                                   leave	       931	d-demangle.c	FUNCTION_19
0x4001a76	              0xc3	                                     ret	       931	d-demangle.c	FUNCTION_19
dlang_parse_tuple	ELSE,0:CALL,5:IF,2:SWITCH,0:functions,0:FOR,0:WHILE,1:DO,0	52
0x4002a01	              0x55	                                push rbp	      1488	d-demangle.c	FUNCTION_29
0x4002a02	          0x4889e5	                            mov rbp, rsp	      1488	d-demangle.c	FUNCTION_29
0x4002a05	        0x4883ec20	                           sub rsp, 0x20	      1488	d-demangle.c	FUNCTION_29
0x4002a09	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1488	d-demangle.c	FUNCTION_29
0x4002a0d	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1488	d-demangle.c	FUNCTION_29
0x4002a11	    0x64488b042528	                mov rax, qword fs:[0x28]	      1488	d-demangle.c	FUNCTION_29
0x4002a1a	        0x488945f8	                mov qword [rbp - 8], rax	      1488	d-demangle.c	FUNCTION_29
0x4002a1e	            0x31c0	                            xor eax, eax	      1488	d-demangle.c	FUNCTION_29
0x4002a20	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      1491	d-demangle.c	FUNCTION_29	CALL_1
0x4002a24	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1491	d-demangle.c	FUNCTION_29	CALL_1
0x4002a28	          0x4889d6	                            mov rsi, rdx	      1491	d-demangle.c	FUNCTION_29	CALL_1
0x4002a2b	          0x4889c7	                            mov rdi, rax	      1491	d-demangle.c	FUNCTION_29	CALL_1
0x4002a2e	      0xe8c1d9ffff	                   call sym.dlang_number	      1491	d-demangle.c	FUNCTION_29	CALL_1
0x4002a33	        0x488945e0	             mov qword [rbp - 0x20], rax	      1491	d-demangle.c	FUNCTION_29	CALL_1
0x4002a37	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1492	d-demangle.c	FUNCTION_29	IF_1
0x4002a3c	            0x7507	                           jne 0x4002a45	      1492	d-demangle.c	FUNCTION_29	IF_1
0x4002a3e	      0xb800000000	                              mov eax, 0	      1493	d-demangle.c	FUNCTION_29	IF_1
0x4002a43	            0xeb6a	                           jmp 0x4002aaf	      1493	d-demangle.c	FUNCTION_29	IF_1
0x4002a45	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1495	d-demangle.c	FUNCTION_29	CALL_2
0x4002a49	      0xbe00000000	                              mov esi, 0	      1495	d-demangle.c	FUNCTION_29	CALL_2
0x4002a4e	          0x4889c7	                            mov rdi, rax	      1495	d-demangle.c	FUNCTION_29	CALL_2
0x4002a51	      0xe8f3d7ffff	                  call sym.string_append	      1495	d-demangle.c	FUNCTION_29	CALL_2
0x4002a56	            0xeb31	                           jmp 0x4002a89	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x4002a58	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x4002a5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x4002a60	          0x4889d6	                            mov rsi, rdx	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x4002a63	          0x4889c7	                            mov rdi, rax	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x4002a66	      0xe80ae3ffff	                     call sym.dlang_type	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x4002a6b	        0x488945e0	             mov qword [rbp - 0x20], rax	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x4002a6f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1500	d-demangle.c	FUNCTION_29	WHILE_1	IF_2
0x4002a73	          0x4885c0	                           test rax, rax	      1500	d-demangle.c	FUNCTION_29	WHILE_1	IF_2
0x4002a76	            0x7411	                            je 0x4002a89	      1500	d-demangle.c	FUNCTION_29	WHILE_1	IF_2
0x4002a78	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1501	d-demangle.c	FUNCTION_29	WHILE_1	CALL_4
0x4002a7c	      0xbe00000000	                              mov esi, 0	      1501	d-demangle.c	FUNCTION_29	WHILE_1	CALL_4
0x4002a81	          0x4889c7	                            mov rdi, rax	      1501	d-demangle.c	FUNCTION_29	WHILE_1	CALL_4
0x4002a84	      0xe8c0d7ffff	                  call sym.string_append	      1501	d-demangle.c	FUNCTION_29	WHILE_1	CALL_4
0x4002a89	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x4002a8d	        0x488d50ff	                      lea rdx, [rax - 1]	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x4002a91	        0x488955f0	             mov qword [rbp - 0x10], rdx	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x4002a95	          0x4885c0	                           test rax, rax	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x4002a98	            0x75be	                           jne 0x4002a58	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x4002a9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1504	d-demangle.c	FUNCTION_29	CALL_5
0x4002a9e	      0xbe00000000	                              mov esi, 0	      1504	d-demangle.c	FUNCTION_29	CALL_5
0x4002aa3	          0x4889c7	                            mov rdi, rax	      1504	d-demangle.c	FUNCTION_29	CALL_5
0x4002aa6	      0xe89ed7ffff	                  call sym.string_append	      1504	d-demangle.c	FUNCTION_29	CALL_5
0x4002aab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1505	d-demangle.c	FUNCTION_29
0x4002aaf	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1506	d-demangle.c	FUNCTION_29
0x4002ab3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1506	d-demangle.c	FUNCTION_29
0x4002abc	            0x7405	                            je 0x4002ac3	      1506	d-demangle.c	FUNCTION_29
0x4002abe	      0xe800000000	                          call 0x4002ac3	      1506	d-demangle.c	FUNCTION_29
0x4002ac3	              0xc9	                                   leave	      1506	d-demangle.c	FUNCTION_29
0x4002ac4	              0xc3	                                     ret	      1506	d-demangle.c	FUNCTION_29
string_length	ELSE,0:CALL,0:IF,1:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	20
0x40001cc	              0x55	                                push rbp	       100	d-demangle.c	FUNCTION_4
0x40001cd	          0x4889e5	                            mov rbp, rsp	       100	d-demangle.c	FUNCTION_4
0x40001d0	        0x48897df8	                mov qword [rbp - 8], rdi	       100	d-demangle.c	FUNCTION_4
0x40001d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       101	d-demangle.c	FUNCTION_4	IF_1
0x40001d8	        0x488b5008	                mov rdx, qword [rax + 8]	       101	d-demangle.c	FUNCTION_4	IF_1
0x40001dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       101	d-demangle.c	FUNCTION_4	IF_1
0x40001e0	          0x488b00	                    mov rax, qword [rax]	       101	d-demangle.c	FUNCTION_4	IF_1
0x40001e3	          0x4839c2	                            cmp rdx, rax	       101	d-demangle.c	FUNCTION_4	IF_1
0x40001e6	            0x7507	                           jne 0x40001ef	       101	d-demangle.c	FUNCTION_4	IF_1
0x40001e8	      0xb800000000	                              mov eax, 0	       103	d-demangle.c	FUNCTION_4	IF_1
0x40001ed	            0xeb18	                           jmp 0x4000207	       103	d-demangle.c	FUNCTION_4	IF_1
0x40001ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	d-demangle.c	FUNCTION_4
0x40001f3	        0x488b4008	                mov rax, qword [rax + 8]	       105	d-demangle.c	FUNCTION_4
0x40001f7	          0x4889c2	                            mov rdx, rax	       105	d-demangle.c	FUNCTION_4
0x40001fa	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	d-demangle.c	FUNCTION_4
0x40001fe	          0x488b00	                    mov rax, qword [rax]	       105	d-demangle.c	FUNCTION_4
0x4000201	          0x4829c2	                            sub rdx, rax	       105	d-demangle.c	FUNCTION_4
0x4000204	          0x4889d0	                            mov rax, rdx	       105	d-demangle.c	FUNCTION_4
0x4000207	              0x5d	                                 pop rbp	       106	d-demangle.c	FUNCTION_4
0x4000208	              0xc3	                                     ret	       106	d-demangle.c	FUNCTION_4
dlang_parse_arrayliteral	ELSE,0:CALL,5:IF,2:SWITCH,0:functions,0:FOR,0:WHILE,1:DO,0	53
0x40021bc	              0x55	                                push rbp	      1183	d-demangle.c	FUNCTION_23
0x40021bd	          0x4889e5	                            mov rbp, rsp	      1183	d-demangle.c	FUNCTION_23
0x40021c0	        0x4883ec20	                           sub rsp, 0x20	      1183	d-demangle.c	FUNCTION_23
0x40021c4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1183	d-demangle.c	FUNCTION_23
0x40021c8	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1183	d-demangle.c	FUNCTION_23
0x40021cc	    0x64488b042528	                mov rax, qword fs:[0x28]	      1183	d-demangle.c	FUNCTION_23
0x40021d5	        0x488945f8	                mov qword [rbp - 8], rax	      1183	d-demangle.c	FUNCTION_23
0x40021d9	            0x31c0	                            xor eax, eax	      1183	d-demangle.c	FUNCTION_23
0x40021db	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      1186	d-demangle.c	FUNCTION_23	CALL_1
0x40021df	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1186	d-demangle.c	FUNCTION_23	CALL_1
0x40021e3	          0x4889d6	                            mov rsi, rdx	      1186	d-demangle.c	FUNCTION_23	CALL_1
0x40021e6	          0x4889c7	                            mov rdi, rax	      1186	d-demangle.c	FUNCTION_23	CALL_1
0x40021e9	      0xe806e2ffff	                   call sym.dlang_number	      1186	d-demangle.c	FUNCTION_23	CALL_1
0x40021ee	        0x488945e0	             mov qword [rbp - 0x20], rax	      1186	d-demangle.c	FUNCTION_23	CALL_1
0x40021f2	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1187	d-demangle.c	FUNCTION_23	IF_1
0x40021f7	            0x7507	                           jne 0x4002200	      1187	d-demangle.c	FUNCTION_23	IF_1
0x40021f9	      0xb800000000	                              mov eax, 0	      1188	d-demangle.c	FUNCTION_23	IF_1
0x40021fe	            0xeb71	                           jmp 0x4002271	      1188	d-demangle.c	FUNCTION_23	IF_1
0x4002200	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1190	d-demangle.c	FUNCTION_23	CALL_2
0x4002204	      0xbe00000000	                              mov esi, 0	      1190	d-demangle.c	FUNCTION_23	CALL_2
0x4002209	          0x4889c7	                            mov rdi, rax	      1190	d-demangle.c	FUNCTION_23	CALL_2
0x400220c	      0xe838e0ffff	                  call sym.string_append	      1190	d-demangle.c	FUNCTION_23	CALL_2
0x4002211	            0xeb38	                           jmp 0x400224b	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x4002213	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x4002217	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x400221b	      0xb900000000	                              mov ecx, 0	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x4002220	      0xba00000000	                              mov edx, 0	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x4002225	          0x4889c7	                            mov rdi, rax	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x4002228	      0xe843020000	                    call sym.dlang_value	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x400222d	        0x488945e0	             mov qword [rbp - 0x20], rax	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x4002231	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1194	d-demangle.c	FUNCTION_23	WHILE_1	IF_2
0x4002235	          0x4885c0	                           test rax, rax	      1194	d-demangle.c	FUNCTION_23	WHILE_1	IF_2
0x4002238	            0x7411	                            je 0x400224b	      1194	d-demangle.c	FUNCTION_23	WHILE_1	IF_2
0x400223a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1195	d-demangle.c	FUNCTION_23	WHILE_1	CALL_4
0x400223e	      0xbe00000000	                              mov esi, 0	      1195	d-demangle.c	FUNCTION_23	WHILE_1	CALL_4
0x4002243	          0x4889c7	                            mov rdi, rax	      1195	d-demangle.c	FUNCTION_23	WHILE_1	CALL_4
0x4002246	      0xe8fedfffff	                  call sym.string_append	      1195	d-demangle.c	FUNCTION_23	WHILE_1	CALL_4
0x400224b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x400224f	        0x488d50ff	                      lea rdx, [rax - 1]	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x4002253	        0x488955f0	             mov qword [rbp - 0x10], rdx	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x4002257	          0x4885c0	                           test rax, rax	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x400225a	            0x75b7	                           jne 0x4002213	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x400225c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1198	d-demangle.c	FUNCTION_23	CALL_5
0x4002260	      0xbe00000000	                              mov esi, 0	      1198	d-demangle.c	FUNCTION_23	CALL_5
0x4002265	          0x4889c7	                            mov rdi, rax	      1198	d-demangle.c	FUNCTION_23	CALL_5
0x4002268	      0xe8dcdfffff	                  call sym.string_append	      1198	d-demangle.c	FUNCTION_23	CALL_5
0x400226d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1199	d-demangle.c	FUNCTION_23
0x4002271	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1200	d-demangle.c	FUNCTION_23
0x4002275	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1200	d-demangle.c	FUNCTION_23
0x400227e	            0x7405	                            je 0x4002285	      1200	d-demangle.c	FUNCTION_23
0x4002280	      0xe800000000	                          call 0x4002285	      1200	d-demangle.c	FUNCTION_23
0x4002285	              0xc9	                                   leave	      1200	d-demangle.c	FUNCTION_23
0x4002286	              0xc3	                                     ret	      1200	d-demangle.c	FUNCTION_23
dlang_call_convention_p	ELSE,0:CALL,0:IF,0:SWITCH,1:functions,0:FOR,0:WHILE,0:DO,0	17
0x4000689	              0x55	                                push rbp	       258	d-demangle.c	FUNCTION_12
0x400068a	          0x4889e5	                            mov rbp, rsp	       258	d-demangle.c	FUNCTION_12
0x400068d	        0x48897df8	                mov qword [rbp - 8], rdi	       258	d-demangle.c	FUNCTION_12
0x4000691	        0x488b45f8	                mov rax, qword [rbp - 8]	       259	d-demangle.c	FUNCTION_12	SWITCH_1
0x4000695	           0xfb600	                   movzx eax, byte [rax]	       259	d-demangle.c	FUNCTION_12	SWITCH_1
0x4000698	           0xfbec0	                           movsx eax, al	       259	d-demangle.c	FUNCTION_12	SWITCH_1
0x400069b	          0x83e846	                           sub eax, 0x46	       259	d-demangle.c	FUNCTION_12	SWITCH_1
0x400069e	          0x83f813	                           cmp eax, 0x13	       259	d-demangle.c	FUNCTION_12	SWITCH_1
0x40006a1	            0x7713	                            ja 0x40006b6	       259	d-demangle.c	FUNCTION_12	SWITCH_1
0x40006a3	            0x89c0	                            mov eax, eax	       259	d-demangle.c	FUNCTION_12	SWITCH_1
0x40006a5	    0x488b04c50000	                  mov rax, qword [rax*8]	       259	d-demangle.c	FUNCTION_12	SWITCH_1
0x40006ad	            0xffe0	                                 jmp rax	       259	d-demangle.c	FUNCTION_12	SWITCH_1
0x40006af	      0xb801000000	                              mov eax, 1	       263	d-demangle.c	FUNCTION_12	SWITCH_1
0x40006b4	            0xeb05	                           jmp 0x40006bb	       263	d-demangle.c	FUNCTION_12	SWITCH_1
0x40006b6	      0xb800000000	                              mov eax, 0	       266	d-demangle.c	FUNCTION_12	SWITCH_1
0x40006bb	              0x5d	                                 pop rbp	       268	d-demangle.c	FUNCTION_12
0x40006bc	              0xc3	                                     ret	       268	d-demangle.c	FUNCTION_12
dlang_demangle	ELSE,1:CALL,8:IF,5:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	71
0x4002d29	              0x55	                                push rbp	      1615	d-demangle.c	FUNCTION_32
0x4002d2a	          0x4889e5	                            mov rbp, rsp	      1615	d-demangle.c	FUNCTION_32
0x4002d2d	        0x4883ec40	                           sub rsp, 0x40	      1615	d-demangle.c	FUNCTION_32
0x4002d31	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1615	d-demangle.c	FUNCTION_32
0x4002d35	          0x8975c4	             mov dword [rbp - 0x3c], esi	      1615	d-demangle.c	FUNCTION_32
0x4002d38	    0x64488b042528	                mov rax, qword fs:[0x28]	      1615	d-demangle.c	FUNCTION_32
0x4002d41	        0x488945f8	                mov qword [rbp - 8], rax	      1615	d-demangle.c	FUNCTION_32
0x4002d45	            0x31c0	                            xor eax, eax	      1615	d-demangle.c	FUNCTION_32
0x4002d47	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1617	d-demangle.c	FUNCTION_32
0x4002d4f	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1619	d-demangle.c	FUNCTION_32	IF_1
0x4002d54	            0x740b	                            je 0x4002d61	      1619	d-demangle.c	FUNCTION_32	IF_1
0x4002d56	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1619	d-demangle.c	FUNCTION_32	IF_1
0x4002d5a	           0xfb600	                   movzx eax, byte [rax]	      1619	d-demangle.c	FUNCTION_32	IF_1
0x4002d5d	            0x84c0	                             test al, al	      1619	d-demangle.c	FUNCTION_32	IF_1
0x4002d5f	            0x750a	                           jne 0x4002d6b	      1619	d-demangle.c	FUNCTION_32	IF_1
0x4002d61	      0xb800000000	                              mov eax, 0	      1620	d-demangle.c	FUNCTION_32	IF_1
0x4002d66	      0xe9b5000000	                           jmp 0x4002e20	      1620	d-demangle.c	FUNCTION_32	IF_1
0x4002d6b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4002d6f	      0xba02000000	                              mov edx, 2	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4002d74	      0xbe00000000	                              mov esi, 0	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4002d79	          0x4889c7	                            mov rdi, rax	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4002d7c	      0xe800000000	                          call 0x4002d81	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4002d81	            0x85c0	                           test eax, eax	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4002d83	            0x740a	                            je 0x4002d8f	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4002d85	      0xb800000000	                              mov eax, 0	      1623	d-demangle.c	FUNCTION_32	IF_2
0x4002d8a	      0xe991000000	                           jmp 0x4002e20	      1623	d-demangle.c	FUNCTION_32	IF_2
0x4002d8f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1625	d-demangle.c	FUNCTION_32	CALL_2
0x4002d93	          0x4889c7	                            mov rdi, rax	      1625	d-demangle.c	FUNCTION_32	CALL_2
0x4002d96	      0xe8fbd3ffff	                    call sym.string_init	      1625	d-demangle.c	FUNCTION_32	CALL_2
0x4002d9b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4002d9f	      0xbe00000000	                              mov esi, 0	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4002da4	          0x4889c7	                            mov rdi, rax	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4002da7	      0xe800000000	                          call 0x4002dac	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4002dac	            0x85c0	                           test eax, eax	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4002dae	            0x7513	                           jne 0x4002dc3	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4002db0	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1629	d-demangle.c	FUNCTION_32	IF_3	CALL_4
0x4002db4	      0xbe00000000	                              mov esi, 0	      1629	d-demangle.c	FUNCTION_32	IF_3	CALL_4
0x4002db9	          0x4889c7	                            mov rdi, rax	      1629	d-demangle.c	FUNCTION_32	IF_3	CALL_4
0x4002dbc	      0xe888d4ffff	                  call sym.string_append	      1629	d-demangle.c	FUNCTION_32	IF_3	CALL_4
0x4002dc1	            0xeb29	                           jmp 0x4002dec	      1629	d-demangle.c	FUNCTION_32	IF_3	CALL_4
0x4002dc3	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4002dc7	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4002dcb	      0xba00000000	                              mov edx, 0	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4002dd0	          0x4889ce	                            mov rsi, rcx	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4002dd3	          0x4889c7	                            mov rdi, rax	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4002dd6	      0xe880f8ffff	             call sym.dlang_parse_mangle	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4002ddb	          0x4885c0	                           test rax, rax	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4002dde	            0x750c	                           jne 0x4002dec	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4002de0	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1634	d-demangle.c	FUNCTION_32	ELSE_1	CALL_6
0x4002de4	          0x4889c7	                            mov rdi, rax	      1634	d-demangle.c	FUNCTION_32	ELSE_1	CALL_6
0x4002de7	      0xe855d3ffff	                  call sym.string_delete	      1634	d-demangle.c	FUNCTION_32	ELSE_1	CALL_6
0x4002dec	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1637	d-demangle.c	FUNCTION_32	IF_5	CALL_7
0x4002df0	          0x4889c7	                            mov rdi, rax	      1637	d-demangle.c	FUNCTION_32	IF_5	CALL_7
0x4002df3	      0xe8d4d3ffff	                  call sym.string_length	      1637	d-demangle.c	FUNCTION_32	IF_5	CALL_7
0x4002df8	            0x85c0	                           test eax, eax	      1637	d-demangle.c	FUNCTION_32	IF_5	CALL_7
0x4002dfa	            0x7e20	                           jle 0x4002e1c	      1637	d-demangle.c	FUNCTION_32	IF_5	CALL_7
0x4002dfc	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1639	d-demangle.c	FUNCTION_32	IF_5	CALL_8
0x4002e00	      0xbe01000000	                              mov esi, 1	      1639	d-demangle.c	FUNCTION_32	IF_5	CALL_8
0x4002e05	          0x4889c7	                            mov rdi, rax	      1639	d-demangle.c	FUNCTION_32	IF_5	CALL_8
0x4002e08	      0xe833d2ffff	                    call sym.string_need	      1639	d-demangle.c	FUNCTION_32	IF_5	CALL_8
0x4002e0d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1640	d-demangle.c	FUNCTION_32	IF_5
0x4002e11	          0xc60000	                       mov byte [rax], 0	      1640	d-demangle.c	FUNCTION_32	IF_5
0x4002e14	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1641	d-demangle.c	FUNCTION_32	IF_5
0x4002e18	        0x488945d8	             mov qword [rbp - 0x28], rax	      1641	d-demangle.c	FUNCTION_32	IF_5
0x4002e1c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1644	d-demangle.c	FUNCTION_32
0x4002e20	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1645	d-demangle.c	FUNCTION_32
0x4002e24	    0x644833142528	                xor rdx, qword fs:[0x28]	      1645	d-demangle.c	FUNCTION_32
0x4002e2d	            0x7405	                            je 0x4002e34	      1645	d-demangle.c	FUNCTION_32
0x4002e2f	      0xe800000000	                          call 0x4002e34	      1645	d-demangle.c	FUNCTION_32
0x4002e34	              0xc9	                                   leave	      1645	d-demangle.c	FUNCTION_32
0x4002e35	              0xc3	                                     ret	      1645	d-demangle.c	FUNCTION_32
dlang_hexdigit	ELSE,2:CALL,6:IF,3:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	114
0x4000512	              0x55	                                push rbp	       230	d-demangle.c	FUNCTION_11
0x4000513	          0x4889e5	                            mov rbp, rsp	       230	d-demangle.c	FUNCTION_11
0x4000516	        0x48897de8	             mov qword [rbp - 0x18], rdi	       230	d-demangle.c	FUNCTION_11
0x400051a	        0x488975e0	             mov qword [rbp - 0x20], rsi	       230	d-demangle.c	FUNCTION_11
0x400051e	      0x48837de800	               cmp qword [rbp - 0x18], 0	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000523	            0x744a	                            je 0x400056f	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000525	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000529	           0xfb600	                   movzx eax, byte [rax]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x400052c	           0xfbec0	                           movsx eax, al	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x400052f	           0xfb6c0	                           movzx eax, al	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000532	            0x4898	                                    cdqe	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000534	     0xfb784000000	             movzx eax, word [rax + rax]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x400053c	           0xfb7c0	                           movzx eax, ax	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x400053f	      0x2500010000	                          and eax, 0x100	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000544	            0x85c0	                           test eax, eax	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000546	            0x7427	                            je 0x400056f	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000548	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x400054c	        0x4883c001	                              add rax, 1	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000550	           0xfb600	                   movzx eax, byte [rax]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000553	           0xfbec0	                           movsx eax, al	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000556	           0xfb6c0	                           movzx eax, al	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000559	            0x4898	                                    cdqe	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x400055b	     0xfb784000000	             movzx eax, word [rax + rax]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000563	           0xfb7c0	                           movzx eax, ax	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000566	      0x2500010000	                          and eax, 0x100	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x400056b	            0x85c0	                           test eax, eax	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x400056d	            0x750a	                           jne 0x4000579	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x400056f	      0xb800000000	                              mov eax, 0	       235	d-demangle.c	FUNCTION_11	IF_1
0x4000574	      0xe90e010000	                           jmp 0x4000687	       235	d-demangle.c	FUNCTION_11	IF_1
0x4000579	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       237	d-demangle.c	FUNCTION_11
0x400057d	           0xfb600	                   movzx eax, byte [rax]	       237	d-demangle.c	FUNCTION_11
0x4000580	          0x8845ff	                  mov byte [rbp - 1], al	       237	d-demangle.c	FUNCTION_11
0x4000583	         0xfbe45ff	               movsx eax, byte [rbp - 1]	       238	d-demangle.c	FUNCTION_11	IF_2	CALL_3
0x4000587	           0xfb6c0	                           movzx eax, al	       238	d-demangle.c	FUNCTION_11	IF_2	CALL_3
0x400058a	            0x4898	                                    cdqe	       238	d-demangle.c	FUNCTION_11	IF_2	CALL_3
0x400058c	     0xfb784000000	             movzx eax, word [rax + rax]	       238	d-demangle.c	FUNCTION_11	IF_2	CALL_3
0x4000594	           0xfb7c0	                           movzx eax, ax	       238	d-demangle.c	FUNCTION_11	IF_2	CALL_3
0x4000597	          0x83e004	                              and eax, 4	       238	d-demangle.c	FUNCTION_11	IF_2	CALL_3
0x400059a	            0x85c0	                           test eax, eax	       238	d-demangle.c	FUNCTION_11	IF_2	CALL_3
0x400059c	            0x753e	                           jne 0x40005dc	       238	d-demangle.c	FUNCTION_11	IF_2	CALL_3
0x400059e	         0xfb655ff	               movzx edx, byte [rbp - 1]	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005a2	         0xfbe45ff	               movsx eax, byte [rbp - 1]	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005a6	           0xfb6c0	                           movzx eax, al	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005a9	            0x4898	                                    cdqe	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005ab	     0xfb784000000	             movzx eax, word [rax + rax]	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005b3	           0xfb7c0	                           movzx eax, ax	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005b6	      0x2580000000	                           and eax, 0x80	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005bb	            0x85c0	                           test eax, eax	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005bd	            0x7407	                            je 0x40005c6	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005bf	      0xb841000000	                           mov eax, 0x41	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005c4	            0xeb05	                           jmp 0x40005cb	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005c6	      0xb861000000	                           mov eax, 0x61	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005cb	            0x29c2	                            sub edx, eax	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005cd	            0x89d0	                            mov eax, edx	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005cf	          0x83c00a	                            add eax, 0xa	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005d2	            0x89c2	                            mov edx, eax	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005d4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005d8	            0x8810	                      mov byte [rax], dl	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005da	            0xeb0f	                           jmp 0x40005eb	       239	d-demangle.c	FUNCTION_11	CALL_4
0x40005dc	         0xfb645ff	               movzx eax, byte [rbp - 1]	       241	d-demangle.c	FUNCTION_11	ELSE_1
0x40005e0	          0x83e830	                           sub eax, 0x30	       241	d-demangle.c	FUNCTION_11	ELSE_1
0x40005e3	            0x89c2	                            mov edx, eax	       241	d-demangle.c	FUNCTION_11	ELSE_1
0x40005e5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       241	d-demangle.c	FUNCTION_11	ELSE_1
0x40005e9	            0x8810	                      mov byte [rax], dl	       241	d-demangle.c	FUNCTION_11	ELSE_1
0x40005eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       243	d-demangle.c	FUNCTION_11
0x40005ef	         0xfb64001	               movzx eax, byte [rax + 1]	       243	d-demangle.c	FUNCTION_11
0x40005f3	          0x8845ff	                  mov byte [rbp - 1], al	       243	d-demangle.c	FUNCTION_11
0x40005f6	         0xfbe45ff	               movsx eax, byte [rbp - 1]	       244	d-demangle.c	FUNCTION_11	IF_3	CALL_5
0x40005fa	           0xfb6c0	                           movzx eax, al	       244	d-demangle.c	FUNCTION_11	IF_3	CALL_5
0x40005fd	            0x4898	                                    cdqe	       244	d-demangle.c	FUNCTION_11	IF_3	CALL_5
0x40005ff	     0xfb784000000	             movzx eax, word [rax + rax]	       244	d-demangle.c	FUNCTION_11	IF_3	CALL_5
0x4000607	           0xfb7c0	                           movzx eax, ax	       244	d-demangle.c	FUNCTION_11	IF_3	CALL_5
0x400060a	          0x83e004	                              and eax, 4	       244	d-demangle.c	FUNCTION_11	IF_3	CALL_5
0x400060d	            0x85c0	                           test eax, eax	       244	d-demangle.c	FUNCTION_11	IF_3	CALL_5
0x400060f	            0x754f	                           jne 0x4000660	       244	d-demangle.c	FUNCTION_11	IF_3	CALL_5
0x4000611	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000615	           0xfb600	                   movzx eax, byte [rax]	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000618	           0xfbec0	                           movsx eax, al	       245	d-demangle.c	FUNCTION_11	CALL_6
0x400061b	          0xc1e004	                              shl eax, 4	       245	d-demangle.c	FUNCTION_11	CALL_6
0x400061e	            0x89c1	                            mov ecx, eax	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000620	         0xfb655ff	               movzx edx, byte [rbp - 1]	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000624	         0xfbe45ff	               movsx eax, byte [rbp - 1]	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000628	           0xfb6c0	                           movzx eax, al	       245	d-demangle.c	FUNCTION_11	CALL_6
0x400062b	            0x4898	                                    cdqe	       245	d-demangle.c	FUNCTION_11	CALL_6
0x400062d	     0xfb784000000	             movzx eax, word [rax + rax]	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000635	           0xfb7c0	                           movzx eax, ax	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000638	      0x2580000000	                           and eax, 0x80	       245	d-demangle.c	FUNCTION_11	CALL_6
0x400063d	            0x85c0	                           test eax, eax	       245	d-demangle.c	FUNCTION_11	CALL_6
0x400063f	            0x7407	                            je 0x4000648	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000641	      0xb841000000	                           mov eax, 0x41	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000646	            0xeb05	                           jmp 0x400064d	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000648	      0xb861000000	                           mov eax, 0x61	       245	d-demangle.c	FUNCTION_11	CALL_6
0x400064d	            0x29c2	                            sub edx, eax	       245	d-demangle.c	FUNCTION_11	CALL_6
0x400064f	            0x89d0	                            mov eax, edx	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000651	          0x83c00a	                            add eax, 0xa	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000654	             0x9c1	                             or ecx, eax	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000656	            0x89ca	                            mov edx, ecx	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000658	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       245	d-demangle.c	FUNCTION_11	CALL_6
0x400065c	            0x8810	                      mov byte [rax], dl	       245	d-demangle.c	FUNCTION_11	CALL_6
0x400065e	            0xeb1e	                           jmp 0x400067e	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000660	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000664	           0xfb600	                   movzx eax, byte [rax]	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000667	           0xfbec0	                           movsx eax, al	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x400066a	          0xc1e004	                              shl eax, 4	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x400066d	            0x89c2	                            mov edx, eax	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x400066f	         0xfb645ff	               movzx eax, byte [rbp - 1]	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000673	          0x83e830	                           sub eax, 0x30	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000676	             0x9c2	                             or edx, eax	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000678	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x400067c	            0x8810	                      mov byte [rax], dl	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x400067e	      0x488345e802	               add qword [rbp - 0x18], 2	       249	d-demangle.c	FUNCTION_11
0x4000683	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       251	d-demangle.c	FUNCTION_11
0x4000687	              0x5d	                                 pop rbp	       252	d-demangle.c	FUNCTION_11
0x4000688	              0xc3	                                     ret	       252	d-demangle.c	FUNCTION_11
dlang_template_args	ELSE,0:CALL,8:IF,2:SWITCH,2:functions,0:FOR,0:WHILE,1:DO,0	104
0x4002ac5	              0x55	                                push rbp	      1512	d-demangle.c	FUNCTION_30
0x4002ac6	          0x4889e5	                            mov rbp, rsp	      1512	d-demangle.c	FUNCTION_30
0x4002ac9	        0x4883ec40	                           sub rsp, 0x40	      1512	d-demangle.c	FUNCTION_30
0x4002acd	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1512	d-demangle.c	FUNCTION_30
0x4002ad1	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1512	d-demangle.c	FUNCTION_30
0x4002ad5	    0x64488b042528	                mov rax, qword fs:[0x28]	      1512	d-demangle.c	FUNCTION_30
0x4002ade	        0x488945f8	                mov qword [rbp - 8], rax	      1512	d-demangle.c	FUNCTION_30
0x4002ae2	            0x31c0	                            xor eax, eax	      1512	d-demangle.c	FUNCTION_30
0x4002ae4	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1513	d-demangle.c	FUNCTION_30
0x4002aec	      0xe92c010000	                           jmp 0x4002c1d	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4002af1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1517	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x4002af5	           0xfb600	                   movzx eax, byte [rax]	      1517	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x4002af8	           0xfbec0	                           movsx eax, al	      1517	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x4002afb	          0x83f85a	                           cmp eax, 0x5a	      1517	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x4002afe	            0x750e	                           jne 0x4002b0e	      1517	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x4002b00	      0x488345c001	               add qword [rbp - 0x40], 1	      1520	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x4002b05	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1521	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x4002b09	      0xe929010000	                           jmp 0x4002c37	      1521	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x4002b0e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1524	d-demangle.c	FUNCTION_30	WHILE_1	IF_1
0x4002b12	        0x488d5001	                      lea rdx, [rax + 1]	      1524	d-demangle.c	FUNCTION_30	WHILE_1	IF_1
0x4002b16	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1524	d-demangle.c	FUNCTION_30	WHILE_1	IF_1
0x4002b1a	          0x4885c0	                           test rax, rax	      1524	d-demangle.c	FUNCTION_30	WHILE_1	IF_1
0x4002b1d	            0x7411	                            je 0x4002b30	      1524	d-demangle.c	FUNCTION_30	WHILE_1	IF_1
0x4002b1f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1525	d-demangle.c	FUNCTION_30	WHILE_1	CALL_1
0x4002b23	      0xbe00000000	                              mov esi, 0	      1525	d-demangle.c	FUNCTION_30	WHILE_1	CALL_1
0x4002b28	          0x4889c7	                            mov rdi, rax	      1525	d-demangle.c	FUNCTION_30	WHILE_1	CALL_1
0x4002b2b	      0xe819d7ffff	                  call sym.string_append	      1525	d-demangle.c	FUNCTION_30	WHILE_1	CALL_1
0x4002b30	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1528	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x4002b34	           0xfb600	                   movzx eax, byte [rax]	      1528	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x4002b37	            0x3c48	                            cmp al, 0x48	      1528	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x4002b39	            0x7505	                           jne 0x4002b40	      1528	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x4002b3b	      0x488345c001	               add qword [rbp - 0x40], 1	      1529	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x4002b40	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002b44	           0xfb600	                   movzx eax, byte [rax]	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002b47	           0xfbec0	                           movsx eax, al	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002b4a	          0x83f854	                           cmp eax, 0x54	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002b4d	            0x7434	                            je 0x4002b83	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002b4f	          0x83f856	                           cmp eax, 0x56	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002b52	            0x744d	                            je 0x4002ba1	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002b54	          0x83f853	                           cmp eax, 0x53	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002b57	     0xf85b9000000	                           jne 0x4002c16	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002b5d	      0x488345c001	               add qword [rbp - 0x40], 1	      1534	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002b62	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x4002b66	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x4002b6a	      0xba04000000	                              mov edx, 4	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x4002b6f	          0x4889ce	                            mov rsi, rcx	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x4002b72	          0x4889c7	                            mov rdi, rax	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x4002b75	      0xe8d2e9ffff	               call sym.dlang_identifier	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x4002b7a	        0x488945c0	             mov qword [rbp - 0x40], rax	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x4002b7e	      0xe99a000000	                           jmp 0x4002c1d	      1536	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002b83	      0x488345c001	               add qword [rbp - 0x40], 1	      1538	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002b88	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1539	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_3
0x4002b8c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1539	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_3
0x4002b90	          0x4889d6	                            mov rsi, rdx	      1539	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_3
0x4002b93	          0x4889c7	                            mov rdi, rax	      1539	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_3
0x4002b96	      0xe8dae1ffff	                     call sym.dlang_type	      1539	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_3
0x4002b9b	        0x488945c0	             mov qword [rbp - 0x40], rax	      1539	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_3
0x4002b9f	            0xeb7c	                           jmp 0x4002c1d	      1540	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002ba1	      0x488345c001	               add qword [rbp - 0x40], 1	      1547	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002ba6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1548	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002baa	           0xfb600	                   movzx eax, byte [rax]	      1548	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002bad	          0x8845d7	               mov byte [rbp - 0x29], al	      1548	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002bb0	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1552	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_4
0x4002bb4	          0x4889c7	                            mov rdi, rax	      1552	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_4
0x4002bb7	      0xe8dad5ffff	                    call sym.string_init	      1552	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_4
0x4002bbc	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1553	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_5
0x4002bc0	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1553	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_5
0x4002bc4	          0x4889d6	                            mov rsi, rdx	      1553	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_5
0x4002bc7	          0x4889c7	                            mov rdi, rax	      1553	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_5
0x4002bca	      0xe8a6e1ffff	                     call sym.dlang_type	      1553	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_5
0x4002bcf	        0x488945c0	             mov qword [rbp - 0x40], rax	      1553	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_5
0x4002bd3	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1554	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_6
0x4002bd7	      0xbe01000000	                              mov esi, 1	      1554	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_6
0x4002bdc	          0x4889c7	                            mov rdi, rax	      1554	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_6
0x4002bdf	      0xe85cd4ffff	                    call sym.string_need	      1554	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_6
0x4002be4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1555	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002be8	          0xc60000	                       mov byte [rax], 0	      1555	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002beb	         0xfbe4dd7	            movsx ecx, byte [rbp - 0x29]	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x4002bef	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x4002bf3	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x4002bf7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x4002bfb	          0x4889c7	                            mov rdi, rax	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x4002bfe	      0xe86df8ffff	                    call sym.dlang_value	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x4002c03	        0x488945c0	             mov qword [rbp - 0x40], rax	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x4002c07	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1558	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_8
0x4002c0b	          0x4889c7	                            mov rdi, rax	      1558	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_8
0x4002c0e	      0xe82ed5ffff	                  call sym.string_delete	      1558	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_8
0x4002c13	              0x90	                                     nop	      1559	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002c14	            0xeb07	                           jmp 0x4002c1d	      1559	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002c16	      0xb800000000	                              mov eax, 0	      1563	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002c1b	            0xeb1a	                           jmp 0x4002c37	      1563	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4002c1d	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4002c22	            0x740f	                            je 0x4002c33	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4002c24	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4002c28	           0xfb600	                   movzx eax, byte [rax]	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4002c2b	            0x84c0	                             test al, al	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4002c2d	     0xf85befeffff	                           jne 0x4002af1	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4002c33	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1567	d-demangle.c	FUNCTION_30
0x4002c37	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1568	d-demangle.c	FUNCTION_30
0x4002c3b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1568	d-demangle.c	FUNCTION_30
0x4002c44	            0x7405	                            je 0x4002c4b	      1568	d-demangle.c	FUNCTION_30
0x4002c46	      0xe800000000	                          call 0x4002c4b	      1568	d-demangle.c	FUNCTION_30
0x4002c4b	              0xc9	                                   leave	      1568	d-demangle.c	FUNCTION_30
0x4002c4c	              0xc3	                                     ret	      1568	d-demangle.c	FUNCTION_30
dlang_type	ELSE,2:CALL,69:IF,4:SWITCH,2:functions,0:FOR,0:WHILE,1:DO,0	490
0x4000d75	              0x55	                                push rbp	       532	d-demangle.c	FUNCTION_18
0x4000d76	          0x4889e5	                            mov rbp, rsp	       532	d-demangle.c	FUNCTION_18
0x4000d79	        0x4883ec50	                           sub rsp, 0x50	       532	d-demangle.c	FUNCTION_18
0x4000d7d	        0x48897db8	             mov qword [rbp - 0x48], rdi	       532	d-demangle.c	FUNCTION_18
0x4000d81	        0x488975b0	             mov qword [rbp - 0x50], rsi	       532	d-demangle.c	FUNCTION_18
0x4000d85	    0x64488b042528	                mov rax, qword fs:[0x28]	       532	d-demangle.c	FUNCTION_18
0x4000d8e	        0x488945f8	                mov qword [rbp - 8], rax	       532	d-demangle.c	FUNCTION_18
0x4000d92	            0x31c0	                            xor eax, eax	       532	d-demangle.c	FUNCTION_18
0x4000d94	      0x48837db000	               cmp qword [rbp - 0x50], 0	       533	d-demangle.c	FUNCTION_18	IF_1
0x4000d99	            0x740b	                            je 0x4000da6	       533	d-demangle.c	FUNCTION_18	IF_1
0x4000d9b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       533	d-demangle.c	FUNCTION_18	IF_1
0x4000d9f	           0xfb600	                   movzx eax, byte [rax]	       533	d-demangle.c	FUNCTION_18	IF_1
0x4000da2	            0x84c0	                             test al, al	       533	d-demangle.c	FUNCTION_18	IF_1
0x4000da4	            0x750a	                           jne 0x4000db0	       533	d-demangle.c	FUNCTION_18	IF_1
0x4000da6	      0xb800000000	                              mov eax, 0	       534	d-demangle.c	FUNCTION_18	IF_1
0x4000dab	      0xe986070000	                           jmp 0x4001536	       534	d-demangle.c	FUNCTION_18	IF_1
0x4000db0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000db4	           0xfb600	                   movzx eax, byte [rax]	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000db7	           0xfbec0	                           movsx eax, al	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000dba	          0x83e841	                           sub eax, 0x41	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000dbd	          0x83f839	                           cmp eax, 0x39	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000dc0	     0xf876b070000	                            ja 0x4001531	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000dc6	            0x89c0	                            mov eax, eax	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000dc8	    0x488b04c50000	                  mov rax, qword [rax*8]	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000dd0	            0xffe0	                                 jmp rax	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000dd2	      0x488345b001	               add qword [rbp - 0x50], 1	       539	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000dd7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       540	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_1
0x4000ddb	      0xbe00000000	                              mov esi, 0	       540	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_1
0x4000de0	          0x4889c7	                            mov rdi, rax	       540	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_1
0x4000de3	      0xe861f4ffff	                  call sym.string_append	       540	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_1
0x4000de8	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       541	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_2
0x4000dec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       541	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_2
0x4000df0	          0x4889d6	                            mov rsi, rdx	       541	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_2
0x4000df3	          0x4889c7	                            mov rdi, rax	       541	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_2
0x4000df6	      0xe87affffff	                     call sym.dlang_type	       541	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_2
0x4000dfb	        0x488945b0	             mov qword [rbp - 0x50], rax	       541	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_2
0x4000dff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       542	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_3
0x4000e03	      0xbe00000000	                              mov esi, 0	       542	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_3
0x4000e08	          0x4889c7	                            mov rdi, rax	       542	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_3
0x4000e0b	      0xe839f4ffff	                  call sym.string_append	       542	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_3
0x4000e10	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       543	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000e14	      0xe91d070000	                           jmp 0x4001536	       543	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000e19	      0x488345b001	               add qword [rbp - 0x50], 1	       545	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000e1e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       546	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_4
0x4000e22	      0xbe00000000	                              mov esi, 0	       546	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_4
0x4000e27	          0x4889c7	                            mov rdi, rax	       546	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_4
0x4000e2a	      0xe81af4ffff	                  call sym.string_append	       546	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_4
0x4000e2f	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       547	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_5
0x4000e33	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       547	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_5
0x4000e37	          0x4889d6	                            mov rsi, rdx	       547	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_5
0x4000e3a	          0x4889c7	                            mov rdi, rax	       547	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_5
0x4000e3d	      0xe833ffffff	                     call sym.dlang_type	       547	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_5
0x4000e42	        0x488945b0	             mov qword [rbp - 0x50], rax	       547	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_5
0x4000e46	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       548	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_6
0x4000e4a	      0xbe00000000	                              mov esi, 0	       548	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_6
0x4000e4f	          0x4889c7	                            mov rdi, rax	       548	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_6
0x4000e52	      0xe8f2f3ffff	                  call sym.string_append	       548	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_6
0x4000e57	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       549	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000e5b	      0xe9d6060000	                           jmp 0x4001536	       549	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000e60	      0x488345b001	               add qword [rbp - 0x50], 1	       551	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000e65	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       552	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_7
0x4000e69	      0xbe00000000	                              mov esi, 0	       552	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_7
0x4000e6e	          0x4889c7	                            mov rdi, rax	       552	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_7
0x4000e71	      0xe8d3f3ffff	                  call sym.string_append	       552	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_7
0x4000e76	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       553	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_8
0x4000e7a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       553	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_8
0x4000e7e	          0x4889d6	                            mov rsi, rdx	       553	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_8
0x4000e81	          0x4889c7	                            mov rdi, rax	       553	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_8
0x4000e84	      0xe8ecfeffff	                     call sym.dlang_type	       553	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_8
0x4000e89	        0x488945b0	             mov qword [rbp - 0x50], rax	       553	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_8
0x4000e8d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       554	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_9
0x4000e91	      0xbe00000000	                              mov esi, 0	       554	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_9
0x4000e96	          0x4889c7	                            mov rdi, rax	       554	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_9
0x4000e99	      0xe8abf3ffff	                  call sym.string_append	       554	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_9
0x4000e9e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       555	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000ea2	      0xe98f060000	                           jmp 0x4001536	       555	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000ea7	      0x488345b001	               add qword [rbp - 0x50], 1	       557	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000eac	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       558	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x4000eb0	           0xfb600	                   movzx eax, byte [rax]	       558	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x4000eb3	            0x3c67	                            cmp al, 0x67	       558	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x4000eb5	            0x7547	                           jne 0x4000efe	       558	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x4000eb7	      0x488345b001	               add qword [rbp - 0x50], 1	       560	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x4000ebc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       561	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_10
0x4000ec0	      0xbe00000000	                              mov esi, 0	       561	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_10
0x4000ec5	          0x4889c7	                            mov rdi, rax	       561	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_10
0x4000ec8	      0xe87cf3ffff	                  call sym.string_append	       561	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_10
0x4000ecd	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       562	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_11
0x4000ed1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       562	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_11
0x4000ed5	          0x4889d6	                            mov rsi, rdx	       562	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_11
0x4000ed8	          0x4889c7	                            mov rdi, rax	       562	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_11
0x4000edb	      0xe895feffff	                     call sym.dlang_type	       562	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_11
0x4000ee0	        0x488945b0	             mov qword [rbp - 0x50], rax	       562	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_11
0x4000ee4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       563	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_12
0x4000ee8	      0xbe00000000	                              mov esi, 0	       563	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_12
0x4000eed	          0x4889c7	                            mov rdi, rax	       563	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_12
0x4000ef0	      0xe854f3ffff	                  call sym.string_append	       563	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_12
0x4000ef5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       564	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x4000ef9	      0xe938060000	                           jmp 0x4001536	       564	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x4000efe	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       566	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x4000f02	           0xfb600	                   movzx eax, byte [rax]	       566	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x4000f05	            0x3c68	                            cmp al, 0x68	       566	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x4000f07	            0x7547	                           jne 0x4000f50	       566	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x4000f09	      0x488345b001	               add qword [rbp - 0x50], 1	       568	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x4000f0e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       569	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_13
0x4000f12	      0xbe00000000	                              mov esi, 0	       569	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_13
0x4000f17	          0x4889c7	                            mov rdi, rax	       569	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_13
0x4000f1a	      0xe82af3ffff	                  call sym.string_append	       569	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_13
0x4000f1f	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       570	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_14
0x4000f23	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       570	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_14
0x4000f27	          0x4889d6	                            mov rsi, rdx	       570	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_14
0x4000f2a	          0x4889c7	                            mov rdi, rax	       570	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_14
0x4000f2d	      0xe843feffff	                     call sym.dlang_type	       570	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_14
0x4000f32	        0x488945b0	             mov qword [rbp - 0x50], rax	       570	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_14
0x4000f36	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       571	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_15
0x4000f3a	      0xbe00000000	                              mov esi, 0	       571	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_15
0x4000f3f	          0x4889c7	                            mov rdi, rax	       571	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_15
0x4000f42	      0xe802f3ffff	                  call sym.string_append	       571	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_15
0x4000f47	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       572	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x4000f4b	      0xe9e6050000	                           jmp 0x4001536	       572	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x4000f50	      0xb800000000	                              mov eax, 0	       575	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_2
0x4000f55	      0xe9dc050000	                           jmp 0x4001536	       575	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_2
0x4000f5a	      0x488345b001	               add qword [rbp - 0x50], 1	       577	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000f5f	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       578	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_16
0x4000f63	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       578	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_16
0x4000f67	          0x4889d6	                            mov rsi, rdx	       578	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_16
0x4000f6a	          0x4889c7	                            mov rdi, rax	       578	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_16
0x4000f6d	      0xe803feffff	                     call sym.dlang_type	       578	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_16
0x4000f72	        0x488945b0	             mov qword [rbp - 0x50], rax	       578	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_16
0x4000f76	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       579	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_17
0x4000f7a	      0xbe00000000	                              mov esi, 0	       579	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_17
0x4000f7f	          0x4889c7	                            mov rdi, rax	       579	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_17
0x4000f82	      0xe8c2f2ffff	                  call sym.string_append	       579	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_17
0x4000f87	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       580	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000f8b	      0xe9a6050000	                           jmp 0x4001536	       580	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000f90	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       584	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000f98	      0x488345b001	               add qword [rbp - 0x50], 1	       585	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000f9d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       587	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000fa1	        0x488945c8	             mov qword [rbp - 0x38], rax	       587	d-demangle.c	FUNCTION_18	SWITCH_1
0x4000fa5	            0xeb0a	                           jmp 0x4000fb1	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4000fa7	      0x488345c001	               add qword [rbp - 0x40], 1	       590	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1
0x4000fac	      0x488345b001	               add qword [rbp - 0x50], 1	       591	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1
0x4000fb1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4000fb5	           0xfb600	                   movzx eax, byte [rax]	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4000fb8	           0xfbec0	                           movsx eax, al	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4000fbb	           0xfb6c0	                           movzx eax, al	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4000fbe	            0x4898	                                    cdqe	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4000fc0	     0xfb784000000	             movzx eax, word [rax + rax]	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4000fc8	           0xfb7c0	                           movzx eax, ax	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4000fcb	          0x83e004	                              and eax, 4	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4000fce	            0x85c0	                           test eax, eax	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4000fd0	            0x75d5	                           jne 0x4000fa7	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4000fd2	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x4000fd6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x4000fda	          0x4889d6	                            mov rsi, rdx	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x4000fdd	          0x4889c7	                            mov rdi, rax	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x4000fe0	      0xe890fdffff	                     call sym.dlang_type	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x4000fe5	        0x488945b0	             mov qword [rbp - 0x50], rax	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x4000fe9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       594	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_20
0x4000fed	      0xbe00000000	                              mov esi, 0	       594	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_20
0x4000ff2	          0x4889c7	                            mov rdi, rax	       594	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_20
0x4000ff5	      0xe84ff2ffff	                  call sym.string_append	       594	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_20
0x4000ffa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       595	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_21
0x4000ffe	            0x89c2	                            mov edx, eax	       595	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_21
0x4001000	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       595	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_21
0x4001004	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       595	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_21
0x4001008	          0x4889ce	                            mov rsi, rcx	       595	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_21
0x400100b	          0x4889c7	                            mov rdi, rax	       595	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_21
0x400100e	      0xe89ef2ffff	                 call sym.string_appendn	       595	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_21
0x4001013	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       596	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_22
0x4001017	      0xbe00000000	                              mov esi, 0	       596	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_22
0x400101c	          0x4889c7	                            mov rdi, rax	       596	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_22
0x400101f	      0xe825f2ffff	                  call sym.string_append	       596	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_22
0x4001024	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       597	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001028	      0xe909050000	                           jmp 0x4001536	       597	d-demangle.c	FUNCTION_18	SWITCH_1
0x400102d	      0x488345b001	               add qword [rbp - 0x50], 1	       603	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001032	        0x488d45e0	                   lea rax, [rbp - 0x20]	       605	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_23
0x4001036	          0x4889c7	                            mov rdi, rax	       605	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_23
0x4001039	      0xe858f1ffff	                    call sym.string_init	       605	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_23
0x400103e	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       606	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_24
0x4001042	        0x488d45e0	                   lea rax, [rbp - 0x20]	       606	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_24
0x4001046	          0x4889d6	                            mov rsi, rdx	       606	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_24
0x4001049	          0x4889c7	                            mov rdi, rax	       606	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_24
0x400104c	      0xe824fdffff	                     call sym.dlang_type	       606	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_24
0x4001051	        0x488945b0	             mov qword [rbp - 0x50], rax	       606	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_24
0x4001055	        0x488d45e0	                   lea rax, [rbp - 0x20]	       607	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_25
0x4001059	          0x4889c7	                            mov rdi, rax	       607	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_25
0x400105c	      0xe86bf1ffff	                  call sym.string_length	       607	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_25
0x4001061	            0x4898	                                    cdqe	       607	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_25
0x4001063	        0x488945d0	             mov qword [rbp - 0x30], rax	       607	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_25
0x4001067	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x400106b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x400106f	          0x4889d6	                            mov rsi, rdx	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x4001072	          0x4889c7	                            mov rdi, rax	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x4001075	      0xe8fbfcffff	                     call sym.dlang_type	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x400107a	        0x488945b0	             mov qword [rbp - 0x50], rax	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x400107e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       610	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_27
0x4001082	      0xbe00000000	                              mov esi, 0	       610	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_27
0x4001087	          0x4889c7	                            mov rdi, rax	       610	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_27
0x400108a	      0xe8baf1ffff	                  call sym.string_append	       610	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_27
0x400108f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       611	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_28
0x4001093	            0x89c2	                            mov edx, eax	       611	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_28
0x4001095	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       611	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_28
0x4001099	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       611	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_28
0x400109d	          0x4889ce	                            mov rsi, rcx	       611	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_28
0x40010a0	          0x4889c7	                            mov rdi, rax	       611	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_28
0x40010a3	      0xe809f2ffff	                 call sym.string_appendn	       611	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_28
0x40010a8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       612	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_29
0x40010ac	      0xbe00000000	                              mov esi, 0	       612	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_29
0x40010b1	          0x4889c7	                            mov rdi, rax	       612	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_29
0x40010b4	      0xe890f1ffff	                  call sym.string_append	       612	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_29
0x40010b9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       614	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_30
0x40010bd	          0x4889c7	                            mov rdi, rax	       614	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_30
0x40010c0	      0xe87cf0ffff	                  call sym.string_delete	       614	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_30
0x40010c5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       615	d-demangle.c	FUNCTION_18	SWITCH_1
0x40010c9	      0xe968040000	                           jmp 0x4001536	       615	d-demangle.c	FUNCTION_18	SWITCH_1
0x40010ce	      0x488345b001	               add qword [rbp - 0x50], 1	       618	d-demangle.c	FUNCTION_18	SWITCH_1
0x40010d3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       619	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_31
0x40010d7	          0x4889c7	                            mov rdi, rax	       619	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_31
0x40010da	      0xe8aaf5ffff	        call sym.dlang_call_convention_p	       619	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_31
0x40010df	            0x85c0	                           test eax, eax	       619	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_31
0x40010e1	            0x7531	                           jne 0x4001114	       619	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_31
0x40010e3	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x40010e7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x40010eb	          0x4889d6	                            mov rsi, rdx	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x40010ee	          0x4889c7	                            mov rdi, rax	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x40010f1	      0xe87ffcffff	                     call sym.dlang_type	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x40010f6	        0x488945b0	             mov qword [rbp - 0x50], rax	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x40010fa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       622	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_33
0x40010fe	      0xbe00000000	                              mov esi, 0	       622	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_33
0x4001103	          0x4889c7	                            mov rdi, rax	       622	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_33
0x4001106	      0xe83ef1ffff	                  call sym.string_append	       622	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_33
0x400110b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       623	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4
0x400110f	      0xe922040000	                           jmp 0x4001536	       623	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4
0x4001114	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       633	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_34
0x4001118	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       633	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_34
0x400111c	          0x4889d6	                            mov rsi, rdx	       633	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_34
0x400111f	          0x4889c7	                            mov rdi, rax	       633	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_34
0x4001122	      0xe8d6f8ffff	            call sym.dlang_function_type	       633	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_34
0x4001127	        0x488945b0	             mov qword [rbp - 0x50], rax	       633	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_34
0x400112b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       634	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_35
0x400112f	      0xbe00000000	                              mov esi, 0	       634	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_35
0x4001134	          0x4889c7	                            mov rdi, rax	       634	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_35
0x4001137	      0xe80df1ffff	                  call sym.string_append	       634	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_35
0x400113c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       635	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001140	      0xe9f1030000	                           jmp 0x4001536	       635	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001145	      0x488345b001	               add qword [rbp - 0x50], 1	       641	d-demangle.c	FUNCTION_18	SWITCH_1
0x400114a	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x400114e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x4001152	      0xba02000000	                              mov edx, 2	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x4001157	          0x4889ce	                            mov rsi, rcx	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x400115a	          0x4889c7	                            mov rdi, rax	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x400115d	      0xe8d2160000	          call sym.dlang_parse_qualified	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x4001162	      0xe9cf030000	                           jmp 0x4001536	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x4001167	      0x488345b001	               add qword [rbp - 0x50], 1	       647	d-demangle.c	FUNCTION_18	SWITCH_1
0x400116c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       649	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_37
0x4001170	          0x4889c7	                            mov rdi, rax	       649	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_37
0x4001173	      0xe81ef0ffff	                    call sym.string_init	       649	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_37
0x4001178	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       650	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_38
0x400117c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       650	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_38
0x4001180	          0x4889d6	                            mov rsi, rdx	       650	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_38
0x4001183	          0x4889c7	                            mov rdi, rax	       650	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_38
0x4001186	      0xe80cf6ffff	           call sym.dlang_type_modifiers	       650	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_38
0x400118b	        0x488945b0	             mov qword [rbp - 0x50], rax	       650	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_38
0x400118f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       651	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_39
0x4001193	          0x4889c7	                            mov rdi, rax	       651	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_39
0x4001196	      0xe831f0ffff	                  call sym.string_length	       651	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_39
0x400119b	            0x4898	                                    cdqe	       651	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_39
0x400119d	        0x488945d8	             mov qword [rbp - 0x28], rax	       651	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_39
0x40011a1	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x40011a5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x40011a9	          0x4889d6	                            mov rsi, rdx	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x40011ac	          0x4889c7	                            mov rdi, rax	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x40011af	      0xe849f8ffff	            call sym.dlang_function_type	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x40011b4	        0x488945b0	             mov qword [rbp - 0x50], rax	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x40011b8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       654	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_41
0x40011bc	      0xbe00000000	                              mov esi, 0	       654	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_41
0x40011c1	          0x4889c7	                            mov rdi, rax	       654	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_41
0x40011c4	      0xe880f0ffff	                  call sym.string_append	       654	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_41
0x40011c9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       655	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_42
0x40011cd	            0x89c2	                            mov edx, eax	       655	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_42
0x40011cf	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       655	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_42
0x40011d3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       655	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_42
0x40011d7	          0x4889ce	                            mov rsi, rcx	       655	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_42
0x40011da	          0x4889c7	                            mov rdi, rax	       655	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_42
0x40011dd	      0xe8cff0ffff	                 call sym.string_appendn	       655	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_42
0x40011e2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       657	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_43
0x40011e6	          0x4889c7	                            mov rdi, rax	       657	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_43
0x40011e9	      0xe853efffff	                  call sym.string_delete	       657	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_43
0x40011ee	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       658	d-demangle.c	FUNCTION_18	SWITCH_1
0x40011f2	      0xe93f030000	                           jmp 0x4001536	       658	d-demangle.c	FUNCTION_18	SWITCH_1
0x40011f7	      0x488345b001	               add qword [rbp - 0x50], 1	       661	d-demangle.c	FUNCTION_18	SWITCH_1
0x40011fc	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       662	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_44
0x4001200	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       662	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_44
0x4001204	          0x4889d6	                            mov rsi, rdx	       662	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_44
0x4001207	          0x4889c7	                            mov rdi, rax	       662	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_44
0x400120a	      0xe8f2170000	              call sym.dlang_parse_tuple	       662	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_44
0x400120f	      0xe922030000	                           jmp 0x4001536	       662	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_44
0x4001214	      0x488345b001	               add qword [rbp - 0x50], 1	       666	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001219	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       667	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_45
0x400121d	      0xbe00000000	                              mov esi, 0	       667	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_45
0x4001222	          0x4889c7	                            mov rdi, rax	       667	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_45
0x4001225	      0xe81ff0ffff	                  call sym.string_append	       667	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_45
0x400122a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       668	d-demangle.c	FUNCTION_18	SWITCH_1
0x400122e	      0xe903030000	                           jmp 0x4001536	       668	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001233	      0x488345b001	               add qword [rbp - 0x50], 1	       670	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001238	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       671	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_46
0x400123c	      0xbe00000000	                              mov esi, 0	       671	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_46
0x4001241	          0x4889c7	                            mov rdi, rax	       671	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_46
0x4001244	      0xe800f0ffff	                  call sym.string_append	       671	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_46
0x4001249	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       672	d-demangle.c	FUNCTION_18	SWITCH_1
0x400124d	      0xe9e4020000	                           jmp 0x4001536	       672	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001252	      0x488345b001	               add qword [rbp - 0x50], 1	       674	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001257	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       675	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_47
0x400125b	      0xbe00000000	                              mov esi, 0	       675	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_47
0x4001260	          0x4889c7	                            mov rdi, rax	       675	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_47
0x4001263	      0xe8e1efffff	                  call sym.string_append	       675	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_47
0x4001268	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       676	d-demangle.c	FUNCTION_18	SWITCH_1
0x400126c	      0xe9c5020000	                           jmp 0x4001536	       676	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001271	      0x488345b001	               add qword [rbp - 0x50], 1	       678	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001276	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       679	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_48
0x400127a	      0xbe00000000	                              mov esi, 0	       679	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_48
0x400127f	          0x4889c7	                            mov rdi, rax	       679	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_48
0x4001282	      0xe8c2efffff	                  call sym.string_append	       679	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_48
0x4001287	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       680	d-demangle.c	FUNCTION_18	SWITCH_1
0x400128b	      0xe9a6020000	                           jmp 0x4001536	       680	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001290	      0x488345b001	               add qword [rbp - 0x50], 1	       682	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001295	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       683	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_49
0x4001299	      0xbe00000000	                              mov esi, 0	       683	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_49
0x400129e	          0x4889c7	                            mov rdi, rax	       683	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_49
0x40012a1	      0xe8a3efffff	                  call sym.string_append	       683	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_49
0x40012a6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       684	d-demangle.c	FUNCTION_18	SWITCH_1
0x40012aa	      0xe987020000	                           jmp 0x4001536	       684	d-demangle.c	FUNCTION_18	SWITCH_1
0x40012af	      0x488345b001	               add qword [rbp - 0x50], 1	       686	d-demangle.c	FUNCTION_18	SWITCH_1
0x40012b4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       687	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_50
0x40012b8	      0xbe00000000	                              mov esi, 0	       687	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_50
0x40012bd	          0x4889c7	                            mov rdi, rax	       687	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_50
0x40012c0	      0xe884efffff	                  call sym.string_append	       687	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_50
0x40012c5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       688	d-demangle.c	FUNCTION_18	SWITCH_1
0x40012c9	      0xe968020000	                           jmp 0x4001536	       688	d-demangle.c	FUNCTION_18	SWITCH_1
0x40012ce	      0x488345b001	               add qword [rbp - 0x50], 1	       690	d-demangle.c	FUNCTION_18	SWITCH_1
0x40012d3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       691	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_51
0x40012d7	      0xbe00000000	                              mov esi, 0	       691	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_51
0x40012dc	          0x4889c7	                            mov rdi, rax	       691	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_51
0x40012df	      0xe865efffff	                  call sym.string_append	       691	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_51
0x40012e4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       692	d-demangle.c	FUNCTION_18	SWITCH_1
0x40012e8	      0xe949020000	                           jmp 0x4001536	       692	d-demangle.c	FUNCTION_18	SWITCH_1
0x40012ed	      0x488345b001	               add qword [rbp - 0x50], 1	       694	d-demangle.c	FUNCTION_18	SWITCH_1
0x40012f2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       695	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_52
0x40012f6	      0xbe00000000	                              mov esi, 0	       695	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_52
0x40012fb	          0x4889c7	                            mov rdi, rax	       695	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_52
0x40012fe	      0xe846efffff	                  call sym.string_append	       695	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_52
0x4001303	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       696	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001307	      0xe92a020000	                           jmp 0x4001536	       696	d-demangle.c	FUNCTION_18	SWITCH_1
0x400130c	      0x488345b001	               add qword [rbp - 0x50], 1	       698	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001311	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       699	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_53
0x4001315	      0xbe00000000	                              mov esi, 0	       699	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_53
0x400131a	          0x4889c7	                            mov rdi, rax	       699	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_53
0x400131d	      0xe827efffff	                  call sym.string_append	       699	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_53
0x4001322	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       700	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001326	      0xe90b020000	                           jmp 0x4001536	       700	d-demangle.c	FUNCTION_18	SWITCH_1
0x400132b	      0x488345b001	               add qword [rbp - 0x50], 1	       702	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001330	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       703	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_54
0x4001334	      0xbe00000000	                              mov esi, 0	       703	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_54
0x4001339	          0x4889c7	                            mov rdi, rax	       703	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_54
0x400133c	      0xe808efffff	                  call sym.string_append	       703	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_54
0x4001341	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       704	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001345	      0xe9ec010000	                           jmp 0x4001536	       704	d-demangle.c	FUNCTION_18	SWITCH_1
0x400134a	      0x488345b001	               add qword [rbp - 0x50], 1	       706	d-demangle.c	FUNCTION_18	SWITCH_1
0x400134f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       707	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_55
0x4001353	      0xbe00000000	                              mov esi, 0	       707	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_55
0x4001358	          0x4889c7	                            mov rdi, rax	       707	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_55
0x400135b	      0xe8e9eeffff	                  call sym.string_append	       707	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_55
0x4001360	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       708	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001364	      0xe9cd010000	                           jmp 0x4001536	       708	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001369	      0x488345b001	               add qword [rbp - 0x50], 1	       710	d-demangle.c	FUNCTION_18	SWITCH_1
0x400136e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       711	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_56
0x4001372	      0xbe00000000	                              mov esi, 0	       711	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_56
0x4001377	          0x4889c7	                            mov rdi, rax	       711	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_56
0x400137a	      0xe8caeeffff	                  call sym.string_append	       711	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_56
0x400137f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       712	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001383	      0xe9ae010000	                           jmp 0x4001536	       712	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001388	      0x488345b001	               add qword [rbp - 0x50], 1	       714	d-demangle.c	FUNCTION_18	SWITCH_1
0x400138d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       715	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_57
0x4001391	      0xbe00000000	                              mov esi, 0	       715	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_57
0x4001396	          0x4889c7	                            mov rdi, rax	       715	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_57
0x4001399	      0xe8abeeffff	                  call sym.string_append	       715	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_57
0x400139e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       716	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013a2	      0xe98f010000	                           jmp 0x4001536	       716	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013a7	      0x488345b001	               add qword [rbp - 0x50], 1	       720	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013ac	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       721	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_58
0x40013b0	      0xbe00000000	                              mov esi, 0	       721	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_58
0x40013b5	          0x4889c7	                            mov rdi, rax	       721	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_58
0x40013b8	      0xe88ceeffff	                  call sym.string_append	       721	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_58
0x40013bd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       722	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013c1	      0xe970010000	                           jmp 0x4001536	       722	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013c6	      0x488345b001	               add qword [rbp - 0x50], 1	       724	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013cb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       725	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_59
0x40013cf	      0xbe00000000	                              mov esi, 0	       725	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_59
0x40013d4	          0x4889c7	                            mov rdi, rax	       725	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_59
0x40013d7	      0xe86deeffff	                  call sym.string_append	       725	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_59
0x40013dc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       726	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013e0	      0xe951010000	                           jmp 0x4001536	       726	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013e5	      0x488345b001	               add qword [rbp - 0x50], 1	       728	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013ea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       729	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_60
0x40013ee	      0xbe00000000	                              mov esi, 0	       729	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_60
0x40013f3	          0x4889c7	                            mov rdi, rax	       729	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_60
0x40013f6	      0xe84eeeffff	                  call sym.string_append	       729	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_60
0x40013fb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       730	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013ff	      0xe932010000	                           jmp 0x4001536	       730	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001404	      0x488345b001	               add qword [rbp - 0x50], 1	       732	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001409	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       733	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_61
0x400140d	      0xbe00000000	                              mov esi, 0	       733	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_61
0x4001412	          0x4889c7	                            mov rdi, rax	       733	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_61
0x4001415	      0xe82feeffff	                  call sym.string_append	       733	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_61
0x400141a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       734	d-demangle.c	FUNCTION_18	SWITCH_1
0x400141e	      0xe913010000	                           jmp 0x4001536	       734	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001423	      0x488345b001	               add qword [rbp - 0x50], 1	       736	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001428	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       737	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_62
0x400142c	      0xbe00000000	                              mov esi, 0	       737	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_62
0x4001431	          0x4889c7	                            mov rdi, rax	       737	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_62
0x4001434	      0xe810eeffff	                  call sym.string_append	       737	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_62
0x4001439	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       738	d-demangle.c	FUNCTION_18	SWITCH_1
0x400143d	      0xe9f4000000	                           jmp 0x4001536	       738	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001442	      0x488345b001	               add qword [rbp - 0x50], 1	       740	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001447	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       741	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_63
0x400144b	      0xbe00000000	                              mov esi, 0	       741	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_63
0x4001450	          0x4889c7	                            mov rdi, rax	       741	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_63
0x4001453	      0xe8f1edffff	                  call sym.string_append	       741	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_63
0x4001458	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       742	d-demangle.c	FUNCTION_18	SWITCH_1
0x400145c	      0xe9d5000000	                           jmp 0x4001536	       742	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001461	      0x488345b001	               add qword [rbp - 0x50], 1	       746	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001466	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       747	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_64
0x400146a	      0xbe00000000	                              mov esi, 0	       747	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_64
0x400146f	          0x4889c7	                            mov rdi, rax	       747	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_64
0x4001472	      0xe8d2edffff	                  call sym.string_append	       747	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_64
0x4001477	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       748	d-demangle.c	FUNCTION_18	SWITCH_1
0x400147b	      0xe9b6000000	                           jmp 0x4001536	       748	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001480	      0x488345b001	               add qword [rbp - 0x50], 1	       750	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001485	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       751	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_65
0x4001489	      0xbe00000000	                              mov esi, 0	       751	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_65
0x400148e	          0x4889c7	                            mov rdi, rax	       751	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_65
0x4001491	      0xe8b3edffff	                  call sym.string_append	       751	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_65
0x4001496	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       752	d-demangle.c	FUNCTION_18	SWITCH_1
0x400149a	      0xe997000000	                           jmp 0x4001536	       752	d-demangle.c	FUNCTION_18	SWITCH_1
0x400149f	      0x488345b001	               add qword [rbp - 0x50], 1	       754	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014a4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       755	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_66
0x40014a8	      0xbe00000000	                              mov esi, 0	       755	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_66
0x40014ad	          0x4889c7	                            mov rdi, rax	       755	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_66
0x40014b0	      0xe894edffff	                  call sym.string_append	       755	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_66
0x40014b5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       756	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014b9	            0xeb7b	                           jmp 0x4001536	       756	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014bb	      0x488345b001	               add qword [rbp - 0x50], 1	       758	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014c0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       759	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_67
0x40014c4	      0xbe00000000	                              mov esi, 0	       759	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_67
0x40014c9	          0x4889c7	                            mov rdi, rax	       759	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_67
0x40014cc	      0xe878edffff	                  call sym.string_append	       759	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_67
0x40014d1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       760	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014d5	            0xeb5f	                           jmp 0x4001536	       760	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014d7	      0x488345b001	               add qword [rbp - 0x50], 1	       762	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014dc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40014e0	           0xfb600	                   movzx eax, byte [rax]	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40014e3	           0xfbec0	                           movsx eax, al	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40014e6	          0x83f869	                           cmp eax, 0x69	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40014e9	            0x7407	                            je 0x40014f2	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40014eb	          0x83f86b	                           cmp eax, 0x6b	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40014ee	            0x741e	                            je 0x400150e	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40014f0	            0xeb38	                           jmp 0x400152a	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40014f2	      0x488345b001	               add qword [rbp - 0x50], 1	       766	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40014f7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       767	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_68
0x40014fb	      0xbe00000000	                              mov esi, 0	       767	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_68
0x4001500	          0x4889c7	                            mov rdi, rax	       767	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_68
0x4001503	      0xe841edffff	                  call sym.string_append	       767	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_68
0x4001508	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       768	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x400150c	            0xeb28	                           jmp 0x4001536	       768	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x400150e	      0x488345b001	               add qword [rbp - 0x50], 1	       770	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x4001513	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       771	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_69
0x4001517	      0xbe00000000	                              mov esi, 0	       771	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_69
0x400151c	          0x4889c7	                            mov rdi, rax	       771	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_69
0x400151f	      0xe825edffff	                  call sym.string_append	       771	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_69
0x4001524	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       772	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x4001528	            0xeb0c	                           jmp 0x4001536	       772	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x400152a	      0xb800000000	                              mov eax, 0	       774	d-demangle.c	FUNCTION_18	SWITCH_1
0x400152f	            0xeb05	                           jmp 0x4001536	       774	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001531	      0xb800000000	                              mov eax, 0	       777	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001536	        0x488b4df8	                mov rcx, qword [rbp - 8]	       779	d-demangle.c	FUNCTION_18
0x400153a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       779	d-demangle.c	FUNCTION_18
0x4001543	            0x7405	                            je 0x400154a	       779	d-demangle.c	FUNCTION_18
0x4001545	      0xe800000000	                          call 0x400154a	       779	d-demangle.c	FUNCTION_18
0x400154a	              0xc9	                                   leave	       779	d-demangle.c	FUNCTION_18
0x400154b	              0xc3	                                     ret	       779	d-demangle.c	FUNCTION_18
dlang_parse_integer	ELSE,4:CALL,16:IF,7:SWITCH,2:functions,0:FOR,1:WHILE,2:DO,0	219
0x4001a77	              0x55	                                push rbp	       938	d-demangle.c	FUNCTION_20
0x4001a78	          0x4889e5	                            mov rbp, rsp	       938	d-demangle.c	FUNCTION_20
0x4001a7b	        0x4883ec70	                           sub rsp, 0x70	       938	d-demangle.c	FUNCTION_20
0x4001a7f	        0x48897da8	             mov qword [rbp - 0x58], rdi	       938	d-demangle.c	FUNCTION_20
0x4001a83	        0x488975a0	             mov qword [rbp - 0x60], rsi	       938	d-demangle.c	FUNCTION_20
0x4001a87	            0x89d0	                            mov eax, edx	       938	d-demangle.c	FUNCTION_20
0x4001a89	          0x88459c	               mov byte [rbp - 0x64], al	       938	d-demangle.c	FUNCTION_20
0x4001a8c	    0x64488b042528	                mov rax, qword fs:[0x28]	       938	d-demangle.c	FUNCTION_20
0x4001a95	        0x488945f8	                mov qword [rbp - 8], rax	       938	d-demangle.c	FUNCTION_20
0x4001a99	            0x31c0	                            xor eax, eax	       938	d-demangle.c	FUNCTION_20
0x4001a9b	        0x807d9c61	            cmp byte [rbp - 0x64], 0x61 	       939	d-demangle.c	FUNCTION_20	IF_1
0x4001a9f	            0x7410	                            je 0x4001ab1	       939	d-demangle.c	FUNCTION_20	IF_1
0x4001aa1	        0x807d9c75	            cmp byte [rbp - 0x64], 0x75 	       939	d-demangle.c	FUNCTION_20	IF_1
0x4001aa5	            0x740a	                            je 0x4001ab1	       939	d-demangle.c	FUNCTION_20	IF_1
0x4001aa7	        0x807d9c77	            cmp byte [rbp - 0x64], 0x77 	       939	d-demangle.c	FUNCTION_20	IF_1
0x4001aab	     0xf85a8010000	                           jne 0x4001c59	       939	d-demangle.c	FUNCTION_20	IF_1
0x4001ab1	    0xc745bc0a0000	             mov dword [rbp - 0x44], 0xa	       943	d-demangle.c	FUNCTION_20	IF_1
0x4001ab8	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       944	d-demangle.c	FUNCTION_20	IF_1
0x4001abf	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       947	d-demangle.c	FUNCTION_20	IF_1	CALL_1
0x4001ac3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       947	d-demangle.c	FUNCTION_20	IF_1	CALL_1
0x4001ac7	          0x4889d6	                            mov rsi, rdx	       947	d-demangle.c	FUNCTION_20	IF_1	CALL_1
0x4001aca	          0x4889c7	                            mov rdi, rax	       947	d-demangle.c	FUNCTION_20	IF_1	CALL_1
0x4001acd	      0xe822e9ffff	                   call sym.dlang_number	       947	d-demangle.c	FUNCTION_20	IF_1	CALL_1
0x4001ad2	        0x488945a0	             mov qword [rbp - 0x60], rax	       947	d-demangle.c	FUNCTION_20	IF_1	CALL_1
0x4001ad6	      0x48837da000	               cmp qword [rbp - 0x60], 0	       948	d-demangle.c	FUNCTION_20	IF_1	IF_2
0x4001adb	            0x750a	                           jne 0x4001ae7	       948	d-demangle.c	FUNCTION_20	IF_1	IF_2
0x4001add	      0xb800000000	                              mov eax, 0	       949	d-demangle.c	FUNCTION_20	IF_1	IF_2
0x4001ae2	      0xe99c020000	                           jmp 0x4001d83	       949	d-demangle.c	FUNCTION_20	IF_1	IF_2
0x4001ae7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       951	d-demangle.c	FUNCTION_20	IF_1	CALL_2
0x4001aeb	      0xbe00000000	                              mov esi, 0	       951	d-demangle.c	FUNCTION_20	IF_1	CALL_2
0x4001af0	          0x4889c7	                            mov rdi, rax	       951	d-demangle.c	FUNCTION_20	IF_1	CALL_2
0x4001af3	      0xe851e7ffff	                  call sym.string_append	       951	d-demangle.c	FUNCTION_20	IF_1	CALL_2
0x4001af8	        0x807d9c61	            cmp byte [rbp - 0x64], 0x61 	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4001afc	            0x7538	                           jne 0x4001b36	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4001afe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4001b02	        0x4883f81f	                           cmp rax, 0x1f	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4001b06	            0x7e2e	                           jle 0x4001b36	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4001b08	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4001b0c	        0x4883f87e	                           cmp rax, 0x7e	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4001b10	            0x7f24	                            jg 0x4001b36	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4001b12	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       956	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4001b16	          0x8845bb	               mov byte [rbp - 0x45], al	       956	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4001b19	        0x488d4dbb	                   lea rcx, [rbp - 0x45]	       957	d-demangle.c	FUNCTION_20	IF_1	IF_3	CALL_3
0x4001b1d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       957	d-demangle.c	FUNCTION_20	IF_1	IF_3	CALL_3
0x4001b21	      0xba01000000	                              mov edx, 1	       957	d-demangle.c	FUNCTION_20	IF_1	IF_3	CALL_3
0x4001b26	          0x4889ce	                            mov rsi, rcx	       957	d-demangle.c	FUNCTION_20	IF_1	IF_3	CALL_3
0x4001b29	          0x4889c7	                            mov rdi, rax	       957	d-demangle.c	FUNCTION_20	IF_1	IF_3	CALL_3
0x4001b2c	      0xe880e7ffff	                 call sym.string_appendn	       957	d-demangle.c	FUNCTION_20	IF_1	IF_3	CALL_3
0x4001b31	      0xe90d010000	                           jmp 0x4001c43	       954	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4001b36	         0xfbe459c	            movsx eax, byte [rbp - 0x64]	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4001b3a	          0x83f875	                           cmp eax, 0x75	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4001b3d	            0x7424	                            je 0x4001b63	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4001b3f	          0x83f877	                           cmp eax, 0x77	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4001b42	            0x7439	                            je 0x4001b7d	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4001b44	          0x83f861	                           cmp eax, 0x61	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4001b47	            0x754d	                           jne 0x4001b96	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4001b49	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       965	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_4
0x4001b4d	      0xbe00000000	                              mov esi, 0	       965	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_4
0x4001b52	          0x4889c7	                            mov rdi, rax	       965	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_4
0x4001b55	      0xe8efe6ffff	                  call sym.string_append	       965	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_4
0x4001b5a	    0xc745c0020000	               mov dword [rbp - 0x40], 2	       966	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4001b61	            0xeb33	                           jmp 0x4001b96	       967	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4001b63	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       969	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_5
0x4001b67	      0xbe00000000	                              mov esi, 0	       969	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_5
0x4001b6c	          0x4889c7	                            mov rdi, rax	       969	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_5
0x4001b6f	      0xe8d5e6ffff	                  call sym.string_append	       969	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_5
0x4001b74	    0xc745c0040000	               mov dword [rbp - 0x40], 4	       970	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4001b7b	            0xeb19	                           jmp 0x4001b96	       971	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4001b7d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       973	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_6
0x4001b81	      0xbe00000000	                              mov esi, 0	       973	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_6
0x4001b86	          0x4889c7	                            mov rdi, rax	       973	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_6
0x4001b89	      0xe8bbe6ffff	                  call sym.string_append	       973	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_6
0x4001b8e	    0xc745c0080000	               mov dword [rbp - 0x40], 8	       974	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4001b95	              0x90	                                     nop	       975	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4001b96	            0xeb63	                           jmp 0x4001bfb	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001b98	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       980	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001b9c	            0x4899	                                     cqo	       980	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001b9e	        0x48c1ea3c	                           shr rdx, 0x3c	       980	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001ba2	          0x4801d0	                            add rax, rdx	       980	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001ba5	          0x83e00f	                            and eax, 0xf	       980	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001ba8	          0x4829d0	                            sub rax, rdx	       980	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001bab	          0x8945c4	             mov dword [rbp - 0x3c], eax	       980	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001bae	        0x837dc409	               cmp dword [rbp - 0x3c], 9	       982	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x4001bb2	            0x7f17	                            jg 0x4001bcb	       982	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x4001bb4	        0x836dbc01	               sub dword [rbp - 0x44], 1	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x4001bb8	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x4001bbb	          0x83c030	                           add eax, 0x30	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x4001bbe	            0x89c2	                            mov edx, eax	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x4001bc0	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x4001bc3	            0x4898	                                    cdqe	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x4001bc5	        0x885405e0	         mov byte [rbp + rax - 0x20], dl	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x4001bc9	            0xeb15	                           jmp 0x4001be0	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x4001bcb	        0x836dbc01	               sub dword [rbp - 0x44], 1	       985	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	ELSE_2
0x4001bcf	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       985	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	ELSE_2
0x4001bd2	          0x83c057	                           add eax, 0x57	       985	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	ELSE_2
0x4001bd5	            0x89c2	                            mov edx, eax	       985	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	ELSE_2
0x4001bd7	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       985	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	ELSE_2
0x4001bda	            0x4898	                                    cdqe	       985	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	ELSE_2
0x4001bdc	        0x885405e0	         mov byte [rbp + rax - 0x20], dl	       985	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	ELSE_2
0x4001be0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       987	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001be4	        0x488d500f	                    lea rdx, [rax + 0xf]	       987	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001be8	          0x4885c0	                           test rax, rax	       987	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001beb	        0x480f48c2	                          cmovs rax, rdx	       987	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001bef	        0x48c1f804	                              sar rax, 4	       987	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001bf3	        0x488945c8	             mov qword [rbp - 0x38], rax	       987	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001bf7	        0x836dc001	               sub dword [rbp - 0x40], 1	       988	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001bfb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001bff	          0x4885c0	                           test rax, rax	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001c02	            0x7f94	                            jg 0x4001b98	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001c04	            0xeb12	                           jmp 0x4001c18	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001c06	        0x836dbc01	               sub dword [rbp - 0x44], 1	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001c0a	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001c0d	            0x4898	                                    cdqe	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001c0f	      0xc64405e030	      mov byte [rbp + rax - 0x20], 0x30 	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001c14	        0x836dc001	               sub dword [rbp - 0x40], 1	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001c18	        0x837dc000	               cmp dword [rbp - 0x40], 0	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001c1c	            0x7fe8	                            jg 0x4001c06	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001c1e	      0xb80a000000	                            mov eax, 0xa	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4001c23	          0x2b45bc	             sub eax, dword [rbp - 0x44]	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4001c26	            0x89c2	                            mov edx, eax	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4001c28	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4001c2c	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4001c2f	            0x4898	                                    cdqe	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4001c31	          0x4801c1	                            add rcx, rax	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4001c34	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4001c38	          0x4889ce	                            mov rsi, rcx	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4001c3b	          0x4889c7	                            mov rdi, rax	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4001c3e	      0xe86ee6ffff	                 call sym.string_appendn	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4001c43	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       996	d-demangle.c	FUNCTION_20	IF_1	CALL_8
0x4001c47	      0xbe00000000	                              mov esi, 0	       996	d-demangle.c	FUNCTION_20	IF_1	CALL_8
0x4001c4c	          0x4889c7	                            mov rdi, rax	       996	d-demangle.c	FUNCTION_20	IF_1	CALL_8
0x4001c4f	      0xe8f5e5ffff	                  call sym.string_append	       996	d-demangle.c	FUNCTION_20	IF_1	CALL_8
0x4001c54	      0xe926010000	                           jmp 0x4001d7f	       940	d-demangle.c	FUNCTION_20	IF_1
0x4001c59	        0x807d9c62	            cmp byte [rbp - 0x64], 0x62 	       998	d-demangle.c	FUNCTION_20	ELSE_3	IF_5
0x4001c5d	            0x7551	                           jne 0x4001cb0	       998	d-demangle.c	FUNCTION_20	ELSE_3	IF_5
0x4001c5f	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      1003	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_9
0x4001c63	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1003	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_9
0x4001c67	          0x4889d6	                            mov rsi, rdx	      1003	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_9
0x4001c6a	          0x4889c7	                            mov rdi, rax	      1003	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_9
0x4001c6d	      0xe882e7ffff	                   call sym.dlang_number	      1003	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_9
0x4001c72	        0x488945a0	             mov qword [rbp - 0x60], rax	      1003	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_9
0x4001c76	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1004	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	IF_6
0x4001c7b	            0x750a	                           jne 0x4001c87	      1004	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	IF_6
0x4001c7d	      0xb800000000	                              mov eax, 0	      1005	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	IF_6
0x4001c82	      0xe9fc000000	                           jmp 0x4001d83	      1005	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	IF_6
0x4001c87	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001c8b	          0x4885c0	                           test rax, rax	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001c8e	            0x7407	                            je 0x4001c97	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001c90	      0xba00000000	                              mov edx, 0	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001c95	            0xeb05	                           jmp 0x4001c9c	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001c97	      0xba00000000	                              mov edx, 0	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001c9c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001ca0	          0x4889d6	                            mov rsi, rdx	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001ca3	          0x4889c7	                            mov rdi, rax	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001ca6	      0xe89ee5ffff	                  call sym.string_append	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001cab	      0xe9cf000000	                           jmp 0x4001d7f	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001cb0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1012	d-demangle.c	FUNCTION_20	ELSE_4
0x4001cb4	        0x488945d8	             mov qword [rbp - 0x28], rax	      1012	d-demangle.c	FUNCTION_20	ELSE_4
0x4001cb8	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1013	d-demangle.c	FUNCTION_20	ELSE_4
0x4001cc0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4001cc4	           0xfb600	                   movzx eax, byte [rax]	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4001cc7	           0xfbec0	                           movsx eax, al	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4001cca	           0xfb6c0	                           movzx eax, al	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4001ccd	            0x4898	                                    cdqe	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4001ccf	     0xfb784000000	             movzx eax, word [rax + rax]	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4001cd7	           0xfb7c0	                           movzx eax, ax	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4001cda	          0x83e004	                              and eax, 4	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4001cdd	            0x85c0	                           test eax, eax	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4001cdf	            0x7514	                           jne 0x4001cf5	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4001ce1	      0xb800000000	                              mov eax, 0	      1016	d-demangle.c	FUNCTION_20	ELSE_4	IF_7
0x4001ce6	      0xe998000000	                           jmp 0x4001d83	      1016	d-demangle.c	FUNCTION_20	ELSE_4	IF_7
0x4001ceb	      0x488345d001	               add qword [rbp - 0x30], 1	      1020	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x4001cf0	      0x488345a001	               add qword [rbp - 0x60], 1	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x4001cf5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x4001cf9	           0xfb600	                   movzx eax, byte [rax]	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x4001cfc	           0xfbec0	                           movsx eax, al	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x4001cff	           0xfb6c0	                           movzx eax, al	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x4001d02	            0x4898	                                    cdqe	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x4001d04	     0xfb784000000	             movzx eax, word [rax + rax]	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x4001d0c	           0xfb7c0	                           movzx eax, ax	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x4001d0f	          0x83e004	                              and eax, 4	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x4001d12	            0x85c0	                           test eax, eax	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x4001d14	            0x75d5	                           jne 0x4001ceb	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x4001d16	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1023	d-demangle.c	FUNCTION_20	ELSE_4	CALL_13
0x4001d1a	            0x89c2	                            mov edx, eax	      1023	d-demangle.c	FUNCTION_20	ELSE_4	CALL_13
0x4001d1c	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1023	d-demangle.c	FUNCTION_20	ELSE_4	CALL_13
0x4001d20	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1023	d-demangle.c	FUNCTION_20	ELSE_4	CALL_13
0x4001d24	          0x4889ce	                            mov rsi, rcx	      1023	d-demangle.c	FUNCTION_20	ELSE_4	CALL_13
0x4001d27	          0x4889c7	                            mov rdi, rax	      1023	d-demangle.c	FUNCTION_20	ELSE_4	CALL_13
0x4001d2a	      0xe882e5ffff	                 call sym.string_appendn	      1023	d-demangle.c	FUNCTION_20	ELSE_4	CALL_13
0x4001d2f	         0xfbe459c	            movsx eax, byte [rbp - 0x64]	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x4001d33	          0x83e868	                           sub eax, 0x68	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x4001d36	          0x83f80c	                            cmp eax, 0xc	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x4001d39	            0x7744	                            ja 0x4001d7f	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x4001d3b	            0x89c0	                            mov eax, eax	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x4001d3d	    0x488b04c50000	                  mov rax, qword [rax*8]	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x4001d45	            0xffe0	                                 jmp rax	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x4001d47	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1031	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_14
0x4001d4b	      0xbe00000000	                              mov esi, 0	      1031	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_14
0x4001d50	          0x4889c7	                            mov rdi, rax	      1031	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_14
0x4001d53	      0xe8f1e4ffff	                  call sym.string_append	      1031	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_14
0x4001d58	            0xeb25	                           jmp 0x4001d7f	      1032	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x4001d5a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1034	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_15
0x4001d5e	      0xbe00000000	                              mov esi, 0	      1034	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_15
0x4001d63	          0x4889c7	                            mov rdi, rax	      1034	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_15
0x4001d66	      0xe8dee4ffff	                  call sym.string_append	      1034	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_15
0x4001d6b	            0xeb12	                           jmp 0x4001d7f	      1035	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x4001d6d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1037	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_16
0x4001d71	      0xbe00000000	                              mov esi, 0	      1037	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_16
0x4001d76	          0x4889c7	                            mov rdi, rax	      1037	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_16
0x4001d79	      0xe8cbe4ffff	                  call sym.string_append	      1037	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_16
0x4001d7e	              0x90	                                     nop	      1038	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x4001d7f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1042	d-demangle.c	FUNCTION_20
0x4001d83	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1043	d-demangle.c	FUNCTION_20
0x4001d87	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1043	d-demangle.c	FUNCTION_20
0x4001d90	            0x7405	                            je 0x4001d97	      1043	d-demangle.c	FUNCTION_20
0x4001d92	      0xe800000000	                          call 0x4001d97	      1043	d-demangle.c	FUNCTION_20
0x4001d97	              0xc9	                                   leave	      1043	d-demangle.c	FUNCTION_20
0x4001d98	              0xc3	                                     ret	      1043	d-demangle.c	FUNCTION_20
dlang_value	ELSE,1:CALL,13:IF,3:SWITCH,1:functions,0:FOR,0:WHILE,0:DO,0	130
0x4002470	              0x55	                                push rbp	      1258	d-demangle.c	FUNCTION_26
0x4002471	          0x4889e5	                            mov rbp, rsp	      1258	d-demangle.c	FUNCTION_26
0x4002474	        0x4883ec20	                           sub rsp, 0x20	      1258	d-demangle.c	FUNCTION_26
0x4002478	        0x48897df8	                mov qword [rbp - 8], rdi	      1258	d-demangle.c	FUNCTION_26
0x400247c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1258	d-demangle.c	FUNCTION_26
0x4002480	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1258	d-demangle.c	FUNCTION_26
0x4002484	            0x89c8	                            mov eax, ecx	      1258	d-demangle.c	FUNCTION_26
0x4002486	          0x8845e4	               mov byte [rbp - 0x1c], al	      1258	d-demangle.c	FUNCTION_26
0x4002489	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1259	d-demangle.c	FUNCTION_26	IF_1
0x400248e	            0x740b	                            je 0x400249b	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4002490	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4002494	           0xfb600	                   movzx eax, byte [rax]	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4002497	            0x84c0	                             test al, al	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4002499	            0x750a	                           jne 0x40024a5	      1259	d-demangle.c	FUNCTION_26	IF_1
0x400249b	      0xb800000000	                              mov eax, 0	      1260	d-demangle.c	FUNCTION_26	IF_1
0x40024a0	      0xe9b4010000	                           jmp 0x4002659	      1260	d-demangle.c	FUNCTION_26	IF_1
0x40024a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40024a9	           0xfb600	                   movzx eax, byte [rax]	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40024ac	           0xfbec0	                           movsx eax, al	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40024af	          0x83e830	                           sub eax, 0x30	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40024b2	          0x83f847	                           cmp eax, 0x47	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40024b5	     0xf8793010000	                            ja 0x400264e	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40024bb	            0x89c0	                            mov eax, eax	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40024bd	    0x488b04c50000	                  mov rax, qword [rax*8]	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40024c5	            0xffe0	                                 jmp rax	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40024c7	      0x488345f001	               add qword [rbp - 0x10], 1	      1266	d-demangle.c	FUNCTION_26	SWITCH_1
0x40024cc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1267	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_1
0x40024d0	      0xbe00000000	                              mov esi, 0	      1267	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_1
0x40024d5	          0x4889c7	                            mov rdi, rax	      1267	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_1
0x40024d8	      0xe86cddffff	                  call sym.string_append	      1267	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_1
0x40024dd	      0xe973010000	                           jmp 0x4002655	      1268	d-demangle.c	FUNCTION_26	SWITCH_1
0x40024e2	      0x488345f001	               add qword [rbp - 0x10], 1	      1272	d-demangle.c	FUNCTION_26	SWITCH_1
0x40024e7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1273	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_2
0x40024eb	      0xbe00000000	                              mov esi, 0	      1273	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_2
0x40024f0	          0x4889c7	                            mov rdi, rax	      1273	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_2
0x40024f3	      0xe851ddffff	                  call sym.string_append	      1273	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_2
0x40024f8	         0xfbe55e4	            movsx edx, byte [rbp - 0x1c]	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x40024fc	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x4002500	        0x488b45f8	                mov rax, qword [rbp - 8]	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x4002504	          0x4889ce	                            mov rsi, rcx	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x4002507	          0x4889c7	                            mov rdi, rax	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x400250a	      0xe868f5ffff	            call sym.dlang_parse_integer	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x400250f	        0x488945f0	             mov qword [rbp - 0x10], rax	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x4002513	      0xe93d010000	                           jmp 0x4002655	      1275	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002518	      0x488345f001	               add qword [rbp - 0x10], 1	      1278	d-demangle.c	FUNCTION_26	SWITCH_1
0x400251d	         0xfbe55e4	            movsx edx, byte [rbp - 0x1c]	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4002521	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4002525	        0x488b45f8	                mov rax, qword [rbp - 8]	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4002529	          0x4889ce	                            mov rsi, rcx	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x400252c	          0x4889c7	                            mov rdi, rax	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x400252f	      0xe843f5ffff	            call sym.dlang_parse_integer	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4002534	        0x488945f0	             mov qword [rbp - 0x10], rax	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4002538	      0xe918010000	                           jmp 0x4002655	      1287	d-demangle.c	FUNCTION_26	SWITCH_1
0x400253d	      0x488345f001	               add qword [rbp - 0x10], 1	      1291	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002542	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x4002546	        0x488b45f8	                mov rax, qword [rbp - 8]	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x400254a	          0x4889d6	                            mov rsi, rdx	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x400254d	          0x4889c7	                            mov rdi, rax	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x4002550	      0xe844f8ffff	               call sym.dlang_parse_real	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x4002555	        0x488945f0	             mov qword [rbp - 0x10], rax	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x4002559	      0xe9f7000000	                           jmp 0x4002655	      1293	d-demangle.c	FUNCTION_26	SWITCH_1
0x400255e	      0x488345f001	               add qword [rbp - 0x10], 1	      1297	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002563	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x4002567	        0x488b45f8	                mov rax, qword [rbp - 8]	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x400256b	          0x4889d6	                            mov rsi, rdx	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x400256e	          0x4889c7	                            mov rdi, rax	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x4002571	      0xe823f8ffff	               call sym.dlang_parse_real	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x4002576	        0x488945f0	             mov qword [rbp - 0x10], rax	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x400257a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1299	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_7
0x400257e	      0xbe00000000	                              mov esi, 0	      1299	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_7
0x4002583	          0x4889c7	                            mov rdi, rax	      1299	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_7
0x4002586	      0xe8bedcffff	                  call sym.string_append	      1299	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_7
0x400258b	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4002590	            0x740b	                            je 0x400259d	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4002592	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4002596	           0xfb600	                   movzx eax, byte [rax]	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4002599	            0x3c63	                            cmp al, 0x63	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x400259b	            0x740a	                            je 0x40025a7	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x400259d	      0xb800000000	                              mov eax, 0	      1301	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x40025a2	      0xe9b2000000	                           jmp 0x4002659	      1301	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x40025a7	      0x488345f001	               add qword [rbp - 0x10], 1	      1302	d-demangle.c	FUNCTION_26	SWITCH_1
0x40025ac	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x40025b0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x40025b4	          0x4889d6	                            mov rsi, rdx	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x40025b7	          0x4889c7	                            mov rdi, rax	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x40025ba	      0xe8daf7ffff	               call sym.dlang_parse_real	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x40025bf	        0x488945f0	             mov qword [rbp - 0x10], rax	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x40025c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1304	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_9
0x40025c7	      0xbe00000000	                              mov esi, 0	      1304	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_9
0x40025cc	          0x4889c7	                            mov rdi, rax	      1304	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_9
0x40025cf	      0xe875dcffff	                  call sym.string_append	      1304	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_9
0x40025d4	            0xeb7f	                           jmp 0x4002655	      1305	d-demangle.c	FUNCTION_26	SWITCH_1
0x40025d6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x40025da	        0x488b45f8	                mov rax, qword [rbp - 8]	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x40025de	          0x4889d6	                            mov rsi, rdx	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x40025e1	          0x4889c7	                            mov rdi, rax	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x40025e4	      0xe8c9f9ffff	             call sym.dlang_parse_string	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x40025e9	        0x488945f0	             mov qword [rbp - 0x10], rax	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x40025ed	            0xeb66	                           jmp 0x4002655	      1312	d-demangle.c	FUNCTION_26	SWITCH_1
0x40025ef	      0x488345f001	               add qword [rbp - 0x10], 1	      1316	d-demangle.c	FUNCTION_26	SWITCH_1
0x40025f4	        0x807de448	            cmp byte [rbp - 0x1c], 0x48 	      1317	d-demangle.c	FUNCTION_26	SWITCH_1	IF_3
0x40025f8	            0x7519	                           jne 0x4002613	      1317	d-demangle.c	FUNCTION_26	SWITCH_1	IF_3
0x40025fa	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1318	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_11
0x40025fe	        0x488b45f8	                mov rax, qword [rbp - 8]	      1318	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_11
0x4002602	          0x4889d6	                            mov rsi, rdx	      1318	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_11
0x4002605	          0x4889c7	                            mov rdi, rax	      1318	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_11
0x4002608	      0xe87afcffff	         call sym.dlang_parse_assocarray	      1318	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_11
0x400260d	        0x488945f0	             mov qword [rbp - 0x10], rax	      1318	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_11
0x4002611	            0xeb42	                           jmp 0x4002655	      1321	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002613	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x4002617	        0x488b45f8	                mov rax, qword [rbp - 8]	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x400261b	          0x4889d6	                            mov rsi, rdx	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x400261e	          0x4889c7	                            mov rdi, rax	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x4002621	      0xe896fbffff	       call sym.dlang_parse_arrayliteral	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x4002626	        0x488945f0	             mov qword [rbp - 0x10], rax	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x400262a	            0xeb29	                           jmp 0x4002655	      1321	d-demangle.c	FUNCTION_26	SWITCH_1
0x400262c	      0x488345f001	               add qword [rbp - 0x10], 1	      1325	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002631	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4002635	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4002639	        0x488b45f8	                mov rax, qword [rbp - 8]	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x400263d	          0x4889ce	                            mov rsi, rcx	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4002640	          0x4889c7	                            mov rdi, rax	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4002643	      0xe83cfdffff	          call sym.dlang_parse_structlit	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4002648	        0x488945f0	             mov qword [rbp - 0x10], rax	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x400264c	            0xeb07	                           jmp 0x4002655	      1327	d-demangle.c	FUNCTION_26	SWITCH_1
0x400264e	      0xb800000000	                              mov eax, 0	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002653	            0xeb04	                           jmp 0x4002659	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002655	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1333	d-demangle.c	FUNCTION_26
0x4002659	              0xc9	                                   leave	      1334	d-demangle.c	FUNCTION_26
0x400265a	              0xc3	                                     ret	      1334	d-demangle.c	FUNCTION_26
string_delete	ELSE,0:CALL,1:IF,1:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	25
0x4000141	              0x55	                                push rbp	        84	d-demangle.c	FUNCTION_2
0x4000142	          0x4889e5	                            mov rbp, rsp	        84	d-demangle.c	FUNCTION_2
0x4000145	        0x4883ec10	                           sub rsp, 0x10	        84	d-demangle.c	FUNCTION_2
0x4000149	        0x48897df8	                mov qword [rbp - 8], rdi	        84	d-demangle.c	FUNCTION_2
0x400014d	        0x488b45f8	                mov rax, qword [rbp - 8]	        85	d-demangle.c	FUNCTION_2	IF_1
0x4000151	          0x488b00	                    mov rax, qword [rax]	        85	d-demangle.c	FUNCTION_2	IF_1
0x4000154	          0x4885c0	                           test rax, rax	        85	d-demangle.c	FUNCTION_2	IF_1
0x4000157	            0x743a	                            je 0x4000193	        85	d-demangle.c	FUNCTION_2	IF_1
0x4000159	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x400015d	          0x488b00	                    mov rax, qword [rax]	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000160	          0x4889c7	                            mov rdi, rax	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000163	      0xe800000000	                          call 0x4000168	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000168	        0x488b45f8	                mov rax, qword [rbp - 8]	        88	d-demangle.c	FUNCTION_2	IF_1
0x400016c	    0x48c740080000	                  mov qword [rax + 8], 0	        88	d-demangle.c	FUNCTION_2	IF_1
0x4000174	        0x488b45f8	                mov rax, qword [rbp - 8]	        88	d-demangle.c	FUNCTION_2	IF_1
0x4000178	        0x488b5008	                mov rdx, qword [rax + 8]	        88	d-demangle.c	FUNCTION_2	IF_1
0x400017c	        0x488b45f8	                mov rax, qword [rbp - 8]	        88	d-demangle.c	FUNCTION_2	IF_1
0x4000180	        0x48895010	             mov qword [rax + 0x10], rdx	        88	d-demangle.c	FUNCTION_2	IF_1
0x4000184	        0x488b45f8	                mov rax, qword [rbp - 8]	        88	d-demangle.c	FUNCTION_2	IF_1
0x4000188	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        88	d-demangle.c	FUNCTION_2	IF_1
0x400018c	        0x488b45f8	                mov rax, qword [rbp - 8]	        88	d-demangle.c	FUNCTION_2	IF_1
0x4000190	          0x488910	                    mov qword [rax], rdx	        88	d-demangle.c	FUNCTION_2	IF_1
0x4000193	              0x90	                                     nop	        90	d-demangle.c	FUNCTION_2
0x4000194	              0xc9	                                   leave	        90	d-demangle.c	FUNCTION_2
0x4000195	              0xc3	                                     ret	        90	d-demangle.c	FUNCTION_2
dlang_parse_real	ELSE,2:CALL,17:IF,7:SWITCH,0:functions,0:FOR,0:WHILE,2:DO,0	142
0x4001d99	              0x55	                                push rbp	      1049	d-demangle.c	FUNCTION_21
0x4001d9a	          0x4889e5	                            mov rbp, rsp	      1049	d-demangle.c	FUNCTION_21
0x4001d9d	        0x4883ec10	                           sub rsp, 0x10	      1049	d-demangle.c	FUNCTION_21
0x4001da1	        0x48897df8	                mov qword [rbp - 8], rdi	      1049	d-demangle.c	FUNCTION_21
0x4001da5	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1049	d-demangle.c	FUNCTION_21
0x4001da9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1051	d-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4001dad	      0xba03000000	                              mov edx, 3	      1051	d-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4001db2	      0xbe00000000	                              mov esi, 0	      1051	d-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4001db7	          0x4889c7	                            mov rdi, rax	      1051	d-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4001dba	      0xe800000000	                          call 0x4001dbf	      1051	d-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4001dbf	            0x85c0	                           test eax, eax	      1051	d-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4001dc1	            0x751f	                           jne 0x4001de2	      1051	d-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4001dc3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1053	d-demangle.c	FUNCTION_21	IF_1	CALL_2
0x4001dc7	      0xbe00000000	                              mov esi, 0	      1053	d-demangle.c	FUNCTION_21	IF_1	CALL_2
0x4001dcc	          0x4889c7	                            mov rdi, rax	      1053	d-demangle.c	FUNCTION_21	IF_1	CALL_2
0x4001dcf	      0xe875e4ffff	                  call sym.string_append	      1053	d-demangle.c	FUNCTION_21	IF_1	CALL_2
0x4001dd4	      0x488345f003	               add qword [rbp - 0x10], 3	      1054	d-demangle.c	FUNCTION_21	IF_1
0x4001dd9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1055	d-demangle.c	FUNCTION_21	IF_1
0x4001ddd	      0xe9ce010000	                           jmp 0x4001fb0	      1055	d-demangle.c	FUNCTION_21	IF_1
0x4001de2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1057	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_3
0x4001de6	      0xba03000000	                              mov edx, 3	      1057	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_3
0x4001deb	      0xbe00000000	                              mov esi, 0	      1057	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_3
0x4001df0	          0x4889c7	                            mov rdi, rax	      1057	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_3
0x4001df3	      0xe800000000	                          call 0x4001df8	      1057	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_3
0x4001df8	            0x85c0	                           test eax, eax	      1057	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_3
0x4001dfa	            0x751f	                           jne 0x4001e1b	      1057	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_3
0x4001dfc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1059	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_4
0x4001e00	      0xbe00000000	                              mov esi, 0	      1059	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_4
0x4001e05	          0x4889c7	                            mov rdi, rax	      1059	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_4
0x4001e08	      0xe83ce4ffff	                  call sym.string_append	      1059	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_4
0x4001e0d	      0x488345f003	               add qword [rbp - 0x10], 3	      1060	d-demangle.c	FUNCTION_21	ELSE_1	IF_2
0x4001e12	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1061	d-demangle.c	FUNCTION_21	ELSE_1	IF_2
0x4001e16	      0xe995010000	                           jmp 0x4001fb0	      1061	d-demangle.c	FUNCTION_21	ELSE_1	IF_2
0x4001e1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1063	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_5
0x4001e1f	      0xba04000000	                              mov edx, 4	      1063	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_5
0x4001e24	      0xbe00000000	                              mov esi, 0	      1063	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_5
0x4001e29	          0x4889c7	                            mov rdi, rax	      1063	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_5
0x4001e2c	      0xe800000000	                          call 0x4001e31	      1063	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_5
0x4001e31	            0x85c0	                           test eax, eax	      1063	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_5
0x4001e33	            0x751f	                           jne 0x4001e54	      1063	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_5
0x4001e35	        0x488b45f8	                mov rax, qword [rbp - 8]	      1065	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_6
0x4001e39	      0xbe00000000	                              mov esi, 0	      1065	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_6
0x4001e3e	          0x4889c7	                            mov rdi, rax	      1065	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_6
0x4001e41	      0xe803e4ffff	                  call sym.string_append	      1065	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_6
0x4001e46	      0x488345f004	               add qword [rbp - 0x10], 4	      1066	d-demangle.c	FUNCTION_21	ELSE_2	IF_3
0x4001e4b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1067	d-demangle.c	FUNCTION_21	ELSE_2	IF_3
0x4001e4f	      0xe95c010000	                           jmp 0x4001fb0	      1067	d-demangle.c	FUNCTION_21	ELSE_2	IF_3
0x4001e54	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1071	d-demangle.c	FUNCTION_21	IF_4
0x4001e58	           0xfb600	                   movzx eax, byte [rax]	      1071	d-demangle.c	FUNCTION_21	IF_4
0x4001e5b	            0x3c4e	                            cmp al, 0x4e	      1071	d-demangle.c	FUNCTION_21	IF_4
0x4001e5d	            0x7516	                           jne 0x4001e75	      1071	d-demangle.c	FUNCTION_21	IF_4
0x4001e5f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1073	d-demangle.c	FUNCTION_21	IF_4	CALL_7
0x4001e63	      0xbe00000000	                              mov esi, 0	      1073	d-demangle.c	FUNCTION_21	IF_4	CALL_7
0x4001e68	          0x4889c7	                            mov rdi, rax	      1073	d-demangle.c	FUNCTION_21	IF_4	CALL_7
0x4001e6b	      0xe8d9e3ffff	                  call sym.string_append	      1073	d-demangle.c	FUNCTION_21	IF_4	CALL_7
0x4001e70	      0x488345f001	               add qword [rbp - 0x10], 1	      1074	d-demangle.c	FUNCTION_21	IF_4
0x4001e75	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1077	d-demangle.c	FUNCTION_21	IF_5	CALL_8
0x4001e79	           0xfb600	                   movzx eax, byte [rax]	      1077	d-demangle.c	FUNCTION_21	IF_5	CALL_8
0x4001e7c	           0xfbec0	                           movsx eax, al	      1077	d-demangle.c	FUNCTION_21	IF_5	CALL_8
0x4001e7f	           0xfb6c0	                           movzx eax, al	      1077	d-demangle.c	FUNCTION_21	IF_5	CALL_8
0x4001e82	            0x4898	                                    cdqe	      1077	d-demangle.c	FUNCTION_21	IF_5	CALL_8
0x4001e84	     0xfb784000000	             movzx eax, word [rax + rax]	      1077	d-demangle.c	FUNCTION_21	IF_5	CALL_8
0x4001e8c	           0xfb7c0	                           movzx eax, ax	      1077	d-demangle.c	FUNCTION_21	IF_5	CALL_8
0x4001e8f	      0x2500010000	                          and eax, 0x100	      1077	d-demangle.c	FUNCTION_21	IF_5	CALL_8
0x4001e94	            0x85c0	                           test eax, eax	      1077	d-demangle.c	FUNCTION_21	IF_5	CALL_8
0x4001e96	            0x750a	                           jne 0x4001ea2	      1077	d-demangle.c	FUNCTION_21	IF_5	CALL_8
0x4001e98	      0xb800000000	                              mov eax, 0	      1078	d-demangle.c	FUNCTION_21	IF_5
0x4001e9d	      0xe90e010000	                           jmp 0x4001fb0	      1078	d-demangle.c	FUNCTION_21	IF_5
0x4001ea2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1080	d-demangle.c	FUNCTION_21	CALL_9
0x4001ea6	      0xbe00000000	                              mov esi, 0	      1080	d-demangle.c	FUNCTION_21	CALL_9
0x4001eab	          0x4889c7	                            mov rdi, rax	      1080	d-demangle.c	FUNCTION_21	CALL_9
0x4001eae	      0xe896e3ffff	                  call sym.string_append	      1080	d-demangle.c	FUNCTION_21	CALL_9
0x4001eb3	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1081	d-demangle.c	FUNCTION_21	CALL_10
0x4001eb7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1081	d-demangle.c	FUNCTION_21	CALL_10
0x4001ebb	      0xba01000000	                              mov edx, 1	      1081	d-demangle.c	FUNCTION_21	CALL_10
0x4001ec0	          0x4889ce	                            mov rsi, rcx	      1081	d-demangle.c	FUNCTION_21	CALL_10
0x4001ec3	          0x4889c7	                            mov rdi, rax	      1081	d-demangle.c	FUNCTION_21	CALL_10
0x4001ec6	      0xe8e6e3ffff	                 call sym.string_appendn	      1081	d-demangle.c	FUNCTION_21	CALL_10
0x4001ecb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1082	d-demangle.c	FUNCTION_21	CALL_11
0x4001ecf	      0xbe00000000	                              mov esi, 0	      1082	d-demangle.c	FUNCTION_21	CALL_11
0x4001ed4	          0x4889c7	                            mov rdi, rax	      1082	d-demangle.c	FUNCTION_21	CALL_11
0x4001ed7	      0xe86de3ffff	                  call sym.string_append	      1082	d-demangle.c	FUNCTION_21	CALL_11
0x4001edc	      0x488345f001	               add qword [rbp - 0x10], 1	      1083	d-demangle.c	FUNCTION_21
0x4001ee1	            0xeb1d	                           jmp 0x4001f00	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x4001ee3	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1088	d-demangle.c	FUNCTION_21	WHILE_1	CALL_13
0x4001ee7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1088	d-demangle.c	FUNCTION_21	WHILE_1	CALL_13
0x4001eeb	      0xba01000000	                              mov edx, 1	      1088	d-demangle.c	FUNCTION_21	WHILE_1	CALL_13
0x4001ef0	          0x4889ce	                            mov rsi, rcx	      1088	d-demangle.c	FUNCTION_21	WHILE_1	CALL_13
0x4001ef3	          0x4889c7	                            mov rdi, rax	      1088	d-demangle.c	FUNCTION_21	WHILE_1	CALL_13
0x4001ef6	      0xe8b6e3ffff	                 call sym.string_appendn	      1088	d-demangle.c	FUNCTION_21	WHILE_1	CALL_13
0x4001efb	      0x488345f001	               add qword [rbp - 0x10], 1	      1089	d-demangle.c	FUNCTION_21	WHILE_1
0x4001f00	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x4001f04	           0xfb600	                   movzx eax, byte [rax]	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x4001f07	           0xfbec0	                           movsx eax, al	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x4001f0a	           0xfb6c0	                           movzx eax, al	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x4001f0d	            0x4898	                                    cdqe	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x4001f0f	     0xfb784000000	             movzx eax, word [rax + rax]	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x4001f17	           0xfb7c0	                           movzx eax, ax	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x4001f1a	      0x2500010000	                          and eax, 0x100	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x4001f1f	            0x85c0	                           test eax, eax	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x4001f21	            0x75c0	                           jne 0x4001ee3	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x4001f23	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1093	d-demangle.c	FUNCTION_21	IF_6
0x4001f27	           0xfb600	                   movzx eax, byte [rax]	      1093	d-demangle.c	FUNCTION_21	IF_6
0x4001f2a	            0x3c50	                            cmp al, 0x50	      1093	d-demangle.c	FUNCTION_21	IF_6
0x4001f2c	            0x7407	                            je 0x4001f35	      1093	d-demangle.c	FUNCTION_21	IF_6
0x4001f2e	      0xb800000000	                              mov eax, 0	      1094	d-demangle.c	FUNCTION_21	IF_6
0x4001f33	            0xeb7b	                           jmp 0x4001fb0	      1094	d-demangle.c	FUNCTION_21	IF_6
0x4001f35	        0x488b45f8	                mov rax, qword [rbp - 8]	      1096	d-demangle.c	FUNCTION_21	CALL_14
0x4001f39	      0xbe00000000	                              mov esi, 0	      1096	d-demangle.c	FUNCTION_21	CALL_14
0x4001f3e	          0x4889c7	                            mov rdi, rax	      1096	d-demangle.c	FUNCTION_21	CALL_14
0x4001f41	      0xe803e3ffff	                  call sym.string_append	      1096	d-demangle.c	FUNCTION_21	CALL_14
0x4001f46	      0x488345f001	               add qword [rbp - 0x10], 1	      1097	d-demangle.c	FUNCTION_21
0x4001f4b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1099	d-demangle.c	FUNCTION_21	IF_7
0x4001f4f	           0xfb600	                   movzx eax, byte [rax]	      1099	d-demangle.c	FUNCTION_21	IF_7
0x4001f52	            0x3c4e	                            cmp al, 0x4e	      1099	d-demangle.c	FUNCTION_21	IF_7
0x4001f54	            0x7535	                           jne 0x4001f8b	      1099	d-demangle.c	FUNCTION_21	IF_7
0x4001f56	        0x488b45f8	                mov rax, qword [rbp - 8]	      1101	d-demangle.c	FUNCTION_21	IF_7	CALL_15
0x4001f5a	      0xbe00000000	                              mov esi, 0	      1101	d-demangle.c	FUNCTION_21	IF_7	CALL_15
0x4001f5f	          0x4889c7	                            mov rdi, rax	      1101	d-demangle.c	FUNCTION_21	IF_7	CALL_15
0x4001f62	      0xe8e2e2ffff	                  call sym.string_append	      1101	d-demangle.c	FUNCTION_21	IF_7	CALL_15
0x4001f67	      0x488345f001	               add qword [rbp - 0x10], 1	      1102	d-demangle.c	FUNCTION_21	IF_7
0x4001f6c	            0xeb1d	                           jmp 0x4001f8b	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x4001f6e	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1107	d-demangle.c	FUNCTION_21	WHILE_2	CALL_17
0x4001f72	        0x488b45f8	                mov rax, qword [rbp - 8]	      1107	d-demangle.c	FUNCTION_21	WHILE_2	CALL_17
0x4001f76	      0xba01000000	                              mov edx, 1	      1107	d-demangle.c	FUNCTION_21	WHILE_2	CALL_17
0x4001f7b	          0x4889ce	                            mov rsi, rcx	      1107	d-demangle.c	FUNCTION_21	WHILE_2	CALL_17
0x4001f7e	          0x4889c7	                            mov rdi, rax	      1107	d-demangle.c	FUNCTION_21	WHILE_2	CALL_17
0x4001f81	      0xe82be3ffff	                 call sym.string_appendn	      1107	d-demangle.c	FUNCTION_21	WHILE_2	CALL_17
0x4001f86	      0x488345f001	               add qword [rbp - 0x10], 1	      1108	d-demangle.c	FUNCTION_21	WHILE_2
0x4001f8b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x4001f8f	           0xfb600	                   movzx eax, byte [rax]	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x4001f92	           0xfbec0	                           movsx eax, al	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x4001f95	           0xfb6c0	                           movzx eax, al	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x4001f98	            0x4898	                                    cdqe	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x4001f9a	     0xfb784000000	             movzx eax, word [rax + rax]	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x4001fa2	           0xfb7c0	                           movzx eax, ax	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x4001fa5	          0x83e004	                              and eax, 4	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x4001fa8	            0x85c0	                           test eax, eax	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x4001faa	            0x75c2	                           jne 0x4001f6e	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x4001fac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1111	d-demangle.c	FUNCTION_21
0x4001fb0	              0xc9	                                   leave	      1112	d-demangle.c	FUNCTION_21
0x4001fb1	              0xc3	                                     ret	      1112	d-demangle.c	FUNCTION_21
dlang_attributes	ELSE,0:CALL,9:IF,1:SWITCH,1:functions,0:FOR,0:WHILE,1:DO,0	89
0x400089e	              0x55	                                push rbp	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x400089f	          0x4889e5	                            mov rbp, rsp	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x40008a2	        0x4883ec10	                           sub rsp, 0x10	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x40008a6	        0x48897df8	                mov qword [rbp - 8], rdi	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x40008aa	        0x488975f0	             mov qword [rbp - 0x10], rsi	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x40008ae	      0x48837df000	               cmp qword [rbp - 0x10], 0	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x40008b3	            0x740f	                            je 0x40008c4	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x40008b5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x40008b9	           0xfb600	                   movzx eax, byte [rax]	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x40008bc	            0x84c0	                             test al, al	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x40008be	     0xf8524010000	                           jne 0x40009e8	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x40008c4	      0xb800000000	                              mov eax, 0	       354	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x40008c9	      0xe92d010000	                           jmp 0x40009fb	       354	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x40008ce	      0x488345f001	               add qword [rbp - 0x10], 1	       358	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1
0x40008d3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40008d7	           0xfb600	                   movzx eax, byte [rax]	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40008da	           0xfbec0	                           movsx eax, al	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40008dd	          0x83e861	                           sub eax, 0x61	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40008e0	          0x83f80b	                            cmp eax, 0xb	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40008e3	     0xf87f8000000	                            ja 0x40009e1	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40008e9	            0x89c0	                            mov eax, eax	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40008eb	    0x488b04c50000	                  mov rax, qword [rax*8]	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40008f3	            0xffe0	                                 jmp rax	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40008f5	      0x488345f001	               add qword [rbp - 0x10], 1	       362	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40008fa	        0x488b45f8	                mov rax, qword [rbp - 8]	       363	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_1
0x40008fe	      0xbe00000000	                              mov esi, 0	       363	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_1
0x4000903	          0x4889c7	                            mov rdi, rax	       363	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_1
0x4000906	      0xe83ef9ffff	                  call sym.string_append	       363	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_1
0x400090b	      0xe9d8000000	                           jmp 0x40009e8	       364	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000910	      0x488345f001	               add qword [rbp - 0x10], 1	       366	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000915	        0x488b45f8	                mov rax, qword [rbp - 8]	       367	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_2
0x4000919	      0xbe00000000	                              mov esi, 0	       367	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_2
0x400091e	          0x4889c7	                            mov rdi, rax	       367	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_2
0x4000921	      0xe823f9ffff	                  call sym.string_append	       367	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_2
0x4000926	      0xe9bd000000	                           jmp 0x40009e8	       368	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x400092b	      0x488345f001	               add qword [rbp - 0x10], 1	       370	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000930	        0x488b45f8	                mov rax, qword [rbp - 8]	       371	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_3
0x4000934	      0xbe00000000	                              mov esi, 0	       371	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_3
0x4000939	          0x4889c7	                            mov rdi, rax	       371	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_3
0x400093c	      0xe808f9ffff	                  call sym.string_append	       371	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_3
0x4000941	      0xe9a2000000	                           jmp 0x40009e8	       372	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000946	      0x488345f001	               add qword [rbp - 0x10], 1	       374	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x400094b	        0x488b45f8	                mov rax, qword [rbp - 8]	       375	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_4
0x400094f	      0xbe00000000	                              mov esi, 0	       375	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_4
0x4000954	          0x4889c7	                            mov rdi, rax	       375	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_4
0x4000957	      0xe8edf8ffff	                  call sym.string_append	       375	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_4
0x400095c	      0xe987000000	                           jmp 0x40009e8	       376	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000961	      0x488345f001	               add qword [rbp - 0x10], 1	       378	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000966	        0x488b45f8	                mov rax, qword [rbp - 8]	       379	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_5
0x400096a	      0xbe00000000	                              mov esi, 0	       379	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_5
0x400096f	          0x4889c7	                            mov rdi, rax	       379	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_5
0x4000972	      0xe8d2f8ffff	                  call sym.string_append	       379	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_5
0x4000977	            0xeb6f	                           jmp 0x40009e8	       380	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000979	      0x488345f001	               add qword [rbp - 0x10], 1	       382	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x400097e	        0x488b45f8	                mov rax, qword [rbp - 8]	       383	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_6
0x4000982	      0xbe00000000	                              mov esi, 0	       383	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_6
0x4000987	          0x4889c7	                            mov rdi, rax	       383	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_6
0x400098a	      0xe8baf8ffff	                  call sym.string_append	       383	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_6
0x400098f	            0xeb57	                           jmp 0x40009e8	       384	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000991	      0x48836df001	               sub qword [rbp - 0x10], 1	       393	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000996	              0x90	                                     nop	       394	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000997	            0xeb5e	                           jmp 0x40009f7	       411	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1
0x4000999	      0x488345f001	               add qword [rbp - 0x10], 1	       396	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x400099e	        0x488b45f8	                mov rax, qword [rbp - 8]	       397	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_7
0x40009a2	      0xbe00000000	                              mov esi, 0	       397	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_7
0x40009a7	          0x4889c7	                            mov rdi, rax	       397	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_7
0x40009aa	      0xe89af8ffff	                  call sym.string_append	       397	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_7
0x40009af	            0xeb37	                           jmp 0x40009e8	       398	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40009b1	      0x488345f001	               add qword [rbp - 0x10], 1	       400	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40009b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       401	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_8
0x40009ba	      0xbe00000000	                              mov esi, 0	       401	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_8
0x40009bf	          0x4889c7	                            mov rdi, rax	       401	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_8
0x40009c2	      0xe882f8ffff	                  call sym.string_append	       401	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_8
0x40009c7	            0xeb1f	                           jmp 0x40009e8	       402	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40009c9	      0x488345f001	               add qword [rbp - 0x10], 1	       404	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40009ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       405	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_9
0x40009d2	      0xbe00000000	                              mov esi, 0	       405	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_9
0x40009d7	          0x4889c7	                            mov rdi, rax	       405	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_9
0x40009da	      0xe86af8ffff	                  call sym.string_append	       405	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_9
0x40009df	            0xeb07	                           jmp 0x40009e8	       406	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40009e1	      0xb800000000	                              mov eax, 0	       409	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40009e6	            0xeb13	                           jmp 0x40009fb	       409	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40009e8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       356	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1
0x40009ec	           0xfb600	                   movzx eax, byte [rax]	       356	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1
0x40009ef	            0x3c4e	                            cmp al, 0x4e	       356	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1
0x40009f1	     0xf84d7feffff	                            je 0x40008ce	       356	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1
0x40009f7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       414	d-demangle.c	ELSE_1	FUNCTION_15
0x40009fb	              0xc9	                                   leave	       415	d-demangle.c	ELSE_1	FUNCTION_15
0x40009fc	              0xc3	                                     ret	       415	d-demangle.c	ELSE_1	FUNCTION_15
dlang_function_type	ELSE,0:CALL,18:IF,1:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	109
0x40009fd	              0x55	                                push rbp	       421	d-demangle.c	FUNCTION_16
0x40009fe	          0x4889e5	                            mov rbp, rsp	       421	d-demangle.c	FUNCTION_16
0x4000a01	    0x4881ec900000	                           sub rsp, 0x90	       421	d-demangle.c	FUNCTION_16
0x4000a08	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       421	d-demangle.c	FUNCTION_16
0x4000a0f	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       421	d-demangle.c	FUNCTION_16
0x4000a16	    0x64488b042528	                mov rax, qword fs:[0x28]	       421	d-demangle.c	FUNCTION_16
0x4000a1f	        0x488945f8	                mov qword [rbp - 8], rax	       421	d-demangle.c	FUNCTION_16
0x4000a23	            0x31c0	                            xor eax, eax	       421	d-demangle.c	FUNCTION_16
0x4000a25	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	       425	d-demangle.c	FUNCTION_16	IF_1
0x4000a2d	            0x740e	                            je 0x4000a3d	       425	d-demangle.c	FUNCTION_16	IF_1
0x4000a2f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       425	d-demangle.c	FUNCTION_16	IF_1
0x4000a36	           0xfb600	                   movzx eax, byte [rax]	       425	d-demangle.c	FUNCTION_16	IF_1
0x4000a39	            0x84c0	                             test al, al	       425	d-demangle.c	FUNCTION_16	IF_1
0x4000a3b	            0x750a	                           jne 0x4000a47	       425	d-demangle.c	FUNCTION_16	IF_1
0x4000a3d	      0xb800000000	                              mov eax, 0	       426	d-demangle.c	FUNCTION_16	IF_1
0x4000a42	      0xe978010000	                           jmp 0x4000bbf	       426	d-demangle.c	FUNCTION_16	IF_1
0x4000a47	        0x488d45a0	                   lea rax, [rbp - 0x60]	       434	d-demangle.c	FUNCTION_16	CALL_1
0x4000a4b	          0x4889c7	                            mov rdi, rax	       434	d-demangle.c	FUNCTION_16	CALL_1
0x4000a4e	      0xe843f7ffff	                    call sym.string_init	       434	d-demangle.c	FUNCTION_16	CALL_1
0x4000a53	        0x488d45c0	                   lea rax, [rbp - 0x40]	       435	d-demangle.c	FUNCTION_16	CALL_2
0x4000a57	          0x4889c7	                            mov rdi, rax	       435	d-demangle.c	FUNCTION_16	CALL_2
0x4000a5a	      0xe837f7ffff	                    call sym.string_init	       435	d-demangle.c	FUNCTION_16	CALL_2
0x4000a5f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       436	d-demangle.c	FUNCTION_16	CALL_3
0x4000a63	          0x4889c7	                            mov rdi, rax	       436	d-demangle.c	FUNCTION_16	CALL_3
0x4000a66	      0xe82bf7ffff	                    call sym.string_init	       436	d-demangle.c	FUNCTION_16	CALL_3
0x4000a6b	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       439	d-demangle.c	FUNCTION_16	CALL_4
0x4000a72	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       439	d-demangle.c	FUNCTION_16	CALL_4
0x4000a79	          0x4889d6	                            mov rsi, rdx	       439	d-demangle.c	FUNCTION_16	CALL_4
0x4000a7c	          0x4889c7	                            mov rdi, rax	       439	d-demangle.c	FUNCTION_16	CALL_4
0x4000a7f	      0xe839fcffff	          call sym.dlang_call_convention	       439	d-demangle.c	FUNCTION_16	CALL_4
0x4000a84	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       439	d-demangle.c	FUNCTION_16	CALL_4
0x4000a8b	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       442	d-demangle.c	FUNCTION_16	CALL_5
0x4000a92	        0x488d45a0	                   lea rax, [rbp - 0x60]	       442	d-demangle.c	FUNCTION_16	CALL_5
0x4000a96	          0x4889d6	                            mov rsi, rdx	       442	d-demangle.c	FUNCTION_16	CALL_5
0x4000a99	          0x4889c7	                            mov rdi, rax	       442	d-demangle.c	FUNCTION_16	CALL_5
0x4000a9c	      0xe8fdfdffff	               call sym.dlang_attributes	       442	d-demangle.c	FUNCTION_16	CALL_5
0x4000aa1	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       442	d-demangle.c	FUNCTION_16	CALL_5
0x4000aa8	        0x488d45a0	                   lea rax, [rbp - 0x60]	       443	d-demangle.c	FUNCTION_16	CALL_6
0x4000aac	          0x4889c7	                            mov rdi, rax	       443	d-demangle.c	FUNCTION_16	CALL_6
0x4000aaf	      0xe818f7ffff	                  call sym.string_length	       443	d-demangle.c	FUNCTION_16	CALL_6
0x4000ab4	            0x4898	                                    cdqe	       443	d-demangle.c	FUNCTION_16	CALL_6
0x4000ab6	        0x48894588	             mov qword [rbp - 0x78], rax	       443	d-demangle.c	FUNCTION_16	CALL_6
0x4000aba	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       446	d-demangle.c	FUNCTION_16	CALL_7
0x4000ac1	        0x488d45c0	                   lea rax, [rbp - 0x40]	       446	d-demangle.c	FUNCTION_16	CALL_7
0x4000ac5	          0x4889d6	                            mov rsi, rdx	       446	d-demangle.c	FUNCTION_16	CALL_7
0x4000ac8	          0x4889c7	                            mov rdi, rax	       446	d-demangle.c	FUNCTION_16	CALL_7
0x4000acb	      0xe805010000	            call sym.dlang_function_args	       446	d-demangle.c	FUNCTION_16	CALL_7
0x4000ad0	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       446	d-demangle.c	FUNCTION_16	CALL_7
0x4000ad7	        0x488d45c0	                   lea rax, [rbp - 0x40]	       447	d-demangle.c	FUNCTION_16	CALL_8
0x4000adb	          0x4889c7	                            mov rdi, rax	       447	d-demangle.c	FUNCTION_16	CALL_8
0x4000ade	      0xe8e9f6ffff	                  call sym.string_length	       447	d-demangle.c	FUNCTION_16	CALL_8
0x4000ae3	            0x4898	                                    cdqe	       447	d-demangle.c	FUNCTION_16	CALL_8
0x4000ae5	        0x48894590	             mov qword [rbp - 0x70], rax	       447	d-demangle.c	FUNCTION_16	CALL_8
0x4000ae9	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       450	d-demangle.c	FUNCTION_16	CALL_9
0x4000af0	        0x488d45e0	                   lea rax, [rbp - 0x20]	       450	d-demangle.c	FUNCTION_16	CALL_9
0x4000af4	          0x4889d6	                            mov rsi, rdx	       450	d-demangle.c	FUNCTION_16	CALL_9
0x4000af7	          0x4889c7	                            mov rdi, rax	       450	d-demangle.c	FUNCTION_16	CALL_9
0x4000afa	      0xe876020000	                     call sym.dlang_type	       450	d-demangle.c	FUNCTION_16	CALL_9
0x4000aff	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       450	d-demangle.c	FUNCTION_16	CALL_9
0x4000b06	        0x488d45e0	                   lea rax, [rbp - 0x20]	       451	d-demangle.c	FUNCTION_16	CALL_10
0x4000b0a	          0x4889c7	                            mov rdi, rax	       451	d-demangle.c	FUNCTION_16	CALL_10
0x4000b0d	      0xe8baf6ffff	                  call sym.string_length	       451	d-demangle.c	FUNCTION_16	CALL_10
0x4000b12	            0x4898	                                    cdqe	       451	d-demangle.c	FUNCTION_16	CALL_10
0x4000b14	        0x48894598	             mov qword [rbp - 0x68], rax	       451	d-demangle.c	FUNCTION_16	CALL_10
0x4000b18	        0x488b4598	             mov rax, qword [rbp - 0x68]	       454	d-demangle.c	FUNCTION_16	CALL_11
0x4000b1c	            0x89c2	                            mov edx, eax	       454	d-demangle.c	FUNCTION_16	CALL_11
0x4000b1e	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       454	d-demangle.c	FUNCTION_16	CALL_11
0x4000b22	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       454	d-demangle.c	FUNCTION_16	CALL_11
0x4000b29	          0x4889ce	                            mov rsi, rcx	       454	d-demangle.c	FUNCTION_16	CALL_11
0x4000b2c	          0x4889c7	                            mov rdi, rax	       454	d-demangle.c	FUNCTION_16	CALL_11
0x4000b2f	      0xe87df7ffff	                 call sym.string_appendn	       454	d-demangle.c	FUNCTION_16	CALL_11
0x4000b34	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       455	d-demangle.c	FUNCTION_16	CALL_12
0x4000b3b	      0xbe00000000	                              mov esi, 0	       455	d-demangle.c	FUNCTION_16	CALL_12
0x4000b40	          0x4889c7	                            mov rdi, rax	       455	d-demangle.c	FUNCTION_16	CALL_12
0x4000b43	      0xe801f7ffff	                  call sym.string_append	       455	d-demangle.c	FUNCTION_16	CALL_12
0x4000b48	        0x488b4590	             mov rax, qword [rbp - 0x70]	       456	d-demangle.c	FUNCTION_16	CALL_13
0x4000b4c	            0x89c2	                            mov edx, eax	       456	d-demangle.c	FUNCTION_16	CALL_13
0x4000b4e	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       456	d-demangle.c	FUNCTION_16	CALL_13
0x4000b52	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       456	d-demangle.c	FUNCTION_16	CALL_13
0x4000b59	          0x4889ce	                            mov rsi, rcx	       456	d-demangle.c	FUNCTION_16	CALL_13
0x4000b5c	          0x4889c7	                            mov rdi, rax	       456	d-demangle.c	FUNCTION_16	CALL_13
0x4000b5f	      0xe84df7ffff	                 call sym.string_appendn	       456	d-demangle.c	FUNCTION_16	CALL_13
0x4000b64	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       457	d-demangle.c	FUNCTION_16	CALL_14
0x4000b6b	      0xbe00000000	                              mov esi, 0	       457	d-demangle.c	FUNCTION_16	CALL_14
0x4000b70	          0x4889c7	                            mov rdi, rax	       457	d-demangle.c	FUNCTION_16	CALL_14
0x4000b73	      0xe8d1f6ffff	                  call sym.string_append	       457	d-demangle.c	FUNCTION_16	CALL_14
0x4000b78	        0x488b4588	             mov rax, qword [rbp - 0x78]	       458	d-demangle.c	FUNCTION_16	CALL_15
0x4000b7c	            0x89c2	                            mov edx, eax	       458	d-demangle.c	FUNCTION_16	CALL_15
0x4000b7e	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       458	d-demangle.c	FUNCTION_16	CALL_15
0x4000b82	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       458	d-demangle.c	FUNCTION_16	CALL_15
0x4000b89	          0x4889ce	                            mov rsi, rcx	       458	d-demangle.c	FUNCTION_16	CALL_15
0x4000b8c	          0x4889c7	                            mov rdi, rax	       458	d-demangle.c	FUNCTION_16	CALL_15
0x4000b8f	      0xe81df7ffff	                 call sym.string_appendn	       458	d-demangle.c	FUNCTION_16	CALL_15
0x4000b94	        0x488d45a0	                   lea rax, [rbp - 0x60]	       460	d-demangle.c	FUNCTION_16	CALL_16
0x4000b98	          0x4889c7	                            mov rdi, rax	       460	d-demangle.c	FUNCTION_16	CALL_16
0x4000b9b	      0xe8a1f5ffff	                  call sym.string_delete	       460	d-demangle.c	FUNCTION_16	CALL_16
0x4000ba0	        0x488d45c0	                   lea rax, [rbp - 0x40]	       461	d-demangle.c	FUNCTION_16	CALL_17
0x4000ba4	          0x4889c7	                            mov rdi, rax	       461	d-demangle.c	FUNCTION_16	CALL_17
0x4000ba7	      0xe895f5ffff	                  call sym.string_delete	       461	d-demangle.c	FUNCTION_16	CALL_17
0x4000bac	        0x488d45e0	                   lea rax, [rbp - 0x20]	       462	d-demangle.c	FUNCTION_16	CALL_18
0x4000bb0	          0x4889c7	                            mov rdi, rax	       462	d-demangle.c	FUNCTION_16	CALL_18
0x4000bb3	      0xe889f5ffff	                  call sym.string_delete	       462	d-demangle.c	FUNCTION_16	CALL_18
0x4000bb8	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       463	d-demangle.c	FUNCTION_16
0x4000bbf	        0x488b4df8	                mov rcx, qword [rbp - 8]	       464	d-demangle.c	FUNCTION_16
0x4000bc3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       464	d-demangle.c	FUNCTION_16
0x4000bcc	            0x7405	                            je 0x4000bd3	       464	d-demangle.c	FUNCTION_16
0x4000bce	      0xe800000000	                          call 0x4000bd3	       464	d-demangle.c	FUNCTION_16
0x4000bd3	              0xc9	                                   leave	       464	d-demangle.c	FUNCTION_16
0x4000bd4	              0xc3	                                     ret	       464	d-demangle.c	FUNCTION_16
dlang_parse_assocarray	ELSE,0:CALL,7:IF,2:SWITCH,0:functions,0:FOR,0:WHILE,1:DO,0	64
0x4002287	              0x55	                                push rbp	      1206	d-demangle.c	FUNCTION_24
0x4002288	          0x4889e5	                            mov rbp, rsp	      1206	d-demangle.c	FUNCTION_24
0x400228b	        0x4883ec20	                           sub rsp, 0x20	      1206	d-demangle.c	FUNCTION_24
0x400228f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1206	d-demangle.c	FUNCTION_24
0x4002293	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1206	d-demangle.c	FUNCTION_24
0x4002297	    0x64488b042528	                mov rax, qword fs:[0x28]	      1206	d-demangle.c	FUNCTION_24
0x40022a0	        0x488945f8	                mov qword [rbp - 8], rax	      1206	d-demangle.c	FUNCTION_24
0x40022a4	            0x31c0	                            xor eax, eax	      1206	d-demangle.c	FUNCTION_24
0x40022a6	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      1209	d-demangle.c	FUNCTION_24	CALL_1
0x40022aa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1209	d-demangle.c	FUNCTION_24	CALL_1
0x40022ae	          0x4889d6	                            mov rsi, rdx	      1209	d-demangle.c	FUNCTION_24	CALL_1
0x40022b1	          0x4889c7	                            mov rdi, rax	      1209	d-demangle.c	FUNCTION_24	CALL_1
0x40022b4	      0xe83be1ffff	                   call sym.dlang_number	      1209	d-demangle.c	FUNCTION_24	CALL_1
0x40022b9	        0x488945e0	             mov qword [rbp - 0x20], rax	      1209	d-demangle.c	FUNCTION_24	CALL_1
0x40022bd	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1210	d-demangle.c	FUNCTION_24	IF_1
0x40022c2	            0x750a	                           jne 0x40022ce	      1210	d-demangle.c	FUNCTION_24	IF_1
0x40022c4	      0xb800000000	                              mov eax, 0	      1211	d-demangle.c	FUNCTION_24	IF_1
0x40022c9	      0xe9a0000000	                           jmp 0x400236e	      1211	d-demangle.c	FUNCTION_24	IF_1
0x40022ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1213	d-demangle.c	FUNCTION_24	CALL_2
0x40022d2	      0xbe00000000	                              mov esi, 0	      1213	d-demangle.c	FUNCTION_24	CALL_2
0x40022d7	          0x4889c7	                            mov rdi, rax	      1213	d-demangle.c	FUNCTION_24	CALL_2
0x40022da	      0xe86adfffff	                  call sym.string_append	      1213	d-demangle.c	FUNCTION_24	CALL_2
0x40022df	            0xeb67	                           jmp 0x4002348	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x40022e1	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x40022e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x40022e9	      0xb900000000	                              mov ecx, 0	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x40022ee	      0xba00000000	                              mov edx, 0	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x40022f3	          0x4889c7	                            mov rdi, rax	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x40022f6	      0xe875010000	                    call sym.dlang_value	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x40022fb	        0x488945e0	             mov qword [rbp - 0x20], rax	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x40022ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1217	d-demangle.c	FUNCTION_24	WHILE_1	CALL_4
0x4002303	      0xbe00000000	                              mov esi, 0	      1217	d-demangle.c	FUNCTION_24	WHILE_1	CALL_4
0x4002308	          0x4889c7	                            mov rdi, rax	      1217	d-demangle.c	FUNCTION_24	WHILE_1	CALL_4
0x400230b	      0xe839dfffff	                  call sym.string_append	      1217	d-demangle.c	FUNCTION_24	WHILE_1	CALL_4
0x4002310	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x4002314	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x4002318	      0xb900000000	                              mov ecx, 0	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x400231d	      0xba00000000	                              mov edx, 0	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x4002322	          0x4889c7	                            mov rdi, rax	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x4002325	      0xe846010000	                    call sym.dlang_value	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x400232a	        0x488945e0	             mov qword [rbp - 0x20], rax	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x400232e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1220	d-demangle.c	FUNCTION_24	WHILE_1	IF_2
0x4002332	          0x4885c0	                           test rax, rax	      1220	d-demangle.c	FUNCTION_24	WHILE_1	IF_2
0x4002335	            0x7411	                            je 0x4002348	      1220	d-demangle.c	FUNCTION_24	WHILE_1	IF_2
0x4002337	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1221	d-demangle.c	FUNCTION_24	WHILE_1	CALL_6
0x400233b	      0xbe00000000	                              mov esi, 0	      1221	d-demangle.c	FUNCTION_24	WHILE_1	CALL_6
0x4002340	          0x4889c7	                            mov rdi, rax	      1221	d-demangle.c	FUNCTION_24	WHILE_1	CALL_6
0x4002343	      0xe801dfffff	                  call sym.string_append	      1221	d-demangle.c	FUNCTION_24	WHILE_1	CALL_6
0x4002348	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x400234c	        0x488d50ff	                      lea rdx, [rax - 1]	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4002350	        0x488955f0	             mov qword [rbp - 0x10], rdx	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4002354	          0x4885c0	                           test rax, rax	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4002357	            0x7588	                           jne 0x40022e1	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4002359	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1224	d-demangle.c	FUNCTION_24	CALL_7
0x400235d	      0xbe00000000	                              mov esi, 0	      1224	d-demangle.c	FUNCTION_24	CALL_7
0x4002362	          0x4889c7	                            mov rdi, rax	      1224	d-demangle.c	FUNCTION_24	CALL_7
0x4002365	      0xe8dfdeffff	                  call sym.string_append	      1224	d-demangle.c	FUNCTION_24	CALL_7
0x400236a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1225	d-demangle.c	FUNCTION_24
0x400236e	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1226	d-demangle.c	FUNCTION_24
0x4002372	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1226	d-demangle.c	FUNCTION_24
0x400237b	            0x7405	                            je 0x4002382	      1226	d-demangle.c	FUNCTION_24
0x400237d	      0xe800000000	                          call 0x4002382	      1226	d-demangle.c	FUNCTION_24
0x4002382	              0xc9	                                   leave	      1226	d-demangle.c	FUNCTION_24
0x4002383	              0xc3	                                     ret	      1226	d-demangle.c	FUNCTION_24
dlang_function_args	ELSE,0:CALL,10:IF,4:SWITCH,2:functions,0:FOR,0:WHILE,1:DO,0	113
0x4000bd5	              0x55	                                push rbp	       470	d-demangle.c	FUNCTION_17
0x4000bd6	          0x4889e5	                            mov rbp, rsp	       470	d-demangle.c	FUNCTION_17
0x4000bd9	        0x4883ec20	                           sub rsp, 0x20	       470	d-demangle.c	FUNCTION_17
0x4000bdd	        0x48897de8	             mov qword [rbp - 0x18], rdi	       470	d-demangle.c	FUNCTION_17
0x4000be1	        0x488975e0	             mov qword [rbp - 0x20], rsi	       470	d-demangle.c	FUNCTION_17
0x4000be5	    0x48c745f80000	                  mov qword [rbp - 8], 0	       471	d-demangle.c	FUNCTION_17
0x4000bed	      0xe967010000	                           jmp 0x4000d59	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4000bf2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000bf6	           0xfb600	                   movzx eax, byte [rax]	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000bf9	           0xfbec0	                           movsx eax, al	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000bfc	          0x83f859	                           cmp eax, 0x59	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000bff	            0x7429	                            je 0x4000c2a	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c01	          0x83f85a	                           cmp eax, 0x5a	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c04	            0x745b	                            je 0x4000c61	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c06	          0x83f858	                           cmp eax, 0x58	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c09	            0x7564	                           jne 0x4000c6f	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c0b	      0x488345e001	               add qword [rbp - 0x20], 1	       478	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c10	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       479	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c14	      0xbe00000000	                              mov esi, 0	       479	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c19	          0x4889c7	                            mov rdi, rax	       479	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c1c	      0xe828f6ffff	                  call sym.string_append	       479	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c21	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       480	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c25	      0xe949010000	                           jmp 0x4000d73	       480	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c2a	      0x488345e001	               add qword [rbp - 0x20], 1	       482	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c2f	      0x48837df800	                  cmp qword [rbp - 8], 0	       483	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000c34	            0x7411	                            je 0x4000c47	       483	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000c36	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       484	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4000c3a	      0xbe00000000	                              mov esi, 0	       484	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4000c3f	          0x4889c7	                            mov rdi, rax	       484	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4000c42	      0xe802f6ffff	                  call sym.string_append	       484	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4000c47	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4000c4b	      0xbe00000000	                              mov esi, 0	       485	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4000c50	          0x4889c7	                            mov rdi, rax	       485	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4000c53	      0xe8f1f5ffff	                  call sym.string_append	       485	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4000c58	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       486	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c5c	      0xe912010000	                           jmp 0x4000d73	       486	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c61	      0x488345e001	               add qword [rbp - 0x20], 1	       488	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c66	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       489	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c6a	      0xe904010000	                           jmp 0x4000d73	       489	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c6f	        0x488b45f8	                mov rax, qword [rbp - 8]	       492	d-demangle.c	FUNCTION_17	WHILE_1	IF_2
0x4000c73	        0x488d5001	                      lea rdx, [rax + 1]	       492	d-demangle.c	FUNCTION_17	WHILE_1	IF_2
0x4000c77	        0x488955f8	                mov qword [rbp - 8], rdx	       492	d-demangle.c	FUNCTION_17	WHILE_1	IF_2
0x4000c7b	          0x4885c0	                           test rax, rax	       492	d-demangle.c	FUNCTION_17	WHILE_1	IF_2
0x4000c7e	            0x7411	                            je 0x4000c91	       492	d-demangle.c	FUNCTION_17	WHILE_1	IF_2
0x4000c80	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       493	d-demangle.c	FUNCTION_17	WHILE_1	CALL_4
0x4000c84	      0xbe00000000	                              mov esi, 0	       493	d-demangle.c	FUNCTION_17	WHILE_1	CALL_4
0x4000c89	          0x4889c7	                            mov rdi, rax	       493	d-demangle.c	FUNCTION_17	WHILE_1	CALL_4
0x4000c8c	      0xe8b8f5ffff	                  call sym.string_append	       493	d-demangle.c	FUNCTION_17	WHILE_1	CALL_4
0x4000c91	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       495	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x4000c95	           0xfb600	                   movzx eax, byte [rax]	       495	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x4000c98	            0x3c4d	                            cmp al, 0x4d	       495	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x4000c9a	            0x7516	                           jne 0x4000cb2	       495	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x4000c9c	      0x488345e001	               add qword [rbp - 0x20], 1	       497	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x4000ca1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       498	d-demangle.c	FUNCTION_17	WHILE_1	IF_3	CALL_5
0x4000ca5	      0xbe00000000	                              mov esi, 0	       498	d-demangle.c	FUNCTION_17	WHILE_1	IF_3	CALL_5
0x4000caa	          0x4889c7	                            mov rdi, rax	       498	d-demangle.c	FUNCTION_17	WHILE_1	IF_3	CALL_5
0x4000cad	      0xe897f5ffff	                  call sym.string_append	       498	d-demangle.c	FUNCTION_17	WHILE_1	IF_3	CALL_5
0x4000cb2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4000cb6	           0xfb600	                   movzx eax, byte [rax]	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4000cb9	            0x3c4e	                            cmp al, 0x4e	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4000cbb	            0x7525	                           jne 0x4000ce2	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4000cbd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4000cc1	        0x4883c001	                              add rax, 1	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4000cc5	           0xfb600	                   movzx eax, byte [rax]	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4000cc8	            0x3c6b	                            cmp al, 0x6b	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4000cca	            0x7516	                           jne 0x4000ce2	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4000ccc	      0x488345e002	               add qword [rbp - 0x20], 2	       503	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4000cd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       504	d-demangle.c	FUNCTION_17	WHILE_1	IF_4	CALL_6
0x4000cd5	      0xbe00000000	                              mov esi, 0	       504	d-demangle.c	FUNCTION_17	WHILE_1	IF_4	CALL_6
0x4000cda	          0x4889c7	                            mov rdi, rax	       504	d-demangle.c	FUNCTION_17	WHILE_1	IF_4	CALL_6
0x4000cdd	      0xe867f5ffff	                  call sym.string_append	       504	d-demangle.c	FUNCTION_17	WHILE_1	IF_4	CALL_6
0x4000ce2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4000ce6	           0xfb600	                   movzx eax, byte [rax]	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4000ce9	           0xfbec0	                           movsx eax, al	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4000cec	          0x83f84b	                           cmp eax, 0x4b	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4000cef	            0x7422	                            je 0x4000d13	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4000cf1	          0x83f84c	                           cmp eax, 0x4c	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4000cf4	            0x7435	                            je 0x4000d2b	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4000cf6	          0x83f84a	                           cmp eax, 0x4a	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4000cf9	            0x7547	                           jne 0x4000d42	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4000cfb	      0x488345e001	               add qword [rbp - 0x20], 1	       510	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4000d00	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       511	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_7
0x4000d04	      0xbe00000000	                              mov esi, 0	       511	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_7
0x4000d09	          0x4889c7	                            mov rdi, rax	       511	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_7
0x4000d0c	      0xe838f5ffff	                  call sym.string_append	       511	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_7
0x4000d11	            0xeb2f	                           jmp 0x4000d42	       512	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4000d13	      0x488345e001	               add qword [rbp - 0x20], 1	       514	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4000d18	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       515	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_8
0x4000d1c	      0xbe00000000	                              mov esi, 0	       515	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_8
0x4000d21	          0x4889c7	                            mov rdi, rax	       515	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_8
0x4000d24	      0xe820f5ffff	                  call sym.string_append	       515	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_8
0x4000d29	            0xeb17	                           jmp 0x4000d42	       516	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4000d2b	      0x488345e001	               add qword [rbp - 0x20], 1	       518	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4000d30	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       519	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_9
0x4000d34	      0xbe00000000	                              mov esi, 0	       519	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_9
0x4000d39	          0x4889c7	                            mov rdi, rax	       519	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_9
0x4000d3c	      0xe808f5ffff	                  call sym.string_append	       519	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_9
0x4000d41	              0x90	                                     nop	       520	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4000d42	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4000d46	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4000d4a	          0x4889d6	                            mov rsi, rdx	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4000d4d	          0x4889c7	                            mov rdi, rax	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4000d50	      0xe820000000	                     call sym.dlang_type	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4000d55	        0x488945e0	             mov qword [rbp - 0x20], rax	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4000d59	      0x48837de000	               cmp qword [rbp - 0x20], 0	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4000d5e	            0x740f	                            je 0x4000d6f	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4000d60	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4000d64	           0xfb600	                   movzx eax, byte [rax]	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4000d67	            0x84c0	                             test al, al	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4000d69	     0xf8583feffff	                           jne 0x4000bf2	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4000d6f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       525	d-demangle.c	FUNCTION_17
0x4000d73	              0xc9	                                   leave	       526	d-demangle.c	FUNCTION_17
0x4000d74	              0xc3	                                     ret	       526	d-demangle.c	FUNCTION_17
dlang_call_convention	ELSE,0:CALL,5:IF,1:SWITCH,1:functions,0:FOR,0:WHILE,0:DO,0	59
0x40006bd	              0x55	                                push rbp	       274	d-demangle.c	FUNCTION_13
0x40006be	          0x4889e5	                            mov rbp, rsp	       274	d-demangle.c	FUNCTION_13
0x40006c1	        0x4883ec10	                           sub rsp, 0x10	       274	d-demangle.c	FUNCTION_13
0x40006c5	        0x48897df8	                mov qword [rbp - 8], rdi	       274	d-demangle.c	FUNCTION_13
0x40006c9	        0x488975f0	             mov qword [rbp - 0x10], rsi	       274	d-demangle.c	FUNCTION_13
0x40006cd	      0x48837df000	               cmp qword [rbp - 0x10], 0	       275	d-demangle.c	FUNCTION_13	IF_1
0x40006d2	            0x740b	                            je 0x40006df	       275	d-demangle.c	FUNCTION_13	IF_1
0x40006d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       275	d-demangle.c	FUNCTION_13	IF_1
0x40006d8	           0xfb600	                   movzx eax, byte [rax]	       275	d-demangle.c	FUNCTION_13	IF_1
0x40006db	            0x84c0	                             test al, al	       275	d-demangle.c	FUNCTION_13	IF_1
0x40006dd	            0x750a	                           jne 0x40006e9	       275	d-demangle.c	FUNCTION_13	IF_1
0x40006df	      0xb800000000	                              mov eax, 0	       276	d-demangle.c	FUNCTION_13	IF_1
0x40006e4	      0xe9ac000000	                           jmp 0x4000795	       276	d-demangle.c	FUNCTION_13	IF_1
0x40006e9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40006ed	           0xfb600	                   movzx eax, byte [rax]	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40006f0	           0xfbec0	                           movsx eax, al	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40006f3	          0x83e846	                           sub eax, 0x46	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40006f6	          0x83f813	                           cmp eax, 0x13	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40006f9	     0xf878b000000	                            ja 0x400078a	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40006ff	            0x89c0	                            mov eax, eax	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000701	    0x488b04c50000	                  mov rax, qword [rax*8]	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000709	            0xffe0	                                 jmp rax	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x400070b	      0x488345f001	               add qword [rbp - 0x10], 1	       281	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000710	            0xeb7f	                           jmp 0x4000791	       282	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000712	      0x488345f001	               add qword [rbp - 0x10], 1	       284	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000717	        0x488b45f8	                mov rax, qword [rbp - 8]	       285	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_1
0x400071b	      0xbe00000000	                              mov esi, 0	       285	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_1
0x4000720	          0x4889c7	                            mov rdi, rax	       285	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_1
0x4000723	      0xe821fbffff	                  call sym.string_append	       285	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_1
0x4000728	            0xeb67	                           jmp 0x4000791	       286	d-demangle.c	FUNCTION_13	SWITCH_1
0x400072a	      0x488345f001	               add qword [rbp - 0x10], 1	       288	d-demangle.c	FUNCTION_13	SWITCH_1
0x400072f	        0x488b45f8	                mov rax, qword [rbp - 8]	       289	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_2
0x4000733	      0xbe00000000	                              mov esi, 0	       289	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_2
0x4000738	          0x4889c7	                            mov rdi, rax	       289	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_2
0x400073b	      0xe809fbffff	                  call sym.string_append	       289	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_2
0x4000740	            0xeb4f	                           jmp 0x4000791	       290	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000742	      0x488345f001	               add qword [rbp - 0x10], 1	       292	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000747	        0x488b45f8	                mov rax, qword [rbp - 8]	       293	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_3
0x400074b	      0xbe00000000	                              mov esi, 0	       293	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_3
0x4000750	          0x4889c7	                            mov rdi, rax	       293	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_3
0x4000753	      0xe8f1faffff	                  call sym.string_append	       293	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_3
0x4000758	            0xeb37	                           jmp 0x4000791	       294	d-demangle.c	FUNCTION_13	SWITCH_1
0x400075a	      0x488345f001	               add qword [rbp - 0x10], 1	       296	d-demangle.c	FUNCTION_13	SWITCH_1
0x400075f	        0x488b45f8	                mov rax, qword [rbp - 8]	       297	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_4
0x4000763	      0xbe00000000	                              mov esi, 0	       297	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_4
0x4000768	          0x4889c7	                            mov rdi, rax	       297	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_4
0x400076b	      0xe8d9faffff	                  call sym.string_append	       297	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_4
0x4000770	            0xeb1f	                           jmp 0x4000791	       298	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000772	      0x488345f001	               add qword [rbp - 0x10], 1	       300	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000777	        0x488b45f8	                mov rax, qword [rbp - 8]	       301	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_5
0x400077b	      0xbe00000000	                              mov esi, 0	       301	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_5
0x4000780	          0x4889c7	                            mov rdi, rax	       301	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_5
0x4000783	      0xe8c1faffff	                  call sym.string_append	       301	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_5
0x4000788	            0xeb07	                           jmp 0x4000791	       302	d-demangle.c	FUNCTION_13	SWITCH_1
0x400078a	      0xb800000000	                              mov eax, 0	       304	d-demangle.c	FUNCTION_13	SWITCH_1
0x400078f	            0xeb04	                           jmp 0x4000795	       304	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000791	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       307	d-demangle.c	FUNCTION_13
0x4000795	              0xc9	                                   leave	       308	d-demangle.c	FUNCTION_13
0x4000796	              0xc3	                                     ret	       308	d-demangle.c	FUNCTION_13
dlang_number	ELSE,0:CALL,2:IF,3:SWITCH,0:functions,0:FOR,0:WHILE,1:DO,0	83
0x40003f4	              0x55	                                push rbp	       200	d-demangle.c	FUNCTION_10
0x40003f5	          0x4889e5	                            mov rbp, rsp	       200	d-demangle.c	FUNCTION_10
0x40003f8	        0x48897df8	                mov qword [rbp - 8], rdi	       200	d-demangle.c	FUNCTION_10
0x40003fc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       200	d-demangle.c	FUNCTION_10
0x4000400	      0x48837df800	                  cmp qword [rbp - 8], 0	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4000405	            0x7421	                            je 0x4000428	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4000407	        0x488b45f8	                mov rax, qword [rbp - 8]	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x400040b	           0xfb600	                   movzx eax, byte [rax]	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x400040e	           0xfbec0	                           movsx eax, al	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4000411	           0xfb6c0	                           movzx eax, al	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4000414	            0x4898	                                    cdqe	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4000416	     0xfb784000000	             movzx eax, word [rax + rax]	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x400041e	           0xfb7c0	                           movzx eax, ax	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4000421	          0x83e004	                              and eax, 4	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4000424	            0x85c0	                           test eax, eax	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4000426	            0x750a	                           jne 0x4000432	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4000428	      0xb800000000	                              mov eax, 0	       203	d-demangle.c	FUNCTION_10	IF_1
0x400042d	      0xe9de000000	                           jmp 0x4000510	       203	d-demangle.c	FUNCTION_10	IF_1
0x4000432	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       205	d-demangle.c	FUNCTION_10
0x4000436	    0x48c700000000	                      mov qword [rax], 0	       205	d-demangle.c	FUNCTION_10
0x400043d	      0xe987000000	                           jmp 0x40004c9	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4000442	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x4000446	          0x488b10	                    mov rdx, qword [rax]	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x4000449	          0x4889d0	                            mov rax, rdx	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x400044c	        0x48c1e002	                              shl rax, 2	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x4000450	          0x4801d0	                            add rax, rdx	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x4000453	          0x4801c0	                            add rax, rax	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x4000456	          0x4889c2	                            mov rdx, rax	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x4000459	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x400045d	          0x488910	                    mov qword [rax], rdx	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x4000460	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x4000464	          0x488b08	                    mov rcx, qword [rax]	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x4000467	    0x48ba67666666	          movabs rdx, 0x6666666666666667	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x4000471	          0x4889c8	                            mov rax, rcx	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x4000474	          0x48f7ea	                                imul rdx	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x4000477	        0x48c1fa02	                              sar rdx, 2	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x400047b	          0x4889c8	                            mov rax, rcx	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x400047e	        0x48c1f83f	                           sar rax, 0x3f	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x4000482	          0x4829c2	                            sub rdx, rax	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x4000485	          0x4889d0	                            mov rax, rdx	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x4000488	        0x48c1e002	                              shl rax, 2	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x400048c	          0x4801d0	                            add rax, rdx	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x400048f	          0x4801c0	                            add rax, rax	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x4000492	          0x4829c1	                            sub rcx, rax	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x4000495	          0x4889ca	                            mov rdx, rcx	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x4000498	          0x4885d2	                           test rdx, rdx	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x400049b	            0x7407	                            je 0x40004a4	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x400049d	      0xb800000000	                              mov eax, 0	       214	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x40004a2	            0xeb6c	                           jmp 0x4000510	       214	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x40004a4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40004a8	          0x488b10	                    mov rdx, qword [rax]	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40004ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40004af	           0xfb600	                   movzx eax, byte [rax]	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40004b2	           0xfbec0	                           movsx eax, al	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40004b5	          0x83e830	                           sub eax, 0x30	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40004b8	            0x4898	                                    cdqe	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40004ba	          0x4801c2	                            add rdx, rax	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40004bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40004c1	          0x488910	                    mov qword [rax], rdx	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40004c4	      0x488345f801	                  add qword [rbp - 8], 1	       217	d-demangle.c	FUNCTION_10	WHILE_1
0x40004c9	        0x488b45f8	                mov rax, qword [rbp - 8]	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40004cd	           0xfb600	                   movzx eax, byte [rax]	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40004d0	           0xfbec0	                           movsx eax, al	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40004d3	           0xfb6c0	                           movzx eax, al	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40004d6	            0x4898	                                    cdqe	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40004d8	     0xfb784000000	             movzx eax, word [rax + rax]	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40004e0	           0xfb7c0	                           movzx eax, ax	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40004e3	          0x83e004	                              and eax, 4	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40004e6	            0x85c0	                           test eax, eax	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40004e8	     0xf8554ffffff	                           jne 0x4000442	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40004ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       220	d-demangle.c	FUNCTION_10	IF_3
0x40004f2	           0xfb600	                   movzx eax, byte [rax]	       220	d-demangle.c	FUNCTION_10	IF_3
0x40004f5	            0x84c0	                             test al, al	       220	d-demangle.c	FUNCTION_10	IF_3
0x40004f7	            0x740c	                            je 0x4000505	       220	d-demangle.c	FUNCTION_10	IF_3
0x40004f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       220	d-demangle.c	FUNCTION_10	IF_3
0x40004fd	          0x488b00	                    mov rax, qword [rax]	       220	d-demangle.c	FUNCTION_10	IF_3
0x4000500	          0x4885c0	                           test rax, rax	       220	d-demangle.c	FUNCTION_10	IF_3
0x4000503	            0x7907	                           jns 0x400050c	       220	d-demangle.c	FUNCTION_10	IF_3
0x4000505	      0xb800000000	                              mov eax, 0	       221	d-demangle.c	FUNCTION_10	IF_3
0x400050a	            0xeb04	                           jmp 0x4000510	       221	d-demangle.c	FUNCTION_10	IF_3
0x400050c	        0x488b45f8	                mov rax, qword [rbp - 8]	       223	d-demangle.c	FUNCTION_10
0x4000510	              0x5d	                                 pop rbp	       224	d-demangle.c	FUNCTION_10
0x4000511	              0xc3	                                     ret	       224	d-demangle.c	FUNCTION_10
string_appendn	ELSE,0:CALL,2:IF,1:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	31
0x40002b1	              0x55	                                push rbp	       128	d-demangle.c	FUNCTION_7
0x40002b2	          0x4889e5	                            mov rbp, rsp	       128	d-demangle.c	FUNCTION_7
0x40002b5	        0x4883ec20	                           sub rsp, 0x20	       128	d-demangle.c	FUNCTION_7
0x40002b9	        0x48897df8	                mov qword [rbp - 8], rdi	       128	d-demangle.c	FUNCTION_7
0x40002bd	        0x488975f0	             mov qword [rbp - 0x10], rsi	       128	d-demangle.c	FUNCTION_7
0x40002c1	          0x8955ec	             mov dword [rbp - 0x14], edx	       128	d-demangle.c	FUNCTION_7
0x40002c4	        0x837dec00	               cmp dword [rbp - 0x14], 0	       129	d-demangle.c	FUNCTION_7	IF_1
0x40002c8	            0x7446	                            je 0x4000310	       129	d-demangle.c	FUNCTION_7	IF_1
0x40002ca	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       131	d-demangle.c	FUNCTION_7	IF_1	CALL_1
0x40002cd	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	d-demangle.c	FUNCTION_7	IF_1	CALL_1
0x40002d1	            0x89d6	                            mov esi, edx	       131	d-demangle.c	FUNCTION_7	IF_1	CALL_1
0x40002d3	          0x4889c7	                            mov rdi, rax	       131	d-demangle.c	FUNCTION_7	IF_1	CALL_1
0x40002d6	      0xe865fdffff	                    call sym.string_need	       131	d-demangle.c	FUNCTION_7	IF_1	CALL_1
0x40002db	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       132	d-demangle.c	FUNCTION_7	IF_1	CALL_2
0x40002de	          0x4863d0	                         movsxd rdx, eax	       132	d-demangle.c	FUNCTION_7	IF_1	CALL_2
0x40002e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       132	d-demangle.c	FUNCTION_7	IF_1	CALL_2
0x40002e5	        0x488b4008	                mov rax, qword [rax + 8]	       132	d-demangle.c	FUNCTION_7	IF_1	CALL_2
0x40002e9	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       132	d-demangle.c	FUNCTION_7	IF_1	CALL_2
0x40002ed	          0x4889ce	                            mov rsi, rcx	       132	d-demangle.c	FUNCTION_7	IF_1	CALL_2
0x40002f0	          0x4889c7	                            mov rdi, rax	       132	d-demangle.c	FUNCTION_7	IF_1	CALL_2
0x40002f3	      0xe800000000	                          call 0x40002f8	       132	d-demangle.c	FUNCTION_7	IF_1	CALL_2
0x40002f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       133	d-demangle.c	FUNCTION_7	IF_1
0x40002fc	        0x488b5008	                mov rdx, qword [rax + 8]	       133	d-demangle.c	FUNCTION_7	IF_1
0x4000300	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       133	d-demangle.c	FUNCTION_7	IF_1
0x4000303	            0x4898	                                    cdqe	       133	d-demangle.c	FUNCTION_7	IF_1
0x4000305	          0x4801c2	                            add rdx, rax	       133	d-demangle.c	FUNCTION_7	IF_1
0x4000308	        0x488b45f8	                mov rax, qword [rbp - 8]	       133	d-demangle.c	FUNCTION_7	IF_1
0x400030c	        0x48895008	                mov qword [rax + 8], rdx	       133	d-demangle.c	FUNCTION_7	IF_1
0x4000310	              0x90	                                     nop	       135	d-demangle.c	FUNCTION_7
0x4000311	              0xc9	                                   leave	       135	d-demangle.c	FUNCTION_7
0x4000312	              0xc3	                                     ret	       135	d-demangle.c	FUNCTION_7
dlang_parse_mangle	ELSE,1:CALL,17:IF,6:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	125
0x400265b	              0x55	                                push rbp	      1341	d-demangle.c	FUNCTION_27
0x400265c	          0x4889e5	                            mov rbp, rsp	      1341	d-demangle.c	FUNCTION_27
0x400265f	        0x4883ec50	                           sub rsp, 0x50	      1341	d-demangle.c	FUNCTION_27
0x4002663	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1341	d-demangle.c	FUNCTION_27
0x4002667	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1341	d-demangle.c	FUNCTION_27
0x400266b	          0x8955bc	             mov dword [rbp - 0x44], edx	      1341	d-demangle.c	FUNCTION_27
0x400266e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1341	d-demangle.c	FUNCTION_27
0x4002677	        0x488945f8	                mov qword [rbp - 8], rax	      1341	d-demangle.c	FUNCTION_27
0x400267b	            0x31c0	                            xor eax, eax	      1341	d-demangle.c	FUNCTION_27
0x400267d	      0x488345c002	               add qword [rbp - 0x40], 2	      1352	d-demangle.c	FUNCTION_27
0x4002682	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      1354	d-demangle.c	FUNCTION_27	CALL_1
0x4002686	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1354	d-demangle.c	FUNCTION_27	CALL_1
0x400268a	      0xba00000000	                              mov edx, 0	      1354	d-demangle.c	FUNCTION_27	CALL_1
0x400268f	          0x4889ce	                            mov rsi, rcx	      1354	d-demangle.c	FUNCTION_27	CALL_1
0x4002692	          0x4889c7	                            mov rdi, rax	      1354	d-demangle.c	FUNCTION_27	CALL_1
0x4002695	      0xe89a010000	          call sym.dlang_parse_qualified	      1354	d-demangle.c	FUNCTION_27	CALL_1
0x400269a	        0x488945c0	             mov qword [rbp - 0x40], rax	      1354	d-demangle.c	FUNCTION_27	CALL_1
0x400269e	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1356	d-demangle.c	FUNCTION_27	IF_1
0x40026a3	     0xf8452010000	                            je 0x40027fb	      1356	d-demangle.c	FUNCTION_27	IF_1
0x40026a9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1359	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x40026ad	           0xfb600	                   movzx eax, byte [rax]	      1359	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x40026b0	            0x3c5a	                            cmp al, 0x5a	      1359	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x40026b2	            0x750a	                           jne 0x40026be	      1359	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x40026b4	      0x488345c001	               add qword [rbp - 0x40], 1	      1360	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x40026b9	      0xe93d010000	                           jmp 0x40027fb	      1360	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x40026be	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1367	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_3
0x40026c2	           0xfb600	                   movzx eax, byte [rax]	      1367	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_3
0x40026c5	            0x3c4d	                            cmp al, 0x4d	      1367	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_3
0x40026c7	            0x7505	                           jne 0x40026ce	      1367	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_3
0x40026c9	      0x488345c001	               add qword [rbp - 0x40], 1	      1368	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_3
0x40026ce	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1371	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_2
0x40026d2	          0x4889c7	                            mov rdi, rax	      1371	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_2
0x40026d5	      0xe8bcdaffff	                    call sym.string_init	      1371	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_2
0x40026da	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1372	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_3
0x40026de	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1372	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_3
0x40026e2	          0x4889d6	                            mov rsi, rdx	      1372	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_3
0x40026e5	          0x4889c7	                            mov rdi, rax	      1372	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_3
0x40026e8	      0xe8aae0ffff	           call sym.dlang_type_modifiers	      1372	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_3
0x40026ed	        0x488945c0	             mov qword [rbp - 0x40], rax	      1372	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_3
0x40026f1	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x40026f6	     0xf84bc000000	                            je 0x40027b8	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x40026fc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4002700	          0x4889c7	                            mov rdi, rax	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4002703	      0xe881dfffff	        call sym.dlang_call_convention_p	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4002708	            0x85c0	                           test eax, eax	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x400270a	     0xf84a8000000	                            je 0x40027b8	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4002710	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1377	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_5
0x4002714	          0x4889c7	                            mov rdi, rax	      1377	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_5
0x4002717	      0xe8b0daffff	                  call sym.string_length	      1377	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_5
0x400271c	          0x8945dc	             mov dword [rbp - 0x24], eax	      1377	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_5
0x400271f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1378	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_6
0x4002723	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1378	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_6
0x4002727	          0x4889d6	                            mov rsi, rdx	      1378	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_6
0x400272a	          0x4889c7	                            mov rdi, rax	      1378	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_6
0x400272d	      0xe88bdfffff	          call sym.dlang_call_convention	      1378	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_6
0x4002732	        0x488945c0	             mov qword [rbp - 0x40], rax	      1378	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_6
0x4002736	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x400273a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x400273e	          0x4889d6	                            mov rsi, rdx	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x4002741	          0x4889c7	                            mov rdi, rax	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x4002744	      0xe855e1ffff	               call sym.dlang_attributes	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x4002749	        0x488945c0	             mov qword [rbp - 0x40], rax	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x400274d	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1380	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_8
0x4002750	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1380	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_8
0x4002754	            0x89d6	                            mov esi, edx	      1380	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_8
0x4002756	          0x4889c7	                            mov rdi, rax	      1380	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_8
0x4002759	      0xe8abdaffff	               call sym.string_setlength	      1380	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_8
0x400275e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1382	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_9
0x4002762	      0xbe00000000	                              mov esi, 0	      1382	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_9
0x4002767	          0x4889c7	                            mov rdi, rax	      1382	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_9
0x400276a	      0xe8dadaffff	                  call sym.string_append	      1382	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_9
0x400276f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x4002773	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x4002777	          0x4889d6	                            mov rsi, rdx	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x400277a	          0x4889c7	                            mov rdi, rax	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x400277d	      0xe853e4ffff	            call sym.dlang_function_args	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x4002782	        0x488945c0	             mov qword [rbp - 0x40], rax	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x4002786	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1384	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_11
0x400278a	      0xbe00000000	                              mov esi, 0	      1384	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_11
0x400278f	          0x4889c7	                            mov rdi, rax	      1384	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_11
0x4002792	      0xe8b2daffff	                  call sym.string_append	      1384	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_11
0x4002797	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1387	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_13
0x400279b	          0x4889c7	                            mov rdi, rax	      1387	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_13
0x400279e	      0xe829daffff	                  call sym.string_length	      1387	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_13
0x40027a3	            0x89c2	                            mov edx, eax	      1387	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_13
0x40027a5	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1387	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_13
0x40027a9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1387	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_13
0x40027ad	          0x4889ce	                            mov rsi, rcx	      1387	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_13
0x40027b0	          0x4889c7	                            mov rdi, rax	      1387	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_13
0x40027b3	      0xe8f9daffff	                 call sym.string_appendn	      1387	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_13
0x40027b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1391	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_14
0x40027bc	          0x4889c7	                            mov rdi, rax	      1391	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_14
0x40027bf	      0xe808daffff	                  call sym.string_length	      1391	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_14
0x40027c4	          0x8945dc	             mov dword [rbp - 0x24], eax	      1391	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_14
0x40027c7	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x40027cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x40027cf	          0x4889d6	                            mov rsi, rdx	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x40027d2	          0x4889c7	                            mov rdi, rax	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x40027d5	      0xe89be5ffff	                     call sym.dlang_type	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x40027da	        0x488945c0	             mov qword [rbp - 0x40], rax	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x40027de	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1393	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_16
0x40027e1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1393	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_16
0x40027e5	            0x89d6	                            mov esi, edx	      1393	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_16
0x40027e7	          0x4889c7	                            mov rdi, rax	      1393	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_16
0x40027ea	      0xe81adaffff	               call sym.string_setlength	      1393	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_16
0x40027ef	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1395	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_17
0x40027f3	          0x4889c7	                            mov rdi, rax	      1395	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_17
0x40027f6	      0xe846d9ffff	                  call sym.string_delete	      1395	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_17
0x40027fb	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1400	d-demangle.c	FUNCTION_27	IF_5
0x40027ff	            0x7519	                           jne 0x400281a	      1400	d-demangle.c	FUNCTION_27	IF_5
0x4002801	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4002806	            0x740b	                            je 0x4002813	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4002808	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x400280c	           0xfb600	                   movzx eax, byte [rax]	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x400280f	            0x84c0	                             test al, al	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4002811	            0x7407	                            je 0x400281a	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4002813	      0xb800000000	                              mov eax, 0	      1403	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4002818	            0xeb04	                           jmp 0x400281e	      1403	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x400281a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1406	d-demangle.c	FUNCTION_27
0x400281e	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1407	d-demangle.c	FUNCTION_27
0x4002822	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1407	d-demangle.c	FUNCTION_27
0x400282b	            0x7405	                            je 0x4002832	      1407	d-demangle.c	FUNCTION_27
0x400282d	      0xe800000000	                          call 0x4002832	      1407	d-demangle.c	FUNCTION_27
0x4002832	              0xc9	                                   leave	      1407	d-demangle.c	FUNCTION_27
0x4002833	              0xc3	                                     ret	      1407	d-demangle.c	FUNCTION_27
dlang_parse_qualified	ELSE,0:CALL,15:IF,4:SWITCH,0:functions,0:FOR,0:WHILE,1:DO,1	127
0x4002834	              0x55	                                push rbp	      1414	d-demangle.c	FUNCTION_28
0x4002835	          0x4889e5	                            mov rbp, rsp	      1414	d-demangle.c	FUNCTION_28
0x4002838	        0x4883ec40	                           sub rsp, 0x40	      1414	d-demangle.c	FUNCTION_28
0x400283c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1414	d-demangle.c	FUNCTION_28
0x4002840	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1414	d-demangle.c	FUNCTION_28
0x4002844	          0x8955cc	             mov dword [rbp - 0x34], edx	      1414	d-demangle.c	FUNCTION_28
0x4002847	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1427	d-demangle.c	FUNCTION_28
0x400284f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1430	d-demangle.c	FUNCTION_28	DO_1	IF_1
0x4002853	        0x488d5001	                      lea rdx, [rax + 1]	      1430	d-demangle.c	FUNCTION_28	DO_1	IF_1
0x4002857	        0x488955f0	             mov qword [rbp - 0x10], rdx	      1430	d-demangle.c	FUNCTION_28	DO_1	IF_1
0x400285b	          0x4885c0	                           test rax, rax	      1430	d-demangle.c	FUNCTION_28	DO_1	IF_1
0x400285e	            0x7418	                            je 0x4002878	      1430	d-demangle.c	FUNCTION_28	DO_1	IF_1
0x4002860	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1431	d-demangle.c	FUNCTION_28	DO_1	CALL_1
0x4002864	      0xbe00000000	                              mov esi, 0	      1431	d-demangle.c	FUNCTION_28	DO_1	CALL_1
0x4002869	          0x4889c7	                            mov rdi, rax	      1431	d-demangle.c	FUNCTION_28	DO_1	CALL_1
0x400286c	      0xe8d8d9ffff	                  call sym.string_append	      1431	d-demangle.c	FUNCTION_28	DO_1	CALL_1
0x4002871	            0xeb05	                           jmp 0x4002878	      1434	d-demangle.c	FUNCTION_28	DO_1
0x4002873	      0x488345d001	               add qword [rbp - 0x30], 1	      1435	d-demangle.c	FUNCTION_28	DO_1
0x4002878	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1434	d-demangle.c	FUNCTION_28	DO_1
0x400287c	           0xfb600	                   movzx eax, byte [rax]	      1434	d-demangle.c	FUNCTION_28	DO_1
0x400287f	            0x3c30	                            cmp al, 0x30	      1434	d-demangle.c	FUNCTION_28	DO_1
0x4002881	            0x74f0	                            je 0x4002873	      1434	d-demangle.c	FUNCTION_28	DO_1
0x4002883	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x4002886	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x400288a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x400288e	          0x4889ce	                            mov rsi, rcx	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x4002891	          0x4889c7	                            mov rdi, rax	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x4002894	      0xe8b3ecffff	               call sym.dlang_identifier	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x4002899	        0x488945d0	             mov qword [rbp - 0x30], rax	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x400289d	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40028a2	     0xf8427010000	                            je 0x40029cf	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40028a8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40028ac	           0xfb600	                   movzx eax, byte [rax]	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40028af	            0x3c4d	                            cmp al, 0x4d	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40028b1	            0x7414	                            je 0x40028c7	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40028b3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40028b7	          0x4889c7	                            mov rdi, rax	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40028ba	      0xe8caddffff	        call sym.dlang_call_convention_p	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40028bf	            0x85c0	                           test eax, eax	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40028c1	     0xf8408010000	                            je 0x40029cf	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40028c7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1445	d-demangle.c	FUNCTION_28	DO_1	IF_2
0x40028cb	        0x488945f8	                mov qword [rbp - 8], rax	      1445	d-demangle.c	FUNCTION_28	DO_1	IF_2
0x40028cf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1446	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_4
0x40028d3	          0x4889c7	                            mov rdi, rax	      1446	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_4
0x40028d6	      0xe8f1d8ffff	                  call sym.string_length	      1446	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_4
0x40028db	          0x8945ec	             mov dword [rbp - 0x14], eax	      1446	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_4
0x40028de	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1449	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3
0x40028e2	           0xfb600	                   movzx eax, byte [rax]	      1449	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3
0x40028e5	            0x3c4d	                            cmp al, 0x4d	      1449	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3
0x40028e7	            0x752d	                           jne 0x4002916	      1449	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3
0x40028e9	      0x488345d001	               add qword [rbp - 0x30], 1	      1451	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3
0x40028ee	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x40028f2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x40028f6	          0x4889d6	                            mov rsi, rdx	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x40028f9	          0x4889c7	                            mov rdi, rax	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x40028fc	      0xe896deffff	           call sym.dlang_type_modifiers	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x4002901	        0x488945d0	             mov qword [rbp - 0x30], rax	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x4002905	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1453	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_6
0x4002908	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1453	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_6
0x400290c	            0x89d6	                            mov esi, edx	      1453	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_6
0x400290e	          0x4889c7	                            mov rdi, rax	      1453	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_6
0x4002911	      0xe8f3d8ffff	               call sym.string_setlength	      1453	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_6
0x4002916	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1463	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_7
0x400291a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1463	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_7
0x400291e	          0x4889d6	                            mov rsi, rdx	      1463	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_7
0x4002921	          0x4889c7	                            mov rdi, rax	      1463	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_7
0x4002924	      0xe894ddffff	          call sym.dlang_call_convention	      1463	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_7
0x4002929	        0x488945d0	             mov qword [rbp - 0x30], rax	      1463	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_7
0x400292d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4002931	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4002935	          0x4889d6	                            mov rsi, rdx	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4002938	          0x4889c7	                            mov rdi, rax	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x400293b	      0xe85edfffff	               call sym.dlang_attributes	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4002940	        0x488945d0	             mov qword [rbp - 0x30], rax	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4002944	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1465	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_9
0x4002947	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1465	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_9
0x400294b	            0x89d6	                            mov esi, edx	      1465	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_9
0x400294d	          0x4889c7	                            mov rdi, rax	      1465	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_9
0x4002950	      0xe8b4d8ffff	               call sym.string_setlength	      1465	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_9
0x4002955	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1467	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_10
0x4002959	      0xbe00000000	                              mov esi, 0	      1467	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_10
0x400295e	          0x4889c7	                            mov rdi, rax	      1467	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_10
0x4002961	      0xe8e3d8ffff	                  call sym.string_append	      1467	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_10
0x4002966	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x400296a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x400296e	          0x4889d6	                            mov rsi, rdx	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x4002971	          0x4889c7	                            mov rdi, rax	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x4002974	      0xe85ce2ffff	            call sym.dlang_function_args	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x4002979	        0x488945d0	             mov qword [rbp - 0x30], rax	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x400297d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1469	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_12
0x4002981	      0xbe00000000	                              mov esi, 0	      1469	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_12
0x4002986	          0x4889c7	                            mov rdi, rax	      1469	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_12
0x4002989	      0xe8bbd8ffff	                  call sym.string_append	      1469	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_12
0x400298e	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4002993	            0x7421	                            je 0x40029b6	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4002995	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4002999	           0xfb600	                   movzx eax, byte [rax]	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x400299c	           0xfbec0	                           movsx eax, al	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x400299f	           0xfb6c0	                           movzx eax, al	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x40029a2	            0x4898	                                    cdqe	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x40029a4	     0xfb784000000	             movzx eax, word [rax + rax]	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x40029ac	           0xfb7c0	                           movzx eax, ax	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x40029af	          0x83e004	                              and eax, 4	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x40029b2	            0x85c0	                           test eax, eax	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x40029b4	            0x7519	                           jne 0x40029cf	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x40029b6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1474	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4
0x40029ba	        0x488945d0	             mov qword [rbp - 0x30], rax	      1474	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4
0x40029be	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1475	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_14
0x40029c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1475	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_14
0x40029c5	            0x89d6	                            mov esi, edx	      1475	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_14
0x40029c7	          0x4889c7	                            mov rdi, rax	      1475	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_14
0x40029ca	      0xe83ad8ffff	               call sym.string_setlength	      1475	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_14
0x40029cf	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x40029d4	            0x7425	                            je 0x40029fb	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x40029d6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x40029da	           0xfb600	                   movzx eax, byte [rax]	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x40029dd	           0xfbec0	                           movsx eax, al	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x40029e0	           0xfb6c0	                           movzx eax, al	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x40029e3	            0x4898	                                    cdqe	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x40029e5	     0xfb784000000	             movzx eax, word [rax + rax]	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x40029ed	           0xfb7c0	                           movzx eax, ax	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x40029f0	          0x83e004	                              and eax, 4	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x40029f3	            0x85c0	                           test eax, eax	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x40029f5	     0xf8554feffff	                           jne 0x400284f	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x40029fb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1481	d-demangle.c	FUNCTION_28
0x40029ff	              0xc9	                                   leave	      1482	d-demangle.c	FUNCTION_28
0x4002a00	              0xc3	                                     ret	      1482	d-demangle.c	FUNCTION_28
