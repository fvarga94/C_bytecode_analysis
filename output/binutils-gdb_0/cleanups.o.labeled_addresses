discard_final_cleanups	SWITCH,0:functions,0:FOR,0:IF,0:CALL,1:WHILE,0:ELSE,0:DO,0	3
0x4000210	          0x4889fe	                            mov rsi, rdi	       222	cleanups.c	FUNCTION_12
0x4000213	      0xbf00000000	                              mov edi, 0	       223	cleanups.c	FUNCTION_12	CALL_1
0x4000218	      0xe973feffff	jmp sym.discard_my_cleanups_cleanup___cleanup	       223	cleanups.c	FUNCTION_12	CALL_1
do_final_cleanups	SWITCH,0:functions,0:FOR,0:IF,0:CALL,1:WHILE,0:ELSE,0:DO,0	3
0x40001f0	          0x4889fe	                            mov rsi, rdi	       184	cleanups.c	FUNCTION_9
0x40001f3	      0xbf00000000	                              mov edi, 0	       185	cleanups.c	FUNCTION_9	CALL_1
0x40001f8	      0xe943feffff	jmp sym.do_my_cleanups_cleanup___cleanup	       185	cleanups.c	FUNCTION_9	CALL_1
discard_cleanups	SWITCH,0:functions,0:FOR,0:IF,0:CALL,1:WHILE,0:ELSE,0:DO,0	3
0x4000200	          0x4889fe	                            mov rsi, rdi	       213	cleanups.c	FUNCTION_11
0x4000203	      0xbf00000000	                              mov edi, 0	       214	cleanups.c	FUNCTION_11	CALL_1
0x4000208	      0xe983feffff	jmp sym.discard_my_cleanups_cleanup___cleanup	       214	cleanups.c	FUNCTION_11	CALL_1
restore_final_cleanups	SWITCH,0:functions,0:FOR,0:IF,0:CALL,1:WHILE,0:ELSE,0:DO,0	12
0x4000290	    0x48813d000000	               cmp qword [0x0400029b], 0	       263	cleanups.c	FUNCTION_16	IF_1
0x400029b	              0x53	                                push rbx	       282	cleanups.c	FUNCTION_18
0x400029c	          0x4889fb	                            mov rbx, rdi	       282	cleanups.c	FUNCTION_18
0x400029f	            0x7416	                            je 0x40002b7	       263	cleanups.c	FUNCTION_16	IF_1
0x40002a1	      0xba00000000	                              mov edx, 0	       265	cleanups.c	FUNCTION_16	CALL_2
0x40002a6	      0xbe08010000	                          mov esi, 0x108	       265	cleanups.c	FUNCTION_16	CALL_2
0x40002ab	      0xbf00000000	                              mov edi, 0	       265	cleanups.c	FUNCTION_16	CALL_2
0x40002b0	            0x31c0	                            xor eax, eax	       265	cleanups.c	FUNCTION_16	CALL_2
0x40002b2	      0xe800000000	                          call 0x40002b7	       265	cleanups.c	FUNCTION_16	CALL_2
0x40002b7	    0x48891d000000	            mov qword [0x040002be], rbx 	       267	cleanups.c	FUNCTION_16
0x40002be	              0x5b	                                 pop rbx	       284	cleanups.c	FUNCTION_18
0x40002bf	              0xc3	                                     ret	       284	cleanups.c	FUNCTION_18
save_final_cleanups	SWITCH,0:functions,0:FOR,0:IF,0:CALL,1:WHILE,0:ELSE,0:DO,0	3
0x4000240	    0x488b05000000	            mov rax, qword [0x04000247] 	       233	cleanups.c	FUNCTION_13
0x4000247	    0x48c705000000	               mov qword [0x04000252], 0	       235	cleanups.c	FUNCTION_13
0x4000252	              0xc3	                                     ret	       254	cleanups.c	FUNCTION_15
restore_cleanups	SWITCH,0:functions,0:FOR,0:IF,0:CALL,1:WHILE,0:ELSE,0:DO,0	12
0x4000260	    0x48813d000000	               cmp qword [0x0400026b], 0	       263	cleanups.c	FUNCTION_16	IF_1
0x400026b	              0x53	                                push rbx	       274	cleanups.c	FUNCTION_17
0x400026c	          0x4889fb	                            mov rbx, rdi	       274	cleanups.c	FUNCTION_17
0x400026f	            0x7416	                            je 0x4000287	       263	cleanups.c	FUNCTION_16	IF_1
0x4000271	      0xba00000000	                              mov edx, 0	       265	cleanups.c	FUNCTION_16	CALL_2
0x4000276	      0xbe08010000	                          mov esi, 0x108	       265	cleanups.c	FUNCTION_16	CALL_2
0x400027b	      0xbf00000000	                              mov edi, 0	       265	cleanups.c	FUNCTION_16	CALL_2
0x4000280	            0x31c0	                            xor eax, eax	       265	cleanups.c	FUNCTION_16	CALL_2
0x4000282	      0xe800000000	                          call 0x4000287	       265	cleanups.c	FUNCTION_16	CALL_2
0x4000287	    0x48891d000000	            mov qword [0x0400028e], rbx 	       267	cleanups.c	FUNCTION_16
0x400028e	              0x5b	                                 pop rbx	       276	cleanups.c	FUNCTION_17
0x400028f	              0xc3	                                     ret	       276	cleanups.c	FUNCTION_17
null_cleanup	SWITCH,0:functions,0:FOR,0:IF,0:CALL,0:WHILE,0:ELSE,0:DO,0	1
0x40002c0	            0xf3c3	                                     ret	       295	cleanups.c	FUNCTION_19
do_my_cleanups	SWITCH,0:functions,0:FOR,0:IF,1:CALL,1:WHILE,1:ELSE,0:DO,0	27
0x4000040	            0x4154	                                push r12	       148	cleanups.c	FUNCTION_6
0x4000042	              0x55	                                push rbp	       148	cleanups.c	FUNCTION_6
0x4000043	              0x53	                                push rbx	       148	cleanups.c	FUNCTION_6
0x4000044	          0x488b1f	                    mov rbx, qword [rdi]	       151	cleanups.c	FUNCTION_6	WHILE_1
0x4000047	          0x4839de	                            cmp rsi, rbx	       151	cleanups.c	FUNCTION_6	WHILE_1
0x400004a	            0x743a	                            je 0x4000086	       151	cleanups.c	FUNCTION_6	WHILE_1
0x400004c	          0x4889fd	                            mov rbp, rdi	       151	cleanups.c	FUNCTION_6	WHILE_1
0x400004f	          0x4989f4	                            mov r12, rsi	       151	cleanups.c	FUNCTION_6	WHILE_1
0x4000052	    0x660f1f440000	                    nop word [rax + rax]	       151	cleanups.c	FUNCTION_6	WHILE_1
0x4000058	          0x488b03	                    mov rax, qword [rbx]	       153	cleanups.c	FUNCTION_6	WHILE_1
0x400005b	        0x48894500	                    mov qword [rbp], rax	       153	cleanups.c	FUNCTION_6	WHILE_1
0x400005f	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       154	cleanups.c	FUNCTION_6	WHILE_1
0x4000063	          0xff5308	                    call qword [rbx + 8]	       154	cleanups.c	FUNCTION_6	WHILE_1
0x4000066	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       155	cleanups.c	FUNCTION_6	WHILE_1	IF_1
0x400006a	          0x4885c0	                           test rax, rax	       155	cleanups.c	FUNCTION_6	WHILE_1	IF_1
0x400006d	            0x7406	                            je 0x4000075	       155	cleanups.c	FUNCTION_6	WHILE_1	IF_1
0x400006f	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       156	cleanups.c	FUNCTION_6	WHILE_1	IF_1
0x4000073	            0xffd0	                                call rax	       156	cleanups.c	FUNCTION_6	WHILE_1	IF_1
0x4000075	          0x4889df	                            mov rdi, rbx	        60	common-utils.h	FUNCTION_20
0x4000078	      0xe800000000	                          call 0x400007d	        60	common-utils.h	FUNCTION_20
0x400007d	        0x488b5d00	                    mov rbx, qword [rbp]	       151	cleanups.c	FUNCTION_6	WHILE_1
0x4000081	          0x4c39e3	                            cmp rbx, r12	       151	cleanups.c	FUNCTION_6	WHILE_1
0x4000084	            0x75d2	                           jne 0x4000058	       151	cleanups.c	FUNCTION_6	WHILE_1
0x4000086	              0x5b	                                 pop rbx	       159	cleanups.c	FUNCTION_6
0x4000087	              0x5d	                                 pop rbp	       159	cleanups.c	FUNCTION_6
0x4000088	            0x415c	                                 pop r12	       159	cleanups.c	FUNCTION_6
0x400008a	              0xc3	                                     ret	       159	cleanups.c	FUNCTION_6
make_final_cleanup	SWITCH,0:functions,0:FOR,0:IF,0:CALL,1:WHILE,0:ELSE,0:DO,0	21
0x4000180	              0x55	                                push rbp	       136	cleanups.c	FUNCTION_5
0x4000181	              0x53	                                push rbx	       136	cleanups.c	FUNCTION_5
0x4000182	          0x4889fd	                            mov rbp, rdi	       136	cleanups.c	FUNCTION_5
0x4000185	      0xbf20000000	                           mov edi, 0x20	       110	poison.h	FUNCTION_23
0x400018a	          0x4889f3	                            mov rbx, rsi	       136	cleanups.c	FUNCTION_5
0x400018d	        0x4883ec08	                              sub rsp, 8	       136	cleanups.c	FUNCTION_5
0x4000191	      0xe800000000	                          call 0x4000196	       110	poison.h	FUNCTION_23
0x4000196	          0x4889c2	                            mov rdx, rax	       110	poison.h	FUNCTION_23
0x4000199	    0x488b05000000	            mov rax, qword [0x040001a0] 	        83	cleanups.c	FUNCTION_1
0x40001a0	        0x48896a08	                mov qword [rdx + 8], rbp	        86	cleanups.c	FUNCTION_1
0x40001a4	    0x48c742100000	               mov qword [rdx + 0x10], 0	        87	cleanups.c	FUNCTION_1
0x40001ac	        0x48895a18	             mov qword [rdx + 0x18], rbx	        88	cleanups.c	FUNCTION_1
0x40001b0	    0x488915000000	            mov qword [0x040001b7], rdx 	        89	cleanups.c	FUNCTION_1
0x40001b7	          0x4885c0	                           test rax, rax	        91	cleanups.c	FUNCTION_1	CALL_1
0x40001ba	          0x488902	                    mov qword [rdx], rax	        85	cleanups.c	FUNCTION_1
0x40001bd	            0x7407	                            je 0x40001c6	        91	cleanups.c	FUNCTION_1	CALL_1
0x40001bf	        0x4883c408	                              add rsp, 8	       138	cleanups.c	FUNCTION_5
0x40001c3	              0x5b	                                 pop rbx	       138	cleanups.c	FUNCTION_5
0x40001c4	              0x5d	                                 pop rbp	       138	cleanups.c	FUNCTION_5
0x40001c5	              0xc3	                                     ret	       138	cleanups.c	FUNCTION_5
0x40001c6	      0xe800000000	                          call 0x40001cb	       138	cleanups.c	FUNCTION_5
all_cleanups	SWITCH,0:functions,0:FOR,0:IF,0:CALL,0:WHILE,0:ELSE,0:DO,0	2
0x40001d0	      0xb800000000	                              mov eax, 0	       168	cleanups.c	FUNCTION_7
0x40001d5	              0xc3	                                     ret	       168	cleanups.c	FUNCTION_7
discard_my_cleanups	SWITCH,0:functions,0:FOR,0:IF,1:CALL,1:WHILE,1:ELSE,0:DO,0	25
0x4000090	            0x4154	                                push r12	       196	cleanups.c	FUNCTION_10
0x4000092	              0x55	                                push rbp	       196	cleanups.c	FUNCTION_10
0x4000093	              0x53	                                push rbx	       196	cleanups.c	FUNCTION_10
0x4000094	          0x488b1f	                    mov rbx, qword [rdi]	       199	cleanups.c	FUNCTION_10	WHILE_1
0x4000097	          0x4839de	                            cmp rsi, rbx	       199	cleanups.c	FUNCTION_10	WHILE_1
0x400009a	            0x7433	                            je 0x40000cf	       199	cleanups.c	FUNCTION_10	WHILE_1
0x400009c	          0x4889fd	                            mov rbp, rdi	       199	cleanups.c	FUNCTION_10	WHILE_1
0x400009f	          0x4989f4	                            mov r12, rsi	       199	cleanups.c	FUNCTION_10	WHILE_1
0x40000a2	    0x660f1f440000	                    nop word [rax + rax]	       199	cleanups.c	FUNCTION_10	WHILE_1
0x40000a8	          0x488b03	                    mov rax, qword [rbx]	       201	cleanups.c	FUNCTION_10	WHILE_1
0x40000ab	        0x48894500	                    mov qword [rbp], rax	       201	cleanups.c	FUNCTION_10	WHILE_1
0x40000af	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       202	cleanups.c	FUNCTION_10	WHILE_1	IF_1
0x40000b3	          0x4885c0	                           test rax, rax	       202	cleanups.c	FUNCTION_10	WHILE_1	IF_1
0x40000b6	            0x7406	                            je 0x40000be	       202	cleanups.c	FUNCTION_10	WHILE_1	IF_1
0x40000b8	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       203	cleanups.c	FUNCTION_10	WHILE_1	IF_1
0x40000bc	            0xffd0	                                call rax	       203	cleanups.c	FUNCTION_10	WHILE_1	IF_1
0x40000be	          0x4889df	                            mov rdi, rbx	        60	common-utils.h	FUNCTION_20
0x40000c1	      0xe800000000	                          call 0x40000c6	        60	common-utils.h	FUNCTION_20
0x40000c6	        0x488b5d00	                    mov rbx, qword [rbp]	       199	cleanups.c	FUNCTION_10	WHILE_1
0x40000ca	          0x4c39e3	                            cmp rbx, r12	       199	cleanups.c	FUNCTION_10	WHILE_1
0x40000cd	            0x75d9	                           jne 0x40000a8	       199	cleanups.c	FUNCTION_10	WHILE_1
0x40000cf	              0x5b	                                 pop rbx	       206	cleanups.c	FUNCTION_10
0x40000d0	              0x5d	                                 pop rbp	       206	cleanups.c	FUNCTION_10
0x40000d1	            0x415c	                                 pop r12	       206	cleanups.c	FUNCTION_10
0x40000d3	              0xc3	                                     ret	       206	cleanups.c	FUNCTION_10
save_cleanups	SWITCH,0:functions,0:FOR,0:IF,0:CALL,1:WHILE,0:ELSE,0:DO,0	3
0x4000220	    0x488b05000000	            mov rax, qword [0x04000227] 	       233	cleanups.c	FUNCTION_13
0x4000227	    0x48c705000000	               mov qword [0x04000232], 0	       235	cleanups.c	FUNCTION_13
0x4000232	              0xc3	                                     ret	       245	cleanups.c	FUNCTION_14
make_cleanup_dtor	SWITCH,0:functions,0:FOR,0:IF,0:CALL,1:WHILE,0:ELSE,0:DO,0	22
0x4000130	            0x4154	                                push r12	       127	cleanups.c	FUNCTION_4
0x4000132	              0x55	                                push rbp	       127	cleanups.c	FUNCTION_4
0x4000133	          0x4989fc	                            mov r12, rdi	       127	cleanups.c	FUNCTION_4
0x4000136	              0x53	                                push rbx	       127	cleanups.c	FUNCTION_4
0x4000137	      0xbf20000000	                           mov edi, 0x20	       110	poison.h	FUNCTION_23
0x400013c	          0x4889f3	                            mov rbx, rsi	       127	cleanups.c	FUNCTION_4
0x400013f	          0x4889d5	                            mov rbp, rdx	       127	cleanups.c	FUNCTION_4
0x4000142	      0xe800000000	                          call 0x4000147	       110	poison.h	FUNCTION_23
0x4000147	          0x4889c1	                            mov rcx, rax	       110	poison.h	FUNCTION_23
0x400014a	    0x488b05000000	            mov rax, qword [0x04000151] 	        83	cleanups.c	FUNCTION_1
0x4000151	        0x4c896108	                mov qword [rcx + 8], r12	        86	cleanups.c	FUNCTION_1
0x4000155	        0x48896910	             mov qword [rcx + 0x10], rbp	        87	cleanups.c	FUNCTION_1
0x4000159	        0x48895918	             mov qword [rcx + 0x18], rbx	        88	cleanups.c	FUNCTION_1
0x400015d	    0x48890d000000	            mov qword [0x04000164], rcx 	        89	cleanups.c	FUNCTION_1
0x4000164	          0x4885c0	                           test rax, rax	        91	cleanups.c	FUNCTION_1	CALL_1
0x4000167	          0x488901	                    mov qword [rcx], rax	        85	cleanups.c	FUNCTION_1
0x400016a	            0x7405	                            je 0x4000171	        91	cleanups.c	FUNCTION_1	CALL_1
0x400016c	              0x5b	                                 pop rbx	       130	cleanups.c	FUNCTION_4
0x400016d	              0x5d	                                 pop rbp	       130	cleanups.c	FUNCTION_4
0x400016e	            0x415c	                                 pop r12	       130	cleanups.c	FUNCTION_4
0x4000170	              0xc3	                                     ret	       130	cleanups.c	FUNCTION_4
0x4000171	      0xe800000000	                          call 0x4000176	       130	cleanups.c	FUNCTION_4
do_cleanups	SWITCH,0:functions,0:FOR,0:IF,0:CALL,1:WHILE,0:ELSE,0:DO,0	3
0x40001e0	          0x4889fe	                            mov rsi, rdi	       175	cleanups.c	FUNCTION_8
0x40001e3	      0xbf00000000	                              mov edi, 0	       176	cleanups.c	FUNCTION_8	CALL_1
0x40001e8	      0xe953feffff	jmp sym.do_my_cleanups_cleanup___cleanup	       176	cleanups.c	FUNCTION_8	CALL_1
make_cleanup	SWITCH,0:functions,0:FOR,0:IF,0:CALL,1:WHILE,0:ELSE,0:DO,0	21
0x40000e0	              0x55	                                push rbp	       117	cleanups.c	FUNCTION_3
0x40000e1	              0x53	                                push rbx	       117	cleanups.c	FUNCTION_3
0x40000e2	          0x4889fd	                            mov rbp, rdi	       117	cleanups.c	FUNCTION_3
0x40000e5	      0xbf20000000	                           mov edi, 0x20	       110	poison.h	FUNCTION_23
0x40000ea	          0x4889f3	                            mov rbx, rsi	       117	cleanups.c	FUNCTION_3
0x40000ed	        0x4883ec08	                              sub rsp, 8	       117	cleanups.c	FUNCTION_3
0x40000f1	      0xe800000000	                          call 0x40000f6	       110	poison.h	FUNCTION_23
0x40000f6	          0x4889c2	                            mov rdx, rax	       110	poison.h	FUNCTION_23
0x40000f9	    0x488b05000000	            mov rax, qword [0x04000100] 	        83	cleanups.c	FUNCTION_1
0x4000100	        0x48896a08	                mov qword [rdx + 8], rbp	        86	cleanups.c	FUNCTION_1
0x4000104	    0x48c742100000	               mov qword [rdx + 0x10], 0	        87	cleanups.c	FUNCTION_1
0x400010c	        0x48895a18	             mov qword [rdx + 0x18], rbx	        88	cleanups.c	FUNCTION_1
0x4000110	    0x488915000000	            mov qword [0x04000117], rdx 	        89	cleanups.c	FUNCTION_1
0x4000117	          0x4885c0	                           test rax, rax	        91	cleanups.c	FUNCTION_1	CALL_1
0x400011a	          0x488902	                    mov qword [rdx], rax	        85	cleanups.c	FUNCTION_1
0x400011d	            0x7407	                            je 0x4000126	        91	cleanups.c	FUNCTION_1	CALL_1
0x400011f	        0x4883c408	                              add rsp, 8	       119	cleanups.c	FUNCTION_3
0x4000123	              0x5b	                                 pop rbx	       119	cleanups.c	FUNCTION_3
0x4000124	              0x5d	                                 pop rbp	       119	cleanups.c	FUNCTION_3
0x4000125	              0xc3	                                     ret	       119	cleanups.c	FUNCTION_3
0x4000126	      0xe800000000	                          call 0x400012b	       119	cleanups.c	FUNCTION_3
