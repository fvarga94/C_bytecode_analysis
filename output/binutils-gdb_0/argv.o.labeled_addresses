dupargv	WHILE,0:DO,0:CALL,2:functions,0:SWITCH,0:ELSE,0:IF,1:FOR,2	63
0x4000040	              0x55	                                push rbp	        73	argv.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        73	argv.c	FUNCTION_1
0x4000044	              0x53	                                push rbx	        73	argv.c	FUNCTION_1
0x4000045	        0x4883ec28	                           sub rsp, 0x28	        73	argv.c	FUNCTION_1
0x4000049	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        73	argv.c	FUNCTION_1
0x400004d	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        77	argv.c	FUNCTION_1	IF_1
0x4000052	            0x750a	                           jne 0x400005e	        77	argv.c	FUNCTION_1	IF_1
0x4000054	      0xb800000000	                              mov eax, 0	        78	argv.c	FUNCTION_1	IF_1
0x4000059	      0xe9c0000000	                           jmp 0x400011e	        78	argv.c	FUNCTION_1	IF_1
0x400005e	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	        81	argv.c	FUNCTION_1	FOR_1
0x4000065	            0xeb04	                           jmp 0x400006b	        81	argv.c	FUNCTION_1	FOR_1
0x4000067	        0x8345e401	               add dword [rbp - 0x1c], 1	        81	argv.c	FUNCTION_1	FOR_1
0x400006b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        81	argv.c	FUNCTION_1	FOR_1
0x400006e	            0x4898	                                    cdqe	        81	argv.c	FUNCTION_1	FOR_1
0x4000070	    0x488d14c50000	                        lea rdx, [rax*8]	        81	argv.c	FUNCTION_1	FOR_1
0x4000078	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        81	argv.c	FUNCTION_1	FOR_1
0x400007c	          0x4801d0	                            add rax, rdx	        81	argv.c	FUNCTION_1	FOR_1
0x400007f	          0x488b00	                    mov rax, qword [rax]	        81	argv.c	FUNCTION_1	FOR_1
0x4000082	          0x4885c0	                           test rax, rax	        81	argv.c	FUNCTION_1	FOR_1
0x4000085	            0x75e0	                           jne 0x4000067	        81	argv.c	FUNCTION_1	FOR_1
0x4000087	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        82	argv.c	FUNCTION_1	CALL_1
0x400008a	          0x83c001	                              add eax, 1	        82	argv.c	FUNCTION_1	CALL_1
0x400008d	            0x4898	                                    cdqe	        82	argv.c	FUNCTION_1	CALL_1
0x400008f	        0x48c1e003	                              shl rax, 3	        82	argv.c	FUNCTION_1	CALL_1
0x4000093	          0x4889c7	                            mov rdi, rax	        82	argv.c	FUNCTION_1	CALL_1
0x4000096	      0xe800000000	                          call 0x400009b	        82	argv.c	FUNCTION_1	CALL_1
0x400009b	        0x488945e8	             mov qword [rbp - 0x18], rax	        82	argv.c	FUNCTION_1	CALL_1
0x400009f	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	        85	argv.c	FUNCTION_1	FOR_2
0x40000a6	            0xeb3b	                           jmp 0x40000e3	        85	argv.c	FUNCTION_1	FOR_2
0x40000a8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        86	argv.c	FUNCTION_1	CALL_2
0x40000ab	            0x4898	                                    cdqe	        86	argv.c	FUNCTION_1	CALL_2
0x40000ad	    0x488d14c50000	                        lea rdx, [rax*8]	        86	argv.c	FUNCTION_1	CALL_2
0x40000b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        86	argv.c	FUNCTION_1	CALL_2
0x40000b9	        0x488d1c02	                    lea rbx, [rdx + rax]	        86	argv.c	FUNCTION_1	CALL_2
0x40000bd	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        86	argv.c	FUNCTION_1	CALL_2
0x40000c0	            0x4898	                                    cdqe	        86	argv.c	FUNCTION_1	CALL_2
0x40000c2	    0x488d14c50000	                        lea rdx, [rax*8]	        86	argv.c	FUNCTION_1	CALL_2
0x40000ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        86	argv.c	FUNCTION_1	CALL_2
0x40000ce	          0x4801d0	                            add rax, rdx	        86	argv.c	FUNCTION_1	CALL_2
0x40000d1	          0x488b00	                    mov rax, qword [rax]	        86	argv.c	FUNCTION_1	CALL_2
0x40000d4	          0x4889c7	                            mov rdi, rax	        86	argv.c	FUNCTION_1	CALL_2
0x40000d7	      0xe800000000	                          call 0x40000dc	        86	argv.c	FUNCTION_1	CALL_2
0x40000dc	          0x488903	                    mov qword [rbx], rax	        86	argv.c	FUNCTION_1	CALL_2
0x40000df	        0x8345e401	               add dword [rbp - 0x1c], 1	        85	argv.c	FUNCTION_1	FOR_2
0x40000e3	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        85	argv.c	FUNCTION_1	FOR_2
0x40000e6	            0x4898	                                    cdqe	        85	argv.c	FUNCTION_1	FOR_2
0x40000e8	    0x488d14c50000	                        lea rdx, [rax*8]	        85	argv.c	FUNCTION_1	FOR_2
0x40000f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        85	argv.c	FUNCTION_1	FOR_2
0x40000f4	          0x4801d0	                            add rax, rdx	        85	argv.c	FUNCTION_1	FOR_2
0x40000f7	          0x488b00	                    mov rax, qword [rax]	        85	argv.c	FUNCTION_1	FOR_2
0x40000fa	          0x4885c0	                           test rax, rax	        85	argv.c	FUNCTION_1	FOR_2
0x40000fd	            0x75a9	                           jne 0x40000a8	        85	argv.c	FUNCTION_1	FOR_2
0x40000ff	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        87	argv.c	FUNCTION_1
0x4000102	            0x4898	                                    cdqe	        87	argv.c	FUNCTION_1
0x4000104	    0x488d14c50000	                        lea rdx, [rax*8]	        87	argv.c	FUNCTION_1
0x400010c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        87	argv.c	FUNCTION_1
0x4000110	          0x4801d0	                            add rax, rdx	        87	argv.c	FUNCTION_1
0x4000113	    0x48c700000000	                      mov qword [rax], 0	        87	argv.c	FUNCTION_1
0x400011a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	argv.c	FUNCTION_1
0x400011e	        0x4883c428	                           add rsp, 0x28	        89	argv.c	FUNCTION_1
0x4000122	              0x5b	                                 pop rbx	        89	argv.c	FUNCTION_1
0x4000123	              0x5d	                                 pop rbp	        89	argv.c	FUNCTION_1
0x4000124	              0xc3	                                     ret	        89	argv.c	FUNCTION_1
freeargv	WHILE,0:DO,0:CALL,2:functions,0:SWITCH,0:ELSE,0:IF,1:FOR,1	24
0x4000125	              0x55	                                push rbp	       105	argv.c	FUNCTION_2
0x4000126	          0x4889e5	                            mov rbp, rsp	       105	argv.c	FUNCTION_2
0x4000129	              0x53	                                push rbx	       105	argv.c	FUNCTION_2
0x400012a	        0x4883ec18	                           sub rsp, 0x18	       105	argv.c	FUNCTION_2
0x400012e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       105	argv.c	FUNCTION_2
0x4000132	      0x48837de800	               cmp qword [rbp - 0x18], 0	       108	argv.c	FUNCTION_2	IF_1
0x4000137	            0x7429	                            je 0x4000162	       108	argv.c	FUNCTION_2	IF_1
0x4000139	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x400013d	            0xeb0f	                           jmp 0x400014e	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x400013f	          0x488b03	                    mov rax, qword [rbx]	       112	argv.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x4000142	          0x4889c7	                            mov rdi, rax	       112	argv.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x4000145	      0xe800000000	                          call 0x400014a	       112	argv.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x400014a	        0x4883c308	                              add rbx, 8	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x400014e	          0x488b03	                    mov rax, qword [rbx]	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x4000151	          0x4885c0	                           test rax, rax	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x4000154	            0x75e9	                           jne 0x400013f	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x4000156	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       114	argv.c	FUNCTION_2	IF_1	CALL_2
0x400015a	          0x4889c7	                            mov rdi, rax	       114	argv.c	FUNCTION_2	IF_1	CALL_2
0x400015d	      0xe800000000	                          call 0x4000162	       114	argv.c	FUNCTION_2	IF_1	CALL_2
0x4000162	              0x90	                                     nop	       116	argv.c	FUNCTION_2
0x4000163	        0x4883c418	                           add rsp, 0x18	       116	argv.c	FUNCTION_2
0x4000167	              0x5b	                                 pop rbx	       116	argv.c	FUNCTION_2
0x4000168	              0x5d	                                 pop rbp	       116	argv.c	FUNCTION_2
0x4000169	              0xc3	                                     ret	       116	argv.c	FUNCTION_2
expandargv	WHILE,2:DO,0:CALL,24:functions,0:SWITCH,0:ELSE,1:IF,11:FOR,0	253
0x4000599	              0x55	                                push rbp	       367	argv.c	FUNCTION_7
0x400059a	          0x4889e5	                            mov rbp, rsp	       367	argv.c	FUNCTION_7
0x400059d	    0x4881ec000100	                          sub rsp, 0x100	       367	argv.c	FUNCTION_7
0x40005a4	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	       367	argv.c	FUNCTION_7
0x40005ab	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	       367	argv.c	FUNCTION_7
0x40005b2	    0x64488b042528	                mov rax, qword fs:[0x28]	       367	argv.c	FUNCTION_7
0x40005bb	        0x488945f8	                mov qword [rbp - 8], rax	       367	argv.c	FUNCTION_7
0x40005bf	            0x31c0	                            xor eax, eax	       367	argv.c	FUNCTION_7
0x40005c1	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	       369	argv.c	FUNCTION_7
0x40005cb	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       371	argv.c	FUNCTION_7
0x40005d2	          0x488b00	                    mov rax, qword [rax]	       371	argv.c	FUNCTION_7
0x40005d5	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	       371	argv.c	FUNCTION_7
0x40005dc	    0xc7851cffffff	          mov dword [rbp - 0xe4], 0x7d0 	       374	argv.c	FUNCTION_7
0x40005e6	      0xe91b040000	                           jmp 0x4000a06	       377	argv.c	FUNCTION_7	WHILE_1
0x40005eb	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       401	argv.c	FUNCTION_7	WHILE_1
0x40005f2	          0x488b00	                    mov rax, qword [rax]	       401	argv.c	FUNCTION_7	WHILE_1
0x40005f5	    0x8b9518ffffff	             mov edx, dword [rbp - 0xe8]	       401	argv.c	FUNCTION_7	WHILE_1
0x40005fb	          0x4863d2	                         movsxd rdx, edx	       401	argv.c	FUNCTION_7	WHILE_1
0x40005fe	        0x48c1e203	                              shl rdx, 3	       401	argv.c	FUNCTION_7	WHILE_1
0x4000602	          0x4801d0	                            add rax, rdx	       401	argv.c	FUNCTION_7	WHILE_1
0x4000605	          0x488b00	                    mov rax, qword [rax]	       401	argv.c	FUNCTION_7	WHILE_1
0x4000608	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       401	argv.c	FUNCTION_7	WHILE_1
0x400060f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       402	argv.c	FUNCTION_7	WHILE_1	IF_1
0x4000616	           0xfb600	                   movzx eax, byte [rax]	       402	argv.c	FUNCTION_7	WHILE_1	IF_1
0x4000619	            0x3c40	                            cmp al, 0x40	       402	argv.c	FUNCTION_7	WHILE_1	IF_1
0x400061b	     0xf85de030000	                           jne 0x40009ff	       402	argv.c	FUNCTION_7	WHILE_1	IF_1
0x4000621	    0x83ad1cffffff	               sub dword [rbp - 0xe4], 1	       405	argv.c	FUNCTION_7	WHILE_1	IF_2
0x4000628	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	       405	argv.c	FUNCTION_7	WHILE_1	IF_2
0x400062f	            0x7530	                           jne 0x4000661	       405	argv.c	FUNCTION_7	WHILE_1	IF_2
0x4000631	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       407	argv.c	FUNCTION_7	WHILE_1	IF_2	CALL_1
0x4000638	          0x488b00	                    mov rax, qword [rax]	       407	argv.c	FUNCTION_7	WHILE_1	IF_2	CALL_1
0x400063b	          0x488b10	                    mov rdx, qword [rax]	       407	argv.c	FUNCTION_7	WHILE_1	IF_2	CALL_1
0x400063e	    0x488b05000000	            mov rax, qword [0x04000645] 	       407	argv.c	FUNCTION_7	WHILE_1	IF_2	CALL_1
0x4000645	      0xbe00000000	                              mov esi, 0	       407	argv.c	FUNCTION_7	WHILE_1	IF_2	CALL_1
0x400064a	          0x4889c7	                            mov rdi, rax	       407	argv.c	FUNCTION_7	WHILE_1	IF_2	CALL_1
0x400064d	      0xb800000000	                              mov eax, 0	       407	argv.c	FUNCTION_7	WHILE_1	IF_2	CALL_1
0x4000652	      0xe800000000	                          call 0x4000657	       407	argv.c	FUNCTION_7	WHILE_1	IF_2	CALL_1
0x4000657	      0xbf01000000	                              mov edi, 1	       408	argv.c	FUNCTION_7	WHILE_1	IF_2	CALL_2
0x400065c	      0xe800000000	                          call 0x4000661	       408	argv.c	FUNCTION_7	WHILE_1	IF_2	CALL_2
0x4000661	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       411	argv.c	FUNCTION_7	WHILE_1	IF_3	CALL_3
0x4000668	        0x488d5001	                      lea rdx, [rax + 1]	       411	argv.c	FUNCTION_7	WHILE_1	IF_3	CALL_3
0x400066c	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       411	argv.c	FUNCTION_7	WHILE_1	IF_3	CALL_3
0x4000673	          0x4889c6	                            mov rsi, rax	       411	argv.c	FUNCTION_7	WHILE_1	IF_3	CALL_3
0x4000676	          0x4889d7	                            mov rdi, rdx	       411	argv.c	FUNCTION_7	WHILE_1	IF_3	CALL_3
0x4000679	      0xe800000000	                          call 0x400067e	       411	argv.c	FUNCTION_7	WHILE_1	IF_3	CALL_3
0x400067e	            0x85c0	                           test eax, eax	       411	argv.c	FUNCTION_7	WHILE_1	IF_3	CALL_3
0x4000680	     0xf887c030000	                            js 0x4000a02	       411	argv.c	FUNCTION_7	WHILE_1	IF_3	CALL_3
0x4000686	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       413	argv.c	FUNCTION_7	WHILE_1	IF_4	CALL_4
0x400068c	      0x2500f00000	                         and eax, 0xf000	       413	argv.c	FUNCTION_7	WHILE_1	IF_4	CALL_4
0x4000691	      0x3d00400000	                         cmp eax, 0x4000	       413	argv.c	FUNCTION_7	WHILE_1	IF_4	CALL_4
0x4000696	            0x7530	                           jne 0x40006c8	       413	argv.c	FUNCTION_7	WHILE_1	IF_4	CALL_4
0x4000698	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       415	argv.c	FUNCTION_7	WHILE_1	IF_4	CALL_5
0x400069f	          0x488b00	                    mov rax, qword [rax]	       415	argv.c	FUNCTION_7	WHILE_1	IF_4	CALL_5
0x40006a2	          0x488b10	                    mov rdx, qword [rax]	       415	argv.c	FUNCTION_7	WHILE_1	IF_4	CALL_5
0x40006a5	    0x488b05000000	            mov rax, qword [0x040006ac] 	       415	argv.c	FUNCTION_7	WHILE_1	IF_4	CALL_5
0x40006ac	      0xbe00000000	                              mov esi, 0	       415	argv.c	FUNCTION_7	WHILE_1	IF_4	CALL_5
0x40006b1	          0x4889c7	                            mov rdi, rax	       415	argv.c	FUNCTION_7	WHILE_1	IF_4	CALL_5
0x40006b4	      0xb800000000	                              mov eax, 0	       415	argv.c	FUNCTION_7	WHILE_1	IF_4	CALL_5
0x40006b9	      0xe800000000	                          call 0x40006be	       415	argv.c	FUNCTION_7	WHILE_1	IF_4	CALL_5
0x40006be	      0xbf01000000	                              mov edi, 1	       416	argv.c	FUNCTION_7	WHILE_1	IF_4	CALL_6
0x40006c3	      0xe800000000	                          call 0x40006c8	       416	argv.c	FUNCTION_7	WHILE_1	IF_4	CALL_6
0x40006c8	    0x48838538ffff	               add qword [rbp - 0xc8], 1	       420	argv.c	FUNCTION_7	WHILE_1	CALL_7
0x40006d0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       420	argv.c	FUNCTION_7	WHILE_1	CALL_7
0x40006d7	      0xbe00000000	                              mov esi, 0	       420	argv.c	FUNCTION_7	WHILE_1	CALL_7
0x40006dc	          0x4889c7	                            mov rdi, rax	       420	argv.c	FUNCTION_7	WHILE_1	CALL_7
0x40006df	      0xe800000000	                          call 0x40006e4	       420	argv.c	FUNCTION_7	WHILE_1	CALL_7
0x40006e4	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       420	argv.c	FUNCTION_7	WHILE_1	CALL_7
0x40006eb	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       421	argv.c	FUNCTION_7	WHILE_1	IF_5
0x40006f3	     0xf840c030000	                            je 0x4000a05	       421	argv.c	FUNCTION_7	WHILE_1	IF_5
0x40006f9	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       423	argv.c	FUNCTION_7	WHILE_1	IF_6	CALL_8
0x4000700	      0xba02000000	                              mov edx, 2	       423	argv.c	FUNCTION_7	WHILE_1	IF_6	CALL_8
0x4000705	      0xbe00000000	                              mov esi, 0	       423	argv.c	FUNCTION_7	WHILE_1	IF_6	CALL_8
0x400070a	          0x4889c7	                            mov rdi, rax	       423	argv.c	FUNCTION_7	WHILE_1	IF_6	CALL_8
0x400070d	      0xe800000000	                          call 0x4000712	       423	argv.c	FUNCTION_7	WHILE_1	IF_6	CALL_8
0x4000712	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       423	argv.c	FUNCTION_7	WHILE_1	IF_6	CALL_8
0x4000715	     0xf84c9020000	                            je 0x40009e4	       423	argv.c	FUNCTION_7	WHILE_1	IF_6	CALL_8
0x400071b	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       425	argv.c	FUNCTION_7	WHILE_1	CALL_9
0x4000722	          0x4889c7	                            mov rdi, rax	       425	argv.c	FUNCTION_7	WHILE_1	CALL_9
0x4000725	      0xe800000000	                          call 0x400072a	       425	argv.c	FUNCTION_7	WHILE_1	CALL_9
0x400072a	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       425	argv.c	FUNCTION_7	WHILE_1	CALL_9
0x4000731	    0x4883bd48ffff	cmp qword [rbp - 0xb8], 0xffffffffffffffff	       426	argv.c	FUNCTION_7	WHILE_1	IF_7
0x4000739	     0xf84a8020000	                            je 0x40009e7	       426	argv.c	FUNCTION_7	WHILE_1	IF_7
0x400073f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       428	argv.c	FUNCTION_7	WHILE_1	IF_8	CALL_10
0x4000746	      0xba00000000	                              mov edx, 0	       428	argv.c	FUNCTION_7	WHILE_1	IF_8	CALL_10
0x400074b	      0xbe00000000	                              mov esi, 0	       428	argv.c	FUNCTION_7	WHILE_1	IF_8	CALL_10
0x4000750	          0x4889c7	                            mov rdi, rax	       428	argv.c	FUNCTION_7	WHILE_1	IF_8	CALL_10
0x4000753	      0xe800000000	                          call 0x4000758	       428	argv.c	FUNCTION_7	WHILE_1	IF_8	CALL_10
0x4000758	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       428	argv.c	FUNCTION_7	WHILE_1	IF_8	CALL_10
0x400075b	     0xf8489020000	                            je 0x40009ea	       428	argv.c	FUNCTION_7	WHILE_1	IF_8	CALL_10
0x4000761	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       430	argv.c	FUNCTION_7	WHILE_1	CALL_11
0x4000768	        0x4883c001	                              add rax, 1	       430	argv.c	FUNCTION_7	WHILE_1	CALL_11
0x400076c	          0x4889c7	                            mov rdi, rax	       430	argv.c	FUNCTION_7	WHILE_1	CALL_11
0x400076f	      0xe800000000	                          call 0x4000774	       430	argv.c	FUNCTION_7	WHILE_1	CALL_11
0x4000774	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       430	argv.c	FUNCTION_7	WHILE_1	CALL_11
0x400077b	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       431	argv.c	FUNCTION_7	WHILE_1	CALL_12
0x4000782	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	       431	argv.c	FUNCTION_7	WHILE_1	CALL_12
0x4000789	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       431	argv.c	FUNCTION_7	WHILE_1	CALL_12
0x4000790	      0xbe01000000	                              mov esi, 1	       431	argv.c	FUNCTION_7	WHILE_1	CALL_12
0x4000795	          0x4889c7	                            mov rdi, rax	       431	argv.c	FUNCTION_7	WHILE_1	CALL_12
0x4000798	      0xe800000000	                          call 0x400079d	       431	argv.c	FUNCTION_7	WHILE_1	CALL_12
0x400079d	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       431	argv.c	FUNCTION_7	WHILE_1	CALL_12
0x40007a4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       432	argv.c	FUNCTION_7	WHILE_1	IF_9
0x40007ab	    0x48398558ffff	            cmp qword [rbp - 0xa8], rax 	       432	argv.c	FUNCTION_7	WHILE_1	IF_9
0x40007b2	            0x7417	                            je 0x40007cb	       432	argv.c	FUNCTION_7	WHILE_1	IF_9
0x40007b4	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       436	argv.c	FUNCTION_7	WHILE_1	IF_9	CALL_13
0x40007bb	          0x4889c7	                            mov rdi, rax	       436	argv.c	FUNCTION_7	WHILE_1	IF_9	CALL_13
0x40007be	      0xe800000000	                          call 0x40007c3	       436	argv.c	FUNCTION_7	WHILE_1	IF_9	CALL_13
0x40007c3	            0x85c0	                           test eax, eax	       436	argv.c	FUNCTION_7	WHILE_1	IF_9	CALL_13
0x40007c5	     0xf8522020000	                           jne 0x40009ed	       436	argv.c	FUNCTION_7	WHILE_1	IF_9	CALL_13
0x40007cb	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       439	argv.c	FUNCTION_7	WHILE_1
0x40007d2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       439	argv.c	FUNCTION_7	WHILE_1
0x40007d9	          0x4801d0	                            add rax, rdx	       439	argv.c	FUNCTION_7	WHILE_1
0x40007dc	          0xc60000	                       mov byte [rax], 0	       439	argv.c	FUNCTION_7	WHILE_1
0x40007df	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       443	argv.c	FUNCTION_7	WHILE_1	IF_10	CALL_14
0x40007e6	          0x4889c7	                            mov rdi, rax	       443	argv.c	FUNCTION_7	WHILE_1	IF_10	CALL_14
0x40007e9	      0xe8bff9ffff	                call sym.only_whitespace	       443	argv.c	FUNCTION_7	WHILE_1	IF_10	CALL_14
0x40007ee	            0x85c0	                           test eax, eax	       443	argv.c	FUNCTION_7	WHILE_1	IF_10	CALL_14
0x40007f0	            0x7421	                            je 0x4000813	       443	argv.c	FUNCTION_7	WHILE_1	IF_10	CALL_14
0x40007f2	      0xbf08000000	                              mov edi, 8	       445	argv.c	FUNCTION_7	WHILE_1	IF_10	CALL_15
0x40007f7	      0xe800000000	                          call 0x40007fc	       445	argv.c	FUNCTION_7	WHILE_1	IF_10	CALL_15
0x40007fc	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	       445	argv.c	FUNCTION_7	WHILE_1	IF_10	CALL_15
0x4000803	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       446	argv.c	FUNCTION_7	WHILE_1	IF_10
0x400080a	    0x48c700000000	                      mov qword [rax], 0	       446	argv.c	FUNCTION_7	WHILE_1	IF_10
0x4000811	            0xeb16	                           jmp 0x4000829	       446	argv.c	FUNCTION_7	WHILE_1	IF_10
0x4000813	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       450	argv.c	FUNCTION_7	WHILE_1	CALL_16
0x400081a	          0x4889c7	                            mov rdi, rax	       450	argv.c	FUNCTION_7	WHILE_1	CALL_16
0x400081d	      0xe800000000	                          call 0x4000822	       450	argv.c	FUNCTION_7	WHILE_1	CALL_16
0x4000822	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	       450	argv.c	FUNCTION_7	WHILE_1	CALL_16
0x4000829	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       452	argv.c	FUNCTION_7	WHILE_1	IF_11
0x4000830	          0x488b00	                    mov rax, qword [rax]	       452	argv.c	FUNCTION_7	WHILE_1	IF_11
0x4000833	    0x483b8530ffff	             cmp rax, qword [rbp - 0xd0]	       452	argv.c	FUNCTION_7	WHILE_1	IF_11
0x400083a	            0x751f	                           jne 0x400085b	       452	argv.c	FUNCTION_7	WHILE_1	IF_11
0x400083c	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       453	argv.c	FUNCTION_7	WHILE_1	CALL_17
0x4000843	          0x488b00	                    mov rax, qword [rax]	       453	argv.c	FUNCTION_7	WHILE_1	CALL_17
0x4000846	          0x4889c7	                            mov rdi, rax	       453	argv.c	FUNCTION_7	WHILE_1	CALL_17
0x4000849	      0xe800000000	                          call 0x400084e	       453	argv.c	FUNCTION_7	WHILE_1	CALL_17
0x400084e	          0x4889c2	                            mov rdx, rax	       453	argv.c	FUNCTION_7	WHILE_1	CALL_17
0x4000851	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       453	argv.c	FUNCTION_7	WHILE_1	CALL_17
0x4000858	          0x488910	                    mov qword [rax], rdx	       453	argv.c	FUNCTION_7	WHILE_1	CALL_17
0x400085b	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	       455	argv.c	FUNCTION_7	WHILE_1
0x4000866	            0xeb08	                           jmp 0x4000870	       456	argv.c	FUNCTION_7	WHILE_1	WHILE_2
0x4000868	    0x48838528ffff	               add qword [rbp - 0xd8], 1	       457	argv.c	FUNCTION_7	WHILE_1	WHILE_2
0x4000870	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       456	argv.c	FUNCTION_7	WHILE_1	WHILE_2
0x4000877	    0x488d14c50000	                        lea rdx, [rax*8]	       456	argv.c	FUNCTION_7	WHILE_1	WHILE_2
0x400087f	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       456	argv.c	FUNCTION_7	WHILE_1	WHILE_2
0x4000886	          0x4801d0	                            add rax, rdx	       456	argv.c	FUNCTION_7	WHILE_1	WHILE_2
0x4000889	          0x488b00	                    mov rax, qword [rax]	       456	argv.c	FUNCTION_7	WHILE_1	WHILE_2
0x400088c	          0x4885c0	                           test rax, rax	       456	argv.c	FUNCTION_7	WHILE_1	WHILE_2
0x400088f	            0x75d7	                           jne 0x4000868	       456	argv.c	FUNCTION_7	WHILE_1	WHILE_2
0x4000891	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       459	argv.c	FUNCTION_7	WHILE_1	CALL_18
0x4000898	          0x488b00	                    mov rax, qword [rax]	       459	argv.c	FUNCTION_7	WHILE_1	CALL_18
0x400089b	    0x8b9518ffffff	             mov edx, dword [rbp - 0xe8]	       459	argv.c	FUNCTION_7	WHILE_1	CALL_18
0x40008a1	          0x4863d2	                         movsxd rdx, edx	       459	argv.c	FUNCTION_7	WHILE_1	CALL_18
0x40008a4	        0x48c1e203	                              shl rdx, 3	       459	argv.c	FUNCTION_7	WHILE_1	CALL_18
0x40008a8	          0x4801d0	                            add rax, rdx	       459	argv.c	FUNCTION_7	WHILE_1	CALL_18
0x40008ab	          0x488b00	                    mov rax, qword [rax]	       459	argv.c	FUNCTION_7	WHILE_1	CALL_18
0x40008ae	          0x4889c7	                            mov rdi, rax	       459	argv.c	FUNCTION_7	WHILE_1	CALL_18
0x40008b1	      0xe800000000	                          call 0x40008b6	       459	argv.c	FUNCTION_7	WHILE_1	CALL_18
0x40008b6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       464	argv.c	FUNCTION_7	WHILE_1
0x40008bd	            0x8b00	                    mov eax, dword [rax]	       464	argv.c	FUNCTION_7	WHILE_1
0x40008bf	          0x4863d0	                         movsxd rdx, eax	       464	argv.c	FUNCTION_7	WHILE_1
0x40008c2	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       464	argv.c	FUNCTION_7	WHILE_1
0x40008c9	          0x4801d0	                            add rax, rdx	       464	argv.c	FUNCTION_7	WHILE_1
0x40008cc	        0x4883c001	                              add rax, 1	       463	argv.c	FUNCTION_7	WHILE_1	CALL_19
0x40008d0	    0x488d14c50000	                        lea rdx, [rax*8]	       463	argv.c	FUNCTION_7	WHILE_1	CALL_19
0x40008d8	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       463	argv.c	FUNCTION_7	WHILE_1	CALL_19
0x40008df	          0x488b00	                    mov rax, qword [rax]	       463	argv.c	FUNCTION_7	WHILE_1	CALL_19
0x40008e2	          0x4889d6	                            mov rsi, rdx	       463	argv.c	FUNCTION_7	WHILE_1	CALL_19
0x40008e5	          0x4889c7	                            mov rdi, rax	       463	argv.c	FUNCTION_7	WHILE_1	CALL_19
0x40008e8	      0xe800000000	                          call 0x40008ed	       463	argv.c	FUNCTION_7	WHILE_1	CALL_19
0x40008ed	          0x4889c2	                            mov rdx, rax	       463	argv.c	FUNCTION_7	WHILE_1	CALL_19
0x40008f0	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       462	argv.c	FUNCTION_7	WHILE_1
0x40008f7	          0x488910	                    mov qword [rax], rdx	       462	argv.c	FUNCTION_7	WHILE_1
0x40008fa	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       466	argv.c	FUNCTION_7	WHILE_1
0x4000901	            0x8b00	                    mov eax, dword [rax]	       466	argv.c	FUNCTION_7	WHILE_1
0x4000903	    0x2b8518ffffff	             sub eax, dword [rbp - 0xe8]	       466	argv.c	FUNCTION_7	WHILE_1
0x4000909	            0x4898	                                    cdqe	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x400090b	    0x488d14c50000	                        lea rdx, [rax*8]	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x4000913	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x400091a	          0x488b00	                    mov rax, qword [rax]	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x400091d	    0x8b8d18ffffff	             mov ecx, dword [rbp - 0xe8]	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x4000923	          0x4863c9	                         movsxd rcx, ecx	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x4000926	        0x4883c101	                              add rcx, 1	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x400092a	        0x48c1e103	                              shl rcx, 3	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x400092e	          0x4801c1	                            add rcx, rax	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x4000931	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x4000938	          0x488b00	                    mov rax, qword [rax]	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x400093b	    0x8bb518ffffff	             mov esi, dword [rbp - 0xe8]	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x4000941	          0x4863fe	                         movsxd rdi, esi	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x4000944	    0x488bb528ffff	             mov rsi, qword [rbp - 0xd8]	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x400094b	          0x4801fe	                            add rsi, rdi	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x400094e	        0x48c1e603	                              shl rsi, 3	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x4000952	          0x4801f0	                            add rax, rsi	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x4000955	          0x4889ce	                            mov rsi, rcx	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x4000958	          0x4889c7	                            mov rdi, rax	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x400095b	      0xe800000000	                          call 0x4000960	       465	argv.c	FUNCTION_7	WHILE_1	CALL_20
0x4000960	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       467	argv.c	FUNCTION_7	WHILE_1	CALL_21
0x4000967	    0x488d14c50000	                        lea rdx, [rax*8]	       467	argv.c	FUNCTION_7	WHILE_1	CALL_21
0x400096f	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       467	argv.c	FUNCTION_7	WHILE_1	CALL_21
0x4000976	          0x488b00	                    mov rax, qword [rax]	       467	argv.c	FUNCTION_7	WHILE_1	CALL_21
0x4000979	    0x8b8d18ffffff	             mov ecx, dword [rbp - 0xe8]	       467	argv.c	FUNCTION_7	WHILE_1	CALL_21
0x400097f	          0x4863c9	                         movsxd rcx, ecx	       467	argv.c	FUNCTION_7	WHILE_1	CALL_21
0x4000982	        0x48c1e103	                              shl rcx, 3	       467	argv.c	FUNCTION_7	WHILE_1	CALL_21
0x4000986	          0x4801c1	                            add rcx, rax	       467	argv.c	FUNCTION_7	WHILE_1	CALL_21
0x4000989	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       467	argv.c	FUNCTION_7	WHILE_1	CALL_21
0x4000990	          0x4889c6	                            mov rsi, rax	       467	argv.c	FUNCTION_7	WHILE_1	CALL_21
0x4000993	          0x4889cf	                            mov rdi, rcx	       467	argv.c	FUNCTION_7	WHILE_1	CALL_21
0x4000996	      0xe800000000	                          call 0x400099b	       467	argv.c	FUNCTION_7	WHILE_1	CALL_21
0x400099b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       470	argv.c	FUNCTION_7	WHILE_1
0x40009a2	            0x8b00	                    mov eax, dword [rax]	       470	argv.c	FUNCTION_7	WHILE_1
0x40009a4	            0x89c2	                            mov edx, eax	       470	argv.c	FUNCTION_7	WHILE_1
0x40009a6	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       470	argv.c	FUNCTION_7	WHILE_1
0x40009ad	             0x1d0	                            add eax, edx	       470	argv.c	FUNCTION_7	WHILE_1
0x40009af	          0x83e801	                              sub eax, 1	       470	argv.c	FUNCTION_7	WHILE_1
0x40009b2	            0x89c2	                            mov edx, eax	       470	argv.c	FUNCTION_7	WHILE_1
0x40009b4	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       470	argv.c	FUNCTION_7	WHILE_1
0x40009bb	            0x8910	                    mov dword [rax], edx	       470	argv.c	FUNCTION_7	WHILE_1
0x40009bd	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       474	argv.c	FUNCTION_7	WHILE_1	CALL_22
0x40009c4	          0x4889c7	                            mov rdi, rax	       474	argv.c	FUNCTION_7	WHILE_1	CALL_22
0x40009c7	      0xe800000000	                          call 0x40009cc	       474	argv.c	FUNCTION_7	WHILE_1	CALL_22
0x40009cc	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       475	argv.c	FUNCTION_7	WHILE_1	CALL_23
0x40009d3	          0x4889c7	                            mov rdi, rax	       475	argv.c	FUNCTION_7	WHILE_1	CALL_23
0x40009d6	      0xe800000000	                          call 0x40009db	       475	argv.c	FUNCTION_7	WHILE_1	CALL_23
0x40009db	    0x83ad18ffffff	               sub dword [rbp - 0xe8], 1	       478	argv.c	FUNCTION_7	WHILE_1
0x40009e2	            0xeb0a	                           jmp 0x40009ee	       478	argv.c	FUNCTION_7	WHILE_1
0x40009e4	              0x90	                                     nop	       424	argv.c	FUNCTION_7	WHILE_1	IF_6
0x40009e5	            0xeb07	                           jmp 0x40009ee	       424	argv.c	FUNCTION_7	WHILE_1	IF_6
0x40009e7	              0x90	                                     nop	       427	argv.c	FUNCTION_7	WHILE_1	IF_7
0x40009e8	            0xeb04	                           jmp 0x40009ee	       427	argv.c	FUNCTION_7	WHILE_1	IF_7
0x40009ea	              0x90	                                     nop	       429	argv.c	FUNCTION_7	WHILE_1	IF_8
0x40009eb	            0xeb01	                           jmp 0x40009ee	       429	argv.c	FUNCTION_7	WHILE_1	IF_8
0x40009ed	              0x90	                                     nop	       437	argv.c	FUNCTION_7	WHILE_1	IF_9
0x40009ee	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       481	argv.c	FUNCTION_7	WHILE_1	CALL_24
0x40009f5	          0x4889c7	                            mov rdi, rax	       481	argv.c	FUNCTION_7	WHILE_1	CALL_24
0x40009f8	      0xe800000000	                          call 0x40009fd	       481	argv.c	FUNCTION_7	WHILE_1	CALL_24
0x40009fd	            0xeb07	                           jmp 0x4000a06	       481	argv.c	FUNCTION_7	WHILE_1	CALL_24
0x40009ff	              0x90	                                     nop	       403	argv.c	FUNCTION_7	WHILE_1	IF_1
0x4000a00	            0xeb04	                           jmp 0x4000a06	       403	argv.c	FUNCTION_7	WHILE_1	IF_1
0x4000a02	              0x90	                                     nop	       412	argv.c	FUNCTION_7	WHILE_1	IF_3
0x4000a03	            0xeb01	                           jmp 0x4000a06	       412	argv.c	FUNCTION_7	WHILE_1	IF_3
0x4000a05	              0x90	                                     nop	       422	argv.c	FUNCTION_7	WHILE_1	IF_5
0x4000a06	    0x838518ffffff	               add dword [rbp - 0xe8], 1	       377	argv.c	FUNCTION_7	WHILE_1
0x4000a0d	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       377	argv.c	FUNCTION_7	WHILE_1
0x4000a14	            0x8b00	                    mov eax, dword [rax]	       377	argv.c	FUNCTION_7	WHILE_1
0x4000a16	    0x398518ffffff	            cmp dword [rbp - 0xe8], eax 	       377	argv.c	FUNCTION_7	WHILE_1
0x4000a1c	     0xf8cc9fbffff	                            jl 0x40005eb	       377	argv.c	FUNCTION_7	WHILE_1
0x4000a22	              0x90	                                     nop	       483	argv.c	FUNCTION_7
0x4000a23	        0x488b45f8	                mov rax, qword [rbp - 8]	       483	argv.c	FUNCTION_7
0x4000a27	    0x644833042528	                xor rax, qword fs:[0x28]	       483	argv.c	FUNCTION_7
0x4000a30	            0x7405	                            je 0x4000a37	       483	argv.c	FUNCTION_7
0x4000a32	      0xe800000000	                          call 0x4000a37	       483	argv.c	FUNCTION_7
0x4000a37	              0xc9	                                   leave	       483	argv.c	FUNCTION_7
0x4000a38	              0xc3	                                     ret	       483	argv.c	FUNCTION_7
only_whitespace	WHILE,1:DO,0:CALL,1:functions,0:SWITCH,0:ELSE,0:IF,0:FOR,0	26
0x40001ad	              0x55	                                push rbp	       129	argv.c	FUNCTION_4
0x40001ae	          0x4889e5	                            mov rbp, rsp	       129	argv.c	FUNCTION_4
0x40001b1	        0x48897df8	                mov qword [rbp - 8], rdi	       129	argv.c	FUNCTION_4
0x40001b5	            0xeb05	                           jmp 0x40001bc	       130	argv.c	FUNCTION_4	WHILE_1	CALL_1
0x40001b7	      0x488345f801	                  add qword [rbp - 8], 1	       131	argv.c	FUNCTION_4	WHILE_1
0x40001bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       130	argv.c	FUNCTION_4	WHILE_1	CALL_1
0x40001c0	           0xfb600	                   movzx eax, byte [rax]	       130	argv.c	FUNCTION_4	WHILE_1	CALL_1
0x40001c3	            0x84c0	                             test al, al	       130	argv.c	FUNCTION_4	WHILE_1	CALL_1
0x40001c5	            0x7421	                            je 0x40001e8	       130	argv.c	FUNCTION_4	WHILE_1	CALL_1
0x40001c7	        0x488b45f8	                mov rax, qword [rbp - 8]	       130	argv.c	FUNCTION_4	WHILE_1	CALL_1
0x40001cb	           0xfb600	                   movzx eax, byte [rax]	       130	argv.c	FUNCTION_4	WHILE_1	CALL_1
0x40001ce	           0xfbec0	                           movsx eax, al	       130	argv.c	FUNCTION_4	WHILE_1	CALL_1
0x40001d1	           0xfb6c0	                           movzx eax, al	       130	argv.c	FUNCTION_4	WHILE_1	CALL_1
0x40001d4	            0x4898	                                    cdqe	       130	argv.c	FUNCTION_4	WHILE_1	CALL_1
0x40001d6	     0xfb784000000	             movzx eax, word [rax + rax]	       130	argv.c	FUNCTION_4	WHILE_1	CALL_1
0x40001de	           0xfb7c0	                           movzx eax, ax	       130	argv.c	FUNCTION_4	WHILE_1	CALL_1
0x40001e1	          0x83e040	                           and eax, 0x40	       130	argv.c	FUNCTION_4	WHILE_1	CALL_1
0x40001e4	            0x85c0	                           test eax, eax	       130	argv.c	FUNCTION_4	WHILE_1	CALL_1
0x40001e6	            0x75cf	                           jne 0x40001b7	       130	argv.c	FUNCTION_4	WHILE_1	CALL_1
0x40001e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       133	argv.c	FUNCTION_4
0x40001ec	           0xfb600	                   movzx eax, byte [rax]	       133	argv.c	FUNCTION_4
0x40001ef	            0x84c0	                             test al, al	       133	argv.c	FUNCTION_4
0x40001f1	           0xf94c0	                                 sete al	       133	argv.c	FUNCTION_4
0x40001f4	           0xfb6c0	                           movzx eax, al	       133	argv.c	FUNCTION_4
0x40001f7	              0x5d	                                 pop rbp	       134	argv.c	FUNCTION_4
0x40001f8	              0xc3	                                     ret	       134	argv.c	FUNCTION_4
writeargv	WHILE,2:DO,0:CALL,4:functions,0:SWITCH,0:ELSE,0:IF,5:FOR,0	69
0x400049d	              0x55	                                push rbp	       301	argv.c	FUNCTION_6
0x400049e	          0x4889e5	                            mov rbp, rsp	       301	argv.c	FUNCTION_6
0x40004a1	        0x4883ec20	                           sub rsp, 0x20	       301	argv.c	FUNCTION_6
0x40004a5	        0x48897de8	             mov qword [rbp - 0x18], rdi	       301	argv.c	FUNCTION_6
0x40004a9	        0x488975e0	             mov qword [rbp - 0x20], rsi	       301	argv.c	FUNCTION_6
0x40004ad	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       302	argv.c	FUNCTION_6
0x40004b4	      0x48837de000	               cmp qword [rbp - 0x20], 0	       304	argv.c	FUNCTION_6	IF_1
0x40004b9	     0xf85c5000000	                           jne 0x4000584	       304	argv.c	FUNCTION_6	IF_1
0x40004bf	      0xb801000000	                              mov eax, 1	       305	argv.c	FUNCTION_6	IF_1
0x40004c4	      0xe9ce000000	                           jmp 0x4000597	       305	argv.c	FUNCTION_6	IF_1
0x40004c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       309	argv.c	FUNCTION_6	WHILE_1
0x40004cd	          0x488b00	                    mov rax, qword [rax]	       309	argv.c	FUNCTION_6	WHILE_1
0x40004d0	        0x488945f8	                mov qword [rbp - 8], rax	       309	argv.c	FUNCTION_6	WHILE_1
0x40004d4	            0xeb7b	                           jmp 0x4000551	       311	argv.c	FUNCTION_6	WHILE_1	WHILE_2
0x40004d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       313	argv.c	FUNCTION_6	WHILE_1	WHILE_2
0x40004da	           0xfb600	                   movzx eax, byte [rax]	       313	argv.c	FUNCTION_6	WHILE_1	WHILE_2
0x40004dd	          0x8845f3	                mov byte [rbp - 0xd], al	       313	argv.c	FUNCTION_6	WHILE_1	WHILE_2
0x40004e0	         0xfbe45f3	             movsx eax, byte [rbp - 0xd]	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x40004e4	           0xfb6c0	                           movzx eax, al	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x40004e7	            0x4898	                                    cdqe	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x40004e9	     0xfb784000000	             movzx eax, word [rax + rax]	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x40004f1	           0xfb7c0	                           movzx eax, ax	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x40004f4	          0x83e040	                           and eax, 0x40	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x40004f7	            0x85c0	                           test eax, eax	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x40004f9	            0x7512	                           jne 0x400050d	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x40004fb	        0x807df35c	              cmp byte [rbp - 0xd], 0x5c	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x40004ff	            0x740c	                            je 0x400050d	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x4000501	        0x807df327	              cmp byte [rbp - 0xd], 0x27	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x4000505	            0x7406	                            je 0x400050d	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x4000507	        0x807df322	              cmp byte [rbp - 0xd], 0x22	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x400050b	            0x751f	                           jne 0x400052c	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x400050d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       316	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3	CALL_2
0x4000511	          0x4889c6	                            mov rsi, rax	       316	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3	CALL_2
0x4000514	      0xbf5c000000	                           mov edi, 0x5c	       316	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3	CALL_2
0x4000519	      0xe800000000	                          call 0x400051e	       316	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3	CALL_2
0x400051e	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       316	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3	CALL_2
0x4000521	            0x7509	                           jne 0x400052c	       316	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3	CALL_2
0x4000523	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       318	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3
0x400052a	            0xeb68	                           jmp 0x4000594	       319	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3
0x400052c	         0xfbe45f3	             movsx eax, byte [rbp - 0xd]	       322	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4	CALL_3
0x4000530	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       322	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4	CALL_3
0x4000534	          0x4889d6	                            mov rsi, rdx	       322	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4	CALL_3
0x4000537	            0x89c7	                            mov edi, eax	       322	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4	CALL_3
0x4000539	      0xe800000000	                          call 0x400053e	       322	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4	CALL_3
0x400053e	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       322	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4	CALL_3
0x4000541	            0x7509	                           jne 0x400054c	       322	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4	CALL_3
0x4000543	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       324	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4
0x400054a	            0xeb48	                           jmp 0x4000594	       325	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4
0x400054c	      0x488345f801	                  add qword [rbp - 8], 1	       327	argv.c	FUNCTION_6	WHILE_1	WHILE_2
0x4000551	        0x488b45f8	                mov rax, qword [rbp - 8]	       311	argv.c	FUNCTION_6	WHILE_1	WHILE_2
0x4000555	           0xfb600	                   movzx eax, byte [rax]	       311	argv.c	FUNCTION_6	WHILE_1	WHILE_2
0x4000558	            0x84c0	                             test al, al	       311	argv.c	FUNCTION_6	WHILE_1	WHILE_2
0x400055a	     0xf8576ffffff	                           jne 0x40004d6	       311	argv.c	FUNCTION_6	WHILE_1	WHILE_2
0x4000560	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       330	argv.c	FUNCTION_6	WHILE_1	IF_5	CALL_4
0x4000564	          0x4889c6	                            mov rsi, rax	       330	argv.c	FUNCTION_6	WHILE_1	IF_5	CALL_4
0x4000567	      0xbf0a000000	                            mov edi, 0xa	       330	argv.c	FUNCTION_6	WHILE_1	IF_5	CALL_4
0x400056c	      0xe800000000	                          call 0x4000571	       330	argv.c	FUNCTION_6	WHILE_1	IF_5	CALL_4
0x4000571	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       330	argv.c	FUNCTION_6	WHILE_1	IF_5	CALL_4
0x4000574	            0x7509	                           jne 0x400057f	       330	argv.c	FUNCTION_6	WHILE_1	IF_5	CALL_4
0x4000576	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       332	argv.c	FUNCTION_6	WHILE_1	IF_5
0x400057d	            0xeb15	                           jmp 0x4000594	       333	argv.c	FUNCTION_6	WHILE_1	IF_5
0x400057f	      0x488345e808	               add qword [rbp - 0x18], 8	       335	argv.c	FUNCTION_6	WHILE_1
0x4000584	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       307	argv.c	FUNCTION_6	WHILE_1
0x4000588	          0x488b00	                    mov rax, qword [rax]	       307	argv.c	FUNCTION_6	WHILE_1
0x400058b	          0x4885c0	                           test rax, rax	       307	argv.c	FUNCTION_6	WHILE_1
0x400058e	     0xf8535ffffff	                           jne 0x40004c9	       307	argv.c	FUNCTION_6	WHILE_1
0x4000594	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       339	argv.c	FUNCTION_6
0x4000597	              0xc9	                                   leave	       340	argv.c	FUNCTION_6
0x4000598	              0xc3	                                     ret	       340	argv.c	FUNCTION_6
countargv	WHILE,0:DO,0:CALL,0:functions,0:SWITCH,0:ELSE,0:IF,1:FOR,1	21
0x4000a39	              0x55	                                push rbp	       498	argv.c	FUNCTION_8
0x4000a3a	          0x4889e5	                            mov rbp, rsp	       498	argv.c	FUNCTION_8
0x4000a3d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       498	argv.c	FUNCTION_8
0x4000a41	      0x48837de800	               cmp qword [rbp - 0x18], 0	       501	argv.c	FUNCTION_8	IF_1
0x4000a46	            0x7507	                           jne 0x4000a4f	       501	argv.c	FUNCTION_8	IF_1
0x4000a48	      0xb800000000	                              mov eax, 0	       502	argv.c	FUNCTION_8	IF_1
0x4000a4d	            0xeb2c	                           jmp 0x4000a7b	       502	argv.c	FUNCTION_8	IF_1
0x4000a4f	    0xc745fc000000	                  mov dword [rbp - 4], 0	       503	argv.c	FUNCTION_8	FOR_1
0x4000a56	            0xeb04	                           jmp 0x4000a5c	       503	argv.c	FUNCTION_8	FOR_1
0x4000a58	        0x8345fc01	                  add dword [rbp - 4], 1	       503	argv.c	FUNCTION_8	FOR_1
0x4000a5c	          0x8b45fc	                mov eax, dword [rbp - 4]	       503	argv.c	FUNCTION_8	FOR_1
0x4000a5f	            0x4898	                                    cdqe	       503	argv.c	FUNCTION_8	FOR_1
0x4000a61	    0x488d14c50000	                        lea rdx, [rax*8]	       503	argv.c	FUNCTION_8	FOR_1
0x4000a69	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       503	argv.c	FUNCTION_8	FOR_1
0x4000a6d	          0x4801d0	                            add rax, rdx	       503	argv.c	FUNCTION_8	FOR_1
0x4000a70	          0x488b00	                    mov rax, qword [rax]	       503	argv.c	FUNCTION_8	FOR_1
0x4000a73	          0x4885c0	                           test rax, rax	       503	argv.c	FUNCTION_8	FOR_1
0x4000a76	            0x75e0	                           jne 0x4000a58	       503	argv.c	FUNCTION_8	FOR_1
0x4000a78	          0x8b45fc	                mov eax, dword [rbp - 4]	       505	argv.c	FUNCTION_8
0x4000a7b	              0x5d	                                 pop rbp	       506	argv.c	FUNCTION_8
0x4000a7c	              0xc3	                                     ret	       506	argv.c	FUNCTION_8
consume_whitespace	WHILE,1:DO,0:CALL,1:functions,0:SWITCH,0:ELSE,0:IF,0:FOR,0	23
0x400016a	              0x55	                                push rbp	       120	argv.c	FUNCTION_3
0x400016b	          0x4889e5	                            mov rbp, rsp	       120	argv.c	FUNCTION_3
0x400016e	        0x48897df8	                mov qword [rbp - 8], rdi	       120	argv.c	FUNCTION_3
0x4000172	            0xeb12	                           jmp 0x4000186	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000174	        0x488b45f8	                mov rax, qword [rbp - 8]	       123	argv.c	FUNCTION_3	WHILE_1
0x4000178	          0x488b00	                    mov rax, qword [rax]	       123	argv.c	FUNCTION_3	WHILE_1
0x400017b	        0x488d5001	                      lea rdx, [rax + 1]	       123	argv.c	FUNCTION_3	WHILE_1
0x400017f	        0x488b45f8	                mov rax, qword [rbp - 8]	       123	argv.c	FUNCTION_3	WHILE_1
0x4000183	          0x488910	                    mov qword [rax], rdx	       123	argv.c	FUNCTION_3	WHILE_1
0x4000186	        0x488b45f8	                mov rax, qword [rbp - 8]	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x400018a	          0x488b00	                    mov rax, qword [rax]	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x400018d	           0xfb600	                   movzx eax, byte [rax]	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000190	           0xfbec0	                           movsx eax, al	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000193	           0xfb6c0	                           movzx eax, al	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000196	            0x4898	                                    cdqe	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000198	     0xfb784000000	             movzx eax, word [rax + rax]	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x40001a0	           0xfb7c0	                           movzx eax, ax	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x40001a3	          0x83e040	                           and eax, 0x40	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x40001a6	            0x85c0	                           test eax, eax	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x40001a8	            0x75ca	                           jne 0x4000174	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x40001aa	              0x90	                                     nop	       125	argv.c	FUNCTION_3
0x40001ab	              0x5d	                                 pop rbp	       125	argv.c	FUNCTION_3
0x40001ac	              0xc3	                                     ret	       125	argv.c	FUNCTION_3
buildargv	WHILE,1:DO,1:CALL,9:functions,0:SWITCH,0:ELSE,10:IF,12:FOR,0	180
0x40001f9	              0x55	                                push rbp	       177	argv.c	FUNCTION_5
0x40001fa	          0x4889e5	                            mov rbp, rsp	       177	argv.c	FUNCTION_5
0x40001fd	              0x53	                                push rbx	       177	argv.c	FUNCTION_5
0x40001fe	        0x4883ec58	                           sub rsp, 0x58	       177	argv.c	FUNCTION_5
0x4000202	        0x48897da8	             mov qword [rbp - 0x58], rdi	       177	argv.c	FUNCTION_5
0x4000206	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       180	argv.c	FUNCTION_5
0x400020d	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       181	argv.c	FUNCTION_5
0x4000214	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       182	argv.c	FUNCTION_5
0x400021b	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       183	argv.c	FUNCTION_5
0x4000222	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       184	argv.c	FUNCTION_5
0x4000229	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       185	argv.c	FUNCTION_5
0x4000231	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       188	argv.c	FUNCTION_5	IF_1
0x4000235	          0x4885c0	                           test rax, rax	       188	argv.c	FUNCTION_5	IF_1
0x4000238	     0xf8454020000	                            je 0x4000492	       188	argv.c	FUNCTION_5	IF_1
0x400023e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x4000242	          0x4889c7	                            mov rdi, rax	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x4000245	      0xe800000000	                          call 0x400024a	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x400024a	        0x4883c001	                              add rax, 1	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x400024e	          0x4889c7	                            mov rdi, rax	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x4000251	      0xe800000000	                          call 0x4000256	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x4000256	        0x488945e8	             mov qword [rbp - 0x18], rax	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x400025a	        0x488d45a8	                   lea rax, [rbp - 0x58]	       196	argv.c	FUNCTION_5	IF_1	DO_1	CALL_3
0x400025e	          0x4889c7	                            mov rdi, rax	       196	argv.c	FUNCTION_5	IF_1	DO_1	CALL_3
0x4000261	      0xe804ffffff	             call sym.consume_whitespace	       196	argv.c	FUNCTION_5	IF_1	DO_1	CALL_3
0x4000266	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x400026a	            0x740b	                            je 0x4000277	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x400026c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x400026f	          0x83e801	                              sub eax, 1	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x4000272	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x4000275	            0x7f6b	                            jg 0x40002e2	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x4000277	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       201	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3
0x400027c	            0x751e	                           jne 0x400029c	       201	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3
0x400027e	    0xc745cc080000	               mov dword [rbp - 0x34], 8	       203	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3
0x4000285	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       204	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3	CALL_4
0x4000288	            0x4898	                                    cdqe	       204	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3	CALL_4
0x400028a	        0x48c1e003	                              shl rax, 3	       204	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3	CALL_4
0x400028e	          0x4889c7	                            mov rdi, rax	       204	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3	CALL_4
0x4000291	      0xe800000000	                          call 0x4000296	       204	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3	CALL_4
0x4000296	        0x488945e0	             mov qword [rbp - 0x20], rax	       204	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3	CALL_4
0x400029a	            0xeb23	                           jmp 0x40002bf	       204	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3	CALL_4
0x400029c	          0xd165cc	               shl dword [rbp - 0x34], 1	       208	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1
0x400029f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       209	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1	CALL_5
0x40002a2	            0x4898	                                    cdqe	       209	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1	CALL_5
0x40002a4	    0x488d14c50000	                        lea rdx, [rax*8]	       209	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1	CALL_5
0x40002ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       209	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1	CALL_5
0x40002b0	          0x4889d6	                            mov rsi, rdx	       209	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1	CALL_5
0x40002b3	          0x4889c7	                            mov rdi, rax	       209	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1	CALL_5
0x40002b6	      0xe800000000	                          call 0x40002bb	       209	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1	CALL_5
0x40002bb	        0x488945e0	             mov qword [rbp - 0x20], rax	       209	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1	CALL_5
0x40002bf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       211	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40002c3	        0x488945d8	             mov qword [rbp - 0x28], rax	       211	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40002c7	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       212	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40002ca	            0x4898	                                    cdqe	       212	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40002cc	    0x488d14c50000	                        lea rdx, [rax*8]	       212	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40002d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       212	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40002d8	          0x4801d0	                            add rax, rdx	       212	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40002db	    0x48c700000000	                      mov qword [rax], 0	       212	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40002e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       215	argv.c	FUNCTION_5	IF_1	DO_1
0x40002e6	        0x488945d0	             mov qword [rbp - 0x30], rax	       215	argv.c	FUNCTION_5	IF_1	DO_1
0x40002ea	      0xe923010000	                           jmp 0x4000412	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x40002ef	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x40002f3	           0xfb600	                   movzx eax, byte [rax]	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x40002f6	           0xfbec0	                           movsx eax, al	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x40002f9	           0xfb6c0	                           movzx eax, al	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x40002fc	            0x4898	                                    cdqe	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x40002fe	     0xfb784000000	             movzx eax, word [rax + rax]	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x4000306	           0xfb7c0	                           movzx eax, ax	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x4000309	          0x83e040	                           and eax, 0x40	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x400030c	            0x85c0	                           test eax, eax	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x400030e	            0x7416	                            je 0x4000326	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x4000310	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x4000314	            0x7510	                           jne 0x4000326	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x4000316	        0x837dc000	               cmp dword [rbp - 0x40], 0	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x400031a	            0x750a	                           jne 0x4000326	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x400031c	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x4000320	     0xf84fb000000	                            je 0x4000421	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x4000326	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       224	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x400032a	            0x7421	                            je 0x400034d	       224	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x400032c	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       226	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x4000333	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       227	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x4000337	        0x488d5001	                      lea rdx, [rax + 1]	       227	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x400033b	        0x488955d0	             mov qword [rbp - 0x30], rdx	       227	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x400033f	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       227	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x4000343	           0xfb612	                   movzx edx, byte [rdx]	       227	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x4000346	            0x8810	                      mov byte [rax], dl	       227	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x4000348	      0xe9b9000000	                           jmp 0x4000406	       227	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x400034d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       229	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_3	IF_6
0x4000351	           0xfb600	                   movzx eax, byte [rax]	       229	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_3	IF_6
0x4000354	            0x3c5c	                            cmp al, 0x5c	       229	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_3	IF_6
0x4000356	            0x750c	                           jne 0x4000364	       229	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_3	IF_6
0x4000358	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	       231	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_3	IF_6
0x400035f	      0xe9a2000000	                           jmp 0x4000406	       231	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_3	IF_6
0x4000364	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       233	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7
0x4000368	            0x742e	                            je 0x4000398	       233	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7
0x400036a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       235	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	IF_8
0x400036e	           0xfb600	                   movzx eax, byte [rax]	       235	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	IF_8
0x4000371	            0x3c27	                            cmp al, 0x27	       235	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	IF_8
0x4000373	            0x750c	                           jne 0x4000381	       235	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	IF_8
0x4000375	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       237	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	IF_8
0x400037c	      0xe985000000	                           jmp 0x4000406	       237	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	IF_8
0x4000381	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       241	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	ELSE_5
0x4000385	        0x488d5001	                      lea rdx, [rax + 1]	       241	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	ELSE_5
0x4000389	        0x488955d0	             mov qword [rbp - 0x30], rdx	       241	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	ELSE_5
0x400038d	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       241	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	ELSE_5
0x4000391	           0xfb612	                   movzx edx, byte [rdx]	       241	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	ELSE_5
0x4000394	            0x8810	                      mov byte [rax], dl	       241	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	ELSE_5
0x4000396	            0xeb6e	                           jmp 0x4000406	       241	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	ELSE_5
0x4000398	        0x837dc000	               cmp dword [rbp - 0x40], 0	       244	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9
0x400039c	            0x742b	                            je 0x40003c9	       244	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9
0x400039e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       246	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	IF_10
0x40003a2	           0xfb600	                   movzx eax, byte [rax]	       246	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	IF_10
0x40003a5	            0x3c22	                            cmp al, 0x22	       246	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	IF_10
0x40003a7	            0x7509	                           jne 0x40003b2	       246	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	IF_10
0x40003a9	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       248	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	IF_10
0x40003b0	            0xeb54	                           jmp 0x4000406	       248	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	IF_10
0x40003b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       252	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	ELSE_7
0x40003b6	        0x488d5001	                      lea rdx, [rax + 1]	       252	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	ELSE_7
0x40003ba	        0x488955d0	             mov qword [rbp - 0x30], rdx	       252	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	ELSE_7
0x40003be	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       252	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	ELSE_7
0x40003c2	           0xfb612	                   movzx edx, byte [rdx]	       252	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	ELSE_7
0x40003c5	            0x8810	                      mov byte [rax], dl	       252	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	ELSE_7
0x40003c7	            0xeb3d	                           jmp 0x4000406	       252	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	ELSE_7
0x40003c9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       257	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x40003cd	           0xfb600	                   movzx eax, byte [rax]	       257	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x40003d0	            0x3c27	                            cmp al, 0x27	       257	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x40003d2	            0x7509	                           jne 0x40003dd	       257	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x40003d4	    0xc745bc010000	               mov dword [rbp - 0x44], 1	       259	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x40003db	            0xeb29	                           jmp 0x4000406	       259	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x40003dd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       261	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_9	IF_12
0x40003e1	           0xfb600	                   movzx eax, byte [rax]	       261	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_9	IF_12
0x40003e4	            0x3c22	                            cmp al, 0x22	       261	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_9	IF_12
0x40003e6	            0x7509	                           jne 0x40003f1	       261	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_9	IF_12
0x40003e8	    0xc745c0010000	               mov dword [rbp - 0x40], 1	       263	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_9	IF_12
0x40003ef	            0xeb15	                           jmp 0x4000406	       263	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_9	IF_12
0x40003f1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       267	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_10
0x40003f5	        0x488d5001	                      lea rdx, [rax + 1]	       267	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_10
0x40003f9	        0x488955d0	             mov qword [rbp - 0x30], rdx	       267	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_10
0x40003fd	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       267	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_10
0x4000401	           0xfb612	                   movzx edx, byte [rdx]	       267	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_10
0x4000404	            0x8810	                      mov byte [rax], dl	       267	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_10
0x4000406	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       270	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2
0x400040a	        0x4883c001	                              add rax, 1	       270	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2
0x400040e	        0x488945a8	             mov qword [rbp - 0x58], rax	       270	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2
0x4000412	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x4000416	           0xfb600	                   movzx eax, byte [rax]	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x4000419	            0x84c0	                             test al, al	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x400041b	     0xf85cefeffff	                           jne 0x40002ef	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x4000421	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       273	argv.c	FUNCTION_5	IF_1	DO_1
0x4000425	          0xc60000	                       mov byte [rax], 0	       273	argv.c	FUNCTION_5	IF_1	DO_1
0x4000428	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x400042b	            0x4898	                                    cdqe	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x400042d	    0x488d14c50000	                        lea rdx, [rax*8]	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x4000435	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x4000439	        0x488d1c02	                    lea rbx, [rdx + rax]	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x400043d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x4000441	          0x4889c7	                            mov rdi, rax	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x4000444	      0xe800000000	                          call 0x4000449	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x4000449	          0x488903	                    mov qword [rbx], rax	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x400044c	        0x8345c801	               add dword [rbp - 0x38], 1	       275	argv.c	FUNCTION_5	IF_1	DO_1
0x4000450	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       276	argv.c	FUNCTION_5	IF_1	DO_1
0x4000453	            0x4898	                                    cdqe	       276	argv.c	FUNCTION_5	IF_1	DO_1
0x4000455	    0x488d14c50000	                        lea rdx, [rax*8]	       276	argv.c	FUNCTION_5	IF_1	DO_1
0x400045d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       276	argv.c	FUNCTION_5	IF_1	DO_1
0x4000461	          0x4801d0	                            add rax, rdx	       276	argv.c	FUNCTION_5	IF_1	DO_1
0x4000464	    0x48c700000000	                      mov qword [rax], 0	       276	argv.c	FUNCTION_5	IF_1	DO_1
0x400046b	        0x488d45a8	                   lea rax, [rbp - 0x58]	       278	argv.c	FUNCTION_5	IF_1	DO_1	CALL_8
0x400046f	          0x4889c7	                            mov rdi, rax	       278	argv.c	FUNCTION_5	IF_1	DO_1	CALL_8
0x4000472	      0xe8f3fcffff	             call sym.consume_whitespace	       278	argv.c	FUNCTION_5	IF_1	DO_1	CALL_8
0x4000477	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       280	argv.c	FUNCTION_5	IF_1	WHILE_1
0x400047b	           0xfb600	                   movzx eax, byte [rax]	       280	argv.c	FUNCTION_5	IF_1	WHILE_1
0x400047e	            0x84c0	                             test al, al	       280	argv.c	FUNCTION_5	IF_1	WHILE_1
0x4000480	     0xf85d4fdffff	                           jne 0x400025a	       280	argv.c	FUNCTION_5	IF_1	WHILE_1
0x4000486	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       282	argv.c	FUNCTION_5	IF_1	CALL_9
0x400048a	          0x4889c7	                            mov rdi, rax	       282	argv.c	FUNCTION_5	IF_1	CALL_9
0x400048d	      0xe800000000	                          call 0x4000492	       282	argv.c	FUNCTION_5	IF_1	CALL_9
0x4000492	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       284	argv.c	FUNCTION_5
0x4000496	        0x4883c458	                           add rsp, 0x58	       285	argv.c	FUNCTION_5
0x400049a	              0x5b	                                 pop rbx	       285	argv.c	FUNCTION_5
0x400049b	              0x5d	                                 pop rbp	       285	argv.c	FUNCTION_5
0x400049c	              0xc3	                                     ret	       285	argv.c	FUNCTION_5
