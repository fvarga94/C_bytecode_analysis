ldversion	DO,0:FOR,0:ELSE,0:WHILE,1:CALL,10:IF,2:functions,0:SWITCH,0	53
0x4000040	              0x55	                                push rbp	        35	ldver.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        35	ldver.c	FUNCTION_1
0x4000044	        0x4883ec20	                           sub rsp, 0x20	        35	ldver.c	FUNCTION_1
0x4000048	          0x897dec	             mov dword [rbp - 0x14], edi	        35	ldver.c	FUNCTION_1
0x400004b	      0xbf00000000	                              mov edi, 0	        37	ldver.c	FUNCTION_1	CALL_2
0x4000050	      0xe800000000	                          call 0x4000055	        37	ldver.c	FUNCTION_1	CALL_2
0x4000055	          0x4889c1	                            mov rcx, rax	        37	ldver.c	FUNCTION_1	CALL_2
0x4000058	    0x488b05000000	            mov rax, qword [0x0400005f] 	        37	ldver.c	FUNCTION_1	CALL_2
0x400005f	      0xba00000000	                              mov edx, 0	        37	ldver.c	FUNCTION_1	CALL_2
0x4000064	          0x4889ce	                            mov rsi, rcx	        37	ldver.c	FUNCTION_1	CALL_2
0x4000067	          0x4889c7	                            mov rdi, rax	        37	ldver.c	FUNCTION_1	CALL_2
0x400006a	      0xb800000000	                              mov eax, 0	        37	ldver.c	FUNCTION_1	CALL_2
0x400006f	      0xe800000000	                          call 0x4000074	        37	ldver.c	FUNCTION_1	CALL_2
0x4000074	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        39	ldver.c	FUNCTION_1	IF_1
0x4000077	          0x83e002	                              and eax, 2	        39	ldver.c	FUNCTION_1	IF_1
0x400007a	            0x85c0	                           test eax, eax	        39	ldver.c	FUNCTION_1	IF_1
0x400007c	            0x742e	                            je 0x40000ac	        39	ldver.c	FUNCTION_1	IF_1
0x400007e	      0xbf00000000	                              mov edi, 0	        41	ldver.c	FUNCTION_1	IF_1	CALL_4
0x4000083	      0xe800000000	                          call 0x4000088	        41	ldver.c	FUNCTION_1	IF_1	CALL_4
0x4000088	          0x4889c7	                            mov rdi, rax	        41	ldver.c	FUNCTION_1	IF_1	CALL_4
0x400008b	      0xb800000000	                              mov eax, 0	        41	ldver.c	FUNCTION_1	IF_1	CALL_4
0x4000090	      0xe800000000	                          call 0x4000095	        41	ldver.c	FUNCTION_1	IF_1	CALL_4
0x4000095	      0xbf00000000	                              mov edi, 0	        42	ldver.c	FUNCTION_1	IF_1	CALL_6
0x400009a	      0xe800000000	                          call 0x400009f	        42	ldver.c	FUNCTION_1	IF_1	CALL_6
0x400009f	          0x4889c7	                            mov rdi, rax	        42	ldver.c	FUNCTION_1	IF_1	CALL_6
0x40000a2	      0xb800000000	                              mov eax, 0	        42	ldver.c	FUNCTION_1	IF_1	CALL_6
0x40000a7	      0xe800000000	                          call 0x40000ac	        42	ldver.c	FUNCTION_1	IF_1	CALL_6
0x40000ac	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        48	ldver.c	FUNCTION_1	IF_2
0x40000af	          0x83e001	                              and eax, 1	        48	ldver.c	FUNCTION_1	IF_2
0x40000b2	            0x85c0	                           test eax, eax	        48	ldver.c	FUNCTION_1	IF_2
0x40000b4	            0x744f	                            je 0x4000105	        48	ldver.c	FUNCTION_1	IF_2
0x40000b6	    0x48c745f80000	                  mov qword [rbp - 8], 0	        50	ldver.c	FUNCTION_1	IF_2
0x40000be	      0xbf00000000	                              mov edi, 0	        52	ldver.c	FUNCTION_1	IF_2	CALL_9
0x40000c3	      0xe800000000	                          call 0x40000c8	        52	ldver.c	FUNCTION_1	IF_2	CALL_9
0x40000c8	          0x4889c7	                            mov rdi, rax	        52	ldver.c	FUNCTION_1	IF_2	CALL_9
0x40000cb	      0xb800000000	                              mov eax, 0	        52	ldver.c	FUNCTION_1	IF_2	CALL_9
0x40000d0	      0xe800000000	                          call 0x40000d5	        52	ldver.c	FUNCTION_1	IF_2	CALL_9
0x40000d5	            0xeb22	                           jmp 0x40000f9	        53	ldver.c	FUNCTION_1	IF_2	WHILE_1
0x40000d7	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	ldver.c	FUNCTION_1	IF_2	WHILE_1	CALL_10
0x40000db	          0x488b00	                    mov rax, qword [rax]	        55	ldver.c	FUNCTION_1	IF_2	WHILE_1	CALL_10
0x40000de	        0x488b4058	            mov rax, qword [rax + 0x58] 	        55	ldver.c	FUNCTION_1	IF_2	WHILE_1	CALL_10
0x40000e2	          0x4889c6	                            mov rsi, rax	        55	ldver.c	FUNCTION_1	IF_2	WHILE_1	CALL_10
0x40000e5	      0xbf00000000	                              mov edi, 0	        55	ldver.c	FUNCTION_1	IF_2	WHILE_1	CALL_10
0x40000ea	      0xb800000000	                              mov eax, 0	        55	ldver.c	FUNCTION_1	IF_2	WHILE_1	CALL_10
0x40000ef	      0xe800000000	                          call 0x40000f4	        55	ldver.c	FUNCTION_1	IF_2	WHILE_1	CALL_10
0x40000f4	      0x488345f808	                  add qword [rbp - 8], 8	        56	ldver.c	FUNCTION_1	IF_2	WHILE_1
0x40000f9	        0x488b45f8	                mov rax, qword [rbp - 8]	        53	ldver.c	FUNCTION_1	IF_2	WHILE_1
0x40000fd	          0x488b00	                    mov rax, qword [rax]	        53	ldver.c	FUNCTION_1	IF_2	WHILE_1
0x4000100	          0x4885c0	                           test rax, rax	        53	ldver.c	FUNCTION_1	IF_2	WHILE_1
0x4000103	            0x75d2	                           jne 0x40000d7	        53	ldver.c	FUNCTION_1	IF_2	WHILE_1
0x4000105	              0x90	                                     nop	        59	ldver.c	FUNCTION_1
0x4000106	              0xc9	                                   leave	        59	ldver.c	FUNCTION_1
0x4000107	              0xc3	                                     ret	        59	ldver.c	FUNCTION_1
