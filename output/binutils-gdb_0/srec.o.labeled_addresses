srec_read_section	WHILE,2:ELSE,0:IF,13:functions,0:FOR,0:CALL,15:DO,0:SWITCH,1	313
0x40015a2	              0x55	                                push rbp	       721	srec.c	FUNCTION_9
0x40015a3	          0x4889e5	                            mov rbp, rsp	       721	srec.c	FUNCTION_9
0x40015a6	        0x4883ec70	                           sub rsp, 0x70	       721	srec.c	FUNCTION_9
0x40015aa	        0x48897da8	             mov qword [rbp - 0x58], rdi	       721	srec.c	FUNCTION_9
0x40015ae	        0x488975a0	             mov qword [rbp - 0x60], rsi	       721	srec.c	FUNCTION_9
0x40015b2	        0x48895598	             mov qword [rbp - 0x68], rdx	       721	srec.c	FUNCTION_9
0x40015b6	    0x64488b042528	                mov rax, qword fs:[0x28]	       721	srec.c	FUNCTION_9
0x40015bf	        0x488945f8	                mov qword [rbp - 8], rax	       721	srec.c	FUNCTION_9
0x40015c3	            0x31c0	                            xor eax, eax	       721	srec.c	FUNCTION_9
0x40015c5	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       723	srec.c	FUNCTION_9
0x40015cd	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       724	srec.c	FUNCTION_9
0x40015d4	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       725	srec.c	FUNCTION_9
0x40015dc	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       726	srec.c	FUNCTION_9
0x40015e4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x40015e8	    0x488b88900000	            mov rcx, qword [rax + 0x90] 	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x40015ef	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x40015f3	      0xba00000000	                              mov edx, 0	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x40015f8	          0x4889ce	                            mov rsi, rcx	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x40015fb	          0x4889c7	                            mov rdi, rax	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x40015fe	      0xe800000000	                          call 0x4001603	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x4001603	            0x85c0	                           test eax, eax	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x4001605	     0xf85d9030000	                           jne 0x40019e4	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x400160b	      0xe976030000	                           jmp 0x4001986	       731	srec.c	FUNCTION_9	WHILE_1	CALL_2
0x4001610	        0x837dc40d	            cmp dword [rbp - 0x3c], 0xd 	       738	srec.c	FUNCTION_9	WHILE_1	IF_2
0x4001614	     0xf846c030000	                            je 0x4001986	       738	srec.c	FUNCTION_9	WHILE_1	IF_2
0x400161a	        0x837dc40a	            cmp dword [rbp - 0x3c], 0xa 	       738	srec.c	FUNCTION_9	WHILE_1	IF_2
0x400161e	            0x7505	                           jne 0x4001625	       738	srec.c	FUNCTION_9	WHILE_1	IF_2
0x4001620	      0xe961030000	                           jmp 0x4001986	       738	srec.c	FUNCTION_9	WHILE_1	IF_2
0x4001625	        0x837dc453	           cmp dword [rbp - 0x3c], 0x53 	       743	srec.c	FUNCTION_9	WHILE_1	CALL_3
0x4001629	            0x740f	                            je 0x400163a	       743	srec.c	FUNCTION_9	WHILE_1	CALL_3
0x400162b	      0xbee7020000	                          mov esi, 0x2e7	       743	srec.c	FUNCTION_9	WHILE_1	CALL_3
0x4001630	      0xbf00000000	                              mov edi, 0	       743	srec.c	FUNCTION_9	WHILE_1	CALL_3
0x4001635	      0xe800000000	                          call 0x400163a	       743	srec.c	FUNCTION_9	WHILE_1	CALL_3
0x400163a	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       745	srec.c	FUNCTION_9	WHILE_1	IF_3	CALL_4
0x400163e	        0x488d45f0	                   lea rax, [rbp - 0x10]	       745	srec.c	FUNCTION_9	WHILE_1	IF_3	CALL_4
0x4001642	      0xbe03000000	                              mov esi, 3	       745	srec.c	FUNCTION_9	WHILE_1	IF_3	CALL_4
0x4001647	          0x4889c7	                            mov rdi, rax	       745	srec.c	FUNCTION_9	WHILE_1	IF_3	CALL_4
0x400164a	      0xe800000000	                          call 0x400164f	       745	srec.c	FUNCTION_9	WHILE_1	IF_3	CALL_4
0x400164f	        0x4883f803	                              cmp rax, 3	       745	srec.c	FUNCTION_9	WHILE_1	IF_3	CALL_4
0x4001653	     0xf858e030000	                           jne 0x40019e7	       745	srec.c	FUNCTION_9	WHILE_1	IF_3	CALL_4
0x4001659	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x400165d	           0xfb6c0	                           movzx eax, al	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x4001660	            0x4898	                                    cdqe	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x4001662	     0xfb680000000	                   movzx eax, byte [rax]	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x4001669	            0x3c63	                            cmp al, 0x63	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x400166b	            0x7414	                            je 0x4001681	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x400166d	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x4001671	           0xfb6c0	                           movzx eax, al	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x4001674	            0x4898	                                    cdqe	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x4001676	     0xfb680000000	                   movzx eax, byte [rax]	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x400167d	            0x3c63	                            cmp al, 0x63	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x400167f	            0x750f	                           jne 0x4001690	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x4001681	      0xbeec020000	                          mov esi, 0x2ec	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x4001686	      0xbf00000000	                              mov edi, 0	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x400168b	      0xe800000000	                          call 0x4001690	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x4001690	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	       750	srec.c	FUNCTION_9	WHILE_1
0x4001694	           0xfb6c0	                           movzx eax, al	       750	srec.c	FUNCTION_9	WHILE_1
0x4001697	            0x4898	                                    cdqe	       750	srec.c	FUNCTION_9	WHILE_1
0x4001699	     0xfb680000000	                   movzx eax, byte [rax]	       750	srec.c	FUNCTION_9	WHILE_1
0x40016a0	           0xfb6c0	                           movzx eax, al	       750	srec.c	FUNCTION_9	WHILE_1
0x40016a3	          0xc1e004	                              shl eax, 4	       750	srec.c	FUNCTION_9	WHILE_1
0x40016a6	            0x89c2	                            mov edx, eax	       750	srec.c	FUNCTION_9	WHILE_1
0x40016a8	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	       750	srec.c	FUNCTION_9	WHILE_1
0x40016ac	           0xfb6c0	                           movzx eax, al	       750	srec.c	FUNCTION_9	WHILE_1
0x40016af	            0x4898	                                    cdqe	       750	srec.c	FUNCTION_9	WHILE_1
0x40016b1	     0xfb680000000	                   movzx eax, byte [rax]	       750	srec.c	FUNCTION_9	WHILE_1
0x40016b8	           0xfb6c0	                           movzx eax, al	       750	srec.c	FUNCTION_9	WHILE_1
0x40016bb	             0x1d0	                            add eax, edx	       750	srec.c	FUNCTION_9	WHILE_1
0x40016bd	          0x8945c0	             mov dword [rbp - 0x40], eax	       750	srec.c	FUNCTION_9	WHILE_1
0x40016c0	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       752	srec.c	FUNCTION_9	WHILE_1	IF_4
0x40016c3	             0x1c0	                            add eax, eax	       752	srec.c	FUNCTION_9	WHILE_1	IF_4
0x40016c5	            0x89c0	                            mov eax, eax	       752	srec.c	FUNCTION_9	WHILE_1	IF_4
0x40016c7	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       752	srec.c	FUNCTION_9	WHILE_1	IF_4
0x40016cb	            0x763b	                           jbe 0x4001708	       752	srec.c	FUNCTION_9	WHILE_1	IF_4
0x40016cd	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       754	srec.c	FUNCTION_9	WHILE_1	IF_4	IF_5
0x40016d2	            0x740c	                            je 0x40016e0	       754	srec.c	FUNCTION_9	WHILE_1	IF_4	IF_5
0x40016d4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       755	srec.c	FUNCTION_9	WHILE_1	IF_4	CALL_6
0x40016d8	          0x4889c7	                            mov rdi, rax	       755	srec.c	FUNCTION_9	WHILE_1	IF_4	CALL_6
0x40016db	      0xe800000000	                          call 0x40016e0	       755	srec.c	FUNCTION_9	WHILE_1	IF_4	CALL_6
0x40016e0	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       756	srec.c	FUNCTION_9	WHILE_1	IF_4	CALL_7
0x40016e3	          0x4801c0	                            add rax, rax	       756	srec.c	FUNCTION_9	WHILE_1	IF_4	CALL_7
0x40016e6	          0x4889c7	                            mov rdi, rax	       756	srec.c	FUNCTION_9	WHILE_1	IF_4	CALL_7
0x40016e9	      0xe800000000	                          call 0x40016ee	       756	srec.c	FUNCTION_9	WHILE_1	IF_4	CALL_7
0x40016ee	        0x488945d0	             mov qword [rbp - 0x30], rax	       756	srec.c	FUNCTION_9	WHILE_1	IF_4	CALL_7
0x40016f2	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       757	srec.c	FUNCTION_9	WHILE_1	IF_4	IF_6
0x40016f7	     0xf84ed020000	                            je 0x40019ea	       757	srec.c	FUNCTION_9	WHILE_1	IF_4	IF_6
0x40016fd	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       759	srec.c	FUNCTION_9	WHILE_1	IF_4
0x4001700	             0x1c0	                            add eax, eax	       759	srec.c	FUNCTION_9	WHILE_1	IF_4
0x4001702	            0x89c0	                            mov eax, eax	       759	srec.c	FUNCTION_9	WHILE_1	IF_4
0x4001704	        0x488945d8	             mov qword [rbp - 0x28], rax	       759	srec.c	FUNCTION_9	WHILE_1	IF_4
0x4001708	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x400170b	        0x488d0c00	                    lea rcx, [rax + rax]	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x400170f	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x4001713	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x4001717	          0x4889ce	                            mov rsi, rcx	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x400171a	          0x4889c7	                            mov rdi, rax	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x400171d	      0xe800000000	                          call 0x4001722	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x4001722	          0x4889c2	                            mov rdx, rax	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x4001725	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x4001728	             0x1c0	                            add eax, eax	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x400172a	            0x89c0	                            mov eax, eax	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x400172c	          0x4839c2	                            cmp rdx, rax	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x400172f	     0xf85b8020000	                           jne 0x40019ed	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x4001735	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       765	srec.c	FUNCTION_9	WHILE_1
0x400173d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       766	srec.c	FUNCTION_9	WHILE_1
0x4001741	        0x488945e8	             mov qword [rbp - 0x18], rax	       766	srec.c	FUNCTION_9	WHILE_1
0x4001745	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001749	           0xfb6c0	                           movzx eax, al	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400174c	          0x83f832	                           cmp eax, 0x32	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400174f	     0xf848e000000	                            je 0x40017e3	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001755	          0x83f833	                           cmp eax, 0x33	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001758	            0x7443	                            je 0x400179d	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400175a	          0x83f831	                           cmp eax, 0x31	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400175d	     0xf84d4000000	                            je 0x4001837	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001763	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       770	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_9
0x4001767	        0x488b4038	            mov rax, qword [rax + 0x38] 	       770	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_9
0x400176b	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       770	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_9
0x400176f	            0x740f	                            je 0x4001780	       770	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_9
0x4001771	      0xbe02030000	                          mov esi, 0x302	       770	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_9
0x4001776	      0xbf00000000	                              mov edi, 0	       770	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_9
0x400177b	      0xe800000000	                          call 0x4001780	       770	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_9
0x4001780	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       771	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_8
0x4001785	            0x740c	                            je 0x4001793	       771	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_8
0x4001787	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       772	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_10
0x400178b	          0x4889c7	                            mov rdi, rax	       772	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_10
0x400178e	      0xe800000000	                          call 0x4001793	       772	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_10
0x4001793	      0xb801000000	                              mov eax, 1	       773	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001798	      0xe96c020000	                           jmp 0x4001a09	       773	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400179d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017a1	           0xfb600	                   movzx eax, byte [rax]	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017a4	           0xfb6c0	                           movzx eax, al	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017a7	            0x4898	                                    cdqe	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017a9	     0xfb680000000	                   movzx eax, byte [rax]	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017b0	           0xfb6c0	                           movzx eax, al	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017b3	          0xc1e004	                              shl eax, 4	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017b6	            0x89c2	                            mov edx, eax	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017bc	        0x4883c001	                              add rax, 1	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017c0	           0xfb600	                   movzx eax, byte [rax]	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017c3	           0xfb6c0	                           movzx eax, al	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017c6	            0x4898	                                    cdqe	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017c8	     0xfb680000000	                   movzx eax, byte [rax]	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017cf	           0xfb6c0	                           movzx eax, al	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017d2	             0x1d0	                            add eax, edx	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017d4	            0x89c0	                            mov eax, eax	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017d6	        0x488945e0	             mov qword [rbp - 0x20], rax	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017da	      0x488345e802	               add qword [rbp - 0x18], 2	       777	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017df	        0x836dc001	               sub dword [rbp - 0x40], 1	       778	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017e3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017e7	        0x48c1e008	                              shl rax, 8	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017eb	          0x4889c2	                            mov rdx, rax	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017f2	           0xfb600	                   movzx eax, byte [rax]	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017f5	           0xfb6c0	                           movzx eax, al	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017f8	            0x4898	                                    cdqe	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40017fa	     0xfb680000000	                   movzx eax, byte [rax]	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001801	           0xfb6c0	                           movzx eax, al	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001804	          0xc1e004	                              shl eax, 4	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001807	            0x89c1	                            mov ecx, eax	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001809	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400180d	        0x4883c001	                              add rax, 1	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001811	           0xfb600	                   movzx eax, byte [rax]	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001814	           0xfb6c0	                           movzx eax, al	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001817	            0x4898	                                    cdqe	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001819	     0xfb680000000	                   movzx eax, byte [rax]	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001820	           0xfb6c0	                           movzx eax, al	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001823	             0x1c8	                            add eax, ecx	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001825	            0x89c0	                            mov eax, eax	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001827	          0x4809d0	                             or rax, rdx	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400182a	        0x488945e0	             mov qword [rbp - 0x20], rax	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400182e	      0x488345e802	               add qword [rbp - 0x18], 2	       782	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001833	        0x836dc001	               sub dword [rbp - 0x40], 1	       783	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001837	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400183b	        0x48c1e008	                              shl rax, 8	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400183f	          0x4889c2	                            mov rdx, rax	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001842	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001846	           0xfb600	                   movzx eax, byte [rax]	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001849	           0xfb6c0	                           movzx eax, al	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400184c	            0x4898	                                    cdqe	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400184e	     0xfb680000000	                   movzx eax, byte [rax]	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001855	           0xfb6c0	                           movzx eax, al	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001858	          0xc1e004	                              shl eax, 4	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400185b	            0x89c1	                            mov ecx, eax	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400185d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001861	        0x4883c001	                              add rax, 1	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001865	           0xfb600	                   movzx eax, byte [rax]	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001868	           0xfb6c0	                           movzx eax, al	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400186b	            0x4898	                                    cdqe	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400186d	     0xfb680000000	                   movzx eax, byte [rax]	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001874	           0xfb6c0	                           movzx eax, al	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001877	             0x1c8	                            add eax, ecx	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001879	            0x89c0	                            mov eax, eax	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400187b	          0x4809d0	                             or rax, rdx	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400187e	        0x488945e0	             mov qword [rbp - 0x20], rax	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001882	      0x488345e802	               add qword [rbp - 0x18], 2	       787	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001887	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400188b	        0x48c1e008	                              shl rax, 8	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400188f	          0x4889c2	                            mov rdx, rax	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001892	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001896	           0xfb600	                   movzx eax, byte [rax]	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001899	           0xfb6c0	                           movzx eax, al	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400189c	            0x4898	                                    cdqe	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400189e	     0xfb680000000	                   movzx eax, byte [rax]	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40018a5	           0xfb6c0	                           movzx eax, al	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40018a8	          0xc1e004	                              shl eax, 4	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40018ab	            0x89c1	                            mov ecx, eax	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40018ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40018b1	        0x4883c001	                              add rax, 1	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40018b5	           0xfb600	                   movzx eax, byte [rax]	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40018b8	           0xfb6c0	                           movzx eax, al	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40018bb	            0x4898	                                    cdqe	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40018bd	     0xfb680000000	                   movzx eax, byte [rax]	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40018c4	           0xfb6c0	                           movzx eax, al	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40018c7	             0x1c8	                            add eax, ecx	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40018c9	            0x89c0	                            mov eax, eax	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40018cb	          0x4809d0	                             or rax, rdx	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40018ce	        0x488945e0	             mov qword [rbp - 0x20], rax	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40018d2	      0x488345e802	               add qword [rbp - 0x18], 2	       789	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40018d7	        0x836dc002	               sub dword [rbp - 0x40], 2	       790	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40018db	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       792	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x40018df	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       792	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x40018e3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       792	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x40018e7	          0x4801d0	                            add rax, rdx	       792	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x40018ea	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       792	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x40018ee	            0x743a	                            je 0x400192a	       792	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x40018f0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       795	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_11
0x40018f4	        0x488b4038	            mov rax, qword [rax + 0x38] 	       795	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_11
0x40018f8	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       795	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_11
0x40018fc	            0x740f	                            je 0x400190d	       795	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_11
0x40018fe	      0xbe1b030000	                          mov esi, 0x31b	       795	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_11
0x4001903	      0xbf00000000	                              mov edi, 0	       795	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_11
0x4001908	      0xe800000000	                          call 0x400190d	       795	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_11
0x400190d	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       796	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	IF_10
0x4001912	            0x740c	                            je 0x4001920	       796	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	IF_10
0x4001914	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       797	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_12
0x4001918	          0x4889c7	                            mov rdi, rax	       797	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_12
0x400191b	      0xe800000000	                          call 0x4001920	       797	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_12
0x4001920	      0xb801000000	                              mov eax, 1	       798	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x4001925	      0xe9df000000	                           jmp 0x4001a09	       798	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x400192a	        0x836dc001	               sub dword [rbp - 0x40], 1	       802	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400192e	            0xeb48	                           jmp 0x4001978	       804	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x4001930	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x4001934	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x4001938	          0x4801c2	                            add rdx, rax	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x400193b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x400193f	           0xfb600	                   movzx eax, byte [rax]	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x4001942	           0xfb6c0	                           movzx eax, al	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x4001945	            0x4898	                                    cdqe	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x4001947	     0xfb680000000	                   movzx eax, byte [rax]	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x400194e	          0xc1e004	                              shl eax, 4	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x4001951	            0x89c1	                            mov ecx, eax	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x4001953	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x4001957	        0x4883c001	                              add rax, 1	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x400195b	           0xfb600	                   movzx eax, byte [rax]	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x400195e	           0xfb6c0	                           movzx eax, al	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x4001961	            0x4898	                                    cdqe	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x4001963	     0xfb680000000	                   movzx eax, byte [rax]	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x400196a	             0x1c8	                            add eax, ecx	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x400196c	            0x8802	                      mov byte [rdx], al	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x400196e	      0x488345e802	               add qword [rbp - 0x18], 2	       807	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x4001973	      0x488345c801	               add qword [rbp - 0x38], 1	       808	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x4001978	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       804	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x400197b	          0x8d50ff	                      lea edx, [rax - 1]	       804	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x400197e	          0x8955c0	             mov dword [rbp - 0x40], edx	       804	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x4001981	            0x85c0	                           test eax, eax	       804	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x4001983	            0x75ab	                           jne 0x4001930	       804	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x4001985	              0x90	                                     nop	       811	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4001986	        0x488d55bc	                   lea rdx, [rbp - 0x44]	       731	srec.c	FUNCTION_9	WHILE_1	CALL_2
0x400198a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       731	srec.c	FUNCTION_9	WHILE_1	CALL_2
0x400198e	          0x4889d6	                            mov rsi, rdx	       731	srec.c	FUNCTION_9	WHILE_1	CALL_2
0x4001991	          0x4889c7	                            mov rdi, rax	       731	srec.c	FUNCTION_9	WHILE_1	CALL_2
0x4001994	      0xe857e7ffff	                  call sym.srec_get_byte	       731	srec.c	FUNCTION_9	WHILE_1	CALL_2
0x4001999	          0x8945c4	             mov dword [rbp - 0x3c], eax	       731	srec.c	FUNCTION_9	WHILE_1	CALL_2
0x400199c	        0x837dc4ff	cmp dword [rbp - 0x3c], 0xffffffffffffffff	       731	srec.c	FUNCTION_9	WHILE_1	CALL_2
0x40019a0	     0xf856afcffff	                           jne 0x4001610	       731	srec.c	FUNCTION_9	WHILE_1	CALL_2
0x40019a6	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       815	srec.c	FUNCTION_9	IF_11
0x40019a9	            0x85c0	                           test eax, eax	       815	srec.c	FUNCTION_9	IF_11
0x40019ab	            0x7543	                           jne 0x40019f0	       815	srec.c	FUNCTION_9	IF_11
0x40019ad	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       818	srec.c	FUNCTION_9	CALL_13
0x40019b1	        0x488b4038	            mov rax, qword [rax + 0x38] 	       818	srec.c	FUNCTION_9	CALL_13
0x40019b5	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       818	srec.c	FUNCTION_9	CALL_13
0x40019b9	            0x740f	                            je 0x40019ca	       818	srec.c	FUNCTION_9	CALL_13
0x40019bb	      0xbe32030000	                          mov esi, 0x332	       818	srec.c	FUNCTION_9	CALL_13
0x40019c0	      0xbf00000000	                              mov edi, 0	       818	srec.c	FUNCTION_9	CALL_13
0x40019c5	      0xe800000000	                          call 0x40019ca	       818	srec.c	FUNCTION_9	CALL_13
0x40019ca	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       820	srec.c	FUNCTION_9	IF_12
0x40019cf	            0x740c	                            je 0x40019dd	       820	srec.c	FUNCTION_9	IF_12
0x40019d1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       821	srec.c	FUNCTION_9	CALL_14
0x40019d5	          0x4889c7	                            mov rdi, rax	       821	srec.c	FUNCTION_9	CALL_14
0x40019d8	      0xe800000000	                          call 0x40019dd	       821	srec.c	FUNCTION_9	CALL_14
0x40019dd	      0xb801000000	                              mov eax, 1	       823	srec.c	FUNCTION_9
0x40019e2	            0xeb25	                           jmp 0x4001a09	       823	srec.c	FUNCTION_9
0x40019e4	              0x90	                                     nop	       729	srec.c	FUNCTION_9	IF_1
0x40019e5	            0xeb0a	                           jmp 0x40019f1	       729	srec.c	FUNCTION_9	IF_1
0x40019e7	              0x90	                                     nop	       746	srec.c	FUNCTION_9	WHILE_1	IF_3
0x40019e8	            0xeb07	                           jmp 0x40019f1	       746	srec.c	FUNCTION_9	WHILE_1	IF_3
0x40019ea	              0x90	                                     nop	       758	srec.c	FUNCTION_9	WHILE_1	IF_4	IF_6
0x40019eb	            0xeb04	                           jmp 0x40019f1	       758	srec.c	FUNCTION_9	WHILE_1	IF_4	IF_6
0x40019ed	              0x90	                                     nop	       763	srec.c	FUNCTION_9	WHILE_1	IF_7
0x40019ee	            0xeb01	                           jmp 0x40019f1	       763	srec.c	FUNCTION_9	WHILE_1	IF_7
0x40019f0	              0x90	                                     nop	       816	srec.c	FUNCTION_9	IF_11
0x40019f1	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       826	srec.c	FUNCTION_9	IF_13
0x40019f6	            0x740c	                            je 0x4001a04	       826	srec.c	FUNCTION_9	IF_13
0x40019f8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       827	srec.c	FUNCTION_9	CALL_15
0x40019fc	          0x4889c7	                            mov rdi, rax	       827	srec.c	FUNCTION_9	CALL_15
0x40019ff	      0xe800000000	                          call 0x4001a04	       827	srec.c	FUNCTION_9	CALL_15
0x4001a04	      0xb800000000	                              mov eax, 0	       828	srec.c	FUNCTION_9
0x4001a09	        0x488b75f8	                mov rsi, qword [rbp - 8]	       829	srec.c	FUNCTION_9
0x4001a0d	    0x644833342528	                xor rsi, qword fs:[0x28]	       829	srec.c	FUNCTION_9
0x4001a16	            0x7405	                            je 0x4001a1d	       829	srec.c	FUNCTION_9
0x4001a18	      0xe800000000	                          call 0x4001a1d	       829	srec.c	FUNCTION_9
0x4001a1d	              0xc9	                                   leave	       829	srec.c	FUNCTION_9
0x4001a1e	              0xc3	                                     ret	       829	srec.c	FUNCTION_9
srec_get_symbol_info	WHILE,0:ELSE,0:IF,0:functions,0:FOR,0:CALL,1:DO,0:SWITCH,0	14
0x40028f1	              0x55	                                push rbp	      1232	srec.c	FUNCTION_24
0x40028f2	          0x4889e5	                            mov rbp, rsp	      1232	srec.c	FUNCTION_24
0x40028f5	        0x4883ec20	                           sub rsp, 0x20	      1232	srec.c	FUNCTION_24
0x40028f9	        0x48897df8	                mov qword [rbp - 8], rdi	      1232	srec.c	FUNCTION_24
0x40028fd	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1232	srec.c	FUNCTION_24
0x4002901	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1232	srec.c	FUNCTION_24
0x4002905	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1233	srec.c	FUNCTION_24	CALL_1
0x4002909	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1233	srec.c	FUNCTION_24	CALL_1
0x400290d	          0x4889d6	                            mov rsi, rdx	      1233	srec.c	FUNCTION_24	CALL_1
0x4002910	          0x4889c7	                            mov rdi, rax	      1233	srec.c	FUNCTION_24	CALL_1
0x4002913	      0xe800000000	                          call 0x4002918	      1233	srec.c	FUNCTION_24	CALL_1
0x4002918	              0x90	                                     nop	      1234	srec.c	FUNCTION_24
0x4002919	              0xc9	                                   leave	      1234	srec.c	FUNCTION_24
0x400291a	              0xc3	                                     ret	      1234	srec.c	FUNCTION_24
srec_sizeof_headers	WHILE,0:ELSE,0:IF,0:functions,0:FOR,0:CALL,0:DO,0:SWITCH,0	7
0x4002767	              0x55	                                push rbp	      1176	srec.c	FUNCTION_21
0x4002768	          0x4889e5	                            mov rbp, rsp	      1176	srec.c	FUNCTION_21
0x400276b	        0x48897df8	                mov qword [rbp - 8], rdi	      1176	srec.c	FUNCTION_21
0x400276f	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1176	srec.c	FUNCTION_21
0x4002773	      0xb800000000	                              mov eax, 0	      1177	srec.c	FUNCTION_21
0x4002778	              0x5d	                                 pop rbp	      1178	srec.c	FUNCTION_21
0x4002779	              0xc3	                                     ret	      1178	srec.c	FUNCTION_21
symbolsrec_write_object_contents	WHILE,0:ELSE,0:IF,0:functions,0:FOR,0:CALL,1:DO,0:SWITCH,0	10
0x4002748	              0x55	                                push rbp	      1169	srec.c	FUNCTION_20
0x4002749	          0x4889e5	                            mov rbp, rsp	      1169	srec.c	FUNCTION_20
0x400274c	        0x4883ec10	                           sub rsp, 0x10	      1169	srec.c	FUNCTION_20
0x4002750	        0x48897df8	                mov qword [rbp - 8], rdi	      1169	srec.c	FUNCTION_20
0x4002754	        0x488b45f8	                mov rax, qword [rbp - 8]	      1170	srec.c	FUNCTION_20	CALL_1
0x4002758	      0xbe01000000	                              mov esi, 1	      1170	srec.c	FUNCTION_20	CALL_1
0x400275d	          0x4889c7	                            mov rdi, rax	      1170	srec.c	FUNCTION_20	CALL_1
0x4002760	      0xe81cffffff	call sym.internal_srec_write_object_contents	      1170	srec.c	FUNCTION_20	CALL_1
0x4002765	              0xc9	                                   leave	      1171	srec.c	FUNCTION_20
0x4002766	              0xc3	                                     ret	      1171	srec.c	FUNCTION_20
srec_new_symbol	WHILE,0:ELSE,1:IF,2:functions,0:FOR,0:CALL,1:DO,0:SWITCH,0	50
0x400022f	              0x55	                                push rbp	       270	srec.c	FUNCTION_5
0x4000230	          0x4889e5	                            mov rbp, rsp	       270	srec.c	FUNCTION_5
0x4000233	        0x4883ec30	                           sub rsp, 0x30	       270	srec.c	FUNCTION_5
0x4000237	        0x48897de8	             mov qword [rbp - 0x18], rdi	       270	srec.c	FUNCTION_5
0x400023b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       270	srec.c	FUNCTION_5
0x400023f	        0x488955d8	             mov qword [rbp - 0x28], rdx	       270	srec.c	FUNCTION_5
0x4000243	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       273	srec.c	FUNCTION_5	CALL_1
0x4000247	      0xbe18000000	                           mov esi, 0x18	       273	srec.c	FUNCTION_5	CALL_1
0x400024c	          0x4889c7	                            mov rdi, rax	       273	srec.c	FUNCTION_5	CALL_1
0x400024f	      0xe800000000	                          call 0x4000254	       273	srec.c	FUNCTION_5	CALL_1
0x4000254	        0x488945f8	                mov qword [rbp - 8], rax	       273	srec.c	FUNCTION_5	CALL_1
0x4000258	      0x48837df800	                  cmp qword [rbp - 8], 0	       274	srec.c	FUNCTION_5	IF_1
0x400025d	            0x750a	                           jne 0x4000269	       274	srec.c	FUNCTION_5	IF_1
0x400025f	      0xb800000000	                              mov eax, 0	       275	srec.c	FUNCTION_5	IF_1
0x4000264	      0xe991000000	                           jmp 0x40002fa	       275	srec.c	FUNCTION_5	IF_1
0x4000269	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	srec.c	FUNCTION_5
0x400026d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       277	srec.c	FUNCTION_5
0x4000271	        0x48895008	                mov qword [rax + 8], rdx	       277	srec.c	FUNCTION_5
0x4000275	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	srec.c	FUNCTION_5
0x4000279	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       278	srec.c	FUNCTION_5
0x400027d	        0x48895010	             mov qword [rax + 0x10], rdx	       278	srec.c	FUNCTION_5
0x4000281	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       280	srec.c	FUNCTION_5	IF_2
0x4000285	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       280	srec.c	FUNCTION_5	IF_2
0x400028c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       280	srec.c	FUNCTION_5	IF_2
0x4000290	          0x4885c0	                           test rax, rax	       280	srec.c	FUNCTION_5	IF_2
0x4000293	            0x7515	                           jne 0x40002aa	       280	srec.c	FUNCTION_5	IF_2
0x4000295	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       281	srec.c	FUNCTION_5	IF_2
0x4000299	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       281	srec.c	FUNCTION_5	IF_2
0x40002a0	        0x488b55f8	                mov rdx, qword [rbp - 8]	       281	srec.c	FUNCTION_5	IF_2
0x40002a4	        0x48895018	             mov qword [rax + 0x18], rdx	       281	srec.c	FUNCTION_5	IF_2
0x40002a8	            0xeb16	                           jmp 0x40002c0	       281	srec.c	FUNCTION_5	IF_2
0x40002aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       283	srec.c	FUNCTION_5	ELSE_1
0x40002ae	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       283	srec.c	FUNCTION_5	ELSE_1
0x40002b5	        0x488b4020	            mov rax, qword [rax + 0x20] 	       283	srec.c	FUNCTION_5	ELSE_1
0x40002b9	        0x488b55f8	                mov rdx, qword [rbp - 8]	       283	srec.c	FUNCTION_5	ELSE_1
0x40002bd	          0x488910	                    mov qword [rax], rdx	       283	srec.c	FUNCTION_5	ELSE_1
0x40002c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       284	srec.c	FUNCTION_5	ELSE_1
0x40002c4	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       284	srec.c	FUNCTION_5	ELSE_1
0x40002cb	        0x488b55f8	                mov rdx, qword [rbp - 8]	       284	srec.c	FUNCTION_5	ELSE_1
0x40002cf	        0x48895020	             mov qword [rax + 0x20], rdx	       284	srec.c	FUNCTION_5	ELSE_1
0x40002d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       285	srec.c	FUNCTION_5	ELSE_1
0x40002d7	    0x48c700000000	                      mov qword [rax], 0	       285	srec.c	FUNCTION_5	ELSE_1
0x40002de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       287	srec.c	FUNCTION_5	ELSE_1
0x40002e2	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	       287	srec.c	FUNCTION_5	ELSE_1
0x40002e8	          0x8d5001	                      lea edx, [rax + 1]	       287	srec.c	FUNCTION_5	ELSE_1
0x40002eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       287	srec.c	FUNCTION_5	ELSE_1
0x40002ef	    0x8990b8000000	             mov dword [rax + 0xb8], edx	       287	srec.c	FUNCTION_5	ELSE_1
0x40002f5	      0xb801000000	                              mov eax, 1	       289	srec.c	FUNCTION_5	ELSE_1
0x40002fa	              0xc9	                                   leave	       290	srec.c	FUNCTION_5	ELSE_1
0x40002fb	              0xc3	                                     ret	       290	srec.c	FUNCTION_5	ELSE_1
srec_write_terminator	WHILE,0:ELSE,0:IF,0:functions,0:FOR,0:CALL,1:DO,0:SWITCH,0	19
0x40023a8	              0x55	                                push rbp	      1074	srec.c	FUNCTION_16
0x40023a9	          0x4889e5	                            mov rbp, rsp	      1074	srec.c	FUNCTION_16
0x40023ac	        0x4883ec10	                           sub rsp, 0x10	      1074	srec.c	FUNCTION_16
0x40023b0	        0x48897df8	                mov qword [rbp - 8], rdi	      1074	srec.c	FUNCTION_16
0x40023b4	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1074	srec.c	FUNCTION_16
0x40023b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1075	srec.c	FUNCTION_16	CALL_1
0x40023bc	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	      1075	srec.c	FUNCTION_16	CALL_1
0x40023c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1075	srec.c	FUNCTION_16	CALL_1
0x40023c7	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1075	srec.c	FUNCTION_16	CALL_1
0x40023ca	      0xb90a000000	                            mov ecx, 0xa	      1075	srec.c	FUNCTION_16	CALL_1
0x40023cf	            0x29c1	                            sub ecx, eax	      1075	srec.c	FUNCTION_16	CALL_1
0x40023d1	            0x89ce	                            mov esi, ecx	      1075	srec.c	FUNCTION_16	CALL_1
0x40023d3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1075	srec.c	FUNCTION_16	CALL_1
0x40023d7	    0x41b800000000	                              mov r8d, 0	      1075	srec.c	FUNCTION_16	CALL_1
0x40023dd	      0xb900000000	                              mov ecx, 0	      1075	srec.c	FUNCTION_16	CALL_1
0x40023e2	          0x4889c7	                            mov rdi, rax	      1075	srec.c	FUNCTION_16	CALL_1
0x40023e5	      0xe8edf9ffff	              call sym.srec_write_record	      1075	srec.c	FUNCTION_16	CALL_1
0x40023ea	              0xc9	                                   leave	      1077	srec.c	FUNCTION_16
0x40023eb	              0xc3	                                     ret	      1077	srec.c	FUNCTION_16
srec_write_record	WHILE,0:ELSE,0:IF,0:functions,0:FOR,1:CALL,1:DO,0:SWITCH,1	221
0x4001dd7	              0x55	                                push rbp	       959	srec.c	FUNCTION_13
0x4001dd8	          0x4889e5	                            mov rbp, rsp	       959	srec.c	FUNCTION_13
0x4001ddb	    0x4881ec700200	                          sub rsp, 0x270	       959	srec.c	FUNCTION_13
0x4001de2	    0x4889bdb8fdff	            mov qword [rbp - 0x248], rdi	       959	srec.c	FUNCTION_13
0x4001de9	    0x89b5b4fdffff	            mov dword [rbp - 0x24c], esi	       959	srec.c	FUNCTION_13
0x4001def	    0x488995a8fdff	            mov qword [rbp - 0x258], rdx	       959	srec.c	FUNCTION_13
0x4001df6	    0x48898da0fdff	            mov qword [rbp - 0x260], rcx	       959	srec.c	FUNCTION_13
0x4001dfd	    0x4c898598fdff	             mov qword [rbp - 0x268], r8	       959	srec.c	FUNCTION_13
0x4001e04	    0x64488b042528	                mov rax, qword fs:[0x28]	       959	srec.c	FUNCTION_13
0x4001e0d	        0x488945f8	                mov qword [rbp - 8], rax	       959	srec.c	FUNCTION_13
0x4001e11	            0x31c0	                            xor eax, eax	       959	srec.c	FUNCTION_13
0x4001e13	    0xc785ccfdffff	              mov dword [rbp - 0x234], 0	       961	srec.c	FUNCTION_13
0x4001e1d	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	       962	srec.c	FUNCTION_13
0x4001e24	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	       962	srec.c	FUNCTION_13
0x4001e2b	    0x488d85f0fdff	                  lea rax, [rbp - 0x210]	       963	srec.c	FUNCTION_13
0x4001e32	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	       963	srec.c	FUNCTION_13
0x4001e39	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       967	srec.c	FUNCTION_13
0x4001e40	        0x488d5001	                      lea rdx, [rax + 1]	       967	srec.c	FUNCTION_13
0x4001e44	    0x488995d8fdff	            mov qword [rbp - 0x228], rdx	       967	srec.c	FUNCTION_13
0x4001e4b	          0xc60053	                    mov byte [rax], 0x53	       967	srec.c	FUNCTION_13
0x4001e4e	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       968	srec.c	FUNCTION_13
0x4001e55	        0x488d5001	                      lea rdx, [rax + 1]	       968	srec.c	FUNCTION_13
0x4001e59	    0x488995d8fdff	            mov qword [rbp - 0x228], rdx	       968	srec.c	FUNCTION_13
0x4001e60	    0x8b95b4fdffff	            mov edx, dword [rbp - 0x24c]	       968	srec.c	FUNCTION_13
0x4001e66	          0x83c230	                           add edx, 0x30	       968	srec.c	FUNCTION_13
0x4001e69	            0x8810	                      mov byte [rax], dl	       968	srec.c	FUNCTION_13
0x4001e6b	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       970	srec.c	FUNCTION_13
0x4001e72	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	       970	srec.c	FUNCTION_13
0x4001e79	    0x488385d8fdff	              add qword [rbp - 0x228], 2	       971	srec.c	FUNCTION_13
0x4001e81	    0x83bdb4fdffff	              cmp dword [rbp - 0x24c], 9	       973	srec.c	FUNCTION_13	SWITCH_1
0x4001e88	     0xf8779010000	                            ja 0x4002007	       973	srec.c	FUNCTION_13	SWITCH_1
0x4001e8e	    0x8b85b4fdffff	            mov eax, dword [rbp - 0x24c]	       973	srec.c	FUNCTION_13	SWITCH_1
0x4001e94	    0x488b04c50000	                  mov rax, qword [rax*8]	       973	srec.c	FUNCTION_13	SWITCH_1
0x4001e9c	            0xffe0	                                 jmp rax	       973	srec.c	FUNCTION_13	SWITCH_1
0x4001e9e	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       977	srec.c	FUNCTION_13	SWITCH_1
0x4001ea5	        0x488d5001	                      lea rdx, [rax + 1]	       977	srec.c	FUNCTION_13	SWITCH_1
0x4001ea9	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	       977	srec.c	FUNCTION_13	SWITCH_1
0x4001eb0	        0x48c1e818	                           shr rax, 0x18	       977	srec.c	FUNCTION_13	SWITCH_1
0x4001eb4	          0x83e00f	                            and eax, 0xf	       977	srec.c	FUNCTION_13	SWITCH_1
0x4001eb7	     0xfb680000000	                   movzx eax, byte [rax]	       977	srec.c	FUNCTION_13	SWITCH_1
0x4001ebe	            0x8802	                      mov byte [rdx], al	       977	srec.c	FUNCTION_13	SWITCH_1
0x4001ec0	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	       977	srec.c	FUNCTION_13	SWITCH_1
0x4001ec7	        0x48c1e81c	                           shr rax, 0x1c	       977	srec.c	FUNCTION_13	SWITCH_1
0x4001ecb	          0x83e00f	                            and eax, 0xf	       977	srec.c	FUNCTION_13	SWITCH_1
0x4001ece	     0xfb690000000	                   movzx edx, byte [rax]	       977	srec.c	FUNCTION_13	SWITCH_1
0x4001ed5	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       977	srec.c	FUNCTION_13	SWITCH_1
0x4001edc	            0x8810	                      mov byte [rax], dl	       977	srec.c	FUNCTION_13	SWITCH_1
0x4001ede	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	       977	srec.c	FUNCTION_13	SWITCH_1
0x4001ee5	        0x48c1e818	                           shr rax, 0x18	       977	srec.c	FUNCTION_13	SWITCH_1
0x4001ee9	           0xfb6c0	                           movzx eax, al	       977	srec.c	FUNCTION_13	SWITCH_1
0x4001eec	     0x185ccfdffff	            add dword [rbp - 0x234], eax	       977	srec.c	FUNCTION_13	SWITCH_1
0x4001ef2	    0x488385d8fdff	              add qword [rbp - 0x228], 2	       978	srec.c	FUNCTION_13	SWITCH_1
0x4001efa	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       982	srec.c	FUNCTION_13	SWITCH_1
0x4001f01	        0x488d5001	                      lea rdx, [rax + 1]	       982	srec.c	FUNCTION_13	SWITCH_1
0x4001f05	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	       982	srec.c	FUNCTION_13	SWITCH_1
0x4001f0c	        0x48c1e810	                           shr rax, 0x10	       982	srec.c	FUNCTION_13	SWITCH_1
0x4001f10	          0x83e00f	                            and eax, 0xf	       982	srec.c	FUNCTION_13	SWITCH_1
0x4001f13	     0xfb680000000	                   movzx eax, byte [rax]	       982	srec.c	FUNCTION_13	SWITCH_1
0x4001f1a	            0x8802	                      mov byte [rdx], al	       982	srec.c	FUNCTION_13	SWITCH_1
0x4001f1c	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	       982	srec.c	FUNCTION_13	SWITCH_1
0x4001f23	        0x48c1e814	                           shr rax, 0x14	       982	srec.c	FUNCTION_13	SWITCH_1
0x4001f27	          0x83e00f	                            and eax, 0xf	       982	srec.c	FUNCTION_13	SWITCH_1
0x4001f2a	     0xfb690000000	                   movzx edx, byte [rax]	       982	srec.c	FUNCTION_13	SWITCH_1
0x4001f31	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       982	srec.c	FUNCTION_13	SWITCH_1
0x4001f38	            0x8810	                      mov byte [rax], dl	       982	srec.c	FUNCTION_13	SWITCH_1
0x4001f3a	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	       982	srec.c	FUNCTION_13	SWITCH_1
0x4001f41	        0x48c1e810	                           shr rax, 0x10	       982	srec.c	FUNCTION_13	SWITCH_1
0x4001f45	           0xfb6c0	                           movzx eax, al	       982	srec.c	FUNCTION_13	SWITCH_1
0x4001f48	     0x185ccfdffff	            add dword [rbp - 0x234], eax	       982	srec.c	FUNCTION_13	SWITCH_1
0x4001f4e	    0x488385d8fdff	              add qword [rbp - 0x228], 2	       983	srec.c	FUNCTION_13	SWITCH_1
0x4001f56	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       988	srec.c	FUNCTION_13	SWITCH_1
0x4001f5d	        0x488d5001	                      lea rdx, [rax + 1]	       988	srec.c	FUNCTION_13	SWITCH_1
0x4001f61	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	       988	srec.c	FUNCTION_13	SWITCH_1
0x4001f68	        0x48c1e808	                              shr rax, 8	       988	srec.c	FUNCTION_13	SWITCH_1
0x4001f6c	          0x83e00f	                            and eax, 0xf	       988	srec.c	FUNCTION_13	SWITCH_1
0x4001f6f	     0xfb680000000	                   movzx eax, byte [rax]	       988	srec.c	FUNCTION_13	SWITCH_1
0x4001f76	            0x8802	                      mov byte [rdx], al	       988	srec.c	FUNCTION_13	SWITCH_1
0x4001f78	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	       988	srec.c	FUNCTION_13	SWITCH_1
0x4001f7f	        0x48c1e80c	                            shr rax, 0xc	       988	srec.c	FUNCTION_13	SWITCH_1
0x4001f83	          0x83e00f	                            and eax, 0xf	       988	srec.c	FUNCTION_13	SWITCH_1
0x4001f86	     0xfb690000000	                   movzx edx, byte [rax]	       988	srec.c	FUNCTION_13	SWITCH_1
0x4001f8d	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       988	srec.c	FUNCTION_13	SWITCH_1
0x4001f94	            0x8810	                      mov byte [rax], dl	       988	srec.c	FUNCTION_13	SWITCH_1
0x4001f96	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	       988	srec.c	FUNCTION_13	SWITCH_1
0x4001f9d	        0x48c1e808	                              shr rax, 8	       988	srec.c	FUNCTION_13	SWITCH_1
0x4001fa1	           0xfb6c0	                           movzx eax, al	       988	srec.c	FUNCTION_13	SWITCH_1
0x4001fa4	     0x185ccfdffff	            add dword [rbp - 0x234], eax	       988	srec.c	FUNCTION_13	SWITCH_1
0x4001faa	    0x488385d8fdff	              add qword [rbp - 0x228], 2	       989	srec.c	FUNCTION_13	SWITCH_1
0x4001fb2	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       990	srec.c	FUNCTION_13	SWITCH_1
0x4001fb9	        0x488d5001	                      lea rdx, [rax + 1]	       990	srec.c	FUNCTION_13	SWITCH_1
0x4001fbd	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	       990	srec.c	FUNCTION_13	SWITCH_1
0x4001fc4	          0x83e00f	                            and eax, 0xf	       990	srec.c	FUNCTION_13	SWITCH_1
0x4001fc7	     0xfb680000000	                   movzx eax, byte [rax]	       990	srec.c	FUNCTION_13	SWITCH_1
0x4001fce	            0x8802	                      mov byte [rdx], al	       990	srec.c	FUNCTION_13	SWITCH_1
0x4001fd0	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	       990	srec.c	FUNCTION_13	SWITCH_1
0x4001fd7	        0x48c1e804	                              shr rax, 4	       990	srec.c	FUNCTION_13	SWITCH_1
0x4001fdb	          0x83e00f	                            and eax, 0xf	       990	srec.c	FUNCTION_13	SWITCH_1
0x4001fde	     0xfb690000000	                   movzx edx, byte [rax]	       990	srec.c	FUNCTION_13	SWITCH_1
0x4001fe5	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       990	srec.c	FUNCTION_13	SWITCH_1
0x4001fec	            0x8810	                      mov byte [rax], dl	       990	srec.c	FUNCTION_13	SWITCH_1
0x4001fee	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	       990	srec.c	FUNCTION_13	SWITCH_1
0x4001ff5	           0xfb6c0	                           movzx eax, al	       990	srec.c	FUNCTION_13	SWITCH_1
0x4001ff8	     0x185ccfdffff	            add dword [rbp - 0x234], eax	       990	srec.c	FUNCTION_13	SWITCH_1
0x4001ffe	    0x488385d8fdff	              add qword [rbp - 0x228], 2	       991	srec.c	FUNCTION_13	SWITCH_1
0x4002006	              0x90	                                     nop	       992	srec.c	FUNCTION_13	SWITCH_1
0x4002007	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	       995	srec.c	FUNCTION_13	FOR_1
0x400200e	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	       995	srec.c	FUNCTION_13	FOR_1
0x4002015	            0xeb6e	                           jmp 0x4002085	       995	srec.c	FUNCTION_13	FOR_1
0x4002017	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       997	srec.c	FUNCTION_13	FOR_1
0x400201e	        0x488d5001	                      lea rdx, [rax + 1]	       997	srec.c	FUNCTION_13	FOR_1
0x4002022	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	       997	srec.c	FUNCTION_13	FOR_1
0x4002029	           0xfb600	                   movzx eax, byte [rax]	       997	srec.c	FUNCTION_13	FOR_1
0x400202c	           0xfb6c0	                           movzx eax, al	       997	srec.c	FUNCTION_13	FOR_1
0x400202f	          0x83e00f	                            and eax, 0xf	       997	srec.c	FUNCTION_13	FOR_1
0x4002032	            0x4898	                                    cdqe	       997	srec.c	FUNCTION_13	FOR_1
0x4002034	     0xfb680000000	                   movzx eax, byte [rax]	       997	srec.c	FUNCTION_13	FOR_1
0x400203b	            0x8802	                      mov byte [rdx], al	       997	srec.c	FUNCTION_13	FOR_1
0x400203d	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	       997	srec.c	FUNCTION_13	FOR_1
0x4002044	           0xfb600	                   movzx eax, byte [rax]	       997	srec.c	FUNCTION_13	FOR_1
0x4002047	          0xc0e804	                               shr al, 4	       997	srec.c	FUNCTION_13	FOR_1
0x400204a	           0xfb6c0	                           movzx eax, al	       997	srec.c	FUNCTION_13	FOR_1
0x400204d	          0x83e00f	                            and eax, 0xf	       997	srec.c	FUNCTION_13	FOR_1
0x4002050	            0x4898	                                    cdqe	       997	srec.c	FUNCTION_13	FOR_1
0x4002052	     0xfb690000000	                   movzx edx, byte [rax]	       997	srec.c	FUNCTION_13	FOR_1
0x4002059	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       997	srec.c	FUNCTION_13	FOR_1
0x4002060	            0x8810	                      mov byte [rax], dl	       997	srec.c	FUNCTION_13	FOR_1
0x4002062	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	       997	srec.c	FUNCTION_13	FOR_1
0x4002069	           0xfb600	                   movzx eax, byte [rax]	       997	srec.c	FUNCTION_13	FOR_1
0x400206c	           0xfb6c0	                           movzx eax, al	       997	srec.c	FUNCTION_13	FOR_1
0x400206f	     0x185ccfdffff	            add dword [rbp - 0x234], eax	       997	srec.c	FUNCTION_13	FOR_1
0x4002075	    0x488385d8fdff	              add qword [rbp - 0x228], 2	       998	srec.c	FUNCTION_13	FOR_1
0x400207d	    0x488385d0fdff	              add qword [rbp - 0x230], 1	       995	srec.c	FUNCTION_13	FOR_1
0x4002085	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	       995	srec.c	FUNCTION_13	FOR_1
0x400208c	    0x483b8598fdff	            cmp rax, qword [rbp - 0x268]	       995	srec.c	FUNCTION_13	FOR_1
0x4002093	            0x7282	                            jb 0x4002017	       995	srec.c	FUNCTION_13	FOR_1
0x4002095	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      1002	srec.c	FUNCTION_13
0x400209c	        0x488d5001	                      lea rdx, [rax + 1]	      1002	srec.c	FUNCTION_13
0x40020a0	    0x488b8dd8fdff	            mov rcx, qword [rbp - 0x228]	      1002	srec.c	FUNCTION_13
0x40020a7	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      1002	srec.c	FUNCTION_13
0x40020ae	          0x4829c1	                            sub rcx, rax	      1002	srec.c	FUNCTION_13
0x40020b1	          0x4889c8	                            mov rax, rcx	      1002	srec.c	FUNCTION_13
0x40020b4	          0x4889c1	                            mov rcx, rax	      1002	srec.c	FUNCTION_13
0x40020b7	        0x48c1e93f	                           shr rcx, 0x3f	      1002	srec.c	FUNCTION_13
0x40020bb	          0x4801c8	                            add rax, rcx	      1002	srec.c	FUNCTION_13
0x40020be	          0x48d1f8	                              sar rax, 1	      1002	srec.c	FUNCTION_13
0x40020c1	          0x83e00f	                            and eax, 0xf	      1002	srec.c	FUNCTION_13
0x40020c4	     0xfb680000000	                   movzx eax, byte [rax]	      1002	srec.c	FUNCTION_13
0x40020cb	            0x8802	                      mov byte [rdx], al	      1002	srec.c	FUNCTION_13
0x40020cd	    0x488b95d8fdff	            mov rdx, qword [rbp - 0x228]	      1002	srec.c	FUNCTION_13
0x40020d4	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      1002	srec.c	FUNCTION_13
0x40020db	          0x4829c2	                            sub rdx, rax	      1002	srec.c	FUNCTION_13
0x40020de	          0x4889d0	                            mov rax, rdx	      1002	srec.c	FUNCTION_13
0x40020e1	          0x4889c2	                            mov rdx, rax	      1002	srec.c	FUNCTION_13
0x40020e4	        0x48c1ea3f	                           shr rdx, 0x3f	      1002	srec.c	FUNCTION_13
0x40020e8	          0x4801d0	                            add rax, rdx	      1002	srec.c	FUNCTION_13
0x40020eb	          0x48d1f8	                              sar rax, 1	      1002	srec.c	FUNCTION_13
0x40020ee	        0x48c1f804	                              sar rax, 4	      1002	srec.c	FUNCTION_13
0x40020f2	          0x83e00f	                            and eax, 0xf	      1002	srec.c	FUNCTION_13
0x40020f5	     0xfb690000000	                   movzx edx, byte [rax]	      1002	srec.c	FUNCTION_13
0x40020fc	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      1002	srec.c	FUNCTION_13
0x4002103	            0x8810	                      mov byte [rax], dl	      1002	srec.c	FUNCTION_13
0x4002105	    0x488b95d8fdff	            mov rdx, qword [rbp - 0x228]	      1002	srec.c	FUNCTION_13
0x400210c	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      1002	srec.c	FUNCTION_13
0x4002113	          0x4829c2	                            sub rdx, rax	      1002	srec.c	FUNCTION_13
0x4002116	          0x4889d0	                            mov rax, rdx	      1002	srec.c	FUNCTION_13
0x4002119	          0x4889c2	                            mov rdx, rax	      1002	srec.c	FUNCTION_13
0x400211c	        0x48c1ea3f	                           shr rdx, 0x3f	      1002	srec.c	FUNCTION_13
0x4002120	          0x4801d0	                            add rax, rdx	      1002	srec.c	FUNCTION_13
0x4002123	          0x48d1f8	                              sar rax, 1	      1002	srec.c	FUNCTION_13
0x4002126	           0xfb6c0	                           movzx eax, al	      1002	srec.c	FUNCTION_13
0x4002129	     0x185ccfdffff	            add dword [rbp - 0x234], eax	      1002	srec.c	FUNCTION_13
0x400212f	    0x81a5ccfdffff	           and dword [rbp - 0x234], 0xff	      1003	srec.c	FUNCTION_13
0x4002139	      0xb8ff000000	                           mov eax, 0xff	      1004	srec.c	FUNCTION_13
0x400213e	    0x2b85ccfdffff	            sub eax, dword [rbp - 0x234]	      1004	srec.c	FUNCTION_13
0x4002144	    0x8985ccfdffff	            mov dword [rbp - 0x234], eax	      1004	srec.c	FUNCTION_13
0x400214a	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      1005	srec.c	FUNCTION_13
0x4002151	        0x488d5001	                      lea rdx, [rax + 1]	      1005	srec.c	FUNCTION_13
0x4002155	    0x8b85ccfdffff	            mov eax, dword [rbp - 0x234]	      1005	srec.c	FUNCTION_13
0x400215b	          0x83e00f	                            and eax, 0xf	      1005	srec.c	FUNCTION_13
0x400215e	            0x89c0	                            mov eax, eax	      1005	srec.c	FUNCTION_13
0x4002160	     0xfb680000000	                   movzx eax, byte [rax]	      1005	srec.c	FUNCTION_13
0x4002167	            0x8802	                      mov byte [rdx], al	      1005	srec.c	FUNCTION_13
0x4002169	    0x8b85ccfdffff	            mov eax, dword [rbp - 0x234]	      1005	srec.c	FUNCTION_13
0x400216f	          0xc1e804	                              shr eax, 4	      1005	srec.c	FUNCTION_13
0x4002172	          0x83e00f	                            and eax, 0xf	      1005	srec.c	FUNCTION_13
0x4002175	            0x89c0	                            mov eax, eax	      1005	srec.c	FUNCTION_13
0x4002177	     0xfb690000000	                   movzx edx, byte [rax]	      1005	srec.c	FUNCTION_13
0x400217e	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      1005	srec.c	FUNCTION_13
0x4002185	            0x8810	                      mov byte [rax], dl	      1005	srec.c	FUNCTION_13
0x4002187	    0x8b85ccfdffff	            mov eax, dword [rbp - 0x234]	      1005	srec.c	FUNCTION_13
0x400218d	           0xfb6c0	                           movzx eax, al	      1005	srec.c	FUNCTION_13
0x4002190	     0x185ccfdffff	            add dword [rbp - 0x234], eax	      1005	srec.c	FUNCTION_13
0x4002196	    0x488385d8fdff	              add qword [rbp - 0x228], 2	      1006	srec.c	FUNCTION_13
0x400219e	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      1008	srec.c	FUNCTION_13
0x40021a5	        0x488d5001	                      lea rdx, [rax + 1]	      1008	srec.c	FUNCTION_13
0x40021a9	    0x488995d8fdff	            mov qword [rbp - 0x228], rdx	      1008	srec.c	FUNCTION_13
0x40021b0	          0xc6000d	                     mov byte [rax], 0xd	      1008	srec.c	FUNCTION_13
0x40021b3	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      1009	srec.c	FUNCTION_13
0x40021ba	        0x488d5001	                      lea rdx, [rax + 1]	      1009	srec.c	FUNCTION_13
0x40021be	    0x488995d8fdff	            mov qword [rbp - 0x228], rdx	      1009	srec.c	FUNCTION_13
0x40021c5	          0xc6000a	                     mov byte [rax], 0xa	      1009	srec.c	FUNCTION_13
0x40021c8	    0x488b95d8fdff	            mov rdx, qword [rbp - 0x228]	      1010	srec.c	FUNCTION_13
0x40021cf	    0x488d85f0fdff	                  lea rax, [rbp - 0x210]	      1010	srec.c	FUNCTION_13
0x40021d6	          0x4829c2	                            sub rdx, rax	      1010	srec.c	FUNCTION_13
0x40021d9	          0x4889d0	                            mov rax, rdx	      1010	srec.c	FUNCTION_13
0x40021dc	    0x488985e8fdff	            mov qword [rbp - 0x218], rax	      1010	srec.c	FUNCTION_13
0x40021e3	    0x488b95b8fdff	            mov rdx, qword [rbp - 0x248]	      1012	srec.c	FUNCTION_13	CALL_1
0x40021ea	    0x488b8de8fdff	            mov rcx, qword [rbp - 0x218]	      1012	srec.c	FUNCTION_13	CALL_1
0x40021f1	    0x488d85f0fdff	                  lea rax, [rbp - 0x210]	      1012	srec.c	FUNCTION_13	CALL_1
0x40021f8	          0x4889ce	                            mov rsi, rcx	      1012	srec.c	FUNCTION_13	CALL_1
0x40021fb	          0x4889c7	                            mov rdi, rax	      1012	srec.c	FUNCTION_13	CALL_1
0x40021fe	      0xe800000000	                          call 0x4002203	      1012	srec.c	FUNCTION_13	CALL_1
0x4002203	    0x483b85e8fdff	            cmp rax, qword [rbp - 0x218]	      1012	srec.c	FUNCTION_13	CALL_1
0x400220a	           0xf94c0	                                 sete al	      1012	srec.c	FUNCTION_13	CALL_1
0x400220d	           0xfb6c0	                           movzx eax, al	      1012	srec.c	FUNCTION_13	CALL_1
0x4002210	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1013	srec.c	FUNCTION_13
0x4002214	    0x644833342528	                xor rsi, qword fs:[0x28]	      1013	srec.c	FUNCTION_13
0x400221d	            0x7405	                            je 0x4002224	      1013	srec.c	FUNCTION_13
0x400221f	      0xe800000000	                          call 0x4002224	      1013	srec.c	FUNCTION_13
0x4002224	              0xc9	                                   leave	      1013	srec.c	FUNCTION_13
0x4002225	              0xc3	                                     ret	      1013	srec.c	FUNCTION_13
srec_get_section_contents	WHILE,0:ELSE,0:IF,5:functions,0:FOR,0:CALL,4:DO,0:SWITCH,0	70
0x4001a1f	              0x55	                                push rbp	       839	srec.c	FUNCTION_10
0x4001a20	          0x4889e5	                            mov rbp, rsp	       839	srec.c	FUNCTION_10
0x4001a23	        0x4883ec30	                           sub rsp, 0x30	       839	srec.c	FUNCTION_10
0x4001a27	        0x48897df8	                mov qword [rbp - 8], rdi	       839	srec.c	FUNCTION_10
0x4001a2b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       839	srec.c	FUNCTION_10
0x4001a2f	        0x488955e8	             mov qword [rbp - 0x18], rdx	       839	srec.c	FUNCTION_10
0x4001a33	        0x48894de0	             mov qword [rbp - 0x20], rcx	       839	srec.c	FUNCTION_10
0x4001a37	        0x4c8945d8	              mov qword [rbp - 0x28], r8	       839	srec.c	FUNCTION_10
0x4001a3b	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       840	srec.c	FUNCTION_10	IF_1
0x4001a40	            0x750a	                           jne 0x4001a4c	       840	srec.c	FUNCTION_10	IF_1
0x4001a42	      0xb801000000	                              mov eax, 1	       841	srec.c	FUNCTION_10	IF_1
0x4001a47	      0xe9dd000000	                           jmp 0x4001b29	       841	srec.c	FUNCTION_10	IF_1
0x4001a4c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       843	srec.c	FUNCTION_10	IF_2
0x4001a50	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       843	srec.c	FUNCTION_10	IF_2
0x4001a54	          0x4801d0	                            add rax, rdx	       843	srec.c	FUNCTION_10	IF_2
0x4001a57	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       843	srec.c	FUNCTION_10	IF_2
0x4001a5b	            0x7218	                            jb 0x4001a75	       843	srec.c	FUNCTION_10	IF_2
0x4001a5d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       844	srec.c	FUNCTION_10	IF_2
0x4001a61	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       844	srec.c	FUNCTION_10	IF_2
0x4001a65	          0x4801c2	                            add rdx, rax	       844	srec.c	FUNCTION_10	IF_2
0x4001a68	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       844	srec.c	FUNCTION_10	IF_2
0x4001a6c	        0x488b4038	            mov rax, qword [rax + 0x38] 	       844	srec.c	FUNCTION_10	IF_2
0x4001a70	          0x4839c2	                            cmp rdx, rax	       844	srec.c	FUNCTION_10	IF_2
0x4001a73	            0x7614	                           jbe 0x4001a89	       844	srec.c	FUNCTION_10	IF_2
0x4001a75	      0xbf05000000	                              mov edi, 5	       846	srec.c	FUNCTION_10	IF_2	CALL_1
0x4001a7a	      0xe800000000	                          call 0x4001a7f	       846	srec.c	FUNCTION_10	IF_2	CALL_1
0x4001a7f	      0xb800000000	                              mov eax, 0	       847	srec.c	FUNCTION_10	IF_2
0x4001a84	      0xe9a0000000	                           jmp 0x4001b29	       847	srec.c	FUNCTION_10	IF_2
0x4001a89	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       850	srec.c	FUNCTION_10	IF_3
0x4001a8d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       850	srec.c	FUNCTION_10	IF_3
0x4001a94	          0x4885c0	                           test rax, rax	       850	srec.c	FUNCTION_10	IF_3
0x4001a97	            0x7565	                           jne 0x4001afe	       850	srec.c	FUNCTION_10	IF_3
0x4001a99	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       852	srec.c	FUNCTION_10	IF_3	CALL_2
0x4001a9d	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       852	srec.c	FUNCTION_10	IF_3	CALL_2
0x4001aa1	        0x488b45f8	                mov rax, qword [rbp - 8]	       852	srec.c	FUNCTION_10	IF_3	CALL_2
0x4001aa5	          0x4889d6	                            mov rsi, rdx	       852	srec.c	FUNCTION_10	IF_3	CALL_2
0x4001aa8	          0x4889c7	                            mov rdi, rax	       852	srec.c	FUNCTION_10	IF_3	CALL_2
0x4001aab	      0xe800000000	                          call 0x4001ab0	       852	srec.c	FUNCTION_10	IF_3	CALL_2
0x4001ab0	          0x4889c2	                            mov rdx, rax	       852	srec.c	FUNCTION_10	IF_3	CALL_2
0x4001ab3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       852	srec.c	FUNCTION_10	IF_3	CALL_2
0x4001ab7	    0x488990e00000	             mov qword [rax + 0xe0], rdx	       852	srec.c	FUNCTION_10	IF_3	CALL_2
0x4001abe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       853	srec.c	FUNCTION_10	IF_3	IF_4
0x4001ac2	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       853	srec.c	FUNCTION_10	IF_3	IF_4
0x4001ac9	          0x4885c0	                           test rax, rax	       853	srec.c	FUNCTION_10	IF_3	IF_4
0x4001acc	            0x7507	                           jne 0x4001ad5	       853	srec.c	FUNCTION_10	IF_3	IF_4
0x4001ace	      0xb800000000	                              mov eax, 0	       854	srec.c	FUNCTION_10	IF_3	IF_4
0x4001ad3	            0xeb54	                           jmp 0x4001b29	       854	srec.c	FUNCTION_10	IF_3	IF_4
0x4001ad5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       857	srec.c	FUNCTION_10	IF_3	IF_5
0x4001ad9	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	       857	srec.c	FUNCTION_10	IF_3	IF_5
0x4001ae0	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       856	srec.c	FUNCTION_10	IF_3	IF_5	CALL_3
0x4001ae4	        0x488b45f8	                mov rax, qword [rbp - 8]	       856	srec.c	FUNCTION_10	IF_3	IF_5	CALL_3
0x4001ae8	          0x4889ce	                            mov rsi, rcx	       856	srec.c	FUNCTION_10	IF_3	IF_5	CALL_3
0x4001aeb	          0x4889c7	                            mov rdi, rax	       856	srec.c	FUNCTION_10	IF_3	IF_5	CALL_3
0x4001aee	      0xe8affaffff	              call sym.srec_read_section	       856	srec.c	FUNCTION_10	IF_3	IF_5	CALL_3
0x4001af3	            0x85c0	                           test eax, eax	       856	srec.c	FUNCTION_10	IF_3	IF_5	CALL_3
0x4001af5	            0x7507	                           jne 0x4001afe	       856	srec.c	FUNCTION_10	IF_3	IF_5	CALL_3
0x4001af7	      0xb800000000	                              mov eax, 0	       858	srec.c	FUNCTION_10	IF_3	IF_5
0x4001afc	            0xeb2b	                           jmp 0x4001b29	       858	srec.c	FUNCTION_10	IF_3	IF_5
0x4001afe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       861	srec.c	FUNCTION_10	CALL_4
0x4001b02	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	       861	srec.c	FUNCTION_10	CALL_4
0x4001b09	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       861	srec.c	FUNCTION_10	CALL_4
0x4001b0d	        0x488d0c02	                    lea rcx, [rdx + rax]	       861	srec.c	FUNCTION_10	CALL_4
0x4001b11	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       861	srec.c	FUNCTION_10	CALL_4
0x4001b15	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       861	srec.c	FUNCTION_10	CALL_4
0x4001b19	          0x4889ce	                            mov rsi, rcx	       861	srec.c	FUNCTION_10	CALL_4
0x4001b1c	          0x4889c7	                            mov rdi, rax	       861	srec.c	FUNCTION_10	CALL_4
0x4001b1f	      0xe800000000	                          call 0x4001b24	       861	srec.c	FUNCTION_10	CALL_4
0x4001b24	      0xb801000000	                              mov eax, 1	       864	srec.c	FUNCTION_10
0x4001b29	              0xc9	                                   leave	       865	srec.c	FUNCTION_10
0x4001b2a	              0xc3	                                     ret	       865	srec.c	FUNCTION_10
srec_object_p	WHILE,0:ELSE,0:IF,5:functions,0:FOR,0:CALL,7:DO,0:SWITCH,0	107
0x40012ae	              0x55	                                push rbp	       651	srec.c	FUNCTION_7
0x40012af	          0x4889e5	                            mov rbp, rsp	       651	srec.c	FUNCTION_7
0x40012b2	        0x4883ec30	                           sub rsp, 0x30	       651	srec.c	FUNCTION_7
0x40012b6	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       651	srec.c	FUNCTION_7
0x40012ba	    0x64488b042528	                mov rax, qword fs:[0x28]	       651	srec.c	FUNCTION_7
0x40012c3	        0x488945f8	                mov qword [rbp - 8], rax	       651	srec.c	FUNCTION_7
0x40012c7	            0x31c0	                            xor eax, eax	       651	srec.c	FUNCTION_7
0x40012c9	      0xe872edffff	                      call sym.srec_init	       655	srec.c	FUNCTION_7	CALL_1
0x40012ce	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x40012d2	      0xba00000000	                              mov edx, 0	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x40012d7	      0xbe00000000	                              mov esi, 0	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x40012dc	          0x4889c7	                            mov rdi, rax	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x40012df	      0xe800000000	                          call 0x40012e4	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x40012e4	            0x85c0	                           test eax, eax	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x40012e6	            0x751b	                           jne 0x4001303	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x40012e8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x40012ec	        0x488d45f0	                   lea rax, [rbp - 0x10]	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x40012f0	      0xbe04000000	                              mov esi, 4	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x40012f5	          0x4889c7	                            mov rdi, rax	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x40012f8	      0xe800000000	                          call 0x40012fd	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x40012fd	        0x4883f804	                              cmp rax, 4	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x4001301	            0x740a	                            je 0x400130d	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x4001303	      0xb800000000	                              mov eax, 0	       659	srec.c	FUNCTION_7	IF_1
0x4001308	      0xe91f010000	                           jmp 0x400142c	       659	srec.c	FUNCTION_7	IF_1
0x400130d	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	       661	srec.c	FUNCTION_7	IF_2
0x4001311	            0x3c53	                            cmp al, 0x53	       661	srec.c	FUNCTION_7	IF_2
0x4001313	            0x753c	                           jne 0x4001351	       661	srec.c	FUNCTION_7	IF_2
0x4001315	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	       661	srec.c	FUNCTION_7	IF_2
0x4001319	           0xfb6c0	                           movzx eax, al	       661	srec.c	FUNCTION_7	IF_2
0x400131c	            0x4898	                                    cdqe	       661	srec.c	FUNCTION_7	IF_2
0x400131e	     0xfb680000000	                   movzx eax, byte [rax]	       661	srec.c	FUNCTION_7	IF_2
0x4001325	            0x3c63	                            cmp al, 0x63	       661	srec.c	FUNCTION_7	IF_2
0x4001327	            0x7428	                            je 0x4001351	       661	srec.c	FUNCTION_7	IF_2
0x4001329	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	       661	srec.c	FUNCTION_7	IF_2
0x400132d	           0xfb6c0	                           movzx eax, al	       661	srec.c	FUNCTION_7	IF_2
0x4001330	            0x4898	                                    cdqe	       661	srec.c	FUNCTION_7	IF_2
0x4001332	     0xfb680000000	                   movzx eax, byte [rax]	       661	srec.c	FUNCTION_7	IF_2
0x4001339	            0x3c63	                            cmp al, 0x63	       661	srec.c	FUNCTION_7	IF_2
0x400133b	            0x7414	                            je 0x4001351	       661	srec.c	FUNCTION_7	IF_2
0x400133d	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	       661	srec.c	FUNCTION_7	IF_2
0x4001341	           0xfb6c0	                           movzx eax, al	       661	srec.c	FUNCTION_7	IF_2
0x4001344	            0x4898	                                    cdqe	       661	srec.c	FUNCTION_7	IF_2
0x4001346	     0xfb680000000	                   movzx eax, byte [rax]	       661	srec.c	FUNCTION_7	IF_2
0x400134d	            0x3c63	                            cmp al, 0x63	       661	srec.c	FUNCTION_7	IF_2
0x400134f	            0x7514	                           jne 0x4001365	       661	srec.c	FUNCTION_7	IF_2
0x4001351	      0xbf03000000	                              mov edi, 3	       663	srec.c	FUNCTION_7	IF_2	CALL_4
0x4001356	      0xe800000000	                          call 0x400135b	       663	srec.c	FUNCTION_7	IF_2	CALL_4
0x400135b	      0xb800000000	                              mov eax, 0	       664	srec.c	FUNCTION_7	IF_2
0x4001360	      0xe9c7000000	                           jmp 0x400142c	       664	srec.c	FUNCTION_7	IF_2
0x4001365	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       667	srec.c	FUNCTION_7
0x4001369	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       667	srec.c	FUNCTION_7
0x4001370	        0x488945e8	             mov qword [rbp - 0x18], rax	       667	srec.c	FUNCTION_7
0x4001374	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001378	          0x4889c7	                            mov rdi, rax	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x400137b	      0xe8e0ecffff	                  call sym.srec_mkobject	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001380	            0x85c0	                           test eax, eax	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001382	            0x7410	                            je 0x4001394	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001384	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001388	          0x4889c7	                            mov rdi, rax	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x400138b	      0xe86cefffff	                      call sym.srec_scan	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001390	            0x85c0	                           test eax, eax	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001392	            0x7551	                           jne 0x40013e5	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001394	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x4001398	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x400139f	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x40013a3	            0x742a	                            je 0x40013cf	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x40013a5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x40013a9	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x40013b0	          0x4885c0	                           test rax, rax	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x40013b3	            0x741a	                            je 0x40013cf	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x40013b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       671	srec.c	FUNCTION_7	IF_3	CALL_7
0x40013b9	    0x488b90f80000	            mov rdx, qword [rax + 0xf8] 	       671	srec.c	FUNCTION_7	IF_3	CALL_7
0x40013c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       671	srec.c	FUNCTION_7	IF_3	CALL_7
0x40013c4	          0x4889d6	                            mov rsi, rdx	       671	srec.c	FUNCTION_7	IF_3	CALL_7
0x40013c7	          0x4889c7	                            mov rdi, rax	       671	srec.c	FUNCTION_7	IF_3	CALL_7
0x40013ca	      0xe800000000	                          call 0x40013cf	       671	srec.c	FUNCTION_7	IF_3	CALL_7
0x40013cf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       672	srec.c	FUNCTION_7	IF_3
0x40013d3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       672	srec.c	FUNCTION_7	IF_3
0x40013d7	    0x488990f80000	             mov qword [rax + 0xf8], rdx	       672	srec.c	FUNCTION_7	IF_3
0x40013de	      0xb800000000	                              mov eax, 0	       673	srec.c	FUNCTION_7	IF_3
0x40013e3	            0xeb47	                           jmp 0x400142c	       673	srec.c	FUNCTION_7	IF_3
0x40013e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       676	srec.c	FUNCTION_7	IF_5
0x40013e9	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	       676	srec.c	FUNCTION_7	IF_5
0x40013ef	            0x85c0	                           test eax, eax	       676	srec.c	FUNCTION_7	IF_5
0x40013f1	            0x7431	                            je 0x4001424	       676	srec.c	FUNCTION_7	IF_5
0x40013f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       677	srec.c	FUNCTION_7	IF_5
0x40013f7	          0x8b4044	            mov eax, dword [rax + 0x44] 	       677	srec.c	FUNCTION_7	IF_5
0x40013fa	          0xc1e805	                              shr eax, 5	       677	srec.c	FUNCTION_7	IF_5
0x40013fd	      0x25ffff0f00	                        and eax, 0xfffff	       677	srec.c	FUNCTION_7	IF_5
0x4001402	          0x83c810	                            or eax, 0x10	       677	srec.c	FUNCTION_7	IF_5
0x4001405	            0x89c2	                            mov edx, eax	       677	srec.c	FUNCTION_7	IF_5
0x4001407	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       677	srec.c	FUNCTION_7	IF_5
0x400140b	    0x81e2ffff0f00	                        and edx, 0xfffff	       677	srec.c	FUNCTION_7	IF_5
0x4001411	            0x89d1	                            mov ecx, edx	       677	srec.c	FUNCTION_7	IF_5
0x4001413	          0xc1e105	                              shl ecx, 5	       677	srec.c	FUNCTION_7	IF_5
0x4001416	          0x8b5044	            mov edx, dword [rax + 0x44] 	       677	srec.c	FUNCTION_7	IF_5
0x4001419	    0x81e21f0000fe	                     and edx, 0xfe00001f	       677	srec.c	FUNCTION_7	IF_5
0x400141f	             0x9ca	                             or edx, ecx	       677	srec.c	FUNCTION_7	IF_5
0x4001421	          0x895044	             mov dword [rax + 0x44], edx	       677	srec.c	FUNCTION_7	IF_5
0x4001424	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       679	srec.c	FUNCTION_7
0x4001428	        0x488b4008	                mov rax, qword [rax + 8]	       679	srec.c	FUNCTION_7
0x400142c	        0x488b75f8	                mov rsi, qword [rbp - 8]	       680	srec.c	FUNCTION_7
0x4001430	    0x644833342528	                xor rsi, qword fs:[0x28]	       680	srec.c	FUNCTION_7
0x4001439	            0x7405	                            je 0x4001440	       680	srec.c	FUNCTION_7
0x400143b	      0xe800000000	                          call 0x4001440	       680	srec.c	FUNCTION_7
0x4001440	              0xc9	                                   leave	       680	srec.c	FUNCTION_7
0x4001441	              0xc3	                                     ret	       680	srec.c	FUNCTION_7
srec_get_byte	WHILE,0:ELSE,0:IF,2:functions,0:FOR,0:CALL,2:DO,0:SWITCH,0	30
0x40000f0	              0x55	                                push rbp	       219	srec.c	FUNCTION_3
0x40000f1	          0x4889e5	                            mov rbp, rsp	       219	srec.c	FUNCTION_3
0x40000f4	        0x4883ec20	                           sub rsp, 0x20	       219	srec.c	FUNCTION_3
0x40000f8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       219	srec.c	FUNCTION_3
0x40000fc	        0x488975e0	             mov qword [rbp - 0x20], rsi	       219	srec.c	FUNCTION_3
0x4000100	    0x64488b042528	                mov rax, qword fs:[0x28]	       219	srec.c	FUNCTION_3
0x4000109	        0x488945f8	                mov qword [rbp - 8], rax	       219	srec.c	FUNCTION_3
0x400010d	            0x31c0	                            xor eax, eax	       219	srec.c	FUNCTION_3
0x400010f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4000113	        0x488d45f7	                      lea rax, [rbp - 9]	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4000117	      0xbe01000000	                              mov esi, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x400011c	          0x4889c7	                            mov rdi, rax	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x400011f	      0xe800000000	                          call 0x4000124	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4000124	        0x4883f801	                              cmp rax, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4000128	            0x741b	                            je 0x4000145	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x400012a	      0xe800000000	                          call 0x400012f	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x400012f	          0x83f812	                           cmp eax, 0x12	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4000132	            0x740a	                            je 0x400013e	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4000134	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       225	srec.c	FUNCTION_3	IF_1	IF_2
0x4000138	    0xc70001000000	                      mov dword [rax], 1	       225	srec.c	FUNCTION_3	IF_1	IF_2
0x400013e	      0xb8ffffffff	                     mov eax, 0xffffffff	       226	srec.c	FUNCTION_3	IF_1
0x4000143	            0xeb07	                           jmp 0x400014c	       226	srec.c	FUNCTION_3	IF_1
0x4000145	         0xfb645f7	               movzx eax, byte [rbp - 9]	       229	srec.c	FUNCTION_3
0x4000149	           0xfb6c0	                           movzx eax, al	       229	srec.c	FUNCTION_3
0x400014c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       230	srec.c	FUNCTION_3
0x4000150	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       230	srec.c	FUNCTION_3
0x4000159	            0x7405	                            je 0x4000160	       230	srec.c	FUNCTION_3
0x400015b	      0xe800000000	                          call 0x4000160	       230	srec.c	FUNCTION_3
0x4000160	              0xc9	                                   leave	       230	srec.c	FUNCTION_3
0x4000161	              0xc3	                                     ret	       230	srec.c	FUNCTION_3
srec_get_symtab_upper_bound	WHILE,0:ELSE,0:IF,0:functions,0:FOR,0:CALL,1:DO,0:SWITCH,0	10
0x400277a	              0x55	                                push rbp	      1184	srec.c	FUNCTION_22
0x400277b	          0x4889e5	                            mov rbp, rsp	      1184	srec.c	FUNCTION_22
0x400277e	        0x48897df8	                mov qword [rbp - 8], rdi	      1184	srec.c	FUNCTION_22
0x4002782	        0x488b45f8	                mov rax, qword [rbp - 8]	      1185	srec.c	FUNCTION_22	CALL_1
0x4002786	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1185	srec.c	FUNCTION_22	CALL_1
0x400278c	          0x83c001	                              add eax, 1	      1185	srec.c	FUNCTION_22	CALL_1
0x400278f	            0x89c0	                            mov eax, eax	      1185	srec.c	FUNCTION_22	CALL_1
0x4002791	        0x48c1e003	                              shl rax, 3	      1185	srec.c	FUNCTION_22	CALL_1
0x4002795	              0x5d	                                 pop rbp	      1186	srec.c	FUNCTION_22
0x4002796	              0xc3	                                     ret	      1186	srec.c	FUNCTION_22
srec_init	WHILE,0:ELSE,0:IF,1:functions,0:FOR,0:CALL,1:DO,0:SWITCH,0	10
0x4000040	              0x55	                                push rbp	       180	srec.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       180	srec.c	FUNCTION_1
0x4000044	    0x8b0500000000	            mov eax, dword [0x0400004a] 	       183	srec.c	FUNCTION_1	IF_1
0x400004a	            0x85c0	                           test eax, eax	       183	srec.c	FUNCTION_1	IF_1
0x400004c	            0x750f	                           jne 0x400005d	       183	srec.c	FUNCTION_1	IF_1
0x400004e	    0xc70500000000	               mov dword [0x04000058], 1	       185	srec.c	FUNCTION_1	IF_1
0x4000058	      0xe800000000	                          call 0x400005d	       186	srec.c	FUNCTION_1	IF_1	CALL_1
0x400005d	              0x90	                                     nop	       188	srec.c	FUNCTION_1
0x400005e	              0x5d	                                 pop rbp	       188	srec.c	FUNCTION_1
0x400005f	              0xc3	                                     ret	       188	srec.c	FUNCTION_1
srec_set_section_contents	WHILE,0:ELSE,4:IF,8:functions,0:FOR,1:CALL,4:DO,0:SWITCH,0	164
0x4001b71	              0x55	                                push rbp	       887	srec.c	FUNCTION_12
0x4001b72	          0x4889e5	                            mov rbp, rsp	       887	srec.c	FUNCTION_12
0x4001b75	        0x4883ec60	                           sub rsp, 0x60	       887	srec.c	FUNCTION_12
0x4001b79	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       887	srec.c	FUNCTION_12
0x4001b7d	        0x488975c0	             mov qword [rbp - 0x40], rsi	       887	srec.c	FUNCTION_12
0x4001b81	        0x488955b8	             mov qword [rbp - 0x48], rdx	       887	srec.c	FUNCTION_12
0x4001b85	        0x48894db0	             mov qword [rbp - 0x50], rcx	       887	srec.c	FUNCTION_12
0x4001b89	        0x4c8945a8	              mov qword [rbp - 0x58], r8	       887	srec.c	FUNCTION_12
0x4001b8d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       888	srec.c	FUNCTION_12	CALL_1
0x4001b91	          0x4889c7	                            mov rdi, rax	       888	srec.c	FUNCTION_12	CALL_1
0x4001b94	      0xe800000000	                          call 0x4001b99	       888	srec.c	FUNCTION_12	CALL_1
0x4001b99	          0x8945dc	             mov dword [rbp - 0x24], eax	       888	srec.c	FUNCTION_12	CALL_1
0x4001b9c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       889	srec.c	FUNCTION_12
0x4001ba0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       889	srec.c	FUNCTION_12
0x4001ba7	        0x488945e8	             mov qword [rbp - 0x18], rax	       889	srec.c	FUNCTION_12
0x4001bab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       892	srec.c	FUNCTION_12	CALL_2
0x4001baf	      0xbe20000000	                           mov esi, 0x20	       892	srec.c	FUNCTION_12	CALL_2
0x4001bb4	          0x4889c7	                            mov rdi, rax	       892	srec.c	FUNCTION_12	CALL_2
0x4001bb7	      0xe800000000	                          call 0x4001bbc	       892	srec.c	FUNCTION_12	CALL_2
0x4001bbc	        0x488945f0	             mov qword [rbp - 0x10], rax	       892	srec.c	FUNCTION_12	CALL_2
0x4001bc0	      0x48837df000	               cmp qword [rbp - 0x10], 0	       893	srec.c	FUNCTION_12	IF_1
0x4001bc5	            0x750a	                           jne 0x4001bd1	       893	srec.c	FUNCTION_12	IF_1
0x4001bc7	      0xb800000000	                              mov eax, 0	       894	srec.c	FUNCTION_12	IF_1
0x4001bcc	      0xe904020000	                           jmp 0x4001dd5	       894	srec.c	FUNCTION_12	IF_1
0x4001bd1	      0x48837da800	               cmp qword [rbp - 0x58], 0	       896	srec.c	FUNCTION_12	IF_2
0x4001bd6	     0xf84f4010000	                            je 0x4001dd0	       896	srec.c	FUNCTION_12	IF_2
0x4001bdc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       897	srec.c	FUNCTION_12	IF_2
0x4001be0	          0x8b4020	            mov eax, dword [rax + 0x20] 	       897	srec.c	FUNCTION_12	IF_2
0x4001be3	          0x83e001	                              and eax, 1	       897	srec.c	FUNCTION_12	IF_2
0x4001be6	            0x85c0	                           test eax, eax	       897	srec.c	FUNCTION_12	IF_2
0x4001be8	     0xf84e2010000	                            je 0x4001dd0	       897	srec.c	FUNCTION_12	IF_2
0x4001bee	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       898	srec.c	FUNCTION_12	IF_2
0x4001bf2	          0x8b4020	            mov eax, dword [rax + 0x20] 	       898	srec.c	FUNCTION_12	IF_2
0x4001bf5	          0x83e002	                              and eax, 2	       898	srec.c	FUNCTION_12	IF_2
0x4001bf8	            0x85c0	                           test eax, eax	       898	srec.c	FUNCTION_12	IF_2
0x4001bfa	     0xf84d0010000	                            je 0x4001dd0	       898	srec.c	FUNCTION_12	IF_2
0x4001c00	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x4001c04	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x4001c08	          0x4889d6	                            mov rsi, rdx	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x4001c0b	          0x4889c7	                            mov rdi, rax	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x4001c0e	      0xe800000000	                          call 0x4001c13	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x4001c13	        0x488945f8	                mov qword [rbp - 8], rax	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x4001c17	      0x48837df800	                  cmp qword [rbp - 8], 0	       903	srec.c	FUNCTION_12	IF_2	IF_3
0x4001c1c	            0x750a	                           jne 0x4001c28	       903	srec.c	FUNCTION_12	IF_2	IF_3
0x4001c1e	      0xb800000000	                              mov eax, 0	       904	srec.c	FUNCTION_12	IF_2	IF_3
0x4001c23	      0xe9ad010000	                           jmp 0x4001dd5	       904	srec.c	FUNCTION_12	IF_2	IF_3
0x4001c28	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       905	srec.c	FUNCTION_12	IF_2	CALL_4
0x4001c2c	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       905	srec.c	FUNCTION_12	IF_2	CALL_4
0x4001c30	        0x488b45f8	                mov rax, qword [rbp - 8]	       905	srec.c	FUNCTION_12	IF_2	CALL_4
0x4001c34	          0x4889ce	                            mov rsi, rcx	       905	srec.c	FUNCTION_12	IF_2	CALL_4
0x4001c37	          0x4889c7	                            mov rdi, rax	       905	srec.c	FUNCTION_12	IF_2	CALL_4
0x4001c3a	      0xe800000000	                          call 0x4001c3f	       905	srec.c	FUNCTION_12	IF_2	CALL_4
0x4001c3f	    0x8b0500000000	            mov eax, dword [0x04001c45] 	       909	srec.c	FUNCTION_12	IF_2	IF_4
0x4001c45	            0x85c0	                           test eax, eax	       909	srec.c	FUNCTION_12	IF_2	IF_4
0x4001c47	            0x7410	                            je 0x4001c59	       909	srec.c	FUNCTION_12	IF_2	IF_4
0x4001c49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       910	srec.c	FUNCTION_12	IF_2	IF_4
0x4001c4d	    0xc74010030000	               mov dword [rax + 0x10], 3	       910	srec.c	FUNCTION_12	IF_2	IF_4
0x4001c54	      0xe984000000	                           jmp 0x4001cdd	       910	srec.c	FUNCTION_12	IF_2	IF_4
0x4001c59	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x4001c5d	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x4001c61	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x4001c65	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x4001c69	          0x4801d0	                            add rax, rdx	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x4001c6c	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x4001c6f	          0x4863f2	                         movsxd rsi, edx	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x4001c72	      0xba00000000	                              mov edx, 0	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x4001c77	          0x48f7f6	                                 div rsi	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x4001c7a	          0x4801c8	                            add rax, rcx	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x4001c7d	        0x4883e801	                              sub rax, 1	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x4001c81	    0x483dffff0000	                         cmp rax, 0xffff	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x4001c87	            0x7654	                           jbe 0x4001cdd	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x4001c89	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001c8d	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001c91	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001c95	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001c99	          0x4801d0	                            add rax, rdx	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001c9c	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001c9f	          0x4863fa	                         movsxd rdi, edx	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001ca2	      0xba00000000	                              mov edx, 0	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001ca7	          0x48f7f7	                                 div rdi	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001caa	          0x4801c8	                            add rax, rcx	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001cad	        0x4883e801	                              sub rax, 1	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001cb1	    0x483dffffff00	                       cmp rax, 0xffffff	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001cb7	            0x7719	                            ja 0x4001cd2	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001cb9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       914	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001cbd	          0x8b4010	            mov eax, dword [rax + 0x10] 	       914	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001cc0	          0x83f802	                              cmp eax, 2	       914	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001cc3	            0x770d	                            ja 0x4001cd2	       914	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001cc5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       915	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001cc9	    0xc74010020000	               mov dword [rax + 0x10], 2	       915	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001cd0	            0xeb0b	                           jmp 0x4001cdd	       915	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4001cd2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       917	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001cd6	    0xc74010030000	               mov dword [rax + 0x10], 3	       917	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001cdd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       919	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001ce1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       919	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001ce5	        0x48895008	                mov qword [rax + 8], rdx	       919	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001ce9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001ced	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001cf1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001cf4	          0x4863f0	                         movsxd rsi, eax	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001cf7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001cfb	            0x4899	                                     cqo	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001cfd	          0x48f7fe	                                idiv rsi	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001d00	        0x488d1401	                    lea rdx, [rcx + rax]	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001d04	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001d08	        0x48895010	             mov qword [rax + 0x10], rdx	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001d0c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       921	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001d10	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       921	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001d14	        0x48895018	             mov qword [rax + 0x18], rdx	       921	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4001d18	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       925	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d1c	        0x488b4008	                mov rax, qword [rax + 8]	       925	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d20	          0x4885c0	                           test rax, rax	       925	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d23	            0x7441	                            je 0x4001d66	       925	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d25	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       926	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d29	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       926	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d2d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       926	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d31	        0x488b4008	                mov rax, qword [rax + 8]	       926	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d35	        0x488b4010	            mov rax, qword [rax + 0x10] 	       926	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d39	          0x4839c2	                            cmp rdx, rax	       926	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d3c	            0x7228	                            jb 0x4001d66	       926	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       928	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d42	        0x488b4008	                mov rax, qword [rax + 8]	       928	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d46	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       928	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d4a	          0x488910	                    mov qword [rax], rdx	       928	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d4d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       929	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d51	    0x48c700000000	                      mov qword [rax], 0	       929	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d58	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       930	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d5c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       930	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d60	        0x48895008	                mov qword [rax + 8], rdx	       930	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d64	            0xeb6a	                           jmp 0x4001dd0	       930	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4001d66	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4001d6a	        0x488945e0	             mov qword [rbp - 0x20], rax	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4001d6e	            0xeb0b	                           jmp 0x4001d7b	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4001d70	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       938	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4001d74	          0x488b00	                    mov rax, qword [rax]	       938	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4001d77	        0x488945e0	             mov qword [rbp - 0x20], rax	       938	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4001d7b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       937	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4001d7f	          0x488b00	                    mov rax, qword [rax]	       937	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4001d82	          0x4885c0	                           test rax, rax	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4001d85	            0x7418	                            je 0x4001d9f	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4001d87	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       937	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4001d8b	          0x488b00	                    mov rax, qword [rax]	       937	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4001d8e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       937	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4001d92	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       937	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4001d96	        0x488b4010	            mov rax, qword [rax + 0x10] 	       937	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4001d9a	          0x4839c2	                            cmp rdx, rax	       937	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4001d9d	            0x72d1	                            jb 0x4001d70	       937	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4001d9f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       940	srec.c	FUNCTION_12	IF_2	ELSE_4
0x4001da3	          0x488b10	                    mov rdx, qword [rax]	       940	srec.c	FUNCTION_12	IF_2	ELSE_4
0x4001da6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       940	srec.c	FUNCTION_12	IF_2	ELSE_4
0x4001daa	          0x488910	                    mov qword [rax], rdx	       940	srec.c	FUNCTION_12	IF_2	ELSE_4
0x4001dad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       941	srec.c	FUNCTION_12	IF_2	ELSE_4
0x4001db1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       941	srec.c	FUNCTION_12	IF_2	ELSE_4
0x4001db5	          0x488910	                    mov qword [rax], rdx	       941	srec.c	FUNCTION_12	IF_2	ELSE_4
0x4001db8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       942	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x4001dbc	          0x488b00	                    mov rax, qword [rax]	       942	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x4001dbf	          0x4885c0	                           test rax, rax	       942	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x4001dc2	            0x750c	                           jne 0x4001dd0	       942	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x4001dc4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       943	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x4001dc8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       943	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x4001dcc	        0x48895008	                mov qword [rax + 8], rdx	       943	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x4001dd0	      0xb801000000	                              mov eax, 1	       946	srec.c	FUNCTION_12
0x4001dd5	              0xc9	                                   leave	       947	srec.c	FUNCTION_12
0x4001dd6	              0xc3	                                     ret	       947	srec.c	FUNCTION_12
srec_set_arch_mach	WHILE,0:ELSE,0:IF,1:functions,0:FOR,0:CALL,1:DO,0:SWITCH,0	20
0x4001b2b	              0x55	                                push rbp	       871	srec.c	FUNCTION_11
0x4001b2c	          0x4889e5	                            mov rbp, rsp	       871	srec.c	FUNCTION_11
0x4001b2f	        0x4883ec20	                           sub rsp, 0x20	       871	srec.c	FUNCTION_11
0x4001b33	        0x48897df8	                mov qword [rbp - 8], rdi	       871	srec.c	FUNCTION_11
0x4001b37	          0x8975f4	              mov dword [rbp - 0xc], esi	       871	srec.c	FUNCTION_11
0x4001b3a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       871	srec.c	FUNCTION_11
0x4001b3e	        0x837df400	                cmp dword [rbp - 0xc], 0	       872	srec.c	FUNCTION_11	IF_1
0x4001b42	            0x7417	                            je 0x4001b5b	       872	srec.c	FUNCTION_11	IF_1
0x4001b44	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       873	srec.c	FUNCTION_11	CALL_1
0x4001b48	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       873	srec.c	FUNCTION_11	CALL_1
0x4001b4b	        0x488b45f8	                mov rax, qword [rbp - 8]	       873	srec.c	FUNCTION_11	CALL_1
0x4001b4f	            0x89ce	                            mov esi, ecx	       873	srec.c	FUNCTION_11	CALL_1
0x4001b51	          0x4889c7	                            mov rdi, rax	       873	srec.c	FUNCTION_11	CALL_1
0x4001b54	      0xe800000000	                          call 0x4001b59	       873	srec.c	FUNCTION_11	CALL_1
0x4001b59	            0xeb14	                           jmp 0x4001b6f	       873	srec.c	FUNCTION_11	CALL_1
0x4001b5b	        0x488b45f8	                mov rax, qword [rbp - 8]	       875	srec.c	FUNCTION_11
0x4001b5f	    0x48c780c00000	               mov qword [rax + 0xc0], 0	       875	srec.c	FUNCTION_11
0x4001b6a	      0xb801000000	                              mov eax, 1	       876	srec.c	FUNCTION_11
0x4001b6f	              0xc9	                                   leave	       877	srec.c	FUNCTION_11
0x4001b70	              0xc3	                                     ret	       877	srec.c	FUNCTION_11
srec_write_section	WHILE,1:ELSE,1:IF,4:functions,0:FOR,0:CALL,2:DO,0:SWITCH,0	80
0x4002284	              0x55	                                push rbp	      1033	srec.c	FUNCTION_15
0x4002285	          0x4889e5	                            mov rbp, rsp	      1033	srec.c	FUNCTION_15
0x4002288	              0x53	                                push rbx	      1033	srec.c	FUNCTION_15
0x4002289	        0x4883ec48	                           sub rsp, 0x48	      1033	srec.c	FUNCTION_15
0x400228d	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1033	srec.c	FUNCTION_15
0x4002291	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1033	srec.c	FUNCTION_15
0x4002295	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1033	srec.c	FUNCTION_15
0x4002299	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1034	srec.c	FUNCTION_15
0x40022a0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1035	srec.c	FUNCTION_15
0x40022a4	        0x488b4008	                mov rax, qword [rax + 8]	      1035	srec.c	FUNCTION_15
0x40022a8	        0x488945e0	             mov qword [rbp - 0x20], rax	      1035	srec.c	FUNCTION_15
0x40022ac	    0x8b0500000000	            mov eax, dword [0x040022b2] 	      1043	srec.c	FUNCTION_15	IF_1
0x40022b2	            0x85c0	                           test eax, eax	      1043	srec.c	FUNCTION_15	IF_1
0x40022b4	            0x750f	                           jne 0x40022c5	      1043	srec.c	FUNCTION_15	IF_1
0x40022b6	    0xc70500000000	               mov dword [0x040022c0], 1	      1044	srec.c	FUNCTION_15	IF_1
0x40022c0	      0xe9c3000000	                           jmp 0x4002388	      1044	srec.c	FUNCTION_15	IF_1
0x40022c5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x40022c9	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x40022cc	      0xbafd000000	                           mov edx, 0xfd	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x40022d1	            0x29c2	                            sub edx, eax	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x40022d3	    0x8b0500000000	            mov eax, dword [0x040022d9] 	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x40022d9	            0x39c2	                            cmp edx, eax	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x40022db	     0xf83a7000000	                           jae 0x4002388	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x40022e1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1046	srec.c	FUNCTION_15	ELSE_1	IF_2
0x40022e5	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1046	srec.c	FUNCTION_15	ELSE_1	IF_2
0x40022e8	      0xbafd000000	                           mov edx, 0xfd	      1046	srec.c	FUNCTION_15	ELSE_1	IF_2
0x40022ed	            0x29c2	                            sub edx, eax	      1046	srec.c	FUNCTION_15	ELSE_1	IF_2
0x40022ef	            0x89d0	                            mov eax, edx	      1046	srec.c	FUNCTION_15	ELSE_1	IF_2
0x40022f1	    0x890500000000	            mov dword [0x040022f7], eax 	      1046	srec.c	FUNCTION_15	ELSE_1	IF_2
0x40022f7	      0xe98c000000	                           jmp 0x4002388	      1048	srec.c	FUNCTION_15	WHILE_1
0x40022fc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1051	srec.c	FUNCTION_15	WHILE_1
0x4002300	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1051	srec.c	FUNCTION_15	WHILE_1
0x4002304	          0x2b45d8	             sub eax, dword [rbp - 0x28]	      1051	srec.c	FUNCTION_15	WHILE_1
0x4002307	          0x8945dc	             mov dword [rbp - 0x24], eax	      1051	srec.c	FUNCTION_15	WHILE_1
0x400230a	    0x8b0500000000	            mov eax, dword [0x04002310] 	      1053	srec.c	FUNCTION_15	WHILE_1	IF_3
0x4002310	          0x3945dc	            cmp dword [rbp - 0x24], eax 	      1053	srec.c	FUNCTION_15	WHILE_1	IF_3
0x4002313	            0x7609	                           jbe 0x400231e	      1053	srec.c	FUNCTION_15	WHILE_1	IF_3
0x4002315	    0x8b0500000000	            mov eax, dword [0x0400231b] 	      1054	srec.c	FUNCTION_15	WHILE_1	IF_3
0x400231b	          0x8945dc	             mov dword [rbp - 0x24], eax	      1054	srec.c	FUNCTION_15	WHILE_1	IF_3
0x400231e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4002322	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4002326	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x400232a	          0x4889c7	                            mov rdi, rax	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x400232d	      0xe800000000	                          call 0x4002332	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4002332	            0x89c1	                            mov ecx, eax	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4002334	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4002337	      0xba00000000	                              mov edx, 0	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x400233c	            0xf7f1	                                 div ecx	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x400233e	            0x89c0	                            mov eax, eax	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4002340	          0x4801d8	                            add rax, rbx	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4002343	        0x488945e8	             mov qword [rbp - 0x18], rax	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4002347	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x400234a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x400234e	        0x488d3c02	                    lea rdi, [rdx + rax]	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4002352	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4002356	          0x8b7010	            mov esi, dword [rax + 0x10] 	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4002359	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x400235d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4002361	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4002365	          0x4989f8	                             mov r8, rdi	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4002368	          0x4889c7	                            mov rdi, rax	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x400236b	      0xe867faffff	              call sym.srec_write_record	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4002370	            0x85c0	                           test eax, eax	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4002372	            0x7507	                           jne 0x400237b	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4002374	      0xb800000000	                              mov eax, 0	      1063	srec.c	FUNCTION_15	WHILE_1	IF_4
0x4002379	            0xeb26	                           jmp 0x40023a1	      1063	srec.c	FUNCTION_15	WHILE_1	IF_4
0x400237b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1065	srec.c	FUNCTION_15	WHILE_1
0x400237e	           0x145d8	             add dword [rbp - 0x28], eax	      1065	srec.c	FUNCTION_15	WHILE_1
0x4002381	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1066	srec.c	FUNCTION_15	WHILE_1
0x4002384	        0x480145e0	            add qword [rbp - 0x20], rax 	      1066	srec.c	FUNCTION_15	WHILE_1
0x4002388	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1048	srec.c	FUNCTION_15	WHILE_1
0x400238b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1048	srec.c	FUNCTION_15	WHILE_1
0x400238f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1048	srec.c	FUNCTION_15	WHILE_1
0x4002393	          0x4839c2	                            cmp rdx, rax	      1048	srec.c	FUNCTION_15	WHILE_1
0x4002396	     0xf8260ffffff	                            jb 0x40022fc	      1048	srec.c	FUNCTION_15	WHILE_1
0x400239c	      0xb801000000	                              mov eax, 1	      1069	srec.c	FUNCTION_15
0x40023a1	        0x4883c448	                           add rsp, 0x48	      1070	srec.c	FUNCTION_15
0x40023a5	              0x5b	                                 pop rbx	      1070	srec.c	FUNCTION_15
0x40023a6	              0x5d	                                 pop rbp	      1070	srec.c	FUNCTION_15
0x40023a7	              0xc3	                                     ret	      1070	srec.c	FUNCTION_15
srec_write_symbols	WHILE,1:ELSE,0:IF,6:functions,0:FOR,1:CALL,14:DO,0:SWITCH,0	170
0x40023ec	              0x55	                                push rbp	      1081	srec.c	FUNCTION_17
0x40023ed	          0x4889e5	                            mov rbp, rsp	      1081	srec.c	FUNCTION_17
0x40023f0	        0x4883c480	             add rsp, 0xffffffffffffff80	      1081	srec.c	FUNCTION_17
0x40023f4	        0x48897d88	             mov qword [rbp - 0x78], rdi	      1081	srec.c	FUNCTION_17
0x40023f8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1081	srec.c	FUNCTION_17
0x4002401	        0x488945f8	                mov qword [rbp - 8], rax	      1081	srec.c	FUNCTION_17
0x4002405	            0x31c0	                            xor eax, eax	      1081	srec.c	FUNCTION_17
0x4002407	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1084	srec.c	FUNCTION_17	CALL_1
0x400240b	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1084	srec.c	FUNCTION_17	CALL_1
0x4002411	          0x89459c	             mov dword [rbp - 0x64], eax	      1084	srec.c	FUNCTION_17	CALL_1
0x4002414	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      1086	srec.c	FUNCTION_17	IF_1
0x4002418	     0xf8448020000	                            je 0x4002666	      1086	srec.c	FUNCTION_17	IF_1
0x400241e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1089	srec.c	FUNCTION_17	IF_1	CALL_2
0x4002422	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      1089	srec.c	FUNCTION_17	IF_1	CALL_2
0x4002429	        0x488945a8	             mov qword [rbp - 0x58], rax	      1089	srec.c	FUNCTION_17	IF_1	CALL_2
0x400242d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x4002431	          0x488b00	                    mov rax, qword [rax]	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x4002434	          0x4889c7	                            mov rdi, rax	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x4002437	      0xe800000000	                          call 0x400243c	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x400243c	        0x488945b0	             mov qword [rbp - 0x50], rax	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x4002440	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4002444	          0x4889c2	                            mov rdx, rax	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4002447	      0xbe03000000	                              mov esi, 3	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x400244c	      0xbf00000000	                              mov edi, 0	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4002451	      0xe800000000	                          call 0x4002456	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4002456	        0x4883f803	                              cmp rax, 3	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x400245a	            0x753c	                           jne 0x4002498	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x400245c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4002460	          0x488b00	                    mov rax, qword [rax]	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4002463	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4002467	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x400246b	          0x4889ce	                            mov rsi, rcx	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x400246e	          0x4889c7	                            mov rdi, rax	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4002471	      0xe800000000	                          call 0x4002476	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4002476	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x400247a	            0x751c	                           jne 0x4002498	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x400247c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4002480	          0x4889c2	                            mov rdx, rax	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4002483	      0xbe02000000	                              mov esi, 2	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4002488	      0xbf00000000	                              mov edi, 0	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x400248d	      0xe800000000	                          call 0x4002492	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4002492	        0x4883f802	                              cmp rax, 2	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4002496	            0x740a	                            je 0x40024a2	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4002498	      0xb800000000	                              mov eax, 0	      1095	srec.c	FUNCTION_17	IF_1	IF_2
0x400249d	      0xe9c9010000	                           jmp 0x400266b	      1095	srec.c	FUNCTION_17	IF_1	IF_2
0x40024a2	    0xc74598000000	               mov dword [rbp - 0x68], 0	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x40024a9	      0xe989010000	                           jmp 0x4002637	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x40024ae	          0x8b4598	             mov eax, dword [rbp - 0x68]	      1099	srec.c	FUNCTION_17	IF_1	FOR_1
0x40024b1	            0x4898	                                    cdqe	      1099	srec.c	FUNCTION_17	IF_1	FOR_1
0x40024b3	    0x488d14c50000	                        lea rdx, [rax*8]	      1099	srec.c	FUNCTION_17	IF_1	FOR_1
0x40024bb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1099	srec.c	FUNCTION_17	IF_1	FOR_1
0x40024bf	          0x4801d0	                            add rax, rdx	      1099	srec.c	FUNCTION_17	IF_1	FOR_1
0x40024c2	          0x488b00	                    mov rax, qword [rax]	      1099	srec.c	FUNCTION_17	IF_1	FOR_1
0x40024c5	        0x488945b8	             mov qword [rbp - 0x48], rax	      1099	srec.c	FUNCTION_17	IF_1	FOR_1
0x40024c9	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x40024cd	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x40024d1	          0x4889d6	                            mov rsi, rdx	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x40024d4	          0x4889c7	                            mov rdi, rax	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x40024d7	      0xe800000000	                          call 0x40024dc	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x40024dc	            0x85c0	                           test eax, eax	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x40024de	     0xf854f010000	                           jne 0x4002633	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x40024e4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1101	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40024e8	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1101	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40024eb	          0x83e004	                              and eax, 4	      1101	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40024ee	            0x85c0	                           test eax, eax	      1101	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40024f0	     0xf853d010000	                           jne 0x4002633	      1101	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40024f6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x40024fa	        0x488b4008	                mov rax, qword [rax + 8]	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x40024fe	          0x4889c7	                            mov rdi, rax	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x4002501	      0xe800000000	                          call 0x4002506	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x4002506	        0x488945b0	             mov qword [rbp - 0x50], rax	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x400250a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x400250e	          0x4889c2	                            mov rdx, rax	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4002511	      0xbe02000000	                              mov esi, 2	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4002516	      0xbf00000000	                              mov edi, 0	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x400251b	      0xe800000000	                          call 0x4002520	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4002520	        0x4883f802	                              cmp rax, 2	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4002524	            0x7521	                           jne 0x4002547	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4002526	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x400252a	        0x488b4008	                mov rax, qword [rax + 8]	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x400252e	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4002532	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4002536	          0x4889ce	                            mov rsi, rcx	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4002539	          0x4889c7	                            mov rdi, rax	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x400253c	      0xe800000000	                          call 0x4002541	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4002541	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4002545	            0x740a	                            je 0x4002551	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4002547	      0xb800000000	                              mov eax, 0	      1109	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4
0x400254c	      0xe91a010000	                           jmp 0x400266b	      1109	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4
0x4002551	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4002555	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4002559	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x400255d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4002561	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4002565	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4002569	          0x4801c2	                            add rdx, rax	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x400256c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4002570	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4002574	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4002578	          0x4801c2	                            add rdx, rax	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x400257b	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x400257f	        0x4883c002	                              add rax, 2	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4002583	      0xbe00000000	                              mov esi, 0	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4002588	          0x4889c7	                            mov rdi, rax	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x400258b	      0xb800000000	                              mov eax, 0	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4002590	      0xe800000000	                          call 0x4002595	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4002595	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1114	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4002599	        0x4883c002	                              add rax, 2	      1114	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x400259d	        0x488945a0	             mov qword [rbp - 0x60], rax	      1114	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40025a1	            0xeb05	                           jmp 0x40025a8	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x40025a3	      0x488345a001	               add qword [rbp - 0x60], 1	      1116	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x40025a8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x40025ac	           0xfb600	                   movzx eax, byte [rax]	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x40025af	            0x3c30	                            cmp al, 0x30	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x40025b1	            0x750f	                           jne 0x40025c2	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x40025b3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x40025b7	        0x4883c001	                              add rax, 1	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x40025bb	           0xfb600	                   movzx eax, byte [rax]	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x40025be	            0x84c0	                             test al, al	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x40025c0	            0x75e1	                           jne 0x40025a3	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x40025c2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1117	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_12
0x40025c6	          0x4889c7	                            mov rdi, rax	      1117	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_12
0x40025c9	      0xe800000000	                          call 0x40025ce	      1117	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_12
0x40025ce	        0x488945b0	             mov qword [rbp - 0x50], rax	      1117	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_12
0x40025d2	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1118	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40025d6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1118	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40025da	          0x4801d0	                            add rax, rdx	      1118	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40025dd	          0xc6000d	                     mov byte [rax], 0xd	      1118	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40025e0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1119	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40025e4	        0x488d5001	                      lea rdx, [rax + 1]	      1119	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40025e8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1119	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40025ec	          0x4801d0	                            add rax, rdx	      1119	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40025ef	          0xc6000a	                     mov byte [rax], 0xa	      1119	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40025f2	      0x48836da001	               sub qword [rbp - 0x60], 1	      1120	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40025f7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1120	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40025fb	          0xc60024	                    mov byte [rax], 0x24	      1120	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x40025fe	      0x48836da001	               sub qword [rbp - 0x60], 1	      1121	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4002603	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1121	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4002607	          0xc60020	                    mov byte [rax], 0x20	      1121	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x400260a	      0x488345b004	               add qword [rbp - 0x50], 4	      1122	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x400260f	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4002613	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4002617	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x400261b	          0x4889ce	                            mov rsi, rcx	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x400261e	          0x4889c7	                            mov rdi, rax	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4002621	      0xe800000000	                          call 0x4002626	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4002626	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x400262a	            0x7407	                            je 0x4002633	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x400262c	      0xb800000000	                              mov eax, 0	      1124	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5
0x4002631	            0xeb38	                           jmp 0x400266b	      1124	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5
0x4002633	        0x83459801	               add dword [rbp - 0x68], 1	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4002637	          0x8b4598	             mov eax, dword [rbp - 0x68]	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x400263a	          0x3b459c	             cmp eax, dword [rbp - 0x64]	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x400263d	     0xf8c6bfeffff	                            jl 0x40024ae	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4002643	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4002647	          0x4889c2	                            mov rdx, rax	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x400264a	      0xbe05000000	                              mov esi, 5	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x400264f	      0xbf00000000	                              mov edi, 0	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4002654	      0xe800000000	                          call 0x4002659	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4002659	        0x4883f805	                              cmp rax, 5	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x400265d	            0x7407	                            je 0x4002666	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x400265f	      0xb800000000	                              mov eax, 0	      1128	srec.c	FUNCTION_17	IF_1	IF_6
0x4002664	            0xeb05	                           jmp 0x400266b	      1128	srec.c	FUNCTION_17	IF_1	IF_6
0x4002666	      0xb801000000	                              mov eax, 1	      1131	srec.c	FUNCTION_17
0x400266b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1132	srec.c	FUNCTION_17
0x400266f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1132	srec.c	FUNCTION_17
0x4002678	            0x7405	                            je 0x400267f	      1132	srec.c	FUNCTION_17
0x400267a	      0xe800000000	                          call 0x400267f	      1132	srec.c	FUNCTION_17
0x400267f	              0xc9	                                   leave	      1132	srec.c	FUNCTION_17
0x4002680	              0xc3	                                     ret	      1132	srec.c	FUNCTION_17
srec_mkobject	WHILE,0:ELSE,0:IF,1:functions,0:FOR,0:CALL,2:DO,0:SWITCH,0	32
0x4000060	              0x55	                                push rbp	       194	srec.c	FUNCTION_2
0x4000061	          0x4889e5	                            mov rbp, rsp	       194	srec.c	FUNCTION_2
0x4000064	        0x4883ec20	                           sub rsp, 0x20	       194	srec.c	FUNCTION_2
0x4000068	        0x48897de8	             mov qword [rbp - 0x18], rdi	       194	srec.c	FUNCTION_2
0x400006c	      0xe8cfffffff	                      call sym.srec_init	       197	srec.c	FUNCTION_2	CALL_1
0x4000071	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       199	srec.c	FUNCTION_2	CALL_2
0x4000075	      0xbe30000000	                           mov esi, 0x30	       199	srec.c	FUNCTION_2	CALL_2
0x400007a	          0x4889c7	                            mov rdi, rax	       199	srec.c	FUNCTION_2	CALL_2
0x400007d	      0xe800000000	                          call 0x4000082	       199	srec.c	FUNCTION_2	CALL_2
0x4000082	        0x488945f8	                mov qword [rbp - 8], rax	       199	srec.c	FUNCTION_2	CALL_2
0x4000086	      0x48837df800	                  cmp qword [rbp - 8], 0	       200	srec.c	FUNCTION_2	IF_1
0x400008b	            0x7507	                           jne 0x4000094	       200	srec.c	FUNCTION_2	IF_1
0x400008d	      0xb800000000	                              mov eax, 0	       201	srec.c	FUNCTION_2	IF_1
0x4000092	            0xeb5a	                           jmp 0x40000ee	       201	srec.c	FUNCTION_2	IF_1
0x4000094	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       203	srec.c	FUNCTION_2
0x4000098	        0x488b55f8	                mov rdx, qword [rbp - 8]	       203	srec.c	FUNCTION_2
0x400009c	    0x488990f80000	             mov qword [rax + 0xf8], rdx	       203	srec.c	FUNCTION_2
0x40000a3	        0x488b45f8	                mov rax, qword [rbp - 8]	       204	srec.c	FUNCTION_2
0x40000a7	    0xc74010010000	               mov dword [rax + 0x10], 1	       204	srec.c	FUNCTION_2
0x40000ae	        0x488b45f8	                mov rax, qword [rbp - 8]	       205	srec.c	FUNCTION_2
0x40000b2	    0x48c700000000	                      mov qword [rax], 0	       205	srec.c	FUNCTION_2
0x40000b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       206	srec.c	FUNCTION_2
0x40000bd	    0x48c740080000	                  mov qword [rax + 8], 0	       206	srec.c	FUNCTION_2
0x40000c5	        0x488b45f8	                mov rax, qword [rbp - 8]	       207	srec.c	FUNCTION_2
0x40000c9	    0x48c740180000	               mov qword [rax + 0x18], 0	       207	srec.c	FUNCTION_2
0x40000d1	        0x488b45f8	                mov rax, qword [rbp - 8]	       208	srec.c	FUNCTION_2
0x40000d5	    0x48c740200000	               mov qword [rax + 0x20], 0	       208	srec.c	FUNCTION_2
0x40000dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       209	srec.c	FUNCTION_2
0x40000e1	    0x48c740280000	               mov qword [rax + 0x28], 0	       209	srec.c	FUNCTION_2
0x40000e9	      0xb801000000	                              mov eax, 1	       211	srec.c	FUNCTION_2
0x40000ee	              0xc9	                                   leave	       212	srec.c	FUNCTION_2
0x40000ef	              0xc3	                                     ret	       212	srec.c	FUNCTION_2
srec_write_header	WHILE,0:ELSE,0:IF,1:functions,0:FOR,0:CALL,2:DO,0:SWITCH,0	27
0x4002226	              0x55	                                push rbp	      1017	srec.c	FUNCTION_14
0x4002227	          0x4889e5	                            mov rbp, rsp	      1017	srec.c	FUNCTION_14
0x400222a	        0x4883ec20	                           sub rsp, 0x20	      1017	srec.c	FUNCTION_14
0x400222e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1017	srec.c	FUNCTION_14
0x4002232	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1018	srec.c	FUNCTION_14	CALL_1
0x4002236	          0x488b00	                    mov rax, qword [rax]	      1018	srec.c	FUNCTION_14	CALL_1
0x4002239	          0x4889c7	                            mov rdi, rax	      1018	srec.c	FUNCTION_14	CALL_1
0x400223c	      0xe800000000	                          call 0x4002241	      1018	srec.c	FUNCTION_14	CALL_1
0x4002241	          0x8945fc	                mov dword [rbp - 4], eax	      1018	srec.c	FUNCTION_14	CALL_1
0x4002244	        0x837dfc28	               cmp dword [rbp - 4], 0x28	      1021	srec.c	FUNCTION_14	IF_1
0x4002248	            0x7607	                           jbe 0x4002251	      1021	srec.c	FUNCTION_14	IF_1
0x400224a	    0xc745fc280000	               mov dword [rbp - 4], 0x28	      1022	srec.c	FUNCTION_14	IF_1
0x4002251	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1026	srec.c	FUNCTION_14
0x4002255	          0x488b10	                    mov rdx, qword [rax]	      1026	srec.c	FUNCTION_14
0x4002258	          0x8b45fc	                mov eax, dword [rbp - 4]	      1024	srec.c	FUNCTION_14	CALL_2
0x400225b	        0x488d0c02	                    lea rcx, [rdx + rax]	      1024	srec.c	FUNCTION_14	CALL_2
0x400225f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1025	srec.c	FUNCTION_14
0x4002263	          0x488b10	                    mov rdx, qword [rax]	      1025	srec.c	FUNCTION_14
0x4002266	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1024	srec.c	FUNCTION_14	CALL_2
0x400226a	          0x4989c8	                             mov r8, rcx	      1024	srec.c	FUNCTION_14	CALL_2
0x400226d	          0x4889d1	                            mov rcx, rdx	      1024	srec.c	FUNCTION_14	CALL_2
0x4002270	      0xba00000000	                              mov edx, 0	      1024	srec.c	FUNCTION_14	CALL_2
0x4002275	      0xbe00000000	                              mov esi, 0	      1024	srec.c	FUNCTION_14	CALL_2
0x400227a	          0x4889c7	                            mov rdi, rax	      1024	srec.c	FUNCTION_14	CALL_2
0x400227d	      0xe855fbffff	              call sym.srec_write_record	      1024	srec.c	FUNCTION_14	CALL_2
0x4002282	              0xc9	                                   leave	      1027	srec.c	FUNCTION_14
0x4002283	              0xc3	                                     ret	      1027	srec.c	FUNCTION_14
srec_write_object_contents	WHILE,0:ELSE,0:IF,0:functions,0:FOR,0:CALL,1:DO,0:SWITCH,0	10
0x4002729	              0x55	                                push rbp	      1163	srec.c	FUNCTION_19
0x400272a	          0x4889e5	                            mov rbp, rsp	      1163	srec.c	FUNCTION_19
0x400272d	        0x4883ec10	                           sub rsp, 0x10	      1163	srec.c	FUNCTION_19
0x4002731	        0x48897df8	                mov qword [rbp - 8], rdi	      1163	srec.c	FUNCTION_19
0x4002735	        0x488b45f8	                mov rax, qword [rbp - 8]	      1164	srec.c	FUNCTION_19	CALL_1
0x4002739	      0xbe00000000	                              mov esi, 0	      1164	srec.c	FUNCTION_19	CALL_1
0x400273e	          0x4889c7	                            mov rdi, rax	      1164	srec.c	FUNCTION_19	CALL_1
0x4002741	      0xe83bffffff	call sym.internal_srec_write_object_contents	      1164	srec.c	FUNCTION_19	CALL_1
0x4002746	              0xc9	                                   leave	      1165	srec.c	FUNCTION_19
0x4002747	              0xc3	                                     ret	      1165	srec.c	FUNCTION_19
srec_print_symbol	WHILE,0:ELSE,0:IF,0:functions,0:FOR,0:CALL,3:DO,0:SWITCH,1	38
0x400291b	              0x55	                                push rbp	      1241	srec.c	FUNCTION_25
0x400291c	          0x4889e5	                            mov rbp, rsp	      1241	srec.c	FUNCTION_25
0x400291f	        0x4883ec30	                           sub rsp, 0x30	      1241	srec.c	FUNCTION_25
0x4002923	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1241	srec.c	FUNCTION_25
0x4002927	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1241	srec.c	FUNCTION_25
0x400292b	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1241	srec.c	FUNCTION_25
0x400292f	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      1241	srec.c	FUNCTION_25
0x4002932	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1242	srec.c	FUNCTION_25
0x4002936	        0x488945f8	                mov qword [rbp - 8], rax	      1242	srec.c	FUNCTION_25
0x400293a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1244	srec.c	FUNCTION_25	SWITCH_1
0x400293d	            0x85c0	                           test eax, eax	      1244	srec.c	FUNCTION_25	SWITCH_1
0x400293f	            0x7519	                           jne 0x400295a	      1244	srec.c	FUNCTION_25	SWITCH_1
0x4002941	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1247	srec.c	FUNCTION_25	SWITCH_1	CALL_1
0x4002945	        0x488b4008	                mov rax, qword [rax + 8]	      1247	srec.c	FUNCTION_25	SWITCH_1	CALL_1
0x4002949	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1247	srec.c	FUNCTION_25	SWITCH_1	CALL_1
0x400294d	          0x4889d6	                            mov rsi, rdx	      1247	srec.c	FUNCTION_25	SWITCH_1	CALL_1
0x4002950	          0x4889c7	                            mov rdi, rax	      1247	srec.c	FUNCTION_25	SWITCH_1	CALL_1
0x4002953	      0xe800000000	                          call 0x4002958	      1247	srec.c	FUNCTION_25	SWITCH_1	CALL_1
0x4002958	            0xeb40	                           jmp 0x400299a	      1248	srec.c	FUNCTION_25	SWITCH_1
0x400295a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1250	srec.c	FUNCTION_25	SWITCH_1	CALL_2
0x400295e	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1250	srec.c	FUNCTION_25	SWITCH_1	CALL_2
0x4002962	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1250	srec.c	FUNCTION_25	SWITCH_1	CALL_2
0x4002966	          0x4889ce	                            mov rsi, rcx	      1250	srec.c	FUNCTION_25	SWITCH_1	CALL_2
0x4002969	          0x4889c7	                            mov rdi, rax	      1250	srec.c	FUNCTION_25	SWITCH_1	CALL_2
0x400296c	      0xe800000000	                          call 0x4002971	      1250	srec.c	FUNCTION_25	SWITCH_1	CALL_2
0x4002971	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1251	srec.c	FUNCTION_25	SWITCH_1	CALL_3
0x4002975	        0x488b4808	                mov rcx, qword [rax + 8]	      1251	srec.c	FUNCTION_25	SWITCH_1	CALL_3
0x4002979	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1252	srec.c	FUNCTION_25	SWITCH_1
0x400297d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1252	srec.c	FUNCTION_25	SWITCH_1
0x4002981	          0x488b10	                    mov rdx, qword [rax]	      1251	srec.c	FUNCTION_25	SWITCH_1	CALL_3
0x4002984	        0x488b45f8	                mov rax, qword [rbp - 8]	      1251	srec.c	FUNCTION_25	SWITCH_1	CALL_3
0x4002988	      0xbe00000000	                              mov esi, 0	      1251	srec.c	FUNCTION_25	SWITCH_1	CALL_3
0x400298d	          0x4889c7	                            mov rdi, rax	      1251	srec.c	FUNCTION_25	SWITCH_1	CALL_3
0x4002990	      0xb800000000	                              mov eax, 0	      1251	srec.c	FUNCTION_25	SWITCH_1	CALL_3
0x4002995	      0xe800000000	                          call 0x400299a	      1251	srec.c	FUNCTION_25	SWITCH_1	CALL_3
0x400299a	              0x90	                                     nop	      1255	srec.c	FUNCTION_25
0x400299b	              0xc9	                                   leave	      1255	srec.c	FUNCTION_25
0x400299c	              0xc3	                                     ret	      1255	srec.c	FUNCTION_25
srec_canonicalize_symtab	WHILE,0:ELSE,0:IF,2:functions,0:FOR,2:CALL,2:DO,0:SWITCH,0	84
0x4002797	              0x55	                                push rbp	      1192	srec.c	FUNCTION_23
0x4002798	          0x4889e5	                            mov rbp, rsp	      1192	srec.c	FUNCTION_23
0x400279b	        0x4883ec40	                           sub rsp, 0x40	      1192	srec.c	FUNCTION_23
0x400279f	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1192	srec.c	FUNCTION_23
0x40027a3	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1192	srec.c	FUNCTION_23
0x40027a7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1193	srec.c	FUNCTION_23	CALL_1
0x40027ab	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1193	srec.c	FUNCTION_23	CALL_1
0x40027b1	            0x89c0	                            mov eax, eax	      1193	srec.c	FUNCTION_23	CALL_1
0x40027b3	        0x488945f8	                mov qword [rbp - 8], rax	      1193	srec.c	FUNCTION_23	CALL_1
0x40027b7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1197	srec.c	FUNCTION_23
0x40027bb	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1197	srec.c	FUNCTION_23
0x40027c2	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1197	srec.c	FUNCTION_23
0x40027c6	        0x488945e0	             mov qword [rbp - 0x20], rax	      1197	srec.c	FUNCTION_23
0x40027ca	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1198	srec.c	FUNCTION_23	IF_1
0x40027cf	     0xf85da000000	                           jne 0x40028af	      1198	srec.c	FUNCTION_23	IF_1
0x40027d5	      0x48837df800	                  cmp qword [rbp - 8], 0	      1198	srec.c	FUNCTION_23	IF_1
0x40027da	     0xf84cf000000	                            je 0x40028af	      1198	srec.c	FUNCTION_23	IF_1
0x40027e0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x40027e4	          0x4889d0	                            mov rax, rdx	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x40027e7	          0x4801c0	                            add rax, rax	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x40027ea	          0x4801d0	                            add rax, rdx	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x40027ed	        0x48c1e004	                              shl rax, 4	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x40027f1	          0x4889c2	                            mov rdx, rax	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x40027f4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x40027f8	          0x4889d6	                            mov rsi, rdx	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x40027fb	          0x4889c7	                            mov rdi, rax	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x40027fe	      0xe800000000	                          call 0x4002803	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x4002803	        0x488945e0	             mov qword [rbp - 0x20], rax	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x4002807	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1204	srec.c	FUNCTION_23	IF_1	IF_2
0x400280c	            0x750c	                           jne 0x400281a	      1204	srec.c	FUNCTION_23	IF_1	IF_2
0x400280e	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      1205	srec.c	FUNCTION_23	IF_1	IF_2
0x4002815	      0xe9d5000000	                           jmp 0x40028ef	      1205	srec.c	FUNCTION_23	IF_1	IF_2
0x400281a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1206	srec.c	FUNCTION_23	IF_1
0x400281e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1206	srec.c	FUNCTION_23	IF_1
0x4002825	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1206	srec.c	FUNCTION_23	IF_1
0x4002829	        0x48895028	             mov qword [rax + 0x28], rdx	      1206	srec.c	FUNCTION_23	IF_1
0x400282d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002831	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002838	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x400283c	        0x488945f0	             mov qword [rbp - 0x10], rax	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002840	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002844	        0x488945e8	             mov qword [rbp - 0x18], rax	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002848	            0xeb5e	                           jmp 0x40028a8	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x400284a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1212	srec.c	FUNCTION_23	IF_1	FOR_1
0x400284e	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1212	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002852	          0x488910	                    mov qword [rax], rdx	      1212	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002855	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1213	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002859	        0x488b5008	                mov rdx, qword [rax + 8]	      1213	srec.c	FUNCTION_23	IF_1	FOR_1
0x400285d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1213	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002861	        0x48895008	                mov qword [rax + 8], rdx	      1213	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002865	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1214	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002869	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1214	srec.c	FUNCTION_23	IF_1	FOR_1
0x400286d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1214	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002871	        0x48895010	             mov qword [rax + 0x10], rdx	      1214	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002875	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1215	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002879	    0xc74018020000	               mov dword [rax + 0x18], 2	      1215	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002880	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1216	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002884	    0x48c740200000	               mov qword [rax + 0x20], 0	      1216	srec.c	FUNCTION_23	IF_1	FOR_1
0x400288c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1217	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002890	    0x48c740280000	               mov qword [rax + 0x28], 0	      1217	srec.c	FUNCTION_23	IF_1	FOR_1
0x4002898	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1210	srec.c	FUNCTION_23	IF_1	FOR_1
0x400289c	          0x488b00	                    mov rax, qword [rax]	      1210	srec.c	FUNCTION_23	IF_1	FOR_1
0x400289f	        0x488945f0	             mov qword [rbp - 0x10], rax	      1210	srec.c	FUNCTION_23	IF_1	FOR_1
0x40028a3	      0x488345e830	           add qword [rbp - 0x18], 0x30 	      1210	srec.c	FUNCTION_23	IF_1	FOR_1
0x40028a8	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40028ad	            0x759b	                           jne 0x400284a	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40028af	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1221	srec.c	FUNCTION_23	FOR_2
0x40028b6	            0xeb1f	                           jmp 0x40028d7	      1221	srec.c	FUNCTION_23	FOR_2
0x40028b8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1222	srec.c	FUNCTION_23	FOR_2
0x40028bc	        0x488d5008	                      lea rdx, [rax + 8]	      1222	srec.c	FUNCTION_23	FOR_2
0x40028c0	        0x488955c0	             mov qword [rbp - 0x40], rdx	      1222	srec.c	FUNCTION_23	FOR_2
0x40028c4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1222	srec.c	FUNCTION_23	FOR_2
0x40028c8	        0x488d4a30	                   lea rcx, [rdx + 0x30]	      1222	srec.c	FUNCTION_23	FOR_2
0x40028cc	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1222	srec.c	FUNCTION_23	FOR_2
0x40028d0	          0x488910	                    mov qword [rax], rdx	      1222	srec.c	FUNCTION_23	FOR_2
0x40028d3	        0x8345dc01	               add dword [rbp - 0x24], 1	      1221	srec.c	FUNCTION_23	FOR_2
0x40028d7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1221	srec.c	FUNCTION_23	FOR_2
0x40028da	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1221	srec.c	FUNCTION_23	FOR_2
0x40028de	            0x72d8	                            jb 0x40028b8	      1221	srec.c	FUNCTION_23	FOR_2
0x40028e0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1223	srec.c	FUNCTION_23
0x40028e4	    0x48c700000000	                      mov qword [rax], 0	      1223	srec.c	FUNCTION_23
0x40028eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1225	srec.c	FUNCTION_23
0x40028ef	              0xc9	                                   leave	      1226	srec.c	FUNCTION_23
0x40028f0	              0xc3	                                     ret	      1226	srec.c	FUNCTION_23
srec_scan	WHILE,7:ELSE,4:IF,36:functions,0:FOR,0:CALL,48:DO,1:SWITCH,2	941
0x40002fc	              0x55	                                push rbp	       297	srec.c	ELSE_1	FUNCTION_6
0x40002fd	          0x4889e5	                            mov rbp, rsp	       297	srec.c	ELSE_1	FUNCTION_6
0x4000300	    0x4881ecd00000	                           sub rsp, 0xd0	       297	srec.c	ELSE_1	FUNCTION_6
0x4000307	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	       297	srec.c	ELSE_1	FUNCTION_6
0x400030e	    0x64488b042528	                mov rax, qword fs:[0x28]	       297	srec.c	ELSE_1	FUNCTION_6
0x4000317	        0x488945f8	                mov qword [rbp - 8], rax	       297	srec.c	ELSE_1	FUNCTION_6
0x400031b	            0x31c0	                            xor eax, eax	       297	srec.c	ELSE_1	FUNCTION_6
0x400031d	    0xc78550ffffff	               mov dword [rbp - 0xb0], 1	       299	srec.c	ELSE_1	FUNCTION_6
0x4000327	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	       300	srec.c	ELSE_1	FUNCTION_6
0x4000331	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	       301	srec.c	ELSE_1	FUNCTION_6
0x400033c	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       302	srec.c	ELSE_1	FUNCTION_6
0x4000347	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       303	srec.c	ELSE_1	FUNCTION_6
0x4000352	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       304	srec.c	ELSE_1	FUNCTION_6
0x400035d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000364	      0xba00000000	                              mov edx, 0	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000369	      0xbe00000000	                              mov esi, 0	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x400036e	          0x4889c7	                            mov rdi, rax	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000371	      0xe800000000	                          call 0x4000376	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000376	            0x85c0	                           test eax, eax	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000378	     0xf85ca0e0000	                           jne 0x4001248	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x400037e	      0xe96f0e0000	                           jmp 0x40011f2	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x4000383	    0x83bd4cffffff	           cmp dword [rbp - 0xb4], 0x53 	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x400038a	            0x741d	                            je 0x40003a9	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x400038c	    0x83bd4cffffff	            cmp dword [rbp - 0xb4], 0xd 	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4000393	            0x7414	                            je 0x40003a9	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4000395	    0x83bd4cffffff	            cmp dword [rbp - 0xb4], 0xa 	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x400039c	            0x740b	                            je 0x40003a9	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x400039e	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       314	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x40003a9	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40003af	          0x83f820	                           cmp eax, 0x20	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40003b2	     0xf84c1000000	                            je 0x4000479	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40003b8	          0x83f820	                           cmp eax, 0x20	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40003bb	            0x7f10	                            jg 0x40003cd	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40003bd	          0x83f80a	                            cmp eax, 0xa	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40003c0	            0x743f	                            je 0x4000401	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40003c2	          0x83f80d	                            cmp eax, 0xd	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40003c5	     0xf84270e0000	                            je 0x40011f2	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40003cb	            0xeb0e	                           jmp 0x40003db	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40003cd	          0x83f824	                           cmp eax, 0x24	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40003d0	            0x743b	                            je 0x400040d	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40003d2	          0x83f853	                           cmp eax, 0x53	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40003d5	     0xf84b4040000	                            je 0x400088f	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40003db	    0x8b8d48ffffff	             mov ecx, dword [rbp - 0xb8]	       319	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	CALL_3
0x40003e1	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	       319	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	CALL_3
0x40003e7	    0x8bb550ffffff	             mov esi, dword [rbp - 0xb0]	       319	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	CALL_3
0x40003ed	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       319	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	CALL_3
0x40003f4	          0x4889c7	                            mov rdi, rax	       319	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	CALL_3
0x40003f7	      0xe866fdffff	                  call sym.srec_bad_byte	       319	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	CALL_3
0x40003fc	      0xe9600e0000	                           jmp 0x4001261	       320	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000401	    0x838550ffffff	               add dword [rbp - 0xb0], 1	       323	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000408	      0xe9e50d0000	                           jmp 0x40011f2	       324	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x400040d	    0x488d9548ffff	                   lea rdx, [rbp - 0xb8]	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x4000414	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x400041b	          0x4889d6	                            mov rsi, rdx	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x400041e	          0x4889c7	                            mov rdi, rax	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x4000421	      0xe8cafcffff	                  call sym.srec_get_byte	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x4000426	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x400042c	    0x83bd4cffffff	            cmp dword [rbp - 0xb4], 0xa 	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x4000433	            0x7409	                            je 0x400043e	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x4000435	    0x83bd4cffffff	cmp dword [rbp - 0xb4], 0xffffffffffffffff	       332	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2
0x400043c	            0x75cf	                           jne 0x400040d	       332	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2
0x400043e	    0x83bd4cffffff	cmp dword [rbp - 0xb4], 0xffffffffffffffff	       334	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_3
0x4000445	            0x7526	                           jne 0x400046d	       334	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_3
0x4000447	    0x8b8d48ffffff	             mov ecx, dword [rbp - 0xb8]	       336	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_3	CALL_5
0x400044d	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	       336	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_3	CALL_5
0x4000453	    0x8bb550ffffff	             mov esi, dword [rbp - 0xb0]	       336	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_3	CALL_5
0x4000459	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       336	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_3	CALL_5
0x4000460	          0x4889c7	                            mov rdi, rax	       336	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_3	CALL_5
0x4000463	      0xe8fafcffff	                  call sym.srec_bad_byte	       336	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_3	CALL_5
0x4000468	      0xe9f40d0000	                           jmp 0x4001261	       337	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_3
0x400046d	    0x838550ffffff	               add dword [rbp - 0xb0], 1	       340	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000474	      0xe9790d0000	                           jmp 0x40011f2	       341	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000479	    0x488d9548ffff	                   lea rdx, [rbp - 0xb8]	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x4000480	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x4000487	          0x4889d6	                            mov rsi, rdx	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x400048a	          0x4889c7	                            mov rdi, rax	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x400048d	      0xe85efcffff	                  call sym.srec_get_byte	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x4000492	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x4000498	    0x83bd4cffffff	cmp dword [rbp - 0xb4], 0xffffffffffffffff	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x400049f	            0x7412	                            je 0x40004b3	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x40004a1	    0x83bd4cffffff	           cmp dword [rbp - 0xb4], 0x20 	       352	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x40004a8	            0x74cf	                            je 0x4000479	       352	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x40004aa	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 9	       352	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x40004b1	            0x74c6	                            je 0x4000479	       352	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x40004b3	    0x83bd4cffffff	            cmp dword [rbp - 0xb4], 0xa 	       355	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_4
0x40004ba	     0xf8487030000	                            je 0x4000847	       355	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_4
0x40004c0	    0x83bd4cffffff	            cmp dword [rbp - 0xb4], 0xd 	       355	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_4
0x40004c7	     0xf847a030000	                            je 0x4000847	       355	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_4
0x40004cd	    0x83bd4cffffff	cmp dword [rbp - 0xb4], 0xffffffffffffffff	       358	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5
0x40004d4	            0x7526	                           jne 0x40004fc	       358	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5
0x40004d6	    0x8b8d48ffffff	             mov ecx, dword [rbp - 0xb8]	       360	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5	CALL_7
0x40004dc	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	       360	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5	CALL_7
0x40004e2	    0x8bb550ffffff	             mov esi, dword [rbp - 0xb0]	       360	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5	CALL_7
0x40004e8	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       360	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5	CALL_7
0x40004ef	          0x4889c7	                            mov rdi, rax	       360	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5	CALL_7
0x40004f2	      0xe86bfcffff	                  call sym.srec_bad_byte	       360	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5	CALL_7
0x40004f7	      0xe9650d0000	                           jmp 0x4001261	       361	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5
0x40004fc	    0x48c745800a00	             mov qword [rbp - 0x80], 0xa	       364	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4000504	        0x488b4580	             mov rax, qword [rbp - 0x80]	       365	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_8
0x4000508	        0x4883c001	                              add rax, 1	       365	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_8
0x400050c	          0x4889c7	                            mov rdi, rax	       365	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_8
0x400050f	      0xe800000000	                          call 0x4000514	       365	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_8
0x4000514	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       365	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_8
0x400051b	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       366	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_6
0x4000523	     0xf84220d0000	                            je 0x400124b	       366	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_6
0x4000529	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       369	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4000530	        0x48894588	             mov qword [rbp - 0x78], rax	       369	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4000534	        0x488b4588	             mov rax, qword [rbp - 0x78]	       371	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4000538	        0x488d5001	                      lea rdx, [rax + 1]	       371	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x400053c	        0x48895588	             mov qword [rbp - 0x78], rdx	       371	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4000540	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	       371	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4000546	            0x8810	                      mov byte [rax], dl	       371	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4000548	      0xe982000000	                           jmp 0x40005cf	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x400054d	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x4000551	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x4000558	          0x4829c2	                            sub rdx, rax	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x400055b	          0x4889d0	                            mov rax, rdx	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x400055e	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x4000562	            0x7257	                            jb 0x40005bb	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x4000564	        0x48d16580	               shl qword [rbp - 0x80], 1	       379	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x4000568	        0x488b4580	             mov rax, qword [rbp - 0x80]	       380	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	CALL_11
0x400056c	        0x488d5001	                      lea rdx, [rax + 1]	       380	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	CALL_11
0x4000570	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       380	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	CALL_11
0x4000577	          0x4889d6	                            mov rsi, rdx	       380	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	CALL_11
0x400057a	          0x4889c7	                            mov rdi, rax	       380	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	CALL_11
0x400057d	      0xe800000000	                          call 0x4000582	       380	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	CALL_11
0x4000582	        0x488945a8	             mov qword [rbp - 0x58], rax	       380	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	CALL_11
0x4000586	      0x48837da800	               cmp qword [rbp - 0x58], 0	       381	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	IF_8
0x400058b	     0xf84bd0c0000	                            je 0x400124e	       381	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	IF_8
0x4000591	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       383	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x4000595	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       383	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x400059c	          0x4829c2	                            sub rdx, rax	       383	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x400059f	          0x4889d0	                            mov rax, rdx	       383	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40005a2	          0x4889c2	                            mov rdx, rax	       383	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40005a5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       383	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40005a9	          0x4801d0	                            add rax, rdx	       383	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40005ac	        0x48894588	             mov qword [rbp - 0x78], rax	       383	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40005b0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       384	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40005b4	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       384	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40005bb	        0x488b4588	             mov rax, qword [rbp - 0x78]	       387	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3
0x40005bf	        0x488d5001	                      lea rdx, [rax + 1]	       387	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3
0x40005c3	        0x48895588	             mov qword [rbp - 0x78], rdx	       387	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3
0x40005c7	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	       387	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3
0x40005cd	            0x8810	                      mov byte [rax], dl	       387	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3
0x40005cf	    0x488d9548ffff	                   lea rdx, [rbp - 0xb8]	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x40005d6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x40005dd	          0x4889d6	                            mov rsi, rdx	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x40005e0	          0x4889c7	                            mov rdi, rax	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x40005e3	      0xe808fbffff	                  call sym.srec_get_byte	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x40005e8	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x40005ee	    0x83bd4cffffff	cmp dword [rbp - 0xb4], 0xffffffffffffffff	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x40005f5	            0x7421	                            je 0x4000618	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x40005f7	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       373	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_10
0x40005fd	           0xfb6c0	                           movzx eax, al	       373	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_10
0x4000600	            0x4898	                                    cdqe	       373	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_10
0x4000602	     0xfb784000000	             movzx eax, word [rax + rax]	       373	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_10
0x400060a	           0xfb7c0	                           movzx eax, ax	       373	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_10
0x400060d	          0x83e040	                           and eax, 0x40	       373	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_10
0x4000610	            0x85c0	                           test eax, eax	       373	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_10
0x4000612	     0xf8435ffffff	                            je 0x400054d	       373	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_10
0x4000618	    0x83bd4cffffff	cmp dword [rbp - 0xb4], 0xffffffffffffffff	       390	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9
0x400061f	            0x7526	                           jne 0x4000647	       390	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9
0x4000621	    0x8b8d48ffffff	             mov ecx, dword [rbp - 0xb8]	       392	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9	CALL_12
0x4000627	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	       392	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9	CALL_12
0x400062d	    0x8bb550ffffff	             mov esi, dword [rbp - 0xb0]	       392	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9	CALL_12
0x4000633	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       392	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9	CALL_12
0x400063a	          0x4889c7	                            mov rdi, rax	       392	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9	CALL_12
0x400063d	      0xe820fbffff	                  call sym.srec_bad_byte	       392	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9	CALL_12
0x4000642	      0xe91a0c0000	                           jmp 0x4001261	       393	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9
0x4000647	        0x488b4588	             mov rax, qword [rbp - 0x78]	       396	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x400064b	        0x488d5001	                      lea rdx, [rax + 1]	       396	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x400064f	        0x48895588	             mov qword [rbp - 0x78], rdx	       396	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4000653	          0xc60000	                       mov byte [rax], 0	       396	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4000656	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x400065a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x4000661	          0x4829c2	                            sub rdx, rax	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x4000664	          0x4889d0	                            mov rax, rdx	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x4000667	          0x4889c2	                            mov rdx, rax	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x400066a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x4000671	          0x4889d6	                            mov rsi, rdx	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x4000674	          0x4889c7	                            mov rdi, rax	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x4000677	      0xe800000000	                          call 0x400067c	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x400067c	        0x488945b0	             mov qword [rbp - 0x50], rax	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x4000680	      0x48837db000	               cmp qword [rbp - 0x50], 0	       398	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_10
0x4000685	     0xf84c60b0000	                            je 0x4001251	       398	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_10
0x400068b	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       400	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_14
0x4000692	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       400	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_14
0x4000696	          0x4889d6	                            mov rsi, rdx	       400	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_14
0x4000699	          0x4889c7	                            mov rdi, rax	       400	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_14
0x400069c	      0xe800000000	                          call 0x40006a1	       400	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_14
0x40006a1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       401	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_15
0x40006a8	          0x4889c7	                            mov rdi, rax	       401	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_15
0x40006ab	      0xe800000000	                          call 0x40006b0	       401	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_15
0x40006b0	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       402	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x40006bb	    0x488d9548ffff	                   lea rdx, [rbp - 0xb8]	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x40006c2	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x40006c9	          0x4889d6	                            mov rsi, rdx	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x40006cc	          0x4889c7	                            mov rdi, rax	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x40006cf	      0xe81cfaffff	                  call sym.srec_get_byte	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x40006d4	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x40006da	    0x83bd4cffffff	cmp dword [rbp - 0xb4], 0xffffffffffffffff	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x40006e1	            0x7412	                            je 0x40006f5	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x40006e3	    0x83bd4cffffff	           cmp dword [rbp - 0xb4], 0x20 	       405	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4
0x40006ea	            0x74cf	                            je 0x40006bb	       405	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4
0x40006ec	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 9	       405	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4
0x40006f3	            0x74c6	                            je 0x40006bb	       405	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4
0x40006f5	    0x83bd4cffffff	cmp dword [rbp - 0xb4], 0xffffffffffffffff	       407	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_11
0x40006fc	            0x7526	                           jne 0x4000724	       407	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_11
0x40006fe	    0x8b8d48ffffff	             mov ecx, dword [rbp - 0xb8]	       409	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_11	CALL_17
0x4000704	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	       409	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_11	CALL_17
0x400070a	    0x8bb550ffffff	             mov esi, dword [rbp - 0xb0]	       409	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_11	CALL_17
0x4000710	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       409	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_11	CALL_17
0x4000717	          0x4889c7	                            mov rdi, rax	       409	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_11	CALL_17
0x400071a	      0xe843faffff	                  call sym.srec_bad_byte	       409	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_11	CALL_17
0x400071f	      0xe93d0b0000	                           jmp 0x4001261	       410	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_11
0x4000724	    0x83bd4cffffff	           cmp dword [rbp - 0xb4], 0x24 	       414	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12
0x400072b	            0x754e	                           jne 0x400077b	       414	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12
0x400072d	    0x488d9548ffff	                   lea rdx, [rbp - 0xb8]	       416	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	CALL_18
0x4000734	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       416	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	CALL_18
0x400073b	          0x4889d6	                            mov rsi, rdx	       416	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	CALL_18
0x400073e	          0x4889c7	                            mov rdi, rax	       416	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	CALL_18
0x4000741	      0xe8aaf9ffff	                  call sym.srec_get_byte	       416	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	CALL_18
0x4000746	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       416	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	CALL_18
0x400074c	    0x83bd4cffffff	cmp dword [rbp - 0xb4], 0xffffffffffffffff	       417	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13
0x4000753	            0x7526	                           jne 0x400077b	       417	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13
0x4000755	    0x8b8d48ffffff	             mov ecx, dword [rbp - 0xb8]	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x400075b	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x4000761	    0x8bb550ffffff	             mov esi, dword [rbp - 0xb0]	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x4000767	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x400076e	          0x4889c7	                            mov rdi, rax	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x4000771	      0xe8ecf9ffff	                  call sym.srec_bad_byte	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x4000776	      0xe9e60a0000	                           jmp 0x4001261	       420	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13
0x400077b	    0x48c745900000	               mov qword [rbp - 0x70], 0	       424	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4000783	            0xeb6c	                           jmp 0x40007f1	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4000785	      0x48c1659004	               shl qword [rbp - 0x70], 4	       427	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x400078a	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       428	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4000790	           0xfb6c0	                           movzx eax, al	       428	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4000793	            0x4898	                                    cdqe	       428	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4000795	     0xfb680000000	                   movzx eax, byte [rax]	       428	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x400079c	           0xfb6c0	                           movzx eax, al	       428	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x400079f	        0x48014590	            add qword [rbp - 0x70], rax 	       428	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x40007a3	    0x488d9548ffff	                   lea rdx, [rbp - 0xb8]	       429	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	CALL_20
0x40007aa	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       429	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	CALL_20
0x40007b1	          0x4889d6	                            mov rsi, rdx	       429	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	CALL_20
0x40007b4	          0x4889c7	                            mov rdi, rax	       429	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	CALL_20
0x40007b7	      0xe834f9ffff	                  call sym.srec_get_byte	       429	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	CALL_20
0x40007bc	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       429	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	CALL_20
0x40007c2	    0x83bd4cffffff	cmp dword [rbp - 0xb4], 0xffffffffffffffff	       430	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14
0x40007c9	            0x7526	                           jne 0x40007f1	       430	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14
0x40007cb	    0x8b8d48ffffff	             mov ecx, dword [rbp - 0xb8]	       432	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14	CALL_21
0x40007d1	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	       432	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14	CALL_21
0x40007d7	    0x8bb550ffffff	             mov esi, dword [rbp - 0xb0]	       432	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14	CALL_21
0x40007dd	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       432	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14	CALL_21
0x40007e4	          0x4889c7	                            mov rdi, rax	       432	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14	CALL_21
0x40007e7	      0xe876f9ffff	                  call sym.srec_bad_byte	       432	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14	CALL_21
0x40007ec	      0xe9700a0000	                           jmp 0x4001261	       433	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14
0x40007f1	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x40007f7	           0xfb6c0	                           movzx eax, al	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x40007fa	            0x4898	                                    cdqe	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x40007fc	     0xfb680000000	                   movzx eax, byte [rax]	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4000803	            0x3c63	                            cmp al, 0x63	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4000805	     0xf857affffff	                           jne 0x4000785	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x400080b	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       437	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_15	CALL_22
0x400080f	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       437	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_15	CALL_22
0x4000813	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       437	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_15	CALL_22
0x400081a	          0x4889ce	                            mov rsi, rcx	       437	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_15	CALL_22
0x400081d	          0x4889c7	                            mov rdi, rax	       437	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_15	CALL_22
0x4000820	      0xe80afaffff	                call sym.srec_new_symbol	       437	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_15	CALL_22
0x4000825	            0x85c0	                           test eax, eax	       437	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_15	CALL_22
0x4000827	     0xf84270a0000	                            je 0x4001254	       437	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_15	CALL_22
0x400082d	    0x83bd4cffffff	           cmp dword [rbp - 0xb4], 0x20 	       441	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_6
0x4000834	     0xf843ffcffff	                            je 0x4000479	       441	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_6
0x400083a	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 9	       440	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_6
0x4000841	     0xf8432fcffff	                            je 0x4000479	       440	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_6
0x4000847	    0x83bd4cffffff	            cmp dword [rbp - 0xb4], 0xa 	       443	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_16
0x400084e	            0x750c	                           jne 0x400085c	       443	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_16
0x4000850	    0x838550ffffff	               add dword [rbp - 0xb0], 1	       444	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_16
0x4000857	      0xe996090000	                           jmp 0x40011f2	       444	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_16
0x400085c	    0x83bd4cffffff	            cmp dword [rbp - 0xb4], 0xd 	       445	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17
0x4000863	     0xf8489090000	                            je 0x40011f2	       445	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17
0x4000869	    0x8b8d48ffffff	             mov ecx, dword [rbp - 0xb8]	       447	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17	CALL_23
0x400086f	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	       447	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17	CALL_23
0x4000875	    0x8bb550ffffff	             mov esi, dword [rbp - 0xb0]	       447	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17	CALL_23
0x400087b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       447	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17	CALL_23
0x4000882	          0x4889c7	                            mov rdi, rax	       447	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17	CALL_23
0x4000885	      0xe8d8f8ffff	                  call sym.srec_bad_byte	       447	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17	CALL_23
0x400088a	      0xe9d2090000	                           jmp 0x4001261	       448	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17
0x400088f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       464	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	CALL_24
0x4000896	          0x4889c7	                            mov rdi, rax	       464	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	CALL_24
0x4000899	      0xe800000000	                          call 0x400089e	       464	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	CALL_24
0x400089e	        0x4883e801	                              sub rax, 1	       464	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	CALL_24
0x40008a2	        0x488945b8	             mov qword [rbp - 0x48], rax	       464	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	CALL_24
0x40008a6	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40008ad	        0x488d45d0	                   lea rax, [rbp - 0x30]	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40008b1	      0xbe03000000	                              mov esi, 3	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40008b6	          0x4889c7	                            mov rdi, rax	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40008b9	      0xe800000000	                          call 0x40008be	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40008be	        0x4883f803	                              cmp rax, 3	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40008c2	     0xf858f090000	                           jne 0x4001257	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40008c8	         0xfb645d1	            movzx eax, byte [rbp - 0x2f]	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40008cc	           0xfb6c0	                           movzx eax, al	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40008cf	            0x4898	                                    cdqe	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40008d1	     0xfb680000000	                   movzx eax, byte [rax]	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40008d8	            0x3c63	                            cmp al, 0x63	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40008da	            0x7414	                            je 0x40008f0	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40008dc	         0xfb645d2	            movzx eax, byte [rbp - 0x2e]	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40008e0	           0xfb6c0	                           movzx eax, al	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40008e3	            0x4898	                                    cdqe	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40008e5	     0xfb680000000	                   movzx eax, byte [rax]	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40008ec	            0x3c63	                            cmp al, 0x63	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40008ee	            0x7556	                           jne 0x4000946	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40008f0	         0xfb645d1	            movzx eax, byte [rbp - 0x2f]	       471	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	IF_20
0x40008f4	           0xfb6c0	                           movzx eax, al	       471	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	IF_20
0x40008f7	            0x4898	                                    cdqe	       471	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	IF_20
0x40008f9	     0xfb680000000	                   movzx eax, byte [rax]	       471	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	IF_20
0x4000900	            0x3c63	                            cmp al, 0x63	       471	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	IF_20
0x4000902	            0x750f	                           jne 0x4000913	       471	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	IF_20
0x4000904	         0xfb645d1	            movzx eax, byte [rbp - 0x2f]	       472	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	IF_20
0x4000908	           0xfb6c0	                           movzx eax, al	       472	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	IF_20
0x400090b	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       472	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	IF_20
0x4000911	            0xeb0d	                           jmp 0x4000920	       472	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	IF_20
0x4000913	         0xfb645d2	            movzx eax, byte [rbp - 0x2e]	       474	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	ELSE_2
0x4000917	           0xfb6c0	                           movzx eax, al	       474	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	ELSE_2
0x400091a	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       474	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	ELSE_2
0x4000920	    0x8b8d48ffffff	             mov ecx, dword [rbp - 0xb8]	       475	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	CALL_26
0x4000926	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	       475	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	CALL_26
0x400092c	    0x8bb550ffffff	             mov esi, dword [rbp - 0xb0]	       475	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	CALL_26
0x4000932	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       475	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	CALL_26
0x4000939	          0x4889c7	                            mov rdi, rax	       475	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	CALL_26
0x400093c	      0xe821f8ffff	                  call sym.srec_bad_byte	       475	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	CALL_26
0x4000941	      0xe91b090000	                           jmp 0x4001261	       476	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x4000946	         0xfb645d1	            movzx eax, byte [rbp - 0x2f]	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400094a	           0xfb6c0	                           movzx eax, al	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400094d	            0x4898	                                    cdqe	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400094f	     0xfb680000000	                   movzx eax, byte [rax]	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4000956	           0xfb6c0	                           movzx eax, al	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4000959	          0xc1e004	                              shl eax, 4	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400095c	            0x89c2	                            mov edx, eax	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400095e	         0xfb645d2	            movzx eax, byte [rbp - 0x2e]	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4000962	           0xfb6c0	                           movzx eax, al	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4000965	            0x4898	                                    cdqe	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4000967	     0xfb680000000	                   movzx eax, byte [rax]	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400096e	           0xfb6c0	                           movzx eax, al	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4000971	             0x1d0	                            add eax, edx	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4000973	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4000979	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400097f	    0x888547ffffff	               mov byte [rbp - 0xb9], al	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4000985	    0xc78558ffffff	               mov dword [rbp - 0xa8], 3	       480	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400098f	         0xfb645d0	            movzx eax, byte [rbp - 0x30]	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x4000993	            0x3c32	                            cmp al, 0x32	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x4000995	            0x7408	                            je 0x400099f	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x4000997	         0xfb645d0	            movzx eax, byte [rbp - 0x30]	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x400099b	            0x3c38	                            cmp al, 0x38	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x400099d	            0x750c	                           jne 0x40009ab	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x400099f	    0xc78558ffffff	               mov dword [rbp - 0xa8], 4	       482	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x40009a9	            0xeb1a	                           jmp 0x40009c5	       482	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x40009ab	         0xfb645d0	            movzx eax, byte [rbp - 0x30]	       483	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	ELSE_3	IF_22
0x40009af	            0x3c33	                            cmp al, 0x33	       483	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	ELSE_3	IF_22
0x40009b1	            0x7408	                            je 0x40009bb	       483	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	ELSE_3	IF_22
0x40009b3	         0xfb645d0	            movzx eax, byte [rbp - 0x30]	       483	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	ELSE_3	IF_22
0x40009b7	            0x3c37	                            cmp al, 0x37	       483	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	ELSE_3	IF_22
0x40009b9	            0x750a	                           jne 0x40009c5	       483	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	ELSE_3	IF_22
0x40009bb	    0xc78558ffffff	               mov dword [rbp - 0xa8], 5	       484	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	ELSE_3	IF_22
0x40009c5	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       485	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23
0x40009cb	    0x3b8558ffffff	             cmp eax, dword [rbp - 0xa8]	       485	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23
0x40009d1	            0x7341	                           jae 0x4000a14	       485	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23
0x40009d3	      0xbe00000000	                              mov esi, 0	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40009d8	      0xbf00000000	                              mov edi, 0	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40009dd	      0xe800000000	                          call 0x40009e2	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40009e2	          0x4889c7	                            mov rdi, rax	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40009e5	    0x8b8d54ffffff	             mov ecx, dword [rbp - 0xac]	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40009eb	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40009f1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40009f8	          0x4889c6	                            mov rsi, rax	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40009fb	      0xb800000000	                              mov eax, 0	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x4000a00	      0xe800000000	                          call 0x4000a05	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x4000a05	      0xbf11000000	                           mov edi, 0x11	       490	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_29
0x4000a0a	      0xe800000000	                          call 0x4000a0f	       490	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_29
0x4000a0f	      0xe94d080000	                           jmp 0x4001261	       491	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23
0x4000a14	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       494	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x4000a1a	             0x1c0	                            add eax, eax	       494	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x4000a1c	            0x89c0	                            mov eax, eax	       494	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x4000a1e	    0x483b8568ffff	             cmp rax, qword [rbp - 0x98]	       494	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x4000a25	            0x7650	                           jbe 0x4000a77	       494	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x4000a27	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	       496	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_25
0x4000a2f	            0x740f	                            je 0x4000a40	       496	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_25
0x4000a31	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       497	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_30
0x4000a38	          0x4889c7	                            mov rdi, rax	       497	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_30
0x4000a3b	      0xe800000000	                          call 0x4000a40	       497	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_30
0x4000a40	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4000a46	          0x4801c0	                            add rax, rax	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4000a49	          0x4889c7	                            mov rdi, rax	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4000a4c	      0xe800000000	                          call 0x4000a51	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4000a51	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4000a58	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	       499	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_26
0x4000a60	     0xf84f4070000	                            je 0x400125a	       499	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_26
0x4000a66	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       501	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x4000a6c	             0x1c0	                            add eax, eax	       501	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x4000a6e	            0x89c0	                            mov eax, eax	       501	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x4000a70	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       501	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x4000a77	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4000a7d	        0x488d0c00	                    lea rcx, [rax + rax]	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4000a81	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4000a88	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4000a8f	          0x4889ce	                            mov rsi, rcx	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4000a92	          0x4889c7	                            mov rdi, rax	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4000a95	      0xe800000000	                          call 0x4000a9a	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4000a9a	          0x4889c2	                            mov rdx, rax	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4000a9d	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4000aa3	             0x1c0	                            add eax, eax	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4000aa5	            0x89c0	                            mov eax, eax	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4000aa7	          0x4839c2	                            cmp rdx, rax	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4000aaa	     0xf85ad070000	                           jne 0x400125d	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4000ab0	    0x83ad54ffffff	               sub dword [rbp - 0xac], 1	       508	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4000ab7	    0x48c745980000	               mov qword [rbp - 0x68], 0	       510	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4000abf	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       511	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4000ac6	        0x488945a0	             mov qword [rbp - 0x60], rax	       511	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4000aca	         0xfb645d0	            movzx eax, byte [rbp - 0x30]	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ace	           0xfb6c0	                           movzx eax, al	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ad1	          0x83e830	                           sub eax, 0x30	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ad4	          0x83f809	                              cmp eax, 9	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ad7	     0xf8714070000	                            ja 0x40011f1	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000add	            0x89c0	                            mov eax, eax	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000adf	    0x488b04c50000	                  mov rax, qword [rax*8]	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ae7	            0xffe0	                                 jmp rax	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ae9	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       518	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000af4	      0xe9f8060000	                           jmp 0x40011f1	       519	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000af9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000afd	           0xfb600	                   movzx eax, byte [rax]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b00	           0xfb6c0	                           movzx eax, al	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b03	            0x4898	                                    cdqe	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b05	     0xfb680000000	                   movzx eax, byte [rax]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b0c	          0xc1e004	                              shl eax, 4	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b0f	            0x89c2	                            mov edx, eax	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b11	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b15	        0x4883c001	                              add rax, 1	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b19	           0xfb600	                   movzx eax, byte [rax]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b1c	           0xfb6c0	                           movzx eax, al	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b1f	            0x4898	                                    cdqe	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b21	     0xfb680000000	                   movzx eax, byte [rax]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b28	             0x1d0	                            add eax, edx	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b2a	      0x8547ffffff	               add byte [rbp - 0xb9], al	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b30	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b34	           0xfb600	                   movzx eax, byte [rax]	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b37	           0xfb6c0	                           movzx eax, al	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b3a	            0x4898	                                    cdqe	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b3c	     0xfb680000000	                   movzx eax, byte [rax]	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b43	           0xfb6c0	                           movzx eax, al	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b46	          0xc1e004	                              shl eax, 4	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b49	            0x89c2	                            mov edx, eax	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b4b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b4f	        0x4883c001	                              add rax, 1	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b53	           0xfb600	                   movzx eax, byte [rax]	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b56	           0xfb6c0	                           movzx eax, al	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b59	            0x4898	                                    cdqe	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b5b	     0xfb680000000	                   movzx eax, byte [rax]	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b62	           0xfb6c0	                           movzx eax, al	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b65	             0x1d0	                            add eax, edx	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b67	            0x89c0	                            mov eax, eax	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b69	        0x48894598	             mov qword [rbp - 0x68], rax	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b6d	      0x488345a002	               add qword [rbp - 0x60], 2	       524	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b72	    0x83ad54ffffff	               sub dword [rbp - 0xac], 1	       525	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b79	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b7d	           0xfb600	                   movzx eax, byte [rax]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b80	           0xfb6c0	                           movzx eax, al	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b83	            0x4898	                                    cdqe	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b85	     0xfb680000000	                   movzx eax, byte [rax]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b8c	          0xc1e004	                              shl eax, 4	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b8f	            0x89c2	                            mov edx, eax	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b91	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b95	        0x4883c001	                              add rax, 1	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b99	           0xfb600	                   movzx eax, byte [rax]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b9c	           0xfb6c0	                           movzx eax, al	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000b9f	            0x4898	                                    cdqe	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ba1	     0xfb680000000	                   movzx eax, byte [rax]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ba8	             0x1d0	                            add eax, edx	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000baa	      0x8547ffffff	               add byte [rbp - 0xb9], al	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bb0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bb4	        0x48c1e008	                              shl rax, 8	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bb8	          0x4889c2	                            mov rdx, rax	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bbb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bbf	           0xfb600	                   movzx eax, byte [rax]	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bc2	           0xfb6c0	                           movzx eax, al	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bc5	            0x4898	                                    cdqe	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bc7	     0xfb680000000	                   movzx eax, byte [rax]	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bce	           0xfb6c0	                           movzx eax, al	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bd1	          0xc1e004	                              shl eax, 4	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bd4	            0x89c1	                            mov ecx, eax	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bd6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bda	        0x4883c001	                              add rax, 1	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bde	           0xfb600	                   movzx eax, byte [rax]	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000be1	           0xfb6c0	                           movzx eax, al	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000be4	            0x4898	                                    cdqe	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000be6	     0xfb680000000	                   movzx eax, byte [rax]	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bed	           0xfb6c0	                           movzx eax, al	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bf0	             0x1c8	                            add eax, ecx	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bf2	            0x89c0	                            mov eax, eax	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bf4	          0x4809d0	                             or rax, rdx	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bf7	        0x48894598	             mov qword [rbp - 0x68], rax	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000bfb	      0x488345a002	               add qword [rbp - 0x60], 2	       530	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c00	    0x83ad54ffffff	               sub dword [rbp - 0xac], 1	       531	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c07	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c0b	           0xfb600	                   movzx eax, byte [rax]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c0e	           0xfb6c0	                           movzx eax, al	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c11	            0x4898	                                    cdqe	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c13	     0xfb680000000	                   movzx eax, byte [rax]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c1a	          0xc1e004	                              shl eax, 4	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c1d	            0x89c2	                            mov edx, eax	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c1f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c23	        0x4883c001	                              add rax, 1	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c27	           0xfb600	                   movzx eax, byte [rax]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c2a	           0xfb6c0	                           movzx eax, al	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c2d	            0x4898	                                    cdqe	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c2f	     0xfb680000000	                   movzx eax, byte [rax]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c36	             0x1d0	                            add eax, edx	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c38	      0x8547ffffff	               add byte [rbp - 0xb9], al	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c3e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c42	        0x48c1e008	                              shl rax, 8	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c46	          0x4889c2	                            mov rdx, rax	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c49	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c4d	           0xfb600	                   movzx eax, byte [rax]	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c50	           0xfb6c0	                           movzx eax, al	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c53	            0x4898	                                    cdqe	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c55	     0xfb680000000	                   movzx eax, byte [rax]	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c5c	           0xfb6c0	                           movzx eax, al	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c5f	          0xc1e004	                              shl eax, 4	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c62	            0x89c1	                            mov ecx, eax	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c64	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c68	        0x4883c001	                              add rax, 1	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c6c	           0xfb600	                   movzx eax, byte [rax]	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c6f	           0xfb6c0	                           movzx eax, al	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c72	            0x4898	                                    cdqe	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c74	     0xfb680000000	                   movzx eax, byte [rax]	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c7b	           0xfb6c0	                           movzx eax, al	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c7e	             0x1c8	                            add eax, ecx	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c80	            0x89c0	                            mov eax, eax	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c82	          0x4809d0	                             or rax, rdx	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c85	        0x48894598	             mov qword [rbp - 0x68], rax	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c89	      0x488345a002	               add qword [rbp - 0x60], 2	       536	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c8e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c92	           0xfb600	                   movzx eax, byte [rax]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c95	           0xfb6c0	                           movzx eax, al	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c98	            0x4898	                                    cdqe	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000c9a	     0xfb680000000	                   movzx eax, byte [rax]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ca1	          0xc1e004	                              shl eax, 4	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ca4	            0x89c2	                            mov edx, eax	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ca6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000caa	        0x4883c001	                              add rax, 1	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cae	           0xfb600	                   movzx eax, byte [rax]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cb1	           0xfb6c0	                           movzx eax, al	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cb4	            0x4898	                                    cdqe	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cb6	     0xfb680000000	                   movzx eax, byte [rax]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cbd	             0x1d0	                            add eax, edx	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cbf	      0x8547ffffff	               add byte [rbp - 0xb9], al	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cc5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cc9	        0x48c1e008	                              shl rax, 8	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ccd	          0x4889c2	                            mov rdx, rax	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cd0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cd4	           0xfb600	                   movzx eax, byte [rax]	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cd7	           0xfb6c0	                           movzx eax, al	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cda	            0x4898	                                    cdqe	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cdc	     0xfb680000000	                   movzx eax, byte [rax]	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ce3	           0xfb6c0	                           movzx eax, al	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ce6	          0xc1e004	                              shl eax, 4	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ce9	            0x89c1	                            mov ecx, eax	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ceb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cef	        0x4883c001	                              add rax, 1	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cf3	           0xfb600	                   movzx eax, byte [rax]	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cf6	           0xfb6c0	                           movzx eax, al	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cf9	            0x4898	                                    cdqe	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000cfb	     0xfb680000000	                   movzx eax, byte [rax]	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000d02	           0xfb6c0	                           movzx eax, al	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000d05	             0x1c8	                            add eax, ecx	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000d07	            0x89c0	                            mov eax, eax	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000d09	          0x4809d0	                             or rax, rdx	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000d0c	        0x48894598	             mov qword [rbp - 0x68], rax	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000d10	      0x488345a002	               add qword [rbp - 0x60], 2	       539	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000d15	    0x83ad54ffffff	               sub dword [rbp - 0xac], 2	       540	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000d1c	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	       542	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4000d24	            0x7443	                            je 0x4000d69	       542	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4000d26	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4000d2d	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4000d31	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4000d38	        0x488b4038	            mov rax, qword [rax + 0x38] 	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4000d3c	          0x4801d0	                            add rax, rdx	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4000d3f	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4000d43	            0x7524	                           jne 0x4000d69	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4000d45	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4000d4c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4000d50	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4000d56	          0x4801c2	                            add rdx, rax	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4000d59	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4000d60	        0x48895038	             mov qword [rax + 0x38], rdx	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4000d64	      0xe9e5000000	                           jmp 0x4000e4e	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4000d69	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       556	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4000d70	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       556	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4000d76	          0x8d5001	                      lea edx, [rax + 1]	       556	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4000d79	        0x488d45e0	                   lea rax, [rbp - 0x20]	       556	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4000d7d	      0xbe00000000	                              mov esi, 0	       556	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4000d82	          0x4889c7	                            mov rdi, rax	       556	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4000d85	      0xb800000000	                              mov eax, 0	       556	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4000d8a	      0xe800000000	                          call 0x4000d8f	       556	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4000d8f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_35
0x4000d93	          0x4889c7	                            mov rdi, rax	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_35
0x4000d96	      0xe800000000	                          call 0x4000d9b	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_35
0x4000d9b	        0x4883c001	                              add rax, 1	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_35
0x4000d9f	        0x488945c0	             mov qword [rbp - 0x40], rax	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_35
0x4000da3	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       558	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_36
0x4000da7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       558	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_36
0x4000dae	          0x4889d6	                            mov rsi, rdx	       558	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_36
0x4000db1	          0x4889c7	                            mov rdi, rax	       558	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_36
0x4000db4	      0xe800000000	                          call 0x4000db9	       558	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_36
0x4000db9	        0x488945c8	             mov qword [rbp - 0x38], rax	       558	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_36
0x4000dbd	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       559	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x4000dc1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       559	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x4000dc5	          0x4889d6	                            mov rsi, rdx	       559	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x4000dc8	          0x4889c7	                            mov rdi, rax	       559	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x4000dcb	      0xe800000000	                          call 0x4000dd0	       559	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x4000dd0	    0xc7855cffffff	          mov dword [rbp - 0xa4], 0x103 	       560	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4000dda	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_38
0x4000de0	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_38
0x4000de4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_38
0x4000deb	          0x4889ce	                            mov rsi, rcx	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_38
0x4000dee	          0x4889c7	                            mov rdi, rax	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_38
0x4000df1	      0xe800000000	                          call 0x4000df6	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_38
0x4000df6	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_38
0x4000dfd	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	       562	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	IF_29
0x4000e05	            0x7506	                           jne 0x4000e0d	       562	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	IF_29
0x4000e07	              0x90	                                     nop	       563	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	IF_29
0x4000e08	      0xe94a040000	                           jmp 0x4001257	       467	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18
0x4000e0d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       564	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4000e14	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       564	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4000e18	        0x48895028	             mov qword [rax + 0x28], rdx	       564	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4000e1c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       565	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4000e23	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       565	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4000e27	        0x48895030	             mov qword [rax + 0x30], rdx	       565	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4000e2b	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	       566	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4000e31	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       566	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4000e38	        0x48895038	             mov qword [rax + 0x38], rdx	       566	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4000e3c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       567	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4000e43	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       567	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4000e47	    0x488990900000	             mov qword [rax + 0x90], rdx	       567	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4000e4e	            0xeb43	                           jmp 0x4000e93	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e50	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e54	           0xfb600	                   movzx eax, byte [rax]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e57	           0xfb6c0	                           movzx eax, al	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e5a	            0x4898	                                    cdqe	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e5c	     0xfb680000000	                   movzx eax, byte [rax]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e63	          0xc1e004	                              shl eax, 4	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e66	            0x89c2	                            mov edx, eax	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e68	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e6c	        0x4883c001	                              add rax, 1	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e70	           0xfb600	                   movzx eax, byte [rax]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e73	           0xfb6c0	                           movzx eax, al	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e76	            0x4898	                                    cdqe	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e78	     0xfb680000000	                   movzx eax, byte [rax]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e7f	             0x1d0	                            add eax, edx	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e81	      0x8547ffffff	               add byte [rbp - 0xb9], al	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e87	      0x488345a002	               add qword [rbp - 0x60], 2	       573	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e8c	    0x83ad54ffffff	               sub dword [rbp - 0xac], 1	       574	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e93	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e9a	            0x75b4	                           jne 0x4000e50	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4000e9c	    0xf69547ffffff	                   not byte [rbp - 0xb9]	       576	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ea2	     0xfb69547ffff	            movzx edx, byte [rbp - 0xb9]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000ea9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000ead	           0xfb600	                   movzx eax, byte [rax]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000eb0	           0xfb6c0	                           movzx eax, al	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000eb3	            0x4898	                                    cdqe	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000eb5	     0xfb680000000	                   movzx eax, byte [rax]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000ebc	           0xfb6c0	                           movzx eax, al	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000ebf	          0xc1e004	                              shl eax, 4	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000ec2	            0x89c1	                            mov ecx, eax	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000ec4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000ec8	        0x4883c001	                              add rax, 1	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000ecc	           0xfb600	                   movzx eax, byte [rax]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000ecf	           0xfb6c0	                           movzx eax, al	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000ed2	            0x4898	                                    cdqe	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000ed4	     0xfb680000000	                   movzx eax, byte [rax]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000edb	           0xfb6c0	                           movzx eax, al	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000ede	             0x1c8	                            add eax, ecx	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000ee0	            0x39c2	                            cmp edx, eax	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000ee2	     0xf8408030000	                            je 0x40011f0	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000ee8	      0xbe00000000	                              mov esi, 0	       581	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_40
0x4000eed	      0xbf00000000	                              mov edi, 0	       581	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_40
0x4000ef2	      0xe800000000	                          call 0x4000ef7	       581	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_40
0x4000ef7	          0x4889c1	                            mov rcx, rax	       581	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_40
0x4000efa	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	       579	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_39
0x4000f00	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       579	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_39
0x4000f07	          0x4889c6	                            mov rsi, rax	       579	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_39
0x4000f0a	          0x4889cf	                            mov rdi, rcx	       579	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_39
0x4000f0d	      0xb800000000	                              mov eax, 0	       579	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_39
0x4000f12	      0xe800000000	                          call 0x4000f17	       579	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_39
0x4000f17	      0xbf11000000	                           mov edi, 0x11	       583	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_41
0x4000f1c	      0xe800000000	                          call 0x4000f21	       583	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_41
0x4000f21	      0xe93b030000	                           jmp 0x4001261	       584	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4000f26	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f2a	           0xfb600	                   movzx eax, byte [rax]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f2d	           0xfb6c0	                           movzx eax, al	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f30	            0x4898	                                    cdqe	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f32	     0xfb680000000	                   movzx eax, byte [rax]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f39	          0xc1e004	                              shl eax, 4	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f3c	            0x89c2	                            mov edx, eax	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f3e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f42	        0x4883c001	                              add rax, 1	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f46	           0xfb600	                   movzx eax, byte [rax]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f49	           0xfb6c0	                           movzx eax, al	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f4c	            0x4898	                                    cdqe	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f4e	     0xfb680000000	                   movzx eax, byte [rax]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f55	             0x1d0	                            add eax, edx	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f57	      0x8547ffffff	               add byte [rbp - 0xb9], al	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f5d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f61	           0xfb600	                   movzx eax, byte [rax]	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f64	           0xfb6c0	                           movzx eax, al	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f67	            0x4898	                                    cdqe	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f69	     0xfb680000000	                   movzx eax, byte [rax]	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f70	           0xfb6c0	                           movzx eax, al	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f73	          0xc1e004	                              shl eax, 4	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f76	            0x89c2	                            mov edx, eax	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f78	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f7c	        0x4883c001	                              add rax, 1	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f80	           0xfb600	                   movzx eax, byte [rax]	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f83	           0xfb6c0	                           movzx eax, al	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f86	            0x4898	                                    cdqe	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f88	     0xfb680000000	                   movzx eax, byte [rax]	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f8f	           0xfb6c0	                           movzx eax, al	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f92	             0x1d0	                            add eax, edx	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f94	            0x89c0	                            mov eax, eax	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f96	        0x48894598	             mov qword [rbp - 0x68], rax	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f9a	      0x488345a002	               add qword [rbp - 0x60], 2	       592	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000f9f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fa3	           0xfb600	                   movzx eax, byte [rax]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fa6	           0xfb6c0	                           movzx eax, al	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fa9	            0x4898	                                    cdqe	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fab	     0xfb680000000	                   movzx eax, byte [rax]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fb2	          0xc1e004	                              shl eax, 4	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fb5	            0x89c2	                            mov edx, eax	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fb7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fbb	        0x4883c001	                              add rax, 1	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fbf	           0xfb600	                   movzx eax, byte [rax]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fc2	           0xfb6c0	                           movzx eax, al	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fc5	            0x4898	                                    cdqe	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fc7	     0xfb680000000	                   movzx eax, byte [rax]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fce	             0x1d0	                            add eax, edx	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fd0	      0x8547ffffff	               add byte [rbp - 0xb9], al	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fd6	        0x488b4598	             mov rax, qword [rbp - 0x68]	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fda	        0x48c1e008	                              shl rax, 8	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fde	          0x4889c2	                            mov rdx, rax	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fe1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fe5	           0xfb600	                   movzx eax, byte [rax]	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fe8	           0xfb6c0	                           movzx eax, al	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000feb	            0x4898	                                    cdqe	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000fed	     0xfb680000000	                   movzx eax, byte [rax]	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ff4	           0xfb6c0	                           movzx eax, al	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ff7	          0xc1e004	                              shl eax, 4	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ffa	            0x89c1	                            mov ecx, eax	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4000ffc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001000	        0x4883c001	                              add rax, 1	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001004	           0xfb600	                   movzx eax, byte [rax]	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001007	           0xfb6c0	                           movzx eax, al	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400100a	            0x4898	                                    cdqe	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400100c	     0xfb680000000	                   movzx eax, byte [rax]	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001013	           0xfb6c0	                           movzx eax, al	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001016	             0x1c8	                            add eax, ecx	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001018	            0x89c0	                            mov eax, eax	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400101a	          0x4809d0	                             or rax, rdx	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400101d	        0x48894598	             mov qword [rbp - 0x68], rax	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001021	      0x488345a002	               add qword [rbp - 0x60], 2	       597	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001026	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400102a	           0xfb600	                   movzx eax, byte [rax]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400102d	           0xfb6c0	                           movzx eax, al	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001030	            0x4898	                                    cdqe	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001032	     0xfb680000000	                   movzx eax, byte [rax]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001039	          0xc1e004	                              shl eax, 4	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400103c	            0x89c2	                            mov edx, eax	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400103e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001042	        0x4883c001	                              add rax, 1	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001046	           0xfb600	                   movzx eax, byte [rax]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001049	           0xfb6c0	                           movzx eax, al	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400104c	            0x4898	                                    cdqe	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400104e	     0xfb680000000	                   movzx eax, byte [rax]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001055	             0x1d0	                            add eax, edx	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001057	      0x8547ffffff	               add byte [rbp - 0xb9], al	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400105d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001061	        0x48c1e008	                              shl rax, 8	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001065	          0x4889c2	                            mov rdx, rax	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001068	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400106c	           0xfb600	                   movzx eax, byte [rax]	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400106f	           0xfb6c0	                           movzx eax, al	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001072	            0x4898	                                    cdqe	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001074	     0xfb680000000	                   movzx eax, byte [rax]	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400107b	           0xfb6c0	                           movzx eax, al	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400107e	          0xc1e004	                              shl eax, 4	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001081	            0x89c1	                            mov ecx, eax	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001083	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001087	        0x4883c001	                              add rax, 1	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400108b	           0xfb600	                   movzx eax, byte [rax]	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400108e	           0xfb6c0	                           movzx eax, al	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001091	            0x4898	                                    cdqe	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001093	     0xfb680000000	                   movzx eax, byte [rax]	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400109a	           0xfb6c0	                           movzx eax, al	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400109d	             0x1c8	                            add eax, ecx	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400109f	            0x89c0	                            mov eax, eax	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010a1	          0x4809d0	                             or rax, rdx	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010a4	        0x48894598	             mov qword [rbp - 0x68], rax	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010a8	      0x488345a002	               add qword [rbp - 0x60], 2	       602	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010ad	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010b1	           0xfb600	                   movzx eax, byte [rax]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010b4	           0xfb6c0	                           movzx eax, al	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010b7	            0x4898	                                    cdqe	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010b9	     0xfb680000000	                   movzx eax, byte [rax]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010c0	          0xc1e004	                              shl eax, 4	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010c3	            0x89c2	                            mov edx, eax	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010c5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010c9	        0x4883c001	                              add rax, 1	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010cd	           0xfb600	                   movzx eax, byte [rax]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010d0	           0xfb6c0	                           movzx eax, al	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010d3	            0x4898	                                    cdqe	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010d5	     0xfb680000000	                   movzx eax, byte [rax]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010dc	             0x1d0	                            add eax, edx	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010de	      0x8547ffffff	               add byte [rbp - 0xb9], al	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010e4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010e8	        0x48c1e008	                              shl rax, 8	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010ec	          0x4889c2	                            mov rdx, rax	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010ef	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010f3	           0xfb600	                   movzx eax, byte [rax]	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010f6	           0xfb6c0	                           movzx eax, al	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010f9	            0x4898	                                    cdqe	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40010fb	     0xfb680000000	                   movzx eax, byte [rax]	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001102	           0xfb6c0	                           movzx eax, al	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001105	          0xc1e004	                              shl eax, 4	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001108	            0x89c1	                            mov ecx, eax	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400110a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400110e	        0x4883c001	                              add rax, 1	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001112	           0xfb600	                   movzx eax, byte [rax]	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001115	           0xfb6c0	                           movzx eax, al	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001118	            0x4898	                                    cdqe	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400111a	     0xfb680000000	                   movzx eax, byte [rax]	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001121	           0xfb6c0	                           movzx eax, al	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001124	             0x1c8	                            add eax, ecx	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001126	            0x89c0	                            mov eax, eax	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001128	          0x4809d0	                             or rax, rdx	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400112b	        0x48894598	             mov qword [rbp - 0x68], rax	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400112f	      0x488345a002	               add qword [rbp - 0x60], 2	       605	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001134	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400113b	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400113f	    0x488990a80000	             mov qword [rax + 0xa8], rdx	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001146	    0xf69547ffffff	                   not byte [rbp - 0xb9]	       610	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400114c	     0xfb69547ffff	            movzx edx, byte [rbp - 0xb9]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001153	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001157	           0xfb600	                   movzx eax, byte [rax]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400115a	           0xfb6c0	                           movzx eax, al	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400115d	            0x4898	                                    cdqe	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400115f	     0xfb680000000	                   movzx eax, byte [rax]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001166	           0xfb6c0	                           movzx eax, al	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001169	          0xc1e004	                              shl eax, 4	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400116c	            0x89c1	                            mov ecx, eax	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400116e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001172	        0x4883c001	                              add rax, 1	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001176	           0xfb600	                   movzx eax, byte [rax]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001179	           0xfb6c0	                           movzx eax, al	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400117c	            0x4898	                                    cdqe	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400117e	     0xfb680000000	                   movzx eax, byte [rax]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001185	           0xfb6c0	                           movzx eax, al	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001188	             0x1c8	                            add eax, ecx	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400118a	            0x39c2	                            cmp edx, eax	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400118c	            0x743f	                            je 0x40011cd	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400118e	      0xbe00000000	                              mov esi, 0	       615	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_43
0x4001193	      0xbf00000000	                              mov edi, 0	       615	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_43
0x4001198	      0xe800000000	                          call 0x400119d	       615	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_43
0x400119d	          0x4889c1	                            mov rcx, rax	       615	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_43
0x40011a0	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x40011a6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x40011ad	          0x4889c6	                            mov rsi, rax	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x40011b0	          0x4889cf	                            mov rdi, rcx	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x40011b3	      0xb800000000	                              mov eax, 0	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x40011b8	      0xe800000000	                          call 0x40011bd	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x40011bd	      0xbf11000000	                           mov edi, 0x11	       617	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_44
0x40011c2	      0xe800000000	                          call 0x40011c7	       617	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_44
0x40011c7	              0x90	                                     nop	       618	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x40011c8	      0xe994000000	                           jmp 0x4001261	       618	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x40011cd	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	       621	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_32
0x40011d5	            0x740f	                            je 0x40011e6	       621	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_32
0x40011d7	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       622	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	CALL_45
0x40011de	          0x4889c7	                            mov rdi, rax	       622	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	CALL_45
0x40011e1	      0xe800000000	                          call 0x40011e6	       622	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	CALL_45
0x40011e6	      0xb801000000	                              mov eax, 1	       624	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40011eb	      0xe9a8000000	                           jmp 0x4001298	       624	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40011f0	              0x90	                                     nop	       587	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40011f1	              0x90	                                     nop	       627	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x40011f2	    0x488d9548ffff	                   lea rdx, [rbp - 0xb8]	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x40011f9	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x4001200	          0x4889d6	                            mov rsi, rdx	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x4001203	          0x4889c7	                            mov rdi, rax	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x4001206	      0xe8e5eeffff	                  call sym.srec_get_byte	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x400120b	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x4001211	    0x83bd4cffffff	cmp dword [rbp - 0xb4], 0xffffffffffffffff	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x4001218	     0xf8565f1ffff	                           jne 0x4000383	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x400121e	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       631	srec.c	FUNCTION_6	ELSE_1	IF_33
0x4001224	            0x85c0	                           test eax, eax	       631	srec.c	FUNCTION_6	ELSE_1	IF_33
0x4001226	            0x7538	                           jne 0x4001260	       631	srec.c	FUNCTION_6	ELSE_1	IF_33
0x4001228	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	       634	srec.c	FUNCTION_6	ELSE_1	IF_34
0x4001230	            0x740f	                            je 0x4001241	       634	srec.c	FUNCTION_6	ELSE_1	IF_34
0x4001232	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       635	srec.c	FUNCTION_6	ELSE_1	CALL_46
0x4001239	          0x4889c7	                            mov rdi, rax	       635	srec.c	FUNCTION_6	ELSE_1	CALL_46
0x400123c	      0xe800000000	                          call 0x4001241	       635	srec.c	FUNCTION_6	ELSE_1	CALL_46
0x4001241	      0xb801000000	                              mov eax, 1	       637	srec.c	FUNCTION_6	ELSE_1
0x4001246	            0xeb50	                           jmp 0x4001298	       637	srec.c	FUNCTION_6	ELSE_1
0x4001248	              0x90	                                     nop	       307	srec.c	ELSE_1	FUNCTION_6	IF_1
0x4001249	            0xeb16	                           jmp 0x4001261	       307	srec.c	ELSE_1	FUNCTION_6	IF_1
0x400124b	              0x90	                                     nop	       367	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_6
0x400124c	            0xeb13	                           jmp 0x4001261	       367	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_6
0x400124e	              0x90	                                     nop	       382	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	IF_8
0x400124f	            0xeb10	                           jmp 0x4001261	       382	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	IF_8
0x4001251	              0x90	                                     nop	       399	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_10
0x4001252	            0xeb0d	                           jmp 0x4001261	       399	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_10
0x4001254	              0x90	                                     nop	       438	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_15
0x4001255	            0xeb0a	                           jmp 0x4001261	       438	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_15
0x4001257	              0x90	                                     nop	       467	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18
0x4001258	            0xeb07	                           jmp 0x4001261	       467	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18
0x400125a	              0x90	                                     nop	       500	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_26
0x400125b	            0xeb04	                           jmp 0x4001261	       500	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_26
0x400125d	              0x90	                                     nop	       505	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27
0x400125e	            0xeb01	                           jmp 0x4001261	       505	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27
0x4001260	              0x90	                                     nop	       632	srec.c	FUNCTION_6	ELSE_1	IF_33
0x4001261	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       640	srec.c	FUNCTION_6	ELSE_1	IF_35
0x4001269	            0x740f	                            je 0x400127a	       640	srec.c	FUNCTION_6	ELSE_1	IF_35
0x400126b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       641	srec.c	FUNCTION_6	ELSE_1	CALL_47
0x4001272	          0x4889c7	                            mov rdi, rax	       641	srec.c	FUNCTION_6	ELSE_1	CALL_47
0x4001275	      0xe800000000	                          call 0x400127a	       641	srec.c	FUNCTION_6	ELSE_1	CALL_47
0x400127a	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	       642	srec.c	FUNCTION_6	ELSE_1	IF_36
0x4001282	            0x740f	                            je 0x4001293	       642	srec.c	FUNCTION_6	ELSE_1	IF_36
0x4001284	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       643	srec.c	FUNCTION_6	ELSE_1	CALL_48
0x400128b	          0x4889c7	                            mov rdi, rax	       643	srec.c	FUNCTION_6	ELSE_1	CALL_48
0x400128e	      0xe800000000	                          call 0x4001293	       643	srec.c	FUNCTION_6	ELSE_1	CALL_48
0x4001293	      0xb800000000	                              mov eax, 0	       644	srec.c	FUNCTION_6	ELSE_1
0x4001298	        0x488b7df8	                mov rdi, qword [rbp - 8]	       645	srec.c	FUNCTION_6	ELSE_1
0x400129c	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       645	srec.c	FUNCTION_6	ELSE_1
0x40012a5	            0x7405	                            je 0x40012ac	       645	srec.c	FUNCTION_6	ELSE_1
0x40012a7	      0xe800000000	                          call 0x40012ac	       645	srec.c	FUNCTION_6	ELSE_1
0x40012ac	              0xc9	                                   leave	       645	srec.c	FUNCTION_6	ELSE_1
0x40012ad	              0xc3	                                     ret	       645	srec.c	FUNCTION_6	ELSE_1
internal_srec_write_object_contents	WHILE,1:ELSE,0:IF,4:functions,0:FOR,0:CALL,4:DO,0:SWITCH,0	50
0x4002681	              0x55	                                push rbp	      1136	srec.c	FUNCTION_18
0x4002682	          0x4889e5	                            mov rbp, rsp	      1136	srec.c	FUNCTION_18
0x4002685	        0x4883ec20	                           sub rsp, 0x20	      1136	srec.c	FUNCTION_18
0x4002689	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1136	srec.c	FUNCTION_18
0x400268d	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1136	srec.c	FUNCTION_18
0x4002690	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1137	srec.c	FUNCTION_18
0x4002694	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1137	srec.c	FUNCTION_18
0x400269b	        0x488945f8	                mov qword [rbp - 8], rax	      1137	srec.c	FUNCTION_18
0x400269f	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1140	srec.c	FUNCTION_18	IF_1
0x40026a3	            0x7417	                            je 0x40026bc	      1140	srec.c	FUNCTION_18	IF_1
0x40026a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1142	srec.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x40026a9	          0x4889c7	                            mov rdi, rax	      1142	srec.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x40026ac	      0xe83bfdffff	             call sym.srec_write_symbols	      1142	srec.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x40026b1	            0x85c0	                           test eax, eax	      1142	srec.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x40026b3	            0x7507	                           jne 0x40026bc	      1142	srec.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x40026b5	      0xb800000000	                              mov eax, 0	      1143	srec.c	FUNCTION_18	IF_1	IF_2
0x40026ba	            0xeb6b	                           jmp 0x4002727	      1143	srec.c	FUNCTION_18	IF_1	IF_2
0x40026bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1146	srec.c	FUNCTION_18	IF_3	CALL_2
0x40026c0	          0x4889c7	                            mov rdi, rax	      1146	srec.c	FUNCTION_18	IF_3	CALL_2
0x40026c3	      0xe85efbffff	              call sym.srec_write_header	      1146	srec.c	FUNCTION_18	IF_3	CALL_2
0x40026c8	            0x85c0	                           test eax, eax	      1146	srec.c	FUNCTION_18	IF_3	CALL_2
0x40026ca	            0x7507	                           jne 0x40026d3	      1146	srec.c	FUNCTION_18	IF_3	CALL_2
0x40026cc	      0xb800000000	                              mov eax, 0	      1147	srec.c	FUNCTION_18	IF_3
0x40026d1	            0xeb54	                           jmp 0x4002727	      1147	srec.c	FUNCTION_18	IF_3
0x40026d3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1150	srec.c	FUNCTION_18
0x40026d7	          0x488b00	                    mov rax, qword [rax]	      1150	srec.c	FUNCTION_18
0x40026da	        0x488945f0	             mov qword [rbp - 0x10], rax	      1150	srec.c	FUNCTION_18
0x40026de	            0xeb2d	                           jmp 0x400270d	      1152	srec.c	FUNCTION_18	WHILE_1
0x40026e0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1154	srec.c	FUNCTION_18	WHILE_1	IF_4	CALL_3
0x40026e4	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1154	srec.c	FUNCTION_18	WHILE_1	IF_4	CALL_3
0x40026e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1154	srec.c	FUNCTION_18	WHILE_1	IF_4	CALL_3
0x40026ec	          0x4889ce	                            mov rsi, rcx	      1154	srec.c	FUNCTION_18	WHILE_1	IF_4	CALL_3
0x40026ef	          0x4889c7	                            mov rdi, rax	      1154	srec.c	FUNCTION_18	WHILE_1	IF_4	CALL_3
0x40026f2	      0xe88dfbffff	             call sym.srec_write_section	      1154	srec.c	FUNCTION_18	WHILE_1	IF_4	CALL_3
0x40026f7	            0x85c0	                           test eax, eax	      1154	srec.c	FUNCTION_18	WHILE_1	IF_4	CALL_3
0x40026f9	            0x7507	                           jne 0x4002702	      1154	srec.c	FUNCTION_18	WHILE_1	IF_4	CALL_3
0x40026fb	      0xb800000000	                              mov eax, 0	      1155	srec.c	FUNCTION_18	WHILE_1	IF_4
0x4002700	            0xeb25	                           jmp 0x4002727	      1155	srec.c	FUNCTION_18	WHILE_1	IF_4
0x4002702	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1156	srec.c	FUNCTION_18	WHILE_1
0x4002706	          0x488b00	                    mov rax, qword [rax]	      1156	srec.c	FUNCTION_18	WHILE_1
0x4002709	        0x488945f0	             mov qword [rbp - 0x10], rax	      1156	srec.c	FUNCTION_18	WHILE_1
0x400270d	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1152	srec.c	FUNCTION_18	WHILE_1
0x4002712	            0x75cc	                           jne 0x40026e0	      1152	srec.c	FUNCTION_18	WHILE_1
0x4002714	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1158	srec.c	FUNCTION_18	CALL_4
0x4002718	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1158	srec.c	FUNCTION_18	CALL_4
0x400271c	          0x4889d6	                            mov rsi, rdx	      1158	srec.c	FUNCTION_18	CALL_4
0x400271f	          0x4889c7	                            mov rdi, rax	      1158	srec.c	FUNCTION_18	CALL_4
0x4002722	      0xe881fcffff	          call sym.srec_write_terminator	      1158	srec.c	FUNCTION_18	CALL_4
0x4002727	              0xc9	                                   leave	      1159	srec.c	FUNCTION_18
0x4002728	              0xc3	                                     ret	      1159	srec.c	FUNCTION_18
srec_bad_byte	WHILE,0:ELSE,2:IF,3:functions,0:FOR,0:CALL,6:DO,0:SWITCH,0	55
0x4000162	              0x55	                                push rbp	       241	srec.c	FUNCTION_4
0x4000163	          0x4889e5	                            mov rbp, rsp	       241	srec.c	FUNCTION_4
0x4000166	        0x4883ec50	                           sub rsp, 0x50	       241	srec.c	FUNCTION_4
0x400016a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       241	srec.c	FUNCTION_4
0x400016e	          0x8975c4	             mov dword [rbp - 0x3c], esi	       241	srec.c	FUNCTION_4
0x4000171	          0x8955c0	             mov dword [rbp - 0x40], edx	       241	srec.c	FUNCTION_4
0x4000174	          0x894dbc	             mov dword [rbp - 0x44], ecx	       241	srec.c	FUNCTION_4
0x4000177	    0x64488b042528	                mov rax, qword fs:[0x28]	       241	srec.c	FUNCTION_4
0x4000180	        0x488945f8	                mov qword [rbp - 8], rax	       241	srec.c	FUNCTION_4
0x4000184	            0x31c0	                            xor eax, eax	       241	srec.c	FUNCTION_4
0x4000186	        0x837dc0ff	cmp dword [rbp - 0x40], 0xffffffffffffffff	       242	srec.c	FUNCTION_4	IF_1
0x400018a	            0x7516	                           jne 0x40001a2	       242	srec.c	FUNCTION_4	IF_1
0x400018c	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       244	srec.c	FUNCTION_4	IF_1	IF_2
0x4000190	     0xf8582000000	                           jne 0x4000218	       244	srec.c	FUNCTION_4	IF_1	IF_2
0x4000196	      0xbf12000000	                           mov edi, 0x12	       245	srec.c	FUNCTION_4	IF_1	CALL_1
0x400019b	      0xe800000000	                          call 0x40001a0	       245	srec.c	FUNCTION_4	IF_1	CALL_1
0x40001a0	            0xeb76	                           jmp 0x4000218	       264	srec.c	FUNCTION_4
0x40001a2	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       251	srec.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x40001a5	           0xfb6c0	                           movzx eax, al	       251	srec.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x40001a8	            0x4898	                                    cdqe	       251	srec.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x40001aa	     0xfb784000000	             movzx eax, word [rax + rax]	       251	srec.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x40001b2	           0xfb7c0	                           movzx eax, ax	       251	srec.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x40001b5	          0x83e010	                           and eax, 0x10	       251	srec.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x40001b8	            0x85c0	                           test eax, eax	       251	srec.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x40001ba	            0x751e	                           jne 0x40001da	       251	srec.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x40001bc	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       252	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x40001bf	           0xfb6d0	                           movzx edx, al	       252	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x40001c2	        0x488d45d0	                   lea rax, [rbp - 0x30]	       252	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x40001c6	      0xbe00000000	                              mov esi, 0	       252	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x40001cb	          0x4889c7	                            mov rdi, rax	       252	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x40001ce	      0xb800000000	                              mov eax, 0	       252	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x40001d3	      0xe800000000	                          call 0x40001d8	       252	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x40001d8	            0xeb0a	                           jmp 0x40001e4	       252	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x40001da	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       255	srec.c	FUNCTION_4	ELSE_1	ELSE_2
0x40001dd	          0x8845d0	               mov byte [rbp - 0x30], al	       255	srec.c	FUNCTION_4	ELSE_1	ELSE_2
0x40001e0	        0xc645d100	                mov byte [rbp - 0x2f], 0	       256	srec.c	FUNCTION_4	ELSE_1	ELSE_2
0x40001e4	      0xbe00000000	                              mov esi, 0	       260	srec.c	FUNCTION_4	ELSE_1	CALL_5
0x40001e9	      0xbf00000000	                              mov edi, 0	       260	srec.c	FUNCTION_4	ELSE_1	CALL_5
0x40001ee	      0xe800000000	                          call 0x40001f3	       260	srec.c	FUNCTION_4	ELSE_1	CALL_5
0x40001f3	          0x4889c7	                            mov rdi, rax	       260	srec.c	FUNCTION_4	ELSE_1	CALL_5
0x40001f6	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       258	srec.c	FUNCTION_4	ELSE_1	CALL_4
0x40001fa	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       258	srec.c	FUNCTION_4	ELSE_1	CALL_4
0x40001fd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       258	srec.c	FUNCTION_4	ELSE_1	CALL_4
0x4000201	          0x4889c6	                            mov rsi, rax	       258	srec.c	FUNCTION_4	ELSE_1	CALL_4
0x4000204	      0xb800000000	                              mov eax, 0	       258	srec.c	FUNCTION_4	ELSE_1	CALL_4
0x4000209	      0xe800000000	                          call 0x400020e	       258	srec.c	FUNCTION_4	ELSE_1	CALL_4
0x400020e	      0xbf11000000	                           mov edi, 0x11	       262	srec.c	FUNCTION_4	ELSE_1	CALL_6
0x4000213	      0xe800000000	                          call 0x4000218	       262	srec.c	FUNCTION_4	ELSE_1	CALL_6
0x4000218	              0x90	                                     nop	       264	srec.c	FUNCTION_4
0x4000219	        0x488b45f8	                mov rax, qword [rbp - 8]	       264	srec.c	FUNCTION_4
0x400021d	    0x644833042528	                xor rax, qword fs:[0x28]	       264	srec.c	FUNCTION_4
0x4000226	            0x7405	                            je 0x400022d	       264	srec.c	FUNCTION_4
0x4000228	      0xe800000000	                          call 0x400022d	       264	srec.c	FUNCTION_4
0x400022d	              0xc9	                                   leave	       264	srec.c	FUNCTION_4
0x400022e	              0xc3	                                     ret	       264	srec.c	FUNCTION_4
symbolsrec_object_p	WHILE,0:ELSE,0:IF,5:functions,0:FOR,0:CALL,7:DO,0:SWITCH,0	92
0x4001442	              0x55	                                push rbp	       686	srec.c	FUNCTION_8
0x4001443	          0x4889e5	                            mov rbp, rsp	       686	srec.c	FUNCTION_8
0x4001446	        0x4883ec30	                           sub rsp, 0x30	       686	srec.c	FUNCTION_8
0x400144a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       686	srec.c	FUNCTION_8
0x400144e	    0x64488b042528	                mov rax, qword fs:[0x28]	       686	srec.c	FUNCTION_8
0x4001457	        0x488945f8	                mov qword [rbp - 8], rax	       686	srec.c	FUNCTION_8
0x400145b	            0x31c0	                            xor eax, eax	       686	srec.c	FUNCTION_8
0x400145d	      0xe8deebffff	                      call sym.srec_init	       690	srec.c	FUNCTION_8	CALL_1
0x4001462	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       692	srec.c	FUNCTION_8	IF_1	CALL_2
0x4001466	      0xba00000000	                              mov edx, 0	       692	srec.c	FUNCTION_8	IF_1	CALL_2
0x400146b	      0xbe00000000	                              mov esi, 0	       692	srec.c	FUNCTION_8	IF_1	CALL_2
0x4001470	          0x4889c7	                            mov rdi, rax	       692	srec.c	FUNCTION_8	IF_1	CALL_2
0x4001473	      0xe800000000	                          call 0x4001478	       692	srec.c	FUNCTION_8	IF_1	CALL_2
0x4001478	            0x85c0	                           test eax, eax	       692	srec.c	FUNCTION_8	IF_1	CALL_2
0x400147a	            0x751b	                           jne 0x4001497	       692	srec.c	FUNCTION_8	IF_1	CALL_2
0x400147c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       693	srec.c	FUNCTION_8	IF_1	CALL_3
0x4001480	        0x488d45f0	                   lea rax, [rbp - 0x10]	       693	srec.c	FUNCTION_8	IF_1	CALL_3
0x4001484	      0xbe02000000	                              mov esi, 2	       693	srec.c	FUNCTION_8	IF_1	CALL_3
0x4001489	          0x4889c7	                            mov rdi, rax	       693	srec.c	FUNCTION_8	IF_1	CALL_3
0x400148c	      0xe800000000	                          call 0x4001491	       693	srec.c	FUNCTION_8	IF_1	CALL_3
0x4001491	        0x4883f802	                              cmp rax, 2	       693	srec.c	FUNCTION_8	IF_1	CALL_3
0x4001495	            0x740a	                            je 0x40014a1	       693	srec.c	FUNCTION_8	IF_1	CALL_3
0x4001497	      0xb800000000	                              mov eax, 0	       694	srec.c	FUNCTION_8	IF_1
0x400149c	      0xe9eb000000	                           jmp 0x400158c	       694	srec.c	FUNCTION_8	IF_1
0x40014a1	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	       696	srec.c	FUNCTION_8	IF_2
0x40014a5	            0x3c24	                            cmp al, 0x24	       696	srec.c	FUNCTION_8	IF_2
0x40014a7	            0x7508	                           jne 0x40014b1	       696	srec.c	FUNCTION_8	IF_2
0x40014a9	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	       696	srec.c	FUNCTION_8	IF_2
0x40014ad	            0x3c24	                            cmp al, 0x24	       696	srec.c	FUNCTION_8	IF_2
0x40014af	            0x7414	                            je 0x40014c5	       696	srec.c	FUNCTION_8	IF_2
0x40014b1	      0xbf03000000	                              mov edi, 3	       698	srec.c	FUNCTION_8	IF_2	CALL_4
0x40014b6	      0xe800000000	                          call 0x40014bb	       698	srec.c	FUNCTION_8	IF_2	CALL_4
0x40014bb	      0xb800000000	                              mov eax, 0	       699	srec.c	FUNCTION_8	IF_2
0x40014c0	      0xe9c7000000	                           jmp 0x400158c	       699	srec.c	FUNCTION_8	IF_2
0x40014c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       702	srec.c	FUNCTION_8
0x40014c9	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       702	srec.c	FUNCTION_8
0x40014d0	        0x488945e8	             mov qword [rbp - 0x18], rax	       702	srec.c	FUNCTION_8
0x40014d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40014d8	          0x4889c7	                            mov rdi, rax	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40014db	      0xe880ebffff	                  call sym.srec_mkobject	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40014e0	            0x85c0	                           test eax, eax	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40014e2	            0x7410	                            je 0x40014f4	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40014e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40014e8	          0x4889c7	                            mov rdi, rax	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40014eb	      0xe80ceeffff	                      call sym.srec_scan	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40014f0	            0x85c0	                           test eax, eax	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40014f2	            0x7551	                           jne 0x4001545	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40014f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       705	srec.c	FUNCTION_8	IF_3	IF_4
0x40014f8	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       705	srec.c	FUNCTION_8	IF_3	IF_4
0x40014ff	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       705	srec.c	FUNCTION_8	IF_3	IF_4
0x4001503	            0x742a	                            je 0x400152f	       705	srec.c	FUNCTION_8	IF_3	IF_4
0x4001505	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       705	srec.c	FUNCTION_8	IF_3	IF_4
0x4001509	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       705	srec.c	FUNCTION_8	IF_3	IF_4
0x4001510	          0x4885c0	                           test rax, rax	       705	srec.c	FUNCTION_8	IF_3	IF_4
0x4001513	            0x741a	                            je 0x400152f	       705	srec.c	FUNCTION_8	IF_3	IF_4
0x4001515	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       706	srec.c	FUNCTION_8	IF_3	CALL_7
0x4001519	    0x488b90f80000	            mov rdx, qword [rax + 0xf8] 	       706	srec.c	FUNCTION_8	IF_3	CALL_7
0x4001520	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       706	srec.c	FUNCTION_8	IF_3	CALL_7
0x4001524	          0x4889d6	                            mov rsi, rdx	       706	srec.c	FUNCTION_8	IF_3	CALL_7
0x4001527	          0x4889c7	                            mov rdi, rax	       706	srec.c	FUNCTION_8	IF_3	CALL_7
0x400152a	      0xe800000000	                          call 0x400152f	       706	srec.c	FUNCTION_8	IF_3	CALL_7
0x400152f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       707	srec.c	FUNCTION_8	IF_3
0x4001533	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       707	srec.c	FUNCTION_8	IF_3
0x4001537	    0x488990f80000	             mov qword [rax + 0xf8], rdx	       707	srec.c	FUNCTION_8	IF_3
0x400153e	      0xb800000000	                              mov eax, 0	       708	srec.c	FUNCTION_8	IF_3
0x4001543	            0xeb47	                           jmp 0x400158c	       708	srec.c	FUNCTION_8	IF_3
0x4001545	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       711	srec.c	FUNCTION_8	IF_5
0x4001549	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	       711	srec.c	FUNCTION_8	IF_5
0x400154f	            0x85c0	                           test eax, eax	       711	srec.c	FUNCTION_8	IF_5
0x4001551	            0x7431	                            je 0x4001584	       711	srec.c	FUNCTION_8	IF_5
0x4001553	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       712	srec.c	FUNCTION_8	IF_5
0x4001557	          0x8b4044	            mov eax, dword [rax + 0x44] 	       712	srec.c	FUNCTION_8	IF_5
0x400155a	          0xc1e805	                              shr eax, 5	       712	srec.c	FUNCTION_8	IF_5
0x400155d	      0x25ffff0f00	                        and eax, 0xfffff	       712	srec.c	FUNCTION_8	IF_5
0x4001562	          0x83c810	                            or eax, 0x10	       712	srec.c	FUNCTION_8	IF_5
0x4001565	            0x89c2	                            mov edx, eax	       712	srec.c	FUNCTION_8	IF_5
0x4001567	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       712	srec.c	FUNCTION_8	IF_5
0x400156b	    0x81e2ffff0f00	                        and edx, 0xfffff	       712	srec.c	FUNCTION_8	IF_5
0x4001571	            0x89d1	                            mov ecx, edx	       712	srec.c	FUNCTION_8	IF_5
0x4001573	          0xc1e105	                              shl ecx, 5	       712	srec.c	FUNCTION_8	IF_5
0x4001576	          0x8b5044	            mov edx, dword [rax + 0x44] 	       712	srec.c	FUNCTION_8	IF_5
0x4001579	    0x81e21f0000fe	                     and edx, 0xfe00001f	       712	srec.c	FUNCTION_8	IF_5
0x400157f	             0x9ca	                             or edx, ecx	       712	srec.c	FUNCTION_8	IF_5
0x4001581	          0x895044	             mov dword [rax + 0x44], edx	       712	srec.c	FUNCTION_8	IF_5
0x4001584	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       714	srec.c	FUNCTION_8
0x4001588	        0x488b4008	                mov rax, qword [rax + 8]	       714	srec.c	FUNCTION_8
0x400158c	        0x488b75f8	                mov rsi, qword [rbp - 8]	       715	srec.c	FUNCTION_8
0x4001590	    0x644833342528	                xor rsi, qword fs:[0x28]	       715	srec.c	FUNCTION_8
0x4001599	            0x7405	                            je 0x40015a0	       715	srec.c	FUNCTION_8
0x400159b	      0xe800000000	                          call 0x40015a0	       715	srec.c	FUNCTION_8
0x40015a0	              0xc9	                                   leave	       715	srec.c	FUNCTION_8
0x40015a1	              0xc3	                                     ret	       715	srec.c	FUNCTION_8
