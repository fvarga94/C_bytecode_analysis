pascal_type_print_varspec_prefix	IF,9:WHILE,0:DO,0:functions,0:CALL,37:ELSE,2:SWITCH,1:FOR,0	168
0x4000ea0	          0x4885ff	                           test rdi, rdi	       210	p-typeprint.c	FUNCTION_5	IF_1
0x4000ea3	     0xf848c000000	                            je 0x4000f35	       210	p-typeprint.c	FUNCTION_5	IF_1
0x4000ea9	            0x4155	                                push r13	       209	p-typeprint.c	FUNCTION_5
0x4000eab	            0x4154	                                push r12	       209	p-typeprint.c	FUNCTION_5
0x4000ead	          0x4d89c5	                             mov r13, r8	       209	p-typeprint.c	FUNCTION_5
0x4000eb0	              0x55	                                push rbp	       209	p-typeprint.c	FUNCTION_5
0x4000eb1	              0x53	                                push rbx	       209	p-typeprint.c	FUNCTION_5
0x4000eb2	          0x4889f5	                            mov rbp, rsi	       209	p-typeprint.c	FUNCTION_5
0x4000eb5	          0x4889fb	                            mov rbx, rdi	       209	p-typeprint.c	FUNCTION_5
0x4000eb8	          0x4189cc	                           mov r12d, ecx	       209	p-typeprint.c	FUNCTION_5
0x4000ebb	        0x4883ec08	                              sub rsp, 8	       209	p-typeprint.c	FUNCTION_5
0x4000ebf	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       213	p-typeprint.c	FUNCTION_5	IF_2	CALL_1
0x4000ec3	      0x4883780800	                  cmp qword [rax + 8], 0	       213	p-typeprint.c	FUNCTION_5	IF_2	CALL_1
0x4000ec8	            0x7404	                            je 0x4000ece	       213	p-typeprint.c	FUNCTION_5	IF_2	CALL_1
0x4000eca	            0x85d2	                           test edx, edx	       213	p-typeprint.c	FUNCTION_5	IF_2	CALL_1
0x4000ecc	            0x7e5d	                           jle 0x4000f2b	       213	p-typeprint.c	FUNCTION_5	IF_2	CALL_1
0x4000ece	      0xe800000000	                          call 0x4000ed3	       216	p-typeprint.c	FUNCTION_5
0x4000ed3	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       218	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000ed7	          0x803817	                    cmp byte [rax], 0x17	       218	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000eda	     0xf8780010000	                            ja 0x4001060	       218	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000ee0	           0xfb610	                   movzx edx, byte [rax]	       218	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000ee3	    0xff24d5000000	                       jmp qword [rdx*8]	       218	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000eea	    0x660f1f440000	                    nop word [rax + rax]	       218	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000ef0	          0x4585e4	                         test r12d, r12d	       228	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_3
0x4000ef3	     0xf85cf010000	                           jne 0x40010c8	       228	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_3
0x4000ef9	        0x488b4018	            mov rax, qword [rax + 0x18] 	       230	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_4	CALL_7
0x4000efd	          0x4885c0	                           test rax, rax	       230	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_4	CALL_7
0x4000f00	     0xf8472010000	                            je 0x4001078	       230	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_4	CALL_7
0x4000f06	        0x488b4028	            mov rax, qword [rax + 0x28] 	       231	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_4	CALL_9
0x4000f0a	          0x80380a	                     cmp byte [rax], 0xa	       231	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_4	CALL_9
0x4000f0d	     0xf8465010000	                            je 0x4001078	       231	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_4	CALL_9
0x4000f13	      0xbe00000000	                              mov esi, 0	       233	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_4	CALL_10
0x4000f18	          0x4889ef	                            mov rdi, rbp	       233	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_4	CALL_10
0x4000f1b	            0x31c0	                            xor eax, eax	       233	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_4	CALL_10
0x4000f1d	      0xe800000000	                          call 0x4000f22	       233	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_4	CALL_10
0x4000f22	          0x4585e4	                         test r12d, r12d	       240	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_5
0x4000f25	     0xf8565010000	                           jne 0x4001090	       240	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_5
0x4000f2b	        0x4883c408	                              add rsp, 8	       305	p-typeprint.c	FUNCTION_5
0x4000f2f	              0x5b	                                 pop rbx	       305	p-typeprint.c	FUNCTION_5
0x4000f30	              0x5d	                                 pop rbp	       305	p-typeprint.c	FUNCTION_5
0x4000f31	            0x415c	                                 pop r12	       305	p-typeprint.c	FUNCTION_5
0x4000f33	            0x415d	                                 pop r13	       305	p-typeprint.c	FUNCTION_5
0x4000f35	            0xf3c3	                                     ret	       305	p-typeprint.c	FUNCTION_5
0x4000f37	    0x660f1f840000	                    nop word [rax + rax]	       305	p-typeprint.c	FUNCTION_5
0x4000f40	        0x488b7818	            mov rdi, qword [rax + 0x18] 	       251	p-typeprint.c	FUNCTION_5	SWITCH_1
0x4000f44	          0x4889ee	                            mov rsi, rbp	       251	p-typeprint.c	FUNCTION_5	SWITCH_1
0x4000f47	          0x4d89e8	                             mov r8, r13	       251	p-typeprint.c	FUNCTION_5	SWITCH_1
0x4000f4a	      0xb901000000	                              mov ecx, 1	       251	p-typeprint.c	FUNCTION_5	SWITCH_1
0x4000f4f	            0x31d2	                            xor edx, edx	       251	p-typeprint.c	FUNCTION_5	SWITCH_1
0x4000f51	      0xe800000000	                          call 0x4000f56	       251	p-typeprint.c	FUNCTION_5	SWITCH_1
0x4000f56	      0xbe00000000	                              mov esi, 0	       252	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000f5b	        0x4883c408	                              add rsp, 8	       305	p-typeprint.c	FUNCTION_5
0x4000f5f	          0x4889ef	                            mov rdi, rbp	       280	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_35
0x4000f62	            0x31c0	                            xor eax, eax	       280	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_35
0x4000f64	              0x5b	                                 pop rbx	       305	p-typeprint.c	FUNCTION_5
0x4000f65	              0x5d	                                 pop rbp	       305	p-typeprint.c	FUNCTION_5
0x4000f66	            0x415c	                                 pop r12	       305	p-typeprint.c	FUNCTION_5
0x4000f68	            0x415d	                                 pop r13	       305	p-typeprint.c	FUNCTION_5
0x4000f6a	      0xe900000000	                           jmp 0x4000f6f	       280	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_35
0x4000f6f	              0x90	                                     nop	       280	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_35
0x4000f70	            0x31c0	                            xor eax, eax	       221	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000f72	      0xbe00000000	                              mov esi, 0	       221	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000f77	          0x4889ef	                            mov rdi, rbp	       221	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000f7a	      0xe800000000	                          call 0x4000f7f	       221	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000f7f	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       222	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_5
0x4000f83	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       222	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_5
0x4000f87	          0x4885db	                           test rbx, rbx	       210	p-typeprint.c	FUNCTION_5	IF_1
0x4000f8a	            0x749f	                            je 0x4000f2b	       210	p-typeprint.c	FUNCTION_5	IF_1
0x4000f8c	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       213	p-typeprint.c	FUNCTION_5	IF_2	CALL_1
0x4000f90	    0x41bc01000000	                             mov r12d, 1	       223	p-typeprint.c	FUNCTION_5	SWITCH_1
0x4000f96	      0x4883780800	                  cmp qword [rax + 8], 0	       213	p-typeprint.c	FUNCTION_5	IF_2	CALL_1
0x4000f9b	     0xf842dffffff	                            je 0x4000ece	       213	p-typeprint.c	FUNCTION_5	IF_2	CALL_1
0x4000fa1	            0xeb88	                           jmp 0x4000f2b	       213	p-typeprint.c	FUNCTION_5	IF_2	CALL_1
0x4000fa3	       0xf1f440000	                   nop dword [rax + rax]	       213	p-typeprint.c	FUNCTION_5	IF_2	CALL_1
0x4000fa8	          0x4585e4	                         test r12d, r12d	       272	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_8
0x4000fab	     0xf854f010000	                           jne 0x4001100	       272	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_8
0x4000fb1	            0x31c0	                            xor eax, eax	       274	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_26
0x4000fb3	      0xbe00000000	                              mov esi, 0	       274	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_26
0x4000fb8	          0x4889ef	                            mov rdi, rbp	       274	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_26
0x4000fbb	      0xe800000000	                          call 0x4000fc0	       274	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_26
0x4000fc0	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       275	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_28
0x4000fc4	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       275	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_28
0x4000fc8	          0x8b4a24	            mov ecx, dword [rdx + 0x24] 	       275	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_28
0x4000fcb	            0x85c9	                           test ecx, ecx	       275	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_28
0x4000fcd	            0x7455	                            je 0x4001024	       275	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_28
0x4000fcf	        0x488b4020	            mov rax, qword [rax + 0x20] 	       276	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_29
0x4000fd3	        0x488b4010	            mov rax, qword [rax + 0x10] 	       276	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_29
0x4000fd7	        0x488b4028	            mov rax, qword [rax + 0x28] 	       276	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_29
0x4000fdb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       276	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_29
0x4000fdf	          0x8b5010	            mov edx, dword [rax + 0x10] 	       276	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_29
0x4000fe2	            0x85d2	                           test edx, edx	       276	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_29
0x4000fe4	            0x743e	                            je 0x4001024	       276	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_29
0x4000fe6	        0x488b7818	            mov rdi, qword [rax + 0x18] 	       277	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_30
0x4000fea	      0xe800000000	                          call 0x4000fef	       277	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_30
0x4000fef	          0x4989c4	                            mov r12, rax	       277	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_30
0x4000ff2	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       278	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_32
0x4000ff6	        0x488b4020	            mov rax, qword [rax + 0x20] 	       278	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_32
0x4000ffa	        0x488b4010	            mov rax, qword [rax + 0x10] 	       278	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_32
0x4000ffe	        0x488b4028	            mov rax, qword [rax + 0x28] 	       278	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_32
0x4001002	        0x488b4020	            mov rax, qword [rax + 0x20] 	       277	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_30
0x4001006	        0x488b7808	                mov rdi, qword [rax + 8]	       277	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_30
0x400100a	      0xe800000000	                          call 0x400100f	       277	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_9	CALL_30
0x400100f	          0x4c89e1	                            mov rcx, r12	       279	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_34
0x4001012	          0x4889c2	                            mov rdx, rax	       279	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_34
0x4001015	      0xbe00000000	                              mov esi, 0	       279	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_34
0x400101a	          0x4889ef	                            mov rdi, rbp	       279	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_34
0x400101d	            0x31c0	                            xor eax, eax	       279	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_34
0x400101f	      0xe800000000	                          call 0x4001024	       279	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_34
0x4001024	      0xbe00000000	                              mov esi, 0	       280	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_35
0x4001029	      0xe92dffffff	                           jmp 0x4000f5b	       280	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_35
0x400102e	            0x6690	                                     nop	       280	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_35
0x4001030	          0x4585e4	                         test r12d, r12d	       256	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_6
0x4001033	     0xf85a7000000	                           jne 0x40010e0	       256	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_6
0x4001039	        0x488b4018	            mov rax, qword [rax + 0x18] 	       259	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_7	CALL_20
0x400103d	          0x4885c0	                           test rax, rax	       259	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_7	CALL_20
0x4001040	            0x7412	                            je 0x4001054	       259	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_7	CALL_20
0x4001042	        0x488b4028	            mov rax, qword [rax + 0x28] 	       260	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_7	CALL_22
0x4001046	      0xbe00000000	                              mov esi, 0	       262	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_7	CALL_23
0x400104b	          0x80380a	                     cmp byte [rax], 0xa	       260	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_7	CALL_22
0x400104e	     0xf8507ffffff	                           jne 0x4000f5b	       260	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_7	CALL_22
0x4001054	      0xbe00000000	                              mov esi, 0	       266	p-typeprint.c	FUNCTION_5	SWITCH_1	ELSE_2	CALL_24
0x4001059	      0xe9fdfeffff	                           jmp 0x4000f5b	       266	p-typeprint.c	FUNCTION_5	SWITCH_1	ELSE_2	CALL_24
0x400105e	            0x6690	                                     nop	       266	p-typeprint.c	FUNCTION_5	SWITCH_1	ELSE_2	CALL_24
0x4001060	      0xbf00000000	                              mov edi, 0	       302	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_37
0x4001065	      0xe800000000	                          call 0x400106a	       302	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_37
0x400106a	          0x4889c7	                            mov rdi, rax	       302	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_37
0x400106d	            0x31c0	                            xor eax, eax	       302	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_37
0x400106f	      0xe800000000	                          call 0x4001074	       302	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_37
0x4001074	         0xf1f4000	                         nop dword [rax]	       302	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_37
0x4001078	      0xbe00000000	                              mov esi, 0	       237	p-typeprint.c	FUNCTION_5	SWITCH_1	ELSE_1	CALL_11
0x400107d	          0x4889ef	                            mov rdi, rbp	       237	p-typeprint.c	FUNCTION_5	SWITCH_1	ELSE_1	CALL_11
0x4001080	            0x31c0	                            xor eax, eax	       237	p-typeprint.c	FUNCTION_5	SWITCH_1	ELSE_1	CALL_11
0x4001082	      0xe800000000	                          call 0x4001087	       237	p-typeprint.c	FUNCTION_5	SWITCH_1	ELSE_1	CALL_11
0x4001087	      0xe996feffff	                           jmp 0x4000f22	       237	p-typeprint.c	FUNCTION_5	SWITCH_1	ELSE_1	CALL_11
0x400108c	         0xf1f4000	                         nop dword [rax]	       237	p-typeprint.c	FUNCTION_5	SWITCH_1	ELSE_1	CALL_11
0x4001090	      0xbe00000000	                              mov esi, 0	       242	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_5	CALL_12
0x4001095	          0x4889ef	                            mov rdi, rbp	       242	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_5	CALL_12
0x4001098	            0x31c0	                            xor eax, eax	       242	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_5	CALL_12
0x400109a	      0xe800000000	                          call 0x400109f	       242	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_5	CALL_12
0x400109f	          0x4889df	                            mov rdi, rbx	       243	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_5	CALL_14
0x40010a2	      0xe800000000	                          call 0x40010a7	       243	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_5	CALL_14
0x40010a7	          0x4889ee	                            mov rsi, rbp	       244	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_5
0x40010aa	          0x4d89e8	                             mov r8, r13	       244	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_5
0x40010ad	          0x4489e1	                           mov ecx, r12d	       244	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_5
0x40010b0	            0x31d2	                            xor edx, edx	       244	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_5
0x40010b2	          0x4889c7	                            mov rdi, rax	       244	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_5
0x40010b5	      0xe800000000	                          call 0x40010ba	       244	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_5
0x40010ba	      0xbe00000000	                              mov esi, 0	       245	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_5	CALL_15
0x40010bf	      0xe997feffff	                           jmp 0x4000f5b	       245	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_5	CALL_15
0x40010c4	         0xf1f4000	                         nop dword [rax]	       245	p-typeprint.c	FUNCTION_5	SWITCH_1	IF_5	CALL_15
0x40010c8	            0x31c0	                            xor eax, eax	       229	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_6
0x40010ca	      0xbe00000000	                              mov esi, 0	       229	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_6
0x40010cf	          0x4889ef	                            mov rdi, rbp	       229	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_6
0x40010d2	      0xe800000000	                          call 0x40010d7	       229	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_6
0x40010d7	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       229	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_6
0x40010db	      0xe919feffff	                           jmp 0x4000ef9	       229	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_6
0x40010e0	            0x31c0	                            xor eax, eax	       257	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_19
0x40010e2	      0xbe00000000	                              mov esi, 0	       257	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_19
0x40010e7	          0x4889ef	                            mov rdi, rbp	       257	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_19
0x40010ea	      0xe800000000	                          call 0x40010ef	       257	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_19
0x40010ef	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       257	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_19
0x40010f3	      0xe941ffffff	                           jmp 0x4001039	       257	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_19
0x40010f8	     0xf1f84000000	                   nop dword [rax + rax]	       257	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_19
0x4001100	      0xbe00000000	                              mov esi, 0	       273	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_25
0x4001105	          0x4889ef	                            mov rdi, rbp	       273	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_25
0x4001108	            0x31c0	                            xor eax, eax	       273	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_25
0x400110a	      0xe800000000	                          call 0x400110f	       273	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_25
0x400110f	      0xe99dfeffff	                           jmp 0x4000fb1	       273	p-typeprint.c	FUNCTION_5	SWITCH_1	CALL_25
pascal_type_print_method_args	IF,3:WHILE,2:DO,0:functions,0:CALL,10:ELSE,0:SWITCH,0:FOR,1	101
0x40000c0	            0x4156	                                push r14	       156	p-typeprint.c	FUNCTION_4
0x40000c2	            0x4155	                                push r13	       156	p-typeprint.c	FUNCTION_4
0x40000c4	      0xb906000000	                              mov ecx, 6	       109	common-utils.h	FUNCTION_11
0x40000c9	            0x4154	                                push r12	       156	p-typeprint.c	FUNCTION_4
0x40000cb	              0x55	                                push rbp	       156	p-typeprint.c	FUNCTION_4
0x40000cc	          0x4989f0	                             mov r8, rsi	       156	p-typeprint.c	FUNCTION_4
0x40000cf	              0x53	                                push rbx	       156	p-typeprint.c	FUNCTION_4
0x40000d0	          0x4889fb	                            mov rbx, rdi	       156	p-typeprint.c	FUNCTION_4
0x40000d3	      0xbf00000000	                              mov edi, 0	       109	common-utils.h	FUNCTION_11
0x40000d8	          0x4889de	                            mov rsi, rbx	       109	common-utils.h	FUNCTION_11
0x40000db	          0x4989d4	                            mov r12, rdx	       156	p-typeprint.c	FUNCTION_4
0x40000de	        0x4883ec10	                           sub rsp, 0x10	       156	p-typeprint.c	FUNCTION_4
0x40000e2	    0x64488b042528	                mov rax, qword fs:[0x28]	       156	p-typeprint.c	FUNCTION_4
0x40000eb	      0x4889442408	                mov qword [rsp + 8], rax	       156	p-typeprint.c	FUNCTION_4
0x40000f0	            0x31c0	                            xor eax, eax	       156	p-typeprint.c	FUNCTION_4
0x40000f2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       109	common-utils.h	FUNCTION_11
0x40000f4	      0xbf00000000	                              mov edi, 0	       109	common-utils.h	FUNCTION_11
0x40000f9	      0xb906000000	                              mov ecx, 6	       109	common-utils.h	FUNCTION_11
0x40000fe	          0x4889de	                            mov rsi, rbx	       109	common-utils.h	FUNCTION_11
0x4000101	           0xf97c0	                                 seta al	       109	common-utils.h	FUNCTION_11
0x4000104	           0xf92c2	                                 setb dl	       109	common-utils.h	FUNCTION_11
0x4000107	            0x29d0	                            sub eax, edx	       109	common-utils.h	FUNCTION_11
0x4000109	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       160	p-typeprint.c	FUNCTION_4	IF_1
0x400010b	            0x743b	                            je 0x4000148	       160	p-typeprint.c	FUNCTION_4	IF_1
0x400010d	           0xfbec0	                           movsx eax, al	       160	p-typeprint.c	FUNCTION_4	IF_1
0x4000110	            0x85c0	                           test eax, eax	       160	p-typeprint.c	FUNCTION_4	IF_1
0x4000112	            0x7434	                            je 0x4000148	       160	p-typeprint.c	FUNCTION_4	IF_1
0x4000114	          0x4c89e6	                            mov rsi, r12	       165	p-typeprint.c	FUNCTION_4	CALL_3
0x4000117	          0x4c89c7	                             mov rdi, r8	       165	p-typeprint.c	FUNCTION_4	CALL_3
0x400011a	      0xe800000000	                          call 0x400011f	       165	p-typeprint.c	FUNCTION_4	CALL_3
0x400011f	          0x803b00	                       cmp byte [rbx], 0	       167	p-typeprint.c	FUNCTION_4	IF_2
0x4000122	            0x753d	                           jne 0x4000161	       167	p-typeprint.c	FUNCTION_4	IF_2
0x4000124	      0x488b442408	                mov rax, qword [rsp + 8]	       195	p-typeprint.c	FUNCTION_4
0x4000129	    0x644833042528	                xor rax, qword fs:[0x28]	       195	p-typeprint.c	FUNCTION_4
0x4000132	     0xf85da000000	                           jne 0x4000212	       195	p-typeprint.c	FUNCTION_4
0x4000138	        0x4883c410	                           add rsp, 0x10	       195	p-typeprint.c	FUNCTION_4
0x400013c	              0x5b	                                 pop rbx	       195	p-typeprint.c	FUNCTION_4
0x400013d	              0x5d	                                 pop rbp	       195	p-typeprint.c	FUNCTION_4
0x400013e	            0x415c	                                 pop r12	       195	p-typeprint.c	FUNCTION_4
0x4000140	            0x415d	                                 pop r13	       195	p-typeprint.c	FUNCTION_4
0x4000142	            0x415e	                                 pop r14	       195	p-typeprint.c	FUNCTION_4
0x4000144	              0xc3	                                     ret	       195	p-typeprint.c	FUNCTION_4
0x4000145	           0xf1f00	                         nop dword [rax]	       195	p-typeprint.c	FUNCTION_4
0x4000148	        0x4883c306	                              add rbx, 6	       162	p-typeprint.c	FUNCTION_4	IF_1
0x400014c	          0x4c89e6	                            mov rsi, r12	       165	p-typeprint.c	FUNCTION_4	CALL_3
0x400014f	          0x4c89c7	                             mov rdi, r8	       165	p-typeprint.c	FUNCTION_4	CALL_3
0x4000152	      0xe800000000	                          call 0x4000157	       165	p-typeprint.c	FUNCTION_4	CALL_3
0x4000157	          0x4885db	                           test rbx, rbx	       167	p-typeprint.c	FUNCTION_4	IF_2
0x400015a	            0x74c8	                            je 0x4000124	       167	p-typeprint.c	FUNCTION_4	IF_2
0x400015c	          0x803b00	                       cmp byte [rbx], 0	       167	p-typeprint.c	FUNCTION_4	IF_2
0x400015f	            0x74c3	                            je 0x4000124	       167	p-typeprint.c	FUNCTION_4	IF_2
0x4000161	          0x4c89e6	                            mov rsi, r12	       169	p-typeprint.c	FUNCTION_4	IF_2	CALL_4
0x4000164	      0xbf00000000	                              mov edi, 0	       169	p-typeprint.c	FUNCTION_4	IF_2	CALL_4
0x4000169	      0xe800000000	                          call 0x400016e	       169	p-typeprint.c	FUNCTION_4	IF_2	CALL_4
0x400016e	           0xfbe03	                   movsx eax, byte [rbx]	       171	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	CALL_5
0x4000171	          0x8d50d0	                   lea edx, [rax - 0x30]	       171	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	CALL_5
0x4000174	          0x83fa09	                              cmp edx, 9	       171	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	CALL_5
0x4000177	            0x776e	                            ja 0x40001e7	       171	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	CALL_5
0x4000179	          0x83e830	                           sub eax, 0x30	       177	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	WHILE_2	CALL_6
0x400017c	          0x83f809	                              cmp eax, 9	       177	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	WHILE_2	CALL_6
0x400017f	     0xf8788000000	                            ja 0x400020d	       177	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	WHILE_2	CALL_6
0x4000185	        0x488d4b01	                      lea rcx, [rbx + 1]	       177	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	WHILE_2	CALL_6
0x4000189	     0xf1f80000000	                         nop dword [rax]	       177	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	WHILE_2	CALL_6
0x4000190	          0x4889cd	                            mov rbp, rcx	       177	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	WHILE_2	CALL_6
0x4000193	        0x4883c101	                              add rcx, 1	       177	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	WHILE_2	CALL_6
0x4000197	         0xfbe5500	                   movsx edx, byte [rbp]	       177	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	WHILE_2	CALL_6
0x400019b	          0x83ea30	                           sub edx, 0x30	       177	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	WHILE_2	CALL_6
0x400019e	          0x83fa09	                              cmp edx, 9	       177	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	WHILE_2	CALL_6
0x40001a1	            0x76ed	                           jbe 0x4000190	       177	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	WHILE_2	CALL_6
0x40001a3	            0x31d2	                            xor edx, edx	       181	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	CALL_7
0x40001a5	          0x4889e6	                            mov rsi, rsp	       181	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	CALL_7
0x40001a8	          0x4889df	                            mov rdi, rbx	       181	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	CALL_7
0x40001ab	      0xe800000000	                          call 0x40001b0	       181	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	CALL_7
0x40001b0	            0x85c0	                           test eax, eax	       184	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	FOR_1
0x40001b2	          0x4989c6	                            mov r14, rax	       181	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	CALL_7
0x40001b5	            0x7e25	                           jle 0x40001dc	       184	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	FOR_1
0x40001b7	          0x8d40ff	                      lea eax, [rax - 1]	       184	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	FOR_1
0x40001ba	          0x4889eb	                            mov rbx, rbp	       184	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	FOR_1
0x40001bd	      0x4c8d6c0501	                lea r13, [rbp + rax + 1]	       184	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	FOR_1
0x40001c2	    0x660f1f440000	                    nop word [rax + rax]	       184	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	FOR_1
0x40001c8	           0xfbe3b	                   movsx edi, byte [rbx]	       185	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	CALL_8
0x40001cb	          0x4c89e6	                            mov rsi, r12	       185	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	CALL_8
0x40001ce	        0x4883c301	                              add rbx, 1	       185	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	CALL_8
0x40001d2	      0xe800000000	                          call 0x40001d7	       185	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	CALL_8
0x40001d7	          0x4939dd	                            cmp r13, rbx	       184	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	FOR_1
0x40001da	            0x75ec	                           jne 0x40001c8	       184	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	FOR_1
0x40001dc	          0x4963de	                        movsxd rbx, r14d	       187	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1
0x40001df	          0x4801eb	                            add rbx, rbp	       187	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1
0x40001e2	          0x803b00	                       cmp byte [rbx], 0	       188	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	IF_3
0x40001e5	            0x7519	                           jne 0x4000200	       188	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	IF_3
0x40001e7	          0x4c89e6	                            mov rsi, r12	       193	p-typeprint.c	FUNCTION_4	IF_2	CALL_10
0x40001ea	      0xbf00000000	                              mov edi, 0	       193	p-typeprint.c	FUNCTION_4	IF_2	CALL_10
0x40001ef	      0xe800000000	                          call 0x40001f4	       193	p-typeprint.c	FUNCTION_4	IF_2	CALL_10
0x40001f4	      0xe92bffffff	                           jmp 0x4000124	       193	p-typeprint.c	FUNCTION_4	IF_2	CALL_10
0x40001f9	     0xf1f80000000	                         nop dword [rax]	       193	p-typeprint.c	FUNCTION_4	IF_2	CALL_10
0x4000200	          0x4c89e6	                            mov rsi, r12	       190	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	IF_3	CALL_9
0x4000203	      0xbf00000000	                              mov edi, 0	       190	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	IF_3	CALL_9
0x4000208	      0xe95cffffff	                           jmp 0x4000169	       190	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	IF_3	CALL_9
0x400020d	          0x4889dd	                            mov rbp, rbx	       177	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	WHILE_2	CALL_6
0x4000210	            0xeb91	                           jmp 0x40001a3	       177	p-typeprint.c	FUNCTION_4	IF_2	WHILE_1	WHILE_2	CALL_6
0x4000212	      0xe800000000	                          call 0x4000217	       195	p-typeprint.c	FUNCTION_4
pascal_print_typedef	IF,0:WHILE,0:DO,0:functions,0:CALL,6:ELSE,0:SWITCH,0:FOR,0	36
0x4000040	            0x4154	                                push r12	        98	p-typeprint.c	FUNCTION_2
0x4000042	              0x55	                                push rbp	        98	p-typeprint.c	FUNCTION_2
0x4000043	          0x4989f4	                            mov r12, rsi	        98	p-typeprint.c	FUNCTION_2
0x4000046	              0x53	                                push rbx	        98	p-typeprint.c	FUNCTION_2
0x4000047	          0x4889d3	                            mov rbx, rdx	        98	p-typeprint.c	FUNCTION_2
0x400004a	      0xe800000000	                          call 0x400004f	        99	p-typeprint.c	FUNCTION_2	CALL_1
0x400004f	      0xbe00000000	                              mov esi, 0	       100	p-typeprint.c	FUNCTION_2	CALL_2
0x4000054	          0x4889c5	                            mov rbp, rax	        99	p-typeprint.c	FUNCTION_2	CALL_1
0x4000057	          0x4889df	                            mov rdi, rbx	       100	p-typeprint.c	FUNCTION_2	CALL_2
0x400005a	            0x31c0	                            xor eax, eax	       100	p-typeprint.c	FUNCTION_2	CALL_2
0x400005c	      0xe800000000	                          call 0x4000061	       100	p-typeprint.c	FUNCTION_2	CALL_2
0x4000061	    0x8b0500000000	            mov eax, dword [0x04000067] 	       101	p-typeprint.c	FUNCTION_2	CALL_4
0x4000067	            0x85c0	                           test eax, eax	       101	p-typeprint.c	FUNCTION_2	CALL_4
0x4000069	            0x753d	                           jne 0x40000a8	       101	p-typeprint.c	FUNCTION_2	CALL_4
0x400006b	        0x498b1424	                    mov rdx, qword [r12]	       101	p-typeprint.c	FUNCTION_2	CALL_4
0x400006f	          0x4889df	                            mov rdi, rbx	       101	p-typeprint.c	FUNCTION_2	CALL_4
0x4000072	            0x31c0	                            xor eax, eax	       101	p-typeprint.c	FUNCTION_2	CALL_4
0x4000074	      0xbe00000000	                              mov esi, 0	       101	p-typeprint.c	FUNCTION_2	CALL_4
0x4000079	      0xe800000000	                          call 0x400007e	       101	p-typeprint.c	FUNCTION_2	CALL_4
0x400007e	          0x4889ef	                            mov rdi, rbp	       102	p-typeprint.c	FUNCTION_2	CALL_5
0x4000081	          0x4889da	                            mov rdx, rbx	       102	p-typeprint.c	FUNCTION_2	CALL_5
0x4000084	      0xbe00000000	                              mov esi, 0	       102	p-typeprint.c	FUNCTION_2	CALL_5
0x4000089	            0x31c9	                            xor ecx, ecx	       102	p-typeprint.c	FUNCTION_2	CALL_5
0x400008b	      0xe800000000	                          call 0x4000090	       102	p-typeprint.c	FUNCTION_2	CALL_5
0x4000090	          0x4889df	                            mov rdi, rbx	       103	p-typeprint.c	FUNCTION_2	CALL_6
0x4000093	      0xbe00000000	                              mov esi, 0	       103	p-typeprint.c	FUNCTION_2	CALL_6
0x4000098	            0x31c0	                            xor eax, eax	       103	p-typeprint.c	FUNCTION_2	CALL_6
0x400009a	              0x5b	                                 pop rbx	       104	p-typeprint.c	FUNCTION_2
0x400009b	              0x5d	                                 pop rbp	       104	p-typeprint.c	FUNCTION_2
0x400009c	            0x415c	                                 pop r12	       104	p-typeprint.c	FUNCTION_2
0x400009e	      0xe900000000	                           jmp 0x40000a3	       103	p-typeprint.c	FUNCTION_2	CALL_6
0x40000a3	       0xf1f440000	                   nop dword [rax + rax]	       103	p-typeprint.c	FUNCTION_2	CALL_6
0x40000a8	          0x4c89e7	                            mov rdi, r12	       101	p-typeprint.c	FUNCTION_2	CALL_4
0x40000ab	      0xe800000000	                          call 0x40000b0	       101	p-typeprint.c	FUNCTION_2	CALL_4
0x40000b0	          0x4889c2	                            mov rdx, rax	       101	p-typeprint.c	FUNCTION_2	CALL_4
0x40000b3	            0xebba	                           jmp 0x400006f	       101	p-typeprint.c	FUNCTION_2	CALL_4
pascal_type_print_base	IF,41:WHILE,0:DO,0:functions,0:CALL,148:ELSE,12:SWITCH,1:FOR,4	824
0x4000220	            0x4157	                                push r15	       459	p-typeprint.c	FUNCTION_9
0x4000222	            0x4156	                                push r14	       459	p-typeprint.c	FUNCTION_9
0x4000224	          0x4989f7	                            mov r15, rsi	       459	p-typeprint.c	FUNCTION_9
0x4000227	            0x4155	                                push r13	       459	p-typeprint.c	FUNCTION_9
0x4000229	            0x4154	                                push r12	       459	p-typeprint.c	FUNCTION_9
0x400022b	              0x55	                                push rbp	       459	p-typeprint.c	FUNCTION_9
0x400022c	              0x53	                                push rbx	       459	p-typeprint.c	FUNCTION_9
0x400022d	            0x89d5	                            mov ebp, edx	       459	p-typeprint.c	FUNCTION_9
0x400022f	          0x4889fb	                            mov rbx, rdi	       459	p-typeprint.c	FUNCTION_9
0x4000232	        0x4883ec48	                           sub rsp, 0x48	       459	p-typeprint.c	FUNCTION_9
0x4000236	        0x894c2438	             mov dword [rsp + 0x38], ecx	       459	p-typeprint.c	FUNCTION_9
0x400023a	      0x4c89442408	                 mov qword [rsp + 8], r8	       459	p-typeprint.c	FUNCTION_9
0x400023f	      0xe800000000	                          call 0x4000244	       469	p-typeprint.c	FUNCTION_9
0x4000244	      0xbf00000000	                              mov edi, 0	       470	p-typeprint.c	FUNCTION_9	CALL_1
0x4000249	      0xe800000000	                          call 0x400024e	       470	p-typeprint.c	FUNCTION_9	CALL_1
0x400024e	          0x4885db	                           test rbx, rbx	       471	p-typeprint.c	FUNCTION_9	IF_1
0x4000251	     0xf84d50b0000	                            je 0x4000e2c	       471	p-typeprint.c	FUNCTION_9	IF_1
0x4000257	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       478	p-typeprint.c	FUNCTION_9	IF_2	CALL_3
0x400025b	          0x803801	                       cmp byte [rax], 1	       478	p-typeprint.c	FUNCTION_9	IF_2	CALL_3
0x400025e	            0x7468	                            je 0x40002c8	       478	p-typeprint.c	FUNCTION_9	IF_2	CALL_3
0x4000260	            0x85ed	                           test ebp, ebp	       488	p-typeprint.c	FUNCTION_9	IF_3
0x4000262	            0x7e2c	                           jle 0x4000290	       488	p-typeprint.c	FUNCTION_9	IF_3
0x4000264	          0x4889df	                            mov rdi, rbx	       495	p-typeprint.c	FUNCTION_9	CALL_12
0x4000267	      0xe800000000	                          call 0x400026c	       495	p-typeprint.c	FUNCTION_9	CALL_12
0x400026c	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       497	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_13
0x4000270	           0xfb60a	                   movzx ecx, byte [rdx]	       497	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_13
0x4000273	          0x80f917	                            cmp cl, 0x17	       497	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_13
0x4000276	     0xf8760040000	                            ja 0x40006dc	       497	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_13
0x400027c	           0xfb6f1	                           movzx esi, cl	       497	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_13
0x400027f	    0xff24f5000000	                       jmp qword [rsi*8]	       497	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_13
0x4000286	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       497	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_13
0x4000290	        0x488b7808	                mov rdi, qword [rax + 8]	       489	p-typeprint.c	FUNCTION_9	IF_3	CALL_9
0x4000294	          0x4885ff	                           test rdi, rdi	       489	p-typeprint.c	FUNCTION_9	IF_3	CALL_9
0x4000297	            0x74cb	                            je 0x4000264	       489	p-typeprint.c	FUNCTION_9	IF_3	CALL_9
0x4000299	      0xe94b040000	                           jmp 0x40006e9	       489	p-typeprint.c	FUNCTION_9	IF_3	CALL_9
0x400029e	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       553	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_7	IF_8	CALL_31
0x40002a2	      0xbe00000000	                              mov esi, 0	       554	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_7	CALL_32
0x40002a7	      0x4883780800	                  cmp qword [rax + 8], 0	       553	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_7	IF_8	CALL_31
0x40002ac	     0xf843a010000	                            je 0x40003ec	       553	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_7	IF_8	CALL_31
0x40002b2	        0x4883c448	                           add rsp, 0x48	       835	p-typeprint.c	FUNCTION_9
0x40002b6	              0x5b	                                 pop rbx	       835	p-typeprint.c	FUNCTION_9
0x40002b7	              0x5d	                                 pop rbp	       835	p-typeprint.c	FUNCTION_9
0x40002b8	            0x415c	                                 pop r12	       835	p-typeprint.c	FUNCTION_9
0x40002ba	            0x415d	                                 pop r13	       835	p-typeprint.c	FUNCTION_9
0x40002bc	            0x415e	                                 pop r14	       835	p-typeprint.c	FUNCTION_9
0x40002be	            0x415f	                                 pop r15	       835	p-typeprint.c	FUNCTION_9
0x40002c0	              0xc3	                                     ret	       835	p-typeprint.c	FUNCTION_9
0x40002c1	     0xf1f80000000	                         nop dword [rax]	       835	p-typeprint.c	FUNCTION_9
0x40002c8	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       479	p-typeprint.c	FUNCTION_9	IF_2	CALL_5
0x40002cc	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	       479	p-typeprint.c	FUNCTION_9	IF_2	CALL_5
0x40002d0	          0x803a0a	                     cmp byte [rdx], 0xa	       479	p-typeprint.c	FUNCTION_9	IF_2	CALL_5
0x40002d3	            0x758b	                           jne 0x4000260	       479	p-typeprint.c	FUNCTION_9	IF_2	CALL_5
0x40002d5	        0x488b7808	                mov rdi, qword [rax + 8]	       481	p-typeprint.c	FUNCTION_9	IF_2	CALL_8
0x40002d9	      0xb800000000	                              mov eax, 0	       481	p-typeprint.c	FUNCTION_9	IF_2	CALL_8
0x40002de	          0x4885ff	                           test rdi, rdi	       481	p-typeprint.c	FUNCTION_9	IF_2	CALL_8
0x40002e1	        0x480f44f8	                          cmove rdi, rax	       481	p-typeprint.c	FUNCTION_9	IF_2	CALL_8
0x40002e5	      0xe9ff030000	                           jmp 0x40006e9	       481	p-typeprint.c	FUNCTION_9	IF_2	CALL_8
0x40002ea	    0x660f1f440000	                    nop word [rax + rax]	       481	p-typeprint.c	FUNCTION_9	IF_2	CALL_8
0x40002f0	        0x488b7a08	                mov rdi, qword [rdx + 8]	       743	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_34	CALL_109
0x40002f4	          0x4989c6	                            mov r14, rax	       743	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_34	CALL_109
0x40002f7	          0x4885ff	                           test rdi, rdi	       743	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_34	CALL_109
0x40002fa	     0xf84f1030000	                            je 0x40006f1	       743	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_34	CALL_109
0x4000300	          0x4c89fe	                            mov rsi, r15	       745	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_34	CALL_111
0x4000303	      0xe800000000	                          call 0x4000308	       745	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_34	CALL_111
0x4000308	            0x85ed	                           test ebp, ebp	       746	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_34	IF_35
0x400030a	     0xf8ee1030000	                           jle 0x40006f1	       746	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_34	IF_35
0x4000310	          0x4c89fe	                            mov rsi, r15	       747	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_34	CALL_112
0x4000313	      0xbf00000000	                              mov edi, 0	       747	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_34	CALL_112
0x4000318	      0xe800000000	                          call 0x400031d	       747	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_34	CALL_112
0x400031d	          0x4c89ff	                            mov rdi, r15	       751	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_113
0x4000320	      0xbe00000000	                              mov esi, 0	       751	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_113
0x4000325	            0x31c0	                            xor eax, eax	       751	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_113
0x4000327	      0xe800000000	                          call 0x400032c	       751	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_113
0x400032c	      0xbf00000000	                              mov edi, 0	       752	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_114
0x4000331	      0xe800000000	                          call 0x4000336	       752	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_114
0x4000336	            0x31c0	                            xor eax, eax	       761	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	CALL_118
0x4000338	      0xbe00000000	                              mov esi, 0	       761	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	CALL_118
0x400033d	          0x4c89ff	                            mov rdi, r15	       761	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	CALL_118
0x4000340	      0xe800000000	                          call 0x4000345	       761	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	CALL_118
0x4000345	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       762	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	CALL_119
0x4000349	      0x440fbf6804	              movsx r13d, word [rax + 4]	       762	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	CALL_119
0x400034e	          0x4585ed	                         test r13d, r13d	       764	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4
0x4000351	     0xf8e89000000	                           jle 0x40003e0	       764	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4
0x4000357	      0xe800000000	                          call 0x400035c	       766	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4
0x400035c	            0x31db	                            xor ebx, ebx	       766	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4
0x400035e	          0x4531e4	                          xor r12d, r12d	       766	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4
0x4000361	            0x31ed	                            xor ebp, ebp	       766	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4
0x4000363	            0xeb1b	                           jmp 0x4000380	       766	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4
0x4000365	           0xf1f00	                         nop dword [rax]	       766	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4
0x4000368	      0xe800000000	                          call 0x400036d	       766	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4
0x400036d	        0x4883c320	                           add rbx, 0x20	       766	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4
0x4000371	      0xbe00000000	                              mov esi, 0	       768	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	CALL_120
0x4000376	          0x4c89ff	                            mov rdi, r15	       768	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	CALL_120
0x4000379	            0x31c0	                            xor eax, eax	       768	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	CALL_120
0x400037b	      0xe800000000	                          call 0x4000380	       768	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	CALL_120
0x4000380	      0xbf00000000	                              mov edi, 0	       769	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	CALL_121
0x4000385	      0xe800000000	                          call 0x400038a	       769	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	CALL_121
0x400038a	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       770	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	CALL_123
0x400038e	          0x4c89fe	                            mov rsi, r15	       770	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	CALL_123
0x4000391	        0x488b4020	            mov rax, qword [rax + 0x20] 	       770	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	CALL_123
0x4000395	      0x488b7c1818	      mov rdi, qword [rax + rbx + 0x18] 	       770	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	CALL_123
0x400039a	      0xe800000000	                          call 0x400039f	       770	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	CALL_123
0x400039f	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       771	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	IF_40	CALL_124
0x40003a3	        0x488b4020	            mov rax, qword [rax + 0x20] 	       771	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	IF_40	CALL_124
0x40003a7	        0x488b3c18	              mov rdi, qword [rax + rbx]	       771	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	IF_40	CALL_124
0x40003ab	          0x4839ef	                            cmp rdi, rbp	       771	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	IF_40	CALL_124
0x40003ae	            0x7423	                            je 0x40003d3	       771	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	IF_40	CALL_124
0x40003b0	      0xe800000000	                          call 0x40003b5	       773	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	IF_40	CALL_125
0x40003b5	      0xbe00000000	                              mov esi, 0	       775	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	IF_40	CALL_127
0x40003ba	          0x4889c2	                            mov rdx, rax	       775	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	IF_40	CALL_127
0x40003bd	          0x4c89ff	                            mov rdi, r15	       775	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	IF_40	CALL_127
0x40003c0	            0x31c0	                            xor eax, eax	       775	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	IF_40	CALL_127
0x40003c2	      0xe800000000	                          call 0x40003c7	       775	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	IF_40	CALL_127
0x40003c7	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       776	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	IF_40	CALL_128
0x40003cb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       776	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	IF_40	CALL_128
0x40003cf	        0x488b2c18	              mov rbp, qword [rax + rbx]	       776	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4	IF_40	CALL_128
0x40003d3	        0x4183c401	                             add r12d, 1	       764	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4
0x40003d7	        0x4883c501	                              add rbp, 1	       778	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4
0x40003db	          0x4539e5	                          cmp r13d, r12d	       764	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4
0x40003de	            0x7588	                           jne 0x4000368	       764	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	FOR_4
0x40003e0	      0xbe00000000	                              mov esi, 0	       780	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	CALL_129
0x40003e5	            0xeb05	                           jmp 0x40003ec	       780	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	CALL_129
0x40003e7	      0xbe00000000	                              mov esi, 0	       785	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_130
0x40003ec	        0x4883c448	                           add rsp, 0x48	       835	p-typeprint.c	FUNCTION_9
0x40003f0	          0x4c89ff	                            mov rdi, r15	       757	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_36	CALL_116
0x40003f3	            0x31c0	                            xor eax, eax	       757	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_36	CALL_116
0x40003f5	              0x5b	                                 pop rbx	       835	p-typeprint.c	FUNCTION_9
0x40003f6	              0x5d	                                 pop rbp	       835	p-typeprint.c	FUNCTION_9
0x40003f7	            0x415c	                                 pop r12	       835	p-typeprint.c	FUNCTION_9
0x40003f9	            0x415d	                                 pop r13	       835	p-typeprint.c	FUNCTION_9
0x40003fb	            0x415e	                                 pop r14	       835	p-typeprint.c	FUNCTION_9
0x40003fd	            0x415f	                                 pop r15	       835	p-typeprint.c	FUNCTION_9
0x40003ff	      0xe900000000	                           jmp 0x4000404	       757	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_36	CALL_116
0x4000404	          0x4989c6	                            mov r14, rax	       757	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_36	CALL_116
0x4000407	          0x4c89fe	                            mov rsi, r15	       808	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_140
0x400040a	      0xbf00000000	                              mov edi, 0	       808	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_140
0x400040f	      0xe800000000	                          call 0x4000414	       808	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_140
0x4000414	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       809	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_142
0x4000418	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       810	p-typeprint.c	FUNCTION_9	SWITCH_1
0x400041d	          0x8d4dff	                      lea ecx, [rbp - 1]	       810	p-typeprint.c	FUNCTION_9	SWITCH_1
0x4000420	      0x448b442438	            mov r8d, dword [rsp + 0x38] 	       810	p-typeprint.c	FUNCTION_9	SWITCH_1
0x4000425	          0x4c89fa	                            mov rdx, r15	       810	p-typeprint.c	FUNCTION_9	SWITCH_1
0x4000428	      0xbe00000000	                              mov esi, 0	       810	p-typeprint.c	FUNCTION_9	SWITCH_1
0x400042d	        0x488b4020	            mov rax, qword [rax + 0x20] 	       809	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_142
0x4000431	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       810	p-typeprint.c	FUNCTION_9	SWITCH_1
0x4000435	        0x4883c448	                           add rsp, 0x48	       835	p-typeprint.c	FUNCTION_9
0x4000439	              0x5b	                                 pop rbx	       835	p-typeprint.c	FUNCTION_9
0x400043a	              0x5d	                                 pop rbp	       835	p-typeprint.c	FUNCTION_9
0x400043b	            0x415c	                                 pop r12	       835	p-typeprint.c	FUNCTION_9
0x400043d	            0x415d	                                 pop r13	       835	p-typeprint.c	FUNCTION_9
0x400043f	            0x415e	                                 pop r14	       835	p-typeprint.c	FUNCTION_9
0x4000441	            0x415f	                                 pop r15	       835	p-typeprint.c	FUNCTION_9
0x4000443	      0xe9680f0000	jmp sym.pascal_print_type_type__charconst__ui_file__int_int_type_print_optionsconst	       810	p-typeprint.c	FUNCTION_9	SWITCH_1
0x4000448	          0x4989c6	                            mov r14, rax	       810	p-typeprint.c	FUNCTION_9	SWITCH_1
0x400044b	        0x488b4220	            mov rax, qword [rdx + 0x20] 	       801	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_136
0x400044f	        0x488b5a18	            mov rbx, qword [rdx + 0x18] 	       799	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_134
0x4000453	          0x4c89fa	                            mov rdx, r15	       801	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_136
0x4000456	        0x488b7008	                mov rsi, qword [rax + 8]	       801	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_136
0x400045a	          0x4889df	                            mov rdi, rbx	       801	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_136
0x400045d	      0xe800000000	                          call 0x4000462	       801	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_136
0x4000462	          0x4c89fe	                            mov rsi, r15	       802	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_137
0x4000465	      0xbf00000000	                              mov edi, 0	       802	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_137
0x400046a	      0xe800000000	                          call 0x400046f	       802	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_137
0x400046f	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       803	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_139
0x4000473	          0x4c89fa	                            mov rdx, r15	       803	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_139
0x4000476	          0x4889df	                            mov rdi, rbx	       803	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_139
0x4000479	        0x488b4020	            mov rax, qword [rax + 0x20] 	       803	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_139
0x400047d	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       803	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_139
0x4000481	        0x4883c448	                           add rsp, 0x48	       835	p-typeprint.c	FUNCTION_9
0x4000485	              0x5b	                                 pop rbx	       835	p-typeprint.c	FUNCTION_9
0x4000486	              0x5d	                                 pop rbp	       835	p-typeprint.c	FUNCTION_9
0x4000487	            0x415c	                                 pop r12	       835	p-typeprint.c	FUNCTION_9
0x4000489	            0x415d	                                 pop r13	       835	p-typeprint.c	FUNCTION_9
0x400048b	            0x415e	                                 pop r14	       835	p-typeprint.c	FUNCTION_9
0x400048d	            0x415f	                                 pop r15	       835	p-typeprint.c	FUNCTION_9
0x400048f	      0xe900000000	                           jmp 0x4000494	       803	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_139
0x4000494	          0x4c89fe	                            mov rsi, r15	       814	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_143
0x4000497	      0xbf00000000	                              mov edi, 0	       814	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_143
0x400049c	        0x4883c448	                           add rsp, 0x48	       835	p-typeprint.c	FUNCTION_9
0x40004a0	              0x5b	                                 pop rbx	       835	p-typeprint.c	FUNCTION_9
0x40004a1	              0x5d	                                 pop rbp	       835	p-typeprint.c	FUNCTION_9
0x40004a2	            0x415c	                                 pop r12	       835	p-typeprint.c	FUNCTION_9
0x40004a4	            0x415d	                                 pop r13	       835	p-typeprint.c	FUNCTION_9
0x40004a6	            0x415e	                                 pop r14	       835	p-typeprint.c	FUNCTION_9
0x40004a8	            0x415f	                                 pop r15	       835	p-typeprint.c	FUNCTION_9
0x40004aa	      0xe900000000	                           jmp 0x40004af	       482	p-typeprint.c	FUNCTION_9	IF_2
0x40004af	        0x488b5208	                mov rdx, qword [rdx + 8]	       793	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_133
0x40004b3	          0x4885d2	                           test rdx, rdx	       793	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_133
0x40004b6	     0xf849d090000	                            je 0x4000e59	       793	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_133
0x40004bc	        0x4883c448	                           add rsp, 0x48	       835	p-typeprint.c	FUNCTION_9
0x40004c0	          0x4c89ff	                            mov rdi, r15	       793	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_133
0x40004c3	      0xbe00000000	                              mov esi, 0	       793	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_133
0x40004c8	              0x5b	                                 pop rbx	       835	p-typeprint.c	FUNCTION_9
0x40004c9	              0x5d	                                 pop rbp	       835	p-typeprint.c	FUNCTION_9
0x40004ca	            0x415c	                                 pop r12	       835	p-typeprint.c	FUNCTION_9
0x40004cc	            0x415d	                                 pop r13	       835	p-typeprint.c	FUNCTION_9
0x40004ce	            0x415e	                                 pop r14	       835	p-typeprint.c	FUNCTION_9
0x40004d0	            0x415f	                                 pop r15	       835	p-typeprint.c	FUNCTION_9
0x40004d2	            0x31c0	                            xor eax, eax	       793	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_133
0x40004d4	      0xe900000000	                           jmp 0x40004d9	       793	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_133
0x40004d9	      0xbe00000000	                              mov esi, 0	       789	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_131
0x40004de	      0xe909ffffff	                           jmp 0x40003ec	       789	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_131
0x40004e3	        0x488b5a18	            mov rbx, qword [rdx + 0x18] 	       504	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_15
0x40004e7	      0xe953fdffff	                           jmp 0x400023f	       506	p-typeprint.c	FUNCTION_9	SWITCH_1
0x40004ec	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	       515	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_17
0x40004f0	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       515	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_17
0x40004f5	          0x4531c0	                            xor r8d, r8d	       515	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_17
0x40004f8	            0x31c9	                            xor ecx, ecx	       515	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_17
0x40004fa	          0x4c89fa	                            mov rdx, r15	       515	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_17
0x40004fd	            0x31f6	                            xor esi, esi	       515	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_17
0x40004ff	      0xe931ffffff	                           jmp 0x4000435	       515	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_17
0x4000504	        0x488b7a08	                mov rdi, qword [rdx + 8]	       525	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_4	CALL_18
0x4000508	          0x4989c6	                            mov r14, rax	       525	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_4	CALL_18
0x400050b	          0x4885ff	                           test rdi, rdi	       525	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_4	CALL_18
0x400050e	            0x7419	                            je 0x4000529	       525	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_4	CALL_18
0x4000510	          0x4c89fe	                            mov rsi, r15	       527	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_4	CALL_20
0x4000513	      0xe800000000	                          call 0x4000518	       527	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_4	CALL_20
0x4000518	          0x4c89fe	                            mov rsi, r15	       528	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_4	CALL_21
0x400051b	      0xbf00000000	                              mov edi, 0	       528	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_4	CALL_21
0x4000520	      0xe800000000	                          call 0x4000525	       528	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_4	CALL_21
0x4000525	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       528	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_4	CALL_21
0x4000529	         0xfb64203	               movzx eax, byte [rdx + 3]	       530	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_5	CALL_22
0x400052d	          0x83e007	                              and eax, 7	       530	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_5	CALL_22
0x4000530	            0x3c01	                               cmp al, 1	       530	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_5	CALL_22
0x4000532	     0xf845e070000	                            je 0x4000c96	       530	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_5	CALL_22
0x4000538	      0xbe00000000	                              mov esi, 0	       536	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_1	CALL_24
0x400053d	          0x4c89ff	                            mov rdi, r15	       536	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_1	CALL_24
0x4000540	            0x31c0	                            xor eax, eax	       536	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_1	CALL_24
0x4000542	      0xe800000000	                          call 0x4000547	       536	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_1	CALL_24
0x4000547	            0xeb30	                           jmp 0x4000579	       536	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_1	CALL_24
0x4000549	        0x488b7a08	                mov rdi, qword [rdx + 8]	       541	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_6	CALL_25
0x400054d	          0x4989c6	                            mov r14, rax	       541	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_6	CALL_25
0x4000550	          0x4885ff	                           test rdi, rdi	       541	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_6	CALL_25
0x4000553	            0x7415	                            je 0x400056a	       541	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_6	CALL_25
0x4000555	          0x4c89fe	                            mov rsi, r15	       543	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_6	CALL_27
0x4000558	      0xe800000000	                          call 0x400055d	       543	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_6	CALL_27
0x400055d	          0x4c89fe	                            mov rsi, r15	       544	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_6	CALL_28
0x4000560	      0xbf00000000	                              mov edi, 0	       544	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_6	CALL_28
0x4000565	      0xe800000000	                          call 0x400056a	       544	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_6	CALL_28
0x400056a	      0xbe00000000	                              mov esi, 0	       546	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_29
0x400056f	          0x4c89ff	                            mov rdi, r15	       546	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_29
0x4000572	            0x31c0	                            xor eax, eax	       546	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_29
0x4000574	      0xe800000000	                          call 0x4000579	       546	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_29
0x4000579	      0xbf00000000	                              mov edi, 0	       549	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_30
0x400057e	      0xe800000000	                          call 0x4000583	       549	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_30
0x4000583	            0x85ed	                           test ebp, ebp	       550	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_7
0x4000585	     0xf8813fdffff	                            js 0x400029e	       550	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_7
0x400058b	        0x498b4e28	            mov rcx, qword [r14 + 0x28] 	       550	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_7
0x400058f	            0x750b	                           jne 0x400059c	       556	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_33
0x4000591	      0x4883790800	                  cmp qword [rcx + 8], 0	       556	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_33
0x4000596	     0xf8516fdffff	                           jne 0x40002b2	       556	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_33
0x400059c	            0x31db	                            xor ebx, ebx	       481	p-typeprint.c	FUNCTION_9	IF_2	CALL_8
0x400059e	    0x4c8b25000000	            mov r12, qword [0x040005a5] 	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x40005a5	      0xe912010000	                           jmp 0x40006bc	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x40005aa	    0x660f1f440000	                    nop word [rax + rax]	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x40005b0	           0xfbf02	                   movsx eax, word [rdx]	       136	p-typeprint.c	FUNCTION_3	FOR_1	CALL_1
0x40005b3	          0x4439e8	                           cmp eax, r13d	       136	p-typeprint.c	FUNCTION_3	FOR_1	CALL_1
0x40005b6	     0xf8ee1010000	                           jle 0x400079d	       136	p-typeprint.c	FUNCTION_3	FOR_1	CALL_1
0x40005bc	          0x4585ed	                         test r13d, r13d	       138	p-typeprint.c	FUNCTION_3	FOR_1	CALL_2
0x40005bf	      0xb800000000	                              mov eax, 0	       138	p-typeprint.c	FUNCTION_3	FOR_1	CALL_2
0x40005c4	      0xbf00000000	                              mov edi, 0	       138	p-typeprint.c	FUNCTION_3	FOR_1	CALL_2
0x40005c9	        0x480f45f8	                         cmovne rdi, rax	       138	p-typeprint.c	FUNCTION_3	FOR_1	CALL_2
0x40005cd	          0x4c89fe	                            mov rsi, r15	       138	p-typeprint.c	FUNCTION_3	FOR_1	CALL_2
0x40005d0	      0xe800000000	                          call 0x40005d5	       138	p-typeprint.c	FUNCTION_3	FOR_1	CALL_2
0x40005d5	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x40005d9	         0xfb64203	               movzx eax, byte [rdx + 3]	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x40005dd	          0x83e007	                              and eax, 7	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x40005e0	            0x3c01	                               cmp al, 1	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x40005e2	     0xf8448010000	                            je 0x4000730	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x40005e8	          0x4d85e4	                           test r12, r12	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x40005eb	      0xb900000000	                              mov ecx, 0	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x40005f0	            0x7425	                            je 0x4000617	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x40005f2	          0x4489e8	                           mov eax, r13d	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x40005f5	          0x4489e9	                           mov ecx, r13d	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x40005f8	          0xc1f803	                              sar eax, 3	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x40005fb	          0x83e107	                              and ecx, 7	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x40005fe	            0x4898	                                    cdqe	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x4000600	      0x410fb60404	             movzx eax, byte [r12 + rax]	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x4000605	            0xd3f8	                             sar eax, cl	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x4000607	      0xb900000000	                              mov ecx, 0	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x400060c	            0xa801	                              test al, 1	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x400060e	      0xb800000000	                              mov eax, 0	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x4000613	        0x480f44c8	                          cmove rcx, rax	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x4000617	    0x48833d000000	               cmp qword [0x0400061f], 0	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x400061f	            0x741e	                            je 0x400063f	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x4000621	          0x4489e8	                           mov eax, r13d	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x4000624	    0x488b15000000	            mov rdx, qword [0x0400062b] 	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x400062b	          0xc1f803	                              sar eax, 3	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x400062e	            0x4898	                                    cdqe	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x4000630	         0xfb61402	             movzx edx, byte [rdx + rax]	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x4000634	          0x4489e8	                           mov eax, r13d	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x4000637	          0x83e007	                              and eax, 7	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x400063a	           0xfa3c2	                             bt edx, eax	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x400063d	            0x722b	                            jb 0x400066a	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x400063f	    0x488b15000000	            mov rdx, qword [0x04000646] 	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x4000646	          0x4885d2	                           test rdx, rdx	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x4000649	     0xf8444010000	                            je 0x4000793	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x400064f	          0x4489e8	                           mov eax, r13d	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x4000652	        0x4183e507	                             and r13d, 7	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x4000656	          0xc1f803	                              sar eax, 3	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x4000659	            0x4898	                                    cdqe	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x400065b	         0xfb60402	             movzx eax, byte [rdx + rax]	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x400065f	      0xba00000000	                              mov edx, 0	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x4000664	        0x440fa3e8	                            bt eax, r13d	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x4000668	            0x7305	                           jae 0x400066f	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x400066a	      0xba00000000	                              mov edx, 0	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x400066f	            0x31c0	                            xor eax, eax	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x4000671	      0xbe00000000	                              mov esi, 0	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x4000676	          0x4c89ff	                            mov rdi, r15	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x4000679	      0xe800000000	                          call 0x400067e	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x400067e	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       142	p-typeprint.c	FUNCTION_3	FOR_1	CALL_7
0x4000682	          0x4889d8	                            mov rax, rbx	       142	p-typeprint.c	FUNCTION_3	FOR_1	CALL_7
0x4000685	      0xbe00000000	                              mov esi, 0	       143	p-typeprint.c	FUNCTION_3	FOR_1	CALL_8
0x400068a	        0x48c1e005	                              shl rax, 5	       142	p-typeprint.c	FUNCTION_3	FOR_1	CALL_7
0x400068e	          0x4c89ff	                            mov rdi, r15	       143	p-typeprint.c	FUNCTION_3	FOR_1	CALL_8
0x4000691	        0x48034220	             add rax, qword [rdx + 0x20]	       142	p-typeprint.c	FUNCTION_3	FOR_1	CALL_7
0x4000695	      0xba00000000	                              mov edx, 0	       143	p-typeprint.c	FUNCTION_3	FOR_1	CALL_8
0x400069a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       142	p-typeprint.c	FUNCTION_3	FOR_1	CALL_7
0x400069e	        0x488b4028	            mov rax, qword [rax + 0x28] 	       142	p-typeprint.c	FUNCTION_3	FOR_1	CALL_7
0x40006a2	        0x488b4008	                mov rax, qword [rax + 8]	       142	p-typeprint.c	FUNCTION_3	FOR_1	CALL_7
0x40006a6	          0x4885c0	                           test rax, rax	       143	p-typeprint.c	FUNCTION_3	FOR_1	CALL_8
0x40006a9	        0x480f45d0	                         cmovne rdx, rax	       143	p-typeprint.c	FUNCTION_3	FOR_1	CALL_8
0x40006ad	            0x31c0	                            xor eax, eax	       143	p-typeprint.c	FUNCTION_3	FOR_1	CALL_8
0x40006af	        0x4883c301	                              add rbx, 1	       143	p-typeprint.c	FUNCTION_3	FOR_1	CALL_8
0x40006b3	      0xe800000000	                          call 0x40006b8	       143	p-typeprint.c	FUNCTION_3	FOR_1	CALL_8
0x40006b8	        0x498b4e28	            mov rcx, qword [r14 + 0x28] 	       143	p-typeprint.c	FUNCTION_3	FOR_1	CALL_8
0x40006bc	         0xfb64103	               movzx eax, byte [rcx + 3]	       136	p-typeprint.c	FUNCTION_3	FOR_1	CALL_1
0x40006c0	          0x4189dd	                           mov r13d, ebx	       136	p-typeprint.c	FUNCTION_3	FOR_1	CALL_1
0x40006c3	      0xba00000000	                              mov edx, 0	       136	p-typeprint.c	FUNCTION_3	FOR_1	CALL_1
0x40006c8	          0x83e007	                              and eax, 7	       136	p-typeprint.c	FUNCTION_3	FOR_1	CALL_1
0x40006cb	            0x3c01	                               cmp al, 1	       136	p-typeprint.c	FUNCTION_3	FOR_1	CALL_1
0x40006cd	     0xf85ddfeffff	                           jne 0x40005b0	       136	p-typeprint.c	FUNCTION_3	FOR_1	CALL_1
0x40006d3	        0x488b5128	            mov rdx, qword [rcx + 0x28] 	       136	p-typeprint.c	FUNCTION_3	FOR_1	CALL_1
0x40006d7	      0xe9d4feffff	                           jmp 0x40005b0	       136	p-typeprint.c	FUNCTION_3	FOR_1	CALL_1
0x40006dc	        0x488b7a08	                mov rdi, qword [rdx + 8]	       822	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_41	CALL_144
0x40006e0	          0x4885ff	                           test rdi, rdi	       822	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_41	CALL_144
0x40006e3	     0xf8450070000	                            je 0x4000e39	       822	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_41	CALL_144
0x40006e9	          0x4c89fe	                            mov rsi, r15	       482	p-typeprint.c	FUNCTION_9	IF_2
0x40006ec	      0xe9abfdffff	                           jmp 0x400049c	       482	p-typeprint.c	FUNCTION_9	IF_2
0x40006f1	            0x31c0	                            xor eax, eax	       751	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_113
0x40006f3	      0xbe00000000	                              mov esi, 0	       751	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_113
0x40006f8	          0x4c89ff	                            mov rdi, r15	       751	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_113
0x40006fb	      0xe800000000	                          call 0x4000700	       751	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_113
0x4000700	      0xbf00000000	                              mov edi, 0	       752	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_114
0x4000705	      0xe800000000	                          call 0x400070a	       752	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_114
0x400070a	            0x85ed	                           test ebp, ebp	       753	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_36
0x400070c	     0xf88a6050000	                            js 0x4000cb8	       753	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_36
0x4000712	     0xf851efcffff	                           jne 0x4000336	       759	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	CALL_117
0x4000718	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       759	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	CALL_117
0x400071c	      0x4883780800	                  cmp qword [rax + 8], 0	       759	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	CALL_117
0x4000721	     0xf858bfbffff	                           jne 0x40002b2	       759	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	CALL_117
0x4000727	      0xe90afcffff	                           jmp 0x4000336	       759	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	CALL_117
0x400072c	         0xf1f4000	                         nop dword [rax]	       759	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_11	IF_38	CALL_117
0x4000730	        0x488b4228	            mov rax, qword [rdx + 0x28] 	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x4000734	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x4000738	          0x4885c9	                           test rcx, rcx	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x400073b	            0x741d	                            je 0x400075a	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x400073d	          0x4489ea	                           mov edx, r13d	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x4000740	          0xc1fa03	                              sar edx, 3	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x4000743	          0x4863d2	                         movsxd rdx, edx	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x4000746	         0xfb63411	             movzx esi, byte [rcx + rdx]	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x400074a	          0x4489ea	                           mov edx, r13d	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x400074d	      0xb900000000	                              mov ecx, 0	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x4000752	          0x83e207	                              and edx, 7	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x4000755	           0xfa3d6	                             bt esi, edx	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x4000758	            0x7205	                            jb 0x400075f	       141	p-typeprint.c	FUNCTION_3	FOR_1	CALL_5
0x400075a	      0xb900000000	                              mov ecx, 0	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x400075f	      0x4883782000	               cmp qword [rax + 0x20], 0	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x4000764	            0x7420	                            je 0x4000786	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x4000766	          0x4489ea	                           mov edx, r13d	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x4000769	        0x488b7020	            mov rsi, qword [rax + 0x20] 	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x400076d	          0xc1fa03	                              sar edx, 3	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x4000770	          0x4863d2	                         movsxd rdx, edx	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x4000773	         0xfb63416	             movzx esi, byte [rsi + rdx]	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x4000777	          0x4489ea	                           mov edx, r13d	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x400077a	          0x83e207	                              and edx, 7	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x400077d	           0xfa3d6	                             bt esi, edx	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x4000780	     0xf82e4feffff	                            jb 0x400066a	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x4000786	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x400078a	          0x4885d2	                           test rdx, rdx	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x400078d	     0xf85bcfeffff	                           jne 0x400064f	       140	p-typeprint.c	FUNCTION_3	FOR_1	CALL_4
0x4000793	      0xba00000000	                              mov edx, 0	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x4000798	      0xe9d2feffff	                           jmp 0x400066f	       139	p-typeprint.c	FUNCTION_3	FOR_1	CALL_3
0x400079d	          0x4585ed	                         test r13d, r13d	       145	p-typeprint.c	FUNCTION_3	IF_1
0x40007a0	            0x740d	                            je 0x40007af	       145	p-typeprint.c	FUNCTION_3	IF_1
0x40007a2	          0x4c89fe	                            mov rsi, r15	       147	p-typeprint.c	FUNCTION_3	IF_1	CALL_9
0x40007a5	      0xbf00000000	                              mov edi, 0	       147	p-typeprint.c	FUNCTION_3	IF_1	CALL_9
0x40007aa	      0xe800000000	                          call 0x40007af	       147	p-typeprint.c	FUNCTION_3	IF_1	CALL_9
0x40007af	            0x31c0	                            xor eax, eax	       560	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_35
0x40007b1	      0xbe00000000	                              mov esi, 0	       560	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_35
0x40007b6	          0x4c89ff	                            mov rdi, r15	       560	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_35
0x40007b9	      0xe800000000	                          call 0x40007be	       560	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_35
0x40007be	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       561	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_37
0x40007c2	      0x440fbf6804	              movsx r13d, word [rax + 4]	       561	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_37
0x40007c7	         0xfb65003	               movzx edx, byte [rax + 3]	       561	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_37
0x40007cb	          0x83e207	                              and edx, 7	       561	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_37
0x40007ce	        0x664585ed	                         test r13w, r13w	       561	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_37
0x40007d2	     0xf85f0010000	                           jne 0x40009c8	       561	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_37
0x40007d8	          0x80fa01	                               cmp dl, 1	       561	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_37
0x40007db	     0xf84a4010000	                            je 0x4000985	       561	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_37
0x40007e1	    0x66833d000000	                cmp word [0x040007e9], 0	       561	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_37
0x40007e9	     0xf84a8010000	                            je 0x4000997	       561	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_37
0x40007ef	          0x4531ed	                          xor r13d, r13d	       578	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_41
0x40007f2	      0xb900000000	                              mov ecx, 0	       579	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_42
0x40007f7	        0x440fbf21	                  movsx r12d, word [rcx]	       579	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_42
0x40007fb	          0x4539ec	                          cmp r12d, r13d	       579	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_42
0x40007fe	     0xf8d67060000	                           jge 0x4000e6b	       579	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_42
0x4000804	        0x8b442438	            mov eax, dword [rsp + 0x38] 	       619	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_53
0x4000808	          0x83ed01	                              sub ebp, 1	       624	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1
0x400080b	        0x490fbfdc	                         movsx rbx, r12w	       624	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1
0x400080f	        0x896c2410	             mov dword [rsp + 0x10], ebp	       614	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_5	IF_18	CALL_52
0x4000813	        0x48c1e305	                              shl rbx, 5	       614	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_5	IF_18	CALL_52
0x4000817	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	       579	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_42
0x400081f	          0x8d4804	                      lea ecx, [rax + 4]	       619	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_53
0x4000822	          0x83c002	                              add eax, 2	       614	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_5	IF_18	CALL_52
0x4000825	        0x89442418	             mov dword [rsp + 0x18], eax	       614	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_5	IF_18	CALL_52
0x4000829	            0x89cd	                            mov ebp, ecx	       614	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_5	IF_18	CALL_52
0x400082b	      0xe9b4000000	                           jmp 0x40008e4	       614	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_5	IF_18	CALL_52
0x4000830	         0xfb64203	               movzx eax, byte [rdx + 3]	       590	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	CALL_47
0x4000834	          0x83e007	                              and eax, 7	       590	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	CALL_47
0x4000837	            0x3c01	                               cmp al, 1	       590	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	CALL_47
0x4000839	     0xf84f1000000	                            je 0x4000930	       590	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	CALL_47
0x400083f	          0x4c89fe	                            mov rsi, r15	       619	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_53
0x4000842	            0x89ef	                            mov edi, ebp	       619	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_53
0x4000844	      0xe800000000	                          call 0x4000849	       619	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_53
0x4000849	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       620	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_19	CALL_55
0x400084d	          0x4889df	                            mov rdi, rbx	       620	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_19	CALL_55
0x4000850	        0x48037820	             add rdi, qword [rax + 0x20]	       620	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_19	CALL_55
0x4000854	      0xe800000000	                          call 0x4000859	       620	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_19	CALL_55
0x4000859	            0x85c0	                           test eax, eax	       620	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_19	CALL_55
0x400085b	     0xf857f010000	                           jne 0x40009e0	       620	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_19	CALL_55
0x4000861	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       623	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_59
0x4000865	          0x4889da	                            mov rdx, rbx	       623	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_59
0x4000868	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       624	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1
0x400086d	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	       624	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1
0x4000871	          0x4189e8	                            mov r8d, ebp	       624	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1
0x4000874	        0x48035020	             add rdx, qword [rax + 0x20]	       623	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_59
0x4000878	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	       624	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1
0x400087c	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	       624	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1
0x4000880	          0x4c89fa	                            mov rdx, r15	       624	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1
0x4000883	      0xe800000000	                          call 0x4000888	       624	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1
0x4000888	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       625	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_20	CALL_61
0x400088c	          0x4889df	                            mov rdi, rbx	       625	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_20	CALL_61
0x400088f	        0x48037820	             add rdi, qword [rax + 0x20]	       625	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_20	CALL_61
0x4000893	      0xe800000000	                          call 0x4000898	       625	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_20	CALL_61
0x4000898	            0x85c0	                           test eax, eax	       626	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_20	CALL_62
0x400089a	            0x7528	                           jne 0x40008c4	       626	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_20	CALL_62
0x400089c	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       626	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_20	CALL_62
0x40008a0	          0x4889da	                            mov rdx, rbx	       626	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_20	CALL_62
0x40008a3	        0x48035020	             add rdx, qword [rax + 0x20]	       626	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_20	CALL_62
0x40008a7	          0x8b5208	                mov edx, dword [rdx + 8]	       626	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_20	CALL_62
0x40008aa	    0xf7c2f0ffffff	                    test edx, 0xfffffff0	       626	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_20	CALL_62
0x40008b0	            0x7412	                            je 0x40008c4	       626	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_20	CALL_62
0x40008b2	          0xc1ea04	                              shr edx, 4	       634	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_20	CALL_64
0x40008b5	      0xbe00000000	                              mov esi, 0	       634	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_20	CALL_64
0x40008ba	          0x4c89ff	                            mov rdi, r15	       634	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_20	CALL_64
0x40008bd	            0x31c0	                            xor eax, eax	       634	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_20	CALL_64
0x40008bf	      0xe800000000	                          call 0x40008c4	       634	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_20	CALL_64
0x40008c4	      0xbe00000000	                              mov esi, 0	       636	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_65
0x40008c9	          0x4c89ff	                            mov rdi, r15	       636	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_65
0x40008cc	            0x31c0	                            xor eax, eax	       636	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_65
0x40008ce	      0xe800000000	                          call 0x40008d3	       636	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_65
0x40008d3	        0x4183c401	                             add r12d, 1	       579	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_42
0x40008d7	        0x4883c320	                           add rbx, 0x20	       579	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_42
0x40008db	          0x4539ec	                          cmp r12d, r13d	       579	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_42
0x40008de	     0xf8457010000	                            je 0x4000a3b	       579	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_42
0x40008e4	      0xe800000000	                          call 0x40008e9	       581	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1
0x40008e9	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       583	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_12	CALL_44
0x40008ed	      0xb905000000	                              mov ecx, 5	       109	common-utils.h	FUNCTION_11
0x40008f2	      0xbf00000000	                              mov edi, 0	       109	common-utils.h	FUNCTION_11
0x40008f7	        0x488b4220	            mov rax, qword [rdx + 0x20] 	       583	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_12	CALL_44
0x40008fb	      0x488b441818	      mov rax, qword [rax + rbx + 0x18] 	       583	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_12	CALL_44
0x4000900	          0x4889c6	                            mov rsi, rax	       109	common-utils.h	FUNCTION_11
0x4000903	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       584	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_12	CALL_46
0x4000905	     0xf8525ffffff	                           jne 0x4000830	       584	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_12	CALL_46
0x400090b	         0xfbe7805	               movsx edi, byte [rax + 5]	       584	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_12	CALL_46
0x400090f	      0xe800000000	                          call 0x4000914	       584	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_12	CALL_46
0x4000914	            0x85c0	                           test eax, eax	       584	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_12	CALL_46
0x4000916	            0x75bb	                           jne 0x40008d3	       584	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_12	CALL_46
0x4000918	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       584	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_12	CALL_46
0x400091c	         0xfb64203	               movzx eax, byte [rdx + 3]	       590	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	CALL_47
0x4000920	          0x83e007	                              and eax, 7	       590	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	CALL_47
0x4000923	            0x3c01	                               cmp al, 1	       590	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	CALL_47
0x4000925	     0xf8514ffffff	                           jne 0x400083f	       590	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	CALL_47
0x400092b	       0xf1f440000	                   nop dword [rax + rax]	       590	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	CALL_47
0x4000930	        0x488b4228	            mov rax, qword [rdx + 0x28] 	       590	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	CALL_47
0x4000934	    0x483d00000000	                              cmp rax, 0	       590	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	CALL_47
0x400093a	     0xf84fffeffff	                            je 0x400083f	       590	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	CALL_47
0x4000940	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       592	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	CALL_48
0x4000944	          0x4885c9	                           test rcx, rcx	       592	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	CALL_48
0x4000947	     0xf85a7000000	                           jne 0x40009f4	       592	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	CALL_48
0x400094d	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       601	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	CALL_50
0x4000951	          0x4885d2	                           test rdx, rdx	       601	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	CALL_50
0x4000954	     0xf8590030000	                           jne 0x4000cea	       601	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	CALL_50
0x400095a	      0x837c243c01	               cmp dword [rsp + 0x3c], 1	       611	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_5	IF_18
0x400095f	     0xf84dafeffff	                            je 0x400083f	       611	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_5	IF_18
0x4000965	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	       614	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_5	IF_18	CALL_52
0x4000969	      0xba00000000	                              mov edx, 0	       614	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_5	IF_18	CALL_52
0x400096e	          0x4c89fe	                            mov rsi, r15	       614	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_5	IF_18	CALL_52
0x4000971	            0x31c0	                            xor eax, eax	       614	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_5	IF_18	CALL_52
0x4000973	      0xe800000000	                          call 0x4000978	       614	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_5	IF_18	CALL_52
0x4000978	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	       613	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_5	IF_18
0x4000980	      0xe9bafeffff	                           jmp 0x400083f	       613	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_5	IF_18
0x4000985	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       561	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_37
0x4000989	          0x4531ed	                          xor r13d, r13d	       578	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_41
0x400098c	      0x6683790400	                   cmp word [rcx + 4], 0	       561	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_37
0x4000991	     0xf8560feffff	                           jne 0x40007f7	       561	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_37
0x4000997	        0xf6400104	                  test byte [rax + 1], 4	       563	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	IF_11	CALL_38
0x400099b	        0x8b442438	            mov eax, dword [rsp + 0x38] 	       564	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_39
0x400099f	      0xba00000000	                              mov edx, 0	       564	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_39
0x40009a4	          0x8d7804	                      lea edi, [rax + 4]	       564	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_39
0x40009a7	            0x7505	                           jne 0x40009ae	       563	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	IF_11	CALL_38
0x40009a9	      0xba00000000	                              mov edx, 0	       566	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_40
0x40009ae	            0x31c0	                            xor eax, eax	       566	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_40
0x40009b0	          0x4c89fe	                            mov rsi, r15	       566	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_40
0x40009b3	      0xe800000000	                          call 0x40009b8	       566	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_40
0x40009b8	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       566	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_40
0x40009bc	         0xfb65003	               movzx edx, byte [rax + 3]	       566	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_40
0x40009c0	      0x440fbf6804	              movsx r13d, word [rax + 4]	       566	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_40
0x40009c5	          0x83e207	                              and edx, 7	       566	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_10	CALL_40
0x40009c8	          0x80fa01	                               cmp dl, 1	       579	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_42
0x40009cb	      0xb900000000	                              mov ecx, 0	       579	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_42
0x40009d0	     0xf8521feffff	                           jne 0x40007f7	       579	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_42
0x40009d6	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       579	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_42
0x40009da	      0xe918feffff	                           jmp 0x40007f7	       579	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_42
0x40009df	              0x90	                                     nop	       579	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_42
0x40009e0	      0xbe00000000	                              mov esi, 0	       621	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_56
0x40009e5	          0x4c89ff	                            mov rdi, r15	       621	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_56
0x40009e8	            0x31c0	                            xor eax, eax	       621	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_56
0x40009ea	      0xe800000000	                          call 0x40009ef	       621	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_56
0x40009ef	      0xe96dfeffff	                           jmp 0x4000861	       621	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	CALL_56
0x40009f4	          0x4489e2	                           mov edx, r12d	       592	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	CALL_48
0x40009f7	          0xc1fa03	                              sar edx, 3	       592	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	CALL_48
0x40009fa	          0x4863d2	                         movsxd rdx, edx	       592	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	CALL_48
0x40009fd	         0xfb60c11	             movzx ecx, byte [rcx + rdx]	       592	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	CALL_48
0x4000a01	          0x4489e2	                           mov edx, r12d	       592	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	CALL_48
0x4000a04	          0x83e207	                              and edx, 7	       592	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	CALL_48
0x4000a07	           0xfa3d1	                             bt ecx, edx	       592	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	CALL_48
0x4000a0a	     0xf833dffffff	                           jae 0x400094d	       592	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	CALL_48
0x4000a10	      0x837c243c03	               cmp dword [rsp + 0x3c], 3	       594	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	IF_15
0x4000a15	     0xf8424feffff	                            je 0x400083f	       594	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	IF_15
0x4000a1b	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	       598	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	IF_15
0x4000a1f	      0xba00000000	                              mov edx, 0	       598	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	IF_15
0x4000a24	          0x4c89fe	                            mov rsi, r15	       598	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	IF_15
0x4000a27	            0x31c0	                            xor eax, eax	       598	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	IF_15
0x4000a29	      0xe800000000	                          call 0x4000a2e	       598	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	IF_15
0x4000a2e	    0xc744243c0300	               mov dword [rsp + 0x3c], 3	       596	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	IF_15
0x4000a36	      0xe904feffff	                           jmp 0x400083f	       596	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	IF_14	IF_15
0x4000a3b	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000a3f	         0xfb65003	               movzx edx, byte [rax + 3]	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000a43	          0x83e207	                              and edx, 7	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000a46	          0x80fa01	                               cmp dl, 1	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000a49	     0xf8489020000	                            je 0x4000cd8	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000a4f	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000a53	      0xb800000000	                              mov eax, 0	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000a58	            0x85c9	                           test ecx, ecx	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000a5a	           0xf95c2	                                setne dl	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000a5d	         0xfbf5804	               movsx ebx, word [rax + 4]	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000a61	            0x85db	                           test ebx, ebx	       641	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_21
0x4000a63	            0x7413	                            je 0x4000a78	       641	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_21
0x4000a65	            0x84d2	                             test dl, dl	       641	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_21
0x4000a67	            0x740f	                            je 0x4000a78	       641	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	IF_21
0x4000a69	      0xbe00000000	                              mov esi, 0	       642	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_67
0x4000a6e	          0x4c89ff	                            mov rdi, r15	       642	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_67
0x4000a71	            0x31c0	                            xor eax, eax	       642	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_67
0x4000a73	      0xe800000000	                          call 0x4000a78	       642	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_67
0x4000a78	            0x85db	                           test ebx, ebx	       646	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2
0x4000a7a	     0xf8e66030000	                           jle 0x4000de6	       646	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2
0x4000a80	          0x8d43ff	                      lea eax, [rbx - 1]	       646	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2
0x4000a83	      0x4c89742430	             mov qword [rsp + 0x30], r14	       685	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_7	IF_26	CALL_78
0x4000a88	      0x448b74243c	           mov r14d, dword [rsp + 0x3c] 	       685	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_7	IF_26	CALL_78
0x4000a8d	    0x48c744242000	               mov qword [rsp + 0x20], 0	       646	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2
0x4000a96	      0x488d444003	              lea rax, [rax + rax*2 + 3]	       646	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2
0x4000a9b	        0x48c1e003	                              shl rax, 3	       646	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2
0x4000a9f	      0x4889442428	             mov qword [rsp + 0x28], rax	       646	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2
0x4000aa4	        0x8b442438	            mov eax, dword [rsp + 0x38] 	       646	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2
0x4000aa8	          0x8d4804	                      lea ecx, [rax + 4]	       646	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2
0x4000aab	          0x83c002	                              add eax, 2	       685	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_7	IF_26	CALL_78
0x4000aae	        0x8944241c	             mov dword [rsp + 0x1c], eax	       685	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_7	IF_26	CALL_78
0x4000ab2	        0x894c2418	             mov dword [rsp + 0x18], ecx	       685	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_7	IF_26	CALL_78
0x4000ab6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       685	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_7	IF_26	CALL_78
0x4000ac0	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       648	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_68
0x4000ac5	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       648	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_68
0x4000ac9	         0xfb64203	               movzx eax, byte [rdx + 3]	       648	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_68
0x4000acd	          0x83e007	                              and eax, 7	       648	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_68
0x4000ad0	            0x3c01	                               cmp al, 1	       648	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_68
0x4000ad2	     0xf8438030000	                            je 0x4000e10	       648	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_68
0x4000ad8	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       648	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_68
0x4000add	    0x480305000000	             add rax, qword [0x04000ae4]	       648	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_68
0x4000ae4	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       648	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_68
0x4000ae8	          0x8b5008	                mov edx, dword [rax + 8]	       649	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_69
0x4000aeb	          0x488b00	                    mov rax, qword [rax]	       650	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_70
0x4000aee	            0x85d2	                           test edx, edx	       655	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3
0x4000af0	      0x4889442408	                mov qword [rsp + 8], rax	       650	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_70
0x4000af5	     0xf8ed5020000	                           jle 0x4000dd0	       655	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3
0x4000afb	          0x8d42ff	                      lea eax, [rdx - 1]	       655	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3
0x4000afe	        0x4883c001	                              add rax, 1	       655	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3
0x4000b02	        0x48c1e005	                              shl rax, 5	       655	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3
0x4000b06	          0x4801d8	                            add rax, rbx	       655	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3
0x4000b09	      0x4889442410	             mov qword [rsp + 0x10], rax	       655	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3
0x4000b0e	      0xe906010000	                           jmp 0x4000c19	       655	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3
0x4000b13	       0xf1f440000	                   nop dword [rax + rax]	       655	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3
0x4000b18	        0x4183fe03	                             cmp r14d, 3	       665	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_22	IF_23
0x4000b1c	            0x7419	                            je 0x4000b37	       665	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_22	IF_23
0x4000b1e	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	       669	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_22	IF_23
0x4000b22	      0xba00000000	                              mov edx, 0	       669	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_22	IF_23
0x4000b27	          0x4c89fe	                            mov rsi, r15	       669	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_22	IF_23
0x4000b2a	            0x31c0	                            xor eax, eax	       669	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_22	IF_23
0x4000b2c	    0x41be03000000	                             mov r14d, 3	       667	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_22	IF_23
0x4000b32	      0xe800000000	                          call 0x4000b37	       669	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_22	IF_23
0x4000b37	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	       689	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_79
0x4000b3b	          0x4c89fe	                            mov rsi, r15	       689	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_79
0x4000b3e	      0xe800000000	                          call 0x4000b43	       689	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_79
0x4000b43	      0x66837b1a01	                cmp word [rbx + 0x1a], 1	       690	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_27	CALL_80
0x4000b48	     0xf845a020000	                            je 0x4000da8	       690	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_27	CALL_80
0x4000b4e	        0x488b4308	                mov rax, qword [rbx + 8]	       692	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_28	CALL_83
0x4000b52	        0x488b4028	            mov rax, qword [rax + 0x28] 	       692	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_28	CALL_83
0x4000b56	        0x488b4018	            mov rax, qword [rax + 0x18] 	       692	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_28	CALL_83
0x4000b5a	          0x4885c0	                           test rax, rax	       692	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_28	CALL_83
0x4000b5d	     0xf845d020000	                            je 0x4000dc0	       692	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_28	CALL_83
0x4000b63	            0x85ed	                           test ebp, ebp	       700	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_29
0x4000b65	     0xf84c5010000	                            je 0x4000d30	       700	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_29
0x4000b6b	          0x4585e4	                         test r12d, r12d	       704	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_8	IF_30
0x4000b6e	     0xf841c020000	                            je 0x4000d90	       704	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_8	IF_30
0x4000b74	        0x488b4028	            mov rax, qword [rax + 0x28] 	       709	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_9	IF_31	CALL_91
0x4000b78	          0x80380a	                     cmp byte [rax], 0xa	       709	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_9	IF_31	CALL_91
0x4000b7b	     0xf84c7010000	                            je 0x4000d48	       709	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_9	IF_31	CALL_91
0x4000b81	      0xbe00000000	                              mov esi, 0	       712	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_9	IF_31	CALL_93
0x4000b86	          0x4c89ff	                            mov rdi, r15	       712	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_9	IF_31	CALL_93
0x4000b89	            0x31c0	                            xor eax, eax	       712	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_9	IF_31	CALL_93
0x4000b8b	      0xe800000000	                          call 0x4000b90	       712	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_9	IF_31	CALL_93
0x4000b90	      0x488b742408	                mov rsi, qword [rsp + 8]	       722	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3
0x4000b95	          0x4c89fa	                            mov rdx, r15	       722	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3
0x4000b98	          0x4c89ef	                            mov rdi, r13	       722	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3
0x4000b9b	      0xe800000000	                          call 0x4000ba0	       722	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3
0x4000ba0	        0x488b4308	                mov rax, qword [rbx + 8]	       724	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32	CALL_97
0x4000ba4	        0x488b4028	            mov rax, qword [rax + 0x28] 	       724	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32	CALL_97
0x4000ba8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       724	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32	CALL_97
0x4000bac	          0x4885c0	                           test rax, rax	       724	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32	CALL_97
0x4000baf	            0x7434	                            je 0x4000be5	       724	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32	CALL_97
0x4000bb1	        0x488b4028	            mov rax, qword [rax + 0x28] 	       725	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32	CALL_99
0x4000bb5	          0x80380a	                     cmp byte [rax], 0xa	       725	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32	CALL_99
0x4000bb8	            0x742b	                            je 0x4000be5	       725	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32	CALL_99
0x4000bba	          0x4c89fe	                            mov rsi, r15	       728	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32	CALL_101
0x4000bbd	      0xbf00000000	                              mov edi, 0	       728	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32	CALL_101
0x4000bc2	      0xe800000000	                          call 0x4000bc7	       728	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32	CALL_101
0x4000bc7	        0x488b4308	                mov rax, qword [rbx + 8]	       729	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32	CALL_104
0x4000bcb	      0xb9ffffffff	                     mov ecx, 0xffffffff	       730	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32
0x4000bd0	          0x4c89fa	                            mov rdx, r15	       730	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32
0x4000bd3	      0xbe00000000	                              mov esi, 0	       730	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32
0x4000bd8	        0x488b4028	            mov rax, qword [rax + 0x28] 	       729	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32	CALL_104
0x4000bdc	        0x488b7818	            mov rdi, qword [rax + 0x18] 	       730	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32
0x4000be0	      0xe800000000	                          call 0x4000be5	       730	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_32
0x4000be5	      0x66837b1a01	                cmp word [rbx + 0x1a], 1	       732	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_33	CALL_105
0x4000bea	            0x760f	                           jbe 0x4000bfb	       732	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_33	CALL_105
0x4000bec	      0xbe00000000	                              mov esi, 0	       733	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_106
0x4000bf1	          0x4c89ff	                            mov rdi, r15	       733	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_106
0x4000bf4	            0x31c0	                            xor eax, eax	       733	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_106
0x4000bf6	      0xe800000000	                          call 0x4000bfb	       733	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_106
0x4000bfb	            0x31c0	                            xor eax, eax	       735	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_107
0x4000bfd	      0xbe00000000	                              mov esi, 0	       735	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_107
0x4000c02	          0x4c89ff	                            mov rdi, r15	       735	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_107
0x4000c05	      0xe800000000	                          call 0x4000c0a	       735	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_107
0x4000c0a	        0x4883c320	                           add rbx, 0x20	       735	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_107
0x4000c0e	      0x48395c2410	            cmp qword [rsp + 0x10], rbx 	       655	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3
0x4000c13	     0xf84b7010000	                            je 0x4000dd0	       655	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3
0x4000c19	          0x4c8b2b	                    mov r13, qword [rbx]	       657	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_71
0x4000c1c	      0xb906000000	                              mov ecx, 6	       109	common-utils.h	FUNCTION_11
0x4000c21	      0xbf00000000	                              mov edi, 0	       109	common-utils.h	FUNCTION_11
0x4000c26	          0x4c89ee	                            mov rsi, r13	       109	common-utils.h	FUNCTION_11
0x4000c29	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       109	common-utils.h	FUNCTION_11
0x4000c2b	      0xb906000000	                              mov ecx, 6	       109	common-utils.h	FUNCTION_11
0x4000c30	          0x4c89ee	                            mov rsi, r13	       109	common-utils.h	FUNCTION_11
0x4000c33	      0xbf00000000	                              mov edi, 0	       109	common-utils.h	FUNCTION_11
0x4000c38	           0xf92c0	                                 setb al	       109	common-utils.h	FUNCTION_11
0x4000c3b	        0x400f97c5	                                seta bpl	       109	common-utils.h	FUNCTION_11
0x4000c3f	            0x29c5	                            sub ebp, eax	       109	common-utils.h	FUNCTION_11
0x4000c41	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       109	common-utils.h	FUNCTION_11
0x4000c43	        0x400fbeed	                          movsx ebp, bpl	       109	common-utils.h	FUNCTION_11
0x4000c47	           0xf92c0	                                 setb al	       109	common-utils.h	FUNCTION_11
0x4000c4a	        0x410f97c4	                               seta r12b	       109	common-utils.h	FUNCTION_11
0x4000c4e	          0x4129c4	                           sub r12d, eax	       109	common-utils.h	FUNCTION_11
0x4000c51	      0xe800000000	                          call 0x4000c56	       662	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3
0x4000c56	         0xfb64318	           movzx eax, byte [rbx + 0x18] 	       663	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_22	CALL_74
0x4000c5a	        0x450fbee4	                        movsx r12d, r12b	       109	common-utils.h	FUNCTION_11
0x4000c5e	            0xa808	                              test al, 8	       663	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_22	CALL_74
0x4000c60	     0xf85b2feffff	                           jne 0x4000b18	       663	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_22	CALL_74
0x4000c66	            0xa804	                              test al, 4	       672	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_6	IF_24	CALL_76
0x4000c68	     0xf84f2000000	                            je 0x4000d60	       672	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_6	IF_24	CALL_76
0x4000c6e	        0x4183fe02	                             cmp r14d, 2	       674	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_6	IF_24	IF_25
0x4000c72	     0xf84bffeffff	                            je 0x4000b37	       674	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_6	IF_24	IF_25
0x4000c78	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	       677	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_6	IF_24	IF_25	CALL_77
0x4000c7c	      0xba00000000	                              mov edx, 0	       677	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_6	IF_24	IF_25	CALL_77
0x4000c81	          0x4c89fe	                            mov rsi, r15	       677	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_6	IF_24	IF_25	CALL_77
0x4000c84	            0x31c0	                            xor eax, eax	       677	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_6	IF_24	IF_25	CALL_77
0x4000c86	    0x41be02000000	                             mov r14d, 2	       676	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_6	IF_24	IF_25
0x4000c8c	      0xe800000000	                          call 0x4000c91	       677	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_6	IF_24	IF_25	CALL_77
0x4000c91	      0xe9a1feffff	                           jmp 0x4000b37	       677	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_6	IF_24	IF_25	CALL_77
0x4000c96	    0x48817a280000	               cmp qword [rdx + 0x28], 0	       530	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_5	CALL_22
0x4000c9e	     0xf8494f8ffff	                            je 0x4000538	       530	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_5	CALL_22
0x4000ca4	      0xbe00000000	                              mov esi, 0	       532	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_5	CALL_23
0x4000ca9	          0x4c89ff	                            mov rdi, r15	       532	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_5	CALL_23
0x4000cac	            0x31c0	                            xor eax, eax	       532	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_5	CALL_23
0x4000cae	      0xe800000000	                          call 0x4000cb3	       532	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_5	CALL_23
0x4000cb3	      0xe9c1f8ffff	                           jmp 0x4000579	       532	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_5	CALL_23
0x4000cb8	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       756	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_36	IF_37	CALL_115
0x4000cbc	      0x4883780800	                  cmp qword [rax + 8], 0	       756	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_36	IF_37	CALL_115
0x4000cc1	     0xf85ebf5ffff	                           jne 0x40002b2	       756	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_36	IF_37	CALL_115
0x4000cc7	      0xbe00000000	                              mov esi, 0	       757	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_36	CALL_116
0x4000ccc	      0xe91bf7ffff	                           jmp 0x40003ec	       757	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_36	CALL_116
0x4000cd1	     0xf1f80000000	                         nop dword [rax]	       757	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_36	CALL_116
0x4000cd8	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	       757	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_36	CALL_116
0x4000cdc	            0x85d2	                           test edx, edx	       757	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_36	CALL_116
0x4000cde	           0xf95c2	                                setne dl	       757	p-typeprint.c	FUNCTION_9	SWITCH_1	IF_36	CALL_116
0x4000ce1	        0x488b4028	            mov rax, qword [rax + 0x28] 	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000ce5	      0xe973fdffff	                           jmp 0x4000a5d	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000cea	          0x4489e0	                           mov eax, r12d	       601	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	CALL_50
0x4000ced	          0xc1f803	                              sar eax, 3	       601	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	CALL_50
0x4000cf0	            0x4898	                                    cdqe	       601	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	CALL_50
0x4000cf2	         0xfb61402	             movzx edx, byte [rdx + rax]	       601	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	CALL_50
0x4000cf6	          0x4489e0	                           mov eax, r12d	       601	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	CALL_50
0x4000cf9	          0x83e007	                              and eax, 7	       601	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	CALL_50
0x4000cfc	           0xfa3c2	                             bt edx, eax	       601	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	CALL_50
0x4000cff	     0xf8355fcffff	                           jae 0x400095a	       601	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	CALL_50
0x4000d05	      0x837c243c02	               cmp dword [rsp + 0x3c], 2	       603	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x4000d0a	     0xf842ffbffff	                            je 0x400083f	       603	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x4000d10	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	       606	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	IF_17	CALL_51
0x4000d14	      0xba00000000	                              mov edx, 0	       606	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	IF_17	CALL_51
0x4000d19	          0x4c89fe	                            mov rsi, r15	       606	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	IF_17	CALL_51
0x4000d1c	            0x31c0	                            xor eax, eax	       606	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	IF_17	CALL_51
0x4000d1e	      0xe800000000	                          call 0x4000d23	       606	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	IF_17	CALL_51
0x4000d23	    0xc744243c0200	               mov dword [rsp + 0x3c], 2	       605	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x4000d2b	      0xe90ffbffff	                           jmp 0x400083f	       605	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x4000d30	      0xbe00000000	                              mov esi, 0	       702	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_29	CALL_86
0x4000d35	          0x4c89ff	                            mov rdi, r15	       702	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_29	CALL_86
0x4000d38	            0x31c0	                            xor eax, eax	       702	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_29	CALL_86
0x4000d3a	      0xe800000000	                          call 0x4000d3f	       702	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_29	CALL_86
0x4000d3f	      0xe94cfeffff	                           jmp 0x4000b90	       702	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_29	CALL_86
0x4000d44	         0xf1f4000	                         nop dword [rax]	       702	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_29	CALL_86
0x4000d48	      0xbe00000000	                              mov esi, 0	       716	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_10	CALL_94
0x4000d4d	          0x4c89ff	                            mov rdi, r15	       716	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_10	CALL_94
0x4000d50	            0x31c0	                            xor eax, eax	       716	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_10	CALL_94
0x4000d52	      0xe800000000	                          call 0x4000d57	       716	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_10	CALL_94
0x4000d57	      0xe934feffff	                           jmp 0x4000b90	       716	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_10	CALL_94
0x4000d5c	         0xf1f4000	                         nop dword [rax]	       716	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_10	CALL_94
0x4000d60	        0x4183fe01	                             cmp r14d, 1	       682	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_7	IF_26
0x4000d64	     0xf84cdfdffff	                            je 0x4000b37	       682	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_7	IF_26
0x4000d6a	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	       685	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_7	IF_26	CALL_78
0x4000d6e	      0xba00000000	                              mov edx, 0	       685	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_7	IF_26	CALL_78
0x4000d73	          0x4c89fe	                            mov rsi, r15	       685	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_7	IF_26	CALL_78
0x4000d76	            0x31c0	                            xor eax, eax	       685	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_7	IF_26	CALL_78
0x4000d78	    0x41be01000000	                             mov r14d, 1	       684	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_7	IF_26
0x4000d7e	      0xe800000000	                          call 0x4000d83	       685	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_7	IF_26	CALL_78
0x4000d83	      0xe9affdffff	                           jmp 0x4000b37	       685	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_7	IF_26	CALL_78
0x4000d88	     0xf1f84000000	                   nop dword [rax + rax]	       685	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_7	IF_26	CALL_78
0x4000d90	      0xbe00000000	                              mov esi, 0	       706	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_8	IF_30	CALL_87
0x4000d95	          0x4c89ff	                            mov rdi, r15	       706	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_8	IF_30	CALL_87
0x4000d98	            0x31c0	                            xor eax, eax	       706	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_8	IF_30	CALL_87
0x4000d9a	      0xe800000000	                          call 0x4000d9f	       706	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_8	IF_30	CALL_87
0x4000d9f	      0xe9ecfdffff	                           jmp 0x4000b90	       706	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_8	IF_30	CALL_87
0x4000da4	         0xf1f4000	                         nop dword [rax]	       706	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	ELSE_8	IF_30	CALL_87
0x4000da8	      0xbe00000000	                              mov esi, 0	       691	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_81
0x4000dad	          0x4c89ff	                            mov rdi, r15	       691	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_81
0x4000db0	            0x31c0	                            xor eax, eax	       691	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_81
0x4000db2	      0xe800000000	                          call 0x4000db7	       691	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_81
0x4000db7	      0xe992fdffff	                           jmp 0x4000b4e	       691	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_81
0x4000dbc	         0xf1f4000	                         nop dword [rax]	       691	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	CALL_81
0x4000dc0	          0x488b13	                    mov rdx, qword [rbx]	       696	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_28	CALL_85
0x4000dc3	      0xbe00000000	                              mov esi, 0	       696	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_28	CALL_85
0x4000dc8	          0x4c89ff	                            mov rdi, r15	       696	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_28	CALL_85
0x4000dcb	      0xe800000000	                          call 0x4000dd0	       696	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_28	CALL_85
0x4000dd0	    0x488344242018	            add qword [rsp + 0x20], 0x18	       696	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_28	CALL_85
0x4000dd6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       696	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	FOR_3	IF_28	CALL_85
0x4000ddb	      0x483b442428	            cmp rax, qword [rsp + 0x28] 	       646	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2
0x4000de0	     0xf85dafcffff	                           jne 0x4000ac0	       646	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2
0x4000de6	        0x8b7c2438	            mov edi, dword [rsp + 0x38] 	       738	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_108
0x4000dea	        0x4883c448	                           add rsp, 0x48	       835	p-typeprint.c	FUNCTION_9
0x4000dee	          0x4c89fe	                            mov rsi, r15	       738	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_108
0x4000df1	              0x5b	                                 pop rbx	       835	p-typeprint.c	FUNCTION_9
0x4000df2	              0x5d	                                 pop rbp	       835	p-typeprint.c	FUNCTION_9
0x4000df3	            0x415c	                                 pop r12	       835	p-typeprint.c	FUNCTION_9
0x4000df5	            0x415d	                                 pop r13	       835	p-typeprint.c	FUNCTION_9
0x4000df7	            0x415e	                                 pop r14	       835	p-typeprint.c	FUNCTION_9
0x4000df9	            0x415f	                                 pop r15	       835	p-typeprint.c	FUNCTION_9
0x4000dfb	      0xba00000000	                              mov edx, 0	       738	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_108
0x4000e00	            0x31c0	                            xor eax, eax	       738	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_108
0x4000e02	      0xe900000000	                           jmp 0x4000e07	       738	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_108
0x4000e07	    0x660f1f840000	                    nop word [rax + rax]	       738	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_108
0x4000e10	        0x488b4228	            mov rax, qword [rdx + 0x28] 	       648	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_68
0x4000e14	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       648	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_68
0x4000e19	        0x48035038	             add rdx, qword [rax + 0x38]	       648	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_68
0x4000e1d	          0x4889d0	                            mov rax, rdx	       648	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_68
0x4000e20	        0x488b5a10	            mov rbx, qword [rdx + 0x10] 	       648	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_68
0x4000e24	          0x8b5208	                mov edx, dword [rdx + 8]	       649	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_69
0x4000e27	      0xe9bffcffff	                           jmp 0x4000aeb	       649	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	FOR_2	CALL_69
0x4000e2c	          0x4c89fe	                            mov rsi, r15	       473	p-typeprint.c	FUNCTION_9	IF_1	CALL_2
0x4000e2f	      0xbf00000000	                              mov edi, 0	       473	p-typeprint.c	FUNCTION_9	IF_1	CALL_2
0x4000e34	      0xe963f6ffff	                           jmp 0x400049c	       473	p-typeprint.c	FUNCTION_9	IF_1	CALL_2
0x4000e39	        0x4883c448	                           add rsp, 0x48	       835	p-typeprint.c	FUNCTION_9
0x4000e3d	          0x4c89ff	                            mov rdi, r15	       831	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_12	CALL_148
0x4000e40	           0xfbed1	                           movsx edx, cl	       831	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_12	CALL_148
0x4000e43	              0x5b	                                 pop rbx	       835	p-typeprint.c	FUNCTION_9
0x4000e44	              0x5d	                                 pop rbp	       835	p-typeprint.c	FUNCTION_9
0x4000e45	            0x415c	                                 pop r12	       835	p-typeprint.c	FUNCTION_9
0x4000e47	            0x415d	                                 pop r13	       835	p-typeprint.c	FUNCTION_9
0x4000e49	            0x415e	                                 pop r14	       835	p-typeprint.c	FUNCTION_9
0x4000e4b	            0x415f	                                 pop r15	       835	p-typeprint.c	FUNCTION_9
0x4000e4d	      0xbe00000000	                              mov esi, 0	       831	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_12	CALL_148
0x4000e52	            0x31c0	                            xor eax, eax	       831	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_12	CALL_148
0x4000e54	      0xe900000000	                           jmp 0x4000e59	       831	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_12	CALL_148
0x4000e59	      0xbf00000000	                              mov edi, 0	       793	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_133
0x4000e5e	      0xe800000000	                          call 0x4000e63	       793	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_133
0x4000e63	          0x4889c2	                            mov rdx, rax	       793	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_133
0x4000e66	      0xe951f6ffff	                           jmp 0x40004bc	       793	p-typeprint.c	FUNCTION_9	SWITCH_1	CALL_133
0x4000e6b	         0xfb65003	               movzx edx, byte [rax + 3]	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000e6f	          0x83e207	                              and edx, 7	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000e72	          0x80fa01	                               cmp dl, 1	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000e75	            0x7414	                            je 0x4000e8b	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000e77	     0xfbf1d000000	           movsx ebx, word [0x04000e7e] 	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000e7e	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	       573	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9
0x4000e86	      0xe9edfbffff	                           jmp 0x4000a78	       573	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9
0x4000e8b	            0x31d2	                            xor edx, edx	       640	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9	CALL_66
0x4000e8d	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	       573	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9
0x4000e95	      0xe947feffff	                           jmp 0x4000ce1	       573	p-typeprint.c	FUNCTION_9	SWITCH_1	ELSE_2	IF_9
