pr_float_constant	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,2:DO,0:ELSE,0:IF,0	24
0x4002f79	              0x55	                                push rbp	      1713	prdbg.c	FUNCTION_47
0x4002f7a	          0x4889e5	                            mov rbp, rsp	      1713	prdbg.c	FUNCTION_47
0x4002f7d	        0x4883ec30	                           sub rsp, 0x30	      1713	prdbg.c	FUNCTION_47
0x4002f81	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1713	prdbg.c	FUNCTION_47
0x4002f85	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1713	prdbg.c	FUNCTION_47
0x4002f89	      0xf20f1145d8	          movsd qword [rbp - 0x28], xmm0	      1713	prdbg.c	FUNCTION_47
0x4002f8e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1714	prdbg.c	FUNCTION_47
0x4002f92	        0x488945f8	                mov qword [rbp - 8], rax	      1714	prdbg.c	FUNCTION_47
0x4002f96	        0x488b45f8	                mov rax, qword [rbp - 8]	      1716	prdbg.c	FUNCTION_47	CALL_1
0x4002f9a	          0x4889c7	                            mov rdi, rax	      1716	prdbg.c	FUNCTION_47	CALL_1
0x4002f9d	      0xe8c5d1ffff	                         call sym.indent	      1716	prdbg.c	FUNCTION_47	CALL_1
0x4002fa2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1717	prdbg.c	FUNCTION_47	CALL_2
0x4002fa6	          0x488b00	                    mov rax, qword [rax]	      1717	prdbg.c	FUNCTION_47	CALL_2
0x4002fa9	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1717	prdbg.c	FUNCTION_47	CALL_2
0x4002fad	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1717	prdbg.c	FUNCTION_47	CALL_2
0x4002fb1	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1717	prdbg.c	FUNCTION_47	CALL_2
0x4002fb5	      0xf20f1045d0	          movsd xmm0, qword [rbp - 0x30]	      1717	prdbg.c	FUNCTION_47	CALL_2
0x4002fba	      0xbe00000000	                              mov esi, 0	      1717	prdbg.c	FUNCTION_47	CALL_2
0x4002fbf	          0x4889c7	                            mov rdi, rax	      1717	prdbg.c	FUNCTION_47	CALL_2
0x4002fc2	      0xb801000000	                              mov eax, 1	      1717	prdbg.c	FUNCTION_47	CALL_2
0x4002fc7	      0xe800000000	                          call 0x4002fcc	      1717	prdbg.c	FUNCTION_47	CALL_2
0x4002fcc	      0xb801000000	                              mov eax, 1	      1718	prdbg.c	FUNCTION_47
0x4002fd1	              0xc9	                                   leave	      1719	prdbg.c	FUNCTION_47
0x4002fd2	              0xc3	                                     ret	      1719	prdbg.c	FUNCTION_47
pr_reference_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,2:DO,0:ELSE,0:IF,0	21
0x400108e	              0x55	                                push rbp	       791	prdbg.c	FUNCTION_22
0x400108f	          0x4889e5	                            mov rbp, rsp	       791	prdbg.c	FUNCTION_22
0x4001092	        0x4883ec20	                           sub rsp, 0x20	       791	prdbg.c	FUNCTION_22
0x4001096	        0x48897de8	             mov qword [rbp - 0x18], rdi	       791	prdbg.c	FUNCTION_22
0x400109a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       792	prdbg.c	FUNCTION_22
0x400109e	        0x488945f8	                mov qword [rbp - 8], rax	       792	prdbg.c	FUNCTION_22
0x40010a2	        0x488b45f8	                mov rax, qword [rbp - 8]	       794	prdbg.c	FUNCTION_22	CALL_1
0x40010a6	        0x488b4010	            mov rax, qword [rax + 0x10] 	       794	prdbg.c	FUNCTION_22	CALL_1
0x40010aa	          0x4885c0	                           test rax, rax	       794	prdbg.c	FUNCTION_22	CALL_1
0x40010ad	            0x7519	                           jne 0x40010c8	       794	prdbg.c	FUNCTION_22	CALL_1
0x40010af	      0xb900000000	                              mov ecx, 0	       794	prdbg.c	FUNCTION_22	CALL_1
0x40010b4	      0xba1a030000	                          mov edx, 0x31a	       794	prdbg.c	FUNCTION_22	CALL_1
0x40010b9	      0xbe00000000	                              mov esi, 0	       794	prdbg.c	FUNCTION_22	CALL_1
0x40010be	      0xbf00000000	                              mov edi, 0	       794	prdbg.c	FUNCTION_22	CALL_1
0x40010c3	      0xe800000000	                          call 0x40010c8	       794	prdbg.c	FUNCTION_22	CALL_1
0x40010c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	prdbg.c	FUNCTION_22	CALL_2
0x40010cc	      0xbe00000000	                              mov esi, 0	       796	prdbg.c	FUNCTION_22	CALL_2
0x40010d1	          0x4889c7	                            mov rdi, rax	       796	prdbg.c	FUNCTION_22	CALL_2
0x40010d4	      0xe8cbf3ffff	                call sym.substitute_type	       796	prdbg.c	FUNCTION_22	CALL_2
0x40010d9	              0xc9	                                   leave	       797	prdbg.c	FUNCTION_22
0x40010da	              0xc3	                                     ret	       797	prdbg.c	FUNCTION_22
tg_typed_constant	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,5:DO,0:ELSE,0:IF,1	51
0x4004907	              0x55	                                push rbp	      2569	prdbg.c	FUNCTION_76
0x4004908	          0x4889e5	                            mov rbp, rsp	      2569	prdbg.c	FUNCTION_76
0x400490b	        0x4883ec50	                           sub rsp, 0x50	      2569	prdbg.c	FUNCTION_76
0x400490f	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2569	prdbg.c	FUNCTION_76
0x4004913	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2569	prdbg.c	FUNCTION_76
0x4004917	        0x488955b8	             mov qword [rbp - 0x48], rdx	      2569	prdbg.c	FUNCTION_76
0x400491b	    0x64488b042528	                mov rax, qword fs:[0x28]	      2569	prdbg.c	FUNCTION_76
0x4004924	        0x488945f8	                mov qword [rbp - 8], rax	      2569	prdbg.c	FUNCTION_76
0x4004928	            0x31c0	                            xor eax, eax	      2569	prdbg.c	FUNCTION_76
0x400492a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2570	prdbg.c	FUNCTION_76
0x400492e	        0x488945d0	             mov qword [rbp - 0x30], rax	      2570	prdbg.c	FUNCTION_76
0x4004932	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2574	prdbg.c	FUNCTION_76	CALL_1
0x4004936	          0x4889c7	                            mov rdi, rax	      2574	prdbg.c	FUNCTION_76	CALL_1
0x4004939	      0xe8bcbdffff	                       call sym.pop_type	      2574	prdbg.c	FUNCTION_76	CALL_1
0x400493e	        0x488945d8	             mov qword [rbp - 0x28], rax	      2574	prdbg.c	FUNCTION_76	CALL_1
0x4004942	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2575	prdbg.c	FUNCTION_76	IF_1
0x4004947	            0x7507	                           jne 0x4004950	      2575	prdbg.c	FUNCTION_76	IF_1
0x4004949	      0xb800000000	                              mov eax, 0	      2576	prdbg.c	FUNCTION_76	IF_1
0x400494e	            0xeb6a	                           jmp 0x40049ba	      2576	prdbg.c	FUNCTION_76	IF_1
0x4004950	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2578	prdbg.c	FUNCTION_76	CALL_2
0x4004954	          0x4889c7	                            mov rdi, rax	      2578	prdbg.c	FUNCTION_76	CALL_2
0x4004957	      0xe80bb8ffff	                         call sym.indent	      2578	prdbg.c	FUNCTION_76	CALL_2
0x400495c	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      2579	prdbg.c	FUNCTION_76	CALL_3
0x4004960	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2579	prdbg.c	FUNCTION_76	CALL_3
0x4004964	      0xb900000000	                              mov ecx, 0	      2579	prdbg.c	FUNCTION_76	CALL_3
0x4004969	      0xba00000000	                              mov edx, 0	      2579	prdbg.c	FUNCTION_76	CALL_3
0x400496e	          0x4889c7	                            mov rdi, rax	      2579	prdbg.c	FUNCTION_76	CALL_3
0x4004971	      0xe8efbdffff	                      call sym.print_vma	      2579	prdbg.c	FUNCTION_76	CALL_3
0x4004976	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2580	prdbg.c	FUNCTION_76	CALL_4
0x400497a	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      2580	prdbg.c	FUNCTION_76	CALL_4
0x400497e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2580	prdbg.c	FUNCTION_76	CALL_4
0x4004982	          0x488b00	                    mov rax, qword [rax]	      2580	prdbg.c	FUNCTION_76	CALL_4
0x4004985	        0x488d7de0	                   lea rdi, [rbp - 0x20]	      2580	prdbg.c	FUNCTION_76	CALL_4
0x4004989	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      2580	prdbg.c	FUNCTION_76	CALL_4
0x400498d	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2580	prdbg.c	FUNCTION_76	CALL_4
0x4004991	          0x4989f9	                             mov r9, rdi	      2580	prdbg.c	FUNCTION_76	CALL_4
0x4004994	          0x4989f0	                             mov r8, rsi	      2580	prdbg.c	FUNCTION_76	CALL_4
0x4004997	      0xbe00000000	                              mov esi, 0	      2580	prdbg.c	FUNCTION_76	CALL_4
0x400499c	          0x4889c7	                            mov rdi, rax	      2580	prdbg.c	FUNCTION_76	CALL_4
0x400499f	      0xb800000000	                              mov eax, 0	      2580	prdbg.c	FUNCTION_76	CALL_4
0x40049a4	      0xe800000000	                          call 0x40049a9	      2580	prdbg.c	FUNCTION_76	CALL_4
0x40049a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2583	prdbg.c	FUNCTION_76	CALL_5
0x40049ad	          0x4889c7	                            mov rdi, rax	      2583	prdbg.c	FUNCTION_76	CALL_5
0x40049b0	      0xe800000000	                          call 0x40049b5	      2583	prdbg.c	FUNCTION_76	CALL_5
0x40049b5	      0xb801000000	                              mov eax, 1	      2585	prdbg.c	FUNCTION_76
0x40049ba	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2586	prdbg.c	FUNCTION_76
0x40049be	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2586	prdbg.c	FUNCTION_76
0x40049c7	            0x7405	                            je 0x40049ce	      2586	prdbg.c	FUNCTION_76
0x40049c9	      0xe800000000	                          call 0x40049ce	      2586	prdbg.c	FUNCTION_76
0x40049ce	              0xc9	                                   leave	      2586	prdbg.c	FUNCTION_76
0x40049cf	              0xc3	                                     ret	      2586	prdbg.c	FUNCTION_76
pr_empty_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,0:IF,0	12
0x400089c	              0x55	                                push rbp	       562	prdbg.c	FUNCTION_13
0x400089d	          0x4889e5	                            mov rbp, rsp	       562	prdbg.c	FUNCTION_13
0x40008a0	        0x4883ec20	                           sub rsp, 0x20	       562	prdbg.c	FUNCTION_13
0x40008a4	        0x48897de8	             mov qword [rbp - 0x18], rdi	       562	prdbg.c	FUNCTION_13
0x40008a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       563	prdbg.c	FUNCTION_13
0x40008ac	        0x488945f8	                mov qword [rbp - 8], rax	       563	prdbg.c	FUNCTION_13
0x40008b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       565	prdbg.c	FUNCTION_13	CALL_1
0x40008b4	      0xbe00000000	                              mov esi, 0	       565	prdbg.c	FUNCTION_13	CALL_1
0x40008b9	          0x4889c7	                            mov rdi, rax	       565	prdbg.c	FUNCTION_13	CALL_1
0x40008bc	      0xe8e2f8ffff	                      call sym.push_type	       565	prdbg.c	FUNCTION_13	CALL_1
0x40008c1	              0xc9	                                   leave	       566	prdbg.c	FUNCTION_13
0x40008c2	              0xc3	                                     ret	       566	prdbg.c	FUNCTION_13
pr_variable	WHILE,0:FOR,0:functions,0:SWITCH,1:CALL,8:DO,0:ELSE,0:IF,2	81
0x4003091	              0x55	                                push rbp	      1748	prdbg.c	FUNCTION_49
0x4003092	          0x4889e5	                            mov rbp, rsp	      1748	prdbg.c	FUNCTION_49
0x4003095	        0x4883ec50	                           sub rsp, 0x50	      1748	prdbg.c	FUNCTION_49
0x4003099	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1748	prdbg.c	FUNCTION_49
0x400309d	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1748	prdbg.c	FUNCTION_49
0x40030a1	          0x8955bc	             mov dword [rbp - 0x44], edx	      1748	prdbg.c	FUNCTION_49
0x40030a4	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1748	prdbg.c	FUNCTION_49
0x40030a8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1748	prdbg.c	FUNCTION_49
0x40030b1	        0x488945f8	                mov qword [rbp - 8], rax	      1748	prdbg.c	FUNCTION_49
0x40030b5	            0x31c0	                            xor eax, eax	      1748	prdbg.c	FUNCTION_49
0x40030b7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1749	prdbg.c	FUNCTION_49
0x40030bb	        0x488945d0	             mov qword [rbp - 0x30], rax	      1749	prdbg.c	FUNCTION_49
0x40030bf	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1753	prdbg.c	FUNCTION_49	IF_1	CALL_1
0x40030c3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1753	prdbg.c	FUNCTION_49	IF_1	CALL_1
0x40030c7	          0x4889d6	                            mov rsi, rdx	      1753	prdbg.c	FUNCTION_49	IF_1	CALL_1
0x40030ca	          0x4889c7	                            mov rdi, rax	      1753	prdbg.c	FUNCTION_49	IF_1	CALL_1
0x40030cd	      0xe8d2d3ffff	                call sym.substitute_type	      1753	prdbg.c	FUNCTION_49	IF_1	CALL_1
0x40030d2	            0x85c0	                           test eax, eax	      1753	prdbg.c	FUNCTION_49	IF_1	CALL_1
0x40030d4	            0x750a	                           jne 0x40030e0	      1753	prdbg.c	FUNCTION_49	IF_1	CALL_1
0x40030d6	      0xb800000000	                              mov eax, 0	      1754	prdbg.c	FUNCTION_49	IF_1
0x40030db	      0xe9ce000000	                           jmp 0x40031ae	      1754	prdbg.c	FUNCTION_49	IF_1
0x40030e0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1756	prdbg.c	FUNCTION_49	CALL_2
0x40030e4	          0x4889c7	                            mov rdi, rax	      1756	prdbg.c	FUNCTION_49	CALL_2
0x40030e7	      0xe80ed6ffff	                       call sym.pop_type	      1756	prdbg.c	FUNCTION_49	CALL_2
0x40030ec	        0x488945d8	             mov qword [rbp - 0x28], rax	      1756	prdbg.c	FUNCTION_49	CALL_2
0x40030f0	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1757	prdbg.c	FUNCTION_49	IF_2
0x40030f5	            0x750a	                           jne 0x4003101	      1757	prdbg.c	FUNCTION_49	IF_2
0x40030f7	      0xb800000000	                              mov eax, 0	      1758	prdbg.c	FUNCTION_49	IF_2
0x40030fc	      0xe9ad000000	                           jmp 0x40031ae	      1758	prdbg.c	FUNCTION_49	IF_2
0x4003101	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1760	prdbg.c	FUNCTION_49	CALL_3
0x4003105	          0x4889c7	                            mov rdi, rax	      1760	prdbg.c	FUNCTION_49	CALL_3
0x4003108	      0xe85ad0ffff	                         call sym.indent	      1760	prdbg.c	FUNCTION_49	CALL_3
0x400310d	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1761	prdbg.c	FUNCTION_49	SWITCH_1
0x4003110	          0x83f802	                              cmp eax, 2	      1761	prdbg.c	FUNCTION_49	SWITCH_1
0x4003113	            0x724c	                            jb 0x4003161	      1761	prdbg.c	FUNCTION_49	SWITCH_1
0x4003115	          0x83f803	                              cmp eax, 3	      1761	prdbg.c	FUNCTION_49	SWITCH_1
0x4003118	            0x7607	                           jbe 0x4003121	      1761	prdbg.c	FUNCTION_49	SWITCH_1
0x400311a	          0x83f805	                              cmp eax, 5	      1761	prdbg.c	FUNCTION_49	SWITCH_1
0x400311d	            0x7422	                            je 0x4003141	      1761	prdbg.c	FUNCTION_49	SWITCH_1
0x400311f	            0xeb40	                           jmp 0x4003161	      1771	prdbg.c	FUNCTION_49	SWITCH_1
0x4003121	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1765	prdbg.c	FUNCTION_49	SWITCH_1	CALL_4
0x4003125	          0x488b00	                    mov rax, qword [rax]	      1765	prdbg.c	FUNCTION_49	SWITCH_1	CALL_4
0x4003128	          0x4889c1	                            mov rcx, rax	      1765	prdbg.c	FUNCTION_49	SWITCH_1	CALL_4
0x400312b	      0xba07000000	                              mov edx, 7	      1765	prdbg.c	FUNCTION_49	SWITCH_1	CALL_4
0x4003130	      0xbe01000000	                              mov esi, 1	      1765	prdbg.c	FUNCTION_49	SWITCH_1	CALL_4
0x4003135	      0xbf00000000	                              mov edi, 0	      1765	prdbg.c	FUNCTION_49	SWITCH_1	CALL_4
0x400313a	      0xe800000000	                          call 0x400313f	      1765	prdbg.c	FUNCTION_49	SWITCH_1	CALL_4
0x400313f	            0xeb21	                           jmp 0x4003162	      1766	prdbg.c	FUNCTION_49	SWITCH_1
0x4003141	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1768	prdbg.c	FUNCTION_49	SWITCH_1	CALL_5
0x4003145	          0x488b00	                    mov rax, qword [rax]	      1768	prdbg.c	FUNCTION_49	SWITCH_1	CALL_5
0x4003148	          0x4889c1	                            mov rcx, rax	      1768	prdbg.c	FUNCTION_49	SWITCH_1	CALL_5
0x400314b	      0xba09000000	                              mov edx, 9	      1768	prdbg.c	FUNCTION_49	SWITCH_1	CALL_5
0x4003150	      0xbe01000000	                              mov esi, 1	      1768	prdbg.c	FUNCTION_49	SWITCH_1	CALL_5
0x4003155	      0xbf00000000	                              mov edi, 0	      1768	prdbg.c	FUNCTION_49	SWITCH_1	CALL_5
0x400315a	      0xe800000000	                          call 0x400315f	      1768	prdbg.c	FUNCTION_49	SWITCH_1	CALL_5
0x400315f	            0xeb01	                           jmp 0x4003162	      1769	prdbg.c	FUNCTION_49	SWITCH_1
0x4003161	              0x90	                                     nop	      1771	prdbg.c	FUNCTION_49	SWITCH_1
0x4003162	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      1773	prdbg.c	FUNCTION_49	CALL_6
0x4003166	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1773	prdbg.c	FUNCTION_49	CALL_6
0x400316a	      0xb901000000	                              mov ecx, 1	      1773	prdbg.c	FUNCTION_49	CALL_6
0x400316f	      0xba01000000	                              mov edx, 1	      1773	prdbg.c	FUNCTION_49	CALL_6
0x4003174	          0x4889c7	                            mov rdi, rax	      1773	prdbg.c	FUNCTION_49	CALL_6
0x4003177	      0xe8e9d5ffff	                      call sym.print_vma	      1773	prdbg.c	FUNCTION_49	CALL_6
0x400317c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1774	prdbg.c	FUNCTION_49	CALL_7
0x4003180	          0x488b00	                    mov rax, qword [rax]	      1774	prdbg.c	FUNCTION_49	CALL_7
0x4003183	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      1774	prdbg.c	FUNCTION_49	CALL_7
0x4003187	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1774	prdbg.c	FUNCTION_49	CALL_7
0x400318b	      0xbe00000000	                              mov esi, 0	      1774	prdbg.c	FUNCTION_49	CALL_7
0x4003190	          0x4889c7	                            mov rdi, rax	      1774	prdbg.c	FUNCTION_49	CALL_7
0x4003193	      0xb800000000	                              mov eax, 0	      1774	prdbg.c	FUNCTION_49	CALL_7
0x4003198	      0xe800000000	                          call 0x400319d	      1774	prdbg.c	FUNCTION_49	CALL_7
0x400319d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1776	prdbg.c	FUNCTION_49	CALL_8
0x40031a1	          0x4889c7	                            mov rdi, rax	      1776	prdbg.c	FUNCTION_49	CALL_8
0x40031a4	      0xe800000000	                          call 0x40031a9	      1776	prdbg.c	FUNCTION_49	CALL_8
0x40031a9	      0xb801000000	                              mov eax, 1	      1778	prdbg.c	FUNCTION_49
0x40031ae	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1779	prdbg.c	FUNCTION_49
0x40031b2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1779	prdbg.c	FUNCTION_49
0x40031bb	            0x7405	                            je 0x40031c2	      1779	prdbg.c	FUNCTION_49
0x40031bd	      0xe800000000	                          call 0x40031c2	      1779	prdbg.c	FUNCTION_49
0x40031c2	              0xc9	                                   leave	      1779	prdbg.c	FUNCTION_49
0x40031c3	              0xc3	                                     ret	      1779	prdbg.c	FUNCTION_49
pr_class_static_member	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,9:DO,0:ELSE,0:IF,4	74
0x4002286	              0x55	                                push rbp	      1305	prdbg.c	FUNCTION_35
0x4002287	          0x4889e5	                            mov rbp, rsp	      1305	prdbg.c	FUNCTION_35
0x400228a	        0x4883ec30	                           sub rsp, 0x30	      1305	prdbg.c	FUNCTION_35
0x400228e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1305	prdbg.c	FUNCTION_35
0x4002292	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1305	prdbg.c	FUNCTION_35
0x4002296	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1305	prdbg.c	FUNCTION_35
0x400229a	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      1305	prdbg.c	FUNCTION_35
0x400229d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1306	prdbg.c	FUNCTION_35
0x40022a1	        0x488945f0	             mov qword [rbp - 0x10], rax	      1306	prdbg.c	FUNCTION_35
0x40022a5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1309	prdbg.c	FUNCTION_35	IF_1	CALL_1
0x40022a9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1309	prdbg.c	FUNCTION_35	IF_1	CALL_1
0x40022ad	          0x4889d6	                            mov rsi, rdx	      1309	prdbg.c	FUNCTION_35	IF_1	CALL_1
0x40022b0	          0x4889c7	                            mov rdi, rax	      1309	prdbg.c	FUNCTION_35	IF_1	CALL_1
0x40022b3	      0xe8ece1ffff	                call sym.substitute_type	      1309	prdbg.c	FUNCTION_35	IF_1	CALL_1
0x40022b8	            0x85c0	                           test eax, eax	      1309	prdbg.c	FUNCTION_35	IF_1	CALL_1
0x40022ba	            0x750a	                           jne 0x40022c6	      1309	prdbg.c	FUNCTION_35	IF_1	CALL_1
0x40022bc	      0xb800000000	                              mov eax, 0	      1310	prdbg.c	FUNCTION_35	IF_1
0x40022c1	      0xe9ba000000	                           jmp 0x4002380	      1310	prdbg.c	FUNCTION_35	IF_1
0x40022c6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1312	prdbg.c	FUNCTION_35	IF_2	CALL_2
0x40022ca	      0xbe00000000	                              mov esi, 0	      1312	prdbg.c	FUNCTION_35	IF_2	CALL_2
0x40022cf	          0x4889c7	                            mov rdi, rax	      1312	prdbg.c	FUNCTION_35	IF_2	CALL_2
0x40022d2	      0xe85edfffff	                   call sym.prepend_type	      1312	prdbg.c	FUNCTION_35	IF_2	CALL_2
0x40022d7	            0x85c0	                           test eax, eax	      1312	prdbg.c	FUNCTION_35	IF_2	CALL_2
0x40022d9	            0x7451	                            je 0x400232c	      1312	prdbg.c	FUNCTION_35	IF_2	CALL_2
0x40022db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1313	prdbg.c	FUNCTION_35	IF_2	CALL_3
0x40022df	      0xbe00000000	                              mov esi, 0	      1313	prdbg.c	FUNCTION_35	IF_2	CALL_3
0x40022e4	          0x4889c7	                            mov rdi, rax	      1313	prdbg.c	FUNCTION_35	IF_2	CALL_3
0x40022e7	      0xe80ce0ffff	                    call sym.append_type	      1313	prdbg.c	FUNCTION_35	IF_2	CALL_3
0x40022ec	            0x85c0	                           test eax, eax	      1313	prdbg.c	FUNCTION_35	IF_2	CALL_3
0x40022ee	            0x743c	                            je 0x400232c	      1313	prdbg.c	FUNCTION_35	IF_2	CALL_3
0x40022f0	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1314	prdbg.c	FUNCTION_35	IF_2	CALL_4
0x40022f4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1314	prdbg.c	FUNCTION_35	IF_2	CALL_4
0x40022f8	          0x4889d6	                            mov rsi, rdx	      1314	prdbg.c	FUNCTION_35	IF_2	CALL_4
0x40022fb	          0x4889c7	                            mov rdi, rax	      1314	prdbg.c	FUNCTION_35	IF_2	CALL_4
0x40022fe	      0xe8f5dfffff	                    call sym.append_type	      1314	prdbg.c	FUNCTION_35	IF_2	CALL_4
0x4002303	            0x85c0	                           test eax, eax	      1314	prdbg.c	FUNCTION_35	IF_2	CALL_4
0x4002305	            0x7425	                            je 0x400232c	      1314	prdbg.c	FUNCTION_35	IF_2	CALL_4
0x4002307	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1315	prdbg.c	FUNCTION_35	IF_2	CALL_5
0x400230b	      0xbe00000000	                              mov esi, 0	      1315	prdbg.c	FUNCTION_35	IF_2	CALL_5
0x4002310	          0x4889c7	                            mov rdi, rax	      1315	prdbg.c	FUNCTION_35	IF_2	CALL_5
0x4002313	      0xe8e0dfffff	                    call sym.append_type	      1315	prdbg.c	FUNCTION_35	IF_2	CALL_5
0x4002318	            0x85c0	                           test eax, eax	      1315	prdbg.c	FUNCTION_35	IF_2	CALL_5
0x400231a	            0x7410	                            je 0x400232c	      1315	prdbg.c	FUNCTION_35	IF_2	CALL_5
0x400231c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1316	prdbg.c	FUNCTION_35	IF_2	CALL_6
0x4002320	          0x4889c7	                            mov rdi, rax	      1316	prdbg.c	FUNCTION_35	IF_2	CALL_6
0x4002323	      0xe88ae3ffff	                    call sym.indent_type	      1316	prdbg.c	FUNCTION_35	IF_2	CALL_6
0x4002328	            0x85c0	                           test eax, eax	      1316	prdbg.c	FUNCTION_35	IF_2	CALL_6
0x400232a	            0x7507	                           jne 0x4002333	      1316	prdbg.c	FUNCTION_35	IF_2	CALL_6
0x400232c	      0xb800000000	                              mov eax, 0	      1317	prdbg.c	FUNCTION_35	IF_2
0x4002331	            0xeb4d	                           jmp 0x4002380	      1317	prdbg.c	FUNCTION_35	IF_2
0x4002333	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1319	prdbg.c	FUNCTION_35	CALL_7
0x4002337	          0x4889c7	                            mov rdi, rax	      1319	prdbg.c	FUNCTION_35	CALL_7
0x400233a	      0xe8bbe3ffff	                       call sym.pop_type	      1319	prdbg.c	FUNCTION_35	CALL_7
0x400233f	        0x488945f8	                mov qword [rbp - 8], rax	      1319	prdbg.c	FUNCTION_35	CALL_7
0x4002343	      0x48837df800	                  cmp qword [rbp - 8], 0	      1320	prdbg.c	FUNCTION_35	IF_3
0x4002348	            0x7507	                           jne 0x4002351	      1320	prdbg.c	FUNCTION_35	IF_3
0x400234a	      0xb800000000	                              mov eax, 0	      1321	prdbg.c	FUNCTION_35	IF_3
0x400234f	            0xeb2f	                           jmp 0x4002380	      1321	prdbg.c	FUNCTION_35	IF_3
0x4002351	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1323	prdbg.c	FUNCTION_35	IF_4	CALL_8
0x4002354	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1323	prdbg.c	FUNCTION_35	IF_4	CALL_8
0x4002358	            0x89d6	                            mov esi, edx	      1323	prdbg.c	FUNCTION_35	IF_4	CALL_8
0x400235a	          0x4889c7	                            mov rdi, rax	      1323	prdbg.c	FUNCTION_35	IF_4	CALL_8
0x400235d	      0xe82ef8ffff	              call sym.pr_fix_visibility	      1323	prdbg.c	FUNCTION_35	IF_4	CALL_8
0x4002362	            0x85c0	                           test eax, eax	      1323	prdbg.c	FUNCTION_35	IF_4	CALL_8
0x4002364	            0x7507	                           jne 0x400236d	      1323	prdbg.c	FUNCTION_35	IF_4	CALL_8
0x4002366	      0xb800000000	                              mov eax, 0	      1324	prdbg.c	FUNCTION_35	IF_4
0x400236b	            0xeb13	                           jmp 0x4002380	      1324	prdbg.c	FUNCTION_35	IF_4
0x400236d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1326	prdbg.c	FUNCTION_35	CALL_9
0x4002371	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1326	prdbg.c	FUNCTION_35	CALL_9
0x4002375	          0x4889d6	                            mov rsi, rdx	      1326	prdbg.c	FUNCTION_35	CALL_9
0x4002378	          0x4889c7	                            mov rdi, rax	      1326	prdbg.c	FUNCTION_35	CALL_9
0x400237b	      0xe878dfffff	                    call sym.append_type	      1326	prdbg.c	FUNCTION_35	CALL_9
0x4002380	              0xc9	                                   leave	      1327	prdbg.c	FUNCTION_35
0x4002381	              0xc3	                                     ret	      1327	prdbg.c	FUNCTION_35
append_parent	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,5:DO,0:ELSE,0:IF,1	63
0x40003c2	              0x55	                                push rbp	       394	prdbg.c	FUNCTION_6
0x40003c3	          0x4889e5	                            mov rbp, rsp	       394	prdbg.c	FUNCTION_6
0x40003c6	            0x4154	                                push r12	       394	prdbg.c	FUNCTION_6
0x40003c8	              0x53	                                push rbx	       394	prdbg.c	FUNCTION_6
0x40003c9	        0x4883ec20	                           sub rsp, 0x20	       394	prdbg.c	FUNCTION_6
0x40003cd	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       394	prdbg.c	FUNCTION_6
0x40003d1	        0x488975d0	             mov qword [rbp - 0x30], rsi	       394	prdbg.c	FUNCTION_6
0x40003d5	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       397	prdbg.c	FUNCTION_6	IF_1
0x40003da	            0x750a	                           jne 0x40003e6	       397	prdbg.c	FUNCTION_6	IF_1
0x40003dc	      0xb800000000	                              mov eax, 0	       398	prdbg.c	FUNCTION_6	IF_1
0x40003e1	      0xe9b5000000	                           jmp 0x400049b	       398	prdbg.c	FUNCTION_6	IF_1
0x40003e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       400	prdbg.c	FUNCTION_6	CALL_1
0x40003ea	        0x488b4010	            mov rax, qword [rax + 0x10] 	       400	prdbg.c	FUNCTION_6	CALL_1
0x40003ee	          0x4885c0	                           test rax, rax	       400	prdbg.c	FUNCTION_6	CALL_1
0x40003f1	            0x7519	                           jne 0x400040c	       400	prdbg.c	FUNCTION_6	CALL_1
0x40003f3	      0xb900000000	                              mov ecx, 0	       400	prdbg.c	FUNCTION_6	CALL_1
0x40003f8	      0xba90010000	                          mov edx, 0x190	       400	prdbg.c	FUNCTION_6	CALL_1
0x40003fd	      0xbe00000000	                              mov esi, 0	       400	prdbg.c	FUNCTION_6	CALL_1
0x4000402	      0xbf00000000	                              mov edi, 0	       400	prdbg.c	FUNCTION_6	CALL_1
0x4000407	      0xe800000000	                          call 0x400040c	       400	prdbg.c	FUNCTION_6	CALL_1
0x400040c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000410	        0x488b4010	            mov rax, qword [rax + 0x10] 	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000414	        0x488b4028	            mov rax, qword [rax + 0x28] 	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000418	          0x4885c0	                           test rax, rax	       402	prdbg.c	FUNCTION_6	CALL_2
0x400041b	            0x7416	                            je 0x4000433	       402	prdbg.c	FUNCTION_6	CALL_2
0x400041d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000421	        0x488b4010	            mov rax, qword [rax + 0x10] 	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000425	        0x488b4028	            mov rax, qword [rax + 0x28] 	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000429	          0x4889c7	                            mov rdi, rax	       402	prdbg.c	FUNCTION_6	CALL_2
0x400042c	      0xe800000000	                          call 0x4000431	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000431	            0xeb05	                           jmp 0x4000438	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000433	      0xb800000000	                              mov eax, 0	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000438	          0x8945ec	             mov dword [rbp - 0x14], eax	       402	prdbg.c	FUNCTION_6	CALL_2
0x400043b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       403	prdbg.c	FUNCTION_6	CALL_3
0x400043f	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       403	prdbg.c	FUNCTION_6	CALL_3
0x4000443	        0x448b65ec	            mov r12d, dword [rbp - 0x14]	       404	prdbg.c	FUNCTION_6	CALL_4
0x4000447	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       404	prdbg.c	FUNCTION_6	CALL_4
0x400044b	          0x4889c7	                            mov rdi, rax	       404	prdbg.c	FUNCTION_6	CALL_4
0x400044e	      0xe800000000	                          call 0x4000453	       404	prdbg.c	FUNCTION_6	CALL_4
0x4000453	          0x4c01e0	                            add rax, r12	       404	prdbg.c	FUNCTION_6	CALL_4
0x4000456	        0x488d5001	                      lea rdx, [rax + 1]	       403	prdbg.c	FUNCTION_6	CALL_3
0x400045a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       403	prdbg.c	FUNCTION_6	CALL_3
0x400045e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       403	prdbg.c	FUNCTION_6	CALL_3
0x4000462	        0x488b4028	            mov rax, qword [rax + 0x28] 	       403	prdbg.c	FUNCTION_6	CALL_3
0x4000466	          0x4889d6	                            mov rsi, rdx	       403	prdbg.c	FUNCTION_6	CALL_3
0x4000469	          0x4889c7	                            mov rdi, rax	       403	prdbg.c	FUNCTION_6	CALL_3
0x400046c	      0xe800000000	                          call 0x4000471	       403	prdbg.c	FUNCTION_6	CALL_3
0x4000471	        0x48894328	             mov qword [rbx + 0x28], rax	       403	prdbg.c	FUNCTION_6	CALL_3
0x4000475	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       405	prdbg.c	FUNCTION_6	CALL_5
0x4000479	        0x488b4010	            mov rax, qword [rax + 0x10] 	       405	prdbg.c	FUNCTION_6	CALL_5
0x400047d	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       405	prdbg.c	FUNCTION_6	CALL_5
0x4000481	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       405	prdbg.c	FUNCTION_6	CALL_5
0x4000484	          0x4801c2	                            add rdx, rax	       405	prdbg.c	FUNCTION_6	CALL_5
0x4000487	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       405	prdbg.c	FUNCTION_6	CALL_5
0x400048b	          0x4889c6	                            mov rsi, rax	       405	prdbg.c	FUNCTION_6	CALL_5
0x400048e	          0x4889d7	                            mov rdi, rdx	       405	prdbg.c	FUNCTION_6	CALL_5
0x4000491	      0xe800000000	                          call 0x4000496	       405	prdbg.c	FUNCTION_6	CALL_5
0x4000496	      0xb801000000	                              mov eax, 1	       407	prdbg.c	FUNCTION_6
0x400049b	        0x4883c420	                           add rsp, 0x20	       408	prdbg.c	FUNCTION_6
0x400049f	              0x5b	                                 pop rbx	       408	prdbg.c	FUNCTION_6
0x40004a0	            0x415c	                                 pop r12	       408	prdbg.c	FUNCTION_6
0x40004a2	              0x5d	                                 pop rbp	       408	prdbg.c	FUNCTION_6
0x40004a3	              0xc3	                                     ret	       408	prdbg.c	FUNCTION_6
pr_typdef	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,5:DO,0:ELSE,0:IF,2	40
0x4002dea	              0x55	                                push rbp	      1655	prdbg.c	FUNCTION_44
0x4002deb	          0x4889e5	                            mov rbp, rsp	      1655	prdbg.c	FUNCTION_44
0x4002dee	        0x4883ec20	                           sub rsp, 0x20	      1655	prdbg.c	FUNCTION_44
0x4002df2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1655	prdbg.c	FUNCTION_44
0x4002df6	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1655	prdbg.c	FUNCTION_44
0x4002dfa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1656	prdbg.c	FUNCTION_44
0x4002dfe	        0x488945f0	             mov qword [rbp - 0x10], rax	      1656	prdbg.c	FUNCTION_44
0x4002e02	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1659	prdbg.c	FUNCTION_44	IF_1	CALL_1
0x4002e06	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1659	prdbg.c	FUNCTION_44	IF_1	CALL_1
0x4002e0a	          0x4889d6	                            mov rsi, rdx	      1659	prdbg.c	FUNCTION_44	IF_1	CALL_1
0x4002e0d	          0x4889c7	                            mov rdi, rax	      1659	prdbg.c	FUNCTION_44	IF_1	CALL_1
0x4002e10	      0xe88fd6ffff	                call sym.substitute_type	      1659	prdbg.c	FUNCTION_44	IF_1	CALL_1
0x4002e15	            0x85c0	                           test eax, eax	      1659	prdbg.c	FUNCTION_44	IF_1	CALL_1
0x4002e17	            0x7507	                           jne 0x4002e20	      1659	prdbg.c	FUNCTION_44	IF_1	CALL_1
0x4002e19	      0xb800000000	                              mov eax, 0	      1660	prdbg.c	FUNCTION_44	IF_1
0x4002e1e	            0xeb58	                           jmp 0x4002e78	      1660	prdbg.c	FUNCTION_44	IF_1
0x4002e20	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1662	prdbg.c	FUNCTION_44	CALL_2
0x4002e24	          0x4889c7	                            mov rdi, rax	      1662	prdbg.c	FUNCTION_44	CALL_2
0x4002e27	      0xe8ced8ffff	                       call sym.pop_type	      1662	prdbg.c	FUNCTION_44	CALL_2
0x4002e2c	        0x488945f8	                mov qword [rbp - 8], rax	      1662	prdbg.c	FUNCTION_44	CALL_2
0x4002e30	      0x48837df800	                  cmp qword [rbp - 8], 0	      1663	prdbg.c	FUNCTION_44	IF_2
0x4002e35	            0x7507	                           jne 0x4002e3e	      1663	prdbg.c	FUNCTION_44	IF_2
0x4002e37	      0xb800000000	                              mov eax, 0	      1664	prdbg.c	FUNCTION_44	IF_2
0x4002e3c	            0xeb3a	                           jmp 0x4002e78	      1664	prdbg.c	FUNCTION_44	IF_2
0x4002e3e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1666	prdbg.c	FUNCTION_44	CALL_3
0x4002e42	          0x4889c7	                            mov rdi, rax	      1666	prdbg.c	FUNCTION_44	CALL_3
0x4002e45	      0xe81dd3ffff	                         call sym.indent	      1666	prdbg.c	FUNCTION_44	CALL_3
0x4002e4a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1667	prdbg.c	FUNCTION_44	CALL_4
0x4002e4e	          0x488b00	                    mov rax, qword [rax]	      1667	prdbg.c	FUNCTION_44	CALL_4
0x4002e51	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1667	prdbg.c	FUNCTION_44	CALL_4
0x4002e55	      0xbe00000000	                              mov esi, 0	      1667	prdbg.c	FUNCTION_44	CALL_4
0x4002e5a	          0x4889c7	                            mov rdi, rax	      1667	prdbg.c	FUNCTION_44	CALL_4
0x4002e5d	      0xb800000000	                              mov eax, 0	      1667	prdbg.c	FUNCTION_44	CALL_4
0x4002e62	      0xe800000000	                          call 0x4002e67	      1667	prdbg.c	FUNCTION_44	CALL_4
0x4002e67	        0x488b45f8	                mov rax, qword [rbp - 8]	      1669	prdbg.c	FUNCTION_44	CALL_5
0x4002e6b	          0x4889c7	                            mov rdi, rax	      1669	prdbg.c	FUNCTION_44	CALL_5
0x4002e6e	      0xe800000000	                          call 0x4002e73	      1669	prdbg.c	FUNCTION_44	CALL_5
0x4002e73	      0xb801000000	                              mov eax, 1	      1671	prdbg.c	FUNCTION_44
0x4002e78	              0xc9	                                   leave	      1672	prdbg.c	FUNCTION_44
0x4002e79	              0xc3	                                     ret	      1672	prdbg.c	FUNCTION_44
prepend_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,6:DO,0:ELSE,0:IF,0	52
0x4000235	              0x55	                                push rbp	       357	prdbg.c	FUNCTION_4
0x4000236	          0x4889e5	                            mov rbp, rsp	       357	prdbg.c	FUNCTION_4
0x4000239	              0x53	                                push rbx	       357	prdbg.c	FUNCTION_4
0x400023a	        0x4883ec28	                           sub rsp, 0x28	       357	prdbg.c	FUNCTION_4
0x400023e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       357	prdbg.c	FUNCTION_4
0x4000242	        0x488975d0	             mov qword [rbp - 0x30], rsi	       357	prdbg.c	FUNCTION_4
0x4000246	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       360	prdbg.c	FUNCTION_4	CALL_1
0x400024a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       360	prdbg.c	FUNCTION_4	CALL_1
0x400024e	          0x4885c0	                           test rax, rax	       360	prdbg.c	FUNCTION_4	CALL_1
0x4000251	            0x7519	                           jne 0x400026c	       360	prdbg.c	FUNCTION_4	CALL_1
0x4000253	      0xb900000000	                              mov ecx, 0	       360	prdbg.c	FUNCTION_4	CALL_1
0x4000258	      0xba68010000	                          mov edx, 0x168	       360	prdbg.c	FUNCTION_4	CALL_1
0x400025d	      0xbe00000000	                              mov esi, 0	       360	prdbg.c	FUNCTION_4	CALL_1
0x4000262	      0xbf00000000	                              mov edi, 0	       360	prdbg.c	FUNCTION_4	CALL_1
0x4000267	      0xe800000000	                          call 0x400026c	       360	prdbg.c	FUNCTION_4	CALL_1
0x400026c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       362	prdbg.c	FUNCTION_4	CALL_4
0x4000270	          0x4889c7	                            mov rdi, rax	       362	prdbg.c	FUNCTION_4	CALL_4
0x4000273	      0xe800000000	                          call 0x4000278	       362	prdbg.c	FUNCTION_4	CALL_4
0x4000278	          0x4889c3	                            mov rbx, rax	       362	prdbg.c	FUNCTION_4	CALL_4
0x400027b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       362	prdbg.c	FUNCTION_4	CALL_4
0x400027f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       362	prdbg.c	FUNCTION_4	CALL_4
0x4000283	        0x488b4008	                mov rax, qword [rax + 8]	       362	prdbg.c	FUNCTION_4	CALL_4
0x4000287	          0x4889c7	                            mov rdi, rax	       362	prdbg.c	FUNCTION_4	CALL_4
0x400028a	      0xe800000000	                          call 0x400028f	       362	prdbg.c	FUNCTION_4	CALL_4
0x400028f	          0x4801d8	                            add rax, rbx	       362	prdbg.c	FUNCTION_4	CALL_4
0x4000292	        0x4883c001	                              add rax, 1	       362	prdbg.c	FUNCTION_4	CALL_4
0x4000296	          0x4889c7	                            mov rdi, rax	       362	prdbg.c	FUNCTION_4	CALL_4
0x4000299	      0xe800000000	                          call 0x400029e	       362	prdbg.c	FUNCTION_4	CALL_4
0x400029e	        0x488945e8	             mov qword [rbp - 0x18], rax	       362	prdbg.c	FUNCTION_4	CALL_4
0x40002a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       363	prdbg.c	FUNCTION_4	CALL_5
0x40002a6	        0x488b4010	            mov rax, qword [rax + 0x10] 	       363	prdbg.c	FUNCTION_4	CALL_5
0x40002aa	        0x488b4808	                mov rcx, qword [rax + 8]	       363	prdbg.c	FUNCTION_4	CALL_5
0x40002ae	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       363	prdbg.c	FUNCTION_4	CALL_5
0x40002b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       363	prdbg.c	FUNCTION_4	CALL_5
0x40002b6	      0xbe00000000	                              mov esi, 0	       363	prdbg.c	FUNCTION_4	CALL_5
0x40002bb	          0x4889c7	                            mov rdi, rax	       363	prdbg.c	FUNCTION_4	CALL_5
0x40002be	      0xb800000000	                              mov eax, 0	       363	prdbg.c	FUNCTION_4	CALL_5
0x40002c3	      0xe800000000	                          call 0x40002c8	       363	prdbg.c	FUNCTION_4	CALL_5
0x40002c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       364	prdbg.c	FUNCTION_4	CALL_6
0x40002cc	        0x488b4010	            mov rax, qword [rax + 0x10] 	       364	prdbg.c	FUNCTION_4	CALL_6
0x40002d0	        0x488b4008	                mov rax, qword [rax + 8]	       364	prdbg.c	FUNCTION_4	CALL_6
0x40002d4	          0x4889c7	                            mov rdi, rax	       364	prdbg.c	FUNCTION_4	CALL_6
0x40002d7	      0xe800000000	                          call 0x40002dc	       364	prdbg.c	FUNCTION_4	CALL_6
0x40002dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       365	prdbg.c	FUNCTION_4
0x40002e0	        0x488b4010	            mov rax, qword [rax + 0x10] 	       365	prdbg.c	FUNCTION_4
0x40002e4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       365	prdbg.c	FUNCTION_4
0x40002e8	        0x48895008	                mov qword [rax + 8], rdx	       365	prdbg.c	FUNCTION_4
0x40002ec	      0xb801000000	                              mov eax, 1	       367	prdbg.c	FUNCTION_4
0x40002f1	        0x4883c428	                           add rsp, 0x28	       368	prdbg.c	FUNCTION_4
0x40002f5	              0x5b	                                 pop rbx	       368	prdbg.c	FUNCTION_4
0x40002f6	              0x5d	                                 pop rbp	       368	prdbg.c	FUNCTION_4
0x40002f7	              0xc3	                                     ret	       368	prdbg.c	FUNCTION_4
tg_float_constant	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,2:DO,0:ELSE,0:IF,0	26
0x40048a5	              0x55	                                push rbp	      2556	prdbg.c	FUNCTION_75
0x40048a6	          0x4889e5	                            mov rbp, rsp	      2556	prdbg.c	FUNCTION_75
0x40048a9	        0x4883ec30	                           sub rsp, 0x30	      2556	prdbg.c	FUNCTION_75
0x40048ad	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2556	prdbg.c	FUNCTION_75
0x40048b1	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2556	prdbg.c	FUNCTION_75
0x40048b5	      0xf20f1145d8	          movsd qword [rbp - 0x28], xmm0	      2556	prdbg.c	FUNCTION_75
0x40048ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2557	prdbg.c	FUNCTION_75
0x40048be	        0x488945f8	                mov qword [rbp - 8], rax	      2557	prdbg.c	FUNCTION_75
0x40048c2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2559	prdbg.c	FUNCTION_75	CALL_1
0x40048c6	          0x4889c7	                            mov rdi, rax	      2559	prdbg.c	FUNCTION_75	CALL_1
0x40048c9	      0xe899b8ffff	                         call sym.indent	      2559	prdbg.c	FUNCTION_75	CALL_1
0x40048ce	        0x488b45f8	                mov rax, qword [rbp - 8]	      2560	prdbg.c	FUNCTION_75	CALL_2
0x40048d2	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      2560	prdbg.c	FUNCTION_75	CALL_2
0x40048d6	        0x488b45f8	                mov rax, qword [rbp - 8]	      2560	prdbg.c	FUNCTION_75	CALL_2
0x40048da	          0x488b00	                    mov rax, qword [rax]	      2560	prdbg.c	FUNCTION_75	CALL_2
0x40048dd	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      2560	prdbg.c	FUNCTION_75	CALL_2
0x40048e1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2560	prdbg.c	FUNCTION_75	CALL_2
0x40048e5	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2560	prdbg.c	FUNCTION_75	CALL_2
0x40048e9	      0xf20f1045d0	          movsd xmm0, qword [rbp - 0x30]	      2560	prdbg.c	FUNCTION_75	CALL_2
0x40048ee	      0xbe00000000	                              mov esi, 0	      2560	prdbg.c	FUNCTION_75	CALL_2
0x40048f3	          0x4889c7	                            mov rdi, rax	      2560	prdbg.c	FUNCTION_75	CALL_2
0x40048f6	      0xb801000000	                              mov eax, 1	      2560	prdbg.c	FUNCTION_75	CALL_2
0x40048fb	      0xe800000000	                          call 0x4004900	      2560	prdbg.c	FUNCTION_75	CALL_2
0x4004900	      0xb801000000	                              mov eax, 1	      2562	prdbg.c	FUNCTION_75
0x4004905	              0xc9	                                   leave	      2563	prdbg.c	FUNCTION_75
0x4004906	              0xc3	                                     ret	      2563	prdbg.c	FUNCTION_75
tg_enum_type	WHILE,0:FOR,1:functions,0:SWITCH,0:CALL,4:DO,0:ELSE,0:IF,3	90
0x40037d2	              0x55	                                push rbp	      1992	prdbg.c	FUNCTION_60
0x40037d3	          0x4889e5	                            mov rbp, rsp	      1992	prdbg.c	FUNCTION_60
0x40037d6	        0x4883ec60	                           sub rsp, 0x60	      1992	prdbg.c	FUNCTION_60
0x40037da	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1992	prdbg.c	FUNCTION_60
0x40037de	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1992	prdbg.c	FUNCTION_60
0x40037e2	        0x488955a8	             mov qword [rbp - 0x58], rdx	      1992	prdbg.c	FUNCTION_60
0x40037e6	        0x48894da0	             mov qword [rbp - 0x60], rcx	      1992	prdbg.c	FUNCTION_60
0x40037ea	    0x64488b042528	                mov rax, qword fs:[0x28]	      1992	prdbg.c	FUNCTION_60
0x40037f3	        0x488945f8	                mov qword [rbp - 8], rax	      1992	prdbg.c	FUNCTION_60
0x40037f7	            0x31c0	                            xor eax, eax	      1992	prdbg.c	FUNCTION_60
0x40037f9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1993	prdbg.c	FUNCTION_60
0x40037fd	        0x488945d0	             mov qword [rbp - 0x30], rax	      1993	prdbg.c	FUNCTION_60
0x4003801	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1998	prdbg.c	FUNCTION_60	IF_1	CALL_1
0x4003805	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1998	prdbg.c	FUNCTION_60	IF_1	CALL_1
0x4003809	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      1998	prdbg.c	FUNCTION_60	IF_1	CALL_1
0x400380d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1998	prdbg.c	FUNCTION_60	IF_1	CALL_1
0x4003811	          0x4889c7	                            mov rdi, rax	      1998	prdbg.c	FUNCTION_60	IF_1	CALL_1
0x4003814	      0xe8b0d2ffff	                   call sym.pr_enum_type	      1998	prdbg.c	FUNCTION_60	IF_1	CALL_1
0x4003819	            0x85c0	                           test eax, eax	      1998	prdbg.c	FUNCTION_60	IF_1	CALL_1
0x400381b	            0x750a	                           jne 0x4003827	      1998	prdbg.c	FUNCTION_60	IF_1	CALL_1
0x400381d	      0xb800000000	                              mov eax, 0	      1999	prdbg.c	FUNCTION_60	IF_1
0x4003822	      0xe9fe000000	                           jmp 0x4003925	      1999	prdbg.c	FUNCTION_60	IF_1
0x4003827	      0x48837db000	               cmp qword [rbp - 0x50], 0	      2001	prdbg.c	FUNCTION_60
0x400382c	            0x7406	                            je 0x4003834	      2001	prdbg.c	FUNCTION_60
0x400382e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2001	prdbg.c	FUNCTION_60
0x4003832	            0xeb05	                           jmp 0x4003839	      2001	prdbg.c	FUNCTION_60
0x4003834	      0xb800000000	                              mov eax, 0	      2001	prdbg.c	FUNCTION_60
0x4003839	        0x488945d8	             mov qword [rbp - 0x28], rax	      2001	prdbg.c	FUNCTION_60
0x400383d	      0x48837db000	               cmp qword [rbp - 0x50], 0	      2003	prdbg.c	FUNCTION_60	IF_2
0x4003842	            0x7434	                            je 0x4003878	      2003	prdbg.c	FUNCTION_60	IF_2
0x4003844	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2005	prdbg.c	FUNCTION_60	IF_2
0x4003848	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2005	prdbg.c	FUNCTION_60	IF_2
0x400384c	        0x488b7008	                mov rsi, qword [rax + 8]	      2004	prdbg.c	FUNCTION_60	IF_2	CALL_2
0x4003850	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2004	prdbg.c	FUNCTION_60	IF_2	CALL_2
0x4003854	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      2004	prdbg.c	FUNCTION_60	IF_2	CALL_2
0x4003858	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2004	prdbg.c	FUNCTION_60	IF_2	CALL_2
0x400385c	          0x488b00	                    mov rax, qword [rax]	      2004	prdbg.c	FUNCTION_60	IF_2	CALL_2
0x400385f	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2004	prdbg.c	FUNCTION_60	IF_2	CALL_2
0x4003863	          0x4989f0	                             mov r8, rsi	      2004	prdbg.c	FUNCTION_60	IF_2	CALL_2
0x4003866	      0xbe00000000	                              mov esi, 0	      2004	prdbg.c	FUNCTION_60	IF_2	CALL_2
0x400386b	          0x4889c7	                            mov rdi, rax	      2004	prdbg.c	FUNCTION_60	IF_2	CALL_2
0x400386e	      0xb800000000	                              mov eax, 0	      2004	prdbg.c	FUNCTION_60	IF_2	CALL_2
0x4003873	      0xe800000000	                          call 0x4003878	      2004	prdbg.c	FUNCTION_60	IF_2	CALL_2
0x4003878	      0x48837da800	               cmp qword [rbp - 0x58], 0	      2008	prdbg.c	FUNCTION_60	IF_3
0x400387d	     0xf849d000000	                            je 0x4003920	      2008	prdbg.c	FUNCTION_60	IF_3
0x4003883	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x400388a	            0xeb76	                           jmp 0x4003902	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x400388c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2012	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_3
0x400388f	    0x488d14c50000	                        lea rdx, [rax*8]	      2012	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_3
0x4003897	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2012	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_3
0x400389b	          0x4801d0	                            add rax, rdx	      2012	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_3
0x400389e	          0x488b00	                    mov rax, qword [rax]	      2012	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_3
0x40038a1	          0x4889c7	                            mov rdi, rax	      2012	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_3
0x40038a4	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2012	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_3
0x40038a8	      0xb900000000	                              mov ecx, 0	      2012	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_3
0x40038ad	      0xba00000000	                              mov edx, 0	      2012	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_3
0x40038b2	          0x4889c6	                            mov rsi, rax	      2012	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_3
0x40038b5	      0xe8abceffff	                      call sym.print_vma	      2012	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_3
0x40038ba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2013	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_4
0x40038be	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      2013	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_4
0x40038c2	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2014	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x40038c5	    0x488d14c50000	                        lea rdx, [rax*8]	      2014	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x40038cd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2014	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x40038d1	          0x4801d0	                            add rax, rdx	      2014	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x40038d4	          0x488b10	                    mov rdx, qword [rax]	      2013	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_4
0x40038d7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2013	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_4
0x40038db	          0x488b00	                    mov rax, qword [rax]	      2013	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_4
0x40038de	        0x488d7de0	                   lea rdi, [rbp - 0x20]	      2013	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_4
0x40038e2	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      2013	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_4
0x40038e6	          0x4989f9	                             mov r9, rdi	      2013	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_4
0x40038e9	          0x4989f0	                             mov r8, rsi	      2013	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_4
0x40038ec	      0xbe00000000	                              mov esi, 0	      2013	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_4
0x40038f1	          0x4889c7	                            mov rdi, rax	      2013	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_4
0x40038f4	      0xb800000000	                              mov eax, 0	      2013	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_4
0x40038f9	      0xe800000000	                          call 0x40038fe	      2013	prdbg.c	FUNCTION_60	IF_3	FOR_1	CALL_4
0x40038fe	        0x8345cc01	               add dword [rbp - 0x34], 1	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x4003902	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x4003905	    0x488d14c50000	                        lea rdx, [rax*8]	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x400390d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x4003911	          0x4801d0	                            add rax, rdx	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x4003914	          0x488b00	                    mov rax, qword [rax]	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x4003917	          0x4885c0	                           test rax, rax	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x400391a	     0xf856cffffff	                           jne 0x400388c	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x4003920	      0xb801000000	                              mov eax, 1	      2018	prdbg.c	FUNCTION_60
0x4003925	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2019	prdbg.c	FUNCTION_60
0x4003929	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2019	prdbg.c	FUNCTION_60
0x4003932	            0x7405	                            je 0x4003939	      2019	prdbg.c	FUNCTION_60
0x4003934	      0xe800000000	                          call 0x4003939	      2019	prdbg.c	FUNCTION_60
0x4003939	              0xc9	                                   leave	      2019	prdbg.c	FUNCTION_60
0x400393a	              0xc3	                                     ret	      2019	prdbg.c	FUNCTION_60
tg_start_source	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,2:DO,0:ELSE,0:IF,0	20
0x400378c	              0x55	                                push rbp	      1977	prdbg.c	FUNCTION_59
0x400378d	          0x4889e5	                            mov rbp, rsp	      1977	prdbg.c	FUNCTION_59
0x4003790	        0x4883ec20	                           sub rsp, 0x20	      1977	prdbg.c	FUNCTION_59
0x4003794	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1977	prdbg.c	FUNCTION_59
0x4003798	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1977	prdbg.c	FUNCTION_59
0x400379c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1978	prdbg.c	FUNCTION_59
0x40037a0	        0x488945f8	                mov qword [rbp - 8], rax	      1978	prdbg.c	FUNCTION_59
0x40037a4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1980	prdbg.c	FUNCTION_59	CALL_1
0x40037a8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1980	prdbg.c	FUNCTION_59	CALL_1
0x40037ac	          0x4889c7	                            mov rdi, rax	      1980	prdbg.c	FUNCTION_59	CALL_1
0x40037af	      0xe800000000	                          call 0x40037b4	      1980	prdbg.c	FUNCTION_59	CALL_1
0x40037b4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1982	prdbg.c	FUNCTION_59	CALL_2
0x40037b8	          0x4889c7	                            mov rdi, rax	      1982	prdbg.c	FUNCTION_59	CALL_2
0x40037bb	      0xe800000000	                          call 0x40037c0	      1982	prdbg.c	FUNCTION_59	CALL_2
0x40037c0	          0x4889c2	                            mov rdx, rax	      1982	prdbg.c	FUNCTION_59	CALL_2
0x40037c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1982	prdbg.c	FUNCTION_59	CALL_2
0x40037c7	        0x48895020	             mov qword [rax + 0x20], rdx	      1982	prdbg.c	FUNCTION_59	CALL_2
0x40037cb	      0xb801000000	                              mov eax, 1	      1984	prdbg.c	FUNCTION_59
0x40037d0	              0xc9	                                   leave	      1985	prdbg.c	FUNCTION_59
0x40037d1	              0xc3	                                     ret	      1985	prdbg.c	FUNCTION_59
pr_struct_field	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,14:DO,0:ELSE,0:IF,7	119
0x4001ce5	              0x55	                                push rbp	      1152	prdbg.c	FUNCTION_32
0x4001ce6	          0x4889e5	                            mov rbp, rsp	      1152	prdbg.c	FUNCTION_32
0x4001ce9	        0x4883ec60	                           sub rsp, 0x60	      1152	prdbg.c	FUNCTION_32
0x4001ced	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1152	prdbg.c	FUNCTION_32
0x4001cf1	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1152	prdbg.c	FUNCTION_32
0x4001cf5	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1152	prdbg.c	FUNCTION_32
0x4001cf9	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1152	prdbg.c	FUNCTION_32
0x4001cfd	        0x448945ac	             mov dword [rbp - 0x54], r8d	      1152	prdbg.c	FUNCTION_32
0x4001d01	    0x64488b042528	                mov rax, qword fs:[0x28]	      1152	prdbg.c	FUNCTION_32
0x4001d0a	        0x488945f8	                mov qword [rbp - 8], rax	      1152	prdbg.c	FUNCTION_32
0x4001d0e	            0x31c0	                            xor eax, eax	      1152	prdbg.c	FUNCTION_32
0x4001d10	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1153	prdbg.c	FUNCTION_32
0x4001d14	        0x488945d0	             mov qword [rbp - 0x30], rax	      1153	prdbg.c	FUNCTION_32
0x4001d18	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1157	prdbg.c	FUNCTION_32	IF_1	CALL_1
0x4001d1c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1157	prdbg.c	FUNCTION_32	IF_1	CALL_1
0x4001d20	          0x4889d6	                            mov rsi, rdx	      1157	prdbg.c	FUNCTION_32	IF_1	CALL_1
0x4001d23	          0x4889c7	                            mov rdi, rax	      1157	prdbg.c	FUNCTION_32	IF_1	CALL_1
0x4001d26	      0xe879e7ffff	                call sym.substitute_type	      1157	prdbg.c	FUNCTION_32	IF_1	CALL_1
0x4001d2b	            0x85c0	                           test eax, eax	      1157	prdbg.c	FUNCTION_32	IF_1	CALL_1
0x4001d2d	            0x750a	                           jne 0x4001d39	      1157	prdbg.c	FUNCTION_32	IF_1	CALL_1
0x4001d2f	      0xb800000000	                              mov eax, 0	      1158	prdbg.c	FUNCTION_32	IF_1
0x4001d34	      0xe94a010000	                           jmp 0x4001e83	      1158	prdbg.c	FUNCTION_32	IF_1
0x4001d39	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1160	prdbg.c	FUNCTION_32	IF_2	CALL_2
0x4001d3d	      0xbe00000000	                              mov esi, 0	      1160	prdbg.c	FUNCTION_32	IF_2	CALL_2
0x4001d42	          0x4889c7	                            mov rdi, rax	      1160	prdbg.c	FUNCTION_32	IF_2	CALL_2
0x4001d45	      0xe8aee5ffff	                    call sym.append_type	      1160	prdbg.c	FUNCTION_32	IF_2	CALL_2
0x4001d4a	            0x85c0	                           test eax, eax	      1160	prdbg.c	FUNCTION_32	IF_2	CALL_2
0x4001d4c	            0x750a	                           jne 0x4001d58	      1160	prdbg.c	FUNCTION_32	IF_2	CALL_2
0x4001d4e	      0xb800000000	                              mov eax, 0	      1161	prdbg.c	FUNCTION_32	IF_2
0x4001d53	      0xe92b010000	                           jmp 0x4001e83	      1161	prdbg.c	FUNCTION_32	IF_2
0x4001d58	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1163	prdbg.c	FUNCTION_32	IF_3
0x4001d5d	            0x7465	                            je 0x4001dc4	      1163	prdbg.c	FUNCTION_32	IF_3
0x4001d5f	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      1165	prdbg.c	FUNCTION_32	IF_3	CALL_3
0x4001d63	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1165	prdbg.c	FUNCTION_32	IF_3	CALL_3
0x4001d67	      0xb900000000	                              mov ecx, 0	      1165	prdbg.c	FUNCTION_32	IF_3	CALL_3
0x4001d6c	      0xba01000000	                              mov edx, 1	      1165	prdbg.c	FUNCTION_32	IF_3	CALL_3
0x4001d71	          0x4889c7	                            mov rdi, rax	      1165	prdbg.c	FUNCTION_32	IF_3	CALL_3
0x4001d74	      0xe8ece9ffff	                      call sym.print_vma	      1165	prdbg.c	FUNCTION_32	IF_3	CALL_3
0x4001d79	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1166	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_4
0x4001d7d	      0xbe00000000	                              mov esi, 0	      1166	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_4
0x4001d82	          0x4889c7	                            mov rdi, rax	      1166	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_4
0x4001d85	      0xe86ee5ffff	                    call sym.append_type	      1166	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_4
0x4001d8a	            0x85c0	                           test eax, eax	      1166	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_4
0x4001d8c	            0x742c	                            je 0x4001dba	      1166	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_4
0x4001d8e	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1167	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_5
0x4001d92	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1167	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_5
0x4001d96	          0x4889d6	                            mov rsi, rdx	      1167	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_5
0x4001d99	          0x4889c7	                            mov rdi, rax	      1167	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_5
0x4001d9c	      0xe857e5ffff	                    call sym.append_type	      1167	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_5
0x4001da1	            0x85c0	                           test eax, eax	      1167	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_5
0x4001da3	            0x7415	                            je 0x4001dba	      1167	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_5
0x4001da5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1168	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_6
0x4001da9	      0xbe00000000	                              mov esi, 0	      1168	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_6
0x4001dae	          0x4889c7	                            mov rdi, rax	      1168	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_6
0x4001db1	      0xe842e5ffff	                    call sym.append_type	      1168	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_6
0x4001db6	            0x85c0	                           test eax, eax	      1168	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_6
0x4001db8	            0x750a	                           jne 0x4001dc4	      1168	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_6
0x4001dba	      0xb800000000	                              mov eax, 0	      1169	prdbg.c	FUNCTION_32	IF_3	IF_4
0x4001dbf	      0xe9bf000000	                           jmp 0x4001e83	      1169	prdbg.c	FUNCTION_32	IF_3	IF_4
0x4001dc4	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      1172	prdbg.c	FUNCTION_32	CALL_7
0x4001dc8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1172	prdbg.c	FUNCTION_32	CALL_7
0x4001dcc	      0xb900000000	                              mov ecx, 0	      1172	prdbg.c	FUNCTION_32	CALL_7
0x4001dd1	      0xba01000000	                              mov edx, 1	      1172	prdbg.c	FUNCTION_32	CALL_7
0x4001dd6	          0x4889c7	                            mov rdi, rax	      1172	prdbg.c	FUNCTION_32	CALL_7
0x4001dd9	      0xe887e9ffff	                      call sym.print_vma	      1172	prdbg.c	FUNCTION_32	CALL_7
0x4001dde	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1173	prdbg.c	FUNCTION_32	IF_5	CALL_8
0x4001de2	      0xbe00000000	                              mov esi, 0	      1173	prdbg.c	FUNCTION_32	IF_5	CALL_8
0x4001de7	          0x4889c7	                            mov rdi, rax	      1173	prdbg.c	FUNCTION_32	IF_5	CALL_8
0x4001dea	      0xe809e5ffff	                    call sym.append_type	      1173	prdbg.c	FUNCTION_32	IF_5	CALL_8
0x4001def	            0x85c0	                           test eax, eax	      1173	prdbg.c	FUNCTION_32	IF_5	CALL_8
0x4001df1	            0x743c	                            je 0x4001e2f	      1173	prdbg.c	FUNCTION_32	IF_5	CALL_8
0x4001df3	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1174	prdbg.c	FUNCTION_32	IF_5	CALL_9
0x4001df7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1174	prdbg.c	FUNCTION_32	IF_5	CALL_9
0x4001dfb	          0x4889d6	                            mov rsi, rdx	      1174	prdbg.c	FUNCTION_32	IF_5	CALL_9
0x4001dfe	          0x4889c7	                            mov rdi, rax	      1174	prdbg.c	FUNCTION_32	IF_5	CALL_9
0x4001e01	      0xe8f2e4ffff	                    call sym.append_type	      1174	prdbg.c	FUNCTION_32	IF_5	CALL_9
0x4001e06	            0x85c0	                           test eax, eax	      1174	prdbg.c	FUNCTION_32	IF_5	CALL_9
0x4001e08	            0x7425	                            je 0x4001e2f	      1174	prdbg.c	FUNCTION_32	IF_5	CALL_9
0x4001e0a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1175	prdbg.c	FUNCTION_32	IF_5	CALL_10
0x4001e0e	      0xbe00000000	                              mov esi, 0	      1175	prdbg.c	FUNCTION_32	IF_5	CALL_10
0x4001e13	          0x4889c7	                            mov rdi, rax	      1175	prdbg.c	FUNCTION_32	IF_5	CALL_10
0x4001e16	      0xe8dde4ffff	                    call sym.append_type	      1175	prdbg.c	FUNCTION_32	IF_5	CALL_10
0x4001e1b	            0x85c0	                           test eax, eax	      1175	prdbg.c	FUNCTION_32	IF_5	CALL_10
0x4001e1d	            0x7410	                            je 0x4001e2f	      1175	prdbg.c	FUNCTION_32	IF_5	CALL_10
0x4001e1f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1176	prdbg.c	FUNCTION_32	IF_5	CALL_11
0x4001e23	          0x4889c7	                            mov rdi, rax	      1176	prdbg.c	FUNCTION_32	IF_5	CALL_11
0x4001e26	      0xe887e8ffff	                    call sym.indent_type	      1176	prdbg.c	FUNCTION_32	IF_5	CALL_11
0x4001e2b	            0x85c0	                           test eax, eax	      1176	prdbg.c	FUNCTION_32	IF_5	CALL_11
0x4001e2d	            0x7507	                           jne 0x4001e36	      1176	prdbg.c	FUNCTION_32	IF_5	CALL_11
0x4001e2f	      0xb800000000	                              mov eax, 0	      1177	prdbg.c	FUNCTION_32	IF_5
0x4001e34	            0xeb4d	                           jmp 0x4001e83	      1177	prdbg.c	FUNCTION_32	IF_5
0x4001e36	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1179	prdbg.c	FUNCTION_32	CALL_12
0x4001e3a	          0x4889c7	                            mov rdi, rax	      1179	prdbg.c	FUNCTION_32	CALL_12
0x4001e3d	      0xe8b8e8ffff	                       call sym.pop_type	      1179	prdbg.c	FUNCTION_32	CALL_12
0x4001e42	        0x488945d8	             mov qword [rbp - 0x28], rax	      1179	prdbg.c	FUNCTION_32	CALL_12
0x4001e46	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1180	prdbg.c	FUNCTION_32	IF_6
0x4001e4b	            0x7507	                           jne 0x4001e54	      1180	prdbg.c	FUNCTION_32	IF_6
0x4001e4d	      0xb800000000	                              mov eax, 0	      1181	prdbg.c	FUNCTION_32	IF_6
0x4001e52	            0xeb2f	                           jmp 0x4001e83	      1181	prdbg.c	FUNCTION_32	IF_6
0x4001e54	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1183	prdbg.c	FUNCTION_32	IF_7	CALL_13
0x4001e57	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1183	prdbg.c	FUNCTION_32	IF_7	CALL_13
0x4001e5b	            0x89d6	                            mov esi, edx	      1183	prdbg.c	FUNCTION_32	IF_7	CALL_13
0x4001e5d	          0x4889c7	                            mov rdi, rax	      1183	prdbg.c	FUNCTION_32	IF_7	CALL_13
0x4001e60	      0xe82bfdffff	              call sym.pr_fix_visibility	      1183	prdbg.c	FUNCTION_32	IF_7	CALL_13
0x4001e65	            0x85c0	                           test eax, eax	      1183	prdbg.c	FUNCTION_32	IF_7	CALL_13
0x4001e67	            0x7507	                           jne 0x4001e70	      1183	prdbg.c	FUNCTION_32	IF_7	CALL_13
0x4001e69	      0xb800000000	                              mov eax, 0	      1184	prdbg.c	FUNCTION_32	IF_7
0x4001e6e	            0xeb13	                           jmp 0x4001e83	      1184	prdbg.c	FUNCTION_32	IF_7
0x4001e70	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1186	prdbg.c	FUNCTION_32	CALL_14
0x4001e74	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1186	prdbg.c	FUNCTION_32	CALL_14
0x4001e78	          0x4889d6	                            mov rsi, rdx	      1186	prdbg.c	FUNCTION_32	CALL_14
0x4001e7b	          0x4889c7	                            mov rdi, rax	      1186	prdbg.c	FUNCTION_32	CALL_14
0x4001e7e	      0xe875e4ffff	                    call sym.append_type	      1186	prdbg.c	FUNCTION_32	CALL_14
0x4001e83	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1187	prdbg.c	FUNCTION_32
0x4001e87	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1187	prdbg.c	FUNCTION_32
0x4001e90	            0x7405	                            je 0x4001e97	      1187	prdbg.c	FUNCTION_32
0x4001e92	      0xe800000000	                          call 0x4001e97	      1187	prdbg.c	FUNCTION_32
0x4001e97	              0xc9	                                   leave	      1187	prdbg.c	FUNCTION_32
0x4001e98	              0xc3	                                     ret	      1187	prdbg.c	FUNCTION_32
pr_enum_type	WHILE,0:FOR,1:functions,0:SWITCH,0:CALL,11:DO,0:ELSE,1:IF,11	139
0x4000ac9	              0x55	                                push rbp	       638	prdbg.c	FUNCTION_19
0x4000aca	          0x4889e5	                            mov rbp, rsp	       638	prdbg.c	FUNCTION_19
0x4000acd	        0x4883ec60	                           sub rsp, 0x60	       638	prdbg.c	FUNCTION_19
0x4000ad1	        0x48897db8	             mov qword [rbp - 0x48], rdi	       638	prdbg.c	FUNCTION_19
0x4000ad5	        0x488975b0	             mov qword [rbp - 0x50], rsi	       638	prdbg.c	FUNCTION_19
0x4000ad9	        0x488955a8	             mov qword [rbp - 0x58], rdx	       638	prdbg.c	FUNCTION_19
0x4000add	        0x48894da0	             mov qword [rbp - 0x60], rcx	       638	prdbg.c	FUNCTION_19
0x4000ae1	    0x64488b042528	                mov rax, qword fs:[0x28]	       638	prdbg.c	FUNCTION_19
0x4000aea	        0x488945f8	                mov qword [rbp - 8], rax	       638	prdbg.c	FUNCTION_19
0x4000aee	            0x31c0	                            xor eax, eax	       638	prdbg.c	FUNCTION_19
0x4000af0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       639	prdbg.c	FUNCTION_19
0x4000af4	        0x488945d8	             mov qword [rbp - 0x28], rax	       639	prdbg.c	FUNCTION_19
0x4000af8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       643	prdbg.c	FUNCTION_19	IF_1	CALL_1
0x4000afc	      0xbe00000000	                              mov esi, 0	       643	prdbg.c	FUNCTION_19	IF_1	CALL_1
0x4000b01	          0x4889c7	                            mov rdi, rax	       643	prdbg.c	FUNCTION_19	IF_1	CALL_1
0x4000b04	      0xe89af6ffff	                      call sym.push_type	       643	prdbg.c	FUNCTION_19	IF_1	CALL_1
0x4000b09	            0x85c0	                           test eax, eax	       643	prdbg.c	FUNCTION_19	IF_1	CALL_1
0x4000b0b	            0x750a	                           jne 0x4000b17	       643	prdbg.c	FUNCTION_19	IF_1	CALL_1
0x4000b0d	      0xb800000000	                              mov eax, 0	       644	prdbg.c	FUNCTION_19	IF_1
0x4000b12	      0xe9be010000	                           jmp 0x4000cd5	       644	prdbg.c	FUNCTION_19	IF_1
0x4000b17	      0x48837db000	               cmp qword [rbp - 0x50], 0	       645	prdbg.c	FUNCTION_19	IF_2
0x4000b1c	            0x7436	                            je 0x4000b54	       645	prdbg.c	FUNCTION_19	IF_2
0x4000b1e	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       647	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4000b22	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       647	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4000b26	          0x4889d6	                            mov rsi, rdx	       647	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4000b29	          0x4889c7	                            mov rdi, rax	       647	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4000b2c	      0xe8c7f7ffff	                    call sym.append_type	       647	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4000b31	            0x85c0	                           test eax, eax	       647	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4000b33	            0x7415	                            je 0x4000b4a	       647	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4000b35	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       648	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x4000b39	      0xbe00000000	                              mov esi, 0	       648	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x4000b3e	          0x4889c7	                            mov rdi, rax	       648	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x4000b41	      0xe8b2f7ffff	                    call sym.append_type	       648	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x4000b46	            0x85c0	                           test eax, eax	       648	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x4000b48	            0x750a	                           jne 0x4000b54	       648	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x4000b4a	      0xb800000000	                              mov eax, 0	       649	prdbg.c	FUNCTION_19	IF_2	IF_3
0x4000b4f	      0xe981010000	                           jmp 0x4000cd5	       649	prdbg.c	FUNCTION_19	IF_2	IF_3
0x4000b54	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       651	prdbg.c	FUNCTION_19	IF_4	CALL_4
0x4000b58	      0xbe00000000	                              mov esi, 0	       651	prdbg.c	FUNCTION_19	IF_4	CALL_4
0x4000b5d	          0x4889c7	                            mov rdi, rax	       651	prdbg.c	FUNCTION_19	IF_4	CALL_4
0x4000b60	      0xe893f7ffff	                    call sym.append_type	       651	prdbg.c	FUNCTION_19	IF_4	CALL_4
0x4000b65	            0x85c0	                           test eax, eax	       651	prdbg.c	FUNCTION_19	IF_4	CALL_4
0x4000b67	            0x750a	                           jne 0x4000b73	       651	prdbg.c	FUNCTION_19	IF_4	CALL_4
0x4000b69	      0xb800000000	                              mov eax, 0	       652	prdbg.c	FUNCTION_19	IF_4
0x4000b6e	      0xe962010000	                           jmp 0x4000cd5	       652	prdbg.c	FUNCTION_19	IF_4
0x4000b73	      0x48837da800	               cmp qword [rbp - 0x58], 0	       654	prdbg.c	FUNCTION_19	IF_5
0x4000b78	            0x7523	                           jne 0x4000b9d	       654	prdbg.c	FUNCTION_19	IF_5
0x4000b7a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       656	prdbg.c	FUNCTION_19	IF_5	IF_6	CALL_5
0x4000b7e	      0xbe00000000	                              mov esi, 0	       656	prdbg.c	FUNCTION_19	IF_5	IF_6	CALL_5
0x4000b83	          0x4889c7	                            mov rdi, rax	       656	prdbg.c	FUNCTION_19	IF_5	IF_6	CALL_5
0x4000b86	      0xe86df7ffff	                    call sym.append_type	       656	prdbg.c	FUNCTION_19	IF_5	IF_6	CALL_5
0x4000b8b	            0x85c0	                           test eax, eax	       656	prdbg.c	FUNCTION_19	IF_5	IF_6	CALL_5
0x4000b8d	     0xf8531010000	                           jne 0x4000cc4	       656	prdbg.c	FUNCTION_19	IF_5	IF_6	CALL_5
0x4000b93	      0xb800000000	                              mov eax, 0	       657	prdbg.c	FUNCTION_19	IF_5	IF_6
0x4000b98	      0xe938010000	                           jmp 0x4000cd5	       657	prdbg.c	FUNCTION_19	IF_5	IF_6
0x4000b9d	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       661	prdbg.c	FUNCTION_19	ELSE_1
0x4000ba5	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4000bac	      0xe9f5000000	                           jmp 0x4000ca6	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4000bb1	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       664	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7
0x4000bb5	            0x741f	                            je 0x4000bd6	       664	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7
0x4000bb7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x4000bbb	      0xbe00000000	                              mov esi, 0	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x4000bc0	          0x4889c7	                            mov rdi, rax	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x4000bc3	      0xe830f7ffff	                    call sym.append_type	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x4000bc8	            0x85c0	                           test eax, eax	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x4000bca	            0x750a	                           jne 0x4000bd6	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x4000bcc	      0xb800000000	                              mov eax, 0	       667	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8
0x4000bd1	      0xe9ff000000	                           jmp 0x4000cd5	       667	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8
0x4000bd6	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x4000bd9	    0x488d14c50000	                        lea rdx, [rax*8]	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x4000be1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x4000be5	          0x4801d0	                            add rax, rdx	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x4000be8	          0x488b10	                    mov rdx, qword [rax]	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x4000beb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x4000bef	          0x4889d6	                            mov rsi, rdx	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x4000bf2	          0x4889c7	                            mov rdi, rax	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x4000bf5	      0xe8fef6ffff	                    call sym.append_type	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x4000bfa	            0x85c0	                           test eax, eax	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x4000bfc	            0x750a	                           jne 0x4000c08	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x4000bfe	      0xb800000000	                              mov eax, 0	       671	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9
0x4000c03	      0xe9cd000000	                           jmp 0x4000cd5	       671	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9
0x4000c08	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       673	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4000c0b	    0x488d14c50000	                        lea rdx, [rax*8]	       673	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4000c13	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       673	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4000c17	          0x4801d0	                            add rax, rdx	       673	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4000c1a	          0x488b00	                    mov rax, qword [rax]	       673	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4000c1d	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       673	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4000c21	            0x747a	                            je 0x4000c9d	       673	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4000c23	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       677	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	CALL_8
0x4000c26	    0x488d14c50000	                        lea rdx, [rax*8]	       677	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	CALL_8
0x4000c2e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       677	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	CALL_8
0x4000c32	          0x4801d0	                            add rax, rdx	       677	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	CALL_8
0x4000c35	          0x488b00	                    mov rax, qword [rax]	       677	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	CALL_8
0x4000c38	          0x4889c7	                            mov rdi, rax	       677	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	CALL_8
0x4000c3b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       677	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	CALL_8
0x4000c3f	      0xb900000000	                              mov ecx, 0	       677	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	CALL_8
0x4000c44	      0xba00000000	                              mov edx, 0	       677	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	CALL_8
0x4000c49	          0x4889c6	                            mov rsi, rax	       677	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	CALL_8
0x4000c4c	      0xe814fbffff	                      call sym.print_vma	       677	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	CALL_8
0x4000c51	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       678	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_9
0x4000c55	      0xbe00000000	                              mov esi, 0	       678	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_9
0x4000c5a	          0x4889c7	                            mov rdi, rax	       678	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_9
0x4000c5d	      0xe896f6ffff	                    call sym.append_type	       678	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_9
0x4000c62	            0x85c0	                           test eax, eax	       678	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_9
0x4000c64	            0x7417	                            je 0x4000c7d	       678	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_9
0x4000c66	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       679	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_10
0x4000c6a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       679	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_10
0x4000c6e	          0x4889d6	                            mov rsi, rdx	       679	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_10
0x4000c71	          0x4889c7	                            mov rdi, rax	       679	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_10
0x4000c74	      0xe87ff6ffff	                    call sym.append_type	       679	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_10
0x4000c79	            0x85c0	                           test eax, eax	       679	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_10
0x4000c7b	            0x7507	                           jne 0x4000c84	       679	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_10
0x4000c7d	      0xb800000000	                              mov eax, 0	       680	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11
0x4000c82	            0xeb51	                           jmp 0x4000cd5	       680	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11
0x4000c84	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       681	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4000c87	    0x488d14c50000	                        lea rdx, [rax*8]	       681	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4000c8f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       681	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4000c93	          0x4801d0	                            add rax, rdx	       681	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4000c96	          0x488b00	                    mov rax, qword [rax]	       681	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4000c99	        0x488945d0	             mov qword [rbp - 0x30], rax	       681	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4000c9d	      0x488345d001	               add qword [rbp - 0x30], 1	       684	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4000ca2	        0x8345cc01	               add dword [rbp - 0x34], 1	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4000ca6	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4000ca9	    0x488d14c50000	                        lea rdx, [rax*8]	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4000cb1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4000cb5	          0x4801d0	                            add rax, rdx	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4000cb8	          0x488b00	                    mov rax, qword [rax]	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4000cbb	          0x4885c0	                           test rax, rax	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4000cbe	     0xf85edfeffff	                           jne 0x4000bb1	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4000cc4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       688	prdbg.c	FUNCTION_19	CALL_11
0x4000cc8	      0xbe00000000	                              mov esi, 0	       688	prdbg.c	FUNCTION_19	CALL_11
0x4000ccd	          0x4889c7	                            mov rdi, rax	       688	prdbg.c	FUNCTION_19	CALL_11
0x4000cd0	      0xe823f6ffff	                    call sym.append_type	       688	prdbg.c	FUNCTION_19	CALL_11
0x4000cd5	        0x488b4df8	                mov rcx, qword [rbp - 8]	       689	prdbg.c	FUNCTION_19
0x4000cd9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       689	prdbg.c	FUNCTION_19
0x4000ce2	            0x7405	                            je 0x4000ce9	       689	prdbg.c	FUNCTION_19
0x4000ce4	      0xe800000000	                          call 0x4000ce9	       689	prdbg.c	FUNCTION_19
0x4000ce9	              0xc9	                                   leave	       689	prdbg.c	FUNCTION_19
0x4000cea	              0xc3	                                     ret	       689	prdbg.c	FUNCTION_19
tg_class_static_member	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,17:DO,0:ELSE,0:IF,5	122
0x4003da2	              0x55	                                push rbp	      2176	prdbg.c	FUNCTION_66
0x4003da3	          0x4889e5	                            mov rbp, rsp	      2176	prdbg.c	FUNCTION_66
0x4003da6	        0x4883ec40	                           sub rsp, 0x40	      2176	prdbg.c	FUNCTION_66
0x4003daa	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2176	prdbg.c	FUNCTION_66
0x4003dae	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2176	prdbg.c	FUNCTION_66
0x4003db2	        0x488955c8	             mov qword [rbp - 0x38], rdx	      2176	prdbg.c	FUNCTION_66
0x4003db6	          0x894dc4	             mov dword [rbp - 0x3c], ecx	      2176	prdbg.c	FUNCTION_66
0x4003db9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2177	prdbg.c	FUNCTION_66
0x4003dbd	        0x488945e8	             mov qword [rbp - 0x18], rax	      2177	prdbg.c	FUNCTION_66
0x4003dc1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2182	prdbg.c	FUNCTION_66	CALL_1
0x4003dc5	          0x4889c7	                            mov rdi, rax	      2182	prdbg.c	FUNCTION_66	CALL_1
0x4003dc8	      0xe800000000	                          call 0x4003dcd	      2182	prdbg.c	FUNCTION_66	CALL_1
0x4003dcd	          0x8945e0	             mov dword [rbp - 0x20], eax	      2182	prdbg.c	FUNCTION_66	CALL_1
0x4003dd0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2183	prdbg.c	FUNCTION_66	CALL_2
0x4003dd4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2183	prdbg.c	FUNCTION_66	CALL_2
0x4003dd8	          0x488b00	                    mov rax, qword [rax]	      2183	prdbg.c	FUNCTION_66	CALL_2
0x4003ddb	        0x488b4008	                mov rax, qword [rax + 8]	      2183	prdbg.c	FUNCTION_66	CALL_2
0x4003ddf	          0x4889c7	                            mov rdi, rax	      2183	prdbg.c	FUNCTION_66	CALL_2
0x4003de2	      0xe800000000	                          call 0x4003de7	      2183	prdbg.c	FUNCTION_66	CALL_2
0x4003de7	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2183	prdbg.c	FUNCTION_66	CALL_2
0x4003dea	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      2184	prdbg.c	FUNCTION_66	CALL_3
0x4003ded	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2184	prdbg.c	FUNCTION_66	CALL_3
0x4003df0	             0x1d0	                            add eax, edx	      2184	prdbg.c	FUNCTION_66	CALL_3
0x4003df2	          0x83c003	                              add eax, 3	      2184	prdbg.c	FUNCTION_66	CALL_3
0x4003df5	            0x4898	                                    cdqe	      2184	prdbg.c	FUNCTION_66	CALL_3
0x4003df7	          0x4889c7	                            mov rdi, rax	      2184	prdbg.c	FUNCTION_66	CALL_3
0x4003dfa	      0xe800000000	                          call 0x4003dff	      2184	prdbg.c	FUNCTION_66	CALL_3
0x4003dff	        0x488945f0	             mov qword [rbp - 0x10], rax	      2184	prdbg.c	FUNCTION_66	CALL_3
0x4003e03	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2185	prdbg.c	FUNCTION_66	IF_1
0x4003e08	            0x750a	                           jne 0x4003e14	      2185	prdbg.c	FUNCTION_66	IF_1
0x4003e0a	      0xb800000000	                              mov eax, 0	      2186	prdbg.c	FUNCTION_66	IF_1
0x4003e0f	      0xe951010000	                           jmp 0x4003f65	      2186	prdbg.c	FUNCTION_66	IF_1
0x4003e14	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2187	prdbg.c	FUNCTION_66	CALL_4
0x4003e18	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2187	prdbg.c	FUNCTION_66	CALL_4
0x4003e1c	          0x488b00	                    mov rax, qword [rax]	      2187	prdbg.c	FUNCTION_66	CALL_4
0x4003e1f	        0x488b5008	                mov rdx, qword [rax + 8]	      2187	prdbg.c	FUNCTION_66	CALL_4
0x4003e23	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2187	prdbg.c	FUNCTION_66	CALL_4
0x4003e27	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2187	prdbg.c	FUNCTION_66	CALL_4
0x4003e2b	      0xbe00000000	                              mov esi, 0	      2187	prdbg.c	FUNCTION_66	CALL_4
0x4003e30	          0x4889c7	                            mov rdi, rax	      2187	prdbg.c	FUNCTION_66	CALL_4
0x4003e33	      0xb800000000	                              mov eax, 0	      2187	prdbg.c	FUNCTION_66	CALL_4
0x4003e38	      0xe800000000	                          call 0x4003e3d	      2187	prdbg.c	FUNCTION_66	CALL_4
0x4003e3d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_5
0x4003e41	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_5
0x4003e45	          0x4889d6	                            mov rsi, rdx	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_5
0x4003e48	          0x4889c7	                            mov rdi, rax	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_5
0x4003e4b	      0xe854c6ffff	                call sym.substitute_type	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_5
0x4003e50	            0x85c0	                           test eax, eax	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_5
0x4003e52	            0x7516	                           jne 0x4003e6a	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_5
0x4003e54	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2191	prdbg.c	FUNCTION_66	IF_2	CALL_6
0x4003e58	          0x4889c7	                            mov rdi, rax	      2191	prdbg.c	FUNCTION_66	IF_2	CALL_6
0x4003e5b	      0xe800000000	                          call 0x4003e60	      2191	prdbg.c	FUNCTION_66	IF_2	CALL_6
0x4003e60	      0xb800000000	                              mov eax, 0	      2192	prdbg.c	FUNCTION_66	IF_2
0x4003e65	      0xe9fb000000	                           jmp 0x4003f65	      2192	prdbg.c	FUNCTION_66	IF_2
0x4003e6a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2195	prdbg.c	FUNCTION_66	IF_3	CALL_7
0x4003e6e	      0xbe00000000	                              mov esi, 0	      2195	prdbg.c	FUNCTION_66	IF_3	CALL_7
0x4003e73	          0x4889c7	                            mov rdi, rax	      2195	prdbg.c	FUNCTION_66	IF_3	CALL_7
0x4003e76	      0xe8bac3ffff	                   call sym.prepend_type	      2195	prdbg.c	FUNCTION_66	IF_3	CALL_7
0x4003e7b	            0x85c0	                           test eax, eax	      2195	prdbg.c	FUNCTION_66	IF_3	CALL_7
0x4003e7d	            0x7516	                           jne 0x4003e95	      2195	prdbg.c	FUNCTION_66	IF_3	CALL_7
0x4003e7f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2197	prdbg.c	FUNCTION_66	IF_3	CALL_8
0x4003e83	          0x4889c7	                            mov rdi, rax	      2197	prdbg.c	FUNCTION_66	IF_3	CALL_8
0x4003e86	      0xe800000000	                          call 0x4003e8b	      2197	prdbg.c	FUNCTION_66	IF_3	CALL_8
0x4003e8b	      0xb800000000	                              mov eax, 0	      2198	prdbg.c	FUNCTION_66	IF_3
0x4003e90	      0xe9d0000000	                           jmp 0x4003f65	      2198	prdbg.c	FUNCTION_66	IF_3
0x4003e95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2201	prdbg.c	FUNCTION_66	CALL_9
0x4003e99	          0x4889c7	                            mov rdi, rax	      2201	prdbg.c	FUNCTION_66	CALL_9
0x4003e9c	      0xe859c8ffff	                       call sym.pop_type	      2201	prdbg.c	FUNCTION_66	CALL_9
0x4003ea1	        0x488945f8	                mov qword [rbp - 8], rax	      2201	prdbg.c	FUNCTION_66	CALL_9
0x4003ea5	      0x48837df800	                  cmp qword [rbp - 8], 0	      2202	prdbg.c	FUNCTION_66	IF_4
0x4003eaa	            0x7516	                           jne 0x4003ec2	      2202	prdbg.c	FUNCTION_66	IF_4
0x4003eac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2204	prdbg.c	FUNCTION_66	IF_4	CALL_10
0x4003eb0	          0x4889c7	                            mov rdi, rax	      2204	prdbg.c	FUNCTION_66	IF_4	CALL_10
0x4003eb3	      0xe800000000	                          call 0x4003eb8	      2204	prdbg.c	FUNCTION_66	IF_4	CALL_10
0x4003eb8	      0xb800000000	                              mov eax, 0	      2205	prdbg.c	FUNCTION_66	IF_4
0x4003ebd	      0xe9a3000000	                           jmp 0x4003f65	      2205	prdbg.c	FUNCTION_66	IF_4
0x4003ec2	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_11
0x4003ec5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_11
0x4003ec9	            0x89d6	                            mov esi, edx	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_11
0x4003ecb	          0x4889c7	                            mov rdi, rax	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_11
0x4003ece	      0xe872fbffff	              call sym.tg_fix_visibility	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_11
0x4003ed3	            0x85c0	                           test eax, eax	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_11
0x4003ed5	            0x751f	                           jne 0x4003ef6	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_11
0x4003ed7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2210	prdbg.c	FUNCTION_66	IF_5	CALL_12
0x4003edb	          0x4889c7	                            mov rdi, rax	      2210	prdbg.c	FUNCTION_66	IF_5	CALL_12
0x4003ede	      0xe800000000	                          call 0x4003ee3	      2210	prdbg.c	FUNCTION_66	IF_5	CALL_12
0x4003ee3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2211	prdbg.c	FUNCTION_66	IF_5	CALL_13
0x4003ee7	          0x4889c7	                            mov rdi, rax	      2211	prdbg.c	FUNCTION_66	IF_5	CALL_13
0x4003eea	      0xe800000000	                          call 0x4003eef	      2211	prdbg.c	FUNCTION_66	IF_5	CALL_13
0x4003eef	      0xb800000000	                              mov eax, 0	      2212	prdbg.c	FUNCTION_66	IF_5
0x4003ef4	            0xeb6f	                           jmp 0x4003f65	      2212	prdbg.c	FUNCTION_66	IF_5
0x4003ef6	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003ef9	            0x89c7	                            mov edi, eax	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003efb	      0xe878110000	                call sym.visibility_name	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f00	          0x4989c0	                             mov r8, rax	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f03	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2216	prdbg.c	FUNCTION_66
0x4003f07	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2216	prdbg.c	FUNCTION_66
0x4003f0b	        0x488b7808	                mov rdi, qword [rax + 8]	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f0f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f13	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f17	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f1b	          0x488b00	                    mov rax, qword [rax]	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f1e	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f22	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f26	        0x4883ec08	                              sub rsp, 8	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f2a	            0x4150	                                 push r8	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f2c	          0x4989f9	                             mov r9, rdi	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f2f	          0x4989f0	                             mov r8, rsi	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f32	      0xbe00000000	                              mov esi, 0	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f37	          0x4889c7	                            mov rdi, rax	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f3a	      0xb800000000	                              mov eax, 0	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f3f	      0xe800000000	                          call 0x4003f44	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f44	        0x4883c410	                           add rsp, 0x10	      2215	prdbg.c	FUNCTION_66	CALL_14
0x4003f48	        0x488b45f8	                mov rax, qword [rbp - 8]	      2218	prdbg.c	FUNCTION_66	CALL_16
0x4003f4c	          0x4889c7	                            mov rdi, rax	      2218	prdbg.c	FUNCTION_66	CALL_16
0x4003f4f	      0xe800000000	                          call 0x4003f54	      2218	prdbg.c	FUNCTION_66	CALL_16
0x4003f54	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2219	prdbg.c	FUNCTION_66	CALL_17
0x4003f58	          0x4889c7	                            mov rdi, rax	      2219	prdbg.c	FUNCTION_66	CALL_17
0x4003f5b	      0xe800000000	                          call 0x4003f60	      2219	prdbg.c	FUNCTION_66	CALL_17
0x4003f60	      0xb801000000	                              mov eax, 1	      2221	prdbg.c	FUNCTION_66
0x4003f65	              0xc9	                                   leave	      2222	prdbg.c	FUNCTION_66
0x4003f66	              0xc3	                                     ret	      2222	prdbg.c	FUNCTION_66
pr_offset_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,6:DO,0:ELSE,0:IF,2	53
0x400147f	              0x55	                                push rbp	       899	prdbg.c	FUNCTION_26
0x4001480	          0x4889e5	                            mov rbp, rsp	       899	prdbg.c	FUNCTION_26
0x4001483	        0x4883ec20	                           sub rsp, 0x20	       899	prdbg.c	FUNCTION_26
0x4001487	        0x48897de8	             mov qword [rbp - 0x18], rdi	       899	prdbg.c	FUNCTION_26
0x400148b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       900	prdbg.c	FUNCTION_26
0x400148f	        0x488945f0	             mov qword [rbp - 0x10], rax	       900	prdbg.c	FUNCTION_26
0x4001493	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       903	prdbg.c	FUNCTION_26	IF_1	CALL_1
0x4001497	      0xbe00000000	                              mov esi, 0	       903	prdbg.c	FUNCTION_26	IF_1	CALL_1
0x400149c	          0x4889c7	                            mov rdi, rax	       903	prdbg.c	FUNCTION_26	IF_1	CALL_1
0x400149f	      0xe800f0ffff	                call sym.substitute_type	       903	prdbg.c	FUNCTION_26	IF_1	CALL_1
0x40014a4	            0x85c0	                           test eax, eax	       903	prdbg.c	FUNCTION_26	IF_1	CALL_1
0x40014a6	            0x750a	                           jne 0x40014b2	       903	prdbg.c	FUNCTION_26	IF_1	CALL_1
0x40014a8	      0xb800000000	                              mov eax, 0	       904	prdbg.c	FUNCTION_26	IF_1
0x40014ad	      0xe981000000	                           jmp 0x4001533	       904	prdbg.c	FUNCTION_26	IF_1
0x40014b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       906	prdbg.c	FUNCTION_26	CALL_2
0x40014b6	          0x4889c7	                            mov rdi, rax	       906	prdbg.c	FUNCTION_26	CALL_2
0x40014b9	      0xe83cf2ffff	                       call sym.pop_type	       906	prdbg.c	FUNCTION_26	CALL_2
0x40014be	        0x488945f8	                mov qword [rbp - 8], rax	       906	prdbg.c	FUNCTION_26	CALL_2
0x40014c2	      0x48837df800	                  cmp qword [rbp - 8], 0	       907	prdbg.c	FUNCTION_26	IF_2
0x40014c7	            0x7507	                           jne 0x40014d0	       907	prdbg.c	FUNCTION_26	IF_2
0x40014c9	      0xb800000000	                              mov eax, 0	       908	prdbg.c	FUNCTION_26	IF_2
0x40014ce	            0xeb63	                           jmp 0x4001533	       908	prdbg.c	FUNCTION_26	IF_2
0x40014d0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       910	prdbg.c	FUNCTION_26	CALL_3
0x40014d4	      0xbe00000000	                              mov esi, 0	       910	prdbg.c	FUNCTION_26	CALL_3
0x40014d9	          0x4889c7	                            mov rdi, rax	       910	prdbg.c	FUNCTION_26	CALL_3
0x40014dc	      0xe8c3efffff	                call sym.substitute_type	       910	prdbg.c	FUNCTION_26	CALL_3
0x40014e1	            0x85c0	                           test eax, eax	       913	prdbg.c	FUNCTION_26	CALL_6
0x40014e3	            0x7448	                            je 0x400152d	       913	prdbg.c	FUNCTION_26	CALL_6
0x40014e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       911	prdbg.c	FUNCTION_26	CALL_4
0x40014e9	      0xbe00000000	                              mov esi, 0	       911	prdbg.c	FUNCTION_26	CALL_4
0x40014ee	          0x4889c7	                            mov rdi, rax	       911	prdbg.c	FUNCTION_26	CALL_4
0x40014f1	      0xe83fedffff	                   call sym.prepend_type	       911	prdbg.c	FUNCTION_26	CALL_4
0x40014f6	            0x85c0	                           test eax, eax	       911	prdbg.c	FUNCTION_26	CALL_4
0x40014f8	            0x7433	                            je 0x400152d	       911	prdbg.c	FUNCTION_26	CALL_4
0x40014fa	        0x488b55f8	                mov rdx, qword [rbp - 8]	       912	prdbg.c	FUNCTION_26	CALL_5
0x40014fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       912	prdbg.c	FUNCTION_26	CALL_5
0x4001502	          0x4889d6	                            mov rsi, rdx	       912	prdbg.c	FUNCTION_26	CALL_5
0x4001505	          0x4889c7	                            mov rdi, rax	       912	prdbg.c	FUNCTION_26	CALL_5
0x4001508	      0xe828edffff	                   call sym.prepend_type	       912	prdbg.c	FUNCTION_26	CALL_5
0x400150d	            0x85c0	                           test eax, eax	       912	prdbg.c	FUNCTION_26	CALL_5
0x400150f	            0x741c	                            je 0x400152d	       912	prdbg.c	FUNCTION_26	CALL_5
0x4001511	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       913	prdbg.c	FUNCTION_26	CALL_6
0x4001515	      0xbe00000000	                              mov esi, 0	       913	prdbg.c	FUNCTION_26	CALL_6
0x400151a	          0x4889c7	                            mov rdi, rax	       913	prdbg.c	FUNCTION_26	CALL_6
0x400151d	      0xe8d6edffff	                    call sym.append_type	       913	prdbg.c	FUNCTION_26	CALL_6
0x4001522	            0x85c0	                           test eax, eax	       913	prdbg.c	FUNCTION_26	CALL_6
0x4001524	            0x7407	                            je 0x400152d	       913	prdbg.c	FUNCTION_26	CALL_6
0x4001526	      0xb801000000	                              mov eax, 1	       913	prdbg.c	FUNCTION_26	CALL_6
0x400152b	            0xeb05	                           jmp 0x4001532	       910	prdbg.c	FUNCTION_26	CALL_3
0x400152d	      0xb800000000	                              mov eax, 0	       913	prdbg.c	FUNCTION_26	CALL_6
0x4001532	              0x90	                                     nop	       910	prdbg.c	FUNCTION_26	CALL_3
0x4001533	              0xc9	                                   leave	       914	prdbg.c	FUNCTION_26
0x4001534	              0xc3	                                     ret	       914	prdbg.c	FUNCTION_26
pr_method_type	WHILE,0:FOR,2:functions,0:SWITCH,0:CALL,25:DO,0:ELSE,5:IF,16	272
0x4001535	              0x55	                                push rbp	       920	prdbg.c	FUNCTION_27
0x4001536	          0x4889e5	                            mov rbp, rsp	       920	prdbg.c	FUNCTION_27
0x4001539	              0x53	                                push rbx	       920	prdbg.c	FUNCTION_27
0x400153a	        0x4883ec58	                           sub rsp, 0x58	       920	prdbg.c	FUNCTION_27
0x400153e	        0x48897db8	             mov qword [rbp - 0x48], rdi	       920	prdbg.c	FUNCTION_27
0x4001542	          0x8975b4	             mov dword [rbp - 0x4c], esi	       920	prdbg.c	FUNCTION_27
0x4001545	          0x8955b0	             mov dword [rbp - 0x50], edx	       920	prdbg.c	FUNCTION_27
0x4001548	          0x894dac	             mov dword [rbp - 0x54], ecx	       920	prdbg.c	FUNCTION_27
0x400154b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       921	prdbg.c	FUNCTION_27
0x400154f	        0x488945e0	             mov qword [rbp - 0x20], rax	       921	prdbg.c	FUNCTION_27
0x4001553	    0xc745c40a0000	             mov dword [rbp - 0x3c], 0xa	       927	prdbg.c	FUNCTION_27
0x400155a	        0x837db400	               cmp dword [rbp - 0x4c], 0	       929	prdbg.c	FUNCTION_27	IF_1
0x400155e	            0x750d	                           jne 0x400156d	       929	prdbg.c	FUNCTION_27	IF_1
0x4001560	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       930	prdbg.c	FUNCTION_27	IF_1
0x4001568	      0xe9c3000000	                           jmp 0x4001630	       930	prdbg.c	FUNCTION_27	IF_1
0x400156d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       933	prdbg.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4001571	      0xbe00000000	                              mov esi, 0	       933	prdbg.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4001576	          0x4889c7	                            mov rdi, rax	       933	prdbg.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4001579	      0xe826efffff	                call sym.substitute_type	       933	prdbg.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x400157e	            0x85c0	                           test eax, eax	       933	prdbg.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4001580	            0x750a	                           jne 0x400158c	       933	prdbg.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4001582	      0xb800000000	                              mov eax, 0	       934	prdbg.c	FUNCTION_27	ELSE_1	IF_2
0x4001587	      0xe9a6030000	                           jmp 0x4001932	       934	prdbg.c	FUNCTION_27	ELSE_1	IF_2
0x400158c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       935	prdbg.c	FUNCTION_27	ELSE_1	CALL_2
0x4001590	          0x4889c7	                            mov rdi, rax	       935	prdbg.c	FUNCTION_27	ELSE_1	CALL_2
0x4001593	      0xe862f1ffff	                       call sym.pop_type	       935	prdbg.c	FUNCTION_27	ELSE_1	CALL_2
0x4001598	        0x488945d0	             mov qword [rbp - 0x30], rax	       935	prdbg.c	FUNCTION_27	ELSE_1	CALL_2
0x400159c	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       936	prdbg.c	FUNCTION_27	ELSE_1	IF_3
0x40015a1	            0x750a	                           jne 0x40015ad	       936	prdbg.c	FUNCTION_27	ELSE_1	IF_3
0x40015a3	      0xb800000000	                              mov eax, 0	       937	prdbg.c	FUNCTION_27	ELSE_1	IF_3
0x40015a8	      0xe985030000	                           jmp 0x4001932	       937	prdbg.c	FUNCTION_27	ELSE_1	IF_3
0x40015ad	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x40015b1	      0xba06000000	                              mov edx, 6	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x40015b6	      0xbe00000000	                              mov esi, 0	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x40015bb	          0x4889c7	                            mov rdi, rax	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x40015be	      0xe800000000	                          call 0x40015c3	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x40015c3	            0x85c0	                           test eax, eax	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x40015c5	            0x7521	                           jne 0x40015e8	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x40015c7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x40015cb	        0x4883c006	                              add rax, 6	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x40015cf	      0xbe20000000	                           mov esi, 0x20	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x40015d4	          0x4889c7	                            mov rdi, rax	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x40015d7	      0xe800000000	                          call 0x40015dc	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x40015dc	          0x4885c0	                           test rax, rax	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x40015df	            0x7507	                           jne 0x40015e8	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x40015e1	      0x488345d006	               add qword [rbp - 0x30], 6	       940	prdbg.c	FUNCTION_27	ELSE_1	IF_4
0x40015e6	            0xeb39	                           jmp 0x4001621	       940	prdbg.c	FUNCTION_27	ELSE_1	IF_4
0x40015e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x40015ec	      0xba0c000000	                            mov edx, 0xc	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x40015f1	      0xbe00000000	                              mov esi, 0	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x40015f6	          0x4889c7	                            mov rdi, rax	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x40015f9	      0xe800000000	                          call 0x40015fe	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x40015fe	            0x85c0	                           test eax, eax	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x4001600	            0x751f	                           jne 0x4001621	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x4001602	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x4001606	        0x4883c00c	                            add rax, 0xc	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x400160a	      0xbe20000000	                           mov esi, 0x20	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x400160f	          0x4889c7	                            mov rdi, rax	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x4001612	      0xe800000000	                          call 0x4001617	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x4001617	          0x4885c0	                           test rax, rax	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x400161a	            0x7505	                           jne 0x4001621	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x400161c	      0x488345d00c	             add qword [rbp - 0x30], 0xc	       944	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5
0x4001621	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       945	prdbg.c	FUNCTION_27	ELSE_1	CALL_7
0x4001625	          0x4889c7	                            mov rdi, rax	       945	prdbg.c	FUNCTION_27	ELSE_1	CALL_7
0x4001628	      0xe800000000	                          call 0x400162d	       945	prdbg.c	FUNCTION_27	ELSE_1	CALL_7
0x400162d	           0x145c4	             add dword [rbp - 0x3c], eax	       945	prdbg.c	FUNCTION_27	ELSE_1	CALL_7
0x4001630	        0x837db000	               cmp dword [rbp - 0x50], 0	       948	prdbg.c	FUNCTION_27	IF_6
0x4001634	            0x7f11	                            jg 0x4001647	       948	prdbg.c	FUNCTION_27	IF_6
0x4001636	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       950	prdbg.c	FUNCTION_27	IF_6
0x400163e	        0x8345c40f	             add dword [rbp - 0x3c], 0xf	       951	prdbg.c	FUNCTION_27	IF_6
0x4001642	      0xe9e8000000	                           jmp 0x400172f	       951	prdbg.c	FUNCTION_27	IF_6
0x4001647	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x400164a	            0x4898	                                    cdqe	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x400164c	        0x48c1e003	                              shl rax, 3	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x4001650	          0x4889c7	                            mov rdi, rax	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x4001653	      0xe800000000	                          call 0x4001658	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x4001658	        0x488945d8	             mov qword [rbp - 0x28], rax	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x400165c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       958	prdbg.c	FUNCTION_27	ELSE_3	FOR_1
0x400165f	          0x83e801	                              sub eax, 1	       958	prdbg.c	FUNCTION_27	ELSE_3	FOR_1
0x4001662	          0x8945c8	             mov dword [rbp - 0x38], eax	       958	prdbg.c	FUNCTION_27	ELSE_3	FOR_1
0x4001665	      0xe9b1000000	                           jmp 0x400171b	       958	prdbg.c	FUNCTION_27	ELSE_3	FOR_1
0x400166a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       960	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_9
0x400166e	      0xbe00000000	                              mov esi, 0	       960	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_9
0x4001673	          0x4889c7	                            mov rdi, rax	       960	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_9
0x4001676	      0xe829eeffff	                call sym.substitute_type	       960	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_9
0x400167b	            0x85c0	                           test eax, eax	       960	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_9
0x400167d	            0x7516	                           jne 0x4001695	       960	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_9
0x400167f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       962	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_10
0x4001683	          0x4889c7	                            mov rdi, rax	       962	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_10
0x4001686	      0xe800000000	                          call 0x400168b	       962	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_10
0x400168b	      0xb800000000	                              mov eax, 0	       963	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7
0x4001690	      0xe99d020000	                           jmp 0x4001932	       963	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7
0x4001695	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x4001698	            0x4898	                                    cdqe	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x400169a	    0x488d14c50000	                        lea rdx, [rax*8]	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x40016a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x40016a6	        0x488d1c02	                    lea rbx, [rdx + rax]	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x40016aa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x40016ae	          0x4889c7	                            mov rdi, rax	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x40016b1	      0xe844f0ffff	                       call sym.pop_type	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x40016b6	          0x488903	                    mov qword [rbx], rax	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x40016b9	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       966	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8
0x40016bc	            0x4898	                                    cdqe	       966	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8
0x40016be	    0x488d14c50000	                        lea rdx, [rax*8]	       966	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8
0x40016c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       966	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8
0x40016ca	          0x4801d0	                            add rax, rdx	       966	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8
0x40016cd	          0x488b00	                    mov rax, qword [rax]	       966	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8
0x40016d0	          0x4885c0	                           test rax, rax	       966	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8
0x40016d3	            0x7516	                           jne 0x40016eb	       966	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8
0x40016d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       968	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8	CALL_12
0x40016d9	          0x4889c7	                            mov rdi, rax	       968	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8	CALL_12
0x40016dc	      0xe800000000	                          call 0x40016e1	       968	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8	CALL_12
0x40016e1	      0xb800000000	                              mov eax, 0	       969	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8
0x40016e6	      0xe947020000	                           jmp 0x4001932	       969	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8
0x40016eb	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x40016ee	            0x4898	                                    cdqe	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x40016f0	    0x488d14c50000	                        lea rdx, [rax*8]	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x40016f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x40016fc	          0x4801d0	                            add rax, rdx	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x40016ff	          0x488b00	                    mov rax, qword [rax]	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x4001702	          0x4889c7	                            mov rdi, rax	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x4001705	      0xe800000000	                          call 0x400170a	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x400170a	            0x89c2	                            mov edx, eax	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x400170c	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x400170f	             0x1d0	                            add eax, edx	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x4001711	          0x83c002	                              add eax, 2	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x4001714	          0x8945c4	             mov dword [rbp - 0x3c], eax	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x4001717	        0x836dc801	               sub dword [rbp - 0x38], 1	       958	prdbg.c	FUNCTION_27	ELSE_3	FOR_1
0x400171b	        0x837dc800	               cmp dword [rbp - 0x38], 0	       958	prdbg.c	FUNCTION_27	ELSE_3	FOR_1
0x400171f	     0xf8945ffffff	                           jns 0x400166a	       958	prdbg.c	FUNCTION_27	ELSE_3	FOR_1
0x4001725	        0x837dac00	               cmp dword [rbp - 0x54], 0	       973	prdbg.c	FUNCTION_27	ELSE_3	IF_9
0x4001729	            0x7404	                            je 0x400172f	       973	prdbg.c	FUNCTION_27	ELSE_3	IF_9
0x400172b	        0x8345c405	               add dword [rbp - 0x3c], 5	       974	prdbg.c	FUNCTION_27	ELSE_3	IF_9
0x400172f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       979	prdbg.c	FUNCTION_27	CALL_14
0x4001732	          0x4889c7	                            mov rdi, rax	       979	prdbg.c	FUNCTION_27	CALL_14
0x4001735	      0xe800000000	                          call 0x400173a	       979	prdbg.c	FUNCTION_27	CALL_14
0x400173a	        0x488945e8	             mov qword [rbp - 0x18], rax	       979	prdbg.c	FUNCTION_27	CALL_14
0x400173e	        0x837db400	               cmp dword [rbp - 0x4c], 0	       980	prdbg.c	FUNCTION_27	IF_10
0x4001742	            0x7509	                           jne 0x400174d	       980	prdbg.c	FUNCTION_27	IF_10
0x4001744	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       981	prdbg.c	FUNCTION_27	IF_10
0x4001748	          0xc60000	                       mov byte [rax], 0	       981	prdbg.c	FUNCTION_27	IF_10
0x400174b	            0xeb13	                           jmp 0x4001760	       981	prdbg.c	FUNCTION_27	IF_10
0x400174d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       983	prdbg.c	FUNCTION_27	CALL_15
0x4001751	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       983	prdbg.c	FUNCTION_27	CALL_15
0x4001755	          0x4889d6	                            mov rsi, rdx	       983	prdbg.c	FUNCTION_27	CALL_15
0x4001758	          0x4889c7	                            mov rdi, rax	       983	prdbg.c	FUNCTION_27	CALL_15
0x400175b	      0xe800000000	                          call 0x4001760	       983	prdbg.c	FUNCTION_27	CALL_15
0x4001760	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       984	prdbg.c	FUNCTION_27	CALL_16
0x4001764	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       984	prdbg.c	FUNCTION_27	CALL_16
0x400176b	          0x4889c2	                            mov rdx, rax	       984	prdbg.c	FUNCTION_27	CALL_16
0x400176e	      0xb800000000	                              mov eax, 0	       984	prdbg.c	FUNCTION_27	CALL_16
0x4001773	          0x4889d7	                            mov rdi, rdx	       984	prdbg.c	FUNCTION_27	CALL_16
0x4001776	            0xf2ae	              repne scasb al, byte [rdi]	       984	prdbg.c	FUNCTION_27	CALL_16
0x4001778	          0x4889c8	                            mov rax, rcx	       984	prdbg.c	FUNCTION_27	CALL_16
0x400177b	          0x48f7d0	                                 not rax	       984	prdbg.c	FUNCTION_27	CALL_16
0x400177e	        0x488d50ff	                      lea rdx, [rax - 1]	       984	prdbg.c	FUNCTION_27	CALL_16
0x4001782	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       984	prdbg.c	FUNCTION_27	CALL_16
0x4001786	          0x4801d0	                            add rax, rdx	       984	prdbg.c	FUNCTION_27	CALL_16
0x4001789	    0xc7003a3a7c20	            mov dword [rax], 0x207c3a3a 	       984	prdbg.c	FUNCTION_27	CALL_16
0x400178f	    0x66c740042800	                mov word [rax + 4], 0x28	       984	prdbg.c	FUNCTION_27	CALL_16
0x4001795	        0x837db000	               cmp dword [rbp - 0x50], 0	       986	prdbg.c	FUNCTION_27	IF_11
0x4001799	            0x7948	                           jns 0x40017e3	       986	prdbg.c	FUNCTION_27	IF_11
0x400179b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       987	prdbg.c	FUNCTION_27	CALL_17
0x400179f	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       987	prdbg.c	FUNCTION_27	CALL_17
0x40017a6	          0x4889c2	                            mov rdx, rax	       987	prdbg.c	FUNCTION_27	CALL_17
0x40017a9	      0xb800000000	                              mov eax, 0	       987	prdbg.c	FUNCTION_27	CALL_17
0x40017ae	          0x4889d7	                            mov rdi, rdx	       987	prdbg.c	FUNCTION_27	CALL_17
0x40017b1	            0xf2ae	              repne scasb al, byte [rdi]	       987	prdbg.c	FUNCTION_27	CALL_17
0x40017b3	          0x4889c8	                            mov rax, rcx	       987	prdbg.c	FUNCTION_27	CALL_17
0x40017b6	          0x48f7d0	                                 not rax	       987	prdbg.c	FUNCTION_27	CALL_17
0x40017b9	        0x488d50ff	                      lea rdx, [rax - 1]	       987	prdbg.c	FUNCTION_27	CALL_17
0x40017bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       987	prdbg.c	FUNCTION_27	CALL_17
0x40017c1	          0x4801d0	                            add rax, rdx	       987	prdbg.c	FUNCTION_27	CALL_17
0x40017c4	    0x48bb2f2a2075	          movabs rbx, 0x6f6e6b6e75202a2f	       987	prdbg.c	FUNCTION_27	CALL_17
0x40017ce	          0x488918	                    mov qword [rax], rbx	       987	prdbg.c	FUNCTION_27	CALL_17
0x40017d1	    0xc74008776e20	        mov dword [rax + 8], 0x2a206e77 	       987	prdbg.c	FUNCTION_27	CALL_17
0x40017d8	    0x66c7400c2f00	              mov word [rax + 0xc], 0x2f	       987	prdbg.c	FUNCTION_27	CALL_17
0x40017de	      0xe9f2000000	                           jmp 0x40018d5	       987	prdbg.c	FUNCTION_27	CALL_17
0x40017e3	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x40017ea	            0xeb62	                           jmp 0x400184e	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x40017ec	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       994	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	IF_12
0x40017f0	            0x7e32	                           jle 0x4001824	       994	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	IF_12
0x40017f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       995	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_18
0x40017f6	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       995	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_18
0x40017fd	          0x4889c2	                            mov rdx, rax	       995	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_18
0x4001800	      0xb800000000	                              mov eax, 0	       995	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_18
0x4001805	          0x4889d7	                            mov rdi, rdx	       995	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_18
0x4001808	            0xf2ae	              repne scasb al, byte [rdi]	       995	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_18
0x400180a	          0x4889c8	                            mov rax, rcx	       995	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_18
0x400180d	          0x48f7d0	                                 not rax	       995	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_18
0x4001810	        0x488d50ff	                      lea rdx, [rax - 1]	       995	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_18
0x4001814	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       995	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_18
0x4001818	          0x4801d0	                            add rax, rdx	       995	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_18
0x400181b	      0x66c7002c20	                  mov word [rax], 0x202c	       995	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_18
0x4001820	        0xc6400200	                   mov byte [rax + 2], 0	       995	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_18
0x4001824	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       996	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_19
0x4001827	            0x4898	                                    cdqe	       996	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_19
0x4001829	    0x488d14c50000	                        lea rdx, [rax*8]	       996	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_19
0x4001831	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       996	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_19
0x4001835	          0x4801d0	                            add rax, rdx	       996	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_19
0x4001838	          0x488b10	                    mov rdx, qword [rax]	       996	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_19
0x400183b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       996	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_19
0x400183f	          0x4889d6	                            mov rsi, rdx	       996	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_19
0x4001842	          0x4889c7	                            mov rdi, rax	       996	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_19
0x4001845	      0xe800000000	                          call 0x400184a	       996	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	CALL_19
0x400184a	        0x8345cc01	               add dword [rbp - 0x34], 1	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x400184e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x4001851	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x4001854	            0x7c96	                            jl 0x40017ec	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x4001856	        0x837dac00	               cmp dword [rbp - 0x54], 0	       998	prdbg.c	FUNCTION_27	ELSE_5	IF_13
0x400185a	            0x7467	                            je 0x40018c3	       998	prdbg.c	FUNCTION_27	ELSE_5	IF_13
0x400185c	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1000	prdbg.c	FUNCTION_27	ELSE_5	IF_13	IF_14
0x4001860	            0x7e32	                           jle 0x4001894	      1000	prdbg.c	FUNCTION_27	ELSE_5	IF_13	IF_14
0x4001862	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1001	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_20
0x4001866	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1001	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_20
0x400186d	          0x4889c2	                            mov rdx, rax	      1001	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_20
0x4001870	      0xb800000000	                              mov eax, 0	      1001	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_20
0x4001875	          0x4889d7	                            mov rdi, rdx	      1001	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_20
0x4001878	            0xf2ae	              repne scasb al, byte [rdi]	      1001	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_20
0x400187a	          0x4889c8	                            mov rax, rcx	      1001	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_20
0x400187d	          0x48f7d0	                                 not rax	      1001	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_20
0x4001880	        0x488d50ff	                      lea rdx, [rax - 1]	      1001	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_20
0x4001884	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1001	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_20
0x4001888	          0x4801d0	                            add rax, rdx	      1001	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_20
0x400188b	      0x66c7002c20	                  mov word [rax], 0x202c	      1001	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_20
0x4001890	        0xc6400200	                   mov byte [rax + 2], 0	      1001	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_20
0x4001894	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1002	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_21
0x4001898	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1002	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_21
0x400189f	          0x4889c2	                            mov rdx, rax	      1002	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_21
0x40018a2	      0xb800000000	                              mov eax, 0	      1002	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_21
0x40018a7	          0x4889d7	                            mov rdi, rdx	      1002	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_21
0x40018aa	            0xf2ae	              repne scasb al, byte [rdi]	      1002	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_21
0x40018ac	          0x4889c8	                            mov rax, rcx	      1002	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_21
0x40018af	          0x48f7d0	                                 not rax	      1002	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_21
0x40018b2	        0x488d50ff	                      lea rdx, [rax - 1]	      1002	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_21
0x40018b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1002	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_21
0x40018ba	          0x4801d0	                            add rax, rdx	      1002	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_21
0x40018bd	    0xc7002e2e2e00	               mov dword [rax], 0x2e2e2e	      1002	prdbg.c	FUNCTION_27	ELSE_5	IF_13	CALL_21
0x40018c3	        0x837db000	               cmp dword [rbp - 0x50], 0	      1004	prdbg.c	FUNCTION_27	ELSE_5	IF_15
0x40018c7	            0x7e0c	                           jle 0x40018d5	      1004	prdbg.c	FUNCTION_27	ELSE_5	IF_15
0x40018c9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1005	prdbg.c	FUNCTION_27	ELSE_5	CALL_22
0x40018cd	          0x4889c7	                            mov rdi, rax	      1005	prdbg.c	FUNCTION_27	ELSE_5	CALL_22
0x40018d0	      0xe800000000	                          call 0x40018d5	      1005	prdbg.c	FUNCTION_27	ELSE_5	CALL_22
0x40018d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1008	prdbg.c	FUNCTION_27	CALL_23
0x40018d9	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1008	prdbg.c	FUNCTION_27	CALL_23
0x40018e0	          0x4889c2	                            mov rdx, rax	      1008	prdbg.c	FUNCTION_27	CALL_23
0x40018e3	      0xb800000000	                              mov eax, 0	      1008	prdbg.c	FUNCTION_27	CALL_23
0x40018e8	          0x4889d7	                            mov rdi, rdx	      1008	prdbg.c	FUNCTION_27	CALL_23
0x40018eb	            0xf2ae	              repne scasb al, byte [rdi]	      1008	prdbg.c	FUNCTION_27	CALL_23
0x40018ed	          0x4889c8	                            mov rax, rcx	      1008	prdbg.c	FUNCTION_27	CALL_23
0x40018f0	          0x48f7d0	                                 not rax	      1008	prdbg.c	FUNCTION_27	CALL_23
0x40018f3	        0x488d50ff	                      lea rdx, [rax - 1]	      1008	prdbg.c	FUNCTION_27	CALL_23
0x40018f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1008	prdbg.c	FUNCTION_27	CALL_23
0x40018fb	          0x4801d0	                            add rax, rdx	      1008	prdbg.c	FUNCTION_27	CALL_23
0x40018fe	      0x66c7002900	                    mov word [rax], 0x29	      1008	prdbg.c	FUNCTION_27	CALL_23
0x4001903	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x4001907	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x400190b	          0x4889d6	                            mov rsi, rdx	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x400190e	          0x4889c7	                            mov rdi, rax	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x4001911	      0xe88eebffff	                call sym.substitute_type	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x4001916	            0x85c0	                           test eax, eax	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x4001918	            0x7507	                           jne 0x4001921	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x400191a	      0xb800000000	                              mov eax, 0	      1011	prdbg.c	FUNCTION_27	IF_16
0x400191f	            0xeb11	                           jmp 0x4001932	      1011	prdbg.c	FUNCTION_27	IF_16
0x4001921	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1013	prdbg.c	FUNCTION_27	CALL_25
0x4001925	          0x4889c7	                            mov rdi, rax	      1013	prdbg.c	FUNCTION_27	CALL_25
0x4001928	      0xe800000000	                          call 0x400192d	      1013	prdbg.c	FUNCTION_27	CALL_25
0x400192d	      0xb801000000	                              mov eax, 1	      1015	prdbg.c	FUNCTION_27
0x4001932	        0x4883c458	                           add rsp, 0x58	      1016	prdbg.c	FUNCTION_27
0x4001936	              0x5b	                                 pop rbx	      1016	prdbg.c	FUNCTION_27
0x4001937	              0x5d	                                 pop rbp	      1016	prdbg.c	FUNCTION_27
0x4001938	              0xc3	                                     ret	      1016	prdbg.c	FUNCTION_27
pr_start_block	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,4:DO,0:ELSE,0:IF,1	51
0x40033d7	              0x55	                                push rbp	      1850	prdbg.c	FUNCTION_52
0x40033d8	          0x4889e5	                            mov rbp, rsp	      1850	prdbg.c	FUNCTION_52
0x40033db	        0x4883ec40	                           sub rsp, 0x40	      1850	prdbg.c	FUNCTION_52
0x40033df	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1850	prdbg.c	FUNCTION_52
0x40033e3	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1850	prdbg.c	FUNCTION_52
0x40033e7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1850	prdbg.c	FUNCTION_52
0x40033f0	        0x488945f8	                mov qword [rbp - 8], rax	      1850	prdbg.c	FUNCTION_52
0x40033f4	            0x31c0	                            xor eax, eax	      1850	prdbg.c	FUNCTION_52
0x40033f6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1851	prdbg.c	FUNCTION_52
0x40033fa	        0x488945d8	             mov qword [rbp - 0x28], rax	      1851	prdbg.c	FUNCTION_52
0x40033fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1854	prdbg.c	FUNCTION_52	IF_1
0x4003402	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1854	prdbg.c	FUNCTION_52	IF_1
0x4003405	            0x85c0	                           test eax, eax	      1854	prdbg.c	FUNCTION_52	IF_1
0x4003407	            0x7e29	                           jle 0x4003432	      1854	prdbg.c	FUNCTION_52	IF_1
0x4003409	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1856	prdbg.c	FUNCTION_52	IF_1	CALL_1
0x400340d	          0x488b00	                    mov rax, qword [rax]	      1856	prdbg.c	FUNCTION_52	IF_1	CALL_1
0x4003410	          0x4889c1	                            mov rcx, rax	      1856	prdbg.c	FUNCTION_52	IF_1	CALL_1
0x4003413	      0xba02000000	                              mov edx, 2	      1856	prdbg.c	FUNCTION_52	IF_1	CALL_1
0x4003418	      0xbe01000000	                              mov esi, 1	      1856	prdbg.c	FUNCTION_52	IF_1	CALL_1
0x400341d	      0xbf00000000	                              mov edi, 0	      1856	prdbg.c	FUNCTION_52	IF_1	CALL_1
0x4003422	      0xe800000000	                          call 0x4003427	      1856	prdbg.c	FUNCTION_52	IF_1	CALL_1
0x4003427	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1857	prdbg.c	FUNCTION_52	IF_1
0x400342b	    0xc74018000000	               mov dword [rax + 0x18], 0	      1857	prdbg.c	FUNCTION_52	IF_1
0x4003432	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1860	prdbg.c	FUNCTION_52	CALL_2
0x4003436	          0x4889c7	                            mov rdi, rax	      1860	prdbg.c	FUNCTION_52	CALL_2
0x4003439	      0xe829cdffff	                         call sym.indent	      1860	prdbg.c	FUNCTION_52	CALL_2
0x400343e	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      1861	prdbg.c	FUNCTION_52	CALL_3
0x4003442	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1861	prdbg.c	FUNCTION_52	CALL_3
0x4003446	      0xb901000000	                              mov ecx, 1	      1861	prdbg.c	FUNCTION_52	CALL_3
0x400344b	      0xba01000000	                              mov edx, 1	      1861	prdbg.c	FUNCTION_52	CALL_3
0x4003450	          0x4889c7	                            mov rdi, rax	      1861	prdbg.c	FUNCTION_52	CALL_3
0x4003453	      0xe80dd3ffff	                      call sym.print_vma	      1861	prdbg.c	FUNCTION_52	CALL_3
0x4003458	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1862	prdbg.c	FUNCTION_52	CALL_4
0x400345c	          0x488b00	                    mov rax, qword [rax]	      1862	prdbg.c	FUNCTION_52	CALL_4
0x400345f	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1862	prdbg.c	FUNCTION_52	CALL_4
0x4003463	      0xbe00000000	                              mov esi, 0	      1862	prdbg.c	FUNCTION_52	CALL_4
0x4003468	          0x4889c7	                            mov rdi, rax	      1862	prdbg.c	FUNCTION_52	CALL_4
0x400346b	      0xb800000000	                              mov eax, 0	      1862	prdbg.c	FUNCTION_52	CALL_4
0x4003470	      0xe800000000	                          call 0x4003475	      1862	prdbg.c	FUNCTION_52	CALL_4
0x4003475	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1864	prdbg.c	FUNCTION_52
0x4003479	          0x8b4008	                mov eax, dword [rax + 8]	      1864	prdbg.c	FUNCTION_52
0x400347c	          0x8d5002	                      lea edx, [rax + 2]	      1864	prdbg.c	FUNCTION_52
0x400347f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1864	prdbg.c	FUNCTION_52
0x4003483	          0x895008	                mov dword [rax + 8], edx	      1864	prdbg.c	FUNCTION_52
0x4003486	      0xb801000000	                              mov eax, 1	      1866	prdbg.c	FUNCTION_52
0x400348b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1867	prdbg.c	FUNCTION_52
0x400348f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1867	prdbg.c	FUNCTION_52
0x4003498	            0x7405	                            je 0x400349f	      1867	prdbg.c	FUNCTION_52
0x400349a	      0xe800000000	                          call 0x400349f	      1867	prdbg.c	FUNCTION_52
0x400349f	              0xc9	                                   leave	      1867	prdbg.c	FUNCTION_52
0x40034a0	              0xc3	                                     ret	      1867	prdbg.c	FUNCTION_52
tg_start_block	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,11:DO,0:ELSE,1:IF,6	135
0x4004e38	              0x55	                                push rbp	      2748	prdbg.c	FUNCTION_80
0x4004e39	          0x4889e5	                            mov rbp, rsp	      2748	prdbg.c	FUNCTION_80
0x4004e3c	        0x4883ec50	                           sub rsp, 0x50	      2748	prdbg.c	FUNCTION_80
0x4004e40	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2748	prdbg.c	FUNCTION_80
0x4004e44	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2748	prdbg.c	FUNCTION_80
0x4004e48	    0x64488b042528	                mov rax, qword fs:[0x28]	      2748	prdbg.c	FUNCTION_80
0x4004e51	        0x488945f8	                mov qword [rbp - 8], rax	      2748	prdbg.c	FUNCTION_80
0x4004e55	            0x31c0	                            xor eax, eax	      2748	prdbg.c	FUNCTION_80
0x4004e57	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2749	prdbg.c	FUNCTION_80
0x4004e5b	        0x488945d0	             mov qword [rbp - 0x30], rax	      2749	prdbg.c	FUNCTION_80
0x4004e5f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2754	prdbg.c	FUNCTION_80	IF_1
0x4004e63	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2754	prdbg.c	FUNCTION_80	IF_1
0x4004e66	            0x85c0	                           test eax, eax	      2754	prdbg.c	FUNCTION_80	IF_1
0x4004e68	     0xf8ec1010000	                           jle 0x400502f	      2754	prdbg.c	FUNCTION_80	IF_1
0x4004e6e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2756	prdbg.c	FUNCTION_80	IF_1
0x4004e72	    0xc74018000000	               mov dword [rax + 0x18], 0	      2756	prdbg.c	FUNCTION_80	IF_1
0x4004e79	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2759	prdbg.c	FUNCTION_80	IF_1	CALL_1
0x4004e7d	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      2759	prdbg.c	FUNCTION_80	IF_1	CALL_1
0x4004e81	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2759	prdbg.c	FUNCTION_80	IF_1	CALL_1
0x4004e85	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2759	prdbg.c	FUNCTION_80	IF_1	CALL_1
0x4004e89	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2759	prdbg.c	FUNCTION_80	IF_1	CALL_1
0x4004e8d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2759	prdbg.c	FUNCTION_80	IF_1	CALL_1
0x4004e91	          0x488b00	                    mov rax, qword [rax]	      2759	prdbg.c	FUNCTION_80	IF_1	CALL_1
0x4004e94	      0xbe00000000	                              mov esi, 0	      2759	prdbg.c	FUNCTION_80	IF_1	CALL_1
0x4004e99	          0x4889c7	                            mov rdi, rax	      2759	prdbg.c	FUNCTION_80	IF_1	CALL_1
0x4004e9c	      0xb800000000	                              mov eax, 0	      2759	prdbg.c	FUNCTION_80	IF_1	CALL_1
0x4004ea1	      0xe800000000	                          call 0x4004ea6	      2759	prdbg.c	FUNCTION_80	IF_1	CALL_1
0x4004ea6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2760	prdbg.c	FUNCTION_80	IF_1	CALL_2
0x4004eaa	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2760	prdbg.c	FUNCTION_80	IF_1	CALL_2
0x4004eae	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2760	prdbg.c	FUNCTION_80	IF_1	CALL_2
0x4004eb2	          0x4889c7	                            mov rdi, rax	      2760	prdbg.c	FUNCTION_80	IF_1	CALL_2
0x4004eb5	      0xe800000000	                          call 0x4004eba	      2760	prdbg.c	FUNCTION_80	IF_1	CALL_2
0x4004eba	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      2762	prdbg.c	FUNCTION_80	IF_1	CALL_3
0x4004ebe	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2762	prdbg.c	FUNCTION_80	IF_1	CALL_3
0x4004ec2	      0xb901000000	                              mov ecx, 1	      2762	prdbg.c	FUNCTION_80	IF_1	CALL_3
0x4004ec7	      0xba01000000	                              mov edx, 1	      2762	prdbg.c	FUNCTION_80	IF_1	CALL_3
0x4004ecc	          0x4889c7	                            mov rdi, rax	      2762	prdbg.c	FUNCTION_80	IF_1	CALL_3
0x4004ecf	      0xe891b8ffff	                      call sym.print_vma	      2762	prdbg.c	FUNCTION_80	IF_1	CALL_3
0x4004ed4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2763	prdbg.c	FUNCTION_80	IF_1	CALL_4
0x4004ed8	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      2763	prdbg.c	FUNCTION_80	IF_1	CALL_4
0x4004edc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2763	prdbg.c	FUNCTION_80	IF_1	CALL_4
0x4004ee0	          0x488b10	                    mov rdx, qword [rax]	      2763	prdbg.c	FUNCTION_80	IF_1	CALL_4
0x4004ee3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2763	prdbg.c	FUNCTION_80	IF_1	CALL_4
0x4004ee7	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2763	prdbg.c	FUNCTION_80	IF_1	CALL_4
0x4004eeb	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      2763	prdbg.c	FUNCTION_80	IF_1	CALL_4
0x4004eef	          0x4889c7	                            mov rdi, rax	      2763	prdbg.c	FUNCTION_80	IF_1	CALL_4
0x4004ef2	      0xe8b5e7ffff	            call sym.translate_addresses	      2763	prdbg.c	FUNCTION_80	IF_1	CALL_4
0x4004ef7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2764	prdbg.c	FUNCTION_80	IF_1
0x4004efb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2764	prdbg.c	FUNCTION_80	IF_1
0x4004eff	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2764	prdbg.c	FUNCTION_80	IF_1
0x4004f03	          0x4885c0	                           test rax, rax	      2764	prdbg.c	FUNCTION_80	IF_1
0x4004f06	           0xf95c0	                                setne al	      2764	prdbg.c	FUNCTION_80	IF_1
0x4004f09	           0xfb6c0	                           movzx eax, al	      2764	prdbg.c	FUNCTION_80	IF_1
0x4004f0c	          0x8945c4	             mov dword [rbp - 0x3c], eax	      2764	prdbg.c	FUNCTION_80	IF_1
0x4004f0f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2765	prdbg.c	FUNCTION_80	IF_1	IF_2
0x4004f13	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2765	prdbg.c	FUNCTION_80	IF_1	IF_2
0x4004f17	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2765	prdbg.c	FUNCTION_80	IF_1	IF_2
0x4004f1b	          0x4885c0	                           test rax, rax	      2765	prdbg.c	FUNCTION_80	IF_1	IF_2
0x4004f1e	            0x7429	                            je 0x4004f49	      2765	prdbg.c	FUNCTION_80	IF_1	IF_2
0x4004f20	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2765	prdbg.c	FUNCTION_80	IF_1	IF_2
0x4004f24	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2765	prdbg.c	FUNCTION_80	IF_1	IF_2
0x4004f28	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2765	prdbg.c	FUNCTION_80	IF_1	IF_2
0x4004f2c	           0xfb600	                   movzx eax, byte [rax]	      2765	prdbg.c	FUNCTION_80	IF_1	IF_2
0x4004f2f	            0x84c0	                             test al, al	      2765	prdbg.c	FUNCTION_80	IF_1	IF_2
0x4004f31	            0x7416	                            je 0x4004f49	      2765	prdbg.c	FUNCTION_80	IF_1	IF_2
0x4004f33	        0xc645c36d	            mov byte [rbp - 0x3d], 0x6d 	      2767	prdbg.c	FUNCTION_80	IF_1	IF_2
0x4004f37	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2768	prdbg.c	FUNCTION_80	IF_1	IF_2
0x4004f3b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2768	prdbg.c	FUNCTION_80	IF_1	IF_2
0x4004f3f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2768	prdbg.c	FUNCTION_80	IF_1	IF_2
0x4004f43	        0x488945c8	             mov qword [rbp - 0x38], rax	      2768	prdbg.c	FUNCTION_80	IF_1	IF_2
0x4004f47	            0xeb3c	                           jmp 0x4004f85	      2768	prdbg.c	FUNCTION_80	IF_1	IF_2
0x4004f49	        0xc645c366	            mov byte [rbp - 0x3d], 0x66 	      2772	prdbg.c	FUNCTION_80	IF_1	ELSE_1
0x4004f4d	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2773	prdbg.c	FUNCTION_80	IF_1	ELSE_1
0x4004f55	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2774	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3	CALL_5
0x4004f59	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2774	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3	CALL_5
0x4004f5d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2774	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3	CALL_5
0x4004f61	          0x4885c0	                           test rax, rax	      2774	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3	CALL_5
0x4004f64	            0x751f	                           jne 0x4004f85	      2774	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3	CALL_5
0x4004f66	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2774	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3	CALL_5
0x4004f6a	      0xbe00000000	                              mov esi, 0	      2774	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3	CALL_5
0x4004f6f	          0x4889c7	                            mov rdi, rax	      2774	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3	CALL_5
0x4004f72	      0xe881b3ffff	                    call sym.append_type	      2774	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3	CALL_5
0x4004f77	            0x85c0	                           test eax, eax	      2774	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3	CALL_5
0x4004f79	            0x750a	                           jne 0x4004f85	      2774	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3	CALL_5
0x4004f7b	      0xb800000000	                              mov eax, 0	      2775	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3
0x4004f80	      0xe9af000000	                           jmp 0x4005034	      2775	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3
0x4004f85	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2777	prdbg.c	FUNCTION_80	IF_1	CALL_6
0x4004f89	          0x4889c7	                            mov rdi, rax	      2777	prdbg.c	FUNCTION_80	IF_1	CALL_6
0x4004f8c	      0xe869b7ffff	                       call sym.pop_type	      2777	prdbg.c	FUNCTION_80	IF_1	CALL_6
0x4004f91	        0x488945d8	             mov qword [rbp - 0x28], rax	      2777	prdbg.c	FUNCTION_80	IF_1	CALL_6
0x4004f95	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2778	prdbg.c	FUNCTION_80	IF_1	IF_4
0x4004f9a	            0x750a	                           jne 0x4004fa6	      2778	prdbg.c	FUNCTION_80	IF_1	IF_4
0x4004f9c	      0xb800000000	                              mov eax, 0	      2779	prdbg.c	FUNCTION_80	IF_1	IF_4
0x4004fa1	      0xe98e000000	                           jmp 0x4005034	      2779	prdbg.c	FUNCTION_80	IF_1	IF_4
0x4004fa6	         0xfbe55c3	            movsx edx, byte [rbp - 0x3d]	      2780	prdbg.c	FUNCTION_80	IF_1	CALL_7
0x4004faa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2780	prdbg.c	FUNCTION_80	IF_1	CALL_7
0x4004fae	          0x488b00	                    mov rax, qword [rax]	      2780	prdbg.c	FUNCTION_80	IF_1	CALL_7
0x4004fb1	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2780	prdbg.c	FUNCTION_80	IF_1	CALL_7
0x4004fb5	      0xbe00000000	                              mov esi, 0	      2780	prdbg.c	FUNCTION_80	IF_1	CALL_7
0x4004fba	          0x4889c7	                            mov rdi, rax	      2780	prdbg.c	FUNCTION_80	IF_1	CALL_7
0x4004fbd	      0xb800000000	                              mov eax, 0	      2780	prdbg.c	FUNCTION_80	IF_1	CALL_7
0x4004fc2	      0xe800000000	                          call 0x4004fc7	      2780	prdbg.c	FUNCTION_80	IF_1	CALL_7
0x4004fc7	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      2781	prdbg.c	FUNCTION_80	IF_1	IF_5
0x4004fcb	            0x741e	                            je 0x4004feb	      2781	prdbg.c	FUNCTION_80	IF_1	IF_5
0x4004fcd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2782	prdbg.c	FUNCTION_80	IF_1	CALL_8
0x4004fd1	          0x488b00	                    mov rax, qword [rax]	      2782	prdbg.c	FUNCTION_80	IF_1	CALL_8
0x4004fd4	          0x4889c1	                            mov rcx, rax	      2782	prdbg.c	FUNCTION_80	IF_1	CALL_8
0x4004fd7	      0xba06000000	                              mov edx, 6	      2782	prdbg.c	FUNCTION_80	IF_1	CALL_8
0x4004fdc	      0xbe01000000	                              mov esi, 1	      2782	prdbg.c	FUNCTION_80	IF_1	CALL_8
0x4004fe1	      0xbf00000000	                              mov edi, 0	      2782	prdbg.c	FUNCTION_80	IF_1	CALL_8
0x4004fe6	      0xe800000000	                          call 0x4004feb	      2782	prdbg.c	FUNCTION_80	IF_1	CALL_8
0x4004feb	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2783	prdbg.c	FUNCTION_80	IF_1	IF_6
0x4004ff0	            0x7429	                            je 0x400501b	      2783	prdbg.c	FUNCTION_80	IF_1	IF_6
0x4004ff2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2785	prdbg.c	FUNCTION_80	IF_1	IF_6	CALL_9
0x4004ff6	          0x488b00	                    mov rax, qword [rax]	      2785	prdbg.c	FUNCTION_80	IF_1	IF_6	CALL_9
0x4004ff9	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2785	prdbg.c	FUNCTION_80	IF_1	IF_6	CALL_9
0x4004ffd	      0xbe00000000	                              mov esi, 0	      2785	prdbg.c	FUNCTION_80	IF_1	IF_6	CALL_9
0x4005002	          0x4889c7	                            mov rdi, rax	      2785	prdbg.c	FUNCTION_80	IF_1	IF_6	CALL_9
0x4005005	      0xb800000000	                              mov eax, 0	      2785	prdbg.c	FUNCTION_80	IF_1	IF_6	CALL_9
0x400500a	      0xe800000000	                          call 0x400500f	      2785	prdbg.c	FUNCTION_80	IF_1	IF_6	CALL_9
0x400500f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2786	prdbg.c	FUNCTION_80	IF_1	IF_6	CALL_10
0x4005013	          0x4889c7	                            mov rdi, rax	      2786	prdbg.c	FUNCTION_80	IF_1	IF_6	CALL_10
0x4005016	      0xe800000000	                          call 0x400501b	      2786	prdbg.c	FUNCTION_80	IF_1	IF_6	CALL_10
0x400501b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2788	prdbg.c	FUNCTION_80	IF_1	CALL_11
0x400501f	          0x488b00	                    mov rax, qword [rax]	      2788	prdbg.c	FUNCTION_80	IF_1	CALL_11
0x4005022	          0x4889c6	                            mov rsi, rax	      2788	prdbg.c	FUNCTION_80	IF_1	CALL_11
0x4005025	      0xbf0a000000	                            mov edi, 0xa	      2788	prdbg.c	FUNCTION_80	IF_1	CALL_11
0x400502a	      0xe800000000	                          call 0x400502f	      2788	prdbg.c	FUNCTION_80	IF_1	CALL_11
0x400502f	      0xb801000000	                              mov eax, 1	      2791	prdbg.c	FUNCTION_80
0x4005034	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2792	prdbg.c	FUNCTION_80
0x4005038	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2792	prdbg.c	FUNCTION_80
0x4005041	            0x7405	                            je 0x4005048	      2792	prdbg.c	FUNCTION_80
0x4005043	      0xe800000000	                          call 0x4005048	      2792	prdbg.c	FUNCTION_80
0x4005048	              0xc9	                                   leave	      2792	prdbg.c	FUNCTION_80
0x4005049	              0xc3	                                     ret	      2792	prdbg.c	FUNCTION_80
pr_class_end_method	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,0:DO,0:ELSE,0:IF,0	11
0x4002c31	              0x55	                                push rbp	      1572	prdbg.c	FUNCTION_40
0x4002c32	          0x4889e5	                            mov rbp, rsp	      1572	prdbg.c	FUNCTION_40
0x4002c35	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1572	prdbg.c	FUNCTION_40
0x4002c39	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1573	prdbg.c	FUNCTION_40
0x4002c3d	        0x488945f8	                mov qword [rbp - 8], rax	      1573	prdbg.c	FUNCTION_40
0x4002c41	        0x488b45f8	                mov rax, qword [rbp - 8]	      1575	prdbg.c	FUNCTION_40
0x4002c45	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1575	prdbg.c	FUNCTION_40
0x4002c49	    0x48c740180000	               mov qword [rax + 0x18], 0	      1575	prdbg.c	FUNCTION_40
0x4002c51	      0xb801000000	                              mov eax, 1	      1576	prdbg.c	FUNCTION_40
0x4002c56	              0x5d	                                 pop rbp	      1577	prdbg.c	FUNCTION_40
0x4002c57	              0xc3	                                     ret	      1577	prdbg.c	FUNCTION_40
pr_tag_type	WHILE,0:FOR,0:functions,0:SWITCH,1:CALL,6:DO,0:ELSE,1:IF,5	87
0x4002c9f	              0x55	                                push rbp	      1602	prdbg.c	FUNCTION_43
0x4002ca0	          0x4889e5	                            mov rbp, rsp	      1602	prdbg.c	FUNCTION_43
0x4002ca3	        0x4883ec60	                           sub rsp, 0x60	      1602	prdbg.c	FUNCTION_43
0x4002ca7	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1602	prdbg.c	FUNCTION_43
0x4002cab	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1602	prdbg.c	FUNCTION_43
0x4002caf	          0x8955ac	             mov dword [rbp - 0x54], edx	      1602	prdbg.c	FUNCTION_43
0x4002cb2	          0x894da8	             mov dword [rbp - 0x58], ecx	      1602	prdbg.c	FUNCTION_43
0x4002cb5	    0x64488b042528	                mov rax, qword fs:[0x28]	      1602	prdbg.c	FUNCTION_43
0x4002cbe	        0x488945f8	                mov qword [rbp - 8], rax	      1602	prdbg.c	FUNCTION_43
0x4002cc2	            0x31c0	                            xor eax, eax	      1602	prdbg.c	FUNCTION_43
0x4002cc4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1603	prdbg.c	FUNCTION_43
0x4002cc8	        0x488945d8	             mov qword [rbp - 0x28], rax	      1603	prdbg.c	FUNCTION_43
0x4002ccc	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4002ccf	          0x83e807	                              sub eax, 7	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4002cd2	          0x83f804	                              cmp eax, 4	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4002cd5	            0x773e	                            ja 0x4002d15	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4002cd7	            0x89c0	                            mov eax, eax	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4002cd9	    0x488b04c50000	                  mov rax, qword [rax*8]	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4002ce1	            0xffe0	                                 jmp rax	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4002ce3	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1610	prdbg.c	FUNCTION_43	SWITCH_1
0x4002ceb	            0xeb2d	                           jmp 0x4002d1a	      1611	prdbg.c	FUNCTION_43	SWITCH_1
0x4002ced	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1613	prdbg.c	FUNCTION_43	SWITCH_1
0x4002cf5	            0xeb23	                           jmp 0x4002d1a	      1614	prdbg.c	FUNCTION_43	SWITCH_1
0x4002cf7	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1616	prdbg.c	FUNCTION_43	SWITCH_1
0x4002cff	            0xeb19	                           jmp 0x4002d1a	      1617	prdbg.c	FUNCTION_43	SWITCH_1
0x4002d01	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1619	prdbg.c	FUNCTION_43	SWITCH_1
0x4002d09	            0xeb0f	                           jmp 0x4002d1a	      1620	prdbg.c	FUNCTION_43	SWITCH_1
0x4002d0b	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1622	prdbg.c	FUNCTION_43	SWITCH_1
0x4002d13	            0xeb05	                           jmp 0x4002d1a	      1623	prdbg.c	FUNCTION_43	SWITCH_1
0x4002d15	      0xe800000000	                          call 0x4002d1a	      1625	prdbg.c	FUNCTION_43	SWITCH_1	CALL_1
0x4002d1a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1629	prdbg.c	FUNCTION_43	IF_1	CALL_2
0x4002d1e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1629	prdbg.c	FUNCTION_43	IF_1	CALL_2
0x4002d22	          0x4889d6	                            mov rsi, rdx	      1629	prdbg.c	FUNCTION_43	IF_1	CALL_2
0x4002d25	          0x4889c7	                            mov rdi, rax	      1629	prdbg.c	FUNCTION_43	IF_1	CALL_2
0x4002d28	      0xe876d4ffff	                      call sym.push_type	      1629	prdbg.c	FUNCTION_43	IF_1	CALL_2
0x4002d2d	            0x85c0	                           test eax, eax	      1629	prdbg.c	FUNCTION_43	IF_1	CALL_2
0x4002d2f	            0x750a	                           jne 0x4002d3b	      1629	prdbg.c	FUNCTION_43	IF_1	CALL_2
0x4002d31	      0xb800000000	                              mov eax, 0	      1630	prdbg.c	FUNCTION_43	IF_1
0x4002d36	      0xe999000000	                           jmp 0x4002dd4	      1630	prdbg.c	FUNCTION_43	IF_1
0x4002d3b	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1631	prdbg.c	FUNCTION_43	IF_2
0x4002d40	            0x740a	                            je 0x4002d4c	      1631	prdbg.c	FUNCTION_43	IF_2
0x4002d42	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1632	prdbg.c	FUNCTION_43	IF_2
0x4002d46	        0x488945d0	             mov qword [rbp - 0x30], rax	      1632	prdbg.c	FUNCTION_43	IF_2
0x4002d4a	            0xeb21	                           jmp 0x4002d6d	      1632	prdbg.c	FUNCTION_43	IF_2
0x4002d4c	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1635	prdbg.c	FUNCTION_43	ELSE_1	CALL_3
0x4002d4f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1635	prdbg.c	FUNCTION_43	ELSE_1	CALL_3
0x4002d53	      0xbe00000000	                              mov esi, 0	      1635	prdbg.c	FUNCTION_43	ELSE_1	CALL_3
0x4002d58	          0x4889c7	                            mov rdi, rax	      1635	prdbg.c	FUNCTION_43	ELSE_1	CALL_3
0x4002d5b	      0xb800000000	                              mov eax, 0	      1635	prdbg.c	FUNCTION_43	ELSE_1	CALL_3
0x4002d60	      0xe800000000	                          call 0x4002d65	      1635	prdbg.c	FUNCTION_43	ELSE_1	CALL_3
0x4002d65	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1636	prdbg.c	FUNCTION_43	ELSE_1
0x4002d69	        0x488945d0	             mov qword [rbp - 0x30], rax	      1636	prdbg.c	FUNCTION_43	ELSE_1
0x4002d6d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_4
0x4002d71	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_4
0x4002d75	          0x4889d6	                            mov rsi, rdx	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_4
0x4002d78	          0x4889c7	                            mov rdi, rax	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_4
0x4002d7b	      0xe878d5ffff	                    call sym.append_type	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_4
0x4002d80	            0x85c0	                           test eax, eax	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_4
0x4002d82	            0x7507	                           jne 0x4002d8b	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_4
0x4002d84	      0xb800000000	                              mov eax, 0	      1640	prdbg.c	FUNCTION_43	IF_3
0x4002d89	            0xeb49	                           jmp 0x4002dd4	      1640	prdbg.c	FUNCTION_43	IF_3
0x4002d8b	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1641	prdbg.c	FUNCTION_43	IF_4
0x4002d90	            0x743d	                            je 0x4002dcf	      1641	prdbg.c	FUNCTION_43	IF_4
0x4002d92	        0x837da80b	            cmp dword [rbp - 0x58], 0xb 	      1641	prdbg.c	FUNCTION_43	IF_4
0x4002d96	            0x7437	                            je 0x4002dcf	      1641	prdbg.c	FUNCTION_43	IF_4
0x4002d98	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1643	prdbg.c	FUNCTION_43	IF_4	CALL_5
0x4002d9b	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1643	prdbg.c	FUNCTION_43	IF_4	CALL_5
0x4002d9f	      0xbe00000000	                              mov esi, 0	      1643	prdbg.c	FUNCTION_43	IF_4	CALL_5
0x4002da4	          0x4889c7	                            mov rdi, rax	      1643	prdbg.c	FUNCTION_43	IF_4	CALL_5
0x4002da7	      0xb800000000	                              mov eax, 0	      1643	prdbg.c	FUNCTION_43	IF_4	CALL_5
0x4002dac	      0xe800000000	                          call 0x4002db1	      1643	prdbg.c	FUNCTION_43	IF_4	CALL_5
0x4002db1	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1644	prdbg.c	FUNCTION_43	IF_4	IF_5	CALL_6
0x4002db5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1644	prdbg.c	FUNCTION_43	IF_4	IF_5	CALL_6
0x4002db9	          0x4889d6	                            mov rsi, rdx	      1644	prdbg.c	FUNCTION_43	IF_4	IF_5	CALL_6
0x4002dbc	          0x4889c7	                            mov rdi, rax	      1644	prdbg.c	FUNCTION_43	IF_4	IF_5	CALL_6
0x4002dbf	      0xe834d5ffff	                    call sym.append_type	      1644	prdbg.c	FUNCTION_43	IF_4	IF_5	CALL_6
0x4002dc4	            0x85c0	                           test eax, eax	      1644	prdbg.c	FUNCTION_43	IF_4	IF_5	CALL_6
0x4002dc6	            0x7507	                           jne 0x4002dcf	      1644	prdbg.c	FUNCTION_43	IF_4	IF_5	CALL_6
0x4002dc8	      0xb800000000	                              mov eax, 0	      1645	prdbg.c	FUNCTION_43	IF_4	IF_5
0x4002dcd	            0xeb05	                           jmp 0x4002dd4	      1645	prdbg.c	FUNCTION_43	IF_4	IF_5
0x4002dcf	      0xb801000000	                              mov eax, 1	      1648	prdbg.c	FUNCTION_43
0x4002dd4	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1649	prdbg.c	FUNCTION_43
0x4002dd8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1649	prdbg.c	FUNCTION_43
0x4002de1	            0x7405	                            je 0x4002de8	      1649	prdbg.c	FUNCTION_43
0x4002de3	      0xe800000000	                          call 0x4002de8	      1649	prdbg.c	FUNCTION_43
0x4002de8	              0xc9	                                   leave	      1649	prdbg.c	FUNCTION_43
0x4002de9	              0xc3	                                     ret	      1649	prdbg.c	FUNCTION_43
pr_array_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,12:DO,0:ELSE,2:IF,8	108
0x400120f	              0x55	                                push rbp	       827	prdbg.c	FUNCTION_24
0x4001210	          0x4889e5	                            mov rbp, rsp	       827	prdbg.c	FUNCTION_24
0x4001213	    0x4881ecb00000	                           sub rsp, 0xb0	       827	prdbg.c	FUNCTION_24
0x400121a	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	       827	prdbg.c	FUNCTION_24
0x4001221	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	       827	prdbg.c	FUNCTION_24
0x4001228	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	       827	prdbg.c	FUNCTION_24
0x400122f	    0x898d54ffffff	             mov dword [rbp - 0xac], ecx	       827	prdbg.c	FUNCTION_24
0x4001235	    0x64488b042528	                mov rax, qword fs:[0x28]	       827	prdbg.c	FUNCTION_24
0x400123e	        0x488945f8	                mov qword [rbp - 8], rax	       827	prdbg.c	FUNCTION_24
0x4001242	            0x31c0	                            xor eax, eax	       827	prdbg.c	FUNCTION_24
0x4001244	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       828	prdbg.c	FUNCTION_24
0x400124b	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       828	prdbg.c	FUNCTION_24
0x4001252	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       832	prdbg.c	FUNCTION_24	CALL_1
0x4001259	          0x4889c7	                            mov rdi, rax	       832	prdbg.c	FUNCTION_24	CALL_1
0x400125c	      0xe899f4ffff	                       call sym.pop_type	       832	prdbg.c	FUNCTION_24	CALL_1
0x4001261	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       832	prdbg.c	FUNCTION_24	CALL_1
0x4001268	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       833	prdbg.c	FUNCTION_24	IF_1
0x4001270	            0x750a	                           jne 0x400127c	       833	prdbg.c	FUNCTION_24	IF_1
0x4001272	      0xb800000000	                              mov eax, 0	       834	prdbg.c	FUNCTION_24	IF_1
0x4001277	      0xe960010000	                           jmp 0x40013dc	       834	prdbg.c	FUNCTION_24	IF_1
0x400127c	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	       836	prdbg.c	FUNCTION_24	IF_2
0x4001284	            0x7559	                           jne 0x40012df	       836	prdbg.c	FUNCTION_24	IF_2
0x4001286	    0x4883bd58ffff	cmp qword [rbp - 0xa8], 0xffffffffffffffff	       838	prdbg.c	FUNCTION_24	IF_2	IF_3
0x400128e	            0x750f	                           jne 0x400129f	       838	prdbg.c	FUNCTION_24	IF_2	IF_3
0x4001290	        0x488d45c0	                   lea rax, [rbp - 0x40]	       839	prdbg.c	FUNCTION_24	IF_2	CALL_2
0x4001294	    0xc7007c5b5d00	               mov dword [rax], 0x5d5b7c	       839	prdbg.c	FUNCTION_24	IF_2	CALL_2
0x400129a	      0xe998000000	                           jmp 0x4001337	       839	prdbg.c	FUNCTION_24	IF_2	CALL_2
0x400129f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       842	prdbg.c	FUNCTION_24	IF_2	ELSE_1	CALL_3
0x40012a6	        0x4883c001	                              add rax, 1	       842	prdbg.c	FUNCTION_24	IF_2	ELSE_1	CALL_3
0x40012aa	          0x4889c7	                            mov rdi, rax	       842	prdbg.c	FUNCTION_24	IF_2	ELSE_1	CALL_3
0x40012ad	        0x488d45a0	                   lea rax, [rbp - 0x60]	       842	prdbg.c	FUNCTION_24	IF_2	ELSE_1	CALL_3
0x40012b1	      0xb900000000	                              mov ecx, 0	       842	prdbg.c	FUNCTION_24	IF_2	ELSE_1	CALL_3
0x40012b6	      0xba00000000	                              mov edx, 0	       842	prdbg.c	FUNCTION_24	IF_2	ELSE_1	CALL_3
0x40012bb	          0x4889c6	                            mov rsi, rax	       842	prdbg.c	FUNCTION_24	IF_2	ELSE_1	CALL_3
0x40012be	      0xe8a2f4ffff	                      call sym.print_vma	       842	prdbg.c	FUNCTION_24	IF_2	ELSE_1	CALL_3
0x40012c3	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       843	prdbg.c	FUNCTION_24	IF_2	ELSE_1	CALL_4
0x40012c7	        0x488d45c0	                   lea rax, [rbp - 0x40]	       843	prdbg.c	FUNCTION_24	IF_2	ELSE_1	CALL_4
0x40012cb	      0xbe00000000	                              mov esi, 0	       843	prdbg.c	FUNCTION_24	IF_2	ELSE_1	CALL_4
0x40012d0	          0x4889c7	                            mov rdi, rax	       843	prdbg.c	FUNCTION_24	IF_2	ELSE_1	CALL_4
0x40012d3	      0xb800000000	                              mov eax, 0	       843	prdbg.c	FUNCTION_24	IF_2	ELSE_1	CALL_4
0x40012d8	      0xe800000000	                          call 0x40012dd	       843	prdbg.c	FUNCTION_24	IF_2	ELSE_1	CALL_4
0x40012dd	            0xeb58	                           jmp 0x4001337	       843	prdbg.c	FUNCTION_24	IF_2	ELSE_1	CALL_4
0x40012df	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       848	prdbg.c	FUNCTION_24	ELSE_2	CALL_5
0x40012e6	        0x488d7580	                   lea rsi, [rbp - 0x80]	       848	prdbg.c	FUNCTION_24	ELSE_2	CALL_5
0x40012ea	      0xb900000000	                              mov ecx, 0	       848	prdbg.c	FUNCTION_24	ELSE_2	CALL_5
0x40012ef	      0xba00000000	                              mov edx, 0	       848	prdbg.c	FUNCTION_24	ELSE_2	CALL_5
0x40012f4	          0x4889c7	                            mov rdi, rax	       848	prdbg.c	FUNCTION_24	ELSE_2	CALL_5
0x40012f7	      0xe869f4ffff	                      call sym.print_vma	       848	prdbg.c	FUNCTION_24	ELSE_2	CALL_5
0x40012fc	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       849	prdbg.c	FUNCTION_24	ELSE_2	CALL_6
0x4001303	        0x488d75a0	                   lea rsi, [rbp - 0x60]	       849	prdbg.c	FUNCTION_24	ELSE_2	CALL_6
0x4001307	      0xb900000000	                              mov ecx, 0	       849	prdbg.c	FUNCTION_24	ELSE_2	CALL_6
0x400130c	      0xba00000000	                              mov edx, 0	       849	prdbg.c	FUNCTION_24	ELSE_2	CALL_6
0x4001311	          0x4889c7	                            mov rdi, rax	       849	prdbg.c	FUNCTION_24	ELSE_2	CALL_6
0x4001314	      0xe84cf4ffff	                      call sym.print_vma	       849	prdbg.c	FUNCTION_24	ELSE_2	CALL_6
0x4001319	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       850	prdbg.c	FUNCTION_24	ELSE_2	CALL_7
0x400131d	        0x488d5580	                   lea rdx, [rbp - 0x80]	       850	prdbg.c	FUNCTION_24	ELSE_2	CALL_7
0x4001321	        0x488d45c0	                   lea rax, [rbp - 0x40]	       850	prdbg.c	FUNCTION_24	ELSE_2	CALL_7
0x4001325	      0xbe00000000	                              mov esi, 0	       850	prdbg.c	FUNCTION_24	ELSE_2	CALL_7
0x400132a	          0x4889c7	                            mov rdi, rax	       850	prdbg.c	FUNCTION_24	ELSE_2	CALL_7
0x400132d	      0xb800000000	                              mov eax, 0	       850	prdbg.c	FUNCTION_24	ELSE_2	CALL_7
0x4001332	      0xe800000000	                          call 0x4001337	       850	prdbg.c	FUNCTION_24	ELSE_2	CALL_7
0x4001337	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       853	prdbg.c	FUNCTION_24	IF_4	CALL_8
0x400133b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       853	prdbg.c	FUNCTION_24	IF_4	CALL_8
0x4001342	          0x4889d6	                            mov rsi, rdx	       853	prdbg.c	FUNCTION_24	IF_4	CALL_8
0x4001345	          0x4889c7	                            mov rdi, rax	       853	prdbg.c	FUNCTION_24	IF_4	CALL_8
0x4001348	      0xe857f1ffff	                call sym.substitute_type	       853	prdbg.c	FUNCTION_24	IF_4	CALL_8
0x400134d	            0x85c0	                           test eax, eax	       853	prdbg.c	FUNCTION_24	IF_4	CALL_8
0x400134f	            0x750a	                           jne 0x400135b	       853	prdbg.c	FUNCTION_24	IF_4	CALL_8
0x4001351	      0xb800000000	                              mov eax, 0	       854	prdbg.c	FUNCTION_24	IF_4
0x4001356	      0xe981000000	                           jmp 0x40013dc	       854	prdbg.c	FUNCTION_24	IF_4
0x400135b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       856	prdbg.c	FUNCTION_24	IF_5	CALL_9
0x4001362	      0xbe00000000	                              mov esi, 0	       856	prdbg.c	FUNCTION_24	IF_5	CALL_9
0x4001367	          0x4889c7	                            mov rdi, rax	       856	prdbg.c	FUNCTION_24	IF_5	CALL_9
0x400136a	      0xe800000000	                          call 0x400136f	       856	prdbg.c	FUNCTION_24	IF_5	CALL_9
0x400136f	            0x85c0	                           test eax, eax	       856	prdbg.c	FUNCTION_24	IF_5	CALL_9
0x4001371	            0x743c	                            je 0x40013af	       856	prdbg.c	FUNCTION_24	IF_5	CALL_9
0x4001373	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       858	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_10
0x400137a	      0xbe00000000	                              mov esi, 0	       858	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_10
0x400137f	          0x4889c7	                            mov rdi, rax	       858	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_10
0x4001382	      0xe871efffff	                    call sym.append_type	       858	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_10
0x4001387	            0x85c0	                           test eax, eax	       858	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_10
0x4001389	            0x741d	                            je 0x40013a8	       858	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_10
0x400138b	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_11
0x4001392	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_11
0x4001399	          0x4889d6	                            mov rsi, rdx	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_11
0x400139c	          0x4889c7	                            mov rdi, rax	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_11
0x400139f	      0xe854efffff	                    call sym.append_type	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_11
0x40013a4	            0x85c0	                           test eax, eax	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_11
0x40013a6	            0x7507	                           jne 0x40013af	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_11
0x40013a8	      0xb800000000	                              mov eax, 0	       860	prdbg.c	FUNCTION_24	IF_5	IF_6
0x40013ad	            0xeb2d	                           jmp 0x40013dc	       860	prdbg.c	FUNCTION_24	IF_5	IF_6
0x40013af	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	       863	prdbg.c	FUNCTION_24	IF_7
0x40013b6	            0x741f	                            je 0x40013d7	       863	prdbg.c	FUNCTION_24	IF_7
0x40013b8	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       865	prdbg.c	FUNCTION_24	IF_7	IF_8	CALL_12
0x40013bf	      0xbe00000000	                              mov esi, 0	       865	prdbg.c	FUNCTION_24	IF_7	IF_8	CALL_12
0x40013c4	          0x4889c7	                            mov rdi, rax	       865	prdbg.c	FUNCTION_24	IF_7	IF_8	CALL_12
0x40013c7	      0xe82cefffff	                    call sym.append_type	       865	prdbg.c	FUNCTION_24	IF_7	IF_8	CALL_12
0x40013cc	            0x85c0	                           test eax, eax	       865	prdbg.c	FUNCTION_24	IF_7	IF_8	CALL_12
0x40013ce	            0x7507	                           jne 0x40013d7	       865	prdbg.c	FUNCTION_24	IF_7	IF_8	CALL_12
0x40013d0	      0xb800000000	                              mov eax, 0	       866	prdbg.c	FUNCTION_24	IF_7	IF_8
0x40013d5	            0xeb05	                           jmp 0x40013dc	       866	prdbg.c	FUNCTION_24	IF_7	IF_8
0x40013d7	      0xb801000000	                              mov eax, 1	       869	prdbg.c	FUNCTION_24
0x40013dc	        0x488b4df8	                mov rcx, qword [rbp - 8]	       870	prdbg.c	FUNCTION_24
0x40013e0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       870	prdbg.c	FUNCTION_24
0x40013e9	            0x7405	                            je 0x40013f0	       870	prdbg.c	FUNCTION_24
0x40013eb	      0xe800000000	                          call 0x40013f0	       870	prdbg.c	FUNCTION_24
0x40013f0	              0xc9	                                   leave	       870	prdbg.c	FUNCTION_24
0x40013f1	              0xc3	                                     ret	       870	prdbg.c	FUNCTION_24
pr_complex_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,2:DO,0:ELSE,0:IF,1	22
0x4000a14	              0x55	                                push rbp	       611	prdbg.c	FUNCTION_17
0x4000a15	          0x4889e5	                            mov rbp, rsp	       611	prdbg.c	FUNCTION_17
0x4000a18	        0x4883ec20	                           sub rsp, 0x20	       611	prdbg.c	FUNCTION_17
0x4000a1c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       611	prdbg.c	FUNCTION_17
0x4000a20	          0x8975e4	             mov dword [rbp - 0x1c], esi	       611	prdbg.c	FUNCTION_17
0x4000a23	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       612	prdbg.c	FUNCTION_17
0x4000a27	        0x488945f8	                mov qword [rbp - 8], rax	       612	prdbg.c	FUNCTION_17
0x4000a2b	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       614	prdbg.c	FUNCTION_17	IF_1	CALL_1
0x4000a2e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       614	prdbg.c	FUNCTION_17	IF_1	CALL_1
0x4000a32	            0x89d6	                            mov esi, edx	       614	prdbg.c	FUNCTION_17	IF_1	CALL_1
0x4000a34	          0x4889c7	                            mov rdi, rax	       614	prdbg.c	FUNCTION_17	IF_1	CALL_1
0x4000a37	      0xe837ffffff	                  call sym.pr_float_type	       614	prdbg.c	FUNCTION_17	IF_1	CALL_1
0x4000a3c	            0x85c0	                           test eax, eax	       614	prdbg.c	FUNCTION_17	IF_1	CALL_1
0x4000a3e	            0x7507	                           jne 0x4000a47	       614	prdbg.c	FUNCTION_17	IF_1	CALL_1
0x4000a40	      0xb800000000	                              mov eax, 0	       615	prdbg.c	FUNCTION_17	IF_1
0x4000a45	            0xeb11	                           jmp 0x4000a58	       615	prdbg.c	FUNCTION_17	IF_1
0x4000a47	        0x488b45f8	                mov rax, qword [rbp - 8]	       617	prdbg.c	FUNCTION_17	CALL_2
0x4000a4b	      0xbe00000000	                              mov esi, 0	       617	prdbg.c	FUNCTION_17	CALL_2
0x4000a50	          0x4889c7	                            mov rdi, rax	       617	prdbg.c	FUNCTION_17	CALL_2
0x4000a53	      0xe8ddf7ffff	                   call sym.prepend_type	       617	prdbg.c	FUNCTION_17	CALL_2
0x4000a58	              0xc9	                                   leave	       618	prdbg.c	FUNCTION_17
0x4000a59	              0xc3	                                     ret	       618	prdbg.c	FUNCTION_17
pr_end_class_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,0:IF,0	9
0x4002c58	              0x55	                                push rbp	      1583	prdbg.c	FUNCTION_41
0x4002c59	          0x4889e5	                            mov rbp, rsp	      1583	prdbg.c	FUNCTION_41
0x4002c5c	        0x4883ec10	                           sub rsp, 0x10	      1583	prdbg.c	FUNCTION_41
0x4002c60	        0x48897df8	                mov qword [rbp - 8], rdi	      1583	prdbg.c	FUNCTION_41
0x4002c64	        0x488b45f8	                mov rax, qword [rbp - 8]	      1584	prdbg.c	FUNCTION_41	CALL_1
0x4002c68	          0x4889c7	                            mov rdi, rax	      1584	prdbg.c	FUNCTION_41	CALL_1
0x4002c6b	      0xe829f2ffff	             call sym.pr_end_struct_type	      1584	prdbg.c	FUNCTION_41	CALL_1
0x4002c70	              0xc9	                                   leave	      1585	prdbg.c	FUNCTION_41
0x4002c71	              0xc3	                                     ret	      1585	prdbg.c	FUNCTION_41
tg_start_function	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,6:DO,0:ELSE,2:IF,7	107
0x4004b76	              0x55	                                push rbp	      2653	prdbg.c	FUNCTION_78
0x4004b77	          0x4889e5	                            mov rbp, rsp	      2653	prdbg.c	FUNCTION_78
0x4004b7a	              0x53	                                push rbx	      2653	prdbg.c	FUNCTION_78
0x4004b7b	        0x4883ec48	                           sub rsp, 0x48	      2653	prdbg.c	FUNCTION_78
0x4004b7f	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2653	prdbg.c	FUNCTION_78
0x4004b83	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2653	prdbg.c	FUNCTION_78
0x4004b87	          0x8955bc	             mov dword [rbp - 0x44], edx	      2653	prdbg.c	FUNCTION_78
0x4004b8a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2654	prdbg.c	FUNCTION_78
0x4004b8e	        0x488945e0	             mov qword [rbp - 0x20], rax	      2654	prdbg.c	FUNCTION_78
0x4004b92	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2657	prdbg.c	FUNCTION_78	IF_1
0x4004b96	            0x7512	                           jne 0x4004baa	      2657	prdbg.c	FUNCTION_78	IF_1
0x4004b98	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2658	prdbg.c	FUNCTION_78	IF_1
0x4004b9c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2658	prdbg.c	FUNCTION_78	IF_1
0x4004ba0	    0x48c740200000	               mov qword [rax + 0x20], 0	      2658	prdbg.c	FUNCTION_78	IF_1
0x4004ba8	            0xeb10	                           jmp 0x4004bba	      2658	prdbg.c	FUNCTION_78	IF_1
0x4004baa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2660	prdbg.c	FUNCTION_78	ELSE_1
0x4004bae	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2660	prdbg.c	FUNCTION_78	ELSE_1
0x4004bb2	    0x48c740200000	               mov qword [rax + 0x20], 0	      2660	prdbg.c	FUNCTION_78	ELSE_1
0x4004bba	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2662	prdbg.c	FUNCTION_78
0x4004bc2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2663	prdbg.c	FUNCTION_78	IF_2
0x4004bc6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2663	prdbg.c	FUNCTION_78	IF_2
0x4004bca	          0x4885c0	                           test rax, rax	      2663	prdbg.c	FUNCTION_78	IF_2
0x4004bcd	            0x7422	                            je 0x4004bf1	      2663	prdbg.c	FUNCTION_78	IF_2
0x4004bcf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2664	prdbg.c	FUNCTION_78	CALL_1
0x4004bd3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2664	prdbg.c	FUNCTION_78	CALL_1
0x4004bd7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2664	prdbg.c	FUNCTION_78	CALL_1
0x4004bdb	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      2664	prdbg.c	FUNCTION_78	CALL_1
0x4004bdf	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      2664	prdbg.c	FUNCTION_78	CALL_1
0x4004be3	      0xba03000000	                              mov edx, 3	      2664	prdbg.c	FUNCTION_78	CALL_1
0x4004be8	          0x4889cf	                            mov rdi, rcx	      2664	prdbg.c	FUNCTION_78	CALL_1
0x4004beb	            0xffd0	                                call rax	      2664	prdbg.c	FUNCTION_78	CALL_1
0x4004bed	        0x488945d8	             mov qword [rbp - 0x28], rax	      2664	prdbg.c	FUNCTION_78	CALL_1
0x4004bf1	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4004bf6	            0x7406	                            je 0x4004bfe	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4004bf8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4004bfc	            0xeb04	                           jmp 0x4004c02	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4004bfe	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4004c02	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4004c06	          0x4889c6	                            mov rsi, rax	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4004c09	          0x4889d7	                            mov rdi, rdx	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4004c0c	      0xe893b8ffff	                call sym.substitute_type	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4004c11	            0x85c0	                           test eax, eax	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4004c13	            0x750a	                           jne 0x4004c1f	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4004c15	      0xb800000000	                              mov eax, 0	      2667	prdbg.c	FUNCTION_78	IF_3
0x4004c1a	      0xe9e8000000	                           jmp 0x4004d07	      2667	prdbg.c	FUNCTION_78	IF_3
0x4004c1f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2669	prdbg.c	FUNCTION_78
0x4004c23	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2669	prdbg.c	FUNCTION_78
0x4004c27	    0x48c740180000	               mov qword [rax + 0x18], 0	      2669	prdbg.c	FUNCTION_78
0x4004c2f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2670	prdbg.c	FUNCTION_78	IF_4
0x4004c34	            0x747c	                            je 0x4004cb2	      2670	prdbg.c	FUNCTION_78	IF_4
0x4004c36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2673	prdbg.c	FUNCTION_78	IF_4	CALL_3
0x4004c3a	      0xbe00000000	                              mov esi, 0	      2673	prdbg.c	FUNCTION_78	IF_4	CALL_3
0x4004c3f	          0x4889c7	                            mov rdi, rax	      2673	prdbg.c	FUNCTION_78	IF_4	CALL_3
0x4004c42	      0xe800000000	                          call 0x4004c47	      2673	prdbg.c	FUNCTION_78	IF_4	CALL_3
0x4004c47	        0x488945e8	             mov qword [rbp - 0x18], rax	      2673	prdbg.c	FUNCTION_78	IF_4	CALL_3
0x4004c4b	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2674	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4004c50	            0x7425	                            je 0x4004c77	      2674	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4004c52	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2676	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4004c56	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2676	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4004c5a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2676	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4004c5e	        0x48895018	             mov qword [rax + 0x18], rdx	      2676	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4004c62	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2677	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4004c66	          0xc60000	                       mov byte [rax], 0	      2677	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4004c69	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2678	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4004c6d	        0x4883c002	                              add rax, 2	      2678	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4004c71	        0x488945c0	             mov qword [rbp - 0x40], rax	      2678	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4004c75	            0xeb18	                           jmp 0x4004c8f	      2678	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4004c77	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2682	prdbg.c	FUNCTION_78	IF_4	ELSE_2
0x4004c7b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2682	prdbg.c	FUNCTION_78	IF_4	ELSE_2
0x4004c7f	    0x48c740180000	               mov qword [rax + 0x18], 0	      2682	prdbg.c	FUNCTION_78	IF_4	ELSE_2
0x4004c87	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2683	prdbg.c	FUNCTION_78	IF_4	ELSE_2
0x4004c8b	        0x488945c0	             mov qword [rbp - 0x40], rax	      2683	prdbg.c	FUNCTION_78	IF_4	ELSE_2
0x4004c8f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2685	prdbg.c	FUNCTION_78	IF_4	CALL_4
0x4004c93	      0xbe28000000	                           mov esi, 0x28	      2685	prdbg.c	FUNCTION_78	IF_4	CALL_4
0x4004c98	          0x4889c7	                            mov rdi, rax	      2685	prdbg.c	FUNCTION_78	IF_4	CALL_4
0x4004c9b	      0xe800000000	                          call 0x4004ca0	      2685	prdbg.c	FUNCTION_78	IF_4	CALL_4
0x4004ca0	        0x488945e8	             mov qword [rbp - 0x18], rax	      2685	prdbg.c	FUNCTION_78	IF_4	CALL_4
0x4004ca4	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2686	prdbg.c	FUNCTION_78	IF_4	IF_6
0x4004ca9	            0x7407	                            je 0x4004cb2	      2686	prdbg.c	FUNCTION_78	IF_4	IF_6
0x4004cab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2687	prdbg.c	FUNCTION_78	IF_4	IF_6
0x4004caf	          0xc60000	                       mov byte [rax], 0	      2687	prdbg.c	FUNCTION_78	IF_4	IF_6
0x4004cb2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2691	prdbg.c	FUNCTION_78	CALL_5
0x4004cb6	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      2691	prdbg.c	FUNCTION_78	CALL_5
0x4004cba	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2691	prdbg.c	FUNCTION_78	CALL_5
0x4004cbe	          0x4889c7	                            mov rdi, rax	      2691	prdbg.c	FUNCTION_78	CALL_5
0x4004cc1	      0xe800000000	                          call 0x4004cc6	      2691	prdbg.c	FUNCTION_78	CALL_5
0x4004cc6	        0x48894328	             mov qword [rbx + 0x28], rax	      2691	prdbg.c	FUNCTION_78	CALL_5
0x4004cca	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4004cce	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4004cd2	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4004cd6	          0x4885c0	                           test rax, rax	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4004cd9	            0x751c	                           jne 0x4004cf7	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4004cdb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4004cdf	      0xbe00000000	                              mov esi, 0	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4004ce4	          0x4889c7	                            mov rdi, rax	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4004ce7	      0xe80cb6ffff	                    call sym.append_type	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4004cec	            0x85c0	                           test eax, eax	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4004cee	            0x7507	                           jne 0x4004cf7	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4004cf0	      0xb800000000	                              mov eax, 0	      2694	prdbg.c	FUNCTION_78	IF_7
0x4004cf5	            0xeb10	                           jmp 0x4004d07	      2694	prdbg.c	FUNCTION_78	IF_7
0x4004cf7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2696	prdbg.c	FUNCTION_78
0x4004cfb	    0xc74018010000	               mov dword [rax + 0x18], 1	      2696	prdbg.c	FUNCTION_78
0x4004d02	      0xb801000000	                              mov eax, 1	      2698	prdbg.c	FUNCTION_78
0x4004d07	        0x4883c448	                           add rsp, 0x48	      2699	prdbg.c	FUNCTION_78
0x4004d0b	              0x5b	                                 pop rbx	      2699	prdbg.c	FUNCTION_78
0x4004d0c	              0x5d	                                 pop rbp	      2699	prdbg.c	FUNCTION_78
0x4004d0d	              0xc3	                                     ret	      2699	prdbg.c	FUNCTION_78
pr_function_type	WHILE,0:FOR,2:functions,0:SWITCH,0:CALL,18:DO,0:ELSE,2:IF,10	207
0x4000d7e	              0x55	                                push rbp	       711	prdbg.c	FUNCTION_21
0x4000d7f	          0x4889e5	                            mov rbp, rsp	       711	prdbg.c	FUNCTION_21
0x4000d82	              0x53	                                push rbx	       711	prdbg.c	FUNCTION_21
0x4000d83	        0x4883ec48	                           sub rsp, 0x48	       711	prdbg.c	FUNCTION_21
0x4000d87	        0x48897db8	             mov qword [rbp - 0x48], rdi	       711	prdbg.c	FUNCTION_21
0x4000d8b	          0x8975b4	             mov dword [rbp - 0x4c], esi	       711	prdbg.c	FUNCTION_21
0x4000d8e	          0x8955b0	             mov dword [rbp - 0x50], edx	       711	prdbg.c	FUNCTION_21
0x4000d91	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       712	prdbg.c	FUNCTION_21
0x4000d95	        0x488945e0	             mov qword [rbp - 0x20], rax	       712	prdbg.c	FUNCTION_21
0x4000d99	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       717	prdbg.c	FUNCTION_21	CALL_1
0x4000d9d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       717	prdbg.c	FUNCTION_21	CALL_1
0x4000da1	          0x4885c0	                           test rax, rax	       717	prdbg.c	FUNCTION_21	CALL_1
0x4000da4	            0x7519	                           jne 0x4000dbf	       717	prdbg.c	FUNCTION_21	CALL_1
0x4000da6	      0xb900000000	                              mov ecx, 0	       717	prdbg.c	FUNCTION_21	CALL_1
0x4000dab	      0xbacd020000	                          mov edx, 0x2cd	       717	prdbg.c	FUNCTION_21	CALL_1
0x4000db0	      0xbe00000000	                              mov esi, 0	       717	prdbg.c	FUNCTION_21	CALL_1
0x4000db5	      0xbf00000000	                              mov edi, 0	       717	prdbg.c	FUNCTION_21	CALL_1
0x4000dba	      0xe800000000	                          call 0x4000dbf	       717	prdbg.c	FUNCTION_21	CALL_1
0x4000dbf	    0xc745cc0a0000	             mov dword [rbp - 0x34], 0xa	       719	prdbg.c	FUNCTION_21
0x4000dc6	        0x837db400	               cmp dword [rbp - 0x4c], 0	       721	prdbg.c	FUNCTION_21	IF_1
0x4000dca	            0x7f11	                            jg 0x4000ddd	       721	prdbg.c	FUNCTION_21	IF_1
0x4000dcc	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       723	prdbg.c	FUNCTION_21	IF_1
0x4000dd4	        0x8345cc0f	             add dword [rbp - 0x34], 0xf	       724	prdbg.c	FUNCTION_21	IF_1
0x4000dd8	      0xe9e8000000	                           jmp 0x4000ec5	       724	prdbg.c	FUNCTION_21	IF_1
0x4000ddd	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x4000de0	            0x4898	                                    cdqe	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x4000de2	        0x48c1e003	                              shl rax, 3	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x4000de6	          0x4889c7	                            mov rdi, rax	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x4000de9	      0xe800000000	                          call 0x4000dee	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x4000dee	        0x488945d8	             mov qword [rbp - 0x28], rax	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x4000df2	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       731	prdbg.c	FUNCTION_21	ELSE_1	FOR_1
0x4000df5	          0x83e801	                              sub eax, 1	       731	prdbg.c	FUNCTION_21	ELSE_1	FOR_1
0x4000df8	          0x8945d0	             mov dword [rbp - 0x30], eax	       731	prdbg.c	FUNCTION_21	ELSE_1	FOR_1
0x4000dfb	      0xe9b1000000	                           jmp 0x4000eb1	       731	prdbg.c	FUNCTION_21	ELSE_1	FOR_1
0x4000e00	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       733	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_3
0x4000e04	      0xbe00000000	                              mov esi, 0	       733	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_3
0x4000e09	          0x4889c7	                            mov rdi, rax	       733	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_3
0x4000e0c	      0xe893f6ffff	                call sym.substitute_type	       733	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_3
0x4000e11	            0x85c0	                           test eax, eax	       733	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_3
0x4000e13	            0x7516	                           jne 0x4000e2b	       733	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_3
0x4000e15	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       735	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_4
0x4000e19	          0x4889c7	                            mov rdi, rax	       735	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_4
0x4000e1c	      0xe800000000	                          call 0x4000e21	       735	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_4
0x4000e21	      0xb800000000	                              mov eax, 0	       736	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2
0x4000e26	      0xe95c020000	                           jmp 0x4001087	       736	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2
0x4000e2b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x4000e2e	            0x4898	                                    cdqe	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x4000e30	    0x488d14c50000	                        lea rdx, [rax*8]	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x4000e38	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x4000e3c	        0x488d1c02	                    lea rbx, [rdx + rax]	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x4000e40	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x4000e44	          0x4889c7	                            mov rdi, rax	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x4000e47	      0xe8aef8ffff	                       call sym.pop_type	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x4000e4c	          0x488903	                    mov qword [rbx], rax	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x4000e4f	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       739	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3
0x4000e52	            0x4898	                                    cdqe	       739	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3
0x4000e54	    0x488d14c50000	                        lea rdx, [rax*8]	       739	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3
0x4000e5c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       739	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3
0x4000e60	          0x4801d0	                            add rax, rdx	       739	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3
0x4000e63	          0x488b00	                    mov rax, qword [rax]	       739	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3
0x4000e66	          0x4885c0	                           test rax, rax	       739	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3
0x4000e69	            0x7516	                           jne 0x4000e81	       739	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3
0x4000e6b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       741	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3	CALL_6
0x4000e6f	          0x4889c7	                            mov rdi, rax	       741	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3	CALL_6
0x4000e72	      0xe800000000	                          call 0x4000e77	       741	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3	CALL_6
0x4000e77	      0xb800000000	                              mov eax, 0	       742	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3
0x4000e7c	      0xe906020000	                           jmp 0x4001087	       742	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3
0x4000e81	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4000e84	            0x4898	                                    cdqe	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4000e86	    0x488d14c50000	                        lea rdx, [rax*8]	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4000e8e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4000e92	          0x4801d0	                            add rax, rdx	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4000e95	          0x488b00	                    mov rax, qword [rax]	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4000e98	          0x4889c7	                            mov rdi, rax	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4000e9b	      0xe800000000	                          call 0x4000ea0	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4000ea0	            0x89c2	                            mov edx, eax	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4000ea2	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4000ea5	             0x1d0	                            add eax, edx	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4000ea7	          0x83c002	                              add eax, 2	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4000eaa	          0x8945cc	             mov dword [rbp - 0x34], eax	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4000ead	        0x836dd001	               sub dword [rbp - 0x30], 1	       731	prdbg.c	FUNCTION_21	ELSE_1	FOR_1
0x4000eb1	        0x837dd000	               cmp dword [rbp - 0x30], 0	       731	prdbg.c	FUNCTION_21	ELSE_1	FOR_1
0x4000eb5	     0xf8945ffffff	                           jns 0x4000e00	       731	prdbg.c	FUNCTION_21	ELSE_1	FOR_1
0x4000ebb	        0x837db000	               cmp dword [rbp - 0x50], 0	       746	prdbg.c	FUNCTION_21	ELSE_1	IF_4
0x4000ebf	            0x7404	                            je 0x4000ec5	       746	prdbg.c	FUNCTION_21	ELSE_1	IF_4
0x4000ec1	        0x8345cc05	               add dword [rbp - 0x34], 5	       747	prdbg.c	FUNCTION_21	ELSE_1	IF_4
0x4000ec5	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       752	prdbg.c	FUNCTION_21	CALL_8
0x4000ec8	          0x4889c7	                            mov rdi, rax	       752	prdbg.c	FUNCTION_21	CALL_8
0x4000ecb	      0xe800000000	                          call 0x4000ed0	       752	prdbg.c	FUNCTION_21	CALL_8
0x4000ed0	        0x488945e8	             mov qword [rbp - 0x18], rax	       752	prdbg.c	FUNCTION_21	CALL_8
0x4000ed4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       753	prdbg.c	FUNCTION_21	CALL_9
0x4000ed8	      0xba06000000	                              mov edx, 6	       753	prdbg.c	FUNCTION_21	CALL_9
0x4000edd	      0xbe00000000	                              mov esi, 0	       753	prdbg.c	FUNCTION_21	CALL_9
0x4000ee2	          0x4889c7	                            mov rdi, rax	       753	prdbg.c	FUNCTION_21	CALL_9
0x4000ee5	      0xe800000000	                          call 0x4000eea	       753	prdbg.c	FUNCTION_21	CALL_9
0x4000eea	        0x837db400	               cmp dword [rbp - 0x4c], 0	       755	prdbg.c	FUNCTION_21	IF_5
0x4000eee	            0x7948	                           jns 0x4000f38	       755	prdbg.c	FUNCTION_21	IF_5
0x4000ef0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       756	prdbg.c	FUNCTION_21	CALL_10
0x4000ef4	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       756	prdbg.c	FUNCTION_21	CALL_10
0x4000efb	          0x4889c2	                            mov rdx, rax	       756	prdbg.c	FUNCTION_21	CALL_10
0x4000efe	      0xb800000000	                              mov eax, 0	       756	prdbg.c	FUNCTION_21	CALL_10
0x4000f03	          0x4889d7	                            mov rdi, rdx	       756	prdbg.c	FUNCTION_21	CALL_10
0x4000f06	            0xf2ae	              repne scasb al, byte [rdi]	       756	prdbg.c	FUNCTION_21	CALL_10
0x4000f08	          0x4889c8	                            mov rax, rcx	       756	prdbg.c	FUNCTION_21	CALL_10
0x4000f0b	          0x48f7d0	                                 not rax	       756	prdbg.c	FUNCTION_21	CALL_10
0x4000f0e	        0x488d50ff	                      lea rdx, [rax - 1]	       756	prdbg.c	FUNCTION_21	CALL_10
0x4000f12	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       756	prdbg.c	FUNCTION_21	CALL_10
0x4000f16	          0x4801d0	                            add rax, rdx	       756	prdbg.c	FUNCTION_21	CALL_10
0x4000f19	    0x48bb2f2a2075	          movabs rbx, 0x6f6e6b6e75202a2f	       756	prdbg.c	FUNCTION_21	CALL_10
0x4000f23	          0x488918	                    mov qword [rax], rbx	       756	prdbg.c	FUNCTION_21	CALL_10
0x4000f26	    0xc74008776e20	        mov dword [rax + 8], 0x2a206e77 	       756	prdbg.c	FUNCTION_21	CALL_10
0x4000f2d	    0x66c7400c2f00	              mov word [rax + 0xc], 0x2f	       756	prdbg.c	FUNCTION_21	CALL_10
0x4000f33	      0xe9f2000000	                           jmp 0x400102a	       756	prdbg.c	FUNCTION_21	CALL_10
0x4000f38	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       761	prdbg.c	FUNCTION_21	ELSE_2	FOR_2
0x4000f3f	            0xeb62	                           jmp 0x4000fa3	       761	prdbg.c	FUNCTION_21	ELSE_2	FOR_2
0x4000f41	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       763	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	IF_6
0x4000f45	            0x7e32	                           jle 0x4000f79	       763	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	IF_6
0x4000f47	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       764	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_11
0x4000f4b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       764	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_11
0x4000f52	          0x4889c2	                            mov rdx, rax	       764	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_11
0x4000f55	      0xb800000000	                              mov eax, 0	       764	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_11
0x4000f5a	          0x4889d7	                            mov rdi, rdx	       764	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_11
0x4000f5d	            0xf2ae	              repne scasb al, byte [rdi]	       764	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_11
0x4000f5f	          0x4889c8	                            mov rax, rcx	       764	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_11
0x4000f62	          0x48f7d0	                                 not rax	       764	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_11
0x4000f65	        0x488d50ff	                      lea rdx, [rax - 1]	       764	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_11
0x4000f69	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       764	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_11
0x4000f6d	          0x4801d0	                            add rax, rdx	       764	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_11
0x4000f70	      0x66c7002c20	                  mov word [rax], 0x202c	       764	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_11
0x4000f75	        0xc6400200	                   mov byte [rax + 2], 0	       764	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_11
0x4000f79	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       765	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_12
0x4000f7c	            0x4898	                                    cdqe	       765	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_12
0x4000f7e	    0x488d14c50000	                        lea rdx, [rax*8]	       765	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_12
0x4000f86	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       765	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_12
0x4000f8a	          0x4801d0	                            add rax, rdx	       765	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_12
0x4000f8d	          0x488b10	                    mov rdx, qword [rax]	       765	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_12
0x4000f90	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       765	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_12
0x4000f94	          0x4889d6	                            mov rsi, rdx	       765	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_12
0x4000f97	          0x4889c7	                            mov rdi, rax	       765	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_12
0x4000f9a	      0xe800000000	                          call 0x4000f9f	       765	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	CALL_12
0x4000f9f	        0x8345d401	               add dword [rbp - 0x2c], 1	       761	prdbg.c	FUNCTION_21	ELSE_2	FOR_2
0x4000fa3	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       761	prdbg.c	FUNCTION_21	ELSE_2	FOR_2
0x4000fa6	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       761	prdbg.c	FUNCTION_21	ELSE_2	FOR_2
0x4000fa9	            0x7c96	                            jl 0x4000f41	       761	prdbg.c	FUNCTION_21	ELSE_2	FOR_2
0x4000fab	        0x837db000	               cmp dword [rbp - 0x50], 0	       767	prdbg.c	FUNCTION_21	ELSE_2	IF_7
0x4000faf	            0x7467	                            je 0x4001018	       767	prdbg.c	FUNCTION_21	ELSE_2	IF_7
0x4000fb1	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       769	prdbg.c	FUNCTION_21	ELSE_2	IF_7	IF_8
0x4000fb5	            0x7e32	                           jle 0x4000fe9	       769	prdbg.c	FUNCTION_21	ELSE_2	IF_7	IF_8
0x4000fb7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       770	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_13
0x4000fbb	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       770	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_13
0x4000fc2	          0x4889c2	                            mov rdx, rax	       770	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_13
0x4000fc5	      0xb800000000	                              mov eax, 0	       770	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_13
0x4000fca	          0x4889d7	                            mov rdi, rdx	       770	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_13
0x4000fcd	            0xf2ae	              repne scasb al, byte [rdi]	       770	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_13
0x4000fcf	          0x4889c8	                            mov rax, rcx	       770	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_13
0x4000fd2	          0x48f7d0	                                 not rax	       770	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_13
0x4000fd5	        0x488d50ff	                      lea rdx, [rax - 1]	       770	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_13
0x4000fd9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       770	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_13
0x4000fdd	          0x4801d0	                            add rax, rdx	       770	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_13
0x4000fe0	      0x66c7002c20	                  mov word [rax], 0x202c	       770	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_13
0x4000fe5	        0xc6400200	                   mov byte [rax + 2], 0	       770	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_13
0x4000fe9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       771	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_14
0x4000fed	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       771	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_14
0x4000ff4	          0x4889c2	                            mov rdx, rax	       771	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_14
0x4000ff7	      0xb800000000	                              mov eax, 0	       771	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_14
0x4000ffc	          0x4889d7	                            mov rdi, rdx	       771	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_14
0x4000fff	            0xf2ae	              repne scasb al, byte [rdi]	       771	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_14
0x4001001	          0x4889c8	                            mov rax, rcx	       771	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_14
0x4001004	          0x48f7d0	                                 not rax	       771	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_14
0x4001007	        0x488d50ff	                      lea rdx, [rax - 1]	       771	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_14
0x400100b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       771	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_14
0x400100f	          0x4801d0	                            add rax, rdx	       771	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_14
0x4001012	    0xc7002e2e2e00	               mov dword [rax], 0x2e2e2e	       771	prdbg.c	FUNCTION_21	ELSE_2	IF_7	CALL_14
0x4001018	        0x837db400	               cmp dword [rbp - 0x4c], 0	       773	prdbg.c	FUNCTION_21	ELSE_2	IF_9
0x400101c	            0x7e0c	                           jle 0x400102a	       773	prdbg.c	FUNCTION_21	ELSE_2	IF_9
0x400101e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       774	prdbg.c	FUNCTION_21	ELSE_2	CALL_15
0x4001022	          0x4889c7	                            mov rdi, rax	       774	prdbg.c	FUNCTION_21	ELSE_2	CALL_15
0x4001025	      0xe800000000	                          call 0x400102a	       774	prdbg.c	FUNCTION_21	ELSE_2	CALL_15
0x400102a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       777	prdbg.c	FUNCTION_21	CALL_16
0x400102e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       777	prdbg.c	FUNCTION_21	CALL_16
0x4001035	          0x4889c2	                            mov rdx, rax	       777	prdbg.c	FUNCTION_21	CALL_16
0x4001038	      0xb800000000	                              mov eax, 0	       777	prdbg.c	FUNCTION_21	CALL_16
0x400103d	          0x4889d7	                            mov rdi, rdx	       777	prdbg.c	FUNCTION_21	CALL_16
0x4001040	            0xf2ae	              repne scasb al, byte [rdi]	       777	prdbg.c	FUNCTION_21	CALL_16
0x4001042	          0x4889c8	                            mov rax, rcx	       777	prdbg.c	FUNCTION_21	CALL_16
0x4001045	          0x48f7d0	                                 not rax	       777	prdbg.c	FUNCTION_21	CALL_16
0x4001048	        0x488d50ff	                      lea rdx, [rax - 1]	       777	prdbg.c	FUNCTION_21	CALL_16
0x400104c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       777	prdbg.c	FUNCTION_21	CALL_16
0x4001050	          0x4801d0	                            add rax, rdx	       777	prdbg.c	FUNCTION_21	CALL_16
0x4001053	      0x66c7002900	                    mov word [rax], 0x29	       777	prdbg.c	FUNCTION_21	CALL_16
0x4001058	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x400105c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x4001060	          0x4889d6	                            mov rsi, rdx	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x4001063	          0x4889c7	                            mov rdi, rax	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x4001066	      0xe839f4ffff	                call sym.substitute_type	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x400106b	            0x85c0	                           test eax, eax	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x400106d	            0x7507	                           jne 0x4001076	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x400106f	      0xb800000000	                              mov eax, 0	       780	prdbg.c	FUNCTION_21	IF_10
0x4001074	            0xeb11	                           jmp 0x4001087	       780	prdbg.c	FUNCTION_21	IF_10
0x4001076	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       782	prdbg.c	FUNCTION_21	CALL_18
0x400107a	          0x4889c7	                            mov rdi, rax	       782	prdbg.c	FUNCTION_21	CALL_18
0x400107d	      0xe800000000	                          call 0x4001082	       782	prdbg.c	FUNCTION_21	CALL_18
0x4001082	      0xb801000000	                              mov eax, 1	       784	prdbg.c	FUNCTION_21
0x4001087	        0x4883c448	                           add rsp, 0x48	       785	prdbg.c	FUNCTION_21
0x400108b	              0x5b	                                 pop rbx	       785	prdbg.c	FUNCTION_21
0x400108c	              0x5d	                                 pop rbp	       785	prdbg.c	FUNCTION_21
0x400108d	              0xc3	                                     ret	       785	prdbg.c	FUNCTION_21
visibility_name	WHILE,0:FOR,0:functions,0:SWITCH,1:CALL,1:DO,0:ELSE,0:IF,0	26
0x4005078	              0x55	                                push rbp	      2816	prdbg.c	FUNCTION_83
0x4005079	          0x4889e5	                            mov rbp, rsp	      2816	prdbg.c	FUNCTION_83
0x400507c	        0x4883ec20	                           sub rsp, 0x20	      2816	prdbg.c	FUNCTION_83
0x4005080	          0x897dec	             mov dword [rbp - 0x14], edi	      2816	prdbg.c	FUNCTION_83
0x4005083	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x4005086	          0x83f801	                              cmp eax, 1	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x4005089	            0x7425	                            je 0x40050b0	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x400508b	          0x83f801	                              cmp eax, 1	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x400508e	            0x720c	                            jb 0x400509c	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x4005090	          0x83f802	                              cmp eax, 2	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x4005093	            0x7411	                            je 0x40050a6	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x4005095	          0x83f803	                              cmp eax, 3	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x4005098	            0x7420	                            je 0x40050ba	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x400509a	            0xeb28	                           jmp 0x40050c4	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x400509c	    0x48c745f80000	                  mov qword [rbp - 8], 0	      2822	prdbg.c	FUNCTION_83	SWITCH_1
0x40050a4	            0xeb23	                           jmp 0x40050c9	      2823	prdbg.c	FUNCTION_83	SWITCH_1
0x40050a6	    0x48c745f80000	                  mov qword [rbp - 8], 0	      2825	prdbg.c	FUNCTION_83	SWITCH_1
0x40050ae	            0xeb19	                           jmp 0x40050c9	      2826	prdbg.c	FUNCTION_83	SWITCH_1
0x40050b0	    0x48c745f80000	                  mov qword [rbp - 8], 0	      2828	prdbg.c	FUNCTION_83	SWITCH_1
0x40050b8	            0xeb0f	                           jmp 0x40050c9	      2829	prdbg.c	FUNCTION_83	SWITCH_1
0x40050ba	    0x48c745f80000	                  mov qword [rbp - 8], 0	      2831	prdbg.c	FUNCTION_83	SWITCH_1
0x40050c2	            0xeb05	                           jmp 0x40050c9	      2832	prdbg.c	FUNCTION_83	SWITCH_1
0x40050c4	      0xe800000000	                          call 0x40050c9	      2834	prdbg.c	FUNCTION_83	SWITCH_1	CALL_1
0x40050c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2837	prdbg.c	FUNCTION_83
0x40050cd	              0xc9	                                   leave	      2838	prdbg.c	FUNCTION_83
0x40050ce	              0xc3	                                     ret	      2838	prdbg.c	FUNCTION_83
pr_end_struct_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,4:DO,0:ELSE,0:IF,0	71
0x4001e99	              0x55	                                push rbp	      1193	prdbg.c	FUNCTION_33
0x4001e9a	          0x4889e5	                            mov rbp, rsp	      1193	prdbg.c	FUNCTION_33
0x4001e9d	              0x53	                                push rbx	      1193	prdbg.c	FUNCTION_33
0x4001e9e	        0x4883ec28	                           sub rsp, 0x28	      1193	prdbg.c	FUNCTION_33
0x4001ea2	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1193	prdbg.c	FUNCTION_33
0x4001ea6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1194	prdbg.c	FUNCTION_33
0x4001eaa	        0x488945e0	             mov qword [rbp - 0x20], rax	      1194	prdbg.c	FUNCTION_33
0x4001eae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1197	prdbg.c	FUNCTION_33	CALL_1
0x4001eb2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1197	prdbg.c	FUNCTION_33	CALL_1
0x4001eb6	          0x4885c0	                           test rax, rax	      1197	prdbg.c	FUNCTION_33	CALL_1
0x4001eb9	            0x7519	                           jne 0x4001ed4	      1197	prdbg.c	FUNCTION_33	CALL_1
0x4001ebb	      0xb900000000	                              mov ecx, 0	      1197	prdbg.c	FUNCTION_33	CALL_1
0x4001ec0	      0xbaad040000	                          mov edx, 0x4ad	      1197	prdbg.c	FUNCTION_33	CALL_1
0x4001ec5	      0xbe00000000	                              mov esi, 0	      1197	prdbg.c	FUNCTION_33	CALL_1
0x4001eca	      0xbf00000000	                              mov edi, 0	      1197	prdbg.c	FUNCTION_33	CALL_1
0x4001ecf	      0xe800000000	                          call 0x4001ed4	      1197	prdbg.c	FUNCTION_33	CALL_1
0x4001ed4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1198	prdbg.c	FUNCTION_33	CALL_2
0x4001ed8	          0x8b4008	                mov eax, dword [rax + 8]	      1198	prdbg.c	FUNCTION_33	CALL_2
0x4001edb	          0x83f801	                              cmp eax, 1	      1198	prdbg.c	FUNCTION_33	CALL_2
0x4001ede	            0x7719	                            ja 0x4001ef9	      1198	prdbg.c	FUNCTION_33	CALL_2
0x4001ee0	      0xb900000000	                              mov ecx, 0	      1198	prdbg.c	FUNCTION_33	CALL_2
0x4001ee5	      0xbaae040000	                          mov edx, 0x4ae	      1198	prdbg.c	FUNCTION_33	CALL_2
0x4001eea	      0xbe00000000	                              mov esi, 0	      1198	prdbg.c	FUNCTION_33	CALL_2
0x4001eef	      0xbf00000000	                              mov edi, 0	      1198	prdbg.c	FUNCTION_33	CALL_2
0x4001ef4	      0xe800000000	                          call 0x4001ef9	      1198	prdbg.c	FUNCTION_33	CALL_2
0x4001ef9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1200	prdbg.c	FUNCTION_33
0x4001efd	          0x8b4008	                mov eax, dword [rax + 8]	      1200	prdbg.c	FUNCTION_33
0x4001f00	          0x8d50fe	                      lea edx, [rax - 2]	      1200	prdbg.c	FUNCTION_33
0x4001f03	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1200	prdbg.c	FUNCTION_33
0x4001f07	          0x895008	                mov dword [rax + 8], edx	      1200	prdbg.c	FUNCTION_33
0x4001f0a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1203	prdbg.c	FUNCTION_33	CALL_3
0x4001f0e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1203	prdbg.c	FUNCTION_33	CALL_3
0x4001f12	        0x488b5808	                mov rbx, qword [rax + 8]	      1203	prdbg.c	FUNCTION_33	CALL_3
0x4001f16	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1203	prdbg.c	FUNCTION_33	CALL_3
0x4001f1a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1203	prdbg.c	FUNCTION_33	CALL_3
0x4001f1e	        0x488b4008	                mov rax, qword [rax + 8]	      1203	prdbg.c	FUNCTION_33	CALL_3
0x4001f22	          0x4889c7	                            mov rdi, rax	      1203	prdbg.c	FUNCTION_33	CALL_3
0x4001f25	      0xe800000000	                          call 0x4001f2a	      1203	prdbg.c	FUNCTION_33	CALL_3
0x4001f2a	        0x4883e802	                              sub rax, 2	      1203	prdbg.c	FUNCTION_33	CALL_3
0x4001f2e	          0x4801d8	                            add rax, rbx	      1203	prdbg.c	FUNCTION_33	CALL_3
0x4001f31	        0x488945e8	             mov qword [rbp - 0x18], rax	      1203	prdbg.c	FUNCTION_33	CALL_3
0x4001f35	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f39	           0xfb600	                   movzx eax, byte [rax]	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f3c	            0x3c20	                            cmp al, 0x20	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f3e	            0x751e	                           jne 0x4001f5e	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f40	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f44	        0x4883c001	                              add rax, 1	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f48	           0xfb600	                   movzx eax, byte [rax]	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f4b	            0x3c20	                            cmp al, 0x20	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f4d	            0x750f	                           jne 0x4001f5e	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f4f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f53	        0x4883c002	                              add rax, 2	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f57	           0xfb600	                   movzx eax, byte [rax]	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f5a	            0x84c0	                             test al, al	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f5c	            0x7419	                            je 0x4001f77	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f5e	      0xb900000000	                              mov ecx, 0	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f63	      0xbab4040000	                          mov edx, 0x4b4	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f68	      0xbe00000000	                              mov esi, 0	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f6d	      0xbf00000000	                              mov edi, 0	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f72	      0xe800000000	                          call 0x4001f77	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4001f77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1206	prdbg.c	FUNCTION_33
0x4001f7b	        0x488d5001	                      lea rdx, [rax + 1]	      1206	prdbg.c	FUNCTION_33
0x4001f7f	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1206	prdbg.c	FUNCTION_33
0x4001f83	          0xc6007d	                    mov byte [rax], 0x7d	      1206	prdbg.c	FUNCTION_33
0x4001f86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1207	prdbg.c	FUNCTION_33
0x4001f8a	          0xc60000	                       mov byte [rax], 0	      1207	prdbg.c	FUNCTION_33
0x4001f8d	      0xb801000000	                              mov eax, 1	      1209	prdbg.c	FUNCTION_33
0x4001f92	        0x4883c428	                           add rsp, 0x28	      1210	prdbg.c	FUNCTION_33
0x4001f96	              0x5b	                                 pop rbx	      1210	prdbg.c	FUNCTION_33
0x4001f97	              0x5d	                                 pop rbp	      1210	prdbg.c	FUNCTION_33
0x4001f98	              0xc3	                                     ret	      1210	prdbg.c	FUNCTION_33
pr_set_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,4:DO,0:ELSE,0:IF,4	42
0x40013f2	              0x55	                                push rbp	       876	prdbg.c	FUNCTION_25
0x40013f3	          0x4889e5	                            mov rbp, rsp	       876	prdbg.c	FUNCTION_25
0x40013f6	        0x4883ec20	                           sub rsp, 0x20	       876	prdbg.c	FUNCTION_25
0x40013fa	        0x48897de8	             mov qword [rbp - 0x18], rdi	       876	prdbg.c	FUNCTION_25
0x40013fe	          0x8975e4	             mov dword [rbp - 0x1c], esi	       876	prdbg.c	FUNCTION_25
0x4001401	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       877	prdbg.c	FUNCTION_25
0x4001405	        0x488945f8	                mov qword [rbp - 8], rax	       877	prdbg.c	FUNCTION_25
0x4001409	        0x488b45f8	                mov rax, qword [rbp - 8]	       879	prdbg.c	FUNCTION_25	IF_1	CALL_1
0x400140d	      0xbe00000000	                              mov esi, 0	       879	prdbg.c	FUNCTION_25	IF_1	CALL_1
0x4001412	          0x4889c7	                            mov rdi, rax	       879	prdbg.c	FUNCTION_25	IF_1	CALL_1
0x4001415	      0xe88af0ffff	                call sym.substitute_type	       879	prdbg.c	FUNCTION_25	IF_1	CALL_1
0x400141a	            0x85c0	                           test eax, eax	       879	prdbg.c	FUNCTION_25	IF_1	CALL_1
0x400141c	            0x7507	                           jne 0x4001425	       879	prdbg.c	FUNCTION_25	IF_1	CALL_1
0x400141e	      0xb800000000	                              mov eax, 0	       880	prdbg.c	FUNCTION_25	IF_1
0x4001423	            0xeb58	                           jmp 0x400147d	       880	prdbg.c	FUNCTION_25	IF_1
0x4001425	        0x488b45f8	                mov rax, qword [rbp - 8]	       882	prdbg.c	FUNCTION_25	IF_2	CALL_2
0x4001429	      0xbe00000000	                              mov esi, 0	       882	prdbg.c	FUNCTION_25	IF_2	CALL_2
0x400142e	          0x4889c7	                            mov rdi, rax	       882	prdbg.c	FUNCTION_25	IF_2	CALL_2
0x4001431	      0xe8ffedffff	                   call sym.prepend_type	       882	prdbg.c	FUNCTION_25	IF_2	CALL_2
0x4001436	            0x85c0	                           test eax, eax	       882	prdbg.c	FUNCTION_25	IF_2	CALL_2
0x4001438	            0x7415	                            je 0x400144f	       882	prdbg.c	FUNCTION_25	IF_2	CALL_2
0x400143a	        0x488b45f8	                mov rax, qword [rbp - 8]	       883	prdbg.c	FUNCTION_25	IF_2	CALL_3
0x400143e	      0xbe00000000	                              mov esi, 0	       883	prdbg.c	FUNCTION_25	IF_2	CALL_3
0x4001443	          0x4889c7	                            mov rdi, rax	       883	prdbg.c	FUNCTION_25	IF_2	CALL_3
0x4001446	      0xe8adeeffff	                    call sym.append_type	       883	prdbg.c	FUNCTION_25	IF_2	CALL_3
0x400144b	            0x85c0	                           test eax, eax	       883	prdbg.c	FUNCTION_25	IF_2	CALL_3
0x400144d	            0x7507	                           jne 0x4001456	       883	prdbg.c	FUNCTION_25	IF_2	CALL_3
0x400144f	      0xb800000000	                              mov eax, 0	       884	prdbg.c	FUNCTION_25	IF_2
0x4001454	            0xeb27	                           jmp 0x400147d	       884	prdbg.c	FUNCTION_25	IF_2
0x4001456	        0x837de400	               cmp dword [rbp - 0x1c], 0	       886	prdbg.c	FUNCTION_25	IF_3
0x400145a	            0x741c	                            je 0x4001478	       886	prdbg.c	FUNCTION_25	IF_3
0x400145c	        0x488b45f8	                mov rax, qword [rbp - 8]	       888	prdbg.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4001460	      0xbe00000000	                              mov esi, 0	       888	prdbg.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4001465	          0x4889c7	                            mov rdi, rax	       888	prdbg.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4001468	      0xe88beeffff	                    call sym.append_type	       888	prdbg.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x400146d	            0x85c0	                           test eax, eax	       888	prdbg.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x400146f	            0x7507	                           jne 0x4001478	       888	prdbg.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4001471	      0xb800000000	                              mov eax, 0	       889	prdbg.c	FUNCTION_25	IF_3	IF_4
0x4001476	            0xeb05	                           jmp 0x400147d	       889	prdbg.c	FUNCTION_25	IF_3	IF_4
0x4001478	      0xb801000000	                              mov eax, 1	       892	prdbg.c	FUNCTION_25
0x400147d	              0xc9	                                   leave	       893	prdbg.c	FUNCTION_25
0x400147e	              0xc3	                                     ret	       893	prdbg.c	FUNCTION_25
tg_class_static_method_variant	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,18:DO,0:ELSE,0:IF,8	147
0x4004365	              0x55	                                push rbp	      2375	prdbg.c	FUNCTION_69
0x4004366	          0x4889e5	                            mov rbp, rsp	      2375	prdbg.c	FUNCTION_69
0x4004369	        0x4883ec40	                           sub rsp, 0x40	      2375	prdbg.c	FUNCTION_69
0x400436d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2375	prdbg.c	FUNCTION_69
0x4004371	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2375	prdbg.c	FUNCTION_69
0x4004375	          0x8955cc	             mov dword [rbp - 0x34], edx	      2375	prdbg.c	FUNCTION_69
0x4004378	          0x894dc8	             mov dword [rbp - 0x38], ecx	      2375	prdbg.c	FUNCTION_69
0x400437b	        0x448945c4	             mov dword [rbp - 0x3c], r8d	      2375	prdbg.c	FUNCTION_69
0x400437f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2376	prdbg.c	FUNCTION_69
0x4004383	        0x488945e8	             mov qword [rbp - 0x18], rax	      2376	prdbg.c	FUNCTION_69
0x4004387	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2380	prdbg.c	FUNCTION_69	CALL_1
0x400438b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2380	prdbg.c	FUNCTION_69	CALL_1
0x400438f	          0x4885c0	                           test rax, rax	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4004392	            0x7519	                           jne 0x40043ad	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4004394	      0xb900000000	                              mov ecx, 0	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4004399	      0xba4c090000	                          mov edx, 0x94c	      2380	prdbg.c	FUNCTION_69	CALL_1
0x400439e	      0xbe00000000	                              mov esi, 0	      2380	prdbg.c	FUNCTION_69	CALL_1
0x40043a3	      0xbf00000000	                              mov edi, 0	      2380	prdbg.c	FUNCTION_69	CALL_1
0x40043a8	      0xe800000000	                          call 0x40043ad	      2380	prdbg.c	FUNCTION_69	CALL_1
0x40043ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2381	prdbg.c	FUNCTION_69	CALL_2
0x40043b1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2381	prdbg.c	FUNCTION_69	CALL_2
0x40043b5	          0x488b00	                    mov rax, qword [rax]	      2381	prdbg.c	FUNCTION_69	CALL_2
0x40043b8	          0x4885c0	                           test rax, rax	      2381	prdbg.c	FUNCTION_69	CALL_2
0x40043bb	            0x7519	                           jne 0x40043d6	      2381	prdbg.c	FUNCTION_69	CALL_2
0x40043bd	      0xb900000000	                              mov ecx, 0	      2381	prdbg.c	FUNCTION_69	CALL_2
0x40043c2	      0xba4d090000	                          mov edx, 0x94d	      2381	prdbg.c	FUNCTION_69	CALL_2
0x40043c7	      0xbe00000000	                              mov esi, 0	      2381	prdbg.c	FUNCTION_69	CALL_2
0x40043cc	      0xbf00000000	                              mov edi, 0	      2381	prdbg.c	FUNCTION_69	CALL_2
0x40043d1	      0xe800000000	                          call 0x40043d6	      2381	prdbg.c	FUNCTION_69	CALL_2
0x40043d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2382	prdbg.c	FUNCTION_69	CALL_3
0x40043da	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2382	prdbg.c	FUNCTION_69	CALL_3
0x40043de	          0x488b00	                    mov rax, qword [rax]	      2382	prdbg.c	FUNCTION_69	CALL_3
0x40043e1	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2382	prdbg.c	FUNCTION_69	CALL_3
0x40043e5	          0x4885c0	                           test rax, rax	      2382	prdbg.c	FUNCTION_69	CALL_3
0x40043e8	            0x7519	                           jne 0x4004403	      2382	prdbg.c	FUNCTION_69	CALL_3
0x40043ea	      0xb900000000	                              mov ecx, 0	      2382	prdbg.c	FUNCTION_69	CALL_3
0x40043ef	      0xba4e090000	                          mov edx, 0x94e	      2382	prdbg.c	FUNCTION_69	CALL_3
0x40043f4	      0xbe00000000	                              mov esi, 0	      2382	prdbg.c	FUNCTION_69	CALL_3
0x40043f9	      0xbf00000000	                              mov edi, 0	      2382	prdbg.c	FUNCTION_69	CALL_3
0x40043fe	      0xe800000000	                          call 0x4004403	      2382	prdbg.c	FUNCTION_69	CALL_3
0x4004403	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      2385	prdbg.c	FUNCTION_69	IF_1
0x4004407	            0x741f	                            je 0x4004428	      2385	prdbg.c	FUNCTION_69	IF_1
0x4004409	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x400440d	      0xbe00000000	                              mov esi, 0	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x4004412	          0x4889c7	                            mov rdi, rax	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x4004415	      0xe8debeffff	                    call sym.append_type	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x400441a	            0x85c0	                           test eax, eax	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x400441c	            0x750a	                           jne 0x4004428	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x400441e	      0xb800000000	                              mov eax, 0	      2388	prdbg.c	FUNCTION_69	IF_1	IF_2
0x4004423	      0xe967010000	                           jmp 0x400458f	      2388	prdbg.c	FUNCTION_69	IF_1	IF_2
0x4004428	        0x837dc800	               cmp dword [rbp - 0x38], 0	      2390	prdbg.c	FUNCTION_69	IF_3
0x400442c	            0x741f	                            je 0x400444d	      2390	prdbg.c	FUNCTION_69	IF_3
0x400442e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2392	prdbg.c	FUNCTION_69	IF_3	IF_4	CALL_5
0x4004432	      0xbe00000000	                              mov esi, 0	      2392	prdbg.c	FUNCTION_69	IF_3	IF_4	CALL_5
0x4004437	          0x4889c7	                            mov rdi, rax	      2392	prdbg.c	FUNCTION_69	IF_3	IF_4	CALL_5
0x400443a	      0xe8b9beffff	                    call sym.append_type	      2392	prdbg.c	FUNCTION_69	IF_3	IF_4	CALL_5
0x400443f	            0x85c0	                           test eax, eax	      2392	prdbg.c	FUNCTION_69	IF_3	IF_4	CALL_5
0x4004441	            0x750a	                           jne 0x400444d	      2392	prdbg.c	FUNCTION_69	IF_3	IF_4	CALL_5
0x4004443	      0xb800000000	                              mov eax, 0	      2393	prdbg.c	FUNCTION_69	IF_3	IF_4
0x4004448	      0xe942010000	                           jmp 0x400458f	      2393	prdbg.c	FUNCTION_69	IF_3	IF_4
0x400444d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2397	prdbg.c	FUNCTION_69	IF_5	CALL_6
0x4004451	      0xbe00000000	                              mov esi, 0	      2397	prdbg.c	FUNCTION_69	IF_5	CALL_6
0x4004456	          0x4889c7	                            mov rdi, rax	      2397	prdbg.c	FUNCTION_69	IF_5	CALL_6
0x4004459	      0xe8d7bdffff	                   call sym.prepend_type	      2397	prdbg.c	FUNCTION_69	IF_5	CALL_6
0x400445e	            0x85c0	                           test eax, eax	      2397	prdbg.c	FUNCTION_69	IF_5	CALL_6
0x4004460	            0x750a	                           jne 0x400446c	      2397	prdbg.c	FUNCTION_69	IF_5	CALL_6
0x4004462	      0xb800000000	                              mov eax, 0	      2398	prdbg.c	FUNCTION_69	IF_5
0x4004467	      0xe923010000	                           jmp 0x400458f	      2398	prdbg.c	FUNCTION_69	IF_5
0x400446c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2400	prdbg.c	FUNCTION_69	CALL_7
0x4004470	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2400	prdbg.c	FUNCTION_69	CALL_7
0x4004474	          0x488b00	                    mov rax, qword [rax]	      2400	prdbg.c	FUNCTION_69	CALL_7
0x4004477	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2400	prdbg.c	FUNCTION_69	CALL_7
0x400447b	          0x4889c7	                            mov rdi, rax	      2400	prdbg.c	FUNCTION_69	CALL_7
0x400447e	      0xe800000000	                          call 0x4004483	      2400	prdbg.c	FUNCTION_69	CALL_7
0x4004483	        0x488945f0	             mov qword [rbp - 0x10], rax	      2400	prdbg.c	FUNCTION_69	CALL_7
0x4004487	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x400448b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x400448f	          0x488b00	                    mov rax, qword [rax]	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x4004492	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x4004496	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x400449a	          0x4889d6	                            mov rsi, rdx	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x400449d	          0x4889c7	                            mov rdi, rax	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x40044a0	      0xe8ffbfffff	                call sym.substitute_type	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x40044a5	            0x85c0	                           test eax, eax	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x40044a7	            0x7516	                           jne 0x40044bf	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x40044a9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2404	prdbg.c	FUNCTION_69	IF_6	CALL_9
0x40044ad	          0x4889c7	                            mov rdi, rax	      2404	prdbg.c	FUNCTION_69	IF_6	CALL_9
0x40044b0	      0xe800000000	                          call 0x40044b5	      2404	prdbg.c	FUNCTION_69	IF_6	CALL_9
0x40044b5	      0xb800000000	                              mov eax, 0	      2405	prdbg.c	FUNCTION_69	IF_6
0x40044ba	      0xe9d0000000	                           jmp 0x400458f	      2405	prdbg.c	FUNCTION_69	IF_6
0x40044bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2409	prdbg.c	FUNCTION_69	CALL_10
0x40044c3	          0x4889c7	                            mov rdi, rax	      2409	prdbg.c	FUNCTION_69	CALL_10
0x40044c6	      0xe82fc2ffff	                       call sym.pop_type	      2409	prdbg.c	FUNCTION_69	CALL_10
0x40044cb	        0x488945f8	                mov qword [rbp - 8], rax	      2409	prdbg.c	FUNCTION_69	CALL_10
0x40044cf	      0x48837df800	                  cmp qword [rbp - 8], 0	      2410	prdbg.c	FUNCTION_69	IF_7
0x40044d4	            0x7516	                           jne 0x40044ec	      2410	prdbg.c	FUNCTION_69	IF_7
0x40044d6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2412	prdbg.c	FUNCTION_69	IF_7	CALL_11
0x40044da	          0x4889c7	                            mov rdi, rax	      2412	prdbg.c	FUNCTION_69	IF_7	CALL_11
0x40044dd	      0xe800000000	                          call 0x40044e2	      2412	prdbg.c	FUNCTION_69	IF_7	CALL_11
0x40044e2	      0xb800000000	                              mov eax, 0	      2413	prdbg.c	FUNCTION_69	IF_7
0x40044e7	      0xe9a3000000	                           jmp 0x400458f	      2413	prdbg.c	FUNCTION_69	IF_7
0x40044ec	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x40044ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x40044f3	            0x89d6	                            mov esi, edx	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x40044f5	          0x4889c7	                            mov rdi, rax	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x40044f8	      0xe848f5ffff	              call sym.tg_fix_visibility	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x40044fd	            0x85c0	                           test eax, eax	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x40044ff	            0x751f	                           jne 0x4004520	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x4004501	        0x488b45f8	                mov rax, qword [rbp - 8]	      2419	prdbg.c	FUNCTION_69	IF_8	CALL_13
0x4004505	          0x4889c7	                            mov rdi, rax	      2419	prdbg.c	FUNCTION_69	IF_8	CALL_13
0x4004508	      0xe800000000	                          call 0x400450d	      2419	prdbg.c	FUNCTION_69	IF_8	CALL_13
0x400450d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2420	prdbg.c	FUNCTION_69	IF_8	CALL_14
0x4004511	          0x4889c7	                            mov rdi, rax	      2420	prdbg.c	FUNCTION_69	IF_8	CALL_14
0x4004514	      0xe800000000	                          call 0x4004519	      2420	prdbg.c	FUNCTION_69	IF_8	CALL_14
0x4004519	      0xb800000000	                              mov eax, 0	      2421	prdbg.c	FUNCTION_69	IF_8
0x400451e	            0xeb6f	                           jmp 0x400458f	      2421	prdbg.c	FUNCTION_69	IF_8
0x4004520	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2424	prdbg.c	FUNCTION_69	CALL_15
0x4004523	            0x89c7	                            mov edi, eax	      2424	prdbg.c	FUNCTION_69	CALL_15
0x4004525	      0xe84e0b0000	                call sym.visibility_name	      2424	prdbg.c	FUNCTION_69	CALL_15
0x400452a	          0x4989c0	                             mov r8, rax	      2424	prdbg.c	FUNCTION_69	CALL_15
0x400452d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2425	prdbg.c	FUNCTION_69
0x4004531	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2425	prdbg.c	FUNCTION_69
0x4004535	        0x488b7808	                mov rdi, qword [rax + 8]	      2424	prdbg.c	FUNCTION_69	CALL_15
0x4004539	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2424	prdbg.c	FUNCTION_69	CALL_15
0x400453d	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      2424	prdbg.c	FUNCTION_69	CALL_15
0x4004541	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2424	prdbg.c	FUNCTION_69	CALL_15
0x4004545	          0x488b00	                    mov rax, qword [rax]	      2424	prdbg.c	FUNCTION_69	CALL_15
0x4004548	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2424	prdbg.c	FUNCTION_69	CALL_15
0x400454c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2424	prdbg.c	FUNCTION_69	CALL_15
0x4004550	        0x4883ec08	                              sub rsp, 8	      2424	prdbg.c	FUNCTION_69	CALL_15
0x4004554	            0x4150	                                 push r8	      2424	prdbg.c	FUNCTION_69	CALL_15
0x4004556	          0x4989f9	                             mov r9, rdi	      2424	prdbg.c	FUNCTION_69	CALL_15
0x4004559	          0x4989f0	                             mov r8, rsi	      2424	prdbg.c	FUNCTION_69	CALL_15
0x400455c	      0xbe00000000	                              mov esi, 0	      2424	prdbg.c	FUNCTION_69	CALL_15
0x4004561	          0x4889c7	                            mov rdi, rax	      2424	prdbg.c	FUNCTION_69	CALL_15
0x4004564	      0xb800000000	                              mov eax, 0	      2424	prdbg.c	FUNCTION_69	CALL_15
0x4004569	      0xe800000000	                          call 0x400456e	      2424	prdbg.c	FUNCTION_69	CALL_15
0x400456e	        0x4883c410	                           add rsp, 0x10	      2424	prdbg.c	FUNCTION_69	CALL_15
0x4004572	        0x488b45f8	                mov rax, qword [rbp - 8]	      2427	prdbg.c	FUNCTION_69	CALL_17
0x4004576	          0x4889c7	                            mov rdi, rax	      2427	prdbg.c	FUNCTION_69	CALL_17
0x4004579	      0xe800000000	                          call 0x400457e	      2427	prdbg.c	FUNCTION_69	CALL_17
0x400457e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2428	prdbg.c	FUNCTION_69	CALL_18
0x4004582	          0x4889c7	                            mov rdi, rax	      2428	prdbg.c	FUNCTION_69	CALL_18
0x4004585	      0xe800000000	                          call 0x400458a	      2428	prdbg.c	FUNCTION_69	CALL_18
0x400458a	      0xb801000000	                              mov eax, 1	      2430	prdbg.c	FUNCTION_69
0x400458f	              0xc9	                                   leave	      2431	prdbg.c	FUNCTION_69
0x4004590	              0xc3	                                     ret	      2431	prdbg.c	FUNCTION_69
pr_start_struct_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,13:DO,0:ELSE,1:IF,13	139
0x4001987	              0x55	                                push rbp	      1043	prdbg.c	FUNCTION_30
0x4001988	          0x4889e5	                            mov rbp, rsp	      1043	prdbg.c	FUNCTION_30
0x400198b	        0x4883ec60	                           sub rsp, 0x60	      1043	prdbg.c	FUNCTION_30
0x400198f	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1043	prdbg.c	FUNCTION_30
0x4001993	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1043	prdbg.c	FUNCTION_30
0x4001997	          0x8955ac	             mov dword [rbp - 0x54], edx	      1043	prdbg.c	FUNCTION_30
0x400199a	          0x894da8	             mov dword [rbp - 0x58], ecx	      1043	prdbg.c	FUNCTION_30
0x400199d	        0x448945a4	             mov dword [rbp - 0x5c], r8d	      1043	prdbg.c	FUNCTION_30
0x40019a1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1043	prdbg.c	FUNCTION_30
0x40019aa	        0x488945f8	                mov qword [rbp - 8], rax	      1043	prdbg.c	FUNCTION_30
0x40019ae	            0x31c0	                            xor eax, eax	      1043	prdbg.c	FUNCTION_30
0x40019b0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1044	prdbg.c	FUNCTION_30
0x40019b4	        0x488945c8	             mov qword [rbp - 0x38], rax	      1044	prdbg.c	FUNCTION_30
0x40019b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1046	prdbg.c	FUNCTION_30
0x40019bc	          0x8b4008	                mov eax, dword [rax + 8]	      1046	prdbg.c	FUNCTION_30
0x40019bf	          0x8d5002	                      lea edx, [rax + 2]	      1046	prdbg.c	FUNCTION_30
0x40019c2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1046	prdbg.c	FUNCTION_30
0x40019c6	          0x895008	                mov dword [rax + 8], edx	      1046	prdbg.c	FUNCTION_30
0x40019c9	        0x837da800	               cmp dword [rbp - 0x58], 0	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40019cd	            0x7407	                            je 0x40019d6	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40019cf	      0xba00000000	                              mov edx, 0	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40019d4	            0xeb05	                           jmp 0x40019db	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40019d6	      0xba00000000	                              mov edx, 0	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40019db	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40019df	          0x4889d6	                            mov rsi, rdx	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40019e2	          0x4889c7	                            mov rdi, rax	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40019e5	      0xe8b9e7ffff	                      call sym.push_type	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40019ea	            0x85c0	                           test eax, eax	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40019ec	            0x750a	                           jne 0x40019f8	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40019ee	      0xb800000000	                              mov eax, 0	      1049	prdbg.c	FUNCTION_30	IF_1
0x40019f3	      0xe982010000	                           jmp 0x4001b7a	      1049	prdbg.c	FUNCTION_30	IF_1
0x40019f8	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1050	prdbg.c	FUNCTION_30	IF_2
0x40019fd	            0x7421	                            je 0x4001a20	      1050	prdbg.c	FUNCTION_30	IF_2
0x40019ff	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x4001a03	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x4001a07	          0x4889d6	                            mov rsi, rdx	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x4001a0a	          0x4889c7	                            mov rdi, rax	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x4001a0d	      0xe8e6e8ffff	                    call sym.append_type	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x4001a12	            0x85c0	                           test eax, eax	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x4001a14	            0x7544	                           jne 0x4001a5a	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x4001a16	      0xb800000000	                              mov eax, 0	      1053	prdbg.c	FUNCTION_30	IF_2	IF_3
0x4001a1b	      0xe95a010000	                           jmp 0x4001b7a	      1053	prdbg.c	FUNCTION_30	IF_2	IF_3
0x4001a20	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1059	prdbg.c	FUNCTION_30	ELSE_1	CALL_3
0x4001a23	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1059	prdbg.c	FUNCTION_30	ELSE_1	CALL_3
0x4001a27	      0xbe00000000	                              mov esi, 0	      1059	prdbg.c	FUNCTION_30	ELSE_1	CALL_3
0x4001a2c	          0x4889c7	                            mov rdi, rax	      1059	prdbg.c	FUNCTION_30	ELSE_1	CALL_3
0x4001a2f	      0xb800000000	                              mov eax, 0	      1059	prdbg.c	FUNCTION_30	ELSE_1	CALL_3
0x4001a34	      0xe800000000	                          call 0x4001a39	      1059	prdbg.c	FUNCTION_30	ELSE_1	CALL_3
0x4001a39	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1060	prdbg.c	FUNCTION_30	ELSE_1	IF_4	CALL_4
0x4001a3d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1060	prdbg.c	FUNCTION_30	ELSE_1	IF_4	CALL_4
0x4001a41	          0x4889d6	                            mov rsi, rdx	      1060	prdbg.c	FUNCTION_30	ELSE_1	IF_4	CALL_4
0x4001a44	          0x4889c7	                            mov rdi, rax	      1060	prdbg.c	FUNCTION_30	ELSE_1	IF_4	CALL_4
0x4001a47	      0xe8ace8ffff	                    call sym.append_type	      1060	prdbg.c	FUNCTION_30	ELSE_1	IF_4	CALL_4
0x4001a4c	            0x85c0	                           test eax, eax	      1060	prdbg.c	FUNCTION_30	ELSE_1	IF_4	CALL_4
0x4001a4e	            0x750a	                           jne 0x4001a5a	      1060	prdbg.c	FUNCTION_30	ELSE_1	IF_4	CALL_4
0x4001a50	      0xb800000000	                              mov eax, 0	      1061	prdbg.c	FUNCTION_30	ELSE_1	IF_4
0x4001a55	      0xe920010000	                           jmp 0x4001b7a	      1061	prdbg.c	FUNCTION_30	ELSE_1	IF_4
0x4001a5a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_5
0x4001a5e	      0xbe00000000	                              mov esi, 0	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_5
0x4001a63	          0x4889c7	                            mov rdi, rax	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_5
0x4001a66	      0xe88de8ffff	                    call sym.append_type	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_5
0x4001a6b	            0x85c0	                           test eax, eax	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_5
0x4001a6d	            0x750a	                           jne 0x4001a79	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_5
0x4001a6f	      0xb800000000	                              mov eax, 0	      1065	prdbg.c	FUNCTION_30	IF_5
0x4001a74	      0xe901010000	                           jmp 0x4001b7a	      1065	prdbg.c	FUNCTION_30	IF_5
0x4001a79	        0x837da400	               cmp dword [rbp - 0x5c], 0	      1066	prdbg.c	FUNCTION_30	IF_6
0x4001a7d	            0x750b	                           jne 0x4001a8a	      1066	prdbg.c	FUNCTION_30	IF_6
0x4001a7f	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1066	prdbg.c	FUNCTION_30	IF_6
0x4001a84	     0xf84b9000000	                            je 0x4001b43	      1066	prdbg.c	FUNCTION_30	IF_6
0x4001a8a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_6
0x4001a8e	      0xbe00000000	                              mov esi, 0	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_6
0x4001a93	          0x4889c7	                            mov rdi, rax	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_6
0x4001a96	      0xe85de8ffff	                    call sym.append_type	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_6
0x4001a9b	            0x85c0	                           test eax, eax	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_6
0x4001a9d	            0x750a	                           jne 0x4001aa9	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_6
0x4001a9f	      0xb800000000	                              mov eax, 0	      1071	prdbg.c	FUNCTION_30	IF_6	IF_7
0x4001aa4	      0xe9d1000000	                           jmp 0x4001b7a	      1071	prdbg.c	FUNCTION_30	IF_6	IF_7
0x4001aa9	        0x837da400	               cmp dword [rbp - 0x5c], 0	      1073	prdbg.c	FUNCTION_30	IF_6	IF_8
0x4001aad	            0x743a	                            je 0x4001ae9	      1073	prdbg.c	FUNCTION_30	IF_6	IF_8
0x4001aaf	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	      1075	prdbg.c	FUNCTION_30	IF_6	IF_8	CALL_7
0x4001ab2	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1075	prdbg.c	FUNCTION_30	IF_6	IF_8	CALL_7
0x4001ab6	      0xbe00000000	                              mov esi, 0	      1075	prdbg.c	FUNCTION_30	IF_6	IF_8	CALL_7
0x4001abb	          0x4889c7	                            mov rdi, rax	      1075	prdbg.c	FUNCTION_30	IF_6	IF_8	CALL_7
0x4001abe	      0xb800000000	                              mov eax, 0	      1075	prdbg.c	FUNCTION_30	IF_6	IF_8	CALL_7
0x4001ac3	      0xe800000000	                          call 0x4001ac8	      1075	prdbg.c	FUNCTION_30	IF_6	IF_8	CALL_7
0x4001ac8	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_8
0x4001acc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_8
0x4001ad0	          0x4889d6	                            mov rsi, rdx	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_8
0x4001ad3	          0x4889c7	                            mov rdi, rax	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_8
0x4001ad6	      0xe81de8ffff	                    call sym.append_type	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_8
0x4001adb	            0x85c0	                           test eax, eax	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_8
0x4001add	            0x750a	                           jne 0x4001ae9	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_8
0x4001adf	      0xb800000000	                              mov eax, 0	      1077	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9
0x4001ae4	      0xe991000000	                           jmp 0x4001b7a	      1077	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9
0x4001ae9	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1079	prdbg.c	FUNCTION_30	IF_6	IF_10
0x4001aee	            0x7437	                            je 0x4001b27	      1079	prdbg.c	FUNCTION_30	IF_6	IF_10
0x4001af0	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1081	prdbg.c	FUNCTION_30	IF_6	IF_10	CALL_9
0x4001af3	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1081	prdbg.c	FUNCTION_30	IF_6	IF_10	CALL_9
0x4001af7	      0xbe00000000	                              mov esi, 0	      1081	prdbg.c	FUNCTION_30	IF_6	IF_10	CALL_9
0x4001afc	          0x4889c7	                            mov rdi, rax	      1081	prdbg.c	FUNCTION_30	IF_6	IF_10	CALL_9
0x4001aff	      0xb800000000	                              mov eax, 0	      1081	prdbg.c	FUNCTION_30	IF_6	IF_10	CALL_9
0x4001b04	      0xe800000000	                          call 0x4001b09	      1081	prdbg.c	FUNCTION_30	IF_6	IF_10	CALL_9
0x4001b09	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1082	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11	CALL_10
0x4001b0d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1082	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11	CALL_10
0x4001b11	          0x4889d6	                            mov rsi, rdx	      1082	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11	CALL_10
0x4001b14	          0x4889c7	                            mov rdi, rax	      1082	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11	CALL_10
0x4001b17	      0xe8dce7ffff	                    call sym.append_type	      1082	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11	CALL_10
0x4001b1c	            0x85c0	                           test eax, eax	      1082	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11	CALL_10
0x4001b1e	            0x7507	                           jne 0x4001b27	      1082	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11	CALL_10
0x4001b20	      0xb800000000	                              mov eax, 0	      1083	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11
0x4001b25	            0xeb53	                           jmp 0x4001b7a	      1083	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11
0x4001b27	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_11
0x4001b2b	      0xbe00000000	                              mov esi, 0	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_11
0x4001b30	          0x4889c7	                            mov rdi, rax	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_11
0x4001b33	      0xe8c0e7ffff	                    call sym.append_type	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_11
0x4001b38	            0x85c0	                           test eax, eax	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_11
0x4001b3a	            0x7507	                           jne 0x4001b43	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_11
0x4001b3c	      0xb800000000	                              mov eax, 0	      1086	prdbg.c	FUNCTION_30	IF_6	IF_12
0x4001b41	            0xeb37	                           jmp 0x4001b7a	      1086	prdbg.c	FUNCTION_30	IF_6	IF_12
0x4001b43	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1088	prdbg.c	FUNCTION_30	IF_13	CALL_12
0x4001b47	      0xbe00000000	                              mov esi, 0	      1088	prdbg.c	FUNCTION_30	IF_13	CALL_12
0x4001b4c	          0x4889c7	                            mov rdi, rax	      1088	prdbg.c	FUNCTION_30	IF_13	CALL_12
0x4001b4f	      0xe8a4e7ffff	                    call sym.append_type	      1088	prdbg.c	FUNCTION_30	IF_13	CALL_12
0x4001b54	            0x85c0	                           test eax, eax	      1088	prdbg.c	FUNCTION_30	IF_13	CALL_12
0x4001b56	            0x7507	                           jne 0x4001b5f	      1088	prdbg.c	FUNCTION_30	IF_13	CALL_12
0x4001b58	      0xb800000000	                              mov eax, 0	      1089	prdbg.c	FUNCTION_30	IF_13
0x4001b5d	            0xeb1b	                           jmp 0x4001b7a	      1089	prdbg.c	FUNCTION_30	IF_13
0x4001b5f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1091	prdbg.c	FUNCTION_30
0x4001b63	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1091	prdbg.c	FUNCTION_30
0x4001b67	    0xc74010000000	               mov dword [rax + 0x10], 0	      1091	prdbg.c	FUNCTION_30
0x4001b6e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1093	prdbg.c	FUNCTION_30	CALL_13
0x4001b72	          0x4889c7	                            mov rdi, rax	      1093	prdbg.c	FUNCTION_30	CALL_13
0x4001b75	      0xe838ebffff	                    call sym.indent_type	      1093	prdbg.c	FUNCTION_30	CALL_13
0x4001b7a	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1094	prdbg.c	FUNCTION_30
0x4001b7e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1094	prdbg.c	FUNCTION_30
0x4001b87	            0x7405	                            je 0x4001b8e	      1094	prdbg.c	FUNCTION_30
0x4001b89	      0xe800000000	                          call 0x4001b8e	      1094	prdbg.c	FUNCTION_30
0x4001b8e	              0xc9	                                   leave	      1094	prdbg.c	FUNCTION_30
0x4001b8f	              0xc3	                                     ret	      1094	prdbg.c	FUNCTION_30
substitute_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,16:DO,0:ELSE,0:IF,4	144
0x40004a4	              0x55	                                push rbp	       416	prdbg.c	FUNCTION_7
0x40004a5	          0x4889e5	                            mov rbp, rsp	       416	prdbg.c	FUNCTION_7
0x40004a8	              0x53	                                push rbx	       416	prdbg.c	FUNCTION_7
0x40004a9	        0x4883ec28	                           sub rsp, 0x28	       416	prdbg.c	FUNCTION_7
0x40004ad	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       416	prdbg.c	FUNCTION_7
0x40004b1	        0x488975d0	             mov qword [rbp - 0x30], rsi	       416	prdbg.c	FUNCTION_7
0x40004b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       419	prdbg.c	FUNCTION_7	CALL_1
0x40004b9	        0x488b4010	            mov rax, qword [rax + 0x10] 	       419	prdbg.c	FUNCTION_7	CALL_1
0x40004bd	          0x4885c0	                           test rax, rax	       419	prdbg.c	FUNCTION_7	CALL_1
0x40004c0	            0x7519	                           jne 0x40004db	       419	prdbg.c	FUNCTION_7	CALL_1
0x40004c2	      0xb900000000	                              mov ecx, 0	       419	prdbg.c	FUNCTION_7	CALL_1
0x40004c7	      0xbaa3010000	                          mov edx, 0x1a3	       419	prdbg.c	FUNCTION_7	CALL_1
0x40004cc	      0xbe00000000	                              mov esi, 0	       419	prdbg.c	FUNCTION_7	CALL_1
0x40004d1	      0xbf00000000	                              mov edi, 0	       419	prdbg.c	FUNCTION_7	CALL_1
0x40004d6	      0xe800000000	                          call 0x40004db	       419	prdbg.c	FUNCTION_7	CALL_1
0x40004db	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       421	prdbg.c	FUNCTION_7	CALL_2
0x40004df	        0x488b4010	            mov rax, qword [rax + 0x10] 	       421	prdbg.c	FUNCTION_7	CALL_2
0x40004e3	        0x488b4008	                mov rax, qword [rax + 8]	       421	prdbg.c	FUNCTION_7	CALL_2
0x40004e7	      0xbe7c000000	                           mov esi, 0x7c	       421	prdbg.c	FUNCTION_7	CALL_2
0x40004ec	          0x4889c7	                            mov rdi, rax	       421	prdbg.c	FUNCTION_7	CALL_2
0x40004ef	      0xe800000000	                          call 0x40004f4	       421	prdbg.c	FUNCTION_7	CALL_2
0x40004f4	        0x488945e0	             mov qword [rbp - 0x20], rax	       421	prdbg.c	FUNCTION_7	CALL_2
0x40004f8	      0x48837de000	               cmp qword [rbp - 0x20], 0	       422	prdbg.c	FUNCTION_7	IF_1
0x40004fd	     0xf84da000000	                            je 0x40005dd	       422	prdbg.c	FUNCTION_7	IF_1
0x4000503	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000507	        0x488b4010	            mov rax, qword [rax + 0x10] 	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x400050b	        0x488b4008	                mov rax, qword [rax + 8]	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x400050f	          0x4889c7	                            mov rdi, rax	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000512	      0xe800000000	                          call 0x4000517	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000517	          0x4889c3	                            mov rbx, rax	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x400051a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x400051e	          0x4889c7	                            mov rdi, rax	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000521	      0xe800000000	                          call 0x4000526	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000526	          0x4801d8	                            add rax, rbx	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000529	          0x4889c7	                            mov rdi, rax	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x400052c	      0xe800000000	                          call 0x4000531	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000531	        0x488945e8	             mov qword [rbp - 0x18], rax	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000535	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x4000539	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x400053d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x4000541	        0x488b4008	                mov rax, qword [rax + 8]	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x4000545	          0x4829c2	                            sub rdx, rax	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x4000548	          0x4889d0	                            mov rax, rdx	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x400054b	          0x4889c2	                            mov rdx, rax	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x400054e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x4000552	        0x488b4010	            mov rax, qword [rax + 0x10] 	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x4000556	        0x488b4808	                mov rcx, qword [rax + 8]	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x400055a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x400055e	          0x4889ce	                            mov rsi, rcx	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x4000561	          0x4889c7	                            mov rdi, rax	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x4000564	      0xe800000000	                          call 0x4000569	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x4000569	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       429	prdbg.c	FUNCTION_7	IF_1	CALL_7
0x400056d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       429	prdbg.c	FUNCTION_7	IF_1	CALL_7
0x4000571	        0x488b4010	            mov rax, qword [rax + 0x10] 	       429	prdbg.c	FUNCTION_7	IF_1	CALL_7
0x4000575	        0x488b4008	                mov rax, qword [rax + 8]	       429	prdbg.c	FUNCTION_7	IF_1	CALL_7
0x4000579	          0x4829c2	                            sub rdx, rax	       429	prdbg.c	FUNCTION_7	IF_1	CALL_7
0x400057c	          0x4889d0	                            mov rax, rdx	       429	prdbg.c	FUNCTION_7	IF_1	CALL_7
0x400057f	          0x4889c2	                            mov rdx, rax	       429	prdbg.c	FUNCTION_7	IF_1	CALL_7
0x4000582	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       429	prdbg.c	FUNCTION_7	IF_1	CALL_7
0x4000586	          0x4801c2	                            add rdx, rax	       429	prdbg.c	FUNCTION_7	IF_1	CALL_7
0x4000589	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       429	prdbg.c	FUNCTION_7	IF_1	CALL_7
0x400058d	          0x4889c6	                            mov rsi, rax	       429	prdbg.c	FUNCTION_7	IF_1	CALL_7
0x4000590	          0x4889d7	                            mov rdi, rdx	       429	prdbg.c	FUNCTION_7	IF_1	CALL_7
0x4000593	      0xe800000000	                          call 0x4000598	       429	prdbg.c	FUNCTION_7	IF_1	CALL_7
0x4000598	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       430	prdbg.c	FUNCTION_7	IF_1	CALL_8
0x400059c	        0x488d5001	                      lea rdx, [rax + 1]	       430	prdbg.c	FUNCTION_7	IF_1	CALL_8
0x40005a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       430	prdbg.c	FUNCTION_7	IF_1	CALL_8
0x40005a4	          0x4889d6	                            mov rsi, rdx	       430	prdbg.c	FUNCTION_7	IF_1	CALL_8
0x40005a7	          0x4889c7	                            mov rdi, rax	       430	prdbg.c	FUNCTION_7	IF_1	CALL_8
0x40005aa	      0xe800000000	                          call 0x40005af	       430	prdbg.c	FUNCTION_7	IF_1	CALL_8
0x40005af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       432	prdbg.c	FUNCTION_7	IF_1	CALL_9
0x40005b3	        0x488b4010	            mov rax, qword [rax + 0x10] 	       432	prdbg.c	FUNCTION_7	IF_1	CALL_9
0x40005b7	        0x488b4008	                mov rax, qword [rax + 8]	       432	prdbg.c	FUNCTION_7	IF_1	CALL_9
0x40005bb	          0x4889c7	                            mov rdi, rax	       432	prdbg.c	FUNCTION_7	IF_1	CALL_9
0x40005be	      0xe800000000	                          call 0x40005c3	       432	prdbg.c	FUNCTION_7	IF_1	CALL_9
0x40005c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       433	prdbg.c	FUNCTION_7	IF_1
0x40005c7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       433	prdbg.c	FUNCTION_7	IF_1
0x40005cb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       433	prdbg.c	FUNCTION_7	IF_1
0x40005cf	        0x48895008	                mov qword [rax + 8], rdx	       433	prdbg.c	FUNCTION_7	IF_1
0x40005d3	      0xb801000000	                              mov eax, 1	       435	prdbg.c	FUNCTION_7	IF_1
0x40005d8	      0xe9ce000000	                           jmp 0x40006ab	       435	prdbg.c	FUNCTION_7	IF_1
0x40005dd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       438	prdbg.c	FUNCTION_7	IF_2	CALL_10
0x40005e1	      0xbe7c000000	                           mov esi, 0x7c	       438	prdbg.c	FUNCTION_7	IF_2	CALL_10
0x40005e6	          0x4889c7	                            mov rdi, rax	       438	prdbg.c	FUNCTION_7	IF_2	CALL_10
0x40005e9	      0xe800000000	                          call 0x40005ee	       438	prdbg.c	FUNCTION_7	IF_2	CALL_10
0x40005ee	          0x4885c0	                           test rax, rax	       438	prdbg.c	FUNCTION_7	IF_2	CALL_10
0x40005f1	            0x746d	                            je 0x4000660	       438	prdbg.c	FUNCTION_7	IF_2	CALL_10
0x40005f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x40005f7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x40005fb	        0x488b4008	                mov rax, qword [rax + 8]	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x40005ff	      0xbe7b000000	                           mov esi, 0x7b	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x4000604	          0x4889c7	                            mov rdi, rax	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x4000607	      0xe800000000	                          call 0x400060c	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x400060c	          0x4885c0	                           test rax, rax	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x400060f	            0x751e	                           jne 0x400062f	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x4000611	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x4000615	        0x488b4010	            mov rax, qword [rax + 0x10] 	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x4000619	        0x488b4008	                mov rax, qword [rax + 8]	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x400061d	      0xbe28000000	                           mov esi, 0x28	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x4000622	          0x4889c7	                            mov rdi, rax	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x4000625	      0xe800000000	                          call 0x400062a	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x400062a	          0x4885c0	                           test rax, rax	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x400062d	            0x7431	                            je 0x4000660	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x400062f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       442	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_13
0x4000633	      0xbe00000000	                              mov esi, 0	       442	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_13
0x4000638	          0x4889c7	                            mov rdi, rax	       442	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_13
0x400063b	      0xe8f5fbffff	                   call sym.prepend_type	       442	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_13
0x4000640	            0x85c0	                           test eax, eax	       442	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_13
0x4000642	            0x7415	                            je 0x4000659	       442	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_13
0x4000644	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       443	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_14
0x4000648	      0xbe00000000	                              mov esi, 0	       443	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_14
0x400064d	          0x4889c7	                            mov rdi, rax	       443	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_14
0x4000650	      0xe8a3fcffff	                    call sym.append_type	       443	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_14
0x4000655	            0x85c0	                           test eax, eax	       443	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_14
0x4000657	            0x7507	                           jne 0x4000660	       443	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_14
0x4000659	      0xb800000000	                              mov eax, 0	       444	prdbg.c	FUNCTION_7	IF_2	IF_3
0x400065e	            0xeb4b	                           jmp 0x40006ab	       444	prdbg.c	FUNCTION_7	IF_2	IF_3
0x4000660	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       447	prdbg.c	FUNCTION_7	IF_4
0x4000664	           0xfb600	                   movzx eax, byte [rax]	       447	prdbg.c	FUNCTION_7	IF_4
0x4000667	            0x84c0	                             test al, al	       447	prdbg.c	FUNCTION_7	IF_4
0x4000669	            0x7507	                           jne 0x4000672	       447	prdbg.c	FUNCTION_7	IF_4
0x400066b	      0xb801000000	                              mov eax, 1	       448	prdbg.c	FUNCTION_7	IF_4
0x4000670	            0xeb39	                           jmp 0x40006ab	       448	prdbg.c	FUNCTION_7	IF_4
0x4000672	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       450	prdbg.c	FUNCTION_7	CALL_15
0x4000676	      0xbe00000000	                              mov esi, 0	       450	prdbg.c	FUNCTION_7	CALL_15
0x400067b	          0x4889c7	                            mov rdi, rax	       450	prdbg.c	FUNCTION_7	CALL_15
0x400067e	      0xe875fcffff	                    call sym.append_type	       450	prdbg.c	FUNCTION_7	CALL_15
0x4000683	            0x85c0	                           test eax, eax	       451	prdbg.c	FUNCTION_7	CALL_16
0x4000685	            0x741e	                            je 0x40006a5	       451	prdbg.c	FUNCTION_7	CALL_16
0x4000687	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       451	prdbg.c	FUNCTION_7	CALL_16
0x400068b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       451	prdbg.c	FUNCTION_7	CALL_16
0x400068f	          0x4889d6	                            mov rsi, rdx	       451	prdbg.c	FUNCTION_7	CALL_16
0x4000692	          0x4889c7	                            mov rdi, rax	       451	prdbg.c	FUNCTION_7	CALL_16
0x4000695	      0xe85efcffff	                    call sym.append_type	       451	prdbg.c	FUNCTION_7	CALL_16
0x400069a	            0x85c0	                           test eax, eax	       451	prdbg.c	FUNCTION_7	CALL_16
0x400069c	            0x7407	                            je 0x40006a5	       451	prdbg.c	FUNCTION_7	CALL_16
0x400069e	      0xb801000000	                              mov eax, 1	       451	prdbg.c	FUNCTION_7	CALL_16
0x40006a3	            0xeb05	                           jmp 0x40006aa	       450	prdbg.c	FUNCTION_7	CALL_15
0x40006a5	      0xb800000000	                              mov eax, 0	       451	prdbg.c	FUNCTION_7	CALL_16
0x40006aa	              0x90	                                     nop	       450	prdbg.c	FUNCTION_7	CALL_15
0x40006ab	        0x4883c428	                           add rsp, 0x28	       452	prdbg.c	FUNCTION_7
0x40006af	              0x5b	                                 pop rbx	       452	prdbg.c	FUNCTION_7
0x40006b0	              0x5d	                                 pop rbp	       452	prdbg.c	FUNCTION_7
0x40006b1	              0xc3	                                     ret	       452	prdbg.c	FUNCTION_7
pr_pointer_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,4:DO,0:ELSE,0:IF,1	40
0x4000ceb	              0x55	                                push rbp	       695	prdbg.c	FUNCTION_20
0x4000cec	          0x4889e5	                            mov rbp, rsp	       695	prdbg.c	FUNCTION_20
0x4000cef	        0x4883ec20	                           sub rsp, 0x20	       695	prdbg.c	FUNCTION_20
0x4000cf3	        0x48897de8	             mov qword [rbp - 0x18], rdi	       695	prdbg.c	FUNCTION_20
0x4000cf7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       696	prdbg.c	FUNCTION_20
0x4000cfb	        0x488945f0	             mov qword [rbp - 0x10], rax	       696	prdbg.c	FUNCTION_20
0x4000cff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000d03	        0x488b4010	            mov rax, qword [rax + 0x10] 	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000d07	          0x4885c0	                           test rax, rax	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000d0a	            0x7519	                           jne 0x4000d25	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000d0c	      0xb900000000	                              mov ecx, 0	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000d11	      0xbabb020000	                          mov edx, 0x2bb	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000d16	      0xbe00000000	                              mov esi, 0	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000d1b	      0xbf00000000	                              mov edi, 0	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000d20	      0xe800000000	                          call 0x4000d25	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000d25	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       701	prdbg.c	FUNCTION_20	CALL_2
0x4000d29	        0x488b4010	            mov rax, qword [rax + 0x10] 	       701	prdbg.c	FUNCTION_20	CALL_2
0x4000d2d	        0x488b4008	                mov rax, qword [rax + 8]	       701	prdbg.c	FUNCTION_20	CALL_2
0x4000d31	      0xbe7c000000	                           mov esi, 0x7c	       701	prdbg.c	FUNCTION_20	CALL_2
0x4000d36	          0x4889c7	                            mov rdi, rax	       701	prdbg.c	FUNCTION_20	CALL_2
0x4000d39	      0xe800000000	                          call 0x4000d3e	       701	prdbg.c	FUNCTION_20	CALL_2
0x4000d3e	        0x488945f8	                mov qword [rbp - 8], rax	       701	prdbg.c	FUNCTION_20	CALL_2
0x4000d42	      0x48837df800	                  cmp qword [rbp - 8], 0	       702	prdbg.c	FUNCTION_20	IF_1
0x4000d47	            0x7422	                            je 0x4000d6b	       702	prdbg.c	FUNCTION_20	IF_1
0x4000d49	        0x488b45f8	                mov rax, qword [rbp - 8]	       702	prdbg.c	FUNCTION_20	IF_1
0x4000d4d	        0x4883c001	                              add rax, 1	       702	prdbg.c	FUNCTION_20	IF_1
0x4000d51	           0xfb600	                   movzx eax, byte [rax]	       702	prdbg.c	FUNCTION_20	IF_1
0x4000d54	            0x3c5b	                            cmp al, 0x5b	       702	prdbg.c	FUNCTION_20	IF_1
0x4000d56	            0x7513	                           jne 0x4000d6b	       702	prdbg.c	FUNCTION_20	IF_1
0x4000d58	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       703	prdbg.c	FUNCTION_20	CALL_3
0x4000d5c	      0xbe00000000	                              mov esi, 0	       703	prdbg.c	FUNCTION_20	CALL_3
0x4000d61	          0x4889c7	                            mov rdi, rax	       703	prdbg.c	FUNCTION_20	CALL_3
0x4000d64	      0xe83bf7ffff	                call sym.substitute_type	       703	prdbg.c	FUNCTION_20	CALL_3
0x4000d69	            0xeb11	                           jmp 0x4000d7c	       703	prdbg.c	FUNCTION_20	CALL_3
0x4000d6b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       704	prdbg.c	FUNCTION_20	CALL_4
0x4000d6f	      0xbe00000000	                              mov esi, 0	       704	prdbg.c	FUNCTION_20	CALL_4
0x4000d74	          0x4889c7	                            mov rdi, rax	       704	prdbg.c	FUNCTION_20	CALL_4
0x4000d77	      0xe828f7ffff	                call sym.substitute_type	       704	prdbg.c	FUNCTION_20	CALL_4
0x4000d7c	              0xc9	                                   leave	       705	prdbg.c	FUNCTION_20
0x4000d7d	              0xc3	                                     ret	       705	prdbg.c	FUNCTION_20
tg_class_method_variant	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,20:DO,0:ELSE,1:IF,9	151
0x4004128	              0x55	                                push rbp	      2297	prdbg.c	FUNCTION_68
0x4004129	          0x4889e5	                            mov rbp, rsp	      2297	prdbg.c	FUNCTION_68
0x400412c	        0x4883ec50	                           sub rsp, 0x50	      2297	prdbg.c	FUNCTION_68
0x4004130	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2297	prdbg.c	FUNCTION_68
0x4004134	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2297	prdbg.c	FUNCTION_68
0x4004138	          0x8955cc	             mov dword [rbp - 0x34], edx	      2297	prdbg.c	FUNCTION_68
0x400413b	          0x894dc8	             mov dword [rbp - 0x38], ecx	      2297	prdbg.c	FUNCTION_68
0x400413e	        0x448945c4	             mov dword [rbp - 0x3c], r8d	      2297	prdbg.c	FUNCTION_68
0x4004142	        0x4c894db8	              mov qword [rbp - 0x48], r9	      2297	prdbg.c	FUNCTION_68
0x4004146	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2298	prdbg.c	FUNCTION_68
0x400414a	        0x488945e8	             mov qword [rbp - 0x18], rax	      2298	prdbg.c	FUNCTION_68
0x400414e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2303	prdbg.c	FUNCTION_68	CALL_1
0x4004152	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2303	prdbg.c	FUNCTION_68	CALL_1
0x4004156	          0x4885c0	                           test rax, rax	      2303	prdbg.c	FUNCTION_68	CALL_1
0x4004159	            0x7519	                           jne 0x4004174	      2303	prdbg.c	FUNCTION_68	CALL_1
0x400415b	      0xb900000000	                              mov ecx, 0	      2303	prdbg.c	FUNCTION_68	CALL_1
0x4004160	      0xbaff080000	                          mov edx, 0x8ff	      2303	prdbg.c	FUNCTION_68	CALL_1
0x4004165	      0xbe00000000	                              mov esi, 0	      2303	prdbg.c	FUNCTION_68	CALL_1
0x400416a	      0xbf00000000	                              mov edi, 0	      2303	prdbg.c	FUNCTION_68	CALL_1
0x400416f	      0xe800000000	                          call 0x4004174	      2303	prdbg.c	FUNCTION_68	CALL_1
0x4004174	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2304	prdbg.c	FUNCTION_68	CALL_2
0x4004178	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2304	prdbg.c	FUNCTION_68	CALL_2
0x400417c	          0x488b00	                    mov rax, qword [rax]	      2304	prdbg.c	FUNCTION_68	CALL_2
0x400417f	          0x4885c0	                           test rax, rax	      2304	prdbg.c	FUNCTION_68	CALL_2
0x4004182	            0x7519	                           jne 0x400419d	      2304	prdbg.c	FUNCTION_68	CALL_2
0x4004184	      0xb900000000	                              mov ecx, 0	      2304	prdbg.c	FUNCTION_68	CALL_2
0x4004189	      0xba00090000	                          mov edx, 0x900	      2304	prdbg.c	FUNCTION_68	CALL_2
0x400418e	      0xbe00000000	                              mov esi, 0	      2304	prdbg.c	FUNCTION_68	CALL_2
0x4004193	      0xbf00000000	                              mov edi, 0	      2304	prdbg.c	FUNCTION_68	CALL_2
0x4004198	      0xe800000000	                          call 0x400419d	      2304	prdbg.c	FUNCTION_68	CALL_2
0x400419d	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      2307	prdbg.c	FUNCTION_68	IF_1
0x40041a1	            0x741f	                            je 0x40041c2	      2307	prdbg.c	FUNCTION_68	IF_1
0x40041a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2309	prdbg.c	FUNCTION_68	IF_1	IF_2	CALL_3
0x40041a7	      0xbe00000000	                              mov esi, 0	      2309	prdbg.c	FUNCTION_68	IF_1	IF_2	CALL_3
0x40041ac	          0x4889c7	                            mov rdi, rax	      2309	prdbg.c	FUNCTION_68	IF_1	IF_2	CALL_3
0x40041af	      0xe844c1ffff	                    call sym.append_type	      2309	prdbg.c	FUNCTION_68	IF_1	IF_2	CALL_3
0x40041b4	            0x85c0	                           test eax, eax	      2309	prdbg.c	FUNCTION_68	IF_1	IF_2	CALL_3
0x40041b6	            0x750a	                           jne 0x40041c2	      2309	prdbg.c	FUNCTION_68	IF_1	IF_2	CALL_3
0x40041b8	      0xb800000000	                              mov eax, 0	      2310	prdbg.c	FUNCTION_68	IF_1	IF_2
0x40041bd	      0xe9a1010000	                           jmp 0x4004363	      2310	prdbg.c	FUNCTION_68	IF_1	IF_2
0x40041c2	        0x837dc800	               cmp dword [rbp - 0x38], 0	      2312	prdbg.c	FUNCTION_68	IF_3
0x40041c6	            0x741f	                            je 0x40041e7	      2312	prdbg.c	FUNCTION_68	IF_3
0x40041c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2314	prdbg.c	FUNCTION_68	IF_3	IF_4	CALL_4
0x40041cc	      0xbe00000000	                              mov esi, 0	      2314	prdbg.c	FUNCTION_68	IF_3	IF_4	CALL_4
0x40041d1	          0x4889c7	                            mov rdi, rax	      2314	prdbg.c	FUNCTION_68	IF_3	IF_4	CALL_4
0x40041d4	      0xe81fc1ffff	                    call sym.append_type	      2314	prdbg.c	FUNCTION_68	IF_3	IF_4	CALL_4
0x40041d9	            0x85c0	                           test eax, eax	      2314	prdbg.c	FUNCTION_68	IF_3	IF_4	CALL_4
0x40041db	            0x750a	                           jne 0x40041e7	      2314	prdbg.c	FUNCTION_68	IF_3	IF_4	CALL_4
0x40041dd	      0xb800000000	                              mov eax, 0	      2315	prdbg.c	FUNCTION_68	IF_3	IF_4
0x40041e2	      0xe97c010000	                           jmp 0x4004363	      2315	prdbg.c	FUNCTION_68	IF_3	IF_4
0x40041e7	        0x837d1000	               cmp dword [rbp + 0x10], 0	      2318	prdbg.c	FUNCTION_68	CALL_5
0x40041eb	            0x7414	                            je 0x4004201	      2318	prdbg.c	FUNCTION_68	CALL_5
0x40041ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2318	prdbg.c	FUNCTION_68	CALL_5
0x40041f1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2318	prdbg.c	FUNCTION_68	CALL_5
0x40041f5	          0x488b00	                    mov rax, qword [rax]	      2318	prdbg.c	FUNCTION_68	CALL_5
0x40041f8	          0x488b00	                    mov rax, qword [rax]	      2318	prdbg.c	FUNCTION_68	CALL_5
0x40041fb	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2318	prdbg.c	FUNCTION_68	CALL_5
0x40041ff	            0xeb0f	                           jmp 0x4004210	      2318	prdbg.c	FUNCTION_68	CALL_5
0x4004201	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2319	prdbg.c	FUNCTION_68
0x4004205	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2319	prdbg.c	FUNCTION_68
0x4004209	          0x488b00	                    mov rax, qword [rax]	      2319	prdbg.c	FUNCTION_68
0x400420c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2318	prdbg.c	FUNCTION_68	CALL_5
0x4004210	          0x4889c7	                            mov rdi, rax	      2318	prdbg.c	FUNCTION_68	CALL_5
0x4004213	      0xe800000000	                          call 0x4004218	      2318	prdbg.c	FUNCTION_68	CALL_5
0x4004218	        0x488945f0	             mov qword [rbp - 0x10], rax	      2318	prdbg.c	FUNCTION_68	CALL_5
0x400421c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x4004220	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x4004224	          0x4889d6	                            mov rsi, rdx	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x4004227	          0x4889c7	                            mov rdi, rax	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x400422a	      0xe875c2ffff	                call sym.substitute_type	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x400422f	            0x85c0	                           test eax, eax	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x4004231	            0x7516	                           jne 0x4004249	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x4004233	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2324	prdbg.c	FUNCTION_68	IF_5	CALL_7
0x4004237	          0x4889c7	                            mov rdi, rax	      2324	prdbg.c	FUNCTION_68	IF_5	CALL_7
0x400423a	      0xe800000000	                          call 0x400423f	      2324	prdbg.c	FUNCTION_68	IF_5	CALL_7
0x400423f	      0xb800000000	                              mov eax, 0	      2325	prdbg.c	FUNCTION_68	IF_5
0x4004244	      0xe91a010000	                           jmp 0x4004363	      2325	prdbg.c	FUNCTION_68	IF_5
0x4004249	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2329	prdbg.c	FUNCTION_68	CALL_8
0x400424d	          0x4889c7	                            mov rdi, rax	      2329	prdbg.c	FUNCTION_68	CALL_8
0x4004250	      0xe8a5c4ffff	                       call sym.pop_type	      2329	prdbg.c	FUNCTION_68	CALL_8
0x4004255	        0x488945f8	                mov qword [rbp - 8], rax	      2329	prdbg.c	FUNCTION_68	CALL_8
0x4004259	      0x48837df800	                  cmp qword [rbp - 8], 0	      2330	prdbg.c	FUNCTION_68	IF_6
0x400425e	            0x7516	                           jne 0x4004276	      2330	prdbg.c	FUNCTION_68	IF_6
0x4004260	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2332	prdbg.c	FUNCTION_68	IF_6	CALL_9
0x4004264	          0x4889c7	                            mov rdi, rax	      2332	prdbg.c	FUNCTION_68	IF_6	CALL_9
0x4004267	      0xe800000000	                          call 0x400426c	      2332	prdbg.c	FUNCTION_68	IF_6	CALL_9
0x400426c	      0xb800000000	                              mov eax, 0	      2333	prdbg.c	FUNCTION_68	IF_6
0x4004271	      0xe9ed000000	                           jmp 0x4004363	      2333	prdbg.c	FUNCTION_68	IF_6
0x4004276	        0x837d1000	               cmp dword [rbp + 0x10], 0	      2337	prdbg.c	FUNCTION_68	IF_7
0x400427a	            0x750a	                           jne 0x4004286	      2337	prdbg.c	FUNCTION_68	IF_7
0x400427c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2338	prdbg.c	FUNCTION_68	IF_7
0x4004284	            0xeb39	                           jmp 0x40042bf	      2338	prdbg.c	FUNCTION_68	IF_7
0x4004286	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2341	prdbg.c	FUNCTION_68	ELSE_1	CALL_10
0x400428a	          0x4889c7	                            mov rdi, rax	      2341	prdbg.c	FUNCTION_68	ELSE_1	CALL_10
0x400428d	      0xe868c4ffff	                       call sym.pop_type	      2341	prdbg.c	FUNCTION_68	ELSE_1	CALL_10
0x4004292	        0x488945e0	             mov qword [rbp - 0x20], rax	      2341	prdbg.c	FUNCTION_68	ELSE_1	CALL_10
0x4004296	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2342	prdbg.c	FUNCTION_68	ELSE_1	IF_8
0x400429b	            0x7522	                           jne 0x40042bf	      2342	prdbg.c	FUNCTION_68	ELSE_1	IF_8
0x400429d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2344	prdbg.c	FUNCTION_68	ELSE_1	IF_8	CALL_11
0x40042a1	          0x4889c7	                            mov rdi, rax	      2344	prdbg.c	FUNCTION_68	ELSE_1	IF_8	CALL_11
0x40042a4	      0xe800000000	                          call 0x40042a9	      2344	prdbg.c	FUNCTION_68	ELSE_1	IF_8	CALL_11
0x40042a9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2345	prdbg.c	FUNCTION_68	ELSE_1	IF_8	CALL_12
0x40042ad	          0x4889c7	                            mov rdi, rax	      2345	prdbg.c	FUNCTION_68	ELSE_1	IF_8	CALL_12
0x40042b0	      0xe800000000	                          call 0x40042b5	      2345	prdbg.c	FUNCTION_68	ELSE_1	IF_8	CALL_12
0x40042b5	      0xb800000000	                              mov eax, 0	      2346	prdbg.c	FUNCTION_68	ELSE_1	IF_8
0x40042ba	      0xe9a4000000	                           jmp 0x4004363	      2346	prdbg.c	FUNCTION_68	ELSE_1	IF_8
0x40042bf	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x40042c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x40042c6	            0x89d6	                            mov esi, edx	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x40042c8	          0x4889c7	                            mov rdi, rax	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x40042cb	      0xe875f7ffff	              call sym.tg_fix_visibility	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x40042d0	            0x85c0	                           test eax, eax	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x40042d2	            0x752b	                           jne 0x40042ff	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x40042d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      2353	prdbg.c	FUNCTION_68	IF_9	CALL_14
0x40042d8	          0x4889c7	                            mov rdi, rax	      2353	prdbg.c	FUNCTION_68	IF_9	CALL_14
0x40042db	      0xe800000000	                          call 0x40042e0	      2353	prdbg.c	FUNCTION_68	IF_9	CALL_14
0x40042e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2354	prdbg.c	FUNCTION_68	IF_9	CALL_15
0x40042e4	          0x4889c7	                            mov rdi, rax	      2354	prdbg.c	FUNCTION_68	IF_9	CALL_15
0x40042e7	      0xe800000000	                          call 0x40042ec	      2354	prdbg.c	FUNCTION_68	IF_9	CALL_15
0x40042ec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2355	prdbg.c	FUNCTION_68	IF_9	CALL_16
0x40042f0	          0x4889c7	                            mov rdi, rax	      2355	prdbg.c	FUNCTION_68	IF_9	CALL_16
0x40042f3	      0xe800000000	                          call 0x40042f8	      2355	prdbg.c	FUNCTION_68	IF_9	CALL_16
0x40042f8	      0xb800000000	                              mov eax, 0	      2356	prdbg.c	FUNCTION_68	IF_9
0x40042fd	            0xeb64	                           jmp 0x4004363	      2356	prdbg.c	FUNCTION_68	IF_9
0x40042ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2360	prdbg.c	FUNCTION_68
0x4004303	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2360	prdbg.c	FUNCTION_68
0x4004307	        0x488b7808	                mov rdi, qword [rax + 8]	      2359	prdbg.c	FUNCTION_68	CALL_17
0x400430b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2359	prdbg.c	FUNCTION_68	CALL_17
0x400430f	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      2359	prdbg.c	FUNCTION_68	CALL_17
0x4004313	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2359	prdbg.c	FUNCTION_68	CALL_17
0x4004317	          0x488b00	                    mov rax, qword [rax]	      2359	prdbg.c	FUNCTION_68	CALL_17
0x400431a	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2359	prdbg.c	FUNCTION_68	CALL_17
0x400431e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2359	prdbg.c	FUNCTION_68	CALL_17
0x4004322	          0x4989f9	                             mov r9, rdi	      2359	prdbg.c	FUNCTION_68	CALL_17
0x4004325	          0x4989f0	                             mov r8, rsi	      2359	prdbg.c	FUNCTION_68	CALL_17
0x4004328	      0xbe00000000	                              mov esi, 0	      2359	prdbg.c	FUNCTION_68	CALL_17
0x400432d	          0x4889c7	                            mov rdi, rax	      2359	prdbg.c	FUNCTION_68	CALL_17
0x4004330	      0xb800000000	                              mov eax, 0	      2359	prdbg.c	FUNCTION_68	CALL_17
0x4004335	      0xe800000000	                          call 0x400433a	      2359	prdbg.c	FUNCTION_68	CALL_17
0x400433a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2361	prdbg.c	FUNCTION_68	CALL_18
0x400433e	          0x4889c7	                            mov rdi, rax	      2361	prdbg.c	FUNCTION_68	CALL_18
0x4004341	      0xe800000000	                          call 0x4004346	      2361	prdbg.c	FUNCTION_68	CALL_18
0x4004346	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2362	prdbg.c	FUNCTION_68	CALL_19
0x400434a	          0x4889c7	                            mov rdi, rax	      2362	prdbg.c	FUNCTION_68	CALL_19
0x400434d	      0xe800000000	                          call 0x4004352	      2362	prdbg.c	FUNCTION_68	CALL_19
0x4004352	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2363	prdbg.c	FUNCTION_68	CALL_20
0x4004356	          0x4889c7	                            mov rdi, rax	      2363	prdbg.c	FUNCTION_68	CALL_20
0x4004359	      0xe800000000	                          call 0x400435e	      2363	prdbg.c	FUNCTION_68	CALL_20
0x400435e	      0xb801000000	                              mov eax, 1	      2365	prdbg.c	FUNCTION_68
0x4004363	              0xc9	                                   leave	      2366	prdbg.c	FUNCTION_68
0x4004364	              0xc3	                                     ret	      2366	prdbg.c	FUNCTION_68
pr_lineno	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,3:DO,0:ELSE,0:IF,0	38
0x40034a1	              0x55	                                push rbp	      1873	prdbg.c	FUNCTION_53
0x40034a2	          0x4889e5	                            mov rbp, rsp	      1873	prdbg.c	FUNCTION_53
0x40034a5	        0x4883ec50	                           sub rsp, 0x50	      1873	prdbg.c	FUNCTION_53
0x40034a9	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1873	prdbg.c	FUNCTION_53
0x40034ad	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1873	prdbg.c	FUNCTION_53
0x40034b1	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1873	prdbg.c	FUNCTION_53
0x40034b5	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1873	prdbg.c	FUNCTION_53
0x40034b9	    0x64488b042528	                mov rax, qword fs:[0x28]	      1873	prdbg.c	FUNCTION_53
0x40034c2	        0x488945f8	                mov qword [rbp - 8], rax	      1873	prdbg.c	FUNCTION_53
0x40034c6	            0x31c0	                            xor eax, eax	      1873	prdbg.c	FUNCTION_53
0x40034c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1874	prdbg.c	FUNCTION_53
0x40034cc	        0x488945d8	             mov qword [rbp - 0x28], rax	      1874	prdbg.c	FUNCTION_53
0x40034d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1877	prdbg.c	FUNCTION_53	CALL_1
0x40034d4	          0x4889c7	                            mov rdi, rax	      1877	prdbg.c	FUNCTION_53	CALL_1
0x40034d7	      0xe88bccffff	                         call sym.indent	      1877	prdbg.c	FUNCTION_53	CALL_1
0x40034dc	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      1878	prdbg.c	FUNCTION_53	CALL_2
0x40034e0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1878	prdbg.c	FUNCTION_53	CALL_2
0x40034e4	      0xb901000000	                              mov ecx, 1	      1878	prdbg.c	FUNCTION_53	CALL_2
0x40034e9	      0xba01000000	                              mov edx, 1	      1878	prdbg.c	FUNCTION_53	CALL_2
0x40034ee	          0x4889c7	                            mov rdi, rax	      1878	prdbg.c	FUNCTION_53	CALL_2
0x40034f1	      0xe86fd2ffff	                      call sym.print_vma	      1878	prdbg.c	FUNCTION_53	CALL_2
0x40034f6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1879	prdbg.c	FUNCTION_53	CALL_3
0x40034fa	          0x488b00	                    mov rax, qword [rax]	      1879	prdbg.c	FUNCTION_53	CALL_3
0x40034fd	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      1879	prdbg.c	FUNCTION_53	CALL_3
0x4003501	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      1879	prdbg.c	FUNCTION_53	CALL_3
0x4003505	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1879	prdbg.c	FUNCTION_53	CALL_3
0x4003509	          0x4989f0	                             mov r8, rsi	      1879	prdbg.c	FUNCTION_53	CALL_3
0x400350c	      0xbe00000000	                              mov esi, 0	      1879	prdbg.c	FUNCTION_53	CALL_3
0x4003511	          0x4889c7	                            mov rdi, rax	      1879	prdbg.c	FUNCTION_53	CALL_3
0x4003514	      0xb800000000	                              mov eax, 0	      1879	prdbg.c	FUNCTION_53	CALL_3
0x4003519	      0xe800000000	                          call 0x400351e	      1879	prdbg.c	FUNCTION_53	CALL_3
0x400351e	      0xb801000000	                              mov eax, 1	      1881	prdbg.c	FUNCTION_53
0x4003523	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1882	prdbg.c	FUNCTION_53
0x4003527	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1882	prdbg.c	FUNCTION_53
0x4003530	            0x7405	                            je 0x4003537	      1882	prdbg.c	FUNCTION_53
0x4003532	      0xe800000000	                          call 0x4003537	      1882	prdbg.c	FUNCTION_53
0x4003537	              0xc9	                                   leave	      1882	prdbg.c	FUNCTION_53
0x4003538	              0xc3	                                     ret	      1882	prdbg.c	FUNCTION_53
push_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,3:DO,0:ELSE,0:IF,1	37
0x40001a3	              0x55	                                push rbp	       335	prdbg.c	FUNCTION_3
0x40001a4	          0x4889e5	                            mov rbp, rsp	       335	prdbg.c	FUNCTION_3
0x40001a7	        0x4883ec20	                           sub rsp, 0x20	       335	prdbg.c	FUNCTION_3
0x40001ab	        0x48897de8	             mov qword [rbp - 0x18], rdi	       335	prdbg.c	FUNCTION_3
0x40001af	        0x488975e0	             mov qword [rbp - 0x20], rsi	       335	prdbg.c	FUNCTION_3
0x40001b3	      0x48837de000	               cmp qword [rbp - 0x20], 0	       338	prdbg.c	FUNCTION_3	IF_1
0x40001b8	            0x7507	                           jne 0x40001c1	       338	prdbg.c	FUNCTION_3	IF_1
0x40001ba	      0xb800000000	                              mov eax, 0	       339	prdbg.c	FUNCTION_3	IF_1
0x40001bf	            0xeb72	                           jmp 0x4000233	       339	prdbg.c	FUNCTION_3	IF_1
0x40001c1	      0xbf38000000	                           mov edi, 0x38	       341	prdbg.c	FUNCTION_3	CALL_1
0x40001c6	      0xe800000000	                          call 0x40001cb	       341	prdbg.c	FUNCTION_3	CALL_1
0x40001cb	        0x488945f8	                mov qword [rbp - 8], rax	       341	prdbg.c	FUNCTION_3	CALL_1
0x40001cf	        0x488b45f8	                mov rax, qword [rbp - 8]	       342	prdbg.c	FUNCTION_3	CALL_2
0x40001d3	      0xba38000000	                           mov edx, 0x38	       342	prdbg.c	FUNCTION_3	CALL_2
0x40001d8	      0xbe00000000	                              mov esi, 0	       342	prdbg.c	FUNCTION_3	CALL_2
0x40001dd	          0x4889c7	                            mov rdi, rax	       342	prdbg.c	FUNCTION_3	CALL_2
0x40001e0	      0xe800000000	                          call 0x40001e5	       342	prdbg.c	FUNCTION_3	CALL_2
0x40001e5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       344	prdbg.c	FUNCTION_3	CALL_3
0x40001e9	          0x4889c7	                            mov rdi, rax	       344	prdbg.c	FUNCTION_3	CALL_3
0x40001ec	      0xe800000000	                          call 0x40001f1	       344	prdbg.c	FUNCTION_3	CALL_3
0x40001f1	          0x4889c2	                            mov rdx, rax	       344	prdbg.c	FUNCTION_3	CALL_3
0x40001f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       344	prdbg.c	FUNCTION_3	CALL_3
0x40001f8	        0x48895008	                mov qword [rax + 8], rdx	       344	prdbg.c	FUNCTION_3	CALL_3
0x40001fc	        0x488b45f8	                mov rax, qword [rbp - 8]	       345	prdbg.c	FUNCTION_3
0x4000200	    0xc74010030000	               mov dword [rax + 0x10], 3	       345	prdbg.c	FUNCTION_3
0x4000207	        0x488b45f8	                mov rax, qword [rbp - 8]	       346	prdbg.c	FUNCTION_3
0x400020b	    0x48c740180000	               mov qword [rax + 0x18], 0	       346	prdbg.c	FUNCTION_3
0x4000213	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       347	prdbg.c	FUNCTION_3
0x4000217	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       347	prdbg.c	FUNCTION_3
0x400021b	        0x488b45f8	                mov rax, qword [rbp - 8]	       347	prdbg.c	FUNCTION_3
0x400021f	          0x488910	                    mov qword [rax], rdx	       347	prdbg.c	FUNCTION_3
0x4000222	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       348	prdbg.c	FUNCTION_3
0x4000226	        0x488b55f8	                mov rdx, qword [rbp - 8]	       348	prdbg.c	FUNCTION_3
0x400022a	        0x48895010	             mov qword [rax + 0x10], rdx	       348	prdbg.c	FUNCTION_3
0x400022e	      0xb801000000	                              mov eax, 1	       350	prdbg.c	FUNCTION_3
0x4000233	              0xc9	                                   leave	       351	prdbg.c	FUNCTION_3
0x4000234	              0xc3	                                     ret	       351	prdbg.c	FUNCTION_3
tg_start_class_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,7:DO,0:ELSE,2:IF,10	121
0x4003bdd	              0x55	                                push rbp	      2114	prdbg.c	FUNCTION_65
0x4003bde	          0x4889e5	                            mov rbp, rsp	      2114	prdbg.c	FUNCTION_65
0x4003be1	        0x4883ec60	                           sub rsp, 0x60	      2114	prdbg.c	FUNCTION_65
0x4003be5	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2114	prdbg.c	FUNCTION_65
0x4003be9	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2114	prdbg.c	FUNCTION_65
0x4003bed	          0x8955ac	             mov dword [rbp - 0x54], edx	      2114	prdbg.c	FUNCTION_65
0x4003bf0	          0x894da8	             mov dword [rbp - 0x58], ecx	      2114	prdbg.c	FUNCTION_65
0x4003bf3	        0x448945a4	             mov dword [rbp - 0x5c], r8d	      2114	prdbg.c	FUNCTION_65
0x4003bf7	        0x44894da0	             mov dword [rbp - 0x60], r9d	      2114	prdbg.c	FUNCTION_65
0x4003bfb	    0x64488b042528	                mov rax, qword fs:[0x28]	      2114	prdbg.c	FUNCTION_65
0x4003c04	        0x488945f8	                mov qword [rbp - 8], rax	      2114	prdbg.c	FUNCTION_65
0x4003c08	            0x31c0	                            xor eax, eax	      2114	prdbg.c	FUNCTION_65
0x4003c0a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2115	prdbg.c	FUNCTION_65
0x4003c0e	        0x488945d8	             mov qword [rbp - 0x28], rax	      2115	prdbg.c	FUNCTION_65
0x4003c12	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2116	prdbg.c	FUNCTION_65
0x4003c1a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2119	prdbg.c	FUNCTION_65
0x4003c1e	          0x8b4008	                mov eax, dword [rax + 8]	      2119	prdbg.c	FUNCTION_65
0x4003c21	          0x8d5002	                      lea edx, [rax + 2]	      2119	prdbg.c	FUNCTION_65
0x4003c24	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2119	prdbg.c	FUNCTION_65
0x4003c28	          0x895008	                mov dword [rax + 8], edx	      2119	prdbg.c	FUNCTION_65
0x4003c2b	        0x837da000	               cmp dword [rbp - 0x60], 0	      2121	prdbg.c	FUNCTION_65	IF_1
0x4003c2f	            0x7427	                            je 0x4003c58	      2121	prdbg.c	FUNCTION_65	IF_1
0x4003c31	        0x837d1000	               cmp dword [rbp + 0x10], 0	      2121	prdbg.c	FUNCTION_65	IF_1
0x4003c35	            0x7521	                           jne 0x4003c58	      2121	prdbg.c	FUNCTION_65	IF_1
0x4003c37	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2123	prdbg.c	FUNCTION_65	IF_1	CALL_1
0x4003c3b	          0x4889c7	                            mov rdi, rax	      2123	prdbg.c	FUNCTION_65	IF_1	CALL_1
0x4003c3e	      0xe8b7caffff	                       call sym.pop_type	      2123	prdbg.c	FUNCTION_65	IF_1	CALL_1
0x4003c43	        0x488945c8	             mov qword [rbp - 0x38], rax	      2123	prdbg.c	FUNCTION_65	IF_1	CALL_1
0x4003c47	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2124	prdbg.c	FUNCTION_65	IF_1	IF_2
0x4003c4c	            0x750a	                           jne 0x4003c58	      2124	prdbg.c	FUNCTION_65	IF_1	IF_2
0x4003c4e	      0xb800000000	                              mov eax, 0	      2125	prdbg.c	FUNCTION_65	IF_1	IF_2
0x4003c53	      0xe934010000	                           jmp 0x4003d8c	      2125	prdbg.c	FUNCTION_65	IF_1	IF_2
0x4003c58	      0x48837db000	               cmp qword [rbp - 0x50], 0	      2128	prdbg.c	FUNCTION_65	IF_3
0x4003c5d	            0x740a	                            je 0x4003c69	      2128	prdbg.c	FUNCTION_65	IF_3
0x4003c5f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2129	prdbg.c	FUNCTION_65	IF_3
0x4003c63	        0x488945d0	             mov qword [rbp - 0x30], rax	      2129	prdbg.c	FUNCTION_65	IF_3
0x4003c67	            0xeb21	                           jmp 0x4003c8a	      2129	prdbg.c	FUNCTION_65	IF_3
0x4003c69	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2134	prdbg.c	FUNCTION_65	ELSE_1	CALL_2
0x4003c6c	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2134	prdbg.c	FUNCTION_65	ELSE_1	CALL_2
0x4003c70	      0xbe00000000	                              mov esi, 0	      2134	prdbg.c	FUNCTION_65	ELSE_1	CALL_2
0x4003c75	          0x4889c7	                            mov rdi, rax	      2134	prdbg.c	FUNCTION_65	ELSE_1	CALL_2
0x4003c78	      0xb800000000	                              mov eax, 0	      2134	prdbg.c	FUNCTION_65	ELSE_1	CALL_2
0x4003c7d	      0xe800000000	                          call 0x4003c82	      2134	prdbg.c	FUNCTION_65	ELSE_1	CALL_2
0x4003c82	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2135	prdbg.c	FUNCTION_65	ELSE_1
0x4003c86	        0x488945d0	             mov qword [rbp - 0x30], rax	      2135	prdbg.c	FUNCTION_65	ELSE_1
0x4003c8a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2138	prdbg.c	FUNCTION_65	IF_4	CALL_3
0x4003c8e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2138	prdbg.c	FUNCTION_65	IF_4	CALL_3
0x4003c92	          0x4889d6	                            mov rsi, rdx	      2138	prdbg.c	FUNCTION_65	IF_4	CALL_3
0x4003c95	          0x4889c7	                            mov rdi, rax	      2138	prdbg.c	FUNCTION_65	IF_4	CALL_3
0x4003c98	      0xe806c5ffff	                      call sym.push_type	      2138	prdbg.c	FUNCTION_65	IF_4	CALL_3
0x4003c9d	            0x85c0	                           test eax, eax	      2138	prdbg.c	FUNCTION_65	IF_4	CALL_3
0x4003c9f	            0x750a	                           jne 0x4003cab	      2138	prdbg.c	FUNCTION_65	IF_4	CALL_3
0x4003ca1	      0xb800000000	                              mov eax, 0	      2139	prdbg.c	FUNCTION_65	IF_4
0x4003ca6	      0xe9e1000000	                           jmp 0x4003d8c	      2139	prdbg.c	FUNCTION_65	IF_4
0x4003cab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2141	prdbg.c	FUNCTION_65
0x4003caf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2141	prdbg.c	FUNCTION_65
0x4003cb3	        0x837da800	               cmp dword [rbp - 0x58], 0	      2141	prdbg.c	FUNCTION_65
0x4003cb7	            0x7407	                            je 0x4003cc0	      2141	prdbg.c	FUNCTION_65
0x4003cb9	      0xba00000000	                              mov edx, 0	      2141	prdbg.c	FUNCTION_65
0x4003cbe	            0xeb05	                           jmp 0x4003cc5	      2141	prdbg.c	FUNCTION_65
0x4003cc0	      0xba00000000	                              mov edx, 0	      2141	prdbg.c	FUNCTION_65
0x4003cc5	        0x48895020	             mov qword [rax + 0x20], rdx	      2141	prdbg.c	FUNCTION_65
0x4003cc9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2142	prdbg.c	FUNCTION_65
0x4003ccd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2142	prdbg.c	FUNCTION_65
0x4003cd1	    0x48c740280000	               mov qword [rax + 0x28], 0	      2142	prdbg.c	FUNCTION_65
0x4003cd9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2143	prdbg.c	FUNCTION_65
0x4003cdd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2143	prdbg.c	FUNCTION_65
0x4003ce1	    0xc74030000000	               mov dword [rax + 0x30], 0	      2143	prdbg.c	FUNCTION_65
0x4003ce8	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2145	prdbg.c	FUNCTION_65	IF_5
0x4003cec	            0x7513	                           jne 0x4003d01	      2145	prdbg.c	FUNCTION_65	IF_5
0x4003cee	        0x837da000	               cmp dword [rbp - 0x60], 0	      2145	prdbg.c	FUNCTION_65	IF_5
0x4003cf2	            0x750d	                           jne 0x4003d01	      2145	prdbg.c	FUNCTION_65	IF_5
0x4003cf4	        0x837d1000	               cmp dword [rbp + 0x10], 0	      2145	prdbg.c	FUNCTION_65	IF_5
0x4003cf8	            0x7507	                           jne 0x4003d01	      2145	prdbg.c	FUNCTION_65	IF_5
0x4003cfa	      0x48837db000	               cmp qword [rbp - 0x50], 0	      2145	prdbg.c	FUNCTION_65	IF_5
0x4003cff	            0x7477	                            je 0x4003d78	      2145	prdbg.c	FUNCTION_65	IF_5
0x4003d01	        0x837da000	               cmp dword [rbp - 0x60], 0	      2147	prdbg.c	FUNCTION_65	IF_5	IF_6
0x4003d05	            0x7471	                            je 0x4003d78	      2147	prdbg.c	FUNCTION_65	IF_5	IF_6
0x4003d07	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2149	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7	CALL_4
0x4003d0b	      0xbe00000000	                              mov esi, 0	      2149	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7	CALL_4
0x4003d10	          0x4889c7	                            mov rdi, rax	      2149	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7	CALL_4
0x4003d13	      0xe8e0c5ffff	                    call sym.append_type	      2149	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7	CALL_4
0x4003d18	            0x85c0	                           test eax, eax	      2149	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7	CALL_4
0x4003d1a	            0x7507	                           jne 0x4003d23	      2149	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7	CALL_4
0x4003d1c	      0xb800000000	                              mov eax, 0	      2150	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7
0x4003d21	            0xeb69	                           jmp 0x4003d8c	      2150	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7
0x4003d23	        0x837d1000	               cmp dword [rbp + 0x10], 0	      2151	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8
0x4003d27	            0x741c	                            je 0x4003d45	      2151	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8
0x4003d29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_5
0x4003d2d	      0xbe00000000	                              mov esi, 0	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_5
0x4003d32	          0x4889c7	                            mov rdi, rax	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_5
0x4003d35	      0xe8bec5ffff	                    call sym.append_type	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_5
0x4003d3a	            0x85c0	                           test eax, eax	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_5
0x4003d3c	            0x753a	                           jne 0x4003d78	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_5
0x4003d3e	      0xb800000000	                              mov eax, 0	      2154	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9
0x4003d43	            0xeb47	                           jmp 0x4003d8c	      2154	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9
0x4003d45	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2158	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x4003d49	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2158	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x4003d4d	          0x4889d6	                            mov rsi, rdx	      2158	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x4003d50	          0x4889c7	                            mov rdi, rax	      2158	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x4003d53	      0xe8a0c5ffff	                    call sym.append_type	      2158	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x4003d58	            0x85c0	                           test eax, eax	      2158	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x4003d5a	            0x7415	                            je 0x4003d71	      2158	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x4003d5c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_7
0x4003d60	      0xbe00000000	                              mov esi, 0	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_7
0x4003d65	          0x4889c7	                            mov rdi, rax	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_7
0x4003d68	      0xe88bc5ffff	                    call sym.append_type	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_7
0x4003d6d	            0x85c0	                           test eax, eax	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_7
0x4003d6f	            0x7507	                           jne 0x4003d78	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_7
0x4003d71	      0xb800000000	                              mov eax, 0	      2160	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10
0x4003d76	            0xeb14	                           jmp 0x4003d8c	      2160	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10
0x4003d78	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2165	prdbg.c	FUNCTION_65
0x4003d7c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2165	prdbg.c	FUNCTION_65
0x4003d80	    0xc74010020000	               mov dword [rax + 0x10], 2	      2165	prdbg.c	FUNCTION_65
0x4003d87	      0xb801000000	                              mov eax, 1	      2167	prdbg.c	FUNCTION_65
0x4003d8c	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2168	prdbg.c	FUNCTION_65
0x4003d90	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2168	prdbg.c	FUNCTION_65
0x4003d99	            0x7405	                            je 0x4003da0	      2168	prdbg.c	FUNCTION_65
0x4003d9b	      0xe800000000	                          call 0x4003da0	      2168	prdbg.c	FUNCTION_65
0x4003da0	              0xc9	                                   leave	      2168	prdbg.c	FUNCTION_65
0x4003da1	              0xc3	                                     ret	      2168	prdbg.c	FUNCTION_65
pr_fix_visibility	WHILE,0:FOR,0:functions,0:SWITCH,1:CALL,7:DO,0:ELSE,0:IF,2	95
0x4001b90	              0x55	                                push rbp	      1100	prdbg.c	FUNCTION_31
0x4001b91	          0x4889e5	                            mov rbp, rsp	      1100	prdbg.c	FUNCTION_31
0x4001b94	        0x4883ec30	                           sub rsp, 0x30	      1100	prdbg.c	FUNCTION_31
0x4001b98	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1100	prdbg.c	FUNCTION_31
0x4001b9c	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1100	prdbg.c	FUNCTION_31
0x4001b9f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1101	prdbg.c	FUNCTION_31
0x4001ba7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4001bab	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4001baf	          0x4885c0	                           test rax, rax	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4001bb2	            0x7519	                           jne 0x4001bcd	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4001bb4	      0xb900000000	                              mov ecx, 0	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4001bb9	      0xba51040000	                          mov edx, 0x451	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4001bbe	      0xbe00000000	                              mov esi, 0	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4001bc3	      0xbf00000000	                              mov edi, 0	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4001bc8	      0xe800000000	                          call 0x4001bcd	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4001bcd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1107	prdbg.c	FUNCTION_31	IF_1
0x4001bd1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1107	prdbg.c	FUNCTION_31	IF_1
0x4001bd5	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1107	prdbg.c	FUNCTION_31	IF_1
0x4001bd8	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1107	prdbg.c	FUNCTION_31	IF_1
0x4001bdb	            0x750a	                           jne 0x4001be7	      1107	prdbg.c	FUNCTION_31	IF_1
0x4001bdd	      0xb801000000	                              mov eax, 1	      1108	prdbg.c	FUNCTION_31	IF_1
0x4001be2	      0xe9fc000000	                           jmp 0x4001ce3	      1108	prdbg.c	FUNCTION_31	IF_1
0x4001be7	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4001bea	          0x83f801	                              cmp eax, 1	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4001bed	            0x7425	                            je 0x4001c14	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4001bef	          0x83f801	                              cmp eax, 1	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4001bf2	            0x720c	                            jb 0x4001c00	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4001bf4	          0x83f802	                              cmp eax, 2	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4001bf7	            0x7411	                            je 0x4001c0a	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4001bf9	          0x83f803	                              cmp eax, 3	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4001bfc	            0x7420	                            je 0x4001c1e	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4001bfe	            0xeb28	                           jmp 0x4001c28	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4001c00	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1113	prdbg.c	FUNCTION_31	SWITCH_1
0x4001c08	            0xeb23	                           jmp 0x4001c2d	      1114	prdbg.c	FUNCTION_31	SWITCH_1
0x4001c0a	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1116	prdbg.c	FUNCTION_31	SWITCH_1
0x4001c12	            0xeb19	                           jmp 0x4001c2d	      1117	prdbg.c	FUNCTION_31	SWITCH_1
0x4001c14	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1119	prdbg.c	FUNCTION_31	SWITCH_1
0x4001c1c	            0xeb0f	                           jmp 0x4001c2d	      1120	prdbg.c	FUNCTION_31	SWITCH_1
0x4001c1e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1122	prdbg.c	FUNCTION_31	SWITCH_1
0x4001c26	            0xeb05	                           jmp 0x4001c2d	      1123	prdbg.c	FUNCTION_31	SWITCH_1
0x4001c28	      0xe800000000	                          call 0x4001c2d	      1125	prdbg.c	FUNCTION_31	SWITCH_1	CALL_2
0x4001c2d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1132	prdbg.c	FUNCTION_31
0x4001c31	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1132	prdbg.c	FUNCTION_31
0x4001c35	        0x488b4008	                mov rax, qword [rax + 8]	      1132	prdbg.c	FUNCTION_31
0x4001c39	        0x488945f8	                mov qword [rbp - 8], rax	      1132	prdbg.c	FUNCTION_31
0x4001c3d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1133	prdbg.c	FUNCTION_31	CALL_3
0x4001c41	          0x4889c7	                            mov rdi, rax	      1133	prdbg.c	FUNCTION_31	CALL_3
0x4001c44	      0xe800000000	                          call 0x4001c49	      1133	prdbg.c	FUNCTION_31	CALL_3
0x4001c49	          0x8945ec	             mov dword [rbp - 0x14], eax	      1133	prdbg.c	FUNCTION_31	CALL_3
0x4001c4c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4001c4f	          0x83e801	                              sub eax, 1	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4001c52	            0x89c2	                            mov edx, eax	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4001c54	        0x488b45f8	                mov rax, qword [rbp - 8]	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4001c58	          0x4801d0	                            add rax, rdx	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4001c5b	           0xfb600	                   movzx eax, byte [rax]	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4001c5e	            0x3c20	                            cmp al, 0x20	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4001c60	            0x7419	                            je 0x4001c7b	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4001c62	      0xb900000000	                              mov ecx, 0	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4001c67	      0xba6e040000	                          mov edx, 0x46e	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4001c6c	      0xbe00000000	                              mov esi, 0	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4001c71	      0xbf00000000	                              mov edi, 0	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4001c76	      0xe800000000	                          call 0x4001c7b	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4001c7b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1135	prdbg.c	FUNCTION_31
0x4001c7e	          0x83e801	                              sub eax, 1	      1135	prdbg.c	FUNCTION_31
0x4001c81	            0x89c2	                            mov edx, eax	      1135	prdbg.c	FUNCTION_31
0x4001c83	        0x488b45f8	                mov rax, qword [rbp - 8]	      1135	prdbg.c	FUNCTION_31
0x4001c87	          0x4801d0	                            add rax, rdx	      1135	prdbg.c	FUNCTION_31
0x4001c8a	          0xc60000	                       mov byte [rax], 0	      1135	prdbg.c	FUNCTION_31
0x4001c8d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1137	prdbg.c	FUNCTION_31	IF_2	CALL_5
0x4001c91	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1137	prdbg.c	FUNCTION_31	IF_2	CALL_5
0x4001c95	          0x4889d6	                            mov rsi, rdx	      1137	prdbg.c	FUNCTION_31	IF_2	CALL_5
0x4001c98	          0x4889c7	                            mov rdi, rax	      1137	prdbg.c	FUNCTION_31	IF_2	CALL_5
0x4001c9b	      0xe858e6ffff	                    call sym.append_type	      1137	prdbg.c	FUNCTION_31	IF_2	CALL_5
0x4001ca0	            0x85c0	                           test eax, eax	      1137	prdbg.c	FUNCTION_31	IF_2	CALL_5
0x4001ca2	            0x7425	                            je 0x4001cc9	      1137	prdbg.c	FUNCTION_31	IF_2	CALL_5
0x4001ca4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1138	prdbg.c	FUNCTION_31	IF_2	CALL_6
0x4001ca8	      0xbe00000000	                              mov esi, 0	      1138	prdbg.c	FUNCTION_31	IF_2	CALL_6
0x4001cad	          0x4889c7	                            mov rdi, rax	      1138	prdbg.c	FUNCTION_31	IF_2	CALL_6
0x4001cb0	      0xe843e6ffff	                    call sym.append_type	      1138	prdbg.c	FUNCTION_31	IF_2	CALL_6
0x4001cb5	            0x85c0	                           test eax, eax	      1138	prdbg.c	FUNCTION_31	IF_2	CALL_6
0x4001cb7	            0x7410	                            je 0x4001cc9	      1138	prdbg.c	FUNCTION_31	IF_2	CALL_6
0x4001cb9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1139	prdbg.c	FUNCTION_31	IF_2	CALL_7
0x4001cbd	          0x4889c7	                            mov rdi, rax	      1139	prdbg.c	FUNCTION_31	IF_2	CALL_7
0x4001cc0	      0xe8ede9ffff	                    call sym.indent_type	      1139	prdbg.c	FUNCTION_31	IF_2	CALL_7
0x4001cc5	            0x85c0	                           test eax, eax	      1139	prdbg.c	FUNCTION_31	IF_2	CALL_7
0x4001cc7	            0x7507	                           jne 0x4001cd0	      1139	prdbg.c	FUNCTION_31	IF_2	CALL_7
0x4001cc9	      0xb800000000	                              mov eax, 0	      1140	prdbg.c	FUNCTION_31	IF_2
0x4001cce	            0xeb13	                           jmp 0x4001ce3	      1140	prdbg.c	FUNCTION_31	IF_2
0x4001cd0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1142	prdbg.c	FUNCTION_31
0x4001cd4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1142	prdbg.c	FUNCTION_31
0x4001cd8	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1142	prdbg.c	FUNCTION_31
0x4001cdb	          0x895010	             mov dword [rax + 0x10], edx	      1142	prdbg.c	FUNCTION_31
0x4001cde	      0xb801000000	                              mov eax, 1	      1144	prdbg.c	FUNCTION_31
0x4001ce3	              0xc9	                                   leave	      1145	prdbg.c	FUNCTION_31
0x4001ce4	              0xc3	                                     ret	      1145	prdbg.c	FUNCTION_31
tg_end_struct_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,0:IF,0	16
0x4003ba4	              0x55	                                push rbp	      2102	prdbg.c	FUNCTION_64
0x4003ba5	          0x4889e5	                            mov rbp, rsp	      2102	prdbg.c	FUNCTION_64
0x4003ba8	        0x4883ec10	                           sub rsp, 0x10	      2102	prdbg.c	FUNCTION_64
0x4003bac	        0x48897df8	                mov qword [rbp - 8], rdi	      2102	prdbg.c	FUNCTION_64
0x4003bb0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2103	prdbg.c	FUNCTION_64	CALL_1
0x4003bb4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2103	prdbg.c	FUNCTION_64	CALL_1
0x4003bb8	          0x4885c0	                           test rax, rax	      2103	prdbg.c	FUNCTION_64	CALL_1
0x4003bbb	            0x7519	                           jne 0x4003bd6	      2103	prdbg.c	FUNCTION_64	CALL_1
0x4003bbd	      0xb900000000	                              mov ecx, 0	      2103	prdbg.c	FUNCTION_64	CALL_1
0x4003bc2	      0xba37080000	                          mov edx, 0x837	      2103	prdbg.c	FUNCTION_64	CALL_1
0x4003bc7	      0xbe00000000	                              mov esi, 0	      2103	prdbg.c	FUNCTION_64	CALL_1
0x4003bcc	      0xbf00000000	                              mov edi, 0	      2103	prdbg.c	FUNCTION_64	CALL_1
0x4003bd1	      0xe800000000	                          call 0x4003bd6	      2103	prdbg.c	FUNCTION_64	CALL_1
0x4003bd6	      0xb801000000	                              mov eax, 1	      2105	prdbg.c	FUNCTION_64
0x4003bdb	              0xc9	                                   leave	      2106	prdbg.c	FUNCTION_64
0x4003bdc	              0xc3	                                     ret	      2106	prdbg.c	FUNCTION_64
pr_bool_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,2:DO,0:ELSE,0:IF,0	28
0x4000a5a	              0x55	                                push rbp	       624	prdbg.c	FUNCTION_18
0x4000a5b	          0x4889e5	                            mov rbp, rsp	       624	prdbg.c	FUNCTION_18
0x4000a5e	        0x4883ec50	                           sub rsp, 0x50	       624	prdbg.c	FUNCTION_18
0x4000a62	        0x48897db8	             mov qword [rbp - 0x48], rdi	       624	prdbg.c	FUNCTION_18
0x4000a66	          0x8975b4	             mov dword [rbp - 0x4c], esi	       624	prdbg.c	FUNCTION_18
0x4000a69	    0x64488b042528	                mov rax, qword fs:[0x28]	       624	prdbg.c	FUNCTION_18
0x4000a72	        0x488945f8	                mov qword [rbp - 8], rax	       624	prdbg.c	FUNCTION_18
0x4000a76	            0x31c0	                            xor eax, eax	       624	prdbg.c	FUNCTION_18
0x4000a78	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       625	prdbg.c	FUNCTION_18
0x4000a7c	        0x488945c8	             mov qword [rbp - 0x38], rax	       625	prdbg.c	FUNCTION_18
0x4000a80	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       628	prdbg.c	FUNCTION_18	CALL_1
0x4000a83	    0x8d14c5000000	                        lea edx, [rax*8]	       628	prdbg.c	FUNCTION_18	CALL_1
0x4000a8a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       628	prdbg.c	FUNCTION_18	CALL_1
0x4000a8e	      0xbe00000000	                              mov esi, 0	       628	prdbg.c	FUNCTION_18	CALL_1
0x4000a93	          0x4889c7	                            mov rdi, rax	       628	prdbg.c	FUNCTION_18	CALL_1
0x4000a96	      0xb800000000	                              mov eax, 0	       628	prdbg.c	FUNCTION_18	CALL_1
0x4000a9b	      0xe800000000	                          call 0x4000aa0	       628	prdbg.c	FUNCTION_18	CALL_1
0x4000aa0	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       630	prdbg.c	FUNCTION_18	CALL_2
0x4000aa4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       630	prdbg.c	FUNCTION_18	CALL_2
0x4000aa8	          0x4889d6	                            mov rsi, rdx	       630	prdbg.c	FUNCTION_18	CALL_2
0x4000aab	          0x4889c7	                            mov rdi, rax	       630	prdbg.c	FUNCTION_18	CALL_2
0x4000aae	      0xe8f0f6ffff	                      call sym.push_type	       630	prdbg.c	FUNCTION_18	CALL_2
0x4000ab3	        0x488b4df8	                mov rcx, qword [rbp - 8]	       631	prdbg.c	FUNCTION_18
0x4000ab7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       631	prdbg.c	FUNCTION_18
0x4000ac0	            0x7405	                            je 0x4000ac7	       631	prdbg.c	FUNCTION_18
0x4000ac2	      0xe800000000	                          call 0x4000ac7	       631	prdbg.c	FUNCTION_18
0x4000ac7	              0xc9	                                   leave	       631	prdbg.c	FUNCTION_18
0x4000ac8	              0xc3	                                     ret	       631	prdbg.c	FUNCTION_18
pr_volatile_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,0:IF,0	12
0x4001960	              0x55	                                push rbp	      1032	prdbg.c	FUNCTION_29
0x4001961	          0x4889e5	                            mov rbp, rsp	      1032	prdbg.c	FUNCTION_29
0x4001964	        0x4883ec20	                           sub rsp, 0x20	      1032	prdbg.c	FUNCTION_29
0x4001968	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1032	prdbg.c	FUNCTION_29
0x400196c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1033	prdbg.c	FUNCTION_29
0x4001970	        0x488945f8	                mov qword [rbp - 8], rax	      1033	prdbg.c	FUNCTION_29
0x4001974	        0x488b45f8	                mov rax, qword [rbp - 8]	      1035	prdbg.c	FUNCTION_29	CALL_1
0x4001978	      0xbe00000000	                              mov esi, 0	      1035	prdbg.c	FUNCTION_29	CALL_1
0x400197d	          0x4889c7	                            mov rdi, rax	      1035	prdbg.c	FUNCTION_29	CALL_1
0x4001980	      0xe81febffff	                call sym.substitute_type	      1035	prdbg.c	FUNCTION_29	CALL_1
0x4001985	              0xc9	                                   leave	      1036	prdbg.c	FUNCTION_29
0x4001986	              0xc3	                                     ret	      1036	prdbg.c	FUNCTION_29
pr_function_parameter	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,8:DO,0:ELSE,0:IF,6	91
0x400327a	              0x55	                                push rbp	      1811	prdbg.c	FUNCTION_51
0x400327b	          0x4889e5	                            mov rbp, rsp	      1811	prdbg.c	FUNCTION_51
0x400327e	        0x4883ec50	                           sub rsp, 0x50	      1811	prdbg.c	FUNCTION_51
0x4003282	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1811	prdbg.c	FUNCTION_51
0x4003286	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1811	prdbg.c	FUNCTION_51
0x400328a	          0x8955bc	             mov dword [rbp - 0x44], edx	      1811	prdbg.c	FUNCTION_51
0x400328d	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1811	prdbg.c	FUNCTION_51
0x4003291	    0x64488b042528	                mov rax, qword fs:[0x28]	      1811	prdbg.c	FUNCTION_51
0x400329a	        0x488945f8	                mov qword [rbp - 8], rax	      1811	prdbg.c	FUNCTION_51
0x400329e	            0x31c0	                            xor eax, eax	      1811	prdbg.c	FUNCTION_51
0x40032a0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1812	prdbg.c	FUNCTION_51
0x40032a4	        0x488945d0	             mov qword [rbp - 0x30], rax	      1812	prdbg.c	FUNCTION_51
0x40032a8	        0x837dbc03	               cmp dword [rbp - 0x44], 3	      1816	prdbg.c	FUNCTION_51	IF_1
0x40032ac	            0x7406	                            je 0x40032b4	      1816	prdbg.c	FUNCTION_51	IF_1
0x40032ae	        0x837dbc04	               cmp dword [rbp - 0x44], 4	      1817	prdbg.c	FUNCTION_51	IF_1
0x40032b2	            0x751a	                           jne 0x40032ce	      1817	prdbg.c	FUNCTION_51	IF_1
0x40032b4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1819	prdbg.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x40032b8	          0x4889c7	                            mov rdi, rax	      1819	prdbg.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x40032bb	      0xe8ceddffff	              call sym.pr_reference_type	      1819	prdbg.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x40032c0	            0x85c0	                           test eax, eax	      1819	prdbg.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x40032c2	            0x750a	                           jne 0x40032ce	      1819	prdbg.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x40032c4	      0xb800000000	                              mov eax, 0	      1820	prdbg.c	FUNCTION_51	IF_1	IF_2
0x40032c9	      0xe9f3000000	                           jmp 0x40033c1	      1820	prdbg.c	FUNCTION_51	IF_1	IF_2
0x40032ce	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1823	prdbg.c	FUNCTION_51	IF_3	CALL_2
0x40032d2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1823	prdbg.c	FUNCTION_51	IF_3	CALL_2
0x40032d6	          0x4889d6	                            mov rsi, rdx	      1823	prdbg.c	FUNCTION_51	IF_3	CALL_2
0x40032d9	          0x4889c7	                            mov rdi, rax	      1823	prdbg.c	FUNCTION_51	IF_3	CALL_2
0x40032dc	      0xe8c3d1ffff	                call sym.substitute_type	      1823	prdbg.c	FUNCTION_51	IF_3	CALL_2
0x40032e1	            0x85c0	                           test eax, eax	      1823	prdbg.c	FUNCTION_51	IF_3	CALL_2
0x40032e3	            0x750a	                           jne 0x40032ef	      1823	prdbg.c	FUNCTION_51	IF_3	CALL_2
0x40032e5	      0xb800000000	                              mov eax, 0	      1824	prdbg.c	FUNCTION_51	IF_3
0x40032ea	      0xe9d2000000	                           jmp 0x40033c1	      1824	prdbg.c	FUNCTION_51	IF_3
0x40032ef	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1826	prdbg.c	FUNCTION_51	CALL_3
0x40032f3	          0x4889c7	                            mov rdi, rax	      1826	prdbg.c	FUNCTION_51	CALL_3
0x40032f6	      0xe8ffd3ffff	                       call sym.pop_type	      1826	prdbg.c	FUNCTION_51	CALL_3
0x40032fb	        0x488945d8	             mov qword [rbp - 0x28], rax	      1826	prdbg.c	FUNCTION_51	CALL_3
0x40032ff	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1827	prdbg.c	FUNCTION_51	IF_4
0x4003304	            0x750a	                           jne 0x4003310	      1827	prdbg.c	FUNCTION_51	IF_4
0x4003306	      0xb800000000	                              mov eax, 0	      1828	prdbg.c	FUNCTION_51	IF_4
0x400330b	      0xe9b1000000	                           jmp 0x40033c1	      1828	prdbg.c	FUNCTION_51	IF_4
0x4003310	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1830	prdbg.c	FUNCTION_51	IF_5
0x4003314	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1830	prdbg.c	FUNCTION_51	IF_5
0x4003317	          0x83f801	                              cmp eax, 1	      1830	prdbg.c	FUNCTION_51	IF_5
0x400331a	            0x741e	                            je 0x400333a	      1830	prdbg.c	FUNCTION_51	IF_5
0x400331c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1831	prdbg.c	FUNCTION_51	CALL_4
0x4003320	          0x488b00	                    mov rax, qword [rax]	      1831	prdbg.c	FUNCTION_51	CALL_4
0x4003323	          0x4889c1	                            mov rcx, rax	      1831	prdbg.c	FUNCTION_51	CALL_4
0x4003326	      0xba02000000	                              mov edx, 2	      1831	prdbg.c	FUNCTION_51	CALL_4
0x400332b	      0xbe01000000	                              mov esi, 1	      1831	prdbg.c	FUNCTION_51	CALL_4
0x4003330	      0xbf00000000	                              mov edi, 0	      1831	prdbg.c	FUNCTION_51	CALL_4
0x4003335	      0xe800000000	                          call 0x400333a	      1831	prdbg.c	FUNCTION_51	CALL_4
0x400333a	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      1833	prdbg.c	FUNCTION_51	IF_6
0x400333e	            0x7406	                            je 0x4003346	      1833	prdbg.c	FUNCTION_51	IF_6
0x4003340	        0x837dbc04	               cmp dword [rbp - 0x44], 4	      1833	prdbg.c	FUNCTION_51	IF_6
0x4003344	            0x751e	                           jne 0x4003364	      1833	prdbg.c	FUNCTION_51	IF_6
0x4003346	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1834	prdbg.c	FUNCTION_51	CALL_5
0x400334a	          0x488b00	                    mov rax, qword [rax]	      1834	prdbg.c	FUNCTION_51	CALL_5
0x400334d	          0x4889c1	                            mov rcx, rax	      1834	prdbg.c	FUNCTION_51	CALL_5
0x4003350	      0xba09000000	                              mov edx, 9	      1834	prdbg.c	FUNCTION_51	CALL_5
0x4003355	      0xbe01000000	                              mov esi, 1	      1834	prdbg.c	FUNCTION_51	CALL_5
0x400335a	      0xbf00000000	                              mov edi, 0	      1834	prdbg.c	FUNCTION_51	CALL_5
0x400335f	      0xe800000000	                          call 0x4003364	      1834	prdbg.c	FUNCTION_51	CALL_5
0x4003364	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      1836	prdbg.c	FUNCTION_51	CALL_6
0x4003368	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1836	prdbg.c	FUNCTION_51	CALL_6
0x400336c	      0xb901000000	                              mov ecx, 1	      1836	prdbg.c	FUNCTION_51	CALL_6
0x4003371	      0xba01000000	                              mov edx, 1	      1836	prdbg.c	FUNCTION_51	CALL_6
0x4003376	          0x4889c7	                            mov rdi, rax	      1836	prdbg.c	FUNCTION_51	CALL_6
0x4003379	      0xe8e7d3ffff	                      call sym.print_vma	      1836	prdbg.c	FUNCTION_51	CALL_6
0x400337e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1837	prdbg.c	FUNCTION_51	CALL_7
0x4003382	          0x488b00	                    mov rax, qword [rax]	      1837	prdbg.c	FUNCTION_51	CALL_7
0x4003385	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      1837	prdbg.c	FUNCTION_51	CALL_7
0x4003389	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1837	prdbg.c	FUNCTION_51	CALL_7
0x400338d	      0xbe00000000	                              mov esi, 0	      1837	prdbg.c	FUNCTION_51	CALL_7
0x4003392	          0x4889c7	                            mov rdi, rax	      1837	prdbg.c	FUNCTION_51	CALL_7
0x4003395	      0xb800000000	                              mov eax, 0	      1837	prdbg.c	FUNCTION_51	CALL_7
0x400339a	      0xe800000000	                          call 0x400339f	      1837	prdbg.c	FUNCTION_51	CALL_7
0x400339f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1839	prdbg.c	FUNCTION_51	CALL_8
0x40033a3	          0x4889c7	                            mov rdi, rax	      1839	prdbg.c	FUNCTION_51	CALL_8
0x40033a6	      0xe800000000	                          call 0x40033ab	      1839	prdbg.c	FUNCTION_51	CALL_8
0x40033ab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1841	prdbg.c	FUNCTION_51
0x40033af	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1841	prdbg.c	FUNCTION_51
0x40033b2	          0x8d5001	                      lea edx, [rax + 1]	      1841	prdbg.c	FUNCTION_51
0x40033b5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1841	prdbg.c	FUNCTION_51
0x40033b9	          0x895018	             mov dword [rax + 0x18], edx	      1841	prdbg.c	FUNCTION_51
0x40033bc	      0xb801000000	                              mov eax, 1	      1843	prdbg.c	FUNCTION_51
0x40033c1	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1844	prdbg.c	FUNCTION_51
0x40033c5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1844	prdbg.c	FUNCTION_51
0x40033ce	            0x7405	                            je 0x40033d5	      1844	prdbg.c	FUNCTION_51
0x40033d0	      0xe800000000	                          call 0x40033d5	      1844	prdbg.c	FUNCTION_51
0x40033d5	              0xc9	                                   leave	      1844	prdbg.c	FUNCTION_51
0x40033d6	              0xc3	                                     ret	      1844	prdbg.c	FUNCTION_51
pr_tag	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,4:DO,0:ELSE,0:IF,1	31
0x4002e7a	              0x55	                                push rbp	      1679	prdbg.c	FUNCTION_45
0x4002e7b	          0x4889e5	                            mov rbp, rsp	      1679	prdbg.c	FUNCTION_45
0x4002e7e	        0x4883ec20	                           sub rsp, 0x20	      1679	prdbg.c	FUNCTION_45
0x4002e82	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1679	prdbg.c	FUNCTION_45
0x4002e86	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1679	prdbg.c	FUNCTION_45
0x4002e8a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1680	prdbg.c	FUNCTION_45
0x4002e8e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1680	prdbg.c	FUNCTION_45
0x4002e92	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1683	prdbg.c	FUNCTION_45	CALL_1
0x4002e96	          0x4889c7	                            mov rdi, rax	      1683	prdbg.c	FUNCTION_45	CALL_1
0x4002e99	      0xe85cd8ffff	                       call sym.pop_type	      1683	prdbg.c	FUNCTION_45	CALL_1
0x4002e9e	        0x488945f8	                mov qword [rbp - 8], rax	      1683	prdbg.c	FUNCTION_45	CALL_1
0x4002ea2	      0x48837df800	                  cmp qword [rbp - 8], 0	      1684	prdbg.c	FUNCTION_45	IF_1
0x4002ea7	            0x7507	                           jne 0x4002eb0	      1684	prdbg.c	FUNCTION_45	IF_1
0x4002ea9	      0xb800000000	                              mov eax, 0	      1685	prdbg.c	FUNCTION_45	IF_1
0x4002eae	            0xeb3a	                           jmp 0x4002eea	      1685	prdbg.c	FUNCTION_45	IF_1
0x4002eb0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1687	prdbg.c	FUNCTION_45	CALL_2
0x4002eb4	          0x4889c7	                            mov rdi, rax	      1687	prdbg.c	FUNCTION_45	CALL_2
0x4002eb7	      0xe8abd2ffff	                         call sym.indent	      1687	prdbg.c	FUNCTION_45	CALL_2
0x4002ebc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1688	prdbg.c	FUNCTION_45	CALL_3
0x4002ec0	          0x488b00	                    mov rax, qword [rax]	      1688	prdbg.c	FUNCTION_45	CALL_3
0x4002ec3	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1688	prdbg.c	FUNCTION_45	CALL_3
0x4002ec7	      0xbe00000000	                              mov esi, 0	      1688	prdbg.c	FUNCTION_45	CALL_3
0x4002ecc	          0x4889c7	                            mov rdi, rax	      1688	prdbg.c	FUNCTION_45	CALL_3
0x4002ecf	      0xb800000000	                              mov eax, 0	      1688	prdbg.c	FUNCTION_45	CALL_3
0x4002ed4	      0xe800000000	                          call 0x4002ed9	      1688	prdbg.c	FUNCTION_45	CALL_3
0x4002ed9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1690	prdbg.c	FUNCTION_45	CALL_4
0x4002edd	          0x4889c7	                            mov rdi, rax	      1690	prdbg.c	FUNCTION_45	CALL_4
0x4002ee0	      0xe800000000	                          call 0x4002ee5	      1690	prdbg.c	FUNCTION_45	CALL_4
0x4002ee5	      0xb801000000	                              mov eax, 1	      1692	prdbg.c	FUNCTION_45
0x4002eea	              0xc9	                                   leave	      1693	prdbg.c	FUNCTION_45
0x4002eeb	              0xc3	                                     ret	      1693	prdbg.c	FUNCTION_45
tg_fix_visibility	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,2:DO,0:ELSE,0:IF,1	38
0x4003a45	              0x55	                                push rbp	      2057	prdbg.c	FUNCTION_62
0x4003a46	          0x4889e5	                            mov rbp, rsp	      2057	prdbg.c	FUNCTION_62
0x4003a49	        0x4883ec10	                           sub rsp, 0x10	      2057	prdbg.c	FUNCTION_62
0x4003a4d	        0x48897df8	                mov qword [rbp - 8], rdi	      2057	prdbg.c	FUNCTION_62
0x4003a51	          0x8975f4	              mov dword [rbp - 0xc], esi	      2057	prdbg.c	FUNCTION_62
0x4003a54	        0x488b45f8	                mov rax, qword [rbp - 8]	      2058	prdbg.c	FUNCTION_62	CALL_1
0x4003a58	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2058	prdbg.c	FUNCTION_62	CALL_1
0x4003a5c	          0x4885c0	                           test rax, rax	      2058	prdbg.c	FUNCTION_62	CALL_1
0x4003a5f	            0x7519	                           jne 0x4003a7a	      2058	prdbg.c	FUNCTION_62	CALL_1
0x4003a61	      0xb900000000	                              mov ecx, 0	      2058	prdbg.c	FUNCTION_62	CALL_1
0x4003a66	      0xba0a080000	                          mov edx, 0x80a	      2058	prdbg.c	FUNCTION_62	CALL_1
0x4003a6b	      0xbe00000000	                              mov esi, 0	      2058	prdbg.c	FUNCTION_62	CALL_1
0x4003a70	      0xbf00000000	                              mov edi, 0	      2058	prdbg.c	FUNCTION_62	CALL_1
0x4003a75	      0xe800000000	                          call 0x4003a7a	      2058	prdbg.c	FUNCTION_62	CALL_1
0x4003a7a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2060	prdbg.c	FUNCTION_62	IF_1
0x4003a7e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2060	prdbg.c	FUNCTION_62	IF_1
0x4003a82	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2060	prdbg.c	FUNCTION_62	IF_1
0x4003a85	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      2060	prdbg.c	FUNCTION_62	IF_1
0x4003a88	            0x7507	                           jne 0x4003a91	      2060	prdbg.c	FUNCTION_62	IF_1
0x4003a8a	      0xb801000000	                              mov eax, 1	      2061	prdbg.c	FUNCTION_62	IF_1
0x4003a8f	            0xeb3c	                           jmp 0x4003acd	      2061	prdbg.c	FUNCTION_62	IF_1
0x4003a91	        0x488b45f8	                mov rax, qword [rbp - 8]	      2063	prdbg.c	FUNCTION_62	CALL_2
0x4003a95	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2063	prdbg.c	FUNCTION_62	CALL_2
0x4003a99	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2063	prdbg.c	FUNCTION_62	CALL_2
0x4003a9c	          0x83f803	                              cmp eax, 3	      2063	prdbg.c	FUNCTION_62	CALL_2
0x4003a9f	            0x7519	                           jne 0x4003aba	      2063	prdbg.c	FUNCTION_62	CALL_2
0x4003aa1	      0xb900000000	                              mov ecx, 0	      2063	prdbg.c	FUNCTION_62	CALL_2
0x4003aa6	      0xba0f080000	                          mov edx, 0x80f	      2063	prdbg.c	FUNCTION_62	CALL_2
0x4003aab	      0xbe00000000	                              mov esi, 0	      2063	prdbg.c	FUNCTION_62	CALL_2
0x4003ab0	      0xbf00000000	                              mov edi, 0	      2063	prdbg.c	FUNCTION_62	CALL_2
0x4003ab5	      0xe800000000	                          call 0x4003aba	      2063	prdbg.c	FUNCTION_62	CALL_2
0x4003aba	        0x488b45f8	                mov rax, qword [rbp - 8]	      2065	prdbg.c	FUNCTION_62
0x4003abe	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2065	prdbg.c	FUNCTION_62
0x4003ac2	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2065	prdbg.c	FUNCTION_62
0x4003ac5	          0x895010	             mov dword [rax + 0x10], edx	      2065	prdbg.c	FUNCTION_62
0x4003ac8	      0xb801000000	                              mov eax, 1	      2067	prdbg.c	FUNCTION_62
0x4003acd	              0xc9	                                   leave	      2068	prdbg.c	FUNCTION_62
0x4003ace	              0xc3	                                     ret	      2068	prdbg.c	FUNCTION_62
pr_typedef_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,0:IF,0	14
0x4002c72	              0x55	                                push rbp	      1591	prdbg.c	FUNCTION_42
0x4002c73	          0x4889e5	                            mov rbp, rsp	      1591	prdbg.c	FUNCTION_42
0x4002c76	        0x4883ec20	                           sub rsp, 0x20	      1591	prdbg.c	FUNCTION_42
0x4002c7a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1591	prdbg.c	FUNCTION_42
0x4002c7e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1591	prdbg.c	FUNCTION_42
0x4002c82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1592	prdbg.c	FUNCTION_42
0x4002c86	        0x488945f8	                mov qword [rbp - 8], rax	      1592	prdbg.c	FUNCTION_42
0x4002c8a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1594	prdbg.c	FUNCTION_42	CALL_1
0x4002c8e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1594	prdbg.c	FUNCTION_42	CALL_1
0x4002c92	          0x4889d6	                            mov rsi, rdx	      1594	prdbg.c	FUNCTION_42	CALL_1
0x4002c95	          0x4889c7	                            mov rdi, rax	      1594	prdbg.c	FUNCTION_42	CALL_1
0x4002c98	      0xe806d5ffff	                      call sym.push_type	      1594	prdbg.c	FUNCTION_42	CALL_1
0x4002c9d	              0xc9	                                   leave	      1595	prdbg.c	FUNCTION_42
0x4002c9e	              0xc3	                                     ret	      1595	prdbg.c	FUNCTION_42
pop_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,2:DO,0:ELSE,0:IF,0	29
0x40006fa	              0x55	                                push rbp	       474	prdbg.c	FUNCTION_9
0x40006fb	          0x4889e5	                            mov rbp, rsp	       474	prdbg.c	FUNCTION_9
0x40006fe	        0x4883ec20	                           sub rsp, 0x20	       474	prdbg.c	FUNCTION_9
0x4000702	        0x48897de8	             mov qword [rbp - 0x18], rdi	       474	prdbg.c	FUNCTION_9
0x4000706	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       478	prdbg.c	FUNCTION_9	CALL_1
0x400070a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       478	prdbg.c	FUNCTION_9	CALL_1
0x400070e	          0x4885c0	                           test rax, rax	       478	prdbg.c	FUNCTION_9	CALL_1
0x4000711	            0x7519	                           jne 0x400072c	       478	prdbg.c	FUNCTION_9	CALL_1
0x4000713	      0xb900000000	                              mov ecx, 0	       478	prdbg.c	FUNCTION_9	CALL_1
0x4000718	      0xbade010000	                          mov edx, 0x1de	       478	prdbg.c	FUNCTION_9	CALL_1
0x400071d	      0xbe00000000	                              mov esi, 0	       478	prdbg.c	FUNCTION_9	CALL_1
0x4000722	      0xbf00000000	                              mov edi, 0	       478	prdbg.c	FUNCTION_9	CALL_1
0x4000727	      0xe800000000	                          call 0x400072c	       478	prdbg.c	FUNCTION_9	CALL_1
0x400072c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       480	prdbg.c	FUNCTION_9
0x4000730	        0x488b4010	            mov rax, qword [rax + 0x10] 	       480	prdbg.c	FUNCTION_9
0x4000734	        0x488945f0	             mov qword [rbp - 0x10], rax	       480	prdbg.c	FUNCTION_9
0x4000738	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       481	prdbg.c	FUNCTION_9
0x400073c	          0x488b10	                    mov rdx, qword [rax]	       481	prdbg.c	FUNCTION_9
0x400073f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       481	prdbg.c	FUNCTION_9
0x4000743	        0x48895010	             mov qword [rax + 0x10], rdx	       481	prdbg.c	FUNCTION_9
0x4000747	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       482	prdbg.c	FUNCTION_9
0x400074b	        0x488b4008	                mov rax, qword [rax + 8]	       482	prdbg.c	FUNCTION_9
0x400074f	        0x488945f8	                mov qword [rbp - 8], rax	       482	prdbg.c	FUNCTION_9
0x4000753	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       483	prdbg.c	FUNCTION_9	CALL_2
0x4000757	          0x4889c7	                            mov rdi, rax	       483	prdbg.c	FUNCTION_9	CALL_2
0x400075a	      0xe800000000	                          call 0x400075f	       483	prdbg.c	FUNCTION_9	CALL_2
0x400075f	        0x488b45f8	                mov rax, qword [rbp - 8]	       485	prdbg.c	FUNCTION_9
0x4000763	              0xc9	                                   leave	       486	prdbg.c	FUNCTION_9
0x4000764	              0xc3	                                     ret	       486	prdbg.c	FUNCTION_9
pr_int_constant	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,3:DO,0:ELSE,0:IF,0	35
0x4002eec	              0x55	                                push rbp	      1699	prdbg.c	FUNCTION_46
0x4002eed	          0x4889e5	                            mov rbp, rsp	      1699	prdbg.c	FUNCTION_46
0x4002ef0	        0x4883ec50	                           sub rsp, 0x50	      1699	prdbg.c	FUNCTION_46
0x4002ef4	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1699	prdbg.c	FUNCTION_46
0x4002ef8	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1699	prdbg.c	FUNCTION_46
0x4002efc	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1699	prdbg.c	FUNCTION_46
0x4002f00	    0x64488b042528	                mov rax, qword fs:[0x28]	      1699	prdbg.c	FUNCTION_46
0x4002f09	        0x488945f8	                mov qword [rbp - 8], rax	      1699	prdbg.c	FUNCTION_46
0x4002f0d	            0x31c0	                            xor eax, eax	      1699	prdbg.c	FUNCTION_46
0x4002f0f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1700	prdbg.c	FUNCTION_46
0x4002f13	        0x488945d8	             mov qword [rbp - 0x28], rax	      1700	prdbg.c	FUNCTION_46
0x4002f17	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1703	prdbg.c	FUNCTION_46	CALL_1
0x4002f1b	          0x4889c7	                            mov rdi, rax	      1703	prdbg.c	FUNCTION_46	CALL_1
0x4002f1e	      0xe844d2ffff	                         call sym.indent	      1703	prdbg.c	FUNCTION_46	CALL_1
0x4002f23	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      1704	prdbg.c	FUNCTION_46	CALL_2
0x4002f27	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1704	prdbg.c	FUNCTION_46	CALL_2
0x4002f2b	      0xb900000000	                              mov ecx, 0	      1704	prdbg.c	FUNCTION_46	CALL_2
0x4002f30	      0xba00000000	                              mov edx, 0	      1704	prdbg.c	FUNCTION_46	CALL_2
0x4002f35	          0x4889c7	                            mov rdi, rax	      1704	prdbg.c	FUNCTION_46	CALL_2
0x4002f38	      0xe828d8ffff	                      call sym.print_vma	      1704	prdbg.c	FUNCTION_46	CALL_2
0x4002f3d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1705	prdbg.c	FUNCTION_46	CALL_3
0x4002f41	          0x488b00	                    mov rax, qword [rax]	      1705	prdbg.c	FUNCTION_46	CALL_3
0x4002f44	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      1705	prdbg.c	FUNCTION_46	CALL_3
0x4002f48	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1705	prdbg.c	FUNCTION_46	CALL_3
0x4002f4c	      0xbe00000000	                              mov esi, 0	      1705	prdbg.c	FUNCTION_46	CALL_3
0x4002f51	          0x4889c7	                            mov rdi, rax	      1705	prdbg.c	FUNCTION_46	CALL_3
0x4002f54	      0xb800000000	                              mov eax, 0	      1705	prdbg.c	FUNCTION_46	CALL_3
0x4002f59	      0xe800000000	                          call 0x4002f5e	      1705	prdbg.c	FUNCTION_46	CALL_3
0x4002f5e	      0xb801000000	                              mov eax, 1	      1706	prdbg.c	FUNCTION_46
0x4002f63	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1707	prdbg.c	FUNCTION_46
0x4002f67	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1707	prdbg.c	FUNCTION_46
0x4002f70	            0x7405	                            je 0x4002f77	      1707	prdbg.c	FUNCTION_46
0x4002f72	      0xe800000000	                          call 0x4002f77	      1707	prdbg.c	FUNCTION_46
0x4002f77	              0xc9	                                   leave	      1707	prdbg.c	FUNCTION_46
0x4002f78	              0xc3	                                     ret	      1707	prdbg.c	FUNCTION_46
find_address_in_section	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,4:DO,0:ELSE,0:IF,4	57
0x40035de	              0x55	                                push rbp	      1923	prdbg.c	FUNCTION_56
0x40035df	          0x4889e5	                            mov rbp, rsp	      1923	prdbg.c	FUNCTION_56
0x40035e2	        0x4883ec40	                           sub rsp, 0x40	      1923	prdbg.c	FUNCTION_56
0x40035e6	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1923	prdbg.c	FUNCTION_56
0x40035ea	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1923	prdbg.c	FUNCTION_56
0x40035ee	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1923	prdbg.c	FUNCTION_56
0x40035f2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1926	prdbg.c	FUNCTION_56
0x40035f6	        0x488945e8	             mov qword [rbp - 0x18], rax	      1926	prdbg.c	FUNCTION_56
0x40035fa	    0x8b0500000000	            mov eax, dword [0x04003600] 	      1928	prdbg.c	FUNCTION_56	IF_1
0x4003600	            0x85c0	                           test eax, eax	      1928	prdbg.c	FUNCTION_56	IF_1
0x4003602	     0xf8598000000	                           jne 0x40036a0	      1928	prdbg.c	FUNCTION_56	IF_1
0x4003608	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1931	prdbg.c	FUNCTION_56	IF_2	CALL_1
0x400360c	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1931	prdbg.c	FUNCTION_56	IF_2	CALL_1
0x400360f	          0x83e001	                              and eax, 1	      1931	prdbg.c	FUNCTION_56	IF_2	CALL_1
0x4003612	            0x85c0	                           test eax, eax	      1931	prdbg.c	FUNCTION_56	IF_2	CALL_1
0x4003614	     0xf8489000000	                            je 0x40036a3	      1931	prdbg.c	FUNCTION_56	IF_2	CALL_1
0x400361a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1934	prdbg.c	FUNCTION_56	CALL_2
0x400361e	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1934	prdbg.c	FUNCTION_56	CALL_2
0x4003622	        0x488945f0	             mov qword [rbp - 0x10], rax	      1934	prdbg.c	FUNCTION_56	CALL_2
0x4003626	    0x488b05000000	            mov rax, qword [0x0400362d] 	      1935	prdbg.c	FUNCTION_56	IF_3
0x400362d	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1935	prdbg.c	FUNCTION_56	IF_3
0x4003631	            0x7273	                            jb 0x40036a6	      1935	prdbg.c	FUNCTION_56	IF_3
0x4003633	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1938	prdbg.c	FUNCTION_56	CALL_3
0x4003637	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1938	prdbg.c	FUNCTION_56	CALL_3
0x400363b	        0x488945f8	                mov qword [rbp - 8], rax	      1938	prdbg.c	FUNCTION_56	CALL_3
0x400363f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1939	prdbg.c	FUNCTION_56	IF_4
0x4003643	        0x488b45f8	                mov rax, qword [rbp - 8]	      1939	prdbg.c	FUNCTION_56	IF_4
0x4003647	          0x4801c2	                            add rdx, rax	      1939	prdbg.c	FUNCTION_56	IF_4
0x400364a	    0x488b05000000	            mov rax, qword [0x04003651] 	      1939	prdbg.c	FUNCTION_56	IF_4
0x4003651	          0x4839c2	                            cmp rdx, rax	      1939	prdbg.c	FUNCTION_56	IF_4
0x4003654	            0x7653	                           jbe 0x40036a9	      1939	prdbg.c	FUNCTION_56	IF_4
0x4003656	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1942	prdbg.c	FUNCTION_56	CALL_4
0x400365a	        0x488b4008	                mov rax, qword [rax + 8]	      1942	prdbg.c	FUNCTION_56	CALL_4
0x400365e	    0x488b80380200	           mov rax, qword [rax + 0x238] 	      1942	prdbg.c	FUNCTION_56	CALL_4
0x4003665	    0x488b15000000	            mov rdx, qword [0x0400366c] 	      1942	prdbg.c	FUNCTION_56	CALL_4
0x400366c	          0x4889d1	                            mov rcx, rdx	      1942	prdbg.c	FUNCTION_56	CALL_4
0x400366f	        0x482b4df0	             sub rcx, qword [rbp - 0x10]	      1942	prdbg.c	FUNCTION_56	CALL_4
0x4003673	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1942	prdbg.c	FUNCTION_56	CALL_4
0x4003677	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      1942	prdbg.c	FUNCTION_56	CALL_4
0x400367b	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1942	prdbg.c	FUNCTION_56	CALL_4
0x400367f	            0x6a00	                                  push 0	      1942	prdbg.c	FUNCTION_56	CALL_4
0x4003681	      0x6800000000	                                  push 0	      1942	prdbg.c	FUNCTION_56	CALL_4
0x4003686	    0x41b900000000	                              mov r9d, 0	      1942	prdbg.c	FUNCTION_56	CALL_4
0x400368c	    0x41b800000000	                              mov r8d, 0	      1942	prdbg.c	FUNCTION_56	CALL_4
0x4003692	            0xffd0	                                call rax	      1942	prdbg.c	FUNCTION_56	CALL_4
0x4003694	        0x4883c410	                           add rsp, 0x10	      1942	prdbg.c	FUNCTION_56	CALL_4
0x4003698	    0x890500000000	            mov dword [0x0400369e], eax 	      1942	prdbg.c	FUNCTION_56	CALL_4
0x400369e	            0xeb0a	                           jmp 0x40036aa	      1942	prdbg.c	FUNCTION_56	CALL_4
0x40036a0	              0x90	                                     nop	      1929	prdbg.c	FUNCTION_56	IF_1
0x40036a1	            0xeb07	                           jmp 0x40036aa	      1929	prdbg.c	FUNCTION_56	IF_1
0x40036a3	              0x90	                                     nop	      1932	prdbg.c	FUNCTION_56	IF_2
0x40036a4	            0xeb04	                           jmp 0x40036aa	      1932	prdbg.c	FUNCTION_56	IF_2
0x40036a6	              0x90	                                     nop	      1936	prdbg.c	FUNCTION_56	IF_3
0x40036a7	            0xeb01	                           jmp 0x40036aa	      1936	prdbg.c	FUNCTION_56	IF_3
0x40036a9	              0x90	                                     nop	      1940	prdbg.c	FUNCTION_56	IF_4
0x40036aa	              0xc9	                                   leave	      1944	prdbg.c	FUNCTION_56
0x40036ab	              0xc3	                                     ret	      1944	prdbg.c	FUNCTION_56
tg_start_struct_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,4:DO,0:ELSE,1:IF,2	70
0x400393b	              0x55	                                push rbp	      2027	prdbg.c	FUNCTION_61
0x400393c	          0x4889e5	                            mov rbp, rsp	      2027	prdbg.c	FUNCTION_61
0x400393f	        0x4883ec50	                           sub rsp, 0x50	      2027	prdbg.c	FUNCTION_61
0x4003943	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2027	prdbg.c	FUNCTION_61
0x4003947	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2027	prdbg.c	FUNCTION_61
0x400394b	          0x8955bc	             mov dword [rbp - 0x44], edx	      2027	prdbg.c	FUNCTION_61
0x400394e	          0x894db8	             mov dword [rbp - 0x48], ecx	      2027	prdbg.c	FUNCTION_61
0x4003951	        0x448945b4	             mov dword [rbp - 0x4c], r8d	      2027	prdbg.c	FUNCTION_61
0x4003955	    0x64488b042528	                mov rax, qword fs:[0x28]	      2027	prdbg.c	FUNCTION_61
0x400395e	        0x488945f8	                mov qword [rbp - 8], rax	      2027	prdbg.c	FUNCTION_61
0x4003962	            0x31c0	                            xor eax, eax	      2027	prdbg.c	FUNCTION_61
0x4003964	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2028	prdbg.c	FUNCTION_61
0x4003968	        0x488945d8	             mov qword [rbp - 0x28], rax	      2028	prdbg.c	FUNCTION_61
0x400396c	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      2032	prdbg.c	FUNCTION_61	IF_1
0x4003971	            0x740a	                            je 0x400397d	      2032	prdbg.c	FUNCTION_61	IF_1
0x4003973	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2033	prdbg.c	FUNCTION_61	IF_1
0x4003977	        0x488945d0	             mov qword [rbp - 0x30], rax	      2033	prdbg.c	FUNCTION_61	IF_1
0x400397b	            0xeb21	                           jmp 0x400399e	      2033	prdbg.c	FUNCTION_61	IF_1
0x400397d	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2036	prdbg.c	FUNCTION_61	ELSE_1
0x4003981	        0x488945d0	             mov qword [rbp - 0x30], rax	      2036	prdbg.c	FUNCTION_61	ELSE_1
0x4003985	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2037	prdbg.c	FUNCTION_61	ELSE_1	CALL_1
0x4003988	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2037	prdbg.c	FUNCTION_61	ELSE_1	CALL_1
0x400398c	      0xbe00000000	                              mov esi, 0	      2037	prdbg.c	FUNCTION_61	ELSE_1	CALL_1
0x4003991	          0x4889c7	                            mov rdi, rax	      2037	prdbg.c	FUNCTION_61	ELSE_1	CALL_1
0x4003994	      0xb800000000	                              mov eax, 0	      2037	prdbg.c	FUNCTION_61	ELSE_1	CALL_1
0x4003999	      0xe800000000	                          call 0x400399e	      2037	prdbg.c	FUNCTION_61	ELSE_1	CALL_1
0x400399e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2040	prdbg.c	FUNCTION_61	IF_2	CALL_2
0x40039a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2040	prdbg.c	FUNCTION_61	IF_2	CALL_2
0x40039a6	          0x4889d6	                            mov rsi, rdx	      2040	prdbg.c	FUNCTION_61	IF_2	CALL_2
0x40039a9	          0x4889c7	                            mov rdi, rax	      2040	prdbg.c	FUNCTION_61	IF_2	CALL_2
0x40039ac	      0xe8f2c7ffff	                      call sym.push_type	      2040	prdbg.c	FUNCTION_61	IF_2	CALL_2
0x40039b1	            0x85c0	                           test eax, eax	      2040	prdbg.c	FUNCTION_61	IF_2	CALL_2
0x40039b3	            0x7507	                           jne 0x40039bc	      2040	prdbg.c	FUNCTION_61	IF_2	CALL_2
0x40039b5	      0xb800000000	                              mov eax, 0	      2041	prdbg.c	FUNCTION_61	IF_2
0x40039ba	            0xeb73	                           jmp 0x4003a2f	      2041	prdbg.c	FUNCTION_61	IF_2
0x40039bc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2043	prdbg.c	FUNCTION_61
0x40039c0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2043	prdbg.c	FUNCTION_61
0x40039c4	        0x837db800	               cmp dword [rbp - 0x48], 0	      2043	prdbg.c	FUNCTION_61
0x40039c8	            0x7407	                            je 0x40039d1	      2043	prdbg.c	FUNCTION_61
0x40039ca	      0xba00000000	                              mov edx, 0	      2043	prdbg.c	FUNCTION_61
0x40039cf	            0xeb05	                           jmp 0x40039d6	      2043	prdbg.c	FUNCTION_61
0x40039d1	      0xba00000000	                              mov edx, 0	      2043	prdbg.c	FUNCTION_61
0x40039d6	        0x48895020	             mov qword [rax + 0x20], rdx	      2043	prdbg.c	FUNCTION_61
0x40039da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2046	prdbg.c	FUNCTION_61
0x40039de	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2046	prdbg.c	FUNCTION_61
0x40039e2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2046	prdbg.c	FUNCTION_61
0x40039e6	           0xfb600	                   movzx eax, byte [rax]	      2046	prdbg.c	FUNCTION_61
0x40039e9	           0xfbef0	                           movsx esi, al	      2045	prdbg.c	FUNCTION_61	CALL_3
0x40039ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2045	prdbg.c	FUNCTION_61	CALL_3
0x40039f0	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      2045	prdbg.c	FUNCTION_61	CALL_3
0x40039f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2045	prdbg.c	FUNCTION_61	CALL_3
0x40039f8	          0x488b00	                    mov rax, qword [rax]	      2045	prdbg.c	FUNCTION_61	CALL_3
0x40039fb	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2045	prdbg.c	FUNCTION_61	CALL_3
0x40039ff	          0x4189f0	                            mov r8d, esi	      2045	prdbg.c	FUNCTION_61	CALL_3
0x4003a02	      0xbe00000000	                              mov esi, 0	      2045	prdbg.c	FUNCTION_61	CALL_3
0x4003a07	          0x4889c7	                            mov rdi, rax	      2045	prdbg.c	FUNCTION_61	CALL_3
0x4003a0a	      0xb800000000	                              mov eax, 0	      2045	prdbg.c	FUNCTION_61	CALL_3
0x4003a0f	      0xe800000000	                          call 0x4003a14	      2045	prdbg.c	FUNCTION_61	CALL_3
0x4003a14	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2048	prdbg.c	FUNCTION_61
0x4003a18	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2048	prdbg.c	FUNCTION_61
0x4003a1c	    0xc74010000000	               mov dword [rax + 0x10], 0	      2048	prdbg.c	FUNCTION_61
0x4003a23	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2050	prdbg.c	FUNCTION_61	CALL_4
0x4003a27	          0x4889c7	                            mov rdi, rax	      2050	prdbg.c	FUNCTION_61	CALL_4
0x4003a2a	      0xe883ccffff	                    call sym.indent_type	      2050	prdbg.c	FUNCTION_61	CALL_4
0x4003a2f	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2051	prdbg.c	FUNCTION_61
0x4003a33	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2051	prdbg.c	FUNCTION_61
0x4003a3c	            0x7405	                            je 0x4003a43	      2051	prdbg.c	FUNCTION_61
0x4003a3e	      0xe800000000	                          call 0x4003a43	      2051	prdbg.c	FUNCTION_61
0x4003a43	              0xc9	                                   leave	      2051	prdbg.c	FUNCTION_61
0x4003a44	              0xc3	                                     ret	      2051	prdbg.c	FUNCTION_61
pr_class_static_method_variant	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,14:DO,0:ELSE,0:IF,8	134
0x4002a4a	              0x55	                                push rbp	      1523	prdbg.c	FUNCTION_39
0x4002a4b	          0x4889e5	                            mov rbp, rsp	      1523	prdbg.c	FUNCTION_39
0x4002a4e	        0x4883ec30	                           sub rsp, 0x30	      1523	prdbg.c	FUNCTION_39
0x4002a52	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1523	prdbg.c	FUNCTION_39
0x4002a56	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1523	prdbg.c	FUNCTION_39
0x4002a5a	          0x8955dc	             mov dword [rbp - 0x24], edx	      1523	prdbg.c	FUNCTION_39
0x4002a5d	          0x894dd8	             mov dword [rbp - 0x28], ecx	      1523	prdbg.c	FUNCTION_39
0x4002a60	        0x448945d4	             mov dword [rbp - 0x2c], r8d	      1523	prdbg.c	FUNCTION_39
0x4002a64	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1524	prdbg.c	FUNCTION_39
0x4002a68	        0x488945f0	             mov qword [rbp - 0x10], rax	      1524	prdbg.c	FUNCTION_39
0x4002a6c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4002a70	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4002a74	          0x4885c0	                           test rax, rax	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4002a77	            0x7519	                           jne 0x4002a92	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4002a79	      0xb900000000	                              mov ecx, 0	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4002a7e	      0xbaf7050000	                          mov edx, 0x5f7	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4002a83	      0xbe00000000	                              mov esi, 0	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4002a88	      0xbf00000000	                              mov edi, 0	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4002a8d	      0xe800000000	                          call 0x4002a92	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4002a92	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4002a96	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4002a9a	          0x488b00	                    mov rax, qword [rax]	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4002a9d	          0x4885c0	                           test rax, rax	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4002aa0	            0x7519	                           jne 0x4002abb	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4002aa2	      0xb900000000	                              mov ecx, 0	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4002aa7	      0xbaf8050000	                          mov edx, 0x5f8	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4002aac	      0xbe00000000	                              mov esi, 0	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4002ab1	      0xbf00000000	                              mov edi, 0	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4002ab6	      0xe800000000	                          call 0x4002abb	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4002abb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4002abf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4002ac3	          0x488b00	                    mov rax, qword [rax]	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4002ac6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4002aca	          0x4885c0	                           test rax, rax	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4002acd	            0x7519	                           jne 0x4002ae8	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4002acf	      0xb900000000	                              mov ecx, 0	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4002ad4	      0xbaf9050000	                          mov edx, 0x5f9	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4002ad9	      0xbe00000000	                              mov esi, 0	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4002ade	      0xbf00000000	                              mov edi, 0	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4002ae3	      0xe800000000	                          call 0x4002ae8	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4002ae8	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1532	prdbg.c	FUNCTION_39	IF_1
0x4002aec	            0x741f	                            je 0x4002b0d	      1532	prdbg.c	FUNCTION_39	IF_1
0x4002aee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x4002af2	      0xbe00000000	                              mov esi, 0	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x4002af7	          0x4889c7	                            mov rdi, rax	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x4002afa	      0xe8f9d7ffff	                    call sym.append_type	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x4002aff	            0x85c0	                           test eax, eax	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x4002b01	            0x750a	                           jne 0x4002b0d	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x4002b03	      0xb800000000	                              mov eax, 0	      1535	prdbg.c	FUNCTION_39	IF_1	IF_2
0x4002b08	      0xe922010000	                           jmp 0x4002c2f	      1535	prdbg.c	FUNCTION_39	IF_1	IF_2
0x4002b0d	        0x837dd800	               cmp dword [rbp - 0x28], 0	      1537	prdbg.c	FUNCTION_39	IF_3
0x4002b11	            0x741f	                            je 0x4002b32	      1537	prdbg.c	FUNCTION_39	IF_3
0x4002b13	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1539	prdbg.c	FUNCTION_39	IF_3	IF_4	CALL_5
0x4002b17	      0xbe00000000	                              mov esi, 0	      1539	prdbg.c	FUNCTION_39	IF_3	IF_4	CALL_5
0x4002b1c	          0x4889c7	                            mov rdi, rax	      1539	prdbg.c	FUNCTION_39	IF_3	IF_4	CALL_5
0x4002b1f	      0xe8d4d7ffff	                    call sym.append_type	      1539	prdbg.c	FUNCTION_39	IF_3	IF_4	CALL_5
0x4002b24	            0x85c0	                           test eax, eax	      1539	prdbg.c	FUNCTION_39	IF_3	IF_4	CALL_5
0x4002b26	            0x750a	                           jne 0x4002b32	      1539	prdbg.c	FUNCTION_39	IF_3	IF_4	CALL_5
0x4002b28	      0xb800000000	                              mov eax, 0	      1540	prdbg.c	FUNCTION_39	IF_3	IF_4
0x4002b2d	      0xe9fd000000	                           jmp 0x4002c2f	      1540	prdbg.c	FUNCTION_39	IF_3	IF_4
0x4002b32	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1544	prdbg.c	FUNCTION_39	IF_5	CALL_6
0x4002b36	      0xbe00000000	                              mov esi, 0	      1544	prdbg.c	FUNCTION_39	IF_5	CALL_6
0x4002b3b	          0x4889c7	                            mov rdi, rax	      1544	prdbg.c	FUNCTION_39	IF_5	CALL_6
0x4002b3e	      0xe8f2d6ffff	                   call sym.prepend_type	      1544	prdbg.c	FUNCTION_39	IF_5	CALL_6
0x4002b43	            0x85c0	                           test eax, eax	      1544	prdbg.c	FUNCTION_39	IF_5	CALL_6
0x4002b45	            0x750a	                           jne 0x4002b51	      1544	prdbg.c	FUNCTION_39	IF_5	CALL_6
0x4002b47	      0xb800000000	                              mov eax, 0	      1545	prdbg.c	FUNCTION_39	IF_5
0x4002b4c	      0xe9de000000	                           jmp 0x4002c2f	      1545	prdbg.c	FUNCTION_39	IF_5
0x4002b51	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4002b55	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4002b59	          0x488b00	                    mov rax, qword [rax]	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4002b5c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4002b60	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4002b64	          0x4889d6	                            mov rsi, rdx	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4002b67	          0x4889c7	                            mov rdi, rax	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4002b6a	      0xe835d9ffff	                call sym.substitute_type	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4002b6f	            0x85c0	                           test eax, eax	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4002b71	            0x750a	                           jne 0x4002b7d	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4002b73	      0xb800000000	                              mov eax, 0	      1549	prdbg.c	FUNCTION_39	IF_6
0x4002b78	      0xe9b2000000	                           jmp 0x4002c2f	      1549	prdbg.c	FUNCTION_39	IF_6
0x4002b7d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1552	prdbg.c	FUNCTION_39	CALL_8
0x4002b81	          0x4889c7	                            mov rdi, rax	      1552	prdbg.c	FUNCTION_39	CALL_8
0x4002b84	      0xe871dbffff	                       call sym.pop_type	      1552	prdbg.c	FUNCTION_39	CALL_8
0x4002b89	        0x488945f8	                mov qword [rbp - 8], rax	      1552	prdbg.c	FUNCTION_39	CALL_8
0x4002b8d	      0x48837df800	                  cmp qword [rbp - 8], 0	      1553	prdbg.c	FUNCTION_39	IF_7
0x4002b92	            0x750a	                           jne 0x4002b9e	      1553	prdbg.c	FUNCTION_39	IF_7
0x4002b94	      0xb800000000	                              mov eax, 0	      1554	prdbg.c	FUNCTION_39	IF_7
0x4002b99	      0xe991000000	                           jmp 0x4002c2f	      1554	prdbg.c	FUNCTION_39	IF_7
0x4002b9e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1558	prdbg.c	FUNCTION_39	IF_8	CALL_9
0x4002ba1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1558	prdbg.c	FUNCTION_39	IF_8	CALL_9
0x4002ba5	            0x89d6	                            mov esi, edx	      1558	prdbg.c	FUNCTION_39	IF_8	CALL_9
0x4002ba7	          0x4889c7	                            mov rdi, rax	      1558	prdbg.c	FUNCTION_39	IF_8	CALL_9
0x4002baa	      0xe8e1efffff	              call sym.pr_fix_visibility	      1558	prdbg.c	FUNCTION_39	IF_8	CALL_9
0x4002baf	            0x85c0	                           test eax, eax	      1558	prdbg.c	FUNCTION_39	IF_8	CALL_9
0x4002bb1	            0x7507	                           jne 0x4002bba	      1558	prdbg.c	FUNCTION_39	IF_8	CALL_9
0x4002bb3	      0xb800000000	                              mov eax, 0	      1559	prdbg.c	FUNCTION_39	IF_8
0x4002bb8	            0xeb75	                           jmp 0x4002c2f	      1559	prdbg.c	FUNCTION_39	IF_8
0x4002bba	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1561	prdbg.c	FUNCTION_39	CALL_10
0x4002bbe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1561	prdbg.c	FUNCTION_39	CALL_10
0x4002bc2	          0x4889d6	                            mov rsi, rdx	      1561	prdbg.c	FUNCTION_39	CALL_10
0x4002bc5	          0x4889c7	                            mov rdi, rax	      1561	prdbg.c	FUNCTION_39	CALL_10
0x4002bc8	      0xe82bd7ffff	                    call sym.append_type	      1561	prdbg.c	FUNCTION_39	CALL_10
0x4002bcd	            0x85c0	                           test eax, eax	      1565	prdbg.c	FUNCTION_39	CALL_14
0x4002bcf	            0x7458	                            je 0x4002c29	      1565	prdbg.c	FUNCTION_39	CALL_14
0x4002bd1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1562	prdbg.c	FUNCTION_39	CALL_11
0x4002bd5	      0xbe00000000	                              mov esi, 0	      1562	prdbg.c	FUNCTION_39	CALL_11
0x4002bda	          0x4889c7	                            mov rdi, rax	      1562	prdbg.c	FUNCTION_39	CALL_11
0x4002bdd	      0xe816d7ffff	                    call sym.append_type	      1562	prdbg.c	FUNCTION_39	CALL_11
0x4002be2	            0x85c0	                           test eax, eax	      1562	prdbg.c	FUNCTION_39	CALL_11
0x4002be4	            0x7443	                            je 0x4002c29	      1562	prdbg.c	FUNCTION_39	CALL_11
0x4002be6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1563	prdbg.c	FUNCTION_39	CALL_12
0x4002bea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1563	prdbg.c	FUNCTION_39	CALL_12
0x4002bee	          0x4889d6	                            mov rsi, rdx	      1563	prdbg.c	FUNCTION_39	CALL_12
0x4002bf1	          0x4889c7	                            mov rdi, rax	      1563	prdbg.c	FUNCTION_39	CALL_12
0x4002bf4	      0xe8ffd6ffff	                    call sym.append_type	      1563	prdbg.c	FUNCTION_39	CALL_12
0x4002bf9	            0x85c0	                           test eax, eax	      1563	prdbg.c	FUNCTION_39	CALL_12
0x4002bfb	            0x742c	                            je 0x4002c29	      1563	prdbg.c	FUNCTION_39	CALL_12
0x4002bfd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1564	prdbg.c	FUNCTION_39	CALL_13
0x4002c01	      0xbe00000000	                              mov esi, 0	      1564	prdbg.c	FUNCTION_39	CALL_13
0x4002c06	          0x4889c7	                            mov rdi, rax	      1564	prdbg.c	FUNCTION_39	CALL_13
0x4002c09	      0xe8ead6ffff	                    call sym.append_type	      1564	prdbg.c	FUNCTION_39	CALL_13
0x4002c0e	            0x85c0	                           test eax, eax	      1564	prdbg.c	FUNCTION_39	CALL_13
0x4002c10	            0x7417	                            je 0x4002c29	      1564	prdbg.c	FUNCTION_39	CALL_13
0x4002c12	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1565	prdbg.c	FUNCTION_39	CALL_14
0x4002c16	          0x4889c7	                            mov rdi, rax	      1565	prdbg.c	FUNCTION_39	CALL_14
0x4002c19	      0xe894daffff	                    call sym.indent_type	      1565	prdbg.c	FUNCTION_39	CALL_14
0x4002c1e	            0x85c0	                           test eax, eax	      1565	prdbg.c	FUNCTION_39	CALL_14
0x4002c20	            0x7407	                            je 0x4002c29	      1565	prdbg.c	FUNCTION_39	CALL_14
0x4002c22	      0xb801000000	                              mov eax, 1	      1565	prdbg.c	FUNCTION_39	CALL_14
0x4002c27	            0xeb05	                           jmp 0x4002c2e	      1561	prdbg.c	FUNCTION_39	CALL_10
0x4002c29	      0xb800000000	                              mov eax, 0	      1565	prdbg.c	FUNCTION_39	CALL_14
0x4002c2e	              0x90	                                     nop	      1561	prdbg.c	FUNCTION_39	CALL_10
0x4002c2f	              0xc9	                                   leave	      1566	prdbg.c	FUNCTION_39
0x4002c30	              0xc3	                                     ret	      1566	prdbg.c	FUNCTION_39
tg_struct_field	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,4:DO,0:ELSE,0:IF,3	61
0x4003acf	              0x55	                                push rbp	      2076	prdbg.c	FUNCTION_63
0x4003ad0	          0x4889e5	                            mov rbp, rsp	      2076	prdbg.c	FUNCTION_63
0x4003ad3	        0x4883ec40	                           sub rsp, 0x40	      2076	prdbg.c	FUNCTION_63
0x4003ad7	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2076	prdbg.c	FUNCTION_63
0x4003adb	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2076	prdbg.c	FUNCTION_63
0x4003adf	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2076	prdbg.c	FUNCTION_63
0x4003ae3	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      2076	prdbg.c	FUNCTION_63
0x4003ae7	        0x448945cc	             mov dword [rbp - 0x34], r8d	      2076	prdbg.c	FUNCTION_63
0x4003aeb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2077	prdbg.c	FUNCTION_63
0x4003aef	        0x488945f0	             mov qword [rbp - 0x10], rax	      2077	prdbg.c	FUNCTION_63
0x4003af3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2080	prdbg.c	FUNCTION_63	CALL_1
0x4003af7	          0x4889c7	                            mov rdi, rax	      2080	prdbg.c	FUNCTION_63	CALL_1
0x4003afa	      0xe8fbcbffff	                       call sym.pop_type	      2080	prdbg.c	FUNCTION_63	CALL_1
0x4003aff	        0x488945f8	                mov qword [rbp - 8], rax	      2080	prdbg.c	FUNCTION_63	CALL_1
0x4003b03	      0x48837df800	                  cmp qword [rbp - 8], 0	      2081	prdbg.c	FUNCTION_63	IF_1
0x4003b08	            0x750a	                           jne 0x4003b14	      2081	prdbg.c	FUNCTION_63	IF_1
0x4003b0a	      0xb800000000	                              mov eax, 0	      2082	prdbg.c	FUNCTION_63	IF_1
0x4003b0f	      0xe98e000000	                           jmp 0x4003ba2	      2082	prdbg.c	FUNCTION_63	IF_1
0x4003b14	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x4003b17	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x4003b1b	            0x89d6	                            mov esi, edx	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x4003b1d	          0x4889c7	                            mov rdi, rax	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x4003b20	      0xe820ffffff	              call sym.tg_fix_visibility	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x4003b25	            0x85c0	                           test eax, eax	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x4003b27	            0x7507	                           jne 0x4003b30	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x4003b29	      0xb800000000	                              mov eax, 0	      2085	prdbg.c	FUNCTION_63	IF_2
0x4003b2e	            0xeb72	                           jmp 0x4003ba2	      2085	prdbg.c	FUNCTION_63	IF_2
0x4003b30	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2088	prdbg.c	FUNCTION_63	IF_3
0x4003b34	           0xfb600	                   movzx eax, byte [rax]	      2088	prdbg.c	FUNCTION_63	IF_3
0x4003b37	            0x84c0	                             test al, al	      2088	prdbg.c	FUNCTION_63	IF_3
0x4003b39	            0x7507	                           jne 0x4003b42	      2088	prdbg.c	FUNCTION_63	IF_3
0x4003b3b	      0xb801000000	                              mov eax, 1	      2089	prdbg.c	FUNCTION_63	IF_3
0x4003b40	            0xeb60	                           jmp 0x4003ba2	      2089	prdbg.c	FUNCTION_63	IF_3
0x4003b42	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b45	            0x89c7	                            mov edi, eax	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b47	      0xe82c150000	                call sym.visibility_name	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b4c	          0x4989c1	                             mov r9, rax	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b4f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2092	prdbg.c	FUNCTION_63
0x4003b53	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2092	prdbg.c	FUNCTION_63
0x4003b57	        0x488b7008	                mov rsi, qword [rax + 8]	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b5b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2092	prdbg.c	FUNCTION_63
0x4003b5f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2092	prdbg.c	FUNCTION_63
0x4003b63	        0x4c8b4020	              mov r8, qword [rax + 0x20]	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b67	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b6b	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b6f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b73	          0x488b00	                    mov rax, qword [rax]	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b76	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b7a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b7e	            0x4151	                                 push r9	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b80	              0x56	                                push rsi	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b81	          0x4d89c1	                              mov r9, r8	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b84	          0x4989f8	                             mov r8, rdi	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b87	      0xbe00000000	                              mov esi, 0	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b8c	          0x4889c7	                            mov rdi, rax	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b8f	      0xb800000000	                              mov eax, 0	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b94	      0xe800000000	                          call 0x4003b99	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b99	        0x4883c410	                           add rsp, 0x10	      2091	prdbg.c	FUNCTION_63	CALL_3
0x4003b9d	      0xb801000000	                              mov eax, 1	      2095	prdbg.c	FUNCTION_63
0x4003ba2	              0xc9	                                   leave	      2096	prdbg.c	FUNCTION_63
0x4003ba3	              0xc3	                                     ret	      2096	prdbg.c	FUNCTION_63
tg_function_parameter	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,7:DO,0:ELSE,0:IF,9	86
0x4004d0e	              0x55	                                push rbp	      2706	prdbg.c	FUNCTION_79
0x4004d0f	          0x4889e5	                            mov rbp, rsp	      2706	prdbg.c	FUNCTION_79
0x4004d12	        0x4883ec30	                           sub rsp, 0x30	      2706	prdbg.c	FUNCTION_79
0x4004d16	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2706	prdbg.c	FUNCTION_79
0x4004d1a	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2706	prdbg.c	FUNCTION_79
0x4004d1e	          0x8955dc	             mov dword [rbp - 0x24], edx	      2706	prdbg.c	FUNCTION_79
0x4004d21	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      2706	prdbg.c	FUNCTION_79
0x4004d25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2707	prdbg.c	FUNCTION_79
0x4004d29	        0x488945f0	             mov qword [rbp - 0x10], rax	      2707	prdbg.c	FUNCTION_79
0x4004d2d	        0x837ddc03	               cmp dword [rbp - 0x24], 3	      2710	prdbg.c	FUNCTION_79	IF_1
0x4004d31	            0x7406	                            je 0x4004d39	      2710	prdbg.c	FUNCTION_79	IF_1
0x4004d33	        0x837ddc04	               cmp dword [rbp - 0x24], 4	      2711	prdbg.c	FUNCTION_79	IF_1
0x4004d37	            0x751a	                           jne 0x4004d53	      2711	prdbg.c	FUNCTION_79	IF_1
0x4004d39	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2713	prdbg.c	FUNCTION_79	IF_1	IF_2	CALL_1
0x4004d3d	          0x4889c7	                            mov rdi, rax	      2713	prdbg.c	FUNCTION_79	IF_1	IF_2	CALL_1
0x4004d40	      0xe849c3ffff	              call sym.pr_reference_type	      2713	prdbg.c	FUNCTION_79	IF_1	IF_2	CALL_1
0x4004d45	            0x85c0	                           test eax, eax	      2713	prdbg.c	FUNCTION_79	IF_1	IF_2	CALL_1
0x4004d47	            0x750a	                           jne 0x4004d53	      2713	prdbg.c	FUNCTION_79	IF_1	IF_2	CALL_1
0x4004d49	      0xb800000000	                              mov eax, 0	      2714	prdbg.c	FUNCTION_79	IF_1	IF_2
0x4004d4e	      0xe9e3000000	                           jmp 0x4004e36	      2714	prdbg.c	FUNCTION_79	IF_1	IF_2
0x4004d53	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2717	prdbg.c	FUNCTION_79	IF_3	CALL_2
0x4004d57	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2717	prdbg.c	FUNCTION_79	IF_3	CALL_2
0x4004d5b	          0x4889d6	                            mov rsi, rdx	      2717	prdbg.c	FUNCTION_79	IF_3	CALL_2
0x4004d5e	          0x4889c7	                            mov rdi, rax	      2717	prdbg.c	FUNCTION_79	IF_3	CALL_2
0x4004d61	      0xe83eb7ffff	                call sym.substitute_type	      2717	prdbg.c	FUNCTION_79	IF_3	CALL_2
0x4004d66	            0x85c0	                           test eax, eax	      2717	prdbg.c	FUNCTION_79	IF_3	CALL_2
0x4004d68	            0x750a	                           jne 0x4004d74	      2717	prdbg.c	FUNCTION_79	IF_3	CALL_2
0x4004d6a	      0xb800000000	                              mov eax, 0	      2718	prdbg.c	FUNCTION_79	IF_3
0x4004d6f	      0xe9c2000000	                           jmp 0x4004e36	      2718	prdbg.c	FUNCTION_79	IF_3
0x4004d74	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2720	prdbg.c	FUNCTION_79	CALL_3
0x4004d78	          0x4889c7	                            mov rdi, rax	      2720	prdbg.c	FUNCTION_79	CALL_3
0x4004d7b	      0xe87ab9ffff	                       call sym.pop_type	      2720	prdbg.c	FUNCTION_79	CALL_3
0x4004d80	        0x488945f8	                mov qword [rbp - 8], rax	      2720	prdbg.c	FUNCTION_79	CALL_3
0x4004d84	      0x48837df800	                  cmp qword [rbp - 8], 0	      2721	prdbg.c	FUNCTION_79	IF_4
0x4004d89	            0x750a	                           jne 0x4004d95	      2721	prdbg.c	FUNCTION_79	IF_4
0x4004d8b	      0xb800000000	                              mov eax, 0	      2722	prdbg.c	FUNCTION_79	IF_4
0x4004d90	      0xe9a1000000	                           jmp 0x4004e36	      2722	prdbg.c	FUNCTION_79	IF_4
0x4004d95	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2724	prdbg.c	FUNCTION_79	IF_5
0x4004d99	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2724	prdbg.c	FUNCTION_79	IF_5
0x4004d9d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2724	prdbg.c	FUNCTION_79	IF_5
0x4004da1	          0x4885c0	                           test rax, rax	      2724	prdbg.c	FUNCTION_79	IF_5
0x4004da4	            0x756e	                           jne 0x4004e14	      2724	prdbg.c	FUNCTION_79	IF_5
0x4004da6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2726	prdbg.c	FUNCTION_79	IF_5	IF_6	CALL_4
0x4004daa	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2726	prdbg.c	FUNCTION_79	IF_5	IF_6	CALL_4
0x4004dad	          0x83f801	                              cmp eax, 1	      2726	prdbg.c	FUNCTION_79	IF_5	IF_6	CALL_4
0x4004db0	            0x741c	                            je 0x4004dce	      2726	prdbg.c	FUNCTION_79	IF_5	IF_6	CALL_4
0x4004db2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2726	prdbg.c	FUNCTION_79	IF_5	IF_6	CALL_4
0x4004db6	      0xbe00000000	                              mov esi, 0	      2726	prdbg.c	FUNCTION_79	IF_5	IF_6	CALL_4
0x4004dbb	          0x4889c7	                            mov rdi, rax	      2726	prdbg.c	FUNCTION_79	IF_5	IF_6	CALL_4
0x4004dbe	      0xe835b5ffff	                    call sym.append_type	      2726	prdbg.c	FUNCTION_79	IF_5	IF_6	CALL_4
0x4004dc3	            0x85c0	                           test eax, eax	      2726	prdbg.c	FUNCTION_79	IF_5	IF_6	CALL_4
0x4004dc5	            0x7507	                           jne 0x4004dce	      2726	prdbg.c	FUNCTION_79	IF_5	IF_6	CALL_4
0x4004dc7	      0xb800000000	                              mov eax, 0	      2727	prdbg.c	FUNCTION_79	IF_5	IF_6
0x4004dcc	            0xeb68	                           jmp 0x4004e36	      2727	prdbg.c	FUNCTION_79	IF_5	IF_6
0x4004dce	        0x837ddc02	               cmp dword [rbp - 0x24], 2	      2729	prdbg.c	FUNCTION_79	IF_5	IF_7
0x4004dd2	            0x7406	                            je 0x4004dda	      2729	prdbg.c	FUNCTION_79	IF_5	IF_7
0x4004dd4	        0x837ddc04	               cmp dword [rbp - 0x24], 4	      2729	prdbg.c	FUNCTION_79	IF_5	IF_7
0x4004dd8	            0x751c	                           jne 0x4004df6	      2729	prdbg.c	FUNCTION_79	IF_5	IF_7
0x4004dda	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2730	prdbg.c	FUNCTION_79	IF_5	IF_7	IF_8	CALL_5
0x4004dde	      0xbe00000000	                              mov esi, 0	      2730	prdbg.c	FUNCTION_79	IF_5	IF_7	IF_8	CALL_5
0x4004de3	          0x4889c7	                            mov rdi, rax	      2730	prdbg.c	FUNCTION_79	IF_5	IF_7	IF_8	CALL_5
0x4004de6	      0xe80db5ffff	                    call sym.append_type	      2730	prdbg.c	FUNCTION_79	IF_5	IF_7	IF_8	CALL_5
0x4004deb	            0x85c0	                           test eax, eax	      2730	prdbg.c	FUNCTION_79	IF_5	IF_7	IF_8	CALL_5
0x4004ded	            0x7507	                           jne 0x4004df6	      2730	prdbg.c	FUNCTION_79	IF_5	IF_7	IF_8	CALL_5
0x4004def	      0xb800000000	                              mov eax, 0	      2731	prdbg.c	FUNCTION_79	IF_5	IF_7	IF_8
0x4004df4	            0xeb40	                           jmp 0x4004e36	      2731	prdbg.c	FUNCTION_79	IF_5	IF_7	IF_8
0x4004df6	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2733	prdbg.c	FUNCTION_79	IF_5	IF_9	CALL_6
0x4004dfa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2733	prdbg.c	FUNCTION_79	IF_5	IF_9	CALL_6
0x4004dfe	          0x4889d6	                            mov rsi, rdx	      2733	prdbg.c	FUNCTION_79	IF_5	IF_9	CALL_6
0x4004e01	          0x4889c7	                            mov rdi, rax	      2733	prdbg.c	FUNCTION_79	IF_5	IF_9	CALL_6
0x4004e04	      0xe8efb4ffff	                    call sym.append_type	      2733	prdbg.c	FUNCTION_79	IF_5	IF_9	CALL_6
0x4004e09	            0x85c0	                           test eax, eax	      2733	prdbg.c	FUNCTION_79	IF_5	IF_9	CALL_6
0x4004e0b	            0x7507	                           jne 0x4004e14	      2733	prdbg.c	FUNCTION_79	IF_5	IF_9	CALL_6
0x4004e0d	      0xb800000000	                              mov eax, 0	      2734	prdbg.c	FUNCTION_79	IF_5	IF_9
0x4004e12	            0xeb22	                           jmp 0x4004e36	      2734	prdbg.c	FUNCTION_79	IF_5	IF_9
0x4004e14	        0x488b45f8	                mov rax, qword [rbp - 8]	      2737	prdbg.c	FUNCTION_79	CALL_7
0x4004e18	          0x4889c7	                            mov rdi, rax	      2737	prdbg.c	FUNCTION_79	CALL_7
0x4004e1b	      0xe800000000	                          call 0x4004e20	      2737	prdbg.c	FUNCTION_79	CALL_7
0x4004e20	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2739	prdbg.c	FUNCTION_79
0x4004e24	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2739	prdbg.c	FUNCTION_79
0x4004e27	          0x8d5001	                      lea edx, [rax + 1]	      2739	prdbg.c	FUNCTION_79
0x4004e2a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2739	prdbg.c	FUNCTION_79
0x4004e2e	          0x895018	             mov dword [rax + 0x18], edx	      2739	prdbg.c	FUNCTION_79
0x4004e31	      0xb801000000	                              mov eax, 1	      2741	prdbg.c	FUNCTION_79
0x4004e36	              0xc9	                                   leave	      2742	prdbg.c	FUNCTION_79
0x4004e37	              0xc3	                                     ret	      2742	prdbg.c	FUNCTION_79
translate_addresses	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,4:DO,0:ELSE,1:IF,1	38
0x40036ac	              0x55	                                push rbp	      1948	prdbg.c	FUNCTION_57
0x40036ad	          0x4889e5	                            mov rbp, rsp	      1948	prdbg.c	FUNCTION_57
0x40036b0	        0x4883ec20	                           sub rsp, 0x20	      1948	prdbg.c	FUNCTION_57
0x40036b4	        0x48897df8	                mov qword [rbp - 8], rdi	      1948	prdbg.c	FUNCTION_57
0x40036b8	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1948	prdbg.c	FUNCTION_57
0x40036bc	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1948	prdbg.c	FUNCTION_57
0x40036c0	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1948	prdbg.c	FUNCTION_57
0x40036c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1949	prdbg.c	FUNCTION_57	CALL_1
0x40036c8	      0xba10000000	                           mov edx, 0x10	      1949	prdbg.c	FUNCTION_57	CALL_1
0x40036cd	      0xbe00000000	                              mov esi, 0	      1949	prdbg.c	FUNCTION_57	CALL_1
0x40036d2	          0x4889c7	                            mov rdi, rax	      1949	prdbg.c	FUNCTION_57	CALL_1
0x40036d5	      0xe800000000	                          call 0x40036da	      1949	prdbg.c	FUNCTION_57	CALL_1
0x40036da	    0x488905000000	            mov qword [0x040036e1], rax 	      1949	prdbg.c	FUNCTION_57	CALL_1
0x40036e1	    0xc70500000000	               mov dword [0x040036eb], 0	      1950	prdbg.c	FUNCTION_57
0x40036eb	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1951	prdbg.c	FUNCTION_57	CALL_2
0x40036ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      1951	prdbg.c	FUNCTION_57	CALL_2
0x40036f3	      0xbe00000000	                              mov esi, 0	      1951	prdbg.c	FUNCTION_57	CALL_2
0x40036f8	          0x4889c7	                            mov rdi, rax	      1951	prdbg.c	FUNCTION_57	CALL_2
0x40036fb	      0xe800000000	                          call 0x4003700	      1951	prdbg.c	FUNCTION_57	CALL_2
0x4003700	    0x8b0500000000	            mov eax, dword [0x04003706] 	      1953	prdbg.c	FUNCTION_57	IF_1
0x4003706	            0x85c0	                           test eax, eax	      1953	prdbg.c	FUNCTION_57	IF_1
0x4003708	            0x751d	                           jne 0x4003727	      1953	prdbg.c	FUNCTION_57	IF_1
0x400370a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1954	prdbg.c	FUNCTION_57	CALL_3
0x400370e	          0x4889c1	                            mov rcx, rax	      1954	prdbg.c	FUNCTION_57	CALL_3
0x4003711	      0xba02000000	                              mov edx, 2	      1954	prdbg.c	FUNCTION_57	CALL_3
0x4003716	      0xbe01000000	                              mov esi, 1	      1954	prdbg.c	FUNCTION_57	CALL_3
0x400371b	      0xbf00000000	                              mov edi, 0	      1954	prdbg.c	FUNCTION_57	CALL_3
0x4003720	      0xe800000000	                          call 0x4003725	      1954	prdbg.c	FUNCTION_57	CALL_3
0x4003725	            0xeb1c	                           jmp 0x4003743	      1957	prdbg.c	FUNCTION_57
0x4003727	    0x8b1500000000	            mov edx, dword [0x0400372d] 	      1956	prdbg.c	FUNCTION_57	CALL_4
0x400372d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1956	prdbg.c	FUNCTION_57	CALL_4
0x4003731	      0xbe00000000	                              mov esi, 0	      1956	prdbg.c	FUNCTION_57	CALL_4
0x4003736	          0x4889c7	                            mov rdi, rax	      1956	prdbg.c	FUNCTION_57	CALL_4
0x4003739	      0xb800000000	                              mov eax, 0	      1956	prdbg.c	FUNCTION_57	CALL_4
0x400373e	      0xe800000000	                          call 0x4003743	      1956	prdbg.c	FUNCTION_57	CALL_4
0x4003743	              0x90	                                     nop	      1957	prdbg.c	FUNCTION_57
0x4003744	              0xc9	                                   leave	      1957	prdbg.c	FUNCTION_57
0x4003745	              0xc3	                                     ret	      1957	prdbg.c	FUNCTION_57
tg_lineno	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,0:DO,0:ELSE,0:IF,0	9
0x400504a	              0x55	                                push rbp	      2800	prdbg.c	FUNCTION_81
0x400504b	          0x4889e5	                            mov rbp, rsp	      2800	prdbg.c	FUNCTION_81
0x400504e	        0x48897df8	                mov qword [rbp - 8], rdi	      2800	prdbg.c	FUNCTION_81
0x4005052	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2800	prdbg.c	FUNCTION_81
0x4005056	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2800	prdbg.c	FUNCTION_81
0x400505a	        0x48894de0	             mov qword [rbp - 0x20], rcx	      2800	prdbg.c	FUNCTION_81
0x400505e	      0xb801000000	                              mov eax, 1	      2801	prdbg.c	FUNCTION_81
0x4005063	              0x5d	                                 pop rbp	      2802	prdbg.c	FUNCTION_81
0x4005064	              0xc3	                                     ret	      2802	prdbg.c	FUNCTION_81
pr_end_block	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,3:DO,0:ELSE,0:IF,0	38
0x4003539	              0x55	                                push rbp	      1888	prdbg.c	FUNCTION_54
0x400353a	          0x4889e5	                            mov rbp, rsp	      1888	prdbg.c	FUNCTION_54
0x400353d	        0x4883ec40	                           sub rsp, 0x40	      1888	prdbg.c	FUNCTION_54
0x4003541	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1888	prdbg.c	FUNCTION_54
0x4003545	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1888	prdbg.c	FUNCTION_54
0x4003549	    0x64488b042528	                mov rax, qword fs:[0x28]	      1888	prdbg.c	FUNCTION_54
0x4003552	        0x488945f8	                mov qword [rbp - 8], rax	      1888	prdbg.c	FUNCTION_54
0x4003556	            0x31c0	                            xor eax, eax	      1888	prdbg.c	FUNCTION_54
0x4003558	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1889	prdbg.c	FUNCTION_54
0x400355c	        0x488945d8	             mov qword [rbp - 0x28], rax	      1889	prdbg.c	FUNCTION_54
0x4003560	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1892	prdbg.c	FUNCTION_54
0x4003564	          0x8b4008	                mov eax, dword [rax + 8]	      1892	prdbg.c	FUNCTION_54
0x4003567	          0x8d50fe	                      lea edx, [rax - 2]	      1892	prdbg.c	FUNCTION_54
0x400356a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1892	prdbg.c	FUNCTION_54
0x400356e	          0x895008	                mov dword [rax + 8], edx	      1892	prdbg.c	FUNCTION_54
0x4003571	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1894	prdbg.c	FUNCTION_54	CALL_1
0x4003575	          0x4889c7	                            mov rdi, rax	      1894	prdbg.c	FUNCTION_54	CALL_1
0x4003578	      0xe8eacbffff	                         call sym.indent	      1894	prdbg.c	FUNCTION_54	CALL_1
0x400357d	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      1895	prdbg.c	FUNCTION_54	CALL_2
0x4003581	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1895	prdbg.c	FUNCTION_54	CALL_2
0x4003585	      0xb901000000	                              mov ecx, 1	      1895	prdbg.c	FUNCTION_54	CALL_2
0x400358a	      0xba01000000	                              mov edx, 1	      1895	prdbg.c	FUNCTION_54	CALL_2
0x400358f	          0x4889c7	                            mov rdi, rax	      1895	prdbg.c	FUNCTION_54	CALL_2
0x4003592	      0xe8ced1ffff	                      call sym.print_vma	      1895	prdbg.c	FUNCTION_54	CALL_2
0x4003597	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1896	prdbg.c	FUNCTION_54	CALL_3
0x400359b	          0x488b00	                    mov rax, qword [rax]	      1896	prdbg.c	FUNCTION_54	CALL_3
0x400359e	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1896	prdbg.c	FUNCTION_54	CALL_3
0x40035a2	      0xbe00000000	                              mov esi, 0	      1896	prdbg.c	FUNCTION_54	CALL_3
0x40035a7	          0x4889c7	                            mov rdi, rax	      1896	prdbg.c	FUNCTION_54	CALL_3
0x40035aa	      0xb800000000	                              mov eax, 0	      1896	prdbg.c	FUNCTION_54	CALL_3
0x40035af	      0xe800000000	                          call 0x40035b4	      1896	prdbg.c	FUNCTION_54	CALL_3
0x40035b4	      0xb801000000	                              mov eax, 1	      1898	prdbg.c	FUNCTION_54
0x40035b9	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1899	prdbg.c	FUNCTION_54
0x40035bd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1899	prdbg.c	FUNCTION_54
0x40035c6	            0x7405	                            je 0x40035cd	      1899	prdbg.c	FUNCTION_54
0x40035c8	      0xe800000000	                          call 0x40035cd	      1899	prdbg.c	FUNCTION_54
0x40035cd	              0xc9	                                   leave	      1899	prdbg.c	FUNCTION_54
0x40035ce	              0xc3	                                     ret	      1899	prdbg.c	FUNCTION_54
append_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,5:DO,0:ELSE,0:IF,1	56
0x40002f8	              0x55	                                push rbp	       374	prdbg.c	FUNCTION_5
0x40002f9	          0x4889e5	                            mov rbp, rsp	       374	prdbg.c	FUNCTION_5
0x40002fc	            0x4154	                                push r12	       374	prdbg.c	FUNCTION_5
0x40002fe	              0x53	                                push rbx	       374	prdbg.c	FUNCTION_5
0x40002ff	        0x4883ec20	                           sub rsp, 0x20	       374	prdbg.c	FUNCTION_5
0x4000303	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       374	prdbg.c	FUNCTION_5
0x4000307	        0x488975d0	             mov qword [rbp - 0x30], rsi	       374	prdbg.c	FUNCTION_5
0x400030b	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       377	prdbg.c	FUNCTION_5	IF_1
0x4000310	            0x750a	                           jne 0x400031c	       377	prdbg.c	FUNCTION_5	IF_1
0x4000312	      0xb800000000	                              mov eax, 0	       378	prdbg.c	FUNCTION_5	IF_1
0x4000317	      0xe99d000000	                           jmp 0x40003b9	       378	prdbg.c	FUNCTION_5	IF_1
0x400031c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       380	prdbg.c	FUNCTION_5	CALL_1
0x4000320	        0x488b4010	            mov rax, qword [rax + 0x10] 	       380	prdbg.c	FUNCTION_5	CALL_1
0x4000324	          0x4885c0	                           test rax, rax	       380	prdbg.c	FUNCTION_5	CALL_1
0x4000327	            0x7519	                           jne 0x4000342	       380	prdbg.c	FUNCTION_5	CALL_1
0x4000329	      0xb900000000	                              mov ecx, 0	       380	prdbg.c	FUNCTION_5	CALL_1
0x400032e	      0xba7c010000	                          mov edx, 0x17c	       380	prdbg.c	FUNCTION_5	CALL_1
0x4000333	      0xbe00000000	                              mov esi, 0	       380	prdbg.c	FUNCTION_5	CALL_1
0x4000338	      0xbf00000000	                              mov edi, 0	       380	prdbg.c	FUNCTION_5	CALL_1
0x400033d	      0xe800000000	                          call 0x4000342	       380	prdbg.c	FUNCTION_5	CALL_1
0x4000342	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       382	prdbg.c	FUNCTION_5	CALL_2
0x4000346	        0x488b4010	            mov rax, qword [rax + 0x10] 	       382	prdbg.c	FUNCTION_5	CALL_2
0x400034a	        0x488b4008	                mov rax, qword [rax + 8]	       382	prdbg.c	FUNCTION_5	CALL_2
0x400034e	          0x4889c7	                            mov rdi, rax	       382	prdbg.c	FUNCTION_5	CALL_2
0x4000351	      0xe800000000	                          call 0x4000356	       382	prdbg.c	FUNCTION_5	CALL_2
0x4000356	          0x8945ec	             mov dword [rbp - 0x14], eax	       382	prdbg.c	FUNCTION_5	CALL_2
0x4000359	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       383	prdbg.c	FUNCTION_5	CALL_3
0x400035d	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       383	prdbg.c	FUNCTION_5	CALL_3
0x4000361	        0x448b65ec	            mov r12d, dword [rbp - 0x14]	       384	prdbg.c	FUNCTION_5	CALL_4
0x4000365	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       384	prdbg.c	FUNCTION_5	CALL_4
0x4000369	          0x4889c7	                            mov rdi, rax	       384	prdbg.c	FUNCTION_5	CALL_4
0x400036c	      0xe800000000	                          call 0x4000371	       384	prdbg.c	FUNCTION_5	CALL_4
0x4000371	          0x4c01e0	                            add rax, r12	       384	prdbg.c	FUNCTION_5	CALL_4
0x4000374	        0x488d5001	                      lea rdx, [rax + 1]	       383	prdbg.c	FUNCTION_5	CALL_3
0x4000378	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       383	prdbg.c	FUNCTION_5	CALL_3
0x400037c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       383	prdbg.c	FUNCTION_5	CALL_3
0x4000380	        0x488b4008	                mov rax, qword [rax + 8]	       383	prdbg.c	FUNCTION_5	CALL_3
0x4000384	          0x4889d6	                            mov rsi, rdx	       383	prdbg.c	FUNCTION_5	CALL_3
0x4000387	          0x4889c7	                            mov rdi, rax	       383	prdbg.c	FUNCTION_5	CALL_3
0x400038a	      0xe800000000	                          call 0x400038f	       383	prdbg.c	FUNCTION_5	CALL_3
0x400038f	        0x48894308	                mov qword [rbx + 8], rax	       383	prdbg.c	FUNCTION_5	CALL_3
0x4000393	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       385	prdbg.c	FUNCTION_5	CALL_5
0x4000397	        0x488b4010	            mov rax, qword [rax + 0x10] 	       385	prdbg.c	FUNCTION_5	CALL_5
0x400039b	        0x488b5008	                mov rdx, qword [rax + 8]	       385	prdbg.c	FUNCTION_5	CALL_5
0x400039f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       385	prdbg.c	FUNCTION_5	CALL_5
0x40003a2	          0x4801c2	                            add rdx, rax	       385	prdbg.c	FUNCTION_5	CALL_5
0x40003a5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       385	prdbg.c	FUNCTION_5	CALL_5
0x40003a9	          0x4889c6	                            mov rsi, rax	       385	prdbg.c	FUNCTION_5	CALL_5
0x40003ac	          0x4889d7	                            mov rdi, rdx	       385	prdbg.c	FUNCTION_5	CALL_5
0x40003af	      0xe800000000	                          call 0x40003b4	       385	prdbg.c	FUNCTION_5	CALL_5
0x40003b4	      0xb801000000	                              mov eax, 1	       387	prdbg.c	FUNCTION_5
0x40003b9	        0x4883c420	                           add rsp, 0x20	       388	prdbg.c	FUNCTION_5
0x40003bd	              0x5b	                                 pop rbx	       388	prdbg.c	FUNCTION_5
0x40003be	            0x415c	                                 pop r12	       388	prdbg.c	FUNCTION_5
0x40003c0	              0x5d	                                 pop rbp	       388	prdbg.c	FUNCTION_5
0x40003c1	              0xc3	                                     ret	       388	prdbg.c	FUNCTION_5
tg_int_constant	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,3:DO,0:ELSE,0:IF,0	38
0x400480d	              0x55	                                push rbp	      2541	prdbg.c	FUNCTION_74
0x400480e	          0x4889e5	                            mov rbp, rsp	      2541	prdbg.c	FUNCTION_74
0x4004811	        0x4883ec50	                           sub rsp, 0x50	      2541	prdbg.c	FUNCTION_74
0x4004815	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2541	prdbg.c	FUNCTION_74
0x4004819	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2541	prdbg.c	FUNCTION_74
0x400481d	        0x488955b8	             mov qword [rbp - 0x48], rdx	      2541	prdbg.c	FUNCTION_74
0x4004821	    0x64488b042528	                mov rax, qword fs:[0x28]	      2541	prdbg.c	FUNCTION_74
0x400482a	        0x488945f8	                mov qword [rbp - 8], rax	      2541	prdbg.c	FUNCTION_74
0x400482e	            0x31c0	                            xor eax, eax	      2541	prdbg.c	FUNCTION_74
0x4004830	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2542	prdbg.c	FUNCTION_74
0x4004834	        0x488945d8	             mov qword [rbp - 0x28], rax	      2542	prdbg.c	FUNCTION_74
0x4004838	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2545	prdbg.c	FUNCTION_74	CALL_1
0x400483c	          0x4889c7	                            mov rdi, rax	      2545	prdbg.c	FUNCTION_74	CALL_1
0x400483f	      0xe823b9ffff	                         call sym.indent	      2545	prdbg.c	FUNCTION_74	CALL_1
0x4004844	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      2546	prdbg.c	FUNCTION_74	CALL_2
0x4004848	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2546	prdbg.c	FUNCTION_74	CALL_2
0x400484c	      0xb900000000	                              mov ecx, 0	      2546	prdbg.c	FUNCTION_74	CALL_2
0x4004851	      0xba00000000	                              mov edx, 0	      2546	prdbg.c	FUNCTION_74	CALL_2
0x4004856	          0x4889c7	                            mov rdi, rax	      2546	prdbg.c	FUNCTION_74	CALL_2
0x4004859	      0xe807bfffff	                      call sym.print_vma	      2546	prdbg.c	FUNCTION_74	CALL_2
0x400485e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2547	prdbg.c	FUNCTION_74	CALL_3
0x4004862	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      2547	prdbg.c	FUNCTION_74	CALL_3
0x4004866	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2547	prdbg.c	FUNCTION_74	CALL_3
0x400486a	          0x488b00	                    mov rax, qword [rax]	      2547	prdbg.c	FUNCTION_74	CALL_3
0x400486d	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      2547	prdbg.c	FUNCTION_74	CALL_3
0x4004871	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2547	prdbg.c	FUNCTION_74	CALL_3
0x4004875	          0x4989f0	                             mov r8, rsi	      2547	prdbg.c	FUNCTION_74	CALL_3
0x4004878	      0xbe00000000	                              mov esi, 0	      2547	prdbg.c	FUNCTION_74	CALL_3
0x400487d	          0x4889c7	                            mov rdi, rax	      2547	prdbg.c	FUNCTION_74	CALL_3
0x4004880	      0xb800000000	                              mov eax, 0	      2547	prdbg.c	FUNCTION_74	CALL_3
0x4004885	      0xe800000000	                          call 0x400488a	      2547	prdbg.c	FUNCTION_74	CALL_3
0x400488a	      0xb801000000	                              mov eax, 1	      2549	prdbg.c	FUNCTION_74
0x400488f	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2550	prdbg.c	FUNCTION_74
0x4004893	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2550	prdbg.c	FUNCTION_74
0x400489c	            0x7405	                            je 0x40048a3	      2550	prdbg.c	FUNCTION_74
0x400489e	      0xe800000000	                          call 0x40048a3	      2550	prdbg.c	FUNCTION_74
0x40048a3	              0xc9	                                   leave	      2550	prdbg.c	FUNCTION_74
0x40048a4	              0xc3	                                     ret	      2550	prdbg.c	FUNCTION_74
pr_class_method_variant	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,20:DO,0:ELSE,1:IF,14	199
0x400276f	              0x55	                                push rbp	      1444	prdbg.c	FUNCTION_38
0x4002770	          0x4889e5	                            mov rbp, rsp	      1444	prdbg.c	FUNCTION_38
0x4002773	        0x4883ec70	                           sub rsp, 0x70	      1444	prdbg.c	FUNCTION_38
0x4002777	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1444	prdbg.c	FUNCTION_38
0x400277b	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1444	prdbg.c	FUNCTION_38
0x400277f	          0x8955ac	             mov dword [rbp - 0x54], edx	      1444	prdbg.c	FUNCTION_38
0x4002782	          0x894da8	             mov dword [rbp - 0x58], ecx	      1444	prdbg.c	FUNCTION_38
0x4002785	        0x448945a4	             mov dword [rbp - 0x5c], r8d	      1444	prdbg.c	FUNCTION_38
0x4002789	        0x4c894d98	              mov qword [rbp - 0x68], r9	      1444	prdbg.c	FUNCTION_38
0x400278d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1444	prdbg.c	FUNCTION_38
0x4002796	        0x488945f8	                mov qword [rbp - 8], rax	      1444	prdbg.c	FUNCTION_38
0x400279a	            0x31c0	                            xor eax, eax	      1444	prdbg.c	FUNCTION_38
0x400279c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1445	prdbg.c	FUNCTION_38
0x40027a0	        0x488945d0	             mov qword [rbp - 0x30], rax	      1445	prdbg.c	FUNCTION_38
0x40027a4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40027a8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40027ac	          0x4885c0	                           test rax, rax	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40027af	            0x7519	                           jne 0x40027ca	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40027b1	      0xb900000000	                              mov ecx, 0	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40027b6	      0xbaa9050000	                          mov edx, 0x5a9	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40027bb	      0xbe00000000	                              mov esi, 0	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40027c0	      0xbf00000000	                              mov edi, 0	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40027c5	      0xe800000000	                          call 0x40027ca	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40027ca	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1450	prdbg.c	FUNCTION_38	CALL_2
0x40027ce	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1450	prdbg.c	FUNCTION_38	CALL_2
0x40027d2	          0x488b00	                    mov rax, qword [rax]	      1450	prdbg.c	FUNCTION_38	CALL_2
0x40027d5	          0x4885c0	                           test rax, rax	      1450	prdbg.c	FUNCTION_38	CALL_2
0x40027d8	            0x7519	                           jne 0x40027f3	      1450	prdbg.c	FUNCTION_38	CALL_2
0x40027da	      0xb900000000	                              mov ecx, 0	      1450	prdbg.c	FUNCTION_38	CALL_2
0x40027df	      0xbaaa050000	                          mov edx, 0x5aa	      1450	prdbg.c	FUNCTION_38	CALL_2
0x40027e4	      0xbe00000000	                              mov esi, 0	      1450	prdbg.c	FUNCTION_38	CALL_2
0x40027e9	      0xbf00000000	                              mov edi, 0	      1450	prdbg.c	FUNCTION_38	CALL_2
0x40027ee	      0xe800000000	                          call 0x40027f3	      1450	prdbg.c	FUNCTION_38	CALL_2
0x40027f3	        0x837da400	               cmp dword [rbp - 0x5c], 0	      1453	prdbg.c	FUNCTION_38	IF_1
0x40027f7	            0x741f	                            je 0x4002818	      1453	prdbg.c	FUNCTION_38	IF_1
0x40027f9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1455	prdbg.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x40027fd	      0xbe00000000	                              mov esi, 0	      1455	prdbg.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x4002802	          0x4889c7	                            mov rdi, rax	      1455	prdbg.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x4002805	      0xe8eedaffff	                    call sym.append_type	      1455	prdbg.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x400280a	            0x85c0	                           test eax, eax	      1455	prdbg.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x400280c	            0x750a	                           jne 0x4002818	      1455	prdbg.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x400280e	      0xb800000000	                              mov eax, 0	      1456	prdbg.c	FUNCTION_38	IF_1	IF_2
0x4002813	      0xe91c020000	                           jmp 0x4002a34	      1456	prdbg.c	FUNCTION_38	IF_1	IF_2
0x4002818	        0x837da800	               cmp dword [rbp - 0x58], 0	      1458	prdbg.c	FUNCTION_38	IF_3
0x400281c	            0x741f	                            je 0x400283d	      1458	prdbg.c	FUNCTION_38	IF_3
0x400281e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1460	prdbg.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4002822	      0xbe00000000	                              mov esi, 0	      1460	prdbg.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4002827	          0x4889c7	                            mov rdi, rax	      1460	prdbg.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x400282a	      0xe8c9daffff	                    call sym.append_type	      1460	prdbg.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x400282f	            0x85c0	                           test eax, eax	      1460	prdbg.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4002831	            0x750a	                           jne 0x400283d	      1460	prdbg.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4002833	      0xb800000000	                              mov eax, 0	      1461	prdbg.c	FUNCTION_38	IF_3	IF_4
0x4002838	      0xe9f7010000	                           jmp 0x4002a34	      1461	prdbg.c	FUNCTION_38	IF_3	IF_4
0x400283d	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4002841	            0x7414	                            je 0x4002857	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4002843	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1467	prdbg.c	FUNCTION_38	IF_5
0x4002847	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1467	prdbg.c	FUNCTION_38	IF_5
0x400284b	          0x488b00	                    mov rax, qword [rax]	      1467	prdbg.c	FUNCTION_38	IF_5
0x400284e	          0x488b00	                    mov rax, qword [rax]	      1467	prdbg.c	FUNCTION_38	IF_5
0x4002851	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4002855	            0xeb0f	                           jmp 0x4002866	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4002857	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	prdbg.c	FUNCTION_38	IF_5
0x400285b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1468	prdbg.c	FUNCTION_38	IF_5
0x400285f	          0x488b00	                    mov rax, qword [rax]	      1468	prdbg.c	FUNCTION_38	IF_5
0x4002862	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4002866	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x400286a	          0x4889c6	                            mov rsi, rax	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x400286d	          0x4889d7	                            mov rdi, rdx	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4002870	      0xe82fdcffff	                call sym.substitute_type	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4002875	            0x85c0	                           test eax, eax	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4002877	            0x750a	                           jne 0x4002883	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4002879	      0xb800000000	                              mov eax, 0	      1469	prdbg.c	FUNCTION_38	IF_5
0x400287e	      0xe9b1010000	                           jmp 0x4002a34	      1469	prdbg.c	FUNCTION_38	IF_5
0x4002883	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1472	prdbg.c	FUNCTION_38	CALL_6
0x4002887	          0x4889c7	                            mov rdi, rax	      1472	prdbg.c	FUNCTION_38	CALL_6
0x400288a	      0xe86bdeffff	                       call sym.pop_type	      1472	prdbg.c	FUNCTION_38	CALL_6
0x400288f	        0x488945d8	             mov qword [rbp - 0x28], rax	      1472	prdbg.c	FUNCTION_38	CALL_6
0x4002893	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1473	prdbg.c	FUNCTION_38	IF_6
0x4002898	            0x750a	                           jne 0x40028a4	      1473	prdbg.c	FUNCTION_38	IF_6
0x400289a	      0xb800000000	                              mov eax, 0	      1474	prdbg.c	FUNCTION_38	IF_6
0x400289f	      0xe990010000	                           jmp 0x4002a34	      1474	prdbg.c	FUNCTION_38	IF_6
0x40028a4	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1477	prdbg.c	FUNCTION_38	IF_7
0x40028a8	            0x750a	                           jne 0x40028b4	      1477	prdbg.c	FUNCTION_38	IF_7
0x40028aa	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1478	prdbg.c	FUNCTION_38	IF_7
0x40028b2	            0xeb21	                           jmp 0x40028d5	      1478	prdbg.c	FUNCTION_38	IF_7
0x40028b4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1481	prdbg.c	FUNCTION_38	ELSE_1	CALL_7
0x40028b8	          0x4889c7	                            mov rdi, rax	      1481	prdbg.c	FUNCTION_38	ELSE_1	CALL_7
0x40028bb	      0xe83adeffff	                       call sym.pop_type	      1481	prdbg.c	FUNCTION_38	ELSE_1	CALL_7
0x40028c0	        0x488945c8	             mov qword [rbp - 0x38], rax	      1481	prdbg.c	FUNCTION_38	ELSE_1	CALL_7
0x40028c4	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1482	prdbg.c	FUNCTION_38	ELSE_1	IF_8
0x40028c9	            0x750a	                           jne 0x40028d5	      1482	prdbg.c	FUNCTION_38	ELSE_1	IF_8
0x40028cb	      0xb800000000	                              mov eax, 0	      1483	prdbg.c	FUNCTION_38	ELSE_1	IF_8
0x40028d0	      0xe95f010000	                           jmp 0x4002a34	      1483	prdbg.c	FUNCTION_38	ELSE_1	IF_8
0x40028d5	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1488	prdbg.c	FUNCTION_38	IF_9	CALL_8
0x40028d8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1488	prdbg.c	FUNCTION_38	IF_9	CALL_8
0x40028dc	            0x89d6	                            mov esi, edx	      1488	prdbg.c	FUNCTION_38	IF_9	CALL_8
0x40028de	          0x4889c7	                            mov rdi, rax	      1488	prdbg.c	FUNCTION_38	IF_9	CALL_8
0x40028e1	      0xe8aaf2ffff	              call sym.pr_fix_visibility	      1488	prdbg.c	FUNCTION_38	IF_9	CALL_8
0x40028e6	            0x85c0	                           test eax, eax	      1488	prdbg.c	FUNCTION_38	IF_9	CALL_8
0x40028e8	            0x750a	                           jne 0x40028f4	      1488	prdbg.c	FUNCTION_38	IF_9	CALL_8
0x40028ea	      0xb800000000	                              mov eax, 0	      1489	prdbg.c	FUNCTION_38	IF_9
0x40028ef	      0xe940010000	                           jmp 0x4002a34	      1489	prdbg.c	FUNCTION_38	IF_9
0x40028f4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1491	prdbg.c	FUNCTION_38	IF_10	CALL_9
0x40028f8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1491	prdbg.c	FUNCTION_38	IF_10	CALL_9
0x40028fc	          0x4889d6	                            mov rsi, rdx	      1491	prdbg.c	FUNCTION_38	IF_10	CALL_9
0x40028ff	          0x4889c7	                            mov rdi, rax	      1491	prdbg.c	FUNCTION_38	IF_10	CALL_9
0x4002902	      0xe8f1d9ffff	                    call sym.append_type	      1491	prdbg.c	FUNCTION_38	IF_10	CALL_9
0x4002907	            0x85c0	                           test eax, eax	      1491	prdbg.c	FUNCTION_38	IF_10	CALL_9
0x4002909	            0x7441	                            je 0x400294c	      1491	prdbg.c	FUNCTION_38	IF_10	CALL_9
0x400290b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1492	prdbg.c	FUNCTION_38	IF_10	CALL_10
0x400290f	      0xbe00000000	                              mov esi, 0	      1492	prdbg.c	FUNCTION_38	IF_10	CALL_10
0x4002914	          0x4889c7	                            mov rdi, rax	      1492	prdbg.c	FUNCTION_38	IF_10	CALL_10
0x4002917	      0xe8dcd9ffff	                    call sym.append_type	      1492	prdbg.c	FUNCTION_38	IF_10	CALL_10
0x400291c	            0x85c0	                           test eax, eax	      1492	prdbg.c	FUNCTION_38	IF_10	CALL_10
0x400291e	            0x742c	                            je 0x400294c	      1492	prdbg.c	FUNCTION_38	IF_10	CALL_10
0x4002920	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1493	prdbg.c	FUNCTION_38	IF_10	CALL_11
0x4002924	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1493	prdbg.c	FUNCTION_38	IF_10	CALL_11
0x4002928	          0x4889d6	                            mov rsi, rdx	      1493	prdbg.c	FUNCTION_38	IF_10	CALL_11
0x400292b	          0x4889c7	                            mov rdi, rax	      1493	prdbg.c	FUNCTION_38	IF_10	CALL_11
0x400292e	      0xe8c5d9ffff	                    call sym.append_type	      1493	prdbg.c	FUNCTION_38	IF_10	CALL_11
0x4002933	            0x85c0	                           test eax, eax	      1493	prdbg.c	FUNCTION_38	IF_10	CALL_11
0x4002935	            0x7415	                            je 0x400294c	      1493	prdbg.c	FUNCTION_38	IF_10	CALL_11
0x4002937	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1494	prdbg.c	FUNCTION_38	IF_10	CALL_12
0x400293b	      0xbe00000000	                              mov esi, 0	      1494	prdbg.c	FUNCTION_38	IF_10	CALL_12
0x4002940	          0x4889c7	                            mov rdi, rax	      1494	prdbg.c	FUNCTION_38	IF_10	CALL_12
0x4002943	      0xe8b0d9ffff	                    call sym.append_type	      1494	prdbg.c	FUNCTION_38	IF_10	CALL_12
0x4002948	            0x85c0	                           test eax, eax	      1494	prdbg.c	FUNCTION_38	IF_10	CALL_12
0x400294a	            0x750a	                           jne 0x4002956	      1494	prdbg.c	FUNCTION_38	IF_10	CALL_12
0x400294c	      0xb800000000	                              mov eax, 0	      1495	prdbg.c	FUNCTION_38	IF_10
0x4002951	      0xe9de000000	                           jmp 0x4002a34	      1495	prdbg.c	FUNCTION_38	IF_10
0x4002956	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1496	prdbg.c	FUNCTION_38	IF_11
0x400295a	            0x750b	                           jne 0x4002967	      1496	prdbg.c	FUNCTION_38	IF_11
0x400295c	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      1496	prdbg.c	FUNCTION_38	IF_11
0x4002961	     0xf849b000000	                            je 0x4002a02	      1496	prdbg.c	FUNCTION_38	IF_11
0x4002967	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1500	prdbg.c	FUNCTION_38	IF_11	IF_12
0x400296b	            0x7448	                            je 0x40029b5	      1500	prdbg.c	FUNCTION_38	IF_11	IF_12
0x400296d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1502	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_13
0x4002971	      0xbe00000000	                              mov esi, 0	      1502	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_13
0x4002976	          0x4889c7	                            mov rdi, rax	      1502	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_13
0x4002979	      0xe87ad9ffff	                    call sym.append_type	      1502	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_13
0x400297e	            0x85c0	                           test eax, eax	      1502	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_13
0x4002980	            0x742c	                            je 0x40029ae	      1502	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_13
0x4002982	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1503	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_14
0x4002986	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1503	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_14
0x400298a	          0x4889d6	                            mov rsi, rdx	      1503	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_14
0x400298d	          0x4889c7	                            mov rdi, rax	      1503	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_14
0x4002990	      0xe863d9ffff	                    call sym.append_type	      1503	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_14
0x4002995	            0x85c0	                           test eax, eax	      1503	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_14
0x4002997	            0x7415	                            je 0x40029ae	      1503	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_14
0x4002999	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1504	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_15
0x400299d	      0xbe00000000	                              mov esi, 0	      1504	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_15
0x40029a2	          0x4889c7	                            mov rdi, rax	      1504	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_15
0x40029a5	      0xe84ed9ffff	                    call sym.append_type	      1504	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_15
0x40029aa	            0x85c0	                           test eax, eax	      1504	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_15
0x40029ac	            0x7507	                           jne 0x40029b5	      1504	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_15
0x40029ae	      0xb800000000	                              mov eax, 0	      1505	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13
0x40029b3	            0xeb7f	                           jmp 0x4002a34	      1505	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13
0x40029b5	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      1507	prdbg.c	FUNCTION_38	IF_11	CALL_16
0x40029b9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1507	prdbg.c	FUNCTION_38	IF_11	CALL_16
0x40029bd	      0xb900000000	                              mov ecx, 0	      1507	prdbg.c	FUNCTION_38	IF_11	CALL_16
0x40029c2	      0xba01000000	                              mov edx, 1	      1507	prdbg.c	FUNCTION_38	IF_11	CALL_16
0x40029c7	          0x4889c7	                            mov rdi, rax	      1507	prdbg.c	FUNCTION_38	IF_11	CALL_16
0x40029ca	      0xe896ddffff	                      call sym.print_vma	      1507	prdbg.c	FUNCTION_38	IF_11	CALL_16
0x40029cf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1508	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_17
0x40029d3	      0xbe00000000	                              mov esi, 0	      1508	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_17
0x40029d8	          0x4889c7	                            mov rdi, rax	      1508	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_17
0x40029db	      0xe818d9ffff	                    call sym.append_type	      1508	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_17
0x40029e0	            0x85c0	                           test eax, eax	      1508	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_17
0x40029e2	            0x7417	                            je 0x40029fb	      1508	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_17
0x40029e4	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1509	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_18
0x40029e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1509	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_18
0x40029ec	          0x4889d6	                            mov rsi, rdx	      1509	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_18
0x40029ef	          0x4889c7	                            mov rdi, rax	      1509	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_18
0x40029f2	      0xe801d9ffff	                    call sym.append_type	      1509	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_18
0x40029f7	            0x85c0	                           test eax, eax	      1509	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_18
0x40029f9	            0x7507	                           jne 0x4002a02	      1509	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_18
0x40029fb	      0xb800000000	                              mov eax, 0	      1510	prdbg.c	FUNCTION_38	IF_11	IF_14
0x4002a00	            0xeb32	                           jmp 0x4002a34	      1510	prdbg.c	FUNCTION_38	IF_11	IF_14
0x4002a02	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1513	prdbg.c	FUNCTION_38	CALL_19
0x4002a06	      0xbe00000000	                              mov esi, 0	      1513	prdbg.c	FUNCTION_38	CALL_19
0x4002a0b	          0x4889c7	                            mov rdi, rax	      1513	prdbg.c	FUNCTION_38	CALL_19
0x4002a0e	      0xe8e5d8ffff	                    call sym.append_type	      1513	prdbg.c	FUNCTION_38	CALL_19
0x4002a13	            0x85c0	                           test eax, eax	      1514	prdbg.c	FUNCTION_38	CALL_20
0x4002a15	            0x7417	                            je 0x4002a2e	      1514	prdbg.c	FUNCTION_38	CALL_20
0x4002a17	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1514	prdbg.c	FUNCTION_38	CALL_20
0x4002a1b	          0x4889c7	                            mov rdi, rax	      1514	prdbg.c	FUNCTION_38	CALL_20
0x4002a1e	      0xe88fdcffff	                    call sym.indent_type	      1514	prdbg.c	FUNCTION_38	CALL_20
0x4002a23	            0x85c0	                           test eax, eax	      1514	prdbg.c	FUNCTION_38	CALL_20
0x4002a25	            0x7407	                            je 0x4002a2e	      1514	prdbg.c	FUNCTION_38	CALL_20
0x4002a27	      0xb801000000	                              mov eax, 1	      1514	prdbg.c	FUNCTION_38	CALL_20
0x4002a2c	            0xeb05	                           jmp 0x4002a33	      1513	prdbg.c	FUNCTION_38	CALL_19
0x4002a2e	      0xb800000000	                              mov eax, 0	      1514	prdbg.c	FUNCTION_38	CALL_20
0x4002a33	              0x90	                                     nop	      1513	prdbg.c	FUNCTION_38	CALL_19
0x4002a34	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1515	prdbg.c	FUNCTION_38
0x4002a38	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1515	prdbg.c	FUNCTION_38
0x4002a41	            0x7405	                            je 0x4002a48	      1515	prdbg.c	FUNCTION_38
0x4002a43	      0xe800000000	                          call 0x4002a48	      1515	prdbg.c	FUNCTION_38
0x4002a48	              0xc9	                                   leave	      1515	prdbg.c	FUNCTION_38
0x4002a49	              0xc3	                                     ret	      1515	prdbg.c	FUNCTION_38
pr_start_compilation_unit	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,2:DO,0:ELSE,0:IF,0	26
0x40007dc	              0x55	                                push rbp	       534	prdbg.c	FUNCTION_11
0x40007dd	          0x4889e5	                            mov rbp, rsp	       534	prdbg.c	FUNCTION_11
0x40007e0	        0x4883ec20	                           sub rsp, 0x20	       534	prdbg.c	FUNCTION_11
0x40007e4	        0x48897de8	             mov qword [rbp - 0x18], rdi	       534	prdbg.c	FUNCTION_11
0x40007e8	        0x488975e0	             mov qword [rbp - 0x20], rsi	       534	prdbg.c	FUNCTION_11
0x40007ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       535	prdbg.c	FUNCTION_11
0x40007f0	        0x488945f8	                mov qword [rbp - 8], rax	       535	prdbg.c	FUNCTION_11
0x40007f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       537	prdbg.c	FUNCTION_11	CALL_1
0x40007f8	          0x8b4008	                mov eax, dword [rax + 8]	       537	prdbg.c	FUNCTION_11	CALL_1
0x40007fb	            0x85c0	                           test eax, eax	       537	prdbg.c	FUNCTION_11	CALL_1
0x40007fd	            0x7419	                            je 0x4000818	       537	prdbg.c	FUNCTION_11	CALL_1
0x40007ff	      0xb900000000	                              mov ecx, 0	       537	prdbg.c	FUNCTION_11	CALL_1
0x4000804	      0xba19020000	                          mov edx, 0x219	       537	prdbg.c	FUNCTION_11	CALL_1
0x4000809	      0xbe00000000	                              mov esi, 0	       537	prdbg.c	FUNCTION_11	CALL_1
0x400080e	      0xbf00000000	                              mov edi, 0	       537	prdbg.c	FUNCTION_11	CALL_1
0x4000813	      0xe800000000	                          call 0x4000818	       537	prdbg.c	FUNCTION_11	CALL_1
0x4000818	        0x488b45f8	                mov rax, qword [rbp - 8]	       539	prdbg.c	FUNCTION_11	CALL_2
0x400081c	          0x488b00	                    mov rax, qword [rax]	       539	prdbg.c	FUNCTION_11	CALL_2
0x400081f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       539	prdbg.c	FUNCTION_11	CALL_2
0x4000823	      0xbe00000000	                              mov esi, 0	       539	prdbg.c	FUNCTION_11	CALL_2
0x4000828	          0x4889c7	                            mov rdi, rax	       539	prdbg.c	FUNCTION_11	CALL_2
0x400082b	      0xb800000000	                              mov eax, 0	       539	prdbg.c	FUNCTION_11	CALL_2
0x4000830	      0xe800000000	                          call 0x4000835	       539	prdbg.c	FUNCTION_11	CALL_2
0x4000835	      0xb801000000	                              mov eax, 1	       541	prdbg.c	FUNCTION_11
0x400083a	              0xc9	                                   leave	       542	prdbg.c	FUNCTION_11
0x400083b	              0xc3	                                     ret	       542	prdbg.c	FUNCTION_11
indent	WHILE,0:FOR,1:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,0:IF,0	19
0x4000167	              0x55	                                push rbp	       324	prdbg.c	FUNCTION_2
0x4000168	          0x4889e5	                            mov rbp, rsp	       324	prdbg.c	FUNCTION_2
0x400016b	        0x4883ec20	                           sub rsp, 0x20	       324	prdbg.c	FUNCTION_2
0x400016f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       324	prdbg.c	FUNCTION_2
0x4000173	    0xc745fc000000	                  mov dword [rbp - 4], 0	       327	prdbg.c	FUNCTION_2	FOR_1
0x400017a	            0xeb18	                           jmp 0x4000194	       327	prdbg.c	FUNCTION_2	FOR_1
0x400017c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000180	          0x488b00	                    mov rax, qword [rax]	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000183	          0x4889c6	                            mov rsi, rax	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000186	      0xbf20000000	                           mov edi, 0x20	       328	prdbg.c	FUNCTION_2	CALL_1
0x400018b	      0xe800000000	                          call 0x4000190	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000190	        0x8345fc01	                  add dword [rbp - 4], 1	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000194	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000198	          0x8b4008	                mov eax, dword [rax + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x400019b	          0x3b45fc	                cmp eax, dword [rbp - 4]	       327	prdbg.c	FUNCTION_2	FOR_1
0x400019e	            0x77dc	                            ja 0x400017c	       327	prdbg.c	FUNCTION_2	FOR_1
0x40001a0	              0x90	                                     nop	       329	prdbg.c	FUNCTION_2
0x40001a1	              0xc9	                                   leave	       329	prdbg.c	FUNCTION_2
0x40001a2	              0xc3	                                     ret	       329	prdbg.c	FUNCTION_2
tg_end_block	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,0:DO,0:ELSE,0:IF,0	7
0x4005065	              0x55	                                push rbp	      2808	prdbg.c	FUNCTION_82
0x4005066	          0x4889e5	                            mov rbp, rsp	      2808	prdbg.c	FUNCTION_82
0x4005069	        0x48897df8	                mov qword [rbp - 8], rdi	      2808	prdbg.c	FUNCTION_82
0x400506d	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2808	prdbg.c	FUNCTION_82
0x4005071	      0xb801000000	                              mov eax, 1	      2809	prdbg.c	FUNCTION_82
0x4005076	              0x5d	                                 pop rbp	      2810	prdbg.c	FUNCTION_82
0x4005077	              0xc3	                                     ret	      2810	prdbg.c	FUNCTION_82
pr_class_baseclass	WHILE,0:FOR,1:functions,0:SWITCH,1:CALL,23:DO,0:ELSE,0:IF,12	245
0x4002382	              0x55	                                push rbp	      1334	prdbg.c	FUNCTION_36
0x4002383	          0x4889e5	                            mov rbp, rsp	      1334	prdbg.c	FUNCTION_36
0x4002386	              0x53	                                push rbx	      1334	prdbg.c	FUNCTION_36
0x4002387	        0x4883ec78	                           sub rsp, 0x78	      1334	prdbg.c	FUNCTION_36
0x400238b	        0x48897d98	             mov qword [rbp - 0x68], rdi	      1334	prdbg.c	FUNCTION_36
0x400238f	        0x48897590	             mov qword [rbp - 0x70], rsi	      1334	prdbg.c	FUNCTION_36
0x4002393	          0x89558c	             mov dword [rbp - 0x74], edx	      1334	prdbg.c	FUNCTION_36
0x4002396	          0x894d88	             mov dword [rbp - 0x78], ecx	      1334	prdbg.c	FUNCTION_36
0x4002399	    0x64488b042528	                mov rax, qword fs:[0x28]	      1334	prdbg.c	FUNCTION_36
0x40023a2	        0x488945e8	             mov qword [rbp - 0x18], rax	      1334	prdbg.c	FUNCTION_36
0x40023a6	            0x31c0	                            xor eax, eax	      1334	prdbg.c	FUNCTION_36
0x40023a8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1335	prdbg.c	FUNCTION_36
0x40023ac	        0x488945b8	             mov qword [rbp - 0x48], rax	      1335	prdbg.c	FUNCTION_36
0x40023b0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1341	prdbg.c	FUNCTION_36	CALL_1
0x40023b4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1341	prdbg.c	FUNCTION_36	CALL_1
0x40023b8	          0x4885c0	                           test rax, rax	      1341	prdbg.c	FUNCTION_36	CALL_1
0x40023bb	            0x7410	                            je 0x40023cd	      1341	prdbg.c	FUNCTION_36	CALL_1
0x40023bd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1341	prdbg.c	FUNCTION_36	CALL_1
0x40023c1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1341	prdbg.c	FUNCTION_36	CALL_1
0x40023c5	          0x488b00	                    mov rax, qword [rax]	      1341	prdbg.c	FUNCTION_36	CALL_1
0x40023c8	          0x4885c0	                           test rax, rax	      1341	prdbg.c	FUNCTION_36	CALL_1
0x40023cb	            0x7519	                           jne 0x40023e6	      1341	prdbg.c	FUNCTION_36	CALL_1
0x40023cd	      0xb900000000	                              mov ecx, 0	      1341	prdbg.c	FUNCTION_36	CALL_1
0x40023d2	      0xba3d050000	                          mov edx, 0x53d	      1341	prdbg.c	FUNCTION_36	CALL_1
0x40023d7	      0xbe00000000	                              mov esi, 0	      1341	prdbg.c	FUNCTION_36	CALL_1
0x40023dc	      0xbf00000000	                              mov edi, 0	      1341	prdbg.c	FUNCTION_36	CALL_1
0x40023e1	      0xe800000000	                          call 0x40023e6	      1341	prdbg.c	FUNCTION_36	CALL_1
0x40023e6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1343	prdbg.c	FUNCTION_36	IF_1	CALL_2
0x40023ea	      0xbe00000000	                              mov esi, 0	      1343	prdbg.c	FUNCTION_36	IF_1	CALL_2
0x40023ef	          0x4889c7	                            mov rdi, rax	      1343	prdbg.c	FUNCTION_36	IF_1	CALL_2
0x40023f2	      0xe8ade0ffff	                call sym.substitute_type	      1343	prdbg.c	FUNCTION_36	IF_1	CALL_2
0x40023f7	            0x85c0	                           test eax, eax	      1343	prdbg.c	FUNCTION_36	IF_1	CALL_2
0x40023f9	            0x750a	                           jne 0x4002405	      1343	prdbg.c	FUNCTION_36	IF_1	CALL_2
0x40023fb	      0xb800000000	                              mov eax, 0	      1344	prdbg.c	FUNCTION_36	IF_1
0x4002400	      0xe9fa020000	                           jmp 0x40026ff	      1344	prdbg.c	FUNCTION_36	IF_1
0x4002405	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1346	prdbg.c	FUNCTION_36	CALL_3
0x4002409	          0x4889c7	                            mov rdi, rax	      1346	prdbg.c	FUNCTION_36	CALL_3
0x400240c	      0xe8e9e2ffff	                       call sym.pop_type	      1346	prdbg.c	FUNCTION_36	CALL_3
0x4002411	        0x488945a0	             mov qword [rbp - 0x60], rax	      1346	prdbg.c	FUNCTION_36	CALL_3
0x4002415	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1347	prdbg.c	FUNCTION_36	IF_2
0x400241a	            0x750a	                           jne 0x4002426	      1347	prdbg.c	FUNCTION_36	IF_2
0x400241c	      0xb800000000	                              mov eax, 0	      1348	prdbg.c	FUNCTION_36	IF_2
0x4002421	      0xe9d9020000	                           jmp 0x40026ff	      1348	prdbg.c	FUNCTION_36	IF_2
0x4002426	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1350	prdbg.c	FUNCTION_36	IF_3	CALL_4
0x400242a	      0xba06000000	                              mov edx, 6	      1350	prdbg.c	FUNCTION_36	IF_3	CALL_4
0x400242f	      0xbe00000000	                              mov esi, 0	      1350	prdbg.c	FUNCTION_36	IF_3	CALL_4
0x4002434	          0x4889c7	                            mov rdi, rax	      1350	prdbg.c	FUNCTION_36	IF_3	CALL_4
0x4002437	      0xe800000000	                          call 0x400243c	      1350	prdbg.c	FUNCTION_36	IF_3	CALL_4
0x400243c	            0x85c0	                           test eax, eax	      1350	prdbg.c	FUNCTION_36	IF_3	CALL_4
0x400243e	            0x7505	                           jne 0x4002445	      1350	prdbg.c	FUNCTION_36	IF_3	CALL_4
0x4002440	      0x488345a006	               add qword [rbp - 0x60], 6	      1351	prdbg.c	FUNCTION_36	IF_3
0x4002445	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1355	prdbg.c	FUNCTION_36	IF_4	CALL_5
0x4002449	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1355	prdbg.c	FUNCTION_36	IF_4	CALL_5
0x400244d	          0x4889d6	                            mov rsi, rdx	      1355	prdbg.c	FUNCTION_36	IF_4	CALL_5
0x4002450	          0x4889c7	                            mov rdi, rax	      1355	prdbg.c	FUNCTION_36	IF_4	CALL_5
0x4002453	      0xe84bddffff	                      call sym.push_type	      1355	prdbg.c	FUNCTION_36	IF_4	CALL_5
0x4002458	            0x85c0	                           test eax, eax	      1355	prdbg.c	FUNCTION_36	IF_4	CALL_5
0x400245a	            0x750a	                           jne 0x4002466	      1355	prdbg.c	FUNCTION_36	IF_4	CALL_5
0x400245c	      0xb800000000	                              mov eax, 0	      1356	prdbg.c	FUNCTION_36	IF_4
0x4002461	      0xe999020000	                           jmp 0x40026ff	      1356	prdbg.c	FUNCTION_36	IF_4
0x4002466	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      1358	prdbg.c	FUNCTION_36	IF_5
0x400246a	            0x741f	                            je 0x400248b	      1358	prdbg.c	FUNCTION_36	IF_5
0x400246c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1360	prdbg.c	FUNCTION_36	IF_5	IF_6	CALL_6
0x4002470	      0xbe00000000	                              mov esi, 0	      1360	prdbg.c	FUNCTION_36	IF_5	IF_6	CALL_6
0x4002475	          0x4889c7	                            mov rdi, rax	      1360	prdbg.c	FUNCTION_36	IF_5	IF_6	CALL_6
0x4002478	      0xe8b8ddffff	                   call sym.prepend_type	      1360	prdbg.c	FUNCTION_36	IF_5	IF_6	CALL_6
0x400247d	            0x85c0	                           test eax, eax	      1360	prdbg.c	FUNCTION_36	IF_5	IF_6	CALL_6
0x400247f	            0x750a	                           jne 0x400248b	      1360	prdbg.c	FUNCTION_36	IF_5	IF_6	CALL_6
0x4002481	      0xb800000000	                              mov eax, 0	      1361	prdbg.c	FUNCTION_36	IF_5	IF_6
0x4002486	      0xe974020000	                           jmp 0x40026ff	      1361	prdbg.c	FUNCTION_36	IF_5	IF_6
0x400248b	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1364	prdbg.c	FUNCTION_36	SWITCH_1
0x400248e	          0x83f801	                              cmp eax, 1	      1364	prdbg.c	FUNCTION_36	SWITCH_1
0x4002491	            0x7416	                            je 0x40024a9	      1364	prdbg.c	FUNCTION_36	SWITCH_1
0x4002493	          0x83f801	                              cmp eax, 1	      1364	prdbg.c	FUNCTION_36	SWITCH_1
0x4002496	            0x7207	                            jb 0x400249f	      1364	prdbg.c	FUNCTION_36	SWITCH_1
0x4002498	          0x83f802	                              cmp eax, 2	      1364	prdbg.c	FUNCTION_36	SWITCH_1
0x400249b	            0x7416	                            je 0x40024b3	      1364	prdbg.c	FUNCTION_36	SWITCH_1
0x400249d	            0xeb1e	                           jmp 0x40024bd	      1364	prdbg.c	FUNCTION_36	SWITCH_1
0x400249f	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1367	prdbg.c	FUNCTION_36	SWITCH_1
0x40024a7	            0xeb1d	                           jmp 0x40024c6	      1368	prdbg.c	FUNCTION_36	SWITCH_1
0x40024a9	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1370	prdbg.c	FUNCTION_36	SWITCH_1
0x40024b1	            0xeb13	                           jmp 0x40024c6	      1371	prdbg.c	FUNCTION_36	SWITCH_1
0x40024b3	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1373	prdbg.c	FUNCTION_36	SWITCH_1
0x40024bb	            0xeb09	                           jmp 0x40024c6	      1374	prdbg.c	FUNCTION_36	SWITCH_1
0x40024bd	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1376	prdbg.c	FUNCTION_36	SWITCH_1
0x40024c5	              0x90	                                     nop	      1377	prdbg.c	FUNCTION_36	SWITCH_1
0x40024c6	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1380	prdbg.c	FUNCTION_36	IF_7	CALL_7
0x40024ca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1380	prdbg.c	FUNCTION_36	IF_7	CALL_7
0x40024ce	          0x4889d6	                            mov rsi, rdx	      1380	prdbg.c	FUNCTION_36	IF_7	CALL_7
0x40024d1	          0x4889c7	                            mov rdi, rax	      1380	prdbg.c	FUNCTION_36	IF_7	CALL_7
0x40024d4	      0xe85cddffff	                   call sym.prepend_type	      1380	prdbg.c	FUNCTION_36	IF_7	CALL_7
0x40024d9	            0x85c0	                           test eax, eax	      1380	prdbg.c	FUNCTION_36	IF_7	CALL_7
0x40024db	            0x750a	                           jne 0x40024e7	      1380	prdbg.c	FUNCTION_36	IF_7	CALL_7
0x40024dd	      0xb800000000	                              mov eax, 0	      1381	prdbg.c	FUNCTION_36	IF_7
0x40024e2	      0xe918020000	                           jmp 0x40026ff	      1381	prdbg.c	FUNCTION_36	IF_7
0x40024e7	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      1383	prdbg.c	FUNCTION_36	IF_8
0x40024ec	            0x7465	                            je 0x4002553	      1383	prdbg.c	FUNCTION_36	IF_8
0x40024ee	        0x488d75d0	                   lea rsi, [rbp - 0x30]	      1385	prdbg.c	FUNCTION_36	IF_8	CALL_8
0x40024f2	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1385	prdbg.c	FUNCTION_36	IF_8	CALL_8
0x40024f6	      0xb900000000	                              mov ecx, 0	      1385	prdbg.c	FUNCTION_36	IF_8	CALL_8
0x40024fb	      0xba01000000	                              mov edx, 1	      1385	prdbg.c	FUNCTION_36	IF_8	CALL_8
0x4002500	          0x4889c7	                            mov rdi, rax	      1385	prdbg.c	FUNCTION_36	IF_8	CALL_8
0x4002503	      0xe85de2ffff	                      call sym.print_vma	      1385	prdbg.c	FUNCTION_36	IF_8	CALL_8
0x4002508	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1386	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_9
0x400250c	      0xbe00000000	                              mov esi, 0	      1386	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_9
0x4002511	          0x4889c7	                            mov rdi, rax	      1386	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_9
0x4002514	      0xe8dfddffff	                    call sym.append_type	      1386	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_9
0x4002519	            0x85c0	                           test eax, eax	      1386	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_9
0x400251b	            0x742c	                            je 0x4002549	      1386	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_9
0x400251d	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1387	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_10
0x4002521	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1387	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_10
0x4002525	          0x4889d6	                            mov rsi, rdx	      1387	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_10
0x4002528	          0x4889c7	                            mov rdi, rax	      1387	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_10
0x400252b	      0xe8c8ddffff	                    call sym.append_type	      1387	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_10
0x4002530	            0x85c0	                           test eax, eax	      1387	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_10
0x4002532	            0x7415	                            je 0x4002549	      1387	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_10
0x4002534	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1388	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_11
0x4002538	      0xbe00000000	                              mov esi, 0	      1388	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_11
0x400253d	          0x4889c7	                            mov rdi, rax	      1388	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_11
0x4002540	      0xe8b3ddffff	                    call sym.append_type	      1388	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_11
0x4002545	            0x85c0	                           test eax, eax	      1388	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_11
0x4002547	            0x750a	                           jne 0x4002553	      1388	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_11
0x4002549	      0xb800000000	                              mov eax, 0	      1389	prdbg.c	FUNCTION_36	IF_8	IF_9
0x400254e	      0xe9ac010000	                           jmp 0x40026ff	      1389	prdbg.c	FUNCTION_36	IF_8	IF_9
0x4002553	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1396	prdbg.c	FUNCTION_36	CALL_12
0x4002557	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1396	prdbg.c	FUNCTION_36	CALL_12
0x400255b	          0x488b00	                    mov rax, qword [rax]	      1396	prdbg.c	FUNCTION_36	CALL_12
0x400255e	        0x488b4008	                mov rax, qword [rax + 8]	      1396	prdbg.c	FUNCTION_36	CALL_12
0x4002562	      0xbe7b000000	                           mov esi, 0x7b	      1396	prdbg.c	FUNCTION_36	CALL_12
0x4002567	          0x4889c7	                            mov rdi, rax	      1396	prdbg.c	FUNCTION_36	CALL_12
0x400256a	      0xe800000000	                          call 0x400256f	      1396	prdbg.c	FUNCTION_36	CALL_12
0x400256f	        0x488945c0	             mov qword [rbp - 0x40], rax	      1396	prdbg.c	FUNCTION_36	CALL_12
0x4002573	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1397	prdbg.c	FUNCTION_36	CALL_13
0x4002578	            0x7519	                           jne 0x4002593	      1397	prdbg.c	FUNCTION_36	CALL_13
0x400257a	      0xb900000000	                              mov ecx, 0	      1397	prdbg.c	FUNCTION_36	CALL_13
0x400257f	      0xba75050000	                          mov edx, 0x575	      1397	prdbg.c	FUNCTION_36	CALL_13
0x4002584	      0xbe00000000	                              mov esi, 0	      1397	prdbg.c	FUNCTION_36	CALL_13
0x4002589	      0xbf00000000	                              mov edi, 0	      1397	prdbg.c	FUNCTION_36	CALL_13
0x400258e	      0xe800000000	                          call 0x4002593	      1397	prdbg.c	FUNCTION_36	CALL_13
0x4002593	      0x48836dc001	               sub qword [rbp - 0x40], 1	      1398	prdbg.c	FUNCTION_36
0x4002598	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1402	prdbg.c	FUNCTION_36	FOR_1
0x400259c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1402	prdbg.c	FUNCTION_36	FOR_1
0x40025a0	          0x488b00	                    mov rax, qword [rax]	      1402	prdbg.c	FUNCTION_36	FOR_1
0x40025a3	        0x488b4008	                mov rax, qword [rax + 8]	      1402	prdbg.c	FUNCTION_36	FOR_1
0x40025a7	        0x488945b0	             mov qword [rbp - 0x50], rax	      1402	prdbg.c	FUNCTION_36	FOR_1
0x40025ab	            0xeb10	                           jmp 0x40025bd	      1402	prdbg.c	FUNCTION_36	FOR_1
0x40025ad	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1403	prdbg.c	FUNCTION_36	FOR_1	IF_10
0x40025b1	           0xfb600	                   movzx eax, byte [rax]	      1403	prdbg.c	FUNCTION_36	FOR_1	IF_10
0x40025b4	            0x3c3a	                            cmp al, 0x3a	      1403	prdbg.c	FUNCTION_36	FOR_1	IF_10
0x40025b6	            0x7411	                            je 0x40025c9	      1403	prdbg.c	FUNCTION_36	FOR_1	IF_10
0x40025b8	      0x488345b001	               add qword [rbp - 0x50], 1	      1402	prdbg.c	FUNCTION_36	FOR_1
0x40025bd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	prdbg.c	FUNCTION_36	FOR_1
0x40025c1	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1402	prdbg.c	FUNCTION_36	FOR_1
0x40025c5	            0x75e6	                           jne 0x40025ad	      1402	prdbg.c	FUNCTION_36	FOR_1
0x40025c7	            0xeb01	                           jmp 0x40025ca	      1402	prdbg.c	FUNCTION_36	FOR_1
0x40025c9	              0x90	                                     nop	      1404	prdbg.c	FUNCTION_36	FOR_1	IF_10
0x40025ca	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x40025ce	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x40025d2	            0x7507	                           jne 0x40025db	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x40025d4	      0xba00000000	                              mov edx, 0	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x40025d9	            0xeb05	                           jmp 0x40025e0	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x40025db	      0xba00000000	                              mov edx, 0	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x40025e0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x40025e4	          0x4889d6	                            mov rsi, rdx	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x40025e7	          0x4889c7	                            mov rdi, rax	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x40025ea	      0xe846dcffff	                   call sym.prepend_type	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x40025ef	            0x85c0	                           test eax, eax	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x40025f1	            0x750a	                           jne 0x40025fd	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x40025f3	      0xb800000000	                              mov eax, 0	      1406	prdbg.c	FUNCTION_36	IF_11
0x40025f8	      0xe902010000	                           jmp 0x40026ff	      1406	prdbg.c	FUNCTION_36	IF_11
0x40025fd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1408	prdbg.c	FUNCTION_36	CALL_15
0x4002601	          0x4889c7	                            mov rdi, rax	      1408	prdbg.c	FUNCTION_36	CALL_15
0x4002604	      0xe8f1e0ffff	                       call sym.pop_type	      1408	prdbg.c	FUNCTION_36	CALL_15
0x4002609	        0x488945a0	             mov qword [rbp - 0x60], rax	      1408	prdbg.c	FUNCTION_36	CALL_15
0x400260d	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1409	prdbg.c	FUNCTION_36	IF_12
0x4002612	            0x750a	                           jne 0x400261e	      1409	prdbg.c	FUNCTION_36	IF_12
0x4002614	      0xb800000000	                              mov eax, 0	      1410	prdbg.c	FUNCTION_36	IF_12
0x4002619	      0xe9e1000000	                           jmp 0x40026ff	      1410	prdbg.c	FUNCTION_36	IF_12
0x400261e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002622	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002626	        0x488b4008	                mov rax, qword [rax + 8]	      1412	prdbg.c	FUNCTION_36	CALL_18
0x400262a	          0x4889c7	                            mov rdi, rax	      1412	prdbg.c	FUNCTION_36	CALL_18
0x400262d	      0xe800000000	                          call 0x4002632	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002632	          0x4889c3	                            mov rbx, rax	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002635	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002639	          0x4889c7	                            mov rdi, rax	      1412	prdbg.c	FUNCTION_36	CALL_18
0x400263c	      0xe800000000	                          call 0x4002641	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002641	          0x4801d8	                            add rax, rbx	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002644	        0x4883c001	                              add rax, 1	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002648	          0x4889c7	                            mov rdi, rax	      1412	prdbg.c	FUNCTION_36	CALL_18
0x400264b	      0xe800000000	                          call 0x4002650	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002650	        0x488945c8	             mov qword [rbp - 0x38], rax	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002654	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1413	prdbg.c	FUNCTION_36	CALL_19
0x4002658	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1413	prdbg.c	FUNCTION_36	CALL_19
0x400265c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1413	prdbg.c	FUNCTION_36	CALL_19
0x4002660	        0x488b4008	                mov rax, qword [rax + 8]	      1413	prdbg.c	FUNCTION_36	CALL_19
0x4002664	          0x4829c2	                            sub rdx, rax	      1413	prdbg.c	FUNCTION_36	CALL_19
0x4002667	          0x4889d0	                            mov rax, rdx	      1413	prdbg.c	FUNCTION_36	CALL_19
0x400266a	          0x4889c2	                            mov rdx, rax	      1413	prdbg.c	FUNCTION_36	CALL_19
0x400266d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1413	prdbg.c	FUNCTION_36	CALL_19
0x4002671	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1413	prdbg.c	FUNCTION_36	CALL_19
0x4002675	        0x488b4808	                mov rcx, qword [rax + 8]	      1413	prdbg.c	FUNCTION_36	CALL_19
0x4002679	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1413	prdbg.c	FUNCTION_36	CALL_19
0x400267d	          0x4889ce	                            mov rsi, rcx	      1413	prdbg.c	FUNCTION_36	CALL_19
0x4002680	          0x4889c7	                            mov rdi, rax	      1413	prdbg.c	FUNCTION_36	CALL_19
0x4002683	      0xe800000000	                          call 0x4002688	      1413	prdbg.c	FUNCTION_36	CALL_19
0x4002688	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1414	prdbg.c	FUNCTION_36	CALL_20
0x400268c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1414	prdbg.c	FUNCTION_36	CALL_20
0x4002690	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1414	prdbg.c	FUNCTION_36	CALL_20
0x4002694	        0x488b4008	                mov rax, qword [rax + 8]	      1414	prdbg.c	FUNCTION_36	CALL_20
0x4002698	          0x4829c2	                            sub rdx, rax	      1414	prdbg.c	FUNCTION_36	CALL_20
0x400269b	          0x4889d0	                            mov rax, rdx	      1414	prdbg.c	FUNCTION_36	CALL_20
0x400269e	          0x4889c2	                            mov rdx, rax	      1414	prdbg.c	FUNCTION_36	CALL_20
0x40026a1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1414	prdbg.c	FUNCTION_36	CALL_20
0x40026a5	          0x4801c2	                            add rdx, rax	      1414	prdbg.c	FUNCTION_36	CALL_20
0x40026a8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1414	prdbg.c	FUNCTION_36	CALL_20
0x40026ac	          0x4889c6	                            mov rsi, rax	      1414	prdbg.c	FUNCTION_36	CALL_20
0x40026af	          0x4889d7	                            mov rdi, rdx	      1414	prdbg.c	FUNCTION_36	CALL_20
0x40026b2	      0xe800000000	                          call 0x40026b7	      1414	prdbg.c	FUNCTION_36	CALL_20
0x40026b7	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1415	prdbg.c	FUNCTION_36	CALL_21
0x40026bb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1415	prdbg.c	FUNCTION_36	CALL_21
0x40026bf	          0x4889d6	                            mov rsi, rdx	      1415	prdbg.c	FUNCTION_36	CALL_21
0x40026c2	          0x4889c7	                            mov rdi, rax	      1415	prdbg.c	FUNCTION_36	CALL_21
0x40026c5	      0xe800000000	                          call 0x40026ca	      1415	prdbg.c	FUNCTION_36	CALL_21
0x40026ca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1417	prdbg.c	FUNCTION_36	CALL_22
0x40026ce	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1417	prdbg.c	FUNCTION_36	CALL_22
0x40026d2	        0x488b4008	                mov rax, qword [rax + 8]	      1417	prdbg.c	FUNCTION_36	CALL_22
0x40026d6	          0x4889c7	                            mov rdi, rax	      1417	prdbg.c	FUNCTION_36	CALL_22
0x40026d9	      0xe800000000	                          call 0x40026de	      1417	prdbg.c	FUNCTION_36	CALL_22
0x40026de	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1418	prdbg.c	FUNCTION_36
0x40026e2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1418	prdbg.c	FUNCTION_36
0x40026e6	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1418	prdbg.c	FUNCTION_36
0x40026ea	        0x48895008	                mov qword [rax + 8], rdx	      1418	prdbg.c	FUNCTION_36
0x40026ee	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1420	prdbg.c	FUNCTION_36	CALL_23
0x40026f2	          0x4889c7	                            mov rdi, rax	      1420	prdbg.c	FUNCTION_36	CALL_23
0x40026f5	      0xe800000000	                          call 0x40026fa	      1420	prdbg.c	FUNCTION_36	CALL_23
0x40026fa	      0xb801000000	                              mov eax, 1	      1422	prdbg.c	FUNCTION_36
0x40026ff	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1423	prdbg.c	FUNCTION_36
0x4002703	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1423	prdbg.c	FUNCTION_36
0x400270c	            0x7405	                            je 0x4002713	      1423	prdbg.c	FUNCTION_36
0x400270e	      0xe800000000	                          call 0x4002713	      1423	prdbg.c	FUNCTION_36
0x4002713	        0x4883c478	                           add rsp, 0x78	      1423	prdbg.c	FUNCTION_36
0x4002717	              0x5b	                                 pop rbx	      1423	prdbg.c	FUNCTION_36
0x4002718	              0x5d	                                 pop rbp	      1423	prdbg.c	FUNCTION_36
0x4002719	              0xc3	                                     ret	      1423	prdbg.c	FUNCTION_36
tg_variable	WHILE,0:FOR,0:functions,0:SWITCH,1:CALL,10:DO,0:ELSE,1:IF,6	112
0x40049d0	              0x55	                                push rbp	      2593	prdbg.c	FUNCTION_77
0x40049d1	          0x4889e5	                            mov rbp, rsp	      2593	prdbg.c	FUNCTION_77
0x40049d4	        0x4883ec50	                           sub rsp, 0x50	      2593	prdbg.c	FUNCTION_77
0x40049d8	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2593	prdbg.c	FUNCTION_77
0x40049dc	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2593	prdbg.c	FUNCTION_77
0x40049e0	          0x8955bc	             mov dword [rbp - 0x44], edx	      2593	prdbg.c	FUNCTION_77
0x40049e3	        0x48894db0	             mov qword [rbp - 0x50], rcx	      2593	prdbg.c	FUNCTION_77
0x40049e7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2594	prdbg.c	FUNCTION_77
0x40049eb	        0x488945e8	             mov qword [rbp - 0x18], rax	      2594	prdbg.c	FUNCTION_77
0x40049ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2597	prdbg.c	FUNCTION_77	CALL_1
0x40049f3	          0x4889c7	                            mov rdi, rax	      2597	prdbg.c	FUNCTION_77	CALL_1
0x40049f6	      0xe8ffbcffff	                       call sym.pop_type	      2597	prdbg.c	FUNCTION_77	CALL_1
0x40049fb	        0x488945f0	             mov qword [rbp - 0x10], rax	      2597	prdbg.c	FUNCTION_77	CALL_1
0x40049ff	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2598	prdbg.c	FUNCTION_77	IF_1
0x4004a04	            0x750a	                           jne 0x4004a10	      2598	prdbg.c	FUNCTION_77	IF_1
0x4004a06	      0xb800000000	                              mov eax, 0	      2599	prdbg.c	FUNCTION_77	IF_1
0x4004a0b	      0xe964010000	                           jmp 0x4004b74	      2599	prdbg.c	FUNCTION_77	IF_1
0x4004a10	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2601	prdbg.c	FUNCTION_77
0x4004a18	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2602	prdbg.c	FUNCTION_77	IF_2
0x4004a1c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2602	prdbg.c	FUNCTION_77	IF_2
0x4004a20	          0x4885c0	                           test rax, rax	      2602	prdbg.c	FUNCTION_77	IF_2
0x4004a23	            0x7422	                            je 0x4004a47	      2602	prdbg.c	FUNCTION_77	IF_2
0x4004a25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2603	prdbg.c	FUNCTION_77	CALL_2
0x4004a29	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2603	prdbg.c	FUNCTION_77	CALL_2
0x4004a2d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2603	prdbg.c	FUNCTION_77	CALL_2
0x4004a31	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      2603	prdbg.c	FUNCTION_77	CALL_2
0x4004a35	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      2603	prdbg.c	FUNCTION_77	CALL_2
0x4004a39	      0xba03000000	                              mov edx, 3	      2603	prdbg.c	FUNCTION_77	CALL_2
0x4004a3e	          0x4889cf	                            mov rdi, rcx	      2603	prdbg.c	FUNCTION_77	CALL_2
0x4004a41	            0xffd0	                                call rax	      2603	prdbg.c	FUNCTION_77	CALL_2
0x4004a43	        0x488945d8	             mov qword [rbp - 0x28], rax	      2603	prdbg.c	FUNCTION_77	CALL_2
0x4004a47	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2605	prdbg.c	FUNCTION_77
0x4004a4f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2606	prdbg.c	FUNCTION_77	IF_3
0x4004a54	            0x7441	                            je 0x4004a97	      2606	prdbg.c	FUNCTION_77	IF_3
0x4004a56	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2609	prdbg.c	FUNCTION_77	IF_3	CALL_3
0x4004a5a	      0xbe00000000	                              mov esi, 0	      2609	prdbg.c	FUNCTION_77	IF_3	CALL_3
0x4004a5f	          0x4889c7	                            mov rdi, rax	      2609	prdbg.c	FUNCTION_77	IF_3	CALL_3
0x4004a62	      0xe800000000	                          call 0x4004a67	      2609	prdbg.c	FUNCTION_77	IF_3	CALL_3
0x4004a67	        0x488945f8	                mov qword [rbp - 8], rax	      2609	prdbg.c	FUNCTION_77	IF_3	CALL_3
0x4004a6b	      0x48837df800	                  cmp qword [rbp - 8], 0	      2610	prdbg.c	FUNCTION_77	IF_3	IF_4
0x4004a70	            0x741d	                            je 0x4004a8f	      2610	prdbg.c	FUNCTION_77	IF_3	IF_4
0x4004a72	        0x488b45f8	                mov rax, qword [rbp - 8]	      2612	prdbg.c	FUNCTION_77	IF_3	IF_4
0x4004a76	          0xc60000	                       mov byte [rax], 0	      2612	prdbg.c	FUNCTION_77	IF_3	IF_4
0x4004a79	        0x488b45f8	                mov rax, qword [rbp - 8]	      2613	prdbg.c	FUNCTION_77	IF_3	IF_4
0x4004a7d	        0x4883c002	                              add rax, 2	      2613	prdbg.c	FUNCTION_77	IF_3	IF_4
0x4004a81	        0x488945c0	             mov qword [rbp - 0x40], rax	      2613	prdbg.c	FUNCTION_77	IF_3	IF_4
0x4004a85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2614	prdbg.c	FUNCTION_77	IF_3	IF_4
0x4004a89	        0x488945e0	             mov qword [rbp - 0x20], rax	      2614	prdbg.c	FUNCTION_77	IF_3	IF_4
0x4004a8d	            0xeb08	                           jmp 0x4004a97	      2614	prdbg.c	FUNCTION_77	IF_3	IF_4
0x4004a8f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2618	prdbg.c	FUNCTION_77	IF_3	ELSE_1
0x4004a93	        0x488945c0	             mov qword [rbp - 0x40], rax	      2618	prdbg.c	FUNCTION_77	IF_3	ELSE_1
0x4004a97	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2621	prdbg.c	FUNCTION_77	CALL_4
0x4004a9b	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      2621	prdbg.c	FUNCTION_77	CALL_4
0x4004a9f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2621	prdbg.c	FUNCTION_77	CALL_4
0x4004aa3	          0x488b00	                    mov rax, qword [rax]	      2621	prdbg.c	FUNCTION_77	CALL_4
0x4004aa6	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2621	prdbg.c	FUNCTION_77	CALL_4
0x4004aaa	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2621	prdbg.c	FUNCTION_77	CALL_4
0x4004aae	          0x4989f0	                             mov r8, rsi	      2621	prdbg.c	FUNCTION_77	CALL_4
0x4004ab1	      0xbe00000000	                              mov esi, 0	      2621	prdbg.c	FUNCTION_77	CALL_4
0x4004ab6	          0x4889c7	                            mov rdi, rax	      2621	prdbg.c	FUNCTION_77	CALL_4
0x4004ab9	      0xb800000000	                              mov eax, 0	      2621	prdbg.c	FUNCTION_77	CALL_4
0x4004abe	      0xe800000000	                          call 0x4004ac3	      2621	prdbg.c	FUNCTION_77	CALL_4
0x4004ac3	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4004ac6	          0x83f802	                              cmp eax, 2	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4004ac9	            0x724c	                            jb 0x4004b17	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4004acb	          0x83f803	                              cmp eax, 3	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4004ace	            0x7607	                           jbe 0x4004ad7	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4004ad0	          0x83f805	                              cmp eax, 5	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4004ad3	            0x7422	                            je 0x4004af7	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4004ad5	            0xeb40	                           jmp 0x4004b17	      2633	prdbg.c	FUNCTION_77	SWITCH_1
0x4004ad7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2627	prdbg.c	FUNCTION_77	SWITCH_1	CALL_5
0x4004adb	          0x488b00	                    mov rax, qword [rax]	      2627	prdbg.c	FUNCTION_77	SWITCH_1	CALL_5
0x4004ade	          0x4889c1	                            mov rcx, rax	      2627	prdbg.c	FUNCTION_77	SWITCH_1	CALL_5
0x4004ae1	      0xba06000000	                              mov edx, 6	      2627	prdbg.c	FUNCTION_77	SWITCH_1	CALL_5
0x4004ae6	      0xbe01000000	                              mov esi, 1	      2627	prdbg.c	FUNCTION_77	SWITCH_1	CALL_5
0x4004aeb	      0xbf00000000	                              mov edi, 0	      2627	prdbg.c	FUNCTION_77	SWITCH_1	CALL_5
0x4004af0	      0xe800000000	                          call 0x4004af5	      2627	prdbg.c	FUNCTION_77	SWITCH_1	CALL_5
0x4004af5	            0xeb21	                           jmp 0x4004b18	      2628	prdbg.c	FUNCTION_77	SWITCH_1
0x4004af7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2630	prdbg.c	FUNCTION_77	SWITCH_1	CALL_6
0x4004afb	          0x488b00	                    mov rax, qword [rax]	      2630	prdbg.c	FUNCTION_77	SWITCH_1	CALL_6
0x4004afe	          0x4889c1	                            mov rcx, rax	      2630	prdbg.c	FUNCTION_77	SWITCH_1	CALL_6
0x4004b01	      0xba0a000000	                            mov edx, 0xa	      2630	prdbg.c	FUNCTION_77	SWITCH_1	CALL_6
0x4004b06	      0xbe01000000	                              mov esi, 1	      2630	prdbg.c	FUNCTION_77	SWITCH_1	CALL_6
0x4004b0b	      0xbf00000000	                              mov edi, 0	      2630	prdbg.c	FUNCTION_77	SWITCH_1	CALL_6
0x4004b10	      0xe800000000	                          call 0x4004b15	      2630	prdbg.c	FUNCTION_77	SWITCH_1	CALL_6
0x4004b15	            0xeb01	                           jmp 0x4004b18	      2631	prdbg.c	FUNCTION_77	SWITCH_1
0x4004b17	              0x90	                                     nop	      2633	prdbg.c	FUNCTION_77	SWITCH_1
0x4004b18	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2636	prdbg.c	FUNCTION_77	IF_5
0x4004b1d	            0x741d	                            je 0x4004b3c	      2636	prdbg.c	FUNCTION_77	IF_5
0x4004b1f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2637	prdbg.c	FUNCTION_77	CALL_7
0x4004b23	          0x488b00	                    mov rax, qword [rax]	      2637	prdbg.c	FUNCTION_77	CALL_7
0x4004b26	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2637	prdbg.c	FUNCTION_77	CALL_7
0x4004b2a	      0xbe00000000	                              mov esi, 0	      2637	prdbg.c	FUNCTION_77	CALL_7
0x4004b2f	          0x4889c7	                            mov rdi, rax	      2637	prdbg.c	FUNCTION_77	CALL_7
0x4004b32	      0xb800000000	                              mov eax, 0	      2637	prdbg.c	FUNCTION_77	CALL_7
0x4004b37	      0xe800000000	                          call 0x4004b3c	      2637	prdbg.c	FUNCTION_77	CALL_7
0x4004b3c	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2639	prdbg.c	FUNCTION_77	IF_6
0x4004b41	            0x740c	                            je 0x4004b4f	      2639	prdbg.c	FUNCTION_77	IF_6
0x4004b43	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2640	prdbg.c	FUNCTION_77	CALL_8
0x4004b47	          0x4889c7	                            mov rdi, rax	      2640	prdbg.c	FUNCTION_77	CALL_8
0x4004b4a	      0xe800000000	                          call 0x4004b4f	      2640	prdbg.c	FUNCTION_77	CALL_8
0x4004b4f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2642	prdbg.c	FUNCTION_77	CALL_9
0x4004b53	          0x488b00	                    mov rax, qword [rax]	      2642	prdbg.c	FUNCTION_77	CALL_9
0x4004b56	          0x4889c6	                            mov rsi, rax	      2642	prdbg.c	FUNCTION_77	CALL_9
0x4004b59	      0xbf0a000000	                            mov edi, 0xa	      2642	prdbg.c	FUNCTION_77	CALL_9
0x4004b5e	      0xe800000000	                          call 0x4004b63	      2642	prdbg.c	FUNCTION_77	CALL_9
0x4004b63	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2644	prdbg.c	FUNCTION_77	CALL_10
0x4004b67	          0x4889c7	                            mov rdi, rax	      2644	prdbg.c	FUNCTION_77	CALL_10
0x4004b6a	      0xe800000000	                          call 0x4004b6f	      2644	prdbg.c	FUNCTION_77	CALL_10
0x4004b6f	      0xb801000000	                              mov eax, 1	      2646	prdbg.c	FUNCTION_77
0x4004b74	              0xc9	                                   leave	      2647	prdbg.c	FUNCTION_77
0x4004b75	              0xc3	                                     ret	      2647	prdbg.c	FUNCTION_77
tg_start_compilation_unit	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,2:DO,0:ELSE,0:IF,0	20
0x4003746	              0x55	                                push rbp	      1963	prdbg.c	FUNCTION_58
0x4003747	          0x4889e5	                            mov rbp, rsp	      1963	prdbg.c	FUNCTION_58
0x400374a	        0x4883ec20	                           sub rsp, 0x20	      1963	prdbg.c	FUNCTION_58
0x400374e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1963	prdbg.c	FUNCTION_58
0x4003752	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1963	prdbg.c	FUNCTION_58
0x4003756	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1964	prdbg.c	FUNCTION_58
0x400375a	        0x488945f8	                mov qword [rbp - 8], rax	      1964	prdbg.c	FUNCTION_58
0x400375e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1966	prdbg.c	FUNCTION_58	CALL_1
0x4003762	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1966	prdbg.c	FUNCTION_58	CALL_1
0x4003766	          0x4889c7	                            mov rdi, rax	      1966	prdbg.c	FUNCTION_58	CALL_1
0x4003769	      0xe800000000	                          call 0x400376e	      1966	prdbg.c	FUNCTION_58	CALL_1
0x400376e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1968	prdbg.c	FUNCTION_58	CALL_2
0x4003772	          0x4889c7	                            mov rdi, rax	      1968	prdbg.c	FUNCTION_58	CALL_2
0x4003775	      0xe800000000	                          call 0x400377a	      1968	prdbg.c	FUNCTION_58	CALL_2
0x400377a	          0x4889c2	                            mov rdx, rax	      1968	prdbg.c	FUNCTION_58	CALL_2
0x400377d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1968	prdbg.c	FUNCTION_58	CALL_2
0x4003781	        0x48895020	             mov qword [rax + 0x20], rdx	      1968	prdbg.c	FUNCTION_58	CALL_2
0x4003785	      0xb801000000	                              mov eax, 1	      1970	prdbg.c	FUNCTION_58
0x400378a	              0xc9	                                   leave	      1971	prdbg.c	FUNCTION_58
0x400378b	              0xc3	                                     ret	      1971	prdbg.c	FUNCTION_58
tg_end_class_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,5:DO,0:ELSE,0:IF,1	50
0x4004591	              0x55	                                push rbp	      2437	prdbg.c	FUNCTION_70
0x4004592	          0x4889e5	                            mov rbp, rsp	      2437	prdbg.c	FUNCTION_70
0x4004595	        0x4883ec20	                           sub rsp, 0x20	      2437	prdbg.c	FUNCTION_70
0x4004599	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2437	prdbg.c	FUNCTION_70
0x400459d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2438	prdbg.c	FUNCTION_70
0x40045a1	        0x488945f8	                mov qword [rbp - 8], rax	      2438	prdbg.c	FUNCTION_70
0x40045a5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2441	prdbg.c	FUNCTION_70
0x40045a9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2441	prdbg.c	FUNCTION_70
0x40045ad	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      2440	prdbg.c	FUNCTION_70	CALL_1
0x40045b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2440	prdbg.c	FUNCTION_70	CALL_1
0x40045b5	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      2440	prdbg.c	FUNCTION_70	CALL_1
0x40045b9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2440	prdbg.c	FUNCTION_70	CALL_1
0x40045bd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2440	prdbg.c	FUNCTION_70	CALL_1
0x40045c1	        0x488b5008	                mov rdx, qword [rax + 8]	      2440	prdbg.c	FUNCTION_70	CALL_1
0x40045c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2440	prdbg.c	FUNCTION_70	CALL_1
0x40045c9	          0x488b00	                    mov rax, qword [rax]	      2440	prdbg.c	FUNCTION_70	CALL_1
0x40045cc	          0x4989f0	                             mov r8, rsi	      2440	prdbg.c	FUNCTION_70	CALL_1
0x40045cf	      0xbe00000000	                              mov esi, 0	      2440	prdbg.c	FUNCTION_70	CALL_1
0x40045d4	          0x4889c7	                            mov rdi, rax	      2440	prdbg.c	FUNCTION_70	CALL_1
0x40045d7	      0xb800000000	                              mov eax, 0	      2440	prdbg.c	FUNCTION_70	CALL_1
0x40045dc	      0xe800000000	                          call 0x40045e1	      2440	prdbg.c	FUNCTION_70	CALL_1
0x40045e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2442	prdbg.c	FUNCTION_70	IF_1
0x40045e5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2442	prdbg.c	FUNCTION_70	IF_1
0x40045e9	          0x8b4030	            mov eax, dword [rax + 0x30] 	      2442	prdbg.c	FUNCTION_70	IF_1
0x40045ec	            0x85c0	                           test eax, eax	      2442	prdbg.c	FUNCTION_70	IF_1
0x40045ee	            0x7439	                            je 0x4004629	      2442	prdbg.c	FUNCTION_70	IF_1
0x40045f0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2444	prdbg.c	FUNCTION_70	IF_1	CALL_2
0x40045f4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2444	prdbg.c	FUNCTION_70	IF_1	CALL_2
0x40045f8	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2444	prdbg.c	FUNCTION_70	IF_1	CALL_2
0x40045fc	        0x488b45f8	                mov rax, qword [rbp - 8]	      2444	prdbg.c	FUNCTION_70	IF_1	CALL_2
0x4004600	          0x488b00	                    mov rax, qword [rax]	      2444	prdbg.c	FUNCTION_70	IF_1	CALL_2
0x4004603	      0xbe00000000	                              mov esi, 0	      2444	prdbg.c	FUNCTION_70	IF_1	CALL_2
0x4004608	          0x4889c7	                            mov rdi, rax	      2444	prdbg.c	FUNCTION_70	IF_1	CALL_2
0x400460b	      0xb800000000	                              mov eax, 0	      2444	prdbg.c	FUNCTION_70	IF_1	CALL_2
0x4004610	      0xe800000000	                          call 0x4004615	      2444	prdbg.c	FUNCTION_70	IF_1	CALL_2
0x4004615	        0x488b45f8	                mov rax, qword [rbp - 8]	      2445	prdbg.c	FUNCTION_70	IF_1	CALL_3
0x4004619	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2445	prdbg.c	FUNCTION_70	IF_1	CALL_3
0x400461d	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2445	prdbg.c	FUNCTION_70	IF_1	CALL_3
0x4004621	          0x4889c7	                            mov rdi, rax	      2445	prdbg.c	FUNCTION_70	IF_1	CALL_3
0x4004624	      0xe800000000	                          call 0x4004629	      2445	prdbg.c	FUNCTION_70	IF_1	CALL_3
0x4004629	        0x488b45f8	                mov rax, qword [rbp - 8]	      2447	prdbg.c	FUNCTION_70	CALL_4
0x400462d	          0x488b00	                    mov rax, qword [rax]	      2447	prdbg.c	FUNCTION_70	CALL_4
0x4004630	          0x4889c6	                            mov rsi, rax	      2447	prdbg.c	FUNCTION_70	CALL_4
0x4004633	      0xbf0a000000	                            mov edi, 0xa	      2447	prdbg.c	FUNCTION_70	CALL_4
0x4004638	      0xe800000000	                          call 0x400463d	      2447	prdbg.c	FUNCTION_70	CALL_4
0x400463d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2449	prdbg.c	FUNCTION_70	CALL_5
0x4004641	          0x4889c7	                            mov rdi, rax	      2449	prdbg.c	FUNCTION_70	CALL_5
0x4004644	      0xe85bf5ffff	             call sym.tg_end_struct_type	      2449	prdbg.c	FUNCTION_70	CALL_5
0x4004649	              0xc9	                                   leave	      2450	prdbg.c	FUNCTION_70
0x400464a	              0xc3	                                     ret	      2450	prdbg.c	FUNCTION_70
pr_end_function	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,0:DO,0:ELSE,0:IF,0	6
0x40035cf	              0x55	                                push rbp	      1905	prdbg.c	FUNCTION_55
0x40035d0	          0x4889e5	                            mov rbp, rsp	      1905	prdbg.c	FUNCTION_55
0x40035d3	        0x48897df8	                mov qword [rbp - 8], rdi	      1905	prdbg.c	FUNCTION_55
0x40035d7	      0xb801000000	                              mov eax, 1	      1906	prdbg.c	FUNCTION_55
0x40035dc	              0x5d	                                 pop rbp	      1907	prdbg.c	FUNCTION_55
0x40035dd	              0xc3	                                     ret	      1907	prdbg.c	FUNCTION_55
indent_type	WHILE,0:FOR,1:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,0:IF,1	22
0x40006b2	              0x55	                                push rbp	       458	prdbg.c	FUNCTION_8
0x40006b3	          0x4889e5	                            mov rbp, rsp	       458	prdbg.c	FUNCTION_8
0x40006b6	        0x4883ec20	                           sub rsp, 0x20	       458	prdbg.c	FUNCTION_8
0x40006ba	        0x48897de8	             mov qword [rbp - 0x18], rdi	       458	prdbg.c	FUNCTION_8
0x40006be	    0xc745fc000000	                  mov dword [rbp - 4], 0	       461	prdbg.c	FUNCTION_8	FOR_1
0x40006c5	            0xeb20	                           jmp 0x40006e7	       461	prdbg.c	FUNCTION_8	FOR_1
0x40006c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40006cb	      0xbe00000000	                              mov esi, 0	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40006d0	          0x4889c7	                            mov rdi, rax	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40006d3	      0xe820fcffff	                    call sym.append_type	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40006d8	            0x85c0	                           test eax, eax	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40006da	            0x7507	                           jne 0x40006e3	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40006dc	      0xb800000000	                              mov eax, 0	       464	prdbg.c	FUNCTION_8	FOR_1	IF_1
0x40006e1	            0xeb15	                           jmp 0x40006f8	       464	prdbg.c	FUNCTION_8	FOR_1	IF_1
0x40006e3	        0x8345fc01	                  add dword [rbp - 4], 1	       461	prdbg.c	FUNCTION_8	FOR_1
0x40006e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       461	prdbg.c	FUNCTION_8	FOR_1
0x40006eb	          0x8b4008	                mov eax, dword [rax + 8]	       461	prdbg.c	FUNCTION_8	FOR_1
0x40006ee	          0x3b45fc	                cmp eax, dword [rbp - 4]	       461	prdbg.c	FUNCTION_8	FOR_1
0x40006f1	            0x77d4	                            ja 0x40006c7	       461	prdbg.c	FUNCTION_8	FOR_1
0x40006f3	      0xb801000000	                              mov eax, 1	       467	prdbg.c	FUNCTION_8
0x40006f8	              0xc9	                                   leave	       468	prdbg.c	FUNCTION_8
0x40006f9	              0xc3	                                     ret	       468	prdbg.c	FUNCTION_8
pr_const_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,0:IF,0	12
0x4001939	              0x55	                                push rbp	      1022	prdbg.c	FUNCTION_28
0x400193a	          0x4889e5	                            mov rbp, rsp	      1022	prdbg.c	FUNCTION_28
0x400193d	        0x4883ec20	                           sub rsp, 0x20	      1022	prdbg.c	FUNCTION_28
0x4001941	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1022	prdbg.c	FUNCTION_28
0x4001945	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1023	prdbg.c	FUNCTION_28
0x4001949	        0x488945f8	                mov qword [rbp - 8], rax	      1023	prdbg.c	FUNCTION_28
0x400194d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1025	prdbg.c	FUNCTION_28	CALL_1
0x4001951	      0xbe00000000	                              mov esi, 0	      1025	prdbg.c	FUNCTION_28	CALL_1
0x4001956	          0x4889c7	                            mov rdi, rax	      1025	prdbg.c	FUNCTION_28	CALL_1
0x4001959	      0xe846ebffff	                call sym.substitute_type	      1025	prdbg.c	FUNCTION_28	CALL_1
0x400195e	              0xc9	                                   leave	      1026	prdbg.c	FUNCTION_28
0x400195f	              0xc3	                                     ret	      1026	prdbg.c	FUNCTION_28
pr_int_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,2:DO,0:ELSE,0:IF,0	36
0x40008ea	              0x55	                                push rbp	       582	prdbg.c	FUNCTION_15
0x40008eb	          0x4889e5	                            mov rbp, rsp	       582	prdbg.c	FUNCTION_15
0x40008ee	        0x4883ec50	                           sub rsp, 0x50	       582	prdbg.c	FUNCTION_15
0x40008f2	        0x48897db8	             mov qword [rbp - 0x48], rdi	       582	prdbg.c	FUNCTION_15
0x40008f6	          0x8975b4	             mov dword [rbp - 0x4c], esi	       582	prdbg.c	FUNCTION_15
0x40008f9	          0x8955b0	             mov dword [rbp - 0x50], edx	       582	prdbg.c	FUNCTION_15
0x40008fc	    0x64488b042528	                mov rax, qword fs:[0x28]	       582	prdbg.c	FUNCTION_15
0x4000905	        0x488945f8	                mov qword [rbp - 8], rax	       582	prdbg.c	FUNCTION_15
0x4000909	            0x31c0	                            xor eax, eax	       582	prdbg.c	FUNCTION_15
0x400090b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       583	prdbg.c	FUNCTION_15
0x400090f	        0x488945c8	             mov qword [rbp - 0x38], rax	       583	prdbg.c	FUNCTION_15
0x4000913	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       586	prdbg.c	FUNCTION_15	CALL_1
0x4000916	    0x8d14c5000000	                        lea edx, [rax*8]	       586	prdbg.c	FUNCTION_15	CALL_1
0x400091d	        0x837db000	               cmp dword [rbp - 0x50], 0	       586	prdbg.c	FUNCTION_15	CALL_1
0x4000921	            0x7407	                            je 0x400092a	       586	prdbg.c	FUNCTION_15	CALL_1
0x4000923	      0xbe00000000	                              mov esi, 0	       586	prdbg.c	FUNCTION_15	CALL_1
0x4000928	            0xeb05	                           jmp 0x400092f	       586	prdbg.c	FUNCTION_15	CALL_1
0x400092a	      0xbe00000000	                              mov esi, 0	       586	prdbg.c	FUNCTION_15	CALL_1
0x400092f	        0x488d45d0	                   lea rax, [rbp - 0x30]	       586	prdbg.c	FUNCTION_15	CALL_1
0x4000933	            0x89d1	                            mov ecx, edx	       586	prdbg.c	FUNCTION_15	CALL_1
0x4000935	          0x4889f2	                            mov rdx, rsi	       586	prdbg.c	FUNCTION_15	CALL_1
0x4000938	      0xbe00000000	                              mov esi, 0	       586	prdbg.c	FUNCTION_15	CALL_1
0x400093d	          0x4889c7	                            mov rdi, rax	       586	prdbg.c	FUNCTION_15	CALL_1
0x4000940	      0xb800000000	                              mov eax, 0	       586	prdbg.c	FUNCTION_15	CALL_1
0x4000945	      0xe800000000	                          call 0x400094a	       586	prdbg.c	FUNCTION_15	CALL_1
0x400094a	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       587	prdbg.c	FUNCTION_15	CALL_2
0x400094e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       587	prdbg.c	FUNCTION_15	CALL_2
0x4000952	          0x4889d6	                            mov rsi, rdx	       587	prdbg.c	FUNCTION_15	CALL_2
0x4000955	          0x4889c7	                            mov rdi, rax	       587	prdbg.c	FUNCTION_15	CALL_2
0x4000958	      0xe846f8ffff	                      call sym.push_type	       587	prdbg.c	FUNCTION_15	CALL_2
0x400095d	        0x488b4df8	                mov rcx, qword [rbp - 8]	       588	prdbg.c	FUNCTION_15
0x4000961	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       588	prdbg.c	FUNCTION_15
0x400096a	            0x7405	                            je 0x4000971	       588	prdbg.c	FUNCTION_15
0x400096c	      0xe800000000	                          call 0x4000971	       588	prdbg.c	FUNCTION_15
0x4000971	              0xc9	                                   leave	       588	prdbg.c	FUNCTION_15
0x4000972	              0xc3	                                     ret	       588	prdbg.c	FUNCTION_15
pr_void_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,0:IF,0	12
0x40008c3	              0x55	                                push rbp	       572	prdbg.c	FUNCTION_14
0x40008c4	          0x4889e5	                            mov rbp, rsp	       572	prdbg.c	FUNCTION_14
0x40008c7	        0x4883ec20	                           sub rsp, 0x20	       572	prdbg.c	FUNCTION_14
0x40008cb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       572	prdbg.c	FUNCTION_14
0x40008cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       573	prdbg.c	FUNCTION_14
0x40008d3	        0x488945f8	                mov qword [rbp - 8], rax	       573	prdbg.c	FUNCTION_14
0x40008d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       575	prdbg.c	FUNCTION_14	CALL_1
0x40008db	      0xbe00000000	                              mov esi, 0	       575	prdbg.c	FUNCTION_14	CALL_1
0x40008e0	          0x4889c7	                            mov rdi, rax	       575	prdbg.c	FUNCTION_14	CALL_1
0x40008e3	      0xe8bbf8ffff	                      call sym.push_type	       575	prdbg.c	FUNCTION_14	CALL_1
0x40008e8	              0xc9	                                   leave	       576	prdbg.c	FUNCTION_14
0x40008e9	              0xc3	                                     ret	       576	prdbg.c	FUNCTION_14
tg_tag_type	WHILE,0:FOR,0:functions,0:SWITCH,1:CALL,4:DO,0:ELSE,1:IF,3	68
0x400464b	              0x55	                                push rbp	      2457	prdbg.c	FUNCTION_71
0x400464c	          0x4889e5	                            mov rbp, rsp	      2457	prdbg.c	FUNCTION_71
0x400464f	        0x4883ec60	                           sub rsp, 0x60	      2457	prdbg.c	FUNCTION_71
0x4004653	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2457	prdbg.c	FUNCTION_71
0x4004657	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2457	prdbg.c	FUNCTION_71
0x400465b	          0x8955ac	             mov dword [rbp - 0x54], edx	      2457	prdbg.c	FUNCTION_71
0x400465e	          0x894da8	             mov dword [rbp - 0x58], ecx	      2457	prdbg.c	FUNCTION_71
0x4004661	    0x64488b042528	                mov rax, qword fs:[0x28]	      2457	prdbg.c	FUNCTION_71
0x400466a	        0x488945f8	                mov qword [rbp - 8], rax	      2457	prdbg.c	FUNCTION_71
0x400466e	            0x31c0	                            xor eax, eax	      2457	prdbg.c	FUNCTION_71
0x4004670	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2458	prdbg.c	FUNCTION_71
0x4004674	        0x488945d8	             mov qword [rbp - 0x28], rax	      2458	prdbg.c	FUNCTION_71
0x4004678	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x400467b	          0x83e807	                              sub eax, 7	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x400467e	          0x83f804	                              cmp eax, 4	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x4004681	            0x773e	                            ja 0x40046c1	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x4004683	            0x89c0	                            mov eax, eax	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x4004685	    0x488b04c50000	                  mov rax, qword [rax*8]	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x400468d	            0xffe0	                                 jmp rax	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x400468f	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2465	prdbg.c	FUNCTION_71	SWITCH_1
0x4004697	            0xeb2d	                           jmp 0x40046c6	      2466	prdbg.c	FUNCTION_71	SWITCH_1
0x4004699	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2468	prdbg.c	FUNCTION_71	SWITCH_1
0x40046a1	            0xeb23	                           jmp 0x40046c6	      2469	prdbg.c	FUNCTION_71	SWITCH_1
0x40046a3	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2471	prdbg.c	FUNCTION_71	SWITCH_1
0x40046ab	            0xeb19	                           jmp 0x40046c6	      2472	prdbg.c	FUNCTION_71	SWITCH_1
0x40046ad	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2474	prdbg.c	FUNCTION_71	SWITCH_1
0x40046b5	            0xeb0f	                           jmp 0x40046c6	      2475	prdbg.c	FUNCTION_71	SWITCH_1
0x40046b7	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2477	prdbg.c	FUNCTION_71	SWITCH_1
0x40046bf	            0xeb05	                           jmp 0x40046c6	      2478	prdbg.c	FUNCTION_71	SWITCH_1
0x40046c1	      0xe800000000	                          call 0x40046c6	      2480	prdbg.c	FUNCTION_71	SWITCH_1	CALL_1
0x40046c6	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2484	prdbg.c	FUNCTION_71	IF_1	CALL_2
0x40046ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2484	prdbg.c	FUNCTION_71	IF_1	CALL_2
0x40046ce	          0x4889d6	                            mov rsi, rdx	      2484	prdbg.c	FUNCTION_71	IF_1	CALL_2
0x40046d1	          0x4889c7	                            mov rdi, rax	      2484	prdbg.c	FUNCTION_71	IF_1	CALL_2
0x40046d4	      0xe8cabaffff	                      call sym.push_type	      2484	prdbg.c	FUNCTION_71	IF_1	CALL_2
0x40046d9	            0x85c0	                           test eax, eax	      2484	prdbg.c	FUNCTION_71	IF_1	CALL_2
0x40046db	            0x7507	                           jne 0x40046e4	      2484	prdbg.c	FUNCTION_71	IF_1	CALL_2
0x40046dd	      0xb800000000	                              mov eax, 0	      2485	prdbg.c	FUNCTION_71	IF_1
0x40046e2	            0xeb55	                           jmp 0x4004739	      2485	prdbg.c	FUNCTION_71	IF_1
0x40046e4	      0x48837db000	               cmp qword [rbp - 0x50], 0	      2486	prdbg.c	FUNCTION_71	IF_2
0x40046e9	            0x740a	                            je 0x40046f5	      2486	prdbg.c	FUNCTION_71	IF_2
0x40046eb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2487	prdbg.c	FUNCTION_71	IF_2
0x40046ef	        0x488945d0	             mov qword [rbp - 0x30], rax	      2487	prdbg.c	FUNCTION_71	IF_2
0x40046f3	            0xeb21	                           jmp 0x4004716	      2487	prdbg.c	FUNCTION_71	IF_2
0x40046f5	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2490	prdbg.c	FUNCTION_71	ELSE_1	CALL_3
0x40046f8	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2490	prdbg.c	FUNCTION_71	ELSE_1	CALL_3
0x40046fc	      0xbe00000000	                              mov esi, 0	      2490	prdbg.c	FUNCTION_71	ELSE_1	CALL_3
0x4004701	          0x4889c7	                            mov rdi, rax	      2490	prdbg.c	FUNCTION_71	ELSE_1	CALL_3
0x4004704	      0xb800000000	                              mov eax, 0	      2490	prdbg.c	FUNCTION_71	ELSE_1	CALL_3
0x4004709	      0xe800000000	                          call 0x400470e	      2490	prdbg.c	FUNCTION_71	ELSE_1	CALL_3
0x400470e	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2491	prdbg.c	FUNCTION_71	ELSE_1
0x4004712	        0x488945d0	             mov qword [rbp - 0x30], rax	      2491	prdbg.c	FUNCTION_71	ELSE_1
0x4004716	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2494	prdbg.c	FUNCTION_71	IF_3	CALL_4
0x400471a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2494	prdbg.c	FUNCTION_71	IF_3	CALL_4
0x400471e	          0x4889d6	                            mov rsi, rdx	      2494	prdbg.c	FUNCTION_71	IF_3	CALL_4
0x4004721	          0x4889c7	                            mov rdi, rax	      2494	prdbg.c	FUNCTION_71	IF_3	CALL_4
0x4004724	      0xe8cfbbffff	                    call sym.append_type	      2494	prdbg.c	FUNCTION_71	IF_3	CALL_4
0x4004729	            0x85c0	                           test eax, eax	      2494	prdbg.c	FUNCTION_71	IF_3	CALL_4
0x400472b	            0x7507	                           jne 0x4004734	      2494	prdbg.c	FUNCTION_71	IF_3	CALL_4
0x400472d	      0xb800000000	                              mov eax, 0	      2495	prdbg.c	FUNCTION_71	IF_3
0x4004732	            0xeb05	                           jmp 0x4004739	      2495	prdbg.c	FUNCTION_71	IF_3
0x4004734	      0xb801000000	                              mov eax, 1	      2497	prdbg.c	FUNCTION_71
0x4004739	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2498	prdbg.c	FUNCTION_71
0x400473d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2498	prdbg.c	FUNCTION_71
0x4004746	            0x7405	                            je 0x400474d	      2498	prdbg.c	FUNCTION_71
0x4004748	      0xe800000000	                          call 0x400474d	      2498	prdbg.c	FUNCTION_71
0x400474d	              0xc9	                                   leave	      2498	prdbg.c	FUNCTION_71
0x400474e	              0xc3	                                     ret	      2498	prdbg.c	FUNCTION_71
tg_typdef	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,3:DO,0:ELSE,0:IF,1	32
0x400474f	              0x55	                                push rbp	      2504	prdbg.c	FUNCTION_72
0x4004750	          0x4889e5	                            mov rbp, rsp	      2504	prdbg.c	FUNCTION_72
0x4004753	        0x4883ec20	                           sub rsp, 0x20	      2504	prdbg.c	FUNCTION_72
0x4004757	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2504	prdbg.c	FUNCTION_72
0x400475b	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2504	prdbg.c	FUNCTION_72
0x400475f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2505	prdbg.c	FUNCTION_72
0x4004763	        0x488945f0	             mov qword [rbp - 0x10], rax	      2505	prdbg.c	FUNCTION_72
0x4004767	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2508	prdbg.c	FUNCTION_72	CALL_1
0x400476b	          0x4889c7	                            mov rdi, rax	      2508	prdbg.c	FUNCTION_72	CALL_1
0x400476e	      0xe887bfffff	                       call sym.pop_type	      2508	prdbg.c	FUNCTION_72	CALL_1
0x4004773	        0x488945f8	                mov qword [rbp - 8], rax	      2508	prdbg.c	FUNCTION_72	CALL_1
0x4004777	      0x48837df800	                  cmp qword [rbp - 8], 0	      2509	prdbg.c	FUNCTION_72	IF_1
0x400477c	            0x7507	                           jne 0x4004785	      2509	prdbg.c	FUNCTION_72	IF_1
0x400477e	      0xb800000000	                              mov eax, 0	      2510	prdbg.c	FUNCTION_72	IF_1
0x4004783	            0xeb3d	                           jmp 0x40047c2	      2510	prdbg.c	FUNCTION_72	IF_1
0x4004785	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2512	prdbg.c	FUNCTION_72	CALL_2
0x4004789	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      2512	prdbg.c	FUNCTION_72	CALL_2
0x400478d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2512	prdbg.c	FUNCTION_72	CALL_2
0x4004791	          0x488b00	                    mov rax, qword [rax]	      2512	prdbg.c	FUNCTION_72	CALL_2
0x4004794	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2512	prdbg.c	FUNCTION_72	CALL_2
0x4004798	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2512	prdbg.c	FUNCTION_72	CALL_2
0x400479c	          0x4989f0	                             mov r8, rsi	      2512	prdbg.c	FUNCTION_72	CALL_2
0x400479f	      0xbe00000000	                              mov esi, 0	      2512	prdbg.c	FUNCTION_72	CALL_2
0x40047a4	          0x4889c7	                            mov rdi, rax	      2512	prdbg.c	FUNCTION_72	CALL_2
0x40047a7	      0xb800000000	                              mov eax, 0	      2512	prdbg.c	FUNCTION_72	CALL_2
0x40047ac	      0xe800000000	                          call 0x40047b1	      2512	prdbg.c	FUNCTION_72	CALL_2
0x40047b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2515	prdbg.c	FUNCTION_72	CALL_3
0x40047b5	          0x4889c7	                            mov rdi, rax	      2515	prdbg.c	FUNCTION_72	CALL_3
0x40047b8	      0xe800000000	                          call 0x40047bd	      2515	prdbg.c	FUNCTION_72	CALL_3
0x40047bd	      0xb801000000	                              mov eax, 1	      2517	prdbg.c	FUNCTION_72
0x40047c2	              0xc9	                                   leave	      2518	prdbg.c	FUNCTION_72
0x40047c3	              0xc3	                                     ret	      2518	prdbg.c	FUNCTION_72
pr_range_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,9:DO,0:ELSE,0:IF,1	82
0x40010db	              0x55	                                push rbp	       803	prdbg.c	FUNCTION_23
0x40010dc	          0x4889e5	                            mov rbp, rsp	       803	prdbg.c	FUNCTION_23
0x40010df	        0x4883ec70	                           sub rsp, 0x70	       803	prdbg.c	FUNCTION_23
0x40010e3	        0x48897da8	             mov qword [rbp - 0x58], rdi	       803	prdbg.c	FUNCTION_23
0x40010e7	        0x488975a0	             mov qword [rbp - 0x60], rsi	       803	prdbg.c	FUNCTION_23
0x40010eb	        0x48895598	             mov qword [rbp - 0x68], rdx	       803	prdbg.c	FUNCTION_23
0x40010ef	    0x64488b042528	                mov rax, qword fs:[0x28]	       803	prdbg.c	FUNCTION_23
0x40010f8	        0x488945f8	                mov qword [rbp - 8], rax	       803	prdbg.c	FUNCTION_23
0x40010fc	            0x31c0	                            xor eax, eax	       803	prdbg.c	FUNCTION_23
0x40010fe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       804	prdbg.c	FUNCTION_23
0x4001102	        0x488945b8	             mov qword [rbp - 0x48], rax	       804	prdbg.c	FUNCTION_23
0x4001106	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       807	prdbg.c	FUNCTION_23	CALL_1
0x400110a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       807	prdbg.c	FUNCTION_23	CALL_1
0x400110e	          0x4885c0	                           test rax, rax	       807	prdbg.c	FUNCTION_23	CALL_1
0x4001111	            0x7519	                           jne 0x400112c	       807	prdbg.c	FUNCTION_23	CALL_1
0x4001113	      0xb900000000	                              mov ecx, 0	       807	prdbg.c	FUNCTION_23	CALL_1
0x4001118	      0xba27030000	                          mov edx, 0x327	       807	prdbg.c	FUNCTION_23	CALL_1
0x400111d	      0xbe00000000	                              mov esi, 0	       807	prdbg.c	FUNCTION_23	CALL_1
0x4001122	      0xbf00000000	                              mov edi, 0	       807	prdbg.c	FUNCTION_23	CALL_1
0x4001127	      0xe800000000	                          call 0x400112c	       807	prdbg.c	FUNCTION_23	CALL_1
0x400112c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       809	prdbg.c	FUNCTION_23	IF_1	CALL_2
0x4001130	      0xbe00000000	                              mov esi, 0	       809	prdbg.c	FUNCTION_23	IF_1	CALL_2
0x4001135	          0x4889c7	                            mov rdi, rax	       809	prdbg.c	FUNCTION_23	IF_1	CALL_2
0x4001138	      0xe867f3ffff	                call sym.substitute_type	       809	prdbg.c	FUNCTION_23	IF_1	CALL_2
0x400113d	            0x85c0	                           test eax, eax	       809	prdbg.c	FUNCTION_23	IF_1	CALL_2
0x400113f	            0x750a	                           jne 0x400114b	       809	prdbg.c	FUNCTION_23	IF_1	CALL_2
0x4001141	      0xb800000000	                              mov eax, 0	       810	prdbg.c	FUNCTION_23	IF_1
0x4001146	      0xe9ae000000	                           jmp 0x40011f9	       810	prdbg.c	FUNCTION_23	IF_1
0x400114b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       812	prdbg.c	FUNCTION_23	CALL_3
0x400114f	        0x488d75c0	                   lea rsi, [rbp - 0x40]	       812	prdbg.c	FUNCTION_23	CALL_3
0x4001153	      0xb900000000	                              mov ecx, 0	       812	prdbg.c	FUNCTION_23	CALL_3
0x4001158	      0xba00000000	                              mov edx, 0	       812	prdbg.c	FUNCTION_23	CALL_3
0x400115d	          0x4889c7	                            mov rdi, rax	       812	prdbg.c	FUNCTION_23	CALL_3
0x4001160	      0xe800f6ffff	                      call sym.print_vma	       812	prdbg.c	FUNCTION_23	CALL_3
0x4001165	        0x488b4598	             mov rax, qword [rbp - 0x68]	       813	prdbg.c	FUNCTION_23	CALL_4
0x4001169	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       813	prdbg.c	FUNCTION_23	CALL_4
0x400116d	      0xb900000000	                              mov ecx, 0	       813	prdbg.c	FUNCTION_23	CALL_4
0x4001172	      0xba00000000	                              mov edx, 0	       813	prdbg.c	FUNCTION_23	CALL_4
0x4001177	          0x4889c7	                            mov rdi, rax	       813	prdbg.c	FUNCTION_23	CALL_4
0x400117a	      0xe8e6f5ffff	                      call sym.print_vma	       813	prdbg.c	FUNCTION_23	CALL_4
0x400117f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       815	prdbg.c	FUNCTION_23	CALL_5
0x4001183	      0xbe00000000	                              mov esi, 0	       815	prdbg.c	FUNCTION_23	CALL_5
0x4001188	          0x4889c7	                            mov rdi, rax	       815	prdbg.c	FUNCTION_23	CALL_5
0x400118b	      0xe8a5f0ffff	                   call sym.prepend_type	       815	prdbg.c	FUNCTION_23	CALL_5
0x4001190	            0x85c0	                           test eax, eax	       819	prdbg.c	FUNCTION_23	CALL_9
0x4001192	            0x745f	                            je 0x40011f3	       819	prdbg.c	FUNCTION_23	CALL_9
0x4001194	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       816	prdbg.c	FUNCTION_23	CALL_6
0x4001198	      0xbe00000000	                              mov esi, 0	       816	prdbg.c	FUNCTION_23	CALL_6
0x400119d	          0x4889c7	                            mov rdi, rax	       816	prdbg.c	FUNCTION_23	CALL_6
0x40011a0	      0xe853f1ffff	                    call sym.append_type	       816	prdbg.c	FUNCTION_23	CALL_6
0x40011a5	            0x85c0	                           test eax, eax	       816	prdbg.c	FUNCTION_23	CALL_6
0x40011a7	            0x744a	                            je 0x40011f3	       816	prdbg.c	FUNCTION_23	CALL_6
0x40011a9	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       817	prdbg.c	FUNCTION_23	CALL_7
0x40011ad	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       817	prdbg.c	FUNCTION_23	CALL_7
0x40011b1	          0x4889d6	                            mov rsi, rdx	       817	prdbg.c	FUNCTION_23	CALL_7
0x40011b4	          0x4889c7	                            mov rdi, rax	       817	prdbg.c	FUNCTION_23	CALL_7
0x40011b7	      0xe83cf1ffff	                    call sym.append_type	       817	prdbg.c	FUNCTION_23	CALL_7
0x40011bc	            0x85c0	                           test eax, eax	       817	prdbg.c	FUNCTION_23	CALL_7
0x40011be	            0x7433	                            je 0x40011f3	       817	prdbg.c	FUNCTION_23	CALL_7
0x40011c0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       818	prdbg.c	FUNCTION_23	CALL_8
0x40011c4	      0xbe00000000	                              mov esi, 0	       818	prdbg.c	FUNCTION_23	CALL_8
0x40011c9	          0x4889c7	                            mov rdi, rax	       818	prdbg.c	FUNCTION_23	CALL_8
0x40011cc	      0xe827f1ffff	                    call sym.append_type	       818	prdbg.c	FUNCTION_23	CALL_8
0x40011d1	            0x85c0	                           test eax, eax	       818	prdbg.c	FUNCTION_23	CALL_8
0x40011d3	            0x741e	                            je 0x40011f3	       818	prdbg.c	FUNCTION_23	CALL_8
0x40011d5	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       819	prdbg.c	FUNCTION_23	CALL_9
0x40011d9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       819	prdbg.c	FUNCTION_23	CALL_9
0x40011dd	          0x4889d6	                            mov rsi, rdx	       819	prdbg.c	FUNCTION_23	CALL_9
0x40011e0	          0x4889c7	                            mov rdi, rax	       819	prdbg.c	FUNCTION_23	CALL_9
0x40011e3	      0xe810f1ffff	                    call sym.append_type	       819	prdbg.c	FUNCTION_23	CALL_9
0x40011e8	            0x85c0	                           test eax, eax	       819	prdbg.c	FUNCTION_23	CALL_9
0x40011ea	            0x7407	                            je 0x40011f3	       819	prdbg.c	FUNCTION_23	CALL_9
0x40011ec	      0xb801000000	                              mov eax, 1	       819	prdbg.c	FUNCTION_23	CALL_9
0x40011f1	            0xeb05	                           jmp 0x40011f8	       819	prdbg.c	FUNCTION_23	CALL_9
0x40011f3	      0xb800000000	                              mov eax, 0	       819	prdbg.c	FUNCTION_23	CALL_9
0x40011f8	              0x90	                                     nop	       815	prdbg.c	FUNCTION_23	CALL_5
0x40011f9	        0x488b4df8	                mov rcx, qword [rbp - 8]	       820	prdbg.c	FUNCTION_23
0x40011fd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       820	prdbg.c	FUNCTION_23
0x4001206	            0x7405	                            je 0x400120d	       820	prdbg.c	FUNCTION_23
0x4001208	      0xe800000000	                          call 0x400120d	       820	prdbg.c	FUNCTION_23
0x400120d	              0xc9	                                   leave	       820	prdbg.c	FUNCTION_23
0x400120e	              0xc3	                                     ret	       820	prdbg.c	FUNCTION_23
tg_tag	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,2:DO,0:ELSE,0:IF,1	21
0x40047c4	              0x55	                                push rbp	      2525	prdbg.c	FUNCTION_73
0x40047c5	          0x4889e5	                            mov rbp, rsp	      2525	prdbg.c	FUNCTION_73
0x40047c8	        0x4883ec20	                           sub rsp, 0x20	      2525	prdbg.c	FUNCTION_73
0x40047cc	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2525	prdbg.c	FUNCTION_73
0x40047d0	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2525	prdbg.c	FUNCTION_73
0x40047d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2526	prdbg.c	FUNCTION_73
0x40047d8	        0x488945f0	             mov qword [rbp - 0x10], rax	      2526	prdbg.c	FUNCTION_73
0x40047dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2529	prdbg.c	FUNCTION_73	CALL_1
0x40047e0	          0x4889c7	                            mov rdi, rax	      2529	prdbg.c	FUNCTION_73	CALL_1
0x40047e3	      0xe812bfffff	                       call sym.pop_type	      2529	prdbg.c	FUNCTION_73	CALL_1
0x40047e8	        0x488945f8	                mov qword [rbp - 8], rax	      2529	prdbg.c	FUNCTION_73	CALL_1
0x40047ec	      0x48837df800	                  cmp qword [rbp - 8], 0	      2530	prdbg.c	FUNCTION_73	IF_1
0x40047f1	            0x7507	                           jne 0x40047fa	      2530	prdbg.c	FUNCTION_73	IF_1
0x40047f3	      0xb800000000	                              mov eax, 0	      2531	prdbg.c	FUNCTION_73	IF_1
0x40047f8	            0xeb11	                           jmp 0x400480b	      2531	prdbg.c	FUNCTION_73	IF_1
0x40047fa	        0x488b45f8	                mov rax, qword [rbp - 8]	      2532	prdbg.c	FUNCTION_73	CALL_2
0x40047fe	          0x4889c7	                            mov rdi, rax	      2532	prdbg.c	FUNCTION_73	CALL_2
0x4004801	      0xe800000000	                          call 0x4004806	      2532	prdbg.c	FUNCTION_73	CALL_2
0x4004806	      0xb801000000	                              mov eax, 1	      2534	prdbg.c	FUNCTION_73
0x400480b	              0xc9	                                   leave	      2535	prdbg.c	FUNCTION_73
0x400480c	              0xc3	                                     ret	      2535	prdbg.c	FUNCTION_73
pr_class_start_method	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,1:DO,0:ELSE,0:IF,0	23
0x400271a	              0x55	                                push rbp	      1429	prdbg.c	FUNCTION_37
0x400271b	          0x4889e5	                            mov rbp, rsp	      1429	prdbg.c	FUNCTION_37
0x400271e	        0x4883ec20	                           sub rsp, 0x20	      1429	prdbg.c	FUNCTION_37
0x4002722	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1429	prdbg.c	FUNCTION_37
0x4002726	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1429	prdbg.c	FUNCTION_37
0x400272a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1430	prdbg.c	FUNCTION_37
0x400272e	        0x488945f8	                mov qword [rbp - 8], rax	      1430	prdbg.c	FUNCTION_37
0x4002732	        0x488b45f8	                mov rax, qword [rbp - 8]	      1432	prdbg.c	FUNCTION_37	CALL_1
0x4002736	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1432	prdbg.c	FUNCTION_37	CALL_1
0x400273a	          0x4885c0	                           test rax, rax	      1432	prdbg.c	FUNCTION_37	CALL_1
0x400273d	            0x7519	                           jne 0x4002758	      1432	prdbg.c	FUNCTION_37	CALL_1
0x400273f	      0xb900000000	                              mov ecx, 0	      1432	prdbg.c	FUNCTION_37	CALL_1
0x4002744	      0xba98050000	                          mov edx, 0x598	      1432	prdbg.c	FUNCTION_37	CALL_1
0x4002749	      0xbe00000000	                              mov esi, 0	      1432	prdbg.c	FUNCTION_37	CALL_1
0x400274e	      0xbf00000000	                              mov edi, 0	      1432	prdbg.c	FUNCTION_37	CALL_1
0x4002753	      0xe800000000	                          call 0x4002758	      1432	prdbg.c	FUNCTION_37	CALL_1
0x4002758	        0x488b45f8	                mov rax, qword [rbp - 8]	      1433	prdbg.c	FUNCTION_37
0x400275c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1433	prdbg.c	FUNCTION_37
0x4002760	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1433	prdbg.c	FUNCTION_37
0x4002764	        0x48895018	             mov qword [rax + 0x18], rdx	      1433	prdbg.c	FUNCTION_37
0x4002768	      0xb801000000	                              mov eax, 1	      1434	prdbg.c	FUNCTION_37
0x400276d	              0xc9	                                   leave	      1435	prdbg.c	FUNCTION_37
0x400276e	              0xc3	                                     ret	      1435	prdbg.c	FUNCTION_37
pr_start_source	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,2:DO,0:ELSE,0:IF,0	26
0x400083c	              0x55	                                push rbp	       548	prdbg.c	FUNCTION_12
0x400083d	          0x4889e5	                            mov rbp, rsp	       548	prdbg.c	FUNCTION_12
0x4000840	        0x4883ec20	                           sub rsp, 0x20	       548	prdbg.c	FUNCTION_12
0x4000844	        0x48897de8	             mov qword [rbp - 0x18], rdi	       548	prdbg.c	FUNCTION_12
0x4000848	        0x488975e0	             mov qword [rbp - 0x20], rsi	       548	prdbg.c	FUNCTION_12
0x400084c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       549	prdbg.c	FUNCTION_12
0x4000850	        0x488945f8	                mov qword [rbp - 8], rax	       549	prdbg.c	FUNCTION_12
0x4000854	        0x488b45f8	                mov rax, qword [rbp - 8]	       551	prdbg.c	FUNCTION_12	CALL_1
0x4000858	          0x8b4008	                mov eax, dword [rax + 8]	       551	prdbg.c	FUNCTION_12	CALL_1
0x400085b	            0x85c0	                           test eax, eax	       551	prdbg.c	FUNCTION_12	CALL_1
0x400085d	            0x7419	                            je 0x4000878	       551	prdbg.c	FUNCTION_12	CALL_1
0x400085f	      0xb900000000	                              mov ecx, 0	       551	prdbg.c	FUNCTION_12	CALL_1
0x4000864	      0xba27020000	                          mov edx, 0x227	       551	prdbg.c	FUNCTION_12	CALL_1
0x4000869	      0xbe00000000	                              mov esi, 0	       551	prdbg.c	FUNCTION_12	CALL_1
0x400086e	      0xbf00000000	                              mov edi, 0	       551	prdbg.c	FUNCTION_12	CALL_1
0x4000873	      0xe800000000	                          call 0x4000878	       551	prdbg.c	FUNCTION_12	CALL_1
0x4000878	        0x488b45f8	                mov rax, qword [rbp - 8]	       553	prdbg.c	FUNCTION_12	CALL_2
0x400087c	          0x488b00	                    mov rax, qword [rax]	       553	prdbg.c	FUNCTION_12	CALL_2
0x400087f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       553	prdbg.c	FUNCTION_12	CALL_2
0x4000883	      0xbe00000000	                              mov esi, 0	       553	prdbg.c	FUNCTION_12	CALL_2
0x4000888	          0x4889c7	                            mov rdi, rax	       553	prdbg.c	FUNCTION_12	CALL_2
0x400088b	      0xb800000000	                              mov eax, 0	       553	prdbg.c	FUNCTION_12	CALL_2
0x4000890	      0xe800000000	                          call 0x4000895	       553	prdbg.c	FUNCTION_12	CALL_2
0x4000895	      0xb801000000	                              mov eax, 1	       555	prdbg.c	FUNCTION_12
0x400089a	              0xc9	                                   leave	       556	prdbg.c	FUNCTION_12
0x400089b	              0xc3	                                     ret	       556	prdbg.c	FUNCTION_12
tg_class_baseclass	WHILE,0:FOR,0:functions,0:SWITCH,1:CALL,10:DO,0:ELSE,0:IF,9	124
0x4003f67	              0x55	                                push rbp	      2229	prdbg.c	FUNCTION_67
0x4003f68	          0x4889e5	                            mov rbp, rsp	      2229	prdbg.c	FUNCTION_67
0x4003f6b	        0x4883ec40	                           sub rsp, 0x40	      2229	prdbg.c	FUNCTION_67
0x4003f6f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2229	prdbg.c	FUNCTION_67
0x4003f73	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2229	prdbg.c	FUNCTION_67
0x4003f77	          0x8955cc	             mov dword [rbp - 0x34], edx	      2229	prdbg.c	FUNCTION_67
0x4003f7a	          0x894dc8	             mov dword [rbp - 0x38], ecx	      2229	prdbg.c	FUNCTION_67
0x4003f7d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2230	prdbg.c	FUNCTION_67
0x4003f81	        0x488945f8	                mov qword [rbp - 8], rax	      2230	prdbg.c	FUNCTION_67
0x4003f85	        0x488b45f8	                mov rax, qword [rbp - 8]	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003f89	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003f8d	          0x4885c0	                           test rax, rax	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003f90	            0x7410	                            je 0x4003fa2	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003f92	        0x488b45f8	                mov rax, qword [rbp - 8]	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003f96	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003f9a	          0x488b00	                    mov rax, qword [rax]	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003f9d	          0x4885c0	                           test rax, rax	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003fa0	            0x7519	                           jne 0x4003fbb	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003fa2	      0xb900000000	                              mov ecx, 0	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003fa7	      0xbaba080000	                          mov edx, 0x8ba	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003fac	      0xbe00000000	                              mov esi, 0	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003fb1	      0xbf00000000	                              mov edi, 0	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003fb6	      0xe800000000	                          call 0x4003fbb	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003fbb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2236	prdbg.c	FUNCTION_67	CALL_2
0x4003fbf	          0x4889c7	                            mov rdi, rax	      2236	prdbg.c	FUNCTION_67	CALL_2
0x4003fc2	      0xe833c7ffff	                       call sym.pop_type	      2236	prdbg.c	FUNCTION_67	CALL_2
0x4003fc7	        0x488945e8	             mov qword [rbp - 0x18], rax	      2236	prdbg.c	FUNCTION_67	CALL_2
0x4003fcb	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2237	prdbg.c	FUNCTION_67	IF_1
0x4003fd0	            0x750a	                           jne 0x4003fdc	      2237	prdbg.c	FUNCTION_67	IF_1
0x4003fd2	      0xb800000000	                              mov eax, 0	      2238	prdbg.c	FUNCTION_67	IF_1
0x4003fd7	      0xe94a010000	                           jmp 0x4004126	      2238	prdbg.c	FUNCTION_67	IF_1
0x4003fdc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4003fe0	      0xba06000000	                              mov edx, 6	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4003fe5	      0xbe00000000	                              mov esi, 0	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4003fea	          0x4889c7	                            mov rdi, rax	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4003fed	      0xe800000000	                          call 0x4003ff2	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4003ff2	            0x85c0	                           test eax, eax	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4003ff4	            0x7505	                           jne 0x4003ffb	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4003ff6	      0x488345e806	               add qword [rbp - 0x18], 6	      2241	prdbg.c	FUNCTION_67	IF_2
0x4003ffb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2245	prdbg.c	FUNCTION_67	IF_3	CALL_4
0x4003fff	        0x488b45f8	                mov rax, qword [rbp - 8]	      2245	prdbg.c	FUNCTION_67	IF_3	CALL_4
0x4004003	          0x4889d6	                            mov rsi, rdx	      2245	prdbg.c	FUNCTION_67	IF_3	CALL_4
0x4004006	          0x4889c7	                            mov rdi, rax	      2245	prdbg.c	FUNCTION_67	IF_3	CALL_4
0x4004009	      0xe895c1ffff	                      call sym.push_type	      2245	prdbg.c	FUNCTION_67	IF_3	CALL_4
0x400400e	            0x85c0	                           test eax, eax	      2245	prdbg.c	FUNCTION_67	IF_3	CALL_4
0x4004010	            0x750a	                           jne 0x400401c	      2245	prdbg.c	FUNCTION_67	IF_3	CALL_4
0x4004012	      0xb800000000	                              mov eax, 0	      2246	prdbg.c	FUNCTION_67	IF_3
0x4004017	      0xe90a010000	                           jmp 0x4004126	      2246	prdbg.c	FUNCTION_67	IF_3
0x400401c	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2248	prdbg.c	FUNCTION_67	IF_4
0x4004020	            0x741f	                            je 0x4004041	      2248	prdbg.c	FUNCTION_67	IF_4
0x4004022	        0x488b45f8	                mov rax, qword [rbp - 8]	      2250	prdbg.c	FUNCTION_67	IF_4	IF_5	CALL_5
0x4004026	      0xbe00000000	                              mov esi, 0	      2250	prdbg.c	FUNCTION_67	IF_4	IF_5	CALL_5
0x400402b	          0x4889c7	                            mov rdi, rax	      2250	prdbg.c	FUNCTION_67	IF_4	IF_5	CALL_5
0x400402e	      0xe802c2ffff	                   call sym.prepend_type	      2250	prdbg.c	FUNCTION_67	IF_4	IF_5	CALL_5
0x4004033	            0x85c0	                           test eax, eax	      2250	prdbg.c	FUNCTION_67	IF_4	IF_5	CALL_5
0x4004035	            0x750a	                           jne 0x4004041	      2250	prdbg.c	FUNCTION_67	IF_4	IF_5	CALL_5
0x4004037	      0xb800000000	                              mov eax, 0	      2251	prdbg.c	FUNCTION_67	IF_4	IF_5
0x400403c	      0xe9e5000000	                           jmp 0x4004126	      2251	prdbg.c	FUNCTION_67	IF_4	IF_5
0x4004041	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2254	prdbg.c	FUNCTION_67	SWITCH_1
0x4004044	          0x83f801	                              cmp eax, 1	      2254	prdbg.c	FUNCTION_67	SWITCH_1
0x4004047	            0x7416	                            je 0x400405f	      2254	prdbg.c	FUNCTION_67	SWITCH_1
0x4004049	          0x83f801	                              cmp eax, 1	      2254	prdbg.c	FUNCTION_67	SWITCH_1
0x400404c	            0x7207	                            jb 0x4004055	      2254	prdbg.c	FUNCTION_67	SWITCH_1
0x400404e	          0x83f802	                              cmp eax, 2	      2254	prdbg.c	FUNCTION_67	SWITCH_1
0x4004051	            0x7416	                            je 0x4004069	      2254	prdbg.c	FUNCTION_67	SWITCH_1
0x4004053	            0xeb1e	                           jmp 0x4004073	      2254	prdbg.c	FUNCTION_67	SWITCH_1
0x4004055	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2257	prdbg.c	FUNCTION_67	SWITCH_1
0x400405d	            0xeb1d	                           jmp 0x400407c	      2258	prdbg.c	FUNCTION_67	SWITCH_1
0x400405f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2260	prdbg.c	FUNCTION_67	SWITCH_1
0x4004067	            0xeb13	                           jmp 0x400407c	      2261	prdbg.c	FUNCTION_67	SWITCH_1
0x4004069	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2263	prdbg.c	FUNCTION_67	SWITCH_1
0x4004071	            0xeb09	                           jmp 0x400407c	      2264	prdbg.c	FUNCTION_67	SWITCH_1
0x4004073	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2266	prdbg.c	FUNCTION_67	SWITCH_1
0x400407b	              0x90	                                     nop	      2267	prdbg.c	FUNCTION_67	SWITCH_1
0x400407c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2270	prdbg.c	FUNCTION_67	IF_6	CALL_6
0x4004080	        0x488b45f8	                mov rax, qword [rbp - 8]	      2270	prdbg.c	FUNCTION_67	IF_6	CALL_6
0x4004084	          0x4889d6	                            mov rsi, rdx	      2270	prdbg.c	FUNCTION_67	IF_6	CALL_6
0x4004087	          0x4889c7	                            mov rdi, rax	      2270	prdbg.c	FUNCTION_67	IF_6	CALL_6
0x400408a	      0xe8a6c1ffff	                   call sym.prepend_type	      2270	prdbg.c	FUNCTION_67	IF_6	CALL_6
0x400408f	            0x85c0	                           test eax, eax	      2270	prdbg.c	FUNCTION_67	IF_6	CALL_6
0x4004091	            0x750a	                           jne 0x400409d	      2270	prdbg.c	FUNCTION_67	IF_6	CALL_6
0x4004093	      0xb800000000	                              mov eax, 0	      2271	prdbg.c	FUNCTION_67	IF_6
0x4004098	      0xe989000000	                           jmp 0x4004126	      2271	prdbg.c	FUNCTION_67	IF_6
0x400409d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2273	prdbg.c	FUNCTION_67	CALL_7
0x40040a1	          0x4889c7	                            mov rdi, rax	      2273	prdbg.c	FUNCTION_67	CALL_7
0x40040a4	      0xe851c6ffff	                       call sym.pop_type	      2273	prdbg.c	FUNCTION_67	CALL_7
0x40040a9	        0x488945e8	             mov qword [rbp - 0x18], rax	      2273	prdbg.c	FUNCTION_67	CALL_7
0x40040ad	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2274	prdbg.c	FUNCTION_67	IF_7
0x40040b2	            0x7507	                           jne 0x40040bb	      2274	prdbg.c	FUNCTION_67	IF_7
0x40040b4	      0xb800000000	                              mov eax, 0	      2275	prdbg.c	FUNCTION_67	IF_7
0x40040b9	            0xeb6b	                           jmp 0x4004126	      2275	prdbg.c	FUNCTION_67	IF_7
0x40040bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40040bf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40040c3	          0x8b4030	            mov eax, dword [rax + 0x30] 	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40040c6	            0x85c0	                           test eax, eax	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40040c8	            0x741c	                            je 0x40040e6	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40040ca	        0x488b45f8	                mov rax, qword [rbp - 8]	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40040ce	      0xbe00000000	                              mov esi, 0	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40040d3	          0x4889c7	                            mov rdi, rax	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40040d6	      0xe8e7c2ffff	                  call sym.append_parent	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40040db	            0x85c0	                           test eax, eax	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40040dd	            0x7507	                           jne 0x40040e6	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40040df	      0xb800000000	                              mov eax, 0	      2278	prdbg.c	FUNCTION_67	IF_8
0x40040e4	            0xeb40	                           jmp 0x4004126	      2278	prdbg.c	FUNCTION_67	IF_8
0x40040e6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2280	prdbg.c	FUNCTION_67	IF_9	CALL_9
0x40040ea	        0x488b45f8	                mov rax, qword [rbp - 8]	      2280	prdbg.c	FUNCTION_67	IF_9	CALL_9
0x40040ee	          0x4889d6	                            mov rsi, rdx	      2280	prdbg.c	FUNCTION_67	IF_9	CALL_9
0x40040f1	          0x4889c7	                            mov rdi, rax	      2280	prdbg.c	FUNCTION_67	IF_9	CALL_9
0x40040f4	      0xe8c9c2ffff	                  call sym.append_parent	      2280	prdbg.c	FUNCTION_67	IF_9	CALL_9
0x40040f9	            0x85c0	                           test eax, eax	      2280	prdbg.c	FUNCTION_67	IF_9	CALL_9
0x40040fb	            0x7507	                           jne 0x4004104	      2280	prdbg.c	FUNCTION_67	IF_9	CALL_9
0x40040fd	      0xb800000000	                              mov eax, 0	      2281	prdbg.c	FUNCTION_67	IF_9
0x4004102	            0xeb22	                           jmp 0x4004126	      2281	prdbg.c	FUNCTION_67	IF_9
0x4004104	        0x488b45f8	                mov rax, qword [rbp - 8]	      2282	prdbg.c	FUNCTION_67
0x4004108	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2282	prdbg.c	FUNCTION_67
0x400410c	          0x8b5030	            mov edx, dword [rax + 0x30] 	      2282	prdbg.c	FUNCTION_67
0x400410f	          0x83c201	                              add edx, 1	      2282	prdbg.c	FUNCTION_67
0x4004112	          0x895030	             mov dword [rax + 0x30], edx	      2282	prdbg.c	FUNCTION_67
0x4004115	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2284	prdbg.c	FUNCTION_67	CALL_10
0x4004119	          0x4889c7	                            mov rdi, rax	      2284	prdbg.c	FUNCTION_67	CALL_10
0x400411c	      0xe800000000	                          call 0x4004121	      2284	prdbg.c	FUNCTION_67	CALL_10
0x4004121	      0xb801000000	                              mov eax, 1	      2286	prdbg.c	FUNCTION_67
0x4004126	              0xc9	                                   leave	      2287	prdbg.c	FUNCTION_67
0x4004127	              0xc3	                                     ret	      2287	prdbg.c	FUNCTION_67
print_vma	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,10:DO,0:ELSE,8:IF,8	34
0x4000765	              0x55	                                push rbp	       492	prdbg.c	FUNCTION_10
0x4000766	          0x4889e5	                            mov rbp, rsp	       492	prdbg.c	FUNCTION_10
0x4000769	        0x4883ec20	                           sub rsp, 0x20	       492	prdbg.c	FUNCTION_10
0x400076d	        0x48897df8	                mov qword [rbp - 8], rdi	       492	prdbg.c	FUNCTION_10
0x4000771	        0x488975f0	             mov qword [rbp - 0x10], rsi	       492	prdbg.c	FUNCTION_10
0x4000775	          0x8955ec	             mov dword [rbp - 0x14], edx	       492	prdbg.c	FUNCTION_10
0x4000778	          0x894de8	             mov dword [rbp - 0x18], ecx	       492	prdbg.c	FUNCTION_10
0x400077b	        0x837de800	               cmp dword [rbp - 0x18], 0	       495	prdbg.c	FUNCTION_10	IF_1	IF_2
0x400077f	            0x741c	                            je 0x400079d	       495	prdbg.c	FUNCTION_10	IF_1	IF_2
0x4000781	        0x488b55f8	                mov rdx, qword [rbp - 8]	       496	prdbg.c	FUNCTION_10	IF_1	CALL_1
0x4000785	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       496	prdbg.c	FUNCTION_10	IF_1	CALL_1
0x4000789	      0xbe00000000	                              mov esi, 0	       496	prdbg.c	FUNCTION_10	IF_1	CALL_1
0x400078e	          0x4889c7	                            mov rdi, rax	       496	prdbg.c	FUNCTION_10	IF_1	CALL_1
0x4000791	      0xb800000000	                              mov eax, 0	       496	prdbg.c	FUNCTION_10	IF_1	CALL_1
0x4000796	      0xe800000000	                          call 0x400079b	       496	prdbg.c	FUNCTION_10	IF_1	CALL_1
0x400079b	            0xeb3c	                           jmp 0x40007d9	       528	prdbg.c	FUNCTION_10
0x400079d	        0x837dec00	               cmp dword [rbp - 0x14], 0	       497	prdbg.c	FUNCTION_10	IF_1	ELSE_1	IF_3
0x40007a1	            0x741c	                            je 0x40007bf	       497	prdbg.c	FUNCTION_10	IF_1	ELSE_1	IF_3
0x40007a3	        0x488b55f8	                mov rdx, qword [rbp - 8]	       498	prdbg.c	FUNCTION_10	IF_1	ELSE_1	IF_3
0x40007a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       498	prdbg.c	FUNCTION_10	IF_1	ELSE_1	IF_3
0x40007ab	      0xbe00000000	                              mov esi, 0	       498	prdbg.c	FUNCTION_10	IF_1	ELSE_1	IF_3
0x40007b0	          0x4889c7	                            mov rdi, rax	       498	prdbg.c	FUNCTION_10	IF_1	ELSE_1	IF_3
0x40007b3	      0xb800000000	                              mov eax, 0	       498	prdbg.c	FUNCTION_10	IF_1	ELSE_1	IF_3
0x40007b8	      0xe800000000	                          call 0x40007bd	       498	prdbg.c	FUNCTION_10	IF_1	ELSE_1	IF_3
0x40007bd	            0xeb1a	                           jmp 0x40007d9	       528	prdbg.c	FUNCTION_10
0x40007bf	        0x488b55f8	                mov rdx, qword [rbp - 8]	       500	prdbg.c	FUNCTION_10	IF_1	CALL_3
0x40007c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       500	prdbg.c	FUNCTION_10	IF_1	CALL_3
0x40007c7	      0xbe00000000	                              mov esi, 0	       500	prdbg.c	FUNCTION_10	IF_1	CALL_3
0x40007cc	          0x4889c7	                            mov rdi, rax	       500	prdbg.c	FUNCTION_10	IF_1	CALL_3
0x40007cf	      0xb800000000	                              mov eax, 0	       500	prdbg.c	FUNCTION_10	IF_1	CALL_3
0x40007d4	      0xe800000000	                          call 0x40007d9	       500	prdbg.c	FUNCTION_10	IF_1	CALL_3
0x40007d9	              0x90	                                     nop	       528	prdbg.c	FUNCTION_10
0x40007da	              0xc9	                                   leave	       528	prdbg.c	FUNCTION_10
0x40007db	              0xc3	                                     ret	       528	prdbg.c	FUNCTION_10
pr_float_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,4:DO,0:ELSE,1:IF,2	42
0x4000973	              0x55	                                push rbp	       594	prdbg.c	FUNCTION_16
0x4000974	          0x4889e5	                            mov rbp, rsp	       594	prdbg.c	FUNCTION_16
0x4000977	        0x4883ec50	                           sub rsp, 0x50	       594	prdbg.c	FUNCTION_16
0x400097b	        0x48897db8	             mov qword [rbp - 0x48], rdi	       594	prdbg.c	FUNCTION_16
0x400097f	          0x8975b4	             mov dword [rbp - 0x4c], esi	       594	prdbg.c	FUNCTION_16
0x4000982	    0x64488b042528	                mov rax, qword fs:[0x28]	       594	prdbg.c	FUNCTION_16
0x400098b	        0x488945f8	                mov qword [rbp - 8], rax	       594	prdbg.c	FUNCTION_16
0x400098f	            0x31c0	                            xor eax, eax	       594	prdbg.c	FUNCTION_16
0x4000991	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       595	prdbg.c	FUNCTION_16
0x4000995	        0x488945c8	             mov qword [rbp - 0x38], rax	       595	prdbg.c	FUNCTION_16
0x4000999	        0x837db404	               cmp dword [rbp - 0x4c], 4	       598	prdbg.c	FUNCTION_16	IF_1
0x400099d	            0x7513	                           jne 0x40009b2	       598	prdbg.c	FUNCTION_16	IF_1
0x400099f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       599	prdbg.c	FUNCTION_16	CALL_1
0x40009a3	      0xbe00000000	                              mov esi, 0	       599	prdbg.c	FUNCTION_16	CALL_1
0x40009a8	          0x4889c7	                            mov rdi, rax	       599	prdbg.c	FUNCTION_16	CALL_1
0x40009ab	      0xe8f3f7ffff	                      call sym.push_type	       599	prdbg.c	FUNCTION_16	CALL_1
0x40009b0	            0xeb4c	                           jmp 0x40009fe	       599	prdbg.c	FUNCTION_16	CALL_1
0x40009b2	        0x837db408	               cmp dword [rbp - 0x4c], 8	       600	prdbg.c	FUNCTION_16	ELSE_1	IF_2
0x40009b6	            0x7513	                           jne 0x40009cb	       600	prdbg.c	FUNCTION_16	ELSE_1	IF_2
0x40009b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       601	prdbg.c	FUNCTION_16	ELSE_1	IF_2
0x40009bc	      0xbe00000000	                              mov esi, 0	       601	prdbg.c	FUNCTION_16	ELSE_1	IF_2
0x40009c1	          0x4889c7	                            mov rdi, rax	       601	prdbg.c	FUNCTION_16	ELSE_1	IF_2
0x40009c4	      0xe8daf7ffff	                      call sym.push_type	       601	prdbg.c	FUNCTION_16	ELSE_1	IF_2
0x40009c9	            0xeb33	                           jmp 0x40009fe	       601	prdbg.c	FUNCTION_16	ELSE_1	IF_2
0x40009cb	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       603	prdbg.c	FUNCTION_16	CALL_3
0x40009ce	    0x8d14c5000000	                        lea edx, [rax*8]	       603	prdbg.c	FUNCTION_16	CALL_3
0x40009d5	        0x488d45d0	                   lea rax, [rbp - 0x30]	       603	prdbg.c	FUNCTION_16	CALL_3
0x40009d9	      0xbe00000000	                              mov esi, 0	       603	prdbg.c	FUNCTION_16	CALL_3
0x40009de	          0x4889c7	                            mov rdi, rax	       603	prdbg.c	FUNCTION_16	CALL_3
0x40009e1	      0xb800000000	                              mov eax, 0	       603	prdbg.c	FUNCTION_16	CALL_3
0x40009e6	      0xe800000000	                          call 0x40009eb	       603	prdbg.c	FUNCTION_16	CALL_3
0x40009eb	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       604	prdbg.c	FUNCTION_16	CALL_4
0x40009ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       604	prdbg.c	FUNCTION_16	CALL_4
0x40009f3	          0x4889d6	                            mov rsi, rdx	       604	prdbg.c	FUNCTION_16	CALL_4
0x40009f6	          0x4889c7	                            mov rdi, rax	       604	prdbg.c	FUNCTION_16	CALL_4
0x40009f9	      0xe8a5f7ffff	                      call sym.push_type	       604	prdbg.c	FUNCTION_16	CALL_4
0x40009fe	        0x488b4df8	                mov rcx, qword [rbp - 8]	       605	prdbg.c	FUNCTION_16
0x4000a02	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       605	prdbg.c	FUNCTION_16
0x4000a0b	            0x7405	                            je 0x4000a12	       605	prdbg.c	FUNCTION_16
0x4000a0d	      0xe800000000	                          call 0x4000a12	       605	prdbg.c	FUNCTION_16
0x4000a12	              0xc9	                                   leave	       605	prdbg.c	FUNCTION_16
0x4000a13	              0xc3	                                     ret	       605	prdbg.c	FUNCTION_16
pr_start_function	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,5:DO,0:ELSE,0:IF,3	49
0x40031c4	              0x55	                                push rbp	      1785	prdbg.c	FUNCTION_50
0x40031c5	          0x4889e5	                            mov rbp, rsp	      1785	prdbg.c	FUNCTION_50
0x40031c8	        0x4883ec30	                           sub rsp, 0x30	      1785	prdbg.c	FUNCTION_50
0x40031cc	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1785	prdbg.c	FUNCTION_50
0x40031d0	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1785	prdbg.c	FUNCTION_50
0x40031d4	          0x8955dc	             mov dword [rbp - 0x24], edx	      1785	prdbg.c	FUNCTION_50
0x40031d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1786	prdbg.c	FUNCTION_50
0x40031db	        0x488945f0	             mov qword [rbp - 0x10], rax	      1786	prdbg.c	FUNCTION_50
0x40031df	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1789	prdbg.c	FUNCTION_50	IF_1	CALL_1
0x40031e3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1789	prdbg.c	FUNCTION_50	IF_1	CALL_1
0x40031e7	          0x4889d6	                            mov rsi, rdx	      1789	prdbg.c	FUNCTION_50	IF_1	CALL_1
0x40031ea	          0x4889c7	                            mov rdi, rax	      1789	prdbg.c	FUNCTION_50	IF_1	CALL_1
0x40031ed	      0xe8b2d2ffff	                call sym.substitute_type	      1789	prdbg.c	FUNCTION_50	IF_1	CALL_1
0x40031f2	            0x85c0	                           test eax, eax	      1789	prdbg.c	FUNCTION_50	IF_1	CALL_1
0x40031f4	            0x7507	                           jne 0x40031fd	      1789	prdbg.c	FUNCTION_50	IF_1	CALL_1
0x40031f6	      0xb800000000	                              mov eax, 0	      1790	prdbg.c	FUNCTION_50	IF_1
0x40031fb	            0xeb7b	                           jmp 0x4003278	      1790	prdbg.c	FUNCTION_50	IF_1
0x40031fd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1792	prdbg.c	FUNCTION_50	CALL_2
0x4003201	          0x4889c7	                            mov rdi, rax	      1792	prdbg.c	FUNCTION_50	CALL_2
0x4003204	      0xe8f1d4ffff	                       call sym.pop_type	      1792	prdbg.c	FUNCTION_50	CALL_2
0x4003209	        0x488945f8	                mov qword [rbp - 8], rax	      1792	prdbg.c	FUNCTION_50	CALL_2
0x400320d	      0x48837df800	                  cmp qword [rbp - 8], 0	      1793	prdbg.c	FUNCTION_50	IF_2
0x4003212	            0x7507	                           jne 0x400321b	      1793	prdbg.c	FUNCTION_50	IF_2
0x4003214	      0xb800000000	                              mov eax, 0	      1794	prdbg.c	FUNCTION_50	IF_2
0x4003219	            0xeb5d	                           jmp 0x4003278	      1794	prdbg.c	FUNCTION_50	IF_2
0x400321b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1796	prdbg.c	FUNCTION_50	CALL_3
0x400321f	          0x4889c7	                            mov rdi, rax	      1796	prdbg.c	FUNCTION_50	CALL_3
0x4003222	      0xe840cfffff	                         call sym.indent	      1796	prdbg.c	FUNCTION_50	CALL_3
0x4003227	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1797	prdbg.c	FUNCTION_50	IF_3
0x400322b	            0x751e	                           jne 0x400324b	      1797	prdbg.c	FUNCTION_50	IF_3
0x400322d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1798	prdbg.c	FUNCTION_50	CALL_4
0x4003231	          0x488b00	                    mov rax, qword [rax]	      1798	prdbg.c	FUNCTION_50	CALL_4
0x4003234	          0x4889c1	                            mov rcx, rax	      1798	prdbg.c	FUNCTION_50	CALL_4
0x4003237	      0xba07000000	                              mov edx, 7	      1798	prdbg.c	FUNCTION_50	CALL_4
0x400323c	      0xbe01000000	                              mov esi, 1	      1798	prdbg.c	FUNCTION_50	CALL_4
0x4003241	      0xbf00000000	                              mov edi, 0	      1798	prdbg.c	FUNCTION_50	CALL_4
0x4003246	      0xe800000000	                          call 0x400324b	      1798	prdbg.c	FUNCTION_50	CALL_4
0x400324b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1799	prdbg.c	FUNCTION_50	CALL_5
0x400324f	          0x488b00	                    mov rax, qword [rax]	      1799	prdbg.c	FUNCTION_50	CALL_5
0x4003252	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1799	prdbg.c	FUNCTION_50	CALL_5
0x4003256	      0xbe00000000	                              mov esi, 0	      1799	prdbg.c	FUNCTION_50	CALL_5
0x400325b	          0x4889c7	                            mov rdi, rax	      1799	prdbg.c	FUNCTION_50	CALL_5
0x400325e	      0xb800000000	                              mov eax, 0	      1799	prdbg.c	FUNCTION_50	CALL_5
0x4003263	      0xe800000000	                          call 0x4003268	      1799	prdbg.c	FUNCTION_50	CALL_5
0x4003268	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1801	prdbg.c	FUNCTION_50
0x400326c	    0xc74018010000	               mov dword [rax + 0x18], 1	      1801	prdbg.c	FUNCTION_50
0x4003273	      0xb801000000	                              mov eax, 1	      1803	prdbg.c	FUNCTION_50
0x4003278	              0xc9	                                   leave	      1804	prdbg.c	FUNCTION_50
0x4003279	              0xc3	                                     ret	      1804	prdbg.c	FUNCTION_50
pr_start_class_type	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,19:DO,0:ELSE,2:IF,19	202
0x4001f99	              0x55	                                push rbp	      1218	prdbg.c	FUNCTION_34
0x4001f9a	          0x4889e5	                            mov rbp, rsp	      1218	prdbg.c	FUNCTION_34
0x4001f9d	        0x4883ec60	                           sub rsp, 0x60	      1218	prdbg.c	FUNCTION_34
0x4001fa1	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1218	prdbg.c	FUNCTION_34
0x4001fa5	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1218	prdbg.c	FUNCTION_34
0x4001fa9	          0x8955ac	             mov dword [rbp - 0x54], edx	      1218	prdbg.c	FUNCTION_34
0x4001fac	          0x894da8	             mov dword [rbp - 0x58], ecx	      1218	prdbg.c	FUNCTION_34
0x4001faf	        0x448945a4	             mov dword [rbp - 0x5c], r8d	      1218	prdbg.c	FUNCTION_34
0x4001fb3	        0x44894da0	             mov dword [rbp - 0x60], r9d	      1218	prdbg.c	FUNCTION_34
0x4001fb7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1218	prdbg.c	FUNCTION_34
0x4001fc0	        0x488945f8	                mov qword [rbp - 8], rax	      1218	prdbg.c	FUNCTION_34
0x4001fc4	            0x31c0	                            xor eax, eax	      1218	prdbg.c	FUNCTION_34
0x4001fc6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1219	prdbg.c	FUNCTION_34
0x4001fca	        0x488945c8	             mov qword [rbp - 0x38], rax	      1219	prdbg.c	FUNCTION_34
0x4001fce	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1220	prdbg.c	FUNCTION_34
0x4001fd6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1222	prdbg.c	FUNCTION_34
0x4001fda	          0x8b4008	                mov eax, dword [rax + 8]	      1222	prdbg.c	FUNCTION_34
0x4001fdd	          0x8d5002	                      lea edx, [rax + 2]	      1222	prdbg.c	FUNCTION_34
0x4001fe0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1222	prdbg.c	FUNCTION_34
0x4001fe4	          0x895008	                mov dword [rax + 8], edx	      1222	prdbg.c	FUNCTION_34
0x4001fe7	        0x837da000	               cmp dword [rbp - 0x60], 0	      1224	prdbg.c	FUNCTION_34	IF_1
0x4001feb	            0x7427	                            je 0x4002014	      1224	prdbg.c	FUNCTION_34	IF_1
0x4001fed	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1224	prdbg.c	FUNCTION_34	IF_1
0x4001ff1	            0x7521	                           jne 0x4002014	      1224	prdbg.c	FUNCTION_34	IF_1
0x4001ff3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1226	prdbg.c	FUNCTION_34	IF_1	CALL_1
0x4001ff7	          0x4889c7	                            mov rdi, rax	      1226	prdbg.c	FUNCTION_34	IF_1	CALL_1
0x4001ffa	      0xe8fbe6ffff	                       call sym.pop_type	      1226	prdbg.c	FUNCTION_34	IF_1	CALL_1
0x4001fff	        0x488945c0	             mov qword [rbp - 0x40], rax	      1226	prdbg.c	FUNCTION_34	IF_1	CALL_1
0x4002003	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1227	prdbg.c	FUNCTION_34	IF_1	IF_2
0x4002008	            0x750a	                           jne 0x4002014	      1227	prdbg.c	FUNCTION_34	IF_1	IF_2
0x400200a	      0xb800000000	                              mov eax, 0	      1228	prdbg.c	FUNCTION_34	IF_1	IF_2
0x400200f	      0xe95c020000	                           jmp 0x4002270	      1228	prdbg.c	FUNCTION_34	IF_1	IF_2
0x4002014	        0x837da800	               cmp dword [rbp - 0x58], 0	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x4002018	            0x7407	                            je 0x4002021	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x400201a	      0xba00000000	                              mov edx, 0	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x400201f	            0xeb05	                           jmp 0x4002026	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x4002021	      0xba00000000	                              mov edx, 0	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x4002026	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x400202a	          0x4889d6	                            mov rsi, rdx	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x400202d	          0x4889c7	                            mov rdi, rax	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x4002030	      0xe86ee1ffff	                      call sym.push_type	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x4002035	            0x85c0	                           test eax, eax	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x4002037	            0x750a	                           jne 0x4002043	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x4002039	      0xb800000000	                              mov eax, 0	      1232	prdbg.c	FUNCTION_34	IF_3
0x400203e	      0xe92d020000	                           jmp 0x4002270	      1232	prdbg.c	FUNCTION_34	IF_3
0x4002043	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1233	prdbg.c	FUNCTION_34	IF_4
0x4002048	            0x7421	                            je 0x400206b	      1233	prdbg.c	FUNCTION_34	IF_4
0x400204a	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x400204e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x4002052	          0x4889d6	                            mov rsi, rdx	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x4002055	          0x4889c7	                            mov rdi, rax	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x4002058	      0xe89be2ffff	                    call sym.append_type	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x400205d	            0x85c0	                           test eax, eax	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x400205f	            0x7544	                           jne 0x40020a5	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x4002061	      0xb800000000	                              mov eax, 0	      1236	prdbg.c	FUNCTION_34	IF_4	IF_5
0x4002066	      0xe905020000	                           jmp 0x4002270	      1236	prdbg.c	FUNCTION_34	IF_4	IF_5
0x400206b	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1242	prdbg.c	FUNCTION_34	ELSE_1	CALL_4
0x400206e	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1242	prdbg.c	FUNCTION_34	ELSE_1	CALL_4
0x4002072	      0xbe00000000	                              mov esi, 0	      1242	prdbg.c	FUNCTION_34	ELSE_1	CALL_4
0x4002077	          0x4889c7	                            mov rdi, rax	      1242	prdbg.c	FUNCTION_34	ELSE_1	CALL_4
0x400207a	      0xb800000000	                              mov eax, 0	      1242	prdbg.c	FUNCTION_34	ELSE_1	CALL_4
0x400207f	      0xe800000000	                          call 0x4002084	      1242	prdbg.c	FUNCTION_34	ELSE_1	CALL_4
0x4002084	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_5
0x4002088	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_5
0x400208c	          0x4889d6	                            mov rsi, rdx	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_5
0x400208f	          0x4889c7	                            mov rdi, rax	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_5
0x4002092	      0xe861e2ffff	                    call sym.append_type	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_5
0x4002097	            0x85c0	                           test eax, eax	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_5
0x4002099	            0x750a	                           jne 0x40020a5	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_5
0x400209b	      0xb800000000	                              mov eax, 0	      1244	prdbg.c	FUNCTION_34	ELSE_1	IF_6
0x40020a0	      0xe9cb010000	                           jmp 0x4002270	      1244	prdbg.c	FUNCTION_34	ELSE_1	IF_6
0x40020a5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1247	prdbg.c	FUNCTION_34	IF_7	CALL_6
0x40020a9	      0xbe00000000	                              mov esi, 0	      1247	prdbg.c	FUNCTION_34	IF_7	CALL_6
0x40020ae	          0x4889c7	                            mov rdi, rax	      1247	prdbg.c	FUNCTION_34	IF_7	CALL_6
0x40020b1	      0xe842e2ffff	                    call sym.append_type	      1247	prdbg.c	FUNCTION_34	IF_7	CALL_6
0x40020b6	            0x85c0	                           test eax, eax	      1247	prdbg.c	FUNCTION_34	IF_7	CALL_6
0x40020b8	            0x750a	                           jne 0x40020c4	      1247	prdbg.c	FUNCTION_34	IF_7	CALL_6
0x40020ba	      0xb800000000	                              mov eax, 0	      1248	prdbg.c	FUNCTION_34	IF_7
0x40020bf	      0xe9ac010000	                           jmp 0x4002270	      1248	prdbg.c	FUNCTION_34	IF_7
0x40020c4	        0x837da400	               cmp dword [rbp - 0x5c], 0	      1249	prdbg.c	FUNCTION_34	IF_8
0x40020c8	            0x7517	                           jne 0x40020e1	      1249	prdbg.c	FUNCTION_34	IF_8
0x40020ca	        0x837da000	               cmp dword [rbp - 0x60], 0	      1249	prdbg.c	FUNCTION_34	IF_8
0x40020ce	            0x7511	                           jne 0x40020e1	      1249	prdbg.c	FUNCTION_34	IF_8
0x40020d0	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1249	prdbg.c	FUNCTION_34	IF_8
0x40020d4	            0x750b	                           jne 0x40020e1	      1249	prdbg.c	FUNCTION_34	IF_8
0x40020d6	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1249	prdbg.c	FUNCTION_34	IF_8
0x40020db	     0xf844e010000	                            je 0x400222f	      1249	prdbg.c	FUNCTION_34	IF_8
0x40020e1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1251	prdbg.c	FUNCTION_34	IF_8	IF_9	CALL_7
0x40020e5	      0xbe00000000	                              mov esi, 0	      1251	prdbg.c	FUNCTION_34	IF_8	IF_9	CALL_7
0x40020ea	          0x4889c7	                            mov rdi, rax	      1251	prdbg.c	FUNCTION_34	IF_8	IF_9	CALL_7
0x40020ed	      0xe806e2ffff	                    call sym.append_type	      1251	prdbg.c	FUNCTION_34	IF_8	IF_9	CALL_7
0x40020f2	            0x85c0	                           test eax, eax	      1251	prdbg.c	FUNCTION_34	IF_8	IF_9	CALL_7
0x40020f4	            0x750a	                           jne 0x4002100	      1251	prdbg.c	FUNCTION_34	IF_8	IF_9	CALL_7
0x40020f6	      0xb800000000	                              mov eax, 0	      1252	prdbg.c	FUNCTION_34	IF_8	IF_9
0x40020fb	      0xe970010000	                           jmp 0x4002270	      1252	prdbg.c	FUNCTION_34	IF_8	IF_9
0x4002100	        0x837da400	               cmp dword [rbp - 0x5c], 0	      1254	prdbg.c	FUNCTION_34	IF_8	IF_10
0x4002104	            0x744f	                            je 0x4002155	      1254	prdbg.c	FUNCTION_34	IF_8	IF_10
0x4002106	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	      1258	prdbg.c	FUNCTION_34	IF_8	IF_10	CALL_8
0x4002109	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1258	prdbg.c	FUNCTION_34	IF_8	IF_10	CALL_8
0x400210d	      0xbe00000000	                              mov esi, 0	      1258	prdbg.c	FUNCTION_34	IF_8	IF_10	CALL_8
0x4002112	          0x4889c7	                            mov rdi, rax	      1258	prdbg.c	FUNCTION_34	IF_8	IF_10	CALL_8
0x4002115	      0xb800000000	                              mov eax, 0	      1258	prdbg.c	FUNCTION_34	IF_8	IF_10	CALL_8
0x400211a	      0xe800000000	                          call 0x400211f	      1258	prdbg.c	FUNCTION_34	IF_8	IF_10	CALL_8
0x400211f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1259	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_9
0x4002123	      0xbe00000000	                              mov esi, 0	      1259	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_9
0x4002128	          0x4889c7	                            mov rdi, rax	      1259	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_9
0x400212b	      0xe8c8e1ffff	                    call sym.append_type	      1259	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_9
0x4002130	            0x85c0	                           test eax, eax	      1259	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_9
0x4002132	            0x7417	                            je 0x400214b	      1259	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_9
0x4002134	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_10
0x4002138	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_10
0x400213c	          0x4889d6	                            mov rsi, rdx	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_10
0x400213f	          0x4889c7	                            mov rdi, rax	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_10
0x4002142	      0xe8b1e1ffff	                    call sym.append_type	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_10
0x4002147	            0x85c0	                           test eax, eax	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_10
0x4002149	            0x750a	                           jne 0x4002155	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_10
0x400214b	      0xb800000000	                              mov eax, 0	      1261	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11
0x4002150	      0xe91b010000	                           jmp 0x4002270	      1261	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11
0x4002155	        0x837da000	               cmp dword [rbp - 0x60], 0	      1264	prdbg.c	FUNCTION_34	IF_8	IF_12
0x4002159	            0x747a	                            je 0x40021d5	      1264	prdbg.c	FUNCTION_34	IF_8	IF_12
0x400215b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1266	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13	CALL_11
0x400215f	      0xbe00000000	                              mov esi, 0	      1266	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13	CALL_11
0x4002164	          0x4889c7	                            mov rdi, rax	      1266	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13	CALL_11
0x4002167	      0xe88ce1ffff	                    call sym.append_type	      1266	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13	CALL_11
0x400216c	            0x85c0	                           test eax, eax	      1266	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13	CALL_11
0x400216e	            0x750a	                           jne 0x400217a	      1266	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13	CALL_11
0x4002170	      0xb800000000	                              mov eax, 0	      1267	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13
0x4002175	      0xe9f6000000	                           jmp 0x4002270	      1267	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13
0x400217a	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1268	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14
0x400217e	            0x741f	                            je 0x400219f	      1268	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14
0x4002180	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_12
0x4002184	      0xbe00000000	                              mov esi, 0	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_12
0x4002189	          0x4889c7	                            mov rdi, rax	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_12
0x400218c	      0xe867e1ffff	                    call sym.append_type	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_12
0x4002191	            0x85c0	                           test eax, eax	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_12
0x4002193	            0x7540	                           jne 0x40021d5	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_12
0x4002195	      0xb800000000	                              mov eax, 0	      1271	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15
0x400219a	      0xe9d1000000	                           jmp 0x4002270	      1271	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15
0x400219f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1275	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_13
0x40021a3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1275	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_13
0x40021a7	          0x4889d6	                            mov rsi, rdx	      1275	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_13
0x40021aa	          0x4889c7	                            mov rdi, rax	      1275	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_13
0x40021ad	      0xe846e1ffff	                    call sym.append_type	      1275	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_13
0x40021b2	            0x85c0	                           test eax, eax	      1275	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_13
0x40021b4	            0x7415	                            je 0x40021cb	      1275	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_13
0x40021b6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1276	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_14
0x40021ba	      0xbe00000000	                              mov esi, 0	      1276	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_14
0x40021bf	          0x4889c7	                            mov rdi, rax	      1276	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_14
0x40021c2	      0xe831e1ffff	                    call sym.append_type	      1276	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_14
0x40021c7	            0x85c0	                           test eax, eax	      1276	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_14
0x40021c9	            0x750a	                           jne 0x40021d5	      1276	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_14
0x40021cb	      0xb800000000	                              mov eax, 0	      1277	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16
0x40021d0	      0xe99b000000	                           jmp 0x4002270	      1277	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16
0x40021d5	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1281	prdbg.c	FUNCTION_34	IF_8	IF_17
0x40021da	            0x7437	                            je 0x4002213	      1281	prdbg.c	FUNCTION_34	IF_8	IF_17
0x40021dc	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1285	prdbg.c	FUNCTION_34	IF_8	IF_17	CALL_15
0x40021df	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1285	prdbg.c	FUNCTION_34	IF_8	IF_17	CALL_15
0x40021e3	      0xbe00000000	                              mov esi, 0	      1285	prdbg.c	FUNCTION_34	IF_8	IF_17	CALL_15
0x40021e8	          0x4889c7	                            mov rdi, rax	      1285	prdbg.c	FUNCTION_34	IF_8	IF_17	CALL_15
0x40021eb	      0xb800000000	                              mov eax, 0	      1285	prdbg.c	FUNCTION_34	IF_8	IF_17	CALL_15
0x40021f0	      0xe800000000	                          call 0x40021f5	      1285	prdbg.c	FUNCTION_34	IF_8	IF_17	CALL_15
0x40021f5	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1286	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18	CALL_16
0x40021f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1286	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18	CALL_16
0x40021fd	          0x4889d6	                            mov rsi, rdx	      1286	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18	CALL_16
0x4002200	          0x4889c7	                            mov rdi, rax	      1286	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18	CALL_16
0x4002203	      0xe8f0e0ffff	                    call sym.append_type	      1286	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18	CALL_16
0x4002208	            0x85c0	                           test eax, eax	      1286	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18	CALL_16
0x400220a	            0x7507	                           jne 0x4002213	      1286	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18	CALL_16
0x400220c	      0xb800000000	                              mov eax, 0	      1287	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18
0x4002211	            0xeb5d	                           jmp 0x4002270	      1287	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18
0x4002213	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_17
0x4002217	      0xbe00000000	                              mov esi, 0	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_17
0x400221c	          0x4889c7	                            mov rdi, rax	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_17
0x400221f	      0xe8d4e0ffff	                    call sym.append_type	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_17
0x4002224	            0x85c0	                           test eax, eax	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_17
0x4002226	            0x7507	                           jne 0x400222f	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_17
0x4002228	      0xb800000000	                              mov eax, 0	      1291	prdbg.c	FUNCTION_34	IF_8	IF_19
0x400222d	            0xeb41	                           jmp 0x4002270	      1291	prdbg.c	FUNCTION_34	IF_8	IF_19
0x400222f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1294	prdbg.c	FUNCTION_34
0x4002233	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1294	prdbg.c	FUNCTION_34
0x4002237	    0xc74010020000	               mov dword [rax + 0x10], 2	      1294	prdbg.c	FUNCTION_34
0x400223e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1296	prdbg.c	FUNCTION_34	CALL_18
0x4002242	      0xbe00000000	                              mov esi, 0	      1296	prdbg.c	FUNCTION_34	CALL_18
0x4002247	          0x4889c7	                            mov rdi, rax	      1296	prdbg.c	FUNCTION_34	CALL_18
0x400224a	      0xe8a9e0ffff	                    call sym.append_type	      1296	prdbg.c	FUNCTION_34	CALL_18
0x400224f	            0x85c0	                           test eax, eax	      1297	prdbg.c	FUNCTION_34	CALL_19
0x4002251	            0x7417	                            je 0x400226a	      1297	prdbg.c	FUNCTION_34	CALL_19
0x4002253	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1297	prdbg.c	FUNCTION_34	CALL_19
0x4002257	          0x4889c7	                            mov rdi, rax	      1297	prdbg.c	FUNCTION_34	CALL_19
0x400225a	      0xe853e4ffff	                    call sym.indent_type	      1297	prdbg.c	FUNCTION_34	CALL_19
0x400225f	            0x85c0	                           test eax, eax	      1297	prdbg.c	FUNCTION_34	CALL_19
0x4002261	            0x7407	                            je 0x400226a	      1297	prdbg.c	FUNCTION_34	CALL_19
0x4002263	      0xb801000000	                              mov eax, 1	      1297	prdbg.c	FUNCTION_34	CALL_19
0x4002268	            0xeb05	                           jmp 0x400226f	      1296	prdbg.c	FUNCTION_34	CALL_18
0x400226a	      0xb800000000	                              mov eax, 0	      1297	prdbg.c	FUNCTION_34	CALL_19
0x400226f	              0x90	                                     nop	      1296	prdbg.c	FUNCTION_34	CALL_18
0x4002270	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1298	prdbg.c	FUNCTION_34
0x4002274	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1298	prdbg.c	FUNCTION_34
0x400227d	            0x7405	                            je 0x4002284	      1298	prdbg.c	FUNCTION_34
0x400227f	      0xe800000000	                          call 0x4002284	      1298	prdbg.c	FUNCTION_34
0x4002284	              0xc9	                                   leave	      1298	prdbg.c	FUNCTION_34
0x4002285	              0xc3	                                     ret	      1298	prdbg.c	FUNCTION_34
pr_typed_constant	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,5:DO,0:ELSE,0:IF,1	48
0x4002fd3	              0x55	                                push rbp	      1725	prdbg.c	FUNCTION_48
0x4002fd4	          0x4889e5	                            mov rbp, rsp	      1725	prdbg.c	FUNCTION_48
0x4002fd7	        0x4883ec50	                           sub rsp, 0x50	      1725	prdbg.c	FUNCTION_48
0x4002fdb	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1725	prdbg.c	FUNCTION_48
0x4002fdf	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1725	prdbg.c	FUNCTION_48
0x4002fe3	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1725	prdbg.c	FUNCTION_48
0x4002fe7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1725	prdbg.c	FUNCTION_48
0x4002ff0	        0x488945f8	                mov qword [rbp - 8], rax	      1725	prdbg.c	FUNCTION_48
0x4002ff4	            0x31c0	                            xor eax, eax	      1725	prdbg.c	FUNCTION_48
0x4002ff6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1726	prdbg.c	FUNCTION_48
0x4002ffa	        0x488945d0	             mov qword [rbp - 0x30], rax	      1726	prdbg.c	FUNCTION_48
0x4002ffe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1730	prdbg.c	FUNCTION_48	CALL_1
0x4003002	          0x4889c7	                            mov rdi, rax	      1730	prdbg.c	FUNCTION_48	CALL_1
0x4003005	      0xe8f0d6ffff	                       call sym.pop_type	      1730	prdbg.c	FUNCTION_48	CALL_1
0x400300a	        0x488945d8	             mov qword [rbp - 0x28], rax	      1730	prdbg.c	FUNCTION_48	CALL_1
0x400300e	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1731	prdbg.c	FUNCTION_48	IF_1
0x4003013	            0x7507	                           jne 0x400301c	      1731	prdbg.c	FUNCTION_48	IF_1
0x4003015	      0xb800000000	                              mov eax, 0	      1732	prdbg.c	FUNCTION_48	IF_1
0x400301a	            0xeb5f	                           jmp 0x400307b	      1732	prdbg.c	FUNCTION_48	IF_1
0x400301c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1734	prdbg.c	FUNCTION_48	CALL_2
0x4003020	          0x4889c7	                            mov rdi, rax	      1734	prdbg.c	FUNCTION_48	CALL_2
0x4003023	      0xe83fd1ffff	                         call sym.indent	      1734	prdbg.c	FUNCTION_48	CALL_2
0x4003028	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      1735	prdbg.c	FUNCTION_48	CALL_3
0x400302c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1735	prdbg.c	FUNCTION_48	CALL_3
0x4003030	      0xb900000000	                              mov ecx, 0	      1735	prdbg.c	FUNCTION_48	CALL_3
0x4003035	      0xba00000000	                              mov edx, 0	      1735	prdbg.c	FUNCTION_48	CALL_3
0x400303a	          0x4889c7	                            mov rdi, rax	      1735	prdbg.c	FUNCTION_48	CALL_3
0x400303d	      0xe823d7ffff	                      call sym.print_vma	      1735	prdbg.c	FUNCTION_48	CALL_3
0x4003042	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1736	prdbg.c	FUNCTION_48	CALL_4
0x4003046	          0x488b00	                    mov rax, qword [rax]	      1736	prdbg.c	FUNCTION_48	CALL_4
0x4003049	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      1736	prdbg.c	FUNCTION_48	CALL_4
0x400304d	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      1736	prdbg.c	FUNCTION_48	CALL_4
0x4003051	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1736	prdbg.c	FUNCTION_48	CALL_4
0x4003055	          0x4989f0	                             mov r8, rsi	      1736	prdbg.c	FUNCTION_48	CALL_4
0x4003058	      0xbe00000000	                              mov esi, 0	      1736	prdbg.c	FUNCTION_48	CALL_4
0x400305d	          0x4889c7	                            mov rdi, rax	      1736	prdbg.c	FUNCTION_48	CALL_4
0x4003060	      0xb800000000	                              mov eax, 0	      1736	prdbg.c	FUNCTION_48	CALL_4
0x4003065	      0xe800000000	                          call 0x400306a	      1736	prdbg.c	FUNCTION_48	CALL_4
0x400306a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1738	prdbg.c	FUNCTION_48	CALL_5
0x400306e	          0x4889c7	                            mov rdi, rax	      1738	prdbg.c	FUNCTION_48	CALL_5
0x4003071	      0xe800000000	                          call 0x4003076	      1738	prdbg.c	FUNCTION_48	CALL_5
0x4003076	      0xb801000000	                              mov eax, 1	      1740	prdbg.c	FUNCTION_48
0x400307b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1741	prdbg.c	FUNCTION_48
0x400307f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1741	prdbg.c	FUNCTION_48
0x4003088	            0x7405	                            je 0x400308f	      1741	prdbg.c	FUNCTION_48
0x400308a	      0xe800000000	                          call 0x400308f	      1741	prdbg.c	FUNCTION_48
0x400308f	              0xc9	                                   leave	      1741	prdbg.c	FUNCTION_48
0x4003090	              0xc3	                                     ret	      1741	prdbg.c	FUNCTION_48
print_debugging_info	WHILE,0:FOR,0:functions,0:SWITCH,0:CALL,6:DO,0:ELSE,0:IF,1	69
0x4000040	              0x55	                                push rbp	       296	prdbg.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       296	prdbg.c	FUNCTION_1
0x4000044	        0x4883c480	             add rsp, 0xffffffffffffff80	       296	prdbg.c	FUNCTION_1
0x4000048	        0x48897da8	             mov qword [rbp - 0x58], rdi	       296	prdbg.c	FUNCTION_1
0x400004c	        0x488975a0	             mov qword [rbp - 0x60], rsi	       296	prdbg.c	FUNCTION_1
0x4000050	        0x48895598	             mov qword [rbp - 0x68], rdx	       296	prdbg.c	FUNCTION_1
0x4000054	        0x48894d90	             mov qword [rbp - 0x70], rcx	       296	prdbg.c	FUNCTION_1
0x4000058	        0x4c894588	              mov qword [rbp - 0x78], r8	       296	prdbg.c	FUNCTION_1
0x400005c	        0x44894d84	             mov dword [rbp - 0x7c], r9d	       296	prdbg.c	FUNCTION_1
0x4000060	    0x64488b042528	                mov rax, qword fs:[0x28]	       296	prdbg.c	FUNCTION_1
0x4000069	        0x488945f8	                mov qword [rbp - 8], rax	       296	prdbg.c	FUNCTION_1
0x400006d	            0x31c0	                            xor eax, eax	       296	prdbg.c	FUNCTION_1
0x400006f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       299	prdbg.c	FUNCTION_1
0x4000073	        0x488945b0	             mov qword [rbp - 0x50], rax	       299	prdbg.c	FUNCTION_1
0x4000077	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       300	prdbg.c	FUNCTION_1
0x400007e	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       301	prdbg.c	FUNCTION_1
0x4000086	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       302	prdbg.c	FUNCTION_1
0x400008d	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       303	prdbg.c	FUNCTION_1
0x4000095	        0x488b4598	             mov rax, qword [rbp - 0x68]	       304	prdbg.c	FUNCTION_1
0x4000099	        0x488945d8	             mov qword [rbp - 0x28], rax	       304	prdbg.c	FUNCTION_1
0x400009d	        0x488b4590	             mov rax, qword [rbp - 0x70]	       305	prdbg.c	FUNCTION_1
0x40000a1	        0x488945e0	             mov qword [rbp - 0x20], rax	       305	prdbg.c	FUNCTION_1
0x40000a5	        0x488b4588	             mov rax, qword [rbp - 0x78]	       306	prdbg.c	FUNCTION_1
0x40000a9	        0x488945e8	             mov qword [rbp - 0x18], rax	       306	prdbg.c	FUNCTION_1
0x40000ad	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       308	prdbg.c	FUNCTION_1	IF_1
0x40000b1	            0x746c	                            je 0x400011f	       308	prdbg.c	FUNCTION_1	IF_1
0x40000b3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       310	prdbg.c	FUNCTION_1	IF_1	CALL_1
0x40000b7	          0x4889c1	                            mov rcx, rax	       310	prdbg.c	FUNCTION_1	IF_1	CALL_1
0x40000ba	      0xba26000000	                           mov edx, 0x26	       310	prdbg.c	FUNCTION_1	IF_1	CALL_1
0x40000bf	      0xbe01000000	                              mov esi, 1	       310	prdbg.c	FUNCTION_1	IF_1	CALL_1
0x40000c4	      0xbf00000000	                              mov edi, 0	       310	prdbg.c	FUNCTION_1	IF_1	CALL_1
0x40000c9	      0xe800000000	                          call 0x40000ce	       310	prdbg.c	FUNCTION_1	IF_1	CALL_1
0x40000ce	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       311	prdbg.c	FUNCTION_1	IF_1	CALL_2
0x40000d2	          0x4889c1	                            mov rcx, rax	       311	prdbg.c	FUNCTION_1	IF_1	CALL_2
0x40000d5	      0xba2b000000	                           mov edx, 0x2b	       311	prdbg.c	FUNCTION_1	IF_1	CALL_2
0x40000da	      0xbe01000000	                              mov esi, 1	       311	prdbg.c	FUNCTION_1	IF_1	CALL_2
0x40000df	      0xbf00000000	                              mov edi, 0	       311	prdbg.c	FUNCTION_1	IF_1	CALL_2
0x40000e4	      0xe800000000	                          call 0x40000e9	       311	prdbg.c	FUNCTION_1	IF_1	CALL_2
0x40000e9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       312	prdbg.c	FUNCTION_1	IF_1	CALL_3
0x40000ed	          0x4889c1	                            mov rcx, rax	       312	prdbg.c	FUNCTION_1	IF_1	CALL_3
0x40000f0	      0xba48000000	                           mov edx, 0x48	       312	prdbg.c	FUNCTION_1	IF_1	CALL_3
0x40000f5	      0xbe01000000	                              mov esi, 1	       312	prdbg.c	FUNCTION_1	IF_1	CALL_3
0x40000fa	      0xbf00000000	                              mov edi, 0	       312	prdbg.c	FUNCTION_1	IF_1	CALL_3
0x40000ff	      0xe800000000	                          call 0x4000104	       312	prdbg.c	FUNCTION_1	IF_1	CALL_3
0x4000104	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       313	prdbg.c	FUNCTION_1	IF_1	CALL_4
0x4000108	          0x4889c1	                            mov rcx, rax	       313	prdbg.c	FUNCTION_1	IF_1	CALL_4
0x400010b	      0xba2f000000	                           mov edx, 0x2f	       313	prdbg.c	FUNCTION_1	IF_1	CALL_4
0x4000110	      0xbe01000000	                              mov esi, 1	       313	prdbg.c	FUNCTION_1	IF_1	CALL_4
0x4000115	      0xbf00000000	                              mov edi, 0	       313	prdbg.c	FUNCTION_1	IF_1	CALL_4
0x400011a	      0xe800000000	                          call 0x400011f	       313	prdbg.c	FUNCTION_1	IF_1	CALL_4
0x400011f	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       317	prdbg.c	FUNCTION_1	CALL_6
0x4000123	            0x7417	                            je 0x400013c	       317	prdbg.c	FUNCTION_1	CALL_6
0x4000125	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       317	prdbg.c	FUNCTION_1	CALL_6
0x4000129	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       317	prdbg.c	FUNCTION_1	CALL_6
0x400012d	      0xbe00000000	                              mov esi, 0	       317	prdbg.c	FUNCTION_1	CALL_6
0x4000132	          0x4889c7	                            mov rdi, rax	       317	prdbg.c	FUNCTION_1	CALL_6
0x4000135	      0xe800000000	                          call 0x400013a	       317	prdbg.c	FUNCTION_1	CALL_6
0x400013a	            0xeb15	                           jmp 0x4000151	       317	prdbg.c	FUNCTION_1	CALL_6
0x400013c	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       317	prdbg.c	FUNCTION_1	CALL_6
0x4000140	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       317	prdbg.c	FUNCTION_1	CALL_6
0x4000144	      0xbe00000000	                              mov esi, 0	       317	prdbg.c	FUNCTION_1	CALL_6
0x4000149	          0x4889c7	                            mov rdi, rax	       317	prdbg.c	FUNCTION_1	CALL_6
0x400014c	      0xe800000000	                          call 0x4000151	       317	prdbg.c	FUNCTION_1	CALL_6
0x4000151	        0x488b4df8	                mov rcx, qword [rbp - 8]	       318	prdbg.c	FUNCTION_1
0x4000155	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       318	prdbg.c	FUNCTION_1
0x400015e	            0x7405	                            je 0x4000165	       318	prdbg.c	FUNCTION_1
0x4000160	      0xe800000000	                          call 0x4000165	       318	prdbg.c	FUNCTION_1
0x4000165	              0xc9	                                   leave	       318	prdbg.c	FUNCTION_1
0x4000166	              0xc3	                                     ret	       318	prdbg.c	FUNCTION_1
