amd64_linux_read_description	WHILE,0:CALL,3:FOR,0:DO,0:functions,0:SWITCH,0:IF,3:ELSE,1	36
0x4000130	        0x440fb6c6	                          movzx r8d, sil	       107	linux-x86-tdesc.c	FUNCTION_3	CALL_1
0x4000134	              0x53	                                push rbx	       106	linux-x86-tdesc.c	FUNCTION_3
0x4000135	            0x89f2	                            mov edx, esi	       106	linux-x86-tdesc.c	FUNCTION_3
0x4000137	          0x4489c6	                            mov esi, r8d	       107	linux-x86-tdesc.c	FUNCTION_3	CALL_1
0x400013a	          0x4889f9	                            mov rcx, rdi	       106	linux-x86-tdesc.c	FUNCTION_3
0x400013d	      0xe8fefeffff	call sym.xcr0_to_tdesc_idx_unsignedlong_bool	       107	linux-x86-tdesc.c	FUNCTION_3	CALL_1
0x4000142	          0x83f807	                              cmp eax, 7	       109	linux-x86-tdesc.c	FUNCTION_3	IF_1
0x4000145	            0x7469	                            je 0x40001b0	       109	linux-x86-tdesc.c	FUNCTION_3	IF_1
0x4000147	            0x84d2	                             test dl, dl	       114	linux-x86-tdesc.c	FUNCTION_3	IF_2
0x4000149	            0x4898	                                    cdqe	       115	linux-x86-tdesc.c	FUNCTION_3	IF_2
0x400014b	            0x7523	                           jne 0x4000170	       114	linux-x86-tdesc.c	FUNCTION_3	IF_2
0x400014d	    0x488d1cc50000	                        lea rbx, [rax*8]	       117	linux-x86-tdesc.c	FUNCTION_3	ELSE_1
0x4000155	    0x488b04c50000	                  mov rax, qword [rax*8]	       117	linux-x86-tdesc.c	FUNCTION_3	ELSE_1
0x400015d	          0x4885c0	                           test rax, rax	       119	linux-x86-tdesc.c	FUNCTION_3	ELSE_1	IF_3
0x4000160	            0x7426	                            je 0x4000188	       119	linux-x86-tdesc.c	FUNCTION_3	ELSE_1	IF_3
0x4000162	          0x488b03	                    mov rax, qword [rbx]	       125	linux-x86-tdesc.c	FUNCTION_3
0x4000165	              0x5b	                                 pop rbx	       126	linux-x86-tdesc.c	FUNCTION_3
0x4000166	              0xc3	                                     ret	       126	linux-x86-tdesc.c	FUNCTION_3
0x4000167	    0x660f1f840000	                    nop word [rax + rax]	       126	linux-x86-tdesc.c	FUNCTION_3
0x4000170	    0x488d1cc50000	                        lea rbx, [rax*8]	       115	linux-x86-tdesc.c	FUNCTION_3	IF_2
0x4000178	    0x488b04c50000	                  mov rax, qword [rax*8]	       115	linux-x86-tdesc.c	FUNCTION_3	IF_2
0x4000180	            0xebdb	                           jmp 0x400015d	       115	linux-x86-tdesc.c	FUNCTION_3	IF_2
0x4000182	    0x660f1f440000	                    nop word [rax + rax]	       115	linux-x86-tdesc.c	FUNCTION_3	IF_2
0x4000188	          0x4489c6	                            mov esi, r8d	       121	linux-x86-tdesc.c	FUNCTION_3	ELSE_1	IF_3	CALL_2
0x400018b	          0x4889cf	                            mov rdi, rcx	       121	linux-x86-tdesc.c	FUNCTION_3	ELSE_1	IF_3	CALL_2
0x400018e	      0xba01000000	                              mov edx, 1	       121	linux-x86-tdesc.c	FUNCTION_3	ELSE_1	IF_3	CALL_2
0x4000193	      0xe800000000	                          call 0x4000198	       121	linux-x86-tdesc.c	FUNCTION_3	ELSE_1	IF_3	CALL_2
0x4000198	      0xbe00000000	                              mov esi, 0	       123	linux-x86-tdesc.c	FUNCTION_3	ELSE_1	IF_3	CALL_3
0x400019d	          0x488903	                    mov qword [rbx], rax	       121	linux-x86-tdesc.c	FUNCTION_3	ELSE_1	IF_3	CALL_2
0x40001a0	          0x4889c7	                            mov rdi, rax	       123	linux-x86-tdesc.c	FUNCTION_3	ELSE_1	IF_3	CALL_3
0x40001a3	      0xe800000000	                          call 0x40001a8	       123	linux-x86-tdesc.c	FUNCTION_3	ELSE_1	IF_3	CALL_3
0x40001a8	            0xebb8	                           jmp 0x4000162	       123	linux-x86-tdesc.c	FUNCTION_3	ELSE_1	IF_3	CALL_3
0x40001aa	    0x660f1f440000	                    nop word [rax + rax]	       123	linux-x86-tdesc.c	FUNCTION_3	ELSE_1	IF_3	CALL_3
0x40001b0	            0x31c0	                            xor eax, eax	       110	linux-x86-tdesc.c	FUNCTION_3	IF_1
0x40001b2	              0x5b	                                 pop rbx	       126	linux-x86-tdesc.c	FUNCTION_3
0x40001b3	              0xc3	                                     ret	       126	linux-x86-tdesc.c	FUNCTION_3
amd64_get_ipa_tdesc_idx	WHILE,0:CALL,0:FOR,2:DO,0:functions,0:SWITCH,0:IF,2:ELSE,0	16
0x40001e0	            0x31c0	                            xor eax, eax	       148	linux-x86-tdesc.c	FUNCTION_5
0x40001e2	    0x660f1f440000	                    nop word [rax + rax]	       148	linux-x86-tdesc.c	FUNCTION_5
0x40001e8	    0x48393cc50000	                  cmp qword [rax*8], rdi	       151	linux-x86-tdesc.c	FUNCTION_5	FOR_1	IF_1
0x40001f0	            0x7427	                            je 0x4000219	       151	linux-x86-tdesc.c	FUNCTION_5	FOR_1	IF_1
0x40001f2	        0x4883c001	                              add rax, 1	       151	linux-x86-tdesc.c	FUNCTION_5	FOR_1	IF_1
0x40001f6	        0x4883f807	                              cmp rax, 7	       149	linux-x86-tdesc.c	FUNCTION_5	FOR_1
0x40001fa	            0x75ec	                           jne 0x40001e8	       149	linux-x86-tdesc.c	FUNCTION_5	FOR_1
0x40001fc	            0x31c0	                            xor eax, eax	       149	linux-x86-tdesc.c	FUNCTION_5	FOR_1
0x40001fe	            0x6690	                                     nop	       149	linux-x86-tdesc.c	FUNCTION_5	FOR_1
0x4000200	    0x483b3cc50000	                  cmp rdi, qword [rax*8]	       156	linux-x86-tdesc.c	FUNCTION_5	FOR_2	IF_2
0x4000208	            0x740f	                            je 0x4000219	       156	linux-x86-tdesc.c	FUNCTION_5	FOR_2	IF_2
0x400020a	        0x4883c001	                              add rax, 1	       156	linux-x86-tdesc.c	FUNCTION_5	FOR_2	IF_2
0x400020e	        0x4883f807	                              cmp rax, 7	       154	linux-x86-tdesc.c	FUNCTION_5	FOR_2
0x4000212	            0x75ec	                           jne 0x4000200	       154	linux-x86-tdesc.c	FUNCTION_5	FOR_2
0x4000214	      0xb801000000	                              mov eax, 1	       160	linux-x86-tdesc.c	FUNCTION_5
0x4000219	            0xf3c3	                                     ret	       161	linux-x86-tdesc.c	FUNCTION_5
i386_linux_read_description	WHILE,0:CALL,3:FOR,0:DO,0:functions,0:SWITCH,0:IF,2:ELSE,0	27
0x40000d0	              0x53	                                push rbx	        80	linux-x86-tdesc.c	ELSE_10	FUNCTION_2
0x40000d1	            0x31f6	                            xor esi, esi	        81	linux-x86-tdesc.c	ELSE_10	FUNCTION_2	CALL_1
0x40000d3	          0x4889fa	                            mov rdx, rdi	        80	linux-x86-tdesc.c	ELSE_10	FUNCTION_2
0x40000d6	      0xe865ffffff	call sym.xcr0_to_tdesc_idx_unsignedlong_bool	        81	linux-x86-tdesc.c	ELSE_10	FUNCTION_2	CALL_1
0x40000db	          0x83f807	                              cmp eax, 7	        83	linux-x86-tdesc.c	ELSE_10	FUNCTION_2	IF_1
0x40000de	            0x7448	                            je 0x4000128	        83	linux-x86-tdesc.c	ELSE_10	FUNCTION_2	IF_1
0x40000e0	          0x4863d8	                         movsxd rbx, eax	        88	linux-x86-tdesc.c	ELSE_10	FUNCTION_2	IF_2
0x40000e3	    0x488b04dd0000	                  mov rax, qword [rbx*8]	        88	linux-x86-tdesc.c	ELSE_10	FUNCTION_2	IF_2
0x40000eb	          0x4885c0	                           test rax, rax	        88	linux-x86-tdesc.c	ELSE_10	FUNCTION_2	IF_2
0x40000ee	            0x7408	                            je 0x40000f8	        88	linux-x86-tdesc.c	ELSE_10	FUNCTION_2	IF_2
0x40000f0	              0x5b	                                 pop rbx	        96	linux-x86-tdesc.c	ELSE_10	FUNCTION_2
0x40000f1	              0xc3	                                     ret	        96	linux-x86-tdesc.c	ELSE_10	FUNCTION_2
0x40000f2	    0x660f1f440000	                    nop word [rax + rax]	        96	linux-x86-tdesc.c	ELSE_10	FUNCTION_2
0x40000f8	          0x4889d7	                            mov rdi, rdx	        90	linux-x86-tdesc.c	ELSE_10	FUNCTION_2	IF_2	CALL_2
0x40000fb	      0xbe01000000	                              mov esi, 1	        90	linux-x86-tdesc.c	ELSE_10	FUNCTION_2	IF_2	CALL_2
0x4000100	      0xe800000000	                          call 0x4000105	        90	linux-x86-tdesc.c	ELSE_10	FUNCTION_2	IF_2	CALL_2
0x4000105	      0xbe00000000	                              mov esi, 0	        92	linux-x86-tdesc.c	ELSE_10	FUNCTION_2	IF_2	CALL_3
0x400010a	          0x4889c7	                            mov rdi, rax	        92	linux-x86-tdesc.c	ELSE_10	FUNCTION_2	IF_2	CALL_3
0x400010d	    0x488904dd0000	                  mov qword [rbx*8], rax	        90	linux-x86-tdesc.c	ELSE_10	FUNCTION_2	IF_2	CALL_2
0x4000115	      0xe800000000	                          call 0x400011a	        92	linux-x86-tdesc.c	ELSE_10	FUNCTION_2	IF_2	CALL_3
0x400011a	    0x488b04dd0000	                  mov rax, qword [rbx*8]	        92	linux-x86-tdesc.c	ELSE_10	FUNCTION_2	IF_2	CALL_3
0x4000122	              0x5b	                                 pop rbx	        96	linux-x86-tdesc.c	ELSE_10	FUNCTION_2
0x4000123	              0xc3	                                     ret	        96	linux-x86-tdesc.c	ELSE_10	FUNCTION_2
0x4000124	         0xf1f4000	                         nop dword [rax]	        96	linux-x86-tdesc.c	ELSE_10	FUNCTION_2
0x4000128	            0x31c0	                            xor eax, eax	        84	linux-x86-tdesc.c	ELSE_10	FUNCTION_2	IF_1
0x400012a	              0x5b	                                 pop rbx	        96	linux-x86-tdesc.c	ELSE_10	FUNCTION_2
0x400012b	              0xc3	                                     ret	        96	linux-x86-tdesc.c	ELSE_10	FUNCTION_2
i386_get_ipa_tdesc_idx	WHILE,0:CALL,0:FOR,1:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	9
0x40001c0	            0x31c0	                            xor eax, eax	       134	linux-x86-tdesc.c	FUNCTION_4
0x40001c2	    0x660f1f440000	                    nop word [rax + rax]	       134	linux-x86-tdesc.c	FUNCTION_4
0x40001c8	    0x48393cc50000	                  cmp qword [rax*8], rdi	       137	linux-x86-tdesc.c	FUNCTION_4	FOR_1	IF_1
0x40001d0	            0x740c	                            je 0x40001de	       137	linux-x86-tdesc.c	FUNCTION_4	FOR_1	IF_1
0x40001d2	        0x4883c001	                              add rax, 1	       137	linux-x86-tdesc.c	FUNCTION_4	FOR_1	IF_1
0x40001d6	        0x4883f807	                              cmp rax, 7	       135	linux-x86-tdesc.c	FUNCTION_4	FOR_1
0x40001da	            0x75ec	                           jne 0x40001c8	       135	linux-x86-tdesc.c	FUNCTION_4	FOR_1
0x40001dc	            0x31c0	                            xor eax, eax	       142	linux-x86-tdesc.c	FUNCTION_4
0x40001de	            0xf3c3	                                     ret	       143	linux-x86-tdesc.c	FUNCTION_4
