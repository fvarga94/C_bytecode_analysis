ldemul_default_target	SWITCH,0:CALL,1:IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	16
0x40003b0	              0x55	                                push rbp	       192	ldemul.c	FUNCTION_22
0x40003b1	          0x4889e5	                            mov rbp, rsp	       192	ldemul.c	FUNCTION_22
0x40003b4	        0x4883ec20	                           sub rsp, 0x20	       192	ldemul.c	FUNCTION_22
0x40003b8	          0x897dec	             mov dword [rbp - 0x14], edi	       192	ldemul.c	FUNCTION_22
0x40003bb	        0x488975e0	             mov qword [rbp - 0x20], rsi	       192	ldemul.c	FUNCTION_22
0x40003bf	      0xbf00000000	                              mov edi, 0	       193	ldemul.c	FUNCTION_22	CALL_1
0x40003c4	      0xe800000000	                          call 0x40003c9	       193	ldemul.c	FUNCTION_22	CALL_1
0x40003c9	        0x488945f8	                mov qword [rbp - 8], rax	       193	ldemul.c	FUNCTION_22	CALL_1
0x40003cd	      0x48837df800	                  cmp qword [rbp - 8], 0	       194	ldemul.c	FUNCTION_22	IF_1
0x40003d2	            0x7406	                            je 0x40003da	       194	ldemul.c	FUNCTION_22	IF_1
0x40003d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       195	ldemul.c	FUNCTION_22	IF_1
0x40003d8	            0xeb0b	                           jmp 0x40003e5	       195	ldemul.c	FUNCTION_22	IF_1
0x40003da	    0x488b05000000	            mov rax, qword [0x040003e1] 	       196	ldemul.c	FUNCTION_22
0x40003e1	        0x488b4060	            mov rax, qword [rax + 0x60] 	       196	ldemul.c	FUNCTION_22
0x40003e5	              0xc9	                                   leave	       197	ldemul.c	FUNCTION_22
0x40003e6	              0xc3	                                     ret	       197	ldemul.c	FUNCTION_22
ldemul_syslib	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	12
0x4000063	              0x55	                                push rbp	        45	ldemul.c	FUNCTION_2
0x4000064	          0x4889e5	                            mov rbp, rsp	        45	ldemul.c	FUNCTION_2
0x4000067	        0x4883ec10	                           sub rsp, 0x10	        45	ldemul.c	FUNCTION_2
0x400006b	        0x48897df8	                mov qword [rbp - 8], rdi	        45	ldemul.c	FUNCTION_2
0x400006f	    0x488b05000000	            mov rax, qword [0x04000076] 	        46	ldemul.c	FUNCTION_2	CALL_1
0x4000076	        0x488b4008	                mov rax, qword [rax + 8]	        46	ldemul.c	FUNCTION_2	CALL_1
0x400007a	        0x488b55f8	                mov rdx, qword [rbp - 8]	        46	ldemul.c	FUNCTION_2	CALL_1
0x400007e	          0x4889d7	                            mov rdi, rdx	        46	ldemul.c	FUNCTION_2	CALL_1
0x4000081	            0xffd0	                                call rax	        46	ldemul.c	FUNCTION_2	CALL_1
0x4000083	              0x90	                                     nop	        47	ldemul.c	FUNCTION_2
0x4000084	              0xc9	                                   leave	        47	ldemul.c	FUNCTION_2
0x4000085	              0xc3	                                     ret	        47	ldemul.c	FUNCTION_2
ldemul_open_dynamic_archive	SWITCH,0:CALL,0:IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	21
0x4000195	              0x55	                                push rbp	       120	ldemul.c	FUNCTION_14
0x4000196	          0x4889e5	                            mov rbp, rsp	       120	ldemul.c	FUNCTION_14
0x4000199	        0x4883ec20	                           sub rsp, 0x20	       120	ldemul.c	FUNCTION_14
0x400019d	        0x48897df8	                mov qword [rbp - 8], rdi	       120	ldemul.c	FUNCTION_14
0x40001a1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       120	ldemul.c	FUNCTION_14
0x40001a5	        0x488955e8	             mov qword [rbp - 0x18], rdx	       120	ldemul.c	FUNCTION_14
0x40001a9	    0x488b05000000	            mov rax, qword [0x040001b0] 	       121	ldemul.c	FUNCTION_14	IF_1
0x40001b0	        0x488b4078	            mov rax, qword [rax + 0x78] 	       121	ldemul.c	FUNCTION_14	IF_1
0x40001b4	          0x4885c0	                           test rax, rax	       121	ldemul.c	FUNCTION_14	IF_1
0x40001b7	            0x741e	                            je 0x40001d7	       121	ldemul.c	FUNCTION_14	IF_1
0x40001b9	    0x488b05000000	            mov rax, qword [0x040001c0] 	       122	ldemul.c	FUNCTION_14	IF_1
0x40001c0	        0x488b4078	            mov rax, qword [rax + 0x78] 	       122	ldemul.c	FUNCTION_14	IF_1
0x40001c4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       122	ldemul.c	FUNCTION_14	IF_1
0x40001c8	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       122	ldemul.c	FUNCTION_14	IF_1
0x40001cc	        0x488b4df8	                mov rcx, qword [rbp - 8]	       122	ldemul.c	FUNCTION_14	IF_1
0x40001d0	          0x4889cf	                            mov rdi, rcx	       122	ldemul.c	FUNCTION_14	IF_1
0x40001d3	            0xffd0	                                call rax	       122	ldemul.c	FUNCTION_14	IF_1
0x40001d5	            0xeb05	                           jmp 0x40001dc	       122	ldemul.c	FUNCTION_14	IF_1
0x40001d7	      0xb800000000	                              mov eax, 0	       123	ldemul.c	FUNCTION_14
0x40001dc	              0xc9	                                   leave	       124	ldemul.c	FUNCTION_14
0x40001dd	              0xc3	                                     ret	       124	ldemul.c	FUNCTION_14
ldemul_after_allocation	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	8
0x40000d5	              0x55	                                push rbp	        75	ldemul.c	FUNCTION_7
0x40000d6	          0x4889e5	                            mov rbp, rsp	        75	ldemul.c	FUNCTION_7
0x40000d9	    0x488b05000000	            mov rax, qword [0x040000e0] 	        76	ldemul.c	FUNCTION_7	CALL_1
0x40000e0	        0x488b4030	            mov rax, qword [rax + 0x30] 	        76	ldemul.c	FUNCTION_7	CALL_1
0x40000e4	            0xffd0	                                call rax	        76	ldemul.c	FUNCTION_7	CALL_1
0x40000e6	              0x90	                                     nop	        77	ldemul.c	FUNCTION_7
0x40000e7	              0x5d	                                 pop rbp	        77	ldemul.c	FUNCTION_7
0x40000e8	              0xc3	                                     ret	        77	ldemul.c	FUNCTION_7
ldemul_recognized_file	SWITCH,0:CALL,0:IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	17
0x4000347	              0x55	                                push rbp	       175	ldemul.c	FUNCTION_20
0x4000348	          0x4889e5	                            mov rbp, rsp	       175	ldemul.c	FUNCTION_20
0x400034b	        0x4883ec10	                           sub rsp, 0x10	       175	ldemul.c	FUNCTION_20
0x400034f	        0x48897df8	                mov qword [rbp - 8], rdi	       175	ldemul.c	FUNCTION_20
0x4000353	    0x488b05000000	            mov rax, qword [0x0400035a] 	       176	ldemul.c	FUNCTION_20	IF_1
0x400035a	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       176	ldemul.c	FUNCTION_20	IF_1
0x4000361	          0x4885c0	                           test rax, rax	       176	ldemul.c	FUNCTION_20	IF_1
0x4000364	            0x7419	                            je 0x400037f	       176	ldemul.c	FUNCTION_20	IF_1
0x4000366	    0x488b05000000	            mov rax, qword [0x0400036d] 	       177	ldemul.c	FUNCTION_20	IF_1
0x400036d	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       177	ldemul.c	FUNCTION_20	IF_1
0x4000374	        0x488b55f8	                mov rdx, qword [rbp - 8]	       177	ldemul.c	FUNCTION_20	IF_1
0x4000378	          0x4889d7	                            mov rdi, rdx	       177	ldemul.c	FUNCTION_20	IF_1
0x400037b	            0xffd0	                                call rax	       177	ldemul.c	FUNCTION_20	IF_1
0x400037d	            0xeb05	                           jmp 0x4000384	       177	ldemul.c	FUNCTION_20	IF_1
0x400037f	      0xb800000000	                              mov eax, 0	       178	ldemul.c	FUNCTION_20
0x4000384	              0xc9	                                   leave	       179	ldemul.c	FUNCTION_20
0x4000385	              0xc3	                                     ret	       179	ldemul.c	FUNCTION_20
ldemul_add_options	SWITCH,0:CALL,0:IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	25
0x400022b	              0x55	                                push rbp	       138	ldemul.c	FUNCTION_16
0x400022c	          0x4889e5	                            mov rbp, rsp	       138	ldemul.c	FUNCTION_16
0x400022f	        0x4883ec30	                           sub rsp, 0x30	       138	ldemul.c	FUNCTION_16
0x4000233	          0x897dfc	                mov dword [rbp - 4], edi	       138	ldemul.c	FUNCTION_16
0x4000236	        0x488975f0	             mov qword [rbp - 0x10], rsi	       138	ldemul.c	FUNCTION_16
0x400023a	          0x8955f8	                mov dword [rbp - 8], edx	       138	ldemul.c	FUNCTION_16
0x400023d	        0x48894de8	             mov qword [rbp - 0x18], rcx	       138	ldemul.c	FUNCTION_16
0x4000241	        0x448945e4	             mov dword [rbp - 0x1c], r8d	       138	ldemul.c	FUNCTION_16
0x4000245	        0x4c894dd8	              mov qword [rbp - 0x28], r9	       138	ldemul.c	FUNCTION_16
0x4000249	    0x488b05000000	            mov rax, qword [0x04000250] 	       139	ldemul.c	FUNCTION_16	IF_1
0x4000250	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       139	ldemul.c	FUNCTION_16	IF_1
0x4000257	          0x4885c0	                           test rax, rax	       139	ldemul.c	FUNCTION_16	IF_1
0x400025a	            0x7426	                            je 0x4000282	       139	ldemul.c	FUNCTION_16	IF_1
0x400025c	    0x488b05000000	            mov rax, qword [0x04000263] 	       140	ldemul.c	FUNCTION_16	IF_1
0x4000263	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       140	ldemul.c	FUNCTION_16	IF_1
0x400026a	        0x4c8b4dd8	              mov r9, qword [rbp - 0x28]	       140	ldemul.c	FUNCTION_16	IF_1
0x400026e	        0x448b45e4	             mov r8d, dword [rbp - 0x1c]	       140	ldemul.c	FUNCTION_16	IF_1
0x4000272	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       140	ldemul.c	FUNCTION_16	IF_1
0x4000276	          0x8b55f8	                mov edx, dword [rbp - 8]	       140	ldemul.c	FUNCTION_16	IF_1
0x4000279	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       140	ldemul.c	FUNCTION_16	IF_1
0x400027d	          0x8b7dfc	                mov edi, dword [rbp - 4]	       140	ldemul.c	FUNCTION_16	IF_1
0x4000280	            0xffd0	                                call rax	       140	ldemul.c	FUNCTION_16	IF_1
0x4000282	              0x90	                                     nop	       142	ldemul.c	FUNCTION_16
0x4000283	              0xc9	                                   leave	       142	ldemul.c	FUNCTION_16
0x4000284	              0xc3	                                     ret	       142	ldemul.c	FUNCTION_16
ldemul_hll	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	12
0x4000040	              0x55	                                push rbp	        39	ldemul.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        39	ldemul.c	FUNCTION_1
0x4000044	        0x4883ec10	                           sub rsp, 0x10	        39	ldemul.c	FUNCTION_1
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	        39	ldemul.c	FUNCTION_1
0x400004c	    0x488b05000000	            mov rax, qword [0x04000053] 	        40	ldemul.c	FUNCTION_1	CALL_1
0x4000053	        0x488b4010	            mov rax, qword [rax + 0x10] 	        40	ldemul.c	FUNCTION_1	CALL_1
0x4000057	        0x488b55f8	                mov rdx, qword [rbp - 8]	        40	ldemul.c	FUNCTION_1	CALL_1
0x400005b	          0x4889d7	                            mov rdi, rdx	        40	ldemul.c	FUNCTION_1	CALL_1
0x400005e	            0xffd0	                                call rax	        40	ldemul.c	FUNCTION_1	CALL_1
0x4000060	              0x90	                                     nop	        41	ldemul.c	FUNCTION_1
0x4000061	              0xc9	                                   leave	        41	ldemul.c	FUNCTION_1
0x4000062	              0xc3	                                     ret	        41	ldemul.c	FUNCTION_1
ldemul_unrecognized_file	SWITCH,0:CALL,0:IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	17
0x4000308	              0x55	                                push rbp	       165	ldemul.c	FUNCTION_19
0x4000309	          0x4889e5	                            mov rbp, rsp	       165	ldemul.c	FUNCTION_19
0x400030c	        0x4883ec10	                           sub rsp, 0x10	       165	ldemul.c	FUNCTION_19
0x4000310	        0x48897df8	                mov qword [rbp - 8], rdi	       165	ldemul.c	FUNCTION_19
0x4000314	    0x488b05000000	            mov rax, qword [0x0400031b] 	       166	ldemul.c	FUNCTION_19	IF_1
0x400031b	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       166	ldemul.c	FUNCTION_19	IF_1
0x4000322	          0x4885c0	                           test rax, rax	       166	ldemul.c	FUNCTION_19	IF_1
0x4000325	            0x7419	                            je 0x4000340	       166	ldemul.c	FUNCTION_19	IF_1
0x4000327	    0x488b05000000	            mov rax, qword [0x0400032e] 	       167	ldemul.c	FUNCTION_19	IF_1
0x400032e	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       167	ldemul.c	FUNCTION_19	IF_1
0x4000335	        0x488b55f8	                mov rdx, qword [rbp - 8]	       167	ldemul.c	FUNCTION_19	IF_1
0x4000339	          0x4889d7	                            mov rdi, rdx	       167	ldemul.c	FUNCTION_19	IF_1
0x400033c	            0xffd0	                                call rax	       167	ldemul.c	FUNCTION_19	IF_1
0x400033e	            0xeb05	                           jmp 0x4000345	       167	ldemul.c	FUNCTION_19	IF_1
0x4000340	      0xb800000000	                              mov eax, 0	       168	ldemul.c	FUNCTION_19
0x4000345	              0xc9	                                   leave	       169	ldemul.c	FUNCTION_19
0x4000346	              0xc3	                                     ret	       169	ldemul.c	FUNCTION_19
after_check_relocs_default	SWITCH,0:CALL,0:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	5
0x4000503	              0x55	                                push rbp	       242	ldemul.c	FUNCTION_25
0x4000504	          0x4889e5	                            mov rbp, rsp	       242	ldemul.c	FUNCTION_25
0x4000507	              0x90	                                     nop	       243	ldemul.c	FUNCTION_25
0x4000508	              0x5d	                                 pop rbp	       243	ldemul.c	FUNCTION_25
0x4000509	              0xc3	                                     ret	       243	ldemul.c	FUNCTION_25
ldemul_new_vers_pattern	SWITCH,0:CALL,0:IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	17
0x4000854	              0x55	                                push rbp	       362	ldemul.c	FUNCTION_36
0x4000855	          0x4889e5	                            mov rbp, rsp	       362	ldemul.c	FUNCTION_36
0x4000858	        0x4883ec10	                           sub rsp, 0x10	       362	ldemul.c	FUNCTION_36
0x400085c	        0x48897df8	                mov qword [rbp - 8], rdi	       362	ldemul.c	FUNCTION_36
0x4000860	    0x488b05000000	            mov rax, qword [0x04000867] 	       363	ldemul.c	FUNCTION_36	IF_1
0x4000867	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       363	ldemul.c	FUNCTION_36	IF_1
0x400086e	          0x4885c0	                           test rax, rax	       363	ldemul.c	FUNCTION_36	IF_1
0x4000871	            0x741b	                            je 0x400088e	       363	ldemul.c	FUNCTION_36	IF_1
0x4000873	    0x488b05000000	            mov rax, qword [0x0400087a] 	       364	ldemul.c	FUNCTION_36	IF_1
0x400087a	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       364	ldemul.c	FUNCTION_36	IF_1
0x4000881	        0x488b55f8	                mov rdx, qword [rbp - 8]	       364	ldemul.c	FUNCTION_36	IF_1
0x4000885	          0x4889d7	                            mov rdi, rdx	       364	ldemul.c	FUNCTION_36	IF_1
0x4000888	            0xffd0	                                call rax	       364	ldemul.c	FUNCTION_36	IF_1
0x400088a	        0x488945f8	                mov qword [rbp - 8], rax	       364	ldemul.c	FUNCTION_36	IF_1
0x400088e	        0x488b45f8	                mov rax, qword [rbp - 8]	       365	ldemul.c	FUNCTION_36
0x4000892	              0xc9	                                   leave	       366	ldemul.c	FUNCTION_36
0x4000893	              0xc3	                                     ret	       366	ldemul.c	FUNCTION_36
ldemul_handle_option	SWITCH,0:CALL,0:IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	17
0x4000285	              0x55	                                push rbp	       146	ldemul.c	FUNCTION_17
0x4000286	          0x4889e5	                            mov rbp, rsp	       146	ldemul.c	FUNCTION_17
0x4000289	        0x4883ec10	                           sub rsp, 0x10	       146	ldemul.c	FUNCTION_17
0x400028d	          0x897dfc	                mov dword [rbp - 4], edi	       146	ldemul.c	FUNCTION_17
0x4000290	    0x488b05000000	            mov rax, qword [0x04000297] 	       147	ldemul.c	FUNCTION_17	IF_1
0x4000297	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       147	ldemul.c	FUNCTION_17	IF_1
0x400029e	          0x4885c0	                           test rax, rax	       147	ldemul.c	FUNCTION_17	IF_1
0x40002a1	            0x7417	                            je 0x40002ba	       147	ldemul.c	FUNCTION_17	IF_1
0x40002a3	    0x488b05000000	            mov rax, qword [0x040002aa] 	       148	ldemul.c	FUNCTION_17	IF_1
0x40002aa	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       148	ldemul.c	FUNCTION_17	IF_1
0x40002b1	          0x8b55fc	                mov edx, dword [rbp - 4]	       148	ldemul.c	FUNCTION_17	IF_1
0x40002b4	            0x89d7	                            mov edi, edx	       148	ldemul.c	FUNCTION_17	IF_1
0x40002b6	            0xffd0	                                call rax	       148	ldemul.c	FUNCTION_17	IF_1
0x40002b8	            0xeb05	                           jmp 0x40002bf	       148	ldemul.c	FUNCTION_17	IF_1
0x40002ba	      0xb800000000	                              mov eax, 0	       149	ldemul.c	FUNCTION_17
0x40002bf	              0xc9	                                   leave	       150	ldemul.c	FUNCTION_17
0x40002c0	              0xc3	                                     ret	       150	ldemul.c	FUNCTION_17
ldemul_before_parse	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	8
0x400009a	              0x55	                                push rbp	        57	ldemul.c	FUNCTION_4
0x400009b	          0x4889e5	                            mov rbp, rsp	        57	ldemul.c	FUNCTION_4
0x400009e	    0x488b05000000	            mov rax, qword [0x040000a5] 	        58	ldemul.c	FUNCTION_4	CALL_1
0x40000a5	          0x488b00	                    mov rax, qword [rax]	        58	ldemul.c	FUNCTION_4	CALL_1
0x40000a8	            0xffd0	                                call rax	        58	ldemul.c	FUNCTION_4	CALL_1
0x40000aa	              0x90	                                     nop	        59	ldemul.c	FUNCTION_4
0x40000ab	              0x5d	                                 pop rbp	        59	ldemul.c	FUNCTION_4
0x40000ac	              0xc3	                                     ret	        59	ldemul.c	FUNCTION_4
set_output_arch_default	SWITCH,0:CALL,3:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	23
0x400055e	              0x55	                                push rbp	       267	ldemul.c	FUNCTION_29
0x400055f	          0x4889e5	                            mov rbp, rsp	       267	ldemul.c	FUNCTION_29
0x4000562	    0x488b05000000	            mov rax, qword [0x04000569] 	       269	ldemul.c	FUNCTION_29	CALL_1
0x4000569	        0x488b4008	                mov rax, qword [rax + 8]	       269	ldemul.c	FUNCTION_29	CALL_1
0x400056d	    0x488b80900200	           mov rax, qword [rax + 0x290] 	       269	ldemul.c	FUNCTION_29	CALL_1
0x4000574	    0x488b15000000	            mov rdx, qword [0x0400057b] 	       269	ldemul.c	FUNCTION_29	CALL_1
0x400057b	    0x8b3500000000	            mov esi, dword [0x04000581] 	       269	ldemul.c	FUNCTION_29	CALL_1
0x4000581	    0x488b0d000000	            mov rcx, qword [0x04000588] 	       269	ldemul.c	FUNCTION_29	CALL_1
0x4000588	          0x4889cf	                            mov rdi, rcx	       269	ldemul.c	FUNCTION_29	CALL_1
0x400058b	            0xffd0	                                call rax	       269	ldemul.c	FUNCTION_29	CALL_1
0x400058d	    0x488b15000000	            mov rdx, qword [0x04000594] 	       272	ldemul.c	FUNCTION_29	CALL_2
0x4000594	    0x488b05000000	            mov rax, qword [0x0400059b] 	       272	ldemul.c	FUNCTION_29	CALL_2
0x400059b	          0x4889d6	                            mov rsi, rdx	       272	ldemul.c	FUNCTION_29	CALL_2
0x400059e	          0x4889c7	                            mov rdi, rax	       272	ldemul.c	FUNCTION_29	CALL_2
0x40005a1	      0xe800000000	                          call 0x40005a6	       272	ldemul.c	FUNCTION_29	CALL_2
0x40005a6	    0x488b15000000	            mov rdx, qword [0x040005ad] 	       273	ldemul.c	FUNCTION_29	CALL_3
0x40005ad	    0x488b05000000	            mov rax, qword [0x040005b4] 	       273	ldemul.c	FUNCTION_29	CALL_3
0x40005b4	          0x4889d6	                            mov rsi, rdx	       273	ldemul.c	FUNCTION_29	CALL_3
0x40005b7	          0x4889c7	                            mov rdi, rax	       273	ldemul.c	FUNCTION_29	CALL_3
0x40005ba	      0xe800000000	                          call 0x40005bf	       273	ldemul.c	FUNCTION_29	CALL_3
0x40005bf	              0x90	                                     nop	       274	ldemul.c	FUNCTION_29
0x40005c0	              0x5d	                                 pop rbp	       274	ldemul.c	FUNCTION_29
0x40005c1	              0xc3	                                     ret	       274	ldemul.c	FUNCTION_29
ldemul_parse_args	SWITCH,0:CALL,0:IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	20
0x40002c1	              0x55	                                push rbp	       154	ldemul.c	FUNCTION_18
0x40002c2	          0x4889e5	                            mov rbp, rsp	       154	ldemul.c	FUNCTION_18
0x40002c5	        0x4883ec10	                           sub rsp, 0x10	       154	ldemul.c	FUNCTION_18
0x40002c9	          0x897dfc	                mov dword [rbp - 4], edi	       154	ldemul.c	FUNCTION_18
0x40002cc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       154	ldemul.c	FUNCTION_18
0x40002d0	    0x488b05000000	            mov rax, qword [0x040002d7] 	       156	ldemul.c	FUNCTION_18	IF_1
0x40002d7	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       156	ldemul.c	FUNCTION_18	IF_1
0x40002de	          0x4885c0	                           test rax, rax	       156	ldemul.c	FUNCTION_18	IF_1
0x40002e1	            0x741e	                            je 0x4000301	       156	ldemul.c	FUNCTION_18	IF_1
0x40002e3	    0x488b05000000	            mov rax, qword [0x040002ea] 	       157	ldemul.c	FUNCTION_18	IF_1
0x40002ea	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       157	ldemul.c	FUNCTION_18	IF_1
0x40002f1	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       157	ldemul.c	FUNCTION_18	IF_1
0x40002f5	          0x8b55fc	                mov edx, dword [rbp - 4]	       157	ldemul.c	FUNCTION_18	IF_1
0x40002f8	          0x4889ce	                            mov rsi, rcx	       157	ldemul.c	FUNCTION_18	IF_1
0x40002fb	            0x89d7	                            mov edi, edx	       157	ldemul.c	FUNCTION_18	IF_1
0x40002fd	            0xffd0	                                call rax	       157	ldemul.c	FUNCTION_18	IF_1
0x40002ff	            0xeb05	                           jmp 0x4000306	       157	ldemul.c	FUNCTION_18	IF_1
0x4000301	      0xb800000000	                              mov eax, 0	       158	ldemul.c	FUNCTION_18
0x4000306	              0xc9	                                   leave	       159	ldemul.c	FUNCTION_18
0x4000307	              0xc3	                                     ret	       159	ldemul.c	FUNCTION_18
ldemul_set_symbols	SWITCH,0:CALL,1:IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	12
0x4000125	              0x55	                                push rbp	        99	ldemul.c	FUNCTION_11
0x4000126	          0x4889e5	                            mov rbp, rsp	        99	ldemul.c	FUNCTION_11
0x4000129	    0x488b05000000	            mov rax, qword [0x04000130] 	       100	ldemul.c	FUNCTION_11	IF_1
0x4000130	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       100	ldemul.c	FUNCTION_11	IF_1
0x4000137	          0x4885c0	                           test rax, rax	       100	ldemul.c	FUNCTION_11	IF_1
0x400013a	            0x7410	                            je 0x400014c	       100	ldemul.c	FUNCTION_11	IF_1
0x400013c	    0x488b05000000	            mov rax, qword [0x04000143] 	       101	ldemul.c	FUNCTION_11	CALL_1
0x4000143	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       101	ldemul.c	FUNCTION_11	CALL_1
0x400014a	            0xffd0	                                call rax	       101	ldemul.c	FUNCTION_11	CALL_1
0x400014c	              0x90	                                     nop	       102	ldemul.c	FUNCTION_11
0x400014d	              0x5d	                                 pop rbp	       102	ldemul.c	FUNCTION_11
0x400014e	              0xc3	                                     ret	       102	ldemul.c	FUNCTION_11
ldemul_list_emulations	SWITCH,0:CALL,2:IF,1:functions,0:ELSE,1:FOR,1:WHILE,0:DO,0	30
0x40006f3	              0x55	                                push rbp	       313	ldemul.c	FUNCTION_33
0x40006f4	          0x4889e5	                            mov rbp, rsp	       313	ldemul.c	FUNCTION_33
0x40006f7	        0x4883ec20	                           sub rsp, 0x20	       313	ldemul.c	FUNCTION_33
0x40006fb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       313	ldemul.c	FUNCTION_33
0x40006ff	    0x48c745f80000	                  mov qword [rbp - 8], 0	       314	ldemul.c	FUNCTION_33
0x4000707	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       315	ldemul.c	FUNCTION_33
0x400070e	            0xeb3f	                           jmp 0x400074f	       317	ldemul.c	FUNCTION_33	FOR_1
0x4000710	        0x837df400	                cmp dword [rbp - 0xc], 0	       319	ldemul.c	FUNCTION_33	FOR_1	IF_1
0x4000714	            0x7409	                            je 0x400071f	       319	ldemul.c	FUNCTION_33	FOR_1	IF_1
0x4000716	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       320	ldemul.c	FUNCTION_33	FOR_1	IF_1
0x400071d	            0xeb11	                           jmp 0x4000730	       320	ldemul.c	FUNCTION_33	FOR_1	IF_1
0x400071f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       322	ldemul.c	FUNCTION_33	FOR_1	CALL_1
0x4000723	          0x4889c6	                            mov rsi, rax	       322	ldemul.c	FUNCTION_33	FOR_1	CALL_1
0x4000726	      0xbf20000000	                           mov edi, 0x20	       322	ldemul.c	FUNCTION_33	FOR_1	CALL_1
0x400072b	      0xe800000000	                          call 0x4000730	       322	ldemul.c	FUNCTION_33	FOR_1	CALL_1
0x4000730	        0x488b45f8	                mov rax, qword [rbp - 8]	       323	ldemul.c	FUNCTION_33	FOR_1	CALL_2
0x4000734	          0x488b00	                    mov rax, qword [rax]	       323	ldemul.c	FUNCTION_33	FOR_1	CALL_2
0x4000737	        0x488b4058	            mov rax, qword [rax + 0x58] 	       323	ldemul.c	FUNCTION_33	FOR_1	CALL_2
0x400073b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       323	ldemul.c	FUNCTION_33	FOR_1	CALL_2
0x400073f	          0x4889d6	                            mov rsi, rdx	       323	ldemul.c	FUNCTION_33	FOR_1	CALL_2
0x4000742	          0x4889c7	                            mov rdi, rax	       323	ldemul.c	FUNCTION_33	FOR_1	CALL_2
0x4000745	      0xe800000000	                          call 0x400074a	       323	ldemul.c	FUNCTION_33	FOR_1	CALL_2
0x400074a	      0x488345f808	                  add qword [rbp - 8], 8	       317	ldemul.c	FUNCTION_33	FOR_1
0x400074f	        0x488b45f8	                mov rax, qword [rbp - 8]	       317	ldemul.c	FUNCTION_33	FOR_1
0x4000753	          0x488b00	                    mov rax, qword [rax]	       317	ldemul.c	FUNCTION_33	FOR_1
0x4000756	          0x4885c0	                           test rax, rax	       317	ldemul.c	FUNCTION_33	FOR_1
0x4000759	            0x75b5	                           jne 0x4000710	       317	ldemul.c	FUNCTION_33	FOR_1
0x400075b	              0x90	                                     nop	       325	ldemul.c	FUNCTION_33
0x400075c	              0xc9	                                   leave	       325	ldemul.c	FUNCTION_33
0x400075d	              0xc3	                                     ret	       325	ldemul.c	FUNCTION_33
ldemul_create_output_section_statements	SWITCH,0:CALL,1:IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	12
0x400014f	              0x55	                                push rbp	       106	ldemul.c	FUNCTION_12
0x4000150	          0x4889e5	                            mov rbp, rsp	       106	ldemul.c	FUNCTION_12
0x4000153	    0x488b05000000	            mov rax, qword [0x0400015a] 	       107	ldemul.c	FUNCTION_12	IF_1
0x400015a	        0x488b4070	            mov rax, qword [rax + 0x70] 	       107	ldemul.c	FUNCTION_12	IF_1
0x400015e	          0x4885c0	                           test rax, rax	       107	ldemul.c	FUNCTION_12	IF_1
0x4000161	            0x740d	                            je 0x4000170	       107	ldemul.c	FUNCTION_12	IF_1
0x4000163	    0x488b05000000	            mov rax, qword [0x0400016a] 	       108	ldemul.c	FUNCTION_12	CALL_1
0x400016a	        0x488b4070	            mov rax, qword [rax + 0x70] 	       108	ldemul.c	FUNCTION_12	CALL_1
0x400016e	            0xffd0	                                call rax	       108	ldemul.c	FUNCTION_12	CALL_1
0x4000170	              0x90	                                     nop	       109	ldemul.c	FUNCTION_12
0x4000171	              0x5d	                                 pop rbp	       109	ldemul.c	FUNCTION_12
0x4000172	              0xc3	                                     ret	       109	ldemul.c	FUNCTION_12
ldemul_before_allocation	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	8
0x40000e9	              0x55	                                push rbp	        81	ldemul.c	FUNCTION_8
0x40000ea	          0x4889e5	                            mov rbp, rsp	        81	ldemul.c	FUNCTION_8
0x40000ed	    0x488b05000000	            mov rax, qword [0x040000f4] 	        82	ldemul.c	FUNCTION_8	CALL_1
0x40000f4	        0x488b4048	            mov rax, qword [rax + 0x48] 	        82	ldemul.c	FUNCTION_8	CALL_1
0x40000f8	            0xffd0	                                call rax	        82	ldemul.c	FUNCTION_8	CALL_1
0x40000fa	              0x90	                                     nop	        83	ldemul.c	FUNCTION_8
0x40000fb	              0x5d	                                 pop rbp	        83	ldemul.c	FUNCTION_8
0x40000fc	              0xc3	                                     ret	        83	ldemul.c	FUNCTION_8
finish_default	SWITCH,0:CALL,2:IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	13
0x4000535	              0x55	                                push rbp	       260	ldemul.c	FUNCTION_28
0x4000536	          0x4889e5	                            mov rbp, rsp	       260	ldemul.c	FUNCTION_28
0x4000539	     0xfb605000000	           movzx eax, byte [0x04000540] 	       261	ldemul.c	FUNCTION_28	IF_1	CALL_1
0x4000540	          0x83e003	                              and eax, 3	       261	ldemul.c	FUNCTION_28	IF_1	CALL_1
0x4000543	            0x3c02	                               cmp al, 2	       261	ldemul.c	FUNCTION_28	IF_1	CALL_1
0x4000545	            0x7414	                            je 0x400055b	       261	ldemul.c	FUNCTION_28	IF_1	CALL_1
0x4000547	    0x488b05000000	            mov rax, qword [0x0400054e] 	       262	ldemul.c	FUNCTION_28	CALL_2
0x400054e	      0xbe00000000	                              mov esi, 0	       262	ldemul.c	FUNCTION_28	CALL_2
0x4000553	          0x4889c7	                            mov rdi, rax	       262	ldemul.c	FUNCTION_28	CALL_2
0x4000556	      0xe800000000	                          call 0x400055b	       262	ldemul.c	FUNCTION_28	CALL_2
0x400055b	              0x90	                                     nop	       263	ldemul.c	FUNCTION_28
0x400055c	              0x5d	                                 pop rbp	       263	ldemul.c	FUNCTION_28
0x400055d	              0xc3	                                     ret	       263	ldemul.c	FUNCTION_28
syslib_default	SWITCH,0:CALL,2:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	13
0x40005c2	              0x55	                                push rbp	       278	ldemul.c	FUNCTION_30
0x40005c3	          0x4889e5	                            mov rbp, rsp	       278	ldemul.c	FUNCTION_30
0x40005c6	        0x4883ec10	                           sub rsp, 0x10	       278	ldemul.c	FUNCTION_30
0x40005ca	        0x48897df8	                mov qword [rbp - 8], rdi	       278	ldemul.c	FUNCTION_30
0x40005ce	      0xbf00000000	                              mov edi, 0	       279	ldemul.c	FUNCTION_30	CALL_2
0x40005d3	      0xe800000000	                          call 0x40005d8	       279	ldemul.c	FUNCTION_30	CALL_2
0x40005d8	      0xbe00000000	                              mov esi, 0	       279	ldemul.c	FUNCTION_30	CALL_2
0x40005dd	          0x4889c7	                            mov rdi, rax	       279	ldemul.c	FUNCTION_30	CALL_2
0x40005e0	      0xb800000000	                              mov eax, 0	       279	ldemul.c	FUNCTION_30	CALL_2
0x40005e5	      0xe800000000	                          call 0x40005ea	       279	ldemul.c	FUNCTION_30	CALL_2
0x40005ea	              0x90	                                     nop	       280	ldemul.c	FUNCTION_30
0x40005eb	              0xc9	                                   leave	       280	ldemul.c	FUNCTION_30
0x40005ec	              0xc3	                                     ret	       280	ldemul.c	FUNCTION_30
ldemul_get_script	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	11
0x4000173	              0x55	                                push rbp	       113	ldemul.c	FUNCTION_13
0x4000174	          0x4889e5	                            mov rbp, rsp	       113	ldemul.c	FUNCTION_13
0x4000177	        0x4883ec10	                           sub rsp, 0x10	       113	ldemul.c	FUNCTION_13
0x400017b	        0x48897df8	                mov qword [rbp - 8], rdi	       113	ldemul.c	FUNCTION_13
0x400017f	    0x488b05000000	            mov rax, qword [0x04000186] 	       114	ldemul.c	FUNCTION_13	CALL_1
0x4000186	        0x488b4050	            mov rax, qword [rax + 0x50] 	       114	ldemul.c	FUNCTION_13	CALL_1
0x400018a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       114	ldemul.c	FUNCTION_13	CALL_1
0x400018e	          0x4889d7	                            mov rdi, rdx	       114	ldemul.c	FUNCTION_13	CALL_1
0x4000191	            0xffd0	                                call rax	       114	ldemul.c	FUNCTION_13	CALL_1
0x4000193	              0xc9	                                   leave	       115	ldemul.c	FUNCTION_13
0x4000194	              0xc3	                                     ret	       115	ldemul.c	FUNCTION_13
ldemul_extra_map_file_text	SWITCH,0:CALL,1:IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	20
0x4000894	              0x55	                                push rbp	       370	ldemul.c	FUNCTION_37
0x4000895	          0x4889e5	                            mov rbp, rsp	       370	ldemul.c	FUNCTION_37
0x4000898	        0x4883ec20	                           sub rsp, 0x20	       370	ldemul.c	FUNCTION_37
0x400089c	        0x48897df8	                mov qword [rbp - 8], rdi	       370	ldemul.c	FUNCTION_37
0x40008a0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       370	ldemul.c	FUNCTION_37
0x40008a4	        0x488955e8	             mov qword [rbp - 0x18], rdx	       370	ldemul.c	FUNCTION_37
0x40008a8	    0x488b05000000	            mov rax, qword [0x040008af] 	       371	ldemul.c	FUNCTION_37	IF_1
0x40008af	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       371	ldemul.c	FUNCTION_37	IF_1
0x40008b6	          0x4885c0	                           test rax, rax	       371	ldemul.c	FUNCTION_37	IF_1
0x40008b9	            0x741f	                            je 0x40008da	       371	ldemul.c	FUNCTION_37	IF_1
0x40008bb	    0x488b05000000	            mov rax, qword [0x040008c2] 	       372	ldemul.c	FUNCTION_37	CALL_1
0x40008c2	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       372	ldemul.c	FUNCTION_37	CALL_1
0x40008c9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       372	ldemul.c	FUNCTION_37	CALL_1
0x40008cd	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       372	ldemul.c	FUNCTION_37	CALL_1
0x40008d1	        0x488b4df8	                mov rcx, qword [rbp - 8]	       372	ldemul.c	FUNCTION_37	CALL_1
0x40008d5	          0x4889cf	                            mov rdi, rcx	       372	ldemul.c	FUNCTION_37	CALL_1
0x40008d8	            0xffd0	                                call rax	       372	ldemul.c	FUNCTION_37	CALL_1
0x40008da	              0x90	                                     nop	       373	ldemul.c	FUNCTION_37
0x40008db	              0xc9	                                   leave	       373	ldemul.c	FUNCTION_37
0x40008dc	              0xc3	                                     ret	       373	ldemul.c	FUNCTION_37
ldemul_after_parse	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	8
0x4000086	              0x55	                                push rbp	        51	ldemul.c	FUNCTION_3
0x4000087	          0x4889e5	                            mov rbp, rsp	        51	ldemul.c	FUNCTION_3
0x400008a	    0x488b05000000	            mov rax, qword [0x04000091] 	        52	ldemul.c	FUNCTION_3	CALL_1
0x4000091	        0x488b4018	            mov rax, qword [rax + 0x18] 	        52	ldemul.c	FUNCTION_3	CALL_1
0x4000095	            0xffd0	                                call rax	        52	ldemul.c	FUNCTION_3	CALL_1
0x4000097	              0x90	                                     nop	        53	ldemul.c	FUNCTION_3
0x4000098	              0x5d	                                 pop rbp	        53	ldemul.c	FUNCTION_3
0x4000099	              0xc3	                                     ret	        53	ldemul.c	FUNCTION_3
ldemul_list_emulation_options	SWITCH,0:CALL,4:IF,2:functions,0:ELSE,0:FOR,1:WHILE,0:DO,0	45
0x400075e	              0x55	                                push rbp	       329	ldemul.c	FUNCTION_34
0x400075f	          0x4889e5	                            mov rbp, rsp	       329	ldemul.c	FUNCTION_34
0x4000762	        0x4883ec30	                           sub rsp, 0x30	       329	ldemul.c	FUNCTION_34
0x4000766	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       329	ldemul.c	FUNCTION_34
0x400076a	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       331	ldemul.c	FUNCTION_34
0x4000771	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       333	ldemul.c	FUNCTION_34	FOR_1
0x4000779	            0xeb59	                           jmp 0x40007d4	       333	ldemul.c	FUNCTION_34	FOR_1
0x400077b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       335	ldemul.c	FUNCTION_34	FOR_1
0x400077f	          0x488b00	                    mov rax, qword [rax]	       335	ldemul.c	FUNCTION_34	FOR_1
0x4000782	        0x488945f8	                mov qword [rbp - 8], rax	       335	ldemul.c	FUNCTION_34	FOR_1
0x4000786	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	ldemul.c	FUNCTION_34	FOR_1	IF_1
0x400078a	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       337	ldemul.c	FUNCTION_34	FOR_1	IF_1
0x4000791	          0x4885c0	                           test rax, rax	       337	ldemul.c	FUNCTION_34	FOR_1	IF_1
0x4000794	            0x7439	                            je 0x40007cf	       337	ldemul.c	FUNCTION_34	FOR_1	IF_1
0x4000796	        0x488b45f8	                mov rax, qword [rbp - 8]	       339	ldemul.c	FUNCTION_34	FOR_1	IF_1	CALL_1
0x400079a	        0x488b5058	            mov rdx, qword [rax + 0x58] 	       339	ldemul.c	FUNCTION_34	FOR_1	IF_1	CALL_1
0x400079e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       339	ldemul.c	FUNCTION_34	FOR_1	IF_1	CALL_1
0x40007a2	      0xbe00000000	                              mov esi, 0	       339	ldemul.c	FUNCTION_34	FOR_1	IF_1	CALL_1
0x40007a7	          0x4889c7	                            mov rdi, rax	       339	ldemul.c	FUNCTION_34	FOR_1	IF_1	CALL_1
0x40007aa	      0xb800000000	                              mov eax, 0	       339	ldemul.c	FUNCTION_34	FOR_1	IF_1	CALL_1
0x40007af	      0xe800000000	                          call 0x40007b4	       339	ldemul.c	FUNCTION_34	FOR_1	IF_1	CALL_1
0x40007b4	        0x488b45f8	                mov rax, qword [rbp - 8]	       341	ldemul.c	FUNCTION_34	FOR_1	IF_1	CALL_2
0x40007b8	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       341	ldemul.c	FUNCTION_34	FOR_1	IF_1	CALL_2
0x40007bf	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       341	ldemul.c	FUNCTION_34	FOR_1	IF_1	CALL_2
0x40007c3	          0x4889d7	                            mov rdi, rdx	       341	ldemul.c	FUNCTION_34	FOR_1	IF_1	CALL_2
0x40007c6	            0xffd0	                                call rax	       341	ldemul.c	FUNCTION_34	FOR_1	IF_1	CALL_2
0x40007c8	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       343	ldemul.c	FUNCTION_34	FOR_1	IF_1
0x40007cf	      0x488345f008	               add qword [rbp - 0x10], 8	       333	ldemul.c	FUNCTION_34	FOR_1
0x40007d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       333	ldemul.c	FUNCTION_34	FOR_1
0x40007d8	          0x488b00	                    mov rax, qword [rax]	       333	ldemul.c	FUNCTION_34	FOR_1
0x40007db	          0x4885c0	                           test rax, rax	       333	ldemul.c	FUNCTION_34	FOR_1
0x40007de	            0x759b	                           jne 0x400077b	       333	ldemul.c	FUNCTION_34	FOR_1
0x40007e0	        0x837dec00	               cmp dword [rbp - 0x14], 0	       347	ldemul.c	FUNCTION_34	IF_2
0x40007e4	            0x7521	                           jne 0x4000807	       347	ldemul.c	FUNCTION_34	IF_2
0x40007e6	      0xbf00000000	                              mov edi, 0	       348	ldemul.c	FUNCTION_34	CALL_4
0x40007eb	      0xe800000000	                          call 0x40007f0	       348	ldemul.c	FUNCTION_34	CALL_4
0x40007f0	          0x4889c2	                            mov rdx, rax	       348	ldemul.c	FUNCTION_34	CALL_4
0x40007f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       348	ldemul.c	FUNCTION_34	CALL_4
0x40007f7	          0x4889d6	                            mov rsi, rdx	       348	ldemul.c	FUNCTION_34	CALL_4
0x40007fa	          0x4889c7	                            mov rdi, rax	       348	ldemul.c	FUNCTION_34	CALL_4
0x40007fd	      0xb800000000	                              mov eax, 0	       348	ldemul.c	FUNCTION_34	CALL_4
0x4000802	      0xe800000000	                          call 0x4000807	       348	ldemul.c	FUNCTION_34	CALL_4
0x4000807	              0x90	                                     nop	       349	ldemul.c	FUNCTION_34
0x4000808	              0xc9	                                   leave	       349	ldemul.c	FUNCTION_34
0x4000809	              0xc3	                                     ret	       349	ldemul.c	FUNCTION_34
hll_default	SWITCH,0:CALL,2:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	13
0x40005ed	              0x55	                                push rbp	       284	ldemul.c	FUNCTION_31
0x40005ee	          0x4889e5	                            mov rbp, rsp	       284	ldemul.c	FUNCTION_31
0x40005f1	        0x4883ec10	                           sub rsp, 0x10	       284	ldemul.c	FUNCTION_31
0x40005f5	        0x48897df8	                mov qword [rbp - 8], rdi	       284	ldemul.c	FUNCTION_31
0x40005f9	      0xbf00000000	                              mov edi, 0	       285	ldemul.c	FUNCTION_31	CALL_2
0x40005fe	      0xe800000000	                          call 0x4000603	       285	ldemul.c	FUNCTION_31	CALL_2
0x4000603	      0xbe00000000	                              mov esi, 0	       285	ldemul.c	FUNCTION_31	CALL_2
0x4000608	          0x4889c7	                            mov rdi, rax	       285	ldemul.c	FUNCTION_31	CALL_2
0x400060b	      0xb800000000	                              mov eax, 0	       285	ldemul.c	FUNCTION_31	CALL_2
0x4000610	      0xe800000000	                          call 0x4000615	       285	ldemul.c	FUNCTION_31	CALL_2
0x4000615	              0x90	                                     nop	       286	ldemul.c	FUNCTION_31
0x4000616	              0xc9	                                   leave	       286	ldemul.c	FUNCTION_31
0x4000617	              0xc3	                                     ret	       286	ldemul.c	FUNCTION_31
ldemul_choose_mode	SWITCH,0:CALL,7:IF,2:functions,0:ELSE,0:FOR,1:WHILE,0:DO,0	60
0x4000618	              0x55	                                push rbp	       292	ldemul.c	FUNCTION_32
0x4000619	          0x4889e5	                            mov rbp, rsp	       292	ldemul.c	FUNCTION_32
0x400061c	        0x4883ec20	                           sub rsp, 0x20	       292	ldemul.c	FUNCTION_32
0x4000620	        0x48897de8	             mov qword [rbp - 0x18], rdi	       292	ldemul.c	FUNCTION_32
0x4000624	    0x48c745f80000	                  mov qword [rbp - 8], 0	       293	ldemul.c	FUNCTION_32
0x400062c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       295	ldemul.c	FUNCTION_32	IF_1
0x4000630	           0xfb600	                   movzx eax, byte [rax]	       295	ldemul.c	FUNCTION_32	IF_1
0x4000633	            0x3c67	                            cmp al, 0x67	       295	ldemul.c	FUNCTION_32	IF_1
0x4000635	            0x7558	                           jne 0x400068f	       295	ldemul.c	FUNCTION_32	IF_1
0x4000637	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       295	ldemul.c	FUNCTION_32	IF_1
0x400063b	        0x4883c001	                              add rax, 1	       295	ldemul.c	FUNCTION_32	IF_1
0x400063f	           0xfb600	                   movzx eax, byte [rax]	       295	ldemul.c	FUNCTION_32	IF_1
0x4000642	            0x3c6c	                            cmp al, 0x6c	       295	ldemul.c	FUNCTION_32	IF_1
0x4000644	            0x7549	                           jne 0x400068f	       295	ldemul.c	FUNCTION_32	IF_1
0x4000646	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       295	ldemul.c	FUNCTION_32	IF_1
0x400064a	        0x4883c002	                              add rax, 2	       295	ldemul.c	FUNCTION_32	IF_1
0x400064e	           0xfb600	                   movzx eax, byte [rax]	       295	ldemul.c	FUNCTION_32	IF_1
0x4000651	            0x3c64	                            cmp al, 0x64	       295	ldemul.c	FUNCTION_32	IF_1
0x4000653	            0x753a	                           jne 0x400068f	       295	ldemul.c	FUNCTION_32	IF_1
0x4000655	      0x488345e803	               add qword [rbp - 0x18], 3	       296	ldemul.c	FUNCTION_32	IF_1
0x400065a	            0xeb33	                           jmp 0x400068f	       297	ldemul.c	FUNCTION_32	FOR_1
0x400065c	        0x488b45f8	                mov rax, qword [rbp - 8]	       299	ldemul.c	FUNCTION_32	FOR_1	IF_2	CALL_1
0x4000660	          0x488b00	                    mov rax, qword [rax]	       299	ldemul.c	FUNCTION_32	FOR_1	IF_2	CALL_1
0x4000663	        0x488b5058	            mov rdx, qword [rax + 0x58] 	       299	ldemul.c	FUNCTION_32	FOR_1	IF_2	CALL_1
0x4000667	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       299	ldemul.c	FUNCTION_32	FOR_1	IF_2	CALL_1
0x400066b	          0x4889d6	                            mov rsi, rdx	       299	ldemul.c	FUNCTION_32	FOR_1	IF_2	CALL_1
0x400066e	          0x4889c7	                            mov rdi, rax	       299	ldemul.c	FUNCTION_32	FOR_1	IF_2	CALL_1
0x4000671	      0xe800000000	                          call 0x4000676	       299	ldemul.c	FUNCTION_32	FOR_1	IF_2	CALL_1
0x4000676	            0x85c0	                           test eax, eax	       299	ldemul.c	FUNCTION_32	FOR_1	IF_2	CALL_1
0x4000678	            0x7510	                           jne 0x400068a	       299	ldemul.c	FUNCTION_32	FOR_1	IF_2	CALL_1
0x400067a	        0x488b45f8	                mov rax, qword [rbp - 8]	       301	ldemul.c	FUNCTION_32	FOR_1	IF_2
0x400067e	          0x488b00	                    mov rax, qword [rax]	       301	ldemul.c	FUNCTION_32	FOR_1	IF_2
0x4000681	    0x488905000000	            mov qword [0x04000688], rax 	       301	ldemul.c	FUNCTION_32	FOR_1	IF_2
0x4000688	            0xeb67	                           jmp 0x40006f1	       302	ldemul.c	FUNCTION_32	FOR_1	IF_2
0x400068a	      0x488345f808	                  add qword [rbp - 8], 8	       297	ldemul.c	FUNCTION_32	FOR_1
0x400068f	        0x488b45f8	                mov rax, qword [rbp - 8]	       297	ldemul.c	FUNCTION_32	FOR_1
0x4000693	          0x488b00	                    mov rax, qword [rax]	       297	ldemul.c	FUNCTION_32	FOR_1
0x4000696	          0x4885c0	                           test rax, rax	       297	ldemul.c	FUNCTION_32	FOR_1
0x4000699	            0x75c1	                           jne 0x400065c	       297	ldemul.c	FUNCTION_32	FOR_1
0x400069b	      0xbf00000000	                              mov edi, 0	       305	ldemul.c	FUNCTION_32	CALL_3
0x40006a0	      0xe800000000	                          call 0x40006a5	       305	ldemul.c	FUNCTION_32	CALL_3
0x40006a5	          0x4889c2	                            mov rdx, rax	       305	ldemul.c	FUNCTION_32	CALL_3
0x40006a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       305	ldemul.c	FUNCTION_32	CALL_3
0x40006ac	          0x4889c6	                            mov rsi, rax	       305	ldemul.c	FUNCTION_32	CALL_3
0x40006af	          0x4889d7	                            mov rdi, rdx	       305	ldemul.c	FUNCTION_32	CALL_3
0x40006b2	      0xb800000000	                              mov eax, 0	       305	ldemul.c	FUNCTION_32	CALL_3
0x40006b7	      0xe800000000	                          call 0x40006bc	       305	ldemul.c	FUNCTION_32	CALL_3
0x40006bc	      0xbf00000000	                              mov edi, 0	       306	ldemul.c	FUNCTION_32	CALL_5
0x40006c1	      0xe800000000	                          call 0x40006c6	       306	ldemul.c	FUNCTION_32	CALL_5
0x40006c6	          0x4889c7	                            mov rdi, rax	       306	ldemul.c	FUNCTION_32	CALL_5
0x40006c9	      0xb800000000	                              mov eax, 0	       306	ldemul.c	FUNCTION_32	CALL_5
0x40006ce	      0xe800000000	                          call 0x40006d3	       306	ldemul.c	FUNCTION_32	CALL_5
0x40006d3	    0x488b05000000	            mov rax, qword [0x040006da] 	       307	ldemul.c	FUNCTION_32	CALL_6
0x40006da	          0x4889c7	                            mov rdi, rax	       307	ldemul.c	FUNCTION_32	CALL_6
0x40006dd	      0xe800000000	                          call 0x40006e2	       307	ldemul.c	FUNCTION_32	CALL_6
0x40006e2	      0xbf00000000	                              mov edi, 0	       308	ldemul.c	FUNCTION_32	CALL_7
0x40006e7	      0xb800000000	                              mov eax, 0	       308	ldemul.c	FUNCTION_32	CALL_7
0x40006ec	      0xe800000000	                          call 0x40006f1	       308	ldemul.c	FUNCTION_32	CALL_7
0x40006f1	              0xc9	                                   leave	       309	ldemul.c	FUNCTION_32
0x40006f2	              0xc3	                                     ret	       309	ldemul.c	FUNCTION_32
ldemul_place_orphan	SWITCH,0:CALL,0:IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	21
0x40001de	              0x55	                                push rbp	       128	ldemul.c	FUNCTION_15
0x40001df	          0x4889e5	                            mov rbp, rsp	       128	ldemul.c	FUNCTION_15
0x40001e2	        0x4883ec20	                           sub rsp, 0x20	       128	ldemul.c	FUNCTION_15
0x40001e6	        0x48897df8	                mov qword [rbp - 8], rdi	       128	ldemul.c	FUNCTION_15
0x40001ea	        0x488975f0	             mov qword [rbp - 0x10], rsi	       128	ldemul.c	FUNCTION_15
0x40001ee	          0x8955ec	             mov dword [rbp - 0x14], edx	       128	ldemul.c	FUNCTION_15
0x40001f1	    0x488b05000000	            mov rax, qword [0x040001f8] 	       129	ldemul.c	FUNCTION_15	IF_1
0x40001f8	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       129	ldemul.c	FUNCTION_15	IF_1
0x40001ff	          0x4885c0	                           test rax, rax	       129	ldemul.c	FUNCTION_15	IF_1
0x4000202	            0x7420	                            je 0x4000224	       129	ldemul.c	FUNCTION_15	IF_1
0x4000204	    0x488b05000000	            mov rax, qword [0x0400020b] 	       130	ldemul.c	FUNCTION_15	IF_1
0x400020b	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       130	ldemul.c	FUNCTION_15	IF_1
0x4000212	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       130	ldemul.c	FUNCTION_15	IF_1
0x4000215	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       130	ldemul.c	FUNCTION_15	IF_1
0x4000219	        0x488b4df8	                mov rcx, qword [rbp - 8]	       130	ldemul.c	FUNCTION_15	IF_1
0x400021d	          0x4889cf	                            mov rdi, rcx	       130	ldemul.c	FUNCTION_15	IF_1
0x4000220	            0xffd0	                                call rax	       130	ldemul.c	FUNCTION_15	IF_1
0x4000222	            0xeb05	                           jmp 0x4000229	       130	ldemul.c	FUNCTION_15	IF_1
0x4000224	      0xb800000000	                              mov eax, 0	       131	ldemul.c	FUNCTION_15
0x4000229	              0xc9	                                   leave	       132	ldemul.c	FUNCTION_15
0x400022a	              0xc3	                                     ret	       132	ldemul.c	FUNCTION_15
ldemul_after_check_relocs	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	8
0x40000c1	              0x55	                                push rbp	        69	ldemul.c	FUNCTION_6
0x40000c2	          0x4889e5	                            mov rbp, rsp	        69	ldemul.c	FUNCTION_6
0x40000c5	    0x488b05000000	            mov rax, qword [0x040000cc] 	        70	ldemul.c	FUNCTION_6	CALL_1
0x40000cc	        0x488b4028	            mov rax, qword [rax + 0x28] 	        70	ldemul.c	FUNCTION_6	CALL_1
0x40000d0	            0xffd0	                                call rax	        70	ldemul.c	FUNCTION_6	CALL_1
0x40000d2	              0x90	                                     nop	        71	ldemul.c	FUNCTION_6
0x40000d3	              0x5d	                                 pop rbp	        71	ldemul.c	FUNCTION_6
0x40000d4	              0xc3	                                     ret	        71	ldemul.c	FUNCTION_6
after_parse_default	SWITCH,0:CALL,5:IF,5:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	69
0x40003e7	              0x55	                                push rbp	       212	ldemul.c	FUNCTION_23
0x40003e8	          0x4889e5	                            mov rbp, rsp	       212	ldemul.c	FUNCTION_23
0x40003eb	        0x4883ec20	                           sub rsp, 0x20	       212	ldemul.c	FUNCTION_23
0x40003ef	    0x64488b042528	                mov rax, qword fs:[0x28]	       212	ldemul.c	FUNCTION_23
0x40003f8	        0x488945f8	                mov qword [rbp - 8], rax	       212	ldemul.c	FUNCTION_23
0x40003fc	            0x31c0	                            xor eax, eax	       212	ldemul.c	FUNCTION_23
0x40003fe	    0x488b05000000	            mov rax, qword [0x04000405] 	       213	ldemul.c	FUNCTION_23	IF_1
0x4000405	          0x4885c0	                           test rax, rax	       213	ldemul.c	FUNCTION_23	IF_1
0x4000408	     0xf8481000000	                            je 0x400048f	       213	ldemul.c	FUNCTION_23	IF_1
0x400040e	     0xfb605000000	           movzx eax, byte [0x04000415] 	       214	ldemul.c	FUNCTION_23	IF_1	CALL_1
0x4000415	          0x83e003	                              and eax, 3	       214	ldemul.c	FUNCTION_23	IF_1	CALL_1
0x4000418	            0x84c0	                             test al, al	       214	ldemul.c	FUNCTION_23	IF_1	CALL_1
0x400041a	            0x7418	                            je 0x4000434	       214	ldemul.c	FUNCTION_23	IF_1	CALL_1
0x400041c	     0xfb605000000	           movzx eax, byte [0x04000423] 	       214	ldemul.c	FUNCTION_23	IF_1	CALL_1
0x4000423	          0x83e003	                              and eax, 3	       214	ldemul.c	FUNCTION_23	IF_1	CALL_1
0x4000426	            0x3c01	                               cmp al, 1	       214	ldemul.c	FUNCTION_23	IF_1	CALL_1
0x4000428	            0x740a	                            je 0x4000434	       214	ldemul.c	FUNCTION_23	IF_1	CALL_1
0x400042a	    0x8b0500000000	            mov eax, dword [0x04000430] 	       214	ldemul.c	FUNCTION_23	IF_1	CALL_1
0x4000430	            0x85c0	                           test eax, eax	       214	ldemul.c	FUNCTION_23	IF_1	CALL_1
0x4000432	            0x745b	                            je 0x400048f	       214	ldemul.c	FUNCTION_23	IF_1	CALL_1
0x4000434	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       216	ldemul.c	FUNCTION_23	IF_1
0x400043b	    0x8b0500000000	            mov eax, dword [0x04000441] 	       218	ldemul.c	FUNCTION_23	IF_1	IF_2
0x4000441	            0x85c0	                           test eax, eax	       218	ldemul.c	FUNCTION_23	IF_1	IF_2
0x4000443	            0x742d	                            je 0x4000472	       218	ldemul.c	FUNCTION_23	IF_1	IF_2
0x4000445	    0x488b05000000	            mov rax, qword [0x0400044c] 	       222	ldemul.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x400044c	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       222	ldemul.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x4000450	      0xba00000000	                              mov edx, 0	       222	ldemul.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x4000455	          0x4889ce	                            mov rsi, rcx	       222	ldemul.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x4000458	          0x4889c7	                            mov rdi, rax	       222	ldemul.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x400045b	      0xe800000000	                          call 0x4000460	       222	ldemul.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x4000460	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       223	ldemul.c	FUNCTION_23	IF_1	IF_2
0x4000464	           0xfb600	                   movzx eax, byte [rax]	       223	ldemul.c	FUNCTION_23	IF_1	IF_2
0x4000467	            0x84c0	                             test al, al	       223	ldemul.c	FUNCTION_23	IF_1	IF_2
0x4000469	           0xf94c0	                                 sete al	       223	ldemul.c	FUNCTION_23	IF_1	IF_2
0x400046c	           0xfb6c0	                           movzx eax, al	       223	ldemul.c	FUNCTION_23	IF_1	IF_2
0x400046f	          0x8945ec	             mov dword [rbp - 0x14], eax	       223	ldemul.c	FUNCTION_23	IF_1	IF_2
0x4000472	        0x837dec00	               cmp dword [rbp - 0x14], 0	       225	ldemul.c	FUNCTION_23	IF_1	IF_3
0x4000476	            0x7517	                           jne 0x400048f	       225	ldemul.c	FUNCTION_23	IF_1	IF_3
0x4000478	    0x8b1500000000	            mov edx, dword [0x0400047e] 	       226	ldemul.c	FUNCTION_23	IF_1	CALL_3
0x400047e	    0x488b05000000	            mov rax, qword [0x04000485] 	       226	ldemul.c	FUNCTION_23	IF_1	CALL_3
0x4000485	            0x89d6	                            mov esi, edx	       226	ldemul.c	FUNCTION_23	IF_1	CALL_3
0x4000487	          0x4889c7	                            mov rdi, rax	       226	ldemul.c	FUNCTION_23	IF_1	CALL_3
0x400048a	      0xe800000000	                          call 0x400048f	       226	ldemul.c	FUNCTION_23	IF_1	CALL_3
0x400048f	    0x488b05000000	            mov rax, qword [0x04000496] 	       228	ldemul.c	FUNCTION_23	IF_4
0x4000496	          0x4885c0	                           test rax, rax	       228	ldemul.c	FUNCTION_23	IF_4
0x4000499	            0x7516	                           jne 0x40004b1	       228	ldemul.c	FUNCTION_23	IF_4
0x400049b	    0x488b05000000	            mov rax, qword [0x040004a2] 	       229	ldemul.c	FUNCTION_23	CALL_4
0x40004a2	          0x4889c7	                            mov rdi, rax	       229	ldemul.c	FUNCTION_23	CALL_4
0x40004a5	      0xe800000000	                          call 0x40004aa	       229	ldemul.c	FUNCTION_23	CALL_4
0x40004aa	    0x488905000000	            mov qword [0x040004b1], rax 	       229	ldemul.c	FUNCTION_23	CALL_4
0x40004b1	    0x488b05000000	            mov rax, qword [0x040004b8] 	       230	ldemul.c	FUNCTION_23	IF_5
0x40004b8	          0x4885c0	                           test rax, rax	       230	ldemul.c	FUNCTION_23	IF_5
0x40004bb	            0x7528	                           jne 0x40004e5	       230	ldemul.c	FUNCTION_23	IF_5
0x40004bd	     0xfb605000000	           movzx eax, byte [0x040004c4] 	       232	ldemul.c	FUNCTION_23	IF_5
0x40004c4	          0xc0e804	                               shr al, 4	       232	ldemul.c	FUNCTION_23	IF_5
0x40004c7	          0x83e001	                              and eax, 1	       232	ldemul.c	FUNCTION_23	IF_5
0x40004ca	           0xfb6d0	                           movzx edx, al	       231	ldemul.c	FUNCTION_23	IF_5	CALL_5
0x40004cd	    0x488b05000000	            mov rax, qword [0x040004d4] 	       231	ldemul.c	FUNCTION_23	IF_5	CALL_5
0x40004d4	            0x89d6	                            mov esi, edx	       231	ldemul.c	FUNCTION_23	IF_5	CALL_5
0x40004d6	          0x4889c7	                            mov rdi, rax	       231	ldemul.c	FUNCTION_23	IF_5	CALL_5
0x40004d9	      0xe800000000	                          call 0x40004de	       231	ldemul.c	FUNCTION_23	IF_5	CALL_5
0x40004de	    0x488905000000	            mov qword [0x040004e5], rax 	       231	ldemul.c	FUNCTION_23	IF_5	CALL_5
0x40004e5	              0x90	                                     nop	       233	ldemul.c	FUNCTION_23
0x40004e6	        0x488b45f8	                mov rax, qword [rbp - 8]	       233	ldemul.c	FUNCTION_23
0x40004ea	    0x644833042528	                xor rax, qword fs:[0x28]	       233	ldemul.c	FUNCTION_23
0x40004f3	            0x7405	                            je 0x40004fa	       233	ldemul.c	FUNCTION_23
0x40004f5	      0xe800000000	                          call 0x40004fa	       233	ldemul.c	FUNCTION_23
0x40004fa	              0xc9	                                   leave	       233	ldemul.c	FUNCTION_23
0x40004fb	              0xc3	                                     ret	       233	ldemul.c	FUNCTION_23
ldemul_after_open	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	8
0x40000ad	              0x55	                                push rbp	        63	ldemul.c	FUNCTION_5
0x40000ae	          0x4889e5	                            mov rbp, rsp	        63	ldemul.c	FUNCTION_5
0x40000b1	    0x488b05000000	            mov rax, qword [0x040000b8] 	        64	ldemul.c	FUNCTION_5	CALL_1
0x40000b8	        0x488b4020	            mov rax, qword [rax + 0x20] 	        64	ldemul.c	FUNCTION_5	CALL_1
0x40000bc	            0xffd0	                                call rax	        64	ldemul.c	FUNCTION_5	CALL_1
0x40000be	              0x90	                                     nop	        65	ldemul.c	FUNCTION_5
0x40000bf	              0x5d	                                 pop rbp	        65	ldemul.c	FUNCTION_5
0x40000c0	              0xc3	                                     ret	        65	ldemul.c	FUNCTION_5
after_allocation_default	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	7
0x400050a	              0x55	                                push rbp	       247	ldemul.c	FUNCTION_26
0x400050b	          0x4889e5	                            mov rbp, rsp	       247	ldemul.c	FUNCTION_26
0x400050e	      0xbf00000000	                              mov edi, 0	       248	ldemul.c	FUNCTION_26	CALL_1
0x4000513	      0xe800000000	                          call 0x4000518	       248	ldemul.c	FUNCTION_26	CALL_1
0x4000518	              0x90	                                     nop	       249	ldemul.c	FUNCTION_26
0x4000519	              0x5d	                                 pop rbp	       249	ldemul.c	FUNCTION_26
0x400051a	              0xc3	                                     ret	       249	ldemul.c	FUNCTION_26
after_open_default	SWITCH,0:CALL,0:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	5
0x40004fc	              0x55	                                push rbp	       237	ldemul.c	FUNCTION_24
0x40004fd	          0x4889e5	                            mov rbp, rsp	       237	ldemul.c	FUNCTION_24
0x4000500	              0x90	                                     nop	       238	ldemul.c	FUNCTION_24
0x4000501	              0x5d	                                 pop rbp	       238	ldemul.c	FUNCTION_24
0x4000502	              0xc3	                                     ret	       238	ldemul.c	FUNCTION_24
ldemul_finish	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	8
0x4000111	              0x55	                                push rbp	        93	ldemul.c	FUNCTION_10
0x4000112	          0x4889e5	                            mov rbp, rsp	        93	ldemul.c	FUNCTION_10
0x4000115	    0x488b05000000	            mov rax, qword [0x0400011c] 	        94	ldemul.c	FUNCTION_10	CALL_1
0x400011c	        0x488b4068	            mov rax, qword [rax + 0x68] 	        94	ldemul.c	FUNCTION_10	CALL_1
0x4000120	            0xffd0	                                call rax	        94	ldemul.c	FUNCTION_10	CALL_1
0x4000122	              0x90	                                     nop	        95	ldemul.c	FUNCTION_10
0x4000123	              0x5d	                                 pop rbp	        95	ldemul.c	FUNCTION_10
0x4000124	              0xc3	                                     ret	        95	ldemul.c	FUNCTION_10
before_allocation_default	SWITCH,0:CALL,2:IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	10
0x400051b	              0x55	                                push rbp	       253	ldemul.c	FUNCTION_27
0x400051c	          0x4889e5	                            mov rbp, rsp	       253	ldemul.c	FUNCTION_27
0x400051f	     0xfb605000000	           movzx eax, byte [0x04000526] 	       254	ldemul.c	FUNCTION_27	IF_1	CALL_1
0x4000526	          0x83e003	                              and eax, 3	       254	ldemul.c	FUNCTION_27	IF_1	CALL_1
0x4000529	            0x3c02	                               cmp al, 2	       254	ldemul.c	FUNCTION_27	IF_1	CALL_1
0x400052b	            0x7405	                            je 0x4000532	       254	ldemul.c	FUNCTION_27	IF_1	CALL_1
0x400052d	      0xe800000000	                          call 0x4000532	       255	ldemul.c	FUNCTION_27	CALL_2
0x4000532	              0x90	                                     nop	       256	ldemul.c	FUNCTION_27
0x4000533	              0x5d	                                 pop rbp	       256	ldemul.c	FUNCTION_27
0x4000534	              0xc3	                                     ret	       256	ldemul.c	FUNCTION_27
ldemul_choose_target	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	14
0x4000386	              0x55	                                push rbp	       183	ldemul.c	FUNCTION_21
0x4000387	          0x4889e5	                            mov rbp, rsp	       183	ldemul.c	FUNCTION_21
0x400038a	        0x4883ec10	                           sub rsp, 0x10	       183	ldemul.c	FUNCTION_21
0x400038e	          0x897dfc	                mov dword [rbp - 4], edi	       183	ldemul.c	FUNCTION_21
0x4000391	        0x488975f0	             mov qword [rbp - 0x10], rsi	       183	ldemul.c	FUNCTION_21
0x4000395	    0x488b05000000	            mov rax, qword [0x0400039c] 	       184	ldemul.c	FUNCTION_21	CALL_1
0x400039c	        0x488b4040	            mov rax, qword [rax + 0x40] 	       184	ldemul.c	FUNCTION_21	CALL_1
0x40003a0	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       184	ldemul.c	FUNCTION_21	CALL_1
0x40003a4	          0x8b55fc	                mov edx, dword [rbp - 4]	       184	ldemul.c	FUNCTION_21	CALL_1
0x40003a7	          0x4889ce	                            mov rsi, rcx	       184	ldemul.c	FUNCTION_21	CALL_1
0x40003aa	            0x89d7	                            mov edi, edx	       184	ldemul.c	FUNCTION_21	CALL_1
0x40003ac	            0xffd0	                                call rax	       184	ldemul.c	FUNCTION_21	CALL_1
0x40003ae	              0xc9	                                   leave	       185	ldemul.c	FUNCTION_21
0x40003af	              0xc3	                                     ret	       185	ldemul.c	FUNCTION_21
ldemul_find_potential_libraries	SWITCH,0:CALL,1:IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	20
0x400080a	              0x55	                                push rbp	       353	ldemul.c	FUNCTION_35
0x400080b	          0x4889e5	                            mov rbp, rsp	       353	ldemul.c	FUNCTION_35
0x400080e	        0x4883ec10	                           sub rsp, 0x10	       353	ldemul.c	FUNCTION_35
0x4000812	        0x48897df8	                mov qword [rbp - 8], rdi	       353	ldemul.c	FUNCTION_35
0x4000816	        0x488975f0	             mov qword [rbp - 0x10], rsi	       353	ldemul.c	FUNCTION_35
0x400081a	    0x488b05000000	            mov rax, qword [0x04000821] 	       354	ldemul.c	FUNCTION_35	IF_1
0x4000821	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       354	ldemul.c	FUNCTION_35	IF_1
0x4000828	          0x4885c0	                           test rax, rax	       354	ldemul.c	FUNCTION_35	IF_1
0x400082b	            0x7420	                            je 0x400084d	       354	ldemul.c	FUNCTION_35	IF_1
0x400082d	    0x488b05000000	            mov rax, qword [0x04000834] 	       355	ldemul.c	FUNCTION_35	CALL_1
0x4000834	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       355	ldemul.c	FUNCTION_35	CALL_1
0x400083b	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       355	ldemul.c	FUNCTION_35	CALL_1
0x400083f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       355	ldemul.c	FUNCTION_35	CALL_1
0x4000843	          0x4889ce	                            mov rsi, rcx	       355	ldemul.c	FUNCTION_35	CALL_1
0x4000846	          0x4889d7	                            mov rdi, rdx	       355	ldemul.c	FUNCTION_35	CALL_1
0x4000849	            0xffd0	                                call rax	       355	ldemul.c	FUNCTION_35	CALL_1
0x400084b	            0xeb05	                           jmp 0x4000852	       355	ldemul.c	FUNCTION_35	CALL_1
0x400084d	      0xb800000000	                              mov eax, 0	       357	ldemul.c	FUNCTION_35
0x4000852	              0xc9	                                   leave	       358	ldemul.c	FUNCTION_35
0x4000853	              0xc3	                                     ret	       358	ldemul.c	FUNCTION_35
ldemul_set_output_arch	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:DO,0	8
0x40000fd	              0x55	                                push rbp	        87	ldemul.c	FUNCTION_9
0x40000fe	          0x4889e5	                            mov rbp, rsp	        87	ldemul.c	FUNCTION_9
0x4000101	    0x488b05000000	            mov rax, qword [0x04000108] 	        88	ldemul.c	FUNCTION_9	CALL_1
0x4000108	        0x488b4038	            mov rax, qword [rax + 0x38] 	        88	ldemul.c	FUNCTION_9	CALL_1
0x400010c	            0xffd0	                                call rax	        88	ldemul.c	FUNCTION_9	CALL_1
0x400010e	              0x90	                                     nop	        89	ldemul.c	FUNCTION_9
0x400010f	              0x5d	                                 pop rbp	        89	ldemul.c	FUNCTION_9
0x4000110	              0xc3	                                     ret	        89	ldemul.c	FUNCTION_9
