inflatePrime	IF,3:WHILE,0:ELSE,0:functions,0:SWITCH,0:DO,0:CALL,1:FOR,0	62
0x4000499	              0x55	                                push rbp	       251	inflate.c	FOR_1	IF_7	FUNCTION_5
0x400049a	          0x4889e5	                            mov rbp, rsp	       251	inflate.c	FOR_1	IF_7	FUNCTION_5
0x400049d	        0x4883ec20	                           sub rsp, 0x20	       251	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004a1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       251	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004a5	          0x8975e4	             mov dword [rbp - 0x1c], esi	       251	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004a8	          0x8955e0	             mov dword [rbp - 0x20], edx	       251	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       254	inflate.c	FOR_1	IF_7	FUNCTION_5	CALL_1
0x40004af	          0x4889c7	                            mov rdi, rax	       254	inflate.c	FOR_1	IF_7	FUNCTION_5	CALL_1
0x40004b2	      0xe889fbffff	              call sym.inflateStateCheck	       254	inflate.c	FOR_1	IF_7	FUNCTION_5	CALL_1
0x40004b7	            0x85c0	                           test eax, eax	       254	inflate.c	FOR_1	IF_7	FUNCTION_5	CALL_1
0x40004b9	            0x740a	                            je 0x40004c5	       254	inflate.c	FOR_1	IF_7	FUNCTION_5	CALL_1
0x40004bb	      0xb8feffffff	                     mov eax, 0xfffffffe	       254	inflate.c	FOR_1	IF_7	FUNCTION_5	CALL_1
0x40004c0	      0xe9a1000000	                           jmp 0x4000566	       254	inflate.c	FOR_1	IF_7	FUNCTION_5	CALL_1
0x40004c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       255	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004c9	        0x488b4038	            mov rax, qword [rax + 0x38] 	       255	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004cd	        0x488945f8	                mov qword [rbp - 8], rax	       255	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004d1	        0x837de400	               cmp dword [rbp - 0x1c], 0	       256	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x40004d5	            0x791e	                           jns 0x40004f5	       256	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x40004d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       257	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x40004db	    0x48c740500000	               mov qword [rax + 0x50], 0	       257	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x40004e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       258	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x40004e7	    0xc74058000000	               mov dword [rax + 0x58], 0	       258	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x40004ee	      0xb800000000	                              mov eax, 0	       259	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x40004f3	            0xeb71	                           jmp 0x4000566	       259	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x40004f5	        0x837de410	           cmp dword [rbp - 0x1c], 0x10 	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x40004f9	            0x7f11	                            jg 0x400050c	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x40004fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x40004ff	          0x8b5058	            mov edx, dword [rax + 0x58] 	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x4000502	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x4000505	             0x1d0	                            add eax, edx	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x4000507	          0x83f820	                           cmp eax, 0x20	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x400050a	            0x7607	                           jbe 0x4000513	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x400050c	      0xb8feffffff	                     mov eax, 0xfffffffe	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x4000511	            0xeb53	                           jmp 0x4000566	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x4000513	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       262	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000516	      0xba01000000	                              mov edx, 1	       262	inflate.c	FOR_1	IF_7	FUNCTION_5
0x400051b	            0x89c1	                            mov ecx, eax	       262	inflate.c	FOR_1	IF_7	FUNCTION_5
0x400051d	          0x48d3e2	                             shl rdx, cl	       262	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000520	          0x4889d0	                            mov rax, rdx	       262	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000523	          0x83e801	                              sub eax, 1	       262	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000526	          0x2145e0	             and dword [rbp - 0x20], eax	       262	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000529	        0x488b45f8	                mov rax, qword [rbp - 8]	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x400052d	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000531	          0x8b75e0	             mov esi, dword [rbp - 0x20]	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000534	        0x488b45f8	                mov rax, qword [rbp - 8]	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000538	          0x8b4058	            mov eax, dword [rax + 0x58] 	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x400053b	            0x89c1	                            mov ecx, eax	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x400053d	            0xd3e6	                             shl esi, cl	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x400053f	            0x89f0	                            mov eax, esi	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000541	            0x89c0	                            mov eax, eax	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000543	          0x4801c2	                            add rdx, rax	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000546	        0x488b45f8	                mov rax, qword [rbp - 8]	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x400054a	        0x48895050	             mov qword [rax + 0x50], rdx	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x400054e	        0x488b45f8	                mov rax, qword [rbp - 8]	       264	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000552	          0x8b5058	            mov edx, dword [rax + 0x58] 	       264	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000555	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       264	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000558	             0x1c2	                            add edx, eax	       264	inflate.c	FOR_1	IF_7	FUNCTION_5
0x400055a	        0x488b45f8	                mov rax, qword [rbp - 8]	       264	inflate.c	FOR_1	IF_7	FUNCTION_5
0x400055e	          0x895058	             mov dword [rax + 0x58], edx	       264	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000561	      0xb800000000	                              mov eax, 0	       265	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000566	              0xc9	                                   leave	       266	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000567	              0xc3	                                     ret	       266	inflate.c	FOR_1	IF_7	FUNCTION_5
inflateReset2	IF,5:WHILE,0:ELSE,1:functions,0:SWITCH,0:DO,0:CALL,3:FOR,0	66
0x400024f	              0x55	                                push rbp	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000250	          0x4889e5	                            mov rbp, rsp	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000253	        0x4883ec20	                           sub rsp, 0x20	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000257	        0x48897de8	             mov qword [rbp - 0x18], rdi	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x400025b	          0x8975e4	             mov dword [rbp - 0x1c], esi	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x400025e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       165	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_1
0x4000262	          0x4889c7	                            mov rdi, rax	       165	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_1
0x4000265	      0xe8d6fdffff	              call sym.inflateStateCheck	       165	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_1
0x400026a	            0x85c0	                           test eax, eax	       165	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_1
0x400026c	            0x740a	                            je 0x4000278	       165	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_1
0x400026e	      0xb8feffffff	                     mov eax, 0xfffffffe	       165	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_1
0x4000273	      0xe9b4000000	                           jmp 0x400032c	       165	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_1
0x4000278	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       166	inflate.c	FOR_1	IF_7	FUNCTION_4
0x400027c	        0x488b4038	            mov rax, qword [rax + 0x38] 	       166	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000280	        0x488945f8	                mov qword [rbp - 8], rax	       166	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000284	        0x837de400	               cmp dword [rbp - 0x1c], 0	       169	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_2
0x4000288	            0x790c	                           jns 0x4000296	       169	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_2
0x400028a	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       170	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_2
0x4000291	          0xf75de4	                  neg dword [rbp - 0x1c]	       171	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_2
0x4000294	            0xeb16	                           jmp 0x40002ac	       171	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_2
0x4000296	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       174	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1
0x4000299	          0xc1f804	                              sar eax, 4	       174	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1
0x400029c	          0x83c005	                              add eax, 5	       174	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1
0x400029f	          0x8945f4	              mov dword [rbp - 0xc], eax	       174	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1
0x40002a2	        0x837de42f	           cmp dword [rbp - 0x1c], 0x2f 	       176	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1	IF_3
0x40002a6	            0x7f04	                            jg 0x40002ac	       176	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1	IF_3
0x40002a8	        0x8365e40f	             and dword [rbp - 0x1c], 0xf	       177	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1	IF_3
0x40002ac	        0x837de400	               cmp dword [rbp - 0x1c], 0	       182	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x40002b0	            0x7413	                            je 0x40002c5	       182	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x40002b2	        0x837de407	               cmp dword [rbp - 0x1c], 7	       182	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x40002b6	            0x7e06	                           jle 0x40002be	       182	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x40002b8	        0x837de40f	            cmp dword [rbp - 0x1c], 0xf 	       182	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x40002bc	            0x7e07	                           jle 0x40002c5	       182	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x40002be	      0xb8feffffff	                     mov eax, 0xfffffffe	       183	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x40002c3	            0xeb67	                           jmp 0x400032c	       183	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x40002c5	        0x488b45f8	                mov rax, qword [rbp - 8]	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x40002c9	        0x488b4048	            mov rax, qword [rax + 0x48] 	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x40002cd	          0x4885c0	                           test rax, rax	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x40002d0	            0x743a	                            je 0x400030c	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x40002d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x40002d6	          0x8b5038	            mov edx, dword [rax + 0x38] 	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x40002d9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x40002dc	            0x39c2	                            cmp edx, eax	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x40002de	            0x742c	                            je 0x400030c	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x40002e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       185	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5	CALL_2
0x40002e4	        0x488b4048	            mov rax, qword [rax + 0x48] 	       185	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5	CALL_2
0x40002e8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       185	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5	CALL_2
0x40002ec	        0x488b4a48	            mov rcx, qword [rdx + 0x48] 	       185	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5	CALL_2
0x40002f0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       185	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5	CALL_2
0x40002f4	        0x488b5250	            mov rdx, qword [rdx + 0x50] 	       185	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5	CALL_2
0x40002f8	          0x4889ce	                            mov rsi, rcx	       185	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5	CALL_2
0x40002fb	          0x4889d7	                            mov rdi, rdx	       185	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5	CALL_2
0x40002fe	            0xffd0	                                call rax	       185	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5	CALL_2
0x4000300	        0x488b45f8	                mov rax, qword [rbp - 8]	       186	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x4000304	    0x48c740480000	               mov qword [rax + 0x48], 0	       186	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x400030c	        0x488b45f8	                mov rax, qword [rbp - 8]	       190	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000310	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       190	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000313	          0x895010	             mov dword [rax + 0x10], edx	       190	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000316	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       191	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000319	        0x488b45f8	                mov rax, qword [rbp - 8]	       191	inflate.c	FOR_1	IF_7	FUNCTION_4
0x400031d	          0x895038	             mov dword [rax + 0x38], edx	       191	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000320	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       192	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_3
0x4000324	          0x4889c7	                            mov rdi, rax	       192	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_3
0x4000327	      0xe800000000	                          call 0x400032c	       192	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_3
0x400032c	              0xc9	                                   leave	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
0x400032d	              0xc3	                                     ret	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
inflateGetHeader	IF,2:WHILE,0:ELSE,0:functions,0:SWITCH,0:DO,0:CALL,1:FOR,0	30
0x4002e89	              0x55	                                push rbp	      1352	inflate.c	FUNCTION_10
0x4002e8a	          0x4889e5	                            mov rbp, rsp	      1352	inflate.c	FUNCTION_10
0x4002e8d	        0x4883ec20	                           sub rsp, 0x20	      1352	inflate.c	FUNCTION_10
0x4002e91	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1352	inflate.c	FUNCTION_10
0x4002e95	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1352	inflate.c	FUNCTION_10
0x4002e99	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1356	inflate.c	FUNCTION_10	CALL_1
0x4002e9d	          0x4889c7	                            mov rdi, rax	      1356	inflate.c	FUNCTION_10	CALL_1
0x4002ea0	      0xe89bd1ffff	              call sym.inflateStateCheck	      1356	inflate.c	FUNCTION_10	CALL_1
0x4002ea5	            0x85c0	                           test eax, eax	      1356	inflate.c	FUNCTION_10	CALL_1
0x4002ea7	            0x7407	                            je 0x4002eb0	      1356	inflate.c	FUNCTION_10	CALL_1
0x4002ea9	      0xb8feffffff	                     mov eax, 0xfffffffe	      1356	inflate.c	FUNCTION_10	CALL_1
0x4002eae	            0xeb3d	                           jmp 0x4002eed	      1356	inflate.c	FUNCTION_10	CALL_1
0x4002eb0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1357	inflate.c	FUNCTION_10
0x4002eb4	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1357	inflate.c	FUNCTION_10
0x4002eb8	        0x488945f8	                mov qword [rbp - 8], rax	      1357	inflate.c	FUNCTION_10
0x4002ebc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1358	inflate.c	FUNCTION_10	IF_2
0x4002ec0	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1358	inflate.c	FUNCTION_10	IF_2
0x4002ec3	          0x83e002	                              and eax, 2	      1358	inflate.c	FUNCTION_10	IF_2
0x4002ec6	            0x85c0	                           test eax, eax	      1358	inflate.c	FUNCTION_10	IF_2
0x4002ec8	            0x7507	                           jne 0x4002ed1	      1358	inflate.c	FUNCTION_10	IF_2
0x4002eca	      0xb8feffffff	                     mov eax, 0xfffffffe	      1358	inflate.c	FUNCTION_10	IF_2
0x4002ecf	            0xeb1c	                           jmp 0x4002eed	      1358	inflate.c	FUNCTION_10	IF_2
0x4002ed1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1361	inflate.c	FUNCTION_10
0x4002ed5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1361	inflate.c	FUNCTION_10
0x4002ed9	        0x48895030	             mov qword [rax + 0x30], rdx	      1361	inflate.c	FUNCTION_10
0x4002edd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1362	inflate.c	FUNCTION_10
0x4002ee1	    0xc74048000000	               mov dword [rax + 0x48], 0	      1362	inflate.c	FUNCTION_10
0x4002ee8	      0xb800000000	                              mov eax, 0	      1363	inflate.c	FUNCTION_10
0x4002eed	              0xc9	                                   leave	      1364	inflate.c	FUNCTION_10
0x4002eee	              0xc3	                                     ret	      1364	inflate.c	FUNCTION_10
inflateReset	IF,1:WHILE,0:ELSE,0:functions,0:SWITCH,0:DO,0:CALL,2:FOR,0	25
0x40001f1	              0x55	                                push rbp	       146	inflate.c	FOR_1	IF_7	FUNCTION_3
0x40001f2	          0x4889e5	                            mov rbp, rsp	       146	inflate.c	FOR_1	IF_7	FUNCTION_3
0x40001f5	        0x4883ec18	                           sub rsp, 0x18	       146	inflate.c	FOR_1	IF_7	FUNCTION_3
0x40001f9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       146	inflate.c	FOR_1	IF_7	FUNCTION_3
0x40001fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_1
0x4000201	          0x4889c7	                            mov rdi, rax	       149	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_1
0x4000204	      0xe837feffff	              call sym.inflateStateCheck	       149	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_1
0x4000209	            0x85c0	                           test eax, eax	       149	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_1
0x400020b	            0x7407	                            je 0x4000214	       149	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_1
0x400020d	      0xb8feffffff	                     mov eax, 0xfffffffe	       149	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_1
0x4000212	            0xeb39	                           jmp 0x400024d	       149	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_1
0x4000214	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       150	inflate.c	FOR_1	IF_7	FUNCTION_3
0x4000218	        0x488b4038	            mov rax, qword [rax + 0x38] 	       150	inflate.c	FOR_1	IF_7	FUNCTION_3
0x400021c	        0x488945f8	                mov qword [rbp - 8], rax	       150	inflate.c	FOR_1	IF_7	FUNCTION_3
0x4000220	        0x488b45f8	                mov rax, qword [rbp - 8]	       151	inflate.c	FOR_1	IF_7	FUNCTION_3
0x4000224	    0xc7403c000000	               mov dword [rax + 0x3c], 0	       151	inflate.c	FOR_1	IF_7	FUNCTION_3
0x400022b	        0x488b45f8	                mov rax, qword [rbp - 8]	       152	inflate.c	FOR_1	IF_7	FUNCTION_3
0x400022f	    0xc74040000000	               mov dword [rax + 0x40], 0	       152	inflate.c	FOR_1	IF_7	FUNCTION_3
0x4000236	        0x488b45f8	                mov rax, qword [rbp - 8]	       153	inflate.c	FOR_1	IF_7	FUNCTION_3
0x400023a	    0xc74044000000	               mov dword [rax + 0x44], 0	       153	inflate.c	FOR_1	IF_7	FUNCTION_3
0x4000241	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       154	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_2
0x4000245	          0x4889c7	                            mov rdi, rax	       154	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_2
0x4000248	      0xe800000000	                          call 0x400024d	       154	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_2
0x400024d	              0xc9	                                   leave	       155	inflate.c	FOR_1	IF_7	FUNCTION_3
0x400024e	              0xc3	                                     ret	       155	inflate.c	FOR_1	IF_7	FUNCTION_3
inflateMark	IF,1:WHILE,0:ELSE,0:functions,0:SWITCH,0:DO,0:CALL,1:FOR,0	43
0x40034d7	              0x55	                                push rbp	      1543	inflate.c	FUNCTION_16
0x40034d8	          0x4889e5	                            mov rbp, rsp	      1543	inflate.c	FUNCTION_16
0x40034db	        0x4883ec18	                           sub rsp, 0x18	      1543	inflate.c	FUNCTION_16
0x40034df	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1543	inflate.c	FUNCTION_16
0x40034e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1546	inflate.c	FUNCTION_16	IF_1	CALL_1
0x40034e7	          0x4889c7	                            mov rdi, rax	      1546	inflate.c	FUNCTION_16	IF_1	CALL_1
0x40034ea	      0xe851cbffff	              call sym.inflateStateCheck	      1546	inflate.c	FUNCTION_16	IF_1	CALL_1
0x40034ef	            0x85c0	                           test eax, eax	      1546	inflate.c	FUNCTION_16	IF_1	CALL_1
0x40034f1	            0x7409	                            je 0x40034fc	      1546	inflate.c	FUNCTION_16	IF_1	CALL_1
0x40034f3	    0x48c7c00000ff	             mov rax, 0xffffffffffff0000	      1547	inflate.c	FUNCTION_16	IF_1
0x40034fa	            0xeb67	                           jmp 0x4003563	      1547	inflate.c	FUNCTION_16	IF_1
0x40034fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1548	inflate.c	FUNCTION_16
0x4003500	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1548	inflate.c	FUNCTION_16
0x4003504	        0x488945f8	                mov qword [rbp - 8], rax	      1548	inflate.c	FUNCTION_16
0x4003508	        0x488b45f8	                mov rax, qword [rbp - 8]	      1549	inflate.c	FUNCTION_16
0x400350c	    0x8b80ec1b0000	          mov eax, dword [rax + 0x1bec] 	      1549	inflate.c	FUNCTION_16
0x4003512	            0x4898	                                    cdqe	      1549	inflate.c	FUNCTION_16
0x4003514	        0x48c1e010	                           shl rax, 0x10	      1549	inflate.c	FUNCTION_16
0x4003518	          0x4889c1	                            mov rcx, rax	      1549	inflate.c	FUNCTION_16
0x400351b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1550	inflate.c	FUNCTION_16
0x400351f	          0x8b4008	                mov eax, dword [rax + 8]	      1550	inflate.c	FUNCTION_16
0x4003522	      0x3d433f0000	                         cmp eax, 0x3f43	      1549	inflate.c	FUNCTION_16
0x4003527	            0x750b	                           jne 0x4003534	      1549	inflate.c	FUNCTION_16
0x4003529	        0x488b45f8	                mov rax, qword [rbp - 8]	      1550	inflate.c	FUNCTION_16
0x400352d	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1550	inflate.c	FUNCTION_16
0x4003530	            0x89c0	                            mov eax, eax	      1549	inflate.c	FUNCTION_16
0x4003532	            0xeb2c	                           jmp 0x4003560	      1549	inflate.c	FUNCTION_16
0x4003534	        0x488b45f8	                mov rax, qword [rbp - 8]	      1551	inflate.c	FUNCTION_16
0x4003538	          0x8b4008	                mov eax, dword [rax + 8]	      1551	inflate.c	FUNCTION_16
0x400353b	      0x3d4c3f0000	                         cmp eax, 0x3f4c	      1549	inflate.c	FUNCTION_16
0x4003540	            0x7519	                           jne 0x400355b	      1549	inflate.c	FUNCTION_16
0x4003542	        0x488b45f8	                mov rax, qword [rbp - 8]	      1551	inflate.c	FUNCTION_16
0x4003546	    0x8b90f01b0000	          mov edx, dword [rax + 0x1bf0] 	      1551	inflate.c	FUNCTION_16
0x400354c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1551	inflate.c	FUNCTION_16
0x4003550	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1551	inflate.c	FUNCTION_16
0x4003553	            0x29c2	                            sub edx, eax	      1551	inflate.c	FUNCTION_16
0x4003555	            0x89d0	                            mov eax, edx	      1551	inflate.c	FUNCTION_16
0x4003557	            0x89c0	                            mov eax, eax	      1549	inflate.c	FUNCTION_16
0x4003559	            0xeb05	                           jmp 0x4003560	      1549	inflate.c	FUNCTION_16
0x400355b	      0xb800000000	                              mov eax, 0	      1549	inflate.c	FUNCTION_16
0x4003560	          0x4801c8	                            add rax, rcx	      1549	inflate.c	FUNCTION_16
0x4003563	              0xc9	                                   leave	      1552	inflate.c	FUNCTION_16
0x4003564	              0xc3	                                     ret	      1552	inflate.c	FUNCTION_16
inflateValidate	IF,2:WHILE,0:ELSE,1:functions,0:SWITCH,0:DO,0:CALL,1:FOR,0	33
0x4003470	              0x55	                                push rbp	      1529	inflate.c	FUNCTION_15
0x4003471	          0x4889e5	                            mov rbp, rsp	      1529	inflate.c	FUNCTION_15
0x4003474	        0x4883ec20	                           sub rsp, 0x20	      1529	inflate.c	FUNCTION_15
0x4003478	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1529	inflate.c	FUNCTION_15
0x400347c	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1529	inflate.c	FUNCTION_15
0x400347f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1532	inflate.c	FUNCTION_15	CALL_1
0x4003483	          0x4889c7	                            mov rdi, rax	      1532	inflate.c	FUNCTION_15	CALL_1
0x4003486	      0xe8b5cbffff	              call sym.inflateStateCheck	      1532	inflate.c	FUNCTION_15	CALL_1
0x400348b	            0x85c0	                           test eax, eax	      1532	inflate.c	FUNCTION_15	CALL_1
0x400348d	            0x7407	                            je 0x4003496	      1532	inflate.c	FUNCTION_15	CALL_1
0x400348f	      0xb8feffffff	                     mov eax, 0xfffffffe	      1532	inflate.c	FUNCTION_15	CALL_1
0x4003494	            0xeb3f	                           jmp 0x40034d5	      1532	inflate.c	FUNCTION_15	CALL_1
0x4003496	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1533	inflate.c	FUNCTION_15
0x400349a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1533	inflate.c	FUNCTION_15
0x400349e	        0x488945f8	                mov qword [rbp - 8], rax	      1533	inflate.c	FUNCTION_15
0x40034a2	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1534	inflate.c	FUNCTION_15	IF_2
0x40034a6	            0x7415	                            je 0x40034bd	      1534	inflate.c	FUNCTION_15	IF_2
0x40034a8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1535	inflate.c	FUNCTION_15	IF_2
0x40034ac	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1535	inflate.c	FUNCTION_15	IF_2
0x40034af	          0x83c804	                               or eax, 4	      1535	inflate.c	FUNCTION_15	IF_2
0x40034b2	            0x89c2	                            mov edx, eax	      1535	inflate.c	FUNCTION_15	IF_2
0x40034b4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1535	inflate.c	FUNCTION_15	IF_2
0x40034b8	          0x895010	             mov dword [rax + 0x10], edx	      1535	inflate.c	FUNCTION_15	IF_2
0x40034bb	            0xeb13	                           jmp 0x40034d0	      1535	inflate.c	FUNCTION_15	IF_2
0x40034bd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1537	inflate.c	FUNCTION_15	ELSE_1
0x40034c1	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1537	inflate.c	FUNCTION_15	ELSE_1
0x40034c4	          0x83e0fb	                     and eax, 0xfffffffb	      1537	inflate.c	FUNCTION_15	ELSE_1
0x40034c7	            0x89c2	                            mov edx, eax	      1537	inflate.c	FUNCTION_15	ELSE_1
0x40034c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1537	inflate.c	FUNCTION_15	ELSE_1
0x40034cd	          0x895010	             mov dword [rax + 0x10], edx	      1537	inflate.c	FUNCTION_15	ELSE_1
0x40034d0	      0xb800000000	                              mov eax, 0	      1538	inflate.c	FUNCTION_15
0x40034d5	              0xc9	                                   leave	      1539	inflate.c	FUNCTION_15
0x40034d6	              0xc3	                                     ret	      1539	inflate.c	FUNCTION_15
inflateGetDictionary	IF,3:WHILE,0:ELSE,0:functions,0:SWITCH,0:DO,0:CALL,3:FOR,0	67
0x4002cb1	              0x55	                                push rbp	      1295	inflate.c	FUNCTION_9
0x4002cb2	          0x4889e5	                            mov rbp, rsp	      1295	inflate.c	FUNCTION_9
0x4002cb5	        0x4883ec30	                           sub rsp, 0x30	      1295	inflate.c	FUNCTION_9
0x4002cb9	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1295	inflate.c	FUNCTION_9
0x4002cbd	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1295	inflate.c	FUNCTION_9
0x4002cc1	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1295	inflate.c	FUNCTION_9
0x4002cc5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1299	inflate.c	FUNCTION_9	CALL_1
0x4002cc9	          0x4889c7	                            mov rdi, rax	      1299	inflate.c	FUNCTION_9	CALL_1
0x4002ccc	      0xe86fd3ffff	              call sym.inflateStateCheck	      1299	inflate.c	FUNCTION_9	CALL_1
0x4002cd1	            0x85c0	                           test eax, eax	      1299	inflate.c	FUNCTION_9	CALL_1
0x4002cd3	            0x740a	                            je 0x4002cdf	      1299	inflate.c	FUNCTION_9	CALL_1
0x4002cd5	      0xb8feffffff	                     mov eax, 0xfffffffe	      1299	inflate.c	FUNCTION_9	CALL_1
0x4002cda	      0xe9ad000000	                           jmp 0x4002d8c	      1299	inflate.c	FUNCTION_9	CALL_1
0x4002cdf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1300	inflate.c	FUNCTION_9
0x4002ce3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1300	inflate.c	FUNCTION_9
0x4002ce7	        0x488945f8	                mov qword [rbp - 8], rax	      1300	inflate.c	FUNCTION_9
0x4002ceb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1303	inflate.c	FUNCTION_9	IF_2
0x4002cef	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1303	inflate.c	FUNCTION_9	IF_2
0x4002cf2	            0x85c0	                           test eax, eax	      1303	inflate.c	FUNCTION_9	IF_2
0x4002cf4	            0x747d	                            je 0x4002d73	      1303	inflate.c	FUNCTION_9	IF_2
0x4002cf6	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1303	inflate.c	FUNCTION_9	IF_2
0x4002cfb	            0x7476	                            je 0x4002d73	      1303	inflate.c	FUNCTION_9	IF_2
0x4002cfd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1305	inflate.c	FUNCTION_9	IF_2
0x4002d01	          0x8b5040	            mov edx, dword [rax + 0x40] 	      1305	inflate.c	FUNCTION_9	IF_2
0x4002d04	        0x488b45f8	                mov rax, qword [rbp - 8]	      1305	inflate.c	FUNCTION_9	IF_2
0x4002d08	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1305	inflate.c	FUNCTION_9	IF_2
0x4002d0b	            0x29c2	                            sub edx, eax	      1305	inflate.c	FUNCTION_9	IF_2
0x4002d0d	            0x89d0	                            mov eax, edx	      1305	inflate.c	FUNCTION_9	IF_2
0x4002d0f	            0x89c6	                            mov esi, eax	      1304	inflate.c	FUNCTION_9	IF_2	CALL_2
0x4002d11	        0x488b45f8	                mov rax, qword [rbp - 8]	      1304	inflate.c	FUNCTION_9	IF_2	CALL_2
0x4002d15	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      1304	inflate.c	FUNCTION_9	IF_2	CALL_2
0x4002d19	        0x488b45f8	                mov rax, qword [rbp - 8]	      1304	inflate.c	FUNCTION_9	IF_2	CALL_2
0x4002d1d	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1304	inflate.c	FUNCTION_9	IF_2	CALL_2
0x4002d20	            0x89c0	                            mov eax, eax	      1304	inflate.c	FUNCTION_9	IF_2	CALL_2
0x4002d22	        0x488d0c02	                    lea rcx, [rdx + rax]	      1304	inflate.c	FUNCTION_9	IF_2	CALL_2
0x4002d26	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1304	inflate.c	FUNCTION_9	IF_2	CALL_2
0x4002d2a	          0x4889f2	                            mov rdx, rsi	      1304	inflate.c	FUNCTION_9	IF_2	CALL_2
0x4002d2d	          0x4889ce	                            mov rsi, rcx	      1304	inflate.c	FUNCTION_9	IF_2	CALL_2
0x4002d30	          0x4889c7	                            mov rdi, rax	      1304	inflate.c	FUNCTION_9	IF_2	CALL_2
0x4002d33	      0xe800000000	                          call 0x4002d38	      1304	inflate.c	FUNCTION_9	IF_2	CALL_2
0x4002d38	        0x488b45f8	                mov rax, qword [rbp - 8]	      1307	inflate.c	FUNCTION_9	IF_2
0x4002d3c	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1307	inflate.c	FUNCTION_9	IF_2
0x4002d3f	            0x89c6	                            mov esi, eax	      1306	inflate.c	FUNCTION_9	IF_2	CALL_3
0x4002d41	        0x488b45f8	                mov rax, qword [rbp - 8]	      1307	inflate.c	FUNCTION_9	IF_2
0x4002d45	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1307	inflate.c	FUNCTION_9	IF_2
0x4002d49	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1306	inflate.c	FUNCTION_9	IF_2	CALL_3
0x4002d4d	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      1306	inflate.c	FUNCTION_9	IF_2	CALL_3
0x4002d50	            0x89d1	                            mov ecx, edx	      1306	inflate.c	FUNCTION_9	IF_2	CALL_3
0x4002d52	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1306	inflate.c	FUNCTION_9	IF_2	CALL_3
0x4002d56	          0x8b5244	            mov edx, dword [rdx + 0x44] 	      1306	inflate.c	FUNCTION_9	IF_2	CALL_3
0x4002d59	            0x89d2	                            mov edx, edx	      1306	inflate.c	FUNCTION_9	IF_2	CALL_3
0x4002d5b	          0x4829d1	                            sub rcx, rdx	      1306	inflate.c	FUNCTION_9	IF_2	CALL_3
0x4002d5e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1306	inflate.c	FUNCTION_9	IF_2	CALL_3
0x4002d62	          0x4801d1	                            add rcx, rdx	      1306	inflate.c	FUNCTION_9	IF_2	CALL_3
0x4002d65	          0x4889f2	                            mov rdx, rsi	      1306	inflate.c	FUNCTION_9	IF_2	CALL_3
0x4002d68	          0x4889c6	                            mov rsi, rax	      1306	inflate.c	FUNCTION_9	IF_2	CALL_3
0x4002d6b	          0x4889cf	                            mov rdi, rcx	      1306	inflate.c	FUNCTION_9	IF_2	CALL_3
0x4002d6e	      0xe800000000	                          call 0x4002d73	      1306	inflate.c	FUNCTION_9	IF_2	CALL_3
0x4002d73	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1309	inflate.c	FUNCTION_9	IF_3
0x4002d78	            0x740d	                            je 0x4002d87	      1309	inflate.c	FUNCTION_9	IF_3
0x4002d7a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1310	inflate.c	FUNCTION_9	IF_3
0x4002d7e	          0x8b5040	            mov edx, dword [rax + 0x40] 	      1310	inflate.c	FUNCTION_9	IF_3
0x4002d81	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1310	inflate.c	FUNCTION_9	IF_3
0x4002d85	            0x8910	                    mov dword [rax], edx	      1310	inflate.c	FUNCTION_9	IF_3
0x4002d87	      0xb800000000	                              mov eax, 0	      1311	inflate.c	FUNCTION_9
0x4002d8c	              0xc9	                                   leave	      1312	inflate.c	FUNCTION_9
0x4002d8d	              0xc3	                                     ret	      1312	inflate.c	FUNCTION_9
inflateEnd	IF,2:WHILE,0:ELSE,0:functions,0:SWITCH,0:DO,0:CALL,4:FOR,0	41
0x4002c22	              0x55	                                push rbp	      1279	inflate.c	FUNCTION_8
0x4002c23	          0x4889e5	                            mov rbp, rsp	      1279	inflate.c	FUNCTION_8
0x4002c26	        0x4883ec20	                           sub rsp, 0x20	      1279	inflate.c	FUNCTION_8
0x4002c2a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1279	inflate.c	FUNCTION_8
0x4002c2e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1281	inflate.c	FUNCTION_8	IF_1	CALL_1
0x4002c32	          0x4889c7	                            mov rdi, rax	      1281	inflate.c	FUNCTION_8	IF_1	CALL_1
0x4002c35	      0xe806d4ffff	              call sym.inflateStateCheck	      1281	inflate.c	FUNCTION_8	IF_1	CALL_1
0x4002c3a	            0x85c0	                           test eax, eax	      1281	inflate.c	FUNCTION_8	IF_1	CALL_1
0x4002c3c	            0x7407	                            je 0x4002c45	      1281	inflate.c	FUNCTION_8	IF_1	CALL_1
0x4002c3e	      0xb8feffffff	                     mov eax, 0xfffffffe	      1282	inflate.c	FUNCTION_8	IF_1
0x4002c43	            0xeb6a	                           jmp 0x4002caf	      1282	inflate.c	FUNCTION_8	IF_1
0x4002c45	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1283	inflate.c	FUNCTION_8
0x4002c49	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1283	inflate.c	FUNCTION_8
0x4002c4d	        0x488945f8	                mov qword [rbp - 8], rax	      1283	inflate.c	FUNCTION_8
0x4002c51	        0x488b45f8	                mov rax, qword [rbp - 8]	      1284	inflate.c	FUNCTION_8	CALL_2
0x4002c55	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1284	inflate.c	FUNCTION_8	CALL_2
0x4002c59	          0x4885c0	                           test rax, rax	      1284	inflate.c	FUNCTION_8	CALL_2
0x4002c5c	            0x7420	                            je 0x4002c7e	      1284	inflate.c	FUNCTION_8	CALL_2
0x4002c5e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1284	inflate.c	FUNCTION_8	CALL_2
0x4002c62	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1284	inflate.c	FUNCTION_8	CALL_2
0x4002c66	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1284	inflate.c	FUNCTION_8	CALL_2
0x4002c6a	        0x488b4a48	            mov rcx, qword [rdx + 0x48] 	      1284	inflate.c	FUNCTION_8	CALL_2
0x4002c6e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1284	inflate.c	FUNCTION_8	CALL_2
0x4002c72	        0x488b5250	            mov rdx, qword [rdx + 0x50] 	      1284	inflate.c	FUNCTION_8	CALL_2
0x4002c76	          0x4889ce	                            mov rsi, rcx	      1284	inflate.c	FUNCTION_8	CALL_2
0x4002c79	          0x4889d7	                            mov rdi, rdx	      1284	inflate.c	FUNCTION_8	CALL_2
0x4002c7c	            0xffd0	                                call rax	      1284	inflate.c	FUNCTION_8	CALL_2
0x4002c7e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1285	inflate.c	FUNCTION_8	CALL_3
0x4002c82	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1285	inflate.c	FUNCTION_8	CALL_3
0x4002c86	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1285	inflate.c	FUNCTION_8	CALL_3
0x4002c8a	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      1285	inflate.c	FUNCTION_8	CALL_3
0x4002c8e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1285	inflate.c	FUNCTION_8	CALL_3
0x4002c92	        0x488b5250	            mov rdx, qword [rdx + 0x50] 	      1285	inflate.c	FUNCTION_8	CALL_3
0x4002c96	          0x4889ce	                            mov rsi, rcx	      1285	inflate.c	FUNCTION_8	CALL_3
0x4002c99	          0x4889d7	                            mov rdi, rdx	      1285	inflate.c	FUNCTION_8	CALL_3
0x4002c9c	            0xffd0	                                call rax	      1285	inflate.c	FUNCTION_8	CALL_3
0x4002c9e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1286	inflate.c	FUNCTION_8
0x4002ca2	    0x48c740380000	               mov qword [rax + 0x38], 0	      1286	inflate.c	FUNCTION_8
0x4002caa	      0xb800000000	                              mov eax, 0	      1288	inflate.c	FUNCTION_8
0x4002caf	              0xc9	                                   leave	      1289	inflate.c	FUNCTION_8
0x4002cb0	              0xc3	                                     ret	      1289	inflate.c	FUNCTION_8
inflateStateCheck	IF,2:WHILE,0:ELSE,0:functions,0:SWITCH,0:DO,0:CALL,0:FOR,0	37
0x4000040	              0x55	                                push rbp	       107	inflate.c	FOR_1	IF_7	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       107	inflate.c	FOR_1	IF_7	FUNCTION_1
0x4000044	        0x48897de8	             mov qword [rbp - 0x18], rdi	       107	inflate.c	FOR_1	IF_7	FUNCTION_1
0x4000048	      0x48837de800	               cmp qword [rbp - 0x18], 0	       109	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x400004d	            0x741a	                            je 0x4000069	       109	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x400004f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       110	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000053	        0x488b4040	            mov rax, qword [rax + 0x40] 	       110	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000057	          0x4885c0	                           test rax, rax	       109	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x400005a	            0x740d	                            je 0x4000069	       109	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x400005c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       110	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000060	        0x488b4048	            mov rax, qword [rax + 0x48] 	       110	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000064	          0x4885c0	                           test rax, rax	       110	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000067	            0x7507	                           jne 0x4000070	       110	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000069	      0xb801000000	                              mov eax, 1	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x400006e	            0xeb48	                           jmp 0x40000b8	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000070	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       112	inflate.c	FOR_1	IF_7	FUNCTION_1
0x4000074	        0x488b4038	            mov rax, qword [rax + 0x38] 	       112	inflate.c	FOR_1	IF_7	FUNCTION_1
0x4000078	        0x488945f8	                mov qword [rbp - 8], rax	       112	inflate.c	FOR_1	IF_7	FUNCTION_1
0x400007c	      0x48837df800	                  cmp qword [rbp - 8], 0	       113	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x4000081	            0x7429	                            je 0x40000ac	       113	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x4000083	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x4000087	          0x488b00	                    mov rax, qword [rax]	       113	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x400008a	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       113	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x400008e	            0x751c	                           jne 0x40000ac	       113	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x4000090	        0x488b45f8	                mov rax, qword [rbp - 8]	       114	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x4000094	          0x8b4008	                mov eax, dword [rax + 8]	       114	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x4000097	      0x3d333f0000	                         cmp eax, 0x3f33	       113	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x400009c	            0x760e	                           jbe 0x40000ac	       113	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x400009e	        0x488b45f8	                mov rax, qword [rbp - 8]	       114	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x40000a2	          0x8b4008	                mov eax, dword [rax + 8]	       114	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x40000a5	      0x3d533f0000	                         cmp eax, 0x3f53	       114	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x40000aa	            0x7607	                           jbe 0x40000b3	       114	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x40000ac	      0xb801000000	                              mov eax, 1	       115	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x40000b1	            0xeb05	                           jmp 0x40000b8	       115	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x40000b3	      0xb800000000	                              mov eax, 0	       116	inflate.c	FOR_1	IF_7	FUNCTION_1
0x40000b8	              0x5d	                                 pop rbp	       117	inflate.c	FOR_1	IF_7	FUNCTION_1
0x40000b9	              0xc3	                                     ret	       117	inflate.c	FOR_1	IF_7	FUNCTION_1
inflateCopy	IF,6:WHILE,0:ELSE,0:functions,0:SWITCH,0:DO,0:CALL,7:FOR,0	149
0x40031e4	              0x55	                                push rbp	      1464	inflate.c	FUNCTION_13
0x40031e5	          0x4889e5	                            mov rbp, rsp	      1464	inflate.c	FUNCTION_13
0x40031e8	        0x4883ec30	                           sub rsp, 0x30	      1464	inflate.c	FUNCTION_13
0x40031ec	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1464	inflate.c	FUNCTION_13
0x40031f0	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1464	inflate.c	FUNCTION_13
0x40031f4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x40031f8	          0x4889c7	                            mov rdi, rax	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x40031fb	      0xe840ceffff	              call sym.inflateStateCheck	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x4003200	            0x85c0	                           test eax, eax	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x4003202	            0x7507	                           jne 0x400320b	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x4003204	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x4003209	            0x750a	                           jne 0x4003215	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x400320b	      0xb8feffffff	                     mov eax, 0xfffffffe	      1472	inflate.c	FUNCTION_13	IF_1
0x4003210	      0xe912020000	                           jmp 0x4003427	      1472	inflate.c	FUNCTION_13	IF_1
0x4003215	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1473	inflate.c	FUNCTION_13
0x4003219	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1473	inflate.c	FUNCTION_13
0x400321d	        0x488945f0	             mov qword [rbp - 0x10], rax	      1473	inflate.c	FUNCTION_13
0x4003221	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1477	inflate.c	FUNCTION_13	CALL_2
0x4003225	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1477	inflate.c	FUNCTION_13	CALL_2
0x4003229	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1477	inflate.c	FUNCTION_13	CALL_2
0x400322d	        0x488b4a50	            mov rcx, qword [rdx + 0x50] 	      1477	inflate.c	FUNCTION_13	CALL_2
0x4003231	      0xbaf81b0000	                         mov edx, 0x1bf8	      1476	inflate.c	FUNCTION_13
0x4003236	      0xbe01000000	                              mov esi, 1	      1476	inflate.c	FUNCTION_13
0x400323b	          0x4889cf	                            mov rdi, rcx	      1476	inflate.c	FUNCTION_13
0x400323e	            0xffd0	                                call rax	      1476	inflate.c	FUNCTION_13
0x4003240	        0x488945f8	                mov qword [rbp - 8], rax	      1476	inflate.c	FUNCTION_13
0x4003244	      0x48837df800	                  cmp qword [rbp - 8], 0	      1478	inflate.c	FUNCTION_13	IF_2
0x4003249	            0x750a	                           jne 0x4003255	      1478	inflate.c	FUNCTION_13	IF_2
0x400324b	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1478	inflate.c	FUNCTION_13	IF_2
0x4003250	      0xe9d2010000	                           jmp 0x4003427	      1478	inflate.c	FUNCTION_13	IF_2
0x4003255	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1479	inflate.c	FUNCTION_13
0x400325d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1480	inflate.c	FUNCTION_13	IF_3
0x4003261	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1480	inflate.c	FUNCTION_13	IF_3
0x4003265	          0x4885c0	                           test rax, rax	      1480	inflate.c	FUNCTION_13	IF_3
0x4003268	            0x745b	                            je 0x40032c5	      1480	inflate.c	FUNCTION_13	IF_3
0x400326a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1482	inflate.c	FUNCTION_13	IF_3	CALL_3
0x400326e	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1482	inflate.c	FUNCTION_13	IF_3	CALL_3
0x4003272	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1482	inflate.c	FUNCTION_13	IF_3	CALL_3
0x4003276	          0x8b5238	            mov edx, dword [rdx + 0x38] 	      1482	inflate.c	FUNCTION_13	IF_3	CALL_3
0x4003279	      0xbe01000000	                              mov esi, 1	      1482	inflate.c	FUNCTION_13	IF_3	CALL_3
0x400327e	            0x89d1	                            mov ecx, edx	      1482	inflate.c	FUNCTION_13	IF_3	CALL_3
0x4003280	            0xd3e6	                             shl esi, cl	      1482	inflate.c	FUNCTION_13	IF_3	CALL_3
0x4003282	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1482	inflate.c	FUNCTION_13	IF_3	CALL_3
0x4003286	        0x488b4a50	            mov rcx, qword [rdx + 0x50] 	      1482	inflate.c	FUNCTION_13	IF_3	CALL_3
0x400328a	      0xba01000000	                              mov edx, 1	      1481	inflate.c	FUNCTION_13	IF_3
0x400328f	          0x4889cf	                            mov rdi, rcx	      1481	inflate.c	FUNCTION_13	IF_3
0x4003292	            0xffd0	                                call rax	      1481	inflate.c	FUNCTION_13	IF_3
0x4003294	        0x488945e8	             mov qword [rbp - 0x18], rax	      1481	inflate.c	FUNCTION_13	IF_3
0x4003298	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1483	inflate.c	FUNCTION_13	IF_3	IF_4
0x400329d	            0x7526	                           jne 0x40032c5	      1483	inflate.c	FUNCTION_13	IF_3	IF_4
0x400329f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1484	inflate.c	FUNCTION_13	IF_3	IF_4	CALL_4
0x40032a3	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1484	inflate.c	FUNCTION_13	IF_3	IF_4	CALL_4
0x40032a7	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1484	inflate.c	FUNCTION_13	IF_3	IF_4	CALL_4
0x40032ab	        0x488b5250	            mov rdx, qword [rdx + 0x50] 	      1484	inflate.c	FUNCTION_13	IF_3	IF_4	CALL_4
0x40032af	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1484	inflate.c	FUNCTION_13	IF_3	IF_4	CALL_4
0x40032b3	          0x4889ce	                            mov rsi, rcx	      1484	inflate.c	FUNCTION_13	IF_3	IF_4	CALL_4
0x40032b6	          0x4889d7	                            mov rdi, rdx	      1484	inflate.c	FUNCTION_13	IF_3	IF_4	CALL_4
0x40032b9	            0xffd0	                                call rax	      1484	inflate.c	FUNCTION_13	IF_3	IF_4	CALL_4
0x40032bb	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1485	inflate.c	FUNCTION_13	IF_3	IF_4
0x40032c0	      0xe962010000	                           jmp 0x4003427	      1485	inflate.c	FUNCTION_13	IF_3	IF_4
0x40032c5	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1490	inflate.c	FUNCTION_13	CALL_5
0x40032c9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1490	inflate.c	FUNCTION_13	CALL_5
0x40032cd	      0xba70000000	                           mov edx, 0x70	      1490	inflate.c	FUNCTION_13	CALL_5
0x40032d2	          0x4889ce	                            mov rsi, rcx	      1490	inflate.c	FUNCTION_13	CALL_5
0x40032d5	          0x4889c7	                            mov rdi, rax	      1490	inflate.c	FUNCTION_13	CALL_5
0x40032d8	      0xe800000000	                          call 0x40032dd	      1490	inflate.c	FUNCTION_13	CALL_5
0x40032dd	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1491	inflate.c	FUNCTION_13	CALL_6
0x40032e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1491	inflate.c	FUNCTION_13	CALL_6
0x40032e5	      0xbaf81b0000	                         mov edx, 0x1bf8	      1491	inflate.c	FUNCTION_13	CALL_6
0x40032ea	          0x4889ce	                            mov rsi, rcx	      1491	inflate.c	FUNCTION_13	CALL_6
0x40032ed	          0x4889c7	                            mov rdi, rax	      1491	inflate.c	FUNCTION_13	CALL_6
0x40032f0	      0xe800000000	                          call 0x40032f5	      1491	inflate.c	FUNCTION_13	CALL_6
0x40032f5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1492	inflate.c	FUNCTION_13
0x40032f9	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1492	inflate.c	FUNCTION_13
0x40032fd	          0x488910	                    mov qword [rax], rdx	      1492	inflate.c	FUNCTION_13
0x4003300	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1493	inflate.c	FUNCTION_13	IF_5
0x4003304	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1493	inflate.c	FUNCTION_13	IF_5
0x4003308	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1493	inflate.c	FUNCTION_13	IF_5
0x400330c	    0x4881c2580500	                          add rdx, 0x558	      1493	inflate.c	FUNCTION_13	IF_5
0x4003313	          0x4839d0	                            cmp rax, rdx	      1493	inflate.c	FUNCTION_13	IF_5
0x4003316	     0xf8281000000	                            jb 0x400339d	      1493	inflate.c	FUNCTION_13	IF_5
0x400331c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1494	inflate.c	FUNCTION_13	IF_5
0x4003320	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1494	inflate.c	FUNCTION_13	IF_5
0x4003324	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1494	inflate.c	FUNCTION_13	IF_5
0x4003328	    0x4881c2580500	                          add rdx, 0x558	      1494	inflate.c	FUNCTION_13	IF_5
0x400332f	    0x4881c28c1600	                         add rdx, 0x168c	      1494	inflate.c	FUNCTION_13	IF_5
0x4003336	          0x4839d0	                            cmp rax, rdx	      1493	inflate.c	FUNCTION_13	IF_5
0x4003339	            0x7762	                            ja 0x400339d	      1493	inflate.c	FUNCTION_13	IF_5
0x400333b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1495	inflate.c	FUNCTION_13	IF_5
0x400333f	    0x488d90580500	                  lea rdx, [rax + 0x558]	      1495	inflate.c	FUNCTION_13	IF_5
0x4003346	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1495	inflate.c	FUNCTION_13	IF_5
0x400334a	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1495	inflate.c	FUNCTION_13	IF_5
0x400334e	          0x4889c1	                            mov rcx, rax	      1495	inflate.c	FUNCTION_13	IF_5
0x4003351	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1495	inflate.c	FUNCTION_13	IF_5
0x4003355	    0x480558050000	                          add rax, 0x558	      1495	inflate.c	FUNCTION_13	IF_5
0x400335b	          0x4829c1	                            sub rcx, rax	      1495	inflate.c	FUNCTION_13	IF_5
0x400335e	          0x4889c8	                            mov rax, rcx	      1495	inflate.c	FUNCTION_13	IF_5
0x4003361	          0x4801c2	                            add rdx, rax	      1495	inflate.c	FUNCTION_13	IF_5
0x4003364	        0x488b45f8	                mov rax, qword [rbp - 8]	      1495	inflate.c	FUNCTION_13	IF_5
0x4003368	        0x48895068	             mov qword [rax + 0x68], rdx	      1495	inflate.c	FUNCTION_13	IF_5
0x400336c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1496	inflate.c	FUNCTION_13	IF_5
0x4003370	    0x488d90580500	                  lea rdx, [rax + 0x558]	      1496	inflate.c	FUNCTION_13	IF_5
0x4003377	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1496	inflate.c	FUNCTION_13	IF_5
0x400337b	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1496	inflate.c	FUNCTION_13	IF_5
0x400337f	          0x4889c1	                            mov rcx, rax	      1496	inflate.c	FUNCTION_13	IF_5
0x4003382	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1496	inflate.c	FUNCTION_13	IF_5
0x4003386	    0x480558050000	                          add rax, 0x558	      1496	inflate.c	FUNCTION_13	IF_5
0x400338c	          0x4829c1	                            sub rcx, rax	      1496	inflate.c	FUNCTION_13	IF_5
0x400338f	          0x4889c8	                            mov rax, rcx	      1496	inflate.c	FUNCTION_13	IF_5
0x4003392	          0x4801c2	                            add rdx, rax	      1496	inflate.c	FUNCTION_13	IF_5
0x4003395	        0x488b45f8	                mov rax, qword [rbp - 8]	      1496	inflate.c	FUNCTION_13	IF_5
0x4003399	        0x48895070	             mov qword [rax + 0x70], rdx	      1496	inflate.c	FUNCTION_13	IF_5
0x400339d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1498	inflate.c	FUNCTION_13
0x40033a1	    0x488d90580500	                  lea rdx, [rax + 0x558]	      1498	inflate.c	FUNCTION_13
0x40033a8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1498	inflate.c	FUNCTION_13
0x40033ac	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      1498	inflate.c	FUNCTION_13
0x40033b3	          0x4889c1	                            mov rcx, rax	      1498	inflate.c	FUNCTION_13
0x40033b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1498	inflate.c	FUNCTION_13
0x40033ba	    0x480558050000	                          add rax, 0x558	      1498	inflate.c	FUNCTION_13
0x40033c0	          0x4829c1	                            sub rcx, rax	      1498	inflate.c	FUNCTION_13
0x40033c3	          0x4889c8	                            mov rax, rcx	      1498	inflate.c	FUNCTION_13
0x40033c6	          0x4801c2	                            add rdx, rax	      1498	inflate.c	FUNCTION_13
0x40033c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1498	inflate.c	FUNCTION_13
0x40033cd	    0x488990900000	             mov qword [rax + 0x90], rdx	      1498	inflate.c	FUNCTION_13
0x40033d4	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1499	inflate.c	FUNCTION_13	IF_6
0x40033d9	            0x742f	                            je 0x400340a	      1499	inflate.c	FUNCTION_13	IF_6
0x40033db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1500	inflate.c	FUNCTION_13	IF_6
0x40033df	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1500	inflate.c	FUNCTION_13	IF_6
0x40033e2	      0xba01000000	                              mov edx, 1	      1500	inflate.c	FUNCTION_13	IF_6
0x40033e7	            0x89c1	                            mov ecx, eax	      1500	inflate.c	FUNCTION_13	IF_6
0x40033e9	            0xd3e2	                             shl edx, cl	      1500	inflate.c	FUNCTION_13	IF_6
0x40033eb	            0x89d0	                            mov eax, edx	      1500	inflate.c	FUNCTION_13	IF_6
0x40033ed	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1500	inflate.c	FUNCTION_13	IF_6
0x40033f0	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1501	inflate.c	FUNCTION_13	IF_6	CALL_7
0x40033f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1501	inflate.c	FUNCTION_13	IF_6	CALL_7
0x40033f7	        0x488b4848	            mov rcx, qword [rax + 0x48] 	      1501	inflate.c	FUNCTION_13	IF_6	CALL_7
0x40033fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1501	inflate.c	FUNCTION_13	IF_6	CALL_7
0x40033ff	          0x4889ce	                            mov rsi, rcx	      1501	inflate.c	FUNCTION_13	IF_6	CALL_7
0x4003402	          0x4889c7	                            mov rdi, rax	      1501	inflate.c	FUNCTION_13	IF_6	CALL_7
0x4003405	      0xe800000000	                          call 0x400340a	      1501	inflate.c	FUNCTION_13	IF_6	CALL_7
0x400340a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1503	inflate.c	FUNCTION_13
0x400340e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1503	inflate.c	FUNCTION_13
0x4003412	        0x48895048	             mov qword [rax + 0x48], rdx	      1503	inflate.c	FUNCTION_13
0x4003416	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1504	inflate.c	FUNCTION_13
0x400341a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1504	inflate.c	FUNCTION_13
0x400341e	        0x48895038	             mov qword [rax + 0x38], rdx	      1504	inflate.c	FUNCTION_13
0x4003422	      0xb800000000	                              mov eax, 0	      1505	inflate.c	FUNCTION_13
0x4003427	              0xc9	                                   leave	      1506	inflate.c	FUNCTION_13
0x4003428	              0xc3	                                     ret	      1506	inflate.c	FUNCTION_13
inflate	IF,103:WHILE,4:ELSE,8:functions,0:SWITCH,2:DO,4:CALL,34:FOR,6	2529
0x40007af	              0x55	                                push rbp	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40007b0	          0x4889e5	                            mov rbp, rsp	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40007b3	        0x4883c480	             add rsp, 0xffffffffffffff80	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40007b7	        0x48897d88	             mov qword [rbp - 0x78], rdi	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40007bb	          0x897584	             mov dword [rbp - 0x7c], esi	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40007be	    0x64488b042528	                mov rax, qword fs:[0x28]	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40007c7	        0x488945f8	                mov qword [rbp - 8], rax	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40007cb	            0x31c0	                            xor eax, eax	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40007cd	        0x488b4588	             mov rax, qword [rbp - 0x78]	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x40007d1	          0x4889c7	                            mov rdi, rax	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x40007d4	      0xe867f8ffff	              call sym.inflateStateCheck	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x40007d9	            0x85c0	                           test eax, eax	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x40007db	            0x7524	                           jne 0x4000801	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x40007dd	        0x488b4588	             mov rax, qword [rbp - 0x78]	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x40007e1	        0x488b4018	            mov rax, qword [rax + 0x18] 	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x40007e5	          0x4885c0	                           test rax, rax	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x40007e8	            0x7417	                            je 0x4000801	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x40007ea	        0x488b4588	             mov rax, qword [rbp - 0x78]	       646	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x40007ee	          0x488b00	                    mov rax, qword [rax]	       646	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x40007f1	          0x4885c0	                           test rax, rax	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x40007f4	            0x7515	                           jne 0x400080b	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x40007f6	        0x488b4588	             mov rax, qword [rbp - 0x78]	       646	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x40007fa	          0x8b4008	                mov eax, dword [rax + 8]	       646	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x40007fd	            0x85c0	                           test eax, eax	       646	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x40007ff	            0x740a	                            je 0x400080b	       646	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x4000801	      0xb8feffffff	                     mov eax, 0xfffffffe	       647	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x4000806	      0xe901240000	                           jmp 0x4002c0c	       647	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x400080b	        0x488b4588	             mov rax, qword [rbp - 0x78]	       649	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400080f	        0x488b4038	            mov rax, qword [rax + 0x38] 	       649	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000813	        0x488945e8	             mov qword [rbp - 0x18], rax	       649	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000817	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       650	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_2
0x400081b	          0x8b4008	                mov eax, dword [rax + 8]	       650	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_2
0x400081e	      0x3d3f3f0000	                         cmp eax, 0x3f3f	       650	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_2
0x4000823	            0x750b	                           jne 0x4000830	       650	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_2
0x4000825	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       650	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_2
0x4000829	    0xc74008403f00	            mov dword [rax + 8], 0x3f40 	       650	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_2
0x4000830	        0x488b4588	             mov rax, qword [rbp - 0x78]	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000834	        0x488b4018	            mov rax, qword [rax + 0x18] 	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000838	        0x488945d0	             mov qword [rbp - 0x30], rax	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400083c	        0x488b4588	             mov rax, qword [rbp - 0x78]	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000840	          0x8b4020	            mov eax, dword [rax + 0x20] 	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000843	          0x8945ac	             mov dword [rbp - 0x54], eax	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000846	        0x488b4588	             mov rax, qword [rbp - 0x78]	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400084a	          0x488b00	                    mov rax, qword [rax]	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400084d	        0x488945c8	             mov qword [rbp - 0x38], rax	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000851	        0x488b4588	             mov rax, qword [rbp - 0x78]	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000855	          0x8b4008	                mov eax, dword [rax + 8]	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000858	          0x8945a8	             mov dword [rbp - 0x58], eax	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400085b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400085f	        0x488b4050	            mov rax, qword [rax + 0x50] 	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000863	        0x488945d8	             mov qword [rbp - 0x28], rax	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000867	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400086b	          0x8b4058	            mov eax, dword [rax + 0x58] 	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400086e	          0x8945b0	             mov dword [rbp - 0x50], eax	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000871	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       652	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000874	          0x8945c4	             mov dword [rbp - 0x3c], eax	       652	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000877	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       653	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400087a	          0x8945b4	             mov dword [rbp - 0x4c], eax	       653	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400087d	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       654	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000884	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000888	          0x8b4008	                mov eax, dword [rax + 8]	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400088b	      0x2d343f0000	                         sub eax, 0x3f34	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000890	          0x83f81e	                           cmp eax, 0x1e	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000893	     0xf87cc200000	                            ja 0x4002965	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000899	            0x89c0	                            mov eax, eax	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400089b	    0x488b04c50000	                  mov rax, qword [rax*8]	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008a3	            0xffe0	                                 jmp rax	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       658	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x40008a9	          0x8b4010	            mov eax, dword [rax + 0x10] 	       658	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x40008ac	            0x85c0	                           test eax, eax	       658	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x40008ae	            0x7543	                           jne 0x40008f3	       658	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x40008b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       659	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x40008b4	    0xc74008403f00	            mov dword [rax + 8], 0x3f40 	       659	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x40008bb	      0xe9bc200000	                           jmp 0x400297c	       660	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x40008c0	        0x837da800	               cmp dword [rbp - 0x58], 0	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008c4	     0xf84b7200000	                            je 0x4002981	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008ca	        0x836da801	               sub dword [rbp - 0x58], 1	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008d2	        0x488d5001	                      lea rdx, [rax + 1]	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008d6	        0x488955c8	             mov qword [rbp - 0x38], rdx	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008da	           0xfb600	                   movzx eax, byte [rax]	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008dd	           0xfb6d0	                           movzx edx, al	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008e0	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008e3	            0x89c1	                            mov ecx, eax	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008e5	          0x48d3e2	                             shl rdx, cl	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008e8	          0x4889d0	                            mov rax, rdx	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008eb	        0x480145d8	            add qword [rbp - 0x28], rax 	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008ef	        0x8345b008	               add dword [rbp - 0x50], 8	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008f3	        0x837db00f	            cmp dword [rbp - 0x50], 0xf 	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008f7	            0x76c7	                           jbe 0x40008c0	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40008f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       664	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40008fd	          0x8b4010	            mov eax, dword [rax + 0x10] 	       664	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000900	          0x83e002	                              and eax, 2	       664	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000903	            0x85c0	                           test eax, eax	       664	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000905	     0xf849b000000	                            je 0x40009a6	       664	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x400090b	    0x48817dd81f8b	         cmp qword [rbp - 0x28], 0x8b1f 	       664	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000913	     0xf858d000000	                           jne 0x40009a6	       664	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000919	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       665	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	IF_5
0x400091d	          0x8b4038	            mov eax, dword [rax + 0x38] 	       665	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	IF_5
0x4000920	            0x85c0	                           test eax, eax	       665	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	IF_5
0x4000922	            0x750b	                           jne 0x400092f	       665	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	IF_5
0x4000924	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       666	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	IF_5
0x4000928	    0xc740380f0000	            mov dword [rax + 0x38], 0xf 	       666	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	IF_5
0x400092f	      0xba00000000	                              mov edx, 0	       667	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	CALL_2
0x4000934	      0xbe00000000	                              mov esi, 0	       667	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	CALL_2
0x4000939	      0xbf00000000	                              mov edi, 0	       667	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	CALL_2
0x400093e	      0xe800000000	                          call 0x4000943	       667	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	CALL_2
0x4000943	          0x4889c2	                            mov rdx, rax	       667	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	CALL_2
0x4000946	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       667	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	CALL_2
0x400094a	        0x48895020	             mov qword [rax + 0x20], rdx	       667	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	CALL_2
0x400094e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000952	          0x8845f0	               mov byte [rbp - 0x10], al	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000955	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000959	        0x48c1e808	                              shr rax, 8	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x400095d	          0x8845f1	                mov byte [rbp - 0xf], al	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000960	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000964	        0x488b4020	            mov rax, qword [rax + 0x20] 	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000968	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x400096c	      0xba02000000	                              mov edx, 2	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000971	          0x4889ce	                            mov rsi, rcx	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000974	          0x4889c7	                            mov rdi, rax	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000977	      0xe800000000	                          call 0x400097c	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x400097c	          0x4889c2	                            mov rdx, rax	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x400097f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000983	        0x48895020	             mov qword [rax + 0x20], rdx	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000987	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       669	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x400098f	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       669	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000996	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       670	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x400099a	    0xc74008353f00	            mov dword [rax + 8], 0x3f35 	       670	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40009a1	      0xe9d61f0000	                           jmp 0x400297c	       671	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40009a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       673	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40009aa	    0xc74018000000	               mov dword [rax + 0x18], 0	       673	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40009b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       674	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_6
0x40009b5	        0x488b4030	            mov rax, qword [rax + 0x30] 	       674	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_6
0x40009b9	          0x4885c0	                           test rax, rax	       674	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_6
0x40009bc	            0x740f	                            je 0x40009cd	       674	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_6
0x40009be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       675	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_6
0x40009c2	        0x488b4030	            mov rax, qword [rax + 0x30] 	       675	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_6
0x40009c6	    0xc74048ffffff	     mov dword [rax + 0x48], 0xffffffff 	       675	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_6
0x40009cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40009d1	          0x8b4010	            mov eax, dword [rax + 0x10] 	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40009d4	          0x83e001	                              and eax, 1	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40009d7	            0x85c0	                           test eax, eax	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40009d9	            0x744d	                            je 0x4000a28	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40009db	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x40009df	          0xc1e008	                              shl eax, 8	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x40009e2	            0x89c0	                            mov eax, eax	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x40009e4	           0xfb7c0	                           movzx eax, ax	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x40009e7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x40009eb	        0x48c1ea08	                              shr rdx, 8	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x40009ef	        0x488d0c10	                    lea rcx, [rax + rdx]	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x40009f3	    0x48ba11420821	           movabs rdx, 0x842108421084211	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x40009fd	          0x4889c8	                            mov rax, rcx	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000a00	          0x48f7e2	                                 mul rdx	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000a03	          0x4889c8	                            mov rax, rcx	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000a06	          0x4829d0	                            sub rax, rdx	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000a09	          0x48d1e8	                              shr rax, 1	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000a0c	          0x4801d0	                            add rax, rdx	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000a0f	        0x48c1e804	                              shr rax, 4	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000a13	          0x4889c2	                            mov rdx, rax	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000a16	        0x48c1e205	                              shl rdx, 5	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000a1a	          0x4829c2	                            sub rdx, rax	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000a1d	          0x4889c8	                            mov rax, rcx	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000a20	          0x4829d0	                            sub rax, rdx	       680	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000a23	          0x4885c0	                           test rax, rax	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000a26	            0x741c	                            je 0x4000a44	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000a28	        0x488b4588	             mov rax, qword [rbp - 0x78]	       681	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000a2c	    0x48c740300000	               mov qword [rax + 0x30], 0	       681	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000a34	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       682	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000a38	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	       682	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000a3f	      0xe9381f0000	                           jmp 0x400297c	       683	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000a44	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       685	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x4000a48	          0x83e00f	                            and eax, 0xf	       685	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x4000a4b	          0x83f808	                              cmp eax, 8	       685	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x4000a4e	            0x741c	                            je 0x4000a6c	       685	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x4000a50	        0x488b4588	             mov rax, qword [rbp - 0x78]	       686	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x4000a54	    0x48c740300000	               mov qword [rax + 0x30], 0	       686	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x4000a5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       687	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x4000a60	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	       687	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x4000a67	      0xe9101f0000	                           jmp 0x400297c	       688	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x4000a6c	      0x48c16dd804	               shr qword [rbp - 0x28], 4	       690	inflate.c	FUNCTION_7	SWITCH_1
0x4000a71	        0x836db004	               sub dword [rbp - 0x50], 4	       690	inflate.c	FUNCTION_7	SWITCH_1
0x4000a75	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       691	inflate.c	FUNCTION_7	SWITCH_1
0x4000a79	          0x83e00f	                            and eax, 0xf	       691	inflate.c	FUNCTION_7	SWITCH_1
0x4000a7c	          0x83c008	                              add eax, 8	       691	inflate.c	FUNCTION_7	SWITCH_1
0x4000a7f	          0x8945bc	             mov dword [rbp - 0x44], eax	       691	inflate.c	FUNCTION_7	SWITCH_1
0x4000a82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       692	inflate.c	FUNCTION_7	SWITCH_1	IF_10
0x4000a86	          0x8b4038	            mov eax, dword [rax + 0x38] 	       692	inflate.c	FUNCTION_7	SWITCH_1	IF_10
0x4000a89	            0x85c0	                           test eax, eax	       692	inflate.c	FUNCTION_7	SWITCH_1	IF_10
0x4000a8b	            0x750a	                           jne 0x4000a97	       692	inflate.c	FUNCTION_7	SWITCH_1	IF_10
0x4000a8d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       693	inflate.c	FUNCTION_7	SWITCH_1	IF_10
0x4000a91	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       693	inflate.c	FUNCTION_7	SWITCH_1	IF_10
0x4000a94	          0x895038	             mov dword [rax + 0x38], edx	       693	inflate.c	FUNCTION_7	SWITCH_1	IF_10
0x4000a97	        0x837dbc0f	            cmp dword [rbp - 0x44], 0xf 	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x4000a9b	            0x770c	                            ja 0x4000aa9	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x4000a9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x4000aa1	          0x8b4038	            mov eax, dword [rax + 0x38] 	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x4000aa4	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x4000aa7	            0x731c	                           jae 0x4000ac5	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x4000aa9	        0x488b4588	             mov rax, qword [rbp - 0x78]	       695	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x4000aad	    0x48c740300000	               mov qword [rax + 0x30], 0	       695	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x4000ab5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       696	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x4000ab9	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	       696	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x4000ac0	      0xe9b71e0000	                           jmp 0x400297c	       697	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x4000ac5	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       699	inflate.c	FUNCTION_7	SWITCH_1
0x4000ac8	      0xba01000000	                              mov edx, 1	       699	inflate.c	FUNCTION_7	SWITCH_1
0x4000acd	            0x89c1	                            mov ecx, eax	       699	inflate.c	FUNCTION_7	SWITCH_1
0x4000acf	            0xd3e2	                             shl edx, cl	       699	inflate.c	FUNCTION_7	SWITCH_1
0x4000ad1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       699	inflate.c	FUNCTION_7	SWITCH_1
0x4000ad5	          0x89501c	             mov dword [rax + 0x1c], edx	       699	inflate.c	FUNCTION_7	SWITCH_1
0x4000ad8	      0xba00000000	                              mov edx, 0	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000add	      0xbe00000000	                              mov esi, 0	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000ae2	      0xbf00000000	                              mov edi, 0	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000ae7	      0xe800000000	                          call 0x4000aec	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000aec	          0x4889c2	                            mov rdx, rax	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000aef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000af3	        0x48895020	             mov qword [rax + 0x20], rdx	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000af7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000afb	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000aff	        0x488b4588	             mov rax, qword [rbp - 0x78]	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000b03	        0x48895060	             mov qword [rax + 0x60], rdx	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000b07	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       702	inflate.c	FUNCTION_7	SWITCH_1
0x4000b0b	      0x2500020000	                          and eax, 0x200	       702	inflate.c	FUNCTION_7	SWITCH_1
0x4000b10	          0x4885c0	                           test rax, rax	       702	inflate.c	FUNCTION_7	SWITCH_1
0x4000b13	            0x7407	                            je 0x4000b1c	       702	inflate.c	FUNCTION_7	SWITCH_1
0x4000b15	      0xba3d3f0000	                         mov edx, 0x3f3d	       702	inflate.c	FUNCTION_7	SWITCH_1
0x4000b1a	            0xeb05	                           jmp 0x4000b21	       702	inflate.c	FUNCTION_7	SWITCH_1
0x4000b1c	      0xba3f3f0000	                         mov edx, 0x3f3f	       702	inflate.c	FUNCTION_7	SWITCH_1
0x4000b21	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       702	inflate.c	FUNCTION_7	SWITCH_1
0x4000b25	          0x895008	                mov dword [rax + 8], edx	       702	inflate.c	FUNCTION_7	SWITCH_1
0x4000b28	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       703	inflate.c	FUNCTION_7	SWITCH_1
0x4000b30	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       703	inflate.c	FUNCTION_7	SWITCH_1
0x4000b37	      0xe9401e0000	                           jmp 0x400297c	       704	inflate.c	FUNCTION_7	SWITCH_1
0x4000b3c	        0x837da800	               cmp dword [rbp - 0x58], 0	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000b40	     0xf843e1e0000	                            je 0x4002984	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000b46	        0x836da801	               sub dword [rbp - 0x58], 1	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000b4a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000b4e	        0x488d5001	                      lea rdx, [rax + 1]	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000b52	        0x488955c8	             mov qword [rbp - 0x38], rdx	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000b56	           0xfb600	                   movzx eax, byte [rax]	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000b59	           0xfb6d0	                           movzx edx, al	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000b5c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000b5f	            0x89c1	                            mov ecx, eax	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000b61	          0x48d3e2	                             shl rdx, cl	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000b64	          0x4889d0	                            mov rax, rdx	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000b67	        0x480145d8	            add qword [rbp - 0x28], rax 	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000b6b	        0x8345b008	               add dword [rbp - 0x50], 8	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000b6f	        0x837db00f	            cmp dword [rbp - 0x50], 0xf 	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000b73	            0x76c7	                           jbe 0x4000b3c	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000b75	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       708	inflate.c	FUNCTION_7	SWITCH_1
0x4000b79	            0x89c2	                            mov edx, eax	       708	inflate.c	FUNCTION_7	SWITCH_1
0x4000b7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       708	inflate.c	FUNCTION_7	SWITCH_1
0x4000b7f	          0x895018	             mov dword [rax + 0x18], edx	       708	inflate.c	FUNCTION_7	SWITCH_1
0x4000b82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       709	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4000b86	          0x8b4018	            mov eax, dword [rax + 0x18] 	       709	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4000b89	           0xfb6c0	                           movzx eax, al	       709	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4000b8c	          0x83f808	                              cmp eax, 8	       709	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4000b8f	            0x741c	                            je 0x4000bad	       709	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4000b91	        0x488b4588	             mov rax, qword [rbp - 0x78]	       710	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4000b95	    0x48c740300000	               mov qword [rax + 0x30], 0	       710	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4000b9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       711	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4000ba1	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	       711	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4000ba8	      0xe9cf1d0000	                           jmp 0x400297c	       712	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4000bad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       714	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4000bb1	          0x8b4018	            mov eax, dword [rax + 0x18] 	       714	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4000bb4	      0x2500e00000	                         and eax, 0xe000	       714	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4000bb9	            0x85c0	                           test eax, eax	       714	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4000bbb	            0x741c	                            je 0x4000bd9	       714	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4000bbd	        0x488b4588	             mov rax, qword [rbp - 0x78]	       715	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4000bc1	    0x48c740300000	               mov qword [rax + 0x30], 0	       715	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4000bc9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       716	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4000bcd	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	       716	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4000bd4	      0xe9a31d0000	                           jmp 0x400297c	       717	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4000bd9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       719	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x4000bdd	        0x488b4030	            mov rax, qword [rax + 0x30] 	       719	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x4000be1	          0x4885c0	                           test rax, rax	       719	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x4000be4	            0x7415	                            je 0x4000bfb	       719	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x4000be6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       720	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x4000bea	        0x488b4030	            mov rax, qword [rax + 0x30] 	       720	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x4000bee	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       720	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x4000bf2	        0x48c1ea08	                              shr rdx, 8	       720	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x4000bf6	          0x83e201	                              and edx, 1	       720	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x4000bf9	            0x8910	                    mov dword [rax], edx	       720	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x4000bfb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000bff	          0x8b4018	            mov eax, dword [rax + 0x18] 	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c02	      0x2500020000	                          and eax, 0x200	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c07	            0x85c0	                           test eax, eax	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c09	            0x7447	                            je 0x4000c52	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c0f	          0x8b4010	            mov eax, dword [rax + 0x10] 	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c12	          0x83e004	                              and eax, 4	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c15	            0x85c0	                           test eax, eax	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c17	            0x7439	                            je 0x4000c52	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c19	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c1d	          0x8845f0	               mov byte [rbp - 0x10], al	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c20	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c24	        0x48c1e808	                              shr rax, 8	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c28	          0x8845f1	                mov byte [rbp - 0xf], al	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c2b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c2f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c33	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c37	      0xba02000000	                              mov edx, 2	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c3c	          0x4889ce	                            mov rsi, rcx	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c3f	          0x4889c7	                            mov rdi, rax	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c42	      0xe800000000	                          call 0x4000c47	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c47	          0x4889c2	                            mov rdx, rax	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c4e	        0x48895020	             mov qword [rax + 0x20], rdx	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4000c52	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       723	inflate.c	FUNCTION_7	SWITCH_1
0x4000c5a	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       723	inflate.c	FUNCTION_7	SWITCH_1
0x4000c61	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       724	inflate.c	FUNCTION_7	SWITCH_1
0x4000c65	    0xc74008363f00	            mov dword [rax + 8], 0x3f36 	       724	inflate.c	FUNCTION_7	SWITCH_1
0x4000c6c	            0xeb33	                           jmp 0x4000ca1	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c6e	        0x837da800	               cmp dword [rbp - 0x58], 0	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c72	     0xf840f1d0000	                            je 0x4002987	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c78	        0x836da801	               sub dword [rbp - 0x58], 1	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c7c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c80	        0x488d5001	                      lea rdx, [rax + 1]	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c84	        0x488955c8	             mov qword [rbp - 0x38], rdx	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c88	           0xfb600	                   movzx eax, byte [rax]	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c8b	           0xfb6d0	                           movzx edx, al	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c8e	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c91	            0x89c1	                            mov ecx, eax	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c93	          0x48d3e2	                             shl rdx, cl	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c96	          0x4889d0	                            mov rax, rdx	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c99	        0x480145d8	            add qword [rbp - 0x28], rax 	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c9d	        0x8345b008	               add dword [rbp - 0x50], 8	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000ca1	        0x837db01f	           cmp dword [rbp - 0x50], 0x1f 	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000ca5	            0x76c7	                           jbe 0x4000c6e	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000ca7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       727	inflate.c	FUNCTION_7	SWITCH_1	IF_16
0x4000cab	        0x488b4030	            mov rax, qword [rax + 0x30] 	       727	inflate.c	FUNCTION_7	SWITCH_1	IF_16
0x4000caf	          0x4885c0	                           test rax, rax	       727	inflate.c	FUNCTION_7	SWITCH_1	IF_16
0x4000cb2	            0x7410	                            je 0x4000cc4	       727	inflate.c	FUNCTION_7	SWITCH_1	IF_16
0x4000cb4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       728	inflate.c	FUNCTION_7	SWITCH_1	IF_16
0x4000cb8	        0x488b4030	            mov rax, qword [rax + 0x30] 	       728	inflate.c	FUNCTION_7	SWITCH_1	IF_16
0x4000cbc	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       728	inflate.c	FUNCTION_7	SWITCH_1	IF_16
0x4000cc0	        0x48895008	                mov qword [rax + 8], rdx	       728	inflate.c	FUNCTION_7	SWITCH_1	IF_16
0x4000cc4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000cc8	          0x8b4018	            mov eax, dword [rax + 0x18] 	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000ccb	      0x2500020000	                          and eax, 0x200	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000cd0	            0x85c0	                           test eax, eax	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000cd2	            0x745d	                            je 0x4000d31	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000cd4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000cd8	          0x8b4010	            mov eax, dword [rax + 0x10] 	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000cdb	          0x83e004	                              and eax, 4	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000cde	            0x85c0	                           test eax, eax	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000ce0	            0x744f	                            je 0x4000d31	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000ce2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000ce6	          0x8845f0	               mov byte [rbp - 0x10], al	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000ce9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000ced	        0x48c1e808	                              shr rax, 8	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000cf1	          0x8845f1	                mov byte [rbp - 0xf], al	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000cf4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000cf8	        0x48c1e810	                           shr rax, 0x10	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000cfc	          0x8845f2	                mov byte [rbp - 0xe], al	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000cff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000d03	        0x48c1e818	                           shr rax, 0x18	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000d07	          0x8845f3	                mov byte [rbp - 0xd], al	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000d0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000d0e	        0x488b4020	            mov rax, qword [rax + 0x20] 	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000d12	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000d16	      0xba04000000	                              mov edx, 4	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000d1b	          0x4889ce	                            mov rsi, rcx	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000d1e	          0x4889c7	                            mov rdi, rax	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000d21	      0xe800000000	                          call 0x4000d26	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000d26	          0x4889c2	                            mov rdx, rax	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000d29	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000d2d	        0x48895020	             mov qword [rax + 0x20], rdx	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000d31	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       731	inflate.c	FUNCTION_7	SWITCH_1
0x4000d39	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       731	inflate.c	FUNCTION_7	SWITCH_1
0x4000d40	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       732	inflate.c	FUNCTION_7	SWITCH_1
0x4000d44	    0xc74008373f00	            mov dword [rax + 8], 0x3f37 	       732	inflate.c	FUNCTION_7	SWITCH_1
0x4000d4b	            0xeb33	                           jmp 0x4000d80	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4000d4d	        0x837da800	               cmp dword [rbp - 0x58], 0	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4000d51	     0xf84331c0000	                            je 0x400298a	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4000d57	        0x836da801	               sub dword [rbp - 0x58], 1	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4000d5b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4000d5f	        0x488d5001	                      lea rdx, [rax + 1]	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4000d63	        0x488955c8	             mov qword [rbp - 0x38], rdx	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4000d67	           0xfb600	                   movzx eax, byte [rax]	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4000d6a	           0xfb6d0	                           movzx edx, al	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4000d6d	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4000d70	            0x89c1	                            mov ecx, eax	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4000d72	          0x48d3e2	                             shl rdx, cl	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4000d75	          0x4889d0	                            mov rax, rdx	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4000d78	        0x480145d8	            add qword [rbp - 0x28], rax 	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4000d7c	        0x8345b008	               add dword [rbp - 0x50], 8	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4000d80	        0x837db00f	            cmp dword [rbp - 0x50], 0xf 	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4000d84	            0x76c7	                           jbe 0x4000d4d	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4000d86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       735	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4000d8a	        0x488b4030	            mov rax, qword [rax + 0x30] 	       735	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4000d8e	          0x4885c0	                           test rax, rax	       735	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4000d91	            0x7425	                            je 0x4000db8	       735	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4000d93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       736	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4000d97	        0x488b4030	            mov rax, qword [rax + 0x30] 	       736	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4000d9b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       736	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4000d9f	           0xfb6d2	                           movzx edx, dl	       736	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4000da2	          0x895010	             mov dword [rax + 0x10], edx	       736	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4000da5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       737	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4000da9	        0x488b4030	            mov rax, qword [rax + 0x30] 	       737	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4000dad	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       737	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4000db1	        0x48c1ea08	                              shr rdx, 8	       737	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4000db5	          0x895014	             mov dword [rax + 0x14], edx	       737	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4000db8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000dbc	          0x8b4018	            mov eax, dword [rax + 0x18] 	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000dbf	      0x2500020000	                          and eax, 0x200	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000dc4	            0x85c0	                           test eax, eax	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000dc6	            0x7447	                            je 0x4000e0f	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000dc8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000dcc	          0x8b4010	            mov eax, dword [rax + 0x10] 	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000dcf	          0x83e004	                              and eax, 4	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000dd2	            0x85c0	                           test eax, eax	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000dd4	            0x7439	                            je 0x4000e0f	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000dd6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000dda	          0x8845f0	               mov byte [rbp - 0x10], al	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000ddd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000de1	        0x48c1e808	                              shr rax, 8	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000de5	          0x8845f1	                mov byte [rbp - 0xf], al	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000de8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000dec	        0x488b4020	            mov rax, qword [rax + 0x20] 	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000df0	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000df4	      0xba02000000	                              mov edx, 2	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000df9	          0x4889ce	                            mov rsi, rcx	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000dfc	          0x4889c7	                            mov rdi, rax	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000dff	      0xe800000000	                          call 0x4000e04	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000e04	          0x4889c2	                            mov rdx, rax	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000e07	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000e0b	        0x48895020	             mov qword [rax + 0x20], rdx	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000e0f	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       741	inflate.c	FUNCTION_7	SWITCH_1
0x4000e17	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       741	inflate.c	FUNCTION_7	SWITCH_1
0x4000e1e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       742	inflate.c	FUNCTION_7	SWITCH_1
0x4000e22	    0xc74008383f00	            mov dword [rax + 8], 0x3f38 	       742	inflate.c	FUNCTION_7	SWITCH_1
0x4000e29	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       744	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e2d	          0x8b4018	            mov eax, dword [rax + 0x18] 	       744	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e30	      0x2500040000	                          and eax, 0x400	       744	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e35	            0x85c0	                           test eax, eax	       744	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e37	     0xf84cc000000	                            je 0x4000f09	       744	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e3d	            0xeb33	                           jmp 0x4000e72	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e3f	        0x837da800	               cmp dword [rbp - 0x58], 0	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e43	     0xf84441b0000	                            je 0x400298d	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e49	        0x836da801	               sub dword [rbp - 0x58], 1	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e4d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e51	        0x488d5001	                      lea rdx, [rax + 1]	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e55	        0x488955c8	             mov qword [rbp - 0x38], rdx	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e59	           0xfb600	                   movzx eax, byte [rax]	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e5c	           0xfb6d0	                           movzx edx, al	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e5f	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e62	            0x89c1	                            mov ecx, eax	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e64	          0x48d3e2	                             shl rdx, cl	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e67	          0x4889d0	                            mov rax, rdx	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e6a	        0x480145d8	            add qword [rbp - 0x28], rax 	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e6e	        0x8345b008	               add dword [rbp - 0x50], 8	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e72	        0x837db00f	            cmp dword [rbp - 0x50], 0xf 	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e76	            0x76c7	                           jbe 0x4000e3f	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e78	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       746	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e7c	            0x89c2	                            mov edx, eax	       746	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e7e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       746	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e82	          0x89505c	             mov dword [rax + 0x5c], edx	       746	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000e85	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       747	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_21
0x4000e89	        0x488b4030	            mov rax, qword [rax + 0x30] 	       747	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_21
0x4000e8d	          0x4885c0	                           test rax, rax	       747	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_21
0x4000e90	            0x740f	                            je 0x4000ea1	       747	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_21
0x4000e92	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       748	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_21
0x4000e96	        0x488b4030	            mov rax, qword [rax + 0x30] 	       748	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_21
0x4000e9a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       748	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_21
0x4000e9e	          0x895020	             mov dword [rax + 0x20], edx	       748	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_21
0x4000ea1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ea5	          0x8b4018	            mov eax, dword [rax + 0x18] 	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ea8	      0x2500020000	                          and eax, 0x200	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ead	            0x85c0	                           test eax, eax	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000eaf	            0x7447	                            je 0x4000ef8	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000eb1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000eb5	          0x8b4010	            mov eax, dword [rax + 0x10] 	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000eb8	          0x83e004	                              and eax, 4	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ebb	            0x85c0	                           test eax, eax	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ebd	            0x7439	                            je 0x4000ef8	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ebf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ec3	          0x8845f0	               mov byte [rbp - 0x10], al	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ec6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000eca	        0x48c1e808	                              shr rax, 8	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ece	          0x8845f1	                mov byte [rbp - 0xf], al	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ed1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ed5	        0x488b4020	            mov rax, qword [rax + 0x20] 	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ed9	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000edd	      0xba02000000	                              mov edx, 2	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ee2	          0x4889ce	                            mov rsi, rcx	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ee5	          0x4889c7	                            mov rdi, rax	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ee8	      0xe800000000	                          call 0x4000eed	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000eed	          0x4889c2	                            mov rdx, rax	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ef0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ef4	        0x48895020	             mov qword [rax + 0x20], rdx	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ef8	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       751	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000f00	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       751	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000f07	            0xeb1d	                           jmp 0x4000f26	       751	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000f09	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       753	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4000f0d	        0x488b4030	            mov rax, qword [rax + 0x30] 	       753	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4000f11	          0x4885c0	                           test rax, rax	       753	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4000f14	            0x7410	                            je 0x4000f26	       753	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4000f16	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       754	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4000f1a	        0x488b4030	            mov rax, qword [rax + 0x30] 	       754	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4000f1e	    0x48c740180000	               mov qword [rax + 0x18], 0	       754	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4000f26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       755	inflate.c	FUNCTION_7	SWITCH_1
0x4000f2a	    0xc74008393f00	            mov dword [rax + 8], 0x3f39 	       755	inflate.c	FUNCTION_7	SWITCH_1
0x4000f31	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       757	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4000f35	          0x8b4018	            mov eax, dword [rax + 0x18] 	       757	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4000f38	      0x2500040000	                          and eax, 0x400	       757	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4000f3d	            0x85c0	                           test eax, eax	       757	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4000f3f	     0xf8419010000	                            je 0x400105e	       757	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4000f45	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       758	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4000f49	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       758	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4000f4c	          0x8945b8	             mov dword [rbp - 0x48], eax	       758	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4000f4f	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       759	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_25
0x4000f52	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	       759	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_25
0x4000f55	            0x7606	                           jbe 0x4000f5d	       759	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_25
0x4000f57	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       759	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_25
0x4000f5a	          0x8945b8	             mov dword [rbp - 0x48], eax	       759	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_25
0x4000f5d	        0x837db800	               cmp dword [rbp - 0x48], 0	       760	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x4000f61	     0xf84e8000000	                            je 0x400104f	       760	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x4000f67	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       761	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000f6b	        0x488b4030	            mov rax, qword [rax + 0x30] 	       761	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000f6f	          0x4885c0	                           test rax, rax	       761	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000f72	            0x7478	                            je 0x4000fec	       761	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000f74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       762	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000f78	        0x488b4030	            mov rax, qword [rax + 0x30] 	       762	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000f7c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       762	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000f80	          0x4885c0	                           test rax, rax	       761	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000f83	            0x7467	                            je 0x4000fec	       761	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000f85	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       763	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000f89	        0x488b4030	            mov rax, qword [rax + 0x30] 	       763	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000f8d	          0x8b5020	            mov edx, dword [rax + 0x20] 	       763	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000f90	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       763	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000f94	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       763	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000f97	            0x29c2	                            sub edx, eax	       763	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000f99	            0x89d0	                            mov eax, edx	       763	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000f9b	          0x8945bc	             mov dword [rbp - 0x44], eax	       763	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000f9e	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       765	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000fa1	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       765	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000fa4	             0x1c2	                            add edx, eax	       765	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000fa6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       765	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000faa	        0x488b4030	            mov rax, qword [rax + 0x30] 	       765	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000fae	          0x8b4024	            mov eax, dword [rax + 0x24] 	       765	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000fb1	            0x39c2	                            cmp edx, eax	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000fb3	            0x7612	                           jbe 0x4000fc7	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000fb5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       766	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000fb9	        0x488b4030	            mov rax, qword [rax + 0x30] 	       766	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000fbd	          0x8b4024	            mov eax, dword [rax + 0x24] 	       766	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000fc0	          0x2b45bc	             sub eax, dword [rbp - 0x44]	       766	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000fc3	            0x89c0	                            mov eax, eax	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000fc5	            0xeb03	                           jmp 0x4000fca	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000fc7	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000fca	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000fce	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000fd2	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000fd6	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000fd9	        0x488d3c11	                    lea rdi, [rcx + rdx]	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000fdd	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000fe1	          0x4889c2	                            mov rdx, rax	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000fe4	          0x4889ce	                            mov rsi, rcx	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000fe7	      0xe800000000	                          call 0x4000fec	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000fec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x4000ff0	          0x8b4018	            mov eax, dword [rax + 0x18] 	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x4000ff3	      0x2500020000	                          and eax, 0x200	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x4000ff8	            0x85c0	                           test eax, eax	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x4000ffa	            0x7433	                            je 0x400102f	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x4000ffc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x4001000	          0x8b4010	            mov eax, dword [rax + 0x10] 	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x4001003	          0x83e004	                              and eax, 4	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x4001006	            0x85c0	                           test eax, eax	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x4001008	            0x7425	                            je 0x400102f	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x400100a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x400100e	        0x488b4020	            mov rax, qword [rax + 0x20] 	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4001012	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4001015	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4001019	          0x4889ce	                            mov rsi, rcx	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x400101c	          0x4889c7	                            mov rdi, rax	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x400101f	      0xe800000000	                          call 0x4001024	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4001024	          0x4889c2	                            mov rdx, rax	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4001027	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x400102b	        0x48895020	             mov qword [rax + 0x20], rdx	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x400102f	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       770	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x4001032	          0x2945a8	             sub dword [rbp - 0x58], eax	       770	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x4001035	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       771	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x4001038	        0x480145c8	            add qword [rbp - 0x38], rax 	       771	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x400103c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       772	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x4001040	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       772	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x4001043	          0x2b45b8	             sub eax, dword [rbp - 0x48]	       772	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x4001046	            0x89c2	                            mov edx, eax	       772	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x4001048	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       772	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x400104c	          0x89505c	             mov dword [rax + 0x5c], edx	       772	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x400104f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       774	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_29
0x4001053	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       774	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_29
0x4001056	            0x85c0	                           test eax, eax	       774	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_29
0x4001058	     0xf8532190000	                           jne 0x4002990	       774	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_29
0x400105e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       776	inflate.c	FUNCTION_7	SWITCH_1
0x4001062	    0xc7405c000000	               mov dword [rax + 0x5c], 0	       776	inflate.c	FUNCTION_7	SWITCH_1
0x4001069	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       777	inflate.c	FUNCTION_7	SWITCH_1
0x400106d	    0xc740083a3f00	            mov dword [rax + 8], 0x3f3a 	       777	inflate.c	FUNCTION_7	SWITCH_1
0x4001074	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       779	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x4001078	          0x8b4018	            mov eax, dword [rax + 0x18] 	       779	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x400107b	      0x2500080000	                          and eax, 0x800	       779	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x4001080	            0x85c0	                           test eax, eax	       779	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x4001082	     0xf84f4000000	                            je 0x400117c	       779	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x4001088	        0x837da800	               cmp dword [rbp - 0x58], 0	       780	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_31
0x400108c	     0xf8401190000	                            je 0x4002993	       780	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_31
0x4001092	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       781	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x4001099	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       783	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x400109c	          0x8d5001	                      lea edx, [rax + 1]	       783	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x400109f	          0x8955b8	             mov dword [rbp - 0x48], edx	       783	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x40010a2	            0x89c2	                            mov edx, eax	       783	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x40010a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       783	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x40010a8	          0x4801d0	                            add rax, rdx	       783	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x40010ab	           0xfb600	                   movzx eax, byte [rax]	       783	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x40010ae	           0xfb6c0	                           movzx eax, al	       783	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x40010b1	          0x8945bc	             mov dword [rbp - 0x44], eax	       783	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x40010b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       784	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010b8	        0x488b4030	            mov rax, qword [rax + 0x30] 	       784	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010bc	          0x4885c0	                           test rax, rax	       784	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010bf	            0x744e	                            je 0x400110f	       784	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       785	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010c5	        0x488b4030	            mov rax, qword [rax + 0x30] 	       785	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010c9	        0x488b4028	            mov rax, qword [rax + 0x28] 	       785	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010cd	          0x4885c0	                           test rax, rax	       784	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010d0	            0x743d	                            je 0x400110f	       784	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       786	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010d6	          0x8b505c	            mov edx, dword [rax + 0x5c] 	       786	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       786	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010dd	        0x488b4030	            mov rax, qword [rax + 0x30] 	       786	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010e1	          0x8b4030	            mov eax, dword [rax + 0x30] 	       786	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010e4	            0x39c2	                            cmp edx, eax	       785	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010e6	            0x7327	                           jae 0x400110f	       785	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010ec	        0x488b4030	            mov rax, qword [rax + 0x30] 	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010f0	        0x488b7028	            mov rsi, qword [rax + 0x28] 	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010f8	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010fb	          0x8d4801	                      lea ecx, [rax + 1]	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40010fe	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x4001102	          0x894a5c	             mov dword [rdx + 0x5c], ecx	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x4001105	            0x89c0	                            mov eax, eax	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x4001107	          0x4801f0	                            add rax, rsi	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x400110a	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x400110d	            0x8810	                      mov byte [rax], dl	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x400110f	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       788	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x4001113	            0x740c	                            je 0x4001121	       788	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x4001115	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       788	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x4001118	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	       788	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x400111b	     0xf8278ffffff	                            jb 0x4001099	       788	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x4001121	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x4001125	          0x8b4018	            mov eax, dword [rax + 0x18] 	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x4001128	      0x2500020000	                          and eax, 0x200	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x400112d	            0x85c0	                           test eax, eax	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x400112f	            0x7433	                            je 0x4001164	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x4001131	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x4001135	          0x8b4010	            mov eax, dword [rax + 0x10] 	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x4001138	          0x83e004	                              and eax, 4	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x400113b	            0x85c0	                           test eax, eax	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x400113d	            0x7425	                            je 0x4001164	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x400113f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x4001143	        0x488b4020	            mov rax, qword [rax + 0x20] 	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x4001147	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x400114a	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x400114e	          0x4889ce	                            mov rsi, rcx	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x4001151	          0x4889c7	                            mov rdi, rax	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x4001154	      0xe800000000	                          call 0x4001159	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x4001159	          0x4889c2	                            mov rdx, rax	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x400115c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x4001160	        0x48895020	             mov qword [rax + 0x20], rdx	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x4001164	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       791	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x4001167	          0x2945a8	             sub dword [rbp - 0x58], eax	       791	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x400116a	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       792	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x400116d	        0x480145c8	            add qword [rbp - 0x38], rax 	       792	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x4001171	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       793	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_34
0x4001175	            0x7422	                            je 0x4001199	       793	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_34
0x4001177	      0xe960180000	                           jmp 0x40029dc	       793	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_34
0x400117c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       795	inflate.c	FUNCTION_7	SWITCH_1	ELSE_2	IF_35
0x4001180	        0x488b4030	            mov rax, qword [rax + 0x30] 	       795	inflate.c	FUNCTION_7	SWITCH_1	ELSE_2	IF_35
0x4001184	          0x4885c0	                           test rax, rax	       795	inflate.c	FUNCTION_7	SWITCH_1	ELSE_2	IF_35
0x4001187	            0x7410	                            je 0x4001199	       795	inflate.c	FUNCTION_7	SWITCH_1	ELSE_2	IF_35
0x4001189	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       796	inflate.c	FUNCTION_7	SWITCH_1	ELSE_2	IF_35
0x400118d	        0x488b4030	            mov rax, qword [rax + 0x30] 	       796	inflate.c	FUNCTION_7	SWITCH_1	ELSE_2	IF_35
0x4001191	    0x48c740280000	               mov qword [rax + 0x28], 0	       796	inflate.c	FUNCTION_7	SWITCH_1	ELSE_2	IF_35
0x4001199	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       797	inflate.c	FUNCTION_7	SWITCH_1
0x400119d	    0xc7405c000000	               mov dword [rax + 0x5c], 0	       797	inflate.c	FUNCTION_7	SWITCH_1
0x40011a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       798	inflate.c	FUNCTION_7	SWITCH_1
0x40011a8	    0xc740083b3f00	            mov dword [rax + 8], 0x3f3b 	       798	inflate.c	FUNCTION_7	SWITCH_1
0x40011af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       800	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x40011b3	          0x8b4018	            mov eax, dword [rax + 0x18] 	       800	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x40011b6	      0x2500100000	                         and eax, 0x1000	       800	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x40011bb	            0x85c0	                           test eax, eax	       800	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x40011bd	     0xf84f4000000	                            je 0x40012b7	       800	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x40011c3	        0x837da800	               cmp dword [rbp - 0x58], 0	       801	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_37
0x40011c7	     0xf84c9170000	                            je 0x4002996	       801	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_37
0x40011cd	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       802	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x40011d4	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       804	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x40011d7	          0x8d5001	                      lea edx, [rax + 1]	       804	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x40011da	          0x8955b8	             mov dword [rbp - 0x48], edx	       804	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x40011dd	            0x89c2	                            mov edx, eax	       804	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x40011df	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       804	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x40011e3	          0x4801d0	                            add rax, rdx	       804	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x40011e6	           0xfb600	                   movzx eax, byte [rax]	       804	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x40011e9	           0xfb6c0	                           movzx eax, al	       804	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x40011ec	          0x8945bc	             mov dword [rbp - 0x44], eax	       804	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x40011ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       805	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x40011f3	        0x488b4030	            mov rax, qword [rax + 0x30] 	       805	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x40011f7	          0x4885c0	                           test rax, rax	       805	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x40011fa	            0x744e	                            je 0x400124a	       805	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x40011fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       806	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001200	        0x488b4030	            mov rax, qword [rax + 0x30] 	       806	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001204	        0x488b4038	            mov rax, qword [rax + 0x38] 	       806	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001208	          0x4885c0	                           test rax, rax	       805	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x400120b	            0x743d	                            je 0x400124a	       805	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x400120d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       807	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001211	          0x8b505c	            mov edx, dword [rax + 0x5c] 	       807	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001214	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       807	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001218	        0x488b4030	            mov rax, qword [rax + 0x30] 	       807	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x400121c	          0x8b4040	            mov eax, dword [rax + 0x40] 	       807	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x400121f	            0x39c2	                            cmp edx, eax	       806	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001221	            0x7327	                           jae 0x400124a	       806	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001223	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001227	        0x488b4030	            mov rax, qword [rax + 0x30] 	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x400122b	        0x488b7038	            mov rsi, qword [rax + 0x38] 	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x400122f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001233	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001236	          0x8d4801	                      lea ecx, [rax + 1]	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001239	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x400123d	          0x894a5c	             mov dword [rdx + 0x5c], ecx	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001240	            0x89c0	                            mov eax, eax	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001242	          0x4801f0	                            add rax, rsi	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001245	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001248	            0x8810	                      mov byte [rax], dl	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x400124a	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       809	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x400124e	            0x740c	                            je 0x400125c	       809	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x4001250	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       809	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x4001253	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	       809	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x4001256	     0xf8278ffffff	                            jb 0x40011d4	       809	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x400125c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x4001260	          0x8b4018	            mov eax, dword [rax + 0x18] 	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x4001263	      0x2500020000	                          and eax, 0x200	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x4001268	            0x85c0	                           test eax, eax	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x400126a	            0x7433	                            je 0x400129f	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x400126c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x4001270	          0x8b4010	            mov eax, dword [rax + 0x10] 	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x4001273	          0x83e004	                              and eax, 4	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x4001276	            0x85c0	                           test eax, eax	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x4001278	            0x7425	                            je 0x400129f	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x400127a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x400127e	        0x488b4020	            mov rax, qword [rax + 0x20] 	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4001282	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4001285	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4001289	          0x4889ce	                            mov rsi, rcx	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x400128c	          0x4889c7	                            mov rdi, rax	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x400128f	      0xe800000000	                          call 0x4001294	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4001294	          0x4889c2	                            mov rdx, rax	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4001297	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x400129b	        0x48895020	             mov qword [rax + 0x20], rdx	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x400129f	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       812	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x40012a2	          0x2945a8	             sub dword [rbp - 0x58], eax	       812	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x40012a5	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       813	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x40012a8	        0x480145c8	            add qword [rbp - 0x38], rax 	       813	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x40012ac	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       814	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_40
0x40012b0	            0x7422	                            je 0x40012d4	       814	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_40
0x40012b2	      0xe925170000	                           jmp 0x40029dc	       814	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_40
0x40012b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       816	inflate.c	FUNCTION_7	SWITCH_1	ELSE_3	IF_41
0x40012bb	        0x488b4030	            mov rax, qword [rax + 0x30] 	       816	inflate.c	FUNCTION_7	SWITCH_1	ELSE_3	IF_41
0x40012bf	          0x4885c0	                           test rax, rax	       816	inflate.c	FUNCTION_7	SWITCH_1	ELSE_3	IF_41
0x40012c2	            0x7410	                            je 0x40012d4	       816	inflate.c	FUNCTION_7	SWITCH_1	ELSE_3	IF_41
0x40012c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       817	inflate.c	FUNCTION_7	SWITCH_1	ELSE_3	IF_41
0x40012c8	        0x488b4030	            mov rax, qword [rax + 0x30] 	       817	inflate.c	FUNCTION_7	SWITCH_1	ELSE_3	IF_41
0x40012cc	    0x48c740380000	               mov qword [rax + 0x38], 0	       817	inflate.c	FUNCTION_7	SWITCH_1	ELSE_3	IF_41
0x40012d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       818	inflate.c	FUNCTION_7	SWITCH_1
0x40012d8	    0xc740083c3f00	            mov dword [rax + 8], 0x3f3c 	       818	inflate.c	FUNCTION_7	SWITCH_1
0x40012df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       820	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012e3	          0x8b4018	            mov eax, dword [rax + 0x18] 	       820	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012e6	      0x2500020000	                          and eax, 0x200	       820	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012eb	            0x85c0	                           test eax, eax	       820	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012ed	     0xf8485000000	                            je 0x4001378	       820	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012f3	            0xeb33	                           jmp 0x4001328	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012f5	        0x837da800	               cmp dword [rbp - 0x58], 0	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012f9	     0xf849a160000	                            je 0x4002999	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012ff	        0x836da801	               sub dword [rbp - 0x58], 1	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4001303	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4001307	        0x488d5001	                      lea rdx, [rax + 1]	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x400130b	        0x488955c8	             mov qword [rbp - 0x38], rdx	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x400130f	           0xfb600	                   movzx eax, byte [rax]	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4001312	           0xfb6d0	                           movzx edx, al	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4001315	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4001318	            0x89c1	                            mov ecx, eax	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x400131a	          0x48d3e2	                             shl rdx, cl	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x400131d	          0x4889d0	                            mov rax, rdx	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4001320	        0x480145d8	            add qword [rbp - 0x28], rax 	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4001324	        0x8345b008	               add dword [rbp - 0x50], 8	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4001328	        0x837db00f	            cmp dword [rbp - 0x50], 0xf 	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x400132c	            0x76c7	                           jbe 0x40012f5	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x400132e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4001332	          0x8b4010	            mov eax, dword [rax + 0x10] 	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4001335	          0x83e004	                              and eax, 4	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4001338	            0x85c0	                           test eax, eax	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x400133a	            0x742d	                            je 0x4001369	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x400133c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4001340	        0x488b4020	            mov rax, qword [rax + 0x20] 	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4001344	           0xfb7c0	                           movzx eax, ax	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4001347	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x400134b	            0x741c	                            je 0x4001369	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x400134d	        0x488b4588	             mov rax, qword [rbp - 0x78]	       823	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4001351	    0x48c740300000	               mov qword [rax + 0x30], 0	       823	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4001359	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       824	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x400135d	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	       824	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4001364	      0xe913160000	                           jmp 0x400297c	       825	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4001369	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       827	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4001371	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       827	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4001378	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       829	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x400137c	        0x488b4030	            mov rax, qword [rax + 0x30] 	       829	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x4001380	          0x4885c0	                           test rax, rax	       829	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x4001383	            0x7427	                            je 0x40013ac	       829	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x4001385	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       830	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x4001389	        0x488b4030	            mov rax, qword [rax + 0x30] 	       830	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x400138d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       830	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x4001391	          0x8b5218	            mov edx, dword [rdx + 0x18] 	       830	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x4001394	          0xc1fa09	                              sar edx, 9	       830	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x4001397	          0x83e201	                              and edx, 1	       830	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x400139a	          0x895044	             mov dword [rax + 0x44], edx	       830	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x400139d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       831	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x40013a1	        0x488b4030	            mov rax, qword [rax + 0x30] 	       831	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x40013a5	    0xc74048010000	               mov dword [rax + 0x48], 1	       831	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x40013ac	      0xba00000000	                              mov edx, 0	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40013b1	      0xbe00000000	                              mov esi, 0	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40013b6	      0xbf00000000	                              mov edi, 0	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40013bb	      0xe800000000	                          call 0x40013c0	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40013c0	          0x4889c2	                            mov rdx, rax	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40013c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40013c7	        0x48895020	             mov qword [rax + 0x20], rdx	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40013cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40013cf	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40013d3	        0x488b4588	             mov rax, qword [rbp - 0x78]	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40013d7	        0x48895060	             mov qword [rax + 0x60], rdx	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40013db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       834	inflate.c	FUNCTION_7	SWITCH_1
0x40013df	    0xc740083f3f00	            mov dword [rax + 8], 0x3f3f 	       834	inflate.c	FUNCTION_7	SWITCH_1
0x40013e6	      0xe991150000	                           jmp 0x400297c	       835	inflate.c	FUNCTION_7	SWITCH_1
0x40013eb	        0x837da800	               cmp dword [rbp - 0x58], 0	       838	inflate.c	FUNCTION_7	SWITCH_1
0x40013ef	     0xf84a7150000	                            je 0x400299c	       838	inflate.c	FUNCTION_7	SWITCH_1
0x40013f5	        0x836da801	               sub dword [rbp - 0x58], 1	       838	inflate.c	FUNCTION_7	SWITCH_1
0x40013f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       838	inflate.c	FUNCTION_7	SWITCH_1
0x40013fd	        0x488d5001	                      lea rdx, [rax + 1]	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4001401	        0x488955c8	             mov qword [rbp - 0x38], rdx	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4001405	           0xfb600	                   movzx eax, byte [rax]	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4001408	           0xfb6d0	                           movzx edx, al	       838	inflate.c	FUNCTION_7	SWITCH_1
0x400140b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       838	inflate.c	FUNCTION_7	SWITCH_1
0x400140e	            0x89c1	                            mov ecx, eax	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4001410	          0x48d3e2	                             shl rdx, cl	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4001413	          0x4889d0	                            mov rax, rdx	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4001416	        0x480145d8	            add qword [rbp - 0x28], rax 	       838	inflate.c	FUNCTION_7	SWITCH_1
0x400141a	        0x8345b008	               add dword [rbp - 0x50], 8	       838	inflate.c	FUNCTION_7	SWITCH_1
0x400141e	        0x837db01f	           cmp dword [rbp - 0x50], 0x1f 	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4001422	            0x76c7	                           jbe 0x40013eb	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4001424	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4001428	        0x48c1e818	                           shr rax, 0x18	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x400142c	           0xfb6c0	                           movzx eax, al	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x400142f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4001433	        0x48c1ea08	                              shr rdx, 8	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4001437	    0x81e200ff0000	                         and edx, 0xff00	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x400143d	          0x4801c2	                            add rdx, rax	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4001440	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4001444	      0x2500ff0000	                         and eax, 0xff00	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4001449	        0x48c1e008	                              shl rax, 8	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x400144d	          0x4801c2	                            add rdx, rax	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4001450	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4001454	        0x48c1e018	                           shl rax, 0x18	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4001458	            0x89c0	                            mov eax, eax	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x400145a	          0x4801c2	                            add rdx, rax	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x400145d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4001461	        0x48895020	             mov qword [rax + 0x20], rdx	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4001465	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4001469	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x400146d	        0x488b4588	             mov rax, qword [rbp - 0x78]	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4001471	        0x48895060	             mov qword [rax + 0x60], rdx	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4001475	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       840	inflate.c	FUNCTION_7	SWITCH_1
0x400147d	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       840	inflate.c	FUNCTION_7	SWITCH_1
0x4001484	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       841	inflate.c	FUNCTION_7	SWITCH_1
0x4001488	    0xc740083e3f00	            mov dword [rax + 8], 0x3f3e 	       841	inflate.c	FUNCTION_7	SWITCH_1
0x400148f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       843	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4001493	          0x8b4014	            mov eax, dword [rax + 0x14] 	       843	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4001496	            0x85c0	                           test eax, eax	       843	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4001498	            0x754b	                           jne 0x40014e5	       843	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x400149a	        0x488b4588	             mov rax, qword [rbp - 0x78]	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x400149e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014a2	        0x48895018	             mov qword [rax + 0x18], rdx	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014a6	        0x488b4588	             mov rax, qword [rbp - 0x78]	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014aa	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014ad	          0x895020	             mov dword [rax + 0x20], edx	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014b0	        0x488b4588	             mov rax, qword [rbp - 0x78]	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014b4	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014b8	          0x488910	                    mov qword [rax], rdx	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014bb	        0x488b4588	             mov rax, qword [rbp - 0x78]	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014bf	          0x8b55a8	             mov edx, dword [rbp - 0x58]	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014c2	          0x895008	                mov dword [rax + 8], edx	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014c9	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014cd	        0x48895050	             mov qword [rax + 0x50], rdx	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014d5	          0x8b55b0	             mov edx, dword [rbp - 0x50]	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014d8	          0x895058	             mov dword [rax + 0x58], edx	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014db	      0xb802000000	                              mov eax, 2	       845	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014e0	      0xe927170000	                           jmp 0x4002c0c	       845	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x40014e5	      0xba00000000	                              mov edx, 0	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x40014ea	      0xbe00000000	                              mov esi, 0	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x40014ef	      0xbf00000000	                              mov edi, 0	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x40014f4	      0xe800000000	                          call 0x40014f9	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x40014f9	          0x4889c2	                            mov rdx, rax	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x40014fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x4001500	        0x48895020	             mov qword [rax + 0x20], rdx	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x4001504	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x4001508	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x400150c	        0x488b4588	             mov rax, qword [rbp - 0x78]	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x4001510	        0x48895060	             mov qword [rax + 0x60], rdx	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x4001514	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       848	inflate.c	FUNCTION_7	SWITCH_1
0x4001518	    0xc740083f3f00	            mov dword [rax + 8], 0x3f3f 	       848	inflate.c	FUNCTION_7	SWITCH_1
0x400151f	        0x837d8405	               cmp dword [rbp - 0x7c], 5	       850	inflate.c	FUNCTION_7	SWITCH_1	IF_46
0x4001523	     0xf84b3140000	                            je 0x40029dc	       850	inflate.c	FUNCTION_7	SWITCH_1	IF_46
0x4001529	        0x837d8406	               cmp dword [rbp - 0x7c], 6	       850	inflate.c	FUNCTION_7	SWITCH_1	IF_46
0x400152d	     0xf84a9140000	                            je 0x40029dc	       850	inflate.c	FUNCTION_7	SWITCH_1	IF_46
0x4001533	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       852	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4001537	          0x8b400c	              mov eax, dword [rax + 0xc]	       852	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x400153a	            0x85c0	                           test eax, eax	       852	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x400153c	            0x7453	                            je 0x4001591	       852	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x400153e	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       853	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4001541	          0x83e007	                              and eax, 7	       853	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4001544	            0x89c1	                            mov ecx, eax	       853	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4001546	        0x48d36dd8	              shr qword [rbp - 0x28], cl	       853	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x400154a	        0x8365b0f8	      and dword [rbp - 0x50], 0xfffffff8	       853	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x400154e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       854	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4001552	    0xc740084e3f00	            mov dword [rax + 8], 0x3f4e 	       854	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4001559	      0xe91e140000	                           jmp 0x400297c	       855	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x400155e	        0x837da800	               cmp dword [rbp - 0x58], 0	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4001562	     0xf8437140000	                            je 0x400299f	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4001568	        0x836da801	               sub dword [rbp - 0x58], 1	       857	inflate.c	FUNCTION_7	SWITCH_1
0x400156c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4001570	        0x488d5001	                      lea rdx, [rax + 1]	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4001574	        0x488955c8	             mov qword [rbp - 0x38], rdx	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4001578	           0xfb600	                   movzx eax, byte [rax]	       857	inflate.c	FUNCTION_7	SWITCH_1
0x400157b	           0xfb6d0	                           movzx edx, al	       857	inflate.c	FUNCTION_7	SWITCH_1
0x400157e	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4001581	            0x89c1	                            mov ecx, eax	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4001583	          0x48d3e2	                             shl rdx, cl	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4001586	          0x4889d0	                            mov rax, rdx	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4001589	        0x480145d8	            add qword [rbp - 0x28], rax 	       857	inflate.c	FUNCTION_7	SWITCH_1
0x400158d	        0x8345b008	               add dword [rbp - 0x50], 8	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4001591	        0x837db002	               cmp dword [rbp - 0x50], 2	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4001595	            0x76c7	                           jbe 0x400155e	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4001597	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       858	inflate.c	FUNCTION_7	SWITCH_1
0x400159b	          0x83e001	                              and eax, 1	       858	inflate.c	FUNCTION_7	SWITCH_1
0x400159e	            0x89c2	                            mov edx, eax	       858	inflate.c	FUNCTION_7	SWITCH_1
0x40015a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       858	inflate.c	FUNCTION_7	SWITCH_1
0x40015a4	          0x89500c	              mov dword [rax + 0xc], edx	       858	inflate.c	FUNCTION_7	SWITCH_1
0x40015a7	        0x48d16dd8	               shr qword [rbp - 0x28], 1	       859	inflate.c	FUNCTION_7	SWITCH_1
0x40015ab	        0x836db001	               sub dword [rbp - 0x50], 1	       859	inflate.c	FUNCTION_7	SWITCH_1
0x40015af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40015b3	          0x83e003	                              and eax, 3	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40015b6	          0x83f801	                              cmp eax, 1	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40015b9	            0x741e	                            je 0x40015d9	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40015bb	          0x83f801	                              cmp eax, 1	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40015be	            0x720c	                            jb 0x40015cc	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40015c0	          0x83f802	                              cmp eax, 2	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40015c3	            0x743f	                            je 0x4001604	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40015c5	          0x83f803	                              cmp eax, 3	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40015c8	            0x7447	                            je 0x4001611	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40015ca	            0xeb5f	                           jmp 0x400162b	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40015cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       864	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40015d0	    0xc74008413f00	            mov dword [rax + 8], 0x3f41 	       864	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40015d7	            0xeb52	                           jmp 0x400162b	       865	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40015d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       867	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	CALL_13
0x40015dd	          0x4889c7	                            mov rdi, rax	       867	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	CALL_13
0x40015e0	      0xe883efffff	                    call sym.fixedtables	       867	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	CALL_13
0x40015e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       870	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40015e9	    0xc74008473f00	            mov dword [rax + 8], 0x3f47 	       870	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40015f0	        0x837d8406	               cmp dword [rbp - 0x7c], 6	       871	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x40015f4	            0x7534	                           jne 0x400162a	       871	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x40015f6	      0x48c16dd802	               shr qword [rbp - 0x28], 2	       872	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x40015fb	        0x836db002	               sub dword [rbp - 0x50], 2	       872	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x40015ff	      0xe9d8130000	                           jmp 0x40029dc	       873	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x4001604	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       879	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4001608	    0xc74008443f00	            mov dword [rax + 8], 0x3f44 	       879	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x400160f	            0xeb1a	                           jmp 0x400162b	       880	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4001611	        0x488b4588	             mov rax, qword [rbp - 0x78]	       882	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4001615	    0x48c740300000	               mov qword [rax + 0x30], 0	       882	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x400161d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       883	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4001621	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	       883	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4001628	            0xeb01	                           jmp 0x400162b	       883	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x400162a	              0x90	                                     nop	       875	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x400162b	      0x48c16dd802	               shr qword [rbp - 0x28], 2	       885	inflate.c	FUNCTION_7	SWITCH_1
0x4001630	        0x836db002	               sub dword [rbp - 0x50], 2	       885	inflate.c	FUNCTION_7	SWITCH_1
0x4001634	      0xe943130000	                           jmp 0x400297c	       886	inflate.c	FUNCTION_7	SWITCH_1
0x4001639	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       888	inflate.c	FUNCTION_7	SWITCH_1
0x400163c	          0x83e007	                              and eax, 7	       888	inflate.c	FUNCTION_7	SWITCH_1
0x400163f	            0x89c1	                            mov ecx, eax	       888	inflate.c	FUNCTION_7	SWITCH_1
0x4001641	        0x48d36dd8	              shr qword [rbp - 0x28], cl	       888	inflate.c	FUNCTION_7	SWITCH_1
0x4001645	        0x8365b0f8	      and dword [rbp - 0x50], 0xfffffff8	       888	inflate.c	FUNCTION_7	SWITCH_1
0x4001649	            0xeb33	                           jmp 0x400167e	       889	inflate.c	FUNCTION_7	SWITCH_1
0x400164b	        0x837da800	               cmp dword [rbp - 0x58], 0	       889	inflate.c	FUNCTION_7	SWITCH_1
0x400164f	     0xf844d130000	                            je 0x40029a2	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001655	        0x836da801	               sub dword [rbp - 0x58], 1	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001659	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       889	inflate.c	FUNCTION_7	SWITCH_1
0x400165d	        0x488d5001	                      lea rdx, [rax + 1]	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001661	        0x488955c8	             mov qword [rbp - 0x38], rdx	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001665	           0xfb600	                   movzx eax, byte [rax]	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001668	           0xfb6d0	                           movzx edx, al	       889	inflate.c	FUNCTION_7	SWITCH_1
0x400166b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       889	inflate.c	FUNCTION_7	SWITCH_1
0x400166e	            0x89c1	                            mov ecx, eax	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001670	          0x48d3e2	                             shl rdx, cl	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001673	          0x4889d0	                            mov rax, rdx	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001676	        0x480145d8	            add qword [rbp - 0x28], rax 	       889	inflate.c	FUNCTION_7	SWITCH_1
0x400167a	        0x8345b008	               add dword [rbp - 0x50], 8	       889	inflate.c	FUNCTION_7	SWITCH_1
0x400167e	        0x837db01f	           cmp dword [rbp - 0x50], 0x1f 	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001682	            0x76c7	                           jbe 0x400164b	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001684	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x4001688	           0xfb7c0	                           movzx eax, ax	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x400168b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x400168f	        0x48c1ea10	                           shr rdx, 0x10	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x4001693	    0x4881f2ffff00	                         xor rdx, 0xffff	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x400169a	          0x4839d0	                            cmp rax, rdx	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x400169d	            0x741c	                            je 0x40016bb	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x400169f	        0x488b4588	             mov rax, qword [rbp - 0x78]	       891	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x40016a3	    0x48c740300000	               mov qword [rax + 0x30], 0	       891	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x40016ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       892	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x40016af	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	       892	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x40016b6	      0xe9c1120000	                           jmp 0x400297c	       893	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x40016bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       895	inflate.c	FUNCTION_7	SWITCH_1
0x40016bf	           0xfb7d0	                           movzx edx, ax	       895	inflate.c	FUNCTION_7	SWITCH_1
0x40016c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       895	inflate.c	FUNCTION_7	SWITCH_1
0x40016c6	          0x89505c	             mov dword [rax + 0x5c], edx	       895	inflate.c	FUNCTION_7	SWITCH_1
0x40016c9	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       898	inflate.c	FUNCTION_7	SWITCH_1
0x40016d1	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       898	inflate.c	FUNCTION_7	SWITCH_1
0x40016d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       899	inflate.c	FUNCTION_7	SWITCH_1
0x40016dc	    0xc74008423f00	            mov dword [rax + 8], 0x3f42 	       899	inflate.c	FUNCTION_7	SWITCH_1
0x40016e3	        0x837d8406	               cmp dword [rbp - 0x7c], 6	       900	inflate.c	FUNCTION_7	SWITCH_1	IF_50
0x40016e7	     0xf84b8120000	                            je 0x40029a5	       900	inflate.c	FUNCTION_7	SWITCH_1	IF_50
0x40016ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       902	inflate.c	FUNCTION_7	SWITCH_1
0x40016f1	    0xc74008433f00	            mov dword [rax + 8], 0x3f43 	       902	inflate.c	FUNCTION_7	SWITCH_1
0x40016f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       904	inflate.c	FUNCTION_7	SWITCH_1
0x40016fc	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       904	inflate.c	FUNCTION_7	SWITCH_1
0x40016ff	          0x8945b8	             mov dword [rbp - 0x48], eax	       904	inflate.c	FUNCTION_7	SWITCH_1
0x4001702	        0x837db800	               cmp dword [rbp - 0x48], 0	       905	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4001706	            0x746e	                            je 0x4001776	       905	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4001708	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       906	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_52
0x400170b	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	       906	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_52
0x400170e	            0x7606	                           jbe 0x4001716	       906	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_52
0x4001710	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       906	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_52
0x4001713	          0x8945b8	             mov dword [rbp - 0x48], eax	       906	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_52
0x4001716	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       907	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_53
0x4001719	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	       907	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_53
0x400171c	            0x7606	                           jbe 0x4001724	       907	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_53
0x400171e	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       907	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_53
0x4001721	          0x8945b8	             mov dword [rbp - 0x48], eax	       907	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_53
0x4001724	        0x837db800	               cmp dword [rbp - 0x48], 0	       908	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_54
0x4001728	     0xf847a120000	                            je 0x40029a8	       908	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_54
0x400172e	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       909	inflate.c	FUNCTION_7	SWITCH_1	IF_51	CALL_17
0x4001731	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       909	inflate.c	FUNCTION_7	SWITCH_1	IF_51	CALL_17
0x4001735	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       909	inflate.c	FUNCTION_7	SWITCH_1	IF_51	CALL_17
0x4001739	          0x4889ce	                            mov rsi, rcx	       909	inflate.c	FUNCTION_7	SWITCH_1	IF_51	CALL_17
0x400173c	          0x4889c7	                            mov rdi, rax	       909	inflate.c	FUNCTION_7	SWITCH_1	IF_51	CALL_17
0x400173f	      0xe800000000	                          call 0x4001744	       909	inflate.c	FUNCTION_7	SWITCH_1	IF_51	CALL_17
0x4001744	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       910	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4001747	          0x2945a8	             sub dword [rbp - 0x58], eax	       910	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x400174a	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       911	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x400174d	        0x480145c8	            add qword [rbp - 0x38], rax 	       911	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4001751	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       912	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4001754	          0x2945ac	             sub dword [rbp - 0x54], eax	       912	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4001757	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       913	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x400175a	        0x480145d0	            add qword [rbp - 0x30], rax 	       913	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x400175e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       914	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4001762	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       914	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4001765	          0x2b45b8	             sub eax, dword [rbp - 0x48]	       914	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4001768	            0x89c2	                            mov edx, eax	       914	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x400176a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       914	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x400176e	          0x89505c	             mov dword [rax + 0x5c], edx	       914	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4001771	      0xe906120000	                           jmp 0x400297c	       915	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4001776	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       918	inflate.c	FUNCTION_7	SWITCH_1
0x400177a	    0xc740083f3f00	            mov dword [rax + 8], 0x3f3f 	       918	inflate.c	FUNCTION_7	SWITCH_1
0x4001781	      0xe9f6110000	                           jmp 0x400297c	       919	inflate.c	FUNCTION_7	SWITCH_1
0x4001786	        0x837da800	               cmp dword [rbp - 0x58], 0	       921	inflate.c	FUNCTION_7	SWITCH_1
0x400178a	     0xf841b120000	                            je 0x40029ab	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4001790	        0x836da801	               sub dword [rbp - 0x58], 1	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4001794	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4001798	        0x488d5001	                      lea rdx, [rax + 1]	       921	inflate.c	FUNCTION_7	SWITCH_1
0x400179c	        0x488955c8	             mov qword [rbp - 0x38], rdx	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40017a0	           0xfb600	                   movzx eax, byte [rax]	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40017a3	           0xfb6d0	                           movzx edx, al	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40017a6	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40017a9	            0x89c1	                            mov ecx, eax	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40017ab	          0x48d3e2	                             shl rdx, cl	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40017ae	          0x4889d0	                            mov rax, rdx	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40017b1	        0x480145d8	            add qword [rbp - 0x28], rax 	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40017b5	        0x8345b008	               add dword [rbp - 0x50], 8	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40017b9	        0x837db00d	            cmp dword [rbp - 0x50], 0xd 	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40017bd	            0x76c7	                           jbe 0x4001786	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40017bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       922	inflate.c	FUNCTION_7	SWITCH_1
0x40017c3	          0x83e01f	                           and eax, 0x1f	       922	inflate.c	FUNCTION_7	SWITCH_1
0x40017c6	    0x8d9001010000	                  lea edx, [rax + 0x101]	       922	inflate.c	FUNCTION_7	SWITCH_1
0x40017cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       922	inflate.c	FUNCTION_7	SWITCH_1
0x40017d0	    0x899084000000	             mov dword [rax + 0x84], edx	       922	inflate.c	FUNCTION_7	SWITCH_1
0x40017d6	      0x48c16dd805	               shr qword [rbp - 0x28], 5	       923	inflate.c	FUNCTION_7	SWITCH_1
0x40017db	        0x836db005	               sub dword [rbp - 0x50], 5	       923	inflate.c	FUNCTION_7	SWITCH_1
0x40017df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       924	inflate.c	FUNCTION_7	SWITCH_1
0x40017e3	          0x83e01f	                           and eax, 0x1f	       924	inflate.c	FUNCTION_7	SWITCH_1
0x40017e6	          0x8d5001	                      lea edx, [rax + 1]	       924	inflate.c	FUNCTION_7	SWITCH_1
0x40017e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       924	inflate.c	FUNCTION_7	SWITCH_1
0x40017ed	    0x899088000000	             mov dword [rax + 0x88], edx	       924	inflate.c	FUNCTION_7	SWITCH_1
0x40017f3	      0x48c16dd805	               shr qword [rbp - 0x28], 5	       925	inflate.c	FUNCTION_7	SWITCH_1
0x40017f8	        0x836db005	               sub dword [rbp - 0x50], 5	       925	inflate.c	FUNCTION_7	SWITCH_1
0x40017fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       926	inflate.c	FUNCTION_7	SWITCH_1
0x4001800	          0x83e00f	                            and eax, 0xf	       926	inflate.c	FUNCTION_7	SWITCH_1
0x4001803	          0x8d5004	                      lea edx, [rax + 4]	       926	inflate.c	FUNCTION_7	SWITCH_1
0x4001806	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       926	inflate.c	FUNCTION_7	SWITCH_1
0x400180a	    0x899080000000	             mov dword [rax + 0x80], edx	       926	inflate.c	FUNCTION_7	SWITCH_1
0x4001810	      0x48c16dd804	               shr qword [rbp - 0x28], 4	       927	inflate.c	FUNCTION_7	SWITCH_1
0x4001815	        0x836db004	               sub dword [rbp - 0x50], 4	       927	inflate.c	FUNCTION_7	SWITCH_1
0x4001819	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       929	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x400181d	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       929	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001823	      0x3d1e010000	                          cmp eax, 0x11e	       929	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001828	            0x770f	                            ja 0x4001839	       929	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x400182a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       929	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x400182e	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	       929	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001834	          0x83f81e	                           cmp eax, 0x1e	       929	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001837	            0x761c	                           jbe 0x4001855	       929	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001839	        0x488b4588	             mov rax, qword [rbp - 0x78]	       930	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x400183d	    0x48c740300000	               mov qword [rax + 0x30], 0	       930	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001845	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       931	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001849	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	       931	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001850	      0xe927110000	                           jmp 0x400297c	       932	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001855	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       936	inflate.c	FUNCTION_7	SWITCH_1
0x4001859	    0xc7808c000000	               mov dword [rax + 0x8c], 0	       936	inflate.c	FUNCTION_7	SWITCH_1
0x4001863	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       937	inflate.c	FUNCTION_7	SWITCH_1
0x4001867	    0xc74008453f00	            mov dword [rax + 8], 0x3f45 	       937	inflate.c	FUNCTION_7	SWITCH_1
0x400186e	            0xeb7f	                           jmp 0x40018ef	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001870	        0x837da800	               cmp dword [rbp - 0x58], 0	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001874	     0xf8434110000	                            je 0x40029ae	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x400187a	        0x836da801	               sub dword [rbp - 0x58], 1	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x400187e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001882	        0x488d5001	                      lea rdx, [rax + 1]	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001886	        0x488955c8	             mov qword [rbp - 0x38], rdx	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x400188a	           0xfb600	                   movzx eax, byte [rax]	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x400188d	           0xfb6d0	                           movzx edx, al	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001890	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001893	            0x89c1	                            mov ecx, eax	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001895	          0x48d3e2	                             shl rdx, cl	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001898	          0x4889d0	                            mov rax, rdx	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x400189b	        0x480145d8	            add qword [rbp - 0x28], rax 	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x400189f	        0x8345b008	               add dword [rbp - 0x50], 8	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018a3	        0x837db002	               cmp dword [rbp - 0x50], 2	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018a7	            0x76c7	                           jbe 0x4001870	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018ad	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018b3	          0x8d4801	                      lea ecx, [rax + 1]	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018b6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018ba	    0x898a8c000000	             mov dword [rdx + 0x8c], ecx	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018c0	            0x89c0	                            mov eax, eax	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018c2	     0xfb784000000	             movzx eax, word [rax + rax]	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018ca	           0xfb7d0	                           movzx edx, ax	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018cd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018d1	          0x83e007	                              and eax, 7	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018d4	            0x89c1	                            mov ecx, eax	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018da	          0x4863d2	                         movsxd rdx, edx	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018dd	        0x4883c248	                           add rdx, 0x48	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018e1	      0x66894c5008	          mov word [rax + rdx*2 + 8], cx	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018e6	      0x48c16dd803	               shr qword [rbp - 0x28], 3	       942	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018eb	        0x836db003	               sub dword [rbp - 0x50], 3	       942	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018f3	    0x8b908c000000	            mov edx, dword [rax + 0x8c] 	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40018fd	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001903	            0x39c2	                            cmp edx, eax	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001905	            0x729c	                            jb 0x40018a3	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001907	            0xeb36	                           jmp 0x400193f	       944	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001909	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x400190d	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001913	          0x8d4801	                      lea ecx, [rax + 1]	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001916	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x400191a	    0x898a8c000000	             mov dword [rdx + 0x8c], ecx	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001920	            0x89c0	                            mov eax, eax	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001922	     0xfb784000000	             movzx eax, word [rax + rax]	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x400192a	           0xfb7d0	                           movzx edx, ax	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x400192d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001931	          0x4863d2	                         movsxd rdx, edx	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001934	        0x4883c248	                           add rdx, 0x48	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001938	    0x66c744500800	           mov word [rax + rdx*2 + 8], 0	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x400193f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       944	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001943	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	       944	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001949	          0x83f812	                           cmp eax, 0x12	       944	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x400194c	            0x76bb	                           jbe 0x4001909	       944	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x400194e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       946	inflate.c	FUNCTION_7	SWITCH_1
0x4001952	    0x488d90580500	                  lea rdx, [rax + 0x558]	       946	inflate.c	FUNCTION_7	SWITCH_1
0x4001959	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       946	inflate.c	FUNCTION_7	SWITCH_1
0x400195d	    0x488990900000	             mov qword [rax + 0x90], rdx	       946	inflate.c	FUNCTION_7	SWITCH_1
0x4001964	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       947	inflate.c	FUNCTION_7	SWITCH_1
0x4001968	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	       947	inflate.c	FUNCTION_7	SWITCH_1
0x400196f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       947	inflate.c	FUNCTION_7	SWITCH_1
0x4001973	        0x48895068	             mov qword [rax + 0x68], rdx	       947	inflate.c	FUNCTION_7	SWITCH_1
0x4001977	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       948	inflate.c	FUNCTION_7	SWITCH_1
0x400197b	    0xc74078070000	               mov dword [rax + 0x78], 7	       948	inflate.c	FUNCTION_7	SWITCH_1
0x4001982	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       950	inflate.c	FUNCTION_7	SWITCH_1
0x4001986	    0x488db0180300	                  lea rsi, [rax + 0x318]	       950	inflate.c	FUNCTION_7	SWITCH_1
0x400198d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x4001991	        0x488d4878	                   lea rcx, [rax + 0x78]	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x4001995	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x4001999	    0x488d90900000	                   lea rdx, [rax + 0x90]	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x40019a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x40019a4	    0x480598000000	                           add rax, 0x98	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x40019aa	          0x4989f1	                             mov r9, rsi	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x40019ad	          0x4989c8	                             mov r8, rcx	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x40019b0	          0x4889d1	                            mov rcx, rdx	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x40019b3	      0xba13000000	                           mov edx, 0x13	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x40019b8	          0x4889c6	                            mov rsi, rax	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x40019bb	      0xbf00000000	                              mov edi, 0	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x40019c0	      0xe800000000	                          call 0x40019c5	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x40019c5	          0x8945c0	             mov dword [rbp - 0x40], eax	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x40019c8	        0x837dc000	               cmp dword [rbp - 0x40], 0	       951	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x40019cc	            0x741c	                            je 0x40019ea	       951	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x40019ce	        0x488b4588	             mov rax, qword [rbp - 0x78]	       952	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x40019d2	    0x48c740300000	               mov qword [rax + 0x30], 0	       952	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x40019da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       953	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x40019de	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	       953	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x40019e5	      0xe9920f0000	                           jmp 0x400297c	       954	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x40019ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       957	inflate.c	FUNCTION_7	SWITCH_1
0x40019ee	    0xc7808c000000	               mov dword [rax + 0x8c], 0	       957	inflate.c	FUNCTION_7	SWITCH_1
0x40019f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       958	inflate.c	FUNCTION_7	SWITCH_1
0x40019fc	    0xc74008463f00	            mov dword [rax + 8], 0x3f46 	       958	inflate.c	FUNCTION_7	SWITCH_1
0x4001a03	      0xe90e030000	                           jmp 0x4001d16	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x4001a08	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a0c	        0x488b5068	            mov rdx, qword [rax + 0x68] 	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a10	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a14	            0x89c6	                            mov esi, eax	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a16	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a1a	          0x8b4078	            mov eax, dword [rax + 0x78] 	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a1d	      0xbf01000000	                              mov edi, 1	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a22	            0x89c1	                            mov ecx, eax	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a24	            0xd3e7	                             shl edi, cl	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a26	            0x89f8	                            mov eax, edi	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a28	          0x83e801	                              sub eax, 1	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a2b	            0x21f0	                            and eax, esi	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a2d	            0x89c0	                            mov eax, eax	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a2f	        0x48c1e002	                              shl rax, 2	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a33	          0x4801d0	                            add rax, rdx	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a36	            0x8b00	                    mov eax, dword [rax]	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a38	          0x894590	             mov dword [rbp - 0x70], eax	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a3b	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4001a3f	           0xfb6c0	                           movzx eax, al	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4001a42	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4001a45	            0x7635	                           jbe 0x4001a7c	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4001a47	        0x837da800	               cmp dword [rbp - 0x58], 0	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a4b	     0xf84600f0000	                            je 0x40029b1	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a51	        0x836da801	               sub dword [rbp - 0x58], 1	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a55	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a59	        0x488d5001	                      lea rdx, [rax + 1]	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a5d	        0x488955c8	             mov qword [rbp - 0x38], rdx	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a61	           0xfb600	                   movzx eax, byte [rax]	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a64	           0xfb6d0	                           movzx edx, al	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a67	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a6a	            0x89c1	                            mov ecx, eax	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a6c	          0x48d3e2	                             shl rdx, cl	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a6f	          0x4889d0	                            mov rax, rdx	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a72	        0x480145d8	            add qword [rbp - 0x28], rax 	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a76	        0x8345b008	               add dword [rbp - 0x50], 8	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a7a	            0xeb8c	                           jmp 0x4001a08	       965	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001a7c	              0x90	                                     nop	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4001a7d	         0xfb74592	            movzx eax, word [rbp - 0x6e]	       966	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001a81	        0x6683f80f	                             cmp ax, 0xf	       966	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001a85	            0x7746	                            ja 0x4001acd	       966	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001a87	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	       967	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001a8b	           0xfb6c0	                           movzx eax, al	       967	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001a8e	            0x89c1	                            mov ecx, eax	       967	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001a90	        0x48d36dd8	              shr qword [rbp - 0x28], cl	       967	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001a94	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	       967	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001a98	           0xfb6c0	                           movzx eax, al	       967	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001a9b	          0x2945b0	             sub dword [rbp - 0x50], eax	       967	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001a9e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001aa2	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001aa8	          0x8d4801	                      lea ecx, [rax + 1]	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001aab	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001aaf	    0x898a8c000000	             mov dword [rdx + 0x8c], ecx	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001ab5	         0xfb74d92	            movzx ecx, word [rbp - 0x6e]	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001ab9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001abd	            0x89c0	                            mov eax, eax	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001abf	        0x4883c048	                           add rax, 0x48	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001ac3	      0x66894c4208	          mov word [rdx + rax*2 + 8], cx	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001ac8	      0xe949020000	                           jmp 0x4001d16	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001acd	         0xfb74592	            movzx eax, word [rbp - 0x6e]	       971	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001ad1	        0x6683f810	                            cmp ax, 0x10	       971	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001ad5	     0xf85c2000000	                           jne 0x4001b9d	       971	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001adb	            0xeb33	                           jmp 0x4001b10	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001add	        0x837da800	               cmp dword [rbp - 0x58], 0	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001ae1	     0xf84cd0e0000	                            je 0x40029b4	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001ae7	        0x836da801	               sub dword [rbp - 0x58], 1	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001aeb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001aef	        0x488d5001	                      lea rdx, [rax + 1]	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001af3	        0x488955c8	             mov qword [rbp - 0x38], rdx	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001af7	           0xfb600	                   movzx eax, byte [rax]	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001afa	           0xfb6d0	                           movzx edx, al	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001afd	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b00	            0x89c1	                            mov ecx, eax	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b02	          0x48d3e2	                             shl rdx, cl	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b05	          0x4889d0	                            mov rax, rdx	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b08	        0x480145d8	            add qword [rbp - 0x28], rax 	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b0c	        0x8345b008	               add dword [rbp - 0x50], 8	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b10	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b14	           0xfb6c0	                           movzx eax, al	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b17	          0x83c002	                              add eax, 2	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b1a	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b1d	            0x77be	                            ja 0x4001add	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b1f	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	       973	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b23	           0xfb6c0	                           movzx eax, al	       973	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b26	            0x89c1	                            mov ecx, eax	       973	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b28	        0x48d36dd8	              shr qword [rbp - 0x28], cl	       973	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b2c	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	       973	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b30	           0xfb6c0	                           movzx eax, al	       973	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b33	          0x2945b0	             sub dword [rbp - 0x50], eax	       973	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b36	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       974	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59	IF_60
0x4001b3a	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	       974	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59	IF_60
0x4001b40	            0x85c0	                           test eax, eax	       974	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59	IF_60
0x4001b42	            0x751c	                           jne 0x4001b60	       974	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59	IF_60
0x4001b44	        0x488b4588	             mov rax, qword [rbp - 0x78]	       975	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59	IF_60
0x4001b48	    0x48c740300000	               mov qword [rax + 0x30], 0	       975	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59	IF_60
0x4001b50	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       976	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59	IF_60
0x4001b54	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	       976	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59	IF_60
0x4001b5b	      0xe9de010000	                           jmp 0x4001d3e	       977	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59	IF_60
0x4001b60	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       979	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b64	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	       979	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b6a	          0x8d50ff	                      lea edx, [rax - 1]	       979	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b6d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       979	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b71	            0x89d2	                            mov edx, edx	       979	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b73	        0x4883c248	                           add rdx, 0x48	       979	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b77	       0xfb7445008	      movzx eax, word [rax + rdx*2 + 8] 	       979	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b7c	           0xfb7c0	                           movzx eax, ax	       979	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b7f	          0x8945bc	             mov dword [rbp - 0x44], eax	       979	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b82	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       980	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b86	          0x83e003	                              and eax, 3	       980	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b89	          0x83c003	                              add eax, 3	       980	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b8c	          0x8945b8	             mov dword [rbp - 0x48], eax	       980	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b8f	      0x48c16dd802	               shr qword [rbp - 0x28], 2	       981	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b94	        0x836db002	               sub dword [rbp - 0x50], 2	       981	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b98	      0xe9fe000000	                           jmp 0x4001c9b	       981	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001b9d	         0xfb74592	            movzx eax, word [rbp - 0x6e]	       983	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001ba1	        0x6683f811	                            cmp ax, 0x11	       983	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001ba5	     0xf85ad000000	                           jne 0x4001c58	       983	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bab	            0xeb33	                           jmp 0x4001be0	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bad	        0x837da800	               cmp dword [rbp - 0x58], 0	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bb1	     0xf84000e0000	                            je 0x40029b7	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bb7	        0x836da801	               sub dword [rbp - 0x58], 1	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bbb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bbf	        0x488d5001	                      lea rdx, [rax + 1]	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bc3	        0x488955c8	             mov qword [rbp - 0x38], rdx	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bc7	           0xfb600	                   movzx eax, byte [rax]	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bca	           0xfb6d0	                           movzx edx, al	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bcd	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bd0	            0x89c1	                            mov ecx, eax	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bd2	          0x48d3e2	                             shl rdx, cl	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bd5	          0x4889d0	                            mov rax, rdx	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bd8	        0x480145d8	            add qword [rbp - 0x28], rax 	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bdc	        0x8345b008	               add dword [rbp - 0x50], 8	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001be0	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001be4	           0xfb6c0	                           movzx eax, al	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001be7	          0x83c003	                              add eax, 3	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bea	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bed	            0x77be	                            ja 0x4001bad	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bef	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	       985	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bf3	           0xfb6c0	                           movzx eax, al	       985	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bf6	            0x89c1	                            mov ecx, eax	       985	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bf8	        0x48d36dd8	              shr qword [rbp - 0x28], cl	       985	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001bfc	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	       985	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001c00	           0xfb6c0	                           movzx eax, al	       985	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001c03	          0x2945b0	             sub dword [rbp - 0x50], eax	       985	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001c06	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       986	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001c0d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       987	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001c11	          0x83e007	                              and eax, 7	       987	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001c14	          0x83c003	                              add eax, 3	       987	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001c17	          0x8945b8	             mov dword [rbp - 0x48], eax	       987	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001c1a	      0x48c16dd803	               shr qword [rbp - 0x28], 3	       988	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001c1f	        0x836db003	               sub dword [rbp - 0x50], 3	       988	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001c23	            0xeb76	                           jmp 0x4001c9b	       988	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001c25	        0x837da800	               cmp dword [rbp - 0x58], 0	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c29	     0xf848b0d0000	                            je 0x40029ba	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c2f	        0x836da801	               sub dword [rbp - 0x58], 1	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c33	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c37	        0x488d5001	                      lea rdx, [rax + 1]	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c3b	        0x488955c8	             mov qword [rbp - 0x38], rdx	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c3f	           0xfb600	                   movzx eax, byte [rax]	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c42	           0xfb6d0	                           movzx edx, al	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c45	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c48	            0x89c1	                            mov ecx, eax	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c4a	          0x48d3e2	                             shl rdx, cl	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c4d	          0x4889d0	                            mov rax, rdx	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c50	        0x480145d8	            add qword [rbp - 0x28], rax 	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c54	        0x8345b008	               add dword [rbp - 0x50], 8	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c58	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c5c	           0xfb6c0	                           movzx eax, al	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c5f	          0x83c007	                              add eax, 7	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c62	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c65	            0x77be	                            ja 0x4001c25	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c67	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	       992	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c6b	           0xfb6c0	                           movzx eax, al	       992	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c6e	            0x89c1	                            mov ecx, eax	       992	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c70	        0x48d36dd8	              shr qword [rbp - 0x28], cl	       992	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c74	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	       992	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c78	           0xfb6c0	                           movzx eax, al	       992	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c7b	          0x2945b0	             sub dword [rbp - 0x50], eax	       992	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c7e	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       993	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       994	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c89	          0x83e07f	                           and eax, 0x7f	       994	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c8c	          0x83c00b	                            add eax, 0xb	       994	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c8f	          0x8945b8	             mov dword [rbp - 0x48], eax	       994	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c92	      0x48c16dd807	               shr qword [rbp - 0x28], 7	       995	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c97	        0x836db007	               sub dword [rbp - 0x50], 7	       995	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001c9b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001c9f	    0x8b908c000000	            mov edx, dword [rax + 0x8c] 	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001ca5	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001ca8	          0x8d0c02	                    lea ecx, [rdx + rax]	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001cab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001caf	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001cb5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001cb9	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001cbf	             0x1d0	                            add eax, edx	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001cc1	            0x39c1	                            cmp ecx, eax	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001cc3	            0x7644	                           jbe 0x4001d09	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001cc5	        0x488b4588	             mov rax, qword [rbp - 0x78]	       998	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001cc9	    0x48c740300000	               mov qword [rax + 0x30], 0	       998	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001cd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       999	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001cd5	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	       999	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001cdc	            0xeb60	                           jmp 0x4001d3e	      1000	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001cde	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1003	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001ce2	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      1003	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001ce8	          0x8d4801	                      lea ecx, [rax + 1]	      1003	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001ceb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1003	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001cef	    0x898a8c000000	             mov dword [rdx + 0x8c], ecx	      1003	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001cf5	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      1003	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001cf8	            0x89d1	                            mov ecx, edx	      1003	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001cfa	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1003	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001cfe	            0x89c0	                            mov eax, eax	      1003	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001d00	        0x4883c048	                           add rax, 0x48	      1003	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001d04	      0x66894c4208	          mov word [rdx + rax*2 + 8], cx	      1003	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001d09	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1002	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001d0c	          0x8d50ff	                      lea edx, [rax - 1]	      1002	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001d0f	          0x8955b8	             mov dword [rbp - 0x48], edx	      1002	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001d12	            0x85c0	                           test eax, eax	      1002	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001d14	            0x75c8	                           jne 0x4001cde	      1002	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001d16	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x4001d1a	    0x8b908c000000	            mov edx, dword [rax + 0x8c] 	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x4001d20	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x4001d24	    0x8b8884000000	            mov ecx, dword [rax + 0x84] 	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x4001d2a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x4001d2e	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x4001d34	             0x1c8	                            add eax, ecx	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x4001d36	            0x39c2	                            cmp edx, eax	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x4001d38	     0xf82cafcffff	                            jb 0x4001a08	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x4001d3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1008	inflate.c	FUNCTION_7	SWITCH_1	IF_63
0x4001d42	          0x8b4008	                mov eax, dword [rax + 8]	      1008	inflate.c	FUNCTION_7	SWITCH_1	IF_63
0x4001d45	      0x3d513f0000	                         cmp eax, 0x3f51	      1008	inflate.c	FUNCTION_7	SWITCH_1	IF_63
0x4001d4a	     0xf841f0c0000	                            je 0x400296f	      1008	inflate.c	FUNCTION_7	SWITCH_1	IF_63
0x4001d50	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1011	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001d54	     0xfb780980200	          movzx eax, word [rax + 0x298] 	      1011	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001d5b	          0x6685c0	                             test ax, ax	      1011	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001d5e	            0x751c	                           jne 0x4001d7c	      1011	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001d60	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1012	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001d64	    0x48c740300000	               mov qword [rax + 0x30], 0	      1012	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001d6c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1013	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001d70	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	      1013	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001d77	      0xe9000c0000	                           jmp 0x400297c	      1014	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001d7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1020	inflate.c	FUNCTION_7	SWITCH_1
0x4001d80	    0x488d90580500	                  lea rdx, [rax + 0x558]	      1020	inflate.c	FUNCTION_7	SWITCH_1
0x4001d87	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1020	inflate.c	FUNCTION_7	SWITCH_1
0x4001d8b	    0x488990900000	             mov qword [rax + 0x90], rdx	      1020	inflate.c	FUNCTION_7	SWITCH_1
0x4001d92	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1021	inflate.c	FUNCTION_7	SWITCH_1
0x4001d96	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      1021	inflate.c	FUNCTION_7	SWITCH_1
0x4001d9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1021	inflate.c	FUNCTION_7	SWITCH_1
0x4001da1	        0x48895068	             mov qword [rax + 0x68], rdx	      1021	inflate.c	FUNCTION_7	SWITCH_1
0x4001da5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1022	inflate.c	FUNCTION_7	SWITCH_1
0x4001da9	    0xc74078090000	               mov dword [rax + 0x78], 9	      1022	inflate.c	FUNCTION_7	SWITCH_1
0x4001db0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1024	inflate.c	FUNCTION_7	SWITCH_1
0x4001db4	    0x4c8d80180300	                   lea r8, [rax + 0x318]	      1024	inflate.c	FUNCTION_7	SWITCH_1
0x4001dbb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4001dbf	        0x488d7878	                   lea rdi, [rax + 0x78]	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4001dc3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4001dc7	    0x488d90900000	                   lea rdx, [rax + 0x90]	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4001dce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4001dd2	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4001dd8	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4001ddc	    0x488db1980000	                   lea rsi, [rcx + 0x98]	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4001de3	          0x4d89c1	                              mov r9, r8	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4001de6	          0x4989f8	                             mov r8, rdi	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4001de9	          0x4889d1	                            mov rcx, rdx	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4001dec	            0x89c2	                            mov edx, eax	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4001dee	      0xbf01000000	                              mov edi, 1	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4001df3	      0xe800000000	                          call 0x4001df8	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4001df8	          0x8945c0	             mov dword [rbp - 0x40], eax	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4001dfb	        0x837dc000	               cmp dword [rbp - 0x40], 0	      1025	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x4001dff	            0x741c	                            je 0x4001e1d	      1025	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x4001e01	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1026	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x4001e05	    0x48c740300000	               mov qword [rax + 0x30], 0	      1026	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x4001e0d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1027	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x4001e11	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	      1027	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x4001e18	      0xe95f0b0000	                           jmp 0x400297c	      1028	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x4001e1d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1030	inflate.c	FUNCTION_7	SWITCH_1
0x4001e21	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      1030	inflate.c	FUNCTION_7	SWITCH_1
0x4001e28	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1030	inflate.c	FUNCTION_7	SWITCH_1
0x4001e2c	        0x48895070	             mov qword [rax + 0x70], rdx	      1030	inflate.c	FUNCTION_7	SWITCH_1
0x4001e30	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1031	inflate.c	FUNCTION_7	SWITCH_1
0x4001e34	    0xc7407c060000	               mov dword [rax + 0x7c], 6	      1031	inflate.c	FUNCTION_7	SWITCH_1
0x4001e3b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1033	inflate.c	FUNCTION_7	SWITCH_1
0x4001e3f	    0x4c8d80180300	                   lea r8, [rax + 0x318]	      1033	inflate.c	FUNCTION_7	SWITCH_1
0x4001e46	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e4a	        0x488d787c	                   lea rdi, [rax + 0x7c]	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e4e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e52	    0x488d88900000	                   lea rcx, [rax + 0x90]	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e59	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e5d	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e63	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e67	    0x488db2980000	                   lea rsi, [rdx + 0x98]	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e6e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e72	    0x8b9284000000	            mov edx, dword [rdx + 0x84] 	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e78	            0x89d2	                            mov edx, edx	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e7a	          0x4801d2	                            add rdx, rdx	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e7d	          0x4801d6	                            add rsi, rdx	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e80	          0x4d89c1	                              mov r9, r8	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e83	          0x4989f8	                             mov r8, rdi	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e86	            0x89c2	                            mov edx, eax	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e88	      0xbf02000000	                              mov edi, 2	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e8d	      0xe800000000	                          call 0x4001e92	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e92	          0x8945c0	             mov dword [rbp - 0x40], eax	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001e95	        0x837dc000	               cmp dword [rbp - 0x40], 0	      1034	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4001e99	            0x741c	                            je 0x4001eb7	      1034	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4001e9b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1035	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4001e9f	    0x48c740300000	               mov qword [rax + 0x30], 0	      1035	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4001ea7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1036	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4001eab	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	      1036	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4001eb2	      0xe9c50a0000	                           jmp 0x400297c	      1037	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4001eb7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1040	inflate.c	FUNCTION_7	SWITCH_1
0x4001ebb	    0xc74008473f00	            mov dword [rax + 8], 0x3f47 	      1040	inflate.c	FUNCTION_7	SWITCH_1
0x4001ec2	        0x837d8406	               cmp dword [rbp - 0x7c], 6	      1041	inflate.c	FUNCTION_7	SWITCH_1	IF_67
0x4001ec6	     0xf84f10a0000	                            je 0x40029bd	      1041	inflate.c	FUNCTION_7	SWITCH_1	IF_67
0x4001ecc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1043	inflate.c	FUNCTION_7	SWITCH_1
0x4001ed0	    0xc74008483f00	            mov dword [rax + 8], 0x3f48 	      1043	inflate.c	FUNCTION_7	SWITCH_1
0x4001ed7	        0x837da805	               cmp dword [rbp - 0x58], 5	      1045	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001edb	     0xf86c5000000	                           jbe 0x4001fa6	      1045	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001ee1	    0x817dac010100	          cmp dword [rbp - 0x54], 0x101 	      1045	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001ee8	     0xf86b8000000	                           jbe 0x4001fa6	      1045	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001eee	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001ef2	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001ef6	        0x48895018	             mov qword [rax + 0x18], rdx	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001efa	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001efe	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f01	          0x895020	             mov dword [rax + 0x20], edx	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f04	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f08	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f0c	          0x488910	                    mov qword [rax], rdx	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f0f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f13	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f16	          0x895008	                mov dword [rax + 8], edx	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f19	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f1d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f21	        0x48895050	             mov qword [rax + 0x50], rdx	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f29	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f2c	          0x895058	             mov dword [rax + 0x58], edx	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f2f	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1047	inflate.c	FUNCTION_7	SWITCH_1	IF_68	CALL_25
0x4001f32	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1047	inflate.c	FUNCTION_7	SWITCH_1	IF_68	CALL_25
0x4001f36	            0x89d6	                            mov esi, edx	      1047	inflate.c	FUNCTION_7	SWITCH_1	IF_68	CALL_25
0x4001f38	          0x4889c7	                            mov rdi, rax	      1047	inflate.c	FUNCTION_7	SWITCH_1	IF_68	CALL_25
0x4001f3b	      0xe800000000	                          call 0x4001f40	      1047	inflate.c	FUNCTION_7	SWITCH_1	IF_68	CALL_25
0x4001f40	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f44	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f48	        0x488945d0	             mov qword [rbp - 0x30], rax	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f4c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f50	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f53	          0x8945ac	             mov dword [rbp - 0x54], eax	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f56	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f5a	          0x488b00	                    mov rax, qword [rax]	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f5d	        0x488945c8	             mov qword [rbp - 0x38], rax	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f61	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f65	          0x8b4008	                mov eax, dword [rax + 8]	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f68	          0x8945a8	             mov dword [rbp - 0x58], eax	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f6f	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f73	        0x488945d8	             mov qword [rbp - 0x28], rax	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f7b	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f7e	          0x8945b0	             mov dword [rbp - 0x50], eax	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001f81	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1049	inflate.c	FUNCTION_7	SWITCH_1	IF_68	IF_69
0x4001f85	          0x8b4008	                mov eax, dword [rax + 8]	      1049	inflate.c	FUNCTION_7	SWITCH_1	IF_68	IF_69
0x4001f88	      0x3d3f3f0000	                         cmp eax, 0x3f3f	      1049	inflate.c	FUNCTION_7	SWITCH_1	IF_68	IF_69
0x4001f8d	     0xf85e2090000	                           jne 0x4002975	      1049	inflate.c	FUNCTION_7	SWITCH_1	IF_68	IF_69
0x4001f93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1050	inflate.c	FUNCTION_7	SWITCH_1	IF_68	IF_69
0x4001f97	    0xc780ec1b0000	   mov dword [rax + 0x1bec], 0xffffffff 	      1050	inflate.c	FUNCTION_7	SWITCH_1	IF_68	IF_69
0x4001fa1	      0xe9cf090000	                           jmp 0x4002975	      1051	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001fa6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1053	inflate.c	FUNCTION_7	SWITCH_1
0x4001faa	    0xc780ec1b0000	            mov dword [rax + 0x1bec], 0 	      1053	inflate.c	FUNCTION_7	SWITCH_1
0x4001fb4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001fb8	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001fbc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001fc0	            0x89c6	                            mov esi, eax	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001fc2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001fc6	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001fc9	      0xbf01000000	                              mov edi, 1	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001fce	            0x89c1	                            mov ecx, eax	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001fd0	            0xd3e7	                             shl edi, cl	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001fd2	            0x89f8	                            mov eax, edi	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001fd4	          0x83e801	                              sub eax, 1	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001fd7	            0x21f0	                            and eax, esi	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001fd9	            0x89c0	                            mov eax, eax	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001fdb	        0x48c1e002	                              shl rax, 2	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001fdf	          0x4801d0	                            add rax, rdx	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001fe2	            0x8b00	                    mov eax, dword [rax]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001fe4	          0x894590	             mov dword [rbp - 0x70], eax	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001fe7	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x4001feb	           0xfb6c0	                           movzx eax, al	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x4001fee	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x4001ff1	            0x7635	                           jbe 0x4002028	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x4001ff3	        0x837da800	               cmp dword [rbp - 0x58], 0	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001ff7	     0xf84c3090000	                            je 0x40029c0	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001ffd	        0x836da801	               sub dword [rbp - 0x58], 1	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4002001	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4002005	        0x488d5001	                      lea rdx, [rax + 1]	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4002009	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400200d	           0xfb600	                   movzx eax, byte [rax]	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4002010	           0xfb6d0	                           movzx edx, al	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4002013	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4002016	            0x89c1	                            mov ecx, eax	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4002018	          0x48d3e2	                             shl rdx, cl	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400201b	          0x4889d0	                            mov rax, rdx	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400201e	        0x480145d8	            add qword [rbp - 0x28], rax 	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4002022	        0x8345b008	               add dword [rbp - 0x50], 8	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4002026	            0xeb8c	                           jmp 0x4001fb4	      1058	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4002028	              0x90	                                     nop	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x4002029	         0xfb64590	            movzx eax, byte [rbp - 0x70]	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x400202d	            0x84c0	                             test al, al	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x400202f	     0xf84f1000000	                            je 0x4002126	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4002035	         0xfb64590	            movzx eax, byte [rbp - 0x70]	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4002039	           0xfb6c0	                           movzx eax, al	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x400203c	      0x25f0000000	                           and eax, 0xf0	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4002041	            0x85c0	                           test eax, eax	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4002043	     0xf85dd000000	                           jne 0x4002126	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4002049	          0x8b4590	             mov eax, dword [rbp - 0x70]	      1060	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x400204c	          0x8945a0	             mov dword [rbp - 0x60], eax	      1060	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x400204f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4002053	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4002057	         0xfb745a2	            movzx eax, word [rbp - 0x5e]	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400205b	           0xfb7f0	                           movzx esi, ax	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400205e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4002062	            0x89c7	                            mov edi, eax	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4002064	         0xfb645a1	            movzx eax, byte [rbp - 0x5f]	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4002068	           0xfb6c8	                           movzx ecx, al	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400206b	         0xfb645a0	            movzx eax, byte [rbp - 0x60]	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400206f	           0xfb6c0	                           movzx eax, al	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4002072	             0x1c8	                            add eax, ecx	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4002074	    0x41b801000000	                              mov r8d, 1	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400207a	            0x89c1	                            mov ecx, eax	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400207c	          0x41d3e0	                             shl r8d, cl	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400207f	          0x4489c0	                            mov eax, r8d	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4002082	          0x83e801	                              sub eax, 1	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4002085	            0x21c7	                            and edi, eax	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4002087	         0xfb645a1	            movzx eax, byte [rbp - 0x5f]	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400208b	           0xfb6c0	                           movzx eax, al	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400208e	            0x89c1	                            mov ecx, eax	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4002090	            0xd3ef	                             shr edi, cl	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4002092	            0x89f8	                            mov eax, edi	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4002094	             0x1f0	                            add eax, esi	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4002096	            0x89c0	                            mov eax, eax	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4002098	        0x48c1e002	                              shl rax, 2	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400209c	          0x4801d0	                            add rax, rdx	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400209f	            0x8b00	                    mov eax, dword [rax]	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40020a1	          0x894590	             mov dword [rbp - 0x70], eax	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40020a4	         0xfb645a1	            movzx eax, byte [rbp - 0x5f]	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x40020a8	           0xfb6d0	                           movzx edx, al	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x40020ab	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x40020af	           0xfb6c0	                           movzx eax, al	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x40020b2	             0x1d0	                            add eax, edx	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x40020b4	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x40020b7	            0x7638	                           jbe 0x40020f1	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x40020b9	        0x837da800	               cmp dword [rbp - 0x58], 0	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40020bd	     0xf8400090000	                            je 0x40029c3	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40020c3	        0x836da801	               sub dword [rbp - 0x58], 1	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40020c7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40020cb	        0x488d5001	                      lea rdx, [rax + 1]	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40020cf	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40020d3	           0xfb600	                   movzx eax, byte [rax]	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40020d6	           0xfb6d0	                           movzx edx, al	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40020d9	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40020dc	            0x89c1	                            mov ecx, eax	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40020de	          0x48d3e2	                             shl rdx, cl	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40020e1	          0x4889d0	                            mov rax, rdx	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40020e4	        0x480145d8	            add qword [rbp - 0x28], rax 	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40020e8	        0x8345b008	               add dword [rbp - 0x50], 8	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40020ec	      0xe95effffff	                           jmp 0x400204f	      1066	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40020f1	              0x90	                                     nop	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x40020f2	         0xfb645a1	            movzx eax, byte [rbp - 0x5f]	      1067	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x40020f6	           0xfb6c0	                           movzx eax, al	      1067	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x40020f9	            0x89c1	                            mov ecx, eax	      1067	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x40020fb	        0x48d36dd8	              shr qword [rbp - 0x28], cl	      1067	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x40020ff	         0xfb645a1	            movzx eax, byte [rbp - 0x5f]	      1067	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4002103	           0xfb6c0	                           movzx eax, al	      1067	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4002106	          0x2945b0	             sub dword [rbp - 0x50], eax	      1067	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4002109	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1068	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x400210d	    0x8b90ec1b0000	          mov edx, dword [rax + 0x1bec] 	      1068	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4002113	         0xfb645a1	            movzx eax, byte [rbp - 0x5f]	      1068	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4002117	           0xfb6c0	                           movzx eax, al	      1068	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x400211a	             0x1c2	                            add edx, eax	      1068	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x400211c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1068	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4002120	    0x8990ec1b0000	          mov dword [rax + 0x1bec], edx 	      1068	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4002126	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	      1070	inflate.c	FUNCTION_7	SWITCH_1
0x400212a	           0xfb6c0	                           movzx eax, al	      1070	inflate.c	FUNCTION_7	SWITCH_1
0x400212d	            0x89c1	                            mov ecx, eax	      1070	inflate.c	FUNCTION_7	SWITCH_1
0x400212f	        0x48d36dd8	              shr qword [rbp - 0x28], cl	      1070	inflate.c	FUNCTION_7	SWITCH_1
0x4002133	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	      1070	inflate.c	FUNCTION_7	SWITCH_1
0x4002137	           0xfb6c0	                           movzx eax, al	      1070	inflate.c	FUNCTION_7	SWITCH_1
0x400213a	          0x2945b0	             sub dword [rbp - 0x50], eax	      1070	inflate.c	FUNCTION_7	SWITCH_1
0x400213d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1071	inflate.c	FUNCTION_7	SWITCH_1
0x4002141	    0x8b90ec1b0000	          mov edx, dword [rax + 0x1bec] 	      1071	inflate.c	FUNCTION_7	SWITCH_1
0x4002147	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	      1071	inflate.c	FUNCTION_7	SWITCH_1
0x400214b	           0xfb6c0	                           movzx eax, al	      1071	inflate.c	FUNCTION_7	SWITCH_1
0x400214e	             0x1c2	                            add edx, eax	      1071	inflate.c	FUNCTION_7	SWITCH_1
0x4002150	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1071	inflate.c	FUNCTION_7	SWITCH_1
0x4002154	    0x8990ec1b0000	          mov dword [rax + 0x1bec], edx 	      1071	inflate.c	FUNCTION_7	SWITCH_1
0x400215a	         0xfb74592	            movzx eax, word [rbp - 0x6e]	      1072	inflate.c	FUNCTION_7	SWITCH_1
0x400215e	           0xfb7d0	                           movzx edx, ax	      1072	inflate.c	FUNCTION_7	SWITCH_1
0x4002161	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1072	inflate.c	FUNCTION_7	SWITCH_1
0x4002165	          0x89505c	             mov dword [rax + 0x5c], edx	      1072	inflate.c	FUNCTION_7	SWITCH_1
0x4002168	         0xfb64590	            movzx eax, byte [rbp - 0x70]	      1073	inflate.c	FUNCTION_7	SWITCH_1	IF_73
0x400216c	            0x84c0	                             test al, al	      1073	inflate.c	FUNCTION_7	SWITCH_1	IF_73
0x400216e	            0x7510	                           jne 0x4002180	      1073	inflate.c	FUNCTION_7	SWITCH_1	IF_73
0x4002170	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1077	inflate.c	FUNCTION_7	SWITCH_1	IF_73
0x4002174	    0xc740084d3f00	            mov dword [rax + 8], 0x3f4d 	      1077	inflate.c	FUNCTION_7	SWITCH_1	IF_73
0x400217b	      0xe9fc070000	                           jmp 0x400297c	      1078	inflate.c	FUNCTION_7	SWITCH_1	IF_73
0x4002180	         0xfb64590	            movzx eax, byte [rbp - 0x70]	      1080	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x4002184	           0xfb6c0	                           movzx eax, al	      1080	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x4002187	          0x83e020	                           and eax, 0x20	      1080	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x400218a	            0x85c0	                           test eax, eax	      1080	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x400218c	            0x741e	                            je 0x40021ac	      1080	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x400218e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1082	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x4002192	    0xc780ec1b0000	   mov dword [rax + 0x1bec], 0xffffffff 	      1082	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x400219c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1083	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x40021a0	    0xc740083f3f00	            mov dword [rax + 8], 0x3f3f 	      1083	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x40021a7	      0xe9d0070000	                           jmp 0x400297c	      1084	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x40021ac	         0xfb64590	            movzx eax, byte [rbp - 0x70]	      1086	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x40021b0	           0xfb6c0	                           movzx eax, al	      1086	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x40021b3	          0x83e040	                           and eax, 0x40	      1086	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x40021b6	            0x85c0	                           test eax, eax	      1086	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x40021b8	            0x741c	                            je 0x40021d6	      1086	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x40021ba	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1087	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x40021be	    0x48c740300000	               mov qword [rax + 0x30], 0	      1087	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x40021c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1088	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x40021ca	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	      1088	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x40021d1	      0xe9a6070000	                           jmp 0x400297c	      1089	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x40021d6	         0xfb64590	            movzx eax, byte [rbp - 0x70]	      1091	inflate.c	FUNCTION_7	SWITCH_1
0x40021da	           0xfb6c0	                           movzx eax, al	      1091	inflate.c	FUNCTION_7	SWITCH_1
0x40021dd	          0x83e00f	                            and eax, 0xf	      1091	inflate.c	FUNCTION_7	SWITCH_1
0x40021e0	            0x89c2	                            mov edx, eax	      1091	inflate.c	FUNCTION_7	SWITCH_1
0x40021e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1091	inflate.c	FUNCTION_7	SWITCH_1
0x40021e6	          0x895064	             mov dword [rax + 0x64], edx	      1091	inflate.c	FUNCTION_7	SWITCH_1
0x40021e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1092	inflate.c	FUNCTION_7	SWITCH_1
0x40021ed	    0xc74008493f00	            mov dword [rax + 8], 0x3f49 	      1092	inflate.c	FUNCTION_7	SWITCH_1
0x40021f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1094	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40021f8	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1094	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40021fb	            0x85c0	                           test eax, eax	      1094	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40021fd	     0xf84a6000000	                            je 0x40022a9	      1094	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002203	            0xeb33	                           jmp 0x4002238	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002205	        0x837da800	               cmp dword [rbp - 0x58], 0	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002209	     0xf84b7070000	                            je 0x40029c6	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400220f	        0x836da801	               sub dword [rbp - 0x58], 1	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002213	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002217	        0x488d5001	                      lea rdx, [rax + 1]	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400221b	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400221f	           0xfb600	                   movzx eax, byte [rax]	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002222	           0xfb6d0	                           movzx edx, al	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002225	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002228	            0x89c1	                            mov ecx, eax	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400222a	          0x48d3e2	                             shl rdx, cl	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400222d	          0x4889d0	                            mov rax, rdx	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002230	        0x480145d8	            add qword [rbp - 0x28], rax 	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002234	        0x8345b008	               add dword [rbp - 0x50], 8	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002238	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400223c	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400223f	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002242	            0x77c1	                            ja 0x4002205	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002244	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002248	          0x8b505c	            mov edx, dword [rax + 0x5c] 	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400224b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400224f	            0x89c6	                            mov esi, eax	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002251	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002255	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002258	      0xbf01000000	                              mov edi, 1	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400225d	            0x89c1	                            mov ecx, eax	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400225f	            0xd3e7	                             shl edi, cl	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002261	            0x89f8	                            mov eax, edi	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002263	          0x83e801	                              sub eax, 1	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002266	            0x21f0	                            and eax, esi	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002268	             0x1c2	                            add edx, eax	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400226a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400226e	          0x89505c	             mov dword [rax + 0x5c], edx	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002271	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1097	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002275	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1097	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002278	            0x89c1	                            mov ecx, eax	      1097	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400227a	        0x48d36dd8	              shr qword [rbp - 0x28], cl	      1097	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400227e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1097	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002282	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1097	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002285	          0x2945b0	             sub dword [rbp - 0x50], eax	      1097	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002288	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1098	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400228c	    0x8b80ec1b0000	          mov eax, dword [rax + 0x1bec] 	      1098	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002292	            0x89c2	                            mov edx, eax	      1098	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002294	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1098	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4002298	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1098	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400229b	             0x1d0	                            add eax, edx	      1098	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400229d	            0x89c2	                            mov edx, eax	      1098	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400229f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1098	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40022a3	    0x8990ec1b0000	          mov dword [rax + 0x1bec], edx 	      1098	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40022a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1101	inflate.c	FUNCTION_7	SWITCH_1
0x40022ad	          0x8b505c	            mov edx, dword [rax + 0x5c] 	      1101	inflate.c	FUNCTION_7	SWITCH_1
0x40022b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1101	inflate.c	FUNCTION_7	SWITCH_1
0x40022b4	    0x8990f01b0000	          mov dword [rax + 0x1bf0], edx 	      1101	inflate.c	FUNCTION_7	SWITCH_1
0x40022ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1102	inflate.c	FUNCTION_7	SWITCH_1
0x40022be	    0xc740084a3f00	            mov dword [rax + 8], 0x3f4a 	      1102	inflate.c	FUNCTION_7	SWITCH_1
0x40022c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40022c9	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40022cd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40022d1	            0x89c6	                            mov esi, eax	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40022d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40022d7	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40022da	      0xbf01000000	                              mov edi, 1	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40022df	            0x89c1	                            mov ecx, eax	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40022e1	            0xd3e7	                             shl edi, cl	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40022e3	            0x89f8	                            mov eax, edi	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40022e5	          0x83e801	                              sub eax, 1	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40022e8	            0x21f0	                            and eax, esi	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40022ea	            0x89c0	                            mov eax, eax	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40022ec	        0x48c1e002	                              shl rax, 2	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40022f0	          0x4801d0	                            add rax, rdx	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40022f3	            0x8b00	                    mov eax, dword [rax]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40022f5	          0x894590	             mov dword [rbp - 0x70], eax	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40022f8	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x40022fc	           0xfb6c0	                           movzx eax, al	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x40022ff	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x4002302	            0x7635	                           jbe 0x4002339	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x4002304	        0x837da800	               cmp dword [rbp - 0x58], 0	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4002308	     0xf84bb060000	                            je 0x40029c9	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x400230e	        0x836da801	               sub dword [rbp - 0x58], 1	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4002312	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4002316	        0x488d5001	                      lea rdx, [rax + 1]	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x400231a	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x400231e	           0xfb600	                   movzx eax, byte [rax]	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4002321	           0xfb6d0	                           movzx edx, al	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4002324	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4002327	            0x89c1	                            mov ecx, eax	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4002329	          0x48d3e2	                             shl rdx, cl	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x400232c	          0x4889d0	                            mov rax, rdx	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x400232f	        0x480145d8	            add qword [rbp - 0x28], rax 	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4002333	        0x8345b008	               add dword [rbp - 0x50], 8	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4002337	            0xeb8c	                           jmp 0x40022c5	      1108	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4002339	              0x90	                                     nop	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x400233a	         0xfb64590	            movzx eax, byte [rbp - 0x70]	      1109	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x400233e	           0xfb6c0	                           movzx eax, al	      1109	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4002341	      0x25f0000000	                           and eax, 0xf0	      1109	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4002346	            0x85c0	                           test eax, eax	      1109	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4002348	     0xf85dd000000	                           jne 0x400242b	      1109	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x400234e	          0x8b4590	             mov eax, dword [rbp - 0x70]	      1110	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4002351	          0x8945a0	             mov dword [rbp - 0x60], eax	      1110	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4002354	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4002358	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x400235c	         0xfb745a2	            movzx eax, word [rbp - 0x5e]	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4002360	           0xfb7f0	                           movzx esi, ax	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4002363	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4002367	            0x89c7	                            mov edi, eax	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4002369	         0xfb645a1	            movzx eax, byte [rbp - 0x5f]	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x400236d	           0xfb6c8	                           movzx ecx, al	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4002370	         0xfb645a0	            movzx eax, byte [rbp - 0x60]	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4002374	           0xfb6c0	                           movzx eax, al	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4002377	             0x1c8	                            add eax, ecx	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4002379	    0x41b801000000	                              mov r8d, 1	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x400237f	            0x89c1	                            mov ecx, eax	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4002381	          0x41d3e0	                             shl r8d, cl	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4002384	          0x4489c0	                            mov eax, r8d	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4002387	          0x83e801	                              sub eax, 1	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x400238a	            0x21c7	                            and edi, eax	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x400238c	         0xfb645a1	            movzx eax, byte [rbp - 0x5f]	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4002390	           0xfb6c0	                           movzx eax, al	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4002393	            0x89c1	                            mov ecx, eax	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4002395	            0xd3ef	                             shr edi, cl	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4002397	            0x89f8	                            mov eax, edi	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4002399	             0x1f0	                            add eax, esi	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x400239b	            0x89c0	                            mov eax, eax	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x400239d	        0x48c1e002	                              shl rax, 2	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023a1	          0x4801d0	                            add rax, rdx	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023a4	            0x8b00	                    mov eax, dword [rax]	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023a6	          0x894590	             mov dword [rbp - 0x70], eax	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023a9	         0xfb645a1	            movzx eax, byte [rbp - 0x5f]	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x40023ad	           0xfb6d0	                           movzx edx, al	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x40023b0	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x40023b4	           0xfb6c0	                           movzx eax, al	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x40023b7	             0x1d0	                            add eax, edx	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x40023b9	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x40023bc	            0x7638	                           jbe 0x40023f6	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x40023be	        0x837da800	               cmp dword [rbp - 0x58], 0	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023c2	     0xf8404060000	                            je 0x40029cc	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023c8	        0x836da801	               sub dword [rbp - 0x58], 1	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023cc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023d0	        0x488d5001	                      lea rdx, [rax + 1]	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023d4	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023d8	           0xfb600	                   movzx eax, byte [rax]	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023db	           0xfb6d0	                           movzx edx, al	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023de	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023e1	            0x89c1	                            mov ecx, eax	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023e3	          0x48d3e2	                             shl rdx, cl	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023e6	          0x4889d0	                            mov rax, rdx	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023e9	        0x480145d8	            add qword [rbp - 0x28], rax 	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023ed	        0x8345b008	               add dword [rbp - 0x50], 8	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023f1	      0xe95effffff	                           jmp 0x4002354	      1116	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40023f6	              0x90	                                     nop	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x40023f7	         0xfb645a1	            movzx eax, byte [rbp - 0x5f]	      1117	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x40023fb	           0xfb6c0	                           movzx eax, al	      1117	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x40023fe	            0x89c1	                            mov ecx, eax	      1117	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4002400	        0x48d36dd8	              shr qword [rbp - 0x28], cl	      1117	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4002404	         0xfb645a1	            movzx eax, byte [rbp - 0x5f]	      1117	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4002408	           0xfb6c0	                           movzx eax, al	      1117	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x400240b	          0x2945b0	             sub dword [rbp - 0x50], eax	      1117	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x400240e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1118	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4002412	    0x8b90ec1b0000	          mov edx, dword [rax + 0x1bec] 	      1118	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4002418	         0xfb645a1	            movzx eax, byte [rbp - 0x5f]	      1118	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x400241c	           0xfb6c0	                           movzx eax, al	      1118	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x400241f	             0x1c2	                            add edx, eax	      1118	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4002421	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1118	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4002425	    0x8990ec1b0000	          mov dword [rax + 0x1bec], edx 	      1118	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x400242b	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	      1120	inflate.c	FUNCTION_7	SWITCH_1
0x400242f	           0xfb6c0	                           movzx eax, al	      1120	inflate.c	FUNCTION_7	SWITCH_1
0x4002432	            0x89c1	                            mov ecx, eax	      1120	inflate.c	FUNCTION_7	SWITCH_1
0x4002434	        0x48d36dd8	              shr qword [rbp - 0x28], cl	      1120	inflate.c	FUNCTION_7	SWITCH_1
0x4002438	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	      1120	inflate.c	FUNCTION_7	SWITCH_1
0x400243c	           0xfb6c0	                           movzx eax, al	      1120	inflate.c	FUNCTION_7	SWITCH_1
0x400243f	          0x2945b0	             sub dword [rbp - 0x50], eax	      1120	inflate.c	FUNCTION_7	SWITCH_1
0x4002442	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1121	inflate.c	FUNCTION_7	SWITCH_1
0x4002446	    0x8b90ec1b0000	          mov edx, dword [rax + 0x1bec] 	      1121	inflate.c	FUNCTION_7	SWITCH_1
0x400244c	         0xfb64591	            movzx eax, byte [rbp - 0x6f]	      1121	inflate.c	FUNCTION_7	SWITCH_1
0x4002450	           0xfb6c0	                           movzx eax, al	      1121	inflate.c	FUNCTION_7	SWITCH_1
0x4002453	             0x1c2	                            add edx, eax	      1121	inflate.c	FUNCTION_7	SWITCH_1
0x4002455	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1121	inflate.c	FUNCTION_7	SWITCH_1
0x4002459	    0x8990ec1b0000	          mov dword [rax + 0x1bec], edx 	      1121	inflate.c	FUNCTION_7	SWITCH_1
0x400245f	         0xfb64590	            movzx eax, byte [rbp - 0x70]	      1122	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4002463	           0xfb6c0	                           movzx eax, al	      1122	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4002466	          0x83e040	                           and eax, 0x40	      1122	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4002469	            0x85c0	                           test eax, eax	      1122	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x400246b	            0x741c	                            je 0x4002489	      1122	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x400246d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1123	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4002471	    0x48c740300000	               mov qword [rax + 0x30], 0	      1123	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4002479	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1124	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x400247d	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	      1124	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4002484	      0xe9f3040000	                           jmp 0x400297c	      1125	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4002489	         0xfb74592	            movzx eax, word [rbp - 0x6e]	      1127	inflate.c	FUNCTION_7	SWITCH_1
0x400248d	           0xfb7d0	                           movzx edx, ax	      1127	inflate.c	FUNCTION_7	SWITCH_1
0x4002490	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1127	inflate.c	FUNCTION_7	SWITCH_1
0x4002494	          0x895060	             mov dword [rax + 0x60], edx	      1127	inflate.c	FUNCTION_7	SWITCH_1
0x4002497	         0xfb64590	            movzx eax, byte [rbp - 0x70]	      1128	inflate.c	FUNCTION_7	SWITCH_1
0x400249b	           0xfb6c0	                           movzx eax, al	      1128	inflate.c	FUNCTION_7	SWITCH_1
0x400249e	          0x83e00f	                            and eax, 0xf	      1128	inflate.c	FUNCTION_7	SWITCH_1
0x40024a1	            0x89c2	                            mov edx, eax	      1128	inflate.c	FUNCTION_7	SWITCH_1
0x40024a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1128	inflate.c	FUNCTION_7	SWITCH_1
0x40024a7	          0x895064	             mov dword [rax + 0x64], edx	      1128	inflate.c	FUNCTION_7	SWITCH_1
0x40024aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1129	inflate.c	FUNCTION_7	SWITCH_1
0x40024ae	    0xc740084b3f00	            mov dword [rax + 8], 0x3f4b 	      1129	inflate.c	FUNCTION_7	SWITCH_1
0x40024b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1131	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024b9	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1131	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024bc	            0x85c0	                           test eax, eax	      1131	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024be	     0xf84a6000000	                            je 0x400256a	      1131	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024c4	            0xeb33	                           jmp 0x40024f9	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024c6	        0x837da800	               cmp dword [rbp - 0x58], 0	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024ca	     0xf84ff040000	                            je 0x40029cf	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024d0	        0x836da801	               sub dword [rbp - 0x58], 1	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024d8	        0x488d5001	                      lea rdx, [rax + 1]	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024dc	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024e0	           0xfb600	                   movzx eax, byte [rax]	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024e3	           0xfb6d0	                           movzx edx, al	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024e6	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024e9	            0x89c1	                            mov ecx, eax	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024eb	          0x48d3e2	                             shl rdx, cl	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024ee	          0x4889d0	                            mov rax, rdx	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024f1	        0x480145d8	            add qword [rbp - 0x28], rax 	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024f5	        0x8345b008	               add dword [rbp - 0x50], 8	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40024fd	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002500	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002503	            0x77c1	                            ja 0x40024c6	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002505	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002509	          0x8b5060	            mov edx, dword [rax + 0x60] 	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x400250c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002510	            0x89c6	                            mov esi, eax	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002512	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002516	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002519	      0xbf01000000	                              mov edi, 1	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x400251e	            0x89c1	                            mov ecx, eax	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002520	            0xd3e7	                             shl edi, cl	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002522	            0x89f8	                            mov eax, edi	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002524	          0x83e801	                              sub eax, 1	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002527	            0x21f0	                            and eax, esi	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002529	             0x1c2	                            add edx, eax	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x400252b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x400252f	          0x895060	             mov dword [rax + 0x60], edx	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002532	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1134	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002536	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1134	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002539	            0x89c1	                            mov ecx, eax	      1134	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x400253b	        0x48d36dd8	              shr qword [rbp - 0x28], cl	      1134	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x400253f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1134	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002543	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1134	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002546	          0x2945b0	             sub dword [rbp - 0x50], eax	      1134	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002549	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1135	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x400254d	    0x8b80ec1b0000	          mov eax, dword [rax + 0x1bec] 	      1135	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002553	            0x89c2	                            mov edx, eax	      1135	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002555	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1135	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002559	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1135	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x400255c	             0x1d0	                            add eax, edx	      1135	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x400255e	            0x89c2	                            mov edx, eax	      1135	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002560	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1135	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4002564	    0x8990ec1b0000	          mov dword [rax + 0x1bec], edx 	      1135	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x400256a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1145	inflate.c	FUNCTION_7	SWITCH_1
0x400256e	    0xc740084c3f00	            mov dword [rax + 8], 0x3f4c 	      1145	inflate.c	FUNCTION_7	SWITCH_1
0x4002575	        0x837dac00	               cmp dword [rbp - 0x54], 0	      1147	inflate.c	FUNCTION_7	SWITCH_1	IF_83
0x4002579	     0xf8453040000	                            je 0x40029d2	      1147	inflate.c	FUNCTION_7	SWITCH_1	IF_83
0x400257f	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1148	inflate.c	FUNCTION_7	SWITCH_1
0x4002582	          0x2b45ac	             sub eax, dword [rbp - 0x54]	      1148	inflate.c	FUNCTION_7	SWITCH_1
0x4002585	          0x8945b8	             mov dword [rbp - 0x48], eax	      1148	inflate.c	FUNCTION_7	SWITCH_1
0x4002588	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1149	inflate.c	FUNCTION_7	SWITCH_1	IF_84
0x400258c	          0x8b4060	            mov eax, dword [rax + 0x60] 	      1149	inflate.c	FUNCTION_7	SWITCH_1	IF_84
0x400258f	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1149	inflate.c	FUNCTION_7	SWITCH_1	IF_84
0x4002592	     0xf86a9000000	                           jbe 0x4002641	      1149	inflate.c	FUNCTION_7	SWITCH_1	IF_84
0x4002598	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1150	inflate.c	FUNCTION_7	SWITCH_1	IF_84
0x400259c	          0x8b4060	            mov eax, dword [rax + 0x60] 	      1150	inflate.c	FUNCTION_7	SWITCH_1	IF_84
0x400259f	          0x2b45b8	             sub eax, dword [rbp - 0x48]	      1150	inflate.c	FUNCTION_7	SWITCH_1	IF_84
0x40025a2	          0x8945b8	             mov dword [rbp - 0x48], eax	      1150	inflate.c	FUNCTION_7	SWITCH_1	IF_84
0x40025a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1151	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85
0x40025a9	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1151	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85
0x40025ac	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1151	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85
0x40025af	            0x732a	                           jae 0x40025db	      1151	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85
0x40025b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1152	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x40025b5	    0x8b80e81b0000	          mov eax, dword [rax + 0x1be8] 	      1152	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x40025bb	            0x85c0	                           test eax, eax	      1152	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x40025bd	            0x741c	                            je 0x40025db	      1152	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x40025bf	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1153	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x40025c3	    0x48c740300000	               mov qword [rax + 0x30], 0	      1153	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x40025cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1154	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x40025cf	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	      1154	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x40025d6	      0xe9a1030000	                           jmp 0x400297c	      1155	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x40025db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1171	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x40025df	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1171	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x40025e2	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1171	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x40025e5	            0x7327	                           jae 0x400260e	      1171	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x40025e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1172	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x40025eb	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1172	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x40025ee	          0x2945b8	             sub dword [rbp - 0x48], eax	      1172	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x40025f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1173	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x40025f5	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      1173	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x40025f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1173	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x40025fd	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1173	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x4002600	          0x2b45b8	             sub eax, dword [rbp - 0x48]	      1173	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x4002603	            0x89c0	                            mov eax, eax	      1173	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x4002605	          0x4801d0	                            add rax, rdx	      1173	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x4002608	        0x488945e0	             mov qword [rbp - 0x20], rax	      1173	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x400260c	            0xeb1b	                           jmp 0x4002629	      1173	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x400260e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1176	inflate.c	FUNCTION_7	SWITCH_1	IF_84	ELSE_7
0x4002612	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      1176	inflate.c	FUNCTION_7	SWITCH_1	IF_84	ELSE_7
0x4002616	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1176	inflate.c	FUNCTION_7	SWITCH_1	IF_84	ELSE_7
0x400261a	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1176	inflate.c	FUNCTION_7	SWITCH_1	IF_84	ELSE_7
0x400261d	          0x2b45b8	             sub eax, dword [rbp - 0x48]	      1176	inflate.c	FUNCTION_7	SWITCH_1	IF_84	ELSE_7
0x4002620	            0x89c0	                            mov eax, eax	      1176	inflate.c	FUNCTION_7	SWITCH_1	IF_84	ELSE_7
0x4002622	          0x4801d0	                            add rax, rdx	      1176	inflate.c	FUNCTION_7	SWITCH_1	IF_84	ELSE_7
0x4002625	        0x488945e0	             mov qword [rbp - 0x20], rax	      1176	inflate.c	FUNCTION_7	SWITCH_1	IF_84	ELSE_7
0x4002629	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1177	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_91
0x400262d	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1177	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_91
0x4002630	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1177	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_91
0x4002633	            0x7330	                           jae 0x4002665	      1177	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_91
0x4002635	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1177	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_91
0x4002639	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1177	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_91
0x400263c	          0x8945b8	             mov dword [rbp - 0x48], eax	      1177	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_91
0x400263f	            0xeb24	                           jmp 0x4002665	      1177	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_91
0x4002641	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1180	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4002645	          0x8b4060	            mov eax, dword [rax + 0x60] 	      1180	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4002648	            0x89c0	                            mov eax, eax	      1180	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x400264a	          0x48f7d8	                                 neg rax	      1180	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x400264d	          0x4889c2	                            mov rdx, rax	      1180	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4002650	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1180	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4002654	          0x4801d0	                            add rax, rdx	      1180	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4002657	        0x488945e0	             mov qword [rbp - 0x20], rax	      1180	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x400265b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1181	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x400265f	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1181	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4002662	          0x8945b8	             mov dword [rbp - 0x48], eax	      1181	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4002665	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1183	inflate.c	FUNCTION_7	SWITCH_1	IF_92
0x4002668	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      1183	inflate.c	FUNCTION_7	SWITCH_1	IF_92
0x400266b	            0x7606	                           jbe 0x4002673	      1183	inflate.c	FUNCTION_7	SWITCH_1	IF_92
0x400266d	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1183	inflate.c	FUNCTION_7	SWITCH_1	IF_92
0x4002670	          0x8945b8	             mov dword [rbp - 0x48], eax	      1183	inflate.c	FUNCTION_7	SWITCH_1	IF_92
0x4002673	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1184	inflate.c	FUNCTION_7	SWITCH_1
0x4002676	          0x2945ac	             sub dword [rbp - 0x54], eax	      1184	inflate.c	FUNCTION_7	SWITCH_1
0x4002679	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1185	inflate.c	FUNCTION_7	SWITCH_1
0x400267d	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1185	inflate.c	FUNCTION_7	SWITCH_1
0x4002680	          0x2b45b8	             sub eax, dword [rbp - 0x48]	      1185	inflate.c	FUNCTION_7	SWITCH_1
0x4002683	            0x89c2	                            mov edx, eax	      1185	inflate.c	FUNCTION_7	SWITCH_1
0x4002685	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1185	inflate.c	FUNCTION_7	SWITCH_1
0x4002689	          0x89505c	             mov dword [rax + 0x5c], edx	      1185	inflate.c	FUNCTION_7	SWITCH_1
0x400268c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1187	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x4002690	        0x488d5001	                      lea rdx, [rax + 1]	      1187	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x4002694	        0x488955d0	             mov qword [rbp - 0x30], rdx	      1187	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x4002698	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1187	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x400269c	        0x488d4a01	                      lea rcx, [rdx + 1]	      1187	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x40026a0	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1187	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x40026a4	           0xfb612	                   movzx edx, byte [rdx]	      1187	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x40026a7	            0x8810	                      mov byte [rax], dl	      1187	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x40026a9	        0x836db801	               sub dword [rbp - 0x48], 1	      1188	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x40026ad	        0x837db800	               cmp dword [rbp - 0x48], 0	      1188	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x40026b1	            0x75d9	                           jne 0x400268c	      1188	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x40026b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x40026b7	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x40026ba	            0x85c0	                           test eax, eax	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x40026bc	     0xf85b9020000	                           jne 0x400297b	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x40026c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x40026c6	    0xc74008483f00	            mov dword [rax + 8], 0x3f48 	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x40026cd	      0xe9a9020000	                           jmp 0x400297b	      1190	inflate.c	FUNCTION_7	SWITCH_1
0x40026d2	        0x837dac00	               cmp dword [rbp - 0x54], 0	      1192	inflate.c	FUNCTION_7	SWITCH_1	IF_94
0x40026d6	     0xf84f9020000	                            je 0x40029d5	      1192	inflate.c	FUNCTION_7	SWITCH_1	IF_94
0x40026dc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1193	inflate.c	FUNCTION_7	SWITCH_1
0x40026e0	        0x488d5001	                      lea rdx, [rax + 1]	      1193	inflate.c	FUNCTION_7	SWITCH_1
0x40026e4	        0x488955d0	             mov qword [rbp - 0x30], rdx	      1193	inflate.c	FUNCTION_7	SWITCH_1
0x40026e8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1193	inflate.c	FUNCTION_7	SWITCH_1
0x40026ec	          0x8b525c	            mov edx, dword [rdx + 0x5c] 	      1193	inflate.c	FUNCTION_7	SWITCH_1
0x40026ef	            0x8810	                      mov byte [rax], dl	      1193	inflate.c	FUNCTION_7	SWITCH_1
0x40026f1	        0x836dac01	               sub dword [rbp - 0x54], 1	      1194	inflate.c	FUNCTION_7	SWITCH_1
0x40026f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1195	inflate.c	FUNCTION_7	SWITCH_1
0x40026f9	    0xc74008483f00	            mov dword [rax + 8], 0x3f48 	      1195	inflate.c	FUNCTION_7	SWITCH_1
0x4002700	      0xe977020000	                           jmp 0x400297c	      1196	inflate.c	FUNCTION_7	SWITCH_1
0x4002705	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1198	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002709	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1198	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400270c	            0x85c0	                           test eax, eax	      1198	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400270e	     0xf8490010000	                            je 0x40028a4	      1198	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002714	            0xeb33	                           jmp 0x4002749	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002716	        0x837da800	               cmp dword [rbp - 0x58], 0	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400271a	     0xf84b8020000	                            je 0x40029d8	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002720	        0x836da801	               sub dword [rbp - 0x58], 1	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002724	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002728	        0x488d5001	                      lea rdx, [rax + 1]	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400272c	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002730	           0xfb600	                   movzx eax, byte [rax]	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002733	           0xfb6d0	                           movzx edx, al	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002736	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002739	            0x89c1	                            mov ecx, eax	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400273b	          0x48d3e2	                             shl rdx, cl	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400273e	          0x4889d0	                            mov rax, rdx	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002741	        0x480145d8	            add qword [rbp - 0x28], rax 	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002745	        0x8345b008	               add dword [rbp - 0x50], 8	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002749	        0x837db01f	           cmp dword [rbp - 0x50], 0x1f 	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400274d	            0x76c7	                           jbe 0x4002716	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400274f	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1200	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002752	          0x2945b4	             sub dword [rbp - 0x4c], eax	      1200	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002755	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1201	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002759	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1201	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400275d	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1201	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002760	          0x4801c2	                            add rdx, rax	      1201	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002763	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1201	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002767	        0x48895028	             mov qword [rax + 0x28], rdx	      1201	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400276b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1202	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400276f	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1202	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002773	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1202	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002776	          0x4801c2	                            add rdx, rax	      1202	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002779	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1202	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400277d	        0x48895028	             mov qword [rax + 0x28], rdx	      1202	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002781	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1203	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4002785	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1203	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4002788	          0x83e004	                              and eax, 4	      1203	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x400278b	            0x85c0	                           test eax, eax	      1203	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x400278d	            0x747f	                            je 0x400280e	      1203	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x400278f	        0x837db400	               cmp dword [rbp - 0x4c], 0	      1203	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4002793	            0x7479	                            je 0x400280e	      1203	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4002795	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4002799	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x400279c	            0x85c0	                           test eax, eax	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x400279e	            0x742c	                            je 0x40027cc	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027a0	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027a3	          0x48f7d8	                                 neg rax	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027a6	          0x4889c2	                            mov rdx, rax	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027a9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027ad	        0x488d0c02	                    lea rcx, [rdx + rax]	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027b5	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027b9	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027bc	          0x4889ce	                            mov rsi, rcx	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027bf	          0x4889c7	                            mov rdi, rax	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027c2	      0xe800000000	                          call 0x40027c7	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027c7	          0x4889c2	                            mov rdx, rax	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027ca	            0xeb2a	                           jmp 0x40027f6	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027cc	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027cf	          0x48f7d8	                                 neg rax	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027d2	          0x4889c2	                            mov rdx, rax	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027d5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027d9	        0x488d0c02	                    lea rcx, [rdx + rax]	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027e1	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027e5	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027e8	          0x4889ce	                            mov rsi, rcx	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027eb	          0x4889c7	                            mov rdi, rax	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027ee	      0xe800000000	                          call 0x40027f3	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027f3	          0x4889c2	                            mov rdx, rax	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1204	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027fa	        0x48895020	             mov qword [rax + 0x20], rdx	      1204	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40027fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1204	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4002802	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1204	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4002806	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1204	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x400280a	        0x48895060	             mov qword [rax + 0x60], rdx	      1204	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x400280e	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1206	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002811	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1206	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4002814	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1207	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4002818	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1207	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x400281b	          0x83e004	                              and eax, 4	      1207	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x400281e	            0x85c0	                           test eax, eax	      1207	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4002820	            0x7473	                            je 0x4002895	      1207	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4002822	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4002826	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4002829	            0x85c0	                           test eax, eax	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x400282b	            0x753b	                           jne 0x4002868	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x400282d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1211	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97	CALL_31
0x4002831	        0x48c1e818	                           shr rax, 0x18	      1211	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97	CALL_31
0x4002835	           0xfb6c0	                           movzx eax, al	      1211	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97	CALL_31
0x4002838	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1211	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97	CALL_31
0x400283c	        0x48c1ea08	                              shr rdx, 8	      1211	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97	CALL_31
0x4002840	    0x81e200ff0000	                         and edx, 0xff00	      1211	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97	CALL_31
0x4002846	          0x4801c2	                            add rdx, rax	      1211	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97	CALL_31
0x4002849	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1211	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97	CALL_31
0x400284d	      0x2500ff0000	                         and eax, 0xff00	      1211	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97	CALL_31
0x4002852	        0x48c1e008	                              shl rax, 8	      1211	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97	CALL_31
0x4002856	          0x4801c2	                            add rdx, rax	      1211	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97	CALL_31
0x4002859	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1211	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97	CALL_31
0x400285d	        0x48c1e018	                           shl rax, 0x18	      1211	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97	CALL_31
0x4002861	            0x89c0	                            mov eax, eax	      1211	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97	CALL_31
0x4002863	          0x4801d0	                            add rax, rdx	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4002866	            0xeb04	                           jmp 0x400286c	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4002868	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x400286c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1211	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97	CALL_31
0x4002870	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      1211	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97	CALL_31
0x4002874	          0x4839d0	                            cmp rax, rdx	      1207	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4002877	            0x741c	                            je 0x4002895	      1207	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4002879	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1212	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x400287d	    0x48c740300000	               mov qword [rax + 0x30], 0	      1212	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4002885	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1213	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4002889	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	      1213	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4002890	      0xe9e7000000	                           jmp 0x400297c	      1214	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4002895	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1216	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400289d	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      1216	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x40028a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1220	inflate.c	FUNCTION_7	SWITCH_1
0x40028a8	    0xc740084f3f00	            mov dword [rax + 8], 0x3f4f 	      1220	inflate.c	FUNCTION_7	SWITCH_1
0x40028af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1222	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028b3	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1222	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028b6	            0x85c0	                           test eax, eax	      1222	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028b8	            0x747e	                            je 0x4002938	      1222	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1222	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028be	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1222	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028c1	            0x85c0	                           test eax, eax	      1222	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028c3	            0x7473	                            je 0x4002938	      1222	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028c5	            0xeb33	                           jmp 0x40028fa	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028c7	        0x837da800	               cmp dword [rbp - 0x58], 0	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028cb	     0xf840a010000	                            je 0x40029db	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028d1	        0x836da801	               sub dword [rbp - 0x58], 1	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028d5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028d9	        0x488d5001	                      lea rdx, [rax + 1]	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028dd	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028e1	           0xfb600	                   movzx eax, byte [rax]	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028e4	           0xfb6d0	                           movzx edx, al	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028e7	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028ea	            0x89c1	                            mov ecx, eax	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028ec	          0x48d3e2	                             shl rdx, cl	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028ef	          0x4889d0	                            mov rax, rdx	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028f2	        0x480145d8	            add qword [rbp - 0x28], rax 	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028f6	        0x8345b008	               add dword [rbp - 0x50], 8	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028fa	        0x837db01f	           cmp dword [rbp - 0x50], 0x1f 	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40028fe	            0x76c7	                           jbe 0x40028c7	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4002900	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1224	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4002904	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1224	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4002908	            0x89c0	                            mov eax, eax	      1224	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x400290a	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1224	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x400290e	            0x7419	                            je 0x4002929	      1224	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4002910	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1225	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4002914	    0x48c740300000	               mov qword [rax + 0x30], 0	      1225	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x400291c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1226	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4002920	    0xc74008513f00	            mov dword [rax + 8], 0x3f51 	      1226	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4002927	            0xeb53	                           jmp 0x400297c	      1227	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4002929	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1229	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4002931	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      1229	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4002938	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1233	inflate.c	FUNCTION_7	SWITCH_1
0x400293c	    0xc74008503f00	            mov dword [rax + 8], 0x3f50 	      1233	inflate.c	FUNCTION_7	SWITCH_1
0x4002943	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      1235	inflate.c	FUNCTION_7	SWITCH_1
0x400294a	      0xe98d000000	                           jmp 0x40029dc	      1236	inflate.c	FUNCTION_7	SWITCH_1
0x400294f	    0xc745c0fdffff	     mov dword [rbp - 0x40], 0xfffffffd 	      1238	inflate.c	FUNCTION_7	SWITCH_1
0x4002956	      0xe981000000	                           jmp 0x40029dc	      1239	inflate.c	FUNCTION_7	SWITCH_1
0x400295b	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1241	inflate.c	FUNCTION_7	SWITCH_1
0x4002960	      0xe9a7020000	                           jmp 0x4002c0c	      1241	inflate.c	FUNCTION_7	SWITCH_1
0x4002965	      0xb8feffffff	                     mov eax, 0xfffffffe	      1244	inflate.c	FUNCTION_7	SWITCH_1
0x400296a	      0xe99d020000	                           jmp 0x4002c0c	      1244	inflate.c	FUNCTION_7	SWITCH_1
0x400296f	              0x90	                                     nop	      1008	inflate.c	FUNCTION_7	SWITCH_1	IF_63
0x4002970	      0xe90fdfffff	                           jmp 0x4000884	      1008	inflate.c	FUNCTION_7	SWITCH_1	IF_63
0x4002975	              0x90	                                     nop	      1051	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4002976	      0xe909dfffff	                           jmp 0x4000884	      1051	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x400297b	              0x90	                                     nop	      1190	inflate.c	FUNCTION_7	SWITCH_1
0x400297c	      0xe903dfffff	                           jmp 0x4000884	      1253	inflate.c	FUNCTION_7
0x4002981	              0x90	                                     nop	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4002982	            0xeb58	                           jmp 0x40029dc	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4002984	              0x90	                                     nop	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4002985	            0xeb55	                           jmp 0x40029dc	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4002987	              0x90	                                     nop	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4002988	            0xeb52	                           jmp 0x40029dc	       726	inflate.c	FUNCTION_7	SWITCH_1
0x400298a	              0x90	                                     nop	       734	inflate.c	FUNCTION_7	SWITCH_1
0x400298b	            0xeb4f	                           jmp 0x40029dc	       734	inflate.c	FUNCTION_7	SWITCH_1
0x400298d	              0x90	                                     nop	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x400298e	            0xeb4c	                           jmp 0x40029dc	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4002990	              0x90	                                     nop	       774	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_29
0x4002991	            0xeb49	                           jmp 0x40029dc	       774	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_29
0x4002993	              0x90	                                     nop	       780	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_31
0x4002994	            0xeb46	                           jmp 0x40029dc	       780	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_31
0x4002996	              0x90	                                     nop	       801	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_37
0x4002997	            0xeb43	                           jmp 0x40029dc	       801	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_37
0x4002999	              0x90	                                     nop	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x400299a	            0xeb40	                           jmp 0x40029dc	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x400299c	              0x90	                                     nop	       838	inflate.c	FUNCTION_7	SWITCH_1
0x400299d	            0xeb3d	                           jmp 0x40029dc	       838	inflate.c	FUNCTION_7	SWITCH_1
0x400299f	              0x90	                                     nop	       857	inflate.c	FUNCTION_7	SWITCH_1
0x40029a0	            0xeb3a	                           jmp 0x40029dc	       857	inflate.c	FUNCTION_7	SWITCH_1
0x40029a2	              0x90	                                     nop	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40029a3	            0xeb37	                           jmp 0x40029dc	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40029a5	              0x90	                                     nop	       900	inflate.c	FUNCTION_7	SWITCH_1	IF_50
0x40029a6	            0xeb34	                           jmp 0x40029dc	       900	inflate.c	FUNCTION_7	SWITCH_1	IF_50
0x40029a8	              0x90	                                     nop	       908	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_54
0x40029a9	            0xeb31	                           jmp 0x40029dc	       908	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_54
0x40029ab	              0x90	                                     nop	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40029ac	            0xeb2e	                           jmp 0x40029dc	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40029ae	              0x90	                                     nop	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40029af	            0xeb2b	                           jmp 0x40029dc	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40029b1	              0x90	                                     nop	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x40029b2	            0xeb28	                           jmp 0x40029dc	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x40029b4	              0x90	                                     nop	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40029b5	            0xeb25	                           jmp 0x40029dc	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40029b7	              0x90	                                     nop	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x40029b8	            0xeb22	                           jmp 0x40029dc	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x40029ba	              0x90	                                     nop	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40029bb	            0xeb1f	                           jmp 0x40029dc	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40029bd	              0x90	                                     nop	      1041	inflate.c	FUNCTION_7	SWITCH_1	IF_67
0x40029be	            0xeb1c	                           jmp 0x40029dc	      1041	inflate.c	FUNCTION_7	SWITCH_1	IF_67
0x40029c0	              0x90	                                     nop	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40029c1	            0xeb19	                           jmp 0x40029dc	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40029c3	              0x90	                                     nop	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40029c4	            0xeb16	                           jmp 0x40029dc	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40029c6	              0x90	                                     nop	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40029c7	            0xeb13	                           jmp 0x40029dc	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40029c9	              0x90	                                     nop	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40029ca	            0xeb10	                           jmp 0x40029dc	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40029cc	              0x90	                                     nop	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40029cd	            0xeb0d	                           jmp 0x40029dc	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40029cf	              0x90	                                     nop	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40029d0	            0xeb0a	                           jmp 0x40029dc	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40029d2	              0x90	                                     nop	      1147	inflate.c	FUNCTION_7	SWITCH_1	IF_83
0x40029d3	            0xeb07	                           jmp 0x40029dc	      1147	inflate.c	FUNCTION_7	SWITCH_1	IF_83
0x40029d5	              0x90	                                     nop	      1192	inflate.c	FUNCTION_7	SWITCH_1	IF_94
0x40029d6	            0xeb04	                           jmp 0x40029dc	      1192	inflate.c	FUNCTION_7	SWITCH_1	IF_94
0x40029d8	              0x90	                                     nop	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x40029d9	            0xeb01	                           jmp 0x40029dc	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x40029db	              0x90	                                     nop	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x40029dc	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1254	inflate.c	FUNCTION_7
0x40029e0	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1254	inflate.c	FUNCTION_7
0x40029e4	        0x48895018	             mov qword [rax + 0x18], rdx	      1254	inflate.c	FUNCTION_7
0x40029e8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1254	inflate.c	FUNCTION_7
0x40029ec	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1254	inflate.c	FUNCTION_7
0x40029ef	          0x895020	             mov dword [rax + 0x20], edx	      1254	inflate.c	FUNCTION_7
0x40029f2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1254	inflate.c	FUNCTION_7
0x40029f6	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1254	inflate.c	FUNCTION_7
0x40029fa	          0x488910	                    mov qword [rax], rdx	      1254	inflate.c	FUNCTION_7
0x40029fd	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1254	inflate.c	FUNCTION_7
0x4002a01	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      1254	inflate.c	FUNCTION_7
0x4002a04	          0x895008	                mov dword [rax + 8], edx	      1254	inflate.c	FUNCTION_7
0x4002a07	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1254	inflate.c	FUNCTION_7
0x4002a0b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1254	inflate.c	FUNCTION_7
0x4002a0f	        0x48895050	             mov qword [rax + 0x50], rdx	      1254	inflate.c	FUNCTION_7
0x4002a13	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1254	inflate.c	FUNCTION_7
0x4002a17	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1254	inflate.c	FUNCTION_7
0x4002a1a	          0x895058	             mov dword [rax + 0x58], edx	      1254	inflate.c	FUNCTION_7
0x4002a1d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1255	inflate.c	FUNCTION_7	IF_100
0x4002a21	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1255	inflate.c	FUNCTION_7	IF_100
0x4002a24	            0x85c0	                           test eax, eax	      1255	inflate.c	FUNCTION_7	IF_100
0x4002a26	            0x752e	                           jne 0x4002a56	      1255	inflate.c	FUNCTION_7	IF_100
0x4002a28	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1255	inflate.c	FUNCTION_7	IF_100
0x4002a2c	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1255	inflate.c	FUNCTION_7	IF_100
0x4002a2f	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      1255	inflate.c	FUNCTION_7	IF_100
0x4002a32	            0x745e	                            je 0x4002a92	      1255	inflate.c	FUNCTION_7	IF_100
0x4002a34	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1255	inflate.c	FUNCTION_7	IF_100
0x4002a38	          0x8b4008	                mov eax, dword [rax + 8]	      1255	inflate.c	FUNCTION_7	IF_100
0x4002a3b	      0x3d503f0000	                         cmp eax, 0x3f50	      1255	inflate.c	FUNCTION_7	IF_100
0x4002a40	            0x7750	                            ja 0x4002a92	      1255	inflate.c	FUNCTION_7	IF_100
0x4002a42	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1256	inflate.c	FUNCTION_7	IF_100
0x4002a46	          0x8b4008	                mov eax, dword [rax + 8]	      1256	inflate.c	FUNCTION_7	IF_100
0x4002a49	      0x3d4d3f0000	                         cmp eax, 0x3f4d	      1255	inflate.c	FUNCTION_7	IF_100
0x4002a4e	            0x7606	                           jbe 0x4002a56	      1255	inflate.c	FUNCTION_7	IF_100
0x4002a50	        0x837d8404	               cmp dword [rbp - 0x7c], 4	      1256	inflate.c	FUNCTION_7	IF_100
0x4002a54	            0x743c	                            je 0x4002a92	      1256	inflate.c	FUNCTION_7	IF_100
0x4002a56	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4002a5a	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4002a5d	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4002a60	            0x29c2	                            sub edx, eax	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4002a62	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4002a66	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4002a6a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4002a6e	          0x4889ce	                            mov rsi, rcx	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4002a71	          0x4889c7	                            mov rdi, rax	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4002a74	      0xe828dbffff	                   call sym.updatewindow	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4002a79	            0x85c0	                           test eax, eax	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4002a7b	            0x7415	                            je 0x4002a92	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4002a7d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1258	inflate.c	FUNCTION_7	IF_100	IF_101
0x4002a81	    0xc74008523f00	            mov dword [rax + 8], 0x3f52 	      1258	inflate.c	FUNCTION_7	IF_100	IF_101
0x4002a88	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1259	inflate.c	FUNCTION_7	IF_100	IF_101
0x4002a8d	      0xe97a010000	                           jmp 0x4002c0c	      1259	inflate.c	FUNCTION_7	IF_100	IF_101
0x4002a92	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1261	inflate.c	FUNCTION_7
0x4002a96	          0x8b4008	                mov eax, dword [rax + 8]	      1261	inflate.c	FUNCTION_7
0x4002a99	          0x2945c4	             sub dword [rbp - 0x3c], eax	      1261	inflate.c	FUNCTION_7
0x4002a9c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1262	inflate.c	FUNCTION_7
0x4002aa0	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1262	inflate.c	FUNCTION_7
0x4002aa3	          0x2945b4	             sub dword [rbp - 0x4c], eax	      1262	inflate.c	FUNCTION_7
0x4002aa6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1263	inflate.c	FUNCTION_7
0x4002aaa	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1263	inflate.c	FUNCTION_7
0x4002aae	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1263	inflate.c	FUNCTION_7
0x4002ab1	          0x4801c2	                            add rdx, rax	      1263	inflate.c	FUNCTION_7
0x4002ab4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1263	inflate.c	FUNCTION_7
0x4002ab8	        0x48895010	             mov qword [rax + 0x10], rdx	      1263	inflate.c	FUNCTION_7
0x4002abc	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1264	inflate.c	FUNCTION_7
0x4002ac0	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1264	inflate.c	FUNCTION_7
0x4002ac4	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1264	inflate.c	FUNCTION_7
0x4002ac7	          0x4801c2	                            add rdx, rax	      1264	inflate.c	FUNCTION_7
0x4002aca	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1264	inflate.c	FUNCTION_7
0x4002ace	        0x48895028	             mov qword [rax + 0x28], rdx	      1264	inflate.c	FUNCTION_7
0x4002ad2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1265	inflate.c	FUNCTION_7
0x4002ad6	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1265	inflate.c	FUNCTION_7
0x4002ada	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1265	inflate.c	FUNCTION_7
0x4002add	          0x4801c2	                            add rdx, rax	      1265	inflate.c	FUNCTION_7
0x4002ae0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1265	inflate.c	FUNCTION_7
0x4002ae4	        0x48895028	             mov qword [rax + 0x28], rdx	      1265	inflate.c	FUNCTION_7
0x4002ae8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1266	inflate.c	FUNCTION_7	IF_102
0x4002aec	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1266	inflate.c	FUNCTION_7	IF_102
0x4002aef	          0x83e004	                              and eax, 4	      1266	inflate.c	FUNCTION_7	IF_102
0x4002af2	            0x85c0	                           test eax, eax	      1266	inflate.c	FUNCTION_7	IF_102
0x4002af4	     0xf8481000000	                            je 0x4002b7b	      1266	inflate.c	FUNCTION_7	IF_102
0x4002afa	        0x837db400	               cmp dword [rbp - 0x4c], 0	      1266	inflate.c	FUNCTION_7	IF_102
0x4002afe	            0x747b	                            je 0x4002b7b	      1266	inflate.c	FUNCTION_7	IF_102
0x4002b00	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b04	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b07	            0x85c0	                           test eax, eax	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b09	            0x742d	                            je 0x4002b38	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b0b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b0f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b13	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b16	          0x48f7da	                                 neg rdx	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b19	        0x488d0c10	                    lea rcx, [rax + rdx]	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b1d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b21	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b25	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b28	          0x4889ce	                            mov rsi, rcx	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b2b	          0x4889c7	                            mov rdi, rax	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b2e	      0xe800000000	                          call 0x4002b33	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b33	          0x4889c2	                            mov rdx, rax	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b36	            0xeb2b	                           jmp 0x4002b63	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b38	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b3c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b40	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b43	          0x48f7da	                                 neg rdx	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b46	        0x488d0c10	                    lea rcx, [rax + rdx]	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b4e	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b52	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b55	          0x4889ce	                            mov rsi, rcx	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b58	          0x4889c7	                            mov rdi, rax	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b5b	      0xe800000000	                          call 0x4002b60	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b60	          0x4889c2	                            mov rdx, rax	      1268	inflate.c	FUNCTION_7	IF_102
0x4002b63	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1267	inflate.c	FUNCTION_7	IF_102
0x4002b67	        0x48895020	             mov qword [rax + 0x20], rdx	      1267	inflate.c	FUNCTION_7	IF_102
0x4002b6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1267	inflate.c	FUNCTION_7	IF_102
0x4002b6f	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1267	inflate.c	FUNCTION_7	IF_102
0x4002b73	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1267	inflate.c	FUNCTION_7	IF_102
0x4002b77	        0x48895060	             mov qword [rax + 0x60], rdx	      1267	inflate.c	FUNCTION_7	IF_102
0x4002b7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1269	inflate.c	FUNCTION_7
0x4002b7f	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1269	inflate.c	FUNCTION_7
0x4002b82	            0x89c2	                            mov edx, eax	      1269	inflate.c	FUNCTION_7
0x4002b84	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1269	inflate.c	FUNCTION_7
0x4002b88	          0x8b400c	              mov eax, dword [rax + 0xc]	      1269	inflate.c	FUNCTION_7
0x4002b8b	            0x85c0	                           test eax, eax	      1269	inflate.c	FUNCTION_7
0x4002b8d	            0x7407	                            je 0x4002b96	      1269	inflate.c	FUNCTION_7
0x4002b8f	      0xb840000000	                           mov eax, 0x40	      1269	inflate.c	FUNCTION_7
0x4002b94	            0xeb05	                           jmp 0x4002b9b	      1269	inflate.c	FUNCTION_7
0x4002b96	      0xb800000000	                              mov eax, 0	      1269	inflate.c	FUNCTION_7
0x4002b9b	             0x1c2	                            add edx, eax	      1269	inflate.c	FUNCTION_7
0x4002b9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1270	inflate.c	FUNCTION_7
0x4002ba1	          0x8b4008	                mov eax, dword [rax + 8]	      1270	inflate.c	FUNCTION_7
0x4002ba4	      0x3d3f3f0000	                         cmp eax, 0x3f3f	      1270	inflate.c	FUNCTION_7
0x4002ba9	            0x7507	                           jne 0x4002bb2	      1270	inflate.c	FUNCTION_7
0x4002bab	      0xb880000000	                           mov eax, 0x80	      1270	inflate.c	FUNCTION_7
0x4002bb0	            0xeb05	                           jmp 0x4002bb7	      1270	inflate.c	FUNCTION_7
0x4002bb2	      0xb800000000	                              mov eax, 0	      1270	inflate.c	FUNCTION_7
0x4002bb7	             0x1c2	                            add edx, eax	      1269	inflate.c	FUNCTION_7
0x4002bb9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1271	inflate.c	FUNCTION_7
0x4002bbd	          0x8b4008	                mov eax, dword [rax + 8]	      1271	inflate.c	FUNCTION_7
0x4002bc0	      0x3d473f0000	                         cmp eax, 0x3f47	      1271	inflate.c	FUNCTION_7
0x4002bc5	            0x740e	                            je 0x4002bd5	      1271	inflate.c	FUNCTION_7
0x4002bc7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1271	inflate.c	FUNCTION_7
0x4002bcb	          0x8b4008	                mov eax, dword [rax + 8]	      1271	inflate.c	FUNCTION_7
0x4002bce	      0x3d423f0000	                         cmp eax, 0x3f42	      1271	inflate.c	FUNCTION_7
0x4002bd3	            0x7507	                           jne 0x4002bdc	      1271	inflate.c	FUNCTION_7
0x4002bd5	      0xb800010000	                          mov eax, 0x100	      1271	inflate.c	FUNCTION_7
0x4002bda	            0xeb05	                           jmp 0x4002be1	      1271	inflate.c	FUNCTION_7
0x4002bdc	      0xb800000000	                              mov eax, 0	      1271	inflate.c	FUNCTION_7
0x4002be1	             0x1c2	                            add edx, eax	      1270	inflate.c	FUNCTION_7
0x4002be3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1269	inflate.c	FUNCTION_7
0x4002be7	          0x895058	             mov dword [rax + 0x58], edx	      1269	inflate.c	FUNCTION_7
0x4002bea	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1272	inflate.c	FUNCTION_7	IF_103
0x4002bee	            0x7506	                           jne 0x4002bf6	      1272	inflate.c	FUNCTION_7	IF_103
0x4002bf0	        0x837db400	               cmp dword [rbp - 0x4c], 0	      1272	inflate.c	FUNCTION_7	IF_103
0x4002bf4	            0x7406	                            je 0x4002bfc	      1272	inflate.c	FUNCTION_7	IF_103
0x4002bf6	        0x837d8404	               cmp dword [rbp - 0x7c], 4	      1272	inflate.c	FUNCTION_7	IF_103
0x4002bfa	            0x750d	                           jne 0x4002c09	      1272	inflate.c	FUNCTION_7	IF_103
0x4002bfc	        0x837dc000	               cmp dword [rbp - 0x40], 0	      1272	inflate.c	FUNCTION_7	IF_103
0x4002c00	            0x7507	                           jne 0x4002c09	      1272	inflate.c	FUNCTION_7	IF_103
0x4002c02	    0xc745c0fbffff	     mov dword [rbp - 0x40], 0xfffffffb 	      1273	inflate.c	FUNCTION_7	IF_103
0x4002c09	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1274	inflate.c	FUNCTION_7
0x4002c0c	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1275	inflate.c	FUNCTION_7
0x4002c10	    0x644833342528	                xor rsi, qword fs:[0x28]	      1275	inflate.c	FUNCTION_7
0x4002c19	            0x7405	                            je 0x4002c20	      1275	inflate.c	FUNCTION_7
0x4002c1b	      0xe800000000	                          call 0x4002c20	      1275	inflate.c	FUNCTION_7
0x4002c20	              0xc9	                                   leave	      1275	inflate.c	FUNCTION_7
0x4002c21	              0xc3	                                     ret	      1275	inflate.c	FUNCTION_7
inflateUndermine	IF,1:WHILE,0:ELSE,0:functions,0:SWITCH,0:DO,0:CALL,1:FOR,0	20
0x4003429	              0x55	                                push rbp	      1511	inflate.c	FUNCTION_14
0x400342a	          0x4889e5	                            mov rbp, rsp	      1511	inflate.c	FUNCTION_14
0x400342d	        0x4883ec20	                           sub rsp, 0x20	      1511	inflate.c	FUNCTION_14
0x4003431	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1511	inflate.c	FUNCTION_14
0x4003435	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1511	inflate.c	FUNCTION_14
0x4003438	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1514	inflate.c	FUNCTION_14	CALL_1
0x400343c	          0x4889c7	                            mov rdi, rax	      1514	inflate.c	FUNCTION_14	CALL_1
0x400343f	      0xe8fccbffff	              call sym.inflateStateCheck	      1514	inflate.c	FUNCTION_14	CALL_1
0x4003444	            0x85c0	                           test eax, eax	      1514	inflate.c	FUNCTION_14	CALL_1
0x4003446	            0x7407	                            je 0x400344f	      1514	inflate.c	FUNCTION_14	CALL_1
0x4003448	      0xb8feffffff	                     mov eax, 0xfffffffe	      1514	inflate.c	FUNCTION_14	CALL_1
0x400344d	            0xeb1f	                           jmp 0x400346e	      1514	inflate.c	FUNCTION_14	CALL_1
0x400344f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1515	inflate.c	FUNCTION_14
0x4003453	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1515	inflate.c	FUNCTION_14
0x4003457	        0x488945f8	                mov qword [rbp - 8], rax	      1515	inflate.c	FUNCTION_14
0x400345b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1521	inflate.c	FUNCTION_14
0x400345f	    0xc780e81b0000	            mov dword [rax + 0x1be8], 1 	      1521	inflate.c	FUNCTION_14
0x4003469	      0xb8fdffffff	                     mov eax, 0xfffffffd	      1522	inflate.c	FUNCTION_14
0x400346e	              0xc9	                                   leave	      1524	inflate.c	FUNCTION_14
0x400346f	              0xc3	                                     ret	      1524	inflate.c	FUNCTION_14
inflateSyncPoint	IF,1:WHILE,0:ELSE,0:functions,0:SWITCH,0:DO,0:CALL,1:FOR,0	28
0x400318d	              0x55	                                push rbp	      1453	inflate.c	FUNCTION_12
0x400318e	          0x4889e5	                            mov rbp, rsp	      1453	inflate.c	FUNCTION_12
0x4003191	        0x4883ec18	                           sub rsp, 0x18	      1453	inflate.c	FUNCTION_12
0x4003195	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1453	inflate.c	FUNCTION_12
0x4003199	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1456	inflate.c	FUNCTION_12	CALL_1
0x400319d	          0x4889c7	                            mov rdi, rax	      1456	inflate.c	FUNCTION_12	CALL_1
0x40031a0	      0xe89bceffff	              call sym.inflateStateCheck	      1456	inflate.c	FUNCTION_12	CALL_1
0x40031a5	            0x85c0	                           test eax, eax	      1456	inflate.c	FUNCTION_12	CALL_1
0x40031a7	            0x7407	                            je 0x40031b0	      1456	inflate.c	FUNCTION_12	CALL_1
0x40031a9	      0xb8feffffff	                     mov eax, 0xfffffffe	      1456	inflate.c	FUNCTION_12	CALL_1
0x40031ae	            0xeb32	                           jmp 0x40031e2	      1456	inflate.c	FUNCTION_12	CALL_1
0x40031b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1457	inflate.c	FUNCTION_12
0x40031b4	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1457	inflate.c	FUNCTION_12
0x40031b8	        0x488945f8	                mov qword [rbp - 8], rax	      1457	inflate.c	FUNCTION_12
0x40031bc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1458	inflate.c	FUNCTION_12
0x40031c0	          0x8b4008	                mov eax, dword [rax + 8]	      1458	inflate.c	FUNCTION_12
0x40031c3	      0x3d413f0000	                         cmp eax, 0x3f41	      1458	inflate.c	FUNCTION_12
0x40031c8	            0x7512	                           jne 0x40031dc	      1458	inflate.c	FUNCTION_12
0x40031ca	        0x488b45f8	                mov rax, qword [rbp - 8]	      1458	inflate.c	FUNCTION_12
0x40031ce	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1458	inflate.c	FUNCTION_12
0x40031d1	            0x85c0	                           test eax, eax	      1458	inflate.c	FUNCTION_12
0x40031d3	            0x7507	                           jne 0x40031dc	      1458	inflate.c	FUNCTION_12
0x40031d5	      0xb801000000	                              mov eax, 1	      1458	inflate.c	FUNCTION_12
0x40031da	            0xeb05	                           jmp 0x40031e1	      1458	inflate.c	FUNCTION_12
0x40031dc	      0xb800000000	                              mov eax, 0	      1458	inflate.c	FUNCTION_12
0x40031e1	              0x90	                                     nop	      1458	inflate.c	FUNCTION_12
0x40031e2	              0xc9	                                   leave	      1459	inflate.c	FUNCTION_12
0x40031e3	              0xc3	                                     ret	      1459	inflate.c	FUNCTION_12
inflateSync	IF,4:WHILE,1:ELSE,0:functions,0:SWITCH,0:DO,0:CALL,4:FOR,0	139
0x4002f81	              0x55	                                push rbp	      1402	inflate.c	FUNCTION_11
0x4002f82	          0x4889e5	                            mov rbp, rsp	      1402	inflate.c	FUNCTION_11
0x4002f85	        0x4883ec40	                           sub rsp, 0x40	      1402	inflate.c	FUNCTION_11
0x4002f89	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1402	inflate.c	FUNCTION_11
0x4002f8d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1402	inflate.c	FUNCTION_11
0x4002f96	        0x488945f8	                mov qword [rbp - 8], rax	      1402	inflate.c	FUNCTION_11
0x4002f9a	            0x31c0	                            xor eax, eax	      1402	inflate.c	FUNCTION_11
0x4002f9c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1409	inflate.c	FUNCTION_11	CALL_1
0x4002fa0	          0x4889c7	                            mov rdi, rax	      1409	inflate.c	FUNCTION_11	CALL_1
0x4002fa3	      0xe898d0ffff	              call sym.inflateStateCheck	      1409	inflate.c	FUNCTION_11	CALL_1
0x4002fa8	            0x85c0	                           test eax, eax	      1409	inflate.c	FUNCTION_11	CALL_1
0x4002faa	            0x740a	                            je 0x4002fb6	      1409	inflate.c	FUNCTION_11	CALL_1
0x4002fac	      0xb8feffffff	                     mov eax, 0xfffffffe	      1409	inflate.c	FUNCTION_11	CALL_1
0x4002fb1	      0xe9c1010000	                           jmp 0x4003177	      1409	inflate.c	FUNCTION_11	CALL_1
0x4002fb6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1410	inflate.c	FUNCTION_11
0x4002fba	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1410	inflate.c	FUNCTION_11
0x4002fbe	        0x488945d8	             mov qword [rbp - 0x28], rax	      1410	inflate.c	FUNCTION_11
0x4002fc2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1411	inflate.c	FUNCTION_11	IF_2
0x4002fc6	          0x8b4008	                mov eax, dword [rax + 8]	      1411	inflate.c	FUNCTION_11	IF_2
0x4002fc9	            0x85c0	                           test eax, eax	      1411	inflate.c	FUNCTION_11	IF_2
0x4002fcb	            0x7516	                           jne 0x4002fe3	      1411	inflate.c	FUNCTION_11	IF_2
0x4002fcd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1411	inflate.c	FUNCTION_11	IF_2
0x4002fd1	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1411	inflate.c	FUNCTION_11	IF_2
0x4002fd4	          0x83f807	                              cmp eax, 7	      1411	inflate.c	FUNCTION_11	IF_2
0x4002fd7	            0x770a	                            ja 0x4002fe3	      1411	inflate.c	FUNCTION_11	IF_2
0x4002fd9	      0xb8fbffffff	                     mov eax, 0xfffffffb	      1411	inflate.c	FUNCTION_11	IF_2
0x4002fde	      0xe994010000	                           jmp 0x4003177	      1411	inflate.c	FUNCTION_11	IF_2
0x4002fe3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1414	inflate.c	FUNCTION_11	IF_3
0x4002fe7	          0x8b4008	                mov eax, dword [rax + 8]	      1414	inflate.c	FUNCTION_11	IF_3
0x4002fea	      0x3d533f0000	                         cmp eax, 0x3f53	      1414	inflate.c	FUNCTION_11	IF_3
0x4002fef	     0xf84bc000000	                            je 0x40030b1	      1414	inflate.c	FUNCTION_11	IF_3
0x4002ff5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1415	inflate.c	FUNCTION_11	IF_3
0x4002ff9	    0xc74008533f00	            mov dword [rax + 8], 0x3f53 	      1415	inflate.c	FUNCTION_11	IF_3
0x4003000	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1416	inflate.c	FUNCTION_11	IF_3
0x4003004	        0x488b5050	            mov rdx, qword [rax + 0x50] 	      1416	inflate.c	FUNCTION_11	IF_3
0x4003008	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1416	inflate.c	FUNCTION_11	IF_3
0x400300c	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1416	inflate.c	FUNCTION_11	IF_3
0x400300f	          0x83e007	                              and eax, 7	      1416	inflate.c	FUNCTION_11	IF_3
0x4003012	            0x89c1	                            mov ecx, eax	      1416	inflate.c	FUNCTION_11	IF_3
0x4003014	          0x48d3e2	                             shl rdx, cl	      1416	inflate.c	FUNCTION_11	IF_3
0x4003017	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1416	inflate.c	FUNCTION_11	IF_3
0x400301b	        0x48895050	             mov qword [rax + 0x50], rdx	      1416	inflate.c	FUNCTION_11	IF_3
0x400301f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1417	inflate.c	FUNCTION_11	IF_3
0x4003023	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1417	inflate.c	FUNCTION_11	IF_3
0x4003026	          0x83e0f8	                     and eax, 0xfffffff8	      1417	inflate.c	FUNCTION_11	IF_3
0x4003029	            0x89c2	                            mov edx, eax	      1417	inflate.c	FUNCTION_11	IF_3
0x400302b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1417	inflate.c	FUNCTION_11	IF_3
0x400302f	          0x895058	             mov dword [rax + 0x58], edx	      1417	inflate.c	FUNCTION_11	IF_3
0x4003032	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1418	inflate.c	FUNCTION_11	IF_3
0x4003039	            0xeb3f	                           jmp 0x400307a	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400303b	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1420	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400303e	          0x8d5001	                      lea edx, [rax + 1]	      1420	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4003041	          0x8955d4	             mov dword [rbp - 0x2c], edx	      1420	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4003044	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1420	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4003048	        0x488b5250	            mov rdx, qword [rdx + 0x50] 	      1420	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400304c	            0x89c0	                            mov eax, eax	      1420	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400304e	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	      1420	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4003052	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1421	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4003056	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1421	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400305a	        0x48c1e808	                              shr rax, 8	      1421	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400305e	          0x4889c2	                            mov rdx, rax	      1421	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4003061	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1421	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4003065	        0x48895050	             mov qword [rax + 0x50], rdx	      1421	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4003069	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1422	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400306d	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1422	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4003070	          0x8d50f8	                      lea edx, [rax - 8]	      1422	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4003073	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1422	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4003077	          0x895058	             mov dword [rax + 0x58], edx	      1422	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400307a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400307e	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4003081	          0x83f807	                              cmp eax, 7	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4003084	            0x77b5	                            ja 0x400303b	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4003086	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1424	inflate.c	FUNCTION_11	IF_3
0x400308a	    0xc7808c000000	               mov dword [rax + 0x8c], 0	      1424	inflate.c	FUNCTION_11	IF_3
0x4003094	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1425	inflate.c	FUNCTION_11	IF_3	CALL_2
0x4003098	    0x488d888c0000	                   lea rcx, [rax + 0x8c]	      1425	inflate.c	FUNCTION_11	IF_3	CALL_2
0x400309f	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1425	inflate.c	FUNCTION_11	IF_3	CALL_2
0x40030a2	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1425	inflate.c	FUNCTION_11	IF_3	CALL_2
0x40030a6	          0x4889c6	                            mov rsi, rax	      1425	inflate.c	FUNCTION_11	IF_3	CALL_2
0x40030a9	          0x4889cf	                            mov rdi, rcx	      1425	inflate.c	FUNCTION_11	IF_3	CALL_2
0x40030ac	      0xe83efeffff	                     call sym.syncsearch	      1425	inflate.c	FUNCTION_11	IF_3	CALL_2
0x40030b1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1429	inflate.c	FUNCTION_11	CALL_3
0x40030b5	          0x8b5008	                mov edx, dword [rax + 8]	      1429	inflate.c	FUNCTION_11	CALL_3
0x40030b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1429	inflate.c	FUNCTION_11	CALL_3
0x40030bc	          0x488b00	                    mov rax, qword [rax]	      1429	inflate.c	FUNCTION_11	CALL_3
0x40030bf	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1429	inflate.c	FUNCTION_11	CALL_3
0x40030c3	    0x4881c18c0000	                           add rcx, 0x8c	      1429	inflate.c	FUNCTION_11	CALL_3
0x40030ca	          0x4889c6	                            mov rsi, rax	      1429	inflate.c	FUNCTION_11	CALL_3
0x40030cd	          0x4889cf	                            mov rdi, rcx	      1429	inflate.c	FUNCTION_11	CALL_3
0x40030d0	      0xe81afeffff	                     call sym.syncsearch	      1429	inflate.c	FUNCTION_11	CALL_3
0x40030d5	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1429	inflate.c	FUNCTION_11	CALL_3
0x40030d8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1430	inflate.c	FUNCTION_11
0x40030dc	          0x8b4008	                mov eax, dword [rax + 8]	      1430	inflate.c	FUNCTION_11
0x40030df	          0x2b45d4	             sub eax, dword [rbp - 0x2c]	      1430	inflate.c	FUNCTION_11
0x40030e2	            0x89c2	                            mov edx, eax	      1430	inflate.c	FUNCTION_11
0x40030e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1430	inflate.c	FUNCTION_11
0x40030e8	          0x895008	                mov dword [rax + 8], edx	      1430	inflate.c	FUNCTION_11
0x40030eb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1431	inflate.c	FUNCTION_11
0x40030ef	          0x488b10	                    mov rdx, qword [rax]	      1431	inflate.c	FUNCTION_11
0x40030f2	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1431	inflate.c	FUNCTION_11
0x40030f5	          0x4801c2	                            add rdx, rax	      1431	inflate.c	FUNCTION_11
0x40030f8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1431	inflate.c	FUNCTION_11
0x40030fc	          0x488910	                    mov qword [rax], rdx	      1431	inflate.c	FUNCTION_11
0x40030ff	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1432	inflate.c	FUNCTION_11
0x4003103	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1432	inflate.c	FUNCTION_11
0x4003107	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1432	inflate.c	FUNCTION_11
0x400310a	          0x4801c2	                            add rdx, rax	      1432	inflate.c	FUNCTION_11
0x400310d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1432	inflate.c	FUNCTION_11
0x4003111	        0x48895010	             mov qword [rax + 0x10], rdx	      1432	inflate.c	FUNCTION_11
0x4003115	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1435	inflate.c	FUNCTION_11	IF_4
0x4003119	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      1435	inflate.c	FUNCTION_11	IF_4
0x400311f	          0x83f804	                              cmp eax, 4	      1435	inflate.c	FUNCTION_11	IF_4
0x4003122	            0x7407	                            je 0x400312b	      1435	inflate.c	FUNCTION_11	IF_4
0x4003124	      0xb8fdffffff	                     mov eax, 0xfffffffd	      1435	inflate.c	FUNCTION_11	IF_4
0x4003129	            0xeb4c	                           jmp 0x4003177	      1435	inflate.c	FUNCTION_11	IF_4
0x400312b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1436	inflate.c	FUNCTION_11
0x400312f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1436	inflate.c	FUNCTION_11
0x4003133	        0x488945e0	             mov qword [rbp - 0x20], rax	      1436	inflate.c	FUNCTION_11
0x4003137	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1436	inflate.c	FUNCTION_11
0x400313b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1436	inflate.c	FUNCTION_11
0x400313f	        0x488945e8	             mov qword [rbp - 0x18], rax	      1436	inflate.c	FUNCTION_11
0x4003143	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1437	inflate.c	FUNCTION_11	CALL_4
0x4003147	          0x4889c7	                            mov rdi, rax	      1437	inflate.c	FUNCTION_11	CALL_4
0x400314a	      0xe800000000	                          call 0x400314f	      1437	inflate.c	FUNCTION_11	CALL_4
0x400314f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1438	inflate.c	FUNCTION_11
0x4003153	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1438	inflate.c	FUNCTION_11
0x4003157	        0x48895010	             mov qword [rax + 0x10], rdx	      1438	inflate.c	FUNCTION_11
0x400315b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1438	inflate.c	FUNCTION_11
0x400315f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1438	inflate.c	FUNCTION_11
0x4003163	        0x48895028	             mov qword [rax + 0x28], rdx	      1438	inflate.c	FUNCTION_11
0x4003167	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1439	inflate.c	FUNCTION_11
0x400316b	    0xc740083f3f00	            mov dword [rax + 8], 0x3f3f 	      1439	inflate.c	FUNCTION_11
0x4003172	      0xb800000000	                              mov eax, 0	      1440	inflate.c	FUNCTION_11
0x4003177	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1441	inflate.c	FUNCTION_11
0x400317b	    0x644833342528	                xor rsi, qword fs:[0x28]	      1441	inflate.c	FUNCTION_11
0x4003184	            0x7405	                            je 0x400318b	      1441	inflate.c	FUNCTION_11
0x4003186	      0xe800000000	                          call 0x400318b	      1441	inflate.c	FUNCTION_11
0x400318b	              0xc9	                                   leave	      1441	inflate.c	FUNCTION_11
0x400318c	              0xc3	                                     ret	      1441	inflate.c	FUNCTION_11
inflateResetKeep	IF,2:WHILE,0:ELSE,0:functions,0:SWITCH,0:DO,0:CALL,2:FOR,0	70
0x40000ba	              0x55	                                push rbp	       121	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40000bb	          0x4889e5	                            mov rbp, rsp	       121	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40000be	        0x4883ec18	                           sub rsp, 0x18	       121	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40000c2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       121	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40000c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       124	inflate.c	FOR_1	IF_7	FUNCTION_2	CALL_1
0x40000ca	          0x4889c7	                            mov rdi, rax	       124	inflate.c	FOR_1	IF_7	FUNCTION_2	CALL_1
0x40000cd	      0xe86effffff	              call sym.inflateStateCheck	       124	inflate.c	FOR_1	IF_7	FUNCTION_2	CALL_1
0x40000d2	            0x85c0	                           test eax, eax	       124	inflate.c	FOR_1	IF_7	FUNCTION_2	CALL_1
0x40000d4	            0x740a	                            je 0x40000e0	       124	inflate.c	FOR_1	IF_7	FUNCTION_2	CALL_1
0x40000d6	      0xb8feffffff	                     mov eax, 0xfffffffe	       124	inflate.c	FOR_1	IF_7	FUNCTION_2	CALL_1
0x40000db	      0xe90f010000	                           jmp 0x40001ef	       124	inflate.c	FOR_1	IF_7	FUNCTION_2	CALL_1
0x40000e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       125	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40000e4	        0x488b4038	            mov rax, qword [rax + 0x38] 	       125	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40000e8	        0x488945f8	                mov qword [rbp - 8], rax	       125	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40000ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       126	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40000f0	    0x48c740280000	               mov qword [rax + 0x28], 0	       126	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40000f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       126	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40000fc	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       126	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000100	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       126	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000104	        0x48895028	             mov qword [rax + 0x28], rdx	       126	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000108	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       126	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400010c	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       126	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000110	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       126	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000114	        0x48895010	             mov qword [rax + 0x10], rdx	       126	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000118	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       127	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400011c	    0x48c740300000	               mov qword [rax + 0x30], 0	       127	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000124	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x4000128	          0x8b4010	            mov eax, dword [rax + 0x10] 	       128	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x400012b	            0x85c0	                           test eax, eax	       128	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x400012d	            0x7417	                            je 0x4000146	       128	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x400012f	        0x488b45f8	                mov rax, qword [rbp - 8]	       129	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x4000133	          0x8b4010	            mov eax, dword [rax + 0x10] 	       129	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x4000136	            0x4898	                                    cdqe	       129	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x4000138	          0x83e001	                              and eax, 1	       129	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x400013b	          0x4889c2	                            mov rdx, rax	       129	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x400013e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       129	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x4000142	        0x48895060	             mov qword [rax + 0x60], rdx	       129	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x4000146	        0x488b45f8	                mov rax, qword [rbp - 8]	       130	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400014a	    0xc74008343f00	            mov dword [rax + 8], 0x3f34 	       130	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000151	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000155	    0xc7400c000000	                mov dword [rax + 0xc], 0	       131	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400015c	        0x488b45f8	                mov rax, qword [rbp - 8]	       132	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000160	    0xc74014000000	               mov dword [rax + 0x14], 0	       132	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000167	        0x488b45f8	                mov rax, qword [rbp - 8]	       133	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400016b	    0xc7401c008000	         mov dword [rax + 0x1c], 0x8000 	       133	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000172	        0x488b45f8	                mov rax, qword [rbp - 8]	       134	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000176	    0x48c740300000	               mov qword [rax + 0x30], 0	       134	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400017e	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000182	    0x48c740500000	               mov qword [rax + 0x50], 0	       135	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400018a	        0x488b45f8	                mov rax, qword [rbp - 8]	       136	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400018e	    0xc74058000000	               mov dword [rax + 0x58], 0	       136	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000195	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000199	    0x488d90580500	                  lea rdx, [rax + 0x558]	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40001a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40001a4	    0x488990900000	             mov qword [rax + 0x90], rdx	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40001ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40001af	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40001b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40001ba	        0x48895070	             mov qword [rax + 0x70], rdx	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40001be	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40001c2	        0x488b5070	            mov rdx, qword [rax + 0x70] 	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40001c6	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40001ca	        0x48895068	             mov qword [rax + 0x68], rdx	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40001ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       138	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40001d2	    0xc780e81b0000	            mov dword [rax + 0x1be8], 1 	       138	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40001dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       139	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40001e0	    0xc780ec1b0000	   mov dword [rax + 0x1bec], 0xffffffff 	       139	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40001ea	      0xb800000000	                              mov eax, 0	       141	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40001ef	              0xc9	                                   leave	       142	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40001f0	              0xc3	                                     ret	       142	inflate.c	FOR_1	IF_7	FUNCTION_2
inflateCodesUsed	IF,1:WHILE,0:ELSE,0:functions,0:SWITCH,0:DO,0:CALL,1:FOR,0	24
0x4003565	              0x55	                                push rbp	      1556	inflate.c	FUNCTION_17
0x4003566	          0x4889e5	                            mov rbp, rsp	      1556	inflate.c	FUNCTION_17
0x4003569	        0x4883ec18	                           sub rsp, 0x18	      1556	inflate.c	FUNCTION_17
0x400356d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1556	inflate.c	FUNCTION_17
0x4003571	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1558	inflate.c	FUNCTION_17	CALL_1
0x4003575	          0x4889c7	                            mov rdi, rax	      1558	inflate.c	FUNCTION_17	CALL_1
0x4003578	      0xe8c3caffff	              call sym.inflateStateCheck	      1558	inflate.c	FUNCTION_17	CALL_1
0x400357d	            0x85c0	                           test eax, eax	      1558	inflate.c	FUNCTION_17	CALL_1
0x400357f	            0x7409	                            je 0x400358a	      1558	inflate.c	FUNCTION_17	CALL_1
0x4003581	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      1558	inflate.c	FUNCTION_17	CALL_1
0x4003588	            0xeb2e	                           jmp 0x40035b8	      1558	inflate.c	FUNCTION_17	CALL_1
0x400358a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1559	inflate.c	FUNCTION_17
0x400358e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1559	inflate.c	FUNCTION_17
0x4003592	        0x488945f8	                mov qword [rbp - 8], rax	      1559	inflate.c	FUNCTION_17
0x4003596	        0x488b45f8	                mov rax, qword [rbp - 8]	      1560	inflate.c	FUNCTION_17
0x400359a	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      1560	inflate.c	FUNCTION_17
0x40035a1	          0x4889c2	                            mov rdx, rax	      1560	inflate.c	FUNCTION_17
0x40035a4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1560	inflate.c	FUNCTION_17
0x40035a8	    0x480558050000	                          add rax, 0x558	      1560	inflate.c	FUNCTION_17
0x40035ae	          0x4829c2	                            sub rdx, rax	      1560	inflate.c	FUNCTION_17
0x40035b1	          0x4889d0	                            mov rax, rdx	      1560	inflate.c	FUNCTION_17
0x40035b4	        0x48c1f802	                              sar rax, 2	      1560	inflate.c	FUNCTION_17
0x40035b8	              0xc9	                                   leave	      1561	inflate.c	FUNCTION_17
0x40035b9	              0xc3	                                     ret	      1561	inflate.c	FUNCTION_17
