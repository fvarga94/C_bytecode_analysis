_bfd_generic_link_hash_table_create	functions,0:IF,2:WHILE,0:SWITCH,0:CALL,3:ELSE,0:FOR,0:DO,0	29
0x40007db	              0x55	                                push rbp	       752	linker.c	FUNCTION_10
0x40007dc	          0x4889e5	                            mov rbp, rsp	       752	linker.c	FUNCTION_10
0x40007df	        0x4883ec20	                           sub rsp, 0x20	       752	linker.c	FUNCTION_10
0x40007e3	        0x48897de8	             mov qword [rbp - 0x18], rdi	       752	linker.c	FUNCTION_10
0x40007e7	    0x48c745f04800	           mov qword [rbp - 0x10], 0x48 	       754	linker.c	FUNCTION_10
0x40007ef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       756	linker.c	FUNCTION_10	CALL_1
0x40007f3	          0x4889c7	                            mov rdi, rax	       756	linker.c	FUNCTION_10	CALL_1
0x40007f6	      0xe800000000	                          call 0x40007fb	       756	linker.c	FUNCTION_10	CALL_1
0x40007fb	        0x488945f8	                mov qword [rbp - 8], rax	       756	linker.c	FUNCTION_10	CALL_1
0x40007ff	      0x48837df800	                  cmp qword [rbp - 8], 0	       757	linker.c	FUNCTION_10	IF_1
0x4000804	            0x7507	                           jne 0x400080d	       757	linker.c	FUNCTION_10	IF_1
0x4000806	      0xb800000000	                              mov eax, 0	       758	linker.c	FUNCTION_10	IF_1
0x400080b	            0xeb35	                           jmp 0x4000842	       758	linker.c	FUNCTION_10	IF_1
0x400080d	        0x488b45f8	                mov rax, qword [rbp - 8]	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000811	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000815	      0xb948000000	                           mov ecx, 0x48	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x400081a	      0xba00000000	                              mov edx, 0	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x400081f	          0x4889c7	                            mov rdi, rax	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000822	      0xe800000000	                          call 0x4000827	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000827	            0x85c0	                           test eax, eax	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000829	            0x7513	                           jne 0x400083e	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x400082b	        0x488b45f8	                mov rax, qword [rbp - 8]	       763	linker.c	FUNCTION_10	IF_2	CALL_3
0x400082f	          0x4889c7	                            mov rdi, rax	       763	linker.c	FUNCTION_10	IF_2	CALL_3
0x4000832	      0xe800000000	                          call 0x4000837	       763	linker.c	FUNCTION_10	IF_2	CALL_3
0x4000837	      0xb800000000	                              mov eax, 0	       764	linker.c	FUNCTION_10	IF_2
0x400083c	            0xeb04	                           jmp 0x4000842	       764	linker.c	FUNCTION_10	IF_2
0x400083e	        0x488b45f8	                mov rax, qword [rbp - 8]	       766	linker.c	FUNCTION_10
0x4000842	              0xc9	                                   leave	       767	linker.c	FUNCTION_10
0x4000843	              0xc3	                                     ret	       767	linker.c	FUNCTION_10
bfd_wrapped_link_hash_lookup	functions,0:IF,6:WHILE,0:SWITCH,0:CALL,16:ELSE,0:FOR,0:DO,0	167
0x40001fe	              0x55	                                push rbp	       525	linker.c	FUNCTION_4
0x40001ff	          0x4889e5	                            mov rbp, rsp	       525	linker.c	FUNCTION_4
0x4000202	        0x4883ec70	                           sub rsp, 0x70	       525	linker.c	FUNCTION_4
0x4000206	        0x48897db8	             mov qword [rbp - 0x48], rdi	       525	linker.c	FUNCTION_4
0x400020a	        0x488975b0	             mov qword [rbp - 0x50], rsi	       525	linker.c	FUNCTION_4
0x400020e	        0x488955a8	             mov qword [rbp - 0x58], rdx	       525	linker.c	FUNCTION_4
0x4000212	          0x894da4	             mov dword [rbp - 0x5c], ecx	       525	linker.c	FUNCTION_4
0x4000215	        0x448945a0	             mov dword [rbp - 0x60], r8d	       525	linker.c	FUNCTION_4
0x4000219	        0x44894d9c	             mov dword [rbp - 0x64], r9d	       525	linker.c	FUNCTION_4
0x400021d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       528	linker.c	FUNCTION_4	IF_1
0x4000221	        0x488b4040	            mov rax, qword [rax + 0x40] 	       528	linker.c	FUNCTION_4	IF_1
0x4000225	          0x4885c0	                           test rax, rax	       528	linker.c	FUNCTION_4	IF_1
0x4000228	     0xf842f020000	                            je 0x400045d	       528	linker.c	FUNCTION_4	IF_1
0x400022e	        0xc645cf00	                mov byte [rbp - 0x31], 0	       531	linker.c	FUNCTION_4	IF_1
0x4000232	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       533	linker.c	FUNCTION_4	IF_1
0x4000236	        0x488945d0	             mov qword [rbp - 0x30], rax	       533	linker.c	FUNCTION_4	IF_1
0x400023a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x400023e	           0xfb610	                   movzx edx, byte [rax]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4000241	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4000245	        0x488b4008	                mov rax, qword [rax + 8]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4000249	         0xfb6401c	           movzx eax, byte [rax + 0x1c] 	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x400024d	            0x38c2	                              cmp dl, al	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x400024f	            0x7413	                            je 0x4000264	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4000251	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4000255	           0xfb610	                   movzx edx, byte [rax]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4000258	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x400025c	         0xfb64009	               movzx eax, byte [rax + 9]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4000260	            0x38c2	                              cmp dl, al	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4000262	            0x750f	                           jne 0x4000273	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4000264	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       536	linker.c	FUNCTION_4	IF_1	IF_2
0x4000268	           0xfb600	                   movzx eax, byte [rax]	       536	linker.c	FUNCTION_4	IF_1	IF_2
0x400026b	          0x8845cf	               mov byte [rbp - 0x31], al	       536	linker.c	FUNCTION_4	IF_1	IF_2
0x400026e	      0x488345d001	               add qword [rbp - 0x30], 1	       537	linker.c	FUNCTION_4	IF_1	IF_2
0x4000273	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x4000277	        0x488b4040	            mov rax, qword [rax + 0x40] 	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x400027b	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x400027f	      0xb900000000	                              mov ecx, 0	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x4000284	      0xba00000000	                              mov edx, 0	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x4000289	          0x4889c7	                            mov rdi, rax	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x400028c	      0xe800000000	                          call 0x4000291	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x4000291	          0x4885c0	                           test rax, rax	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x4000294	     0xf84ce000000	                            je 0x4000368	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x400029a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       551	linker.c	FUNCTION_4	IF_1	IF_3	CALL_3
0x400029e	          0x4889c7	                            mov rdi, rax	       551	linker.c	FUNCTION_4	IF_1	IF_3	CALL_3
0x40002a1	      0xe800000000	                          call 0x40002a6	       551	linker.c	FUNCTION_4	IF_1	IF_3	CALL_3
0x40002a6	        0x4883c009	                              add rax, 9	       551	linker.c	FUNCTION_4	IF_1	IF_3	CALL_3
0x40002aa	        0x488945d8	             mov qword [rbp - 0x28], rax	       551	linker.c	FUNCTION_4	IF_1	IF_3	CALL_3
0x40002ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       552	linker.c	FUNCTION_4	IF_1	IF_3	CALL_4
0x40002b2	          0x4889c7	                            mov rdi, rax	       552	linker.c	FUNCTION_4	IF_1	IF_3	CALL_4
0x40002b5	      0xe800000000	                          call 0x40002ba	       552	linker.c	FUNCTION_4	IF_1	IF_3	CALL_4
0x40002ba	        0x488945e0	             mov qword [rbp - 0x20], rax	       552	linker.c	FUNCTION_4	IF_1	IF_3	CALL_4
0x40002be	      0x48837de000	               cmp qword [rbp - 0x20], 0	       553	linker.c	FUNCTION_4	IF_1	IF_3	IF_4
0x40002c3	            0x750a	                           jne 0x40002cf	       553	linker.c	FUNCTION_4	IF_1	IF_3	IF_4
0x40002c5	      0xb800000000	                              mov eax, 0	       554	linker.c	FUNCTION_4	IF_1	IF_3	IF_4
0x40002ca	      0xe9ae010000	                           jmp 0x400047d	       554	linker.c	FUNCTION_4	IF_1	IF_3	IF_4
0x40002cf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       556	linker.c	FUNCTION_4	IF_1	IF_3
0x40002d3	         0xfb655cf	            movzx edx, byte [rbp - 0x31]	       556	linker.c	FUNCTION_4	IF_1	IF_3
0x40002d7	            0x8810	                      mov byte [rax], dl	       556	linker.c	FUNCTION_4	IF_1	IF_3
0x40002d9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       557	linker.c	FUNCTION_4	IF_1	IF_3
0x40002dd	        0x4883c001	                              add rax, 1	       557	linker.c	FUNCTION_4	IF_1	IF_3
0x40002e1	          0xc60000	                       mov byte [rax], 0	       557	linker.c	FUNCTION_4	IF_1	IF_3
0x40002e4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       558	linker.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x40002e8	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       558	linker.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x40002ef	          0x4889c2	                            mov rdx, rax	       558	linker.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x40002f2	      0xb800000000	                              mov eax, 0	       558	linker.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x40002f7	          0x4889d7	                            mov rdi, rdx	       558	linker.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x40002fa	            0xf2ae	              repne scasb al, byte [rdi]	       558	linker.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x40002fc	          0x4889c8	                            mov rax, rcx	       558	linker.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x40002ff	          0x48f7d0	                                 not rax	       558	linker.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x4000302	        0x488d50ff	                      lea rdx, [rax - 1]	       558	linker.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x4000306	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       558	linker.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x400030a	          0x4801d0	                            add rax, rdx	       558	linker.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x400030d	    0x48b95f5f7772	            movabs rcx, 0x5f706172775f5f	       558	linker.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x4000317	          0x488908	                    mov qword [rax], rcx	       558	linker.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x400031a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       559	linker.c	FUNCTION_4	IF_1	IF_3	CALL_6
0x400031e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       559	linker.c	FUNCTION_4	IF_1	IF_3	CALL_6
0x4000322	          0x4889d6	                            mov rsi, rdx	       559	linker.c	FUNCTION_4	IF_1	IF_3	CALL_6
0x4000325	          0x4889c7	                            mov rdi, rax	       559	linker.c	FUNCTION_4	IF_1	IF_3	CALL_6
0x4000328	      0xe800000000	                          call 0x400032d	       559	linker.c	FUNCTION_4	IF_1	IF_3	CALL_6
0x400032d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x4000331	        0x488b4028	            mov rax, qword [rax + 0x28] 	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x4000335	          0x8b4d9c	             mov ecx, dword [rbp - 0x64]	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x4000338	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x400033b	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x400033f	          0x4189c8	                            mov r8d, ecx	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x4000342	      0xb901000000	                              mov ecx, 1	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x4000347	          0x4889c7	                            mov rdi, rax	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x400034a	      0xe800000000	                          call 0x400034f	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x400034f	        0x488945e8	             mov qword [rbp - 0x18], rax	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x4000353	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       561	linker.c	FUNCTION_4	IF_1	IF_3	CALL_8
0x4000357	          0x4889c7	                            mov rdi, rax	       561	linker.c	FUNCTION_4	IF_1	IF_3	CALL_8
0x400035a	      0xe800000000	                          call 0x400035f	       561	linker.c	FUNCTION_4	IF_1	IF_3	CALL_8
0x400035f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       562	linker.c	FUNCTION_4	IF_1	IF_3
0x4000363	      0xe915010000	                           jmp 0x400047d	       562	linker.c	FUNCTION_4	IF_1	IF_3
0x4000368	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       568	linker.c	FUNCTION_4	IF_1	IF_5
0x400036c	           0xfb600	                   movzx eax, byte [rax]	       568	linker.c	FUNCTION_4	IF_1	IF_5
0x400036f	            0x3c5f	                            cmp al, 0x5f	       568	linker.c	FUNCTION_4	IF_1	IF_5
0x4000371	     0xf85e6000000	                           jne 0x400045d	       568	linker.c	FUNCTION_4	IF_1	IF_5
0x4000377	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x400037b	      0xba07000000	                              mov edx, 7	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x4000380	      0xbe00000000	                              mov esi, 0	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x4000385	          0x4889c7	                            mov rdi, rax	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x4000388	      0xe800000000	                          call 0x400038d	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x400038d	            0x85c0	                           test eax, eax	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x400038f	     0xf85c8000000	                           jne 0x400045d	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x4000395	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x4000399	        0x488d7007	                      lea rsi, [rax + 7]	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x400039d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40003a1	        0x488b4040	            mov rax, qword [rax + 0x40] 	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40003a5	      0xb900000000	                              mov ecx, 0	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40003aa	      0xba00000000	                              mov edx, 0	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40003af	          0x4889c7	                            mov rdi, rax	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40003b2	      0xe800000000	                          call 0x40003b7	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40003b7	          0x4885c0	                           test rax, rax	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40003ba	     0xf849d000000	                            je 0x400045d	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40003c0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       580	linker.c	FUNCTION_4	IF_1	IF_5	CALL_11
0x40003c4	        0x4883c007	                              add rax, 7	       580	linker.c	FUNCTION_4	IF_1	IF_5	CALL_11
0x40003c8	          0x4889c7	                            mov rdi, rax	       580	linker.c	FUNCTION_4	IF_1	IF_5	CALL_11
0x40003cb	      0xe800000000	                          call 0x40003d0	       580	linker.c	FUNCTION_4	IF_1	IF_5	CALL_11
0x40003d0	        0x4883c002	                              add rax, 2	       580	linker.c	FUNCTION_4	IF_1	IF_5	CALL_11
0x40003d4	        0x488945d8	             mov qword [rbp - 0x28], rax	       580	linker.c	FUNCTION_4	IF_1	IF_5	CALL_11
0x40003d8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       581	linker.c	FUNCTION_4	IF_1	IF_5	CALL_12
0x40003dc	          0x4889c7	                            mov rdi, rax	       581	linker.c	FUNCTION_4	IF_1	IF_5	CALL_12
0x40003df	      0xe800000000	                          call 0x40003e4	       581	linker.c	FUNCTION_4	IF_1	IF_5	CALL_12
0x40003e4	        0x488945f0	             mov qword [rbp - 0x10], rax	       581	linker.c	FUNCTION_4	IF_1	IF_5	CALL_12
0x40003e8	      0x48837df000	               cmp qword [rbp - 0x10], 0	       582	linker.c	FUNCTION_4	IF_1	IF_5	IF_6
0x40003ed	            0x750a	                           jne 0x40003f9	       582	linker.c	FUNCTION_4	IF_1	IF_5	IF_6
0x40003ef	      0xb800000000	                              mov eax, 0	       583	linker.c	FUNCTION_4	IF_1	IF_5	IF_6
0x40003f4	      0xe984000000	                           jmp 0x400047d	       583	linker.c	FUNCTION_4	IF_1	IF_5	IF_6
0x40003f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       585	linker.c	FUNCTION_4	IF_1	IF_5
0x40003fd	         0xfb655cf	            movzx edx, byte [rbp - 0x31]	       585	linker.c	FUNCTION_4	IF_1	IF_5
0x4000401	            0x8810	                      mov byte [rax], dl	       585	linker.c	FUNCTION_4	IF_1	IF_5
0x4000403	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       586	linker.c	FUNCTION_4	IF_1	IF_5
0x4000407	        0x4883c001	                              add rax, 1	       586	linker.c	FUNCTION_4	IF_1	IF_5
0x400040b	          0xc60000	                       mov byte [rax], 0	       586	linker.c	FUNCTION_4	IF_1	IF_5
0x400040e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       587	linker.c	FUNCTION_4	IF_1	IF_5	CALL_13
0x4000412	        0x488d5007	                      lea rdx, [rax + 7]	       587	linker.c	FUNCTION_4	IF_1	IF_5	CALL_13
0x4000416	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       587	linker.c	FUNCTION_4	IF_1	IF_5	CALL_13
0x400041a	          0x4889d6	                            mov rsi, rdx	       587	linker.c	FUNCTION_4	IF_1	IF_5	CALL_13
0x400041d	          0x4889c7	                            mov rdi, rax	       587	linker.c	FUNCTION_4	IF_1	IF_5	CALL_13
0x4000420	      0xe800000000	                          call 0x4000425	       587	linker.c	FUNCTION_4	IF_1	IF_5	CALL_13
0x4000425	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x4000429	        0x488b4028	            mov rax, qword [rax + 0x28] 	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x400042d	          0x8b4d9c	             mov ecx, dword [rbp - 0x64]	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x4000430	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x4000433	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x4000437	          0x4189c8	                            mov r8d, ecx	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x400043a	      0xb901000000	                              mov ecx, 1	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x400043f	          0x4889c7	                            mov rdi, rax	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x4000442	      0xe800000000	                          call 0x4000447	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x4000447	        0x488945f8	                mov qword [rbp - 8], rax	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x400044b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       589	linker.c	FUNCTION_4	IF_1	IF_5	CALL_15
0x400044f	          0x4889c7	                            mov rdi, rax	       589	linker.c	FUNCTION_4	IF_1	IF_5	CALL_15
0x4000452	      0xe800000000	                          call 0x4000457	       589	linker.c	FUNCTION_4	IF_1	IF_5	CALL_15
0x4000457	        0x488b45f8	                mov rax, qword [rbp - 8]	       590	linker.c	FUNCTION_4	IF_1	IF_5
0x400045b	            0xeb20	                           jmp 0x400047d	       590	linker.c	FUNCTION_4	IF_1	IF_5
0x400045d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       596	linker.c	FUNCTION_4	CALL_16
0x4000461	        0x488b4028	            mov rax, qword [rax + 0x28] 	       596	linker.c	FUNCTION_4	CALL_16
0x4000465	          0x8b7d9c	             mov edi, dword [rbp - 0x64]	       596	linker.c	FUNCTION_4	CALL_16
0x4000468	          0x8b4da0	             mov ecx, dword [rbp - 0x60]	       596	linker.c	FUNCTION_4	CALL_16
0x400046b	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       596	linker.c	FUNCTION_4	CALL_16
0x400046e	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	       596	linker.c	FUNCTION_4	CALL_16
0x4000472	          0x4189f8	                            mov r8d, edi	       596	linker.c	FUNCTION_4	CALL_16
0x4000475	          0x4889c7	                            mov rdi, rax	       596	linker.c	FUNCTION_4	CALL_16
0x4000478	      0xe800000000	                          call 0x400047d	       596	linker.c	FUNCTION_4	CALL_16
0x400047d	              0xc9	                                   leave	       597	linker.c	FUNCTION_4
0x400047e	              0xc3	                                     ret	       597	linker.c	FUNCTION_4
_bfd_generic_link_hash_table_free	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,3:ELSE,0:FOR,0:DO,0	34
0x4000844	              0x55	                                push rbp	       771	linker.c	FUNCTION_11
0x4000845	          0x4889e5	                            mov rbp, rsp	       771	linker.c	FUNCTION_11
0x4000848	        0x4883ec20	                           sub rsp, 0x20	       771	linker.c	FUNCTION_11
0x400084c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       771	linker.c	FUNCTION_11
0x4000850	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       774	linker.c	FUNCTION_11	CALL_1
0x4000854	         0xfb64048	           movzx eax, byte [rax + 0x48] 	       774	linker.c	FUNCTION_11	CALL_1
0x4000858	          0x83e004	                              and eax, 4	       774	linker.c	FUNCTION_11	CALL_1
0x400085b	            0x84c0	                             test al, al	       774	linker.c	FUNCTION_11	CALL_1
0x400085d	            0x7410	                            je 0x400086f	       774	linker.c	FUNCTION_11	CALL_1
0x400085f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       774	linker.c	FUNCTION_11	CALL_1
0x4000863	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       774	linker.c	FUNCTION_11	CALL_1
0x400086a	          0x4885c0	                           test rax, rax	       774	linker.c	FUNCTION_11	CALL_1
0x400086d	            0x750f	                           jne 0x400087e	       774	linker.c	FUNCTION_11	CALL_1
0x400086f	      0xbe06030000	                          mov esi, 0x306	       774	linker.c	FUNCTION_11	CALL_1
0x4000874	      0xbf00000000	                              mov edi, 0	       774	linker.c	FUNCTION_11	CALL_1
0x4000879	      0xe800000000	                          call 0x400087e	       774	linker.c	FUNCTION_11	CALL_1
0x400087e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       775	linker.c	FUNCTION_11
0x4000882	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       775	linker.c	FUNCTION_11
0x4000889	        0x488945f8	                mov qword [rbp - 8], rax	       775	linker.c	FUNCTION_11
0x400088d	        0x488b45f8	                mov rax, qword [rbp - 8]	       776	linker.c	FUNCTION_11	CALL_2
0x4000891	          0x4889c7	                            mov rdi, rax	       776	linker.c	FUNCTION_11	CALL_2
0x4000894	      0xe800000000	                          call 0x4000899	       776	linker.c	FUNCTION_11	CALL_2
0x4000899	        0x488b45f8	                mov rax, qword [rbp - 8]	       777	linker.c	FUNCTION_11	CALL_3
0x400089d	          0x4889c7	                            mov rdi, rax	       777	linker.c	FUNCTION_11	CALL_3
0x40008a0	      0xe800000000	                          call 0x40008a5	       777	linker.c	FUNCTION_11	CALL_3
0x40008a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       778	linker.c	FUNCTION_11
0x40008a9	    0x48c780f00000	               mov qword [rax + 0xf0], 0	       778	linker.c	FUNCTION_11
0x40008b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       779	linker.c	FUNCTION_11
0x40008b8	         0xfb65048	           movzx edx, byte [rax + 0x48] 	       779	linker.c	FUNCTION_11
0x40008bc	          0x83e2fb	                     and edx, 0xfffffffb	       779	linker.c	FUNCTION_11
0x40008bf	          0x885048	               mov byte [rax + 0x48], dl	       779	linker.c	FUNCTION_11
0x40008c2	              0x90	                                     nop	       780	linker.c	FUNCTION_11
0x40008c3	              0xc9	                                   leave	       780	linker.c	FUNCTION_11
0x40008c4	              0xc3	                                     ret	       780	linker.c	FUNCTION_11
_bfd_generic_link_hide_symbol	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,0:ELSE,0:FOR,0:DO,0	8
0x40046a7	              0x55	                                push rbp	      3136	linker.c	FUNCTION_46
0x40046a8	          0x4889e5	                            mov rbp, rsp	      3136	linker.c	FUNCTION_46
0x40046ab	        0x48897df8	                mov qword [rbp - 8], rdi	      3136	linker.c	FUNCTION_46
0x40046af	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3136	linker.c	FUNCTION_46
0x40046b3	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3136	linker.c	FUNCTION_46
0x40046b7	              0x90	                                     nop	      3137	linker.c	FUNCTION_46
0x40046b8	              0x5d	                                 pop rbp	      3137	linker.c	FUNCTION_46
0x40046b9	              0xc3	                                     ret	      3137	linker.c	FUNCTION_46
_bfd_generic_link_output_symbols	functions,0:IF,31:WHILE,0:SWITCH,2:CALL,34:ELSE,16:FOR,2:DO,0	464
0x40026a8	              0x55	                                push rbp	      1965	linker.c	FUNCTION_24
0x40026a9	          0x4889e5	                            mov rbp, rsp	      1965	linker.c	FUNCTION_24
0x40026ac	        0x4883ec60	                           sub rsp, 0x60	      1965	linker.c	FUNCTION_24
0x40026b0	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1965	linker.c	FUNCTION_24
0x40026b4	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1965	linker.c	FUNCTION_24
0x40026b8	        0x488955a8	             mov qword [rbp - 0x58], rdx	      1965	linker.c	FUNCTION_24
0x40026bc	        0x48894da0	             mov qword [rbp - 0x60], rcx	      1965	linker.c	FUNCTION_24
0x40026c0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1969	linker.c	FUNCTION_24	IF_1	CALL_1
0x40026c4	          0x4889c7	                            mov rdi, rax	      1969	linker.c	FUNCTION_24	IF_1	CALL_1
0x40026c7	      0xe800000000	                          call 0x40026cc	      1969	linker.c	FUNCTION_24	IF_1	CALL_1
0x40026cc	            0x85c0	                           test eax, eax	      1969	linker.c	FUNCTION_24	IF_1	CALL_1
0x40026ce	            0x750a	                           jne 0x40026da	      1969	linker.c	FUNCTION_24	IF_1	CALL_1
0x40026d0	      0xb800000000	                              mov eax, 0	      1970	linker.c	FUNCTION_24	IF_1
0x40026d5	      0xe9c2060000	                           jmp 0x4002d9c	      1970	linker.c	FUNCTION_24	IF_1
0x40026da	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1973	linker.c	FUNCTION_24	IF_2
0x40026de	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1973	linker.c	FUNCTION_24	IF_2
0x40026e2	          0x4885c0	                           test rax, rax	      1973	linker.c	FUNCTION_24	IF_2
0x40026e5	     0xf84cb000000	                            je 0x40027b6	      1973	linker.c	FUNCTION_24	IF_2
0x40026eb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1977	linker.c	FUNCTION_24	IF_2	FOR_1
0x40026ef	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      1977	linker.c	FUNCTION_24	IF_2	FOR_1
0x40026f6	        0x488945d8	             mov qword [rbp - 0x28], rax	      1977	linker.c	FUNCTION_24	IF_2	FOR_1
0x40026fa	      0xe9a9000000	                           jmp 0x40027a8	      1977	linker.c	FUNCTION_24	IF_2	FOR_1
0x40026ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1979	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4002703	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1979	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4002707	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1979	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x400270b	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1979	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x400270f	          0x4839c2	                            cmp rdx, rax	      1979	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4002712	     0xf8584000000	                           jne 0x400279c	      1979	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4002718	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1983	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	CALL_2
0x400271c	        0x488b4008	                mov rax, qword [rax + 8]	      1983	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	CALL_2
0x4002720	    0x488b80000200	           mov rax, qword [rax + 0x200] 	      1983	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	CALL_2
0x4002727	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1983	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	CALL_2
0x400272b	          0x4889d7	                            mov rdi, rdx	      1983	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	CALL_2
0x400272e	            0xffd0	                                call rax	      1983	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	CALL_2
0x4002730	        0x488945f0	             mov qword [rbp - 0x10], rax	      1983	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	CALL_2
0x4002734	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1984	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_4
0x4002739	            0x750a	                           jne 0x4002745	      1984	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_4
0x400273b	      0xb800000000	                              mov eax, 0	      1985	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_4
0x4002740	      0xe957060000	                           jmp 0x4002d9c	      1985	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_4
0x4002745	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1986	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4002749	          0x488b10	                    mov rdx, qword [rax]	      1986	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x400274c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1986	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4002750	        0x48895008	                mov qword [rax + 8], rdx	      1986	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4002754	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1987	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4002758	    0x48c740100000	               mov qword [rax + 0x10], 0	      1987	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4002760	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1988	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4002764	    0xc74018014000	         mov dword [rax + 0x18], 0x4001 	      1988	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x400276b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1989	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x400276f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1989	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4002773	        0x48895020	             mov qword [rax + 0x20], rdx	      1989	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4002777	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1991	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_5	CALL_3
0x400277b	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1991	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_5	CALL_3
0x400277f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1991	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_5	CALL_3
0x4002783	          0x4889ce	                            mov rsi, rcx	      1991	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_5	CALL_3
0x4002786	          0x4889c7	                            mov rdi, rax	      1991	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_5	CALL_3
0x4002789	      0xe82efeffff	      call sym.generic_add_output_symbol	      1991	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_5	CALL_3
0x400278e	            0x85c0	                           test eax, eax	      1991	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_5	CALL_3
0x4002790	            0x7523	                           jne 0x40027b5	      1991	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_5	CALL_3
0x4002792	      0xb800000000	                              mov eax, 0	      1993	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_5
0x4002797	      0xe900060000	                           jmp 0x4002d9c	      1993	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_5
0x400279c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1977	linker.c	FUNCTION_24	IF_2	FOR_1
0x40027a0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1977	linker.c	FUNCTION_24	IF_2	FOR_1
0x40027a4	        0x488945d8	             mov qword [rbp - 0x28], rax	      1977	linker.c	FUNCTION_24	IF_2	FOR_1
0x40027a8	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1977	linker.c	FUNCTION_24	IF_2	FOR_1
0x40027ad	     0xf854cffffff	                           jne 0x40026ff	      1977	linker.c	FUNCTION_24	IF_2	FOR_1
0x40027b3	            0xeb01	                           jmp 0x40027b6	      1977	linker.c	FUNCTION_24	IF_2	FOR_1
0x40027b5	              0x90	                                     nop	      1995	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x40027b6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2002	linker.c	FUNCTION_24	CALL_4
0x40027ba	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      2002	linker.c	FUNCTION_24	CALL_4
0x40027c1	        0x488945d0	             mov qword [rbp - 0x30], rax	      2002	linker.c	FUNCTION_24	CALL_4
0x40027c5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2003	linker.c	FUNCTION_24	CALL_5
0x40027c9	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2003	linker.c	FUNCTION_24	CALL_5
0x40027cf	            0x89c0	                            mov eax, eax	      2003	linker.c	FUNCTION_24	CALL_5
0x40027d1	    0x488d14c50000	                        lea rdx, [rax*8]	      2003	linker.c	FUNCTION_24	CALL_5
0x40027d9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2003	linker.c	FUNCTION_24	CALL_5
0x40027dd	          0x4801d0	                            add rax, rdx	      2003	linker.c	FUNCTION_24	CALL_5
0x40027e0	        0x488945f8	                mov qword [rbp - 8], rax	      2003	linker.c	FUNCTION_24	CALL_5
0x40027e4	      0xe9a0050000	                           jmp 0x4002d89	      2004	linker.c	FUNCTION_24	FOR_2
0x40027e9	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2010	linker.c	FUNCTION_24	FOR_2
0x40027f1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2011	linker.c	FUNCTION_24	FOR_2
0x40027f5	          0x488b00	                    mov rax, qword [rax]	      2011	linker.c	FUNCTION_24	FOR_2
0x40027f8	        0x488945e0	             mov qword [rbp - 0x20], rax	      2011	linker.c	FUNCTION_24	FOR_2
0x40027fc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2012	linker.c	FUNCTION_24	FOR_2	IF_6
0x4002800	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2012	linker.c	FUNCTION_24	FOR_2	IF_6
0x4002803	      0x2582380000	                         and eax, 0x3882	      2012	linker.c	FUNCTION_24	FOR_2	IF_6
0x4002808	            0x85c0	                           test eax, eax	      2012	linker.c	FUNCTION_24	FOR_2	IF_6
0x400280a	            0x7538	                           jne 0x4002844	      2012	linker.c	FUNCTION_24	FOR_2	IF_6
0x400280c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2017	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_7
0x4002810	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2017	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_7
0x4002814	    0x483d00000000	                              cmp rax, 0	      2017	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_7
0x400281a	            0x7428	                            je 0x4002844	      2017	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_7
0x400281c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2018	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_9
0x4002820	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2018	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_9
0x4002824	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2018	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_9
0x4002827	      0x2500100000	                         and eax, 0x1000	      2018	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_9
0x400282c	            0x85c0	                           test eax, eax	      2018	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_9
0x400282e	            0x7514	                           jne 0x4002844	      2018	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_9
0x4002830	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2019	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_11
0x4002834	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2019	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_11
0x4002838	    0x483d00000000	                              cmp rax, 0	      2019	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_11
0x400283e	     0xf853d020000	                           jne 0x4002a81	      2019	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_11
0x4002844	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2021	linker.c	FUNCTION_24	FOR_2	IF_6	IF_7
0x4002848	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2021	linker.c	FUNCTION_24	FOR_2	IF_6	IF_7
0x400284c	          0x4885c0	                           test rax, rax	      2021	linker.c	FUNCTION_24	FOR_2	IF_6	IF_7
0x400284f	            0x7411	                            je 0x4002862	      2021	linker.c	FUNCTION_24	FOR_2	IF_6	IF_7
0x4002851	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2022	linker.c	FUNCTION_24	FOR_2	IF_6	IF_7
0x4002855	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2022	linker.c	FUNCTION_24	FOR_2	IF_6	IF_7
0x4002859	        0x488945e8	             mov qword [rbp - 0x18], rax	      2022	linker.c	FUNCTION_24	FOR_2	IF_6	IF_7
0x400285d	      0xe988000000	                           jmp 0x40028ea	      2022	linker.c	FUNCTION_24	FOR_2	IF_6	IF_7
0x4002862	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2023	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_1	IF_8
0x4002866	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2023	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_1	IF_8
0x4002869	      0x2500080000	                          and eax, 0x800	      2023	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_1	IF_8
0x400286e	            0x85c0	                           test eax, eax	      2023	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_1	IF_8
0x4002870	            0x740a	                            je 0x400287c	      2023	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_1	IF_8
0x4002872	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2033	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_1	IF_8
0x400287a	            0xeb6e	                           jmp 0x40028ea	      2033	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_1	IF_8
0x400287c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2035	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9	CALL_13
0x4002880	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2035	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9	CALL_13
0x4002884	    0x483d00000000	                              cmp rax, 0	      2035	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9	CALL_13
0x400288a	            0x752f	                           jne 0x40028bb	      2035	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9	CALL_13
0x400288c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2037	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9	CALL_14
0x4002890	        0x488b5008	                mov rdx, qword [rax + 8]	      2037	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9	CALL_14
0x4002894	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x4002898	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x400289c	    0x41b901000000	                              mov r9d, 1	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x40028a2	    0x41b800000000	                              mov r8d, 0	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x40028a8	      0xb900000000	                              mov ecx, 0	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x40028ad	          0x4889c7	                            mov rdi, rax	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x40028b0	      0xe800000000	                          call 0x40028b5	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x40028b5	        0x488945e8	             mov qword [rbp - 0x18], rax	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x40028b9	            0xeb2f	                           jmp 0x40028ea	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x40028bb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x40028bf	        0x488b4008	                mov rax, qword [rax + 8]	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x40028c3	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x40028c7	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x40028cb	          0x4889d7	                            mov rdi, rdx	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x40028ce	    0x41b801000000	                              mov r8d, 1	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x40028d4	      0xb900000000	                              mov ecx, 0	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x40028d9	      0xba00000000	                              mov edx, 0	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x40028de	          0x4889c6	                            mov rsi, rax	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x40028e1	      0xe800000000	                          call 0x40028e6	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x40028e6	        0x488945e8	             mov qword [rbp - 0x18], rax	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x40028ea	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2045	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10
0x40028ef	     0xf848c010000	                            je 0x4002a81	      2045	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10
0x40028f5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2052	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11
0x40028f9	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2052	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11
0x40028fd	        0x488b5008	                mov rdx, qword [rax + 8]	      2052	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11
0x4002901	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2052	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11
0x4002905	        0x488b4008	                mov rax, qword [rax + 8]	      2052	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11
0x4002909	          0x4839c2	                            cmp rdx, rax	      2052	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11
0x400290c	            0x7524	                           jne 0x4002932	      2052	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11
0x400290e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2054	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11	IF_12
0x4002912	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2054	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11	IF_12
0x4002916	          0x4885c0	                           test rax, rax	      2054	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11	IF_12
0x4002919	            0x7417	                            je 0x4002932	      2054	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11	IF_12
0x400291b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2055	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11	IF_12
0x400291f	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2055	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11	IF_12
0x4002923	        0x488945e0	             mov qword [rbp - 0x20], rax	      2055	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11	IF_12
0x4002927	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2055	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11	IF_12
0x400292b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2055	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11	IF_12
0x400292f	          0x488910	                    mov qword [rax], rdx	      2055	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11	IF_12
0x4002932	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2058	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002936	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      2058	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x400293a	           0xfb6c0	                           movzx eax, al	      2058	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x400293d	          0x83f806	                              cmp eax, 6	      2058	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002940	            0x770c	                            ja 0x400294e	      2058	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002942	            0x89c0	                            mov eax, eax	      2058	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002944	    0x488b04c50000	                  mov rax, qword [rax*8]	      2058	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x400294c	            0xffe0	                                 jmp rax	      2058	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x400294e	      0xba00000000	                              mov edx, 0	      2062	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	CALL_19
0x4002953	      0xbe0e080000	                          mov esi, 0x80e	      2062	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	CALL_19
0x4002958	      0xbf00000000	                              mov edi, 0	      2062	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	CALL_19
0x400295d	      0xe800000000	                          call 0x4002962	      2062	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	CALL_19
0x4002962	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002966	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2066	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002969	             0xc80	                             or al, 0x80	      2066	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x400296b	            0x89c2	                            mov edx, eax	      2066	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x400296d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002971	          0x895018	             mov dword [rax + 0x18], edx	      2066	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002974	      0xe908010000	                           jmp 0x4002a81	      2067	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002979	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2069	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x400297d	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2069	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002981	        0x488945e8	             mov qword [rbp - 0x18], rax	      2069	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002985	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2072	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002989	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2072	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x400298c	          0x83c802	                               or eax, 2	      2072	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x400298f	            0x89c2	                            mov edx, eax	      2072	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002991	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2072	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002995	          0x895018	             mov dword [rax + 0x18], edx	      2072	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002998	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2073	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x400299c	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2073	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x400299f	      0x257ff7ffff	                     and eax, 0xfffff77f	      2073	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029a4	            0x89c2	                            mov edx, eax	      2073	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029a6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2073	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029aa	          0x895018	             mov dword [rax + 0x18], edx	      2073	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2074	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029b1	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2074	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029b5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2074	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029b9	        0x48895010	             mov qword [rax + 0x10], rdx	      2074	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2075	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029c1	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2075	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029c5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2075	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029c9	        0x48895020	             mov qword [rax + 0x20], rdx	      2075	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029cd	      0xe9af000000	                           jmp 0x4002a81	      2076	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029d2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2078	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029d6	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2078	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029d9	             0xc80	                             or al, 0x80	      2078	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029db	            0x89c2	                            mov edx, eax	      2078	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029dd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2078	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029e1	          0x895018	             mov dword [rax + 0x18], edx	      2078	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029e4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2079	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029e8	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2079	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029eb	          0x80e4f7	                            and ah, 0xf7	      2079	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029ee	            0x89c2	                            mov edx, eax	      2079	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029f0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2079	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029f4	          0x895018	             mov dword [rax + 0x18], edx	      2079	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2080	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029fb	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2080	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x40029ff	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2080	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a03	        0x48895010	             mov qword [rax + 0x10], rdx	      2080	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a07	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2081	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a0b	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2081	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a0f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2081	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a13	        0x48895020	             mov qword [rax + 0x20], rdx	      2081	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a17	            0xeb68	                           jmp 0x4002a81	      2082	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a19	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2084	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a1d	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2084	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a21	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2084	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a25	        0x48895010	             mov qword [rax + 0x10], rdx	      2084	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a29	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2085	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a2d	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2085	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a30	          0x83c802	                               or eax, 2	      2085	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a33	            0x89c2	                            mov edx, eax	      2085	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a35	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2085	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a39	          0x895018	             mov dword [rax + 0x18], edx	      2085	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a3c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2086	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_20
0x4002a40	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2086	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_20
0x4002a44	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2086	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_20
0x4002a47	      0x2500100000	                         and eax, 0x1000	      2086	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_20
0x4002a4c	            0x85c0	                           test eax, eax	      2086	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_20
0x4002a4e	            0x7530	                           jne 0x4002a80	      2086	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_20
0x4002a50	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2088	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_22
0x4002a54	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2088	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_22
0x4002a58	    0x483d00000000	                              cmp rax, 0	      2088	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_22
0x4002a5e	            0x740f	                            je 0x4002a6f	      2088	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_22
0x4002a60	      0xbe28080000	                          mov esi, 0x828	      2088	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_22
0x4002a65	      0xbf00000000	                              mov edi, 0	      2088	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_22
0x4002a6a	      0xe800000000	                          call 0x4002a6f	      2088	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_22
0x4002a6f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2089	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13
0x4002a73	    0x48c740200000	               mov qword [rax + 0x20], 0	      2089	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13
0x4002a7b	            0xeb03	                           jmp 0x4002a80	      2097	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a7d	              0x90	                                     nop	      2064	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a7e	            0xeb01	                           jmp 0x4002a81	      2064	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a80	              0x90	                                     nop	      2097	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4002a81	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2104	linker.c	FUNCTION_24	FOR_2	IF_14
0x4002a85	         0xfb64001	               movzx eax, byte [rax + 1]	      2104	linker.c	FUNCTION_24	FOR_2	IF_14
0x4002a89	          0x83e060	                           and eax, 0x60	      2104	linker.c	FUNCTION_24	FOR_2	IF_14
0x4002a8c	            0x3c60	                            cmp al, 0x60	      2104	linker.c	FUNCTION_24	FOR_2	IF_14
0x4002a8e	            0x7436	                            je 0x4002ac6	      2104	linker.c	FUNCTION_24	FOR_2	IF_14
0x4002a90	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2105	linker.c	FUNCTION_24	FOR_2	IF_14
0x4002a94	         0xfb64001	               movzx eax, byte [rax + 1]	      2105	linker.c	FUNCTION_24	FOR_2	IF_14
0x4002a98	          0x83e060	                           and eax, 0x60	      2105	linker.c	FUNCTION_24	FOR_2	IF_14
0x4002a9b	            0x3c40	                            cmp al, 0x40	      2105	linker.c	FUNCTION_24	FOR_2	IF_14
0x4002a9d	            0x7533	                           jne 0x4002ad2	      2105	linker.c	FUNCTION_24	FOR_2	IF_14
0x4002a9f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2106	linker.c	FUNCTION_24	FOR_2	IF_14	CALL_24
0x4002aa3	        0x488b7008	                mov rsi, qword [rax + 8]	      2106	linker.c	FUNCTION_24	FOR_2	IF_14	CALL_24
0x4002aa7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2106	linker.c	FUNCTION_24	FOR_2	IF_14	CALL_24
0x4002aab	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2106	linker.c	FUNCTION_24	FOR_2	IF_14	CALL_24
0x4002aaf	      0xb900000000	                              mov ecx, 0	      2106	linker.c	FUNCTION_24	FOR_2	IF_14	CALL_24
0x4002ab4	      0xba00000000	                              mov edx, 0	      2106	linker.c	FUNCTION_24	FOR_2	IF_14	CALL_24
0x4002ab9	          0x4889c7	                            mov rdi, rax	      2106	linker.c	FUNCTION_24	FOR_2	IF_14	CALL_24
0x4002abc	      0xe800000000	                          call 0x4002ac1	      2106	linker.c	FUNCTION_24	FOR_2	IF_14	CALL_24
0x4002ac1	          0x4885c0	                           test rax, rax	      2106	linker.c	FUNCTION_24	FOR_2	IF_14	CALL_24
0x4002ac4	            0x750c	                           jne 0x4002ad2	      2106	linker.c	FUNCTION_24	FOR_2	IF_14	CALL_24
0x4002ac6	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2108	linker.c	FUNCTION_24	FOR_2	IF_14
0x4002acd	      0xe903020000	                           jmp 0x4002cd5	      2108	linker.c	FUNCTION_24	FOR_2	IF_14
0x4002ad2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2109	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15
0x4002ad6	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2109	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15
0x4002ad9	      0x2582008000	                       and eax, 0x800082	      2109	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15
0x4002ade	            0x85c0	                           test eax, eax	      2109	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15
0x4002ae0	            0x7435	                            je 0x4002b17	      2109	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15
0x4002ae2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2115	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	IF_16	CALL_25
0x4002ae6	          0x488b00	                    mov rax, qword [rax]	      2115	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	IF_16	CALL_25
0x4002ae9	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      2115	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	IF_16	CALL_25
0x4002aed	            0x751c	                           jne 0x4002b0b	      2115	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	IF_16	CALL_25
0x4002aef	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2116	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	IF_16
0x4002af3	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2116	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	IF_16
0x4002af6	      0x2500040000	                          and eax, 0x400	      2116	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	IF_16
0x4002afb	            0x85c0	                           test eax, eax	      2116	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	IF_16
0x4002afd	            0x740c	                            je 0x4002b0b	      2116	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	IF_16
0x4002aff	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      2117	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	IF_16
0x4002b06	      0xe9ca010000	                           jmp 0x4002cd5	      2117	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	IF_16
0x4002b0b	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2119	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	ELSE_5
0x4002b12	      0xe9be010000	                           jmp 0x4002cd5	      2119	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	ELSE_5
0x4002b17	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2121	linker.c	FUNCTION_24	FOR_2	ELSE_6	IF_17	CALL_26
0x4002b1b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2121	linker.c	FUNCTION_24	FOR_2	ELSE_6	IF_17	CALL_26
0x4002b1f	    0x483d00000000	                              cmp rax, 0	      2121	linker.c	FUNCTION_24	FOR_2	ELSE_6	IF_17	CALL_26
0x4002b25	            0x750c	                           jne 0x4002b33	      2121	linker.c	FUNCTION_24	FOR_2	ELSE_6	IF_17	CALL_26
0x4002b27	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2122	linker.c	FUNCTION_24	FOR_2	ELSE_6	IF_17
0x4002b2e	      0xe9a2010000	                           jmp 0x4002cd5	      2122	linker.c	FUNCTION_24	FOR_2	ELSE_6	IF_17
0x4002b33	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2123	linker.c	FUNCTION_24	FOR_2	ELSE_7	IF_18
0x4002b37	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2123	linker.c	FUNCTION_24	FOR_2	ELSE_7	IF_18
0x4002b3a	          0x83e004	                              and eax, 4	      2123	linker.c	FUNCTION_24	FOR_2	ELSE_7	IF_18
0x4002b3d	            0x85c0	                           test eax, eax	      2123	linker.c	FUNCTION_24	FOR_2	ELSE_7	IF_18
0x4002b3f	            0x7427	                            je 0x4002b68	      2123	linker.c	FUNCTION_24	FOR_2	ELSE_7	IF_18
0x4002b41	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2125	linker.c	FUNCTION_24	FOR_2	ELSE_7	IF_18	IF_19
0x4002b45	         0xfb64001	               movzx eax, byte [rax + 1]	      2125	linker.c	FUNCTION_24	FOR_2	ELSE_7	IF_18	IF_19
0x4002b49	          0x83e060	                           and eax, 0x60	      2125	linker.c	FUNCTION_24	FOR_2	ELSE_7	IF_18	IF_19
0x4002b4c	            0x84c0	                             test al, al	      2125	linker.c	FUNCTION_24	FOR_2	ELSE_7	IF_18	IF_19
0x4002b4e	            0x750c	                           jne 0x4002b5c	      2125	linker.c	FUNCTION_24	FOR_2	ELSE_7	IF_18	IF_19
0x4002b50	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      2126	linker.c	FUNCTION_24	FOR_2	ELSE_7	IF_18	IF_19
0x4002b57	      0xe979010000	                           jmp 0x4002cd5	      2126	linker.c	FUNCTION_24	FOR_2	ELSE_7	IF_18	IF_19
0x4002b5c	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2128	linker.c	FUNCTION_24	FOR_2	ELSE_7	IF_18	ELSE_8
0x4002b63	      0xe96d010000	                           jmp 0x4002cd5	      2128	linker.c	FUNCTION_24	FOR_2	ELSE_7	IF_18	ELSE_8
0x4002b68	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2130	linker.c	FUNCTION_24	FOR_2	ELSE_9	IF_20	CALL_27
0x4002b6c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2130	linker.c	FUNCTION_24	FOR_2	ELSE_9	IF_20	CALL_27
0x4002b70	    0x483d00000000	                              cmp rax, 0	      2130	linker.c	FUNCTION_24	FOR_2	ELSE_9	IF_20	CALL_27
0x4002b76	            0x7414	                            je 0x4002b8c	      2130	linker.c	FUNCTION_24	FOR_2	ELSE_9	IF_20	CALL_27
0x4002b78	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2131	linker.c	FUNCTION_24	FOR_2	ELSE_9	IF_20	CALL_28
0x4002b7c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2131	linker.c	FUNCTION_24	FOR_2	ELSE_9	IF_20	CALL_28
0x4002b80	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2131	linker.c	FUNCTION_24	FOR_2	ELSE_9	IF_20	CALL_28
0x4002b83	      0x2500100000	                         and eax, 0x1000	      2131	linker.c	FUNCTION_24	FOR_2	ELSE_9	IF_20	CALL_28
0x4002b88	            0x85c0	                           test eax, eax	      2131	linker.c	FUNCTION_24	FOR_2	ELSE_9	IF_20	CALL_28
0x4002b8a	            0x740c	                            je 0x4002b98	      2131	linker.c	FUNCTION_24	FOR_2	ELSE_9	IF_20	CALL_28
0x4002b8c	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2132	linker.c	FUNCTION_24	FOR_2	ELSE_9	IF_20
0x4002b93	      0xe93d010000	                           jmp 0x4002cd5	      2132	linker.c	FUNCTION_24	FOR_2	ELSE_9	IF_20
0x4002b98	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2133	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21
0x4002b9c	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2133	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21
0x4002b9f	          0x83e001	                              and eax, 1	      2133	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21
0x4002ba2	            0x85c0	                           test eax, eax	      2133	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21
0x4002ba4	     0xf84af000000	                            je 0x4002c59	      2133	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21
0x4002baa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2135	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	IF_22
0x4002bae	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2135	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	IF_22
0x4002bb1	      0x2500100000	                         and eax, 0x1000	      2135	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	IF_22
0x4002bb6	            0x85c0	                           test eax, eax	      2135	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	IF_22
0x4002bb8	            0x740c	                            je 0x4002bc6	      2135	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	IF_22
0x4002bba	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2136	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	IF_22
0x4002bc1	      0xe90f010000	                           jmp 0x4002cd5	      2136	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	IF_22
0x4002bc6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4002bca	            0x8b00	                    mov eax, dword [rax]	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4002bcc	          0xc1e80f	                            shr eax, 0xf	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4002bcf	          0x83e003	                              and eax, 3	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4002bd2	           0xfb6c0	                           movzx eax, al	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4002bd5	          0x83f801	                              cmp eax, 1	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4002bd8	            0x7475	                            je 0x4002c4f	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4002bda	          0x83f802	                              cmp eax, 2	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4002bdd	            0x7441	                            je 0x4002c20	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4002bdf	            0x85c0	                           test eax, eax	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4002be1	            0x740c	                            je 0x4002bef	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4002be3	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2143	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4002bea	      0xe9e6000000	                           jmp 0x4002cd5	      2144	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4002bef	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      2146	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4002bf6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2147	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_23	CALL_29
0x4002bfa	           0xfb600	                   movzx eax, byte [rax]	      2147	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_23	CALL_29
0x4002bfd	          0x83e003	                              and eax, 3	      2147	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_23	CALL_29
0x4002c00	            0x3c02	                               cmp al, 2	      2147	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_23	CALL_29
0x4002c02	     0xf84cd000000	                            je 0x4002cd5	      2147	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_23	CALL_29
0x4002c08	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2148	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_23
0x4002c0c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2148	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_23
0x4002c10	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2148	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_23
0x4002c13	      0x2500008000	                       and eax, 0x800000	      2148	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_23
0x4002c18	            0x85c0	                           test eax, eax	      2148	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_23
0x4002c1a	     0xf84b5000000	                            je 0x4002cd5	      2148	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_23
0x4002c20	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2152	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_24	CALL_30
0x4002c24	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2152	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_24	CALL_30
0x4002c28	          0x4889d6	                            mov rsi, rdx	      2152	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_24	CALL_30
0x4002c2b	          0x4889c7	                            mov rdi, rax	      2152	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_24	CALL_30
0x4002c2e	      0xe800000000	                          call 0x4002c33	      2152	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_24	CALL_30
0x4002c33	            0x85c0	                           test eax, eax	      2152	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_24	CALL_30
0x4002c35	            0x740c	                            je 0x4002c43	      2152	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_24	CALL_30
0x4002c37	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2153	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_24
0x4002c3e	      0xe992000000	                           jmp 0x4002cd5	      2156	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	ELSE_12
0x4002c43	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      2155	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	ELSE_12
0x4002c4a	      0xe986000000	                           jmp 0x4002cd5	      2156	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	ELSE_12
0x4002c4f	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      2158	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	ELSE_12
0x4002c56	              0x90	                                     nop	      2159	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	ELSE_12
0x4002c57	            0xeb7c	                           jmp 0x4002cd5	      2159	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	ELSE_12
0x4002c59	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2163	linker.c	FUNCTION_24	FOR_2	ELSE_12	ELSE_13	IF_25
0x4002c5d	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2163	linker.c	FUNCTION_24	FOR_2	ELSE_12	ELSE_13	IF_25
0x4002c60	      0x2500080000	                          and eax, 0x800	      2163	linker.c	FUNCTION_24	FOR_2	ELSE_12	ELSE_13	IF_25
0x4002c65	            0x85c0	                           test eax, eax	      2163	linker.c	FUNCTION_24	FOR_2	ELSE_12	ELSE_13	IF_25
0x4002c67	            0x7421	                            je 0x4002c8a	      2163	linker.c	FUNCTION_24	FOR_2	ELSE_12	ELSE_13	IF_25
0x4002c69	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2165	linker.c	FUNCTION_24	FOR_2	ELSE_12	ELSE_13	IF_25	IF_26
0x4002c6d	         0xfb64001	               movzx eax, byte [rax + 1]	      2165	linker.c	FUNCTION_24	FOR_2	ELSE_12	ELSE_13	IF_25	IF_26
0x4002c71	          0x83e060	                           and eax, 0x60	      2165	linker.c	FUNCTION_24	FOR_2	ELSE_12	ELSE_13	IF_25	IF_26
0x4002c74	            0x3c60	                            cmp al, 0x60	      2165	linker.c	FUNCTION_24	FOR_2	ELSE_12	ELSE_13	IF_25	IF_26
0x4002c76	            0x7409	                            je 0x4002c81	      2165	linker.c	FUNCTION_24	FOR_2	ELSE_12	ELSE_13	IF_25	IF_26
0x4002c78	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      2166	linker.c	FUNCTION_24	FOR_2	ELSE_12	ELSE_13	IF_25	IF_26
0x4002c7f	            0xeb54	                           jmp 0x4002cd5	      2166	linker.c	FUNCTION_24	FOR_2	ELSE_12	ELSE_13	IF_25	IF_26
0x4002c81	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2168	linker.c	FUNCTION_24	FOR_2	ELSE_12	ELSE_13	IF_25	ELSE_14
0x4002c88	            0xeb4b	                           jmp 0x4002cd5	      2168	linker.c	FUNCTION_24	FOR_2	ELSE_12	ELSE_13	IF_25	ELSE_14
0x4002c8a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2170	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002c8e	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2170	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002c91	            0x85c0	                           test eax, eax	      2170	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002c93	            0x752c	                           jne 0x4002cc1	      2170	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002c95	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2171	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002c99	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2171	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002c9d	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      2171	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002ca4	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2171	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002ca7	          0xc1e805	                              shr eax, 5	      2171	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002caa	      0x25ffff0f00	                        and eax, 0xfffff	      2171	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002caf	      0x2500000100	                        and eax, 0x10000	      2171	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002cb4	            0x85c0	                           test eax, eax	      2171	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002cb6	            0x7409	                            je 0x4002cc1	      2171	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002cb8	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2175	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002cbf	            0xeb14	                           jmp 0x4002cd5	      2175	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002cc1	      0xba00000000	                              mov edx, 0	      2177	linker.c	FUNCTION_24	FOR_2	CALL_31
0x4002cc6	      0xbe81080000	                          mov esi, 0x881	      2177	linker.c	FUNCTION_24	FOR_2	CALL_31
0x4002ccb	      0xbf00000000	                              mov edi, 0	      2177	linker.c	FUNCTION_24	FOR_2	CALL_31
0x4002cd0	      0xe800000000	                          call 0x4002cd5	      2177	linker.c	FUNCTION_24	FOR_2	CALL_31
0x4002cd5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x4002cd9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x4002cdd	    0x483d00000000	                              cmp rax, 0	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x4002ce3	            0x7465	                            je 0x4002d4a	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x4002ce5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002ce9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002ced	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002cf1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002cf5	          0x4885c0	                           test rax, rax	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002cf8	            0x751f	                           jne 0x4002d19	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002cfa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002cfe	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d05	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d09	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d0d	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d11	          0x4839c2	                            cmp rdx, rax	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d14	           0xf95c0	                                setne al	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d17	            0xeb26	                           jmp 0x4002d3f	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d19	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d1d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d21	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d25	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d29	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d2d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d31	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d35	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d39	          0x4839c2	                            cmp rdx, rax	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d3c	           0xf95c0	                                setne al	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d3f	            0x84c0	                             test al, al	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d41	            0x7407	                            je 0x4002d4a	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002d43	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2185	linker.c	FUNCTION_24	FOR_2	IF_28
0x4002d4a	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2187	linker.c	FUNCTION_24	FOR_2	IF_29
0x4002d4e	            0x7434	                            je 0x4002d84	      2187	linker.c	FUNCTION_24	FOR_2	IF_29
0x4002d50	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2189	linker.c	FUNCTION_24	FOR_2	IF_29	IF_30	CALL_34
0x4002d54	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      2189	linker.c	FUNCTION_24	FOR_2	IF_29	IF_30	CALL_34
0x4002d58	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2189	linker.c	FUNCTION_24	FOR_2	IF_29	IF_30	CALL_34
0x4002d5c	          0x4889ce	                            mov rsi, rcx	      2189	linker.c	FUNCTION_24	FOR_2	IF_29	IF_30	CALL_34
0x4002d5f	          0x4889c7	                            mov rdi, rax	      2189	linker.c	FUNCTION_24	FOR_2	IF_29	IF_30	CALL_34
0x4002d62	      0xe855f8ffff	      call sym.generic_add_output_symbol	      2189	linker.c	FUNCTION_24	FOR_2	IF_29	IF_30	CALL_34
0x4002d67	            0x85c0	                           test eax, eax	      2189	linker.c	FUNCTION_24	FOR_2	IF_29	IF_30	CALL_34
0x4002d69	            0x7507	                           jne 0x4002d72	      2189	linker.c	FUNCTION_24	FOR_2	IF_29	IF_30	CALL_34
0x4002d6b	      0xb800000000	                              mov eax, 0	      2190	linker.c	FUNCTION_24	FOR_2	IF_29	IF_30
0x4002d70	            0xeb2a	                           jmp 0x4002d9c	      2190	linker.c	FUNCTION_24	FOR_2	IF_29	IF_30
0x4002d72	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2191	linker.c	FUNCTION_24	FOR_2	IF_29	IF_31
0x4002d77	            0x740b	                            je 0x4002d84	      2191	linker.c	FUNCTION_24	FOR_2	IF_29	IF_31
0x4002d79	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2192	linker.c	FUNCTION_24	FOR_2	IF_29	IF_31
0x4002d7d	    0xc74038010000	               mov dword [rax + 0x38], 1	      2192	linker.c	FUNCTION_24	FOR_2	IF_29	IF_31
0x4002d84	      0x488345d008	               add qword [rbp - 0x30], 8	      2004	linker.c	FUNCTION_24	FOR_2
0x4002d89	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2004	linker.c	FUNCTION_24	FOR_2
0x4002d8d	        0x483b45f8	                cmp rax, qword [rbp - 8]	      2004	linker.c	FUNCTION_24	FOR_2
0x4002d91	     0xf8252faffff	                            jb 0x40027e9	      2004	linker.c	FUNCTION_24	FOR_2
0x4002d97	      0xb801000000	                              mov eax, 1	      2196	linker.c	FUNCTION_24
0x4002d9c	              0xc9	                                   leave	      2197	linker.c	FUNCTION_24
0x4002d9d	              0xc3	                                     ret	      2197	linker.c	FUNCTION_24
default_data_link_order	functions,0:IF,8:WHILE,0:SWITCH,0:CALL,10:ELSE,2:FOR,0:DO,1	135
0x400352a	              0x55	                                push rbp	      2462	linker.c	FUNCTION_30
0x400352b	          0x4889e5	                            mov rbp, rsp	      2462	linker.c	FUNCTION_30
0x400352e	              0x53	                                push rbx	      2462	linker.c	FUNCTION_30
0x400352f	        0x4883ec58	                           sub rsp, 0x58	      2462	linker.c	FUNCTION_30
0x4003533	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2462	linker.c	FUNCTION_30
0x4003537	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2462	linker.c	FUNCTION_30
0x400353b	        0x488955a8	             mov qword [rbp - 0x58], rdx	      2462	linker.c	FUNCTION_30
0x400353f	        0x48894da0	             mov qword [rbp - 0x60], rcx	      2462	linker.c	FUNCTION_30
0x4003543	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2469	linker.c	FUNCTION_30	CALL_1
0x4003547	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2469	linker.c	FUNCTION_30	CALL_1
0x400354a	      0x2500010000	                          and eax, 0x100	      2469	linker.c	FUNCTION_30	CALL_1
0x400354f	            0x85c0	                           test eax, eax	      2469	linker.c	FUNCTION_30	CALL_1
0x4003551	            0x750f	                           jne 0x4003562	      2469	linker.c	FUNCTION_30	CALL_1
0x4003553	      0xbea5090000	                          mov esi, 0x9a5	      2469	linker.c	FUNCTION_30	CALL_1
0x4003558	      0xbf00000000	                              mov edi, 0	      2469	linker.c	FUNCTION_30	CALL_1
0x400355d	      0xe800000000	                          call 0x4003562	      2469	linker.c	FUNCTION_30	CALL_1
0x4003562	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2471	linker.c	FUNCTION_30
0x4003566	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2471	linker.c	FUNCTION_30
0x400356a	        0x488945c8	             mov qword [rbp - 0x38], rax	      2471	linker.c	FUNCTION_30
0x400356e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2472	linker.c	FUNCTION_30	IF_1
0x4003573	            0x750a	                           jne 0x400357f	      2472	linker.c	FUNCTION_30	IF_1
0x4003575	      0xb801000000	                              mov eax, 1	      2473	linker.c	FUNCTION_30	IF_1
0x400357a	      0xe996010000	                           jmp 0x4003715	      2473	linker.c	FUNCTION_30	IF_1
0x400357f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2475	linker.c	FUNCTION_30
0x4003583	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2475	linker.c	FUNCTION_30
0x4003587	        0x488945d0	             mov qword [rbp - 0x30], rax	      2475	linker.c	FUNCTION_30
0x400358b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2476	linker.c	FUNCTION_30
0x400358f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2476	linker.c	FUNCTION_30
0x4003592	            0x89c0	                            mov eax, eax	      2476	linker.c	FUNCTION_30
0x4003594	        0x488945e0	             mov qword [rbp - 0x20], rax	      2476	linker.c	FUNCTION_30
0x4003598	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2477	linker.c	FUNCTION_30	IF_2
0x400359d	            0x7556	                           jne 0x40035f5	      2477	linker.c	FUNCTION_30	IF_2
0x400359f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x40035a3	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x40035aa	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x40035ae	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2480	linker.c	FUNCTION_30	IF_2
0x40035b2	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      2480	linker.c	FUNCTION_30	IF_2
0x40035b5	          0x83e210	                           and edx, 0x10	      2480	linker.c	FUNCTION_30	IF_2
0x40035b8	            0x85d2	                           test edx, edx	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x40035ba	           0xf95c2	                                setne dl	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x40035bd	           0xfb6d2	                           movzx edx, dl	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x40035c0	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x40035c4	        0x488b4908	                mov rcx, qword [rcx + 8]	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x40035c8	          0x8b490c	              mov ecx, dword [rcx + 0xc]	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x40035cb	            0x85c9	                           test ecx, ecx	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x40035cd	           0xf94c1	                                 sete cl	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x40035d0	           0xfb6f1	                           movzx esi, cl	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x40035d3	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x40035d7	          0x4889cf	                            mov rdi, rcx	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x40035da	            0xffd0	                                call rax	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x40035dc	        0x488945d0	             mov qword [rbp - 0x30], rax	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x40035e0	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      2481	linker.c	FUNCTION_30	IF_2	IF_3
0x40035e5	     0xf85cd000000	                           jne 0x40036b8	      2481	linker.c	FUNCTION_30	IF_2	IF_3
0x40035eb	      0xb800000000	                              mov eax, 0	      2482	linker.c	FUNCTION_30	IF_2	IF_3
0x40035f0	      0xe920010000	                           jmp 0x4003715	      2482	linker.c	FUNCTION_30	IF_2	IF_3
0x40035f5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2484	linker.c	FUNCTION_30	ELSE_1	IF_4
0x40035f9	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2484	linker.c	FUNCTION_30	ELSE_1	IF_4
0x40035fd	     0xf83b5000000	                           jae 0x40036b8	      2484	linker.c	FUNCTION_30	ELSE_1	IF_4
0x4003603	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2487	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_4
0x4003607	          0x4889c7	                            mov rdi, rax	      2487	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_4
0x400360a	      0xe800000000	                          call 0x400360f	      2487	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_4
0x400360f	        0x488945d0	             mov qword [rbp - 0x30], rax	      2487	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_4
0x4003613	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      2488	linker.c	FUNCTION_30	ELSE_1	IF_4	IF_5
0x4003618	            0x750a	                           jne 0x4003624	      2488	linker.c	FUNCTION_30	ELSE_1	IF_4	IF_5
0x400361a	      0xb800000000	                              mov eax, 0	      2489	linker.c	FUNCTION_30	ELSE_1	IF_4	IF_5
0x400361f	      0xe9f1000000	                           jmp 0x4003715	      2489	linker.c	FUNCTION_30	ELSE_1	IF_4	IF_5
0x4003624	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2490	linker.c	FUNCTION_30	ELSE_1	IF_4
0x4003628	        0x488945d8	             mov qword [rbp - 0x28], rax	      2490	linker.c	FUNCTION_30	ELSE_1	IF_4
0x400362c	      0x48837de001	               cmp qword [rbp - 0x20], 1	      2491	linker.c	FUNCTION_30	ELSE_1	IF_4	IF_6
0x4003631	            0x7522	                           jne 0x4003655	      2491	linker.c	FUNCTION_30	ELSE_1	IF_4	IF_6
0x4003633	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2492	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_5
0x4003637	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2492	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_5
0x400363b	           0xfb600	                   movzx eax, byte [rax]	      2492	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_5
0x400363e	           0xfb6c8	                           movzx ecx, al	      2492	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_5
0x4003641	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2492	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_5
0x4003645	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2492	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_5
0x4003649	            0x89ce	                            mov esi, ecx	      2492	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_5
0x400364b	          0x4889c7	                            mov rdi, rax	      2492	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_5
0x400364e	      0xe800000000	                          call 0x4003653	      2492	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_5
0x4003653	            0xeb63	                           jmp 0x40036b8	      2492	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_5
0x4003655	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2497	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	DO_1	CALL_6
0x4003659	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      2497	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	DO_1	CALL_6
0x400365d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2497	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	DO_1	CALL_6
0x4003661	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2497	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	DO_1	CALL_6
0x4003665	          0x4889ce	                            mov rsi, rcx	      2497	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	DO_1	CALL_6
0x4003668	          0x4889c7	                            mov rdi, rax	      2497	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	DO_1	CALL_6
0x400366b	      0xe800000000	                          call 0x4003670	      2497	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	DO_1	CALL_6
0x4003670	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2498	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	DO_1
0x4003674	        0x480145d8	            add qword [rbp - 0x28], rax 	      2498	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	DO_1
0x4003678	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2499	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	DO_1
0x400367c	        0x482945c8	             sub qword [rbp - 0x38], rax	      2499	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	DO_1
0x4003680	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2501	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2
0x4003684	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      2501	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2
0x4003688	            0x73cb	                           jae 0x4003655	      2501	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2
0x400368a	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2502	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	IF_7
0x400368f	            0x741b	                            je 0x40036ac	      2502	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	IF_7
0x4003691	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2503	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	CALL_7
0x4003695	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      2503	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	CALL_7
0x4003699	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2503	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	CALL_7
0x400369d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2503	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	CALL_7
0x40036a1	          0x4889ce	                            mov rsi, rcx	      2503	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	CALL_7
0x40036a4	          0x4889c7	                            mov rdi, rax	      2503	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	CALL_7
0x40036a7	      0xe800000000	                          call 0x40036ac	      2503	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	CALL_7
0x40036ac	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2504	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2
0x40036b0	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2504	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2
0x40036b4	        0x488945c8	             mov qword [rbp - 0x38], rax	      2504	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2
0x40036b8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2508	linker.c	FUNCTION_30	CALL_8
0x40036bc	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      2508	linker.c	FUNCTION_30	CALL_8
0x40036c0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2508	linker.c	FUNCTION_30	CALL_8
0x40036c4	          0x4889c7	                            mov rdi, rax	      2508	linker.c	FUNCTION_30	CALL_8
0x40036c7	      0xe800000000	                          call 0x40036cc	      2508	linker.c	FUNCTION_30	CALL_8
0x40036cc	            0x89c0	                            mov eax, eax	      2508	linker.c	FUNCTION_30	CALL_8
0x40036ce	        0x480fafc3	                           imul rax, rbx	      2508	linker.c	FUNCTION_30	CALL_8
0x40036d2	        0x488945e8	             mov qword [rbp - 0x18], rax	      2508	linker.c	FUNCTION_30	CALL_8
0x40036d6	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	      2509	linker.c	FUNCTION_30	CALL_9
0x40036da	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2509	linker.c	FUNCTION_30	CALL_9
0x40036de	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2509	linker.c	FUNCTION_30	CALL_9
0x40036e2	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      2509	linker.c	FUNCTION_30	CALL_9
0x40036e6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2509	linker.c	FUNCTION_30	CALL_9
0x40036ea	          0x4989f8	                             mov r8, rdi	      2509	linker.c	FUNCTION_30	CALL_9
0x40036ed	          0x4889c7	                            mov rdi, rax	      2509	linker.c	FUNCTION_30	CALL_9
0x40036f0	      0xe800000000	                          call 0x40036f5	      2509	linker.c	FUNCTION_30	CALL_9
0x40036f5	          0x8945c4	             mov dword [rbp - 0x3c], eax	      2509	linker.c	FUNCTION_30	CALL_9
0x40036f8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2511	linker.c	FUNCTION_30	IF_8
0x40036fc	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2511	linker.c	FUNCTION_30	IF_8
0x4003700	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2511	linker.c	FUNCTION_30	IF_8
0x4003704	            0x740c	                            je 0x4003712	      2511	linker.c	FUNCTION_30	IF_8
0x4003706	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2512	linker.c	FUNCTION_30	CALL_10
0x400370a	          0x4889c7	                            mov rdi, rax	      2512	linker.c	FUNCTION_30	CALL_10
0x400370d	      0xe800000000	                          call 0x4003712	      2512	linker.c	FUNCTION_30	CALL_10
0x4003712	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2513	linker.c	FUNCTION_30
0x4003715	        0x4883c458	                           add rsp, 0x58	      2514	linker.c	FUNCTION_30
0x4003719	              0x5b	                                 pop rbx	      2514	linker.c	FUNCTION_30
0x400371a	              0x5d	                                 pop rbp	      2514	linker.c	FUNCTION_30
0x400371b	              0xc3	                                     ret	      2514	linker.c	FUNCTION_30
_bfd_nolink_bfd_define_common_symbol	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	11
0x4004c28	              0x55	                                push rbp	      3495	linker.c	FUNCTION_64
0x4004c29	          0x4889e5	                            mov rbp, rsp	      3495	linker.c	FUNCTION_64
0x4004c2c	        0x4883ec20	                           sub rsp, 0x20	      3495	linker.c	FUNCTION_64
0x4004c30	        0x48897df8	                mov qword [rbp - 8], rdi	      3495	linker.c	FUNCTION_64
0x4004c34	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3495	linker.c	FUNCTION_64
0x4004c38	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3495	linker.c	FUNCTION_64
0x4004c3c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3496	linker.c	FUNCTION_64	CALL_1
0x4004c40	          0x4889c7	                            mov rdi, rax	      3496	linker.c	FUNCTION_64	CALL_1
0x4004c43	      0xe800000000	                          call 0x4004c48	      3496	linker.c	FUNCTION_64	CALL_1
0x4004c48	              0xc9	                                   leave	      3497	linker.c	FUNCTION_64
0x4004c49	              0xc3	                                     ret	      3497	linker.c	FUNCTION_64
_bfd_link_hash_newfunc	functions,0:IF,3:WHILE,0:SWITCH,0:CALL,3:ELSE,0:FOR,0:DO,0	37
0x4000040	              0x55	                                push rbp	       430	linker.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       430	linker.c	FUNCTION_1
0x4000044	        0x4883ec30	                           sub rsp, 0x30	       430	linker.c	FUNCTION_1
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	       430	linker.c	FUNCTION_1
0x400004c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       430	linker.c	FUNCTION_1
0x4000050	        0x488955d8	             mov qword [rbp - 0x28], rdx	       430	linker.c	FUNCTION_1
0x4000054	      0x48837de800	               cmp qword [rbp - 0x18], 0	       433	linker.c	FUNCTION_1	IF_1
0x4000059	            0x7522	                           jne 0x400007d	       433	linker.c	FUNCTION_1	IF_1
0x400005b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       435	linker.c	FUNCTION_1	IF_1
0x400005f	      0xbe38000000	                           mov esi, 0x38	       435	linker.c	FUNCTION_1	IF_1
0x4000064	          0x4889c7	                            mov rdi, rax	       435	linker.c	FUNCTION_1	IF_1
0x4000067	      0xe800000000	                          call 0x400006c	       435	linker.c	FUNCTION_1	IF_1
0x400006c	        0x488945e8	             mov qword [rbp - 0x18], rax	       435	linker.c	FUNCTION_1	IF_1
0x4000070	      0x48837de800	               cmp qword [rbp - 0x18], 0	       437	linker.c	FUNCTION_1	IF_1	IF_2
0x4000075	            0x7506	                           jne 0x400007d	       437	linker.c	FUNCTION_1	IF_1	IF_2
0x4000077	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       438	linker.c	FUNCTION_1	IF_1	IF_2
0x400007b	            0xeb48	                           jmp 0x40000c5	       438	linker.c	FUNCTION_1	IF_1	IF_2
0x400007d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       442	linker.c	FUNCTION_1	CALL_2
0x4000081	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       442	linker.c	FUNCTION_1	CALL_2
0x4000085	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       442	linker.c	FUNCTION_1	CALL_2
0x4000089	          0x4889ce	                            mov rsi, rcx	       442	linker.c	FUNCTION_1	CALL_2
0x400008c	          0x4889c7	                            mov rdi, rax	       442	linker.c	FUNCTION_1	CALL_2
0x400008f	      0xe800000000	                          call 0x4000094	       442	linker.c	FUNCTION_1	CALL_2
0x4000094	        0x488945e8	             mov qword [rbp - 0x18], rax	       442	linker.c	FUNCTION_1	CALL_2
0x4000098	      0x48837de800	               cmp qword [rbp - 0x18], 0	       443	linker.c	FUNCTION_1	IF_3
0x400009d	            0x7422	                            je 0x40000c1	       443	linker.c	FUNCTION_1	IF_3
0x400009f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       445	linker.c	FUNCTION_1	IF_3
0x40000a3	        0x488945f8	                mov qword [rbp - 8], rax	       445	linker.c	FUNCTION_1	IF_3
0x40000a7	        0x488b45f8	                mov rax, qword [rbp - 8]	       448	linker.c	FUNCTION_1	IF_3	CALL_3
0x40000ab	        0x4883c018	                           add rax, 0x18	       448	linker.c	FUNCTION_1	IF_3	CALL_3
0x40000af	      0xba20000000	                           mov edx, 0x20	       448	linker.c	FUNCTION_1	IF_3	CALL_3
0x40000b4	      0xbe00000000	                              mov esi, 0	       448	linker.c	FUNCTION_1	IF_3	CALL_3
0x40000b9	          0x4889c7	                            mov rdi, rax	       448	linker.c	FUNCTION_1	IF_3	CALL_3
0x40000bc	      0xe800000000	                          call 0x40000c1	       448	linker.c	FUNCTION_1	IF_3	CALL_3
0x40000c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	linker.c	FUNCTION_1
0x40000c5	              0xc9	                                   leave	       453	linker.c	FUNCTION_1
0x40000c6	              0xc3	                                     ret	       453	linker.c	FUNCTION_1
generic_link_check_archive_element	functions,0:IF,10:WHILE,0:SWITCH,0:CALL,16:ELSE,2:FOR,1:DO,0	208
0x4000e45	              0x55	                                push rbp	      1024	linker.c	FUNCTION_18
0x4000e46	          0x4889e5	                            mov rbp, rsp	      1024	linker.c	FUNCTION_18
0x4000e49	              0x53	                                push rbx	      1024	linker.c	FUNCTION_18
0x4000e4a	        0x4883ec68	                           sub rsp, 0x68	      1024	linker.c	FUNCTION_18
0x4000e4e	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1024	linker.c	FUNCTION_18
0x4000e52	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1024	linker.c	FUNCTION_18
0x4000e56	        0x488955a8	             mov qword [rbp - 0x58], rdx	      1024	linker.c	FUNCTION_18
0x4000e5a	        0x48894da0	             mov qword [rbp - 0x60], rcx	      1024	linker.c	FUNCTION_18
0x4000e5e	        0x4c894598	              mov qword [rbp - 0x68], r8	      1024	linker.c	FUNCTION_18
0x4000e62	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1027	linker.c	FUNCTION_18
0x4000e66	    0xc70000000000	                      mov dword [rax], 0	      1027	linker.c	FUNCTION_18
0x4000e6c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1029	linker.c	FUNCTION_18	IF_1	CALL_1
0x4000e70	          0x4889c7	                            mov rdi, rax	      1029	linker.c	FUNCTION_18	IF_1	CALL_1
0x4000e73	      0xe800000000	                          call 0x4000e78	      1029	linker.c	FUNCTION_18	IF_1	CALL_1
0x4000e78	            0x85c0	                           test eax, eax	      1029	linker.c	FUNCTION_18	IF_1	CALL_1
0x4000e7a	            0x750a	                           jne 0x4000e86	      1029	linker.c	FUNCTION_18	IF_1	CALL_1
0x4000e7c	      0xb800000000	                              mov eax, 0	      1030	linker.c	FUNCTION_18	IF_1
0x4000e81	      0xe9c7020000	                           jmp 0x400114d	      1030	linker.c	FUNCTION_18	IF_1
0x4000e86	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1032	linker.c	FUNCTION_18	CALL_2
0x4000e8a	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      1032	linker.c	FUNCTION_18	CALL_2
0x4000e91	        0x488945c8	             mov qword [rbp - 0x38], rax	      1032	linker.c	FUNCTION_18	CALL_2
0x4000e95	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1033	linker.c	FUNCTION_18	CALL_3
0x4000e99	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1033	linker.c	FUNCTION_18	CALL_3
0x4000e9f	            0x89c0	                            mov eax, eax	      1033	linker.c	FUNCTION_18	CALL_3
0x4000ea1	    0x488d14c50000	                        lea rdx, [rax*8]	      1033	linker.c	FUNCTION_18	CALL_3
0x4000ea9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1033	linker.c	FUNCTION_18	CALL_3
0x4000ead	          0x4801d0	                            add rax, rdx	      1033	linker.c	FUNCTION_18	CALL_3
0x4000eb0	        0x488945d0	             mov qword [rbp - 0x30], rax	      1033	linker.c	FUNCTION_18	CALL_3
0x4000eb4	      0xe981020000	                           jmp 0x400113a	      1034	linker.c	FUNCTION_18	FOR_1
0x4000eb9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1038	linker.c	FUNCTION_18	FOR_1
0x4000ebd	          0x488b00	                    mov rax, qword [rax]	      1038	linker.c	FUNCTION_18	FOR_1
0x4000ec0	        0x488945d8	             mov qword [rbp - 0x28], rax	      1038	linker.c	FUNCTION_18	FOR_1
0x4000ec4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1041	linker.c	FUNCTION_18	FOR_1	IF_2	CALL_4
0x4000ec8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1041	linker.c	FUNCTION_18	FOR_1	IF_2	CALL_4
0x4000ecc	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1041	linker.c	FUNCTION_18	FOR_1	IF_2	CALL_4
0x4000ecf	      0x2500100000	                         and eax, 0x1000	      1041	linker.c	FUNCTION_18	FOR_1	IF_2	CALL_4
0x4000ed4	            0x85c0	                           test eax, eax	      1041	linker.c	FUNCTION_18	FOR_1	IF_2	CALL_4
0x4000ed6	            0x7514	                           jne 0x4000eec	      1041	linker.c	FUNCTION_18	FOR_1	IF_2	CALL_4
0x4000ed8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1042	linker.c	FUNCTION_18	FOR_1	IF_2
0x4000edc	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1042	linker.c	FUNCTION_18	FOR_1	IF_2
0x4000edf	      0x2582200000	                         and eax, 0x2082	      1042	linker.c	FUNCTION_18	FOR_1	IF_2
0x4000ee4	            0x85c0	                           test eax, eax	      1042	linker.c	FUNCTION_18	FOR_1	IF_2
0x4000ee6	     0xf8445020000	                            je 0x4001131	      1042	linker.c	FUNCTION_18	FOR_1	IF_2
0x4000eec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000ef0	        0x488b7008	                mov rsi, qword [rax + 8]	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000ef4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000ef8	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000efc	    0x41b801000000	                              mov r8d, 1	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000f02	      0xb900000000	                              mov ecx, 0	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000f07	      0xba00000000	                              mov edx, 0	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000f0c	          0x4889c7	                            mov rdi, rax	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000f0f	      0xe800000000	                          call 0x4000f14	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000f14	        0x488945a8	             mov qword [rbp - 0x58], rax	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000f18	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1052	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000f1d	     0xf8411020000	                            je 0x4001134	      1052	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000f23	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000f27	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000f2b	            0x3c01	                               cmp al, 1	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000f2d	            0x7410	                            je 0x4000f3f	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000f2f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1054	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000f33	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1054	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000f37	            0x3c05	                               cmp al, 5	      1054	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000f39	     0xf85f5010000	                           jne 0x4001134	      1054	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000f3f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1059	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_7
0x4000f43	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1059	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_7
0x4000f47	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1059	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_7
0x4000f4a	      0x2500100000	                         and eax, 0x1000	      1059	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_7
0x4000f4f	            0x85c0	                           test eax, eax	      1059	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_7
0x4000f51	            0x7419	                            je 0x4000f6c	      1059	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_7
0x4000f53	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1060	linker.c	FUNCTION_18	FOR_1	IF_4
0x4000f57	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1060	linker.c	FUNCTION_18	FOR_1	IF_4
0x4000f5b	            0x3c01	                               cmp al, 1	      1060	linker.c	FUNCTION_18	FOR_1	IF_4
0x4000f5d	            0x756a	                           jne 0x4000fc9	      1060	linker.c	FUNCTION_18	FOR_1	IF_4
0x4000f5f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1061	linker.c	FUNCTION_18	FOR_1	IF_4
0x4000f63	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1061	linker.c	FUNCTION_18	FOR_1	IF_4
0x4000f67	          0x4885c0	                           test rax, rax	      1061	linker.c	FUNCTION_18	FOR_1	IF_4
0x4000f6a	            0x755d	                           jne 0x4000fc9	      1061	linker.c	FUNCTION_18	FOR_1	IF_4
0x4000f6c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1066	linker.c	FUNCTION_18	FOR_1	IF_4
0x4000f70	    0xc70001000000	                      mov dword [rax], 1	      1066	linker.c	FUNCTION_18	FOR_1	IF_4
0x4000f76	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000f7a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000f7e	          0x488b00	                    mov rax, qword [rax]	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000f81	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000f85	        0x488b5208	                mov rdx, qword [rdx + 8]	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000f89	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000f8d	        0x488d4db8	                   lea rcx, [rbp - 0x48]	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000f91	        0x488b7db0	             mov rdi, qword [rbp - 0x50]	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000f95	            0xffd0	                                call rax	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000f97	            0x85c0	                           test eax, eax	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000f99	            0x750a	                           jne 0x4000fa5	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000f9b	      0xb800000000	                              mov eax, 0	      1070	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000fa0	      0xe9a8010000	                           jmp 0x400114d	      1070	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000fa5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4000fa9	        0x488b4008	                mov rax, qword [rax + 8]	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4000fad	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4000fb4	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4000fb8	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4000fbc	          0x4889ce	                            mov rsi, rcx	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4000fbf	          0x4889d7	                            mov rdi, rdx	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4000fc2	            0xffd0	                                call rax	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4000fc4	      0xe984010000	                           jmp 0x400114d	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4000fc9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1078	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000fcd	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1078	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000fd1	            0x3c01	                               cmp al, 1	      1078	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000fd3	     0xf8513010000	                           jne 0x40010ec	      1078	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000fd9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1091	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000fdd	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1091	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000fe1	        0x488945e0	             mov qword [rbp - 0x20], rax	      1091	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000fe5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1092	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000fe9	        0xc6401805	                mov byte [rax + 0x18], 5	      1092	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000fed	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1094	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_10
0x4000ff1	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1094	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_10
0x4000ff5	      0xbe10000000	                           mov esi, 0x10	      1094	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_10
0x4000ffa	          0x4889c7	                            mov rdi, rax	      1094	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_10
0x4000ffd	      0xe800000000	                          call 0x4001002	      1094	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_10
0x4001002	          0x4889c2	                            mov rdx, rax	      1094	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_10
0x4001005	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1093	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001009	        0x48895028	             mov qword [rax + 0x28], rdx	      1093	linker.c	FUNCTION_18	FOR_1	IF_6
0x400100d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1096	linker.c	FUNCTION_18	FOR_1	IF_6	IF_7
0x4001011	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1096	linker.c	FUNCTION_18	FOR_1	IF_6	IF_7
0x4001015	          0x4885c0	                           test rax, rax	      1096	linker.c	FUNCTION_18	FOR_1	IF_6	IF_7
0x4001018	            0x750a	                           jne 0x4001024	      1096	linker.c	FUNCTION_18	FOR_1	IF_6	IF_7
0x400101a	      0xb800000000	                              mov eax, 0	      1097	linker.c	FUNCTION_18	FOR_1	IF_6	IF_7
0x400101f	      0xe929010000	                           jmp 0x400114d	      1097	linker.c	FUNCTION_18	FOR_1	IF_6	IF_7
0x4001024	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1099	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_11
0x4001028	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1099	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_11
0x400102c	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1099	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_11
0x4001030	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1099	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_11
0x4001034	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1099	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_11
0x4001038	          0x4801d0	                            add rax, rdx	      1099	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_11
0x400103b	        0x488945e8	             mov qword [rbp - 0x18], rax	      1099	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_11
0x400103f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1100	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001043	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1100	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001047	        0x48895030	             mov qword [rax + 0x30], rdx	      1100	linker.c	FUNCTION_18	FOR_1	IF_6
0x400104b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1102	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_12
0x400104f	          0x4889c7	                            mov rdi, rax	      1102	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_12
0x4001052	      0xe800000000	                          call 0x4001057	      1102	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_12
0x4001057	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1102	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_12
0x400105a	        0x837dc404	               cmp dword [rbp - 0x3c], 4	      1103	linker.c	FUNCTION_18	FOR_1	IF_6	IF_8
0x400105e	            0x7607	                           jbe 0x4001067	      1103	linker.c	FUNCTION_18	FOR_1	IF_6	IF_8
0x4001060	    0xc745c4040000	               mov dword [rbp - 0x3c], 4	      1104	linker.c	FUNCTION_18	FOR_1	IF_6	IF_8
0x4001067	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x400106b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x400106f	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001072	            0x8910	                    mov dword [rax], edx	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001074	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1107	linker.c	FUNCTION_18	FOR_1	IF_6	IF_9
0x4001078	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1107	linker.c	FUNCTION_18	FOR_1	IF_6	IF_9
0x400107c	    0x483d00000000	                              cmp rax, 0	      1107	linker.c	FUNCTION_18	FOR_1	IF_6	IF_9
0x4001082	            0x751f	                           jne 0x40010a3	      1107	linker.c	FUNCTION_18	FOR_1	IF_6	IF_9
0x4001084	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4001088	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x400108c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4001090	      0xbe00000000	                              mov esi, 0	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4001095	          0x4889c7	                            mov rdi, rax	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4001098	      0xe800000000	                          call 0x400109d	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x400109d	        0x48894308	                mov qword [rbx + 8], rax	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x40010a1	            0xeb26	                           jmp 0x40010c9	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x40010a3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x40010a7	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x40010ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1111	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1
0x40010af	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1111	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1
0x40010b3	          0x488b10	                    mov rdx, qword [rax]	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x40010b6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x40010ba	          0x4889d6	                            mov rsi, rdx	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x40010bd	          0x4889c7	                            mov rdi, rax	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x40010c0	      0xe800000000	                          call 0x40010c5	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x40010c5	        0x48894308	                mov qword [rbx + 8], rax	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x40010c9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x40010cd	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x40010d1	        0x488b4008	                mov rax, qword [rax + 8]	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x40010d5	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x40010d9	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x40010dd	        0x488b5208	                mov rdx, qword [rdx + 8]	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x40010e1	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x40010e4	          0x83ca01	                               or edx, 1	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x40010e7	          0x895020	             mov dword [rax + 0x20], edx	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x40010ea	            0xeb49	                           jmp 0x4001135	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x40010ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x40010f0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x40010f4	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x40010f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x40010fc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x4001100	          0x4801c2	                            add rdx, rax	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x4001103	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x4001107	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x400110b	          0x4839c2	                            cmp rdx, rax	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x400110e	            0x7625	                           jbe 0x4001135	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x4001110	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1121	linker.c	FUNCTION_18	FOR_1	ELSE_2	CALL_16
0x4001114	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1121	linker.c	FUNCTION_18	FOR_1	ELSE_2	CALL_16
0x4001118	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1121	linker.c	FUNCTION_18	FOR_1	ELSE_2	CALL_16
0x400111c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1121	linker.c	FUNCTION_18	FOR_1	ELSE_2	CALL_16
0x4001120	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1121	linker.c	FUNCTION_18	FOR_1	ELSE_2	CALL_16
0x4001124	          0x4801c2	                            add rdx, rax	      1121	linker.c	FUNCTION_18	FOR_1	ELSE_2	CALL_16
0x4001127	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1121	linker.c	FUNCTION_18	FOR_1	ELSE_2	CALL_16
0x400112b	        0x48895030	             mov qword [rax + 0x30], rdx	      1121	linker.c	FUNCTION_18	FOR_1	ELSE_2	CALL_16
0x400112f	            0xeb04	                           jmp 0x4001135	      1121	linker.c	FUNCTION_18	FOR_1	ELSE_2	CALL_16
0x4001131	              0x90	                                     nop	      1043	linker.c	FUNCTION_18	FOR_1	IF_2
0x4001132	            0xeb01	                           jmp 0x4001135	      1043	linker.c	FUNCTION_18	FOR_1	IF_2
0x4001134	              0x90	                                     nop	      1055	linker.c	FUNCTION_18	FOR_1	IF_3
0x4001135	      0x488345c808	               add qword [rbp - 0x38], 8	      1034	linker.c	FUNCTION_18	FOR_1
0x400113a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1034	linker.c	FUNCTION_18	FOR_1
0x400113e	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1034	linker.c	FUNCTION_18	FOR_1
0x4001142	     0xf8271fdffff	                            jb 0x4000eb9	      1034	linker.c	FUNCTION_18	FOR_1
0x4001148	      0xb801000000	                              mov eax, 1	      1126	linker.c	FUNCTION_18
0x400114d	        0x4883c468	                           add rsp, 0x68	      1127	linker.c	FUNCTION_18
0x4001151	              0x5b	                                 pop rbx	      1127	linker.c	FUNCTION_18
0x4001152	              0x5d	                                 pop rbp	      1127	linker.c	FUNCTION_18
0x4001153	              0xc3	                                     ret	      1127	linker.c	FUNCTION_18
_bfd_default_link_order	functions,0:IF,0:WHILE,0:SWITCH,1:CALL,3:ELSE,0:FOR,0:DO,0	33
0x40034b3	              0x55	                                push rbp	      2439	linker.c	ELSE_1	FUNCTION_29
0x40034b4	          0x4889e5	                            mov rbp, rsp	      2439	linker.c	ELSE_1	FUNCTION_29
0x40034b7	        0x4883ec20	                           sub rsp, 0x20	      2439	linker.c	ELSE_1	FUNCTION_29
0x40034bb	        0x48897df8	                mov qword [rbp - 8], rdi	      2439	linker.c	ELSE_1	FUNCTION_29
0x40034bf	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2439	linker.c	ELSE_1	FUNCTION_29
0x40034c3	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2439	linker.c	ELSE_1	FUNCTION_29
0x40034c7	        0x48894de0	             mov qword [rbp - 0x20], rcx	      2439	linker.c	ELSE_1	FUNCTION_29
0x40034cb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2440	linker.c	ELSE_1	FUNCTION_29	SWITCH_1
0x40034cf	          0x8b4008	                mov eax, dword [rax + 8]	      2440	linker.c	ELSE_1	FUNCTION_29	SWITCH_1
0x40034d2	          0x83f801	                              cmp eax, 1	      2440	linker.c	ELSE_1	FUNCTION_29	SWITCH_1
0x40034d5	            0x7419	                            je 0x40034f0	      2440	linker.c	ELSE_1	FUNCTION_29	SWITCH_1
0x40034d7	          0x83f802	                              cmp eax, 2	      2440	linker.c	ELSE_1	FUNCTION_29	SWITCH_1
0x40034da	            0x7434	                            je 0x4003510	      2440	linker.c	ELSE_1	FUNCTION_29	SWITCH_1
0x40034dc	      0xba00000000	                              mov edx, 0	      2446	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_1
0x40034e1	      0xbe8e090000	                          mov esi, 0x98e	      2446	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_1
0x40034e6	      0xbf00000000	                              mov edi, 0	      2446	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_1
0x40034eb	      0xe800000000	                          call 0x40034f0	      2446	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_1
0x40034f0	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2448	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_2
0x40034f4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2448	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_2
0x40034f8	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2448	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_2
0x40034fc	        0x488b45f8	                mov rax, qword [rbp - 8]	      2448	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_2
0x4003500	    0x41b800000000	                              mov r8d, 0	      2448	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_2
0x4003506	          0x4889c7	                            mov rdi, rax	      2448	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_2
0x4003509	      0xe80e020000	    call sym.default_indirect_link_order	      2448	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_2
0x400350e	            0xeb18	                           jmp 0x4003528	      2448	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_2
0x4003510	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2451	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_3
0x4003514	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2451	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_3
0x4003518	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2451	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_3
0x400351c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2451	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_3
0x4003520	          0x4889c7	                            mov rdi, rax	      2451	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_3
0x4003523	      0xe802000000	        call sym.default_data_link_order	      2451	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_3
0x4003528	              0xc9	                                   leave	      2453	linker.c	ELSE_1	FUNCTION_29
0x4003529	              0xc3	                                     ret	      2453	linker.c	ELSE_1	FUNCTION_29
bfd_section_already_linked_table_traverse	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,3:ELSE,0:FOR,0:DO,0	13
0x4003bd8	              0x55	                                push rbp	      2743	linker.c	FUNCTION_34
0x4003bd9	          0x4889e5	                            mov rbp, rsp	      2743	linker.c	FUNCTION_34
0x4003bdc	        0x4883ec10	                           sub rsp, 0x10	      2743	linker.c	FUNCTION_34
0x4003be0	        0x48897df8	                mov qword [rbp - 8], rdi	      2743	linker.c	FUNCTION_34
0x4003be4	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2743	linker.c	FUNCTION_34
0x4003be8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2744	linker.c	FUNCTION_34	CALL_2
0x4003bec	        0x488b45f8	                mov rax, qword [rbp - 8]	      2744	linker.c	FUNCTION_34	CALL_2
0x4003bf0	          0x4889c6	                            mov rsi, rax	      2744	linker.c	FUNCTION_34	CALL_2
0x4003bf3	      0xbf00000000	                              mov edi, 0	      2744	linker.c	FUNCTION_34	CALL_2
0x4003bf8	      0xe800000000	                          call 0x4003bfd	      2744	linker.c	FUNCTION_34	CALL_2
0x4003bfd	              0x90	                                     nop	      2748	linker.c	FUNCTION_34
0x4003bfe	              0xc9	                                   leave	      2748	linker.c	FUNCTION_34
0x4003bff	              0xc3	                                     ret	      2748	linker.c	FUNCTION_34
_bfd_nolink_bfd_relax_section	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	12
0x4004af3	              0x55	                                push rbp	      3418	linker.c	FUNCTION_54
0x4004af4	          0x4889e5	                            mov rbp, rsp	      3418	linker.c	FUNCTION_54
0x4004af7	        0x4883ec20	                           sub rsp, 0x20	      3418	linker.c	FUNCTION_54
0x4004afb	        0x48897df8	                mov qword [rbp - 8], rdi	      3418	linker.c	FUNCTION_54
0x4004aff	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3418	linker.c	FUNCTION_54
0x4004b03	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3418	linker.c	FUNCTION_54
0x4004b07	        0x48894de0	             mov qword [rbp - 0x20], rcx	      3418	linker.c	FUNCTION_54
0x4004b0b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3419	linker.c	FUNCTION_54	CALL_1
0x4004b0f	          0x4889c7	                            mov rdi, rax	      3419	linker.c	FUNCTION_54	CALL_1
0x4004b12	      0xe800000000	                          call 0x4004b17	      3419	linker.c	FUNCTION_54	CALL_1
0x4004b17	              0xc9	                                   leave	      3420	linker.c	FUNCTION_54
0x4004b18	              0xc3	                                     ret	      3420	linker.c	FUNCTION_54
generic_link_add_object_symbols	functions,0:IF,1:WHILE,0:SWITCH,0:CALL,4:ELSE,0:FOR,0:DO,0	27
0x4000a67	              0x55	                                push rbp	       866	linker.c	FUNCTION_16
0x4000a68	          0x4889e5	                            mov rbp, rsp	       866	linker.c	FUNCTION_16
0x4000a6b	        0x4883ec20	                           sub rsp, 0x20	       866	linker.c	FUNCTION_16
0x4000a6f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       866	linker.c	FUNCTION_16
0x4000a73	        0x488975e0	             mov qword [rbp - 0x20], rsi	       866	linker.c	FUNCTION_16
0x4000a77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       870	linker.c	FUNCTION_16	IF_1	CALL_1
0x4000a7b	          0x4889c7	                            mov rdi, rax	       870	linker.c	FUNCTION_16	IF_1	CALL_1
0x4000a7e	      0xe800000000	                          call 0x4000a83	       870	linker.c	FUNCTION_16	IF_1	CALL_1
0x4000a83	            0x85c0	                           test eax, eax	       870	linker.c	FUNCTION_16	IF_1	CALL_1
0x4000a85	            0x7507	                           jne 0x4000a8e	       870	linker.c	FUNCTION_16	IF_1	CALL_1
0x4000a87	      0xb800000000	                              mov eax, 0	       871	linker.c	FUNCTION_16	IF_1
0x4000a8c	            0xeb37	                           jmp 0x4000ac5	       871	linker.c	FUNCTION_16	IF_1
0x4000a8e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       872	linker.c	FUNCTION_16	CALL_2
0x4000a92	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	       872	linker.c	FUNCTION_16	CALL_2
0x4000a98	            0x89c0	                            mov eax, eax	       872	linker.c	FUNCTION_16	CALL_2
0x4000a9a	        0x488945f0	             mov qword [rbp - 0x10], rax	       872	linker.c	FUNCTION_16	CALL_2
0x4000a9e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       873	linker.c	FUNCTION_16	CALL_3
0x4000aa2	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       873	linker.c	FUNCTION_16	CALL_3
0x4000aa9	        0x488945f8	                mov qword [rbp - 8], rax	       873	linker.c	FUNCTION_16	CALL_3
0x4000aad	        0x488b4df8	                mov rcx, qword [rbp - 8]	       874	linker.c	FUNCTION_16	CALL_4
0x4000ab1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       874	linker.c	FUNCTION_16	CALL_4
0x4000ab5	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       874	linker.c	FUNCTION_16	CALL_4
0x4000ab9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       874	linker.c	FUNCTION_16	CALL_4
0x4000abd	          0x4889c7	                            mov rdi, rax	       874	linker.c	FUNCTION_16	CALL_4
0x4000ac0	      0xe88f060000	   call sym.generic_link_add_symbol_list	       874	linker.c	FUNCTION_16	CALL_4
0x4000ac5	              0xc9	                                   leave	       875	linker.c	FUNCTION_16
0x4000ac6	              0xc3	                                     ret	       875	linker.c	FUNCTION_16
_bfd_generic_section_already_linked	functions,0:IF,4:WHILE,0:SWITCH,0:CALL,6:ELSE,0:FOR,0:DO,0	61
0x40040d5	              0x55	                                push rbp	      2907	linker.c	FUNCTION_41
0x40040d6	          0x4889e5	                            mov rbp, rsp	      2907	linker.c	FUNCTION_41
0x40040d9	              0x53	                                push rbx	      2907	linker.c	FUNCTION_41
0x40040da	        0x4883ec48	                           sub rsp, 0x48	      2907	linker.c	FUNCTION_41
0x40040de	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2907	linker.c	FUNCTION_41
0x40040e2	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2907	linker.c	FUNCTION_41
0x40040e6	        0x488955b8	             mov qword [rbp - 0x48], rdx	      2907	linker.c	FUNCTION_41
0x40040ea	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2912	linker.c	FUNCTION_41	IF_1
0x40040ee	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2912	linker.c	FUNCTION_41	IF_1
0x40040f1	      0x2500000200	                        and eax, 0x20000	      2912	linker.c	FUNCTION_41	IF_1
0x40040f6	            0x85c0	                           test eax, eax	      2912	linker.c	FUNCTION_41	IF_1
0x40040f8	            0x750a	                           jne 0x4004104	      2912	linker.c	FUNCTION_41	IF_1
0x40040fa	      0xb800000000	                              mov eax, 0	      2913	linker.c	FUNCTION_41	IF_1
0x40040ff	      0xe9a2000000	                           jmp 0x40041a6	      2913	linker.c	FUNCTION_41	IF_1
0x4004104	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2916	linker.c	FUNCTION_41	IF_2
0x4004108	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2916	linker.c	FUNCTION_41	IF_2
0x400410b	      0x2500000002	                      and eax, 0x2000000	      2916	linker.c	FUNCTION_41	IF_2
0x4004110	            0x85c0	                           test eax, eax	      2916	linker.c	FUNCTION_41	IF_2
0x4004112	            0x740a	                            je 0x400411e	      2916	linker.c	FUNCTION_41	IF_2
0x4004114	      0xb800000000	                              mov eax, 0	      2917	linker.c	FUNCTION_41	IF_2
0x4004119	      0xe988000000	                           jmp 0x40041a6	      2917	linker.c	FUNCTION_41	IF_2
0x400411e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2932	linker.c	FUNCTION_41	CALL_1
0x4004122	          0x488b00	                    mov rax, qword [rax]	      2932	linker.c	FUNCTION_41	CALL_1
0x4004125	        0x488945d8	             mov qword [rbp - 0x28], rax	      2932	linker.c	FUNCTION_41	CALL_1
0x4004129	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2934	linker.c	FUNCTION_41	CALL_2
0x400412d	          0x4889c7	                            mov rdi, rax	      2934	linker.c	FUNCTION_41	CALL_2
0x4004130	      0xe800000000	                          call 0x4004135	      2934	linker.c	FUNCTION_41	CALL_2
0x4004135	        0x488945e0	             mov qword [rbp - 0x20], rax	      2934	linker.c	FUNCTION_41	CALL_2
0x4004139	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2936	linker.c	FUNCTION_41
0x400413d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2936	linker.c	FUNCTION_41
0x4004141	        0x488945e8	             mov qword [rbp - 0x18], rax	      2936	linker.c	FUNCTION_41
0x4004145	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2937	linker.c	FUNCTION_41	IF_3
0x400414a	            0x7419	                            je 0x4004165	      2937	linker.c	FUNCTION_41	IF_3
0x400414c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2941	linker.c	FUNCTION_41	IF_3	CALL_3
0x4004150	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2941	linker.c	FUNCTION_41	IF_3	CALL_3
0x4004154	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2941	linker.c	FUNCTION_41	IF_3	CALL_3
0x4004158	          0x4889ce	                            mov rsi, rcx	      2941	linker.c	FUNCTION_41	IF_3	CALL_3
0x400415b	          0x4889c7	                            mov rdi, rax	      2941	linker.c	FUNCTION_41	IF_3	CALL_3
0x400415e	      0xe800000000	                          call 0x4004163	      2941	linker.c	FUNCTION_41	IF_3	CALL_3
0x4004163	            0xeb41	                           jmp 0x40041a6	      2941	linker.c	FUNCTION_41	IF_3	CALL_3
0x4004165	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2945	linker.c	FUNCTION_41	IF_4	CALL_4
0x4004169	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2945	linker.c	FUNCTION_41	IF_4	CALL_4
0x400416d	          0x4889d6	                            mov rsi, rdx	      2945	linker.c	FUNCTION_41	IF_4	CALL_4
0x4004170	          0x4889c7	                            mov rdi, rax	      2945	linker.c	FUNCTION_41	IF_4	CALL_4
0x4004173	      0xe800000000	                          call 0x4004178	      2945	linker.c	FUNCTION_41	IF_4	CALL_4
0x4004178	            0x85c0	                           test eax, eax	      2945	linker.c	FUNCTION_41	IF_4	CALL_4
0x400417a	            0x7525	                           jne 0x40041a1	      2945	linker.c	FUNCTION_41	IF_4	CALL_4
0x400417c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2946	linker.c	FUNCTION_41	CALL_6
0x4004180	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2946	linker.c	FUNCTION_41	CALL_6
0x4004184	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      2946	linker.c	FUNCTION_41	CALL_6
0x4004188	      0xbe00000000	                              mov esi, 0	      2946	linker.c	FUNCTION_41	CALL_6
0x400418d	      0xbf00000000	                              mov edi, 0	      2946	linker.c	FUNCTION_41	CALL_6
0x4004192	      0xe800000000	                          call 0x4004197	      2946	linker.c	FUNCTION_41	CALL_6
0x4004197	          0x4889c7	                            mov rdi, rax	      2946	linker.c	FUNCTION_41	CALL_6
0x400419a	      0xb800000000	                              mov eax, 0	      2946	linker.c	FUNCTION_41	CALL_6
0x400419f	            0xffd3	                                call rbx	      2946	linker.c	FUNCTION_41	CALL_6
0x40041a1	      0xb800000000	                              mov eax, 0	      2947	linker.c	FUNCTION_41
0x40041a6	        0x4883c448	                           add rsp, 0x48	      2948	linker.c	FUNCTION_41
0x40041aa	              0x5b	                                 pop rbx	      2948	linker.c	FUNCTION_41
0x40041ab	              0x5d	                                 pop rbp	      2948	linker.c	FUNCTION_41
0x40041ac	              0xc3	                                     ret	      2948	linker.c	FUNCTION_41
_bfd_generic_link_just_syms	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,0:ELSE,0:FOR,0:DO,0	18
0x40009a0	              0x55	                                push rbp	       820	linker.c	FUNCTION_13
0x40009a1	          0x4889e5	                            mov rbp, rsp	       820	linker.c	FUNCTION_13
0x40009a4	        0x48897df8	                mov qword [rbp - 8], rdi	       820	linker.c	FUNCTION_13
0x40009a8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       820	linker.c	FUNCTION_13
0x40009ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       821	linker.c	FUNCTION_13
0x40009b0	         0xfb75024	           movzx edx, word [rax + 0x24] 	       821	linker.c	FUNCTION_13
0x40009b4	      0x6681e27ffc	                          and dx, 0xfc7f	       821	linker.c	FUNCTION_13
0x40009b9	          0x80ce02	                                or dh, 2	       821	linker.c	FUNCTION_13
0x40009bc	        0x66895024	               mov word [rax + 0x24], dx	       821	linker.c	FUNCTION_13
0x40009c0	        0x488b45f8	                mov rax, qword [rbp - 8]	       822	linker.c	FUNCTION_13
0x40009c4	    0x48c740680000	               mov qword [rax + 0x68], 0	       822	linker.c	FUNCTION_13
0x40009cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       823	linker.c	FUNCTION_13
0x40009d0	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       823	linker.c	FUNCTION_13
0x40009d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       823	linker.c	FUNCTION_13
0x40009d8	        0x48895060	             mov qword [rax + 0x60], rdx	       823	linker.c	FUNCTION_13
0x40009dc	              0x90	                                     nop	       824	linker.c	FUNCTION_13
0x40009dd	              0x5d	                                 pop rbp	       824	linker.c	FUNCTION_13
0x40009de	              0xc3	                                     ret	       824	linker.c	FUNCTION_13
bfd_hide_sym_by_version	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	22
0x4004977	              0x55	                                push rbp	      3300	linker.c	FUNCTION_49
0x4004978	          0x4889e5	                            mov rbp, rsp	      3300	linker.c	FUNCTION_49
0x400497b	        0x4883ec20	                           sub rsp, 0x20	      3300	linker.c	FUNCTION_49
0x400497f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3300	linker.c	FUNCTION_49
0x4004983	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3300	linker.c	FUNCTION_49
0x4004987	    0x64488b042528	                mov rax, qword fs:[0x28]	      3300	linker.c	FUNCTION_49
0x4004990	        0x488945f8	                mov qword [rbp - 8], rax	      3300	linker.c	FUNCTION_49
0x4004994	            0x31c0	                            xor eax, eax	      3300	linker.c	FUNCTION_49
0x4004996	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      3301	linker.c	FUNCTION_49
0x400499d	        0x488d55f4	                    lea rdx, [rbp - 0xc]	      3302	linker.c	FUNCTION_49	CALL_1
0x40049a1	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3302	linker.c	FUNCTION_49	CALL_1
0x40049a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3302	linker.c	FUNCTION_49	CALL_1
0x40049a9	          0x4889ce	                            mov rsi, rcx	      3302	linker.c	FUNCTION_49	CALL_1
0x40049ac	          0x4889c7	                            mov rdi, rax	      3302	linker.c	FUNCTION_49	CALL_1
0x40049af	      0xe800000000	                          call 0x40049b4	      3302	linker.c	FUNCTION_49	CALL_1
0x40049b4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3303	linker.c	FUNCTION_49
0x40049b7	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3304	linker.c	FUNCTION_49
0x40049bb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3304	linker.c	FUNCTION_49
0x40049c4	            0x7405	                            je 0x40049cb	      3304	linker.c	FUNCTION_49
0x40049c6	      0xe800000000	                          call 0x40049cb	      3304	linker.c	FUNCTION_49
0x40049cb	              0xc9	                                   leave	      3304	linker.c	FUNCTION_49
0x40049cc	              0xc3	                                     ret	      3304	linker.c	FUNCTION_49
_bfd_generic_link_split_section	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,0:ELSE,0:FOR,0:DO,0	7
0x4003bc5	              0x55	                                push rbp	      2700	linker.c	FUNCTION_33
0x4003bc6	          0x4889e5	                            mov rbp, rsp	      2700	linker.c	FUNCTION_33
0x4003bc9	        0x48897df8	                mov qword [rbp - 8], rdi	      2700	linker.c	FUNCTION_33
0x4003bcd	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2700	linker.c	FUNCTION_33
0x4003bd1	      0xb800000000	                              mov eax, 0	      2701	linker.c	FUNCTION_33
0x4003bd6	              0x5d	                                 pop rbp	      2702	linker.c	FUNCTION_33
0x4003bd7	              0xc3	                                     ret	      2702	linker.c	FUNCTION_33
bfd_section_already_linked_table_insert	functions,0:IF,1:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	26
0x4003c29	              0x55	                                push rbp	      2762	linker.c	FUNCTION_36
0x4003c2a	          0x4889e5	                            mov rbp, rsp	      2762	linker.c	FUNCTION_36
0x4003c2d	        0x4883ec20	                           sub rsp, 0x20	      2762	linker.c	FUNCTION_36
0x4003c31	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2762	linker.c	FUNCTION_36
0x4003c35	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2762	linker.c	FUNCTION_36
0x4003c39	      0xbe10000000	                           mov esi, 0x10	      2767	linker.c	FUNCTION_36
0x4003c3e	      0xbf00000000	                              mov edi, 0	      2767	linker.c	FUNCTION_36
0x4003c43	      0xe800000000	                          call 0x4003c48	      2767	linker.c	FUNCTION_36
0x4003c48	        0x488945f8	                mov qword [rbp - 8], rax	      2767	linker.c	FUNCTION_36
0x4003c4c	      0x48837df800	                  cmp qword [rbp - 8], 0	      2769	linker.c	FUNCTION_36	IF_1
0x4003c51	            0x7507	                           jne 0x4003c5a	      2769	linker.c	FUNCTION_36	IF_1
0x4003c53	      0xb800000000	                              mov eax, 0	      2770	linker.c	FUNCTION_36	IF_1
0x4003c58	            0xeb2c	                           jmp 0x4003c86	      2770	linker.c	FUNCTION_36	IF_1
0x4003c5a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2771	linker.c	FUNCTION_36
0x4003c5e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2771	linker.c	FUNCTION_36
0x4003c62	        0x48895008	                mov qword [rax + 8], rdx	      2771	linker.c	FUNCTION_36
0x4003c66	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2772	linker.c	FUNCTION_36
0x4003c6a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2772	linker.c	FUNCTION_36
0x4003c6e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2772	linker.c	FUNCTION_36
0x4003c72	          0x488910	                    mov qword [rax], rdx	      2772	linker.c	FUNCTION_36
0x4003c75	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2773	linker.c	FUNCTION_36
0x4003c79	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2773	linker.c	FUNCTION_36
0x4003c7d	        0x48895018	             mov qword [rax + 0x18], rdx	      2773	linker.c	FUNCTION_36
0x4003c81	      0xb801000000	                              mov eax, 1	      2774	linker.c	FUNCTION_36
0x4003c86	              0xc9	                                   leave	      2775	linker.c	FUNCTION_36
0x4003c87	              0xc3	                                     ret	      2775	linker.c	FUNCTION_36
bfd_link_check_relocs	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	15
0x40049cd	              0x55	                                push rbp	      3323	linker.c	FUNCTION_50
0x40049ce	          0x4889e5	                            mov rbp, rsp	      3323	linker.c	FUNCTION_50
0x40049d1	        0x4883ec10	                           sub rsp, 0x10	      3323	linker.c	FUNCTION_50
0x40049d5	        0x48897df8	                mov qword [rbp - 8], rdi	      3323	linker.c	FUNCTION_50
0x40049d9	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3323	linker.c	FUNCTION_50
0x40049dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      3324	linker.c	FUNCTION_50	CALL_1
0x40049e1	        0x488b4008	                mov rax, qword [rax + 8]	      3324	linker.c	FUNCTION_50	CALL_1
0x40049e5	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      3324	linker.c	FUNCTION_50	CALL_1
0x40049ec	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      3324	linker.c	FUNCTION_50	CALL_1
0x40049f0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3324	linker.c	FUNCTION_50	CALL_1
0x40049f4	          0x4889ce	                            mov rsi, rcx	      3324	linker.c	FUNCTION_50	CALL_1
0x40049f7	          0x4889d7	                            mov rdi, rdx	      3324	linker.c	FUNCTION_50	CALL_1
0x40049fa	            0xffd0	                                call rax	      3324	linker.c	FUNCTION_50	CALL_1
0x40049fc	              0xc9	                                   leave	      3325	linker.c	FUNCTION_50
0x40049fd	              0xc3	                                     ret	      3325	linker.c	FUNCTION_50
bfd_link_hash_lookup	functions,0:IF,2:WHILE,1:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	40
0x400017c	              0x55	                                push rbp	       495	linker.c	FUNCTION_3
0x400017d	          0x4889e5	                            mov rbp, rsp	       495	linker.c	FUNCTION_3
0x4000180	        0x4883ec30	                           sub rsp, 0x30	       495	linker.c	FUNCTION_3
0x4000184	        0x48897de8	             mov qword [rbp - 0x18], rdi	       495	linker.c	FUNCTION_3
0x4000188	        0x488975e0	             mov qword [rbp - 0x20], rsi	       495	linker.c	FUNCTION_3
0x400018c	          0x8955dc	             mov dword [rbp - 0x24], edx	       495	linker.c	FUNCTION_3
0x400018f	          0x894dd8	             mov dword [rbp - 0x28], ecx	       495	linker.c	FUNCTION_3
0x4000192	        0x448945d4	             mov dword [rbp - 0x2c], r8d	       495	linker.c	FUNCTION_3
0x4000196	      0x48837de800	               cmp qword [rbp - 0x18], 0	       498	linker.c	FUNCTION_3	IF_1
0x400019b	            0x7407	                            je 0x40001a4	       498	linker.c	FUNCTION_3	IF_1
0x400019d	      0x48837de000	               cmp qword [rbp - 0x20], 0	       498	linker.c	FUNCTION_3	IF_1
0x40001a2	            0x7507	                           jne 0x40001ab	       498	linker.c	FUNCTION_3	IF_1
0x40001a4	      0xb800000000	                              mov eax, 0	       499	linker.c	FUNCTION_3	IF_1
0x40001a9	            0xeb51	                           jmp 0x40001fc	       499	linker.c	FUNCTION_3	IF_1
0x40001ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       502	linker.c	FUNCTION_3	CALL_1
0x40001af	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	       501	linker.c	FUNCTION_3
0x40001b2	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       501	linker.c	FUNCTION_3
0x40001b5	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       501	linker.c	FUNCTION_3
0x40001b9	          0x4889c7	                            mov rdi, rax	       501	linker.c	FUNCTION_3
0x40001bc	      0xe800000000	                          call 0x40001c1	       501	linker.c	FUNCTION_3
0x40001c1	        0x488945f8	                mov qword [rbp - 8], rax	       501	linker.c	FUNCTION_3
0x40001c5	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       504	linker.c	FUNCTION_3	IF_2
0x40001c9	            0x742d	                            je 0x40001f8	       504	linker.c	FUNCTION_3	IF_2
0x40001cb	      0x48837df800	                  cmp qword [rbp - 8], 0	       504	linker.c	FUNCTION_3	IF_2
0x40001d0	            0x7426	                            je 0x40001f8	       504	linker.c	FUNCTION_3	IF_2
0x40001d2	            0xeb0c	                           jmp 0x40001e0	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40001d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       508	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40001d8	        0x488b4028	            mov rax, qword [rax + 0x28] 	       508	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40001dc	        0x488945f8	                mov qword [rbp - 8], rax	       508	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40001e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40001e4	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40001e8	            0x3c06	                               cmp al, 6	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40001ea	            0x74e8	                            je 0x40001d4	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40001ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       507	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40001f0	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       507	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40001f4	            0x3c07	                               cmp al, 7	       507	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40001f6	            0x74dc	                            je 0x40001d4	       507	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40001f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       511	linker.c	FUNCTION_3
0x40001fc	              0xc9	                                   leave	       512	linker.c	FUNCTION_3
0x40001fd	              0xc3	                                     ret	       512	linker.c	FUNCTION_3
_bfd_link_hash_table_init	functions,0:IF,1:WHILE,0:SWITCH,0:CALL,2:ELSE,0:FOR,0:DO,0	46
0x40000c7	              0x55	                                push rbp	       466	linker.c	FUNCTION_2
0x40000c8	          0x4889e5	                            mov rbp, rsp	       466	linker.c	FUNCTION_2
0x40000cb	        0x4883ec30	                           sub rsp, 0x30	       466	linker.c	FUNCTION_2
0x40000cf	        0x48897de8	             mov qword [rbp - 0x18], rdi	       466	linker.c	FUNCTION_2
0x40000d3	        0x488975e0	             mov qword [rbp - 0x20], rsi	       466	linker.c	FUNCTION_2
0x40000d7	        0x488955d8	             mov qword [rbp - 0x28], rdx	       466	linker.c	FUNCTION_2
0x40000db	          0x894dd4	             mov dword [rbp - 0x2c], ecx	       466	linker.c	FUNCTION_2
0x40000de	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       469	linker.c	FUNCTION_2	CALL_1
0x40000e2	         0xfb64048	           movzx eax, byte [rax + 0x48] 	       469	linker.c	FUNCTION_2	CALL_1
0x40000e6	          0x83e004	                              and eax, 4	       469	linker.c	FUNCTION_2	CALL_1
0x40000e9	            0x84c0	                             test al, al	       469	linker.c	FUNCTION_2	CALL_1
0x40000eb	            0x7510	                           jne 0x40000fd	       469	linker.c	FUNCTION_2	CALL_1
0x40000ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       469	linker.c	FUNCTION_2	CALL_1
0x40000f1	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       469	linker.c	FUNCTION_2	CALL_1
0x40000f8	          0x4885c0	                           test rax, rax	       469	linker.c	FUNCTION_2	CALL_1
0x40000fb	            0x740f	                            je 0x400010c	       469	linker.c	FUNCTION_2	CALL_1
0x40000fd	      0xbed5010000	                          mov esi, 0x1d5	       469	linker.c	FUNCTION_2	CALL_1
0x4000102	      0xbf00000000	                              mov edi, 0	       469	linker.c	FUNCTION_2	CALL_1
0x4000107	      0xe800000000	                          call 0x400010c	       469	linker.c	FUNCTION_2	CALL_1
0x400010c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       470	linker.c	FUNCTION_2
0x4000110	    0x48c740280000	               mov qword [rax + 0x28], 0	       470	linker.c	FUNCTION_2
0x4000118	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       471	linker.c	FUNCTION_2
0x400011c	    0x48c740300000	               mov qword [rax + 0x30], 0	       471	linker.c	FUNCTION_2
0x4000124	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       472	linker.c	FUNCTION_2
0x4000128	    0xc74040000000	               mov dword [rax + 0x40], 0	       472	linker.c	FUNCTION_2
0x400012f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       474	linker.c	FUNCTION_2	CALL_2
0x4000133	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       474	linker.c	FUNCTION_2	CALL_2
0x4000136	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       474	linker.c	FUNCTION_2	CALL_2
0x400013a	          0x4889ce	                            mov rsi, rcx	       474	linker.c	FUNCTION_2	CALL_2
0x400013d	          0x4889c7	                            mov rdi, rax	       474	linker.c	FUNCTION_2	CALL_2
0x4000140	      0xe800000000	                          call 0x4000145	       474	linker.c	FUNCTION_2	CALL_2
0x4000145	          0x8945fc	                mov dword [rbp - 4], eax	       474	linker.c	FUNCTION_2	CALL_2
0x4000148	        0x837dfc00	                  cmp dword [rbp - 4], 0	       475	linker.c	FUNCTION_2	IF_1
0x400014c	            0x7429	                            je 0x4000177	       475	linker.c	FUNCTION_2	IF_1
0x400014e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       478	linker.c	FUNCTION_2	IF_1
0x4000152	    0x48c740380000	               mov qword [rax + 0x38], 0	       478	linker.c	FUNCTION_2	IF_1
0x400015a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       479	linker.c	FUNCTION_2	IF_1
0x400015e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       479	linker.c	FUNCTION_2	IF_1
0x4000162	    0x488990f00000	             mov qword [rax + 0xf0], rdx	       479	linker.c	FUNCTION_2	IF_1
0x4000169	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       480	linker.c	FUNCTION_2	IF_1
0x400016d	         0xfb65048	           movzx edx, byte [rax + 0x48] 	       480	linker.c	FUNCTION_2	IF_1
0x4000171	          0x83ca04	                               or edx, 4	       480	linker.c	FUNCTION_2	IF_1
0x4000174	          0x885048	               mov byte [rax + 0x48], dl	       480	linker.c	FUNCTION_2	IF_1
0x4000177	          0x8b45fc	                mov eax, dword [rbp - 4]	       482	linker.c	FUNCTION_2
0x400017a	              0xc9	                                   leave	       483	linker.c	FUNCTION_2
0x400017b	              0xc3	                                     ret	       483	linker.c	FUNCTION_2
bfd_new_link_order	functions,0:IF,2:WHILE,0:SWITCH,0:CALL,1:ELSE,1:FOR,0:DO,0	36
0x4003423	              0x55	                                push rbp	      2411	linker.c	FUNCTION_28
0x4003424	          0x4889e5	                            mov rbp, rsp	      2411	linker.c	FUNCTION_28
0x4003427	        0x4883ec20	                           sub rsp, 0x20	      2411	linker.c	FUNCTION_28
0x400342b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2411	linker.c	FUNCTION_28
0x400342f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2411	linker.c	FUNCTION_28
0x4003433	    0x48c745f03000	           mov qword [rbp - 0x10], 0x30 	      2412	linker.c	FUNCTION_28
0x400343b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2415	linker.c	FUNCTION_28	CALL_1
0x400343f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2415	linker.c	FUNCTION_28	CALL_1
0x4003443	          0x4889d6	                            mov rsi, rdx	      2415	linker.c	FUNCTION_28	CALL_1
0x4003446	          0x4889c7	                            mov rdi, rax	      2415	linker.c	FUNCTION_28	CALL_1
0x4003449	      0xe800000000	                          call 0x400344e	      2415	linker.c	FUNCTION_28	CALL_1
0x400344e	        0x488945f8	                mov qword [rbp - 8], rax	      2415	linker.c	FUNCTION_28	CALL_1
0x4003452	      0x48837df800	                  cmp qword [rbp - 8], 0	      2416	linker.c	FUNCTION_28	IF_1
0x4003457	            0x7507	                           jne 0x4003460	      2416	linker.c	FUNCTION_28	IF_1
0x4003459	      0xb800000000	                              mov eax, 0	      2417	linker.c	FUNCTION_28	IF_1
0x400345e	            0xeb51	                           jmp 0x40034b1	      2417	linker.c	FUNCTION_28	IF_1
0x4003460	        0x488b45f8	                mov rax, qword [rbp - 8]	      2419	linker.c	FUNCTION_28
0x4003464	    0xc74008000000	                  mov dword [rax + 8], 0	      2419	linker.c	FUNCTION_28
0x400346b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2421	linker.c	FUNCTION_28	IF_2
0x400346f	    0x488b80100100	           mov rax, qword [rax + 0x110] 	      2421	linker.c	FUNCTION_28	IF_2
0x4003476	          0x4885c0	                           test rax, rax	      2421	linker.c	FUNCTION_28	IF_2
0x4003479	            0x7414	                            je 0x400348f	      2421	linker.c	FUNCTION_28	IF_2
0x400347b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2422	linker.c	FUNCTION_28	IF_2
0x400347f	    0x488b80100100	           mov rax, qword [rax + 0x110] 	      2422	linker.c	FUNCTION_28	IF_2
0x4003486	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2422	linker.c	FUNCTION_28	IF_2
0x400348a	          0x488910	                    mov qword [rax], rdx	      2422	linker.c	FUNCTION_28	IF_2
0x400348d	            0xeb0f	                           jmp 0x400349e	      2422	linker.c	FUNCTION_28	IF_2
0x400348f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2424	linker.c	FUNCTION_28	ELSE_1
0x4003493	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2424	linker.c	FUNCTION_28	ELSE_1
0x4003497	    0x488990080100	            mov qword [rax + 0x108], rdx	      2424	linker.c	FUNCTION_28	ELSE_1
0x400349e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2425	linker.c	FUNCTION_28	ELSE_1
0x40034a2	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2425	linker.c	FUNCTION_28	ELSE_1
0x40034a6	    0x488990100100	            mov qword [rax + 0x110], rdx	      2425	linker.c	FUNCTION_28	ELSE_1
0x40034ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      2427	linker.c	FUNCTION_28	ELSE_1
0x40034b1	              0xc9	                                   leave	      2428	linker.c	FUNCTION_28	ELSE_1
0x40034b2	              0xc3	                                     ret	      2428	linker.c	FUNCTION_28	ELSE_1
_bfd_generic_link_check_relocs	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,0:ELSE,0:FOR,0:DO,0	7
0x40049fe	              0x55	                                push rbp	      3345	linker.c	FUNCTION_51
0x40049ff	          0x4889e5	                            mov rbp, rsp	      3345	linker.c	FUNCTION_51
0x4004a02	        0x48897df8	                mov qword [rbp - 8], rdi	      3345	linker.c	FUNCTION_51
0x4004a06	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3345	linker.c	FUNCTION_51
0x4004a0a	      0xb801000000	                              mov eax, 1	      3346	linker.c	FUNCTION_51
0x4004a0f	              0x5d	                                 pop rbp	      3347	linker.c	FUNCTION_51
0x4004a10	              0xc3	                                     ret	      3347	linker.c	FUNCTION_51
fix_syms	functions,0:IF,2:WHILE,0:SWITCH,0:CALL,2:ELSE,0:FOR,0:DO,0	85
0x40043e8	              0x55	                                push rbp	      3024	linker.c	FUNCTION_43
0x40043e9	          0x4889e5	                            mov rbp, rsp	      3024	linker.c	FUNCTION_43
0x40043ec	        0x4883ec30	                           sub rsp, 0x30	      3024	linker.c	FUNCTION_43
0x40043f0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3024	linker.c	FUNCTION_43
0x40043f4	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3024	linker.c	FUNCTION_43
0x40043f8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3025	linker.c	FUNCTION_43
0x40043fc	        0x488945e8	             mov qword [rbp - 0x18], rax	      3025	linker.c	FUNCTION_43
0x4004400	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3027	linker.c	FUNCTION_43	IF_1
0x4004404	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      3027	linker.c	FUNCTION_43	IF_1
0x4004408	            0x3c03	                               cmp al, 3	      3027	linker.c	FUNCTION_43	IF_1
0x400440a	            0x7410	                            je 0x400441c	      3027	linker.c	FUNCTION_43	IF_1
0x400440c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3028	linker.c	FUNCTION_43	IF_1
0x4004410	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      3028	linker.c	FUNCTION_43	IF_1
0x4004414	            0x3c04	                               cmp al, 4	      3028	linker.c	FUNCTION_43	IF_1
0x4004416	     0xf8502010000	                           jne 0x400451e	      3028	linker.c	FUNCTION_43	IF_1
0x400441c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3030	linker.c	FUNCTION_43	IF_1
0x4004420	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3030	linker.c	FUNCTION_43	IF_1
0x4004424	        0x488945f0	             mov qword [rbp - 0x10], rax	      3030	linker.c	FUNCTION_43	IF_1
0x4004428	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3031	linker.c	FUNCTION_43	IF_1	IF_2
0x400442d	     0xf84eb000000	                            je 0x400451e	      3031	linker.c	FUNCTION_43	IF_1	IF_2
0x4004433	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3032	linker.c	FUNCTION_43	IF_1	IF_2
0x4004437	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3032	linker.c	FUNCTION_43	IF_1	IF_2
0x400443b	          0x4885c0	                           test rax, rax	      3032	linker.c	FUNCTION_43	IF_1	IF_2
0x400443e	     0xf84da000000	                            je 0x400451e	      3032	linker.c	FUNCTION_43	IF_1	IF_2
0x4004444	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3033	linker.c	FUNCTION_43	IF_1	IF_2
0x4004448	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3033	linker.c	FUNCTION_43	IF_1	IF_2
0x400444c	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3033	linker.c	FUNCTION_43	IF_1	IF_2
0x400444f	      0x2500800000	                         and eax, 0x8000	      3033	linker.c	FUNCTION_43	IF_1	IF_2
0x4004454	            0x85c0	                           test eax, eax	      3033	linker.c	FUNCTION_43	IF_1	IF_2
0x4004456	     0xf84c2000000	                            je 0x400451e	      3033	linker.c	FUNCTION_43	IF_1	IF_2
0x400445c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004460	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004464	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004468	          0x4885c0	                           test rax, rax	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x400446b	            0x751b	                           jne 0x4004488	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x400446d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004471	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004478	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x400447c	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004480	          0x4839c2	                            cmp rdx, rax	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004483	           0xf95c0	                                setne al	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004486	            0xeb1e	                           jmp 0x40044a6	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004488	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x400448c	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004490	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004494	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004498	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x400449c	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x40044a0	          0x4839c2	                            cmp rdx, rax	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x40044a3	           0xf95c0	                                setne al	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x40044a6	            0x84c0	                             test al, al	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x40044a8	            0x7474	                            je 0x400451e	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x40044aa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x40044ae	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x40044b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x40044b6	        0x488b4860	            mov rcx, qword [rax + 0x60] 	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x40044ba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x40044be	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x40044c2	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x40044c6	          0x4801c8	                            add rax, rcx	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x40044c9	          0x4801c2	                            add rdx, rax	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x40044cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x40044d0	        0x48895030	             mov qword [rax + 0x30], rdx	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x40044d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3039	linker.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x40044d8	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      3039	linker.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x40044dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3039	linker.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x40044e0	        0x488b4868	            mov rcx, qword [rax + 0x68] 	      3039	linker.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x40044e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3039	linker.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x40044e8	          0x4889ce	                            mov rsi, rcx	      3039	linker.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x40044eb	          0x4889c7	                            mov rdi, rax	      3039	linker.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x40044ee	      0xe800000000	                          call 0x40044f3	      3039	linker.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x40044f3	        0x488945f8	                mov qword [rbp - 8], rax	      3039	linker.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x40044f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3040	linker.c	FUNCTION_43	IF_1	IF_2
0x40044fb	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      3040	linker.c	FUNCTION_43	IF_1	IF_2
0x40044ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      3040	linker.c	FUNCTION_43	IF_1	IF_2
0x4004503	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3040	linker.c	FUNCTION_43	IF_1	IF_2
0x4004507	          0x4829c2	                            sub rdx, rax	      3040	linker.c	FUNCTION_43	IF_1	IF_2
0x400450a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3040	linker.c	FUNCTION_43	IF_1	IF_2
0x400450e	        0x48895030	             mov qword [rax + 0x30], rdx	      3040	linker.c	FUNCTION_43	IF_1	IF_2
0x4004512	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3041	linker.c	FUNCTION_43	IF_1	IF_2
0x4004516	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3041	linker.c	FUNCTION_43	IF_1	IF_2
0x400451a	        0x48895028	             mov qword [rax + 0x28], rdx	      3041	linker.c	FUNCTION_43	IF_1	IF_2
0x400451e	      0xb801000000	                              mov eax, 1	      3045	linker.c	FUNCTION_43
0x4004523	              0xc9	                                   leave	      3046	linker.c	FUNCTION_43
0x4004524	              0xc3	                                     ret	      3046	linker.c	FUNCTION_43
bfd_link_repair_undef_list	functions,0:IF,3:WHILE,1:SWITCH,0:CALL,0:ELSE,2:FOR,0:DO,0	50
0x40006a5	              0x55	                                push rbp	       686	linker.c	FUNCTION_8
0x40006a6	          0x4889e5	                            mov rbp, rsp	       686	linker.c	FUNCTION_8
0x40006a9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       686	linker.c	FUNCTION_8
0x40006ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       689	linker.c	FUNCTION_8
0x40006b1	        0x4883c028	                           add rax, 0x28	       689	linker.c	FUNCTION_8
0x40006b5	        0x488945f0	             mov qword [rbp - 0x10], rax	       689	linker.c	FUNCTION_8
0x40006b9	      0xe986000000	                           jmp 0x4000744	       690	linker.c	FUNCTION_8	WHILE_1
0x40006be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       692	linker.c	FUNCTION_8	WHILE_1
0x40006c2	          0x488b00	                    mov rax, qword [rax]	       692	linker.c	FUNCTION_8	WHILE_1
0x40006c5	        0x488945f8	                mov qword [rbp - 8], rax	       692	linker.c	FUNCTION_8	WHILE_1
0x40006c9	        0x488b45f8	                mov rax, qword [rbp - 8]	       694	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40006cd	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       694	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40006d1	            0x84c0	                             test al, al	       694	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40006d3	            0x740c	                            je 0x40006e1	       694	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40006d5	        0x488b45f8	                mov rax, qword [rbp - 8]	       695	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40006d9	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       695	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40006dd	            0x3c02	                               cmp al, 2	       695	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40006df	            0x7557	                           jne 0x4000738	       695	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40006e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       697	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40006e5	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       697	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40006e9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       697	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40006ed	          0x488910	                    mov qword [rax], rdx	       697	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40006f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       698	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40006f4	    0x48c740200000	               mov qword [rax + 0x20], 0	       698	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40006fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       699	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2
0x4000700	        0x488b4030	            mov rax, qword [rax + 0x30] 	       699	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2
0x4000704	        0x483b45f8	                cmp rax, qword [rbp - 8]	       699	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2
0x4000708	            0x753a	                           jne 0x4000744	       699	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2
0x400070a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       701	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
0x400070e	        0x4883c028	                           add rax, 0x28	       701	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
0x4000712	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       701	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
0x4000716	            0x750e	                           jne 0x4000726	       701	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
0x4000718	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       702	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
0x400071c	    0x48c740300000	               mov qword [rax + 0x30], 0	       702	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
0x4000724	            0xeb2e	                           jmp 0x4000754	       708	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2
0x4000726	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       706	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	ELSE_1
0x400072a	        0x488d50e0	                   lea rdx, [rax - 0x20]	       706	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	ELSE_1
0x400072e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       706	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	ELSE_1
0x4000732	        0x48895030	             mov qword [rax + 0x30], rdx	       706	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	ELSE_1
0x4000736	            0xeb1c	                           jmp 0x4000754	       708	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2
0x4000738	        0x488b45f8	                mov rax, qword [rbp - 8]	       712	linker.c	FUNCTION_8	WHILE_1	ELSE_2
0x400073c	        0x4883c020	                           add rax, 0x20	       712	linker.c	FUNCTION_8	WHILE_1	ELSE_2
0x4000740	        0x488945f0	             mov qword [rbp - 0x10], rax	       712	linker.c	FUNCTION_8	WHILE_1	ELSE_2
0x4000744	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       690	linker.c	FUNCTION_8	WHILE_1
0x4000748	          0x488b00	                    mov rax, qword [rax]	       690	linker.c	FUNCTION_8	WHILE_1
0x400074b	          0x4885c0	                           test rax, rax	       690	linker.c	FUNCTION_8	WHILE_1
0x400074e	     0xf856affffff	                           jne 0x40006be	       690	linker.c	FUNCTION_8	WHILE_1
0x4000754	              0x90	                                     nop	       714	linker.c	FUNCTION_8	ELSE_2
0x4000755	              0x5d	                                 pop rbp	       714	linker.c	FUNCTION_8	ELSE_2
0x4000756	              0xc3	                                     ret	       714	linker.c	FUNCTION_8	ELSE_2
set_symbol_from_hash	functions,0:IF,3:WHILE,0:SWITCH,1:CALL,5:ELSE,2:FOR,0:DO,0	116
0x4002d9e	              0x55	                                push rbp	      2204	linker.c	FUNCTION_25
0x4002d9f	          0x4889e5	                            mov rbp, rsp	      2204	linker.c	FUNCTION_25
0x4002da2	        0x4883ec10	                           sub rsp, 0x10	      2204	linker.c	FUNCTION_25
0x4002da6	        0x48897df8	                mov qword [rbp - 8], rdi	      2204	linker.c	FUNCTION_25
0x4002daa	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2204	linker.c	FUNCTION_25
0x4002dae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2205	linker.c	FUNCTION_25	SWITCH_1
0x4002db2	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      2205	linker.c	FUNCTION_25	SWITCH_1
0x4002db6	           0xfb6c0	                           movzx eax, al	      2205	linker.c	FUNCTION_25	SWITCH_1
0x4002db9	          0x83f807	                              cmp eax, 7	      2205	linker.c	FUNCTION_25	SWITCH_1
0x4002dbc	            0x770c	                            ja 0x4002dca	      2205	linker.c	FUNCTION_25	SWITCH_1
0x4002dbe	            0x89c0	                            mov eax, eax	      2205	linker.c	FUNCTION_25	SWITCH_1
0x4002dc0	    0x488b04c50000	                  mov rax, qword [rax*8]	      2205	linker.c	FUNCTION_25	SWITCH_1
0x4002dc8	            0xffe0	                                 jmp rax	      2205	linker.c	FUNCTION_25	SWITCH_1
0x4002dca	      0xba00000000	                              mov edx, 0	      2208	linker.c	FUNCTION_25	SWITCH_1	CALL_1
0x4002dcf	      0xbea0080000	                          mov esi, 0x8a0	      2208	linker.c	FUNCTION_25	SWITCH_1	CALL_1
0x4002dd4	      0xbf00000000	                              mov edi, 0	      2208	linker.c	FUNCTION_25	SWITCH_1	CALL_1
0x4002dd9	      0xe800000000	                          call 0x4002dde	      2208	linker.c	FUNCTION_25	SWITCH_1	CALL_1
0x4002dde	        0x488b45f8	                mov rax, qword [rbp - 8]	      2213	linker.c	FUNCTION_25	SWITCH_1	IF_1
0x4002de2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2213	linker.c	FUNCTION_25	SWITCH_1	IF_1
0x4002de6	          0x4885c0	                           test rax, rax	      2213	linker.c	FUNCTION_25	SWITCH_1	IF_1
0x4002de9	            0x7428	                            je 0x4002e13	      2213	linker.c	FUNCTION_25	SWITCH_1	IF_1
0x4002deb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x4002def	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x4002df2	      0x2500080000	                          and eax, 0x800	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x4002df7	            0x85c0	                           test eax, eax	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x4002df9	     0xf8558010000	                           jne 0x4002f57	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x4002dff	      0xbea7080000	                          mov esi, 0x8a7	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x4002e04	      0xbf00000000	                              mov edi, 0	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x4002e09	      0xe800000000	                          call 0x4002e0e	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x4002e0e	      0xe944010000	                           jmp 0x4002f57	      2223	linker.c	FUNCTION_25	SWITCH_1
0x4002e13	        0x488b45f8	                mov rax, qword [rbp - 8]	      2219	linker.c	FUNCTION_25	SWITCH_1	ELSE_1
0x4002e17	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2219	linker.c	FUNCTION_25	SWITCH_1	ELSE_1
0x4002e1a	          0x80cc08	                                or ah, 8	      2219	linker.c	FUNCTION_25	SWITCH_1	ELSE_1
0x4002e1d	            0x89c2	                            mov edx, eax	      2219	linker.c	FUNCTION_25	SWITCH_1	ELSE_1
0x4002e1f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2219	linker.c	FUNCTION_25	SWITCH_1	ELSE_1
0x4002e23	          0x895018	             mov dword [rax + 0x18], edx	      2219	linker.c	FUNCTION_25	SWITCH_1	ELSE_1
0x4002e26	        0x488b45f8	                mov rax, qword [rbp - 8]	      2220	linker.c	FUNCTION_25	SWITCH_1	ELSE_1
0x4002e2a	    0x48c740200000	               mov qword [rax + 0x20], 0	      2220	linker.c	FUNCTION_25	SWITCH_1	ELSE_1
0x4002e32	        0x488b45f8	                mov rax, qword [rbp - 8]	      2221	linker.c	FUNCTION_25	SWITCH_1	ELSE_1
0x4002e36	    0x48c740100000	               mov qword [rax + 0x10], 0	      2221	linker.c	FUNCTION_25	SWITCH_1	ELSE_1
0x4002e3e	      0xe914010000	                           jmp 0x4002f57	      2223	linker.c	FUNCTION_25	SWITCH_1
0x4002e43	        0x488b45f8	                mov rax, qword [rbp - 8]	      2225	linker.c	FUNCTION_25	SWITCH_1
0x4002e47	    0x48c740200000	               mov qword [rax + 0x20], 0	      2225	linker.c	FUNCTION_25	SWITCH_1
0x4002e4f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2226	linker.c	FUNCTION_25	SWITCH_1
0x4002e53	    0x48c740100000	               mov qword [rax + 0x10], 0	      2226	linker.c	FUNCTION_25	SWITCH_1
0x4002e5b	      0xe9fb000000	                           jmp 0x4002f5b	      2227	linker.c	FUNCTION_25	SWITCH_1
0x4002e60	        0x488b45f8	                mov rax, qword [rbp - 8]	      2229	linker.c	FUNCTION_25	SWITCH_1
0x4002e64	    0x48c740200000	               mov qword [rax + 0x20], 0	      2229	linker.c	FUNCTION_25	SWITCH_1
0x4002e6c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2230	linker.c	FUNCTION_25	SWITCH_1
0x4002e70	    0x48c740100000	               mov qword [rax + 0x10], 0	      2230	linker.c	FUNCTION_25	SWITCH_1
0x4002e78	        0x488b45f8	                mov rax, qword [rbp - 8]	      2231	linker.c	FUNCTION_25	SWITCH_1
0x4002e7c	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2231	linker.c	FUNCTION_25	SWITCH_1
0x4002e7f	             0xc80	                             or al, 0x80	      2231	linker.c	FUNCTION_25	SWITCH_1
0x4002e81	            0x89c2	                            mov edx, eax	      2231	linker.c	FUNCTION_25	SWITCH_1
0x4002e83	        0x488b45f8	                mov rax, qword [rbp - 8]	      2231	linker.c	FUNCTION_25	SWITCH_1
0x4002e87	          0x895018	             mov dword [rax + 0x18], edx	      2231	linker.c	FUNCTION_25	SWITCH_1
0x4002e8a	      0xe9cc000000	                           jmp 0x4002f5b	      2232	linker.c	FUNCTION_25	SWITCH_1
0x4002e8f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2234	linker.c	FUNCTION_25	SWITCH_1
0x4002e93	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2234	linker.c	FUNCTION_25	SWITCH_1
0x4002e97	        0x488b45f8	                mov rax, qword [rbp - 8]	      2234	linker.c	FUNCTION_25	SWITCH_1
0x4002e9b	        0x48895020	             mov qword [rax + 0x20], rdx	      2234	linker.c	FUNCTION_25	SWITCH_1
0x4002e9f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2235	linker.c	FUNCTION_25	SWITCH_1
0x4002ea3	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2235	linker.c	FUNCTION_25	SWITCH_1
0x4002ea7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2235	linker.c	FUNCTION_25	SWITCH_1
0x4002eab	        0x48895010	             mov qword [rax + 0x10], rdx	      2235	linker.c	FUNCTION_25	SWITCH_1
0x4002eaf	      0xe9a7000000	                           jmp 0x4002f5b	      2236	linker.c	FUNCTION_25	SWITCH_1
0x4002eb4	        0x488b45f8	                mov rax, qword [rbp - 8]	      2238	linker.c	FUNCTION_25	SWITCH_1
0x4002eb8	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2238	linker.c	FUNCTION_25	SWITCH_1
0x4002ebb	             0xc80	                             or al, 0x80	      2238	linker.c	FUNCTION_25	SWITCH_1
0x4002ebd	            0x89c2	                            mov edx, eax	      2238	linker.c	FUNCTION_25	SWITCH_1
0x4002ebf	        0x488b45f8	                mov rax, qword [rbp - 8]	      2238	linker.c	FUNCTION_25	SWITCH_1
0x4002ec3	          0x895018	             mov dword [rax + 0x18], edx	      2238	linker.c	FUNCTION_25	SWITCH_1
0x4002ec6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2239	linker.c	FUNCTION_25	SWITCH_1
0x4002eca	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2239	linker.c	FUNCTION_25	SWITCH_1
0x4002ece	        0x488b45f8	                mov rax, qword [rbp - 8]	      2239	linker.c	FUNCTION_25	SWITCH_1
0x4002ed2	        0x48895020	             mov qword [rax + 0x20], rdx	      2239	linker.c	FUNCTION_25	SWITCH_1
0x4002ed6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2240	linker.c	FUNCTION_25	SWITCH_1
0x4002eda	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2240	linker.c	FUNCTION_25	SWITCH_1
0x4002ede	        0x488b45f8	                mov rax, qword [rbp - 8]	      2240	linker.c	FUNCTION_25	SWITCH_1
0x4002ee2	        0x48895010	             mov qword [rax + 0x10], rdx	      2240	linker.c	FUNCTION_25	SWITCH_1
0x4002ee6	            0xeb73	                           jmp 0x4002f5b	      2241	linker.c	FUNCTION_25	SWITCH_1
0x4002ee8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2243	linker.c	FUNCTION_25	SWITCH_1
0x4002eec	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2243	linker.c	FUNCTION_25	SWITCH_1
0x4002ef0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2243	linker.c	FUNCTION_25	SWITCH_1
0x4002ef4	        0x48895010	             mov qword [rax + 0x10], rdx	      2243	linker.c	FUNCTION_25	SWITCH_1
0x4002ef8	        0x488b45f8	                mov rax, qword [rbp - 8]	      2244	linker.c	FUNCTION_25	SWITCH_1	IF_2
0x4002efc	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2244	linker.c	FUNCTION_25	SWITCH_1	IF_2
0x4002f00	          0x4885c0	                           test rax, rax	      2244	linker.c	FUNCTION_25	SWITCH_1	IF_2
0x4002f03	            0x750e	                           jne 0x4002f13	      2244	linker.c	FUNCTION_25	SWITCH_1	IF_2
0x4002f05	        0x488b45f8	                mov rax, qword [rbp - 8]	      2245	linker.c	FUNCTION_25	SWITCH_1	IF_2
0x4002f09	    0x48c740200000	               mov qword [rax + 0x20], 0	      2245	linker.c	FUNCTION_25	SWITCH_1	IF_2
0x4002f11	            0xeb47	                           jmp 0x4002f5a	      2252	linker.c	FUNCTION_25	SWITCH_1
0x4002f13	        0x488b45f8	                mov rax, qword [rbp - 8]	      2246	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_3
0x4002f17	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2246	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_3
0x4002f1b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2246	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_3
0x4002f1e	      0x2500100000	                         and eax, 0x1000	      2246	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_3
0x4002f23	            0x85c0	                           test eax, eax	      2246	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_3
0x4002f25	            0x7533	                           jne 0x4002f5a	      2246	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_3
0x4002f27	        0x488b45f8	                mov rax, qword [rbp - 8]	      2248	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_5
0x4002f2b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2248	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_5
0x4002f2f	    0x483d00000000	                              cmp rax, 0	      2248	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_5
0x4002f35	            0x740f	                            je 0x4002f46	      2248	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_5
0x4002f37	      0xbec8080000	                          mov esi, 0x8c8	      2248	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_5
0x4002f3c	      0xbf00000000	                              mov edi, 0	      2248	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_5
0x4002f41	      0xe800000000	                          call 0x4002f46	      2248	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_5
0x4002f46	        0x488b45f8	                mov rax, qword [rbp - 8]	      2249	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3
0x4002f4a	    0x48c740200000	               mov qword [rax + 0x20], 0	      2249	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3
0x4002f52	            0xeb06	                           jmp 0x4002f5a	      2252	linker.c	FUNCTION_25	SWITCH_1
0x4002f54	              0x90	                                     nop	      2256	linker.c	FUNCTION_25	SWITCH_1
0x4002f55	            0xeb04	                           jmp 0x4002f5b	      2256	linker.c	FUNCTION_25	SWITCH_1
0x4002f57	              0x90	                                     nop	      2223	linker.c	FUNCTION_25	SWITCH_1
0x4002f58	            0xeb01	                           jmp 0x4002f5b	      2223	linker.c	FUNCTION_25	SWITCH_1
0x4002f5a	              0x90	                                     nop	      2252	linker.c	FUNCTION_25	SWITCH_1
0x4002f5b	              0x90	                                     nop	      2258	linker.c	FUNCTION_25
0x4002f5c	              0xc9	                                   leave	      2258	linker.c	FUNCTION_25
0x4002f5d	              0xc3	                                     ret	      2258	linker.c	FUNCTION_25
bfd_generic_define_start_stop	functions,0:IF,1:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	37
0x40046ba	              0x55	                                push rbp	      3160	linker.c	FUNCTION_47
0x40046bb	          0x4889e5	                            mov rbp, rsp	      3160	linker.c	FUNCTION_47
0x40046be	        0x4883ec30	                           sub rsp, 0x30	      3160	linker.c	FUNCTION_47
0x40046c2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3160	linker.c	FUNCTION_47
0x40046c6	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3160	linker.c	FUNCTION_47
0x40046ca	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3160	linker.c	FUNCTION_47
0x40046ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3163	linker.c	FUNCTION_47	CALL_1
0x40046d2	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3163	linker.c	FUNCTION_47	CALL_1
0x40046d6	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3163	linker.c	FUNCTION_47	CALL_1
0x40046da	    0x41b801000000	                              mov r8d, 1	      3163	linker.c	FUNCTION_47	CALL_1
0x40046e0	      0xb900000000	                              mov ecx, 0	      3163	linker.c	FUNCTION_47	CALL_1
0x40046e5	      0xba00000000	                              mov edx, 0	      3163	linker.c	FUNCTION_47	CALL_1
0x40046ea	          0x4889c7	                            mov rdi, rax	      3163	linker.c	FUNCTION_47	CALL_1
0x40046ed	      0xe800000000	                          call 0x40046f2	      3163	linker.c	FUNCTION_47	CALL_1
0x40046f2	        0x488945f8	                mov qword [rbp - 8], rax	      3163	linker.c	FUNCTION_47	CALL_1
0x40046f6	      0x48837df800	                  cmp qword [rbp - 8], 0	      3164	linker.c	FUNCTION_47	IF_1
0x40046fb	            0x743e	                            je 0x400473b	      3164	linker.c	FUNCTION_47	IF_1
0x40046fd	        0x488b45f8	                mov rax, qword [rbp - 8]	      3165	linker.c	FUNCTION_47	IF_1
0x4004701	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      3165	linker.c	FUNCTION_47	IF_1
0x4004705	            0x3c01	                               cmp al, 1	      3165	linker.c	FUNCTION_47	IF_1
0x4004707	            0x740c	                            je 0x4004715	      3165	linker.c	FUNCTION_47	IF_1
0x4004709	        0x488b45f8	                mov rax, qword [rbp - 8]	      3166	linker.c	FUNCTION_47	IF_1
0x400470d	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      3166	linker.c	FUNCTION_47	IF_1
0x4004711	            0x3c02	                               cmp al, 2	      3166	linker.c	FUNCTION_47	IF_1
0x4004713	            0x7526	                           jne 0x400473b	      3166	linker.c	FUNCTION_47	IF_1
0x4004715	        0x488b45f8	                mov rax, qword [rbp - 8]	      3168	linker.c	FUNCTION_47	IF_1
0x4004719	        0xc6401803	                mov byte [rax + 0x18], 3	      3168	linker.c	FUNCTION_47	IF_1
0x400471d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3169	linker.c	FUNCTION_47	IF_1
0x4004721	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3169	linker.c	FUNCTION_47	IF_1
0x4004725	        0x48895028	             mov qword [rax + 0x28], rdx	      3169	linker.c	FUNCTION_47	IF_1
0x4004729	        0x488b45f8	                mov rax, qword [rbp - 8]	      3170	linker.c	FUNCTION_47	IF_1
0x400472d	    0x48c740300000	               mov qword [rax + 0x30], 0	      3170	linker.c	FUNCTION_47	IF_1
0x4004735	        0x488b45f8	                mov rax, qword [rbp - 8]	      3171	linker.c	FUNCTION_47	IF_1
0x4004739	            0xeb05	                           jmp 0x4004740	      3171	linker.c	FUNCTION_47	IF_1
0x400473b	      0xb800000000	                              mov eax, 0	      3173	linker.c	FUNCTION_47
0x4004740	              0xc9	                                   leave	      3174	linker.c	FUNCTION_47
0x4004741	              0xc3	                                     ret	      3174	linker.c	FUNCTION_47
_bfd_generic_reloc_link_order	functions,0:IF,9:WHILE,0:SWITCH,1:CALL,16:ELSE,2:FOR,0:DO,0	226
0x40030ba	              0x55	                                push rbp	      2314	linker.c	FUNCTION_27
0x40030bb	          0x4889e5	                            mov rbp, rsp	      2314	linker.c	FUNCTION_27
0x40030be	              0x53	                                push rbx	      2314	linker.c	FUNCTION_27
0x40030bf	        0x4883ec58	                           sub rsp, 0x58	      2314	linker.c	FUNCTION_27
0x40030c3	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2314	linker.c	FUNCTION_27
0x40030c7	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2314	linker.c	FUNCTION_27
0x40030cb	        0x488955a8	             mov qword [rbp - 0x58], rdx	      2314	linker.c	FUNCTION_27
0x40030cf	        0x48894da0	             mov qword [rbp - 0x60], rcx	      2314	linker.c	FUNCTION_27
0x40030d3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2317	linker.c	FUNCTION_27	IF_1	CALL_1
0x40030d7	           0xfb600	                   movzx eax, byte [rax]	      2317	linker.c	FUNCTION_27	IF_1	CALL_1
0x40030da	          0x83e003	                              and eax, 3	      2317	linker.c	FUNCTION_27	IF_1	CALL_1
0x40030dd	            0x3c02	                               cmp al, 2	      2317	linker.c	FUNCTION_27	IF_1	CALL_1
0x40030df	            0x7414	                            je 0x40030f5	      2317	linker.c	FUNCTION_27	IF_1	CALL_1
0x40030e1	      0xba00000000	                              mov edx, 0	      2318	linker.c	FUNCTION_27	CALL_2
0x40030e6	      0xbe0e090000	                          mov esi, 0x90e	      2318	linker.c	FUNCTION_27	CALL_2
0x40030eb	      0xbf00000000	                              mov edi, 0	      2318	linker.c	FUNCTION_27	CALL_2
0x40030f0	      0xe800000000	                          call 0x40030f5	      2318	linker.c	FUNCTION_27	CALL_2
0x40030f5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2319	linker.c	FUNCTION_27	IF_2
0x40030f9	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      2319	linker.c	FUNCTION_27	IF_2
0x4003100	          0x4885c0	                           test rax, rax	      2319	linker.c	FUNCTION_27	IF_2
0x4003103	            0x7514	                           jne 0x4003119	      2319	linker.c	FUNCTION_27	IF_2
0x4003105	      0xba00000000	                              mov edx, 0	      2320	linker.c	FUNCTION_27	CALL_3
0x400310a	      0xbe10090000	                          mov esi, 0x910	      2320	linker.c	FUNCTION_27	CALL_3
0x400310f	      0xbf00000000	                              mov edi, 0	      2320	linker.c	FUNCTION_27	CALL_3
0x4003114	      0xe800000000	                          call 0x4003119	      2320	linker.c	FUNCTION_27	CALL_3
0x4003119	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2322	linker.c	FUNCTION_27	CALL_4
0x400311d	      0xbe20000000	                           mov esi, 0x20	      2322	linker.c	FUNCTION_27	CALL_4
0x4003122	          0x4889c7	                            mov rdi, rax	      2322	linker.c	FUNCTION_27	CALL_4
0x4003125	      0xe800000000	                          call 0x400312a	      2322	linker.c	FUNCTION_27	CALL_4
0x400312a	        0x488945c8	             mov qword [rbp - 0x38], rax	      2322	linker.c	FUNCTION_27	CALL_4
0x400312e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2323	linker.c	FUNCTION_27	IF_3
0x4003133	            0x750a	                           jne 0x400313f	      2323	linker.c	FUNCTION_27	IF_3
0x4003135	      0xb800000000	                              mov eax, 0	      2324	linker.c	FUNCTION_27	IF_3
0x400313a	      0xe9de020000	                           jmp 0x400341d	      2324	linker.c	FUNCTION_27	IF_3
0x400313f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2326	linker.c	FUNCTION_27
0x4003143	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2326	linker.c	FUNCTION_27
0x4003147	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2326	linker.c	FUNCTION_27
0x400314b	        0x48895008	                mov qword [rax + 8], rdx	      2326	linker.c	FUNCTION_27
0x400314f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2327	linker.c	FUNCTION_27	CALL_5
0x4003153	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2327	linker.c	FUNCTION_27	CALL_5
0x4003157	            0x8b10	                    mov edx, dword [rax]	      2327	linker.c	FUNCTION_27	CALL_5
0x4003159	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2327	linker.c	FUNCTION_27	CALL_5
0x400315d	            0x89d6	                            mov esi, edx	      2327	linker.c	FUNCTION_27	CALL_5
0x400315f	          0x4889c7	                            mov rdi, rax	      2327	linker.c	FUNCTION_27	CALL_5
0x4003162	      0xe800000000	                          call 0x4003167	      2327	linker.c	FUNCTION_27	CALL_5
0x4003167	          0x4889c2	                            mov rdx, rax	      2327	linker.c	FUNCTION_27	CALL_5
0x400316a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2327	linker.c	FUNCTION_27	CALL_5
0x400316e	        0x48895018	             mov qword [rax + 0x18], rdx	      2327	linker.c	FUNCTION_27	CALL_5
0x4003172	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2328	linker.c	FUNCTION_27	IF_4
0x4003176	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2328	linker.c	FUNCTION_27	IF_4
0x400317a	          0x4885c0	                           test rax, rax	      2328	linker.c	FUNCTION_27	IF_4
0x400317d	            0x7514	                           jne 0x4003193	      2328	linker.c	FUNCTION_27	IF_4
0x400317f	      0xbf11000000	                           mov edi, 0x11	      2330	linker.c	FUNCTION_27	IF_4	CALL_6
0x4003184	      0xe800000000	                          call 0x4003189	      2330	linker.c	FUNCTION_27	IF_4	CALL_6
0x4003189	      0xb800000000	                              mov eax, 0	      2331	linker.c	FUNCTION_27	IF_4
0x400318e	      0xe98a020000	                           jmp 0x400341d	      2331	linker.c	FUNCTION_27	IF_4
0x4003193	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2335	linker.c	FUNCTION_27	IF_5
0x4003197	          0x8b4008	                mov eax, dword [rax + 8]	      2335	linker.c	FUNCTION_27	IF_5
0x400319a	          0x83f803	                              cmp eax, 3	      2335	linker.c	FUNCTION_27	IF_5
0x400319d	            0x751f	                           jne 0x40031be	      2335	linker.c	FUNCTION_27	IF_5
0x400319f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2336	linker.c	FUNCTION_27	IF_5
0x40031a3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2336	linker.c	FUNCTION_27	IF_5
0x40031a7	        0x488b4008	                mov rax, qword [rax + 8]	      2336	linker.c	FUNCTION_27	IF_5
0x40031ab	    0x488b90000100	           mov rdx, qword [rax + 0x100] 	      2336	linker.c	FUNCTION_27	IF_5
0x40031b2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2336	linker.c	FUNCTION_27	IF_5
0x40031b6	          0x488910	                    mov qword [rax], rdx	      2336	linker.c	FUNCTION_27	IF_5
0x40031b9	      0xe994000000	                           jmp 0x4003252	      2336	linker.c	FUNCTION_27	IF_5
0x40031be	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2343	linker.c	FUNCTION_27	ELSE_1
0x40031c2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2343	linker.c	FUNCTION_27	ELSE_1
0x40031c6	        0x488b5008	                mov rdx, qword [rax + 8]	      2342	linker.c	FUNCTION_27	ELSE_1	CALL_7
0x40031ca	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      2341	linker.c	FUNCTION_27	ELSE_1
0x40031ce	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2341	linker.c	FUNCTION_27	ELSE_1
0x40031d2	    0x41b901000000	                              mov r9d, 1	      2341	linker.c	FUNCTION_27	ELSE_1
0x40031d8	    0x41b800000000	                              mov r8d, 0	      2341	linker.c	FUNCTION_27	ELSE_1
0x40031de	      0xb900000000	                              mov ecx, 0	      2341	linker.c	FUNCTION_27	ELSE_1
0x40031e3	          0x4889c7	                            mov rdi, rax	      2341	linker.c	FUNCTION_27	ELSE_1
0x40031e6	      0xe800000000	                          call 0x40031eb	      2341	linker.c	FUNCTION_27	ELSE_1
0x40031eb	        0x488945d0	             mov qword [rbp - 0x30], rax	      2341	linker.c	FUNCTION_27	ELSE_1
0x40031ef	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      2345	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40031f4	            0x740b	                            je 0x4003201	      2345	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40031f6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2346	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40031fa	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2346	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40031fd	            0x85c0	                           test eax, eax	      2346	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40031ff	            0x7542	                           jne 0x4003243	      2346	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4003201	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4003205	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4003209	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x400320d	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2349	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4003211	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2349	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4003215	        0x488b7208	                mov rsi, qword [rdx + 8]	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4003219	        0x488b7db0	             mov rdi, qword [rbp - 0x50]	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x400321d	    0x41b800000000	                              mov r8d, 0	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4003223	      0xb900000000	                              mov ecx, 0	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4003228	      0xba00000000	                              mov edx, 0	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x400322d	            0xffd0	                                call rax	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x400322f	      0xbf11000000	                           mov edi, 0x11	      2350	linker.c	FUNCTION_27	ELSE_1	IF_6	CALL_8
0x4003234	      0xe800000000	                          call 0x4003239	      2350	linker.c	FUNCTION_27	ELSE_1	IF_6	CALL_8
0x4003239	      0xb800000000	                              mov eax, 0	      2351	linker.c	FUNCTION_27	ELSE_1	IF_6
0x400323e	      0xe9da010000	                           jmp 0x400341d	      2351	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4003243	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2353	linker.c	FUNCTION_27	ELSE_1
0x4003247	        0x488d5040	                   lea rdx, [rax + 0x40]	      2353	linker.c	FUNCTION_27	ELSE_1
0x400324b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2353	linker.c	FUNCTION_27	ELSE_1
0x400324f	          0x488910	                    mov qword [rax], rdx	      2353	linker.c	FUNCTION_27	ELSE_1
0x4003252	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2358	linker.c	FUNCTION_27	IF_7
0x4003256	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2358	linker.c	FUNCTION_27	IF_7
0x400325a	          0x8b4030	            mov eax, dword [rax + 0x30] 	      2358	linker.c	FUNCTION_27	IF_7
0x400325d	            0x85c0	                           test eax, eax	      2358	linker.c	FUNCTION_27	IF_7
0x400325f	            0x7519	                           jne 0x400327a	      2358	linker.c	FUNCTION_27	IF_7
0x4003261	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2359	linker.c	FUNCTION_27	IF_7
0x4003265	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2359	linker.c	FUNCTION_27	IF_7
0x4003269	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2359	linker.c	FUNCTION_27	IF_7
0x400326d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2359	linker.c	FUNCTION_27	IF_7
0x4003271	        0x48895010	             mov qword [rax + 0x10], rdx	      2359	linker.c	FUNCTION_27	IF_7
0x4003275	      0xe962010000	                           jmp 0x40033dc	      2359	linker.c	FUNCTION_27	IF_7
0x400327a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2368	linker.c	FUNCTION_27	ELSE_2	CALL_9
0x400327e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2368	linker.c	FUNCTION_27	ELSE_2	CALL_9
0x4003282	          0x4889c7	                            mov rdi, rax	      2368	linker.c	FUNCTION_27	ELSE_2	CALL_9
0x4003285	      0xe800000000	                          call 0x400328a	      2368	linker.c	FUNCTION_27	ELSE_2	CALL_9
0x400328a	            0x89c0	                            mov eax, eax	      2368	linker.c	FUNCTION_27	ELSE_2	CALL_9
0x400328c	        0x488945d8	             mov qword [rbp - 0x28], rax	      2368	linker.c	FUNCTION_27	ELSE_2	CALL_9
0x4003290	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2369	linker.c	FUNCTION_27	ELSE_2	CALL_10
0x4003294	          0x4889c7	                            mov rdi, rax	      2369	linker.c	FUNCTION_27	ELSE_2	CALL_10
0x4003297	      0xe800000000	                          call 0x400329c	      2369	linker.c	FUNCTION_27	ELSE_2	CALL_10
0x400329c	        0x488945e0	             mov qword [rbp - 0x20], rax	      2369	linker.c	FUNCTION_27	ELSE_2	CALL_10
0x40032a0	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2370	linker.c	FUNCTION_27	ELSE_2	IF_8
0x40032a5	            0x7511	                           jne 0x40032b8	      2370	linker.c	FUNCTION_27	ELSE_2	IF_8
0x40032a7	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2370	linker.c	FUNCTION_27	ELSE_2	IF_8
0x40032ac	            0x740a	                            je 0x40032b8	      2370	linker.c	FUNCTION_27	ELSE_2	IF_8
0x40032ae	      0xb800000000	                              mov eax, 0	      2371	linker.c	FUNCTION_27	ELSE_2	IF_8
0x40032b3	      0xe965010000	                           jmp 0x400341d	      2371	linker.c	FUNCTION_27	ELSE_2	IF_8
0x40032b8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2373	linker.c	FUNCTION_27	ELSE_2
0x40032bc	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2373	linker.c	FUNCTION_27	ELSE_2
0x40032c0	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2373	linker.c	FUNCTION_27	ELSE_2
0x40032c4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x40032c8	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x40032cc	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x40032d0	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x40032d4	          0x4889c7	                            mov rdi, rax	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x40032d7	      0xe800000000	                          call 0x40032dc	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x40032dc	          0x8945c0	             mov dword [rbp - 0x40], eax	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x40032df	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032e2	          0x83f802	                              cmp eax, 2	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032e5	     0xf848b000000	                            je 0x4003376	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032eb	          0x83f803	                              cmp eax, 3	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032ee	            0x7414	                            je 0x4003304	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032f0	      0xba00000000	                              mov edx, 0	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x40032f5	      0xbe4d090000	                          mov esi, 0x94d	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x40032fa	      0xbf00000000	                              mov edi, 0	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x40032ff	      0xe800000000	                          call 0x4003304	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x4003304	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003308	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400330c	        0x4c8b5038	            mov r10, qword [rax + 0x38] 	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003310	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2388	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003314	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2388	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003318	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400331c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2388	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003320	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2388	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003324	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2388	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003328	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2385	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400332c	          0x8b4008	                mov eax, dword [rax + 8]	      2385	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400332f	          0x83f803	                              cmp eax, 3	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003332	            0x7511	                           jne 0x4003345	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003334	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2386	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_13
0x4003338	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2386	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_13
0x400333c	        0x488b4008	                mov rax, qword [rax + 8]	      2386	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_13
0x4003340	          0x488b00	                    mov rax, qword [rax]	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003343	            0xeb0c	                           jmp 0x4003351	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003345	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2387	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003349	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2387	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400334d	        0x488b4008	                mov rax, qword [rax + 8]	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003351	        0x488b7db0	             mov rdi, qword [rbp - 0x50]	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003355	            0x6a00	                                  push 0	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003357	            0x6a00	                                  push 0	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003359	    0x41b900000000	                              mov r9d, 0	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400335f	          0x4989c8	                             mov r8, rcx	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003362	          0x4889d1	                            mov rcx, rdx	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003365	          0x4889c2	                            mov rdx, rax	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003368	      0xbe00000000	                              mov esi, 0	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400336d	          0x41ffd2	                                call r10	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003370	        0x4883c410	                           add rsp, 0x10	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003374	            0xeb01	                           jmp 0x4003377	      2390	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003376	              0x90	                                     nop	      2378	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003377	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x400337b	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x400337f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x4003383	          0x4889c7	                            mov rdi, rax	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x4003386	      0xe800000000	                          call 0x400338b	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x400338b	            0x89c0	                            mov eax, eax	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x400338d	        0x480fafc3	                           imul rax, rbx	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x4003391	        0x488945e8	             mov qword [rbp - 0x18], rax	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x4003395	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4003399	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x400339d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x40033a1	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x40033a5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x40033a9	          0x4989f8	                             mov r8, rdi	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x40033ac	          0x4889c7	                            mov rdi, rax	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x40033af	      0xe800000000	                          call 0x40033b4	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x40033b4	          0x8945c4	             mov dword [rbp - 0x3c], eax	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x40033b7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2394	linker.c	FUNCTION_27	ELSE_2	CALL_16
0x40033bb	          0x4889c7	                            mov rdi, rax	      2394	linker.c	FUNCTION_27	ELSE_2	CALL_16
0x40033be	      0xe800000000	                          call 0x40033c3	      2394	linker.c	FUNCTION_27	ELSE_2	CALL_16
0x40033c3	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      2395	linker.c	FUNCTION_27	ELSE_2	IF_9
0x40033c7	            0x7507	                           jne 0x40033d0	      2395	linker.c	FUNCTION_27	ELSE_2	IF_9
0x40033c9	      0xb800000000	                              mov eax, 0	      2396	linker.c	FUNCTION_27	ELSE_2	IF_9
0x40033ce	            0xeb4d	                           jmp 0x400341d	      2396	linker.c	FUNCTION_27	ELSE_2	IF_9
0x40033d0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2398	linker.c	FUNCTION_27	ELSE_2
0x40033d4	    0x48c740100000	               mov qword [rax + 0x10], 0	      2398	linker.c	FUNCTION_27	ELSE_2
0x40033dc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2401	linker.c	FUNCTION_27
0x40033e0	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	      2401	linker.c	FUNCTION_27
0x40033e7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2401	linker.c	FUNCTION_27
0x40033eb	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      2401	linker.c	FUNCTION_27
0x40033f1	            0x89c0	                            mov eax, eax	      2401	linker.c	FUNCTION_27
0x40033f3	        0x48c1e003	                              shl rax, 3	      2401	linker.c	FUNCTION_27
0x40033f7	          0x4801c2	                            add rdx, rax	      2401	linker.c	FUNCTION_27
0x40033fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2401	linker.c	FUNCTION_27
0x40033fe	          0x488902	                    mov qword [rdx], rax	      2401	linker.c	FUNCTION_27
0x4003401	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2402	linker.c	FUNCTION_27
0x4003405	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      2402	linker.c	FUNCTION_27
0x400340b	          0x8d5001	                      lea edx, [rax + 1]	      2402	linker.c	FUNCTION_27
0x400340e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2402	linker.c	FUNCTION_27
0x4003412	    0x899088000000	             mov dword [rax + 0x88], edx	      2402	linker.c	FUNCTION_27
0x4003418	      0xb801000000	                              mov eax, 1	      2404	linker.c	FUNCTION_27
0x400341d	        0x488b5df8	                mov rbx, qword [rbp - 8]	      2405	linker.c	FUNCTION_27
0x4003421	              0xc9	                                   leave	      2405	linker.c	FUNCTION_27
0x4003422	              0xc3	                                     ret	      2405	linker.c	FUNCTION_27
_bfd_nolink_section_already_linked	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	11
0x4004c06	              0x55	                                push rbp	      3486	linker.c	FUNCTION_63
0x4004c07	          0x4889e5	                            mov rbp, rsp	      3486	linker.c	FUNCTION_63
0x4004c0a	        0x4883ec20	                           sub rsp, 0x20	      3486	linker.c	FUNCTION_63
0x4004c0e	        0x48897df8	                mov qword [rbp - 8], rdi	      3486	linker.c	FUNCTION_63
0x4004c12	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3486	linker.c	FUNCTION_63
0x4004c16	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3486	linker.c	FUNCTION_63
0x4004c1a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3487	linker.c	FUNCTION_63	CALL_1
0x4004c1e	          0x4889c7	                            mov rdi, rax	      3487	linker.c	FUNCTION_63	CALL_1
0x4004c21	      0xe800000000	                          call 0x4004c26	      3487	linker.c	FUNCTION_63	CALL_1
0x4004c26	              0xc9	                                   leave	      3488	linker.c	FUNCTION_63
0x4004c27	              0xc3	                                     ret	      3488	linker.c	FUNCTION_63
_bfd_nolink_bfd_link_just_syms	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,0:ELSE,0:FOR,0:DO,0	7
0x4004bc6	              0x55	                                push rbp	      3465	linker.c	FUNCTION_60
0x4004bc7	          0x4889e5	                            mov rbp, rsp	      3465	linker.c	FUNCTION_60
0x4004bca	        0x48897df8	                mov qword [rbp - 8], rdi	      3465	linker.c	FUNCTION_60
0x4004bce	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3465	linker.c	FUNCTION_60
0x4004bd2	              0x90	                                     nop	      3466	linker.c	FUNCTION_60
0x4004bd3	              0x5d	                                 pop rbp	      3466	linker.c	FUNCTION_60
0x4004bd4	              0xc3	                                     ret	      3466	linker.c	FUNCTION_60
hash_entry_bfd	functions,0:IF,0:WHILE,1:SWITCH,1:CALL,0:ELSE,0:FOR,0:DO,0	34
0x40013d4	              0x55	                                push rbp	      1327	linker.c	FUNCTION_20
0x40013d5	          0x4889e5	                            mov rbp, rsp	      1327	linker.c	FUNCTION_20
0x40013d8	        0x48897df8	                mov qword [rbp - 8], rdi	      1327	linker.c	FUNCTION_20
0x40013dc	            0xeb0c	                           jmp 0x40013ea	      1328	linker.c	FUNCTION_20	WHILE_1
0x40013de	        0x488b45f8	                mov rax, qword [rbp - 8]	      1329	linker.c	FUNCTION_20	WHILE_1
0x40013e2	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1329	linker.c	FUNCTION_20	WHILE_1
0x40013e6	        0x488945f8	                mov qword [rbp - 8], rax	      1329	linker.c	FUNCTION_20	WHILE_1
0x40013ea	        0x488b45f8	                mov rax, qword [rbp - 8]	      1328	linker.c	FUNCTION_20	WHILE_1
0x40013ee	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1328	linker.c	FUNCTION_20	WHILE_1
0x40013f2	            0x3c07	                               cmp al, 7	      1328	linker.c	FUNCTION_20	WHILE_1
0x40013f4	            0x74e8	                            je 0x40013de	      1328	linker.c	FUNCTION_20	WHILE_1
0x40013f6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1330	linker.c	FUNCTION_20	SWITCH_1
0x40013fa	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1330	linker.c	FUNCTION_20	SWITCH_1
0x40013fe	           0xfb6c0	                           movzx eax, al	      1330	linker.c	FUNCTION_20	SWITCH_1
0x4001401	          0x83f805	                              cmp eax, 5	      1330	linker.c	FUNCTION_20	SWITCH_1
0x4001404	            0x770c	                            ja 0x4001412	      1330	linker.c	FUNCTION_20	SWITCH_1
0x4001406	            0x89c0	                            mov eax, eax	      1330	linker.c	FUNCTION_20	SWITCH_1
0x4001408	    0x488b04c50000	                  mov rax, qword [rax*8]	      1330	linker.c	FUNCTION_20	SWITCH_1
0x4001410	            0xffe0	                                 jmp rax	      1330	linker.c	FUNCTION_20	SWITCH_1
0x4001412	      0xb800000000	                              mov eax, 0	      1333	linker.c	FUNCTION_20	SWITCH_1
0x4001417	            0xeb2e	                           jmp 0x4001447	      1333	linker.c	FUNCTION_20	SWITCH_1
0x4001419	        0x488b45f8	                mov rax, qword [rbp - 8]	      1336	linker.c	FUNCTION_20	SWITCH_1
0x400141d	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1336	linker.c	FUNCTION_20	SWITCH_1
0x4001421	            0xeb24	                           jmp 0x4001447	      1336	linker.c	FUNCTION_20	SWITCH_1
0x4001423	        0x488b45f8	                mov rax, qword [rbp - 8]	      1339	linker.c	FUNCTION_20	SWITCH_1
0x4001427	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1339	linker.c	FUNCTION_20	SWITCH_1
0x400142b	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      1339	linker.c	FUNCTION_20	SWITCH_1
0x4001432	            0xeb13	                           jmp 0x4001447	      1339	linker.c	FUNCTION_20	SWITCH_1
0x4001434	        0x488b45f8	                mov rax, qword [rbp - 8]	      1341	linker.c	FUNCTION_20	SWITCH_1
0x4001438	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1341	linker.c	FUNCTION_20	SWITCH_1
0x400143c	        0x488b4008	                mov rax, qword [rax + 8]	      1341	linker.c	FUNCTION_20	SWITCH_1
0x4001440	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      1341	linker.c	FUNCTION_20	SWITCH_1
0x4001447	              0x5d	                                 pop rbp	      1344	linker.c	FUNCTION_20
0x4001448	              0xc3	                                     ret	      1344	linker.c	FUNCTION_20
_bfd_count_link_order_relocs	functions,0:IF,1:WHILE,0:SWITCH,0:CALL,0:ELSE,0:FOR,1:DO,0	23
0x4003b8a	              0x55	                                push rbp	      2665	linker.c	FUNCTION_32
0x4003b8b	          0x4889e5	                            mov rbp, rsp	      2665	linker.c	FUNCTION_32
0x4003b8e	            0x4154	                                push r12	      2665	linker.c	FUNCTION_32
0x4003b90	              0x53	                                push rbx	      2665	linker.c	FUNCTION_32
0x4003b91	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2665	linker.c	FUNCTION_32
0x4003b95	    0x41bc00000000	                             mov r12d, 0	      2669	linker.c	FUNCTION_32
0x4003b9b	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2670	linker.c	FUNCTION_32	FOR_1
0x4003b9f	            0xeb17	                           jmp 0x4003bb8	      2670	linker.c	FUNCTION_32	FOR_1
0x4003ba1	          0x8b4308	                mov eax, dword [rbx + 8]	      2672	linker.c	FUNCTION_32	FOR_1	IF_1
0x4003ba4	          0x83f803	                              cmp eax, 3	      2672	linker.c	FUNCTION_32	FOR_1	IF_1
0x4003ba7	            0x7408	                            je 0x4003bb1	      2672	linker.c	FUNCTION_32	FOR_1	IF_1
0x4003ba9	          0x8b4308	                mov eax, dword [rbx + 8]	      2673	linker.c	FUNCTION_32	FOR_1	IF_1
0x4003bac	          0x83f804	                              cmp eax, 4	      2673	linker.c	FUNCTION_32	FOR_1	IF_1
0x4003baf	            0x7504	                           jne 0x4003bb5	      2673	linker.c	FUNCTION_32	FOR_1	IF_1
0x4003bb1	        0x4183c401	                             add r12d, 1	      2674	linker.c	FUNCTION_32	FOR_1	IF_1
0x4003bb5	          0x488b1b	                    mov rbx, qword [rbx]	      2670	linker.c	FUNCTION_32	FOR_1
0x4003bb8	          0x4885db	                           test rbx, rbx	      2670	linker.c	FUNCTION_32	FOR_1
0x4003bbb	            0x75e4	                           jne 0x4003ba1	      2670	linker.c	FUNCTION_32	FOR_1
0x4003bbd	          0x4489e0	                           mov eax, r12d	      2677	linker.c	FUNCTION_32
0x4003bc0	              0x5b	                                 pop rbx	      2678	linker.c	FUNCTION_32
0x4003bc1	            0x415c	                                 pop r12	      2678	linker.c	FUNCTION_32
0x4003bc3	              0x5d	                                 pop rbp	      2678	linker.c	FUNCTION_32
0x4003bc4	              0xc3	                                     ret	      2678	linker.c	FUNCTION_32
_bfd_generic_final_link	functions,0:IF,14:WHILE,0:SWITCH,1:CALL,17:ELSE,1:FOR,7:DO,0	285
0x40020fc	              0x55	                                push rbp	      1807	linker.c	FUNCTION_22
0x40020fd	          0x4889e5	                            mov rbp, rsp	      1807	linker.c	FUNCTION_22
0x4002100	    0x4881ec900000	                           sub rsp, 0x90	      1807	linker.c	FUNCTION_22
0x4002107	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      1807	linker.c	FUNCTION_22
0x400210e	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      1807	linker.c	FUNCTION_22
0x4002115	    0x64488b042528	                mov rax, qword fs:[0x28]	      1807	linker.c	FUNCTION_22
0x400211e	        0x488945f8	                mov qword [rbp - 8], rax	      1807	linker.c	FUNCTION_22
0x4002122	            0x31c0	                            xor eax, eax	      1807	linker.c	FUNCTION_22
0x4002124	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1814	linker.c	FUNCTION_22	CALL_1
0x400212b	    0x48c780b00000	               mov qword [rax + 0xb0], 0	      1814	linker.c	FUNCTION_22	CALL_1
0x4002136	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1815	linker.c	FUNCTION_22	CALL_2
0x400213d	    0xc780b8000000	               mov dword [rax + 0xb8], 0	      1815	linker.c	FUNCTION_22	CALL_2
0x4002147	    0x48c745880000	               mov qword [rbp - 0x78], 0	      1816	linker.c	FUNCTION_22
0x400214f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1819	linker.c	FUNCTION_22	FOR_1
0x4002156	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      1819	linker.c	FUNCTION_22	FOR_1
0x400215d	        0x48894598	             mov qword [rbp - 0x68], rax	      1819	linker.c	FUNCTION_22	FOR_1
0x4002161	            0xeb4d	                           jmp 0x40021b0	      1819	linker.c	FUNCTION_22	FOR_1
0x4002163	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4002167	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x400216e	        0x488945a0	             mov qword [rbp - 0x60], rax	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4002172	            0xeb29	                           jmp 0x400219d	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4002174	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1821	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x4002178	          0x8b4008	                mov eax, dword [rax + 8]	      1821	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x400217b	          0x83f801	                              cmp eax, 1	      1821	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x400217e	            0x7512	                           jne 0x4002192	      1821	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x4002180	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1822	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x4002184	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1822	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x4002188	         0xfb65024	           movzx edx, byte [rax + 0x24] 	      1822	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x400218c	          0x83ca02	                               or edx, 2	      1822	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x400218f	          0x885024	               mov byte [rax + 0x24], dl	      1822	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x4002192	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4002196	          0x488b00	                    mov rax, qword [rax]	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4002199	        0x488945a0	             mov qword [rbp - 0x60], rax	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x400219d	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x40021a2	            0x75d0	                           jne 0x4002174	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x40021a4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1819	linker.c	FUNCTION_22	FOR_1
0x40021a8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1819	linker.c	FUNCTION_22	FOR_1
0x40021ac	        0x48894598	             mov qword [rbp - 0x68], rax	      1819	linker.c	FUNCTION_22	FOR_1
0x40021b0	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      1819	linker.c	FUNCTION_22	FOR_1
0x40021b5	            0x75ac	                           jne 0x4002163	      1819	linker.c	FUNCTION_22	FOR_1
0x40021b7	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1825	linker.c	FUNCTION_22	FOR_3
0x40021be	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1825	linker.c	FUNCTION_22	FOR_3
0x40021c2	        0x48894590	             mov qword [rbp - 0x70], rax	      1825	linker.c	FUNCTION_22	FOR_3
0x40021c6	            0xeb3b	                           jmp 0x4002203	      1825	linker.c	FUNCTION_22	FOR_3
0x40021c8	        0x488d4d88	                   lea rcx, [rbp - 0x78]	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x40021cc	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x40021d3	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x40021d7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x40021de	          0x4889c7	                            mov rdi, rax	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x40021e1	      0xe800000000	                          call 0x40021e6	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x40021e6	            0x85c0	                           test eax, eax	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x40021e8	            0x750a	                           jne 0x40021f4	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x40021ea	      0xb800000000	                              mov eax, 0	      1827	linker.c	FUNCTION_22	FOR_3	IF_2
0x40021ef	      0xe9b2030000	                           jmp 0x40025a6	      1827	linker.c	FUNCTION_22	FOR_3	IF_2
0x40021f4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1825	linker.c	FUNCTION_22	FOR_3
0x40021f8	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      1825	linker.c	FUNCTION_22	FOR_3
0x40021ff	        0x48894590	             mov qword [rbp - 0x70], rax	      1825	linker.c	FUNCTION_22	FOR_3
0x4002203	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      1825	linker.c	FUNCTION_22	FOR_3
0x4002208	            0x75be	                           jne 0x40021c8	      1825	linker.c	FUNCTION_22	FOR_3
0x400220a	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1830	linker.c	FUNCTION_22
0x4002211	        0x488945e0	             mov qword [rbp - 0x20], rax	      1830	linker.c	FUNCTION_22
0x4002215	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1831	linker.c	FUNCTION_22
0x400221c	        0x488945e8	             mov qword [rbp - 0x18], rax	      1831	linker.c	FUNCTION_22
0x4002220	        0x488d4588	                   lea rax, [rbp - 0x78]	      1832	linker.c	FUNCTION_22
0x4002224	        0x488945f0	             mov qword [rbp - 0x10], rax	      1832	linker.c	FUNCTION_22
0x4002228	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1833	linker.c	FUNCTION_22	CALL_5
0x400222f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1833	linker.c	FUNCTION_22	CALL_5
0x4002233	          0x4889c1	                            mov rcx, rax	      1833	linker.c	FUNCTION_22	CALL_5
0x4002236	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1833	linker.c	FUNCTION_22	CALL_5
0x400223a	          0x4889c2	                            mov rdx, rax	      1833	linker.c	FUNCTION_22	CALL_5
0x400223d	      0xbe00000000	                              mov esi, 0	      1833	linker.c	FUNCTION_22	CALL_5
0x4002242	          0x4889cf	                            mov rdi, rcx	      1833	linker.c	FUNCTION_22	CALL_5
0x4002245	      0xe800000000	                          call 0x400224a	      1833	linker.c	FUNCTION_22	CALL_5
0x400224a	        0x488d4d88	                   lea rcx, [rbp - 0x78]	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x400224e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x4002255	      0xba00000000	                              mov edx, 0	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x400225a	          0x4889ce	                            mov rsi, rcx	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x400225d	          0x4889c7	                            mov rdi, rax	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x4002260	      0xe857030000	      call sym.generic_add_output_symbol	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x4002265	            0x85c0	                           test eax, eax	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x4002267	            0x750a	                           jne 0x4002273	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x4002269	      0xb800000000	                              mov eax, 0	      1841	linker.c	FUNCTION_22	IF_3
0x400226e	      0xe933030000	                           jmp 0x40025a6	      1841	linker.c	FUNCTION_22	IF_3
0x4002273	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1843	linker.c	FUNCTION_22	IF_4	CALL_7
0x400227a	           0xfb600	                   movzx eax, byte [rax]	      1843	linker.c	FUNCTION_22	IF_4	CALL_7
0x400227d	          0x83e003	                              and eax, 3	      1843	linker.c	FUNCTION_22	IF_4	CALL_7
0x4002280	            0x3c02	                               cmp al, 2	      1843	linker.c	FUNCTION_22	IF_4	CALL_7
0x4002282	     0xf851d020000	                           jne 0x40024a5	      1843	linker.c	FUNCTION_22	IF_4	CALL_7
0x4002288	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x400228f	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x4002296	        0x48894598	             mov qword [rbp - 0x68], rax	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x400229a	      0xe9fb010000	                           jmp 0x400249a	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x400229f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1848	linker.c	FUNCTION_22	IF_4	FOR_4
0x40022a3	    0xc78088000000	               mov dword [rax + 0x88], 0	      1848	linker.c	FUNCTION_22	IF_4	FOR_4
0x40022ad	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x40022b1	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x40022b8	        0x488945a0	             mov qword [rbp - 0x60], rax	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x40022bc	      0xe940010000	                           jmp 0x4002401	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x40022c1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1851	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x40022c5	          0x8b4008	                mov eax, dword [rax + 8]	      1851	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x40022c8	          0x83f803	                              cmp eax, 3	      1851	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x40022cb	            0x740c	                            je 0x40022d9	      1851	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x40022cd	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1852	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x40022d1	          0x8b4008	                mov eax, dword [rax + 8]	      1852	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x40022d4	          0x83f804	                              cmp eax, 4	      1852	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x40022d7	            0x751c	                           jne 0x40022f5	      1852	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x40022d9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1853	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x40022dd	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      1853	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x40022e3	          0x8d5001	                      lea edx, [rax + 1]	      1853	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x40022e6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1853	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x40022ea	    0x899088000000	             mov dword [rax + 0x88], edx	      1853	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x40022f0	      0xe901010000	                           jmp 0x40023f6	      1853	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x40022f5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1854	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x40022f9	          0x8b4008	                mov eax, dword [rax + 8]	      1854	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x40022fc	          0x83f801	                              cmp eax, 1	      1854	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x40022ff	     0xf85f1000000	                           jne 0x40023f6	      1854	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x4002305	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1863	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x4002309	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1863	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x400230d	        0x488945b0	             mov qword [rbp - 0x50], rax	      1863	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x4002311	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1864	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x4002315	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      1864	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x400231c	        0x488945b8	             mov qword [rbp - 0x48], rax	      1864	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x4002320	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1865	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_8
0x4002324	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1865	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_8
0x4002328	          0x4889d6	                            mov rsi, rdx	      1865	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_8
0x400232b	          0x4889c7	                            mov rdi, rax	      1865	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_8
0x400232e	      0xe800000000	                          call 0x4002333	      1865	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_8
0x4002333	        0x488945c0	             mov qword [rbp - 0x40], rax	      1865	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_8
0x4002337	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1867	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_7
0x400233c	            0x790a	                           jns 0x4002348	      1867	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_7
0x400233e	      0xb800000000	                              mov eax, 0	      1868	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_7
0x4002343	      0xe95e020000	                           jmp 0x40025a6	      1868	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_7
0x4002348	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1869	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_9
0x400234c	          0x4889c7	                            mov rdi, rax	      1869	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_9
0x400234f	      0xe800000000	                          call 0x4002354	      1869	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_9
0x4002354	        0x488945c8	             mov qword [rbp - 0x38], rax	      1869	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_9
0x4002358	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x400235d	            0x7511	                           jne 0x4002370	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x400235f	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x4002364	            0x740a	                            je 0x4002370	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x4002366	      0xb800000000	                              mov eax, 0	      1871	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x400236b	      0xe936020000	                           jmp 0x40025a6	      1871	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x4002370	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1872	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_10
0x4002374	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      1872	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_10
0x400237b	        0x488945d0	             mov qword [rbp - 0x30], rax	      1872	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_10
0x400237f	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x4002383	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x4002387	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x400238b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x400238f	          0x4889c7	                            mov rdi, rax	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x4002392	      0xe800000000	                          call 0x4002397	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x4002397	        0x488945d8	             mov qword [rbp - 0x28], rax	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x400239b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1877	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_12
0x400239f	          0x4889c7	                            mov rdi, rax	      1877	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_12
0x40023a2	      0xe800000000	                          call 0x40023a7	      1877	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_12
0x40023a7	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1878	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_9
0x40023ac	            0x790a	                           jns 0x40023b8	      1878	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_9
0x40023ae	      0xb800000000	                              mov eax, 0	      1879	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_9
0x40023b3	      0xe9ee010000	                           jmp 0x40025a6	      1879	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_9
0x40023b8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x40023bc	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x40023c2	            0x89c2	                            mov edx, eax	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x40023c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x40023c8	          0x4839c2	                            cmp rdx, rax	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x40023cb	            0x740f	                            je 0x40023dc	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x40023cd	      0xbe59070000	                          mov esi, 0x759	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x40023d2	      0xbf00000000	                              mov edi, 0	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x40023d7	      0xe800000000	                          call 0x40023dc	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x40023dc	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1882	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x40023e0	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      1882	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x40023e6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1882	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x40023ea	             0x1c2	                            add edx, eax	      1882	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x40023ec	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1882	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x40023f0	    0x899088000000	             mov dword [rax + 0x88], edx	      1882	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x40023f6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x40023fa	          0x488b00	                    mov rax, qword [rax]	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x40023fd	        0x488945a0	             mov qword [rbp - 0x60], rax	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4002401	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4002406	     0xf85b5feffff	                           jne 0x40022c1	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x400240c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1885	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002410	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      1885	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002416	            0x85c0	                           test eax, eax	      1885	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002418	            0x7474	                            je 0x400248e	      1885	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x400241a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1889	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x400241e	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      1889	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002424	            0x89c0	                            mov eax, eax	      1889	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002426	        0x488945a8	             mov qword [rbp - 0x58], rax	      1889	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x400242a	      0x48c165a803	               shl qword [rbp - 0x58], 3	      1890	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x400242f	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x4002433	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x400243a	          0x4889d6	                            mov rsi, rdx	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x400243d	          0x4889c7	                            mov rdi, rax	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x4002440	      0xe800000000	                          call 0x4002445	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x4002445	          0x4889c2	                            mov rdx, rax	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x4002448	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x400244c	    0x488990800000	             mov qword [rax + 0x80], rdx	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x4002453	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1892	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	IF_11
0x4002457	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1892	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	IF_11
0x400245e	          0x4885c0	                           test rax, rax	      1892	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	IF_11
0x4002461	            0x750a	                           jne 0x400246d	      1892	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	IF_11
0x4002463	      0xb800000000	                              mov eax, 0	      1893	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	IF_11
0x4002468	      0xe939010000	                           jmp 0x40025a6	      1893	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	IF_11
0x400246d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1894	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002471	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1894	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002474	          0x83c804	                               or eax, 4	      1894	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002477	            0x89c2	                            mov edx, eax	      1894	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002479	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1894	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x400247d	          0x895020	             mov dword [rax + 0x20], edx	      1894	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002480	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1897	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002484	    0xc78088000000	               mov dword [rax + 0x88], 0	      1897	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x400248e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x4002492	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x4002496	        0x48894598	             mov qword [rbp - 0x68], rax	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x400249a	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x400249f	     0xf85fafdffff	                           jne 0x400229f	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x40024a5	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1903	linker.c	FUNCTION_22	FOR_6
0x40024ac	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      1903	linker.c	FUNCTION_22	FOR_6
0x40024b3	        0x48894598	             mov qword [rbp - 0x68], rax	      1903	linker.c	FUNCTION_22	FOR_6
0x40024b7	      0xe9da000000	                           jmp 0x4002596	      1903	linker.c	FUNCTION_22	FOR_6
0x40024bc	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x40024c0	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x40024c7	        0x488945a0	             mov qword [rbp - 0x60], rax	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x40024cb	      0xe9af000000	                           jmp 0x400257f	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x40024d0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x40024d4	          0x8b4008	                mov eax, dword [rax + 8]	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x40024d7	          0x83f801	                              cmp eax, 1	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x40024da	            0x7439	                            je 0x4002515	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x40024dc	          0x83f801	                              cmp eax, 1	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x40024df	            0x7263	                            jb 0x4002544	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x40024e1	          0x83e803	                              sub eax, 3	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x40024e4	          0x83f801	                              cmp eax, 1	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x40024e7	            0x775b	                            ja 0x4002544	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x40024e9	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x40024ed	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x40024f1	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x40024f8	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x40024ff	          0x4889c7	                            mov rdi, rax	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x4002502	      0xe800000000	                          call 0x4002507	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x4002507	            0x85c0	                           test eax, eax	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x4002509	            0x7562	                           jne 0x400256d	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x400250b	      0xb800000000	                              mov eax, 0	      1912	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12
0x4002510	      0xe991000000	                           jmp 0x40025a6	      1912	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12
0x4002515	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x4002519	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x400251d	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x4002524	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x400252b	    0x41b801000000	                              mov r8d, 1	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x4002531	          0x4889c7	                            mov rdi, rax	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x4002534	      0xe8e3110000	    call sym.default_indirect_link_order	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x4002539	            0x85c0	                           test eax, eax	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x400253b	            0x7533	                           jne 0x4002570	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x400253d	      0xb800000000	                              mov eax, 0	      1916	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13
0x4002542	            0xeb62	                           jmp 0x40025a6	      1916	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13
0x4002544	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4002548	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x400254c	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4002553	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x400255a	          0x4889c7	                            mov rdi, rax	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x400255d	      0xe800000000	                          call 0x4002562	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4002562	            0x85c0	                           test eax, eax	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4002564	            0x750d	                           jne 0x4002573	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4002566	      0xb800000000	                              mov eax, 0	      1920	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14
0x400256b	            0xeb39	                           jmp 0x40025a6	      1920	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14
0x400256d	              0x90	                                     nop	      1913	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x400256e	            0xeb04	                           jmp 0x4002574	      1913	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4002570	              0x90	                                     nop	      1917	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4002571	            0xeb01	                           jmp 0x4002574	      1917	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4002573	              0x90	                                     nop	      1921	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4002574	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4002578	          0x488b00	                    mov rax, qword [rax]	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x400257b	        0x488945a0	             mov qword [rbp - 0x60], rax	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x400257f	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4002584	     0xf8546ffffff	                           jne 0x40024d0	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x400258a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1903	linker.c	FUNCTION_22	FOR_6
0x400258e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1903	linker.c	FUNCTION_22	FOR_6
0x4002592	        0x48894598	             mov qword [rbp - 0x68], rax	      1903	linker.c	FUNCTION_22	FOR_6
0x4002596	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      1903	linker.c	FUNCTION_22	FOR_6
0x400259b	     0xf851bffffff	                           jne 0x40024bc	      1903	linker.c	FUNCTION_22	FOR_6
0x40025a1	      0xb801000000	                              mov eax, 1	      1926	linker.c	FUNCTION_22
0x40025a6	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1927	linker.c	FUNCTION_22
0x40025aa	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1927	linker.c	FUNCTION_22
0x40025b3	            0x7405	                            je 0x40025ba	      1927	linker.c	FUNCTION_22
0x40025b5	      0xe800000000	                          call 0x40025ba	      1927	linker.c	FUNCTION_22
0x40025ba	              0xc9	                                   leave	      1927	linker.c	FUNCTION_22
0x40025bb	              0xc3	                                     ret	      1927	linker.c	FUNCTION_22
default_indirect_link_order	functions,0:IF,16:WHILE,0:SWITCH,0:CALL,37:ELSE,3:FOR,1:DO,0	290
0x400371c	              0x55	                                push rbp	      2524	linker.c	FUNCTION_31
0x400371d	          0x4889e5	                            mov rbp, rsp	      2524	linker.c	FUNCTION_31
0x4003720	            0x4154	                                push r12	      2524	linker.c	FUNCTION_31
0x4003722	              0x53	                                push rbx	      2524	linker.c	FUNCTION_31
0x4003723	        0x4883c480	             add rsp, 0xffffffffffffff80	      2524	linker.c	FUNCTION_31
0x4003727	        0x48897d98	             mov qword [rbp - 0x68], rdi	      2524	linker.c	FUNCTION_31
0x400372b	        0x48897590	             mov qword [rbp - 0x70], rsi	      2524	linker.c	FUNCTION_31
0x400372f	        0x48895588	             mov qword [rbp - 0x78], rdx	      2524	linker.c	FUNCTION_31
0x4003733	        0x48894d80	             mov qword [rbp - 0x80], rcx	      2524	linker.c	FUNCTION_31
0x4003737	    0x4489857cffff	             mov dword [rbp - 0x84], r8d	      2524	linker.c	FUNCTION_31
0x400373e	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      2527	linker.c	FUNCTION_31
0x4003746	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2532	linker.c	FUNCTION_31	CALL_1
0x400374a	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2532	linker.c	FUNCTION_31	CALL_1
0x400374d	      0x2500010000	                          and eax, 0x100	      2532	linker.c	FUNCTION_31	CALL_1
0x4003752	            0x85c0	                           test eax, eax	      2532	linker.c	FUNCTION_31	CALL_1
0x4003754	            0x750f	                           jne 0x4003765	      2532	linker.c	FUNCTION_31	CALL_1
0x4003756	      0xbee4090000	                          mov esi, 0x9e4	      2532	linker.c	FUNCTION_31	CALL_1
0x400375b	      0xbf00000000	                              mov edi, 0	      2532	linker.c	FUNCTION_31	CALL_1
0x4003760	      0xe800000000	                          call 0x4003765	      2532	linker.c	FUNCTION_31	CALL_1
0x4003765	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2534	linker.c	FUNCTION_31
0x4003769	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2534	linker.c	FUNCTION_31
0x400376d	        0x488945c0	             mov qword [rbp - 0x40], rax	      2534	linker.c	FUNCTION_31
0x4003771	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2535	linker.c	FUNCTION_31
0x4003775	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      2535	linker.c	FUNCTION_31
0x400377c	        0x488945c8	             mov qword [rbp - 0x38], rax	      2535	linker.c	FUNCTION_31
0x4003780	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2536	linker.c	FUNCTION_31	IF_1
0x4003784	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2536	linker.c	FUNCTION_31	IF_1
0x4003788	          0x4885c0	                           test rax, rax	      2536	linker.c	FUNCTION_31	IF_1
0x400378b	            0x750a	                           jne 0x4003797	      2536	linker.c	FUNCTION_31	IF_1
0x400378d	      0xb801000000	                              mov eax, 1	      2537	linker.c	FUNCTION_31	IF_1
0x4003792	      0xe9ea030000	                           jmp 0x4003b81	      2537	linker.c	FUNCTION_31	IF_1
0x4003797	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2539	linker.c	FUNCTION_31	CALL_2
0x400379b	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2539	linker.c	FUNCTION_31	CALL_2
0x400379f	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      2539	linker.c	FUNCTION_31	CALL_2
0x40037a3	            0x740f	                            je 0x40037b4	      2539	linker.c	FUNCTION_31	CALL_2
0x40037a5	      0xbeeb090000	                          mov esi, 0x9eb	      2539	linker.c	FUNCTION_31	CALL_2
0x40037aa	      0xbf00000000	                              mov edi, 0	      2539	linker.c	FUNCTION_31	CALL_2
0x40037af	      0xe800000000	                          call 0x40037b4	      2539	linker.c	FUNCTION_31	CALL_2
0x40037b4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2540	linker.c	FUNCTION_31	CALL_3
0x40037b8	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      2540	linker.c	FUNCTION_31	CALL_3
0x40037bc	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2540	linker.c	FUNCTION_31	CALL_3
0x40037c0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2540	linker.c	FUNCTION_31	CALL_3
0x40037c4	          0x4839c2	                            cmp rdx, rax	      2540	linker.c	FUNCTION_31	CALL_3
0x40037c7	            0x740f	                            je 0x40037d8	      2540	linker.c	FUNCTION_31	CALL_3
0x40037c9	      0xbeec090000	                          mov esi, 0x9ec	      2540	linker.c	FUNCTION_31	CALL_3
0x40037ce	      0xbf00000000	                              mov edi, 0	      2540	linker.c	FUNCTION_31	CALL_3
0x40037d3	      0xe800000000	                          call 0x40037d8	      2540	linker.c	FUNCTION_31	CALL_3
0x40037d8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2541	linker.c	FUNCTION_31	CALL_4
0x40037dc	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2541	linker.c	FUNCTION_31	CALL_4
0x40037e0	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2541	linker.c	FUNCTION_31	CALL_4
0x40037e4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2541	linker.c	FUNCTION_31	CALL_4
0x40037e8	          0x4839c2	                            cmp rdx, rax	      2541	linker.c	FUNCTION_31	CALL_4
0x40037eb	            0x740f	                            je 0x40037fc	      2541	linker.c	FUNCTION_31	CALL_4
0x40037ed	      0xbeed090000	                          mov esi, 0x9ed	      2541	linker.c	FUNCTION_31	CALL_4
0x40037f2	      0xbf00000000	                              mov edi, 0	      2541	linker.c	FUNCTION_31	CALL_4
0x40037f7	      0xe800000000	                          call 0x40037fc	      2541	linker.c	FUNCTION_31	CALL_4
0x40037fc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2543	linker.c	FUNCTION_31	IF_2	CALL_5
0x4003800	           0xfb600	                   movzx eax, byte [rax]	      2543	linker.c	FUNCTION_31	IF_2	CALL_5
0x4003803	          0x83e003	                              and eax, 3	      2543	linker.c	FUNCTION_31	IF_2	CALL_5
0x4003806	            0x3c02	                               cmp al, 2	      2543	linker.c	FUNCTION_31	IF_2	CALL_5
0x4003808	            0x756a	                           jne 0x4003874	      2543	linker.c	FUNCTION_31	IF_2	CALL_5
0x400380a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2544	linker.c	FUNCTION_31	IF_2
0x400380e	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      2544	linker.c	FUNCTION_31	IF_2
0x4003814	            0x85c0	                           test eax, eax	      2544	linker.c	FUNCTION_31	IF_2
0x4003816	            0x745c	                            je 0x4003874	      2544	linker.c	FUNCTION_31	IF_2
0x4003818	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2545	linker.c	FUNCTION_31	IF_2
0x400381c	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      2545	linker.c	FUNCTION_31	IF_2
0x4003823	          0x4885c0	                           test rax, rax	      2545	linker.c	FUNCTION_31	IF_2
0x4003826	            0x754c	                           jne 0x4003874	      2545	linker.c	FUNCTION_31	IF_2
0x4003828	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2555	linker.c	FUNCTION_31	IF_2	CALL_9
0x400382c	        0x488b4008	                mov rax, qword [rax + 8]	      2555	linker.c	FUNCTION_31	IF_2	CALL_9
0x4003830	          0x4c8b20	                    mov r12, qword [rax]	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4003833	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2555	linker.c	FUNCTION_31	IF_2	CALL_9
0x4003837	        0x488b4008	                mov rax, qword [rax + 8]	      2555	linker.c	FUNCTION_31	IF_2	CALL_9
0x400383b	          0x488b18	                    mov rbx, qword [rax]	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x400383e	      0xbe00000000	                              mov esi, 0	      2554	linker.c	FUNCTION_31	IF_2	CALL_7
0x4003843	      0xbf00000000	                              mov edi, 0	      2554	linker.c	FUNCTION_31	IF_2	CALL_7
0x4003848	      0xe800000000	                          call 0x400384d	      2554	linker.c	FUNCTION_31	IF_2	CALL_7
0x400384d	          0x4c89e2	                            mov rdx, r12	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4003850	          0x4889de	                            mov rsi, rbx	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4003853	          0x4889c7	                            mov rdi, rax	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4003856	      0xb800000000	                              mov eax, 0	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x400385b	      0xe800000000	                          call 0x4003860	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4003860	      0xbf03000000	                              mov edi, 3	      2556	linker.c	FUNCTION_31	IF_2	CALL_10
0x4003865	      0xe800000000	                          call 0x400386a	      2556	linker.c	FUNCTION_31	IF_2	CALL_10
0x400386a	      0xb800000000	                              mov eax, 0	      2557	linker.c	FUNCTION_31	IF_2
0x400386f	      0xe90d030000	                           jmp 0x4003b81	      2557	linker.c	FUNCTION_31	IF_2
0x4003874	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      2560	linker.c	FUNCTION_31	IF_3
0x400387b	     0xf8553010000	                           jne 0x40039d4	      2560	linker.c	FUNCTION_31	IF_3
0x4003881	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2569	linker.c	FUNCTION_31	IF_3	IF_4	CALL_11
0x4003885	          0x4889c7	                            mov rdi, rax	      2569	linker.c	FUNCTION_31	IF_3	IF_4	CALL_11
0x4003888	      0xe800000000	                          call 0x400388d	      2569	linker.c	FUNCTION_31	IF_3	IF_4	CALL_11
0x400388d	            0x85c0	                           test eax, eax	      2569	linker.c	FUNCTION_31	IF_3	IF_4	CALL_11
0x400388f	            0x750a	                           jne 0x400389b	      2569	linker.c	FUNCTION_31	IF_3	IF_4	CALL_11
0x4003891	      0xb800000000	                              mov eax, 0	      2570	linker.c	FUNCTION_31	IF_3	IF_4
0x4003896	      0xe9e6020000	                           jmp 0x4003b81	      2570	linker.c	FUNCTION_31	IF_3	IF_4
0x400389b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2577	linker.c	FUNCTION_31	IF_3	CALL_12
0x400389f	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      2577	linker.c	FUNCTION_31	IF_3	CALL_12
0x40038a6	        0x488945b0	             mov qword [rbp - 0x50], rax	      2577	linker.c	FUNCTION_31	IF_3	CALL_12
0x40038aa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2578	linker.c	FUNCTION_31	IF_3	CALL_13
0x40038ae	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2578	linker.c	FUNCTION_31	IF_3	CALL_13
0x40038b4	            0x89c0	                            mov eax, eax	      2578	linker.c	FUNCTION_31	IF_3	CALL_13
0x40038b6	    0x488d14c50000	                        lea rdx, [rax*8]	      2578	linker.c	FUNCTION_31	IF_3	CALL_13
0x40038be	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2578	linker.c	FUNCTION_31	IF_3	CALL_13
0x40038c2	          0x4801d0	                            add rax, rdx	      2578	linker.c	FUNCTION_31	IF_3	CALL_13
0x40038c5	        0x488945d0	             mov qword [rbp - 0x30], rax	      2578	linker.c	FUNCTION_31	IF_3	CALL_13
0x40038c9	      0xe9f8000000	                           jmp 0x40039c6	      2579	linker.c	FUNCTION_31	IF_3	FOR_1
0x40038ce	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2584	linker.c	FUNCTION_31	IF_3	FOR_1
0x40038d2	          0x488b00	                    mov rax, qword [rax]	      2584	linker.c	FUNCTION_31	IF_3	FOR_1
0x40038d5	        0x488945d8	             mov qword [rbp - 0x28], rax	      2584	linker.c	FUNCTION_31	IF_3	FOR_1
0x40038d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2586	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5
0x40038dd	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2586	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5
0x40038e0	      0x2582380000	                         and eax, 0x3882	      2586	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5
0x40038e5	            0x85c0	                           test eax, eax	      2586	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5
0x40038e7	            0x7538	                           jne 0x4003921	      2586	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5
0x40038e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2591	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_15
0x40038ed	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2591	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_15
0x40038f1	    0x483d00000000	                              cmp rax, 0	      2591	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_15
0x40038f7	            0x7428	                            je 0x4003921	      2591	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_15
0x40038f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2592	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_17
0x40038fd	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2592	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_17
0x4003901	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2592	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_17
0x4003904	      0x2500100000	                         and eax, 0x1000	      2592	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_17
0x4003909	            0x85c0	                           test eax, eax	      2592	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_17
0x400390b	            0x7514	                           jne 0x4003921	      2592	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_17
0x400390d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2593	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_19
0x4003911	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2593	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_19
0x4003915	    0x483d00000000	                              cmp rax, 0	      2593	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_19
0x400391b	     0xf85a0000000	                           jne 0x40039c1	      2593	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_19
0x4003921	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4003925	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4003929	          0x4885c0	                           test rax, rax	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x400392c	            0x740e	                            je 0x400393c	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x400392e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2598	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4003932	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2598	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4003936	        0x488945b8	             mov qword [rbp - 0x48], rax	      2598	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x400393a	            0xeb6b	                           jmp 0x40039a7	      2598	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x400393c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2599	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_21
0x4003940	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2599	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_21
0x4003944	    0x483d00000000	                              cmp rax, 0	      2599	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_21
0x400394a	            0x752f	                           jne 0x400397b	      2599	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_21
0x400394c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4003950	        0x488b5008	                mov rdx, qword [rax + 8]	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4003954	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4003958	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x400395c	    0x41b901000000	                              mov r9d, 1	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4003962	    0x41b800000000	                              mov r8d, 0	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4003968	      0xb900000000	                              mov ecx, 0	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x400396d	          0x4889c7	                            mov rdi, rax	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4003970	      0xe800000000	                          call 0x4003975	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4003975	        0x488945b8	             mov qword [rbp - 0x48], rax	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4003979	            0xeb2c	                           jmp 0x40039a7	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x400397b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x400397f	        0x488b7008	                mov rsi, qword [rax + 8]	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4003983	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4003987	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x400398b	    0x41b801000000	                              mov r8d, 1	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4003991	      0xb900000000	                              mov ecx, 0	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4003996	      0xba00000000	                              mov edx, 0	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x400399b	          0x4889c7	                            mov rdi, rax	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x400399e	      0xe800000000	                          call 0x40039a3	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x40039a3	        0x488945b8	             mov qword [rbp - 0x48], rax	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x40039a7	      0x48837db800	               cmp qword [rbp - 0x48], 0	      2607	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_8
0x40039ac	            0x7413	                            je 0x40039c1	      2607	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_8
0x40039ae	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2608	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_26
0x40039b2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2608	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_26
0x40039b6	          0x4889d6	                            mov rsi, rdx	      2608	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_26
0x40039b9	          0x4889c7	                            mov rdi, rax	      2608	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_26
0x40039bc	      0xe8ddf3ffff	           call sym.set_symbol_from_hash	      2608	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_26
0x40039c1	      0x488345b008	               add qword [rbp - 0x50], 8	      2579	linker.c	FUNCTION_31	IF_3	FOR_1
0x40039c6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2579	linker.c	FUNCTION_31	IF_3	FOR_1
0x40039ca	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2579	linker.c	FUNCTION_31	IF_3	FOR_1
0x40039ce	     0xf82fafeffff	                            jb 0x40038ce	      2579	linker.c	FUNCTION_31	IF_3	FOR_1
0x40039d4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2613	linker.c	FUNCTION_31	IF_9
0x40039d8	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2613	linker.c	FUNCTION_31	IF_9
0x40039db	      0x2500001002	                      and eax, 0x2100000	      2613	linker.c	FUNCTION_31	IF_9
0x40039e0	      0x3d00000002	                      cmp eax, 0x2000000	      2613	linker.c	FUNCTION_31	IF_9
0x40039e5	     0xf8592000000	                           jne 0x4003a7d	      2613	linker.c	FUNCTION_31	IF_9
0x40039eb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2614	linker.c	FUNCTION_31	IF_9
0x40039ef	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2614	linker.c	FUNCTION_31	IF_9
0x40039f3	          0x4885c0	                           test rax, rax	      2614	linker.c	FUNCTION_31	IF_9
0x40039f6	     0xf8481000000	                            je 0x4003a7d	      2614	linker.c	FUNCTION_31	IF_9
0x40039fc	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2617	linker.c	FUNCTION_31	IF_9	IF_10
0x4003a00	         0xfb64047	           movzx eax, byte [rax + 0x47] 	      2617	linker.c	FUNCTION_31	IF_9	IF_10
0x4003a04	          0x83e040	                           and eax, 0x40	      2617	linker.c	FUNCTION_31	IF_9	IF_10
0x4003a07	            0x84c0	                             test al, al	      2617	linker.c	FUNCTION_31	IF_9	IF_10
0x4003a09	            0x7528	                           jne 0x4003a33	      2617	linker.c	FUNCTION_31	IF_9	IF_10
0x4003a0b	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4003a0f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4003a13	    0x41b801000000	                              mov r8d, 1	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4003a19	      0xb900000000	                              mov ecx, 0	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4003a1e	      0xba00000000	                              mov edx, 0	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4003a23	          0x4889c7	                            mov rdi, rax	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4003a26	      0xe800000000	                          call 0x4003a2b	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4003a2b	            0x85c0	                           test eax, eax	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4003a2d	     0xf842c010000	                            je 0x4003b5f	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4003a33	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2623	linker.c	FUNCTION_31	IF_9
0x4003a37	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      2623	linker.c	FUNCTION_31	IF_9
0x4003a3e	        0x488945a8	             mov qword [rbp - 0x58], rax	      2623	linker.c	FUNCTION_31	IF_9
0x4003a42	      0x48837da800	               cmp qword [rbp - 0x58], 0	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4003a47	            0x750f	                           jne 0x4003a58	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4003a49	      0xbe400a0000	                          mov esi, 0xa40	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4003a4e	      0xbf00000000	                              mov edi, 0	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4003a53	      0xe800000000	                          call 0x4003a58	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4003a58	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4003a5c	        0x488b4060	            mov rax, qword [rax + 0x60] 	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4003a60	          0x4885c0	                           test rax, rax	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4003a63	     0xf8497000000	                            je 0x4003b00	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4003a69	      0xbe410a0000	                          mov esi, 0xa41	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4003a6e	      0xbf00000000	                              mov edi, 0	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4003a73	      0xe800000000	                          call 0x4003a78	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4003a78	      0xe983000000	                           jmp 0x4003b00	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4003a7d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2632	linker.c	FUNCTION_31	ELSE_3
0x4003a81	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2632	linker.c	FUNCTION_31	ELSE_3
0x4003a85	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2631	linker.c	FUNCTION_31	ELSE_3
0x4003a89	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2631	linker.c	FUNCTION_31	ELSE_3
0x4003a8d	          0x4839c2	                            cmp rdx, rax	      2630	linker.c	FUNCTION_31	ELSE_3
0x4003a90	        0x480f43c2	                         cmovae rax, rdx	      2630	linker.c	FUNCTION_31	ELSE_3
0x4003a94	        0x488945e0	             mov qword [rbp - 0x20], rax	      2630	linker.c	FUNCTION_31	ELSE_3
0x4003a98	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2633	linker.c	FUNCTION_31	ELSE_3	CALL_30
0x4003a9c	          0x4889c7	                            mov rdi, rax	      2633	linker.c	FUNCTION_31	ELSE_3	CALL_30
0x4003a9f	      0xe800000000	                          call 0x4003aa4	      2633	linker.c	FUNCTION_31	ELSE_3	CALL_30
0x4003aa4	        0x488945a0	             mov qword [rbp - 0x60], rax	      2633	linker.c	FUNCTION_31	ELSE_3	CALL_30
0x4003aa8	      0x48837da000	               cmp qword [rbp - 0x60], 0	      2634	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4003aad	            0x750b	                           jne 0x4003aba	      2634	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4003aaf	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2634	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4003ab4	     0xf85a8000000	                           jne 0x4003b62	      2634	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4003aba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2639	linker.c	FUNCTION_31	ELSE_3	CALL_33
0x4003abe	    0x4c8b80b00000	              mov r8, qword [rax + 0xb0]	      2639	linker.c	FUNCTION_31	ELSE_3	CALL_33
0x4003ac5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2638	linker.c	FUNCTION_31	ELSE_3	CALL_32
0x4003ac9	           0xfb600	                   movzx eax, byte [rax]	      2638	linker.c	FUNCTION_31	ELSE_3	CALL_32
0x4003acc	          0x83e003	                              and eax, 3	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003acf	            0x3c02	                               cmp al, 2	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003ad1	           0xf94c0	                                 sete al	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003ad4	           0xfb6f8	                           movzx edi, al	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003ad7	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003adb	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003adf	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003ae3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003ae7	          0x4d89c1	                              mov r9, r8	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003aea	          0x4189f8	                            mov r8d, edi	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003aed	          0x4889c7	                            mov rdi, rax	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003af0	      0xe800000000	                          call 0x4003af5	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003af5	        0x488945a8	             mov qword [rbp - 0x58], rax	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003af9	      0x48837da800	               cmp qword [rbp - 0x58], 0	      2640	linker.c	FUNCTION_31	ELSE_3	IF_13
0x4003afe	            0x7465	                            je 0x4003b65	      2640	linker.c	FUNCTION_31	ELSE_3	IF_13
0x4003b00	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2645	linker.c	FUNCTION_31	CALL_34
0x4003b04	        0x488b5860	            mov rbx, qword [rax + 0x60] 	      2645	linker.c	FUNCTION_31	CALL_34
0x4003b08	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2645	linker.c	FUNCTION_31	CALL_34
0x4003b0c	          0x4889c7	                            mov rdi, rax	      2645	linker.c	FUNCTION_31	CALL_34
0x4003b0f	      0xe800000000	                          call 0x4003b14	      2645	linker.c	FUNCTION_31	CALL_34
0x4003b14	            0x89c0	                            mov eax, eax	      2645	linker.c	FUNCTION_31	CALL_34
0x4003b16	        0x480fafc3	                           imul rax, rbx	      2645	linker.c	FUNCTION_31	CALL_34
0x4003b1a	        0x488945e8	             mov qword [rbp - 0x18], rax	      2645	linker.c	FUNCTION_31	CALL_34
0x4003b1e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003b22	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003b26	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003b2a	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003b2e	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003b32	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003b36	          0x4989f8	                             mov r8, rdi	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003b39	          0x4889c7	                            mov rdi, rax	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003b3c	      0xe800000000	                          call 0x4003b41	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003b41	            0x85c0	                           test eax, eax	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003b43	            0x7423	                            je 0x4003b68	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003b45	      0x48837da000	               cmp qword [rbp - 0x60], 0	      2650	linker.c	FUNCTION_31	IF_15
0x4003b4a	            0x740c	                            je 0x4003b58	      2650	linker.c	FUNCTION_31	IF_15
0x4003b4c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2651	linker.c	FUNCTION_31	CALL_36
0x4003b50	          0x4889c7	                            mov rdi, rax	      2651	linker.c	FUNCTION_31	CALL_36
0x4003b53	      0xe800000000	                          call 0x4003b58	      2651	linker.c	FUNCTION_31	CALL_36
0x4003b58	      0xb801000000	                              mov eax, 1	      2652	linker.c	FUNCTION_31
0x4003b5d	            0xeb22	                           jmp 0x4003b81	      2652	linker.c	FUNCTION_31
0x4003b5f	              0x90	                                     nop	      2621	linker.c	FUNCTION_31	IF_9	IF_10	IF_11
0x4003b60	            0xeb07	                           jmp 0x4003b69	      2621	linker.c	FUNCTION_31	IF_9	IF_10	IF_11
0x4003b62	              0x90	                                     nop	      2635	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4003b63	            0xeb04	                           jmp 0x4003b69	      2635	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4003b65	              0x90	                                     nop	      2641	linker.c	FUNCTION_31	ELSE_3	IF_13
0x4003b66	            0xeb01	                           jmp 0x4003b69	      2641	linker.c	FUNCTION_31	ELSE_3	IF_13
0x4003b68	              0x90	                                     nop	      2648	linker.c	FUNCTION_31	IF_14
0x4003b69	      0x48837da000	               cmp qword [rbp - 0x60], 0	      2655	linker.c	FUNCTION_31	IF_16
0x4003b6e	            0x740c	                            je 0x4003b7c	      2655	linker.c	FUNCTION_31	IF_16
0x4003b70	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2656	linker.c	FUNCTION_31	CALL_37
0x4003b74	          0x4889c7	                            mov rdi, rax	      2656	linker.c	FUNCTION_31	CALL_37
0x4003b77	      0xe800000000	                          call 0x4003b7c	      2656	linker.c	FUNCTION_31	CALL_37
0x4003b7c	      0xb800000000	                              mov eax, 0	      2657	linker.c	FUNCTION_31
0x4003b81	        0x4883ec80	             sub rsp, 0xffffffffffffff80	      2658	linker.c	FUNCTION_31
0x4003b85	              0x5b	                                 pop rbx	      2658	linker.c	FUNCTION_31
0x4003b86	            0x415c	                                 pop r12	      2658	linker.c	FUNCTION_31
0x4003b88	              0x5d	                                 pop rbp	      2658	linker.c	FUNCTION_31
0x4003b89	              0xc3	                                     ret	      2658	linker.c	FUNCTION_31
bfd_link_add_undef	functions,0:IF,2:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	33
0x4000634	              0x55	                                push rbp	       668	linker.c	FUNCTION_7
0x4000635	          0x4889e5	                            mov rbp, rsp	       668	linker.c	FUNCTION_7
0x4000638	        0x4883ec10	                           sub rsp, 0x10	       668	linker.c	FUNCTION_7
0x400063c	        0x48897df8	                mov qword [rbp - 8], rdi	       668	linker.c	FUNCTION_7
0x4000640	        0x488975f0	             mov qword [rbp - 0x10], rsi	       668	linker.c	FUNCTION_7
0x4000644	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       669	linker.c	FUNCTION_7	CALL_1
0x4000648	        0x488b4020	            mov rax, qword [rax + 0x20] 	       669	linker.c	FUNCTION_7	CALL_1
0x400064c	          0x4885c0	                           test rax, rax	       669	linker.c	FUNCTION_7	CALL_1
0x400064f	            0x740f	                            je 0x4000660	       669	linker.c	FUNCTION_7	CALL_1
0x4000651	      0xbe9d020000	                          mov esi, 0x29d	       669	linker.c	FUNCTION_7	CALL_1
0x4000656	      0xbf00000000	                              mov edi, 0	       669	linker.c	FUNCTION_7	CALL_1
0x400065b	      0xe800000000	                          call 0x4000660	       669	linker.c	FUNCTION_7	CALL_1
0x4000660	        0x488b45f8	                mov rax, qword [rbp - 8]	       670	linker.c	FUNCTION_7	IF_1
0x4000664	        0x488b4030	            mov rax, qword [rax + 0x30] 	       670	linker.c	FUNCTION_7	IF_1
0x4000668	          0x4885c0	                           test rax, rax	       670	linker.c	FUNCTION_7	IF_1
0x400066b	            0x7410	                            je 0x400067d	       670	linker.c	FUNCTION_7	IF_1
0x400066d	        0x488b45f8	                mov rax, qword [rbp - 8]	       671	linker.c	FUNCTION_7	IF_1
0x4000671	        0x488b4030	            mov rax, qword [rax + 0x30] 	       671	linker.c	FUNCTION_7	IF_1
0x4000675	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       671	linker.c	FUNCTION_7	IF_1
0x4000679	        0x48895020	             mov qword [rax + 0x20], rdx	       671	linker.c	FUNCTION_7	IF_1
0x400067d	        0x488b45f8	                mov rax, qword [rbp - 8]	       672	linker.c	FUNCTION_7	IF_2
0x4000681	        0x488b4028	            mov rax, qword [rax + 0x28] 	       672	linker.c	FUNCTION_7	IF_2
0x4000685	          0x4885c0	                           test rax, rax	       672	linker.c	FUNCTION_7	IF_2
0x4000688	            0x750c	                           jne 0x4000696	       672	linker.c	FUNCTION_7	IF_2
0x400068a	        0x488b45f8	                mov rax, qword [rbp - 8]	       673	linker.c	FUNCTION_7	IF_2
0x400068e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       673	linker.c	FUNCTION_7	IF_2
0x4000692	        0x48895028	             mov qword [rax + 0x28], rdx	       673	linker.c	FUNCTION_7	IF_2
0x4000696	        0x488b45f8	                mov rax, qword [rbp - 8]	       674	linker.c	FUNCTION_7
0x400069a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       674	linker.c	FUNCTION_7
0x400069e	        0x48895030	             mov qword [rax + 0x30], rdx	       674	linker.c	FUNCTION_7
0x40006a2	              0x90	                                     nop	       675	linker.c	FUNCTION_7
0x40006a3	              0xc9	                                   leave	       675	linker.c	FUNCTION_7
0x40006a4	              0xc3	                                     ret	       675	linker.c	FUNCTION_7
_bfd_generic_link_add_one_symbol	functions,0:IF,43:WHILE,1:SWITCH,1:CALL,37:ELSE,15:FOR,0:DO,1	824
0x4001449	              0x55	                                push rbp	      1375	linker.c	FUNCTION_21
0x400144a	          0x4889e5	                            mov rbp, rsp	      1375	linker.c	FUNCTION_21
0x400144d	              0x53	                                push rbx	      1375	linker.c	FUNCTION_21
0x400144e	    0x4881ec880000	                           sub rsp, 0x88	      1375	linker.c	FUNCTION_21
0x4001455	        0x48897d98	             mov qword [rbp - 0x68], rdi	      1375	linker.c	FUNCTION_21
0x4001459	        0x48897590	             mov qword [rbp - 0x70], rsi	      1375	linker.c	FUNCTION_21
0x400145d	        0x48895588	             mov qword [rbp - 0x78], rdx	      1375	linker.c	FUNCTION_21
0x4001461	          0x894d84	             mov dword [rbp - 0x7c], ecx	      1375	linker.c	FUNCTION_21
0x4001464	    0x4c898578ffff	              mov qword [rbp - 0x88], r8	      1375	linker.c	FUNCTION_21
0x400146b	    0x4c898d70ffff	              mov qword [rbp - 0x90], r9	      1375	linker.c	FUNCTION_21
0x4001472	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1378	linker.c	FUNCTION_21
0x400147a	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      1381	linker.c	FUNCTION_21	CALL_1
0x4001482	            0x750f	                           jne 0x4001493	      1381	linker.c	FUNCTION_21	CALL_1
0x4001484	      0xbe65050000	                          mov esi, 0x565	      1381	linker.c	FUNCTION_21	CALL_1
0x4001489	      0xbf00000000	                              mov edi, 0	      1381	linker.c	FUNCTION_21	CALL_1
0x400148e	      0xe800000000	                          call 0x4001493	      1381	linker.c	FUNCTION_21	CALL_1
0x4001493	    0x4881bd78ffff	               cmp qword [rbp - 0x88], 0	      1383	linker.c	FUNCTION_21	IF_1	CALL_2
0x400149e	            0x740c	                            je 0x40014ac	      1383	linker.c	FUNCTION_21	IF_1	CALL_2
0x40014a0	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1384	linker.c	FUNCTION_21	IF_1
0x40014a3	      0x2500200000	                         and eax, 0x2000	      1384	linker.c	FUNCTION_21	IF_1
0x40014a8	            0x85c0	                           test eax, eax	      1384	linker.c	FUNCTION_21	IF_1
0x40014aa	            0x7445	                            je 0x40014f1	      1384	linker.c	FUNCTION_21	IF_1
0x40014ac	    0xc745a4050000	               mov dword [rbp - 0x5c], 5	      1386	linker.c	FUNCTION_21	IF_1
0x40014b3	          0x8b5518	            mov edx, dword [rbp + 0x18] 	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40014b6	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40014ba	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40014be	    0x41b900000000	                              mov r9d, 0	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40014c4	          0x4189d0	                            mov r8d, edx	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40014c7	      0xb901000000	                              mov ecx, 1	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40014cc	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40014d0	          0x4889c7	                            mov rdi, rax	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40014d3	      0xe800000000	                          call 0x40014d8	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40014d8	        0x488945c8	             mov qword [rbp - 0x38], rax	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40014dc	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1392	linker.c	FUNCTION_21	IF_1	IF_2
0x40014e1	     0xf8523010000	                           jne 0x400160a	      1392	linker.c	FUNCTION_21	IF_1	IF_2
0x40014e7	      0xb800000000	                              mov eax, 0	      1393	linker.c	FUNCTION_21	IF_1	IF_2
0x40014ec	      0xe9050c0000	                           jmp 0x40020f6	      1393	linker.c	FUNCTION_21	IF_1	IF_2
0x40014f1	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1395	linker.c	FUNCTION_21	ELSE_1	IF_3
0x40014f4	      0x2500100000	                         and eax, 0x1000	      1395	linker.c	FUNCTION_21	ELSE_1	IF_3
0x40014f9	            0x85c0	                           test eax, eax	      1395	linker.c	FUNCTION_21	ELSE_1	IF_3
0x40014fb	            0x740c	                            je 0x4001509	      1395	linker.c	FUNCTION_21	ELSE_1	IF_3
0x40014fd	    0xc745a4060000	               mov dword [rbp - 0x5c], 6	      1396	linker.c	FUNCTION_21	ELSE_1	IF_3
0x4001504	      0xe901010000	                           jmp 0x400160a	      1396	linker.c	FUNCTION_21	ELSE_1	IF_3
0x4001509	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1397	linker.c	FUNCTION_21	ELSE_2	IF_4
0x400150c	      0x2500080000	                          and eax, 0x800	      1397	linker.c	FUNCTION_21	ELSE_2	IF_4
0x4001511	            0x85c0	                           test eax, eax	      1397	linker.c	FUNCTION_21	ELSE_2	IF_4
0x4001513	            0x740c	                            je 0x4001521	      1397	linker.c	FUNCTION_21	ELSE_2	IF_4
0x4001515	    0xc745a4070000	               mov dword [rbp - 0x5c], 7	      1398	linker.c	FUNCTION_21	ELSE_2	IF_4
0x400151c	      0xe9e9000000	                           jmp 0x400160a	      1398	linker.c	FUNCTION_21	ELSE_2	IF_4
0x4001521	    0x4881bd78ffff	               cmp qword [rbp - 0x88], 0	      1399	linker.c	FUNCTION_21	ELSE_3	IF_5	CALL_4
0x400152c	            0x7524	                           jne 0x4001552	      1399	linker.c	FUNCTION_21	ELSE_3	IF_5	CALL_4
0x400152e	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1401	linker.c	FUNCTION_21	ELSE_3	IF_5	IF_6
0x4001531	      0x2580000000	                           and eax, 0x80	      1401	linker.c	FUNCTION_21	ELSE_3	IF_5	IF_6
0x4001536	            0x85c0	                           test eax, eax	      1401	linker.c	FUNCTION_21	ELSE_3	IF_5	IF_6
0x4001538	            0x740c	                            je 0x4001546	      1401	linker.c	FUNCTION_21	ELSE_3	IF_5	IF_6
0x400153a	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	      1402	linker.c	FUNCTION_21	ELSE_3	IF_5	IF_6
0x4001541	      0xe9c4000000	                           jmp 0x400160a	      1402	linker.c	FUNCTION_21	ELSE_3	IF_5	IF_6
0x4001546	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      1404	linker.c	FUNCTION_21	ELSE_3	IF_5	ELSE_4
0x400154d	      0xe9b8000000	                           jmp 0x400160a	      1404	linker.c	FUNCTION_21	ELSE_3	IF_5	ELSE_4
0x4001552	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1406	linker.c	FUNCTION_21	ELSE_5	IF_7
0x4001555	      0x2580000000	                           and eax, 0x80	      1406	linker.c	FUNCTION_21	ELSE_5	IF_7
0x400155a	            0x85c0	                           test eax, eax	      1406	linker.c	FUNCTION_21	ELSE_5	IF_7
0x400155c	            0x740c	                            je 0x400156a	      1406	linker.c	FUNCTION_21	ELSE_5	IF_7
0x400155e	    0xc745a4030000	               mov dword [rbp - 0x5c], 3	      1407	linker.c	FUNCTION_21	ELSE_5	IF_7
0x4001565	      0xe9a0000000	                           jmp 0x400160a	      1407	linker.c	FUNCTION_21	ELSE_5	IF_7
0x400156a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1408	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_5
0x4001571	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1408	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_5
0x4001574	      0x2500100000	                         and eax, 0x1000	      1408	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_5
0x4001579	            0x85c0	                           test eax, eax	      1408	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_5
0x400157b	     0xf8482000000	                            je 0x4001603	      1408	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_5
0x4001581	    0xc745a4040000	               mov dword [rbp - 0x5c], 4	      1410	linker.c	FUNCTION_21	ELSE_6	IF_8
0x4001588	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1411	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_6
0x400158c	           0xfb600	                   movzx eax, byte [rax]	      1411	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_6
0x400158f	          0x83e003	                              and eax, 3	      1411	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_6
0x4001592	            0x3c02	                               cmp al, 2	      1411	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_6
0x4001594	            0x7474	                            je 0x400160a	      1411	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_6
0x4001596	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1412	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x400159a	           0xfb600	                   movzx eax, byte [rax]	      1412	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x400159d	            0x3c5f	                            cmp al, 0x5f	      1412	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x400159f	            0x7569	                           jne 0x400160a	      1412	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x40015a1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1413	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x40015a5	        0x4883c001	                              add rax, 1	      1413	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x40015a9	           0xfb600	                   movzx eax, byte [rax]	      1413	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x40015ac	            0x3c5f	                            cmp al, 0x5f	      1413	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x40015ae	            0x755a	                           jne 0x400160a	      1413	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x40015b0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40015b4	        0x4883c002	                              add rax, 2	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40015b8	           0xfb600	                   movzx eax, byte [rax]	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40015bb	            0x3c5f	                            cmp al, 0x5f	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40015bd	           0xf94c0	                                 sete al	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40015c0	           0xfb6d0	                           movzx edx, al	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40015c3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40015c7	          0x4801d0	                            add rax, rdx	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40015ca	      0xbe00000000	                              mov esi, 0	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40015cf	          0x4889c7	                            mov rdi, rax	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40015d2	      0xe800000000	                          call 0x40015d7	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40015d7	            0x85c0	                           test eax, eax	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40015d9	            0x752f	                           jne 0x400160a	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40015db	      0xbe00000000	                              mov esi, 0	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x40015e0	      0xbf00000000	                              mov edi, 0	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x40015e5	      0xe800000000	                          call 0x40015ea	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x40015ea	          0x4889c2	                            mov rdx, rax	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x40015ed	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x40015f1	          0x4889c6	                            mov rsi, rax	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x40015f4	          0x4889d7	                            mov rdi, rdx	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x40015f7	      0xb800000000	                              mov eax, 0	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x40015fc	      0xe800000000	                          call 0x4001601	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x4001601	            0xeb07	                           jmp 0x400160a	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x4001603	    0xc745a4020000	               mov dword [rbp - 0x5c], 2	      1419	linker.c	FUNCTION_21	ELSE_7
0x400160a	      0x48837d2800	               cmp qword [rbp + 0x28], 0	      1421	linker.c	FUNCTION_21	IF_10
0x400160f	            0x741c	                            je 0x400162d	      1421	linker.c	FUNCTION_21	IF_10
0x4001611	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      1421	linker.c	FUNCTION_21	IF_10
0x4001615	          0x488b00	                    mov rax, qword [rax]	      1421	linker.c	FUNCTION_21	IF_10
0x4001618	          0x4885c0	                           test rax, rax	      1421	linker.c	FUNCTION_21	IF_10
0x400161b	            0x7410	                            je 0x400162d	      1421	linker.c	FUNCTION_21	IF_10
0x400161d	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      1422	linker.c	FUNCTION_21	IF_10
0x4001621	          0x488b00	                    mov rax, qword [rax]	      1422	linker.c	FUNCTION_21	IF_10
0x4001624	        0x488945c0	             mov qword [rbp - 0x40], rax	      1422	linker.c	FUNCTION_21	IF_10
0x4001628	      0xe982000000	                           jmp 0x40016af	      1422	linker.c	FUNCTION_21	IF_10
0x400162d	        0x837da400	               cmp dword [rbp - 0x5c], 0	      1425	linker.c	FUNCTION_21	ELSE_8	IF_11
0x4001631	            0x7406	                            je 0x4001639	      1425	linker.c	FUNCTION_21	ELSE_8	IF_11
0x4001633	        0x837da401	               cmp dword [rbp - 0x5c], 1	      1425	linker.c	FUNCTION_21	ELSE_8	IF_11
0x4001637	            0x752b	                           jne 0x4001664	      1425	linker.c	FUNCTION_21	ELSE_8	IF_11
0x4001639	          0x8b4d18	            mov ecx, dword [rbp + 0x18] 	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x400163c	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001640	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001644	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001648	    0x41b900000000	                              mov r9d, 0	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x400164e	          0x4189c8	                            mov r8d, ecx	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001651	      0xb901000000	                              mov ecx, 1	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001656	          0x4889c7	                            mov rdi, rax	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001659	      0xe800000000	                          call 0x400165e	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x400165e	        0x488945c0	             mov qword [rbp - 0x40], rax	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001662	            0xeb28	                           jmp 0x400168c	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001664	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001668	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x400166c	          0x8b5518	            mov edx, dword [rbp + 0x18] 	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x400166f	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001673	    0x41b800000000	                              mov r8d, 0	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001679	            0x89d1	                            mov ecx, edx	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x400167b	      0xba01000000	                              mov edx, 1	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001680	          0x4889c7	                            mov rdi, rax	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001683	      0xe800000000	                          call 0x4001688	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001688	        0x488945c0	             mov qword [rbp - 0x40], rax	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x400168c	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1429	linker.c	FUNCTION_21	ELSE_8	IF_12
0x4001691	            0x751c	                           jne 0x40016af	      1429	linker.c	FUNCTION_21	ELSE_8	IF_12
0x4001693	      0x48837d2800	               cmp qword [rbp + 0x28], 0	      1431	linker.c	FUNCTION_21	ELSE_8	IF_12	IF_13
0x4001698	            0x740b	                            je 0x40016a5	      1431	linker.c	FUNCTION_21	ELSE_8	IF_12	IF_13
0x400169a	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      1432	linker.c	FUNCTION_21	ELSE_8	IF_12	IF_13
0x400169e	    0x48c700000000	                      mov qword [rax], 0	      1432	linker.c	FUNCTION_21	ELSE_8	IF_12	IF_13
0x40016a5	      0xb800000000	                              mov eax, 0	      1433	linker.c	FUNCTION_21	ELSE_8	IF_12
0x40016aa	      0xe9470a0000	                           jmp 0x40020f6	      1433	linker.c	FUNCTION_21	ELSE_8	IF_12
0x40016af	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1437	linker.c	FUNCTION_21	IF_14
0x40016b3	         0xfb64001	               movzx eax, byte [rax + 1]	      1437	linker.c	FUNCTION_21	IF_14
0x40016b7	          0x83e001	                              and eax, 1	      1437	linker.c	FUNCTION_21	IF_14
0x40016ba	            0x84c0	                             test al, al	      1437	linker.c	FUNCTION_21	IF_14
0x40016bc	            0x7530	                           jne 0x40016ee	      1437	linker.c	FUNCTION_21	IF_14
0x40016be	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1438	linker.c	FUNCTION_21	IF_14
0x40016c2	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1438	linker.c	FUNCTION_21	IF_14
0x40016c6	          0x4885c0	                           test rax, rax	      1438	linker.c	FUNCTION_21	IF_14
0x40016c9	            0x746e	                            je 0x4001739	      1438	linker.c	FUNCTION_21	IF_14
0x40016cb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x40016cf	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x40016d3	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x40016d7	      0xb900000000	                              mov ecx, 0	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x40016dc	      0xba00000000	                              mov edx, 0	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x40016e1	          0x4889c7	                            mov rdi, rax	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x40016e4	      0xe800000000	                          call 0x40016e9	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x40016e9	          0x4885c0	                           test rax, rax	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x40016ec	            0x744b	                            je 0x4001739	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x40016ee	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40016f2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40016f6	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40016fa	    0x4c8b8d70ffff	              mov r9, qword [rbp - 0x90]	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001701	    0x4c8b9578ffff	             mov r10, qword [rbp - 0x88]	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001708	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x400170c	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001710	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001714	        0x488b7d98	             mov rdi, qword [rbp - 0x68]	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001718	        0x4883ec08	                              sub rsp, 8	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x400171c	        0x448b4584	             mov r8d, dword [rbp - 0x7c]	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001720	            0x4150	                                 push r8	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001722	          0x4d89d0	                             mov r8, r10	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001725	            0xffd0	                                call rax	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001727	        0x4883c410	                           add rsp, 0x10	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x400172b	            0x85c0	                           test eax, eax	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x400172d	            0x750a	                           jne 0x4001739	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x400172f	      0xb800000000	                              mov eax, 0	      1443	linker.c	FUNCTION_21	IF_14	IF_15
0x4001734	      0xe9bd090000	                           jmp 0x40020f6	      1443	linker.c	FUNCTION_21	IF_14	IF_15
0x4001739	      0x48837d2800	               cmp qword [rbp + 0x28], 0	      1446	linker.c	FUNCTION_21	IF_16
0x400173e	            0x740b	                            je 0x400174b	      1446	linker.c	FUNCTION_21	IF_16
0x4001740	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      1447	linker.c	FUNCTION_21	IF_16
0x4001744	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1447	linker.c	FUNCTION_21	IF_16
0x4001748	          0x488910	                    mov qword [rax], rdx	      1447	linker.c	FUNCTION_21	IF_16
0x400174b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1454	linker.c	FUNCTION_21	DO_1
0x400174f	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1454	linker.c	FUNCTION_21	DO_1
0x4001753	           0xfb6c0	                           movzx eax, al	      1454	linker.c	FUNCTION_21	DO_1
0x4001756	          0x8945ac	             mov dword [rbp - 0x54], eax	      1454	linker.c	FUNCTION_21	DO_1
0x4001759	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1456	linker.c	FUNCTION_21	DO_1	IF_17
0x400175d	         0xfb64019	           movzx eax, byte [rax + 0x19] 	      1456	linker.c	FUNCTION_21	DO_1	IF_17
0x4001761	          0x83e008	                              and eax, 8	      1456	linker.c	FUNCTION_21	DO_1	IF_17
0x4001764	            0x84c0	                             test al, al	      1456	linker.c	FUNCTION_21	DO_1	IF_17
0x4001766	            0x7407	                            je 0x400176f	      1456	linker.c	FUNCTION_21	DO_1	IF_17
0x4001768	    0xc745ac010000	               mov dword [rbp - 0x54], 1	      1457	linker.c	FUNCTION_21	DO_1	IF_17
0x400176f	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      1458	linker.c	FUNCTION_21	DO_1
0x4001776	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	      1459	linker.c	FUNCTION_21	DO_1
0x4001779	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1459	linker.c	FUNCTION_21	DO_1
0x400177c	            0x4898	                                    cdqe	      1459	linker.c	FUNCTION_21	DO_1
0x400177e	          0x4863d2	                         movsxd rdx, edx	      1459	linker.c	FUNCTION_21	DO_1
0x4001781	        0x48c1e203	                              shl rdx, 3	      1459	linker.c	FUNCTION_21	DO_1
0x4001785	          0x4801d0	                            add rax, rdx	      1459	linker.c	FUNCTION_21	DO_1
0x4001788	    0x8b0485000000	                  mov eax, dword [rax*4]	      1459	linker.c	FUNCTION_21	DO_1
0x400178f	          0x8945b8	             mov dword [rbp - 0x48], eax	      1459	linker.c	FUNCTION_21	DO_1
0x4001792	        0x837db814	           cmp dword [rbp - 0x48], 0x14 	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001796	     0xf874b090000	                            ja 0x40020e7	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400179c	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400179f	    0x488b04c50000	                  mov rax, qword [rax*8]	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017a7	            0xffe0	                                 jmp rax	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017a9	      0xba00000000	                              mov edx, 0	      1463	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_13
0x40017ae	      0xbeb7050000	                          mov esi, 0x5b7	      1463	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_13
0x40017b3	      0xbf00000000	                              mov edi, 0	      1463	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_13
0x40017b8	      0xe800000000	                          call 0x40017bd	      1463	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_13
0x40017bd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1471	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017c1	        0xc6401801	                mov byte [rax + 0x18], 1	      1471	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017c5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1472	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017c9	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1472	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017cd	        0x48895028	             mov qword [rax + 0x28], rdx	      1472	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017d1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1473	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_14
0x40017d5	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1473	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_14
0x40017d9	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1473	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_14
0x40017dd	          0x4889d6	                            mov rsi, rdx	      1473	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_14
0x40017e0	          0x4889c7	                            mov rdi, rax	      1473	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_14
0x40017e3	      0xe800000000	                          call 0x40017e8	      1473	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_14
0x40017e8	      0xe9fa080000	                           jmp 0x40020e7	      1474	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017ed	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1478	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017f1	        0xc6401802	                mov byte [rax + 0x18], 2	      1478	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017f5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1479	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017f9	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1479	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017fd	        0x48895028	             mov qword [rax + 0x28], rdx	      1479	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001801	      0xe9e1080000	                           jmp 0x40020e7	      1480	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001806	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x400180a	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x400180e	            0x3c05	                               cmp al, 5	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x4001810	            0x740f	                            je 0x4001821	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x4001812	      0xbecd050000	                          mov esi, 0x5cd	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x4001817	      0xbf00000000	                              mov edi, 0	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x400181c	      0xe800000000	                          call 0x4001821	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x4001821	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001825	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001829	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400182d	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001831	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001835	        0x488b7d98	             mov rdi, qword [rbp - 0x68]	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001839	    0x41b800000000	                              mov r8d, 0	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400183f	      0xb903000000	                              mov ecx, 3	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001844	            0xffd0	                                call rax	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001846	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1495	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400184a	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1495	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400184e	           0xfb6c0	                           movzx eax, al	      1495	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001851	          0x8945bc	             mov dword [rbp - 0x44], eax	      1495	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001854	        0x837db804	               cmp dword [rbp - 0x48], 4	      1496	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_18
0x4001858	            0x750a	                           jne 0x4001864	      1496	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_18
0x400185a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1497	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_18
0x400185e	        0xc6401804	                mov byte [rax + 0x18], 4	      1497	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_18
0x4001862	            0xeb08	                           jmp 0x400186c	      1497	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_18
0x4001864	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1499	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x4001868	        0xc6401803	                mov byte [rax + 0x18], 3	      1499	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x400186c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1500	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x4001870	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      1500	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x4001877	        0x48895028	             mov qword [rax + 0x28], rdx	      1500	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x400187b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1501	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x400187f	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      1501	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x4001886	        0x48895030	             mov qword [rax + 0x30], rdx	      1501	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x400188a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1502	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x400188e	         0xfb65019	           movzx edx, byte [rax + 0x19] 	      1502	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x4001892	          0x83e2fb	                     and edx, 0xfffffffb	      1502	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x4001895	          0x885019	               mov byte [rax + 0x19], dl	      1502	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x4001898	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1503	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x400189c	         0xfb65019	           movzx edx, byte [rax + 0x19] 	      1503	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x40018a0	          0x83e2f7	                     and edx, 0xfffffff7	      1503	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x40018a3	          0x885019	               mov byte [rax + 0x19], dl	      1503	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x40018a6	        0x837d2000	               cmp dword [rbp + 0x20], 0	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40018aa	     0xf842a080000	                            je 0x40020da	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40018b0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40018b4	           0xfb600	                   movzx eax, byte [rax]	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40018b7	            0x3c5f	                            cmp al, 0x5f	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40018b9	     0xf851b080000	                           jne 0x40020da	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40018bf	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1524	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40018c3	        0x4883c001	                              add rax, 1	      1524	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40018c7	        0x488945d0	             mov qword [rbp - 0x30], rax	      1524	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40018cb	            0xeb05	                           jmp 0x40018d2	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40018cd	      0x488345d001	               add qword [rbp - 0x30], 1	      1526	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40018d2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40018d6	           0xfb600	                   movzx eax, byte [rax]	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40018d9	            0x3c5f	                            cmp al, 0x5f	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40018db	            0x74f0	                            je 0x40018cd	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40018dd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40018e1	           0xfb600	                   movzx eax, byte [rax]	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40018e4	            0x3c47	                            cmp al, 0x47	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40018e6	     0xf85ee070000	                           jne 0x40020da	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40018ec	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40018f0	      0xba07000000	                              mov edx, 7	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40018f5	      0xbe00000000	                              mov esi, 0	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40018fa	          0x4889c7	                            mov rdi, rax	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40018fd	      0xe800000000	                          call 0x4001902	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x4001902	            0x85c0	                           test eax, eax	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x4001904	     0xf85d0070000	                           jne 0x40020da	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x400190a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1531	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20
0x400190e	         0xfb64008	               movzx eax, byte [rax + 8]	      1531	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20
0x4001912	          0x8845a3	               mov byte [rbp - 0x5d], al	      1531	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20
0x4001915	        0x807da349	            cmp byte [rbp - 0x5d], 0x49 	      1532	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001919	            0x740a	                            je 0x4001925	      1532	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x400191b	        0x807da344	            cmp byte [rbp - 0x5d], 0x44 	      1532	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x400191f	     0xf85b5070000	                           jne 0x40020da	      1532	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001925	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1533	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001929	        0x4883c007	                              add rax, 7	      1533	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x400192d	           0xfb610	                   movzx edx, byte [rax]	      1533	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001930	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1533	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001934	        0x4883c009	                              add rax, 9	      1533	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001938	           0xfb600	                   movzx eax, byte [rax]	      1533	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x400193b	            0x38c2	                              cmp dl, al	      1533	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x400193d	     0xf8597070000	                           jne 0x40020da	      1533	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001943	        0x837dbc04	               cmp dword [rbp - 0x44], 4	      1542	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	IF_22
0x4001947	            0x7514	                           jne 0x400195d	      1542	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	IF_22
0x4001949	      0xba00000000	                              mov edx, 0	      1543	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	CALL_17
0x400194e	      0xbe07060000	                          mov esi, 0x607	      1543	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	CALL_17
0x4001953	      0xbf00000000	                              mov edi, 0	      1543	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	CALL_17
0x4001958	      0xe800000000	                          call 0x400195d	      1543	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	CALL_17
0x400195d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001961	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001965	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001969	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x400196d	        0x488b5208	                mov rdx, qword [rdx + 8]	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001971	        0x807da349	            cmp byte [rbp - 0x5d], 0x49 	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001975	           0xf94c1	                                 sete cl	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001978	           0xfb6f1	                           movzx esi, cl	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x400197b	    0x4c8b8d70ffff	              mov r9, qword [rbp - 0x90]	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001982	    0x4c8b8578ffff	              mov r8, qword [rbp - 0x88]	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001989	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x400198d	        0x488b7d98	             mov rdi, qword [rbp - 0x68]	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001991	            0xffd0	                                call rax	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001993	      0xe942070000	                           jmp 0x40020da	      1553	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001998	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1557	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_23
0x400199c	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1557	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_23
0x40019a0	            0x84c0	                             test al, al	      1557	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_23
0x40019a2	            0x7517	                           jne 0x40019bb	      1557	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_23
0x40019a4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1558	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_18
0x40019a8	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1558	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_18
0x40019ac	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1558	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_18
0x40019b0	          0x4889d6	                            mov rsi, rdx	      1558	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_18
0x40019b3	          0x4889c7	                            mov rdi, rax	      1558	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_18
0x40019b6	      0xe800000000	                          call 0x40019bb	      1558	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_18
0x40019bb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1559	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019bf	        0xc6401805	                mov byte [rax + 0x18], 5	      1559	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019c3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1561	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_19
0x40019c7	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1561	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_19
0x40019cb	      0xbe10000000	                           mov esi, 0x10	      1561	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_19
0x40019d0	          0x4889c7	                            mov rdi, rax	      1561	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_19
0x40019d3	      0xe800000000	                          call 0x40019d8	      1561	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_19
0x40019d8	          0x4889c2	                            mov rdx, rax	      1561	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_19
0x40019db	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1560	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019df	        0x48895028	             mov qword [rax + 0x28], rdx	      1560	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019e3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1563	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_24
0x40019e7	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1563	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_24
0x40019eb	          0x4885c0	                           test rax, rax	      1563	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_24
0x40019ee	            0x750a	                           jne 0x40019fa	      1563	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_24
0x40019f0	      0xb800000000	                              mov eax, 0	      1564	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_24
0x40019f5	      0xe9fc060000	                           jmp 0x40020f6	      1564	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_24
0x40019fa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1566	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019fe	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      1566	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001a05	        0x48895030	             mov qword [rax + 0x30], rdx	      1566	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001a09	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1573	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_20
0x4001a10	          0x4889c7	                            mov rdi, rax	      1573	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_20
0x4001a13	      0xe800000000	                          call 0x4001a18	      1573	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_20
0x4001a18	          0x8945b0	             mov dword [rbp - 0x50], eax	      1573	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_20
0x4001a1b	        0x837db004	               cmp dword [rbp - 0x50], 4	      1574	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_25
0x4001a1f	            0x7607	                           jbe 0x4001a28	      1574	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_25
0x4001a21	    0xc745b0040000	               mov dword [rbp - 0x50], 4	      1575	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_25
0x4001a28	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001a2c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001a30	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001a33	            0x8910	                    mov dword [rax], edx	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001a35	    0x4881bd78ffff	               cmp qword [rbp - 0x88], 0	      1589	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x4001a40	            0x7540	                           jne 0x4001a82	      1589	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x4001a42	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1591	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26	CALL_21
0x4001a46	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1591	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26	CALL_21
0x4001a4a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1591	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26	CALL_21
0x4001a4e	      0xbe00000000	                              mov esi, 0	      1591	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26	CALL_21
0x4001a53	          0x4889c7	                            mov rdi, rax	      1591	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26	CALL_21
0x4001a56	      0xe800000000	                          call 0x4001a5b	      1591	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26	CALL_21
0x4001a5b	        0x48894308	                mov qword [rbx + 8], rax	      1591	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26	CALL_21
0x4001a5f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1592	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x4001a63	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1592	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x4001a67	        0x488b4008	                mov rax, qword [rax + 8]	      1592	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x4001a6b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1592	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x4001a6f	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      1592	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x4001a73	        0x488b5208	                mov rdx, qword [rdx + 8]	      1592	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x4001a77	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      1592	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x4001a7a	          0x83ca01	                               or edx, 1	      1592	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x4001a7d	          0x895020	             mov dword [rax + 0x20], edx	      1592	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x4001a80	            0xeb6f	                           jmp 0x4001af1	      1592	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x4001a82	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1594	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x4001a89	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      1594	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x4001a90	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      1594	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x4001a94	            0x7448	                            je 0x4001ade	      1594	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x4001a96	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x4001a9a	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x4001a9e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x4001aa5	          0x488b10	                    mov rdx, qword [rax]	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x4001aa8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x4001aac	          0x4889d6	                            mov rsi, rdx	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x4001aaf	          0x4889c7	                            mov rdi, rax	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x4001ab2	      0xe800000000	                          call 0x4001ab7	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x4001ab7	        0x48894308	                mov qword [rbx + 8], rax	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x4001abb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x4001abf	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x4001ac3	        0x488b4008	                mov rax, qword [rax + 8]	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x4001ac7	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x4001acb	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x4001acf	        0x488b5208	                mov rdx, qword [rdx + 8]	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x4001ad3	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x4001ad6	          0x83ca01	                               or edx, 1	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x4001ad9	          0x895020	             mov dword [rax + 0x20], edx	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x4001adc	            0xeb13	                           jmp 0x4001af1	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x4001ade	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1601	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_12
0x4001ae2	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1601	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_12
0x4001ae6	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      1601	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_12
0x4001aed	        0x48895008	                mov qword [rax + 8], rdx	      1601	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_12
0x4001af1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1602	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001af5	         0xfb65019	           movzx edx, byte [rax + 0x19] 	      1602	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001af9	          0x83e2fb	                     and edx, 0xfffffffb	      1602	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001afc	          0x885019	               mov byte [rax + 0x19], dl	      1602	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001aff	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1603	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001b03	         0xfb65019	           movzx edx, byte [rax + 0x19] 	      1603	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001b07	          0x83e2f7	                     and edx, 0xfffffff7	      1603	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001b0a	          0x885019	               mov byte [rax + 0x19], dl	      1603	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001b0d	      0xe9d5050000	                           jmp 0x40020e7	      1604	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001b12	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001b16	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001b1a	          0x4885c0	                           test rax, rax	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001b1d	     0xf85ba050000	                           jne 0x40020dd	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001b23	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001b27	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001b2b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001b2f	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001b33	     0xf84a4050000	                            je 0x40020dd	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001b39	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1609	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001b3d	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1609	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001b41	        0x48895020	             mov qword [rax + 0x20], rdx	      1609	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001b45	      0xe993050000	                           jmp 0x40020dd	      1610	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001b4a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x4001b4e	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x4001b52	            0x3c05	                               cmp al, 5	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x4001b54	            0x740f	                            je 0x4001b65	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x4001b56	      0xbe50060000	                          mov esi, 0x650	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x4001b5b	      0xbf00000000	                              mov edi, 0	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x4001b60	      0xe800000000	                          call 0x4001b65	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x4001b65	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001b69	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001b6d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001b71	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001b78	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001b7c	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001b80	        0x488b7d98	             mov rdi, qword [rbp - 0x68]	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001b84	          0x4989c8	                             mov r8, rcx	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001b87	      0xb905000000	                              mov ecx, 5	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001b8c	            0xffd0	                                call rax	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001b8e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1619	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001b92	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1619	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001b96	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	      1619	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001b9d	     0xf833d050000	                           jae 0x40020e0	      1619	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001ba3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1623	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001ba7	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      1623	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001bae	        0x48895030	             mov qword [rax + 0x30], rdx	      1623	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001bb2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1627	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	CALL_24
0x4001bb9	          0x4889c7	                            mov rdi, rax	      1627	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	CALL_24
0x4001bbc	      0xe800000000	                          call 0x4001bc1	      1627	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	CALL_24
0x4001bc1	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1627	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	CALL_24
0x4001bc4	        0x837db404	               cmp dword [rbp - 0x4c], 4	      1628	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_30
0x4001bc8	            0x7607	                           jbe 0x4001bd1	      1628	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_30
0x4001bca	    0xc745b4040000	               mov dword [rbp - 0x4c], 4	      1629	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_30
0x4001bd1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001bd5	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001bd9	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001bdc	            0x8910	                    mov dword [rax], edx	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001bde	    0x4881bd78ffff	               cmp qword [rbp - 0x88], 0	      1636	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001be9	            0x7543	                           jne 0x4001c2e	      1636	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001beb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1638	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001bef	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1638	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001bf3	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1639	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31	CALL_25
0x4001bf7	      0xbe00000000	                              mov esi, 0	      1639	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31	CALL_25
0x4001bfc	          0x4889c7	                            mov rdi, rax	      1639	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31	CALL_25
0x4001bff	      0xe800000000	                          call 0x4001c04	      1639	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31	CALL_25
0x4001c04	        0x48894308	                mov qword [rbx + 8], rax	      1639	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31	CALL_25
0x4001c08	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1640	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001c0c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1640	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001c10	        0x488b4008	                mov rax, qword [rax + 8]	      1640	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001c14	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1640	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001c18	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      1640	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001c1c	        0x488b5208	                mov rdx, qword [rdx + 8]	      1640	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001c20	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      1640	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001c23	          0x83ca01	                               or edx, 1	      1640	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001c26	          0x895020	             mov dword [rax + 0x20], edx	      1640	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001c29	      0xe9b2040000	                           jmp 0x40020e0	      1651	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001c2e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1642	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001c35	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      1642	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001c3c	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      1642	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001c40	            0x744b	                            je 0x4001c8d	      1642	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001c42	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1644	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001c46	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1644	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001c4a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x4001c51	          0x488b10	                    mov rdx, qword [rax]	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x4001c54	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x4001c58	          0x4889d6	                            mov rsi, rdx	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x4001c5b	          0x4889c7	                            mov rdi, rax	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x4001c5e	      0xe800000000	                          call 0x4001c63	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x4001c63	        0x48894308	                mov qword [rbx + 8], rax	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x4001c67	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001c6b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001c6f	        0x488b4008	                mov rax, qword [rax + 8]	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001c73	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001c77	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001c7b	        0x488b5208	                mov rdx, qword [rdx + 8]	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001c7f	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001c82	          0x83ca01	                               or edx, 1	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001c85	          0x895020	             mov dword [rax + 0x20], edx	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001c88	      0xe953040000	                           jmp 0x40020e0	      1651	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001c8d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1649	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_14
0x4001c91	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1649	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_14
0x4001c95	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      1649	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_14
0x4001c9c	        0x48895008	                mov qword [rax + 8], rdx	      1649	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_14
0x4001ca0	      0xe93b040000	                           jmp 0x40020e0	      1651	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001ca5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001ca9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001cad	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001cb1	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001cb8	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001cbc	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001cc0	        0x488b7d98	             mov rdi, qword [rbp - 0x68]	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001cc4	          0x4989c8	                             mov r8, rcx	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001cc7	      0xb905000000	                              mov ecx, 5	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001ccc	            0xffd0	                                call rax	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001cce	      0xe914040000	                           jmp 0x40020e7	      1658	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001cd3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x4001cd7	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x4001cdb	        0x488b4008	                mov rax, qword [rax + 8]	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x4001cdf	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x4001ce3	          0x4889c7	                            mov rdi, rax	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x4001ce6	      0xe800000000	                          call 0x4001ceb	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x4001ceb	            0x85c0	                           test eax, eax	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x4001ced	     0xf84f0030000	                            je 0x40020e3	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x4001cf3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001cf7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001cfb	        0x488b4008	                mov rax, qword [rax + 8]	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001cff	    0x4c8b8570ffff	              mov r8, qword [rbp - 0x90]	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001d06	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001d0d	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001d11	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001d15	        0x488b7d98	             mov rdi, qword [rbp - 0x68]	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001d19	            0xffd0	                                call rax	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001d1b	      0xe9c7030000	                           jmp 0x40020e7	      1670	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001d20	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001d24	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001d28	            0x3c05	                               cmp al, 5	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001d2a	            0x740f	                            je 0x4001d3b	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001d2c	      0xbe8a060000	                          mov esi, 0x68a	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001d31	      0xbf00000000	                              mov edi, 0	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001d36	      0xe800000000	                          call 0x4001d3b	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001d3b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001d3f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001d43	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001d47	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001d4b	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001d4f	        0x488b7d98	             mov rdi, qword [rbp - 0x68]	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001d53	    0x41b800000000	                              mov r8d, 0	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001d59	      0xb906000000	                              mov ecx, 6	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001d5e	            0xffd0	                                call rax	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001d60	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1679	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001d64	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1679	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001d68	            0x3c06	                               cmp al, 6	      1679	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001d6a	            0x754d	                           jne 0x4001db9	      1679	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001d6c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1680	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001d70	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1680	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001d74	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1680	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001d78	            0x753f	                           jne 0x4001db9	      1680	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001d7a	      0xbe00000000	                              mov esi, 0	      1684	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_30
0x4001d7f	      0xbf00000000	                              mov edi, 0	      1684	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_30
0x4001d84	      0xe800000000	                          call 0x4001d89	      1684	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_30
0x4001d89	          0x4889c7	                            mov rdi, rax	      1684	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_30
0x4001d8c	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001d90	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001d94	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001d98	          0x4889c6	                            mov rsi, rax	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001d9b	      0xb800000000	                              mov eax, 0	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001da0	      0xe800000000	                          call 0x4001da5	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001da5	      0xbf05000000	                              mov edi, 5	      1686	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_31
0x4001daa	      0xe800000000	                          call 0x4001daf	      1686	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_31
0x4001daf	      0xb800000000	                              mov eax, 0	      1687	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001db4	      0xe93d030000	                           jmp 0x40020f6	      1687	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001db9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1689	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x4001dbd	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1689	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x4001dc1	            0x84c0	                             test al, al	      1689	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x4001dc3	            0x752b	                           jne 0x4001df0	      1689	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x4001dc5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1691	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x4001dc9	        0xc6401801	                mov byte [rax + 0x18], 1	      1691	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x4001dcd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1692	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x4001dd1	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1692	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x4001dd5	        0x48895028	             mov qword [rax + 0x28], rdx	      1692	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x4001dd9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1693	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35	CALL_32
0x4001ddd	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1693	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35	CALL_32
0x4001de1	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1693	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35	CALL_32
0x4001de5	          0x4889d6	                            mov rsi, rdx	      1693	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35	CALL_32
0x4001de8	          0x4889c7	                            mov rdi, rax	      1693	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35	CALL_32
0x4001deb	      0xe800000000	                          call 0x4001df0	      1693	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35	CALL_32
0x4001df0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1698	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_36
0x4001df4	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1698	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_36
0x4001df8	            0x84c0	                             test al, al	      1698	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_36
0x4001dfa	            0x740e	                            je 0x4001e0a	      1698	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_36
0x4001dfc	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      1702	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_36
0x4001e03	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      1703	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_36
0x4001e0a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1706	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e0e	        0xc6401806	                mov byte [rax + 0x18], 6	      1706	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e12	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e16	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e1a	        0x48895028	             mov qword [rax + 0x28], rdx	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e1e	      0xe9c4020000	                           jmp 0x40020e7	      1714	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e23	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e27	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e2b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e2f	    0x4c8b8570ffff	              mov r8, qword [rbp - 0x90]	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e36	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e3d	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e41	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e45	        0x488b7d98	             mov rdi, qword [rbp - 0x68]	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e49	          0x4d89c1	                              mov r9, r8	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e4c	          0x4989c8	                             mov r8, rcx	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e4f	          0x4889d1	                            mov rcx, rdx	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e52	      0xba2b020000	                          mov edx, 0x22b	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e57	            0xffd0	                                call rax	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e59	      0xe989020000	                           jmp 0x40020e7	      1720	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001e5e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1725	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e62	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1725	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e66	          0x4885c0	                           test rax, rax	      1725	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e69	            0x7456	                            je 0x4001ec1	      1725	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e6b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1726	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e6f	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1726	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e72	          0xc1e805	                              shr eax, 5	      1726	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e75	      0x25ffff0f00	                        and eax, 0xfffff	      1726	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e7a	      0x2500000100	                        and eax, 0x10000	      1726	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e7f	            0x85c0	                           test eax, eax	      1726	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e81	            0x753e	                           jne 0x4001ec1	      1726	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e83	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e87	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e8b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e8f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e93	        0x488b5208	                mov rdx, qword [rdx + 8]	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e97	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e9b	        0x488b7130	            mov rsi, qword [rcx + 0x30] 	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001e9f	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001ea3	        0x488b7d98	             mov rdi, qword [rbp - 0x68]	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001ea7	    0x41b900000000	                              mov r9d, 0	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001ead	    0x41b800000000	                              mov r8d, 0	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001eb3	            0xffd0	                                call rax	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001eb5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1731	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001eb9	    0x48c740300000	               mov qword [rax + 0x30], 0	      1731	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001ec1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1736	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001ec5	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1736	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001ec9	        0x488945c0	             mov qword [rbp - 0x40], rax	      1736	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001ecd	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      1737	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001ed4	      0xe90e020000	                           jmp 0x40020e7	      1738	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001ed9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001edd	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001ee1	          0x4885c0	                           test rax, rax	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001ee4	            0x751e	                           jne 0x4001f04	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001ee6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001eea	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001eee	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001ef2	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001ef6	            0x740c	                            je 0x4001f04	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001ef8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1743	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001efc	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1743	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001f00	        0x48895020	             mov qword [rax + 0x20], rdx	      1743	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001f04	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1744	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001f08	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1744	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001f0c	        0x488945c0	             mov qword [rbp - 0x40], rax	      1744	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001f10	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      1745	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001f17	      0xe9cb010000	                           jmp 0x40020e7	      1746	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001f1c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1751	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f20	         0xfb64001	               movzx eax, byte [rax + 1]	      1751	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f24	          0x83e002	                              and eax, 2	      1751	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f27	            0x84c0	                             test al, al	      1751	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f29	            0x751f	                           jne 0x4001f4a	      1751	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f2b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f2f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f33	          0x4885c0	                           test rax, rax	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f36	            0x7530	                           jne 0x4001f68	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f38	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f3c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f40	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f44	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f48	            0x741e	                            je 0x4001f68	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f4a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1753	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f4e	         0xfb64019	           movzx eax, byte [rax + 0x19] 	      1753	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f52	          0x83e001	                              and eax, 1	      1753	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f55	            0x84c0	                             test al, al	      1753	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f57	            0x750f	                           jne 0x4001f68	      1753	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f59	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1754	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f5d	         0xfb64019	           movzx eax, byte [rax + 0x19] 	      1754	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f61	          0x83e002	                              and eax, 2	      1754	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f64	            0x84c0	                             test al, al	      1754	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f66	            0x7441	                            je 0x4001fa9	      1754	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f68	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f6c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f70	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f74	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f78	          0x4889c7	                            mov rdi, rax	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f7b	      0xe854f4ffff	                 call sym.hash_entry_bfd	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f80	          0x4889c1	                            mov rcx, rax	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f83	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f87	        0x488b5008	                mov rdx, qword [rax + 8]	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f8b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f8f	    0x41b900000000	                              mov r9d, 0	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f95	    0x41b800000000	                              mov r8d, 0	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f9b	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001f9f	          0x4889c7	                            mov rdi, rax	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001fa2	            0xffd3	                                call rbx	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001fa4	      0xe93e010000	                           jmp 0x40020e7	      1758	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001fa9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1768	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001fad	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1768	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001fb1	        0x488b4008	                mov rax, qword [rax + 8]	      1768	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001fb5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1768	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001fb9	        0x488b5208	                mov rdx, qword [rdx + 8]	      1768	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001fbd	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      1769	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001fc1	        0x488b4928	            mov rcx, qword [rcx + 0x28] 	      1769	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001fc5	          0x4889ce	                            mov rsi, rcx	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001fc8	      0xbf00000000	                              mov edi, 0	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001fcd	            0xffd0	                                call rax	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001fcf	        0x488945d8	             mov qword [rbp - 0x28], rax	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001fd3	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1770	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_40
0x4001fd8	            0x750a	                           jne 0x4001fe4	      1770	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_40
0x4001fda	      0xb800000000	                              mov eax, 0	      1771	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_40
0x4001fdf	      0xe912010000	                           jmp 0x40020f6	      1771	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_40
0x4001fe4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001fe8	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001fec	          0x488b0a	                    mov rcx, qword [rdx]	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001fef	          0x488908	                    mov qword [rax], rcx	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001ff2	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001ff6	        0x48894808	                mov qword [rax + 8], rcx	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001ffa	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001ffe	        0x48894810	             mov qword [rax + 0x10], rcx	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4002002	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4002006	        0x48894818	             mov qword [rax + 0x18], rcx	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400200a	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400200e	        0x48894820	             mov qword [rax + 0x20], rcx	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4002012	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4002016	        0x48894828	             mov qword [rax + 0x28], rcx	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400201a	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400201e	        0x48895030	             mov qword [rax + 0x30], rdx	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4002022	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1773	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4002026	        0xc6401807	                mov byte [rax + 0x18], 7	      1773	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400202a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1774	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400202e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1774	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4002032	        0x48895028	             mov qword [rax + 0x28], rdx	      1774	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4002036	        0x837d1800	               cmp dword [rbp + 0x18], 0	      1775	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x400203a	            0x750e	                           jne 0x400204a	      1775	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x400203c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1776	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x4002040	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      1776	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x4002044	        0x48895030	             mov qword [rax + 0x30], rdx	      1776	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x4002048	            0xeb5b	                           jmp 0x40020a5	      1776	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x400204a	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      1780	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_34
0x400204e	      0xe800000000	                          call 0x4002053	      1780	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_34
0x4002053	        0x4883c001	                              add rax, 1	      1780	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_34
0x4002057	        0x488945e0	             mov qword [rbp - 0x20], rax	      1780	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_34
0x400205b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1782	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_35
0x400205f	            0x89c2	                            mov edx, eax	      1782	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_35
0x4002061	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1782	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_35
0x4002065	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1782	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_35
0x4002069	            0x89d6	                            mov esi, edx	      1782	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_35
0x400206b	          0x4889c7	                            mov rdi, rax	      1782	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_35
0x400206e	      0xe800000000	                          call 0x4002073	      1782	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_35
0x4002073	        0x488945e8	             mov qword [rbp - 0x18], rax	      1782	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_35
0x4002077	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1783	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	IF_42
0x400207c	            0x7507	                           jne 0x4002085	      1783	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	IF_42
0x400207e	      0xb800000000	                              mov eax, 0	      1784	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	IF_42
0x4002083	            0xeb71	                           jmp 0x40020f6	      1784	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	IF_42
0x4002085	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1785	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_36
0x4002089	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1785	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_36
0x400208d	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      1785	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_36
0x4002091	          0x4889c7	                            mov rdi, rax	      1785	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_36
0x4002094	      0xe800000000	                          call 0x4002099	      1785	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_36
0x4002099	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1786	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15
0x400209d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1786	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15
0x40020a1	        0x48895030	             mov qword [rax + 0x30], rdx	      1786	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15
0x40020a5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x40020a9	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x40020ad	          0x4889c1	                            mov rcx, rax	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x40020b0	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x40020b4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x40020b8	          0x4889c6	                            mov rsi, rax	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x40020bb	          0x4889cf	                            mov rdi, rcx	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x40020be	      0xe800000000	                          call 0x40020c3	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x40020c3	      0x48837d2800	               cmp qword [rbp + 0x28], 0	      1792	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_43
0x40020c8	            0x741c	                            je 0x40020e6	      1792	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_43
0x40020ca	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      1793	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_43
0x40020ce	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1793	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_43
0x40020d2	          0x488910	                    mov qword [rax], rdx	      1793	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_43
0x40020d5	            0xeb0f	                           jmp 0x40020e6	      1795	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40020d7	              0x90	                                     nop	      1467	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40020d8	            0xeb0d	                           jmp 0x40020e7	      1467	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40020da	              0x90	                                     nop	      1553	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40020db	            0xeb0a	                           jmp 0x40020e7	      1553	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40020dd	              0x90	                                     nop	      1610	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40020de	            0xeb07	                           jmp 0x40020e7	      1610	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40020e0	              0x90	                                     nop	      1651	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40020e1	            0xeb04	                           jmp 0x40020e7	      1651	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40020e3	              0x90	                                     nop	      1664	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33
0x40020e4	            0xeb01	                           jmp 0x40020e7	      1664	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33
0x40020e6	              0x90	                                     nop	      1795	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40020e7	        0x837da800	               cmp dword [rbp - 0x58], 0	      1798	linker.c	FUNCTION_21	WHILE_1
0x40020eb	     0xf855af6ffff	                           jne 0x400174b	      1798	linker.c	FUNCTION_21	WHILE_1
0x40020f1	      0xb801000000	                              mov eax, 1	      1800	linker.c	FUNCTION_21
0x40020f6	        0x488b5df8	                mov rbx, qword [rbp - 8]	      1801	linker.c	FUNCTION_21
0x40020fa	              0xc9	                                   leave	      1801	linker.c	FUNCTION_21
0x40020fb	              0xc3	                                     ret	      1801	linker.c	FUNCTION_21
bfd_generic_link_read_symbols	functions,0:IF,4:WHILE,0:SWITCH,0:CALL,8:ELSE,0:FOR,0:DO,0	56
0x40008c5	              0x55	                                push rbp	       791	linker.c	FUNCTION_12
0x40008c6	          0x4889e5	                            mov rbp, rsp	       791	linker.c	FUNCTION_12
0x40008c9	        0x4883ec20	                           sub rsp, 0x20	       791	linker.c	FUNCTION_12
0x40008cd	        0x48897de8	             mov qword [rbp - 0x18], rdi	       791	linker.c	FUNCTION_12
0x40008d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x40008d5	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x40008dc	          0x4885c0	                           test rax, rax	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x40008df	     0xf85b4000000	                           jne 0x4000999	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x40008e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x40008e9	        0x488b4008	                mov rax, qword [rax + 8]	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x40008ed	    0x488b80f00100	           mov rax, qword [rax + 0x1f0] 	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x40008f4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x40008f8	          0x4889d7	                            mov rdi, rdx	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x40008fb	            0xffd0	                                call rax	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x40008fd	        0x488945f0	             mov qword [rbp - 0x10], rax	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x4000901	      0x48837df000	               cmp qword [rbp - 0x10], 0	       798	linker.c	FUNCTION_12	IF_1	IF_2
0x4000906	            0x790a	                           jns 0x4000912	       798	linker.c	FUNCTION_12	IF_1	IF_2
0x4000908	      0xb800000000	                              mov eax, 0	       799	linker.c	FUNCTION_12	IF_1	IF_2
0x400090d	      0xe98c000000	                           jmp 0x400099e	       799	linker.c	FUNCTION_12	IF_1	IF_2
0x4000912	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x4000916	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x400091a	          0x4889d6	                            mov rsi, rdx	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x400091d	          0x4889c7	                            mov rdi, rax	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x4000920	      0xe800000000	                          call 0x4000925	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x4000925	          0x4889c2	                            mov rdx, rax	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x4000928	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x400092c	    0x488990b00000	             mov qword [rax + 0xb0], rdx	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x4000933	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x4000937	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x400093e	          0x4885c0	                           test rax, rax	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x4000941	            0x750e	                           jne 0x4000951	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x4000943	      0x48837df000	               cmp qword [rbp - 0x10], 0	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x4000948	            0x7407	                            je 0x4000951	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x400094a	      0xb800000000	                              mov eax, 0	       803	linker.c	FUNCTION_12	IF_1	IF_3
0x400094f	            0xeb4d	                           jmp 0x400099e	       803	linker.c	FUNCTION_12	IF_1	IF_3
0x4000951	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4000955	        0x488b4008	                mov rax, qword [rax + 8]	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4000959	    0x488b80f80100	           mov rax, qword [rax + 0x1f8] 	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4000960	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4000964	    0x488b8ab00000	            mov rcx, qword [rdx + 0xb0] 	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x400096b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x400096f	          0x4889ce	                            mov rsi, rcx	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4000972	          0x4889d7	                            mov rdi, rdx	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4000975	            0xffd0	                                call rax	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4000977	        0x488945f8	                mov qword [rbp - 8], rax	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x400097b	      0x48837df800	                  cmp qword [rbp - 8], 0	       805	linker.c	FUNCTION_12	IF_1	IF_4
0x4000980	            0x7907	                           jns 0x4000989	       805	linker.c	FUNCTION_12	IF_1	IF_4
0x4000982	      0xb800000000	                              mov eax, 0	       806	linker.c	FUNCTION_12	IF_1	IF_4
0x4000987	            0xeb15	                           jmp 0x400099e	       806	linker.c	FUNCTION_12	IF_1	IF_4
0x4000989	        0x488b45f8	                mov rax, qword [rbp - 8]	       807	linker.c	FUNCTION_12	IF_1	CALL_8
0x400098d	            0x89c2	                            mov edx, eax	       807	linker.c	FUNCTION_12	IF_1	CALL_8
0x400098f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       807	linker.c	FUNCTION_12	IF_1	CALL_8
0x4000993	    0x8990b8000000	             mov dword [rax + 0xb8], edx	       807	linker.c	FUNCTION_12	IF_1	CALL_8
0x4000999	      0xb801000000	                              mov eax, 1	       810	linker.c	FUNCTION_12
0x400099e	              0xc9	                                   leave	       811	linker.c	FUNCTION_12
0x400099f	              0xc3	                                     ret	       811	linker.c	FUNCTION_12
unwrap_hash_lookup	functions,0:IF,5:WHILE,0:SWITCH,0:CALL,4:ELSE,0:FOR,0:DO,0	73
0x400047f	              0x55	                                push rbp	       606	linker.c	FUNCTION_5
0x4000480	          0x4889e5	                            mov rbp, rsp	       606	linker.c	FUNCTION_5
0x4000483	        0x4883ec30	                           sub rsp, 0x30	       606	linker.c	FUNCTION_5
0x4000487	        0x48897de8	             mov qword [rbp - 0x18], rdi	       606	linker.c	FUNCTION_5
0x400048b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       606	linker.c	FUNCTION_5
0x400048f	        0x488955d8	             mov qword [rbp - 0x28], rdx	       606	linker.c	FUNCTION_5
0x4000493	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       607	linker.c	FUNCTION_5
0x4000497	        0x488b4008	                mov rax, qword [rax + 8]	       607	linker.c	FUNCTION_5
0x400049b	        0x488945f8	                mov qword [rbp - 8], rax	       607	linker.c	FUNCTION_5
0x400049f	        0x488b45f8	                mov rax, qword [rbp - 8]	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x40004a3	           0xfb610	                   movzx edx, byte [rax]	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x40004a6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x40004aa	        0x488b4008	                mov rax, qword [rax + 8]	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x40004ae	         0xfb6401c	           movzx eax, byte [rax + 0x1c] 	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x40004b2	            0x38c2	                              cmp dl, al	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x40004b4	            0x7413	                            je 0x40004c9	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x40004b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       610	linker.c	FUNCTION_5	IF_1
0x40004ba	           0xfb610	                   movzx edx, byte [rax]	       610	linker.c	FUNCTION_5	IF_1
0x40004bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       610	linker.c	FUNCTION_5	IF_1
0x40004c1	         0xfb64009	               movzx eax, byte [rax + 9]	       610	linker.c	FUNCTION_5	IF_1
0x40004c5	            0x38c2	                              cmp dl, al	       610	linker.c	FUNCTION_5	IF_1
0x40004c7	            0x7505	                           jne 0x40004ce	       610	linker.c	FUNCTION_5	IF_1
0x40004c9	      0x488345f801	                  add qword [rbp - 8], 1	       611	linker.c	FUNCTION_5	IF_1
0x40004ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x40004d2	      0xba07000000	                              mov edx, 7	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x40004d7	      0xbe00000000	                              mov esi, 0	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x40004dc	          0x4889c7	                            mov rdi, rax	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x40004df	      0xe800000000	                          call 0x40004e4	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x40004e4	            0x85c0	                           test eax, eax	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x40004e6	     0xf8599000000	                           jne 0x4000585	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x40004ec	      0x488345f807	                  add qword [rbp - 8], 7	       615	linker.c	FUNCTION_5	IF_2
0x40004f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x40004f5	        0x488b4040	            mov rax, qword [rax + 0x40] 	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x40004f9	        0x488b75f8	                mov rsi, qword [rbp - 8]	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x40004fd	      0xb900000000	                              mov ecx, 0	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000502	      0xba00000000	                              mov edx, 0	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000507	          0x4889c7	                            mov rdi, rax	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x400050a	      0xe800000000	                          call 0x400050f	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x400050f	          0x4885c0	                           test rax, rax	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000512	            0x7471	                            je 0x4000585	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000514	        0xc645f700	                   mov byte [rbp - 9], 0	       619	linker.c	FUNCTION_5	IF_2	IF_3
0x4000518	        0x488b45f8	                mov rax, qword [rbp - 8]	       620	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x400051c	        0x488d50f9	                      lea rdx, [rax - 7]	       620	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000520	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       620	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000524	        0x488b4008	                mov rax, qword [rax + 8]	       620	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000528	          0x4839c2	                            cmp rdx, rax	       620	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x400052b	            0x7420	                            je 0x400054d	       620	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x400052d	      0x48836df801	                  sub qword [rbp - 8], 1	       622	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000532	        0x488b45f8	                mov rax, qword [rbp - 8]	       623	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000536	           0xfb600	                   movzx eax, byte [rax]	       623	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000539	          0x8845f7	                  mov byte [rbp - 9], al	       623	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x400053c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       624	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000540	        0x488b4008	                mov rax, qword [rax + 8]	       624	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000544	           0xfb610	                   movzx edx, byte [rax]	       624	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000547	        0x488b45f8	                mov rax, qword [rbp - 8]	       624	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x400054b	            0x8810	                      mov byte [rax], dl	       624	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x400054d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000551	        0x488b4028	            mov rax, qword [rax + 0x28] 	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000555	        0x488b75f8	                mov rsi, qword [rbp - 8]	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000559	    0x41b800000000	                              mov r8d, 0	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x400055f	      0xb900000000	                              mov ecx, 0	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000564	      0xba00000000	                              mov edx, 0	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000569	          0x4889c7	                            mov rdi, rax	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x400056c	      0xe800000000	                          call 0x4000571	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000571	        0x488945d8	             mov qword [rbp - 0x28], rax	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000575	        0x807df700	                   cmp byte [rbp - 9], 0	       627	linker.c	FUNCTION_5	IF_2	IF_3	IF_5
0x4000579	            0x740a	                            je 0x4000585	       627	linker.c	FUNCTION_5	IF_2	IF_3	IF_5
0x400057b	        0x488b45f8	                mov rax, qword [rbp - 8]	       628	linker.c	FUNCTION_5	IF_2	IF_3	IF_5
0x400057f	         0xfb655f7	               movzx edx, byte [rbp - 9]	       628	linker.c	FUNCTION_5	IF_2	IF_3	IF_5
0x4000583	            0x8810	                      mov byte [rax], dl	       628	linker.c	FUNCTION_5	IF_2	IF_3	IF_5
0x4000585	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       631	linker.c	FUNCTION_5
0x4000589	              0xc9	                                   leave	       632	linker.c	FUNCTION_5
0x400058a	              0xc3	                                     ret	       632	linker.c	FUNCTION_5
already_linked_newfunc	functions,0:IF,1:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	20
0x4003c88	              0x55	                                push rbp	      2781	linker.c	FUNCTION_37
0x4003c89	          0x4889e5	                            mov rbp, rsp	      2781	linker.c	FUNCTION_37
0x4003c8c	        0x4883ec30	                           sub rsp, 0x30	      2781	linker.c	FUNCTION_37
0x4003c90	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2781	linker.c	FUNCTION_37
0x4003c94	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2781	linker.c	FUNCTION_37
0x4003c98	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2781	linker.c	FUNCTION_37
0x4003c9c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2782	linker.c	FUNCTION_37
0x4003ca0	      0xbe20000000	                           mov esi, 0x20	      2782	linker.c	FUNCTION_37
0x4003ca5	          0x4889c7	                            mov rdi, rax	      2782	linker.c	FUNCTION_37
0x4003ca8	      0xe800000000	                          call 0x4003cad	      2782	linker.c	FUNCTION_37
0x4003cad	        0x488945f8	                mov qword [rbp - 8], rax	      2782	linker.c	FUNCTION_37
0x4003cb1	      0x48837df800	                  cmp qword [rbp - 8], 0	      2786	linker.c	FUNCTION_37	IF_1
0x4003cb6	            0x7507	                           jne 0x4003cbf	      2786	linker.c	FUNCTION_37	IF_1
0x4003cb8	      0xb800000000	                              mov eax, 0	      2787	linker.c	FUNCTION_37	IF_1
0x4003cbd	            0xeb10	                           jmp 0x4003ccf	      2787	linker.c	FUNCTION_37	IF_1
0x4003cbf	        0x488b45f8	                mov rax, qword [rbp - 8]	      2789	linker.c	FUNCTION_37
0x4003cc3	    0x48c740180000	               mov qword [rax + 0x18], 0	      2789	linker.c	FUNCTION_37
0x4003ccb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2791	linker.c	FUNCTION_37
0x4003ccf	              0xc9	                                   leave	      2792	linker.c	FUNCTION_37
0x4003cd0	              0xc3	                                     ret	      2792	linker.c	FUNCTION_37
_bfd_nolink_sizeof_headers	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,0:ELSE,0:FOR,0:DO,0	7
0x4004ae0	              0x55	                                push rbp	      3409	linker.c	FUNCTION_53
0x4004ae1	          0x4889e5	                            mov rbp, rsp	      3409	linker.c	FUNCTION_53
0x4004ae4	        0x48897df8	                mov qword [rbp - 8], rdi	      3409	linker.c	FUNCTION_53
0x4004ae8	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3409	linker.c	FUNCTION_53
0x4004aec	      0xb800000000	                              mov eax, 0	      3410	linker.c	FUNCTION_53
0x4004af1	              0x5d	                                 pop rbp	      3411	linker.c	FUNCTION_53
0x4004af2	              0xc3	                                     ret	      3411	linker.c	FUNCTION_53
_bfd_nolink_bfd_discard_group	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	10
0x4004b8e	              0x55	                                push rbp	      3452	linker.c	FUNCTION_58
0x4004b8f	          0x4889e5	                            mov rbp, rsp	      3452	linker.c	FUNCTION_58
0x4004b92	        0x4883ec10	                           sub rsp, 0x10	      3452	linker.c	FUNCTION_58
0x4004b96	        0x48897df8	                mov qword [rbp - 8], rdi	      3452	linker.c	FUNCTION_58
0x4004b9a	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3452	linker.c	FUNCTION_58
0x4004b9e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3453	linker.c	FUNCTION_58	CALL_1
0x4004ba2	          0x4889c7	                            mov rdi, rax	      3453	linker.c	FUNCTION_58	CALL_1
0x4004ba5	      0xe800000000	                          call 0x4004baa	      3453	linker.c	FUNCTION_58	CALL_1
0x4004baa	              0xc9	                                   leave	      3454	linker.c	FUNCTION_58
0x4004bab	              0xc3	                                     ret	      3454	linker.c	FUNCTION_58
_bfd_generic_copy_link_hash_symbol_type	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,0:ELSE,0:FOR,0:DO,0	8
0x40009df	              0x55	                                push rbp	       833	linker.c	FUNCTION_14
0x40009e0	          0x4889e5	                            mov rbp, rsp	       833	linker.c	FUNCTION_14
0x40009e3	        0x48897df8	                mov qword [rbp - 8], rdi	       833	linker.c	FUNCTION_14
0x40009e7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       833	linker.c	FUNCTION_14
0x40009eb	        0x488955e8	             mov qword [rbp - 0x18], rdx	       833	linker.c	FUNCTION_14
0x40009ef	              0x90	                                     nop	       834	linker.c	FUNCTION_14
0x40009f0	              0x5d	                                 pop rbp	       834	linker.c	FUNCTION_14
0x40009f1	              0xc3	                                     ret	       834	linker.c	FUNCTION_14
bfd_section_already_linked_table_free	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	7
0x4003cf0	              0x55	                                push rbp	      2805	linker.c	FUNCTION_39
0x4003cf1	          0x4889e5	                            mov rbp, rsp	      2805	linker.c	FUNCTION_39
0x4003cf4	      0xbf00000000	                              mov edi, 0	      2806	linker.c	FUNCTION_39	CALL_1
0x4003cf9	      0xe800000000	                          call 0x4003cfe	      2806	linker.c	FUNCTION_39	CALL_1
0x4003cfe	              0x90	                                     nop	      2807	linker.c	FUNCTION_39
0x4003cff	              0x5d	                                 pop rbp	      2807	linker.c	FUNCTION_39
0x4003d00	              0xc3	                                     ret	      2807	linker.c	FUNCTION_39
bfd_generic_define_common_symbol	functions,0:IF,1:WHILE,0:SWITCH,0:CALL,3:ELSE,0:FOR,0:DO,0	97
0x4004551	              0x55	                                push rbp	      3076	linker.c	FUNCTION_45
0x4004552	          0x4889e5	                            mov rbp, rsp	      3076	linker.c	FUNCTION_45
0x4004555	        0x4883ec40	                           sub rsp, 0x40	      3076	linker.c	FUNCTION_45
0x4004559	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3076	linker.c	FUNCTION_45
0x400455d	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3076	linker.c	FUNCTION_45
0x4004561	        0x488955c8	             mov qword [rbp - 0x38], rdx	      3076	linker.c	FUNCTION_45
0x4004565	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      3081	linker.c	FUNCTION_45	CALL_1
0x400456a	            0x740c	                            je 0x4004578	      3081	linker.c	FUNCTION_45	CALL_1
0x400456c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3081	linker.c	FUNCTION_45	CALL_1
0x4004570	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      3081	linker.c	FUNCTION_45	CALL_1
0x4004574	            0x3c05	                               cmp al, 5	      3081	linker.c	FUNCTION_45	CALL_1
0x4004576	            0x740f	                            je 0x4004587	      3081	linker.c	FUNCTION_45	CALL_1
0x4004578	      0xbe090c0000	                          mov esi, 0xc09	      3081	linker.c	FUNCTION_45	CALL_1
0x400457d	      0xbf00000000	                              mov edi, 0	      3081	linker.c	FUNCTION_45	CALL_1
0x4004582	      0xe800000000	                          call 0x4004587	      3081	linker.c	FUNCTION_45	CALL_1
0x4004587	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3083	linker.c	FUNCTION_45
0x400458b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3083	linker.c	FUNCTION_45
0x400458f	        0x488945e8	             mov qword [rbp - 0x18], rax	      3083	linker.c	FUNCTION_45
0x4004593	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3084	linker.c	FUNCTION_45
0x4004597	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3084	linker.c	FUNCTION_45
0x400459b	            0x8b00	                    mov eax, dword [rax]	      3084	linker.c	FUNCTION_45
0x400459d	          0x8945e4	             mov dword [rbp - 0x1c], eax	      3084	linker.c	FUNCTION_45
0x40045a0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3085	linker.c	FUNCTION_45
0x40045a4	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3085	linker.c	FUNCTION_45
0x40045a8	        0x488b4008	                mov rax, qword [rax + 8]	      3085	linker.c	FUNCTION_45
0x40045ac	        0x488945f0	             mov qword [rbp - 0x10], rax	      3085	linker.c	FUNCTION_45
0x40045b0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3089	linker.c	FUNCTION_45	CALL_2
0x40045b4	          0x4889c7	                            mov rdi, rax	      3089	linker.c	FUNCTION_45	CALL_2
0x40045b7	      0xe800000000	                          call 0x40045bc	      3089	linker.c	FUNCTION_45	CALL_2
0x40045bc	            0x89c2	                            mov edx, eax	      3089	linker.c	FUNCTION_45	CALL_2
0x40045be	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3089	linker.c	FUNCTION_45	CALL_2
0x40045c1	            0x89c1	                            mov ecx, eax	      3089	linker.c	FUNCTION_45	CALL_2
0x40045c3	            0xd3e2	                             shl edx, cl	      3089	linker.c	FUNCTION_45	CALL_2
0x40045c5	            0x89d0	                            mov eax, edx	      3089	linker.c	FUNCTION_45	CALL_2
0x40045c7	            0x89c0	                            mov eax, eax	      3089	linker.c	FUNCTION_45	CALL_2
0x40045c9	        0x488945f8	                mov qword [rbp - 8], rax	      3089	linker.c	FUNCTION_45	CALL_2
0x40045cd	      0x48837df800	                  cmp qword [rbp - 8], 0	      3090	linker.c	FUNCTION_45	CALL_3
0x40045d2	            0x7411	                            je 0x40045e5	      3090	linker.c	FUNCTION_45	CALL_3
0x40045d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      3090	linker.c	FUNCTION_45	CALL_3
0x40045d8	          0x48f7d8	                                 neg rax	      3090	linker.c	FUNCTION_45	CALL_3
0x40045db	        0x482345f8	                and rax, qword [rbp - 8]	      3090	linker.c	FUNCTION_45	CALL_3
0x40045df	        0x483b45f8	                cmp rax, qword [rbp - 8]	      3090	linker.c	FUNCTION_45	CALL_3
0x40045e3	            0x740f	                            je 0x40045f4	      3090	linker.c	FUNCTION_45	CALL_3
0x40045e5	      0xbe120c0000	                          mov esi, 0xc12	      3090	linker.c	FUNCTION_45	CALL_3
0x40045ea	      0xbf00000000	                              mov edi, 0	      3090	linker.c	FUNCTION_45	CALL_3
0x40045ef	      0xe800000000	                          call 0x40045f4	      3090	linker.c	FUNCTION_45	CALL_3
0x40045f4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3091	linker.c	FUNCTION_45
0x40045f8	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3091	linker.c	FUNCTION_45
0x40045fc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3091	linker.c	FUNCTION_45
0x4004600	          0x4801d0	                            add rax, rdx	      3091	linker.c	FUNCTION_45
0x4004603	        0x488d50ff	                      lea rdx, [rax - 1]	      3091	linker.c	FUNCTION_45
0x4004607	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3091	linker.c	FUNCTION_45
0x400460b	        0x48895038	             mov qword [rax + 0x38], rdx	      3091	linker.c	FUNCTION_45
0x400460f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3092	linker.c	FUNCTION_45
0x4004613	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3092	linker.c	FUNCTION_45
0x4004617	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3092	linker.c	FUNCTION_45
0x400461b	          0x48f7da	                                 neg rdx	      3092	linker.c	FUNCTION_45
0x400461e	          0x4821c2	                            and rdx, rax	      3092	linker.c	FUNCTION_45
0x4004621	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3092	linker.c	FUNCTION_45
0x4004625	        0x48895038	             mov qword [rax + 0x38], rdx	      3092	linker.c	FUNCTION_45
0x4004629	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3095	linker.c	FUNCTION_45	IF_1
0x400462d	          0x8b4070	            mov eax, dword [rax + 0x70] 	      3095	linker.c	FUNCTION_45	IF_1
0x4004630	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      3095	linker.c	FUNCTION_45	IF_1
0x4004633	            0x730a	                           jae 0x400463f	      3095	linker.c	FUNCTION_45	IF_1
0x4004635	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3096	linker.c	FUNCTION_45	IF_1
0x4004639	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      3096	linker.c	FUNCTION_45	IF_1
0x400463c	          0x895070	             mov dword [rax + 0x70], edx	      3096	linker.c	FUNCTION_45	IF_1
0x400463f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3099	linker.c	FUNCTION_45
0x4004643	        0xc6401803	                mov byte [rax + 0x18], 3	      3099	linker.c	FUNCTION_45
0x4004647	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3100	linker.c	FUNCTION_45
0x400464b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3100	linker.c	FUNCTION_45
0x400464f	        0x48895028	             mov qword [rax + 0x28], rdx	      3100	linker.c	FUNCTION_45
0x4004653	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3101	linker.c	FUNCTION_45
0x4004657	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3101	linker.c	FUNCTION_45
0x400465b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3101	linker.c	FUNCTION_45
0x400465f	        0x48895030	             mov qword [rax + 0x30], rdx	      3101	linker.c	FUNCTION_45
0x4004663	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3104	linker.c	FUNCTION_45
0x4004667	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3104	linker.c	FUNCTION_45
0x400466b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3104	linker.c	FUNCTION_45
0x400466f	          0x4801c2	                            add rdx, rax	      3104	linker.c	FUNCTION_45
0x4004672	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3104	linker.c	FUNCTION_45
0x4004676	        0x48895038	             mov qword [rax + 0x38], rdx	      3104	linker.c	FUNCTION_45
0x400467a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3108	linker.c	FUNCTION_45
0x400467e	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3108	linker.c	FUNCTION_45
0x4004681	          0x83c801	                               or eax, 1	      3108	linker.c	FUNCTION_45
0x4004684	            0x89c2	                            mov edx, eax	      3108	linker.c	FUNCTION_45
0x4004686	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3108	linker.c	FUNCTION_45
0x400468a	          0x895020	             mov dword [rax + 0x20], edx	      3108	linker.c	FUNCTION_45
0x400468d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3109	linker.c	FUNCTION_45
0x4004691	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3109	linker.c	FUNCTION_45
0x4004694	          0x80e4ef	                            and ah, 0xef	      3109	linker.c	FUNCTION_45
0x4004697	            0x89c2	                            mov edx, eax	      3109	linker.c	FUNCTION_45
0x4004699	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3109	linker.c	FUNCTION_45
0x400469d	          0x895020	             mov dword [rax + 0x20], edx	      3109	linker.c	FUNCTION_45
0x40046a0	      0xb801000000	                              mov eax, 1	      3110	linker.c	FUNCTION_45
0x40046a5	              0xc9	                                   leave	      3111	linker.c	FUNCTION_45
0x40046a6	              0xc3	                                     ret	      3111	linker.c	FUNCTION_45
bfd_section_already_linked_table_lookup	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	12
0x4003c00	              0x55	                                push rbp	      2752	linker.c	FUNCTION_35
0x4003c01	          0x4889e5	                            mov rbp, rsp	      2752	linker.c	FUNCTION_35
0x4003c04	        0x4883ec10	                           sub rsp, 0x10	      2752	linker.c	FUNCTION_35
0x4003c08	        0x48897df8	                mov qword [rbp - 8], rdi	      2752	linker.c	FUNCTION_35
0x4003c0c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2753	linker.c	FUNCTION_35
0x4003c10	      0xb900000000	                              mov ecx, 0	      2753	linker.c	FUNCTION_35
0x4003c15	      0xba01000000	                              mov edx, 1	      2753	linker.c	FUNCTION_35
0x4003c1a	          0x4889c6	                            mov rsi, rax	      2753	linker.c	FUNCTION_35
0x4003c1d	      0xbf00000000	                              mov edi, 0	      2753	linker.c	FUNCTION_35
0x4003c22	      0xe800000000	                          call 0x4003c27	      2753	linker.c	FUNCTION_35
0x4003c27	              0xc9	                                   leave	      2756	linker.c	FUNCTION_35
0x4003c28	              0xc3	                                     ret	      2756	linker.c	FUNCTION_35
_bfd_nolink_bfd_define_start_stop	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	12
0x4004c4a	              0x55	                                push rbp	      3503	linker.c	FUNCTION_65
0x4004c4b	          0x4889e5	                            mov rbp, rsp	      3503	linker.c	FUNCTION_65
0x4004c4e	        0x4883ec20	                           sub rsp, 0x20	      3503	linker.c	FUNCTION_65
0x4004c52	        0x48897df8	                mov qword [rbp - 8], rdi	      3503	linker.c	FUNCTION_65
0x4004c56	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3503	linker.c	FUNCTION_65
0x4004c5a	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3503	linker.c	FUNCTION_65
0x4004c5e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3504	linker.c	FUNCTION_65	CALL_1
0x4004c62	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      3504	linker.c	FUNCTION_65	CALL_1
0x4004c69	          0x4889c7	                            mov rdi, rax	      3504	linker.c	FUNCTION_65	CALL_1
0x4004c6c	      0xe800000000	                          call 0x4004c71	      3504	linker.c	FUNCTION_65	CALL_1
0x4004c71	              0xc9	                                   leave	      3505	linker.c	FUNCTION_65
0x4004c72	              0xc3	                                     ret	      3505	linker.c	FUNCTION_65
generic_add_output_symbol	functions,0:IF,4:WHILE,0:SWITCH,0:CALL,7:ELSE,1:FOR,0:DO,0	62
0x40025bc	              0x55	                                push rbp	      1933	linker.c	FUNCTION_23
0x40025bd	          0x4889e5	                            mov rbp, rsp	      1933	linker.c	FUNCTION_23
0x40025c0	        0x4883ec30	                           sub rsp, 0x30	      1933	linker.c	FUNCTION_23
0x40025c4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1933	linker.c	FUNCTION_23
0x40025c8	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1933	linker.c	FUNCTION_23
0x40025cc	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1933	linker.c	FUNCTION_23
0x40025d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1934	linker.c	FUNCTION_23	IF_1	CALL_1
0x40025d4	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1934	linker.c	FUNCTION_23	IF_1	CALL_1
0x40025da	            0x89c2	                            mov edx, eax	      1934	linker.c	FUNCTION_23	IF_1	CALL_1
0x40025dc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1934	linker.c	FUNCTION_23	IF_1	CALL_1
0x40025e0	          0x488b00	                    mov rax, qword [rax]	      1934	linker.c	FUNCTION_23	IF_1	CALL_1
0x40025e3	          0x4839c2	                            cmp rdx, rax	      1934	linker.c	FUNCTION_23	IF_1	CALL_1
0x40025e6	            0x7276	                            jb 0x400265e	      1934	linker.c	FUNCTION_23	IF_1	CALL_1
0x40025e8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1939	linker.c	FUNCTION_23	IF_1	IF_2
0x40025ec	          0x488b00	                    mov rax, qword [rax]	      1939	linker.c	FUNCTION_23	IF_1	IF_2
0x40025ef	          0x4885c0	                           test rax, rax	      1939	linker.c	FUNCTION_23	IF_1	IF_2
0x40025f2	            0x750d	                           jne 0x4002601	      1939	linker.c	FUNCTION_23	IF_1	IF_2
0x40025f4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1940	linker.c	FUNCTION_23	IF_1	IF_2
0x40025f8	    0x48c7007c0000	                   mov qword [rax], 0x7c	      1940	linker.c	FUNCTION_23	IF_1	IF_2
0x40025ff	            0xeb12	                           jmp 0x4002613	      1940	linker.c	FUNCTION_23	IF_1	IF_2
0x4002601	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1942	linker.c	FUNCTION_23	IF_1	ELSE_1
0x4002605	          0x488b00	                    mov rax, qword [rax]	      1942	linker.c	FUNCTION_23	IF_1	ELSE_1
0x4002608	        0x488d1400	                    lea rdx, [rax + rax]	      1942	linker.c	FUNCTION_23	IF_1	ELSE_1
0x400260c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1942	linker.c	FUNCTION_23	IF_1	ELSE_1
0x4002610	          0x488910	                    mov qword [rax], rdx	      1942	linker.c	FUNCTION_23	IF_1	ELSE_1
0x4002613	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1943	linker.c	FUNCTION_23	IF_1
0x4002617	          0x488b00	                    mov rax, qword [rax]	      1943	linker.c	FUNCTION_23	IF_1
0x400261a	        0x488945f0	             mov qword [rbp - 0x10], rax	      1943	linker.c	FUNCTION_23	IF_1
0x400261e	      0x48c165f003	               shl qword [rbp - 0x10], 3	      1944	linker.c	FUNCTION_23	IF_1
0x4002623	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1945	linker.c	FUNCTION_23	IF_1	CALL_3
0x4002627	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      1945	linker.c	FUNCTION_23	IF_1	CALL_3
0x400262e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1945	linker.c	FUNCTION_23	IF_1	CALL_3
0x4002632	          0x4889d6	                            mov rsi, rdx	      1945	linker.c	FUNCTION_23	IF_1	CALL_3
0x4002635	          0x4889c7	                            mov rdi, rax	      1945	linker.c	FUNCTION_23	IF_1	CALL_3
0x4002638	      0xe800000000	                          call 0x400263d	      1945	linker.c	FUNCTION_23	IF_1	CALL_3
0x400263d	        0x488945f8	                mov qword [rbp - 8], rax	      1945	linker.c	FUNCTION_23	IF_1	CALL_3
0x4002641	      0x48837df800	                  cmp qword [rbp - 8], 0	      1946	linker.c	FUNCTION_23	IF_1	IF_3
0x4002646	            0x7507	                           jne 0x400264f	      1946	linker.c	FUNCTION_23	IF_1	IF_3
0x4002648	      0xb800000000	                              mov eax, 0	      1947	linker.c	FUNCTION_23	IF_1	IF_3
0x400264d	            0xeb57	                           jmp 0x40026a6	      1947	linker.c	FUNCTION_23	IF_1	IF_3
0x400264f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1948	linker.c	FUNCTION_23	IF_1	CALL_4
0x4002653	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1948	linker.c	FUNCTION_23	IF_1	CALL_4
0x4002657	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      1948	linker.c	FUNCTION_23	IF_1	CALL_4
0x400265e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1951	linker.c	FUNCTION_23	CALL_6
0x4002662	    0x488b90b00000	            mov rdx, qword [rax + 0xb0] 	      1951	linker.c	FUNCTION_23	CALL_6
0x4002669	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1951	linker.c	FUNCTION_23	CALL_6
0x400266d	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1951	linker.c	FUNCTION_23	CALL_6
0x4002673	            0x89c0	                            mov eax, eax	      1951	linker.c	FUNCTION_23	CALL_6
0x4002675	        0x48c1e003	                              shl rax, 3	      1951	linker.c	FUNCTION_23	CALL_6
0x4002679	          0x4801c2	                            add rdx, rax	      1951	linker.c	FUNCTION_23	CALL_6
0x400267c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1951	linker.c	FUNCTION_23	CALL_6
0x4002680	          0x488902	                    mov qword [rdx], rax	      1951	linker.c	FUNCTION_23	CALL_6
0x4002683	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1952	linker.c	FUNCTION_23	IF_4
0x4002688	            0x7417	                            je 0x40026a1	      1952	linker.c	FUNCTION_23	IF_4
0x400268a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1953	linker.c	FUNCTION_23	CALL_7
0x400268e	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1953	linker.c	FUNCTION_23	CALL_7
0x4002694	          0x8d5001	                      lea edx, [rax + 1]	      1953	linker.c	FUNCTION_23	CALL_7
0x4002697	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1953	linker.c	FUNCTION_23	CALL_7
0x400269b	    0x8990b8000000	             mov dword [rax + 0xb8], edx	      1953	linker.c	FUNCTION_23	CALL_7
0x40026a1	      0xb801000000	                              mov eax, 1	      1955	linker.c	FUNCTION_23
0x40026a6	              0xc9	                                   leave	      1956	linker.c	FUNCTION_23
0x40026a7	              0xc3	                                     ret	      1956	linker.c	FUNCTION_23
_bfd_nolink_bfd_is_group_section	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	10
0x4004b70	              0x55	                                push rbp	      3446	linker.c	FUNCTION_57
0x4004b71	          0x4889e5	                            mov rbp, rsp	      3446	linker.c	FUNCTION_57
0x4004b74	        0x4883ec10	                           sub rsp, 0x10	      3446	linker.c	FUNCTION_57
0x4004b78	        0x48897df8	                mov qword [rbp - 8], rdi	      3446	linker.c	FUNCTION_57
0x4004b7c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3446	linker.c	FUNCTION_57
0x4004b80	        0x488b45f8	                mov rax, qword [rbp - 8]	      3447	linker.c	FUNCTION_57	CALL_1
0x4004b84	          0x4889c7	                            mov rdi, rax	      3447	linker.c	FUNCTION_57	CALL_1
0x4004b87	      0xe800000000	                          call 0x4004b8c	      3447	linker.c	FUNCTION_57	CALL_1
0x4004b8c	              0xc9	                                   leave	      3448	linker.c	FUNCTION_57
0x4004b8d	              0xc3	                                     ret	      3448	linker.c	FUNCTION_57
_bfd_fix_excluded_sec_syms	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	14
0x4004525	              0x55	                                push rbp	      3050	linker.c	FUNCTION_44
0x4004526	          0x4889e5	                            mov rbp, rsp	      3050	linker.c	FUNCTION_44
0x4004529	        0x4883ec10	                           sub rsp, 0x10	      3050	linker.c	FUNCTION_44
0x400452d	        0x48897df8	                mov qword [rbp - 8], rdi	      3050	linker.c	FUNCTION_44
0x4004531	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3050	linker.c	FUNCTION_44
0x4004535	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3051	linker.c	FUNCTION_44	CALL_1
0x4004539	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3051	linker.c	FUNCTION_44	CALL_1
0x400453d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3051	linker.c	FUNCTION_44	CALL_1
0x4004541	      0xbe00000000	                              mov esi, 0	      3051	linker.c	FUNCTION_44	CALL_1
0x4004546	          0x4889c7	                            mov rdi, rax	      3051	linker.c	FUNCTION_44	CALL_1
0x4004549	      0xe800000000	                          call 0x400454e	      3051	linker.c	FUNCTION_44	CALL_1
0x400454e	              0x90	                                     nop	      3052	linker.c	FUNCTION_44
0x400454f	              0xc9	                                   leave	      3052	linker.c	FUNCTION_44
0x4004550	              0xc3	                                     ret	      3052	linker.c	FUNCTION_44
bfd_link_hash_traverse	functions,0:IF,1:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,2:DO,0	54
0x400058b	              0x55	                                push rbp	       646	linker.c	FUNCTION_6
0x400058c	          0x4889e5	                            mov rbp, rsp	       646	linker.c	FUNCTION_6
0x400058f	        0x4883ec30	                           sub rsp, 0x30	       646	linker.c	FUNCTION_6
0x4000593	        0x48897de8	             mov qword [rbp - 0x18], rdi	       646	linker.c	FUNCTION_6
0x4000597	        0x488975e0	             mov qword [rbp - 0x20], rsi	       646	linker.c	FUNCTION_6
0x400059b	        0x488955d8	             mov qword [rbp - 0x28], rdx	       646	linker.c	FUNCTION_6
0x400059f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       649	linker.c	FUNCTION_6
0x40005a3	         0xfb65024	           movzx edx, byte [rax + 0x24] 	       649	linker.c	FUNCTION_6
0x40005a7	          0x83ca01	                               or edx, 1	       649	linker.c	FUNCTION_6
0x40005aa	          0x885024	               mov byte [rax + 0x24], dl	       649	linker.c	FUNCTION_6
0x40005ad	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       650	linker.c	FUNCTION_6	FOR_1
0x40005b4	            0xeb5e	                           jmp 0x4000614	       650	linker.c	FUNCTION_6	FOR_1
0x40005b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       654	linker.c	FUNCTION_6	FOR_1
0x40005ba	          0x488b00	                    mov rax, qword [rax]	       654	linker.c	FUNCTION_6	FOR_1
0x40005bd	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       654	linker.c	FUNCTION_6	FOR_1
0x40005c0	        0x48c1e203	                              shl rdx, 3	       654	linker.c	FUNCTION_6	FOR_1
0x40005c4	          0x4801d0	                            add rax, rdx	       654	linker.c	FUNCTION_6	FOR_1
0x40005c7	          0x488b00	                    mov rax, qword [rax]	       654	linker.c	FUNCTION_6	FOR_1
0x40005ca	        0x488945f8	                mov qword [rbp - 8], rax	       654	linker.c	FUNCTION_6	FOR_1
0x40005ce	            0xeb39	                           jmp 0x4000609	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x40005d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x40005d4	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x40005d8	            0x3c07	                               cmp al, 7	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x40005da	            0x750a	                           jne 0x40005e6	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x40005dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x40005e0	        0x488b4028	            mov rax, qword [rax + 0x28] 	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x40005e4	            0xeb04	                           jmp 0x40005ea	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x40005e6	        0x488b45f8	                mov rax, qword [rbp - 8]	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x40005ea	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x40005ee	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x40005f2	          0x4889ce	                            mov rsi, rcx	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x40005f5	          0x4889c7	                            mov rdi, rax	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x40005f8	            0xffd2	                                call rdx	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x40005fa	            0x85c0	                           test eax, eax	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x40005fc	            0x7424	                            je 0x4000622	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x40005fe	        0x488b45f8	                mov rax, qword [rbp - 8]	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4000602	          0x488b00	                    mov rax, qword [rax]	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4000605	        0x488945f8	                mov qword [rbp - 8], rax	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4000609	      0x48837df800	                  cmp qword [rbp - 8], 0	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x400060e	            0x75c0	                           jne 0x40005d0	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4000610	        0x8345f401	                add dword [rbp - 0xc], 1	       650	linker.c	FUNCTION_6	FOR_1
0x4000614	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       650	linker.c	FUNCTION_6	FOR_1
0x4000618	          0x8b4018	            mov eax, dword [rax + 0x18] 	       650	linker.c	FUNCTION_6	FOR_1
0x400061b	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       650	linker.c	FUNCTION_6	FOR_1
0x400061e	            0x7796	                            ja 0x40005b6	       650	linker.c	FUNCTION_6	FOR_1
0x4000620	            0xeb01	                           jmp 0x4000623	       650	linker.c	FUNCTION_6	FOR_1
0x4000622	              0x90	                                     nop	       657	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000623	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       660	linker.c	FUNCTION_6
0x4000627	         0xfb65024	           movzx edx, byte [rax + 0x24] 	       660	linker.c	FUNCTION_6
0x400062b	          0x83e2fe	                     and edx, 0xfffffffe	       660	linker.c	FUNCTION_6
0x400062e	          0x885024	               mov byte [rax + 0x24], dl	       660	linker.c	FUNCTION_6
0x4000631	              0x90	                                     nop	       661	linker.c	FUNCTION_6
0x4000632	              0xc9	                                   leave	       661	linker.c	FUNCTION_6
0x4000633	              0xc3	                                     ret	       661	linker.c	FUNCTION_6
_bfd_generic_link_add_archive_symbols	functions,0:IF,17:WHILE,1:SWITCH,0:CALL,15:ELSE,0:FOR,1:DO,2	234
0x4000ac7	              0x55	                                push rbp	       899	linker.c	FUNCTION_17
0x4000ac8	          0x4889e5	                            mov rbp, rsp	       899	linker.c	FUNCTION_17
0x4000acb	        0x4883c480	             add rsp, 0xffffffffffffff80	       899	linker.c	FUNCTION_17
0x4000acf	        0x48897d98	             mov qword [rbp - 0x68], rdi	       899	linker.c	FUNCTION_17
0x4000ad3	        0x48897590	             mov qword [rbp - 0x70], rsi	       899	linker.c	FUNCTION_17
0x4000ad7	        0x48895588	             mov qword [rbp - 0x78], rdx	       899	linker.c	FUNCTION_17
0x4000adb	    0x64488b042528	                mov rax, qword fs:[0x28]	       899	linker.c	FUNCTION_17
0x4000ae4	        0x488945f8	                mov qword [rbp - 8], rax	       899	linker.c	FUNCTION_17
0x4000ae8	            0x31c0	                            xor eax, eax	       899	linker.c	FUNCTION_17
0x4000aea	        0x488b4598	             mov rax, qword [rbp - 0x68]	       904	linker.c	FUNCTION_17	IF_1	CALL_2
0x4000aee	         0xfb64047	           movzx eax, byte [rax + 0x47] 	       904	linker.c	FUNCTION_17	IF_1	CALL_2
0x4000af2	          0x83e080	                     and eax, 0xffffff80	       904	linker.c	FUNCTION_17	IF_1	CALL_2
0x4000af5	            0x84c0	                             test al, al	       904	linker.c	FUNCTION_17	IF_1	CALL_2
0x4000af7	            0x7534	                           jne 0x4000b2d	       904	linker.c	FUNCTION_17	IF_1	CALL_2
0x4000af9	        0x488b4598	             mov rax, qword [rbp - 0x68]	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000afd	      0xbe00000000	                              mov esi, 0	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000b02	          0x4889c7	                            mov rdi, rax	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000b05	      0xe800000000	                          call 0x4000b0a	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000b0a	          0x4885c0	                           test rax, rax	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000b0d	            0x750a	                           jne 0x4000b19	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000b0f	      0xb801000000	                              mov eax, 1	       908	linker.c	FUNCTION_17	IF_1	IF_2
0x4000b14	      0xe916030000	                           jmp 0x4000e2f	       908	linker.c	FUNCTION_17	IF_1	IF_2
0x4000b19	      0xbf08000000	                              mov edi, 8	       909	linker.c	FUNCTION_17	IF_1	CALL_4
0x4000b1e	      0xe800000000	                          call 0x4000b23	       909	linker.c	FUNCTION_17	IF_1	CALL_4
0x4000b23	      0xb800000000	                              mov eax, 0	       910	linker.c	FUNCTION_17	IF_1
0x4000b28	      0xe902030000	                           jmp 0x4000e2f	       910	linker.c	FUNCTION_17	IF_1
0x4000b2d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       913	linker.c	FUNCTION_17	CALL_5
0x4000b31	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       913	linker.c	FUNCTION_17	CALL_5
0x4000b38	        0x488b4020	            mov rax, qword [rax + 0x20] 	       913	linker.c	FUNCTION_17	CALL_5
0x4000b3c	        0x488945d0	             mov qword [rbp - 0x30], rax	       913	linker.c	FUNCTION_17	CALL_5
0x4000b40	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       914	linker.c	FUNCTION_17	IF_3
0x4000b45	            0x750a	                           jne 0x4000b51	       914	linker.c	FUNCTION_17	IF_3
0x4000b47	      0xb801000000	                              mov eax, 1	       915	linker.c	FUNCTION_17	IF_3
0x4000b4c	      0xe9de020000	                           jmp 0x4000e2f	       915	linker.c	FUNCTION_17	IF_3
0x4000b51	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       917	linker.c	FUNCTION_17	CALL_6
0x4000b55	          0x4889c7	                            mov rdi, rax	       917	linker.c	FUNCTION_17	CALL_6
0x4000b58	      0xe800000000	                          call 0x4000b5d	       917	linker.c	FUNCTION_17	CALL_6
0x4000b5d	        0x488945d8	             mov qword [rbp - 0x28], rax	       917	linker.c	FUNCTION_17	CALL_6
0x4000b61	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       918	linker.c	FUNCTION_17	IF_4
0x4000b66	            0x750a	                           jne 0x4000b72	       918	linker.c	FUNCTION_17	IF_4
0x4000b68	      0xb800000000	                              mov eax, 0	       919	linker.c	FUNCTION_17	IF_4
0x4000b6d	      0xe9bd020000	                           jmp 0x4000e2f	       919	linker.c	FUNCTION_17	IF_4
0x4000b72	    0x48c745b8ffff	mov qword [rbp - 0x48], 0xffffffffffffffff	       927	linker.c	FUNCTION_17	DO_1
0x4000b7a	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       928	linker.c	FUNCTION_17	DO_1
0x4000b81	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       929	linker.c	FUNCTION_17	DO_1
0x4000b89	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       931	linker.c	FUNCTION_17	DO_1
0x4000b90	        0x488b4598	             mov rax, qword [rbp - 0x68]	       932	linker.c	FUNCTION_17	DO_1	CALL_7
0x4000b94	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       932	linker.c	FUNCTION_17	DO_1	CALL_7
0x4000b9b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       932	linker.c	FUNCTION_17	DO_1	CALL_7
0x4000b9f	        0x488945e0	             mov qword [rbp - 0x20], rax	       932	linker.c	FUNCTION_17	DO_1	CALL_7
0x4000ba3	        0x488b4598	             mov rax, qword [rbp - 0x68]	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x4000ba7	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x4000bae	        0x488b4020	            mov rax, qword [rax + 0x20] 	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x4000bb2	        0x48c1e004	                              shl rax, 4	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x4000bb6	          0x4889c2	                            mov rdx, rax	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x4000bb9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x4000bbd	          0x4801d0	                            add rax, rdx	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x4000bc0	        0x488945e8	             mov qword [rbp - 0x18], rax	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x4000bc4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000bc8	        0x488945b0	             mov qword [rbp - 0x50], rax	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000bcc	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000bd3	      0xe914020000	                           jmp 0x4000dec	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000bd8	          0x8b55a8	             mov edx, dword [rbp - 0x58]	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x4000bdb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x4000bdf	          0x4801d0	                            add rax, rdx	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x4000be2	           0xfb600	                   movzx eax, byte [rax]	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x4000be5	            0x84c0	                             test al, al	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x4000be7	     0xf85ef010000	                           jne 0x4000ddc	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x4000bed	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000bf0	            0x85c0	                           test eax, eax	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000bf2	            0x7420	                            je 0x4000c14	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000bf4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000bf8	        0x488b4008	                mov rax, qword [rax + 8]	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000bfc	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000c00	            0x7512	                           jne 0x4000c14	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000c02	          0x8b55a8	             mov edx, dword [rbp - 0x58]	       943	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000c05	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       943	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000c09	          0x4801d0	                            add rax, rdx	       943	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000c0c	          0xc60001	                       mov byte [rax], 1	       943	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000c0f	      0xe9cf010000	                           jmp 0x4000de3	       944	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000c14	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       947	linker.c	FUNCTION_17	DO_1	FOR_1	IF_7
0x4000c18	          0x488b00	                    mov rax, qword [rax]	       947	linker.c	FUNCTION_17	DO_1	FOR_1	IF_7
0x4000c1b	          0x4885c0	                           test rax, rax	       947	linker.c	FUNCTION_17	DO_1	FOR_1	IF_7
0x4000c1e	     0xf84f3010000	                            je 0x4000e17	       947	linker.c	FUNCTION_17	DO_1	FOR_1	IF_7
0x4000c24	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4000c28	          0x488b30	                    mov rsi, qword [rax]	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4000c2b	        0x488b4590	             mov rax, qword [rbp - 0x70]	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4000c2f	        0x488b4028	            mov rax, qword [rax + 0x28] 	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4000c33	    0x41b801000000	                              mov r8d, 1	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4000c39	      0xb900000000	                              mov ecx, 0	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4000c3e	      0xba00000000	                              mov edx, 0	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4000c43	          0x4889c7	                            mov rdi, rax	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4000c46	      0xe800000000	                          call 0x4000c4b	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4000c4b	        0x488945c8	             mov qword [rbp - 0x38], rax	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4000c4f	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       953	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x4000c54	            0x755a	                           jne 0x4000cb0	       953	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x4000c56	        0x488b4590	             mov rax, qword [rbp - 0x70]	       954	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x4000c5a	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	       954	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x4000c60	            0x85c0	                           test eax, eax	       954	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x4000c62	            0x744c	                            je 0x4000cb0	       954	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x4000c64	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4000c68	          0x488b00	                    mov rax, qword [rax]	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4000c6b	      0xba06000000	                              mov edx, 6	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4000c70	      0xbe00000000	                              mov esi, 0	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4000c75	          0x4889c7	                            mov rdi, rax	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4000c78	      0xe800000000	                          call 0x4000c7d	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4000c7d	            0x85c0	                           test eax, eax	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4000c7f	            0x752f	                           jne 0x4000cb0	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4000c81	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4000c85	          0x488b00	                    mov rax, qword [rax]	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4000c88	        0x488d7006	                      lea rsi, [rax + 6]	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4000c8c	        0x488b4590	             mov rax, qword [rbp - 0x70]	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4000c90	        0x488b4028	            mov rax, qword [rax + 0x28] 	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4000c94	    0x41b801000000	                              mov r8d, 1	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4000c9a	      0xb900000000	                              mov ecx, 0	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4000c9f	      0xba00000000	                              mov edx, 0	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4000ca4	          0x4889c7	                            mov rdi, rax	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4000ca7	      0xe800000000	                          call 0x4000cac	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4000cac	        0x488945c8	             mov qword [rbp - 0x38], rax	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4000cb0	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       958	linker.c	FUNCTION_17	DO_1	FOR_1	IF_9
0x4000cb5	     0xf8424010000	                            je 0x4000ddf	       958	linker.c	FUNCTION_17	DO_1	FOR_1	IF_9
0x4000cbb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4000cbf	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4000cc3	            0x3c01	                               cmp al, 1	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4000cc5	            0x742e	                            je 0x4000cf5	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4000cc7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       962	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4000ccb	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       962	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4000ccf	            0x3c05	                               cmp al, 5	       962	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4000cd1	            0x7422	                            je 0x4000cf5	       962	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4000cd3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       964	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x4000cd7	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       964	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x4000cdb	            0x3c02	                               cmp al, 2	       964	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x4000cdd	     0xf84ff000000	                            je 0x4000de2	       964	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x4000ce3	          0x8b55a8	             mov edx, dword [rbp - 0x58]	       966	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x4000ce6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       966	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x4000cea	          0x4801d0	                            add rax, rdx	       966	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x4000ced	          0xc60001	                       mov byte [rax], 1	       966	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x4000cf0	      0xe9ed000000	                           jmp 0x4000de2	       967	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4000cf5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4000cf9	        0x488b4008	                mov rax, qword [rax + 8]	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4000cfd	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4000d01	            0x7447	                            je 0x4000d4a	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4000d03	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       972	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4000d07	        0x488b4008	                mov rax, qword [rax + 8]	       972	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4000d0b	        0x488945b8	             mov qword [rbp - 0x48], rax	       972	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4000d0f	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x4000d13	        0x488b4598	             mov rax, qword [rbp - 0x68]	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x4000d17	          0x4889d6	                            mov rsi, rdx	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x4000d1a	          0x4889c7	                            mov rdi, rax	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x4000d1d	      0xe800000000	                          call 0x4000d22	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x4000d22	        0x488945c0	             mov qword [rbp - 0x40], rax	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x4000d26	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       974	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13
0x4000d2b	     0xf84e9000000	                            je 0x4000e1a	       974	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13
0x4000d31	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x4000d35	      0xbe01000000	                              mov esi, 1	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x4000d3a	          0x4889c7	                            mov rdi, rax	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x4000d3d	      0xe800000000	                          call 0x4000d42	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x4000d42	            0x85c0	                           test eax, eax	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x4000d44	     0xf84d0000000	                            je 0x4000e1a	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x4000d4a	        0x488b4590	             mov rax, qword [rbp - 0x70]	       979	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000d4e	        0x488b4028	            mov rax, qword [rax + 0x28] 	       979	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000d52	        0x488b4030	            mov rax, qword [rax + 0x30] 	       979	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000d56	        0x488945f0	             mov qword [rbp - 0x10], rax	       979	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000d5a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4000d5e	          0x488b08	                    mov rcx, qword [rax]	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4000d61	        0x4c8d45a0	                    lea r8, [rbp - 0x60]	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4000d65	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4000d69	        0x488b7590	             mov rsi, qword [rbp - 0x70]	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4000d6d	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4000d71	        0x488b4588	             mov rax, qword [rbp - 0x78]	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4000d75	            0xffd0	                                call rax	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4000d77	            0x85c0	                           test eax, eax	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4000d79	     0xf849e000000	                            je 0x4000e1d	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4000d7f	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       986	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4000d82	            0x85c0	                           test eax, eax	       986	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4000d84	            0x745d	                            je 0x4000de3	       986	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4000d86	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       992	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4000d89	          0x8945ac	             mov dword [rbp - 0x54], eax	       992	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4000d8c	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       995	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2
0x4000d8f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       995	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2
0x4000d93	          0x4801d0	                            add rax, rdx	       995	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2
0x4000d96	          0xc60001	                       mov byte [rax], 1	       995	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2
0x4000d99	        0x837dac00	               cmp dword [rbp - 0x54], 0	       996	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2	IF_16
0x4000d9d	            0x7421	                            je 0x4000dc0	       996	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2	IF_16
0x4000d9f	        0x836dac01	               sub dword [rbp - 0x54], 1	       998	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2
0x4000da3	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4000da6	        0x48c1e004	                              shl rax, 4	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4000daa	          0x4889c2	                            mov rdx, rax	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4000dad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4000db1	          0x4801d0	                            add rax, rdx	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4000db4	        0x488b4008	                mov rax, qword [rax + 8]	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4000db8	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4000dbc	            0x74ce	                            je 0x4000d8c	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4000dbe	            0xeb01	                           jmp 0x4000dc1	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4000dc0	              0x90	                                     nop	       997	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2	IF_16
0x4000dc1	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1002	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	IF_17
0x4000dc5	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1002	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	IF_17
0x4000dc9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1002	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	IF_17
0x4000dcd	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1002	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	IF_17
0x4000dd1	            0x7410	                            je 0x4000de3	      1002	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	IF_17
0x4000dd3	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	      1003	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	IF_17
0x4000dda	            0xeb07	                           jmp 0x4000de3	      1003	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	IF_17
0x4000ddc	              0x90	                                     nop	       940	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x4000ddd	            0xeb04	                           jmp 0x4000de3	       940	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x4000ddf	              0x90	                                     nop	       959	linker.c	FUNCTION_17	DO_1	FOR_1	IF_9
0x4000de0	            0xeb01	                           jmp 0x4000de3	       959	linker.c	FUNCTION_17	DO_1	FOR_1	IF_9
0x4000de2	              0x90	                                     nop	       967	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4000de3	      0x488345b010	            add qword [rbp - 0x50], 0x10	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000de8	        0x8345a801	               add dword [rbp - 0x58], 1	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000dec	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000df0	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000df4	     0xf82defdffff	                            jb 0x4000bd8	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000dfa	        0x837da400	               cmp dword [rbp - 0x5c], 0	      1006	linker.c	FUNCTION_17	WHILE_1
0x4000dfe	     0xf856efdffff	                           jne 0x4000b72	      1006	linker.c	FUNCTION_17	WHILE_1
0x4000e04	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1008	linker.c	FUNCTION_17	CALL_14
0x4000e08	          0x4889c7	                            mov rdi, rax	      1008	linker.c	FUNCTION_17	CALL_14
0x4000e0b	      0xe800000000	                          call 0x4000e10	      1008	linker.c	FUNCTION_17	CALL_14
0x4000e10	      0xb801000000	                              mov eax, 1	      1009	linker.c	FUNCTION_17
0x4000e15	            0xeb18	                           jmp 0x4000e2f	      1009	linker.c	FUNCTION_17
0x4000e17	              0x90	                                     nop	       948	linker.c	FUNCTION_17	DO_1	FOR_1	IF_7
0x4000e18	            0xeb04	                           jmp 0x4000e1e	       948	linker.c	FUNCTION_17	DO_1	FOR_1	IF_7
0x4000e1a	              0x90	                                     nop	       948	linker.c	FUNCTION_17	DO_1	FOR_1	IF_7
0x4000e1b	            0xeb01	                           jmp 0x4000e1e	       948	linker.c	FUNCTION_17	DO_1	FOR_1	IF_7
0x4000e1d	              0x90	                                     nop	       984	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4000e1e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1012	linker.c	FUNCTION_17	CALL_15
0x4000e22	          0x4889c7	                            mov rdi, rax	      1012	linker.c	FUNCTION_17	CALL_15
0x4000e25	      0xe800000000	                          call 0x4000e2a	      1012	linker.c	FUNCTION_17	CALL_15
0x4000e2a	      0xb800000000	                              mov eax, 0	      1013	linker.c	FUNCTION_17
0x4000e2f	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1014	linker.c	FUNCTION_17
0x4000e33	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1014	linker.c	FUNCTION_17
0x4000e3c	            0x7405	                            je 0x4000e43	      1014	linker.c	FUNCTION_17
0x4000e3e	      0xe800000000	                          call 0x4000e43	      1014	linker.c	FUNCTION_17
0x4000e43	              0xc9	                                   leave	      1014	linker.c	FUNCTION_17
0x4000e44	              0xc3	                                     ret	      1014	linker.c	FUNCTION_17
_bfd_generic_verify_endian_match	functions,0:IF,2:WHILE,0:SWITCH,0:CALL,6:ELSE,1:FOR,0:DO,0	57
0x4004a11	              0x55	                                push rbp	      3386	linker.c	FUNCTION_52
0x4004a12	          0x4889e5	                            mov rbp, rsp	      3386	linker.c	FUNCTION_52
0x4004a15	        0x4883ec20	                           sub rsp, 0x20	      3386	linker.c	FUNCTION_52
0x4004a19	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3386	linker.c	FUNCTION_52
0x4004a1d	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3386	linker.c	FUNCTION_52
0x4004a21	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3387	linker.c	FUNCTION_52
0x4004a25	        0x488b4050	            mov rax, qword [rax + 0x50] 	      3387	linker.c	FUNCTION_52
0x4004a29	        0x488945f8	                mov qword [rbp - 8], rax	      3387	linker.c	FUNCTION_52
0x4004a2d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3389	linker.c	FUNCTION_52	IF_1
0x4004a31	        0x488b4008	                mov rax, qword [rax + 8]	      3389	linker.c	FUNCTION_52	IF_1
0x4004a35	          0x8b500c	              mov edx, dword [rax + 0xc]	      3389	linker.c	FUNCTION_52	IF_1
0x4004a38	        0x488b45f8	                mov rax, qword [rbp - 8]	      3389	linker.c	FUNCTION_52	IF_1
0x4004a3c	        0x488b4008	                mov rax, qword [rax + 8]	      3389	linker.c	FUNCTION_52	IF_1
0x4004a40	          0x8b400c	              mov eax, dword [rax + 0xc]	      3389	linker.c	FUNCTION_52	IF_1
0x4004a43	            0x39c2	                            cmp edx, eax	      3389	linker.c	FUNCTION_52	IF_1
0x4004a45	     0xf848e000000	                            je 0x4004ad9	      3389	linker.c	FUNCTION_52	IF_1
0x4004a4b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3390	linker.c	FUNCTION_52	IF_1
0x4004a4f	        0x488b4008	                mov rax, qword [rax + 8]	      3390	linker.c	FUNCTION_52	IF_1
0x4004a53	          0x8b400c	              mov eax, dword [rax + 0xc]	      3390	linker.c	FUNCTION_52	IF_1
0x4004a56	          0x83f802	                              cmp eax, 2	      3390	linker.c	FUNCTION_52	IF_1
0x4004a59	            0x747e	                            je 0x4004ad9	      3390	linker.c	FUNCTION_52	IF_1
0x4004a5b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3391	linker.c	FUNCTION_52	IF_1
0x4004a5f	        0x488b4008	                mov rax, qword [rax + 8]	      3391	linker.c	FUNCTION_52	IF_1
0x4004a63	          0x8b400c	              mov eax, dword [rax + 0xc]	      3391	linker.c	FUNCTION_52	IF_1
0x4004a66	          0x83f802	                              cmp eax, 2	      3391	linker.c	FUNCTION_52	IF_1
0x4004a69	            0x746e	                            je 0x4004ad9	      3391	linker.c	FUNCTION_52	IF_1
0x4004a6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3393	linker.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x4004a6f	        0x488b4008	                mov rax, qword [rax + 8]	      3393	linker.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x4004a73	          0x8b400c	              mov eax, dword [rax + 0xc]	      3393	linker.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x4004a76	            0x85c0	                           test eax, eax	      3393	linker.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x4004a78	            0x7528	                           jne 0x4004aa2	      3393	linker.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x4004a7a	      0xbe00000000	                              mov esi, 0	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4004a7f	      0xbf00000000	                              mov edi, 0	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4004a84	      0xe800000000	                          call 0x4004a89	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4004a89	          0x4889c2	                            mov rdx, rax	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4004a8c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4004a90	          0x4889c6	                            mov rsi, rax	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4004a93	          0x4889d7	                            mov rdi, rdx	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4004a96	      0xb800000000	                              mov eax, 0	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4004a9b	      0xe800000000	                          call 0x4004aa0	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4004aa0	            0xeb26	                           jmp 0x4004ac8	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4004aa2	      0xbe00000000	                              mov esi, 0	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4004aa7	      0xbf00000000	                              mov edi, 0	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4004aac	      0xe800000000	                          call 0x4004ab1	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4004ab1	          0x4889c2	                            mov rdx, rax	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4004ab4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4004ab8	          0x4889c6	                            mov rsi, rax	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4004abb	          0x4889d7	                            mov rdi, rdx	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4004abe	      0xb800000000	                              mov eax, 0	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4004ac3	      0xe800000000	                          call 0x4004ac8	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4004ac8	      0xbf03000000	                              mov edi, 3	      3399	linker.c	FUNCTION_52	IF_1	CALL_6
0x4004acd	      0xe800000000	                          call 0x4004ad2	      3399	linker.c	FUNCTION_52	IF_1	CALL_6
0x4004ad2	      0xb800000000	                              mov eax, 0	      3400	linker.c	FUNCTION_52	IF_1
0x4004ad7	            0xeb05	                           jmp 0x4004ade	      3400	linker.c	FUNCTION_52	IF_1
0x4004ad9	      0xb801000000	                              mov eax, 1	      3403	linker.c	FUNCTION_52
0x4004ade	              0xc9	                                   leave	      3404	linker.c	FUNCTION_52
0x4004adf	              0xc3	                                     ret	      3404	linker.c	FUNCTION_52
bfd_section_already_linked_table_init	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	9
0x4003cd1	              0x55	                                push rbp	      2796	linker.c	FUNCTION_38
0x4003cd2	          0x4889e5	                            mov rbp, rsp	      2796	linker.c	FUNCTION_38
0x4003cd5	      0xb92a000000	                           mov ecx, 0x2a	      2797	linker.c	FUNCTION_38	CALL_1
0x4003cda	      0xba20000000	                           mov edx, 0x20	      2797	linker.c	FUNCTION_38	CALL_1
0x4003cdf	      0xbe00000000	                              mov esi, 0	      2797	linker.c	FUNCTION_38	CALL_1
0x4003ce4	      0xbf00000000	                              mov edi, 0	      2797	linker.c	FUNCTION_38	CALL_1
0x4003ce9	      0xe800000000	                          call 0x4003cee	      2797	linker.c	FUNCTION_38	CALL_1
0x4003cee	              0x5d	                                 pop rbp	      2801	linker.c	FUNCTION_38
0x4003cef	              0xc3	                                     ret	      2801	linker.c	FUNCTION_38
_bfd_nolink_bfd_get_relocated_section_contents	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	14
0x4004b19	              0x55	                                push rbp	      3430	linker.c	FUNCTION_55
0x4004b1a	          0x4889e5	                            mov rbp, rsp	      3430	linker.c	FUNCTION_55
0x4004b1d	        0x4883ec30	                           sub rsp, 0x30	      3430	linker.c	FUNCTION_55
0x4004b21	        0x48897df8	                mov qword [rbp - 8], rdi	      3430	linker.c	FUNCTION_55
0x4004b25	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3430	linker.c	FUNCTION_55
0x4004b29	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3430	linker.c	FUNCTION_55
0x4004b2d	        0x48894de0	             mov qword [rbp - 0x20], rcx	      3430	linker.c	FUNCTION_55
0x4004b31	        0x448945dc	             mov dword [rbp - 0x24], r8d	      3430	linker.c	FUNCTION_55
0x4004b35	        0x4c894dd0	              mov qword [rbp - 0x30], r9	      3430	linker.c	FUNCTION_55
0x4004b39	        0x488b45f8	                mov rax, qword [rbp - 8]	      3431	linker.c	FUNCTION_55	CALL_1
0x4004b3d	          0x4889c7	                            mov rdi, rax	      3431	linker.c	FUNCTION_55	CALL_1
0x4004b40	      0xe800000000	                          call 0x4004b45	      3431	linker.c	FUNCTION_55	CALL_1
0x4004b45	              0xc9	                                   leave	      3432	linker.c	FUNCTION_55
0x4004b46	              0xc3	                                     ret	      3432	linker.c	FUNCTION_55
bfd_find_version_for_sym	functions,0:IF,13:WHILE,2:SWITCH,0:CALL,2:ELSE,2:FOR,1:DO,0	150
0x4004742	              0x55	                                push rbp	      3197	linker.c	FUNCTION_48
0x4004743	          0x4889e5	                            mov rbp, rsp	      3197	linker.c	FUNCTION_48
0x4004746	        0x4883ec60	                           sub rsp, 0x60	      3197	linker.c	FUNCTION_48
0x400474a	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3197	linker.c	FUNCTION_48
0x400474e	        0x488975b0	             mov qword [rbp - 0x50], rsi	      3197	linker.c	FUNCTION_48
0x4004752	        0x488955a8	             mov qword [rbp - 0x58], rdx	      3197	linker.c	FUNCTION_48
0x4004756	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      3202	linker.c	FUNCTION_48
0x400475e	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      3203	linker.c	FUNCTION_48
0x4004766	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      3204	linker.c	FUNCTION_48
0x400476e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      3205	linker.c	FUNCTION_48
0x4004776	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      3206	linker.c	FUNCTION_48
0x400477e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3207	linker.c	FUNCTION_48	FOR_1
0x4004782	        0x488945c0	             mov qword [rbp - 0x40], rax	      3207	linker.c	FUNCTION_48	FOR_1
0x4004786	      0xe977010000	                           jmp 0x4004902	      3207	linker.c	FUNCTION_48	FOR_1
0x400478b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x400478f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x4004793	          0x4885c0	                           test rax, rax	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x4004796	     0xf84b2000000	                            je 0x400484e	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x400479c	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      3211	linker.c	FUNCTION_48	FOR_1	IF_1
0x40047a4	            0xeb6e	                           jmp 0x4004814	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x40047a6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40047aa	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40047ae	          0x83e001	                              and eax, 1	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40047b1	            0x84c0	                             test al, al	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40047b3	            0x7519	                           jne 0x40047ce	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40047b5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40047b9	        0x488b4008	                mov rax, qword [rax + 8]	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40047bd	      0xbe00000000	                              mov esi, 0	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40047c2	          0x4889c7	                            mov rdi, rax	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40047c5	      0xe800000000	                          call 0x40047ca	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40047ca	            0x85c0	                           test eax, eax	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40047cc	            0x740a	                            je 0x40047d8	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40047ce	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3216	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2
0x40047d2	        0x488945d0	             mov qword [rbp - 0x30], rax	      3216	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2
0x40047d6	            0xeb08	                           jmp 0x40047e0	      3216	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2
0x40047d8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3218	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	ELSE_1
0x40047dc	        0x488945e8	             mov qword [rbp - 0x18], rax	      3218	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	ELSE_1
0x40047e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3219	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_3
0x40047e4	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      3219	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_3
0x40047e8	          0x83e002	                              and eax, 2	      3219	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_3
0x40047eb	            0x84c0	                             test al, al	      3219	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_3
0x40047ed	            0x7408	                            je 0x40047f7	      3219	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_3
0x40047ef	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3220	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_3
0x40047f3	        0x488945d8	             mov qword [rbp - 0x28], rax	      3220	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_3
0x40047f7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3221	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x40047fb	         0xfb65010	           movzx edx, byte [rax + 0x10] 	      3221	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x40047ff	          0x83ca04	                               or edx, 4	      3221	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004802	          0x885010	               mov byte [rax + 0x10], dl	      3221	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004805	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3224	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_4
0x4004809	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      3224	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_4
0x400480d	          0x83e001	                              and eax, 1	      3224	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_4
0x4004810	            0x84c0	                             test al, al	      3224	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_4
0x4004812	            0x752e	                           jne 0x4004842	      3224	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_4
0x4004814	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004818	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x400481c	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004820	        0x488d7a18	                   lea rdi, [rdx + 0x18]	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004824	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004828	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x400482c	          0x4889ce	                            mov rsi, rcx	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x400482f	            0xffd0	                                call rax	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004831	        0x488945f0	             mov qword [rbp - 0x10], rax	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004835	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x400483a	     0xf8566ffffff	                           jne 0x40047a6	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004840	            0xeb01	                           jmp 0x4004843	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004842	              0x90	                                     nop	      3225	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_4
0x4004843	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3228	linker.c	FUNCTION_48	FOR_1	IF_1	IF_5
0x4004848	     0xf85c1000000	                           jne 0x400490f	      3228	linker.c	FUNCTION_48	FOR_1	IF_1	IF_5
0x400484e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3232	linker.c	FUNCTION_48	FOR_1	IF_6
0x4004852	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3232	linker.c	FUNCTION_48	FOR_1	IF_6
0x4004856	          0x4885c0	                           test rax, rax	      3232	linker.c	FUNCTION_48	FOR_1	IF_6
0x4004859	     0xf8498000000	                            je 0x40048f7	      3232	linker.c	FUNCTION_48	FOR_1	IF_6
0x400485f	    0x48c745f80000	                  mov qword [rbp - 8], 0	      3234	linker.c	FUNCTION_48	FOR_1	IF_6
0x4004867	            0xeb5b	                           jmp 0x40048c4	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x4004869	        0x488b45f8	                mov rax, qword [rbp - 8]	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x400486d	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004871	          0x83e001	                              and eax, 1	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004874	            0x84c0	                             test al, al	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004876	            0x7519	                           jne 0x4004891	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004878	        0x488b45f8	                mov rax, qword [rbp - 8]	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x400487c	        0x488b4008	                mov rax, qword [rax + 8]	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004880	      0xbe00000000	                              mov esi, 0	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004885	          0x4889c7	                            mov rdi, rax	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004888	      0xe800000000	                          call 0x400488d	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x400488d	            0x85c0	                           test eax, eax	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x400488f	            0x740a	                            je 0x400489b	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004891	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3239	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7
0x4004895	        0x488945c8	             mov qword [rbp - 0x38], rax	      3239	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7
0x4004899	            0xeb08	                           jmp 0x40048a3	      3239	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7
0x400489b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3241	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	ELSE_2
0x400489f	        0x488945e0	             mov qword [rbp - 0x20], rax	      3241	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	ELSE_2
0x40048a3	        0x488b45f8	                mov rax, qword [rbp - 8]	      3244	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	ELSE_2	IF_8
0x40048a7	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      3244	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	ELSE_2	IF_8
0x40048ab	          0x83e001	                              and eax, 1	      3244	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	ELSE_2	IF_8
0x40048ae	            0x84c0	                             test al, al	      3244	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	ELSE_2	IF_8
0x40048b0	            0x7412	                            je 0x40048c4	      3244	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	ELSE_2	IF_8
0x40048b2	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      3247	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	ELSE_2	IF_8
0x40048ba	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      3248	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	ELSE_2	IF_8
0x40048c2	            0xeb2c	                           jmp 0x40048f0	      3249	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	ELSE_2	IF_8
0x40048c4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x40048c8	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x40048cc	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x40048d0	        0x488d7a38	                   lea rdi, [rdx + 0x38]	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x40048d4	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x40048d8	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x40048dc	          0x4889ce	                            mov rsi, rcx	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x40048df	            0xffd0	                                call rax	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x40048e1	        0x488945f8	                mov qword [rbp - 8], rax	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x40048e5	      0x48837df800	                  cmp qword [rbp - 8], 0	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x40048ea	     0xf8579ffffff	                           jne 0x4004869	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x40048f0	      0x48837df800	                  cmp qword [rbp - 8], 0	      3253	linker.c	FUNCTION_48	FOR_1	IF_6	IF_9
0x40048f5	            0x751b	                           jne 0x4004912	      3253	linker.c	FUNCTION_48	FOR_1	IF_6	IF_9
0x40048f7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3207	linker.c	FUNCTION_48	FOR_1
0x40048fb	          0x488b00	                    mov rax, qword [rax]	      3207	linker.c	FUNCTION_48	FOR_1
0x40048fe	        0x488945c0	             mov qword [rbp - 0x40], rax	      3207	linker.c	FUNCTION_48	FOR_1
0x4004902	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      3207	linker.c	FUNCTION_48	FOR_1
0x4004907	     0xf857efeffff	                           jne 0x400478b	      3207	linker.c	FUNCTION_48	FOR_1
0x400490d	            0xeb04	                           jmp 0x4004913	      3207	linker.c	FUNCTION_48	FOR_1
0x400490f	              0x90	                                     nop	      3229	linker.c	FUNCTION_48	FOR_1	IF_1	IF_5
0x4004910	            0xeb01	                           jmp 0x4004913	      3229	linker.c	FUNCTION_48	FOR_1	IF_1	IF_5
0x4004912	              0x90	                                     nop	      3254	linker.c	FUNCTION_48	FOR_1	IF_6	IF_9
0x4004913	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      3258	linker.c	FUNCTION_48	IF_10
0x4004918	            0x750f	                           jne 0x4004929	      3258	linker.c	FUNCTION_48	IF_10
0x400491a	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      3258	linker.c	FUNCTION_48	IF_10
0x400491f	            0x7508	                           jne 0x4004929	      3258	linker.c	FUNCTION_48	IF_10
0x4004921	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3259	linker.c	FUNCTION_48	IF_10
0x4004925	        0x488945d0	             mov qword [rbp - 0x30], rax	      3259	linker.c	FUNCTION_48	IF_10
0x4004929	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      3261	linker.c	FUNCTION_48	IF_11
0x400492e	            0x741a	                            je 0x400494a	      3261	linker.c	FUNCTION_48	IF_11
0x4004930	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3267	linker.c	FUNCTION_48	IF_11
0x4004934	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      3267	linker.c	FUNCTION_48	IF_11
0x4004938	           0xf94c0	                                 sete al	      3267	linker.c	FUNCTION_48	IF_11
0x400493b	           0xfb6d0	                           movzx edx, al	      3267	linker.c	FUNCTION_48	IF_11
0x400493e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3267	linker.c	FUNCTION_48	IF_11
0x4004942	            0x8910	                    mov dword [rax], edx	      3267	linker.c	FUNCTION_48	IF_11
0x4004944	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3268	linker.c	FUNCTION_48	IF_11
0x4004948	            0xeb2b	                           jmp 0x4004975	      3268	linker.c	FUNCTION_48	IF_11
0x400494a	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      3271	linker.c	FUNCTION_48	IF_12
0x400494f	            0x7508	                           jne 0x4004959	      3271	linker.c	FUNCTION_48	IF_12
0x4004951	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3272	linker.c	FUNCTION_48	IF_12
0x4004955	        0x488945c8	             mov qword [rbp - 0x38], rax	      3272	linker.c	FUNCTION_48	IF_12
0x4004959	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      3274	linker.c	FUNCTION_48	IF_13
0x400495e	            0x7410	                            je 0x4004970	      3274	linker.c	FUNCTION_48	IF_13
0x4004960	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3276	linker.c	FUNCTION_48	IF_13
0x4004964	    0xc70001000000	                      mov dword [rax], 1	      3276	linker.c	FUNCTION_48	IF_13
0x400496a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3277	linker.c	FUNCTION_48	IF_13
0x400496e	            0xeb05	                           jmp 0x4004975	      3277	linker.c	FUNCTION_48	IF_13
0x4004970	      0xb800000000	                              mov eax, 0	      3280	linker.c	FUNCTION_48
0x4004975	              0xc9	                                   leave	      3281	linker.c	FUNCTION_48
0x4004976	              0xc3	                                     ret	      3281	linker.c	FUNCTION_48
_bfd_generic_link_add_symbols	functions,0:IF,0:WHILE,0:SWITCH,1:CALL,4:ELSE,0:FOR,0:DO,0	35
0x40009f2	              0x55	                                push rbp	       841	linker.c	FUNCTION_15
0x40009f3	          0x4889e5	                            mov rbp, rsp	       841	linker.c	FUNCTION_15
0x40009f6	        0x4883ec20	                           sub rsp, 0x20	       841	linker.c	FUNCTION_15
0x40009fa	        0x48897de8	             mov qword [rbp - 0x18], rdi	       841	linker.c	FUNCTION_15
0x40009fe	        0x488975e0	             mov qword [rbp - 0x20], rsi	       841	linker.c	FUNCTION_15
0x4000a02	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4000a06	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4000a0a	          0x83e007	                              and eax, 7	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4000a0d	           0xfb6c0	                           movzx eax, al	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4000a10	          0x83f801	                              cmp eax, 1	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4000a13	            0x7407	                            je 0x4000a1c	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4000a15	          0x83f802	                              cmp eax, 2	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4000a18	            0x741a	                            je 0x4000a34	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4000a1a	            0xeb35	                           jmp 0x4000a51	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4000a1c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       847	linker.c	FUNCTION_15	SWITCH_1	CALL_2
0x4000a20	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       847	linker.c	FUNCTION_15	SWITCH_1	CALL_2
0x4000a24	          0x4889d6	                            mov rsi, rdx	       847	linker.c	FUNCTION_15	SWITCH_1	CALL_2
0x4000a27	          0x4889c7	                            mov rdi, rax	       847	linker.c	FUNCTION_15	SWITCH_1	CALL_2
0x4000a2a	      0xe838000000	call sym.generic_link_add_object_symbols	       847	linker.c	FUNCTION_15	SWITCH_1	CALL_2
0x4000a2f	          0x8945fc	                mov dword [rbp - 4], eax	       847	linker.c	FUNCTION_15	SWITCH_1	CALL_2
0x4000a32	            0xeb2e	                           jmp 0x4000a62	       848	linker.c	FUNCTION_15	SWITCH_1
0x4000a34	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       850	linker.c	FUNCTION_15	SWITCH_1	CALL_3
0x4000a38	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       850	linker.c	FUNCTION_15	SWITCH_1	CALL_3
0x4000a3c	      0xba00000000	                              mov edx, 0	       850	linker.c	FUNCTION_15	SWITCH_1	CALL_3
0x4000a41	          0x4889ce	                            mov rsi, rcx	       850	linker.c	FUNCTION_15	SWITCH_1	CALL_3
0x4000a44	          0x4889c7	                            mov rdi, rax	       850	linker.c	FUNCTION_15	SWITCH_1	CALL_3
0x4000a47	      0xe800000000	                          call 0x4000a4c	       850	linker.c	FUNCTION_15	SWITCH_1	CALL_3
0x4000a4c	          0x8945fc	                mov dword [rbp - 4], eax	       850	linker.c	FUNCTION_15	SWITCH_1	CALL_3
0x4000a4f	            0xeb11	                           jmp 0x4000a62	       852	linker.c	FUNCTION_15	SWITCH_1
0x4000a51	      0xbf03000000	                              mov edi, 3	       854	linker.c	FUNCTION_15	SWITCH_1	CALL_4
0x4000a56	      0xe800000000	                          call 0x4000a5b	       854	linker.c	FUNCTION_15	SWITCH_1	CALL_4
0x4000a5b	    0xc745fc000000	                  mov dword [rbp - 4], 0	       855	linker.c	FUNCTION_15	SWITCH_1
0x4000a62	          0x8b45fc	                mov eax, dword [rbp - 4]	       858	linker.c	FUNCTION_15
0x4000a65	              0xc9	                                   leave	       859	linker.c	FUNCTION_15
0x4000a66	              0xc3	                                     ret	       859	linker.c	FUNCTION_15
_bfd_nolink_bfd_link_split_section	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	10
0x4004be8	              0x55	                                push rbp	      3478	linker.c	FUNCTION_62
0x4004be9	          0x4889e5	                            mov rbp, rsp	      3478	linker.c	FUNCTION_62
0x4004bec	        0x4883ec10	                           sub rsp, 0x10	      3478	linker.c	FUNCTION_62
0x4004bf0	        0x48897df8	                mov qword [rbp - 8], rdi	      3478	linker.c	FUNCTION_62
0x4004bf4	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3478	linker.c	FUNCTION_62
0x4004bf8	        0x488b45f8	                mov rax, qword [rbp - 8]	      3479	linker.c	FUNCTION_62	CALL_1
0x4004bfc	          0x4889c7	                            mov rdi, rax	      3479	linker.c	FUNCTION_62	CALL_1
0x4004bff	      0xe800000000	                          call 0x4004c04	      3479	linker.c	FUNCTION_62	CALL_1
0x4004c04	              0xc9	                                   leave	      3480	linker.c	FUNCTION_62
0x4004c05	              0xc3	                                     ret	      3480	linker.c	FUNCTION_62
_bfd_generic_link_write_global_symbol	functions,0:IF,5:WHILE,0:SWITCH,0:CALL,5:ELSE,1:FOR,0:DO,0	95
0x4002f5e	              0x55	                                push rbp	      2266	linker.c	FUNCTION_26
0x4002f5f	          0x4889e5	                            mov rbp, rsp	      2266	linker.c	FUNCTION_26
0x4002f62	        0x4883ec20	                           sub rsp, 0x20	      2266	linker.c	FUNCTION_26
0x4002f66	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2266	linker.c	FUNCTION_26
0x4002f6a	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2266	linker.c	FUNCTION_26
0x4002f6e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2267	linker.c	FUNCTION_26
0x4002f72	        0x488945f8	                mov qword [rbp - 8], rax	      2267	linker.c	FUNCTION_26
0x4002f76	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2271	linker.c	FUNCTION_26	IF_1
0x4002f7a	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2271	linker.c	FUNCTION_26	IF_1
0x4002f7d	            0x85c0	                           test eax, eax	      2271	linker.c	FUNCTION_26	IF_1
0x4002f7f	            0x740a	                            je 0x4002f8b	      2271	linker.c	FUNCTION_26	IF_1
0x4002f81	      0xb801000000	                              mov eax, 1	      2272	linker.c	FUNCTION_26	IF_1
0x4002f86	      0xe92d010000	                           jmp 0x40030b8	      2272	linker.c	FUNCTION_26	IF_1
0x4002f8b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2274	linker.c	FUNCTION_26
0x4002f8f	    0xc74038010000	               mov dword [rax + 0x38], 1	      2274	linker.c	FUNCTION_26
0x4002f96	        0x488b45f8	                mov rax, qword [rbp - 8]	      2276	linker.c	FUNCTION_26	IF_2
0x4002f9a	          0x488b00	                    mov rax, qword [rax]	      2276	linker.c	FUNCTION_26	IF_2
0x4002f9d	         0xfb64001	               movzx eax, byte [rax + 1]	      2276	linker.c	FUNCTION_26	IF_2
0x4002fa1	          0x83e060	                           and eax, 0x60	      2276	linker.c	FUNCTION_26	IF_2
0x4002fa4	            0x3c60	                            cmp al, 0x60	      2276	linker.c	FUNCTION_26	IF_2
0x4002fa6	            0x743c	                            je 0x4002fe4	      2276	linker.c	FUNCTION_26	IF_2
0x4002fa8	        0x488b45f8	                mov rax, qword [rbp - 8]	      2277	linker.c	FUNCTION_26	IF_2
0x4002fac	          0x488b00	                    mov rax, qword [rax]	      2277	linker.c	FUNCTION_26	IF_2
0x4002faf	         0xfb64001	               movzx eax, byte [rax + 1]	      2277	linker.c	FUNCTION_26	IF_2
0x4002fb3	          0x83e060	                           and eax, 0x60	      2277	linker.c	FUNCTION_26	IF_2
0x4002fb6	            0x3c40	                            cmp al, 0x40	      2277	linker.c	FUNCTION_26	IF_2
0x4002fb8	            0x7534	                           jne 0x4002fee	      2277	linker.c	FUNCTION_26	IF_2
0x4002fba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x4002fbe	        0x488b7008	                mov rsi, qword [rax + 8]	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x4002fc2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x4002fc6	          0x488b00	                    mov rax, qword [rax]	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x4002fc9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x4002fcd	      0xb900000000	                              mov ecx, 0	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x4002fd2	      0xba00000000	                              mov edx, 0	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x4002fd7	          0x4889c7	                            mov rdi, rax	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x4002fda	      0xe800000000	                          call 0x4002fdf	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x4002fdf	          0x4885c0	                           test rax, rax	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x4002fe2	            0x750a	                           jne 0x4002fee	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x4002fe4	      0xb801000000	                              mov eax, 1	      2280	linker.c	FUNCTION_26	IF_2
0x4002fe9	      0xe9ca000000	                           jmp 0x40030b8	      2280	linker.c	FUNCTION_26	IF_2
0x4002fee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2282	linker.c	FUNCTION_26	IF_3
0x4002ff2	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2282	linker.c	FUNCTION_26	IF_3
0x4002ff6	          0x4885c0	                           test rax, rax	      2282	linker.c	FUNCTION_26	IF_3
0x4002ff9	            0x740e	                            je 0x4003009	      2282	linker.c	FUNCTION_26	IF_3
0x4002ffb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2283	linker.c	FUNCTION_26	IF_3
0x4002fff	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2283	linker.c	FUNCTION_26	IF_3
0x4003003	        0x488945f0	             mov qword [rbp - 0x10], rax	      2283	linker.c	FUNCTION_26	IF_3
0x4003007	            0xeb4d	                           jmp 0x4003056	      2283	linker.c	FUNCTION_26	IF_3
0x4003009	        0x488b45f8	                mov rax, qword [rbp - 8]	      2286	linker.c	FUNCTION_26	ELSE_1	CALL_2
0x400300d	        0x488b4008	                mov rax, qword [rax + 8]	      2286	linker.c	FUNCTION_26	ELSE_1	CALL_2
0x4003011	        0x488b4008	                mov rax, qword [rax + 8]	      2286	linker.c	FUNCTION_26	ELSE_1	CALL_2
0x4003015	    0x488b80000200	           mov rax, qword [rax + 0x200] 	      2286	linker.c	FUNCTION_26	ELSE_1	CALL_2
0x400301c	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2286	linker.c	FUNCTION_26	ELSE_1	CALL_2
0x4003020	        0x488b5208	                mov rdx, qword [rdx + 8]	      2286	linker.c	FUNCTION_26	ELSE_1	CALL_2
0x4003024	          0x4889d7	                            mov rdi, rdx	      2286	linker.c	FUNCTION_26	ELSE_1	CALL_2
0x4003027	            0xffd0	                                call rax	      2286	linker.c	FUNCTION_26	ELSE_1	CALL_2
0x4003029	        0x488945f0	             mov qword [rbp - 0x10], rax	      2286	linker.c	FUNCTION_26	ELSE_1	CALL_2
0x400302d	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2287	linker.c	FUNCTION_26	ELSE_1	IF_4
0x4003032	            0x7507	                           jne 0x400303b	      2287	linker.c	FUNCTION_26	ELSE_1	IF_4
0x4003034	      0xb800000000	                              mov eax, 0	      2288	linker.c	FUNCTION_26	ELSE_1	IF_4
0x4003039	            0xeb7d	                           jmp 0x40030b8	      2288	linker.c	FUNCTION_26	ELSE_1	IF_4
0x400303b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2289	linker.c	FUNCTION_26	ELSE_1
0x400303f	        0x488b5008	                mov rdx, qword [rax + 8]	      2289	linker.c	FUNCTION_26	ELSE_1
0x4003043	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2289	linker.c	FUNCTION_26	ELSE_1
0x4003047	        0x48895008	                mov qword [rax + 8], rdx	      2289	linker.c	FUNCTION_26	ELSE_1
0x400304b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2290	linker.c	FUNCTION_26	ELSE_1
0x400304f	    0xc74018000000	               mov dword [rax + 0x18], 0	      2290	linker.c	FUNCTION_26	ELSE_1
0x4003056	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2293	linker.c	FUNCTION_26	CALL_3
0x400305a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2293	linker.c	FUNCTION_26	CALL_3
0x400305e	          0x4889d6	                            mov rsi, rdx	      2293	linker.c	FUNCTION_26	CALL_3
0x4003061	          0x4889c7	                            mov rdi, rax	      2293	linker.c	FUNCTION_26	CALL_3
0x4003064	      0xe835fdffff	           call sym.set_symbol_from_hash	      2293	linker.c	FUNCTION_26	CALL_3
0x4003069	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2295	linker.c	FUNCTION_26
0x400306d	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2295	linker.c	FUNCTION_26
0x4003070	          0x83c802	                               or eax, 2	      2295	linker.c	FUNCTION_26
0x4003073	            0x89c2	                            mov edx, eax	      2295	linker.c	FUNCTION_26
0x4003075	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2295	linker.c	FUNCTION_26
0x4003079	          0x895018	             mov dword [rax + 0x18], edx	      2295	linker.c	FUNCTION_26
0x400307c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2297	linker.c	FUNCTION_26	IF_5	CALL_4
0x4003080	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      2297	linker.c	FUNCTION_26	IF_5	CALL_4
0x4003084	        0x488b45f8	                mov rax, qword [rbp - 8]	      2297	linker.c	FUNCTION_26	IF_5	CALL_4
0x4003088	        0x488b4008	                mov rax, qword [rax + 8]	      2297	linker.c	FUNCTION_26	IF_5	CALL_4
0x400308c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2297	linker.c	FUNCTION_26	IF_5	CALL_4
0x4003090	          0x4889ce	                            mov rsi, rcx	      2297	linker.c	FUNCTION_26	IF_5	CALL_4
0x4003093	          0x4889c7	                            mov rdi, rax	      2297	linker.c	FUNCTION_26	IF_5	CALL_4
0x4003096	      0xe821f5ffff	      call sym.generic_add_output_symbol	      2297	linker.c	FUNCTION_26	IF_5	CALL_4
0x400309b	            0x85c0	                           test eax, eax	      2297	linker.c	FUNCTION_26	IF_5	CALL_4
0x400309d	            0x7514	                           jne 0x40030b3	      2297	linker.c	FUNCTION_26	IF_5	CALL_4
0x400309f	      0xba00000000	                              mov edx, 0	      2301	linker.c	FUNCTION_26	IF_5	CALL_5
0x40030a4	      0xbefd080000	                          mov esi, 0x8fd	      2301	linker.c	FUNCTION_26	IF_5	CALL_5
0x40030a9	      0xbf00000000	                              mov edi, 0	      2301	linker.c	FUNCTION_26	IF_5	CALL_5
0x40030ae	      0xe800000000	                          call 0x40030b3	      2301	linker.c	FUNCTION_26	IF_5	CALL_5
0x40030b3	      0xb801000000	                              mov eax, 1	      2304	linker.c	FUNCTION_26
0x40030b8	              0xc9	                                   leave	      2305	linker.c	FUNCTION_26
0x40030b9	              0xc3	                                     ret	      2305	linker.c	FUNCTION_26
_bfd_generic_link_hash_newfunc	functions,0:IF,3:WHILE,0:SWITCH,0:CALL,2:ELSE,0:FOR,0:DO,0	35
0x4000757	              0x55	                                push rbp	       722	linker.c	ELSE_2	FUNCTION_9
0x4000758	          0x4889e5	                            mov rbp, rsp	       722	linker.c	ELSE_2	FUNCTION_9
0x400075b	        0x4883ec30	                           sub rsp, 0x30	       722	linker.c	ELSE_2	FUNCTION_9
0x400075f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       722	linker.c	ELSE_2	FUNCTION_9
0x4000763	        0x488975e0	             mov qword [rbp - 0x20], rsi	       722	linker.c	ELSE_2	FUNCTION_9
0x4000767	        0x488955d8	             mov qword [rbp - 0x28], rdx	       722	linker.c	ELSE_2	FUNCTION_9
0x400076b	      0x48837de800	               cmp qword [rbp - 0x18], 0	       725	linker.c	ELSE_2	FUNCTION_9	IF_1
0x4000770	            0x7522	                           jne 0x4000794	       725	linker.c	ELSE_2	FUNCTION_9	IF_1
0x4000772	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x4000776	      0xbe48000000	                           mov esi, 0x48	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x400077b	          0x4889c7	                            mov rdi, rax	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x400077e	      0xe800000000	                          call 0x4000783	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x4000783	        0x488945e8	             mov qword [rbp - 0x18], rax	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x4000787	      0x48837de800	               cmp qword [rbp - 0x18], 0	       729	linker.c	ELSE_2	FUNCTION_9	IF_1	IF_2
0x400078c	            0x7506	                           jne 0x4000794	       729	linker.c	ELSE_2	FUNCTION_9	IF_1	IF_2
0x400078e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       730	linker.c	ELSE_2	FUNCTION_9	IF_1	IF_2
0x4000792	            0xeb45	                           jmp 0x40007d9	       730	linker.c	ELSE_2	FUNCTION_9	IF_1	IF_2
0x4000794	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       734	linker.c	ELSE_2	FUNCTION_9	CALL_2
0x4000798	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       734	linker.c	ELSE_2	FUNCTION_9	CALL_2
0x400079c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       734	linker.c	ELSE_2	FUNCTION_9	CALL_2
0x40007a0	          0x4889ce	                            mov rsi, rcx	       734	linker.c	ELSE_2	FUNCTION_9	CALL_2
0x40007a3	          0x4889c7	                            mov rdi, rax	       734	linker.c	ELSE_2	FUNCTION_9	CALL_2
0x40007a6	      0xe800000000	                          call 0x40007ab	       734	linker.c	ELSE_2	FUNCTION_9	CALL_2
0x40007ab	        0x488945e8	             mov qword [rbp - 0x18], rax	       734	linker.c	ELSE_2	FUNCTION_9	CALL_2
0x40007af	      0x48837de800	               cmp qword [rbp - 0x18], 0	       735	linker.c	ELSE_2	FUNCTION_9	IF_3
0x40007b4	            0x741f	                            je 0x40007d5	       735	linker.c	ELSE_2	FUNCTION_9	IF_3
0x40007b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       740	linker.c	ELSE_2	FUNCTION_9	IF_3
0x40007ba	        0x488945f8	                mov qword [rbp - 8], rax	       740	linker.c	ELSE_2	FUNCTION_9	IF_3
0x40007be	        0x488b45f8	                mov rax, qword [rbp - 8]	       741	linker.c	ELSE_2	FUNCTION_9	IF_3
0x40007c2	    0xc74038000000	               mov dword [rax + 0x38], 0	       741	linker.c	ELSE_2	FUNCTION_9	IF_3
0x40007c9	        0x488b45f8	                mov rax, qword [rbp - 8]	       742	linker.c	ELSE_2	FUNCTION_9	IF_3
0x40007cd	    0x48c740400000	               mov qword [rax + 0x40], 0	       742	linker.c	ELSE_2	FUNCTION_9	IF_3
0x40007d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       745	linker.c	ELSE_2	FUNCTION_9
0x40007d9	              0xc9	                                   leave	       746	linker.c	ELSE_2	FUNCTION_9
0x40007da	              0xc3	                                     ret	       746	linker.c	ELSE_2	FUNCTION_9
generic_link_add_symbol_list	functions,0:IF,8:WHILE,0:SWITCH,0:CALL,20:ELSE,1:FOR,1:DO,0	171
0x4001154	              0x55	                                push rbp	      1138	linker.c	FUNCTION_19
0x4001155	          0x4889e5	                            mov rbp, rsp	      1138	linker.c	FUNCTION_19
0x4001158	        0x4883ec60	                           sub rsp, 0x60	      1138	linker.c	FUNCTION_19
0x400115c	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1138	linker.c	FUNCTION_19
0x4001160	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1138	linker.c	FUNCTION_19
0x4001164	        0x488955a8	             mov qword [rbp - 0x58], rdx	      1138	linker.c	FUNCTION_19
0x4001168	        0x48894da0	             mov qword [rbp - 0x60], rcx	      1138	linker.c	FUNCTION_19
0x400116c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1138	linker.c	FUNCTION_19
0x4001175	        0x488945f8	                mov qword [rbp - 8], rax	      1138	linker.c	FUNCTION_19
0x4001179	            0x31c0	                            xor eax, eax	      1138	linker.c	FUNCTION_19
0x400117b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1141	linker.c	FUNCTION_19
0x400117f	        0x488945c8	             mov qword [rbp - 0x38], rax	      1141	linker.c	FUNCTION_19
0x4001183	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1142	linker.c	FUNCTION_19
0x4001187	    0x488d14c50000	                        lea rdx, [rax*8]	      1142	linker.c	FUNCTION_19
0x400118f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1142	linker.c	FUNCTION_19
0x4001193	          0x4801d0	                            add rax, rdx	      1142	linker.c	FUNCTION_19
0x4001196	        0x488945e0	             mov qword [rbp - 0x20], rax	      1142	linker.c	FUNCTION_19
0x400119a	      0xe90c020000	                           jmp 0x40013ab	      1143	linker.c	FUNCTION_19	FOR_1
0x400119f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1147	linker.c	FUNCTION_19	FOR_1
0x40011a3	          0x488b00	                    mov rax, qword [rax]	      1147	linker.c	FUNCTION_19	FOR_1
0x40011a6	        0x488945e8	             mov qword [rbp - 0x18], rax	      1147	linker.c	FUNCTION_19	FOR_1
0x40011aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1149	linker.c	FUNCTION_19	FOR_1	IF_1
0x40011ae	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1149	linker.c	FUNCTION_19	FOR_1	IF_1
0x40011b1	      0x2582380000	                         and eax, 0x3882	      1149	linker.c	FUNCTION_19	FOR_1	IF_1
0x40011b6	            0x85c0	                           test eax, eax	      1149	linker.c	FUNCTION_19	FOR_1	IF_1
0x40011b8	            0x7538	                           jne 0x40011f2	      1149	linker.c	FUNCTION_19	FOR_1	IF_1
0x40011ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1154	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_2
0x40011be	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1154	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_2
0x40011c2	    0x483d00000000	                              cmp rax, 0	      1154	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_2
0x40011c8	            0x7428	                            je 0x40011f2	      1154	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_2
0x40011ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1155	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_4
0x40011ce	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1155	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_4
0x40011d2	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1155	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_4
0x40011d5	      0x2500100000	                         and eax, 0x1000	      1155	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_4
0x40011da	            0x85c0	                           test eax, eax	      1155	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_4
0x40011dc	            0x7514	                           jne 0x40011f2	      1155	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_4
0x40011de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1156	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_6
0x40011e2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1156	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_6
0x40011e6	    0x483d00000000	                              cmp rax, 0	      1156	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_6
0x40011ec	     0xf85b4010000	                           jne 0x40013a6	      1156	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_6
0x40011f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x40011f6	        0x488b4008	                mov rax, qword [rax + 8]	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x40011fa	        0x488945d0	             mov qword [rbp - 0x30], rax	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x40011fe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x4001202	        0x488945d8	             mov qword [rbp - 0x28], rax	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x4001206	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x400120a	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x400120d	      0x2500200000	                         and eax, 0x2000	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001212	            0x85c0	                           test eax, eax	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001214	            0x7510	                           jne 0x4001226	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001216	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1165	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_8
0x400121a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1165	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_8
0x400121e	    0x483d00000000	                              cmp rax, 0	      1165	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_8
0x4001224	            0x7524	                           jne 0x400124a	      1165	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_8
0x4001226	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x400122a	        0x4883c008	                              add rax, 8	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x400122e	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001232	            0x7316	                           jae 0x400124a	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001234	      0x488345c808	               add qword [rbp - 0x38], 8	      1168	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001239	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1169	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_9
0x400123d	          0x488b00	                    mov rax, qword [rax]	      1169	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_9
0x4001240	        0x488b4008	                mov rax, qword [rax + 8]	      1169	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_9
0x4001244	        0x488945d8	             mov qword [rbp - 0x28], rax	      1169	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_9
0x4001248	            0xeb32	                           jmp 0x400127c	      1169	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_9
0x400124a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1171	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x400124e	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1171	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001251	      0x2500100000	                         and eax, 0x1000	      1171	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001256	            0x85c0	                           test eax, eax	      1171	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001258	            0x7422	                            je 0x400127c	      1171	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x400125a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x400125e	        0x4883c008	                              add rax, 8	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001262	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001266	            0x7314	                           jae 0x400127c	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001268	      0x488345c808	               add qword [rbp - 0x38], 8	      1176	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x400126d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1177	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3	CALL_10
0x4001271	          0x488b00	                    mov rax, qword [rax]	      1177	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3	CALL_10
0x4001274	        0x488b4008	                mov rax, qword [rax + 8]	      1177	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3	CALL_10
0x4001278	        0x488945d0	             mov qword [rbp - 0x30], rax	      1177	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3	CALL_10
0x400127c	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1180	linker.c	FUNCTION_19	FOR_1	IF_1
0x4001284	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001288	        0x4c8b4810	              mov r9, qword [rax + 0x10]	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x400128c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1182	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_12
0x4001290	        0x4c8b4020	              mov r8, qword [rax + 0x20]	      1182	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_12
0x4001294	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001298	          0x8b4818	            mov ecx, dword [rax + 0x18] 	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x400129b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x400129f	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x40012a3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x40012a7	        0x488d7dc0	                   lea rdi, [rbp - 0x40]	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x40012ab	              0x57	                                push rdi	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x40012ac	            0x6a00	                                  push 0	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x40012ae	            0x6a00	                                  push 0	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x40012b0	          0xff75d8	                 push qword [rbp - 0x28]	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x40012b3	          0x4889c7	                            mov rdi, rax	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x40012b6	      0xe800000000	                          call 0x40012bb	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x40012bb	        0x4883c420	                           add rsp, 0x20	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x40012bf	            0x85c0	                           test eax, eax	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x40012c1	            0x750a	                           jne 0x40012cd	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x40012c3	      0xb800000000	                              mov eax, 0	      1184	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4
0x40012c8	      0xe9f1000000	                           jmp 0x40013be	      1184	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4
0x40012cd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1185	linker.c	FUNCTION_19	FOR_1	IF_1
0x40012d1	        0x488945f0	             mov qword [rbp - 0x10], rax	      1185	linker.c	FUNCTION_19	FOR_1	IF_1
0x40012d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1191	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x40012d9	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1191	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x40012dc	      0x2500080000	                          and eax, 0x800	      1191	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x40012e1	            0x85c0	                           test eax, eax	      1191	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x40012e3	            0x7424	                            je 0x4001309	      1191	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x40012e5	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1192	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x40012ea	            0x740c	                            je 0x40012f8	      1192	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x40012ec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1192	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x40012f0	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1192	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x40012f4	            0x84c0	                             test al, al	      1192	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x40012f6	            0x7511	                           jne 0x4001309	      1192	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x40012f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1194	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x40012fc	    0x48c740280000	               mov qword [rax + 0x28], 0	      1194	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001304	      0xe99d000000	                           jmp 0x40013a6	      1194	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001309	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x400130d	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x4001311	        0x488b5008	                mov rdx, qword [rax + 8]	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x4001315	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x4001319	        0x488b4008	                mov rax, qword [rax + 8]	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x400131d	          0x4839c2	                            cmp rdx, rax	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x4001320	            0x7578	                           jne 0x400139a	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x4001322	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1208	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001326	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1208	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x400132a	          0x4885c0	                           test rax, rax	      1208	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x400132d	            0x7438	                            je 0x4001367	      1208	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x400132f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1209	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_14
0x4001333	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1209	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_14
0x4001337	    0x483d00000000	                              cmp rax, 0	      1209	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_14
0x400133d	            0x745b	                            je 0x400139a	      1209	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_14
0x400133f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1210	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_16
0x4001343	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1210	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_16
0x4001347	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1210	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_16
0x400134a	      0x2500100000	                         and eax, 0x1000	      1210	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_16
0x400134f	            0x85c0	                           test eax, eax	      1210	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_16
0x4001351	            0x7414	                            je 0x4001367	      1210	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_16
0x4001353	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1211	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_18
0x4001357	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1211	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_18
0x400135b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1211	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_18
0x400135f	    0x483d00000000	                              cmp rax, 0	      1211	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_18
0x4001365	            0x7533	                           jne 0x400139a	      1211	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_18
0x4001367	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1213	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x400136b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1213	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x400136f	        0x48895040	             mov qword [rax + 0x40], rdx	      1213	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001373	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x4001377	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x400137b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x400137e	      0x2500100000	                         and eax, 0x1000	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x4001383	            0x85c0	                           test eax, eax	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x4001385	            0x7413	                            je 0x400139a	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x4001387	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1218	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8
0x400138b	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1218	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8
0x400138e	          0x80cc02	                                or ah, 2	      1218	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8
0x4001391	            0x89c2	                            mov edx, eax	      1218	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8
0x4001393	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1218	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8
0x4001397	          0x895018	             mov dword [rax + 0x18], edx	      1218	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8
0x400139a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1227	linker.c	FUNCTION_19	FOR_1	IF_1
0x400139e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1227	linker.c	FUNCTION_19	FOR_1	IF_1
0x40013a2	        0x48895028	             mov qword [rax + 0x28], rdx	      1227	linker.c	FUNCTION_19	FOR_1	IF_1
0x40013a6	      0x488345c808	               add qword [rbp - 0x38], 8	      1143	linker.c	FUNCTION_19	FOR_1
0x40013ab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1143	linker.c	FUNCTION_19	FOR_1
0x40013af	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1143	linker.c	FUNCTION_19	FOR_1
0x40013b3	     0xf82e6fdffff	                            jb 0x400119f	      1143	linker.c	FUNCTION_19	FOR_1
0x40013b9	      0xb801000000	                              mov eax, 1	      1231	linker.c	FUNCTION_19
0x40013be	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1232	linker.c	FUNCTION_19
0x40013c2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1232	linker.c	FUNCTION_19
0x40013cb	            0x7405	                            je 0x40013d2	      1232	linker.c	FUNCTION_19
0x40013cd	      0xe800000000	                          call 0x40013d2	      1232	linker.c	FUNCTION_19
0x40013d2	              0xc9	                                   leave	      1232	linker.c	FUNCTION_19
0x40013d3	              0xc3	                                     ret	      1232	linker.c	FUNCTION_19
_bfd_nolink_bfd_link_hash_table_create	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	9
0x4004bac	              0x55	                                push rbp	      3458	linker.c	FUNCTION_59
0x4004bad	          0x4889e5	                            mov rbp, rsp	      3458	linker.c	FUNCTION_59
0x4004bb0	        0x4883ec10	                           sub rsp, 0x10	      3458	linker.c	FUNCTION_59
0x4004bb4	        0x48897df8	                mov qword [rbp - 8], rdi	      3458	linker.c	FUNCTION_59
0x4004bb8	        0x488b45f8	                mov rax, qword [rbp - 8]	      3459	linker.c	FUNCTION_59	CALL_1
0x4004bbc	          0x4889c7	                            mov rdi, rax	      3459	linker.c	FUNCTION_59	CALL_1
0x4004bbf	      0xe800000000	                          call 0x4004bc4	      3459	linker.c	FUNCTION_59	CALL_1
0x4004bc4	              0xc9	                                   leave	      3460	linker.c	FUNCTION_59
0x4004bc5	              0xc3	                                     ret	      3460	linker.c	FUNCTION_59
_bfd_nolink_bfd_copy_link_hash_symbol_type	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,0:ELSE,0:FOR,0:DO,0	8
0x4004bd5	              0x55	                                push rbp	      3473	linker.c	FUNCTION_61
0x4004bd6	          0x4889e5	                            mov rbp, rsp	      3473	linker.c	FUNCTION_61
0x4004bd9	        0x48897df8	                mov qword [rbp - 8], rdi	      3473	linker.c	FUNCTION_61
0x4004bdd	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3473	linker.c	FUNCTION_61
0x4004be1	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3473	linker.c	FUNCTION_61
0x4004be5	              0x90	                                     nop	      3474	linker.c	FUNCTION_61
0x4004be6	              0x5d	                                 pop rbp	      3474	linker.c	FUNCTION_61
0x4004be7	              0xc3	                                     ret	      3474	linker.c	FUNCTION_61
_bfd_nolink_bfd_lookup_section_flags	functions,0:IF,0:WHILE,0:SWITCH,0:CALL,1:ELSE,0:FOR,0:DO,0	12
0x4004b47	              0x55	                                push rbp	      3439	linker.c	FUNCTION_56
0x4004b48	          0x4889e5	                            mov rbp, rsp	      3439	linker.c	FUNCTION_56
0x4004b4b	        0x4883ec20	                           sub rsp, 0x20	      3439	linker.c	FUNCTION_56
0x4004b4f	        0x48897df8	                mov qword [rbp - 8], rdi	      3439	linker.c	FUNCTION_56
0x4004b53	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3439	linker.c	FUNCTION_56
0x4004b57	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3439	linker.c	FUNCTION_56
0x4004b5b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3440	linker.c	FUNCTION_56	CALL_1
0x4004b5f	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      3440	linker.c	FUNCTION_56	CALL_1
0x4004b66	          0x4889c7	                            mov rdi, rax	      3440	linker.c	FUNCTION_56	CALL_1
0x4004b69	      0xe800000000	                          call 0x4004b6e	      3440	linker.c	FUNCTION_56	CALL_1
0x4004b6e	              0xc9	                                   leave	      3441	linker.c	FUNCTION_56
0x4004b6f	              0xc3	                                     ret	      3441	linker.c	FUNCTION_56
_bfd_nearby_section	functions,0:IF,13:WHILE,0:SWITCH,0:CALL,2:ELSE,6:FOR,2:DO,0	168
0x40041ad	              0x55	                                push rbp	      2955	linker.c	FUNCTION_42
0x40041ae	          0x4889e5	                            mov rbp, rsp	      2955	linker.c	FUNCTION_42
0x40041b1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2955	linker.c	FUNCTION_42
0x40041b5	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2955	linker.c	FUNCTION_42
0x40041b9	        0x488955c8	             mov qword [rbp - 0x38], rdx	      2955	linker.c	FUNCTION_42
0x40041bd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2959	linker.c	FUNCTION_42	FOR_1
0x40041c1	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2959	linker.c	FUNCTION_42	FOR_1
0x40041c5	        0x488945f0	             mov qword [rbp - 0x10], rax	      2959	linker.c	FUNCTION_42	FOR_1
0x40041c9	            0xeb54	                           jmp 0x400421f	      2959	linker.c	FUNCTION_42	FOR_1
0x40041cb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2960	linker.c	FUNCTION_42	FOR_1	IF_1
0x40041cf	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2960	linker.c	FUNCTION_42	FOR_1	IF_1
0x40041d2	      0x2500800000	                         and eax, 0x8000	      2960	linker.c	FUNCTION_42	FOR_1	IF_1
0x40041d7	            0x85c0	                           test eax, eax	      2960	linker.c	FUNCTION_42	FOR_1	IF_1
0x40041d9	            0x7538	                           jne 0x4004213	      2960	linker.c	FUNCTION_42	FOR_1	IF_1
0x40041db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x40041df	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x40041e3	          0x4885c0	                           test rax, rax	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x40041e6	            0x7514	                           jne 0x40041fc	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x40041e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x40041ec	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x40041f3	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x40041f7	           0xf94c0	                                 sete al	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x40041fa	            0xeb13	                           jmp 0x400420f	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x40041fc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4004200	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4004204	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4004208	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x400420c	           0xf94c0	                                 sete al	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x400420f	            0x84c0	                             test al, al	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4004211	            0x7515	                           jne 0x4004228	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4004213	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2959	linker.c	FUNCTION_42	FOR_1
0x4004217	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2959	linker.c	FUNCTION_42	FOR_1
0x400421b	        0x488945f0	             mov qword [rbp - 0x10], rax	      2959	linker.c	FUNCTION_42	FOR_1
0x400421f	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2959	linker.c	FUNCTION_42	FOR_1
0x4004224	            0x75a5	                           jne 0x40041cb	      2959	linker.c	FUNCTION_42	FOR_1
0x4004226	            0xeb01	                           jmp 0x4004229	      2959	linker.c	FUNCTION_42	FOR_1
0x4004228	              0x90	                                     nop	      2962	linker.c	FUNCTION_42	FOR_1	IF_1
0x4004229	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2966	linker.c	FUNCTION_42	IF_2
0x400422d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2966	linker.c	FUNCTION_42	IF_2
0x4004231	          0x4885c0	                           test rax, rax	      2966	linker.c	FUNCTION_42	IF_2
0x4004234	            0x7412	                            je 0x4004248	      2966	linker.c	FUNCTION_42	IF_2
0x4004236	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2967	linker.c	FUNCTION_42	IF_2
0x400423a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2967	linker.c	FUNCTION_42	IF_2
0x400423e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2967	linker.c	FUNCTION_42	IF_2
0x4004242	        0x488945e8	             mov qword [rbp - 0x18], rax	      2967	linker.c	FUNCTION_42	IF_2
0x4004246	            0xeb6c	                           jmp 0x40042b4	      2967	linker.c	FUNCTION_42	IF_2
0x4004248	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2969	linker.c	FUNCTION_42	ELSE_1
0x400424c	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      2969	linker.c	FUNCTION_42	ELSE_1
0x4004253	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      2969	linker.c	FUNCTION_42	ELSE_1
0x400425a	        0x488945e8	             mov qword [rbp - 0x18], rax	      2969	linker.c	FUNCTION_42	ELSE_1
0x400425e	            0xeb54	                           jmp 0x40042b4	      2970	linker.c	FUNCTION_42	FOR_2
0x4004260	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x4004264	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x4004267	      0x2500800000	                         and eax, 0x8000	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x400426c	            0x85c0	                           test eax, eax	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x400426e	            0x7538	                           jne 0x40042a8	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x4004270	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4004274	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4004278	          0x4885c0	                           test rax, rax	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x400427b	            0x7514	                           jne 0x4004291	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x400427d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4004281	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4004288	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x400428c	           0xf94c0	                                 sete al	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x400428f	            0xeb13	                           jmp 0x40042a4	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4004291	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4004295	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4004299	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x400429d	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x40042a1	           0xf94c0	                                 sete al	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x40042a4	            0x84c0	                             test al, al	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x40042a6	            0x7515	                           jne 0x40042bd	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x40042a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2970	linker.c	FUNCTION_42	FOR_2
0x40042ac	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2970	linker.c	FUNCTION_42	FOR_2
0x40042b0	        0x488945e8	             mov qword [rbp - 0x18], rax	      2970	linker.c	FUNCTION_42	FOR_2
0x40042b4	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2970	linker.c	FUNCTION_42	FOR_2
0x40042b9	            0x75a5	                           jne 0x4004260	      2970	linker.c	FUNCTION_42	FOR_2
0x40042bb	            0xeb01	                           jmp 0x40042be	      2970	linker.c	FUNCTION_42	FOR_2
0x40042bd	              0x90	                                     nop	      2973	linker.c	FUNCTION_42	FOR_2	IF_3
0x40042be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2978	linker.c	FUNCTION_42
0x40042c2	        0x488945f8	                mov qword [rbp - 8], rax	      2978	linker.c	FUNCTION_42
0x40042c6	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2979	linker.c	FUNCTION_42	IF_4
0x40042cb	            0x7518	                           jne 0x40042e5	      2979	linker.c	FUNCTION_42	IF_4
0x40042cd	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2981	linker.c	FUNCTION_42	IF_4	IF_5
0x40042d2	     0xf850a010000	                           jne 0x40043e2	      2981	linker.c	FUNCTION_42	IF_4	IF_5
0x40042d8	    0x48c745f80000	                  mov qword [rbp - 8], 0	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x40042e0	      0xe9fd000000	                           jmp 0x40043e2	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x40042e5	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2984	linker.c	FUNCTION_42	ELSE_2	IF_6
0x40042ea	            0x750d	                           jne 0x40042f9	      2984	linker.c	FUNCTION_42	ELSE_2	IF_6
0x40042ec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2985	linker.c	FUNCTION_42	ELSE_2	IF_6
0x40042f0	        0x488945f8	                mov qword [rbp - 8], rax	      2985	linker.c	FUNCTION_42	ELSE_2	IF_6
0x40042f4	      0xe9e9000000	                           jmp 0x40043e2	      2985	linker.c	FUNCTION_42	ELSE_2	IF_6
0x40042f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x40042fd	          0x8b5020	            mov edx, dword [rax + 0x20] 	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x4004300	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x4004304	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x4004307	            0x31d0	                            xor eax, edx	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x4004309	      0x2503040000	                          and eax, 0x403	      2987	linker.c	FUNCTION_42	ELSE_3	IF_7
0x400430e	            0x85c0	                           test eax, eax	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x4004310	            0x744a	                            je 0x400435c	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x4004312	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004316	          0x8b5020	            mov edx, dword [rax + 0x20] 	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004319	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x400431d	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004320	            0x31d0	                            xor eax, edx	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004322	      0x2501040000	                          and eax, 0x401	      2990	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004327	            0x85c0	                           test eax, eax	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004329	            0x7524	                           jne 0x400434f	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x400432b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2995	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x400432f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2995	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004332	          0x83e002	                              and eax, 2	      2995	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004335	            0x85c0	                           test eax, eax	      2995	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004337	     0xf84a5000000	                            je 0x40043e2	      2995	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x400433d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2996	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004341	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2996	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004344	          0x83e002	                              and eax, 2	      2996	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004347	            0x85c0	                           test eax, eax	      2996	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004349	     0xf8593000000	                           jne 0x40043e2	      2996	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x400434f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2997	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004353	        0x488945f8	                mov qword [rbp - 8], rax	      2997	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004357	      0xe986000000	                           jmp 0x40043e2	      2997	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x400435c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2999	linker.c	FUNCTION_42	ELSE_4	IF_9
0x4004360	          0x8b5020	            mov edx, dword [rax + 0x20] 	      2999	linker.c	FUNCTION_42	ELSE_4	IF_9
0x4004363	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2999	linker.c	FUNCTION_42	ELSE_4	IF_9
0x4004367	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2999	linker.c	FUNCTION_42	ELSE_4	IF_9
0x400436a	            0x31d0	                            xor eax, edx	      2999	linker.c	FUNCTION_42	ELSE_4	IF_9
0x400436c	          0x83e008	                              and eax, 8	      2999	linker.c	FUNCTION_42	ELSE_4	IF_9
0x400436f	            0x85c0	                           test eax, eax	      2999	linker.c	FUNCTION_42	ELSE_4	IF_9
0x4004371	            0x7421	                            je 0x4004394	      2999	linker.c	FUNCTION_42	ELSE_4	IF_9
0x4004373	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x4004377	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x400437a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x400437e	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x4004381	            0x31d0	                            xor eax, edx	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x4004383	          0x83e008	                              and eax, 8	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x4004386	            0x85c0	                           test eax, eax	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x4004388	            0x7458	                            je 0x40043e2	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x400438a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3002	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x400438e	        0x488945f8	                mov qword [rbp - 8], rax	      3002	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x4004392	            0xeb4e	                           jmp 0x40043e2	      3002	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x4004394	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3004	linker.c	FUNCTION_42	ELSE_5	IF_11
0x4004398	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3004	linker.c	FUNCTION_42	ELSE_5	IF_11
0x400439b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3004	linker.c	FUNCTION_42	ELSE_5	IF_11
0x400439f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3004	linker.c	FUNCTION_42	ELSE_5	IF_11
0x40043a2	            0x31d0	                            xor eax, edx	      3004	linker.c	FUNCTION_42	ELSE_5	IF_11
0x40043a4	          0x83e010	                           and eax, 0x10	      3004	linker.c	FUNCTION_42	ELSE_5	IF_11
0x40043a7	            0x85c0	                           test eax, eax	      3004	linker.c	FUNCTION_42	ELSE_5	IF_11
0x40043a9	            0x7421	                            je 0x40043cc	      3004	linker.c	FUNCTION_42	ELSE_5	IF_11
0x40043ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x40043af	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x40043b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x40043b6	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x40043b9	            0x31d0	                            xor eax, edx	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x40043bb	          0x83e010	                           and eax, 0x10	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x40043be	            0x85c0	                           test eax, eax	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x40043c0	            0x7420	                            je 0x40043e2	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x40043c2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3007	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x40043c6	        0x488945f8	                mov qword [rbp - 8], rax	      3007	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x40043ca	            0xeb16	                           jmp 0x40043e2	      3007	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x40043cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3013	linker.c	FUNCTION_42	ELSE_6	IF_13
0x40043d0	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3013	linker.c	FUNCTION_42	ELSE_6	IF_13
0x40043d4	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      3013	linker.c	FUNCTION_42	ELSE_6	IF_13
0x40043d8	            0x7608	                           jbe 0x40043e2	      3013	linker.c	FUNCTION_42	ELSE_6	IF_13
0x40043da	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3014	linker.c	FUNCTION_42	ELSE_6	IF_13
0x40043de	        0x488945f8	                mov qword [rbp - 8], rax	      3014	linker.c	FUNCTION_42	ELSE_6	IF_13
0x40043e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      3017	linker.c	FUNCTION_42
0x40043e6	              0x5d	                                 pop rbp	      3018	linker.c	FUNCTION_42
0x40043e7	              0xc3	                                     ret	      3018	linker.c	FUNCTION_42
_bfd_handle_already_linked	functions,0:IF,11:WHILE,0:SWITCH,1:CALL,18:ELSE,5:FOR,0:DO,0	247
0x4003d01	              0x55	                                push rbp	      2816	linker.c	FUNCTION_40
0x4003d02	          0x4889e5	                            mov rbp, rsp	      2816	linker.c	FUNCTION_40
0x4003d05	            0x4155	                                push r13	      2816	linker.c	FUNCTION_40
0x4003d07	            0x4154	                                push r12	      2816	linker.c	FUNCTION_40
0x4003d09	              0x53	                                push rbx	      2816	linker.c	FUNCTION_40
0x4003d0a	        0x4883ec48	                           sub rsp, 0x48	      2816	linker.c	FUNCTION_40
0x4003d0e	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2816	linker.c	FUNCTION_40
0x4003d12	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2816	linker.c	FUNCTION_40
0x4003d16	        0x488955a8	             mov qword [rbp - 0x58], rdx	      2816	linker.c	FUNCTION_40
0x4003d1a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2816	linker.c	FUNCTION_40
0x4003d23	        0x488945d8	             mov qword [rbp - 0x28], rax	      2816	linker.c	FUNCTION_40
0x4003d27	            0x31c0	                            xor eax, eax	      2816	linker.c	FUNCTION_40
0x4003d29	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4003d2d	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4003d30	      0x2500000c00	                        and eax, 0xc0000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4003d35	      0x3d00000400	                        cmp eax, 0x40000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4003d3a	     0xf848e000000	                            je 0x4003dce	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4003d40	      0x3d00000400	                        cmp eax, 0x40000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4003d45	            0x7706	                            ja 0x4003d4d	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4003d47	            0x85c0	                           test eax, eax	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4003d49	            0x742c	                            je 0x4003d77	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4003d4b	            0xeb16	                           jmp 0x4003d63	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4003d4d	      0x3d00000800	                        cmp eax, 0x80000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4003d52	     0xf84b8000000	                            je 0x4003e10	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4003d58	      0x3d00000c00	                        cmp eax, 0xc0000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4003d5d	     0xf8433010000	                            je 0x4003e96	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4003d63	      0xba00000000	                              mov edx, 0	      2820	linker.c	FUNCTION_40	SWITCH_1	CALL_1
0x4003d68	      0xbe040b0000	                          mov esi, 0xb04	      2820	linker.c	FUNCTION_40	SWITCH_1	CALL_1
0x4003d6d	      0xbf00000000	                              mov edi, 0	      2820	linker.c	FUNCTION_40	SWITCH_1	CALL_1
0x4003d72	      0xe800000000	                          call 0x4003d77	      2820	linker.c	FUNCTION_40	SWITCH_1	CALL_1
0x4003d77	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2829	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003d7b	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      2829	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003d82	         0xfb64048	           movzx eax, byte [rax + 0x48] 	      2829	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003d86	          0x83e040	                           and eax, 0x40	      2829	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003d89	            0x84c0	                             test al, al	      2829	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003d8b	     0xf84fa020000	                            je 0x400408b	      2829	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003d91	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003d95	        0x488b4008	                mov rax, qword [rax + 8]	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003d99	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003da0	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003da3	          0xc1e805	                              shr eax, 5	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003da6	      0x25ffff0f00	                        and eax, 0xfffff	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003dab	      0x2500000100	                        and eax, 0x10000	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003db0	            0x85c0	                           test eax, eax	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003db2	     0xf84d3020000	                            je 0x400408b	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003db8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2832	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003dbc	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2832	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003dc0	        0x48895008	                mov qword [rax + 8], rdx	      2832	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003dc4	      0xb800000000	                              mov eax, 0	      2833	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003dc9	      0xe9e8020000	                           jmp 0x40040b6	      2833	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4003dce	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x4003dd2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x4003dd6	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x4003dda	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x4003dde	    0x4c8ba0f00000	            mov r12, qword [rax + 0xf0] 	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x4003de5	      0xbe00000000	                              mov esi, 0	      2840	linker.c	FUNCTION_40	SWITCH_1	CALL_3
0x4003dea	      0xbf00000000	                              mov edi, 0	      2840	linker.c	FUNCTION_40	SWITCH_1	CALL_3
0x4003def	      0xe800000000	                          call 0x4003df4	      2840	linker.c	FUNCTION_40	SWITCH_1	CALL_3
0x4003df4	          0x4889c1	                            mov rcx, rax	      2840	linker.c	FUNCTION_40	SWITCH_1	CALL_3
0x4003df7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x4003dfb	          0x4889c2	                            mov rdx, rax	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x4003dfe	          0x4c89e6	                            mov rsi, r12	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x4003e01	          0x4889cf	                            mov rdi, rcx	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x4003e04	      0xb800000000	                              mov eax, 0	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x4003e09	            0xffd3	                                call rbx	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x4003e0b	      0xe982020000	                           jmp 0x4004092	      2842	linker.c	FUNCTION_40	SWITCH_1
0x4003e10	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x4003e14	        0x488b4008	                mov rax, qword [rax + 8]	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x4003e18	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x4003e1f	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x4003e22	          0xc1e805	                              shr eax, 5	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x4003e25	      0x25ffff0f00	                        and eax, 0xfffff	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x4003e2a	      0x2500000100	                        and eax, 0x10000	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x4003e2f	            0x85c0	                           test eax, eax	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x4003e31	     0xf8557020000	                           jne 0x400408e	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x4003e37	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2847	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3
0x4003e3b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2847	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3
0x4003e3f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2847	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3
0x4003e43	        0x488b4008	                mov rax, qword [rax + 8]	      2847	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3
0x4003e47	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2847	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3
0x4003e4b	          0x4839c2	                            cmp rdx, rax	      2847	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3
0x4003e4e	     0xf843a020000	                            je 0x400408e	      2847	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3
0x4003e54	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4003e58	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4003e5c	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4003e60	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4003e64	    0x4c8ba0f00000	            mov r12, qword [rax + 0xf0] 	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4003e6b	      0xbe00000000	                              mov esi, 0	      2850	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_5
0x4003e70	      0xbf00000000	                              mov edi, 0	      2850	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_5
0x4003e75	      0xe800000000	                          call 0x4003e7a	      2850	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_5
0x4003e7a	          0x4889c1	                            mov rcx, rax	      2850	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_5
0x4003e7d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4003e81	          0x4889c2	                            mov rdx, rax	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4003e84	          0x4c89e6	                            mov rsi, r12	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4003e87	          0x4889cf	                            mov rdi, rcx	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4003e8a	      0xb800000000	                              mov eax, 0	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4003e8f	            0xffd3	                                call rbx	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4003e91	      0xe9f8010000	                           jmp 0x400408e	      2852	linker.c	FUNCTION_40	SWITCH_1
0x4003e96	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4003e9a	        0x488b4008	                mov rax, qword [rax + 8]	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4003e9e	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4003ea5	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4003ea8	          0xc1e805	                              shr eax, 5	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4003eab	      0x25ffff0f00	                        and eax, 0xfffff	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4003eb0	      0x2500000100	                        and eax, 0x10000	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4003eb5	            0x85c0	                           test eax, eax	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4003eb7	     0xf85d4010000	                           jne 0x4004091	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4003ebd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2857	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5
0x4003ec1	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2857	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5
0x4003ec5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2857	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5
0x4003ec9	        0x488b4008	                mov rax, qword [rax + 8]	      2857	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5
0x4003ecd	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2857	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5
0x4003ed1	          0x4839c2	                            cmp rdx, rax	      2857	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5
0x4003ed4	            0x7442	                            je 0x4003f18	      2857	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5
0x4003ed6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4003eda	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4003ede	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4003ee2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4003ee6	    0x4c8ba0f00000	            mov r12, qword [rax + 0xf0] 	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4003eed	      0xbe00000000	                              mov esi, 0	      2860	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_7
0x4003ef2	      0xbf00000000	                              mov edi, 0	      2860	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_7
0x4003ef7	      0xe800000000	                          call 0x4003efc	      2860	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_7
0x4003efc	          0x4889c1	                            mov rcx, rax	      2860	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_7
0x4003eff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4003f03	          0x4889c2	                            mov rdx, rax	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4003f06	          0x4c89e6	                            mov rsi, r12	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4003f09	          0x4889cf	                            mov rdi, rcx	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4003f0c	      0xb800000000	                              mov eax, 0	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4003f11	            0xffd3	                                call rbx	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4003f13	      0xe979010000	                           jmp 0x4004091	      2888	linker.c	FUNCTION_40	SWITCH_1
0x4003f18	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2862	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6
0x4003f1c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2862	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6
0x4003f20	          0x4885c0	                           test rax, rax	      2862	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6
0x4003f23	     0xf8468010000	                            je 0x4004091	      2862	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6
0x4003f29	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2864	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6
0x4003f31	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4003f35	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4003f3c	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4003f40	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4003f44	          0x4889ce	                            mov rsi, rcx	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4003f47	          0x4889c7	                            mov rdi, rax	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4003f4a	      0xe800000000	                          call 0x4003f4f	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4003f4f	            0x85c0	                           test eax, eax	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4003f51	            0x7542	                           jne 0x4003f95	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4003f53	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4003f57	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4003f5b	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4003f5f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4003f63	    0x4c8ba0f00000	            mov r12, qword [rax + 0xf0] 	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4003f6a	      0xbe00000000	                              mov esi, 0	      2869	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_10
0x4003f6f	      0xbf00000000	                              mov edi, 0	      2869	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_10
0x4003f74	      0xe800000000	                          call 0x4003f79	      2869	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_10
0x4003f79	          0x4889c1	                            mov rcx, rax	      2869	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_10
0x4003f7c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4003f80	          0x4889c2	                            mov rdx, rax	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4003f83	          0x4c89e6	                            mov rsi, r12	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4003f86	          0x4889cf	                            mov rdi, rcx	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4003f89	      0xb800000000	                              mov eax, 0	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4003f8e	            0xffd3	                                call rbx	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4003f90	      0xe9ca000000	                           jmp 0x400405f	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4003f95	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4003f99	        0x488b4808	                mov rcx, qword [rax + 8]	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4003f9d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4003fa1	        0x488b4008	                mov rax, qword [rax + 8]	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4003fa5	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4003fac	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4003fb0	          0x4889ce	                            mov rsi, rcx	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4003fb3	          0x4889c7	                            mov rdi, rax	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4003fb6	      0xe800000000	                          call 0x4003fbb	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4003fbb	            0x85c0	                           test eax, eax	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4003fbd	            0x7544	                           jne 0x4004003	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4003fbf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4003fc3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4003fc7	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4003fcb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4003fcf	        0x4c8b6808	                mov r13, qword [rax + 8]	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4003fd3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2876	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8
0x4003fd7	        0x488b4008	                mov rax, qword [rax + 8]	      2876	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8
0x4003fdb	    0x4c8ba0f00000	            mov r12, qword [rax + 0xf0] 	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4003fe2	      0xbe00000000	                              mov esi, 0	      2875	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_13
0x4003fe7	      0xbf00000000	                              mov edi, 0	      2875	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_13
0x4003fec	      0xe800000000	                          call 0x4003ff1	      2875	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_13
0x4003ff1	          0x4c89ea	                            mov rdx, r13	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4003ff4	          0x4c89e6	                            mov rsi, r12	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4003ff7	          0x4889c7	                            mov rdi, rax	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4003ffa	      0xb800000000	                              mov eax, 0	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4003fff	            0xffd3	                                call rbx	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4004001	            0xeb5c	                           jmp 0x400405f	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4004003	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4004007	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x400400b	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x400400f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4004013	          0x4889ce	                            mov rsi, rcx	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4004016	          0x4889c7	                            mov rdi, rax	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4004019	      0xe800000000	                          call 0x400401e	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x400401e	            0x85c0	                           test eax, eax	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4004020	            0x743d	                            je 0x400405f	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4004022	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4004026	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x400402a	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x400402e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4004032	    0x4c8ba0f00000	            mov r12, qword [rax + 0xf0] 	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4004039	      0xbe00000000	                              mov esi, 0	      2880	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_16
0x400403e	      0xbf00000000	                              mov edi, 0	      2880	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_16
0x4004043	      0xe800000000	                          call 0x4004048	      2880	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_16
0x4004048	          0x4889c1	                            mov rcx, rax	      2880	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_16
0x400404b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x400404f	          0x4889c2	                            mov rdx, rax	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4004052	          0x4c89e6	                            mov rsi, r12	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4004055	          0x4889cf	                            mov rdi, rcx	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4004058	      0xb800000000	                              mov eax, 0	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x400405d	            0xffd3	                                call rbx	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x400405f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2883	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_10
0x4004063	          0x4885c0	                           test rax, rax	      2883	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_10
0x4004066	            0x740c	                            je 0x4004074	      2883	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_10
0x4004068	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2884	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_17
0x400406c	          0x4889c7	                            mov rdi, rax	      2884	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_17
0x400406f	      0xe800000000	                          call 0x4004074	      2884	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_17
0x4004074	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2885	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_11
0x4004078	          0x4885c0	                           test rax, rax	      2885	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_11
0x400407b	            0x7414	                            je 0x4004091	      2885	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_11
0x400407d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2886	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_18
0x4004081	          0x4889c7	                            mov rdi, rax	      2886	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_18
0x4004084	      0xe800000000	                          call 0x4004089	      2886	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_18
0x4004089	            0xeb06	                           jmp 0x4004091	      2888	linker.c	FUNCTION_40	SWITCH_1
0x400408b	              0x90	                                     nop	      2835	linker.c	FUNCTION_40	SWITCH_1
0x400408c	            0xeb04	                           jmp 0x4004092	      2835	linker.c	FUNCTION_40	SWITCH_1
0x400408e	              0x90	                                     nop	      2852	linker.c	FUNCTION_40	SWITCH_1
0x400408f	            0xeb01	                           jmp 0x4004092	      2852	linker.c	FUNCTION_40	SWITCH_1
0x4004091	              0x90	                                     nop	      2888	linker.c	FUNCTION_40	SWITCH_1
0x4004092	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2896	linker.c	FUNCTION_40
0x4004096	    0x48c740680000	               mov qword [rax + 0x68], 0	      2896	linker.c	FUNCTION_40
0x400409e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2897	linker.c	FUNCTION_40
0x40040a2	        0x488b5008	                mov rdx, qword [rax + 8]	      2897	linker.c	FUNCTION_40
0x40040a6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2897	linker.c	FUNCTION_40
0x40040aa	    0x488990c80000	             mov qword [rax + 0xc8], rdx	      2897	linker.c	FUNCTION_40
0x40040b1	      0xb801000000	                              mov eax, 1	      2898	linker.c	FUNCTION_40
0x40040b6	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	      2899	linker.c	FUNCTION_40
0x40040ba	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2899	linker.c	FUNCTION_40
0x40040c3	            0x7405	                            je 0x40040ca	      2899	linker.c	FUNCTION_40
0x40040c5	      0xe800000000	                          call 0x40040ca	      2899	linker.c	FUNCTION_40
0x40040ca	        0x4883c448	                           add rsp, 0x48	      2899	linker.c	FUNCTION_40
0x40040ce	              0x5b	                                 pop rbx	      2899	linker.c	FUNCTION_40
0x40040cf	            0x415c	                                 pop r12	      2899	linker.c	FUNCTION_40
0x40040d1	            0x415d	                                 pop r13	      2899	linker.c	FUNCTION_40
0x40040d3	              0x5d	                                 pop rbp	      2899	linker.c	FUNCTION_40
0x40040d4	              0xc3	                                     ret	      2899	linker.c	FUNCTION_40
