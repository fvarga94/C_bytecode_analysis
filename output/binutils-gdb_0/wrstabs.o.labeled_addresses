stab_push_string	FOR,0:ELSE,0:DO,0:WHILE,0:IF,0:SWITCH,0:CALL,2:functions,0	44
0x400031f	              0x55	                                push rbp	       398	wrstabs.c	FUNCTION_3
0x4000320	          0x4889e5	                            mov rbp, rsp	       398	wrstabs.c	FUNCTION_3
0x4000323	        0x4883ec30	                           sub rsp, 0x30	       398	wrstabs.c	FUNCTION_3
0x4000327	        0x48897de8	             mov qword [rbp - 0x18], rdi	       398	wrstabs.c	FUNCTION_3
0x400032b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       398	wrstabs.c	FUNCTION_3
0x400032f	        0x488955d8	             mov qword [rbp - 0x28], rdx	       398	wrstabs.c	FUNCTION_3
0x4000333	          0x894dd4	             mov dword [rbp - 0x2c], ecx	       398	wrstabs.c	FUNCTION_3
0x4000336	        0x448945d0	             mov dword [rbp - 0x30], r8d	       398	wrstabs.c	FUNCTION_3
0x400033a	      0xbf40000000	                           mov edi, 0x40	       401	wrstabs.c	FUNCTION_3	CALL_1
0x400033f	      0xe800000000	                          call 0x4000344	       401	wrstabs.c	FUNCTION_3	CALL_1
0x4000344	        0x488945f8	                mov qword [rbp - 8], rax	       401	wrstabs.c	FUNCTION_3	CALL_1
0x4000348	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       402	wrstabs.c	FUNCTION_3	CALL_2
0x400034c	          0x4889c7	                            mov rdi, rax	       402	wrstabs.c	FUNCTION_3	CALL_2
0x400034f	      0xe800000000	                          call 0x4000354	       402	wrstabs.c	FUNCTION_3	CALL_2
0x4000354	          0x4889c2	                            mov rdx, rax	       402	wrstabs.c	FUNCTION_3	CALL_2
0x4000357	        0x488b45f8	                mov rax, qword [rbp - 8]	       402	wrstabs.c	FUNCTION_3	CALL_2
0x400035b	        0x48895008	                mov qword [rax + 8], rdx	       402	wrstabs.c	FUNCTION_3	CALL_2
0x400035f	        0x488b45f8	                mov rax, qword [rbp - 8]	       403	wrstabs.c	FUNCTION_3
0x4000363	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       403	wrstabs.c	FUNCTION_3
0x4000367	        0x48895010	             mov qword [rax + 0x10], rdx	       403	wrstabs.c	FUNCTION_3
0x400036b	        0x488b45f8	                mov rax, qword [rbp - 8]	       404	wrstabs.c	FUNCTION_3
0x400036f	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       404	wrstabs.c	FUNCTION_3
0x4000372	          0x89501c	             mov dword [rax + 0x1c], edx	       404	wrstabs.c	FUNCTION_3
0x4000375	        0x488b45f8	                mov rax, qword [rbp - 8]	       405	wrstabs.c	FUNCTION_3
0x4000379	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       405	wrstabs.c	FUNCTION_3
0x400037c	          0x895018	             mov dword [rax + 0x18], edx	       405	wrstabs.c	FUNCTION_3
0x400037f	        0x488b45f8	                mov rax, qword [rbp - 8]	       407	wrstabs.c	FUNCTION_3
0x4000383	    0x48c740200000	               mov qword [rax + 0x20], 0	       407	wrstabs.c	FUNCTION_3
0x400038b	        0x488b45f8	                mov rax, qword [rbp - 8]	       408	wrstabs.c	FUNCTION_3
0x400038f	    0x48c740280000	               mov qword [rax + 0x28], 0	       408	wrstabs.c	FUNCTION_3
0x4000397	        0x488b45f8	                mov rax, qword [rbp - 8]	       409	wrstabs.c	FUNCTION_3
0x400039b	    0x48c740300000	               mov qword [rax + 0x30], 0	       409	wrstabs.c	FUNCTION_3
0x40003a3	        0x488b45f8	                mov rax, qword [rbp - 8]	       410	wrstabs.c	FUNCTION_3
0x40003a7	    0x48c740380000	               mov qword [rax + 0x38], 0	       410	wrstabs.c	FUNCTION_3
0x40003af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       412	wrstabs.c	FUNCTION_3
0x40003b3	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       412	wrstabs.c	FUNCTION_3
0x40003b7	        0x488b45f8	                mov rax, qword [rbp - 8]	       412	wrstabs.c	FUNCTION_3
0x40003bb	          0x488910	                    mov qword [rax], rdx	       412	wrstabs.c	FUNCTION_3
0x40003be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       413	wrstabs.c	FUNCTION_3
0x40003c2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       413	wrstabs.c	FUNCTION_3
0x40003c6	        0x48895060	             mov qword [rax + 0x60], rdx	       413	wrstabs.c	FUNCTION_3
0x40003ca	      0xb801000000	                              mov eax, 1	       415	wrstabs.c	FUNCTION_3
0x40003cf	              0xc9	                                   leave	       416	wrstabs.c	FUNCTION_3
0x40003d0	              0xc3	                                     ret	       416	wrstabs.c	FUNCTION_3
stab_start_compilation_unit	FOR,0:ELSE,0:DO,0:WHILE,0:IF,0:SWITCH,0:CALL,1:functions,0	20
0x4000826	              0x55	                                push rbp	       545	wrstabs.c	FUNCTION_7
0x4000827	          0x4889e5	                            mov rbp, rsp	       545	wrstabs.c	FUNCTION_7
0x400082a	        0x4883ec20	                           sub rsp, 0x20	       545	wrstabs.c	FUNCTION_7
0x400082e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       545	wrstabs.c	FUNCTION_7
0x4000832	        0x488975e0	             mov qword [rbp - 0x20], rsi	       545	wrstabs.c	FUNCTION_7
0x4000836	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       546	wrstabs.c	FUNCTION_7
0x400083a	        0x488945f8	                mov qword [rbp - 8], rax	       546	wrstabs.c	FUNCTION_7
0x400083e	        0x488b45f8	                mov rax, qword [rbp - 8]	       553	wrstabs.c	FUNCTION_7
0x4000842	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       553	wrstabs.c	FUNCTION_7
0x4000846	    0x488990100200	            mov qword [rax + 0x210], rdx	       553	wrstabs.c	FUNCTION_7
0x400084d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       555	wrstabs.c	FUNCTION_7	CALL_1
0x4000851	        0x488b45f8	                mov rax, qword [rbp - 8]	       555	wrstabs.c	FUNCTION_7	CALL_1
0x4000855	          0x4989d0	                             mov r8, rdx	       555	wrstabs.c	FUNCTION_7	CALL_1
0x4000858	      0xb900000000	                              mov ecx, 0	       555	wrstabs.c	FUNCTION_7	CALL_1
0x400085d	      0xba00000000	                              mov edx, 0	       555	wrstabs.c	FUNCTION_7	CALL_1
0x4000862	      0xbe84000000	                           mov esi, 0x84	       555	wrstabs.c	FUNCTION_7	CALL_1
0x4000867	          0x4889c7	                            mov rdi, rax	       555	wrstabs.c	FUNCTION_7	CALL_1
0x400086a	      0xe862f8ffff	              call sym.stab_write_symbol	       555	wrstabs.c	FUNCTION_7	CALL_1
0x400086f	              0xc9	                                   leave	       556	wrstabs.c	FUNCTION_7
0x4000870	              0xc3	                                     ret	       556	wrstabs.c	FUNCTION_7
write_stabs_in_sections_debugging_info	FOR,1:ELSE,0:DO,0:WHILE,0:IF,5:SWITCH,0:CALL,17:functions,0	174
0x40004a7	              0x55	                                push rbp	       466	wrstabs.c	FUNCTION_6
0x40004a8	          0x4889e5	                            mov rbp, rsp	       466	wrstabs.c	FUNCTION_6
0x40004ab	    0x4881ec600200	                          sub rsp, 0x260	       466	wrstabs.c	FUNCTION_6
0x40004b2	    0x4889bdc8fdff	            mov qword [rbp - 0x238], rdi	       466	wrstabs.c	FUNCTION_6
0x40004b9	    0x4889b5c0fdff	            mov qword [rbp - 0x240], rsi	       466	wrstabs.c	FUNCTION_6
0x40004c0	    0x488995b8fdff	            mov qword [rbp - 0x248], rdx	       466	wrstabs.c	FUNCTION_6
0x40004c7	    0x48898db0fdff	            mov qword [rbp - 0x250], rcx	       466	wrstabs.c	FUNCTION_6
0x40004ce	    0x4c8985a8fdff	             mov qword [rbp - 0x258], r8	       466	wrstabs.c	FUNCTION_6
0x40004d5	    0x4c898da0fdff	             mov qword [rbp - 0x260], r9	       466	wrstabs.c	FUNCTION_6
0x40004dc	    0x64488b042528	                mov rax, qword fs:[0x28]	       466	wrstabs.c	FUNCTION_6
0x40004e5	        0x488945f8	                mov qword [rbp - 8], rax	       466	wrstabs.c	FUNCTION_6
0x40004e9	            0x31c0	                            xor eax, eax	       466	wrstabs.c	FUNCTION_6
0x40004eb	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	       471	wrstabs.c	FUNCTION_6
0x40004f2	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	       471	wrstabs.c	FUNCTION_6
0x40004f9	    0x48c785f0fdff	              mov qword [rbp - 0x210], 0	       473	wrstabs.c	FUNCTION_6
0x4000504	    0x48c785f8fdff	         mov qword [rbp - 0x208], 0x1f4 	       474	wrstabs.c	FUNCTION_6
0x400050f	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	       475	wrstabs.c	FUNCTION_6	CALL_1
0x4000516	          0x4889c7	                            mov rdi, rax	       475	wrstabs.c	FUNCTION_6	CALL_1
0x4000519	      0xe800000000	                          call 0x400051e	       475	wrstabs.c	FUNCTION_6	CALL_1
0x400051e	    0x488985e8fdff	            mov qword [rbp - 0x218], rax	       475	wrstabs.c	FUNCTION_6	CALL_1
0x4000525	    0x48c78500feff	              mov qword [rbp - 0x200], 0	       477	wrstabs.c	FUNCTION_6
0x4000530	    0x48c78508feff	              mov qword [rbp - 0x1f8], 0	       478	wrstabs.c	FUNCTION_6
0x400053b	    0x48c78510feff	              mov qword [rbp - 0x1f0], 1	       480	wrstabs.c	FUNCTION_6
0x4000546	    0x488d85e0fdff	                  lea rax, [rbp - 0x220]	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x400054d	        0x4883c038	                           add rax, 0x38	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x4000551	      0xba30000000	                           mov edx, 0x30	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x4000556	      0xbe00000000	                              mov esi, 0	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x400055b	          0x4889c7	                            mov rdi, rax	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x400055e	      0xe800000000	                          call 0x4000563	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x4000563	            0x85c0	                           test eax, eax	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x4000565	            0x7423	                            je 0x400058a	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x4000567	    0x488d85e0fdff	                  lea rax, [rbp - 0x220]	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x400056e	    0x4805b8010000	                          add rax, 0x1b8	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x4000574	      0xba30000000	                           mov edx, 0x30	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x4000579	      0xbe00000000	                              mov esi, 0	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x400057e	          0x4889c7	                            mov rdi, rax	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x4000581	      0xe800000000	                          call 0x4000586	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x4000586	            0x85c0	                           test eax, eax	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x4000588	            0x7528	                           jne 0x40005b2	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x400058a	      0xe800000000	                          call 0x400058f	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x400058f	            0x89c7	                            mov edi, eax	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x4000591	      0xe800000000	                          call 0x4000596	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x4000596	          0x4889c6	                            mov rsi, rax	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x4000599	      0xbf00000000	                              mov edi, 0	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x400059e	      0xb800000000	                              mov eax, 0	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x40005a3	      0xe800000000	                          call 0x40005a8	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x40005a8	      0xb800000000	                              mov eax, 0	       489	wrstabs.c	FUNCTION_6	IF_1
0x40005ad	      0xe95e020000	                           jmp 0x4000810	       489	wrstabs.c	FUNCTION_6	IF_1
0x40005b2	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	       492	wrstabs.c	FUNCTION_6
0x40005bd	    0x48c78548feff	              mov qword [rbp - 0x1b8], 1	       493	wrstabs.c	FUNCTION_6
0x40005c8	    0x488d85e0fdff	                  lea rax, [rbp - 0x220]	       494	wrstabs.c	FUNCTION_6	CALL_7
0x40005cf	        0x4883c070	                           add rax, 0x70	       494	wrstabs.c	FUNCTION_6	CALL_7
0x40005d3	      0xba48010000	                          mov edx, 0x148	       494	wrstabs.c	FUNCTION_6	CALL_7
0x40005d8	      0xbe00000000	                              mov esi, 0	       494	wrstabs.c	FUNCTION_6	CALL_7
0x40005dd	          0x4889c7	                            mov rdi, rax	       494	wrstabs.c	FUNCTION_6	CALL_7
0x40005e0	      0xe800000000	                          call 0x40005e5	       494	wrstabs.c	FUNCTION_6	CALL_7
0x40005e5	    0x48c745c0ffff	mov qword [rbp - 0x40], 0xffffffffffffffff	       495	wrstabs.c	FUNCTION_6
0x40005ed	    0x48c745c8ffff	mov qword [rbp - 0x38], 0xffffffffffffffff	       496	wrstabs.c	FUNCTION_6
0x40005f5	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       497	wrstabs.c	FUNCTION_6
0x40005fd	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       498	wrstabs.c	FUNCTION_6
0x4000604	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       499	wrstabs.c	FUNCTION_6
0x400060c	    0x48c745e8ffff	mov qword [rbp - 0x18], 0xffffffffffffffff	       500	wrstabs.c	FUNCTION_6
0x4000614	    0x488d85e0fdff	                  lea rax, [rbp - 0x220]	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x400061b	    0x41b800000000	                              mov r8d, 0	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x4000621	      0xb900000000	                              mov ecx, 0	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x4000626	      0xba00000000	                              mov edx, 0	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x400062b	      0xbe00000000	                              mov esi, 0	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x4000630	          0x4889c7	                            mov rdi, rax	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x4000633	      0xe899faffff	              call sym.stab_write_symbol	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x4000638	            0x85c0	                           test eax, eax	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x400063a	            0x750a	                           jne 0x4000646	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x400063c	      0xb800000000	                              mov eax, 0	       504	wrstabs.c	FUNCTION_6	IF_2
0x4000641	      0xe9ca010000	                           jmp 0x4000810	       504	wrstabs.c	FUNCTION_6	IF_2
0x4000646	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	       507	wrstabs.c	FUNCTION_6
0x400064d	        0x488945c0	             mov qword [rbp - 0x40], rax	       507	wrstabs.c	FUNCTION_6
0x4000651	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x4000658	          0x488b10	                    mov rdx, qword [rax]	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x400065b	    0x488d85e0fdff	                  lea rax, [rbp - 0x220]	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x4000662	          0x4989d0	                             mov r8, rdx	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x4000665	      0xb900000000	                              mov ecx, 0	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x400066a	      0xba00000000	                              mov edx, 0	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x400066f	      0xbe64000000	                           mov esi, 0x64	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x4000674	          0x4889c7	                            mov rdi, rax	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x4000677	      0xe855faffff	              call sym.stab_write_symbol	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x400067c	            0x85c0	                           test eax, eax	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x400067e	            0x750a	                           jne 0x400068a	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x4000680	      0xb800000000	                              mov eax, 0	       509	wrstabs.c	FUNCTION_6	IF_3
0x4000685	      0xe986010000	                           jmp 0x4000810	       509	wrstabs.c	FUNCTION_6	IF_3
0x400068a	    0x488d95e0fdff	                  lea rdx, [rbp - 0x220]	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x4000691	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x4000698	      0xbe00000000	                              mov esi, 0	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x400069d	          0x4889c7	                            mov rdi, rax	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x40006a0	      0xe800000000	                          call 0x40006a5	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x40006a5	            0x85c0	                           test eax, eax	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x40006a7	            0x750a	                           jne 0x40006b3	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x40006a9	      0xb800000000	                              mov eax, 0	       512	wrstabs.c	FUNCTION_6	IF_4
0x40006ae	      0xe95d010000	                           jmp 0x4000810	       512	wrstabs.c	FUNCTION_6	IF_4
0x40006b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       514	wrstabs.c	FUNCTION_6	CALL_12
0x40006b7	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       514	wrstabs.c	FUNCTION_6	CALL_12
0x40006bb	            0x7419	                            je 0x40006d6	       514	wrstabs.c	FUNCTION_6	CALL_12
0x40006bd	      0xb900000000	                              mov ecx, 0	       514	wrstabs.c	FUNCTION_6	CALL_12
0x40006c2	      0xba02020000	                          mov edx, 0x202	       514	wrstabs.c	FUNCTION_6	CALL_12
0x40006c7	      0xbe00000000	                              mov esi, 0	       514	wrstabs.c	FUNCTION_6	CALL_12
0x40006cc	      0xbf00000000	                              mov edi, 0	       514	wrstabs.c	FUNCTION_6	CALL_12
0x40006d1	      0xe800000000	                          call 0x40006d6	       514	wrstabs.c	FUNCTION_6	CALL_12
0x40006d6	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40006da	    0x488d85e0fdff	                  lea rax, [rbp - 0x220]	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40006e1	    0x41b800000000	                              mov r8d, 0	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40006e7	          0x4889d1	                            mov rcx, rdx	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40006ea	      0xba00000000	                              mov edx, 0	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40006ef	      0xbe64000000	                           mov esi, 0x64	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40006f4	          0x4889c7	                            mov rdi, rax	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40006f7	      0xe8d5f9ffff	              call sym.stab_write_symbol	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40006fc	            0x85c0	                           test eax, eax	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40006fe	            0x750a	                           jne 0x400070a	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x4000700	      0xb800000000	                              mov eax, 0	       519	wrstabs.c	FUNCTION_6	IF_5
0x4000705	      0xe906010000	                           jmp 0x4000810	       519	wrstabs.c	FUNCTION_6	IF_5
0x400070a	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	       522	wrstabs.c	FUNCTION_6	CALL_14
0x4000711	        0x488b4008	                mov rax, qword [rax + 8]	       522	wrstabs.c	FUNCTION_6	CALL_14
0x4000715	        0x488b4048	            mov rax, qword [rax + 0x48] 	       522	wrstabs.c	FUNCTION_6	CALL_14
0x4000719	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	       522	wrstabs.c	FUNCTION_6	CALL_14
0x4000720	        0x488d4a08	                      lea rcx, [rdx + 8]	       522	wrstabs.c	FUNCTION_6	CALL_14
0x4000724	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	       522	wrstabs.c	FUNCTION_6	CALL_14
0x400072b	          0x4889ce	                            mov rsi, rcx	       522	wrstabs.c	FUNCTION_6	CALL_14
0x400072e	          0x4889d7	                            mov rdi, rdx	       522	wrstabs.c	FUNCTION_6	CALL_14
0x4000731	            0xffd0	                                call rax	       522	wrstabs.c	FUNCTION_6	CALL_14
0x4000733	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	       524	wrstabs.c	FUNCTION_6
0x400073a	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	       524	wrstabs.c	FUNCTION_6
0x4000741	          0x488910	                    mov qword [rax], rdx	       524	wrstabs.c	FUNCTION_6
0x4000744	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	       525	wrstabs.c	FUNCTION_6
0x400074b	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	       525	wrstabs.c	FUNCTION_6
0x4000752	          0x488910	                    mov qword [rax], rdx	       525	wrstabs.c	FUNCTION_6
0x4000755	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	       527	wrstabs.c	FUNCTION_6
0x400075c	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	       527	wrstabs.c	FUNCTION_6
0x4000763	          0x488910	                    mov qword [rax], rdx	       527	wrstabs.c	FUNCTION_6
0x4000766	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	       528	wrstabs.c	FUNCTION_6	CALL_15
0x400076d	          0x4889c7	                            mov rdi, rax	       528	wrstabs.c	FUNCTION_6	CALL_15
0x4000770	      0xe800000000	                          call 0x4000775	       528	wrstabs.c	FUNCTION_6	CALL_15
0x4000775	          0x4889c2	                            mov rdx, rax	       528	wrstabs.c	FUNCTION_6	CALL_15
0x4000778	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	       528	wrstabs.c	FUNCTION_6	CALL_15
0x400077f	          0x488910	                    mov qword [rax], rdx	       528	wrstabs.c	FUNCTION_6	CALL_15
0x4000782	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	       530	wrstabs.c	FUNCTION_6
0x4000789	          0x488b00	                    mov rax, qword [rax]	       530	wrstabs.c	FUNCTION_6
0x400078c	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	       530	wrstabs.c	FUNCTION_6
0x4000793	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       531	wrstabs.c	FUNCTION_6
0x400079a	        0x488d5001	                      lea rdx, [rax + 1]	       531	wrstabs.c	FUNCTION_6
0x400079e	    0x488995d8fdff	            mov qword [rbp - 0x228], rdx	       531	wrstabs.c	FUNCTION_6
0x40007a5	          0xc60000	                       mov byte [rax], 0	       531	wrstabs.c	FUNCTION_6
0x40007a8	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	       532	wrstabs.c	FUNCTION_6	FOR_1
0x40007af	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	       532	wrstabs.c	FUNCTION_6	FOR_1
0x40007b6	            0xeb49	                           jmp 0x4000801	       532	wrstabs.c	FUNCTION_6	FOR_1
0x40007b8	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	       534	wrstabs.c	FUNCTION_6	FOR_1	CALL_16
0x40007bf	        0x488b5008	                mov rdx, qword [rax + 8]	       534	wrstabs.c	FUNCTION_6	FOR_1	CALL_16
0x40007c3	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       534	wrstabs.c	FUNCTION_6	FOR_1	CALL_16
0x40007ca	          0x4889d6	                            mov rsi, rdx	       534	wrstabs.c	FUNCTION_6	FOR_1	CALL_16
0x40007cd	          0x4889c7	                            mov rdi, rax	       534	wrstabs.c	FUNCTION_6	FOR_1	CALL_16
0x40007d0	      0xe800000000	                          call 0x40007d5	       534	wrstabs.c	FUNCTION_6	FOR_1	CALL_16
0x40007d5	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	       535	wrstabs.c	FUNCTION_6	FOR_1	CALL_17
0x40007dc	          0x4889c7	                            mov rdi, rax	       535	wrstabs.c	FUNCTION_6	FOR_1	CALL_17
0x40007df	      0xe800000000	                          call 0x40007e4	       535	wrstabs.c	FUNCTION_6	FOR_1	CALL_17
0x40007e4	        0x4883c001	                              add rax, 1	       535	wrstabs.c	FUNCTION_6	FOR_1	CALL_17
0x40007e8	    0x480185d8fdff	           add qword [rbp - 0x228], rax 	       535	wrstabs.c	FUNCTION_6	FOR_1	CALL_17
0x40007ef	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	       532	wrstabs.c	FUNCTION_6	FOR_1
0x40007f6	        0x488b4018	            mov rax, qword [rax + 0x18] 	       532	wrstabs.c	FUNCTION_6	FOR_1
0x40007fa	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	       532	wrstabs.c	FUNCTION_6	FOR_1
0x4000801	    0x4883bdd0fdff	              cmp qword [rbp - 0x230], 0	       532	wrstabs.c	FUNCTION_6	FOR_1
0x4000809	            0x75ad	                           jne 0x40007b8	       532	wrstabs.c	FUNCTION_6	FOR_1
0x400080b	      0xb801000000	                              mov eax, 1	       538	wrstabs.c	FUNCTION_6
0x4000810	        0x488b4df8	                mov rcx, qword [rbp - 8]	       539	wrstabs.c	FUNCTION_6
0x4000814	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       539	wrstabs.c	FUNCTION_6
0x400081d	            0x7405	                            je 0x4000824	       539	wrstabs.c	FUNCTION_6
0x400081f	      0xe800000000	                          call 0x4000824	       539	wrstabs.c	FUNCTION_6
0x4000824	              0xc9	                                   leave	       539	wrstabs.c	FUNCTION_6
0x4000825	              0xc3	                                     ret	       539	wrstabs.c	FUNCTION_6
stab_class_baseclass	FOR,0:ELSE,1:DO,0:WHILE,1:IF,2:SWITCH,1:CALL,8:functions,0	132
0x4002a94	              0x55	                                push rbp	      1548	wrstabs.c	FUNCTION_33
0x4002a95	          0x4889e5	                            mov rbp, rsp	      1548	wrstabs.c	FUNCTION_33
0x4002a98	        0x4883ec50	                           sub rsp, 0x50	      1548	wrstabs.c	FUNCTION_33
0x4002a9c	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1548	wrstabs.c	FUNCTION_33
0x4002aa0	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1548	wrstabs.c	FUNCTION_33
0x4002aa4	          0x8955bc	             mov dword [rbp - 0x44], edx	      1548	wrstabs.c	FUNCTION_33
0x4002aa7	          0x894db8	             mov dword [rbp - 0x48], ecx	      1548	wrstabs.c	FUNCTION_33
0x4002aaa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1549	wrstabs.c	FUNCTION_33
0x4002aae	        0x488945e0	             mov qword [rbp - 0x20], rax	      1549	wrstabs.c	FUNCTION_33
0x4002ab2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1556	wrstabs.c	FUNCTION_33
0x4002ab6	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1556	wrstabs.c	FUNCTION_33
0x4002aba	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1556	wrstabs.c	FUNCTION_33
0x4002abd	          0x8945dc	             mov dword [rbp - 0x24], eax	      1556	wrstabs.c	FUNCTION_33
0x4002ac0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1557	wrstabs.c	FUNCTION_33	CALL_1
0x4002ac4	          0x4889c7	                            mov rdi, rax	      1557	wrstabs.c	FUNCTION_33	CALL_1
0x4002ac7	      0xe876d9ffff	                  call sym.stab_pop_type	      1557	wrstabs.c	FUNCTION_33	CALL_1
0x4002acc	        0x488945e8	             mov qword [rbp - 0x18], rax	      1557	wrstabs.c	FUNCTION_33	CALL_1
0x4002ad0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x4002ad4	          0x4889c7	                            mov rdi, rax	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x4002ad7	      0xe800000000	                          call 0x4002adc	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x4002adc	        0x4883c019	                           add rax, 0x19	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x4002ae0	          0x4889c7	                            mov rdi, rax	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x4002ae3	      0xe800000000	                          call 0x4002ae8	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x4002ae8	        0x488945f0	             mov qword [rbp - 0x10], rax	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x4002aec	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1562	wrstabs.c	FUNCTION_33
0x4002af0	            0x7407	                            je 0x4002af9	      1562	wrstabs.c	FUNCTION_33
0x4002af2	      0xba31000000	                           mov edx, 0x31	      1562	wrstabs.c	FUNCTION_33
0x4002af7	            0xeb05	                           jmp 0x4002afe	      1562	wrstabs.c	FUNCTION_33
0x4002af9	      0xba30000000	                           mov edx, 0x30	      1562	wrstabs.c	FUNCTION_33
0x4002afe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1562	wrstabs.c	FUNCTION_33
0x4002b02	            0x8810	                      mov byte [rax], dl	      1562	wrstabs.c	FUNCTION_33
0x4002b04	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b07	          0x83f801	                              cmp eax, 1	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b0a	            0x741c	                            je 0x4002b28	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b0c	          0x83f801	                              cmp eax, 1	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b0f	            0x7224	                            jb 0x4002b35	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b11	          0x83f802	                              cmp eax, 2	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b14	            0x7405	                            je 0x4002b1b	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b16	      0xe800000000	                          call 0x4002b1b	      1566	wrstabs.c	FUNCTION_33	SWITCH_1	CALL_4
0x4002b1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1569	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b1f	        0x4883c001	                              add rax, 1	      1569	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b23	          0xc60030	                    mov byte [rax], 0x30	      1569	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b26	            0xeb19	                           jmp 0x4002b41	      1570	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b28	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1573	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b2c	        0x4883c001	                              add rax, 1	      1573	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b30	          0xc60031	                    mov byte [rax], 0x31	      1573	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b33	            0xeb0c	                           jmp 0x4002b41	      1574	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b35	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1577	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b39	        0x4883c001	                              add rax, 1	      1577	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b3d	          0xc60032	                    mov byte [rax], 0x32	      1577	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b40	              0x90	                                     nop	      1578	wrstabs.c	FUNCTION_33	SWITCH_1
0x4002b41	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1581	wrstabs.c	FUNCTION_33	CALL_5
0x4002b45	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1581	wrstabs.c	FUNCTION_33	CALL_5
0x4002b49	        0x488d7a02	                      lea rdi, [rdx + 2]	      1581	wrstabs.c	FUNCTION_33	CALL_5
0x4002b4d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1581	wrstabs.c	FUNCTION_33	CALL_5
0x4002b51	          0x4889d1	                            mov rcx, rdx	      1581	wrstabs.c	FUNCTION_33	CALL_5
0x4002b54	          0x4889c2	                            mov rdx, rax	      1581	wrstabs.c	FUNCTION_33	CALL_5
0x4002b57	      0xbe00000000	                              mov esi, 0	      1581	wrstabs.c	FUNCTION_33	CALL_5
0x4002b5c	      0xb800000000	                              mov eax, 0	      1581	wrstabs.c	FUNCTION_33	CALL_5
0x4002b61	      0xe800000000	                          call 0x4002b66	      1581	wrstabs.c	FUNCTION_33	CALL_5
0x4002b66	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1582	wrstabs.c	FUNCTION_33	CALL_6
0x4002b6a	          0x4889c7	                            mov rdi, rax	      1582	wrstabs.c	FUNCTION_33	CALL_6
0x4002b6d	      0xe800000000	                          call 0x4002b72	      1582	wrstabs.c	FUNCTION_33	CALL_6
0x4002b72	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1586	wrstabs.c	FUNCTION_33	CALL_7
0x4002b76	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1586	wrstabs.c	FUNCTION_33	CALL_7
0x4002b7a	          0x4885c0	                           test rax, rax	      1586	wrstabs.c	FUNCTION_33	CALL_7
0x4002b7d	            0x7411	                            je 0x4002b90	      1586	wrstabs.c	FUNCTION_33	CALL_7
0x4002b7f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1586	wrstabs.c	FUNCTION_33	CALL_7
0x4002b83	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1586	wrstabs.c	FUNCTION_33	CALL_7
0x4002b87	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1586	wrstabs.c	FUNCTION_33	CALL_7
0x4002b8b	          0x4885c0	                           test rax, rax	      1586	wrstabs.c	FUNCTION_33	CALL_7
0x4002b8e	            0x7519	                           jne 0x4002ba9	      1586	wrstabs.c	FUNCTION_33	CALL_7
0x4002b90	      0xb900000000	                              mov ecx, 0	      1586	wrstabs.c	FUNCTION_33	CALL_7
0x4002b95	      0xba32060000	                          mov edx, 0x632	      1586	wrstabs.c	FUNCTION_33	CALL_7
0x4002b9a	      0xbe00000000	                              mov esi, 0	      1586	wrstabs.c	FUNCTION_33	CALL_7
0x4002b9f	      0xbf00000000	                              mov edi, 0	      1586	wrstabs.c	FUNCTION_33	CALL_7
0x4002ba4	      0xe800000000	                          call 0x4002ba9	      1586	wrstabs.c	FUNCTION_33	CALL_7
0x4002ba9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1588	wrstabs.c	FUNCTION_33	IF_1
0x4002bad	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1588	wrstabs.c	FUNCTION_33	IF_1
0x4002bb1	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1588	wrstabs.c	FUNCTION_33	IF_1
0x4002bb5	          0x4885c0	                           test rax, rax	      1588	wrstabs.c	FUNCTION_33	IF_1
0x4002bb8	            0x7509	                           jne 0x4002bc3	      1588	wrstabs.c	FUNCTION_33	IF_1
0x4002bba	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1589	wrstabs.c	FUNCTION_33	IF_1
0x4002bc1	            0xeb2b	                           jmp 0x4002bee	      1589	wrstabs.c	FUNCTION_33	IF_1
0x4002bc3	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1592	wrstabs.c	FUNCTION_33	ELSE_1
0x4002bca	            0xeb04	                           jmp 0x4002bd0	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4002bcc	        0x8345d801	               add dword [rbp - 0x28], 1	      1594	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4002bd0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4002bd4	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4002bd8	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4002bdc	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4002bdf	        0x48c1e203	                              shl rdx, 3	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4002be3	          0x4801d0	                            add rax, rdx	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4002be6	          0x488b00	                    mov rax, qword [rax]	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4002be9	          0x4885c0	                           test rax, rax	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4002bec	            0x75de	                           jne 0x4002bcc	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4002bee	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1598	wrstabs.c	FUNCTION_33
0x4002bf1	          0x83c002	                              add eax, 2	      1598	wrstabs.c	FUNCTION_33
0x4002bf4	            0x89c0	                            mov eax, eax	      1597	wrstabs.c	FUNCTION_33	CALL_8
0x4002bf6	    0x488d14c50000	                        lea rdx, [rax*8]	      1597	wrstabs.c	FUNCTION_33	CALL_8
0x4002bfe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1597	wrstabs.c	FUNCTION_33	CALL_8
0x4002c02	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1597	wrstabs.c	FUNCTION_33	CALL_8
0x4002c06	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1597	wrstabs.c	FUNCTION_33	CALL_8
0x4002c0a	          0x4889d6	                            mov rsi, rdx	      1597	wrstabs.c	FUNCTION_33	CALL_8
0x4002c0d	          0x4889c7	                            mov rdi, rax	      1597	wrstabs.c	FUNCTION_33	CALL_8
0x4002c10	      0xe800000000	                          call 0x4002c15	      1597	wrstabs.c	FUNCTION_33	CALL_8
0x4002c15	        0x488945f8	                mov qword [rbp - 8], rax	      1597	wrstabs.c	FUNCTION_33	CALL_8
0x4002c19	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1599	wrstabs.c	FUNCTION_33
0x4002c1c	    0x488d14c50000	                        lea rdx, [rax*8]	      1599	wrstabs.c	FUNCTION_33
0x4002c24	        0x488b45f8	                mov rax, qword [rbp - 8]	      1599	wrstabs.c	FUNCTION_33
0x4002c28	          0x4801c2	                            add rdx, rax	      1599	wrstabs.c	FUNCTION_33
0x4002c2b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1599	wrstabs.c	FUNCTION_33
0x4002c2f	          0x488902	                    mov qword [rdx], rax	      1599	wrstabs.c	FUNCTION_33
0x4002c32	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1600	wrstabs.c	FUNCTION_33
0x4002c35	          0x83c001	                              add eax, 1	      1600	wrstabs.c	FUNCTION_33
0x4002c38	            0x89c0	                            mov eax, eax	      1600	wrstabs.c	FUNCTION_33
0x4002c3a	    0x488d14c50000	                        lea rdx, [rax*8]	      1600	wrstabs.c	FUNCTION_33
0x4002c42	        0x488b45f8	                mov rax, qword [rbp - 8]	      1600	wrstabs.c	FUNCTION_33
0x4002c46	          0x4801d0	                            add rax, rdx	      1600	wrstabs.c	FUNCTION_33
0x4002c49	    0x48c700000000	                      mov qword [rax], 0	      1600	wrstabs.c	FUNCTION_33
0x4002c50	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1602	wrstabs.c	FUNCTION_33
0x4002c54	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1602	wrstabs.c	FUNCTION_33
0x4002c58	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1602	wrstabs.c	FUNCTION_33
0x4002c5c	        0x48895028	             mov qword [rax + 0x28], rdx	      1602	wrstabs.c	FUNCTION_33
0x4002c60	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1604	wrstabs.c	FUNCTION_33	IF_2
0x4002c64	            0x740f	                            je 0x4002c75	      1604	wrstabs.c	FUNCTION_33	IF_2
0x4002c66	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1605	wrstabs.c	FUNCTION_33	IF_2
0x4002c6a	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1605	wrstabs.c	FUNCTION_33	IF_2
0x4002c6e	    0xc7401c010000	               mov dword [rax + 0x1c], 1	      1605	wrstabs.c	FUNCTION_33	IF_2
0x4002c75	      0xb801000000	                              mov eax, 1	      1607	wrstabs.c	FUNCTION_33
0x4002c7a	              0xc9	                                   leave	      1608	wrstabs.c	FUNCTION_33
0x4002c7b	              0xc3	                                     ret	      1608	wrstabs.c	FUNCTION_33
stab_start_class_type	FOR,0:ELSE,2:DO,0:WHILE,0:IF,5:SWITCH,0:CALL,9:functions,0	92
0x40027bc	              0x55	                                push rbp	      1444	wrstabs.c	FUNCTION_31
0x40027bd	          0x4889e5	                            mov rbp, rsp	      1444	wrstabs.c	FUNCTION_31
0x40027c0	        0x4883ec40	                           sub rsp, 0x40	      1444	wrstabs.c	FUNCTION_31
0x40027c4	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1444	wrstabs.c	FUNCTION_31
0x40027c8	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1444	wrstabs.c	FUNCTION_31
0x40027cc	          0x8955cc	             mov dword [rbp - 0x34], edx	      1444	wrstabs.c	FUNCTION_31
0x40027cf	          0x894dc8	             mov dword [rbp - 0x38], ecx	      1444	wrstabs.c	FUNCTION_31
0x40027d2	        0x448945c4	             mov dword [rbp - 0x3c], r8d	      1444	wrstabs.c	FUNCTION_31
0x40027d6	        0x44894dc0	             mov dword [rbp - 0x40], r9d	      1444	wrstabs.c	FUNCTION_31
0x40027da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1445	wrstabs.c	FUNCTION_31
0x40027de	        0x488945f8	                mov qword [rbp - 8], rax	      1445	wrstabs.c	FUNCTION_31
0x40027e2	        0x837dc000	               cmp dword [rbp - 0x40], 0	      1449	wrstabs.c	FUNCTION_31	IF_1
0x40027e6	            0x7406	                            je 0x40027ee	      1449	wrstabs.c	FUNCTION_31	IF_1
0x40027e8	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1449	wrstabs.c	FUNCTION_31	IF_1
0x40027ec	            0x7411	                            je 0x40027ff	      1449	wrstabs.c	FUNCTION_31	IF_1
0x40027ee	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1451	wrstabs.c	FUNCTION_31	IF_1
0x40027f5	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1452	wrstabs.c	FUNCTION_31	IF_1
0x40027fd	            0xeb1e	                           jmp 0x400281d	      1452	wrstabs.c	FUNCTION_31	IF_1
0x40027ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      1456	wrstabs.c	FUNCTION_31	ELSE_1
0x4002803	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1456	wrstabs.c	FUNCTION_31	ELSE_1
0x4002807	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1456	wrstabs.c	FUNCTION_31	ELSE_1
0x400280a	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1456	wrstabs.c	FUNCTION_31	ELSE_1
0x400280d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1457	wrstabs.c	FUNCTION_31	ELSE_1	CALL_1
0x4002811	          0x4889c7	                            mov rdi, rax	      1457	wrstabs.c	FUNCTION_31	ELSE_1	CALL_1
0x4002814	      0xe829dcffff	                  call sym.stab_pop_type	      1457	wrstabs.c	FUNCTION_31	ELSE_1	CALL_1
0x4002819	        0x488945e8	             mov qword [rbp - 0x18], rax	      1457	wrstabs.c	FUNCTION_31	ELSE_1	CALL_1
0x400281d	          0x8b7dc4	             mov edi, dword [rbp - 0x3c]	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4002820	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4002823	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4002826	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x400282a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x400282e	          0x4189f8	                            mov r8d, edi	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4002831	          0x4889c7	                            mov rdi, rax	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4002834	      0xe834fbffff	         call sym.stab_start_struct_type	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4002839	            0x85c0	                           test eax, eax	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x400283b	            0x750a	                           jne 0x4002847	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x400283d	      0xb800000000	                              mov eax, 0	      1461	wrstabs.c	FUNCTION_31	IF_2
0x4002842	      0xe9d8000000	                           jmp 0x400291f	      1461	wrstabs.c	FUNCTION_31	IF_2
0x4002847	        0x837dc000	               cmp dword [rbp - 0x40], 0	      1463	wrstabs.c	FUNCTION_31	IF_3
0x400284b	     0xf84b4000000	                            je 0x4002905	      1463	wrstabs.c	FUNCTION_31	IF_3
0x4002851	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1467	wrstabs.c	FUNCTION_31	IF_3	IF_4
0x4002855	            0x745c	                            je 0x40028b3	      1467	wrstabs.c	FUNCTION_31	IF_3	IF_4
0x4002857	        0x488b45f8	                mov rax, qword [rbp - 8]	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x400285b	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x400285f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4002863	          0x4885c0	                           test rax, rax	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4002866	            0x7f19	                            jg 0x4002881	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4002868	      0xb900000000	                              mov ecx, 0	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x400286d	      0xbabd050000	                          mov edx, 0x5bd	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4002872	      0xbe00000000	                              mov esi, 0	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4002877	      0xbf00000000	                              mov edi, 0	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x400287c	      0xe800000000	                          call 0x4002881	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4002881	      0xbf14000000	                           mov edi, 0x14	      1470	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_4
0x4002886	      0xe800000000	                          call 0x400288b	      1470	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_4
0x400288b	        0x488945f0	             mov qword [rbp - 0x10], rax	      1470	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_4
0x400288f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1471	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_5
0x4002893	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1471	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_5
0x4002897	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1471	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_5
0x400289b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1471	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_5
0x400289f	      0xbe00000000	                              mov esi, 0	      1471	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_5
0x40028a4	          0x4889c7	                            mov rdi, rax	      1471	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_5
0x40028a7	      0xb800000000	                              mov eax, 0	      1471	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_5
0x40028ac	      0xe800000000	                          call 0x40028b1	      1471	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_5
0x40028b1	            0xeb42	                           jmp 0x40028f5	      1471	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_5
0x40028b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_7
0x40028b7	          0x4889c7	                            mov rdi, rax	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_7
0x40028ba	      0xe800000000	                          call 0x40028bf	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_7
0x40028bf	        0x4883c003	                              add rax, 3	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_7
0x40028c3	          0x4889c7	                            mov rdi, rax	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_7
0x40028c6	      0xe800000000	                          call 0x40028cb	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_7
0x40028cb	        0x488945f0	             mov qword [rbp - 0x10], rax	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_7
0x40028cf	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1476	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_8
0x40028d3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1476	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_8
0x40028d7	      0xbe00000000	                              mov esi, 0	      1476	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_8
0x40028dc	          0x4889c7	                            mov rdi, rax	      1476	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_8
0x40028df	      0xb800000000	                              mov eax, 0	      1476	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_8
0x40028e4	      0xe800000000	                          call 0x40028e9	      1476	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_8
0x40028e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1477	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_9
0x40028ed	          0x4889c7	                            mov rdi, rax	      1477	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_9
0x40028f0	      0xe800000000	                          call 0x40028f5	      1477	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_9
0x40028f5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1480	wrstabs.c	FUNCTION_31	IF_3
0x40028f9	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1480	wrstabs.c	FUNCTION_31	IF_3
0x40028fd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1480	wrstabs.c	FUNCTION_31	IF_3
0x4002901	        0x48895038	             mov qword [rax + 0x38], rdx	      1480	wrstabs.c	FUNCTION_31	IF_3
0x4002905	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1483	wrstabs.c	FUNCTION_31	IF_5
0x4002909	            0x740f	                            je 0x400291a	      1483	wrstabs.c	FUNCTION_31	IF_5
0x400290b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1484	wrstabs.c	FUNCTION_31	IF_5
0x400290f	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1484	wrstabs.c	FUNCTION_31	IF_5
0x4002913	    0xc7401c010000	               mov dword [rax + 0x1c], 1	      1484	wrstabs.c	FUNCTION_31	IF_5
0x400291a	      0xb801000000	                              mov eax, 1	      1486	wrstabs.c	FUNCTION_31
0x400291f	              0xc9	                                   leave	      1487	wrstabs.c	FUNCTION_31
0x4002920	              0xc3	                                     ret	      1487	wrstabs.c	FUNCTION_31
stab_tag_type	FOR,0:ELSE,0:DO,0:WHILE,0:IF,1:SWITCH,0:CALL,2:functions,0	38
0x4003554	              0x55	                                push rbp	      1866	wrstabs.c	FUNCTION_41
0x4003555	          0x4889e5	                            mov rbp, rsp	      1866	wrstabs.c	FUNCTION_41
0x4003558	        0x4883ec40	                           sub rsp, 0x40	      1866	wrstabs.c	FUNCTION_41
0x400355c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1866	wrstabs.c	FUNCTION_41
0x4003560	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1866	wrstabs.c	FUNCTION_41
0x4003564	          0x8955cc	             mov dword [rbp - 0x34], edx	      1866	wrstabs.c	FUNCTION_41
0x4003567	          0x894dc8	             mov dword [rbp - 0x38], ecx	      1866	wrstabs.c	FUNCTION_41
0x400356a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1866	wrstabs.c	FUNCTION_41
0x4003573	        0x488945f8	                mov qword [rbp - 8], rax	      1866	wrstabs.c	FUNCTION_41
0x4003577	            0x31c0	                            xor eax, eax	      1866	wrstabs.c	FUNCTION_41
0x4003579	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1867	wrstabs.c	FUNCTION_41
0x400357d	        0x488945e8	             mov qword [rbp - 0x18], rax	      1867	wrstabs.c	FUNCTION_41
0x4003581	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1869	wrstabs.c	FUNCTION_41
0x4003588	        0x488d7de4	                   lea rdi, [rbp - 0x1c]	      1871	wrstabs.c	FUNCTION_41	CALL_1
0x400358c	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      1871	wrstabs.c	FUNCTION_41	CALL_1
0x400358f	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      1871	wrstabs.c	FUNCTION_41	CALL_1
0x4003592	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1871	wrstabs.c	FUNCTION_41	CALL_1
0x4003596	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1871	wrstabs.c	FUNCTION_41	CALL_1
0x400359a	          0x4989f8	                             mov r8, rdi	      1871	wrstabs.c	FUNCTION_41	CALL_1
0x400359d	          0x4889c7	                            mov rdi, rax	      1871	wrstabs.c	FUNCTION_41	CALL_1
0x40035a0	      0xe878ebffff	          call sym.stab_get_struct_index	      1871	wrstabs.c	FUNCTION_41	CALL_1
0x40035a5	        0x488945f0	             mov qword [rbp - 0x10], rax	      1871	wrstabs.c	FUNCTION_41	CALL_1
0x40035a9	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1872	wrstabs.c	FUNCTION_41	IF_1
0x40035ae	            0x7907	                           jns 0x40035b7	      1872	wrstabs.c	FUNCTION_41	IF_1
0x40035b0	      0xb800000000	                              mov eax, 0	      1873	wrstabs.c	FUNCTION_41	IF_1
0x40035b5	            0xeb16	                           jmp 0x40035cd	      1873	wrstabs.c	FUNCTION_41	IF_1
0x40035b7	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1875	wrstabs.c	FUNCTION_41	CALL_2
0x40035ba	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1875	wrstabs.c	FUNCTION_41	CALL_2
0x40035be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1875	wrstabs.c	FUNCTION_41	CALL_2
0x40035c2	          0x4889ce	                            mov rsi, rcx	      1875	wrstabs.c	FUNCTION_41	CALL_2
0x40035c5	          0x4889c7	                            mov rdi, rax	      1875	wrstabs.c	FUNCTION_41	CALL_2
0x40035c8	      0xe804ceffff	         call sym.stab_push_defined_type	      1875	wrstabs.c	FUNCTION_41	CALL_2
0x40035cd	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1876	wrstabs.c	FUNCTION_41
0x40035d1	    0x644833342528	                xor rsi, qword fs:[0x28]	      1876	wrstabs.c	FUNCTION_41
0x40035da	            0x7405	                            je 0x40035e1	      1876	wrstabs.c	FUNCTION_41
0x40035dc	      0xe800000000	                          call 0x40035e1	      1876	wrstabs.c	FUNCTION_41
0x40035e1	              0xc9	                                   leave	      1876	wrstabs.c	FUNCTION_41
0x40035e2	              0xc3	                                     ret	      1876	wrstabs.c	FUNCTION_41
stab_float_constant	FOR,0:ELSE,0:DO,0:WHILE,0:IF,1:SWITCH,0:CALL,5:functions,0	42
0x40038e6	              0x55	                                push rbp	      1973	wrstabs.c	FUNCTION_45
0x40038e7	          0x4889e5	                            mov rbp, rsp	      1973	wrstabs.c	FUNCTION_45
0x40038ea	        0x4883ec30	                           sub rsp, 0x30	      1973	wrstabs.c	FUNCTION_45
0x40038ee	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1973	wrstabs.c	FUNCTION_45
0x40038f2	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1973	wrstabs.c	FUNCTION_45
0x40038f6	      0xf20f1145d8	          movsd qword [rbp - 0x28], xmm0	      1973	wrstabs.c	FUNCTION_45
0x40038fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1974	wrstabs.c	FUNCTION_45
0x40038ff	        0x488945f0	             mov qword [rbp - 0x10], rax	      1974	wrstabs.c	FUNCTION_45
0x4003903	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x4003907	          0x4889c7	                            mov rdi, rax	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x400390a	      0xe800000000	                          call 0x400390f	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x400390f	        0x4883c014	                           add rax, 0x14	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x4003913	          0x4889c7	                            mov rdi, rax	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x4003916	      0xe800000000	                          call 0x400391b	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x400391b	        0x488945f8	                mov qword [rbp - 8], rax	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x400391f	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1978	wrstabs.c	FUNCTION_45	CALL_3
0x4003923	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1978	wrstabs.c	FUNCTION_45	CALL_3
0x4003927	        0x488b45f8	                mov rax, qword [rbp - 8]	      1978	wrstabs.c	FUNCTION_45	CALL_3
0x400392b	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1978	wrstabs.c	FUNCTION_45	CALL_3
0x400392f	      0xf20f1045d0	          movsd xmm0, qword [rbp - 0x30]	      1978	wrstabs.c	FUNCTION_45	CALL_3
0x4003934	      0xbe00000000	                              mov esi, 0	      1978	wrstabs.c	FUNCTION_45	CALL_3
0x4003939	          0x4889c7	                            mov rdi, rax	      1978	wrstabs.c	FUNCTION_45	CALL_3
0x400393c	      0xb801000000	                              mov eax, 1	      1978	wrstabs.c	FUNCTION_45	CALL_3
0x4003941	      0xe800000000	                          call 0x4003946	      1978	wrstabs.c	FUNCTION_45	CALL_3
0x4003946	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_4
0x400394a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_4
0x400394e	          0x4989d0	                             mov r8, rdx	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_4
0x4003951	      0xb900000000	                              mov ecx, 0	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_4
0x4003956	      0xba00000000	                              mov edx, 0	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_4
0x400395b	      0xbe80000000	                           mov esi, 0x80	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_4
0x4003960	          0x4889c7	                            mov rdi, rax	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_4
0x4003963	      0xe869c7ffff	              call sym.stab_write_symbol	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_4
0x4003968	            0x85c0	                           test eax, eax	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_4
0x400396a	            0x7507	                           jne 0x4003973	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_4
0x400396c	      0xb800000000	                              mov eax, 0	      1981	wrstabs.c	FUNCTION_45	IF_1
0x4003971	            0xeb11	                           jmp 0x4003984	      1981	wrstabs.c	FUNCTION_45	IF_1
0x4003973	        0x488b45f8	                mov rax, qword [rbp - 8]	      1983	wrstabs.c	FUNCTION_45	CALL_5
0x4003977	          0x4889c7	                            mov rdi, rax	      1983	wrstabs.c	FUNCTION_45	CALL_5
0x400397a	      0xe800000000	                          call 0x400397f	      1983	wrstabs.c	FUNCTION_45	CALL_5
0x400397f	      0xb801000000	                              mov eax, 1	      1985	wrstabs.c	FUNCTION_45
0x4003984	              0xc9	                                   leave	      1986	wrstabs.c	FUNCTION_45
0x4003985	              0xc3	                                     ret	      1986	wrstabs.c	FUNCTION_45
stab_start_source	FOR,0:ELSE,0:DO,0:WHILE,0:IF,0:SWITCH,0:CALL,1:functions,0	20
0x4000871	              0x55	                                push rbp	       562	wrstabs.c	FUNCTION_8
0x4000872	          0x4889e5	                            mov rbp, rsp	       562	wrstabs.c	FUNCTION_8
0x4000875	        0x4883ec20	                           sub rsp, 0x20	       562	wrstabs.c	FUNCTION_8
0x4000879	        0x48897de8	             mov qword [rbp - 0x18], rdi	       562	wrstabs.c	FUNCTION_8
0x400087d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       562	wrstabs.c	FUNCTION_8
0x4000881	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       563	wrstabs.c	FUNCTION_8
0x4000885	        0x488945f8	                mov qword [rbp - 8], rax	       563	wrstabs.c	FUNCTION_8
0x4000889	        0x488b45f8	                mov rax, qword [rbp - 8]	       569	wrstabs.c	FUNCTION_8
0x400088d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       569	wrstabs.c	FUNCTION_8
0x4000891	    0x488990100200	            mov qword [rax + 0x210], rdx	       569	wrstabs.c	FUNCTION_8
0x4000898	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       571	wrstabs.c	FUNCTION_8	CALL_1
0x400089c	        0x488b45f8	                mov rax, qword [rbp - 8]	       571	wrstabs.c	FUNCTION_8	CALL_1
0x40008a0	          0x4989d0	                             mov r8, rdx	       571	wrstabs.c	FUNCTION_8	CALL_1
0x40008a3	      0xb900000000	                              mov ecx, 0	       571	wrstabs.c	FUNCTION_8	CALL_1
0x40008a8	      0xba00000000	                              mov edx, 0	       571	wrstabs.c	FUNCTION_8	CALL_1
0x40008ad	      0xbe84000000	                           mov esi, 0x84	       571	wrstabs.c	FUNCTION_8	CALL_1
0x40008b2	          0x4889c7	                            mov rdi, rax	       571	wrstabs.c	FUNCTION_8	CALL_1
0x40008b5	      0xe817f8ffff	              call sym.stab_write_symbol	       571	wrstabs.c	FUNCTION_8	CALL_1
0x40008ba	              0xc9	                                   leave	       572	wrstabs.c	FUNCTION_8
0x40008bb	              0xc3	                                     ret	       572	wrstabs.c	FUNCTION_8
stab_class_static_method_variant	FOR,0:ELSE,0:DO,0:WHILE,0:IF,0:SWITCH,0:CALL,1:functions,0	25
0x400306f	              0x55	                                push rbp	      1750	wrstabs.c	FUNCTION_37
0x4003070	          0x4889e5	                            mov rbp, rsp	      1750	wrstabs.c	FUNCTION_37
0x4003073	        0x4883ec30	                           sub rsp, 0x30	      1750	wrstabs.c	FUNCTION_37
0x4003077	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1750	wrstabs.c	FUNCTION_37
0x400307b	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1750	wrstabs.c	FUNCTION_37
0x400307f	          0x8955dc	             mov dword [rbp - 0x24], edx	      1750	wrstabs.c	FUNCTION_37
0x4003082	          0x894dd8	             mov dword [rbp - 0x28], ecx	      1750	wrstabs.c	FUNCTION_37
0x4003085	        0x448945d4	             mov dword [rbp - 0x2c], r8d	      1750	wrstabs.c	FUNCTION_37
0x4003089	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1751	wrstabs.c	FUNCTION_37
0x400308d	        0x488945f8	                mov qword [rbp - 8], rax	      1751	wrstabs.c	FUNCTION_37
0x4003091	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x4003094	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x4003097	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x400309a	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x400309e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x40030a2	            0x6a00	                                  push 0	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x40030a4	            0x6a00	                                  push 0	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x40030a6	          0x4189f9	                            mov r9d, edi	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x40030a9	          0x4189c8	                            mov r8d, ecx	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x40030ac	      0xb901000000	                              mov ecx, 1	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x40030b1	          0x4889c7	                            mov rdi, rax	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x40030b4	      0xe8dafcffff	          call sym.stab_class_method_var	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x40030b9	        0x4883c410	                           add rsp, 0x10	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x40030bd	              0xc9	                                   leave	      1755	wrstabs.c	FUNCTION_37
0x40030be	              0xc3	                                     ret	      1755	wrstabs.c	FUNCTION_37
stab_typed_constant	FOR,0:ELSE,0:DO,0:WHILE,0:IF,1:SWITCH,0:CALL,8:functions,0	57
0x4003986	              0x55	                                push rbp	      1992	wrstabs.c	FUNCTION_46
0x4003987	          0x4889e5	                            mov rbp, rsp	      1992	wrstabs.c	FUNCTION_46
0x400398a	              0x53	                                push rbx	      1992	wrstabs.c	FUNCTION_46
0x400398b	        0x4883ec48	                           sub rsp, 0x48	      1992	wrstabs.c	FUNCTION_46
0x400398f	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1992	wrstabs.c	FUNCTION_46
0x4003993	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1992	wrstabs.c	FUNCTION_46
0x4003997	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1992	wrstabs.c	FUNCTION_46
0x400399b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1993	wrstabs.c	FUNCTION_46
0x400399f	        0x488945d8	             mov qword [rbp - 0x28], rax	      1993	wrstabs.c	FUNCTION_46
0x40039a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1996	wrstabs.c	FUNCTION_46	CALL_1
0x40039a7	          0x4889c7	                            mov rdi, rax	      1996	wrstabs.c	FUNCTION_46	CALL_1
0x40039aa	      0xe893caffff	                  call sym.stab_pop_type	      1996	wrstabs.c	FUNCTION_46	CALL_1
0x40039af	        0x488945e0	             mov qword [rbp - 0x20], rax	      1996	wrstabs.c	FUNCTION_46	CALL_1
0x40039b3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40039b7	          0x4889c7	                            mov rdi, rax	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40039ba	      0xe800000000	                          call 0x40039bf	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40039bf	          0x4889c3	                            mov rbx, rax	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40039c2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40039c6	          0x4889c7	                            mov rdi, rax	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40039c9	      0xe800000000	                          call 0x40039ce	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40039ce	          0x4801d8	                            add rax, rbx	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40039d1	        0x4883c014	                           add rax, 0x14	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40039d5	          0x4889c7	                            mov rdi, rax	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40039d8	      0xe800000000	                          call 0x40039dd	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40039dd	        0x488945e8	             mov qword [rbp - 0x18], rax	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40039e1	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	      1999	wrstabs.c	FUNCTION_46	CALL_5
0x40039e5	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1999	wrstabs.c	FUNCTION_46	CALL_5
0x40039e9	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1999	wrstabs.c	FUNCTION_46	CALL_5
0x40039ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1999	wrstabs.c	FUNCTION_46	CALL_5
0x40039f1	          0x4989f0	                             mov r8, rsi	      1999	wrstabs.c	FUNCTION_46	CALL_5
0x40039f4	      0xbe00000000	                              mov esi, 0	      1999	wrstabs.c	FUNCTION_46	CALL_5
0x40039f9	          0x4889c7	                            mov rdi, rax	      1999	wrstabs.c	FUNCTION_46	CALL_5
0x40039fc	      0xb800000000	                              mov eax, 0	      1999	wrstabs.c	FUNCTION_46	CALL_5
0x4003a01	      0xe800000000	                          call 0x4003a06	      1999	wrstabs.c	FUNCTION_46	CALL_5
0x4003a06	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2000	wrstabs.c	FUNCTION_46	CALL_6
0x4003a0a	          0x4889c7	                            mov rdi, rax	      2000	wrstabs.c	FUNCTION_46	CALL_6
0x4003a0d	      0xe800000000	                          call 0x4003a12	      2000	wrstabs.c	FUNCTION_46	CALL_6
0x4003a12	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_7
0x4003a16	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_7
0x4003a1a	          0x4989d0	                             mov r8, rdx	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_7
0x4003a1d	      0xb900000000	                              mov ecx, 0	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_7
0x4003a22	      0xba00000000	                              mov edx, 0	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_7
0x4003a27	      0xbe80000000	                           mov esi, 0x80	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_7
0x4003a2c	          0x4889c7	                            mov rdi, rax	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_7
0x4003a2f	      0xe89dc6ffff	              call sym.stab_write_symbol	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_7
0x4003a34	            0x85c0	                           test eax, eax	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_7
0x4003a36	            0x7507	                           jne 0x4003a3f	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_7
0x4003a38	      0xb800000000	                              mov eax, 0	      2003	wrstabs.c	FUNCTION_46	IF_1
0x4003a3d	            0xeb11	                           jmp 0x4003a50	      2003	wrstabs.c	FUNCTION_46	IF_1
0x4003a3f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2005	wrstabs.c	FUNCTION_46	CALL_8
0x4003a43	          0x4889c7	                            mov rdi, rax	      2005	wrstabs.c	FUNCTION_46	CALL_8
0x4003a46	      0xe800000000	                          call 0x4003a4b	      2005	wrstabs.c	FUNCTION_46	CALL_8
0x4003a4b	      0xb801000000	                              mov eax, 1	      2007	wrstabs.c	FUNCTION_46
0x4003a50	        0x4883c448	                           add rsp, 0x48	      2008	wrstabs.c	FUNCTION_46
0x4003a54	              0x5b	                                 pop rbx	      2008	wrstabs.c	FUNCTION_46
0x4003a55	              0x5d	                                 pop rbp	      2008	wrstabs.c	FUNCTION_46
0x4003a56	              0xc3	                                     ret	      2008	wrstabs.c	FUNCTION_46
stab_write_symbol	FOR,0:ELSE,3:DO,0:WHILE,0:IF,5:SWITCH,0:CALL,12:functions,0	158
0x40000d1	              0x55	                                push rbp	       340	wrstabs.c	FUNCTION_2
0x40000d2	          0x4889e5	                            mov rbp, rsp	       340	wrstabs.c	FUNCTION_2
0x40000d5	              0x53	                                push rbx	       340	wrstabs.c	FUNCTION_2
0x40000d6	        0x4883ec58	                           sub rsp, 0x58	       340	wrstabs.c	FUNCTION_2
0x40000da	        0x48897db8	             mov qword [rbp - 0x48], rdi	       340	wrstabs.c	FUNCTION_2
0x40000de	          0x8975b4	             mov dword [rbp - 0x4c], esi	       340	wrstabs.c	FUNCTION_2
0x40000e1	          0x8955b0	             mov dword [rbp - 0x50], edx	       340	wrstabs.c	FUNCTION_2
0x40000e4	        0x48894da8	             mov qword [rbp - 0x58], rcx	       340	wrstabs.c	FUNCTION_2
0x40000e8	        0x4c8945a0	              mov qword [rbp - 0x60], r8	       340	wrstabs.c	FUNCTION_2
0x40000ec	    0x64488b042528	                mov rax, qword fs:[0x28]	       340	wrstabs.c	FUNCTION_2
0x40000f5	        0x488945e8	             mov qword [rbp - 0x18], rax	       340	wrstabs.c	FUNCTION_2
0x40000f9	            0x31c0	                            xor eax, eax	       340	wrstabs.c	FUNCTION_2
0x40000fb	      0x48837da000	               cmp qword [rbp - 0x60], 0	       344	wrstabs.c	FUNCTION_2	IF_1
0x4000100	            0x750d	                           jne 0x400010f	       344	wrstabs.c	FUNCTION_2	IF_1
0x4000102	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       345	wrstabs.c	FUNCTION_2	IF_1
0x400010a	      0xe9ea000000	                           jmp 0x40001f9	       345	wrstabs.c	FUNCTION_2	IF_1
0x400010f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x4000113	        0x488d7838	                   lea rdi, [rax + 0x38]	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x4000117	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x400011b	      0xb901000000	                              mov ecx, 1	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x4000120	      0xba01000000	                              mov edx, 1	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x4000125	          0x4889c6	                            mov rsi, rax	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x4000128	      0xe800000000	                          call 0x400012d	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x400012d	        0x488945c8	             mov qword [rbp - 0x38], rax	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x4000131	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       351	wrstabs.c	FUNCTION_2	ELSE_1	IF_2
0x4000136	            0x7533	                           jne 0x400016b	       351	wrstabs.c	FUNCTION_2	ELSE_1	IF_2
0x4000138	      0xe800000000	                          call 0x400013d	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x400013d	            0x89c7	                            mov edi, eax	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x400013f	      0xe800000000	                          call 0x4000144	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4000144	          0x4889c3	                            mov rbx, rax	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4000147	      0xbf00000000	                              mov edi, 0	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x400014c	      0xe800000000	                          call 0x4000151	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4000151	          0x4889de	                            mov rsi, rbx	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4000154	          0x4889c7	                            mov rdi, rax	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4000157	      0xb800000000	                              mov eax, 0	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x400015c	      0xe800000000	                          call 0x4000161	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4000161	      0xb800000000	                              mov eax, 0	       355	wrstabs.c	FUNCTION_2	ELSE_1	IF_2
0x4000166	      0xe999010000	                           jmp 0x4000304	       355	wrstabs.c	FUNCTION_2	ELSE_1	IF_2
0x400016b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       357	wrstabs.c	FUNCTION_2	ELSE_1	IF_3
0x400016f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       357	wrstabs.c	FUNCTION_2	ELSE_1	IF_3
0x4000173	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       357	wrstabs.c	FUNCTION_2	ELSE_1	IF_3
0x4000177	            0x740e	                            je 0x4000187	       357	wrstabs.c	FUNCTION_2	ELSE_1	IF_3
0x4000179	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       358	wrstabs.c	FUNCTION_2	ELSE_1	IF_3
0x400017d	        0x488b4020	            mov rax, qword [rax + 0x20] 	       358	wrstabs.c	FUNCTION_2	ELSE_1	IF_3
0x4000181	        0x488945c0	             mov qword [rbp - 0x40], rax	       358	wrstabs.c	FUNCTION_2	ELSE_1	IF_3
0x4000185	            0xeb72	                           jmp 0x40001f9	       358	wrstabs.c	FUNCTION_2	ELSE_1	IF_3
0x4000187	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       361	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2
0x400018b	        0x488b4030	            mov rax, qword [rax + 0x30] 	       361	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2
0x400018f	        0x488945c0	             mov qword [rbp - 0x40], rax	       361	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2
0x4000193	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       362	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2
0x4000197	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       362	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2
0x400019b	        0x48895020	             mov qword [rax + 0x20], rdx	       362	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2
0x400019f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       363	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x40001a3	        0x488b4028	            mov rax, qword [rax + 0x28] 	       363	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x40001a7	          0x4885c0	                           test rax, rax	       363	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x40001aa	            0x750e	                           jne 0x40001ba	       363	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x40001ac	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       364	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x40001b0	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       364	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x40001b4	        0x48895020	             mov qword [rax + 0x20], rdx	       364	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x40001b8	            0xeb10	                           jmp 0x40001ca	       364	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x40001ba	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       366	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	ELSE_3
0x40001be	        0x488b4028	            mov rax, qword [rax + 0x28] 	       366	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	ELSE_3
0x40001c2	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       366	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	ELSE_3
0x40001c6	        0x48895018	             mov qword [rax + 0x18], rdx	       366	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	ELSE_3
0x40001ca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       367	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2
0x40001ce	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       367	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2
0x40001d2	        0x48895028	             mov qword [rax + 0x28], rdx	       367	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2
0x40001d6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40001da	        0x488b5830	            mov rbx, qword [rax + 0x30] 	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40001de	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40001e2	          0x4889c7	                            mov rdi, rax	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40001e5	      0xe800000000	                          call 0x40001ea	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40001ea	          0x4801d8	                            add rax, rbx	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40001ed	        0x488d5001	                      lea rdx, [rax + 1]	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40001f1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40001f5	        0x48895030	             mov qword [rax + 0x30], rdx	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40001f9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       373	wrstabs.c	FUNCTION_2	CALL_6
0x40001fd	          0x488b00	                    mov rax, qword [rax]	       373	wrstabs.c	FUNCTION_2	CALL_6
0x4000200	        0x488b4008	                mov rax, qword [rax + 8]	       373	wrstabs.c	FUNCTION_2	CALL_6
0x4000204	        0x488b4048	            mov rax, qword [rax + 0x48] 	       373	wrstabs.c	FUNCTION_2	CALL_6
0x4000208	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       373	wrstabs.c	FUNCTION_2	CALL_6
0x400020c	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       373	wrstabs.c	FUNCTION_2	CALL_6
0x4000210	          0x4889ce	                            mov rsi, rcx	       373	wrstabs.c	FUNCTION_2	CALL_6
0x4000213	          0x4889d7	                            mov rdi, rdx	       373	wrstabs.c	FUNCTION_2	CALL_6
0x4000216	            0xffd0	                                call rax	       373	wrstabs.c	FUNCTION_2	CALL_6
0x4000218	        0x488d45d0	                   lea rax, [rbp - 0x30]	       374	wrstabs.c	FUNCTION_2	CALL_7
0x400021c	        0x4883c004	                              add rax, 4	       374	wrstabs.c	FUNCTION_2	CALL_7
0x4000220	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       374	wrstabs.c	FUNCTION_2	CALL_7
0x4000223	            0x8810	                      mov byte [rax], dl	       374	wrstabs.c	FUNCTION_2	CALL_7
0x4000225	        0x488d45d0	                   lea rax, [rbp - 0x30]	       375	wrstabs.c	FUNCTION_2	CALL_8
0x4000229	        0x4883c005	                              add rax, 5	       375	wrstabs.c	FUNCTION_2	CALL_8
0x400022d	          0xc60000	                       mov byte [rax], 0	       375	wrstabs.c	FUNCTION_2	CALL_8
0x4000230	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       376	wrstabs.c	FUNCTION_2	CALL_9
0x4000234	          0x488b00	                    mov rax, qword [rax]	       376	wrstabs.c	FUNCTION_2	CALL_9
0x4000237	        0x488b4008	                mov rax, qword [rax + 8]	       376	wrstabs.c	FUNCTION_2	CALL_9
0x400023b	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       376	wrstabs.c	FUNCTION_2	CALL_9
0x400023f	        0x488d45d0	                   lea rax, [rbp - 0x30]	       376	wrstabs.c	FUNCTION_2	CALL_9
0x4000243	        0x4883c006	                              add rax, 6	       376	wrstabs.c	FUNCTION_2	CALL_9
0x4000247	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	       376	wrstabs.c	FUNCTION_2	CALL_9
0x400024a	          0x4863c9	                         movsxd rcx, ecx	       376	wrstabs.c	FUNCTION_2	CALL_9
0x400024d	          0x4889c6	                            mov rsi, rax	       376	wrstabs.c	FUNCTION_2	CALL_9
0x4000250	          0x4889cf	                            mov rdi, rcx	       376	wrstabs.c	FUNCTION_2	CALL_9
0x4000253	            0xffd2	                                call rdx	       376	wrstabs.c	FUNCTION_2	CALL_9
0x4000255	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       377	wrstabs.c	FUNCTION_2	CALL_10
0x4000259	          0x488b00	                    mov rax, qword [rax]	       377	wrstabs.c	FUNCTION_2	CALL_10
0x400025c	        0x488b4008	                mov rax, qword [rax + 8]	       377	wrstabs.c	FUNCTION_2	CALL_10
0x4000260	        0x488b5048	            mov rdx, qword [rax + 0x48] 	       377	wrstabs.c	FUNCTION_2	CALL_10
0x4000264	        0x488d45d0	                   lea rax, [rbp - 0x30]	       377	wrstabs.c	FUNCTION_2	CALL_10
0x4000268	        0x4883c008	                              add rax, 8	       377	wrstabs.c	FUNCTION_2	CALL_10
0x400026c	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       377	wrstabs.c	FUNCTION_2	CALL_10
0x4000270	          0x4889c6	                            mov rsi, rax	       377	wrstabs.c	FUNCTION_2	CALL_10
0x4000273	          0x4889cf	                            mov rdi, rcx	       377	wrstabs.c	FUNCTION_2	CALL_10
0x4000276	            0xffd2	                                call rdx	       377	wrstabs.c	FUNCTION_2	CALL_10
0x4000278	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       379	wrstabs.c	FUNCTION_2	IF_5
0x400027c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       379	wrstabs.c	FUNCTION_2	IF_5
0x4000280	        0x488d500c	                    lea rdx, [rax + 0xc]	       379	wrstabs.c	FUNCTION_2	IF_5
0x4000284	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       379	wrstabs.c	FUNCTION_2	IF_5
0x4000288	        0x488b4018	            mov rax, qword [rax + 0x18] 	       379	wrstabs.c	FUNCTION_2	IF_5
0x400028c	          0x4839c2	                            cmp rdx, rax	       379	wrstabs.c	FUNCTION_2	IF_5
0x400028f	            0x763a	                           jbe 0x40002cb	       379	wrstabs.c	FUNCTION_2	IF_5
0x4000291	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       381	wrstabs.c	FUNCTION_2	IF_5
0x4000295	        0x488b4018	            mov rax, qword [rax + 0x18] 	       381	wrstabs.c	FUNCTION_2	IF_5
0x4000299	        0x488d1400	                    lea rdx, [rax + rax]	       381	wrstabs.c	FUNCTION_2	IF_5
0x400029d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       381	wrstabs.c	FUNCTION_2	IF_5
0x40002a1	        0x48895018	             mov qword [rax + 0x18], rdx	       381	wrstabs.c	FUNCTION_2	IF_5
0x40002a5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x40002a9	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x40002ad	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x40002b1	        0x488b4008	                mov rax, qword [rax + 8]	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x40002b5	          0x4889d6	                            mov rsi, rdx	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x40002b8	          0x4889c7	                            mov rdi, rax	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x40002bb	      0xe800000000	                          call 0x40002c0	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x40002c0	          0x4889c2	                            mov rdx, rax	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x40002c3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x40002c7	        0x48895008	                mov qword [rax + 8], rdx	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x40002cb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       386	wrstabs.c	FUNCTION_2	CALL_12
0x40002cf	        0x488b5008	                mov rdx, qword [rax + 8]	       386	wrstabs.c	FUNCTION_2	CALL_12
0x40002d3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       386	wrstabs.c	FUNCTION_2	CALL_12
0x40002d7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       386	wrstabs.c	FUNCTION_2	CALL_12
0x40002db	          0x4801d0	                            add rax, rdx	       386	wrstabs.c	FUNCTION_2	CALL_12
0x40002de	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       386	wrstabs.c	FUNCTION_2	CALL_12
0x40002e2	          0x488910	                    mov qword [rax], rdx	       386	wrstabs.c	FUNCTION_2	CALL_12
0x40002e5	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       386	wrstabs.c	FUNCTION_2	CALL_12
0x40002e8	          0x895008	                mov dword [rax + 8], edx	       386	wrstabs.c	FUNCTION_2	CALL_12
0x40002eb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       388	wrstabs.c	FUNCTION_2
0x40002ef	        0x488b4010	            mov rax, qword [rax + 0x10] 	       388	wrstabs.c	FUNCTION_2
0x40002f3	        0x488d500c	                    lea rdx, [rax + 0xc]	       388	wrstabs.c	FUNCTION_2
0x40002f7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       388	wrstabs.c	FUNCTION_2
0x40002fb	        0x48895010	             mov qword [rax + 0x10], rdx	       388	wrstabs.c	FUNCTION_2
0x40002ff	      0xb801000000	                              mov eax, 1	       390	wrstabs.c	FUNCTION_2
0x4000304	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       391	wrstabs.c	FUNCTION_2
0x4000308	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       391	wrstabs.c	FUNCTION_2
0x4000311	            0x7405	                            je 0x4000318	       391	wrstabs.c	FUNCTION_2
0x4000313	      0xe800000000	                          call 0x4000318	       391	wrstabs.c	FUNCTION_2
0x4000318	        0x4883c458	                           add rsp, 0x58	       391	wrstabs.c	FUNCTION_2
0x400031c	              0x5b	                                 pop rbx	       391	wrstabs.c	FUNCTION_2
0x400031d	              0x5d	                                 pop rbp	       391	wrstabs.c	FUNCTION_2
0x400031e	              0xc3	                                     ret	       391	wrstabs.c	FUNCTION_2
stab_end_class_type	FOR,2:ELSE,0:DO,0:WHILE,0:IF,6:SWITCH,0:CALL,21:functions,0	235
0x4003146	              0x55	                                push rbp	      1777	wrstabs.c	FUNCTION_39
0x4003147	          0x4889e5	                            mov rbp, rsp	      1777	wrstabs.c	FUNCTION_39
0x400314a	              0x53	                                push rbx	      1777	wrstabs.c	FUNCTION_39
0x400314b	        0x4883ec38	                           sub rsp, 0x38	      1777	wrstabs.c	FUNCTION_39
0x400314f	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1777	wrstabs.c	FUNCTION_39
0x4003153	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1778	wrstabs.c	FUNCTION_39
0x4003157	        0x488945e0	             mov qword [rbp - 0x20], rax	      1778	wrstabs.c	FUNCTION_39
0x400315b	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1780	wrstabs.c	FUNCTION_39
0x4003162	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4003166	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x400316a	          0x4885c0	                           test rax, rax	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x400316d	            0x7411	                            je 0x4003180	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x400316f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4003173	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4003177	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x400317b	          0x4885c0	                           test rax, rax	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x400317e	            0x7519	                           jne 0x4003199	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4003180	      0xb900000000	                              mov ecx, 0	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4003185	      0xbaf7060000	                          mov edx, 0x6f7	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x400318a	      0xbe00000000	                              mov esi, 0	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x400318f	      0xbf00000000	                              mov edi, 0	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4003194	      0xe800000000	                          call 0x4003199	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4003199	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x400319d	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x40031a1	        0x488b4008	                mov rax, qword [rax + 8]	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x40031a5	          0x4889c7	                            mov rdi, rax	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x40031a8	      0xe800000000	                          call 0x40031ad	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x40031ad	          0x4889c3	                            mov rbx, rax	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x40031b0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1788	wrstabs.c	FUNCTION_39	CALL_3
0x40031b4	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1788	wrstabs.c	FUNCTION_39	CALL_3
0x40031b8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1788	wrstabs.c	FUNCTION_39	CALL_3
0x40031bc	          0x4889c7	                            mov rdi, rax	      1788	wrstabs.c	FUNCTION_39	CALL_3
0x40031bf	      0xe800000000	                          call 0x40031c4	      1788	wrstabs.c	FUNCTION_39	CALL_3
0x40031c4	          0x4801d8	                            add rax, rbx	      1788	wrstabs.c	FUNCTION_39	CALL_3
0x40031c7	        0x4883c00a	                            add rax, 0xa	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x40031cb	        0x488945d8	             mov qword [rbp - 0x28], rax	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x40031cf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1790	wrstabs.c	FUNCTION_39	IF_1
0x40031d3	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1790	wrstabs.c	FUNCTION_39	IF_1
0x40031d7	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1790	wrstabs.c	FUNCTION_39	IF_1
0x40031db	          0x4885c0	                           test rax, rax	      1790	wrstabs.c	FUNCTION_39	IF_1
0x40031de	            0x7455	                            je 0x4003235	      1790	wrstabs.c	FUNCTION_39	IF_1
0x40031e0	      0x488345d814	            add qword [rbp - 0x28], 0x14	      1792	wrstabs.c	FUNCTION_39	IF_1
0x40031e5	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x40031ec	            0xeb29	                           jmp 0x4003217	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x40031ee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x40031f2	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x40031f6	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x40031fa	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x40031fd	        0x48c1e203	                              shl rdx, 3	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x4003201	          0x4801d0	                            add rax, rdx	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x4003204	          0x488b00	                    mov rax, qword [rax]	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x4003207	          0x4889c7	                            mov rdi, rax	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x400320a	      0xe800000000	                          call 0x400320f	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x400320f	        0x480145d8	            add qword [rbp - 0x28], rax 	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x4003213	        0x8345d401	               add dword [rbp - 0x2c], 1	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x4003217	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x400321b	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x400321f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x4003223	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x4003226	        0x48c1e203	                              shl rdx, 3	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x400322a	          0x4801d0	                            add rax, rdx	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x400322d	          0x488b00	                    mov rax, qword [rax]	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x4003230	          0x4885c0	                           test rax, rax	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x4003233	            0x75b9	                           jne 0x40031ee	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x4003235	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1796	wrstabs.c	FUNCTION_39	IF_2
0x4003239	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1796	wrstabs.c	FUNCTION_39	IF_2
0x400323d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1796	wrstabs.c	FUNCTION_39	IF_2
0x4003241	          0x4885c0	                           test rax, rax	      1796	wrstabs.c	FUNCTION_39	IF_2
0x4003244	            0x7418	                            je 0x400325e	      1796	wrstabs.c	FUNCTION_39	IF_2
0x4003246	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1797	wrstabs.c	FUNCTION_39	CALL_5
0x400324a	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1797	wrstabs.c	FUNCTION_39	CALL_5
0x400324e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1797	wrstabs.c	FUNCTION_39	CALL_5
0x4003252	          0x4889c7	                            mov rdi, rax	      1797	wrstabs.c	FUNCTION_39	CALL_5
0x4003255	      0xe800000000	                          call 0x400325a	      1797	wrstabs.c	FUNCTION_39	CALL_5
0x400325a	        0x480145d8	            add qword [rbp - 0x28], rax 	      1797	wrstabs.c	FUNCTION_39	CALL_5
0x400325e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1798	wrstabs.c	FUNCTION_39	IF_3
0x4003262	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1798	wrstabs.c	FUNCTION_39	IF_3
0x4003266	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1798	wrstabs.c	FUNCTION_39	IF_3
0x400326a	          0x4885c0	                           test rax, rax	      1798	wrstabs.c	FUNCTION_39	IF_3
0x400326d	            0x7418	                            je 0x4003287	      1798	wrstabs.c	FUNCTION_39	IF_3
0x400326f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1799	wrstabs.c	FUNCTION_39	CALL_6
0x4003273	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1799	wrstabs.c	FUNCTION_39	CALL_6
0x4003277	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1799	wrstabs.c	FUNCTION_39	CALL_6
0x400327b	          0x4889c7	                            mov rdi, rax	      1799	wrstabs.c	FUNCTION_39	CALL_6
0x400327e	      0xe800000000	                          call 0x4003283	      1799	wrstabs.c	FUNCTION_39	CALL_6
0x4003283	        0x480145d8	            add qword [rbp - 0x28], rax 	      1799	wrstabs.c	FUNCTION_39	CALL_6
0x4003287	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1803	wrstabs.c	FUNCTION_39	CALL_7
0x400328b	          0x4889c7	                            mov rdi, rax	      1803	wrstabs.c	FUNCTION_39	CALL_7
0x400328e	      0xe800000000	                          call 0x4003293	      1803	wrstabs.c	FUNCTION_39	CALL_7
0x4003293	        0x488945e8	             mov qword [rbp - 0x18], rax	      1803	wrstabs.c	FUNCTION_39	CALL_7
0x4003297	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1805	wrstabs.c	FUNCTION_39	CALL_8
0x400329b	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1805	wrstabs.c	FUNCTION_39	CALL_8
0x400329f	        0x488b5008	                mov rdx, qword [rax + 8]	      1805	wrstabs.c	FUNCTION_39	CALL_8
0x40032a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1805	wrstabs.c	FUNCTION_39	CALL_8
0x40032a7	          0x4889d6	                            mov rsi, rdx	      1805	wrstabs.c	FUNCTION_39	CALL_8
0x40032aa	          0x4889c7	                            mov rdi, rax	      1805	wrstabs.c	FUNCTION_39	CALL_8
0x40032ad	      0xe800000000	                          call 0x40032b2	      1805	wrstabs.c	FUNCTION_39	CALL_8
0x40032b2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1807	wrstabs.c	FUNCTION_39	IF_4
0x40032b6	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1807	wrstabs.c	FUNCTION_39	IF_4
0x40032ba	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1807	wrstabs.c	FUNCTION_39	IF_4
0x40032be	          0x4885c0	                           test rax, rax	      1807	wrstabs.c	FUNCTION_39	IF_4
0x40032c1	     0xf84c6000000	                            je 0x400338d	      1807	wrstabs.c	FUNCTION_39	IF_4
0x40032c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_10
0x40032cb	          0x4889c7	                            mov rdi, rax	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_10
0x40032ce	      0xe800000000	                          call 0x40032d3	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_10
0x40032d3	          0x4889c2	                            mov rdx, rax	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_10
0x40032d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_10
0x40032da	        0x488d0c02	                    lea rcx, [rdx + rax]	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_10
0x40032de	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_10
0x40032e1	            0x89c2	                            mov edx, eax	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_10
0x40032e3	      0xbe00000000	                              mov esi, 0	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_10
0x40032e8	          0x4889cf	                            mov rdi, rcx	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_10
0x40032eb	      0xb800000000	                              mov eax, 0	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_10
0x40032f0	      0xe800000000	                          call 0x40032f5	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_10
0x40032f5	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x40032fc	            0xeb4d	                           jmp 0x400334b	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x40032fe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1812	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_11
0x4003302	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1812	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_11
0x4003306	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1812	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_11
0x400330a	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1812	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_11
0x400330d	        0x48c1e203	                              shl rdx, 3	      1812	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_11
0x4003311	          0x4801d0	                            add rax, rdx	      1812	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_11
0x4003314	          0x488b10	                    mov rdx, qword [rax]	      1812	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_11
0x4003317	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1812	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_11
0x400331b	          0x4889d6	                            mov rsi, rdx	      1812	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_11
0x400331e	          0x4889c7	                            mov rdi, rax	      1812	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_11
0x4003321	      0xe800000000	                          call 0x4003326	      1812	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_11
0x4003326	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1813	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_12
0x400332a	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1813	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_12
0x400332e	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1813	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_12
0x4003332	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1813	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_12
0x4003335	        0x48c1e203	                              shl rdx, 3	      1813	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_12
0x4003339	          0x4801d0	                            add rax, rdx	      1813	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_12
0x400333c	          0x488b00	                    mov rax, qword [rax]	      1813	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_12
0x400333f	          0x4889c7	                            mov rdi, rax	      1813	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_12
0x4003342	      0xe800000000	                          call 0x4003347	      1813	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_12
0x4003347	        0x8345d401	               add dword [rbp - 0x2c], 1	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x400334b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x400334f	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4003353	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4003357	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x400335a	        0x48c1e203	                              shl rdx, 3	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x400335e	          0x4801d0	                            add rax, rdx	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4003361	          0x488b00	                    mov rax, qword [rax]	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4003364	          0x4885c0	                           test rax, rax	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4003367	            0x7595	                           jne 0x40032fe	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4003369	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1815	wrstabs.c	FUNCTION_39	IF_4	CALL_13
0x400336d	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1815	wrstabs.c	FUNCTION_39	IF_4	CALL_13
0x4003371	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1815	wrstabs.c	FUNCTION_39	IF_4	CALL_13
0x4003375	          0x4889c7	                            mov rdi, rax	      1815	wrstabs.c	FUNCTION_39	IF_4	CALL_13
0x4003378	      0xe800000000	                          call 0x400337d	      1815	wrstabs.c	FUNCTION_39	IF_4	CALL_13
0x400337d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1816	wrstabs.c	FUNCTION_39	IF_4
0x4003381	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1816	wrstabs.c	FUNCTION_39	IF_4
0x4003385	    0x48c740280000	               mov qword [rax + 0x28], 0	      1816	wrstabs.c	FUNCTION_39	IF_4
0x400338d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1819	wrstabs.c	FUNCTION_39	CALL_14
0x4003391	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1819	wrstabs.c	FUNCTION_39	CALL_14
0x4003395	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1819	wrstabs.c	FUNCTION_39	CALL_14
0x4003399	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1819	wrstabs.c	FUNCTION_39	CALL_14
0x400339d	          0x4889d6	                            mov rsi, rdx	      1819	wrstabs.c	FUNCTION_39	CALL_14
0x40033a0	          0x4889c7	                            mov rdi, rax	      1819	wrstabs.c	FUNCTION_39	CALL_14
0x40033a3	      0xe800000000	                          call 0x40033a8	      1819	wrstabs.c	FUNCTION_39	CALL_14
0x40033a8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1820	wrstabs.c	FUNCTION_39	CALL_15
0x40033ac	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1820	wrstabs.c	FUNCTION_39	CALL_15
0x40033b0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1820	wrstabs.c	FUNCTION_39	CALL_15
0x40033b4	          0x4889c7	                            mov rdi, rax	      1820	wrstabs.c	FUNCTION_39	CALL_15
0x40033b7	      0xe800000000	                          call 0x40033bc	      1820	wrstabs.c	FUNCTION_39	CALL_15
0x40033bc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1821	wrstabs.c	FUNCTION_39
0x40033c0	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1821	wrstabs.c	FUNCTION_39
0x40033c4	    0x48c740200000	               mov qword [rax + 0x20], 0	      1821	wrstabs.c	FUNCTION_39
0x40033cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1823	wrstabs.c	FUNCTION_39	IF_5
0x40033d0	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1823	wrstabs.c	FUNCTION_39	IF_5
0x40033d4	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1823	wrstabs.c	FUNCTION_39	IF_5
0x40033d8	          0x4885c0	                           test rax, rax	      1823	wrstabs.c	FUNCTION_39	IF_5
0x40033db	            0x743f	                            je 0x400341c	      1823	wrstabs.c	FUNCTION_39	IF_5
0x40033dd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1825	wrstabs.c	FUNCTION_39	IF_5	CALL_16
0x40033e1	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1825	wrstabs.c	FUNCTION_39	IF_5	CALL_16
0x40033e5	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1825	wrstabs.c	FUNCTION_39	IF_5	CALL_16
0x40033e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1825	wrstabs.c	FUNCTION_39	IF_5	CALL_16
0x40033ed	          0x4889d6	                            mov rsi, rdx	      1825	wrstabs.c	FUNCTION_39	IF_5	CALL_16
0x40033f0	          0x4889c7	                            mov rdi, rax	      1825	wrstabs.c	FUNCTION_39	IF_5	CALL_16
0x40033f3	      0xe800000000	                          call 0x40033f8	      1825	wrstabs.c	FUNCTION_39	IF_5	CALL_16
0x40033f8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1826	wrstabs.c	FUNCTION_39	IF_5	CALL_17
0x40033fc	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1826	wrstabs.c	FUNCTION_39	IF_5	CALL_17
0x4003400	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1826	wrstabs.c	FUNCTION_39	IF_5	CALL_17
0x4003404	          0x4889c7	                            mov rdi, rax	      1826	wrstabs.c	FUNCTION_39	IF_5	CALL_17
0x4003407	      0xe800000000	                          call 0x400340c	      1826	wrstabs.c	FUNCTION_39	IF_5	CALL_17
0x400340c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1827	wrstabs.c	FUNCTION_39	IF_5
0x4003410	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1827	wrstabs.c	FUNCTION_39	IF_5
0x4003414	    0x48c740300000	               mov qword [rax + 0x30], 0	      1827	wrstabs.c	FUNCTION_39	IF_5
0x400341c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1830	wrstabs.c	FUNCTION_39	CALL_18
0x4003420	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1830	wrstabs.c	FUNCTION_39	CALL_18
0x4003427	          0x4889c2	                            mov rdx, rax	      1830	wrstabs.c	FUNCTION_39	CALL_18
0x400342a	      0xb800000000	                              mov eax, 0	      1830	wrstabs.c	FUNCTION_39	CALL_18
0x400342f	          0x4889d7	                            mov rdi, rdx	      1830	wrstabs.c	FUNCTION_39	CALL_18
0x4003432	            0xf2ae	              repne scasb al, byte [rdi]	      1830	wrstabs.c	FUNCTION_39	CALL_18
0x4003434	          0x4889c8	                            mov rax, rcx	      1830	wrstabs.c	FUNCTION_39	CALL_18
0x4003437	          0x48f7d0	                                 not rax	      1830	wrstabs.c	FUNCTION_39	CALL_18
0x400343a	        0x488d50ff	                      lea rdx, [rax - 1]	      1830	wrstabs.c	FUNCTION_39	CALL_18
0x400343e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1830	wrstabs.c	FUNCTION_39	CALL_18
0x4003442	          0x4801d0	                            add rax, rdx	      1830	wrstabs.c	FUNCTION_39	CALL_18
0x4003445	      0x66c7003b00	                    mov word [rax], 0x3b	      1830	wrstabs.c	FUNCTION_39	CALL_18
0x400344a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1832	wrstabs.c	FUNCTION_39	IF_6
0x400344e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1832	wrstabs.c	FUNCTION_39	IF_6
0x4003452	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1832	wrstabs.c	FUNCTION_39	IF_6
0x4003456	          0x4885c0	                           test rax, rax	      1832	wrstabs.c	FUNCTION_39	IF_6
0x4003459	            0x743f	                            je 0x400349a	      1832	wrstabs.c	FUNCTION_39	IF_6
0x400345b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1834	wrstabs.c	FUNCTION_39	IF_6	CALL_19
0x400345f	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1834	wrstabs.c	FUNCTION_39	IF_6	CALL_19
0x4003463	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1834	wrstabs.c	FUNCTION_39	IF_6	CALL_19
0x4003467	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1834	wrstabs.c	FUNCTION_39	IF_6	CALL_19
0x400346b	          0x4889d6	                            mov rsi, rdx	      1834	wrstabs.c	FUNCTION_39	IF_6	CALL_19
0x400346e	          0x4889c7	                            mov rdi, rax	      1834	wrstabs.c	FUNCTION_39	IF_6	CALL_19
0x4003471	      0xe800000000	                          call 0x4003476	      1834	wrstabs.c	FUNCTION_39	IF_6	CALL_19
0x4003476	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1835	wrstabs.c	FUNCTION_39	IF_6	CALL_20
0x400347a	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1835	wrstabs.c	FUNCTION_39	IF_6	CALL_20
0x400347e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1835	wrstabs.c	FUNCTION_39	IF_6	CALL_20
0x4003482	          0x4889c7	                            mov rdi, rax	      1835	wrstabs.c	FUNCTION_39	IF_6	CALL_20
0x4003485	      0xe800000000	                          call 0x400348a	      1835	wrstabs.c	FUNCTION_39	IF_6	CALL_20
0x400348a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1836	wrstabs.c	FUNCTION_39	IF_6
0x400348e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1836	wrstabs.c	FUNCTION_39	IF_6
0x4003492	    0x48c740380000	               mov qword [rax + 0x38], 0	      1836	wrstabs.c	FUNCTION_39	IF_6
0x400349a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1841	wrstabs.c	FUNCTION_39	CALL_21
0x400349e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1841	wrstabs.c	FUNCTION_39	CALL_21
0x40034a2	        0x488b4008	                mov rax, qword [rax + 8]	      1841	wrstabs.c	FUNCTION_39	CALL_21
0x40034a6	          0x4889c7	                            mov rdi, rax	      1841	wrstabs.c	FUNCTION_39	CALL_21
0x40034a9	      0xe800000000	                          call 0x40034ae	      1841	wrstabs.c	FUNCTION_39	CALL_21
0x40034ae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1842	wrstabs.c	FUNCTION_39
0x40034b2	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1842	wrstabs.c	FUNCTION_39
0x40034b6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1842	wrstabs.c	FUNCTION_39
0x40034ba	        0x48895008	                mov qword [rax + 8], rdx	      1842	wrstabs.c	FUNCTION_39
0x40034be	      0xb801000000	                              mov eax, 1	      1844	wrstabs.c	FUNCTION_39
0x40034c3	        0x4883c438	                           add rsp, 0x38	      1845	wrstabs.c	FUNCTION_39
0x40034c7	              0x5b	                                 pop rbx	      1845	wrstabs.c	FUNCTION_39
0x40034c8	              0x5d	                                 pop rbp	      1845	wrstabs.c	FUNCTION_39
0x40034c9	              0xc3	                                     ret	      1845	wrstabs.c	FUNCTION_39
stab_typdef	FOR,0:ELSE,1:DO,0:WHILE,0:IF,3:SWITCH,0:CALL,13:functions,0	110
0x40035e3	              0x55	                                push rbp	      1882	wrstabs.c	FUNCTION_42
0x40035e4	          0x4889e5	                            mov rbp, rsp	      1882	wrstabs.c	FUNCTION_42
0x40035e7	              0x53	                                push rbx	      1882	wrstabs.c	FUNCTION_42
0x40035e8	        0x4883ec48	                           sub rsp, 0x48	      1882	wrstabs.c	FUNCTION_42
0x40035ec	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1882	wrstabs.c	FUNCTION_42
0x40035f0	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1882	wrstabs.c	FUNCTION_42
0x40035f4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1883	wrstabs.c	FUNCTION_42
0x40035f8	        0x488945d0	             mov qword [rbp - 0x30], rax	      1883	wrstabs.c	FUNCTION_42
0x40035fc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1889	wrstabs.c	FUNCTION_42
0x4003600	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1889	wrstabs.c	FUNCTION_42
0x4003604	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1889	wrstabs.c	FUNCTION_42
0x4003608	        0x488945c8	             mov qword [rbp - 0x38], rax	      1889	wrstabs.c	FUNCTION_42
0x400360c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1890	wrstabs.c	FUNCTION_42
0x4003610	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1890	wrstabs.c	FUNCTION_42
0x4003614	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1890	wrstabs.c	FUNCTION_42
0x4003617	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1890	wrstabs.c	FUNCTION_42
0x400361a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1891	wrstabs.c	FUNCTION_42	CALL_1
0x400361e	          0x4889c7	                            mov rdi, rax	      1891	wrstabs.c	FUNCTION_42	CALL_1
0x4003621	      0xe81cceffff	                  call sym.stab_pop_type	      1891	wrstabs.c	FUNCTION_42	CALL_1
0x4003626	        0x488945d8	             mov qword [rbp - 0x28], rax	      1891	wrstabs.c	FUNCTION_42	CALL_1
0x400362a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x400362e	          0x4889c7	                            mov rdi, rax	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4003631	      0xe800000000	                          call 0x4003636	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4003636	          0x4889c3	                            mov rbx, rax	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4003639	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x400363d	          0x4889c7	                            mov rdi, rax	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4003640	      0xe800000000	                          call 0x4003645	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4003645	          0x4801d8	                            add rax, rbx	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4003648	        0x4883c014	                           add rax, 0x14	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x400364c	          0x4889c7	                            mov rdi, rax	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x400364f	      0xe800000000	                          call 0x4003654	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4003654	        0x488945e0	             mov qword [rbp - 0x20], rax	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4003658	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1895	wrstabs.c	FUNCTION_42	IF_1
0x400365d	            0x7e20	                           jle 0x400367f	      1895	wrstabs.c	FUNCTION_42	IF_1
0x400365f	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1896	wrstabs.c	FUNCTION_42	CALL_5
0x4003663	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1896	wrstabs.c	FUNCTION_42	CALL_5
0x4003667	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1896	wrstabs.c	FUNCTION_42	CALL_5
0x400366b	      0xbe00000000	                              mov esi, 0	      1896	wrstabs.c	FUNCTION_42	CALL_5
0x4003670	          0x4889c7	                            mov rdi, rax	      1896	wrstabs.c	FUNCTION_42	CALL_5
0x4003673	      0xb800000000	                              mov eax, 0	      1896	wrstabs.c	FUNCTION_42	CALL_5
0x4003678	      0xe800000000	                          call 0x400367d	      1896	wrstabs.c	FUNCTION_42	CALL_5
0x400367d	            0xeb45	                           jmp 0x40036c4	      1896	wrstabs.c	FUNCTION_42	CALL_5
0x400367f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1899	wrstabs.c	FUNCTION_42	ELSE_1
0x4003683	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1899	wrstabs.c	FUNCTION_42	ELSE_1
0x4003687	        0x488945c8	             mov qword [rbp - 0x38], rax	      1899	wrstabs.c	FUNCTION_42	ELSE_1
0x400368b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1900	wrstabs.c	FUNCTION_42	ELSE_1
0x400368f	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1900	wrstabs.c	FUNCTION_42	ELSE_1
0x4003693	        0x488d5001	                      lea rdx, [rax + 1]	      1900	wrstabs.c	FUNCTION_42	ELSE_1
0x4003697	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1900	wrstabs.c	FUNCTION_42	ELSE_1
0x400369b	        0x48895068	             mov qword [rax + 0x68], rdx	      1900	wrstabs.c	FUNCTION_42	ELSE_1
0x400369f	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      1901	wrstabs.c	FUNCTION_42	ELSE_1	CALL_6
0x40036a3	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1901	wrstabs.c	FUNCTION_42	ELSE_1	CALL_6
0x40036a7	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1901	wrstabs.c	FUNCTION_42	ELSE_1	CALL_6
0x40036ab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1901	wrstabs.c	FUNCTION_42	ELSE_1	CALL_6
0x40036af	          0x4989f0	                             mov r8, rsi	      1901	wrstabs.c	FUNCTION_42	ELSE_1	CALL_6
0x40036b2	      0xbe00000000	                              mov esi, 0	      1901	wrstabs.c	FUNCTION_42	ELSE_1	CALL_6
0x40036b7	          0x4889c7	                            mov rdi, rax	      1901	wrstabs.c	FUNCTION_42	ELSE_1	CALL_6
0x40036ba	      0xb800000000	                              mov eax, 0	      1901	wrstabs.c	FUNCTION_42	ELSE_1	CALL_6
0x40036bf	      0xe800000000	                          call 0x40036c4	      1901	wrstabs.c	FUNCTION_42	ELSE_1	CALL_6
0x40036c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1904	wrstabs.c	FUNCTION_42	CALL_7
0x40036c8	          0x4889c7	                            mov rdi, rax	      1904	wrstabs.c	FUNCTION_42	CALL_7
0x40036cb	      0xe800000000	                          call 0x40036d0	      1904	wrstabs.c	FUNCTION_42	CALL_7
0x40036d0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_8
0x40036d4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_8
0x40036d8	          0x4989d0	                             mov r8, rdx	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_8
0x40036db	      0xb900000000	                              mov ecx, 0	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_8
0x40036e0	      0xba00000000	                              mov edx, 0	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_8
0x40036e5	      0xbe80000000	                           mov esi, 0x80	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_8
0x40036ea	          0x4889c7	                            mov rdi, rax	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_8
0x40036ed	      0xe8dfc9ffff	              call sym.stab_write_symbol	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_8
0x40036f2	            0x85c0	                           test eax, eax	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_8
0x40036f4	            0x750a	                           jne 0x4003700	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_8
0x40036f6	      0xb800000000	                              mov eax, 0	      1907	wrstabs.c	FUNCTION_42	IF_2
0x40036fb	      0xe983000000	                           jmp 0x4003783	      1907	wrstabs.c	FUNCTION_42	IF_2
0x4003700	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1909	wrstabs.c	FUNCTION_42	CALL_9
0x4003704	          0x4889c7	                            mov rdi, rax	      1909	wrstabs.c	FUNCTION_42	CALL_9
0x4003707	      0xe800000000	                          call 0x400370c	      1909	wrstabs.c	FUNCTION_42	CALL_9
0x400370c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1911	wrstabs.c	FUNCTION_42
0x4003710	    0x488db8b80100	                  lea rdi, [rax + 0x1b8]	      1911	wrstabs.c	FUNCTION_42
0x4003717	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1911	wrstabs.c	FUNCTION_42
0x400371b	      0xb900000000	                              mov ecx, 0	      1911	wrstabs.c	FUNCTION_42
0x4003720	      0xba01000000	                              mov edx, 1	      1911	wrstabs.c	FUNCTION_42
0x4003725	          0x4889c6	                            mov rsi, rax	      1911	wrstabs.c	FUNCTION_42
0x4003728	      0xe800000000	                          call 0x400372d	      1911	wrstabs.c	FUNCTION_42
0x400372d	        0x488945e8	             mov qword [rbp - 0x18], rax	      1911	wrstabs.c	FUNCTION_42
0x4003731	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1912	wrstabs.c	FUNCTION_42	IF_3
0x4003736	            0x7530	                           jne 0x4003768	      1912	wrstabs.c	FUNCTION_42	IF_3
0x4003738	      0xe800000000	                          call 0x400373d	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_11
0x400373d	            0x89c7	                            mov edi, eax	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_11
0x400373f	      0xe800000000	                          call 0x4003744	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_11
0x4003744	          0x4889c3	                            mov rbx, rax	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_11
0x4003747	      0xbf00000000	                              mov edi, 0	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_11
0x400374c	      0xe800000000	                          call 0x4003751	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_11
0x4003751	          0x4889de	                            mov rsi, rbx	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_11
0x4003754	          0x4889c7	                            mov rdi, rax	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_11
0x4003757	      0xb800000000	                              mov eax, 0	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_11
0x400375c	      0xe800000000	                          call 0x4003761	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_11
0x4003761	      0xb800000000	                              mov eax, 0	      1916	wrstabs.c	FUNCTION_42	IF_3
0x4003766	            0xeb1b	                           jmp 0x4003783	      1916	wrstabs.c	FUNCTION_42	IF_3
0x4003768	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1921	wrstabs.c	FUNCTION_42
0x400376c	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1921	wrstabs.c	FUNCTION_42
0x4003770	        0x48895020	             mov qword [rax + 0x20], rdx	      1921	wrstabs.c	FUNCTION_42
0x4003774	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1922	wrstabs.c	FUNCTION_42
0x4003778	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1922	wrstabs.c	FUNCTION_42
0x400377b	          0x895028	             mov dword [rax + 0x28], edx	      1922	wrstabs.c	FUNCTION_42
0x400377e	      0xb801000000	                              mov eax, 1	      1924	wrstabs.c	FUNCTION_42
0x4003783	        0x4883c448	                           add rsp, 0x48	      1925	wrstabs.c	FUNCTION_42
0x4003787	              0x5b	                                 pop rbx	      1925	wrstabs.c	FUNCTION_42
0x4003788	              0x5d	                                 pop rbp	      1925	wrstabs.c	FUNCTION_42
0x4003789	              0xc3	                                     ret	      1925	wrstabs.c	FUNCTION_42
stab_pop_type	FOR,0:ELSE,0:DO,0:WHILE,0:IF,0:SWITCH,0:CALL,2:functions,0	27
0x4000442	              0x55	                                push rbp	       435	wrstabs.c	FUNCTION_5
0x4000443	          0x4889e5	                            mov rbp, rsp	       435	wrstabs.c	FUNCTION_5
0x4000446	        0x4883ec20	                           sub rsp, 0x20	       435	wrstabs.c	FUNCTION_5
0x400044a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       435	wrstabs.c	FUNCTION_5
0x400044e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       439	wrstabs.c	FUNCTION_5
0x4000452	        0x488b4060	            mov rax, qword [rax + 0x60] 	       439	wrstabs.c	FUNCTION_5
0x4000456	        0x488945f0	             mov qword [rbp - 0x10], rax	       439	wrstabs.c	FUNCTION_5
0x400045a	      0x48837df000	               cmp qword [rbp - 0x10], 0	       440	wrstabs.c	FUNCTION_5	CALL_1
0x400045f	            0x7519	                           jne 0x400047a	       440	wrstabs.c	FUNCTION_5	CALL_1
0x4000461	      0xb900000000	                              mov ecx, 0	       440	wrstabs.c	FUNCTION_5	CALL_1
0x4000466	      0xbab8010000	                          mov edx, 0x1b8	       440	wrstabs.c	FUNCTION_5	CALL_1
0x400046b	      0xbe00000000	                              mov esi, 0	       440	wrstabs.c	FUNCTION_5	CALL_1
0x4000470	      0xbf00000000	                              mov edi, 0	       440	wrstabs.c	FUNCTION_5	CALL_1
0x4000475	      0xe800000000	                          call 0x400047a	       440	wrstabs.c	FUNCTION_5	CALL_1
0x400047a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       442	wrstabs.c	FUNCTION_5
0x400047e	          0x488b10	                    mov rdx, qword [rax]	       442	wrstabs.c	FUNCTION_5
0x4000481	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       442	wrstabs.c	FUNCTION_5
0x4000485	        0x48895060	             mov qword [rax + 0x60], rdx	       442	wrstabs.c	FUNCTION_5
0x4000489	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       444	wrstabs.c	FUNCTION_5
0x400048d	        0x488b4008	                mov rax, qword [rax + 8]	       444	wrstabs.c	FUNCTION_5
0x4000491	        0x488945f8	                mov qword [rbp - 8], rax	       444	wrstabs.c	FUNCTION_5
0x4000495	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       446	wrstabs.c	FUNCTION_5	CALL_2
0x4000499	          0x4889c7	                            mov rdi, rax	       446	wrstabs.c	FUNCTION_5	CALL_2
0x400049c	      0xe800000000	                          call 0x40004a1	       446	wrstabs.c	FUNCTION_5	CALL_2
0x40004a1	        0x488b45f8	                mov rax, qword [rbp - 8]	       448	wrstabs.c	FUNCTION_5
0x40004a5	              0xc9	                                   leave	       449	wrstabs.c	FUNCTION_5
0x40004a6	              0xc3	                                     ret	       449	wrstabs.c	FUNCTION_5
stab_set_type	FOR,0:ELSE,1:DO,0:WHILE,0:IF,2:SWITCH,0:CALL,9:functions,0	75
0x4001aaf	              0x55	                                push rbp	      1070	wrstabs.c	FUNCTION_22
0x4001ab0	          0x4889e5	                            mov rbp, rsp	      1070	wrstabs.c	FUNCTION_22
0x4001ab3	        0x4883ec40	                           sub rsp, 0x40	      1070	wrstabs.c	FUNCTION_22
0x4001ab7	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1070	wrstabs.c	FUNCTION_22
0x4001abb	          0x8975c4	             mov dword [rbp - 0x3c], esi	      1070	wrstabs.c	FUNCTION_22
0x4001abe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1071	wrstabs.c	FUNCTION_22
0x4001ac2	        0x488945e8	             mov qword [rbp - 0x18], rax	      1071	wrstabs.c	FUNCTION_22
0x4001ac6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1076	wrstabs.c	FUNCTION_22
0x4001aca	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1076	wrstabs.c	FUNCTION_22
0x4001ace	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1076	wrstabs.c	FUNCTION_22
0x4001ad1	          0x8945dc	             mov dword [rbp - 0x24], eax	      1076	wrstabs.c	FUNCTION_22
0x4001ad4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1078	wrstabs.c	FUNCTION_22	CALL_1
0x4001ad8	          0x4889c7	                            mov rdi, rax	      1078	wrstabs.c	FUNCTION_22	CALL_1
0x4001adb	      0xe862e9ffff	                  call sym.stab_pop_type	      1078	wrstabs.c	FUNCTION_22	CALL_1
0x4001ae0	        0x488945f0	             mov qword [rbp - 0x10], rax	      1078	wrstabs.c	FUNCTION_22	CALL_1
0x4001ae4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4001ae8	          0x4889c7	                            mov rdi, rax	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4001aeb	      0xe800000000	                          call 0x4001af0	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4001af0	        0x4883c01e	                           add rax, 0x1e	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4001af4	          0x4889c7	                            mov rdi, rax	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4001af7	      0xe800000000	                          call 0x4001afc	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4001afc	        0x488945f8	                mov qword [rbp - 8], rax	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4001b00	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1081	wrstabs.c	FUNCTION_22	IF_1
0x4001b04	            0x7511	                           jne 0x4001b17	      1081	wrstabs.c	FUNCTION_22	IF_1
0x4001b06	        0x488b45f8	                mov rax, qword [rbp - 8]	      1083	wrstabs.c	FUNCTION_22	IF_1
0x4001b0a	          0xc60000	                       mov byte [rax], 0	      1083	wrstabs.c	FUNCTION_22	IF_1
0x4001b0d	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1084	wrstabs.c	FUNCTION_22	IF_1
0x4001b15	            0xeb41	                           jmp 0x4001b58	      1084	wrstabs.c	FUNCTION_22	IF_1
0x4001b17	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1090	wrstabs.c	FUNCTION_22	ELSE_1
0x4001b1b	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1090	wrstabs.c	FUNCTION_22	ELSE_1
0x4001b1f	        0x488945e0	             mov qword [rbp - 0x20], rax	      1090	wrstabs.c	FUNCTION_22	ELSE_1
0x4001b23	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1091	wrstabs.c	FUNCTION_22	ELSE_1
0x4001b27	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1091	wrstabs.c	FUNCTION_22	ELSE_1
0x4001b2b	        0x488d5001	                      lea rdx, [rax + 1]	      1091	wrstabs.c	FUNCTION_22	ELSE_1
0x4001b2f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1091	wrstabs.c	FUNCTION_22	ELSE_1
0x4001b33	        0x48895068	             mov qword [rax + 0x68], rdx	      1091	wrstabs.c	FUNCTION_22	ELSE_1
0x4001b37	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      1092	wrstabs.c	FUNCTION_22	ELSE_1
0x4001b3e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1093	wrstabs.c	FUNCTION_22	ELSE_1	CALL_4
0x4001b42	        0x488b45f8	                mov rax, qword [rbp - 8]	      1093	wrstabs.c	FUNCTION_22	ELSE_1	CALL_4
0x4001b46	      0xbe00000000	                              mov esi, 0	      1093	wrstabs.c	FUNCTION_22	ELSE_1	CALL_4
0x4001b4b	          0x4889c7	                            mov rdi, rax	      1093	wrstabs.c	FUNCTION_22	ELSE_1	CALL_4
0x4001b4e	      0xb800000000	                              mov eax, 0	      1093	wrstabs.c	FUNCTION_22	ELSE_1	CALL_4
0x4001b53	      0xe800000000	                          call 0x4001b58	      1093	wrstabs.c	FUNCTION_22	ELSE_1	CALL_4
0x4001b58	        0x488b45f8	                mov rax, qword [rbp - 8]	      1096	wrstabs.c	FUNCTION_22	CALL_6
0x4001b5c	          0x4889c7	                            mov rdi, rax	      1096	wrstabs.c	FUNCTION_22	CALL_6
0x4001b5f	      0xe800000000	                          call 0x4001b64	      1096	wrstabs.c	FUNCTION_22	CALL_6
0x4001b64	          0x4889c2	                            mov rdx, rax	      1096	wrstabs.c	FUNCTION_22	CALL_6
0x4001b67	        0x488b45f8	                mov rax, qword [rbp - 8]	      1096	wrstabs.c	FUNCTION_22	CALL_6
0x4001b6b	        0x488d0c02	                    lea rcx, [rdx + rax]	      1096	wrstabs.c	FUNCTION_22	CALL_6
0x4001b6f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1096	wrstabs.c	FUNCTION_22	CALL_6
0x4001b73	          0x4889c2	                            mov rdx, rax	      1096	wrstabs.c	FUNCTION_22	CALL_6
0x4001b76	      0xbe00000000	                              mov esi, 0	      1096	wrstabs.c	FUNCTION_22	CALL_6
0x4001b7b	          0x4889cf	                            mov rdi, rcx	      1096	wrstabs.c	FUNCTION_22	CALL_6
0x4001b7e	      0xb800000000	                              mov eax, 0	      1096	wrstabs.c	FUNCTION_22	CALL_6
0x4001b83	      0xe800000000	                          call 0x4001b88	      1096	wrstabs.c	FUNCTION_22	CALL_6
0x4001b88	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1097	wrstabs.c	FUNCTION_22	CALL_7
0x4001b8c	          0x4889c7	                            mov rdi, rax	      1097	wrstabs.c	FUNCTION_22	CALL_7
0x4001b8f	      0xe800000000	                          call 0x4001b94	      1097	wrstabs.c	FUNCTION_22	CALL_7
0x4001b94	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_8
0x4001b97	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_8
0x4001b9b	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_8
0x4001b9f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_8
0x4001ba3	    0x41b800000000	                              mov r8d, 0	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_8
0x4001ba9	          0x4889c7	                            mov rdi, rax	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_8
0x4001bac	      0xe86ee7ffff	               call sym.stab_push_string	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_8
0x4001bb1	            0x85c0	                           test eax, eax	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_8
0x4001bb3	            0x7507	                           jne 0x4001bbc	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_8
0x4001bb5	      0xb800000000	                              mov eax, 0	      1100	wrstabs.c	FUNCTION_22	IF_2
0x4001bba	            0xeb11	                           jmp 0x4001bcd	      1100	wrstabs.c	FUNCTION_22	IF_2
0x4001bbc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1102	wrstabs.c	FUNCTION_22	CALL_9
0x4001bc0	          0x4889c7	                            mov rdi, rax	      1102	wrstabs.c	FUNCTION_22	CALL_9
0x4001bc3	      0xe800000000	                          call 0x4001bc8	      1102	wrstabs.c	FUNCTION_22	CALL_9
0x4001bc8	      0xb801000000	                              mov eax, 1	      1104	wrstabs.c	FUNCTION_22
0x4001bcd	              0xc9	                                   leave	      1105	wrstabs.c	FUNCTION_22
0x4001bce	              0xc3	                                     ret	      1105	wrstabs.c	FUNCTION_22
stab_push_defined_type	FOR,0:ELSE,0:DO,0:WHILE,0:IF,0:SWITCH,0:CALL,2:functions,0	29
0x40003d1	              0x55	                                push rbp	       423	wrstabs.c	FUNCTION_4
0x40003d2	          0x4889e5	                            mov rbp, rsp	       423	wrstabs.c	FUNCTION_4
0x40003d5	        0x4883ec40	                           sub rsp, 0x40	       423	wrstabs.c	FUNCTION_4
0x40003d9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       423	wrstabs.c	FUNCTION_4
0x40003dd	        0x488975d0	             mov qword [rbp - 0x30], rsi	       423	wrstabs.c	FUNCTION_4
0x40003e1	          0x8955cc	             mov dword [rbp - 0x34], edx	       423	wrstabs.c	FUNCTION_4
0x40003e4	    0x64488b042528	                mov rax, qword fs:[0x28]	       423	wrstabs.c	FUNCTION_4
0x40003ed	        0x488945f8	                mov qword [rbp - 8], rax	       423	wrstabs.c	FUNCTION_4
0x40003f1	            0x31c0	                            xor eax, eax	       423	wrstabs.c	FUNCTION_4
0x40003f3	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       426	wrstabs.c	FUNCTION_4	CALL_1
0x40003f7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       426	wrstabs.c	FUNCTION_4	CALL_1
0x40003fb	      0xbe00000000	                              mov esi, 0	       426	wrstabs.c	FUNCTION_4	CALL_1
0x4000400	          0x4889c7	                            mov rdi, rax	       426	wrstabs.c	FUNCTION_4	CALL_1
0x4000403	      0xb800000000	                              mov eax, 0	       426	wrstabs.c	FUNCTION_4	CALL_1
0x4000408	      0xe800000000	                          call 0x400040d	       426	wrstabs.c	FUNCTION_4	CALL_1
0x400040d	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	       427	wrstabs.c	FUNCTION_4	CALL_2
0x4000410	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       427	wrstabs.c	FUNCTION_4	CALL_2
0x4000414	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       427	wrstabs.c	FUNCTION_4	CALL_2
0x4000418	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       427	wrstabs.c	FUNCTION_4	CALL_2
0x400041c	          0x4189c8	                            mov r8d, ecx	       427	wrstabs.c	FUNCTION_4	CALL_2
0x400041f	      0xb900000000	                              mov ecx, 0	       427	wrstabs.c	FUNCTION_4	CALL_2
0x4000424	          0x4889c7	                            mov rdi, rax	       427	wrstabs.c	FUNCTION_4	CALL_2
0x4000427	      0xe8f3feffff	               call sym.stab_push_string	       427	wrstabs.c	FUNCTION_4	CALL_2
0x400042c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       428	wrstabs.c	FUNCTION_4
0x4000430	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       428	wrstabs.c	FUNCTION_4
0x4000439	            0x7405	                            je 0x4000440	       428	wrstabs.c	FUNCTION_4
0x400043b	      0xe800000000	                          call 0x4000440	       428	wrstabs.c	FUNCTION_4
0x4000440	              0xc9	                                   leave	       428	wrstabs.c	FUNCTION_4
0x4000441	              0xc3	                                     ret	       428	wrstabs.c	FUNCTION_4
stab_int_type	FOR,0:ELSE,8:DO,0:WHILE,0:IF,9:SWITCH,0:CALL,15:functions,0	233
0x4000a4a	              0x55	                                push rbp	       630	wrstabs.c	FUNCTION_11
0x4000a4b	          0x4889e5	                            mov rbp, rsp	       630	wrstabs.c	FUNCTION_11
0x4000a4e	            0x4154	                                push r12	       630	wrstabs.c	FUNCTION_11
0x4000a50	              0x53	                                push rbx	       630	wrstabs.c	FUNCTION_11
0x4000a51	    0x4881eca00000	                           sub rsp, 0xa0	       630	wrstabs.c	FUNCTION_11
0x4000a58	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	       630	wrstabs.c	FUNCTION_11
0x4000a5f	    0x89b554ffffff	             mov dword [rbp - 0xac], esi	       630	wrstabs.c	FUNCTION_11
0x4000a65	    0x899550ffffff	             mov dword [rbp - 0xb0], edx	       630	wrstabs.c	FUNCTION_11
0x4000a6b	    0x64488b042528	                mov rax, qword fs:[0x28]	       630	wrstabs.c	FUNCTION_11
0x4000a74	        0x488945e8	             mov qword [rbp - 0x18], rax	       630	wrstabs.c	FUNCTION_11
0x4000a78	            0x31c0	                            xor eax, eax	       630	wrstabs.c	FUNCTION_11
0x4000a7a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       631	wrstabs.c	FUNCTION_11
0x4000a81	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       631	wrstabs.c	FUNCTION_11
0x4000a88	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	       634	wrstabs.c	FUNCTION_11	IF_1
0x4000a8f	            0x7412	                            je 0x4000aa3	       634	wrstabs.c	FUNCTION_11	IF_1
0x4000a91	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 8	       634	wrstabs.c	FUNCTION_11	IF_1
0x4000a98	            0x7635	                           jbe 0x4000acf	       634	wrstabs.c	FUNCTION_11	IF_1
0x4000a9a	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 8	       634	wrstabs.c	FUNCTION_11	IF_1
0x4000aa1	            0x742c	                            je 0x4000acf	       634	wrstabs.c	FUNCTION_11	IF_1
0x4000aa3	      0xbf00000000	                              mov edi, 0	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4000aa8	      0xe800000000	                          call 0x4000aad	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4000aad	          0x4889c2	                            mov rdx, rax	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4000ab0	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4000ab6	            0x89c6	                            mov esi, eax	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4000ab8	          0x4889d7	                            mov rdi, rdx	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4000abb	      0xb800000000	                              mov eax, 0	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4000ac0	      0xe800000000	                          call 0x4000ac5	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4000ac5	      0xb800000000	                              mov eax, 0	       637	wrstabs.c	FUNCTION_11	IF_1
0x4000aca	      0xe971030000	                           jmp 0x4000e40	       637	wrstabs.c	FUNCTION_11	IF_1
0x4000acf	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 0	       640	wrstabs.c	FUNCTION_11	IF_2
0x4000ad6	            0x7414	                            je 0x4000aec	       640	wrstabs.c	FUNCTION_11	IF_2
0x4000ad8	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       641	wrstabs.c	FUNCTION_11	IF_2
0x4000adf	        0x4883c078	                           add rax, 0x78	       641	wrstabs.c	FUNCTION_11	IF_2
0x4000ae3	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       641	wrstabs.c	FUNCTION_11	IF_2
0x4000aea	            0xeb14	                           jmp 0x4000b00	       641	wrstabs.c	FUNCTION_11	IF_2
0x4000aec	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       643	wrstabs.c	FUNCTION_11	ELSE_1
0x4000af3	    0x4805b8000000	                           add rax, 0xb8	       643	wrstabs.c	FUNCTION_11	ELSE_1
0x4000af9	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       643	wrstabs.c	FUNCTION_11	ELSE_1
0x4000b00	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       645	wrstabs.c	FUNCTION_11	IF_3
0x4000b06	          0x83e801	                              sub eax, 1	       645	wrstabs.c	FUNCTION_11	IF_3
0x4000b09	            0x89c0	                            mov eax, eax	       645	wrstabs.c	FUNCTION_11	IF_3
0x4000b0b	    0x488d14c50000	                        lea rdx, [rax*8]	       645	wrstabs.c	FUNCTION_11	IF_3
0x4000b13	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       645	wrstabs.c	FUNCTION_11	IF_3
0x4000b1a	          0x4801d0	                            add rax, rdx	       645	wrstabs.c	FUNCTION_11	IF_3
0x4000b1d	          0x488b00	                    mov rax, qword [rax]	       645	wrstabs.c	FUNCTION_11	IF_3
0x4000b20	          0x4885c0	                           test rax, rax	       645	wrstabs.c	FUNCTION_11	IF_3
0x4000b23	            0x743d	                            je 0x4000b62	       645	wrstabs.c	FUNCTION_11	IF_3
0x4000b25	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4000b2b	          0x83e801	                              sub eax, 1	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4000b2e	            0x89c0	                            mov eax, eax	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4000b30	    0x488d14c50000	                        lea rdx, [rax*8]	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4000b38	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4000b3f	          0x4801d0	                            add rax, rdx	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4000b42	          0x488b08	                    mov rcx, qword [rax]	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4000b45	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4000b4b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4000b52	          0x4889ce	                            mov rsi, rcx	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4000b55	          0x4889c7	                            mov rdi, rax	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4000b58	      0xe874f8ffff	         call sym.stab_push_defined_type	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4000b5d	      0xe9de020000	                           jmp 0x4000e40	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4000b62	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       652	wrstabs.c	FUNCTION_11	ELSE_2
0x4000b69	        0x488b4068	            mov rax, qword [rax + 0x68] 	       652	wrstabs.c	FUNCTION_11	ELSE_2
0x4000b6d	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       652	wrstabs.c	FUNCTION_11	ELSE_2
0x4000b74	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       653	wrstabs.c	FUNCTION_11	ELSE_2
0x4000b7b	        0x488b4068	            mov rax, qword [rax + 0x68] 	       653	wrstabs.c	FUNCTION_11	ELSE_2
0x4000b7f	        0x488d5001	                      lea rdx, [rax + 1]	       653	wrstabs.c	FUNCTION_11	ELSE_2
0x4000b83	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       653	wrstabs.c	FUNCTION_11	ELSE_2
0x4000b8a	        0x48895068	             mov qword [rax + 0x68], rdx	       653	wrstabs.c	FUNCTION_11	ELSE_2
0x4000b8e	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       655	wrstabs.c	FUNCTION_11	ELSE_2
0x4000b94	          0x83e801	                              sub eax, 1	       655	wrstabs.c	FUNCTION_11	ELSE_2
0x4000b97	            0x89c0	                            mov eax, eax	       655	wrstabs.c	FUNCTION_11	ELSE_2
0x4000b99	    0x488d14c50000	                        lea rdx, [rax*8]	       655	wrstabs.c	FUNCTION_11	ELSE_2
0x4000ba1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       655	wrstabs.c	FUNCTION_11	ELSE_2
0x4000ba8	          0x4801c2	                            add rdx, rax	       655	wrstabs.c	FUNCTION_11	ELSE_2
0x4000bab	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       655	wrstabs.c	FUNCTION_11	ELSE_2
0x4000bb2	          0x488902	                    mov qword [rdx], rax	       655	wrstabs.c	FUNCTION_11	ELSE_2
0x4000bb5	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	       657	wrstabs.c	FUNCTION_11	ELSE_2	CALL_4
0x4000bbc	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       657	wrstabs.c	FUNCTION_11	ELSE_2	CALL_4
0x4000bc3	        0x488d4580	                   lea rax, [rbp - 0x80]	       657	wrstabs.c	FUNCTION_11	ELSE_2	CALL_4
0x4000bc7	      0xbe00000000	                              mov esi, 0	       657	wrstabs.c	FUNCTION_11	ELSE_2	CALL_4
0x4000bcc	          0x4889c7	                            mov rdi, rax	       657	wrstabs.c	FUNCTION_11	ELSE_2	CALL_4
0x4000bcf	      0xb800000000	                              mov eax, 0	       657	wrstabs.c	FUNCTION_11	ELSE_2	CALL_4
0x4000bd4	      0xe800000000	                          call 0x4000bd9	       657	wrstabs.c	FUNCTION_11	ELSE_2	CALL_4
0x4000bd9	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 0	       658	wrstabs.c	FUNCTION_11	ELSE_2	IF_4
0x4000be0	     0xf842b010000	                            je 0x4000d11	       658	wrstabs.c	FUNCTION_11	ELSE_2	IF_4
0x4000be6	        0x488d4580	                   lea rax, [rbp - 0x80]	       660	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x4000bea	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       660	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x4000bf1	          0x4889c2	                            mov rdx, rax	       660	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x4000bf4	      0xb800000000	                              mov eax, 0	       660	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x4000bf9	          0x4889d7	                            mov rdi, rdx	       660	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x4000bfc	            0xf2ae	              repne scasb al, byte [rdi]	       660	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x4000bfe	          0x4889c8	                            mov rax, rcx	       660	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x4000c01	          0x48f7d0	                                 not rax	       660	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x4000c04	        0x488d50ff	                      lea rdx, [rax - 1]	       660	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x4000c08	        0x488d4580	                   lea rax, [rbp - 0x80]	       660	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x4000c0c	          0x4801d0	                            add rax, rdx	       660	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x4000c0f	      0x66c700303b	                  mov word [rax], 0x3b30	       660	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x4000c14	        0xc6400200	                   mov byte [rax + 2], 0	       660	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x4000c18	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 7	       661	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	IF_5
0x4000c1f	            0x774a	                            ja 0x4000c6b	       661	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	IF_5
0x4000c21	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c27	          0xc1e003	                              shl eax, 3	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c2a	      0xba01000000	                              mov edx, 1	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c2f	            0x89c1	                            mov ecx, eax	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c31	          0x48d3e2	                             shl rdx, cl	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c34	          0x4889d0	                            mov rax, rdx	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c37	        0x488d58ff	                      lea rbx, [rax - 1]	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c3b	        0x488d4580	                   lea rax, [rbp - 0x80]	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c3f	          0x4889c7	                            mov rdi, rax	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c42	      0xe800000000	                          call 0x4000c47	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c47	          0x4889c2	                            mov rdx, rax	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c4a	        0x488d4580	                   lea rax, [rbp - 0x80]	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c4e	          0x4801d0	                            add rax, rdx	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c51	          0x4889da	                            mov rdx, rbx	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c54	      0xbe00000000	                              mov esi, 0	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c59	          0x4889c7	                            mov rdi, rax	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c5c	      0xb800000000	                              mov eax, 0	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c61	      0xe800000000	                          call 0x4000c66	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c66	      0xe9ad010000	                           jmp 0x4000e18	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_7
0x4000c6b	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 8	       663	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_3	IF_6
0x4000c72	            0x7534	                           jne 0x4000ca8	       663	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_3	IF_6
0x4000c74	        0x488d4580	                   lea rax, [rbp - 0x80]	       664	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_3	IF_6
0x4000c78	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       664	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_3	IF_6
0x4000c7f	          0x4889c2	                            mov rdx, rax	       664	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_3	IF_6
0x4000c82	      0xb800000000	                              mov eax, 0	       664	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_3	IF_6
0x4000c87	          0x4889d7	                            mov rdi, rdx	       664	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_3	IF_6
0x4000c8a	            0xf2ae	              repne scasb al, byte [rdi]	       664	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_3	IF_6
0x4000c8c	          0x4889c8	                            mov rax, rcx	       664	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_3	IF_6
0x4000c8f	          0x48f7d0	                                 not rax	       664	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_3	IF_6
0x4000c92	        0x488d50ff	                      lea rdx, [rax - 1]	       664	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_3	IF_6
0x4000c96	        0x488d4580	                   lea rax, [rbp - 0x80]	       664	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_3	IF_6
0x4000c9a	          0x4801d0	                            add rax, rdx	       664	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_3	IF_6
0x4000c9d	    0xc7002d313b00	               mov dword [rax], 0x3b312d	       664	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_3	IF_6
0x4000ca3	      0xe970010000	                           jmp 0x4000e18	       664	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_3	IF_6
0x4000ca8	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 8	       665	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000caf	            0x755b	                           jne 0x4000d0c	       665	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000cb1	        0x488d4580	                   lea rax, [rbp - 0x80]	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000cb5	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000cbc	          0x4889c2	                            mov rdx, rax	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000cbf	      0xb800000000	                              mov eax, 0	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000cc4	          0x4889d7	                            mov rdi, rdx	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000cc7	            0xf2ae	              repne scasb al, byte [rdi]	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000cc9	          0x4889c8	                            mov rax, rcx	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000ccc	          0x48f7d0	                                 not rax	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000ccf	        0x488d50ff	                      lea rdx, [rax - 1]	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000cd3	        0x488d4580	                   lea rax, [rbp - 0x80]	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000cd7	          0x4801d0	                            add rax, rdx	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000cda	    0x48bb30313737	          movabs rbx, 0x3737373737373130	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000ce4	          0x488918	                    mov qword [rax], rbx	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000ce7	    0x48bb37373737	          movabs rbx, 0x3737373737373737	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000cf1	        0x48895808	                mov qword [rax + 8], rbx	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000cf5	    0x48bb37373737	          movabs rbx, 0x3b37373737373737	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000cff	        0x48895810	             mov qword [rax + 0x10], rbx	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000d03	        0xc6401800	                mov byte [rax + 0x18], 0	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000d07	      0xe90c010000	                           jmp 0x4000e18	       666	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_4	IF_7
0x4000d0c	      0xe800000000	                          call 0x4000d11	       668	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_10
0x4000d11	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 8	       672	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d18	            0x7772	                            ja 0x4000d8c	       672	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d1a	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       675	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d20	          0xc1e003	                              shl eax, 3	       675	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d23	          0x83e801	                              sub eax, 1	       675	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d26	      0xba01000000	                              mov edx, 1	       675	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d2b	            0x89c1	                            mov ecx, eax	       675	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d2d	          0x48d3e2	                             shl rdx, cl	       675	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d30	          0x4889d0	                            mov rax, rdx	       675	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d33	        0x4883e801	                              sub rax, 1	       675	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d37	          0x4989c4	                            mov r12, rax	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_12
0x4000d3a	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       674	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d40	          0xc1e003	                              shl eax, 3	       674	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d43	          0x83e801	                              sub eax, 1	       674	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d46	      0xba01000000	                              mov edx, 1	       674	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d4b	            0x89c1	                            mov ecx, eax	       674	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d4d	          0x48d3e2	                             shl rdx, cl	       674	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d50	          0x4889d0	                            mov rax, rdx	       674	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d53	          0x48f7d8	                                 neg rax	       674	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x4000d56	          0x4889c3	                            mov rbx, rax	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_12
0x4000d59	        0x488d4580	                   lea rax, [rbp - 0x80]	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_12
0x4000d5d	          0x4889c7	                            mov rdi, rax	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_12
0x4000d60	      0xe800000000	                          call 0x4000d65	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_12
0x4000d65	          0x4889c2	                            mov rdx, rax	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_12
0x4000d68	        0x488d4580	                   lea rax, [rbp - 0x80]	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_12
0x4000d6c	          0x4801d0	                            add rax, rdx	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_12
0x4000d6f	          0x4c89e1	                            mov rcx, r12	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_12
0x4000d72	          0x4889da	                            mov rdx, rbx	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_12
0x4000d75	      0xbe00000000	                              mov esi, 0	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_12
0x4000d7a	          0x4889c7	                            mov rdi, rax	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_12
0x4000d7d	      0xb800000000	                              mov eax, 0	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_12
0x4000d82	      0xe800000000	                          call 0x4000d87	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_12
0x4000d87	      0xe98c000000	                           jmp 0x4000e18	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_12
0x4000d8c	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 8	       676	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000d93	            0x757e	                           jne 0x4000e13	       676	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000d95	        0x488d4580	                   lea rax, [rbp - 0x80]	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000d99	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000da0	          0x4889c2	                            mov rdx, rax	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000da3	      0xb800000000	                              mov eax, 0	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000da8	          0x4889d7	                            mov rdi, rdx	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000dab	            0xf2ae	              repne scasb al, byte [rdi]	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000dad	          0x4889c8	                            mov rax, rcx	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000db0	          0x48f7d0	                                 not rax	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000db3	        0x488d50ff	                      lea rdx, [rax - 1]	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000db7	        0x488d4580	                   lea rax, [rbp - 0x80]	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000dbb	          0x4801d0	                            add rax, rdx	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000dbe	    0x48be30313030	          movabs rsi, 0x3030303030303130	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000dc8	          0x488930	                    mov qword [rax], rsi	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000dcb	    0x48bb30303030	          movabs rbx, 0x3030303030303030	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000dd5	        0x48895808	                mov qword [rax + 8], rbx	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000dd9	    0x48be30303030	          movabs rsi, 0x3b30303030303030	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000de3	        0x48897010	             mov qword [rax + 0x10], rsi	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000de7	    0x48bb30373737	          movabs rbx, 0x3737373737373730	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000df1	        0x48895818	             mov qword [rax + 0x18], rbx	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000df5	    0x48be37373737	          movabs rsi, 0x3737373737373737	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000dff	        0x48897020	             mov qword [rax + 0x20], rsi	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000e03	    0x48bb37373737	            movabs rbx, 0x3b373737373737	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000e0d	        0x48895828	             mov qword [rax + 0x28], rbx	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000e11	            0xeb05	                           jmp 0x4000e18	       677	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4000e13	      0xe800000000	                          call 0x4000e18	       679	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	CALL_14
0x4000e18	    0x8b8d54ffffff	             mov ecx, dword [rbp - 0xac]	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_15
0x4000e1e	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_15
0x4000e25	        0x488d7580	                   lea rsi, [rbp - 0x80]	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_15
0x4000e29	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_15
0x4000e30	          0x4189c8	                            mov r8d, ecx	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_15
0x4000e33	      0xb901000000	                              mov ecx, 1	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_15
0x4000e38	          0x4889c7	                            mov rdi, rax	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_15
0x4000e3b	      0xe8dff4ffff	               call sym.stab_push_string	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_15
0x4000e40	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       684	wrstabs.c	FUNCTION_11
0x4000e44	    0x644833342528	                xor rsi, qword fs:[0x28]	       684	wrstabs.c	FUNCTION_11
0x4000e4d	            0x7405	                            je 0x4000e54	       684	wrstabs.c	FUNCTION_11
0x4000e4f	      0xe800000000	                          call 0x4000e54	       684	wrstabs.c	FUNCTION_11
0x4000e54	    0x4881c4a00000	                           add rsp, 0xa0	       684	wrstabs.c	FUNCTION_11
0x4000e5b	              0x5b	                                 pop rbx	       684	wrstabs.c	FUNCTION_11
0x4000e5c	            0x415c	                                 pop r12	       684	wrstabs.c	FUNCTION_11
0x4000e5e	              0x5d	                                 pop rbp	       684	wrstabs.c	FUNCTION_11
0x4000e5f	              0xc3	                                     ret	       684	wrstabs.c	FUNCTION_11
stab_typedef_type	FOR,0:ELSE,0:DO,0:WHILE,0:IF,0:SWITCH,0:CALL,2:functions,0	36
0x40034ca	              0x55	                                push rbp	      1851	wrstabs.c	FUNCTION_40
0x40034cb	          0x4889e5	                            mov rbp, rsp	      1851	wrstabs.c	FUNCTION_40
0x40034ce	        0x4883ec20	                           sub rsp, 0x20	      1851	wrstabs.c	FUNCTION_40
0x40034d2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1851	wrstabs.c	FUNCTION_40
0x40034d6	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1851	wrstabs.c	FUNCTION_40
0x40034da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1852	wrstabs.c	FUNCTION_40
0x40034de	        0x488945f0	             mov qword [rbp - 0x10], rax	      1852	wrstabs.c	FUNCTION_40
0x40034e2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1855	wrstabs.c	FUNCTION_40
0x40034e6	    0x488db8b80100	                  lea rdi, [rax + 0x1b8]	      1855	wrstabs.c	FUNCTION_40
0x40034ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1855	wrstabs.c	FUNCTION_40
0x40034f1	      0xb900000000	                              mov ecx, 0	      1855	wrstabs.c	FUNCTION_40
0x40034f6	      0xba00000000	                              mov edx, 0	      1855	wrstabs.c	FUNCTION_40
0x40034fb	          0x4889c6	                            mov rsi, rax	      1855	wrstabs.c	FUNCTION_40
0x40034fe	      0xe800000000	                          call 0x4003503	      1855	wrstabs.c	FUNCTION_40
0x4003503	        0x488945f8	                mov qword [rbp - 8], rax	      1855	wrstabs.c	FUNCTION_40
0x4003507	      0x48837df800	                  cmp qword [rbp - 8], 0	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x400350c	            0x740d	                            je 0x400351b	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x400350e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x4003512	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x4003516	          0x4885c0	                           test rax, rax	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x4003519	            0x7f19	                            jg 0x4003534	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x400351b	      0xb900000000	                              mov ecx, 0	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x4003520	      0xba40070000	                          mov edx, 0x740	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x4003525	      0xbe00000000	                              mov esi, 0	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x400352a	      0xbf00000000	                              mov edi, 0	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x400352f	      0xe800000000	                          call 0x4003534	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x4003534	        0x488b45f8	                mov rax, qword [rbp - 8]	      1858	wrstabs.c	FUNCTION_40	CALL_2
0x4003538	          0x8b5028	            mov edx, dword [rax + 0x28] 	      1858	wrstabs.c	FUNCTION_40	CALL_2
0x400353b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1858	wrstabs.c	FUNCTION_40	CALL_2
0x400353f	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      1858	wrstabs.c	FUNCTION_40	CALL_2
0x4003543	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1858	wrstabs.c	FUNCTION_40	CALL_2
0x4003547	          0x4889ce	                            mov rsi, rcx	      1858	wrstabs.c	FUNCTION_40	CALL_2
0x400354a	          0x4889c7	                            mov rdi, rax	      1858	wrstabs.c	FUNCTION_40	CALL_2
0x400354d	      0xe87fceffff	         call sym.stab_push_defined_type	      1858	wrstabs.c	FUNCTION_40	CALL_2
0x4003552	              0xc9	                                   leave	      1859	wrstabs.c	FUNCTION_40
0x4003553	              0xc3	                                     ret	      1859	wrstabs.c	FUNCTION_40
stab_tag	FOR,0:ELSE,0:DO,0:WHILE,0:IF,1:SWITCH,0:CALL,8:functions,0	54
0x400378a	              0x55	                                push rbp	      1931	wrstabs.c	FUNCTION_43
0x400378b	          0x4889e5	                            mov rbp, rsp	      1931	wrstabs.c	FUNCTION_43
0x400378e	              0x53	                                push rbx	      1931	wrstabs.c	FUNCTION_43
0x400378f	        0x4883ec38	                           sub rsp, 0x38	      1931	wrstabs.c	FUNCTION_43
0x4003793	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1931	wrstabs.c	FUNCTION_43
0x4003797	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1931	wrstabs.c	FUNCTION_43
0x400379b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1932	wrstabs.c	FUNCTION_43
0x400379f	        0x488945d8	             mov qword [rbp - 0x28], rax	      1932	wrstabs.c	FUNCTION_43
0x40037a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1935	wrstabs.c	FUNCTION_43	CALL_1
0x40037a7	          0x4889c7	                            mov rdi, rax	      1935	wrstabs.c	FUNCTION_43	CALL_1
0x40037aa	      0xe893ccffff	                  call sym.stab_pop_type	      1935	wrstabs.c	FUNCTION_43	CALL_1
0x40037af	        0x488945e0	             mov qword [rbp - 0x20], rax	      1935	wrstabs.c	FUNCTION_43	CALL_1
0x40037b3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40037b7	          0x4889c7	                            mov rdi, rax	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40037ba	      0xe800000000	                          call 0x40037bf	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40037bf	          0x4889c3	                            mov rbx, rax	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40037c2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40037c6	          0x4889c7	                            mov rdi, rax	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40037c9	      0xe800000000	                          call 0x40037ce	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40037ce	          0x4801d8	                            add rax, rbx	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40037d1	        0x4883c003	                              add rax, 3	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40037d5	          0x4889c7	                            mov rdi, rax	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40037d8	      0xe800000000	                          call 0x40037dd	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40037dd	        0x488945e8	             mov qword [rbp - 0x18], rax	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40037e1	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1939	wrstabs.c	FUNCTION_43	CALL_5
0x40037e5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1939	wrstabs.c	FUNCTION_43	CALL_5
0x40037e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1939	wrstabs.c	FUNCTION_43	CALL_5
0x40037ed	      0xbe00000000	                              mov esi, 0	      1939	wrstabs.c	FUNCTION_43	CALL_5
0x40037f2	          0x4889c7	                            mov rdi, rax	      1939	wrstabs.c	FUNCTION_43	CALL_5
0x40037f5	      0xb800000000	                              mov eax, 0	      1939	wrstabs.c	FUNCTION_43	CALL_5
0x40037fa	      0xe800000000	                          call 0x40037ff	      1939	wrstabs.c	FUNCTION_43	CALL_5
0x40037ff	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1940	wrstabs.c	FUNCTION_43	CALL_6
0x4003803	          0x4889c7	                            mov rdi, rax	      1940	wrstabs.c	FUNCTION_43	CALL_6
0x4003806	      0xe800000000	                          call 0x400380b	      1940	wrstabs.c	FUNCTION_43	CALL_6
0x400380b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_7
0x400380f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_7
0x4003813	          0x4989d0	                             mov r8, rdx	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_7
0x4003816	      0xb900000000	                              mov ecx, 0	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_7
0x400381b	      0xba00000000	                              mov edx, 0	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_7
0x4003820	      0xbe80000000	                           mov esi, 0x80	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_7
0x4003825	          0x4889c7	                            mov rdi, rax	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_7
0x4003828	      0xe8a4c8ffff	              call sym.stab_write_symbol	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_7
0x400382d	            0x85c0	                           test eax, eax	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_7
0x400382f	            0x7507	                           jne 0x4003838	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_7
0x4003831	      0xb800000000	                              mov eax, 0	      1943	wrstabs.c	FUNCTION_43	IF_1
0x4003836	            0xeb11	                           jmp 0x4003849	      1943	wrstabs.c	FUNCTION_43	IF_1
0x4003838	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1945	wrstabs.c	FUNCTION_43	CALL_8
0x400383c	          0x4889c7	                            mov rdi, rax	      1945	wrstabs.c	FUNCTION_43	CALL_8
0x400383f	      0xe800000000	                          call 0x4003844	      1945	wrstabs.c	FUNCTION_43	CALL_8
0x4003844	      0xb801000000	                              mov eax, 1	      1947	wrstabs.c	FUNCTION_43
0x4003849	        0x4883c438	                           add rsp, 0x38	      1948	wrstabs.c	FUNCTION_43
0x400384d	              0x5b	                                 pop rbx	      1948	wrstabs.c	FUNCTION_43
0x400384e	              0x5d	                                 pop rbp	      1948	wrstabs.c	FUNCTION_43
0x400384f	              0xc3	                                     ret	      1948	wrstabs.c	FUNCTION_43
stab_enum_type	FOR,2:ELSE,2:DO,0:WHILE,0:IF,7:SWITCH,0:CALL,18:functions,0	179
0x40010ca	              0x55	                                push rbp	       781	wrstabs.c	FUNCTION_15
0x40010cb	          0x4889e5	                            mov rbp, rsp	       781	wrstabs.c	FUNCTION_15
0x40010ce	            0x4154	                                push r12	       781	wrstabs.c	FUNCTION_15
0x40010d0	              0x53	                                push rbx	       781	wrstabs.c	FUNCTION_15
0x40010d1	        0x4883ec50	                           sub rsp, 0x50	       781	wrstabs.c	FUNCTION_15
0x40010d5	        0x48897db8	             mov qword [rbp - 0x48], rdi	       781	wrstabs.c	FUNCTION_15
0x40010d9	        0x488975b0	             mov qword [rbp - 0x50], rsi	       781	wrstabs.c	FUNCTION_15
0x40010dd	        0x488955a8	             mov qword [rbp - 0x58], rdx	       781	wrstabs.c	FUNCTION_15
0x40010e1	        0x48894da0	             mov qword [rbp - 0x60], rcx	       781	wrstabs.c	FUNCTION_15
0x40010e5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       782	wrstabs.c	FUNCTION_15
0x40010e9	        0x488945e0	             mov qword [rbp - 0x20], rax	       782	wrstabs.c	FUNCTION_15
0x40010ed	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       786	wrstabs.c	FUNCTION_15
0x40010f5	      0x48837da800	               cmp qword [rbp - 0x58], 0	       789	wrstabs.c	FUNCTION_15	IF_1
0x40010fa	     0xf859a000000	                           jne 0x400119a	       789	wrstabs.c	FUNCTION_15	IF_1
0x4001100	      0x48837db000	               cmp qword [rbp - 0x50], 0	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x4001105	            0x7519	                           jne 0x4001120	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x4001107	      0xb900000000	                              mov ecx, 0	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x400110c	      0xba17030000	                          mov edx, 0x317	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x4001111	      0xbe00000000	                              mov esi, 0	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x4001116	      0xbf00000000	                              mov edi, 0	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x400111b	      0xe800000000	                          call 0x4001120	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x4001120	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4001124	          0x4889c7	                            mov rdi, rax	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4001127	      0xe800000000	                          call 0x400112c	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x400112c	        0x4883c00a	                            add rax, 0xa	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4001130	          0x4889c7	                            mov rdi, rax	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4001133	      0xe800000000	                          call 0x4001138	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4001138	        0x488945e8	             mov qword [rbp - 0x18], rax	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x400113c	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       794	wrstabs.c	FUNCTION_15	IF_1	CALL_4
0x4001140	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       794	wrstabs.c	FUNCTION_15	IF_1	CALL_4
0x4001144	      0xbe00000000	                              mov esi, 0	       794	wrstabs.c	FUNCTION_15	IF_1	CALL_4
0x4001149	          0x4889c7	                            mov rdi, rax	       794	wrstabs.c	FUNCTION_15	IF_1	CALL_4
0x400114c	      0xb800000000	                              mov eax, 0	       794	wrstabs.c	FUNCTION_15	IF_1	CALL_4
0x4001151	      0xe800000000	                          call 0x4001156	       794	wrstabs.c	FUNCTION_15	IF_1	CALL_4
0x4001156	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_5
0x400115a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_5
0x400115e	    0x41b804000000	                              mov r8d, 4	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_5
0x4001164	      0xb900000000	                              mov ecx, 0	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_5
0x4001169	      0xba00000000	                              mov edx, 0	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_5
0x400116e	          0x4889c7	                            mov rdi, rax	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_5
0x4001171	      0xe8a9f1ffff	               call sym.stab_push_string	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_5
0x4001176	            0x85c0	                           test eax, eax	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_5
0x4001178	            0x750a	                           jne 0x4001184	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_5
0x400117a	      0xb800000000	                              mov eax, 0	       797	wrstabs.c	FUNCTION_15	IF_1	IF_2
0x400117f	      0xe9ef010000	                           jmp 0x4001373	       797	wrstabs.c	FUNCTION_15	IF_1	IF_2
0x4001184	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       798	wrstabs.c	FUNCTION_15	IF_1	CALL_6
0x4001188	          0x4889c7	                            mov rdi, rax	       798	wrstabs.c	FUNCTION_15	IF_1	CALL_6
0x400118b	      0xe800000000	                          call 0x4001190	       798	wrstabs.c	FUNCTION_15	IF_1	CALL_6
0x4001190	      0xb801000000	                              mov eax, 1	       799	wrstabs.c	FUNCTION_15	IF_1
0x4001195	      0xe9d9010000	                           jmp 0x4001373	       799	wrstabs.c	FUNCTION_15	IF_1
0x400119a	    0x48c745c00a00	             mov qword [rbp - 0x40], 0xa	       802	wrstabs.c	FUNCTION_15
0x40011a2	      0x48837db000	               cmp qword [rbp - 0x50], 0	       803	wrstabs.c	FUNCTION_15	IF_3
0x40011a7	            0x7410	                            je 0x40011b9	       803	wrstabs.c	FUNCTION_15	IF_3
0x40011a9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       804	wrstabs.c	FUNCTION_15	CALL_7
0x40011ad	          0x4889c7	                            mov rdi, rax	       804	wrstabs.c	FUNCTION_15	CALL_7
0x40011b0	      0xe800000000	                          call 0x40011b5	       804	wrstabs.c	FUNCTION_15	CALL_7
0x40011b5	        0x480145c0	            add qword [rbp - 0x40], rax 	       804	wrstabs.c	FUNCTION_15	CALL_7
0x40011b9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       805	wrstabs.c	FUNCTION_15	FOR_1
0x40011bd	        0x488945c8	             mov qword [rbp - 0x38], rax	       805	wrstabs.c	FUNCTION_15	FOR_1
0x40011c1	            0xeb26	                           jmp 0x40011e9	       805	wrstabs.c	FUNCTION_15	FOR_1
0x40011c3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       806	wrstabs.c	FUNCTION_15	CALL_8
0x40011c7	          0x488b00	                    mov rax, qword [rax]	       806	wrstabs.c	FUNCTION_15	CALL_8
0x40011ca	          0x4889c7	                            mov rdi, rax	       806	wrstabs.c	FUNCTION_15	CALL_8
0x40011cd	      0xe800000000	                          call 0x40011d2	       806	wrstabs.c	FUNCTION_15	CALL_8
0x40011d2	          0x4889c2	                            mov rdx, rax	       806	wrstabs.c	FUNCTION_15	CALL_8
0x40011d5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       806	wrstabs.c	FUNCTION_15	CALL_8
0x40011d9	          0x4801d0	                            add rax, rdx	       806	wrstabs.c	FUNCTION_15	CALL_8
0x40011dc	        0x4883c014	                           add rax, 0x14	       806	wrstabs.c	FUNCTION_15	CALL_8
0x40011e0	        0x488945c0	             mov qword [rbp - 0x40], rax	       806	wrstabs.c	FUNCTION_15	CALL_8
0x40011e4	      0x488345c808	               add qword [rbp - 0x38], 8	       805	wrstabs.c	FUNCTION_15	FOR_1
0x40011e9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       805	wrstabs.c	FUNCTION_15	FOR_1
0x40011ed	          0x488b00	                    mov rax, qword [rax]	       805	wrstabs.c	FUNCTION_15	FOR_1
0x40011f0	          0x4885c0	                           test rax, rax	       805	wrstabs.c	FUNCTION_15	FOR_1
0x40011f3	            0x75ce	                           jne 0x40011c3	       805	wrstabs.c	FUNCTION_15	FOR_1
0x40011f5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       808	wrstabs.c	FUNCTION_15	CALL_9
0x40011f9	          0x4889c7	                            mov rdi, rax	       808	wrstabs.c	FUNCTION_15	CALL_9
0x40011fc	      0xe800000000	                          call 0x4001201	       808	wrstabs.c	FUNCTION_15	CALL_9
0x4001201	        0x488945e8	             mov qword [rbp - 0x18], rax	       808	wrstabs.c	FUNCTION_15	CALL_9
0x4001205	      0x48837db000	               cmp qword [rbp - 0x50], 0	       810	wrstabs.c	FUNCTION_15	IF_4
0x400120a	            0x750b	                           jne 0x4001217	       810	wrstabs.c	FUNCTION_15	IF_4
0x400120c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       811	wrstabs.c	FUNCTION_15	CALL_10
0x4001210	      0x66c7006500	                    mov word [rax], 0x65	       811	wrstabs.c	FUNCTION_15	CALL_10
0x4001215	            0xeb3e	                           jmp 0x4001255	       811	wrstabs.c	FUNCTION_15	CALL_10
0x4001217	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       814	wrstabs.c	FUNCTION_15	ELSE_1
0x400121b	        0x488b4068	            mov rax, qword [rax + 0x68] 	       814	wrstabs.c	FUNCTION_15	ELSE_1
0x400121f	        0x488945d0	             mov qword [rbp - 0x30], rax	       814	wrstabs.c	FUNCTION_15	ELSE_1
0x4001223	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       815	wrstabs.c	FUNCTION_15	ELSE_1
0x4001227	        0x488b4068	            mov rax, qword [rax + 0x68] 	       815	wrstabs.c	FUNCTION_15	ELSE_1
0x400122b	        0x488d5001	                      lea rdx, [rax + 1]	       815	wrstabs.c	FUNCTION_15	ELSE_1
0x400122f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       815	wrstabs.c	FUNCTION_15	ELSE_1
0x4001233	        0x48895068	             mov qword [rax + 0x68], rdx	       815	wrstabs.c	FUNCTION_15	ELSE_1
0x4001237	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       816	wrstabs.c	FUNCTION_15	ELSE_1	CALL_11
0x400123b	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       816	wrstabs.c	FUNCTION_15	ELSE_1	CALL_11
0x400123f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       816	wrstabs.c	FUNCTION_15	ELSE_1	CALL_11
0x4001243	      0xbe00000000	                              mov esi, 0	       816	wrstabs.c	FUNCTION_15	ELSE_1	CALL_11
0x4001248	          0x4889c7	                            mov rdi, rax	       816	wrstabs.c	FUNCTION_15	ELSE_1	CALL_11
0x400124b	      0xb800000000	                              mov eax, 0	       816	wrstabs.c	FUNCTION_15	ELSE_1	CALL_11
0x4001250	      0xe800000000	                          call 0x4001255	       816	wrstabs.c	FUNCTION_15	ELSE_1	CALL_11
0x4001255	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       819	wrstabs.c	FUNCTION_15	FOR_2
0x4001259	        0x488945c8	             mov qword [rbp - 0x38], rax	       819	wrstabs.c	FUNCTION_15	FOR_2
0x400125d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       819	wrstabs.c	FUNCTION_15	FOR_2
0x4001261	        0x488945d8	             mov qword [rbp - 0x28], rax	       819	wrstabs.c	FUNCTION_15	FOR_2
0x4001265	            0xeb46	                           jmp 0x40012ad	       819	wrstabs.c	FUNCTION_15	FOR_2
0x4001267	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       820	wrstabs.c	FUNCTION_15	CALL_13
0x400126b	          0x4c8b20	                    mov r12, qword [rax]	       820	wrstabs.c	FUNCTION_15	CALL_13
0x400126e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       820	wrstabs.c	FUNCTION_15	CALL_13
0x4001272	          0x488b18	                    mov rbx, qword [rax]	       820	wrstabs.c	FUNCTION_15	CALL_13
0x4001275	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       820	wrstabs.c	FUNCTION_15	CALL_13
0x4001279	          0x4889c7	                            mov rdi, rax	       820	wrstabs.c	FUNCTION_15	CALL_13
0x400127c	      0xe800000000	                          call 0x4001281	       820	wrstabs.c	FUNCTION_15	CALL_13
0x4001281	          0x4889c2	                            mov rdx, rax	       820	wrstabs.c	FUNCTION_15	CALL_13
0x4001284	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       820	wrstabs.c	FUNCTION_15	CALL_13
0x4001288	          0x4801d0	                            add rax, rdx	       820	wrstabs.c	FUNCTION_15	CALL_13
0x400128b	          0x4c89e1	                            mov rcx, r12	       820	wrstabs.c	FUNCTION_15	CALL_13
0x400128e	          0x4889da	                            mov rdx, rbx	       820	wrstabs.c	FUNCTION_15	CALL_13
0x4001291	      0xbe00000000	                              mov esi, 0	       820	wrstabs.c	FUNCTION_15	CALL_13
0x4001296	          0x4889c7	                            mov rdi, rax	       820	wrstabs.c	FUNCTION_15	CALL_13
0x4001299	      0xb800000000	                              mov eax, 0	       820	wrstabs.c	FUNCTION_15	CALL_13
0x400129e	      0xe800000000	                          call 0x40012a3	       820	wrstabs.c	FUNCTION_15	CALL_13
0x40012a3	      0x488345c808	               add qword [rbp - 0x38], 8	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40012a8	      0x488345d808	               add qword [rbp - 0x28], 8	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40012ad	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40012b1	          0x488b00	                    mov rax, qword [rax]	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40012b4	          0x4885c0	                           test rax, rax	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40012b7	            0x75ae	                           jne 0x4001267	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40012b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       821	wrstabs.c	FUNCTION_15	CALL_14
0x40012bd	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       821	wrstabs.c	FUNCTION_15	CALL_14
0x40012c4	          0x4889c2	                            mov rdx, rax	       821	wrstabs.c	FUNCTION_15	CALL_14
0x40012c7	      0xb800000000	                              mov eax, 0	       821	wrstabs.c	FUNCTION_15	CALL_14
0x40012cc	          0x4889d7	                            mov rdi, rdx	       821	wrstabs.c	FUNCTION_15	CALL_14
0x40012cf	            0xf2ae	              repne scasb al, byte [rdi]	       821	wrstabs.c	FUNCTION_15	CALL_14
0x40012d1	          0x4889c8	                            mov rax, rcx	       821	wrstabs.c	FUNCTION_15	CALL_14
0x40012d4	          0x48f7d0	                                 not rax	       821	wrstabs.c	FUNCTION_15	CALL_14
0x40012d7	        0x488d50ff	                      lea rdx, [rax - 1]	       821	wrstabs.c	FUNCTION_15	CALL_14
0x40012db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       821	wrstabs.c	FUNCTION_15	CALL_14
0x40012df	          0x4801d0	                            add rax, rdx	       821	wrstabs.c	FUNCTION_15	CALL_14
0x40012e2	      0x66c7003b00	                    mov word [rax], 0x3b	       821	wrstabs.c	FUNCTION_15	CALL_14
0x40012e7	      0x48837db000	               cmp qword [rbp - 0x50], 0	       823	wrstabs.c	FUNCTION_15	IF_5
0x40012ec	            0x752b	                           jne 0x4001319	       823	wrstabs.c	FUNCTION_15	IF_5
0x40012ee	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_15
0x40012f2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_15
0x40012f6	    0x41b804000000	                              mov r8d, 4	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_15
0x40012fc	      0xb900000000	                              mov ecx, 0	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_15
0x4001301	      0xba00000000	                              mov edx, 0	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_15
0x4001306	          0x4889c7	                            mov rdi, rax	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_15
0x4001309	      0xe811f0ffff	               call sym.stab_push_string	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_15
0x400130e	            0x85c0	                           test eax, eax	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_15
0x4001310	            0x7550	                           jne 0x4001362	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_15
0x4001312	      0xb800000000	                              mov eax, 0	       827	wrstabs.c	FUNCTION_15	IF_5	IF_6
0x4001317	            0xeb5a	                           jmp 0x4001373	       827	wrstabs.c	FUNCTION_15	IF_5	IF_6
0x4001319	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_16
0x400131d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_16
0x4001321	          0x4989d0	                             mov r8, rdx	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_16
0x4001324	      0xb900000000	                              mov ecx, 0	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_16
0x4001329	      0xba00000000	                              mov edx, 0	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_16
0x400132e	      0xbe80000000	                           mov esi, 0x80	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_16
0x4001333	          0x4889c7	                            mov rdi, rax	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_16
0x4001336	      0xe896edffff	              call sym.stab_write_symbol	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_16
0x400133b	            0x85c0	                           test eax, eax	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_16
0x400133d	            0x741c	                            je 0x400135b	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_16
0x400133f	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_17
0x4001343	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_17
0x4001347	      0xba04000000	                              mov edx, 4	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_17
0x400134c	          0x4889ce	                            mov rsi, rcx	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_17
0x400134f	          0x4889c7	                            mov rdi, rax	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_17
0x4001352	      0xe87af0ffff	         call sym.stab_push_defined_type	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_17
0x4001357	            0x85c0	                           test eax, eax	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_17
0x4001359	            0x7507	                           jne 0x4001362	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_17
0x400135b	      0xb800000000	                              mov eax, 0	       834	wrstabs.c	FUNCTION_15	ELSE_2	IF_7
0x4001360	            0xeb11	                           jmp 0x4001373	       834	wrstabs.c	FUNCTION_15	ELSE_2	IF_7
0x4001362	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       837	wrstabs.c	FUNCTION_15	CALL_18
0x4001366	          0x4889c7	                            mov rdi, rax	       837	wrstabs.c	FUNCTION_15	CALL_18
0x4001369	      0xe800000000	                          call 0x400136e	       837	wrstabs.c	FUNCTION_15	CALL_18
0x400136e	      0xb801000000	                              mov eax, 1	       839	wrstabs.c	FUNCTION_15
0x4001373	        0x4883c450	                           add rsp, 0x50	       840	wrstabs.c	FUNCTION_15
0x4001377	              0x5b	                                 pop rbx	       840	wrstabs.c	FUNCTION_15
0x4001378	            0x415c	                                 pop r12	       840	wrstabs.c	FUNCTION_15
0x400137a	              0x5d	                                 pop rbp	       840	wrstabs.c	FUNCTION_15
0x400137b	              0xc3	                                     ret	       840	wrstabs.c	FUNCTION_15
stab_bool_type	FOR,0:ELSE,0:DO,0:WHILE,0:IF,0:SWITCH,1:CALL,1:functions,0	30
0x4001062	              0x55	                                push rbp	       749	wrstabs.c	FUNCTION_14
0x4001063	          0x4889e5	                            mov rbp, rsp	       749	wrstabs.c	FUNCTION_14
0x4001066	        0x4883ec20	                           sub rsp, 0x20	       749	wrstabs.c	FUNCTION_14
0x400106a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       749	wrstabs.c	FUNCTION_14
0x400106e	          0x8975e4	             mov dword [rbp - 0x1c], esi	       749	wrstabs.c	FUNCTION_14
0x4001071	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       750	wrstabs.c	FUNCTION_14
0x4001075	        0x488945f8	                mov qword [rbp - 8], rax	       750	wrstabs.c	FUNCTION_14
0x4001079	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       753	wrstabs.c	FUNCTION_14	SWITCH_1
0x400107c	          0x83f802	                              cmp eax, 2	       753	wrstabs.c	FUNCTION_14	SWITCH_1
0x400107f	            0x7414	                            je 0x4001095	       753	wrstabs.c	FUNCTION_14	SWITCH_1
0x4001081	          0x83f808	                              cmp eax, 8	       753	wrstabs.c	FUNCTION_14	SWITCH_1
0x4001084	            0x7423	                            je 0x40010a9	       753	wrstabs.c	FUNCTION_14	SWITCH_1
0x4001086	          0x83f801	                              cmp eax, 1	       753	wrstabs.c	FUNCTION_14	SWITCH_1
0x4001089	            0x7514	                           jne 0x400109f	       753	wrstabs.c	FUNCTION_14	SWITCH_1
0x400108b	    0x48c745f0ebff	mov qword [rbp - 0x10], 0xffffffffffffffeb	       756	wrstabs.c	FUNCTION_14	SWITCH_1
0x4001093	            0xeb1d	                           jmp 0x40010b2	       757	wrstabs.c	FUNCTION_14	SWITCH_1
0x4001095	    0x48c745f0eaff	mov qword [rbp - 0x10], 0xffffffffffffffea	       760	wrstabs.c	FUNCTION_14	SWITCH_1
0x400109d	            0xeb13	                           jmp 0x40010b2	       761	wrstabs.c	FUNCTION_14	SWITCH_1
0x400109f	    0x48c745f0f0ff	mov qword [rbp - 0x10], 0xfffffffffffffff0	       765	wrstabs.c	FUNCTION_14	SWITCH_1
0x40010a7	            0xeb09	                           jmp 0x40010b2	       766	wrstabs.c	FUNCTION_14	SWITCH_1
0x40010a9	    0x48c745f0dfff	mov qword [rbp - 0x10], 0xffffffffffffffdf	       769	wrstabs.c	FUNCTION_14	SWITCH_1
0x40010b1	              0x90	                                     nop	       770	wrstabs.c	FUNCTION_14	SWITCH_1
0x40010b2	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       773	wrstabs.c	FUNCTION_14	CALL_1
0x40010b5	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       773	wrstabs.c	FUNCTION_14	CALL_1
0x40010b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       773	wrstabs.c	FUNCTION_14	CALL_1
0x40010bd	          0x4889ce	                            mov rsi, rcx	       773	wrstabs.c	FUNCTION_14	CALL_1
0x40010c0	          0x4889c7	                            mov rdi, rax	       773	wrstabs.c	FUNCTION_14	CALL_1
0x40010c3	      0xe809f3ffff	         call sym.stab_push_defined_type	       773	wrstabs.c	FUNCTION_14	CALL_1
0x40010c8	              0xc9	                                   leave	       774	wrstabs.c	FUNCTION_14
0x40010c9	              0xc3	                                     ret	       774	wrstabs.c	FUNCTION_14
stab_method_type	FOR,3:ELSE,3:DO,0:WHILE,0:IF,10:SWITCH,0:CALL,24:functions,0	261
0x4001cdd	              0x55	                                push rbp	      1140	wrstabs.c	FUNCTION_24
0x4001cde	          0x4889e5	                            mov rbp, rsp	      1140	wrstabs.c	FUNCTION_24
0x4001ce1	              0x53	                                push rbx	      1140	wrstabs.c	FUNCTION_24
0x4001ce2	        0x4883ec68	                           sub rsp, 0x68	      1140	wrstabs.c	FUNCTION_24
0x4001ce6	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1140	wrstabs.c	FUNCTION_24
0x4001cea	          0x8975a4	             mov dword [rbp - 0x5c], esi	      1140	wrstabs.c	FUNCTION_24
0x4001ced	          0x8955a0	             mov dword [rbp - 0x60], edx	      1140	wrstabs.c	FUNCTION_24
0x4001cf0	          0x894d9c	             mov dword [rbp - 0x64], ecx	      1140	wrstabs.c	FUNCTION_24
0x4001cf3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1141	wrstabs.c	FUNCTION_24
0x4001cf7	        0x488945d0	             mov qword [rbp - 0x30], rax	      1141	wrstabs.c	FUNCTION_24
0x4001cfb	        0x837da400	               cmp dword [rbp - 0x5c], 0	      1154	wrstabs.c	FUNCTION_24	IF_1
0x4001cff	            0x751a	                           jne 0x4001d1b	      1154	wrstabs.c	FUNCTION_24	IF_1
0x4001d01	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1156	wrstabs.c	FUNCTION_24	IF_1	IF_2	CALL_1
0x4001d05	          0x4889c7	                            mov rdi, rax	      1156	wrstabs.c	FUNCTION_24	IF_1	IF_2	CALL_1
0x4001d08	      0xe8afebffff	                call sym.stab_empty_type	      1156	wrstabs.c	FUNCTION_24	IF_1	IF_2	CALL_1
0x4001d0d	            0x85c0	                           test eax, eax	      1156	wrstabs.c	FUNCTION_24	IF_1	IF_2	CALL_1
0x4001d0f	            0x750a	                           jne 0x4001d1b	      1156	wrstabs.c	FUNCTION_24	IF_1	IF_2	CALL_1
0x4001d11	      0xb800000000	                              mov eax, 0	      1157	wrstabs.c	FUNCTION_24	IF_1	IF_2
0x4001d16	      0xe981030000	                           jmp 0x400209c	      1157	wrstabs.c	FUNCTION_24	IF_1	IF_2
0x4001d1b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1160	wrstabs.c	FUNCTION_24
0x4001d1f	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1160	wrstabs.c	FUNCTION_24
0x4001d23	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1160	wrstabs.c	FUNCTION_24
0x4001d26	          0x8945b8	             mov dword [rbp - 0x48], eax	      1160	wrstabs.c	FUNCTION_24
0x4001d29	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1161	wrstabs.c	FUNCTION_24	CALL_2
0x4001d2d	          0x4889c7	                            mov rdi, rax	      1161	wrstabs.c	FUNCTION_24	CALL_2
0x4001d30	      0xe80de7ffff	                  call sym.stab_pop_type	      1161	wrstabs.c	FUNCTION_24	CALL_2
0x4001d35	        0x488945d8	             mov qword [rbp - 0x28], rax	      1161	wrstabs.c	FUNCTION_24	CALL_2
0x4001d39	        0x837da000	               cmp dword [rbp - 0x60], 0	      1166	wrstabs.c	FUNCTION_24	IF_3
0x4001d3d	            0x7914	                           jns 0x4001d53	      1166	wrstabs.c	FUNCTION_24	IF_3
0x4001d3f	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1168	wrstabs.c	FUNCTION_24	IF_3
0x4001d47	    0xc745a0000000	               mov dword [rbp - 0x60], 0	      1169	wrstabs.c	FUNCTION_24	IF_3
0x4001d4e	      0xe96c010000	                           jmp 0x4001ebf	      1169	wrstabs.c	FUNCTION_24	IF_3
0x4001d53	        0x837da000	               cmp dword [rbp - 0x60], 0	      1171	wrstabs.c	FUNCTION_24	ELSE_1	IF_4
0x4001d57	     0xf8581000000	                           jne 0x4001dde	      1171	wrstabs.c	FUNCTION_24	ELSE_1	IF_4
0x4001d5d	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      1173	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	IF_5
0x4001d61	            0x740d	                            je 0x4001d70	      1173	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	IF_5
0x4001d63	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1174	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	IF_5
0x4001d6b	      0xe94f010000	                           jmp 0x4001ebf	      1174	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	IF_5
0x4001d70	      0xbf08000000	                              mov edi, 8	      1177	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_3
0x4001d75	      0xe800000000	                          call 0x4001d7a	      1177	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_3
0x4001d7a	        0x488945c0	             mov qword [rbp - 0x40], rax	      1177	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_3
0x4001d7e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1178	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	IF_6	CALL_4
0x4001d82	          0x4889c7	                            mov rdi, rax	      1178	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	IF_6	CALL_4
0x4001d85	      0xe832ebffff	                call sym.stab_empty_type	      1178	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	IF_6	CALL_4
0x4001d8a	            0x85c0	                           test eax, eax	      1178	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	IF_6	CALL_4
0x4001d8c	            0x750a	                           jne 0x4001d98	      1178	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	IF_6	CALL_4
0x4001d8e	      0xb800000000	                              mov eax, 0	      1179	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	IF_6
0x4001d93	      0xe904030000	                           jmp 0x400209c	      1179	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	IF_6
0x4001d98	        0x837db800	               cmp dword [rbp - 0x48], 0	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x4001d9c	            0x750f	                           jne 0x4001dad	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x4001d9e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x4001da2	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x4001da6	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x4001da9	            0x85c0	                           test eax, eax	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x4001dab	            0x7407	                            je 0x4001db4	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x4001dad	      0xb801000000	                              mov eax, 1	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x4001db2	            0xeb05	                           jmp 0x4001db9	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x4001db4	      0xb800000000	                              mov eax, 0	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x4001db9	          0x8945b8	             mov dword [rbp - 0x48], eax	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x4001dbc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x4001dc0	          0x4889c7	                            mov rdi, rax	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x4001dc3	      0xe87ae6ffff	                  call sym.stab_pop_type	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x4001dc8	          0x4889c2	                            mov rdx, rax	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x4001dcb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x4001dcf	          0x488910	                    mov qword [rax], rdx	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x4001dd2	    0xc745a0010000	               mov dword [rbp - 0x60], 1	      1182	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x4001dd9	      0xe9e1000000	                           jmp 0x4001ebf	      1182	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x4001dde	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4001de1	          0x83c001	                              add eax, 1	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4001de4	            0x4898	                                    cdqe	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4001de6	        0x48c1e003	                              shl rax, 3	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4001dea	          0x4889c7	                            mov rdi, rax	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4001ded	      0xe800000000	                          call 0x4001df2	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4001df2	        0x488945c0	             mov qword [rbp - 0x40], rax	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4001df6	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1188	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001df9	          0x83e801	                              sub eax, 1	      1188	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001dfc	          0x8945bc	             mov dword [rbp - 0x44], eax	      1188	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001dff	            0xeb4c	                           jmp 0x4001e4d	      1188	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001e01	        0x837db800	               cmp dword [rbp - 0x48], 0	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001e05	            0x750f	                           jne 0x4001e16	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001e07	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001e0b	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001e0f	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001e12	            0x85c0	                           test eax, eax	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001e14	            0x7407	                            je 0x4001e1d	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001e16	      0xb801000000	                              mov eax, 1	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001e1b	            0xeb05	                           jmp 0x4001e22	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001e1d	      0xb800000000	                              mov eax, 0	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001e22	          0x8945b8	             mov dword [rbp - 0x48], eax	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001e25	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x4001e28	            0x4898	                                    cdqe	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x4001e2a	    0x488d14c50000	                        lea rdx, [rax*8]	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x4001e32	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x4001e36	        0x488d1c02	                    lea rbx, [rdx + rax]	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x4001e3a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x4001e3e	          0x4889c7	                            mov rdi, rax	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x4001e41	      0xe8fce5ffff	                  call sym.stab_pop_type	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x4001e46	          0x488903	                    mov qword [rbx], rax	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x4001e49	        0x836dbc01	               sub dword [rbp - 0x44], 1	      1188	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001e4d	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1188	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001e51	            0x79ae	                           jns 0x4001e01	      1188	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001e53	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      1193	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001e57	            0x7566	                           jne 0x4001ebf	      1193	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001e59	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1195	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	IF_8	CALL_8
0x4001e5d	          0x4889c7	                            mov rdi, rax	      1195	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	IF_8	CALL_8
0x4001e60	      0xe857eaffff	                call sym.stab_empty_type	      1195	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	IF_8	CALL_8
0x4001e65	            0x85c0	                           test eax, eax	      1195	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	IF_8	CALL_8
0x4001e67	            0x750a	                           jne 0x4001e73	      1195	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	IF_8	CALL_8
0x4001e69	      0xb800000000	                              mov eax, 0	      1196	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	IF_8
0x4001e6e	      0xe929020000	                           jmp 0x400209c	      1196	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	IF_8
0x4001e73	        0x837db800	               cmp dword [rbp - 0x48], 0	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001e77	            0x750f	                           jne 0x4001e88	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001e79	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001e7d	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001e81	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001e84	            0x85c0	                           test eax, eax	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001e86	            0x7407	                            je 0x4001e8f	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001e88	      0xb801000000	                              mov eax, 1	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001e8d	            0xeb05	                           jmp 0x4001e94	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001e8f	      0xb800000000	                              mov eax, 0	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001e94	          0x8945b8	             mov dword [rbp - 0x48], eax	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001e97	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x4001e9a	            0x4898	                                    cdqe	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x4001e9c	    0x488d14c50000	                        lea rdx, [rax*8]	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x4001ea4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x4001ea8	        0x488d1c02	                    lea rbx, [rdx + rax]	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x4001eac	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x4001eb0	          0x4889c7	                            mov rdi, rax	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x4001eb3	      0xe88ae5ffff	                  call sym.stab_pop_type	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x4001eb8	          0x488903	                    mov qword [rbx], rax	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x4001ebb	        0x8345a001	               add dword [rbp - 0x60], 1	      1199	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001ebf	        0x837db800	               cmp dword [rbp - 0x48], 0	      1203	wrstabs.c	FUNCTION_24
0x4001ec3	            0x750f	                           jne 0x4001ed4	      1203	wrstabs.c	FUNCTION_24
0x4001ec5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1203	wrstabs.c	FUNCTION_24
0x4001ec9	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1203	wrstabs.c	FUNCTION_24
0x4001ecd	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1203	wrstabs.c	FUNCTION_24
0x4001ed0	            0x85c0	                           test eax, eax	      1203	wrstabs.c	FUNCTION_24
0x4001ed2	            0x7407	                            je 0x4001edb	      1203	wrstabs.c	FUNCTION_24
0x4001ed4	      0xb801000000	                              mov eax, 1	      1203	wrstabs.c	FUNCTION_24
0x4001ed9	            0xeb05	                           jmp 0x4001ee0	      1203	wrstabs.c	FUNCTION_24
0x4001edb	      0xb800000000	                              mov eax, 0	      1203	wrstabs.c	FUNCTION_24
0x4001ee0	          0x8945b8	             mov dword [rbp - 0x48], eax	      1203	wrstabs.c	FUNCTION_24
0x4001ee3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x4001ee7	          0x4889c7	                            mov rdi, rax	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x4001eea	      0xe853e5ffff	                  call sym.stab_pop_type	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x4001eef	        0x488945e0	             mov qword [rbp - 0x20], rax	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x4001ef3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4001ef7	          0x4889c7	                            mov rdi, rax	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4001efa	      0xe800000000	                          call 0x4001eff	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4001eff	          0x4889c3	                            mov rbx, rax	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4001f02	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4001f06	          0x4889c7	                            mov rdi, rax	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4001f09	      0xe800000000	                          call 0x4001f0e	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4001f0e	          0x4801d8	                            add rax, rbx	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4001f11	        0x4883c00a	                            add rax, 0xa	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4001f15	        0x488945c8	             mov qword [rbp - 0x38], rax	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4001f19	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1207	wrstabs.c	FUNCTION_24	FOR_2
0x4001f20	            0xeb27	                           jmp 0x4001f49	      1207	wrstabs.c	FUNCTION_24	FOR_2
0x4001f22	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x4001f25	            0x4898	                                    cdqe	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x4001f27	    0x488d14c50000	                        lea rdx, [rax*8]	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x4001f2f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x4001f33	          0x4801d0	                            add rax, rdx	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x4001f36	          0x488b00	                    mov rax, qword [rax]	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x4001f39	          0x4889c7	                            mov rdi, rax	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x4001f3c	      0xe800000000	                          call 0x4001f41	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x4001f41	        0x480145c8	            add qword [rbp - 0x38], rax 	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x4001f45	        0x8345bc01	               add dword [rbp - 0x44], 1	      1207	wrstabs.c	FUNCTION_24	FOR_2
0x4001f49	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1207	wrstabs.c	FUNCTION_24	FOR_2
0x4001f4c	          0x3b45a0	             cmp eax, dword [rbp - 0x60]	      1207	wrstabs.c	FUNCTION_24	FOR_2
0x4001f4f	            0x7cd1	                            jl 0x4001f22	      1207	wrstabs.c	FUNCTION_24	FOR_2
0x4001f51	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1210	wrstabs.c	FUNCTION_24	CALL_14
0x4001f55	          0x4889c7	                            mov rdi, rax	      1210	wrstabs.c	FUNCTION_24	CALL_14
0x4001f58	      0xe800000000	                          call 0x4001f5d	      1210	wrstabs.c	FUNCTION_24	CALL_14
0x4001f5d	        0x488945e8	             mov qword [rbp - 0x18], rax	      1210	wrstabs.c	FUNCTION_24	CALL_14
0x4001f61	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1212	wrstabs.c	FUNCTION_24	CALL_15
0x4001f65	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1212	wrstabs.c	FUNCTION_24	CALL_15
0x4001f69	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1212	wrstabs.c	FUNCTION_24	CALL_15
0x4001f6d	      0xbe00000000	                              mov esi, 0	      1212	wrstabs.c	FUNCTION_24	CALL_15
0x4001f72	          0x4889c7	                            mov rdi, rax	      1212	wrstabs.c	FUNCTION_24	CALL_15
0x4001f75	      0xb800000000	                              mov eax, 0	      1212	wrstabs.c	FUNCTION_24	CALL_15
0x4001f7a	      0xe800000000	                          call 0x4001f7f	      1212	wrstabs.c	FUNCTION_24	CALL_15
0x4001f7f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1213	wrstabs.c	FUNCTION_24	CALL_16
0x4001f83	          0x4889c7	                            mov rdi, rax	      1213	wrstabs.c	FUNCTION_24	CALL_16
0x4001f86	      0xe800000000	                          call 0x4001f8b	      1213	wrstabs.c	FUNCTION_24	CALL_16
0x4001f8b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1214	wrstabs.c	FUNCTION_24	CALL_17
0x4001f8f	          0x4889c7	                            mov rdi, rax	      1214	wrstabs.c	FUNCTION_24	CALL_17
0x4001f92	      0xe800000000	                          call 0x4001f97	      1214	wrstabs.c	FUNCTION_24	CALL_17
0x4001f97	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1215	wrstabs.c	FUNCTION_24	FOR_3
0x4001f9e	            0xeb77	                           jmp 0x4002017	      1215	wrstabs.c	FUNCTION_24	FOR_3
0x4001fa0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1217	wrstabs.c	FUNCTION_24	FOR_3	CALL_18
0x4001fa4	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1217	wrstabs.c	FUNCTION_24	FOR_3	CALL_18
0x4001fab	          0x4889c2	                            mov rdx, rax	      1217	wrstabs.c	FUNCTION_24	FOR_3	CALL_18
0x4001fae	      0xb800000000	                              mov eax, 0	      1217	wrstabs.c	FUNCTION_24	FOR_3	CALL_18
0x4001fb3	          0x4889d7	                            mov rdi, rdx	      1217	wrstabs.c	FUNCTION_24	FOR_3	CALL_18
0x4001fb6	            0xf2ae	              repne scasb al, byte [rdi]	      1217	wrstabs.c	FUNCTION_24	FOR_3	CALL_18
0x4001fb8	          0x4889c8	                            mov rax, rcx	      1217	wrstabs.c	FUNCTION_24	FOR_3	CALL_18
0x4001fbb	          0x48f7d0	                                 not rax	      1217	wrstabs.c	FUNCTION_24	FOR_3	CALL_18
0x4001fbe	        0x488d50ff	                      lea rdx, [rax - 1]	      1217	wrstabs.c	FUNCTION_24	FOR_3	CALL_18
0x4001fc2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1217	wrstabs.c	FUNCTION_24	FOR_3	CALL_18
0x4001fc6	          0x4801d0	                            add rax, rdx	      1217	wrstabs.c	FUNCTION_24	FOR_3	CALL_18
0x4001fc9	      0x66c7002c00	                    mov word [rax], 0x2c	      1217	wrstabs.c	FUNCTION_24	FOR_3	CALL_18
0x4001fce	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1218	wrstabs.c	FUNCTION_24	FOR_3	CALL_19
0x4001fd1	            0x4898	                                    cdqe	      1218	wrstabs.c	FUNCTION_24	FOR_3	CALL_19
0x4001fd3	    0x488d14c50000	                        lea rdx, [rax*8]	      1218	wrstabs.c	FUNCTION_24	FOR_3	CALL_19
0x4001fdb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1218	wrstabs.c	FUNCTION_24	FOR_3	CALL_19
0x4001fdf	          0x4801d0	                            add rax, rdx	      1218	wrstabs.c	FUNCTION_24	FOR_3	CALL_19
0x4001fe2	          0x488b10	                    mov rdx, qword [rax]	      1218	wrstabs.c	FUNCTION_24	FOR_3	CALL_19
0x4001fe5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1218	wrstabs.c	FUNCTION_24	FOR_3	CALL_19
0x4001fe9	          0x4889d6	                            mov rsi, rdx	      1218	wrstabs.c	FUNCTION_24	FOR_3	CALL_19
0x4001fec	          0x4889c7	                            mov rdi, rax	      1218	wrstabs.c	FUNCTION_24	FOR_3	CALL_19
0x4001fef	      0xe800000000	                          call 0x4001ff4	      1218	wrstabs.c	FUNCTION_24	FOR_3	CALL_19
0x4001ff4	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1219	wrstabs.c	FUNCTION_24	FOR_3	CALL_20
0x4001ff7	            0x4898	                                    cdqe	      1219	wrstabs.c	FUNCTION_24	FOR_3	CALL_20
0x4001ff9	    0x488d14c50000	                        lea rdx, [rax*8]	      1219	wrstabs.c	FUNCTION_24	FOR_3	CALL_20
0x4002001	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1219	wrstabs.c	FUNCTION_24	FOR_3	CALL_20
0x4002005	          0x4801d0	                            add rax, rdx	      1219	wrstabs.c	FUNCTION_24	FOR_3	CALL_20
0x4002008	          0x488b00	                    mov rax, qword [rax]	      1219	wrstabs.c	FUNCTION_24	FOR_3	CALL_20
0x400200b	          0x4889c7	                            mov rdi, rax	      1219	wrstabs.c	FUNCTION_24	FOR_3	CALL_20
0x400200e	      0xe800000000	                          call 0x4002013	      1219	wrstabs.c	FUNCTION_24	FOR_3	CALL_20
0x4002013	        0x8345bc01	               add dword [rbp - 0x44], 1	      1215	wrstabs.c	FUNCTION_24	FOR_3
0x4002017	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1215	wrstabs.c	FUNCTION_24	FOR_3
0x400201a	          0x3b45a0	             cmp eax, dword [rbp - 0x60]	      1215	wrstabs.c	FUNCTION_24	FOR_3
0x400201d	            0x7c81	                            jl 0x4001fa0	      1215	wrstabs.c	FUNCTION_24	FOR_3
0x400201f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1221	wrstabs.c	FUNCTION_24	CALL_21
0x4002023	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1221	wrstabs.c	FUNCTION_24	CALL_21
0x400202a	          0x4889c2	                            mov rdx, rax	      1221	wrstabs.c	FUNCTION_24	CALL_21
0x400202d	      0xb800000000	                              mov eax, 0	      1221	wrstabs.c	FUNCTION_24	CALL_21
0x4002032	          0x4889d7	                            mov rdi, rdx	      1221	wrstabs.c	FUNCTION_24	CALL_21
0x4002035	            0xf2ae	              repne scasb al, byte [rdi]	      1221	wrstabs.c	FUNCTION_24	CALL_21
0x4002037	          0x4889c8	                            mov rax, rcx	      1221	wrstabs.c	FUNCTION_24	CALL_21
0x400203a	          0x48f7d0	                                 not rax	      1221	wrstabs.c	FUNCTION_24	CALL_21
0x400203d	        0x488d50ff	                      lea rdx, [rax - 1]	      1221	wrstabs.c	FUNCTION_24	CALL_21
0x4002041	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1221	wrstabs.c	FUNCTION_24	CALL_21
0x4002045	          0x4801d0	                            add rax, rdx	      1221	wrstabs.c	FUNCTION_24	CALL_21
0x4002048	      0x66c7003b00	                    mov word [rax], 0x3b	      1221	wrstabs.c	FUNCTION_24	CALL_21
0x400204d	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1223	wrstabs.c	FUNCTION_24	IF_9
0x4002052	            0x740c	                            je 0x4002060	      1223	wrstabs.c	FUNCTION_24	IF_9
0x4002054	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1224	wrstabs.c	FUNCTION_24	CALL_22
0x4002058	          0x4889c7	                            mov rdi, rax	      1224	wrstabs.c	FUNCTION_24	CALL_22
0x400205b	      0xe800000000	                          call 0x4002060	      1224	wrstabs.c	FUNCTION_24	CALL_22
0x4002060	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_23
0x4002063	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_23
0x4002067	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_23
0x400206b	    0x41b800000000	                              mov r8d, 0	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_23
0x4002071	            0x89d1	                            mov ecx, edx	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_23
0x4002073	      0xba00000000	                              mov edx, 0	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_23
0x4002078	          0x4889c7	                            mov rdi, rax	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_23
0x400207b	      0xe89fe2ffff	               call sym.stab_push_string	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_23
0x4002080	            0x85c0	                           test eax, eax	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_23
0x4002082	            0x7507	                           jne 0x400208b	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_23
0x4002084	      0xb800000000	                              mov eax, 0	      1227	wrstabs.c	FUNCTION_24	IF_10
0x4002089	            0xeb11	                           jmp 0x400209c	      1227	wrstabs.c	FUNCTION_24	IF_10
0x400208b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1229	wrstabs.c	FUNCTION_24	CALL_24
0x400208f	          0x4889c7	                            mov rdi, rax	      1229	wrstabs.c	FUNCTION_24	CALL_24
0x4002092	      0xe800000000	                          call 0x4002097	      1229	wrstabs.c	FUNCTION_24	CALL_24
0x4002097	      0xb801000000	                              mov eax, 1	      1231	wrstabs.c	FUNCTION_24
0x400209c	        0x4883c468	                           add rsp, 0x68	      1232	wrstabs.c	FUNCTION_24
0x40020a0	              0x5b	                                 pop rbx	      1232	wrstabs.c	FUNCTION_24
0x40020a1	              0x5d	                                 pop rbp	      1232	wrstabs.c	FUNCTION_24
0x40020a2	              0xc3	                                     ret	      1232	wrstabs.c	FUNCTION_24
stab_lineno	FOR,0:ELSE,0:DO,0:WHILE,0:IF,3:SWITCH,0:CALL,4:functions,0	64
0x400410e	              0x55	                                push rbp	      2254	wrstabs.c	FUNCTION_53
0x400410f	          0x4889e5	                            mov rbp, rsp	      2254	wrstabs.c	FUNCTION_53
0x4004112	        0x4883ec30	                           sub rsp, 0x30	      2254	wrstabs.c	FUNCTION_53
0x4004116	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2254	wrstabs.c	FUNCTION_53
0x400411a	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2254	wrstabs.c	FUNCTION_53
0x400411e	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2254	wrstabs.c	FUNCTION_53
0x4004122	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      2254	wrstabs.c	FUNCTION_53
0x4004126	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2255	wrstabs.c	FUNCTION_53
0x400412a	        0x488945f8	                mov qword [rbp - 8], rax	      2255	wrstabs.c	FUNCTION_53
0x400412e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x4004132	    0x488b80100200	           mov rax, qword [rax + 0x210] 	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x4004139	          0x4885c0	                           test rax, rax	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x400413c	            0x7519	                           jne 0x4004157	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x400413e	      0xb900000000	                              mov ecx, 0	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x4004143	      0xbad1080000	                          mov edx, 0x8d1	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x4004148	      0xbe00000000	                              mov esi, 0	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x400414d	      0xbf00000000	                              mov edi, 0	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x4004152	      0xe800000000	                          call 0x4004157	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x4004157	        0x488b45f8	                mov rax, qword [rbp - 8]	      2259	wrstabs.c	FUNCTION_53	IF_1
0x400415b	    0x488b80f00100	           mov rax, qword [rax + 0x1f0] 	      2259	wrstabs.c	FUNCTION_53	IF_1
0x4004162	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2259	wrstabs.c	FUNCTION_53	IF_1
0x4004166	            0x730f	                           jae 0x4004177	      2259	wrstabs.c	FUNCTION_53	IF_1
0x4004168	        0x488b45f8	                mov rax, qword [rbp - 8]	      2260	wrstabs.c	FUNCTION_53	IF_1
0x400416c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2260	wrstabs.c	FUNCTION_53	IF_1
0x4004170	    0x488990f00100	            mov qword [rax + 0x1f0], rdx	      2260	wrstabs.c	FUNCTION_53	IF_1
0x4004177	        0x488b45f8	                mov rax, qword [rbp - 8]	      2262	wrstabs.c	FUNCTION_53	IF_2	CALL_2
0x400417b	    0x488b90100200	           mov rdx, qword [rax + 0x210] 	      2262	wrstabs.c	FUNCTION_53	IF_2	CALL_2
0x4004182	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2262	wrstabs.c	FUNCTION_53	IF_2	CALL_2
0x4004186	          0x4889d6	                            mov rsi, rdx	      2262	wrstabs.c	FUNCTION_53	IF_2	CALL_2
0x4004189	          0x4889c7	                            mov rdi, rax	      2262	wrstabs.c	FUNCTION_53	IF_2	CALL_2
0x400418c	      0xe800000000	                          call 0x4004191	      2262	wrstabs.c	FUNCTION_53	IF_2	CALL_2
0x4004191	            0x85c0	                           test eax, eax	      2262	wrstabs.c	FUNCTION_53	IF_2	CALL_2
0x4004193	            0x743e	                            je 0x40041d3	      2262	wrstabs.c	FUNCTION_53	IF_2	CALL_2
0x4004195	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x4004199	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x400419d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x40041a1	          0x4989c8	                             mov r8, rcx	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x40041a4	          0x4889d1	                            mov rcx, rdx	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x40041a7	      0xba00000000	                              mov edx, 0	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x40041ac	      0xbe84000000	                           mov esi, 0x84	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x40041b1	          0x4889c7	                            mov rdi, rax	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x40041b4	      0xe818bfffff	              call sym.stab_write_symbol	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x40041b9	            0x85c0	                           test eax, eax	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x40041bb	            0x7507	                           jne 0x40041c4	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x40041bd	      0xb800000000	                              mov eax, 0	      2265	wrstabs.c	FUNCTION_53	IF_2	IF_3
0x40041c2	            0xeb43	                           jmp 0x4004207	      2265	wrstabs.c	FUNCTION_53	IF_2	IF_3
0x40041c4	        0x488b45f8	                mov rax, qword [rbp - 8]	      2266	wrstabs.c	FUNCTION_53	IF_2
0x40041c8	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2266	wrstabs.c	FUNCTION_53	IF_2
0x40041cc	    0x488990100200	            mov qword [rax + 0x210], rdx	      2266	wrstabs.c	FUNCTION_53	IF_2
0x40041d3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x40041d7	    0x488b80000200	           mov rax, qword [rax + 0x200] 	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x40041de	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x40041e2	          0x4829c2	                            sub rdx, rax	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x40041e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x40041e9	            0x89c6	                            mov esi, eax	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x40041eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x40041ef	    0x41b800000000	                              mov r8d, 0	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x40041f5	          0x4889d1	                            mov rcx, rdx	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x40041f8	            0x89f2	                            mov edx, esi	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x40041fa	      0xbe44000000	                           mov esi, 0x44	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x40041ff	          0x4889c7	                            mov rdi, rax	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x4004202	      0xe8cabeffff	              call sym.stab_write_symbol	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x4004207	              0xc9	                                   leave	      2271	wrstabs.c	FUNCTION_53
0x4004208	              0xc3	                                     ret	      2271	wrstabs.c	FUNCTION_53
stab_class_start_method	FOR,0:ELSE,1:DO,0:WHILE,0:IF,1:SWITCH,0:CALL,8:functions,0	76
0x4002c7c	              0x55	                                push rbp	      1614	wrstabs.c	FUNCTION_34
0x4002c7d	          0x4889e5	                            mov rbp, rsp	      1614	wrstabs.c	FUNCTION_34
0x4002c80	              0x53	                                push rbx	      1614	wrstabs.c	FUNCTION_34
0x4002c81	        0x4883ec28	                           sub rsp, 0x28	      1614	wrstabs.c	FUNCTION_34
0x4002c85	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1614	wrstabs.c	FUNCTION_34
0x4002c89	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1614	wrstabs.c	FUNCTION_34
0x4002c8d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1615	wrstabs.c	FUNCTION_34
0x4002c91	        0x488945e8	             mov qword [rbp - 0x18], rax	      1615	wrstabs.c	FUNCTION_34
0x4002c95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4002c99	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4002c9d	          0x4885c0	                           test rax, rax	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4002ca0	            0x7411	                            je 0x4002cb3	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4002ca2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4002ca6	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4002caa	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4002cae	          0x4885c0	                           test rax, rax	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4002cb1	            0x7519	                           jne 0x4002ccc	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4002cb3	      0xb900000000	                              mov ecx, 0	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4002cb8	      0xba52060000	                          mov edx, 0x652	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4002cbd	      0xbe00000000	                              mov esi, 0	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4002cc2	      0xbf00000000	                              mov edi, 0	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4002cc7	      0xe800000000	                          call 0x4002ccc	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4002ccc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1620	wrstabs.c	FUNCTION_34	IF_1
0x4002cd0	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1620	wrstabs.c	FUNCTION_34	IF_1
0x4002cd4	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1620	wrstabs.c	FUNCTION_34	IF_1
0x4002cd8	          0x4885c0	                           test rax, rax	      1620	wrstabs.c	FUNCTION_34	IF_1
0x4002cdb	            0x7525	                           jne 0x4002d02	      1620	wrstabs.c	FUNCTION_34	IF_1
0x4002cdd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x4002ce1	          0x4889c7	                            mov rdi, rax	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x4002ce4	      0xe800000000	                          call 0x4002ce9	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x4002ce9	        0x4883c003	                              add rax, 3	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x4002ced	          0x4889c7	                            mov rdi, rax	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x4002cf0	      0xe800000000	                          call 0x4002cf5	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x4002cf5	        0x488945e0	             mov qword [rbp - 0x20], rax	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x4002cf9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1623	wrstabs.c	FUNCTION_34	IF_1
0x4002cfd	          0xc60000	                       mov byte [rax], 0	      1623	wrstabs.c	FUNCTION_34	IF_1
0x4002d00	            0xeb45	                           jmp 0x4002d47	      1623	wrstabs.c	FUNCTION_34	IF_1
0x4002d02	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1628	wrstabs.c	FUNCTION_34	ELSE_1	CALL_5
0x4002d06	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1628	wrstabs.c	FUNCTION_34	ELSE_1	CALL_5
0x4002d0a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1628	wrstabs.c	FUNCTION_34	ELSE_1	CALL_5
0x4002d0e	          0x4889c7	                            mov rdi, rax	      1628	wrstabs.c	FUNCTION_34	ELSE_1	CALL_5
0x4002d11	      0xe800000000	                          call 0x4002d16	      1628	wrstabs.c	FUNCTION_34	ELSE_1	CALL_5
0x4002d16	          0x4889c3	                            mov rbx, rax	      1628	wrstabs.c	FUNCTION_34	ELSE_1	CALL_5
0x4002d19	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1629	wrstabs.c	FUNCTION_34	ELSE_1	CALL_6
0x4002d1d	          0x4889c7	                            mov rdi, rax	      1629	wrstabs.c	FUNCTION_34	ELSE_1	CALL_6
0x4002d20	      0xe800000000	                          call 0x4002d25	      1629	wrstabs.c	FUNCTION_34	ELSE_1	CALL_6
0x4002d25	          0x4801d8	                            add rax, rbx	      1629	wrstabs.c	FUNCTION_34	ELSE_1	CALL_6
0x4002d28	        0x488d5004	                      lea rdx, [rax + 4]	      1627	wrstabs.c	FUNCTION_34	ELSE_1	CALL_4
0x4002d2c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1627	wrstabs.c	FUNCTION_34	ELSE_1	CALL_4
0x4002d30	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1627	wrstabs.c	FUNCTION_34	ELSE_1	CALL_4
0x4002d34	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1627	wrstabs.c	FUNCTION_34	ELSE_1	CALL_4
0x4002d38	          0x4889d6	                            mov rsi, rdx	      1627	wrstabs.c	FUNCTION_34	ELSE_1	CALL_4
0x4002d3b	          0x4889c7	                            mov rdi, rax	      1627	wrstabs.c	FUNCTION_34	ELSE_1	CALL_4
0x4002d3e	      0xe800000000	                          call 0x4002d43	      1627	wrstabs.c	FUNCTION_34	ELSE_1	CALL_4
0x4002d43	        0x488945e0	             mov qword [rbp - 0x20], rax	      1627	wrstabs.c	FUNCTION_34	ELSE_1	CALL_4
0x4002d47	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1633	wrstabs.c	FUNCTION_34	CALL_8
0x4002d4b	          0x4889c7	                            mov rdi, rax	      1633	wrstabs.c	FUNCTION_34	CALL_8
0x4002d4e	      0xe800000000	                          call 0x4002d53	      1633	wrstabs.c	FUNCTION_34	CALL_8
0x4002d53	          0x4889c2	                            mov rdx, rax	      1633	wrstabs.c	FUNCTION_34	CALL_8
0x4002d56	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1633	wrstabs.c	FUNCTION_34	CALL_8
0x4002d5a	        0x488d0c02	                    lea rcx, [rdx + rax]	      1633	wrstabs.c	FUNCTION_34	CALL_8
0x4002d5e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1633	wrstabs.c	FUNCTION_34	CALL_8
0x4002d62	          0x4889c2	                            mov rdx, rax	      1633	wrstabs.c	FUNCTION_34	CALL_8
0x4002d65	      0xbe00000000	                              mov esi, 0	      1633	wrstabs.c	FUNCTION_34	CALL_8
0x4002d6a	          0x4889cf	                            mov rdi, rcx	      1633	wrstabs.c	FUNCTION_34	CALL_8
0x4002d6d	      0xb800000000	                              mov eax, 0	      1633	wrstabs.c	FUNCTION_34	CALL_8
0x4002d72	      0xe800000000	                          call 0x4002d77	      1633	wrstabs.c	FUNCTION_34	CALL_8
0x4002d77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1635	wrstabs.c	FUNCTION_34
0x4002d7b	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1635	wrstabs.c	FUNCTION_34
0x4002d7f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1635	wrstabs.c	FUNCTION_34
0x4002d83	        0x48895030	             mov qword [rax + 0x30], rdx	      1635	wrstabs.c	FUNCTION_34
0x4002d87	      0xb801000000	                              mov eax, 1	      1637	wrstabs.c	FUNCTION_34
0x4002d8c	        0x4883c428	                           add rsp, 0x28	      1638	wrstabs.c	FUNCTION_34
0x4002d90	              0x5b	                                 pop rbx	      1638	wrstabs.c	FUNCTION_34
0x4002d91	              0x5d	                                 pop rbp	      1638	wrstabs.c	FUNCTION_34
0x4002d92	              0xc3	                                     ret	      1638	wrstabs.c	FUNCTION_34
stab_class_method_var	FOR,0:ELSE,5:DO,0:WHILE,0:IF,8:SWITCH,1:CALL,15:functions,0	182
0x4002d93	              0x55	                                push rbp	      1648	wrstabs.c	FUNCTION_35
0x4002d94	          0x4889e5	                            mov rbp, rsp	      1648	wrstabs.c	FUNCTION_35
0x4002d97	            0x4156	                                push r14	      1648	wrstabs.c	FUNCTION_35
0x4002d99	            0x4155	                                push r13	      1648	wrstabs.c	FUNCTION_35
0x4002d9b	            0x4154	                                push r12	      1648	wrstabs.c	FUNCTION_35
0x4002d9d	              0x53	                                push rbx	      1648	wrstabs.c	FUNCTION_35
0x4002d9e	        0x4883ec40	                           sub rsp, 0x40	      1648	wrstabs.c	FUNCTION_35
0x4002da2	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1648	wrstabs.c	FUNCTION_35
0x4002da6	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1648	wrstabs.c	FUNCTION_35
0x4002daa	          0x8955ac	             mov dword [rbp - 0x54], edx	      1648	wrstabs.c	FUNCTION_35
0x4002dad	          0x894da8	             mov dword [rbp - 0x58], ecx	      1648	wrstabs.c	FUNCTION_35
0x4002db0	        0x448945a4	             mov dword [rbp - 0x5c], r8d	      1648	wrstabs.c	FUNCTION_35
0x4002db4	        0x44894da0	             mov dword [rbp - 0x60], r9d	      1648	wrstabs.c	FUNCTION_35
0x4002db8	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1651	wrstabs.c	FUNCTION_35
0x4002dc0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1654	wrstabs.c	FUNCTION_35
0x4002dc4	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1654	wrstabs.c	FUNCTION_35
0x4002dc8	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1654	wrstabs.c	FUNCTION_35
0x4002dcb	          0x8945cc	             mov dword [rbp - 0x34], eax	      1654	wrstabs.c	FUNCTION_35
0x4002dce	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1655	wrstabs.c	FUNCTION_35	CALL_1
0x4002dd2	          0x4889c7	                            mov rdi, rax	      1655	wrstabs.c	FUNCTION_35	CALL_1
0x4002dd5	      0xe868d6ffff	                  call sym.stab_pop_type	      1655	wrstabs.c	FUNCTION_35	CALL_1
0x4002dda	        0x488945d8	             mov qword [rbp - 0x28], rax	      1655	wrstabs.c	FUNCTION_35	CALL_1
0x4002dde	        0x837d1800	               cmp dword [rbp + 0x18], 0	      1657	wrstabs.c	FUNCTION_35	IF_1
0x4002de2	            0x7434	                            je 0x4002e18	      1657	wrstabs.c	FUNCTION_35	IF_1
0x4002de4	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4002de8	            0x750f	                           jne 0x4002df9	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4002dea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4002dee	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4002df2	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4002df5	            0x85c0	                           test eax, eax	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4002df7	            0x7407	                            je 0x4002e00	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4002df9	      0xb801000000	                              mov eax, 1	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4002dfe	            0xeb05	                           jmp 0x4002e05	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4002e00	      0xb800000000	                              mov eax, 0	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4002e05	          0x8945cc	             mov dword [rbp - 0x34], eax	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4002e08	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1660	wrstabs.c	FUNCTION_35	IF_1	CALL_2
0x4002e0c	          0x4889c7	                            mov rdi, rax	      1660	wrstabs.c	FUNCTION_35	IF_1	CALL_2
0x4002e0f	      0xe82ed6ffff	                  call sym.stab_pop_type	      1660	wrstabs.c	FUNCTION_35	IF_1	CALL_2
0x4002e14	        0x488945d0	             mov qword [rbp - 0x30], rax	      1660	wrstabs.c	FUNCTION_35	IF_1	CALL_2
0x4002e18	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4002e1c	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4002e20	          0x4885c0	                           test rax, rax	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4002e23	            0x7411	                            je 0x4002e36	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4002e25	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4002e29	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4002e2d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4002e31	          0x4885c0	                           test rax, rax	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4002e34	            0x7519	                           jne 0x4002e4f	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4002e36	      0xb900000000	                              mov ecx, 0	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4002e3b	      0xba7f060000	                          mov edx, 0x67f	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4002e40	      0xbe00000000	                              mov esi, 0	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4002e45	      0xbf00000000	                              mov edi, 0	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4002e4a	      0xe800000000	                          call 0x4002e4f	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4002e4f	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x4002e52	          0x83f801	                              cmp eax, 1	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x4002e55	            0x7415	                            je 0x4002e6c	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x4002e57	          0x83f801	                              cmp eax, 1	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x4002e5a	            0x7216	                            jb 0x4002e72	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x4002e5c	          0x83f802	                              cmp eax, 2	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x4002e5f	            0x7405	                            je 0x4002e66	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x4002e61	      0xe800000000	                          call 0x4002e66	      1668	wrstabs.c	FUNCTION_35	SWITCH_1	CALL_4
0x4002e66	        0xc645c930	            mov byte [rbp - 0x37], 0x30 	      1671	wrstabs.c	FUNCTION_35	SWITCH_1
0x4002e6a	            0xeb0b	                           jmp 0x4002e77	      1672	wrstabs.c	FUNCTION_35	SWITCH_1
0x4002e6c	        0xc645c931	            mov byte [rbp - 0x37], 0x31 	      1675	wrstabs.c	FUNCTION_35	SWITCH_1
0x4002e70	            0xeb05	                           jmp 0x4002e77	      1676	wrstabs.c	FUNCTION_35	SWITCH_1
0x4002e72	        0xc645c932	            mov byte [rbp - 0x37], 0x32 	      1679	wrstabs.c	FUNCTION_35	SWITCH_1
0x4002e76	              0x90	                                     nop	      1680	wrstabs.c	FUNCTION_35	SWITCH_1
0x4002e77	        0x837da400	               cmp dword [rbp - 0x5c], 0	      1683	wrstabs.c	FUNCTION_35	IF_2
0x4002e7b	            0x7412	                            je 0x4002e8f	      1683	wrstabs.c	FUNCTION_35	IF_2
0x4002e7d	        0x837da000	               cmp dword [rbp - 0x60], 0	      1685	wrstabs.c	FUNCTION_35	IF_2	IF_3
0x4002e81	            0x7406	                            je 0x4002e89	      1685	wrstabs.c	FUNCTION_35	IF_2	IF_3
0x4002e83	        0xc645ca44	            mov byte [rbp - 0x36], 0x44 	      1686	wrstabs.c	FUNCTION_35	IF_2	IF_3
0x4002e87	            0xeb16	                           jmp 0x4002e9f	      1686	wrstabs.c	FUNCTION_35	IF_2	IF_3
0x4002e89	        0xc645ca42	            mov byte [rbp - 0x36], 0x42 	      1688	wrstabs.c	FUNCTION_35	IF_2	ELSE_1
0x4002e8d	            0xeb10	                           jmp 0x4002e9f	      1688	wrstabs.c	FUNCTION_35	IF_2	ELSE_1
0x4002e8f	        0x837da000	               cmp dword [rbp - 0x60], 0	      1692	wrstabs.c	FUNCTION_35	ELSE_2	IF_4
0x4002e93	            0x7406	                            je 0x4002e9b	      1692	wrstabs.c	FUNCTION_35	ELSE_2	IF_4
0x4002e95	        0xc645ca43	            mov byte [rbp - 0x36], 0x43 	      1693	wrstabs.c	FUNCTION_35	ELSE_2	IF_4
0x4002e99	            0xeb04	                           jmp 0x4002e9f	      1693	wrstabs.c	FUNCTION_35	ELSE_2	IF_4
0x4002e9b	        0xc645ca41	            mov byte [rbp - 0x36], 0x41 	      1695	wrstabs.c	FUNCTION_35	ELSE_2	ELSE_3
0x4002e9f	        0x837da800	               cmp dword [rbp - 0x58], 0	      1698	wrstabs.c	FUNCTION_35	IF_5
0x4002ea3	            0x7406	                            je 0x4002eab	      1698	wrstabs.c	FUNCTION_35	IF_5
0x4002ea5	        0xc645cb3f	            mov byte [rbp - 0x35], 0x3f 	      1699	wrstabs.c	FUNCTION_35	IF_5
0x4002ea9	            0xeb10	                           jmp 0x4002ebb	      1699	wrstabs.c	FUNCTION_35	IF_5
0x4002eab	        0x837d1800	               cmp dword [rbp + 0x18], 0	      1700	wrstabs.c	FUNCTION_35	ELSE_4	IF_6
0x4002eaf	            0x7506	                           jne 0x4002eb7	      1700	wrstabs.c	FUNCTION_35	ELSE_4	IF_6
0x4002eb1	        0xc645cb2e	            mov byte [rbp - 0x35], 0x2e 	      1701	wrstabs.c	FUNCTION_35	ELSE_4	IF_6
0x4002eb5	            0xeb04	                           jmp 0x4002ebb	      1701	wrstabs.c	FUNCTION_35	ELSE_4	IF_6
0x4002eb7	        0xc645cb2a	            mov byte [rbp - 0x35], 0x2a 	      1703	wrstabs.c	FUNCTION_35	ELSE_5
0x4002ebb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1705	wrstabs.c	FUNCTION_35
0x4002ebf	        0x488b5860	            mov rbx, qword [rax + 0x60] 	      1705	wrstabs.c	FUNCTION_35
0x4002ec3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4002ec7	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4002ecb	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4002ecf	          0x4889c7	                            mov rdi, rax	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4002ed2	      0xe800000000	                          call 0x4002ed7	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4002ed7	          0x4989c4	                            mov r12, rax	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4002eda	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4002ede	          0x4889c7	                            mov rdi, rax	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4002ee1	      0xe800000000	                          call 0x4002ee6	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4002ee6	          0x4901c4	                            add r12, rax	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4002ee9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4002eed	          0x4889c7	                            mov rdi, rax	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4002ef0	      0xe800000000	                          call 0x4002ef5	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4002ef5	          0x4901c4	                            add r12, rax	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4002ef8	        0x837d1800	               cmp dword [rbp + 0x18], 0	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4002efc	            0x740e	                            je 0x4002f0c	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4002efe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4002f02	          0x4889c7	                            mov rdi, rax	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4002f05	      0xe800000000	                          call 0x4002f0a	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4002f0a	            0xeb05	                           jmp 0x4002f11	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4002f0c	      0xb800000000	                              mov eax, 0	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4002f11	          0x4c01e0	                            add rax, r12	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4002f14	        0x488d5028	                   lea rdx, [rax + 0x28]	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x4002f18	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x4002f1c	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x4002f20	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x4002f24	          0x4889d6	                            mov rsi, rdx	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x4002f27	          0x4889c7	                            mov rdi, rax	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x4002f2a	      0xe800000000	                          call 0x4002f2f	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x4002f2f	        0x48894330	             mov qword [rbx + 0x30], rax	      1705	wrstabs.c	FUNCTION_35
0x4002f33	         0xfbe5dcb	            movsx ebx, byte [rbp - 0x35]	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f37	      0x440fbe6dca	           movsx r13d, byte [rbp - 0x36]	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f3c	      0x440fbe65c9	           movsx r12d, byte [rbp - 0x37]	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f41	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f45	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f49	        0x4c8b7030	            mov r14, qword [rax + 0x30] 	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f4d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f51	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f55	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f59	          0x4889c7	                            mov rdi, rax	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f5c	      0xe800000000	                          call 0x4002f61	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f61	        0x498d3c06	                    lea rdi, [r14 + rax]	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f65	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f69	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f6d	        0x4883ec08	                              sub rsp, 8	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f71	              0x53	                                push rbx	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f72	          0x4589e9	                           mov r9d, r13d	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f75	          0x4589e0	                           mov r8d, r12d	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f78	          0x4889d1	                            mov rcx, rdx	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f7b	          0x4889c2	                            mov rdx, rax	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f7e	      0xbe00000000	                              mov esi, 0	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f83	      0xb800000000	                              mov eax, 0	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f88	      0xe800000000	                          call 0x4002f8d	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f8d	        0x4883c410	                           add rsp, 0x10	      1713	wrstabs.c	FUNCTION_35	CALL_11
0x4002f91	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1715	wrstabs.c	FUNCTION_35	CALL_12
0x4002f95	          0x4889c7	                            mov rdi, rax	      1715	wrstabs.c	FUNCTION_35	CALL_12
0x4002f98	      0xe800000000	                          call 0x4002f9d	      1715	wrstabs.c	FUNCTION_35	CALL_12
0x4002f9d	        0x837d1800	               cmp dword [rbp + 0x18], 0	      1717	wrstabs.c	FUNCTION_35	IF_7
0x4002fa1	            0x744d	                            je 0x4002ff0	      1717	wrstabs.c	FUNCTION_35	IF_7
0x4002fa3	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_14
0x4002fa7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_14
0x4002fab	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_14
0x4002faf	        0x4c8b6030	            mov r12, qword [rax + 0x30] 	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_14
0x4002fb3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_14
0x4002fb7	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_14
0x4002fbb	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_14
0x4002fbf	          0x4889c7	                            mov rdi, rax	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_14
0x4002fc2	      0xe800000000	                          call 0x4002fc7	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_14
0x4002fc7	        0x498d3c04	                    lea rdi, [r12 + rax]	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_14
0x4002fcb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_14
0x4002fcf	          0x4889c1	                            mov rcx, rax	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_14
0x4002fd2	          0x4889da	                            mov rdx, rbx	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_14
0x4002fd5	      0xbe00000000	                              mov esi, 0	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_14
0x4002fda	      0xb800000000	                              mov eax, 0	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_14
0x4002fdf	      0xe800000000	                          call 0x4002fe4	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_14
0x4002fe4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1721	wrstabs.c	FUNCTION_35	IF_7	CALL_15
0x4002fe8	          0x4889c7	                            mov rdi, rax	      1721	wrstabs.c	FUNCTION_35	IF_7	CALL_15
0x4002feb	      0xe800000000	                          call 0x4002ff0	      1721	wrstabs.c	FUNCTION_35	IF_7	CALL_15
0x4002ff0	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1724	wrstabs.c	FUNCTION_35	IF_8
0x4002ff4	            0x740f	                            je 0x4003005	      1724	wrstabs.c	FUNCTION_35	IF_8
0x4002ff6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1725	wrstabs.c	FUNCTION_35	IF_8
0x4002ffa	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1725	wrstabs.c	FUNCTION_35	IF_8
0x4002ffe	    0xc7401c010000	               mov dword [rax + 0x1c], 1	      1725	wrstabs.c	FUNCTION_35	IF_8
0x4003005	      0xb801000000	                              mov eax, 1	      1727	wrstabs.c	FUNCTION_35
0x400300a	        0x488d65e0	                   lea rsp, [rbp - 0x20]	      1728	wrstabs.c	FUNCTION_35
0x400300e	              0x5b	                                 pop rbx	      1728	wrstabs.c	FUNCTION_35
0x400300f	            0x415c	                                 pop r12	      1728	wrstabs.c	FUNCTION_35
0x4003011	            0x415d	                                 pop r13	      1728	wrstabs.c	FUNCTION_35
0x4003013	            0x415e	                                 pop r14	      1728	wrstabs.c	FUNCTION_35
0x4003015	              0x5d	                                 pop rbp	      1728	wrstabs.c	FUNCTION_35
0x4003016	              0xc3	                                     ret	      1728	wrstabs.c	FUNCTION_35
stab_class_static_member	FOR,0:ELSE,0:DO,0:WHILE,0:IF,1:SWITCH,1:CALL,10:functions,0	98
0x4002921	              0x55	                                push rbp	      1494	wrstabs.c	FUNCTION_32
0x4002922	          0x4889e5	                            mov rbp, rsp	      1494	wrstabs.c	FUNCTION_32
0x4002925	              0x53	                                push rbx	      1494	wrstabs.c	FUNCTION_32
0x4002926	        0x4883ec58	                           sub rsp, 0x58	      1494	wrstabs.c	FUNCTION_32
0x400292a	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1494	wrstabs.c	FUNCTION_32
0x400292e	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1494	wrstabs.c	FUNCTION_32
0x4002932	        0x488955a8	             mov qword [rbp - 0x58], rdx	      1494	wrstabs.c	FUNCTION_32
0x4002936	          0x894da4	             mov dword [rbp - 0x5c], ecx	      1494	wrstabs.c	FUNCTION_32
0x4002939	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1495	wrstabs.c	FUNCTION_32
0x400293d	        0x488945d8	             mov qword [rbp - 0x28], rax	      1495	wrstabs.c	FUNCTION_32
0x4002941	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1500	wrstabs.c	FUNCTION_32
0x4002945	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1500	wrstabs.c	FUNCTION_32
0x4002949	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1500	wrstabs.c	FUNCTION_32
0x400294c	          0x8945cc	             mov dword [rbp - 0x34], eax	      1500	wrstabs.c	FUNCTION_32
0x400294f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1501	wrstabs.c	FUNCTION_32	CALL_1
0x4002953	          0x4889c7	                            mov rdi, rax	      1501	wrstabs.c	FUNCTION_32	CALL_1
0x4002956	      0xe8e7daffff	                  call sym.stab_pop_type	      1501	wrstabs.c	FUNCTION_32	CALL_1
0x400295b	        0x488945e0	             mov qword [rbp - 0x20], rax	      1501	wrstabs.c	FUNCTION_32	CALL_1
0x400295f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x4002963	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x4002967	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x400296b	          0x4885c0	                           test rax, rax	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x400296e	            0x7519	                           jne 0x4002989	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x4002970	      0xb900000000	                              mov ecx, 0	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x4002975	      0xbae2050000	                          mov edx, 0x5e2	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x400297a	      0xbe00000000	                              mov esi, 0	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x400297f	      0xbf00000000	                              mov edi, 0	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x4002984	      0xe800000000	                          call 0x4002989	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x4002989	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x400298d	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x4002991	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x4002995	          0x4889c7	                            mov rdi, rax	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x4002998	      0xe800000000	                          call 0x400299d	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x400299d	          0x4889c3	                            mov rbx, rax	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x40029a0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1508	wrstabs.c	FUNCTION_32	CALL_5
0x40029a4	          0x4889c7	                            mov rdi, rax	      1508	wrstabs.c	FUNCTION_32	CALL_5
0x40029a7	      0xe800000000	                          call 0x40029ac	      1508	wrstabs.c	FUNCTION_32	CALL_5
0x40029ac	          0x4801c3	                            add rbx, rax	      1508	wrstabs.c	FUNCTION_32	CALL_5
0x40029af	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1509	wrstabs.c	FUNCTION_32	CALL_6
0x40029b3	          0x4889c7	                            mov rdi, rax	      1509	wrstabs.c	FUNCTION_32	CALL_6
0x40029b6	      0xe800000000	                          call 0x40029bb	      1509	wrstabs.c	FUNCTION_32	CALL_6
0x40029bb	          0x4801c3	                            add rbx, rax	      1509	wrstabs.c	FUNCTION_32	CALL_6
0x40029be	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1510	wrstabs.c	FUNCTION_32	CALL_7
0x40029c2	          0x4889c7	                            mov rdi, rax	      1510	wrstabs.c	FUNCTION_32	CALL_7
0x40029c5	      0xe800000000	                          call 0x40029ca	      1510	wrstabs.c	FUNCTION_32	CALL_7
0x40029ca	          0x4801d8	                            add rax, rbx	      1510	wrstabs.c	FUNCTION_32	CALL_7
0x40029cd	        0x4883c00a	                            add rax, 0xa	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x40029d1	          0x4889c7	                            mov rdi, rax	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x40029d4	      0xe800000000	                          call 0x40029d9	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x40029d9	        0x488945e8	             mov qword [rbp - 0x18], rax	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x40029dd	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x40029e0	          0x83f801	                              cmp eax, 1	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x40029e3	            0x7423	                            je 0x4002a08	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x40029e5	          0x83f801	                              cmp eax, 1	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x40029e8	            0x720a	                            jb 0x40029f4	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x40029ea	          0x83f802	                              cmp eax, 2	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x40029ed	            0x740f	                            je 0x40029fe	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x40029ef	      0xe800000000	                          call 0x40029f4	      1516	wrstabs.c	FUNCTION_32	SWITCH_1	CALL_8
0x40029f4	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1519	wrstabs.c	FUNCTION_32	SWITCH_1
0x40029fc	            0xeb13	                           jmp 0x4002a11	      1520	wrstabs.c	FUNCTION_32	SWITCH_1
0x40029fe	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1523	wrstabs.c	FUNCTION_32	SWITCH_1
0x4002a06	            0xeb09	                           jmp 0x4002a11	      1524	wrstabs.c	FUNCTION_32	SWITCH_1
0x4002a08	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1527	wrstabs.c	FUNCTION_32	SWITCH_1
0x4002a10	              0x90	                                     nop	      1528	wrstabs.c	FUNCTION_32	SWITCH_1
0x4002a11	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1531	wrstabs.c	FUNCTION_32	CALL_9
0x4002a15	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1531	wrstabs.c	FUNCTION_32	CALL_9
0x4002a19	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1531	wrstabs.c	FUNCTION_32	CALL_9
0x4002a1d	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	      1531	wrstabs.c	FUNCTION_32	CALL_9
0x4002a21	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1531	wrstabs.c	FUNCTION_32	CALL_9
0x4002a25	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1531	wrstabs.c	FUNCTION_32	CALL_9
0x4002a29	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1531	wrstabs.c	FUNCTION_32	CALL_9
0x4002a2d	        0x4883ec08	                              sub rsp, 8	      1531	wrstabs.c	FUNCTION_32	CALL_9
0x4002a31	          0xff75a8	                 push qword [rbp - 0x58]	      1531	wrstabs.c	FUNCTION_32	CALL_9
0x4002a34	          0x4989f9	                             mov r9, rdi	      1531	wrstabs.c	FUNCTION_32	CALL_9
0x4002a37	          0x4989f0	                             mov r8, rsi	      1531	wrstabs.c	FUNCTION_32	CALL_9
0x4002a3a	      0xbe00000000	                              mov esi, 0	      1531	wrstabs.c	FUNCTION_32	CALL_9
0x4002a3f	          0x4889c7	                            mov rdi, rax	      1531	wrstabs.c	FUNCTION_32	CALL_9
0x4002a42	      0xb800000000	                              mov eax, 0	      1531	wrstabs.c	FUNCTION_32	CALL_9
0x4002a47	      0xe800000000	                          call 0x4002a4c	      1531	wrstabs.c	FUNCTION_32	CALL_9
0x4002a4c	        0x4883c410	                           add rsp, 0x10	      1531	wrstabs.c	FUNCTION_32	CALL_9
0x4002a50	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1534	wrstabs.c	FUNCTION_32	CALL_10
0x4002a54	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1534	wrstabs.c	FUNCTION_32	CALL_10
0x4002a58	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1534	wrstabs.c	FUNCTION_32	CALL_10
0x4002a5c	          0x4889c7	                            mov rdi, rax	      1534	wrstabs.c	FUNCTION_32	CALL_10
0x4002a5f	      0xe800000000	                          call 0x4002a64	      1534	wrstabs.c	FUNCTION_32	CALL_10
0x4002a64	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1535	wrstabs.c	FUNCTION_32
0x4002a68	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1535	wrstabs.c	FUNCTION_32
0x4002a6c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1535	wrstabs.c	FUNCTION_32
0x4002a70	        0x48895020	             mov qword [rax + 0x20], rdx	      1535	wrstabs.c	FUNCTION_32
0x4002a74	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1537	wrstabs.c	FUNCTION_32	IF_1
0x4002a78	            0x740f	                            je 0x4002a89	      1537	wrstabs.c	FUNCTION_32	IF_1
0x4002a7a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1538	wrstabs.c	FUNCTION_32	IF_1
0x4002a7e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1538	wrstabs.c	FUNCTION_32	IF_1
0x4002a82	    0xc7401c010000	               mov dword [rax + 0x1c], 1	      1538	wrstabs.c	FUNCTION_32	IF_1
0x4002a89	      0xb801000000	                              mov eax, 1	      1540	wrstabs.c	FUNCTION_32
0x4002a8e	        0x488b5df8	                mov rbx, qword [rbp - 8]	      1541	wrstabs.c	FUNCTION_32
0x4002a92	              0xc9	                                   leave	      1541	wrstabs.c	FUNCTION_32
0x4002a93	              0xc3	                                     ret	      1541	wrstabs.c	FUNCTION_32
stab_end_block	FOR,0:ELSE,0:DO,0:WHILE,0:IF,4:SWITCH,0:CALL,3:functions,0	66
0x4003fe9	              0x55	                                push rbp	      2215	wrstabs.c	FUNCTION_51
0x4003fea	          0x4889e5	                            mov rbp, rsp	      2215	wrstabs.c	FUNCTION_51
0x4003fed	        0x4883ec20	                           sub rsp, 0x20	      2215	wrstabs.c	FUNCTION_51
0x4003ff1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2215	wrstabs.c	FUNCTION_51
0x4003ff5	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2215	wrstabs.c	FUNCTION_51
0x4003ff9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2216	wrstabs.c	FUNCTION_51
0x4003ffd	        0x488945f8	                mov qword [rbp - 8], rax	      2216	wrstabs.c	FUNCTION_51
0x4004001	        0x488b45f8	                mov rax, qword [rbp - 8]	      2218	wrstabs.c	FUNCTION_51	IF_1
0x4004005	    0x488b80f00100	           mov rax, qword [rax + 0x1f0] 	      2218	wrstabs.c	FUNCTION_51	IF_1
0x400400c	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      2218	wrstabs.c	FUNCTION_51	IF_1
0x4004010	            0x730f	                           jae 0x4004021	      2218	wrstabs.c	FUNCTION_51	IF_1
0x4004012	        0x488b45f8	                mov rax, qword [rbp - 8]	      2219	wrstabs.c	FUNCTION_51	IF_1
0x4004016	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2219	wrstabs.c	FUNCTION_51	IF_1
0x400401a	    0x488990f00100	            mov qword [rax + 0x1f0], rdx	      2219	wrstabs.c	FUNCTION_51	IF_1
0x4004021	        0x488b45f8	                mov rax, qword [rbp - 8]	      2222	wrstabs.c	FUNCTION_51	IF_2
0x4004025	    0x488b80080200	           mov rax, qword [rax + 0x208] 	      2222	wrstabs.c	FUNCTION_51	IF_2
0x400402c	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2222	wrstabs.c	FUNCTION_51	IF_2
0x4004030	            0x7447	                            je 0x4004079	      2222	wrstabs.c	FUNCTION_51	IF_2
0x4004032	        0x488b45f8	                mov rax, qword [rbp - 8]	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x4004036	    0x488b90080200	           mov rdx, qword [rax + 0x208] 	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x400403d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x4004041	    0x41b800000000	                              mov r8d, 0	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x4004047	          0x4889d1	                            mov rcx, rdx	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x400404a	      0xba00000000	                              mov edx, 0	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x400404f	      0xbec0000000	                           mov esi, 0xc0	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x4004054	          0x4889c7	                            mov rdi, rax	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x4004057	      0xe875c0ffff	              call sym.stab_write_symbol	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x400405c	            0x85c0	                           test eax, eax	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x400405e	            0x750a	                           jne 0x400406a	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x4004060	      0xb800000000	                              mov eax, 0	      2226	wrstabs.c	FUNCTION_51	IF_2	IF_3
0x4004065	      0xe993000000	                           jmp 0x40040fd	      2226	wrstabs.c	FUNCTION_51	IF_2	IF_3
0x400406a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2227	wrstabs.c	FUNCTION_51	IF_2
0x400406e	    0x48c780080200	mov qword [rax + 0x208], 0xffffffffffffffff	      2227	wrstabs.c	FUNCTION_51	IF_2
0x4004079	        0x488b45f8	                mov rax, qword [rbp - 8]	      2230	wrstabs.c	FUNCTION_51	CALL_2
0x400407d	    0x8b80f8010000	           mov eax, dword [rax + 0x1f8] 	      2230	wrstabs.c	FUNCTION_51	CALL_2
0x4004083	            0x85c0	                           test eax, eax	      2230	wrstabs.c	FUNCTION_51	CALL_2
0x4004085	            0x7519	                           jne 0x40040a0	      2230	wrstabs.c	FUNCTION_51	CALL_2
0x4004087	      0xb900000000	                              mov ecx, 0	      2230	wrstabs.c	FUNCTION_51	CALL_2
0x400408c	      0xbab6080000	                          mov edx, 0x8b6	      2230	wrstabs.c	FUNCTION_51	CALL_2
0x4004091	      0xbe00000000	                              mov esi, 0	      2230	wrstabs.c	FUNCTION_51	CALL_2
0x4004096	      0xbf00000000	                              mov edi, 0	      2230	wrstabs.c	FUNCTION_51	CALL_2
0x400409b	      0xe800000000	                          call 0x40040a0	      2230	wrstabs.c	FUNCTION_51	CALL_2
0x40040a0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2232	wrstabs.c	FUNCTION_51
0x40040a4	    0x8b80f8010000	           mov eax, dword [rax + 0x1f8] 	      2232	wrstabs.c	FUNCTION_51
0x40040aa	          0x8d50ff	                      lea edx, [rax - 1]	      2232	wrstabs.c	FUNCTION_51
0x40040ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      2232	wrstabs.c	FUNCTION_51
0x40040b1	    0x8990f8010000	            mov dword [rax + 0x1f8], edx	      2232	wrstabs.c	FUNCTION_51
0x40040b7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2235	wrstabs.c	FUNCTION_51	IF_4
0x40040bb	    0x8b80f8010000	           mov eax, dword [rax + 0x1f8] 	      2235	wrstabs.c	FUNCTION_51	IF_4
0x40040c1	            0x85c0	                           test eax, eax	      2235	wrstabs.c	FUNCTION_51	IF_4
0x40040c3	            0x7507	                           jne 0x40040cc	      2235	wrstabs.c	FUNCTION_51	IF_4
0x40040c5	      0xb801000000	                              mov eax, 1	      2236	wrstabs.c	FUNCTION_51	IF_4
0x40040ca	            0xeb31	                           jmp 0x40040fd	      2236	wrstabs.c	FUNCTION_51	IF_4
0x40040cc	        0x488b45f8	                mov rax, qword [rbp - 8]	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40040d0	    0x488b80000200	           mov rax, qword [rax + 0x200] 	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40040d7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40040db	          0x4829c2	                            sub rdx, rax	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40040de	        0x488b45f8	                mov rax, qword [rbp - 8]	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40040e2	    0x41b800000000	                              mov r8d, 0	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40040e8	          0x4889d1	                            mov rcx, rdx	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40040eb	      0xba00000000	                              mov edx, 0	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40040f0	      0xbee0000000	                           mov esi, 0xe0	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40040f5	          0x4889c7	                            mov rdi, rax	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40040f8	      0xe8d4bfffff	              call sym.stab_write_symbol	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40040fd	              0xc9	                                   leave	      2240	wrstabs.c	FUNCTION_51
0x40040fe	              0xc3	                                     ret	      2240	wrstabs.c	FUNCTION_51
stab_class_method_variant	FOR,0:ELSE,0:DO,0:WHILE,0:IF,0:SWITCH,0:CALL,1:functions,0	27
0x4003017	              0x55	                                push rbp	      1737	wrstabs.c	FUNCTION_36
0x4003018	          0x4889e5	                            mov rbp, rsp	      1737	wrstabs.c	FUNCTION_36
0x400301b	        0x4883ec40	                           sub rsp, 0x40	      1737	wrstabs.c	FUNCTION_36
0x400301f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1737	wrstabs.c	FUNCTION_36
0x4003023	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1737	wrstabs.c	FUNCTION_36
0x4003027	          0x8955dc	             mov dword [rbp - 0x24], edx	      1737	wrstabs.c	FUNCTION_36
0x400302a	          0x894dd8	             mov dword [rbp - 0x28], ecx	      1737	wrstabs.c	FUNCTION_36
0x400302d	        0x448945d4	             mov dword [rbp - 0x2c], r8d	      1737	wrstabs.c	FUNCTION_36
0x4003031	        0x4c894dc8	              mov qword [rbp - 0x38], r9	      1737	wrstabs.c	FUNCTION_36
0x4003035	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1738	wrstabs.c	FUNCTION_36
0x4003039	        0x488945f8	                mov qword [rbp - 8], rax	      1738	wrstabs.c	FUNCTION_36
0x400303d	        0x448b45d4	             mov r8d, dword [rbp - 0x2c]	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4003041	          0x8b7dd8	             mov edi, dword [rbp - 0x28]	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4003044	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4003047	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x400304b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x400304f	          0x8b4d10	            mov ecx, dword [rbp + 0x10] 	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4003052	              0x51	                                push rcx	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4003053	          0xff75c8	                 push qword [rbp - 0x38]	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4003056	          0x4589c1	                            mov r9d, r8d	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4003059	          0x4189f8	                            mov r8d, edi	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x400305c	      0xb900000000	                              mov ecx, 0	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4003061	          0x4889c7	                            mov rdi, rax	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4003064	      0xe82afdffff	          call sym.stab_class_method_var	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4003069	        0x4883c410	                           add rsp, 0x10	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x400306d	              0xc9	                                   leave	      1742	wrstabs.c	FUNCTION_36
0x400306e	              0xc3	                                     ret	      1742	wrstabs.c	FUNCTION_36
stab_reference_type	FOR,0:ELSE,0:DO,0:WHILE,0:IF,0:SWITCH,0:CALL,1:functions,0	19
0x40017ce	              0x55	                                push rbp	       978	wrstabs.c	FUNCTION_19
0x40017cf	          0x4889e5	                            mov rbp, rsp	       978	wrstabs.c	FUNCTION_19
0x40017d2	        0x4883ec20	                           sub rsp, 0x20	       978	wrstabs.c	FUNCTION_19
0x40017d6	        0x48897de8	             mov qword [rbp - 0x18], rdi	       978	wrstabs.c	FUNCTION_19
0x40017da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       979	wrstabs.c	FUNCTION_19
0x40017de	        0x488945f8	                mov qword [rbp - 8], rax	       979	wrstabs.c	FUNCTION_19
0x40017e2	        0x488b45f8	                mov rax, qword [rbp - 8]	       982	wrstabs.c	FUNCTION_19	CALL_1
0x40017e6	    0x488d88a00100	                  lea rcx, [rax + 0x1a0]	       982	wrstabs.c	FUNCTION_19	CALL_1
0x40017ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       982	wrstabs.c	FUNCTION_19	CALL_1
0x40017f1	    0x488d90980100	                  lea rdx, [rax + 0x198]	       982	wrstabs.c	FUNCTION_19	CALL_1
0x40017f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       982	wrstabs.c	FUNCTION_19	CALL_1
0x40017fc	          0x4989c8	                             mov r8, rcx	       982	wrstabs.c	FUNCTION_19	CALL_1
0x40017ff	          0x4889d1	                            mov rcx, rdx	       982	wrstabs.c	FUNCTION_19	CALL_1
0x4001802	      0xba04000000	                              mov edx, 4	       982	wrstabs.c	FUNCTION_19	CALL_1
0x4001807	      0xbe26000000	                           mov esi, 0x26	       982	wrstabs.c	FUNCTION_19	CALL_1
0x400180c	          0x4889c7	                            mov rdi, rax	       982	wrstabs.c	FUNCTION_19	CALL_1
0x400180f	      0xe868fbffff	               call sym.stab_modify_type	       982	wrstabs.c	FUNCTION_19	CALL_1
0x4001814	              0xc9	                                   leave	       984	wrstabs.c	FUNCTION_19
0x4001815	              0xc3	                                     ret	       984	wrstabs.c	FUNCTION_19
stab_modify_type	FOR,0:ELSE,2:DO,0:WHILE,1:IF,7:SWITCH,0:CALL,20:functions,0	196
0x400137c	              0x55	                                push rbp	       848	wrstabs.c	FUNCTION_16
0x400137d	          0x4889e5	                            mov rbp, rsp	       848	wrstabs.c	FUNCTION_16
0x4001380	        0x4883ec50	                           sub rsp, 0x50	       848	wrstabs.c	FUNCTION_16
0x4001384	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       848	wrstabs.c	FUNCTION_16
0x4001388	          0x8975c4	             mov dword [rbp - 0x3c], esi	       848	wrstabs.c	FUNCTION_16
0x400138b	          0x8955c0	             mov dword [rbp - 0x40], edx	       848	wrstabs.c	FUNCTION_16
0x400138e	        0x48894db8	             mov qword [rbp - 0x48], rcx	       848	wrstabs.c	FUNCTION_16
0x4001392	        0x4c8945b0	              mov qword [rbp - 0x50], r8	       848	wrstabs.c	FUNCTION_16
0x4001396	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       853	wrstabs.c	FUNCTION_16	CALL_1
0x400139a	        0x488b4060	            mov rax, qword [rax + 0x60] 	       853	wrstabs.c	FUNCTION_16	CALL_1
0x400139e	          0x4885c0	                           test rax, rax	       853	wrstabs.c	FUNCTION_16	CALL_1
0x40013a1	            0x7519	                           jne 0x40013bc	       853	wrstabs.c	FUNCTION_16	CALL_1
0x40013a3	      0xb900000000	                              mov ecx, 0	       853	wrstabs.c	FUNCTION_16	CALL_1
0x40013a8	      0xba55030000	                          mov edx, 0x355	       853	wrstabs.c	FUNCTION_16	CALL_1
0x40013ad	      0xbe00000000	                              mov esi, 0	       853	wrstabs.c	FUNCTION_16	CALL_1
0x40013b2	      0xbf00000000	                              mov edi, 0	       853	wrstabs.c	FUNCTION_16	CALL_1
0x40013b7	      0xe800000000	                          call 0x40013bc	       853	wrstabs.c	FUNCTION_16	CALL_1
0x40013bc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       854	wrstabs.c	FUNCTION_16
0x40013c0	        0x488b4060	            mov rax, qword [rax + 0x60] 	       854	wrstabs.c	FUNCTION_16
0x40013c4	        0x488b4010	            mov rax, qword [rax + 0x10] 	       854	wrstabs.c	FUNCTION_16
0x40013c8	        0x488945e0	             mov qword [rbp - 0x20], rax	       854	wrstabs.c	FUNCTION_16
0x40013cc	      0x48837de000	               cmp qword [rbp - 0x20], 0	       856	wrstabs.c	FUNCTION_16	IF_1
0x40013d1	            0x7e0b	                           jle 0x40013de	       856	wrstabs.c	FUNCTION_16	IF_1
0x40013d3	      0x48837db800	               cmp qword [rbp - 0x48], 0	       857	wrstabs.c	FUNCTION_16	IF_1
0x40013d8	     0xf85a2000000	                           jne 0x4001480	       857	wrstabs.c	FUNCTION_16	IF_1
0x40013de	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       864	wrstabs.c	FUNCTION_16	IF_1
0x40013e2	        0x488b4060	            mov rax, qword [rax + 0x60] 	       864	wrstabs.c	FUNCTION_16	IF_1
0x40013e6	          0x8b401c	            mov eax, dword [rax + 0x1c] 	       864	wrstabs.c	FUNCTION_16	IF_1
0x40013e9	          0x8945d4	             mov dword [rbp - 0x2c], eax	       864	wrstabs.c	FUNCTION_16	IF_1
0x40013ec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       865	wrstabs.c	FUNCTION_16	IF_1	CALL_2
0x40013f0	          0x4889c7	                            mov rdi, rax	       865	wrstabs.c	FUNCTION_16	IF_1	CALL_2
0x40013f3	      0xe84af0ffff	                  call sym.stab_pop_type	       865	wrstabs.c	FUNCTION_16	IF_1	CALL_2
0x40013f8	        0x488945f0	             mov qword [rbp - 0x10], rax	       865	wrstabs.c	FUNCTION_16	IF_1	CALL_2
0x40013fc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001400	          0x4889c7	                            mov rdi, rax	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001403	      0xe800000000	                          call 0x4001408	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001408	        0x4883c002	                              add rax, 2	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x400140c	          0x4889c7	                            mov rdi, rax	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x400140f	      0xe800000000	                          call 0x4001414	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001414	        0x488945f8	                mov qword [rbp - 8], rax	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001418	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       867	wrstabs.c	FUNCTION_16	IF_1	CALL_5
0x400141c	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       867	wrstabs.c	FUNCTION_16	IF_1	CALL_5
0x400141f	        0x488b45f8	                mov rax, qword [rbp - 8]	       867	wrstabs.c	FUNCTION_16	IF_1	CALL_5
0x4001423	      0xbe00000000	                              mov esi, 0	       867	wrstabs.c	FUNCTION_16	IF_1	CALL_5
0x4001428	          0x4889c7	                            mov rdi, rax	       867	wrstabs.c	FUNCTION_16	IF_1	CALL_5
0x400142b	      0xb800000000	                              mov eax, 0	       867	wrstabs.c	FUNCTION_16	IF_1	CALL_5
0x4001430	      0xe800000000	                          call 0x4001435	       867	wrstabs.c	FUNCTION_16	IF_1	CALL_5
0x4001435	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       868	wrstabs.c	FUNCTION_16	IF_1	CALL_6
0x4001439	          0x4889c7	                            mov rdi, rax	       868	wrstabs.c	FUNCTION_16	IF_1	CALL_6
0x400143c	      0xe800000000	                          call 0x4001441	       868	wrstabs.c	FUNCTION_16	IF_1	CALL_6
0x4001441	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_7
0x4001444	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_7
0x4001447	        0x488b75f8	                mov rsi, qword [rbp - 8]	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_7
0x400144b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_7
0x400144f	          0x4189c8	                            mov r8d, ecx	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_7
0x4001452	            0x89d1	                            mov ecx, edx	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_7
0x4001454	      0xba00000000	                              mov edx, 0	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_7
0x4001459	          0x4889c7	                            mov rdi, rax	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_7
0x400145c	      0xe8beeeffff	               call sym.stab_push_string	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_7
0x4001461	            0x85c0	                           test eax, eax	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_7
0x4001463	            0x750a	                           jne 0x400146f	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_7
0x4001465	      0xb800000000	                              mov eax, 0	       870	wrstabs.c	FUNCTION_16	IF_1	IF_2
0x400146a	      0xe9f8010000	                           jmp 0x4001667	       870	wrstabs.c	FUNCTION_16	IF_1	IF_2
0x400146f	        0x488b45f8	                mov rax, qword [rbp - 8]	       871	wrstabs.c	FUNCTION_16	IF_1	CALL_8
0x4001473	          0x4889c7	                            mov rdi, rax	       871	wrstabs.c	FUNCTION_16	IF_1	CALL_8
0x4001476	      0xe800000000	                          call 0x400147b	       871	wrstabs.c	FUNCTION_16	IF_1	CALL_8
0x400147b	      0xe9e2010000	                           jmp 0x4001662	       858	wrstabs.c	FUNCTION_16	IF_1
0x4001480	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       875	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001484	          0x488b10	                    mov rdx, qword [rax]	       875	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001487	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       875	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x400148b	          0x4839c2	                            cmp rdx, rax	       875	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x400148e	     0xf8798000000	                            ja 0x400152c	       875	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001494	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       879	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001498	          0x488b00	                    mov rax, qword [rax]	       879	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x400149b	        0x488945d8	             mov qword [rbp - 0x28], rax	       879	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x400149f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       880	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x40014a4	            0x750e	                           jne 0x40014b4	       880	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x40014a6	    0x48c745d80a00	             mov qword [rbp - 0x28], 0xa	       881	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x40014ae	            0xeb04	                           jmp 0x40014b4	       882	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x40014b0	        0x48d165d8	               shl qword [rbp - 0x28], 1	       883	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x40014b4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       882	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x40014b8	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       882	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x40014bc	            0x73f2	                           jae 0x40014b0	       882	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x40014be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       884	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_9
0x40014c2	    0x488d14c50000	                        lea rdx, [rax*8]	       884	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_9
0x40014ca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       884	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_9
0x40014ce	          0x488b00	                    mov rax, qword [rax]	       884	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_9
0x40014d1	          0x4889d6	                            mov rsi, rdx	       884	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_9
0x40014d4	          0x4889c7	                            mov rdi, rax	       884	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_9
0x40014d7	      0xe800000000	                          call 0x40014dc	       884	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_9
0x40014dc	          0x4889c2	                            mov rdx, rax	       884	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_9
0x40014df	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       884	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_9
0x40014e3	          0x488910	                    mov qword [rax], rdx	       884	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_9
0x40014e6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       886	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x40014ea	          0x488b00	                    mov rax, qword [rax]	       886	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x40014ed	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       886	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x40014f1	          0x4829c2	                            sub rdx, rax	       886	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x40014f4	          0x4889d0	                            mov rax, rdx	       886	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x40014f7	    0x488d14c50000	                        lea rdx, [rax*8]	       885	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_10
0x40014ff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       885	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_10
0x4001503	          0x488b08	                    mov rcx, qword [rax]	       885	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_10
0x4001506	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       885	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_10
0x400150a	          0x488b00	                    mov rax, qword [rax]	       885	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_10
0x400150d	        0x48c1e003	                              shl rax, 3	       885	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_10
0x4001511	          0x4801c8	                            add rax, rcx	       885	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_10
0x4001514	      0xbe00000000	                              mov esi, 0	       885	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_10
0x4001519	          0x4889c7	                            mov rdi, rax	       885	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_10
0x400151c	      0xe800000000	                          call 0x4001521	       885	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_10
0x4001521	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       887	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001525	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       887	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001529	          0x488910	                    mov qword [rax], rdx	       887	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x400152c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       890	wrstabs.c	FUNCTION_16	ELSE_1
0x4001530	          0x488b00	                    mov rax, qword [rax]	       890	wrstabs.c	FUNCTION_16	ELSE_1
0x4001533	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       890	wrstabs.c	FUNCTION_16	ELSE_1
0x4001537	        0x48c1e203	                              shl rdx, 3	       890	wrstabs.c	FUNCTION_16	ELSE_1
0x400153b	          0x4801d0	                            add rax, rdx	       890	wrstabs.c	FUNCTION_16	ELSE_1
0x400153e	          0x488b00	                    mov rax, qword [rax]	       890	wrstabs.c	FUNCTION_16	ELSE_1
0x4001541	        0x488945e8	             mov qword [rbp - 0x18], rax	       890	wrstabs.c	FUNCTION_16	ELSE_1
0x4001545	      0x48837de800	               cmp qword [rbp - 0x18], 0	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x400154a	            0x744b	                            je 0x4001597	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x400154c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x4001550	        0x488b4060	            mov rax, qword [rax + 0x60] 	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x4001554	          0x8b401c	            mov eax, dword [rax + 0x1c] 	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x4001557	            0x85c0	                           test eax, eax	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x4001559	            0x753c	                           jne 0x4001597	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x400155b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       899	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	CALL_12
0x400155f	          0x4889c7	                            mov rdi, rax	       899	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	CALL_12
0x4001562	      0xe8dbeeffff	                  call sym.stab_pop_type	       899	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	CALL_12
0x4001567	          0x4889c7	                            mov rdi, rax	       899	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	CALL_12
0x400156a	      0xe800000000	                          call 0x400156f	       899	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	CALL_12
0x400156f	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       900	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6	CALL_13
0x4001572	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       900	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6	CALL_13
0x4001576	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       900	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6	CALL_13
0x400157a	          0x4889ce	                            mov rsi, rcx	       900	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6	CALL_13
0x400157d	          0x4889c7	                            mov rdi, rax	       900	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6	CALL_13
0x4001580	      0xe84ceeffff	         call sym.stab_push_defined_type	       900	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6	CALL_13
0x4001585	            0x85c0	                           test eax, eax	       900	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6	CALL_13
0x4001587	     0xf85d5000000	                           jne 0x4001662	       900	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6	CALL_13
0x400158d	      0xb800000000	                              mov eax, 0	       901	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6
0x4001592	      0xe9d0000000	                           jmp 0x4001667	       901	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6
0x4001597	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       905	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x400159b	        0x488b4068	            mov rax, qword [rax + 0x68] 	       905	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x400159f	        0x488945e8	             mov qword [rbp - 0x18], rax	       905	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x40015a3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       906	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x40015a7	        0x488b4068	            mov rax, qword [rax + 0x68] 	       906	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x40015ab	        0x488d5001	                      lea rdx, [rax + 1]	       906	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x40015af	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       906	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x40015b3	        0x48895068	             mov qword [rax + 0x68], rdx	       906	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x40015b7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       908	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_14
0x40015bb	          0x4889c7	                            mov rdi, rax	       908	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_14
0x40015be	      0xe87feeffff	                  call sym.stab_pop_type	       908	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_14
0x40015c3	        0x488945f0	             mov qword [rbp - 0x10], rax	       908	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_14
0x40015c7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_16
0x40015cb	          0x4889c7	                            mov rdi, rax	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_16
0x40015ce	      0xe800000000	                          call 0x40015d3	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_16
0x40015d3	        0x4883c014	                           add rax, 0x14	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_16
0x40015d7	          0x4889c7	                            mov rdi, rax	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_16
0x40015da	      0xe800000000	                          call 0x40015df	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_16
0x40015df	        0x488945f8	                mov qword [rbp - 8], rax	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_16
0x40015e3	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       910	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_17
0x40015e7	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	       910	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_17
0x40015ea	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       910	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_17
0x40015ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       910	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_17
0x40015f2	          0x4989f0	                             mov r8, rsi	       910	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_17
0x40015f5	      0xbe00000000	                              mov esi, 0	       910	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_17
0x40015fa	          0x4889c7	                            mov rdi, rax	       910	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_17
0x40015fd	      0xb800000000	                              mov eax, 0	       910	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_17
0x4001602	      0xe800000000	                          call 0x4001607	       910	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_17
0x4001607	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       911	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_18
0x400160b	          0x4889c7	                            mov rdi, rax	       911	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_18
0x400160e	      0xe800000000	                          call 0x4001613	       911	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_18
0x4001613	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       913	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x4001617	          0x488b00	                    mov rax, qword [rax]	       913	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x400161a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       913	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x400161e	        0x48c1e203	                              shl rdx, 3	       913	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x4001622	          0x4801c2	                            add rdx, rax	       913	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x4001625	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       913	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x4001629	          0x488902	                    mov qword [rdx], rax	       913	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x400162c	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_19
0x400162f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_19
0x4001633	        0x488b75f8	                mov rsi, qword [rbp - 8]	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_19
0x4001637	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_19
0x400163b	          0x4189c8	                            mov r8d, ecx	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_19
0x400163e	      0xb901000000	                              mov ecx, 1	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_19
0x4001643	          0x4889c7	                            mov rdi, rax	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_19
0x4001646	      0xe8d4ecffff	               call sym.stab_push_string	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_19
0x400164b	            0x85c0	                           test eax, eax	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_19
0x400164d	            0x7507	                           jne 0x4001656	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_19
0x400164f	      0xb800000000	                              mov eax, 0	       916	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7
0x4001654	            0xeb11	                           jmp 0x4001667	       916	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7
0x4001656	        0x488b45f8	                mov rax, qword [rbp - 8]	       918	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_20
0x400165a	          0x4889c7	                            mov rdi, rax	       918	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_20
0x400165d	      0xe800000000	                          call 0x4001662	       918	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_20
0x4001662	      0xb801000000	                              mov eax, 1	       922	wrstabs.c	FUNCTION_16
0x4001667	              0xc9	                                   leave	       923	wrstabs.c	FUNCTION_16
0x4001668	              0xc3	                                     ret	       923	wrstabs.c	FUNCTION_16
stab_struct_field	FOR,0:ELSE,0:DO,0:WHILE,0:IF,3:SWITCH,1:CALL,12:functions,0	119
0x40024c4	              0x55	                                push rbp	      1350	wrstabs.c	FUNCTION_29
0x40024c5	          0x4889e5	                            mov rbp, rsp	      1350	wrstabs.c	FUNCTION_29
0x40024c8	              0x53	                                push rbx	      1350	wrstabs.c	FUNCTION_29
0x40024c9	        0x4883ec68	                           sub rsp, 0x68	      1350	wrstabs.c	FUNCTION_29
0x40024cd	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1350	wrstabs.c	FUNCTION_29
0x40024d1	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1350	wrstabs.c	FUNCTION_29
0x40024d5	        0x488955a8	             mov qword [rbp - 0x58], rdx	      1350	wrstabs.c	FUNCTION_29
0x40024d9	        0x48894da0	             mov qword [rbp - 0x60], rcx	      1350	wrstabs.c	FUNCTION_29
0x40024dd	        0x4489459c	             mov dword [rbp - 0x64], r8d	      1350	wrstabs.c	FUNCTION_29
0x40024e1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1351	wrstabs.c	FUNCTION_29
0x40024e5	        0x488945d8	             mov qword [rbp - 0x28], rax	      1351	wrstabs.c	FUNCTION_29
0x40024e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1357	wrstabs.c	FUNCTION_29
0x40024ed	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1357	wrstabs.c	FUNCTION_29
0x40024f1	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1357	wrstabs.c	FUNCTION_29
0x40024f4	          0x8945c8	             mov dword [rbp - 0x38], eax	      1357	wrstabs.c	FUNCTION_29
0x40024f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1358	wrstabs.c	FUNCTION_29
0x40024fb	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1358	wrstabs.c	FUNCTION_29
0x40024ff	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1358	wrstabs.c	FUNCTION_29
0x4002502	          0x8945cc	             mov dword [rbp - 0x34], eax	      1358	wrstabs.c	FUNCTION_29
0x4002505	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1359	wrstabs.c	FUNCTION_29	CALL_1
0x4002509	          0x4889c7	                            mov rdi, rax	      1359	wrstabs.c	FUNCTION_29	CALL_1
0x400250c	      0xe831dfffff	                  call sym.stab_pop_type	      1359	wrstabs.c	FUNCTION_29	CALL_1
0x4002511	        0x488945e0	             mov qword [rbp - 0x20], rax	      1359	wrstabs.c	FUNCTION_29	CALL_1
0x4002515	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4002519	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x400251d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4002521	          0x4885c0	                           test rax, rax	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4002524	            0x7519	                           jne 0x400253f	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4002526	      0xb900000000	                              mov ecx, 0	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x400252b	      0xba54050000	                          mov edx, 0x554	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4002530	      0xbe00000000	                              mov esi, 0	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4002535	      0xbf00000000	                              mov edi, 0	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x400253a	      0xe800000000	                          call 0x400253f	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x400253f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4002543	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4002547	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x400254b	          0x4889c7	                            mov rdi, rax	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x400254e	      0xe800000000	                          call 0x4002553	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4002553	          0x4889c3	                            mov rbx, rax	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4002556	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1366	wrstabs.c	FUNCTION_29	CALL_5
0x400255a	          0x4889c7	                            mov rdi, rax	      1366	wrstabs.c	FUNCTION_29	CALL_5
0x400255d	      0xe800000000	                          call 0x4002562	      1366	wrstabs.c	FUNCTION_29	CALL_5
0x4002562	          0x4801c3	                            add rbx, rax	      1366	wrstabs.c	FUNCTION_29	CALL_5
0x4002565	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1367	wrstabs.c	FUNCTION_29	CALL_6
0x4002569	          0x4889c7	                            mov rdi, rax	      1367	wrstabs.c	FUNCTION_29	CALL_6
0x400256c	      0xe800000000	                          call 0x4002571	      1367	wrstabs.c	FUNCTION_29	CALL_6
0x4002571	          0x4801d8	                            add rax, rbx	      1367	wrstabs.c	FUNCTION_29	CALL_6
0x4002574	        0x4883c032	                           add rax, 0x32	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4002578	          0x4889c7	                            mov rdi, rax	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x400257b	      0xe800000000	                          call 0x4002580	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4002580	        0x488945e8	             mov qword [rbp - 0x18], rax	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4002584	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x4002587	          0x83f801	                              cmp eax, 1	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x400258a	            0x7423	                            je 0x40025af	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x400258c	          0x83f801	                              cmp eax, 1	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x400258f	            0x720a	                            jb 0x400259b	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x4002591	          0x83f802	                              cmp eax, 2	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x4002594	            0x740f	                            je 0x40025a5	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x4002596	      0xe800000000	                          call 0x400259b	      1373	wrstabs.c	FUNCTION_29	SWITCH_1	CALL_7
0x400259b	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1376	wrstabs.c	FUNCTION_29	SWITCH_1
0x40025a3	            0xeb13	                           jmp 0x40025b8	      1377	wrstabs.c	FUNCTION_29	SWITCH_1
0x40025a5	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1380	wrstabs.c	FUNCTION_29	SWITCH_1
0x40025ad	            0xeb09	                           jmp 0x40025b8	      1381	wrstabs.c	FUNCTION_29	SWITCH_1
0x40025af	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1384	wrstabs.c	FUNCTION_29	SWITCH_1
0x40025b7	              0x90	                                     nop	      1385	wrstabs.c	FUNCTION_29	SWITCH_1
0x40025b8	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1388	wrstabs.c	FUNCTION_29	IF_1
0x40025bd	            0x7541	                           jne 0x4002600	      1388	wrstabs.c	FUNCTION_29	IF_1
0x40025bf	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1390	wrstabs.c	FUNCTION_29	IF_1
0x40025c2	          0xc1e003	                              shl eax, 3	      1390	wrstabs.c	FUNCTION_29	IF_1
0x40025c5	            0x89c0	                            mov eax, eax	      1390	wrstabs.c	FUNCTION_29	IF_1
0x40025c7	        0x488945a0	             mov qword [rbp - 0x60], rax	      1390	wrstabs.c	FUNCTION_29	IF_1
0x40025cb	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1391	wrstabs.c	FUNCTION_29	IF_1	IF_2
0x40025d0	            0x752e	                           jne 0x4002600	      1391	wrstabs.c	FUNCTION_29	IF_1	IF_2
0x40025d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1393	wrstabs.c	FUNCTION_29	IF_1	CALL_10
0x40025d6	          0x488b00	                    mov rax, qword [rax]	      1393	wrstabs.c	FUNCTION_29	IF_1	CALL_10
0x40025d9	          0x488b18	                    mov rbx, qword [rax]	      1393	wrstabs.c	FUNCTION_29	IF_1	CALL_10
0x40025dc	      0xbf00000000	                              mov edi, 0	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x40025e1	      0xe800000000	                          call 0x40025e6	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x40025e6	          0x4889c1	                            mov rcx, rax	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x40025e9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x40025ed	          0x4889c2	                            mov rdx, rax	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x40025f0	          0x4889de	                            mov rsi, rbx	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x40025f3	          0x4889cf	                            mov rdi, rcx	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x40025f6	      0xb800000000	                              mov eax, 0	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x40025fb	      0xe800000000	                          call 0x4002600	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x4002600	        0x488b7da0	             mov rdi, qword [rbp - 0x60]	      1396	wrstabs.c	FUNCTION_29	CALL_11
0x4002604	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      1396	wrstabs.c	FUNCTION_29	CALL_11
0x4002608	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1396	wrstabs.c	FUNCTION_29	CALL_11
0x400260c	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1396	wrstabs.c	FUNCTION_29	CALL_11
0x4002610	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1396	wrstabs.c	FUNCTION_29	CALL_11
0x4002614	        0x4c8b4de0	              mov r9, qword [rbp - 0x20]	      1396	wrstabs.c	FUNCTION_29	CALL_11
0x4002618	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	      1396	wrstabs.c	FUNCTION_29	CALL_11
0x400261c	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1396	wrstabs.c	FUNCTION_29	CALL_11
0x4002620	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1396	wrstabs.c	FUNCTION_29	CALL_11
0x4002624	              0x57	                                push rdi	      1396	wrstabs.c	FUNCTION_29	CALL_11
0x4002625	              0x56	                                push rsi	      1396	wrstabs.c	FUNCTION_29	CALL_11
0x4002626	      0xbe00000000	                              mov esi, 0	      1396	wrstabs.c	FUNCTION_29	CALL_11
0x400262b	          0x4889c7	                            mov rdi, rax	      1396	wrstabs.c	FUNCTION_29	CALL_11
0x400262e	      0xb800000000	                              mov eax, 0	      1396	wrstabs.c	FUNCTION_29	CALL_11
0x4002633	      0xe800000000	                          call 0x4002638	      1396	wrstabs.c	FUNCTION_29	CALL_11
0x4002638	        0x4883c410	                           add rsp, 0x10	      1396	wrstabs.c	FUNCTION_29	CALL_11
0x400263c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1399	wrstabs.c	FUNCTION_29	CALL_12
0x4002640	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1399	wrstabs.c	FUNCTION_29	CALL_12
0x4002644	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1399	wrstabs.c	FUNCTION_29	CALL_12
0x4002648	          0x4889c7	                            mov rdi, rax	      1399	wrstabs.c	FUNCTION_29	CALL_12
0x400264b	      0xe800000000	                          call 0x4002650	      1399	wrstabs.c	FUNCTION_29	CALL_12
0x4002650	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1400	wrstabs.c	FUNCTION_29
0x4002654	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1400	wrstabs.c	FUNCTION_29
0x4002658	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1400	wrstabs.c	FUNCTION_29
0x400265c	        0x48895020	             mov qword [rax + 0x20], rdx	      1400	wrstabs.c	FUNCTION_29
0x4002660	        0x837dc800	               cmp dword [rbp - 0x38], 0	      1402	wrstabs.c	FUNCTION_29	IF_3
0x4002664	            0x740f	                            je 0x4002675	      1402	wrstabs.c	FUNCTION_29	IF_3
0x4002666	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1403	wrstabs.c	FUNCTION_29	IF_3
0x400266a	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1403	wrstabs.c	FUNCTION_29	IF_3
0x400266e	    0xc7401c010000	               mov dword [rax + 0x1c], 1	      1403	wrstabs.c	FUNCTION_29	IF_3
0x4002675	      0xb801000000	                              mov eax, 1	      1405	wrstabs.c	FUNCTION_29
0x400267a	        0x488b5df8	                mov rbx, qword [rbp - 8]	      1406	wrstabs.c	FUNCTION_29
0x400267e	              0xc9	                                   leave	      1406	wrstabs.c	FUNCTION_29
0x400267f	              0xc3	                                     ret	      1406	wrstabs.c	FUNCTION_29
stab_void_type	FOR,0:ELSE,1:DO,0:WHILE,0:IF,1:SWITCH,0:CALL,3:functions,0	52
0x400097d	              0x55	                                push rbp	       605	wrstabs.c	FUNCTION_10
0x400097e	          0x4889e5	                            mov rbp, rsp	       605	wrstabs.c	FUNCTION_10
0x4000981	        0x4883ec50	                           sub rsp, 0x50	       605	wrstabs.c	FUNCTION_10
0x4000985	        0x48897db8	             mov qword [rbp - 0x48], rdi	       605	wrstabs.c	FUNCTION_10
0x4000989	    0x64488b042528	                mov rax, qword fs:[0x28]	       605	wrstabs.c	FUNCTION_10
0x4000992	        0x488945f8	                mov qword [rbp - 8], rax	       605	wrstabs.c	FUNCTION_10
0x4000996	            0x31c0	                            xor eax, eax	       605	wrstabs.c	FUNCTION_10
0x4000998	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       606	wrstabs.c	FUNCTION_10
0x400099c	        0x488945c0	             mov qword [rbp - 0x40], rax	       606	wrstabs.c	FUNCTION_10
0x40009a0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       608	wrstabs.c	FUNCTION_10	IF_1
0x40009a4	        0x488b4070	            mov rax, qword [rax + 0x70] 	       608	wrstabs.c	FUNCTION_10	IF_1
0x40009a8	          0x4885c0	                           test rax, rax	       608	wrstabs.c	FUNCTION_10	IF_1
0x40009ab	            0x741e	                            je 0x40009cb	       608	wrstabs.c	FUNCTION_10	IF_1
0x40009ad	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       609	wrstabs.c	FUNCTION_10	CALL_1
0x40009b1	        0x488b4870	            mov rcx, qword [rax + 0x70] 	       609	wrstabs.c	FUNCTION_10	CALL_1
0x40009b5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       609	wrstabs.c	FUNCTION_10	CALL_1
0x40009b9	      0xba00000000	                              mov edx, 0	       609	wrstabs.c	FUNCTION_10	CALL_1
0x40009be	          0x4889ce	                            mov rsi, rcx	       609	wrstabs.c	FUNCTION_10	CALL_1
0x40009c1	          0x4889c7	                            mov rdi, rax	       609	wrstabs.c	FUNCTION_10	CALL_1
0x40009c4	      0xe808faffff	         call sym.stab_push_defined_type	       609	wrstabs.c	FUNCTION_10	CALL_1
0x40009c9	            0xeb69	                           jmp 0x4000a34	       609	wrstabs.c	FUNCTION_10	CALL_1
0x40009cb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       615	wrstabs.c	FUNCTION_10	ELSE_1
0x40009cf	        0x488b4068	            mov rax, qword [rax + 0x68] 	       615	wrstabs.c	FUNCTION_10	ELSE_1
0x40009d3	        0x488945c8	             mov qword [rbp - 0x38], rax	       615	wrstabs.c	FUNCTION_10	ELSE_1
0x40009d7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       616	wrstabs.c	FUNCTION_10	ELSE_1
0x40009db	        0x488b4068	            mov rax, qword [rax + 0x68] 	       616	wrstabs.c	FUNCTION_10	ELSE_1
0x40009df	        0x488d5001	                      lea rdx, [rax + 1]	       616	wrstabs.c	FUNCTION_10	ELSE_1
0x40009e3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       616	wrstabs.c	FUNCTION_10	ELSE_1
0x40009e7	        0x48895068	             mov qword [rax + 0x68], rdx	       616	wrstabs.c	FUNCTION_10	ELSE_1
0x40009eb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       618	wrstabs.c	FUNCTION_10	ELSE_1
0x40009ef	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       618	wrstabs.c	FUNCTION_10	ELSE_1
0x40009f3	        0x48895070	             mov qword [rax + 0x70], rdx	       618	wrstabs.c	FUNCTION_10	ELSE_1
0x40009f7	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       620	wrstabs.c	FUNCTION_10	ELSE_1	CALL_2
0x40009fb	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       620	wrstabs.c	FUNCTION_10	ELSE_1	CALL_2
0x40009ff	        0x488d45d0	                   lea rax, [rbp - 0x30]	       620	wrstabs.c	FUNCTION_10	ELSE_1	CALL_2
0x4000a03	      0xbe00000000	                              mov esi, 0	       620	wrstabs.c	FUNCTION_10	ELSE_1	CALL_2
0x4000a08	          0x4889c7	                            mov rdi, rax	       620	wrstabs.c	FUNCTION_10	ELSE_1	CALL_2
0x4000a0b	      0xb800000000	                              mov eax, 0	       620	wrstabs.c	FUNCTION_10	ELSE_1	CALL_2
0x4000a10	      0xe800000000	                          call 0x4000a15	       620	wrstabs.c	FUNCTION_10	ELSE_1	CALL_2
0x4000a15	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       622	wrstabs.c	FUNCTION_10	ELSE_1	CALL_3
0x4000a19	        0x488d75d0	                   lea rsi, [rbp - 0x30]	       622	wrstabs.c	FUNCTION_10	ELSE_1	CALL_3
0x4000a1d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       622	wrstabs.c	FUNCTION_10	ELSE_1	CALL_3
0x4000a21	    0x41b800000000	                              mov r8d, 0	       622	wrstabs.c	FUNCTION_10	ELSE_1	CALL_3
0x4000a27	      0xb901000000	                              mov ecx, 1	       622	wrstabs.c	FUNCTION_10	ELSE_1	CALL_3
0x4000a2c	          0x4889c7	                            mov rdi, rax	       622	wrstabs.c	FUNCTION_10	ELSE_1	CALL_3
0x4000a2f	      0xe8ebf8ffff	               call sym.stab_push_string	       622	wrstabs.c	FUNCTION_10	ELSE_1	CALL_3
0x4000a34	        0x488b7df8	                mov rdi, qword [rbp - 8]	       624	wrstabs.c	FUNCTION_10
0x4000a38	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       624	wrstabs.c	FUNCTION_10
0x4000a41	            0x7405	                            je 0x4000a48	       624	wrstabs.c	FUNCTION_10
0x4000a43	      0xe800000000	                          call 0x4000a48	       624	wrstabs.c	FUNCTION_10
0x4000a48	              0xc9	                                   leave	       624	wrstabs.c	FUNCTION_10
0x4000a49	              0xc3	                                     ret	       624	wrstabs.c	FUNCTION_10
stab_range_type	FOR,0:ELSE,0:DO,0:WHILE,0:IF,1:SWITCH,0:CALL,7:functions,0	58
0x4001816	              0x55	                                push rbp	       990	wrstabs.c	FUNCTION_20
0x4001817	          0x4889e5	                            mov rbp, rsp	       990	wrstabs.c	FUNCTION_20
0x400181a	        0x4883ec40	                           sub rsp, 0x40	       990	wrstabs.c	FUNCTION_20
0x400181e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       990	wrstabs.c	FUNCTION_20
0x4001822	        0x488975d0	             mov qword [rbp - 0x30], rsi	       990	wrstabs.c	FUNCTION_20
0x4001826	        0x488955c8	             mov qword [rbp - 0x38], rdx	       990	wrstabs.c	FUNCTION_20
0x400182a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       991	wrstabs.c	FUNCTION_20
0x400182e	        0x488945e8	             mov qword [rbp - 0x18], rax	       991	wrstabs.c	FUNCTION_20
0x4001832	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       996	wrstabs.c	FUNCTION_20
0x4001836	        0x488b4060	            mov rax, qword [rax + 0x60] 	       996	wrstabs.c	FUNCTION_20
0x400183a	          0x8b401c	            mov eax, dword [rax + 0x1c] 	       996	wrstabs.c	FUNCTION_20
0x400183d	          0x8945e0	             mov dword [rbp - 0x20], eax	       996	wrstabs.c	FUNCTION_20
0x4001840	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       997	wrstabs.c	FUNCTION_20
0x4001844	        0x488b4060	            mov rax, qword [rax + 0x60] 	       997	wrstabs.c	FUNCTION_20
0x4001848	          0x8b4018	            mov eax, dword [rax + 0x18] 	       997	wrstabs.c	FUNCTION_20
0x400184b	          0x8945e4	             mov dword [rbp - 0x1c], eax	       997	wrstabs.c	FUNCTION_20
0x400184e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       999	wrstabs.c	FUNCTION_20	CALL_1
0x4001852	          0x4889c7	                            mov rdi, rax	       999	wrstabs.c	FUNCTION_20	CALL_1
0x4001855	      0xe8e8ebffff	                  call sym.stab_pop_type	       999	wrstabs.c	FUNCTION_20	CALL_1
0x400185a	        0x488945f0	             mov qword [rbp - 0x10], rax	       999	wrstabs.c	FUNCTION_20	CALL_1
0x400185e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4001862	          0x4889c7	                            mov rdi, rax	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4001865	      0xe800000000	                          call 0x400186a	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x400186a	        0x4883c064	                           add rax, 0x64	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x400186e	          0x4889c7	                            mov rdi, rax	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4001871	      0xe800000000	                          call 0x4001876	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4001876	        0x488945f8	                mov qword [rbp - 8], rax	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x400187a	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      1001	wrstabs.c	FUNCTION_20	CALL_4
0x400187e	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1001	wrstabs.c	FUNCTION_20	CALL_4
0x4001882	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1001	wrstabs.c	FUNCTION_20	CALL_4
0x4001886	        0x488b45f8	                mov rax, qword [rbp - 8]	      1001	wrstabs.c	FUNCTION_20	CALL_4
0x400188a	          0x4989f0	                             mov r8, rsi	      1001	wrstabs.c	FUNCTION_20	CALL_4
0x400188d	      0xbe00000000	                              mov esi, 0	      1001	wrstabs.c	FUNCTION_20	CALL_4
0x4001892	          0x4889c7	                            mov rdi, rax	      1001	wrstabs.c	FUNCTION_20	CALL_4
0x4001895	      0xb800000000	                              mov eax, 0	      1001	wrstabs.c	FUNCTION_20	CALL_4
0x400189a	      0xe800000000	                          call 0x400189f	      1001	wrstabs.c	FUNCTION_20	CALL_4
0x400189f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1002	wrstabs.c	FUNCTION_20	CALL_5
0x40018a3	          0x4889c7	                            mov rdi, rax	      1002	wrstabs.c	FUNCTION_20	CALL_5
0x40018a6	      0xe800000000	                          call 0x40018ab	      1002	wrstabs.c	FUNCTION_20	CALL_5
0x40018ab	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_6
0x40018ae	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_6
0x40018b1	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_6
0x40018b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_6
0x40018b9	          0x4189c8	                            mov r8d, ecx	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_6
0x40018bc	            0x89d1	                            mov ecx, edx	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_6
0x40018be	      0xba00000000	                              mov edx, 0	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_6
0x40018c3	          0x4889c7	                            mov rdi, rax	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_6
0x40018c6	      0xe854eaffff	               call sym.stab_push_string	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_6
0x40018cb	            0x85c0	                           test eax, eax	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_6
0x40018cd	            0x7507	                           jne 0x40018d6	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_6
0x40018cf	      0xb800000000	                              mov eax, 0	      1005	wrstabs.c	FUNCTION_20	IF_1
0x40018d4	            0xeb11	                           jmp 0x40018e7	      1005	wrstabs.c	FUNCTION_20	IF_1
0x40018d6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1007	wrstabs.c	FUNCTION_20	CALL_7
0x40018da	          0x4889c7	                            mov rdi, rax	      1007	wrstabs.c	FUNCTION_20	CALL_7
0x40018dd	      0xe800000000	                          call 0x40018e2	      1007	wrstabs.c	FUNCTION_20	CALL_7
0x40018e2	      0xb801000000	                              mov eax, 1	      1009	wrstabs.c	FUNCTION_20
0x40018e7	              0xc9	                                   leave	      1010	wrstabs.c	FUNCTION_20
0x40018e8	              0xc3	                                     ret	      1010	wrstabs.c	FUNCTION_20
stab_start_struct_type	FOR,0:ELSE,1:DO,0:WHILE,0:IF,3:SWITCH,0:CALL,6:functions,0	90
0x400236d	              0x55	                                push rbp	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x400236e	          0x4889e5	                            mov rbp, rsp	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4002371	            0x4154	                                push r12	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4002373	              0x53	                                push rbx	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4002374	        0x4883ec70	                           sub rsp, 0x70	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4002378	        0x48897d98	             mov qword [rbp - 0x68], rdi	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x400237c	        0x48897590	             mov qword [rbp - 0x70], rsi	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4002380	          0x89558c	             mov dword [rbp - 0x74], edx	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4002383	          0x894d88	             mov dword [rbp - 0x78], ecx	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4002386	        0x44894584	             mov dword [rbp - 0x7c], r8d	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x400238a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4002393	        0x488945e8	             mov qword [rbp - 0x18], rax	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4002397	            0x31c0	                            xor eax, eax	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4002399	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1311	wrstabs.c	ELSE_1	FUNCTION_28
0x400239d	        0x488945b8	             mov qword [rbp - 0x48], rax	      1311	wrstabs.c	ELSE_1	FUNCTION_28
0x40023a1	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      1316	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x40023a5	            0x7515	                           jne 0x40023bc	      1316	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x40023a7	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1318	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x40023af	        0xc645c000	                mov byte [rbp - 0x40], 0	      1319	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x40023b3	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      1320	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x40023ba	            0xeb55	                           jmp 0x4002411	      1320	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x40023bc	        0x488d4d84	                   lea rcx, [rbp - 0x7c]	      1324	wrstabs.c	FUNCTION_28	CALL_1
0x40023c0	          0x8b558c	             mov edx, dword [rbp - 0x74]	      1324	wrstabs.c	FUNCTION_28	CALL_1
0x40023c3	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      1324	wrstabs.c	FUNCTION_28	CALL_1
0x40023c7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1324	wrstabs.c	FUNCTION_28	CALL_1
0x40023cb	          0x4989c8	                             mov r8, rcx	      1324	wrstabs.c	FUNCTION_28	CALL_1
0x40023ce	      0xb900000000	                              mov ecx, 0	      1324	wrstabs.c	FUNCTION_28	CALL_1
0x40023d3	          0x4889c7	                            mov rdi, rax	      1324	wrstabs.c	FUNCTION_28	CALL_1
0x40023d6	      0xe842fdffff	          call sym.stab_get_struct_index	      1324	wrstabs.c	FUNCTION_28	CALL_1
0x40023db	        0x488945b0	             mov qword [rbp - 0x50], rax	      1324	wrstabs.c	FUNCTION_28	CALL_1
0x40023df	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1326	wrstabs.c	FUNCTION_28	IF_2
0x40023e4	            0x790a	                           jns 0x40023f0	      1326	wrstabs.c	FUNCTION_28	IF_2
0x40023e6	      0xb800000000	                              mov eax, 0	      1327	wrstabs.c	FUNCTION_28	IF_2
0x40023eb	      0xe9b7000000	                           jmp 0x40024a7	      1327	wrstabs.c	FUNCTION_28	IF_2
0x40023f0	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1328	wrstabs.c	FUNCTION_28	CALL_2
0x40023f4	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1328	wrstabs.c	FUNCTION_28	CALL_2
0x40023f8	      0xbe00000000	                              mov esi, 0	      1328	wrstabs.c	FUNCTION_28	CALL_2
0x40023fd	          0x4889c7	                            mov rdi, rax	      1328	wrstabs.c	FUNCTION_28	CALL_2
0x4002400	      0xb800000000	                              mov eax, 0	      1328	wrstabs.c	FUNCTION_28	CALL_2
0x4002405	      0xe800000000	                          call 0x400240a	      1328	wrstabs.c	FUNCTION_28	CALL_2
0x400240a	    0xc745ac010000	               mov dword [rbp - 0x54], 1	      1329	wrstabs.c	FUNCTION_28
0x4002411	          0x8b5d84	             mov ebx, dword [rbp - 0x7c]	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4002414	        0x837d8800	               cmp dword [rbp - 0x78], 0	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4002418	            0x7408	                            je 0x4002422	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x400241a	    0x41bc73000000	                          mov r12d, 0x73	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4002420	            0xeb06	                           jmp 0x4002428	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4002422	    0x41bc75000000	                          mov r12d, 0x75	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4002428	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x400242c	          0x4889c7	                            mov rdi, rax	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x400242f	      0xe800000000	                          call 0x4002434	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4002434	          0x4889c2	                            mov rdx, rax	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4002437	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x400243b	          0x4801d0	                            add rax, rdx	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x400243e	            0x89d9	                            mov ecx, ebx	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4002440	          0x4489e2	                           mov edx, r12d	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4002443	      0xbe00000000	                              mov esi, 0	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4002448	          0x4889c7	                            mov rdi, rax	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x400244b	      0xb800000000	                              mov eax, 0	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4002450	      0xe800000000	                          call 0x4002455	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4002455	          0x8b7d84	             mov edi, dword [rbp - 0x7c]	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_5
0x4002458	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_5
0x400245b	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_5
0x400245f	        0x488d75c0	                   lea rsi, [rbp - 0x40]	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_5
0x4002463	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_5
0x4002467	          0x4189f8	                            mov r8d, edi	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_5
0x400246a	          0x4889c7	                            mov rdi, rax	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_5
0x400246d	      0xe8addeffff	               call sym.stab_push_string	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_5
0x4002472	            0x85c0	                           test eax, eax	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_5
0x4002474	            0x7507	                           jne 0x400247d	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_5
0x4002476	      0xb800000000	                              mov eax, 0	      1337	wrstabs.c	FUNCTION_28	ELSE_1	IF_3
0x400247b	            0xeb2a	                           jmp 0x40024a7	      1337	wrstabs.c	FUNCTION_28	ELSE_1	IF_3
0x400247d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1339	wrstabs.c	FUNCTION_28	ELSE_1	CALL_6
0x4002481	        0x488b5860	            mov rbx, qword [rax + 0x60] 	      1339	wrstabs.c	FUNCTION_28	ELSE_1	CALL_6
0x4002485	      0xbf01000000	                              mov edi, 1	      1339	wrstabs.c	FUNCTION_28	ELSE_1	CALL_6
0x400248a	      0xe800000000	                          call 0x400248f	      1339	wrstabs.c	FUNCTION_28	ELSE_1	CALL_6
0x400248f	        0x48894320	             mov qword [rbx + 0x20], rax	      1339	wrstabs.c	FUNCTION_28	ELSE_1	CALL_6
0x4002493	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1340	wrstabs.c	FUNCTION_28	ELSE_1
0x4002497	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1340	wrstabs.c	FUNCTION_28	ELSE_1
0x400249b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1340	wrstabs.c	FUNCTION_28	ELSE_1
0x400249f	          0xc60000	                       mov byte [rax], 0	      1340	wrstabs.c	FUNCTION_28	ELSE_1
0x40024a2	      0xb801000000	                              mov eax, 1	      1342	wrstabs.c	FUNCTION_28	ELSE_1
0x40024a7	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x40024ab	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x40024b4	            0x7405	                            je 0x40024bb	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x40024b6	      0xe800000000	                          call 0x40024bb	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x40024bb	        0x4883c470	                           add rsp, 0x70	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x40024bf	              0x5b	                                 pop rbx	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x40024c0	            0x415c	                                 pop r12	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x40024c2	              0x5d	                                 pop rbp	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x40024c3	              0xc3	                                     ret	      1343	wrstabs.c	FUNCTION_28	ELSE_1
stab_start_function	FOR,0:ELSE,0:DO,0:WHILE,0:IF,1:SWITCH,0:CALL,8:functions,0	77
0x4003c35	              0x55	                                push rbp	      2084	wrstabs.c	FUNCTION_48
0x4003c36	          0x4889e5	                            mov rbp, rsp	      2084	wrstabs.c	FUNCTION_48
0x4003c39	              0x53	                                push rbx	      2084	wrstabs.c	FUNCTION_48
0x4003c3a	        0x4883ec48	                           sub rsp, 0x48	      2084	wrstabs.c	FUNCTION_48
0x4003c3e	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2084	wrstabs.c	FUNCTION_48
0x4003c42	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2084	wrstabs.c	FUNCTION_48
0x4003c46	          0x8955bc	             mov dword [rbp - 0x44], edx	      2084	wrstabs.c	FUNCTION_48
0x4003c49	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2085	wrstabs.c	FUNCTION_48
0x4003c4d	        0x488945d8	             mov qword [rbp - 0x28], rax	      2085	wrstabs.c	FUNCTION_48
0x4003c51	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4003c55	    0x8b80f8010000	           mov eax, dword [rax + 0x1f8] 	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4003c5b	            0x85c0	                           test eax, eax	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4003c5d	            0x7511	                           jne 0x4003c70	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4003c5f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4003c63	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4003c6a	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4003c6e	            0x7419	                            je 0x4003c89	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4003c70	      0xb900000000	                              mov ecx, 0	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4003c75	      0xba28080000	                          mov edx, 0x828	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4003c7a	      0xbe00000000	                              mov esi, 0	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4003c7f	      0xbf00000000	                              mov edi, 0	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4003c84	      0xe800000000	                          call 0x4003c89	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4003c89	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2090	wrstabs.c	FUNCTION_48	CALL_2
0x4003c8d	          0x4889c7	                            mov rdi, rax	      2090	wrstabs.c	FUNCTION_48	CALL_2
0x4003c90	      0xe8adc7ffff	                  call sym.stab_pop_type	      2090	wrstabs.c	FUNCTION_48	CALL_2
0x4003c95	        0x488945e0	             mov qword [rbp - 0x20], rax	      2090	wrstabs.c	FUNCTION_48	CALL_2
0x4003c99	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4003c9d	          0x4889c7	                            mov rdi, rax	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4003ca0	      0xe800000000	                          call 0x4003ca5	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4003ca5	          0x4889c3	                            mov rbx, rax	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4003ca8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4003cac	          0x4889c7	                            mov rdi, rax	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4003caf	      0xe800000000	                          call 0x4003cb4	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4003cb4	          0x4801d8	                            add rax, rbx	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4003cb7	        0x4883c003	                              add rax, 3	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4003cbb	          0x4889c7	                            mov rdi, rax	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4003cbe	      0xe800000000	                          call 0x4003cc3	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4003cc3	        0x488945e8	             mov qword [rbp - 0x18], rax	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4003cc7	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2093	wrstabs.c	FUNCTION_48	CALL_6
0x4003ccb	            0x7407	                            je 0x4003cd4	      2093	wrstabs.c	FUNCTION_48	CALL_6
0x4003ccd	      0xbe46000000	                           mov esi, 0x46	      2093	wrstabs.c	FUNCTION_48	CALL_6
0x4003cd2	            0xeb05	                           jmp 0x4003cd9	      2093	wrstabs.c	FUNCTION_48	CALL_6
0x4003cd4	      0xbe66000000	                           mov esi, 0x66	      2093	wrstabs.c	FUNCTION_48	CALL_6
0x4003cd9	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2093	wrstabs.c	FUNCTION_48	CALL_6
0x4003cdd	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2093	wrstabs.c	FUNCTION_48	CALL_6
0x4003ce1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2093	wrstabs.c	FUNCTION_48	CALL_6
0x4003ce5	          0x4989c8	                             mov r8, rcx	      2093	wrstabs.c	FUNCTION_48	CALL_6
0x4003ce8	            0x89f1	                            mov ecx, esi	      2093	wrstabs.c	FUNCTION_48	CALL_6
0x4003cea	      0xbe00000000	                              mov esi, 0	      2093	wrstabs.c	FUNCTION_48	CALL_6
0x4003cef	          0x4889c7	                            mov rdi, rax	      2093	wrstabs.c	FUNCTION_48	CALL_6
0x4003cf2	      0xb800000000	                              mov eax, 0	      2093	wrstabs.c	FUNCTION_48	CALL_6
0x4003cf7	      0xe800000000	                          call 0x4003cfc	      2093	wrstabs.c	FUNCTION_48	CALL_6
0x4003cfc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2098	wrstabs.c	FUNCTION_48
0x4003d00	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2098	wrstabs.c	FUNCTION_48
0x4003d04	          0x4889c2	                            mov rdx, rax	      2098	wrstabs.c	FUNCTION_48
0x4003d07	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2098	wrstabs.c	FUNCTION_48
0x4003d0b	    0x488990e80100	            mov qword [rax + 0x1e8], rdx	      2098	wrstabs.c	FUNCTION_48
0x4003d12	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_7
0x4003d16	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_7
0x4003d1a	          0x4989d0	                             mov r8, rdx	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_7
0x4003d1d	      0xb900000000	                              mov ecx, 0	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_7
0x4003d22	      0xba00000000	                              mov edx, 0	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_7
0x4003d27	      0xbe24000000	                           mov esi, 0x24	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_7
0x4003d2c	          0x4889c7	                            mov rdi, rax	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_7
0x4003d2f	      0xe89dc3ffff	              call sym.stab_write_symbol	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_7
0x4003d34	            0x85c0	                           test eax, eax	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_7
0x4003d36	            0x7507	                           jne 0x4003d3f	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_7
0x4003d38	      0xb800000000	                              mov eax, 0	      2101	wrstabs.c	FUNCTION_48	IF_1
0x4003d3d	            0xeb11	                           jmp 0x4003d50	      2101	wrstabs.c	FUNCTION_48	IF_1
0x4003d3f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2103	wrstabs.c	FUNCTION_48	CALL_8
0x4003d43	          0x4889c7	                            mov rdi, rax	      2103	wrstabs.c	FUNCTION_48	CALL_8
0x4003d46	      0xe800000000	                          call 0x4003d4b	      2103	wrstabs.c	FUNCTION_48	CALL_8
0x4003d4b	      0xb801000000	                              mov eax, 1	      2105	wrstabs.c	FUNCTION_48
0x4003d50	        0x4883c448	                           add rsp, 0x48	      2106	wrstabs.c	FUNCTION_48
0x4003d54	              0x5b	                                 pop rbx	      2106	wrstabs.c	FUNCTION_48
0x4003d55	              0x5d	                                 pop rbp	      2106	wrstabs.c	FUNCTION_48
0x4003d56	              0xc3	                                     ret	      2106	wrstabs.c	FUNCTION_48
stab_start_block	FOR,0:ELSE,0:DO,0:WHILE,0:IF,5:SWITCH,0:CALL,3:functions,0	87
0x4003e81	              0x55	                                push rbp	      2162	wrstabs.c	FUNCTION_50
0x4003e82	          0x4889e5	                            mov rbp, rsp	      2162	wrstabs.c	FUNCTION_50
0x4003e85	        0x4883ec20	                           sub rsp, 0x20	      2162	wrstabs.c	FUNCTION_50
0x4003e89	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2162	wrstabs.c	FUNCTION_50
0x4003e8d	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2162	wrstabs.c	FUNCTION_50
0x4003e91	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2163	wrstabs.c	FUNCTION_50
0x4003e95	        0x488945f8	                mov qword [rbp - 8], rax	      2163	wrstabs.c	FUNCTION_50
0x4003e99	        0x488b45f8	                mov rax, qword [rbp - 8]	      2168	wrstabs.c	FUNCTION_50	IF_1
0x4003e9d	    0x488b80e00100	           mov rax, qword [rax + 0x1e0] 	      2168	wrstabs.c	FUNCTION_50	IF_1
0x4003ea4	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2168	wrstabs.c	FUNCTION_50	IF_1
0x4003ea8	            0x7444	                            je 0x4003eee	      2168	wrstabs.c	FUNCTION_50	IF_1
0x4003eaa	        0x488b45f8	                mov rax, qword [rbp - 8]	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4003eae	          0x488b00	                    mov rax, qword [rax]	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4003eb1	        0x488b4008	                mov rax, qword [rax + 8]	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4003eb5	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4003eb9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4003ebd	        0x488b4a08	                mov rcx, qword [rdx + 8]	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4003ec1	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4003ec5	    0x488b92e00100	           mov rdx, qword [rdx + 0x1e0] 	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4003ecc	        0x4883c208	                              add rdx, 8	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4003ed0	          0x4801d1	                            add rcx, rdx	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4003ed3	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4003ed7	          0x4889ce	                            mov rsi, rcx	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4003eda	          0x4889d7	                            mov rdi, rdx	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4003edd	            0xffd0	                                call rax	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4003edf	        0x488b45f8	                mov rax, qword [rbp - 8]	      2171	wrstabs.c	FUNCTION_50	IF_1
0x4003ee3	    0x48c780e00100	mov qword [rax + 0x1e0], 0xffffffffffffffff	      2171	wrstabs.c	FUNCTION_50	IF_1
0x4003eee	        0x488b45f8	                mov rax, qword [rbp - 8]	      2174	wrstabs.c	FUNCTION_50	IF_2
0x4003ef2	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      2174	wrstabs.c	FUNCTION_50	IF_2
0x4003ef9	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2174	wrstabs.c	FUNCTION_50	IF_2
0x4003efd	            0x7444	                            je 0x4003f43	      2174	wrstabs.c	FUNCTION_50	IF_2
0x4003eff	        0x488b45f8	                mov rax, qword [rbp - 8]	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4003f03	          0x488b00	                    mov rax, qword [rax]	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4003f06	        0x488b4008	                mov rax, qword [rax + 8]	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4003f0a	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4003f0e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4003f12	        0x488b4a08	                mov rcx, qword [rdx + 8]	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4003f16	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4003f1a	    0x488b92e80100	           mov rdx, qword [rdx + 0x1e8] 	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4003f21	        0x4883c208	                              add rdx, 8	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4003f25	          0x4801d1	                            add rcx, rdx	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4003f28	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4003f2c	          0x4889ce	                            mov rsi, rcx	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4003f2f	          0x4889d7	                            mov rdi, rdx	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4003f32	            0xffd0	                                call rax	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4003f34	        0x488b45f8	                mov rax, qword [rbp - 8]	      2177	wrstabs.c	FUNCTION_50	IF_2
0x4003f38	    0x48c780e80100	mov qword [rax + 0x1e8], 0xffffffffffffffff	      2177	wrstabs.c	FUNCTION_50	IF_2
0x4003f43	        0x488b45f8	                mov rax, qword [rbp - 8]	      2180	wrstabs.c	FUNCTION_50
0x4003f47	    0x8b80f8010000	           mov eax, dword [rax + 0x1f8] 	      2180	wrstabs.c	FUNCTION_50
0x4003f4d	          0x8d5001	                      lea edx, [rax + 1]	      2180	wrstabs.c	FUNCTION_50
0x4003f50	        0x488b45f8	                mov rax, qword [rbp - 8]	      2180	wrstabs.c	FUNCTION_50
0x4003f54	    0x8990f8010000	            mov dword [rax + 0x1f8], edx	      2180	wrstabs.c	FUNCTION_50
0x4003f5a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2186	wrstabs.c	FUNCTION_50	IF_3
0x4003f5e	    0x8b80f8010000	           mov eax, dword [rax + 0x1f8] 	      2186	wrstabs.c	FUNCTION_50	IF_3
0x4003f64	          0x83f801	                              cmp eax, 1	      2186	wrstabs.c	FUNCTION_50	IF_3
0x4003f67	            0x7516	                           jne 0x4003f7f	      2186	wrstabs.c	FUNCTION_50	IF_3
0x4003f69	        0x488b45f8	                mov rax, qword [rbp - 8]	      2188	wrstabs.c	FUNCTION_50	IF_3
0x4003f6d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2188	wrstabs.c	FUNCTION_50	IF_3
0x4003f71	    0x488990000200	            mov qword [rax + 0x200], rdx	      2188	wrstabs.c	FUNCTION_50	IF_3
0x4003f78	      0xb801000000	                              mov eax, 1	      2189	wrstabs.c	FUNCTION_50	IF_3
0x4003f7d	            0xeb68	                           jmp 0x4003fe7	      2189	wrstabs.c	FUNCTION_50	IF_3
0x4003f7f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2197	wrstabs.c	FUNCTION_50	IF_4
0x4003f83	    0x488b80080200	           mov rax, qword [rax + 0x208] 	      2197	wrstabs.c	FUNCTION_50	IF_4
0x4003f8a	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2197	wrstabs.c	FUNCTION_50	IF_4
0x4003f8e	            0x7435	                            je 0x4003fc5	      2197	wrstabs.c	FUNCTION_50	IF_4
0x4003f90	        0x488b45f8	                mov rax, qword [rbp - 8]	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x4003f94	    0x488b90080200	           mov rdx, qword [rax + 0x208] 	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x4003f9b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x4003f9f	    0x41b800000000	                              mov r8d, 0	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x4003fa5	          0x4889d1	                            mov rcx, rdx	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x4003fa8	      0xba00000000	                              mov edx, 0	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x4003fad	      0xbec0000000	                           mov esi, 0xc0	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x4003fb2	          0x4889c7	                            mov rdi, rax	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x4003fb5	      0xe817c1ffff	              call sym.stab_write_symbol	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x4003fba	            0x85c0	                           test eax, eax	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x4003fbc	            0x7507	                           jne 0x4003fc5	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x4003fbe	      0xb800000000	                              mov eax, 0	      2201	wrstabs.c	FUNCTION_50	IF_4	IF_5
0x4003fc3	            0xeb22	                           jmp 0x4003fe7	      2201	wrstabs.c	FUNCTION_50	IF_4	IF_5
0x4003fc5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2206	wrstabs.c	FUNCTION_50
0x4003fc9	    0x488b80000200	           mov rax, qword [rax + 0x200] 	      2206	wrstabs.c	FUNCTION_50
0x4003fd0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2206	wrstabs.c	FUNCTION_50
0x4003fd4	          0x4829c2	                            sub rdx, rax	      2206	wrstabs.c	FUNCTION_50
0x4003fd7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2206	wrstabs.c	FUNCTION_50
0x4003fdb	    0x488990080200	            mov qword [rax + 0x208], rdx	      2206	wrstabs.c	FUNCTION_50
0x4003fe2	      0xb801000000	                              mov eax, 1	      2208	wrstabs.c	FUNCTION_50
0x4003fe7	              0xc9	                                   leave	      2209	wrstabs.c	FUNCTION_50
0x4003fe8	              0xc3	                                     ret	      2209	wrstabs.c	FUNCTION_50
string_hash_newfunc	FOR,0:ELSE,0:DO,0:WHILE,0:IF,3:SWITCH,0:CALL,2:functions,0	37
0x4000040	              0x55	                                push rbp	       303	wrstabs.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       303	wrstabs.c	FUNCTION_1
0x4000044	        0x4883ec30	                           sub rsp, 0x30	       303	wrstabs.c	FUNCTION_1
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	       303	wrstabs.c	FUNCTION_1
0x400004c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       303	wrstabs.c	FUNCTION_1
0x4000050	        0x488955d8	             mov qword [rbp - 0x28], rdx	       303	wrstabs.c	FUNCTION_1
0x4000054	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       304	wrstabs.c	FUNCTION_1
0x4000058	        0x488945f8	                mov qword [rbp - 8], rax	       304	wrstabs.c	FUNCTION_1
0x400005c	      0x48837df800	                  cmp qword [rbp - 8], 0	       308	wrstabs.c	FUNCTION_1	IF_1
0x4000061	            0x7515	                           jne 0x4000078	       308	wrstabs.c	FUNCTION_1	IF_1
0x4000063	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       309	wrstabs.c	FUNCTION_1	IF_1
0x4000067	      0xbe30000000	                           mov esi, 0x30	       309	wrstabs.c	FUNCTION_1	IF_1
0x400006c	          0x4889c7	                            mov rdi, rax	       309	wrstabs.c	FUNCTION_1	IF_1
0x400006f	      0xe800000000	                          call 0x4000074	       309	wrstabs.c	FUNCTION_1	IF_1
0x4000074	        0x488945f8	                mov qword [rbp - 8], rax	       309	wrstabs.c	FUNCTION_1	IF_1
0x4000078	      0x48837df800	                  cmp qword [rbp - 8], 0	       311	wrstabs.c	FUNCTION_1	IF_2
0x400007d	            0x7507	                           jne 0x4000086	       311	wrstabs.c	FUNCTION_1	IF_2
0x400007f	      0xb800000000	                              mov eax, 0	       312	wrstabs.c	FUNCTION_1	IF_2
0x4000084	            0xeb49	                           jmp 0x40000cf	       312	wrstabs.c	FUNCTION_1	IF_2
0x4000086	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       315	wrstabs.c	FUNCTION_1
0x400008a	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       315	wrstabs.c	FUNCTION_1
0x400008e	        0x488b45f8	                mov rax, qword [rbp - 8]	       315	wrstabs.c	FUNCTION_1
0x4000092	          0x4889ce	                            mov rsi, rcx	       315	wrstabs.c	FUNCTION_1
0x4000095	          0x4889c7	                            mov rdi, rax	       315	wrstabs.c	FUNCTION_1
0x4000098	      0xe800000000	                          call 0x400009d	       315	wrstabs.c	FUNCTION_1
0x400009d	        0x488945f8	                mov qword [rbp - 8], rax	       315	wrstabs.c	FUNCTION_1
0x40000a1	      0x48837df800	                  cmp qword [rbp - 8], 0	       318	wrstabs.c	FUNCTION_1	IF_3
0x40000a6	            0x7423	                            je 0x40000cb	       318	wrstabs.c	FUNCTION_1	IF_3
0x40000a8	        0x488b45f8	                mov rax, qword [rbp - 8]	       321	wrstabs.c	FUNCTION_1	IF_3
0x40000ac	    0x48c740180000	               mov qword [rax + 0x18], 0	       321	wrstabs.c	FUNCTION_1	IF_3
0x40000b4	        0x488b45f8	                mov rax, qword [rbp - 8]	       322	wrstabs.c	FUNCTION_1	IF_3
0x40000b8	    0x48c74020ffff	mov qword [rax + 0x20], 0xffffffffffffffff	       322	wrstabs.c	FUNCTION_1	IF_3
0x40000c0	        0x488b45f8	                mov rax, qword [rbp - 8]	       323	wrstabs.c	FUNCTION_1	IF_3
0x40000c4	    0xc74028000000	               mov dword [rax + 0x28], 0	       323	wrstabs.c	FUNCTION_1	IF_3
0x40000cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       326	wrstabs.c	FUNCTION_1
0x40000cf	              0xc9	                                   leave	       327	wrstabs.c	FUNCTION_1
0x40000d0	              0xc3	                                     ret	       327	wrstabs.c	FUNCTION_1
stab_array_type	FOR,0:ELSE,2:DO,0:WHILE,0:IF,3:SWITCH,0:CALL,12:functions,0	123
0x40018e9	              0x55	                                push rbp	      1017	wrstabs.c	FUNCTION_21
0x40018ea	          0x4889e5	                            mov rbp, rsp	      1017	wrstabs.c	FUNCTION_21
0x40018ed	              0x53	                                push rbx	      1017	wrstabs.c	FUNCTION_21
0x40018ee	        0x4883ec68	                           sub rsp, 0x68	      1017	wrstabs.c	FUNCTION_21
0x40018f2	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1017	wrstabs.c	FUNCTION_21
0x40018f6	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1017	wrstabs.c	FUNCTION_21
0x40018fa	        0x48895598	             mov qword [rbp - 0x68], rdx	      1017	wrstabs.c	FUNCTION_21
0x40018fe	          0x894d94	             mov dword [rbp - 0x6c], ecx	      1017	wrstabs.c	FUNCTION_21
0x4001901	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1018	wrstabs.c	FUNCTION_21
0x4001905	        0x488945d0	             mov qword [rbp - 0x30], rax	      1018	wrstabs.c	FUNCTION_21
0x4001909	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1025	wrstabs.c	FUNCTION_21
0x400190d	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1025	wrstabs.c	FUNCTION_21
0x4001911	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1025	wrstabs.c	FUNCTION_21
0x4001914	          0x8945bc	             mov dword [rbp - 0x44], eax	      1025	wrstabs.c	FUNCTION_21
0x4001917	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1026	wrstabs.c	FUNCTION_21	CALL_1
0x400191b	          0x4889c7	                            mov rdi, rax	      1026	wrstabs.c	FUNCTION_21	CALL_1
0x400191e	      0xe81febffff	                  call sym.stab_pop_type	      1026	wrstabs.c	FUNCTION_21	CALL_1
0x4001923	        0x488945d8	             mov qword [rbp - 0x28], rax	      1026	wrstabs.c	FUNCTION_21	CALL_1
0x4001927	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1028	wrstabs.c	FUNCTION_21
0x400192b	            0x750f	                           jne 0x400193c	      1028	wrstabs.c	FUNCTION_21
0x400192d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1028	wrstabs.c	FUNCTION_21
0x4001931	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1028	wrstabs.c	FUNCTION_21
0x4001935	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1028	wrstabs.c	FUNCTION_21
0x4001938	            0x85c0	                           test eax, eax	      1028	wrstabs.c	FUNCTION_21
0x400193a	            0x7407	                            je 0x4001943	      1028	wrstabs.c	FUNCTION_21
0x400193c	      0xb801000000	                              mov eax, 1	      1028	wrstabs.c	FUNCTION_21
0x4001941	            0xeb05	                           jmp 0x4001948	      1028	wrstabs.c	FUNCTION_21
0x4001943	      0xb800000000	                              mov eax, 0	      1028	wrstabs.c	FUNCTION_21
0x4001948	          0x8945bc	             mov dword [rbp - 0x44], eax	      1028	wrstabs.c	FUNCTION_21
0x400194b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1029	wrstabs.c	FUNCTION_21
0x400194f	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1029	wrstabs.c	FUNCTION_21
0x4001953	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1029	wrstabs.c	FUNCTION_21
0x4001956	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1029	wrstabs.c	FUNCTION_21
0x4001959	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1030	wrstabs.c	FUNCTION_21	CALL_2
0x400195d	          0x4889c7	                            mov rdi, rax	      1030	wrstabs.c	FUNCTION_21	CALL_2
0x4001960	      0xe8ddeaffff	                  call sym.stab_pop_type	      1030	wrstabs.c	FUNCTION_21	CALL_2
0x4001965	        0x488945e0	             mov qword [rbp - 0x20], rax	      1030	wrstabs.c	FUNCTION_21	CALL_2
0x4001969	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x400196d	          0x4889c7	                            mov rdi, rax	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4001970	      0xe800000000	                          call 0x4001975	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4001975	          0x4889c3	                            mov rbx, rax	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4001978	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x400197c	          0x4889c7	                            mov rdi, rax	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x400197f	      0xe800000000	                          call 0x4001984	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4001984	          0x4801d8	                            add rax, rbx	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4001987	        0x4883c064	                           add rax, 0x64	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x400198b	          0x4889c7	                            mov rdi, rax	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x400198e	      0xe800000000	                          call 0x4001993	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4001993	        0x488945e8	             mov qword [rbp - 0x18], rax	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4001997	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      1034	wrstabs.c	FUNCTION_21	IF_1
0x400199b	            0x7511	                           jne 0x40019ae	      1034	wrstabs.c	FUNCTION_21	IF_1
0x400199d	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1036	wrstabs.c	FUNCTION_21	IF_1
0x40019a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1037	wrstabs.c	FUNCTION_21	IF_1
0x40019a9	          0xc60000	                       mov byte [rax], 0	      1037	wrstabs.c	FUNCTION_21	IF_1
0x40019ac	            0xeb41	                           jmp 0x40019ef	      1037	wrstabs.c	FUNCTION_21	IF_1
0x40019ae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1043	wrstabs.c	FUNCTION_21	ELSE_1
0x40019b2	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1043	wrstabs.c	FUNCTION_21	ELSE_1
0x40019b6	        0x488945c8	             mov qword [rbp - 0x38], rax	      1043	wrstabs.c	FUNCTION_21	ELSE_1
0x40019ba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1044	wrstabs.c	FUNCTION_21	ELSE_1
0x40019be	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1044	wrstabs.c	FUNCTION_21	ELSE_1
0x40019c2	        0x488d5001	                      lea rdx, [rax + 1]	      1044	wrstabs.c	FUNCTION_21	ELSE_1
0x40019c6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1044	wrstabs.c	FUNCTION_21	ELSE_1
0x40019ca	        0x48895068	             mov qword [rax + 0x68], rdx	      1044	wrstabs.c	FUNCTION_21	ELSE_1
0x40019ce	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      1045	wrstabs.c	FUNCTION_21	ELSE_1
0x40019d5	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1046	wrstabs.c	FUNCTION_21	ELSE_1	CALL_6
0x40019d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1046	wrstabs.c	FUNCTION_21	ELSE_1	CALL_6
0x40019dd	      0xbe00000000	                              mov esi, 0	      1046	wrstabs.c	FUNCTION_21	ELSE_1	CALL_6
0x40019e2	          0x4889c7	                            mov rdi, rax	      1046	wrstabs.c	FUNCTION_21	ELSE_1	CALL_6
0x40019e5	      0xb800000000	                              mov eax, 0	      1046	wrstabs.c	FUNCTION_21	ELSE_1	CALL_6
0x40019ea	      0xe800000000	                          call 0x40019ef	      1046	wrstabs.c	FUNCTION_21	ELSE_1	CALL_6
0x40019ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1049	wrstabs.c	FUNCTION_21	CALL_8
0x40019f3	          0x4889c7	                            mov rdi, rax	      1049	wrstabs.c	FUNCTION_21	CALL_8
0x40019f6	      0xe800000000	                          call 0x40019fb	      1049	wrstabs.c	FUNCTION_21	CALL_8
0x40019fb	          0x4889c2	                            mov rdx, rax	      1049	wrstabs.c	FUNCTION_21	CALL_8
0x40019fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1049	wrstabs.c	FUNCTION_21	CALL_8
0x4001a02	        0x488d3c02	                    lea rdi, [rdx + rax]	      1049	wrstabs.c	FUNCTION_21	CALL_8
0x4001a06	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1049	wrstabs.c	FUNCTION_21	CALL_8
0x4001a0a	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      1049	wrstabs.c	FUNCTION_21	CALL_8
0x4001a0e	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1049	wrstabs.c	FUNCTION_21	CALL_8
0x4001a12	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1049	wrstabs.c	FUNCTION_21	CALL_8
0x4001a16	          0x4989f1	                             mov r9, rsi	      1049	wrstabs.c	FUNCTION_21	CALL_8
0x4001a19	          0x4989c8	                             mov r8, rcx	      1049	wrstabs.c	FUNCTION_21	CALL_8
0x4001a1c	          0x4889d1	                            mov rcx, rdx	      1049	wrstabs.c	FUNCTION_21	CALL_8
0x4001a1f	          0x4889c2	                            mov rdx, rax	      1049	wrstabs.c	FUNCTION_21	CALL_8
0x4001a22	      0xbe00000000	                              mov esi, 0	      1049	wrstabs.c	FUNCTION_21	CALL_8
0x4001a27	      0xb800000000	                              mov eax, 0	      1049	wrstabs.c	FUNCTION_21	CALL_8
0x4001a2c	      0xe800000000	                          call 0x4001a31	      1049	wrstabs.c	FUNCTION_21	CALL_8
0x4001a31	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1051	wrstabs.c	FUNCTION_21	CALL_9
0x4001a35	          0x4889c7	                            mov rdi, rax	      1051	wrstabs.c	FUNCTION_21	CALL_9
0x4001a38	      0xe800000000	                          call 0x4001a3d	      1051	wrstabs.c	FUNCTION_21	CALL_9
0x4001a3d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1052	wrstabs.c	FUNCTION_21	CALL_10
0x4001a41	          0x4889c7	                            mov rdi, rax	      1052	wrstabs.c	FUNCTION_21	CALL_10
0x4001a44	      0xe800000000	                          call 0x4001a49	      1052	wrstabs.c	FUNCTION_21	CALL_10
0x4001a49	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1054	wrstabs.c	FUNCTION_21	IF_2
0x4001a4d	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      1054	wrstabs.c	FUNCTION_21	IF_2
0x4001a51	            0x7d09	                           jge 0x4001a5c	      1054	wrstabs.c	FUNCTION_21	IF_2
0x4001a53	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      1055	wrstabs.c	FUNCTION_21	IF_2
0x4001a5a	            0xeb13	                           jmp 0x4001a6f	      1055	wrstabs.c	FUNCTION_21	IF_2
0x4001a5c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1057	wrstabs.c	FUNCTION_21	ELSE_2
0x4001a60	        0x482b45a0	             sub rax, qword [rbp - 0x60]	      1057	wrstabs.c	FUNCTION_21	ELSE_2
0x4001a64	        0x4883c001	                              add rax, 1	      1057	wrstabs.c	FUNCTION_21	ELSE_2
0x4001a68	         0xfaf45c4	            imul eax, dword [rbp - 0x3c]	      1057	wrstabs.c	FUNCTION_21	ELSE_2
0x4001a6c	          0x8945c0	             mov dword [rbp - 0x40], eax	      1057	wrstabs.c	FUNCTION_21	ELSE_2
0x4001a6f	          0x8b7dc0	             mov edi, dword [rbp - 0x40]	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_11
0x4001a72	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_11
0x4001a75	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_11
0x4001a79	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_11
0x4001a7d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_11
0x4001a81	          0x4189f8	                            mov r8d, edi	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_11
0x4001a84	          0x4889c7	                            mov rdi, rax	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_11
0x4001a87	      0xe893e8ffff	               call sym.stab_push_string	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_11
0x4001a8c	            0x85c0	                           test eax, eax	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_11
0x4001a8e	            0x7507	                           jne 0x4001a97	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_11
0x4001a90	      0xb800000000	                              mov eax, 0	      1059	wrstabs.c	FUNCTION_21	IF_3
0x4001a95	            0xeb11	                           jmp 0x4001aa8	      1059	wrstabs.c	FUNCTION_21	IF_3
0x4001a97	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1061	wrstabs.c	FUNCTION_21	CALL_12
0x4001a9b	          0x4889c7	                            mov rdi, rax	      1061	wrstabs.c	FUNCTION_21	CALL_12
0x4001a9e	      0xe800000000	                          call 0x4001aa3	      1061	wrstabs.c	FUNCTION_21	CALL_12
0x4001aa3	      0xb801000000	                              mov eax, 1	      1063	wrstabs.c	FUNCTION_21
0x4001aa8	        0x4883c468	                           add rsp, 0x68	      1064	wrstabs.c	FUNCTION_21
0x4001aac	              0x5b	                                 pop rbx	      1064	wrstabs.c	FUNCTION_21
0x4001aad	              0x5d	                                 pop rbp	      1064	wrstabs.c	FUNCTION_21
0x4001aae	              0xc3	                                     ret	      1064	wrstabs.c	FUNCTION_21
stab_volatile_type	FOR,0:ELSE,0:DO,0:WHILE,0:IF,0:SWITCH,0:CALL,1:functions,0	17
0x40020e0	              0x55	                                push rbp	      1249	wrstabs.c	FUNCTION_26
0x40020e1	          0x4889e5	                            mov rbp, rsp	      1249	wrstabs.c	FUNCTION_26
0x40020e4	        0x4883ec20	                           sub rsp, 0x20	      1249	wrstabs.c	FUNCTION_26
0x40020e8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1249	wrstabs.c	FUNCTION_26
0x40020ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1250	wrstabs.c	FUNCTION_26
0x40020f0	        0x488945f8	                mov qword [rbp - 8], rax	      1250	wrstabs.c	FUNCTION_26
0x40020f4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x40020f8	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x40020fc	          0x8b5018	            mov edx, dword [rax + 0x18] 	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x40020ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x4002103	    0x41b800000000	                              mov r8d, 0	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x4002109	      0xb900000000	                              mov ecx, 0	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x400210e	      0xbe42000000	                           mov esi, 0x42	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x4002113	          0x4889c7	                            mov rdi, rax	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x4002116	      0xe861f2ffff	               call sym.stab_modify_type	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x400211b	              0xc9	                                   leave	      1254	wrstabs.c	FUNCTION_26
0x400211c	              0xc3	                                     ret	      1254	wrstabs.c	FUNCTION_26
stab_offset_type	FOR,0:ELSE,0:DO,0:WHILE,0:IF,1:SWITCH,0:CALL,10:functions,0	75
0x4001bcf	              0x55	                                push rbp	      1111	wrstabs.c	FUNCTION_23
0x4001bd0	          0x4889e5	                            mov rbp, rsp	      1111	wrstabs.c	FUNCTION_23
0x4001bd3	              0x53	                                push rbx	      1111	wrstabs.c	FUNCTION_23
0x4001bd4	        0x4883ec48	                           sub rsp, 0x48	      1111	wrstabs.c	FUNCTION_23
0x4001bd8	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1111	wrstabs.c	FUNCTION_23
0x4001bdc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1112	wrstabs.c	FUNCTION_23
0x4001be0	        0x488945d0	             mov qword [rbp - 0x30], rax	      1112	wrstabs.c	FUNCTION_23
0x4001be4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1116	wrstabs.c	FUNCTION_23
0x4001be8	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1116	wrstabs.c	FUNCTION_23
0x4001bec	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1116	wrstabs.c	FUNCTION_23
0x4001bef	          0x8945cc	             mov dword [rbp - 0x34], eax	      1116	wrstabs.c	FUNCTION_23
0x4001bf2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1117	wrstabs.c	FUNCTION_23	CALL_1
0x4001bf6	          0x4889c7	                            mov rdi, rax	      1117	wrstabs.c	FUNCTION_23	CALL_1
0x4001bf9	      0xe844e8ffff	                  call sym.stab_pop_type	      1117	wrstabs.c	FUNCTION_23	CALL_1
0x4001bfe	        0x488945d8	             mov qword [rbp - 0x28], rax	      1117	wrstabs.c	FUNCTION_23	CALL_1
0x4001c02	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1119	wrstabs.c	FUNCTION_23
0x4001c06	            0x750f	                           jne 0x4001c17	      1119	wrstabs.c	FUNCTION_23
0x4001c08	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1119	wrstabs.c	FUNCTION_23
0x4001c0c	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1119	wrstabs.c	FUNCTION_23
0x4001c10	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1119	wrstabs.c	FUNCTION_23
0x4001c13	            0x85c0	                           test eax, eax	      1119	wrstabs.c	FUNCTION_23
0x4001c15	            0x7407	                            je 0x4001c1e	      1119	wrstabs.c	FUNCTION_23
0x4001c17	      0xb801000000	                              mov eax, 1	      1119	wrstabs.c	FUNCTION_23
0x4001c1c	            0xeb05	                           jmp 0x4001c23	      1119	wrstabs.c	FUNCTION_23
0x4001c1e	      0xb800000000	                              mov eax, 0	      1119	wrstabs.c	FUNCTION_23
0x4001c23	          0x8945cc	             mov dword [rbp - 0x34], eax	      1119	wrstabs.c	FUNCTION_23
0x4001c26	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1120	wrstabs.c	FUNCTION_23	CALL_2
0x4001c2a	          0x4889c7	                            mov rdi, rax	      1120	wrstabs.c	FUNCTION_23	CALL_2
0x4001c2d	      0xe810e8ffff	                  call sym.stab_pop_type	      1120	wrstabs.c	FUNCTION_23	CALL_2
0x4001c32	        0x488945e0	             mov qword [rbp - 0x20], rax	      1120	wrstabs.c	FUNCTION_23	CALL_2
0x4001c36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4001c3a	          0x4889c7	                            mov rdi, rax	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4001c3d	      0xe800000000	                          call 0x4001c42	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4001c42	          0x4889c3	                            mov rbx, rax	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4001c45	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4001c49	          0x4889c7	                            mov rdi, rax	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4001c4c	      0xe800000000	                          call 0x4001c51	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4001c51	          0x4801d8	                            add rax, rbx	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4001c54	        0x4883c003	                              add rax, 3	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4001c58	          0x4889c7	                            mov rdi, rax	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4001c5b	      0xe800000000	                          call 0x4001c60	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4001c60	        0x488945e8	             mov qword [rbp - 0x18], rax	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4001c64	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1123	wrstabs.c	FUNCTION_23	CALL_6
0x4001c68	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1123	wrstabs.c	FUNCTION_23	CALL_6
0x4001c6c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1123	wrstabs.c	FUNCTION_23	CALL_6
0x4001c70	      0xbe00000000	                              mov esi, 0	      1123	wrstabs.c	FUNCTION_23	CALL_6
0x4001c75	          0x4889c7	                            mov rdi, rax	      1123	wrstabs.c	FUNCTION_23	CALL_6
0x4001c78	      0xb800000000	                              mov eax, 0	      1123	wrstabs.c	FUNCTION_23	CALL_6
0x4001c7d	      0xe800000000	                          call 0x4001c82	      1123	wrstabs.c	FUNCTION_23	CALL_6
0x4001c82	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1124	wrstabs.c	FUNCTION_23	CALL_7
0x4001c86	          0x4889c7	                            mov rdi, rax	      1124	wrstabs.c	FUNCTION_23	CALL_7
0x4001c89	      0xe800000000	                          call 0x4001c8e	      1124	wrstabs.c	FUNCTION_23	CALL_7
0x4001c8e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1125	wrstabs.c	FUNCTION_23	CALL_8
0x4001c92	          0x4889c7	                            mov rdi, rax	      1125	wrstabs.c	FUNCTION_23	CALL_8
0x4001c95	      0xe800000000	                          call 0x4001c9a	      1125	wrstabs.c	FUNCTION_23	CALL_8
0x4001c9a	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_9
0x4001c9d	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_9
0x4001ca1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_9
0x4001ca5	    0x41b800000000	                              mov r8d, 0	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_9
0x4001cab	            0x89d1	                            mov ecx, edx	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_9
0x4001cad	      0xba00000000	                              mov edx, 0	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_9
0x4001cb2	          0x4889c7	                            mov rdi, rax	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_9
0x4001cb5	      0xe865e6ffff	               call sym.stab_push_string	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_9
0x4001cba	            0x85c0	                           test eax, eax	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_9
0x4001cbc	            0x7507	                           jne 0x4001cc5	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_9
0x4001cbe	      0xb800000000	                              mov eax, 0	      1128	wrstabs.c	FUNCTION_23	IF_1
0x4001cc3	            0xeb11	                           jmp 0x4001cd6	      1128	wrstabs.c	FUNCTION_23	IF_1
0x4001cc5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1130	wrstabs.c	FUNCTION_23	CALL_10
0x4001cc9	          0x4889c7	                            mov rdi, rax	      1130	wrstabs.c	FUNCTION_23	CALL_10
0x4001ccc	      0xe800000000	                          call 0x4001cd1	      1130	wrstabs.c	FUNCTION_23	CALL_10
0x4001cd1	      0xb801000000	                              mov eax, 1	      1132	wrstabs.c	FUNCTION_23
0x4001cd6	        0x4883c448	                           add rsp, 0x48	      1133	wrstabs.c	FUNCTION_23
0x4001cda	              0x5b	                                 pop rbx	      1133	wrstabs.c	FUNCTION_23
0x4001cdb	              0x5d	                                 pop rbp	      1133	wrstabs.c	FUNCTION_23
0x4001cdc	              0xc3	                                     ret	      1133	wrstabs.c	FUNCTION_23
stab_end_struct_type	FOR,0:ELSE,0:DO,0:WHILE,0:IF,1:SWITCH,0:CALL,10:functions,0	86
0x4002680	              0x55	                                push rbp	      1412	wrstabs.c	FUNCTION_30
0x4002681	          0x4889e5	                            mov rbp, rsp	      1412	wrstabs.c	FUNCTION_30
0x4002684	              0x53	                                push rbx	      1412	wrstabs.c	FUNCTION_30
0x4002685	        0x4883ec48	                           sub rsp, 0x48	      1412	wrstabs.c	FUNCTION_30
0x4002689	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1412	wrstabs.c	FUNCTION_30
0x400268d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1413	wrstabs.c	FUNCTION_30
0x4002691	        0x488945c8	             mov qword [rbp - 0x38], rax	      1413	wrstabs.c	FUNCTION_30
0x4002695	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4002699	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x400269d	          0x4885c0	                           test rax, rax	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x40026a0	            0x7411	                            je 0x40026b3	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x40026a2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x40026a6	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x40026aa	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x40026ae	          0x4885c0	                           test rax, rax	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x40026b1	            0x7519	                           jne 0x40026cc	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x40026b3	      0xb900000000	                              mov ecx, 0	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x40026b8	      0xba8b050000	                          mov edx, 0x58b	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x40026bd	      0xbe00000000	                              mov esi, 0	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x40026c2	      0xbf00000000	                              mov edi, 0	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x40026c7	      0xe800000000	                          call 0x40026cc	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x40026cc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1421	wrstabs.c	FUNCTION_30
0x40026d0	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1421	wrstabs.c	FUNCTION_30
0x40026d4	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1421	wrstabs.c	FUNCTION_30
0x40026d7	          0x8945c0	             mov dword [rbp - 0x40], eax	      1421	wrstabs.c	FUNCTION_30
0x40026da	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1422	wrstabs.c	FUNCTION_30
0x40026de	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1422	wrstabs.c	FUNCTION_30
0x40026e2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1422	wrstabs.c	FUNCTION_30
0x40026e6	        0x488945d0	             mov qword [rbp - 0x30], rax	      1422	wrstabs.c	FUNCTION_30
0x40026ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1423	wrstabs.c	FUNCTION_30
0x40026ee	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1423	wrstabs.c	FUNCTION_30
0x40026f2	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1423	wrstabs.c	FUNCTION_30
0x40026f5	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1423	wrstabs.c	FUNCTION_30
0x40026f8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1424	wrstabs.c	FUNCTION_30
0x40026fc	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1424	wrstabs.c	FUNCTION_30
0x4002700	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1424	wrstabs.c	FUNCTION_30
0x4002704	        0x488945d8	             mov qword [rbp - 0x28], rax	      1424	wrstabs.c	FUNCTION_30
0x4002708	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1425	wrstabs.c	FUNCTION_30	CALL_2
0x400270c	          0x4889c7	                            mov rdi, rax	      1425	wrstabs.c	FUNCTION_30	CALL_2
0x400270f	      0xe82eddffff	                  call sym.stab_pop_type	      1425	wrstabs.c	FUNCTION_30	CALL_2
0x4002714	        0x488945e0	             mov qword [rbp - 0x20], rax	      1425	wrstabs.c	FUNCTION_30	CALL_2
0x4002718	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x400271c	          0x4889c7	                            mov rdi, rax	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x400271f	      0xe800000000	                          call 0x4002724	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4002724	          0x4889c3	                            mov rbx, rax	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4002727	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x400272b	          0x4889c7	                            mov rdi, rax	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x400272e	      0xe800000000	                          call 0x4002733	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4002733	          0x4801d8	                            add rax, rbx	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4002736	        0x4883c002	                              add rax, 2	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x400273a	          0x4889c7	                            mov rdi, rax	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x400273d	      0xe800000000	                          call 0x4002742	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4002742	        0x488945e8	             mov qword [rbp - 0x18], rax	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4002746	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1428	wrstabs.c	FUNCTION_30	CALL_6
0x400274a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1428	wrstabs.c	FUNCTION_30	CALL_6
0x400274e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1428	wrstabs.c	FUNCTION_30	CALL_6
0x4002752	      0xbe00000000	                              mov esi, 0	      1428	wrstabs.c	FUNCTION_30	CALL_6
0x4002757	          0x4889c7	                            mov rdi, rax	      1428	wrstabs.c	FUNCTION_30	CALL_6
0x400275a	      0xb800000000	                              mov eax, 0	      1428	wrstabs.c	FUNCTION_30	CALL_6
0x400275f	      0xe800000000	                          call 0x4002764	      1428	wrstabs.c	FUNCTION_30	CALL_6
0x4002764	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1429	wrstabs.c	FUNCTION_30	CALL_7
0x4002768	          0x4889c7	                            mov rdi, rax	      1429	wrstabs.c	FUNCTION_30	CALL_7
0x400276b	      0xe800000000	                          call 0x4002770	      1429	wrstabs.c	FUNCTION_30	CALL_7
0x4002770	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1430	wrstabs.c	FUNCTION_30	CALL_8
0x4002774	          0x4889c7	                            mov rdi, rax	      1430	wrstabs.c	FUNCTION_30	CALL_8
0x4002777	      0xe800000000	                          call 0x400277c	      1430	wrstabs.c	FUNCTION_30	CALL_8
0x400277c	          0x8b7dc4	             mov edi, dword [rbp - 0x3c]	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_9
0x400277f	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_9
0x4002782	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_9
0x4002786	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_9
0x400278a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_9
0x400278e	          0x4189f8	                            mov r8d, edi	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_9
0x4002791	          0x4889c7	                            mov rdi, rax	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_9
0x4002794	      0xe886dbffff	               call sym.stab_push_string	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_9
0x4002799	            0x85c0	                           test eax, eax	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_9
0x400279b	            0x7507	                           jne 0x40027a4	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_9
0x400279d	      0xb800000000	                              mov eax, 0	      1433	wrstabs.c	FUNCTION_30	IF_1
0x40027a2	            0xeb11	                           jmp 0x40027b5	      1433	wrstabs.c	FUNCTION_30	IF_1
0x40027a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1435	wrstabs.c	FUNCTION_30	CALL_10
0x40027a8	          0x4889c7	                            mov rdi, rax	      1435	wrstabs.c	FUNCTION_30	CALL_10
0x40027ab	      0xe800000000	                          call 0x40027b0	      1435	wrstabs.c	FUNCTION_30	CALL_10
0x40027b0	      0xb801000000	                              mov eax, 1	      1437	wrstabs.c	FUNCTION_30
0x40027b5	        0x4883c448	                           add rsp, 0x48	      1438	wrstabs.c	FUNCTION_30
0x40027b9	              0x5b	                                 pop rbx	      1438	wrstabs.c	FUNCTION_30
0x40027ba	              0x5d	                                 pop rbp	      1438	wrstabs.c	FUNCTION_30
0x40027bb	              0xc3	                                     ret	      1438	wrstabs.c	FUNCTION_30
stab_class_end_method	FOR,0:ELSE,0:DO,0:WHILE,0:IF,0:SWITCH,0:CALL,2:functions,0	37
0x40030bf	              0x55	                                push rbp	      1761	wrstabs.c	FUNCTION_38
0x40030c0	          0x4889e5	                            mov rbp, rsp	      1761	wrstabs.c	FUNCTION_38
0x40030c3	        0x4883ec20	                           sub rsp, 0x20	      1761	wrstabs.c	FUNCTION_38
0x40030c7	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1761	wrstabs.c	FUNCTION_38
0x40030cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1762	wrstabs.c	FUNCTION_38
0x40030cf	        0x488945f8	                mov qword [rbp - 8], rax	      1762	wrstabs.c	FUNCTION_38
0x40030d3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x40030d7	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x40030db	          0x4885c0	                           test rax, rax	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x40030de	            0x7411	                            je 0x40030f1	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x40030e0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x40030e4	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x40030e8	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x40030ec	          0x4885c0	                           test rax, rax	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x40030ef	            0x7519	                           jne 0x400310a	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x40030f1	      0xb900000000	                              mov ecx, 0	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x40030f6	      0xbae4060000	                          mov edx, 0x6e4	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x40030fb	      0xbe00000000	                              mov esi, 0	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x4003100	      0xbf00000000	                              mov edi, 0	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x4003105	      0xe800000000	                          call 0x400310a	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x400310a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1768	wrstabs.c	FUNCTION_38	CALL_2
0x400310e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1768	wrstabs.c	FUNCTION_38	CALL_2
0x4003112	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1768	wrstabs.c	FUNCTION_38	CALL_2
0x4003116	          0x4889d0	                            mov rax, rdx	      1768	wrstabs.c	FUNCTION_38	CALL_2
0x4003119	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1768	wrstabs.c	FUNCTION_38	CALL_2
0x4003120	          0x4889c6	                            mov rsi, rax	      1768	wrstabs.c	FUNCTION_38	CALL_2
0x4003123	      0xb800000000	                              mov eax, 0	      1768	wrstabs.c	FUNCTION_38	CALL_2
0x4003128	          0x4889f7	                            mov rdi, rsi	      1768	wrstabs.c	FUNCTION_38	CALL_2
0x400312b	            0xf2ae	              repne scasb al, byte [rdi]	      1768	wrstabs.c	FUNCTION_38	CALL_2
0x400312d	          0x4889c8	                            mov rax, rcx	      1768	wrstabs.c	FUNCTION_38	CALL_2
0x4003130	          0x48f7d0	                                 not rax	      1768	wrstabs.c	FUNCTION_38	CALL_2
0x4003133	        0x4883e801	                              sub rax, 1	      1768	wrstabs.c	FUNCTION_38	CALL_2
0x4003137	          0x4801d0	                            add rax, rdx	      1768	wrstabs.c	FUNCTION_38	CALL_2
0x400313a	      0x66c7003b00	                    mov word [rax], 0x3b	      1768	wrstabs.c	FUNCTION_38	CALL_2
0x400313f	      0xb801000000	                              mov eax, 1	      1770	wrstabs.c	FUNCTION_38
0x4003144	              0xc9	                                   leave	      1771	wrstabs.c	FUNCTION_38
0x4003145	              0xc3	                                     ret	      1771	wrstabs.c	FUNCTION_38
stab_int_constant	FOR,0:ELSE,0:DO,0:WHILE,0:IF,1:SWITCH,0:CALL,5:functions,0	40
0x4003850	              0x55	                                push rbp	      1954	wrstabs.c	FUNCTION_44
0x4003851	          0x4889e5	                            mov rbp, rsp	      1954	wrstabs.c	FUNCTION_44
0x4003854	        0x4883ec30	                           sub rsp, 0x30	      1954	wrstabs.c	FUNCTION_44
0x4003858	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1954	wrstabs.c	FUNCTION_44
0x400385c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1954	wrstabs.c	FUNCTION_44
0x4003860	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1954	wrstabs.c	FUNCTION_44
0x4003864	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1955	wrstabs.c	FUNCTION_44
0x4003868	        0x488945f0	             mov qword [rbp - 0x10], rax	      1955	wrstabs.c	FUNCTION_44
0x400386c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x4003870	          0x4889c7	                            mov rdi, rax	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x4003873	      0xe800000000	                          call 0x4003878	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x4003878	        0x4883c014	                           add rax, 0x14	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x400387c	          0x4889c7	                            mov rdi, rax	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x400387f	      0xe800000000	                          call 0x4003884	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x4003884	        0x488945f8	                mov qword [rbp - 8], rax	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x4003888	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1959	wrstabs.c	FUNCTION_44	CALL_3
0x400388c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1959	wrstabs.c	FUNCTION_44	CALL_3
0x4003890	        0x488b45f8	                mov rax, qword [rbp - 8]	      1959	wrstabs.c	FUNCTION_44	CALL_3
0x4003894	      0xbe00000000	                              mov esi, 0	      1959	wrstabs.c	FUNCTION_44	CALL_3
0x4003899	          0x4889c7	                            mov rdi, rax	      1959	wrstabs.c	FUNCTION_44	CALL_3
0x400389c	      0xb800000000	                              mov eax, 0	      1959	wrstabs.c	FUNCTION_44	CALL_3
0x40038a1	      0xe800000000	                          call 0x40038a6	      1959	wrstabs.c	FUNCTION_44	CALL_3
0x40038a6	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_4
0x40038aa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_4
0x40038ae	          0x4989d0	                             mov r8, rdx	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_4
0x40038b1	      0xb900000000	                              mov ecx, 0	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_4
0x40038b6	      0xba00000000	                              mov edx, 0	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_4
0x40038bb	      0xbe80000000	                           mov esi, 0x80	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_4
0x40038c0	          0x4889c7	                            mov rdi, rax	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_4
0x40038c3	      0xe809c8ffff	              call sym.stab_write_symbol	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_4
0x40038c8	            0x85c0	                           test eax, eax	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_4
0x40038ca	            0x7507	                           jne 0x40038d3	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_4
0x40038cc	      0xb800000000	                              mov eax, 0	      1962	wrstabs.c	FUNCTION_44	IF_1
0x40038d1	            0xeb11	                           jmp 0x40038e4	      1962	wrstabs.c	FUNCTION_44	IF_1
0x40038d3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1964	wrstabs.c	FUNCTION_44	CALL_5
0x40038d7	          0x4889c7	                            mov rdi, rax	      1964	wrstabs.c	FUNCTION_44	CALL_5
0x40038da	      0xe800000000	                          call 0x40038df	      1964	wrstabs.c	FUNCTION_44	CALL_5
0x40038df	      0xb801000000	                              mov eax, 1	      1966	wrstabs.c	FUNCTION_44
0x40038e4	              0xc9	                                   leave	      1967	wrstabs.c	FUNCTION_44
0x40038e5	              0xc3	                                     ret	      1967	wrstabs.c	FUNCTION_44
stab_end_function	FOR,0:ELSE,0:DO,0:WHILE,0:IF,0:SWITCH,0:CALL,0:functions,0	6
0x40040ff	              0x55	                                push rbp	      2246	wrstabs.c	FUNCTION_52
0x4004100	          0x4889e5	                            mov rbp, rsp	      2246	wrstabs.c	FUNCTION_52
0x4004103	        0x48897df8	                mov qword [rbp - 8], rdi	      2246	wrstabs.c	FUNCTION_52
0x4004107	      0xb801000000	                              mov eax, 1	      2247	wrstabs.c	FUNCTION_52
0x400410c	              0x5d	                                 pop rbp	      2248	wrstabs.c	FUNCTION_52
0x400410d	              0xc3	                                     ret	      2248	wrstabs.c	FUNCTION_52
stab_function_parameter	FOR,0:ELSE,0:DO,0:WHILE,0:IF,1:SWITCH,1:CALL,9:functions,0	84
0x4003d57	              0x55	                                push rbp	      2112	wrstabs.c	FUNCTION_49
0x4003d58	          0x4889e5	                            mov rbp, rsp	      2112	wrstabs.c	FUNCTION_49
0x4003d5b	              0x53	                                push rbx	      2112	wrstabs.c	FUNCTION_49
0x4003d5c	        0x4883ec48	                           sub rsp, 0x48	      2112	wrstabs.c	FUNCTION_49
0x4003d60	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2112	wrstabs.c	FUNCTION_49
0x4003d64	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2112	wrstabs.c	FUNCTION_49
0x4003d68	          0x8955bc	             mov dword [rbp - 0x44], edx	      2112	wrstabs.c	FUNCTION_49
0x4003d6b	        0x48894db0	             mov qword [rbp - 0x50], rcx	      2112	wrstabs.c	FUNCTION_49
0x4003d6f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2113	wrstabs.c	FUNCTION_49
0x4003d73	        0x488945d8	             mov qword [rbp - 0x28], rax	      2113	wrstabs.c	FUNCTION_49
0x4003d77	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2118	wrstabs.c	FUNCTION_49	CALL_1
0x4003d7b	          0x4889c7	                            mov rdi, rax	      2118	wrstabs.c	FUNCTION_49	CALL_1
0x4003d7e	      0xe8bfc6ffff	                  call sym.stab_pop_type	      2118	wrstabs.c	FUNCTION_49	CALL_1
0x4003d83	        0x488945e0	             mov qword [rbp - 0x20], rax	      2118	wrstabs.c	FUNCTION_49	CALL_1
0x4003d87	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003d8a	          0x83f802	                              cmp eax, 2	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003d8d	            0x7428	                            je 0x4003db7	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003d8f	          0x83f802	                              cmp eax, 2	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003d92	            0x7707	                            ja 0x4003d9b	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003d94	          0x83f801	                              cmp eax, 1	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003d97	            0x7411	                            je 0x4003daa	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003d99	            0xeb0a	                           jmp 0x4003da5	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003d9b	          0x83f803	                              cmp eax, 3	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003d9e	            0x7424	                            je 0x4003dc4	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003da0	          0x83f804	                              cmp eax, 4	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003da3	            0x742c	                            je 0x4003dd1	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003da5	      0xe800000000	                          call 0x4003daa	      2123	wrstabs.c	FUNCTION_49	SWITCH_1	CALL_2
0x4003daa	    0xc745d4a00000	           mov dword [rbp - 0x2c], 0xa0 	      2126	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003db1	        0xc645d370	            mov byte [rbp - 0x2d], 0x70 	      2127	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003db5	            0xeb26	                           jmp 0x4003ddd	      2128	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003db7	    0xc745d4400000	           mov dword [rbp - 0x2c], 0x40 	      2131	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003dbe	        0xc645d350	            mov byte [rbp - 0x2d], 0x50 	      2132	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003dc2	            0xeb19	                           jmp 0x4003ddd	      2133	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003dc4	    0xc745d4a00000	           mov dword [rbp - 0x2c], 0xa0 	      2136	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003dcb	        0xc645d376	            mov byte [rbp - 0x2d], 0x76 	      2137	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003dcf	            0xeb0c	                           jmp 0x4003ddd	      2138	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003dd1	    0xc745d4400000	           mov dword [rbp - 0x2c], 0x40 	      2141	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003dd8	        0xc645d361	            mov byte [rbp - 0x2d], 0x61 	      2142	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003ddc	              0x90	                                     nop	      2143	wrstabs.c	FUNCTION_49	SWITCH_1
0x4003ddd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4003de1	          0x4889c7	                            mov rdi, rax	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4003de4	      0xe800000000	                          call 0x4003de9	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4003de9	          0x4889c3	                            mov rbx, rax	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4003dec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4003df0	          0x4889c7	                            mov rdi, rax	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4003df3	      0xe800000000	                          call 0x4003df8	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4003df8	          0x4801d8	                            add rax, rbx	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4003dfb	        0x4883c003	                              add rax, 3	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4003dff	          0x4889c7	                            mov rdi, rax	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4003e02	      0xe800000000	                          call 0x4003e07	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4003e07	        0x488945e8	             mov qword [rbp - 0x18], rax	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4003e0b	         0xfbe4dd3	            movsx ecx, byte [rbp - 0x2d]	      2147	wrstabs.c	FUNCTION_49	CALL_6
0x4003e0f	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      2147	wrstabs.c	FUNCTION_49	CALL_6
0x4003e13	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2147	wrstabs.c	FUNCTION_49	CALL_6
0x4003e17	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2147	wrstabs.c	FUNCTION_49	CALL_6
0x4003e1b	          0x4989f0	                             mov r8, rsi	      2147	wrstabs.c	FUNCTION_49	CALL_6
0x4003e1e	      0xbe00000000	                              mov esi, 0	      2147	wrstabs.c	FUNCTION_49	CALL_6
0x4003e23	          0x4889c7	                            mov rdi, rax	      2147	wrstabs.c	FUNCTION_49	CALL_6
0x4003e26	      0xb800000000	                              mov eax, 0	      2147	wrstabs.c	FUNCTION_49	CALL_6
0x4003e2b	      0xe800000000	                          call 0x4003e30	      2147	wrstabs.c	FUNCTION_49	CALL_6
0x4003e30	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2148	wrstabs.c	FUNCTION_49	CALL_7
0x4003e34	          0x4889c7	                            mov rdi, rax	      2148	wrstabs.c	FUNCTION_49	CALL_7
0x4003e37	      0xe800000000	                          call 0x4003e3c	      2148	wrstabs.c	FUNCTION_49	CALL_7
0x4003e3c	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_8
0x4003e40	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_8
0x4003e44	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_8
0x4003e47	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_8
0x4003e4b	          0x4989c8	                             mov r8, rcx	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_8
0x4003e4e	          0x4889d1	                            mov rcx, rdx	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_8
0x4003e51	      0xba00000000	                              mov edx, 0	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_8
0x4003e56	          0x4889c7	                            mov rdi, rax	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_8
0x4003e59	      0xe873c2ffff	              call sym.stab_write_symbol	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_8
0x4003e5e	            0x85c0	                           test eax, eax	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_8
0x4003e60	            0x7507	                           jne 0x4003e69	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_8
0x4003e62	      0xb800000000	                              mov eax, 0	      2151	wrstabs.c	FUNCTION_49	IF_1
0x4003e67	            0xeb11	                           jmp 0x4003e7a	      2151	wrstabs.c	FUNCTION_49	IF_1
0x4003e69	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2153	wrstabs.c	FUNCTION_49	CALL_9
0x4003e6d	          0x4889c7	                            mov rdi, rax	      2153	wrstabs.c	FUNCTION_49	CALL_9
0x4003e70	      0xe800000000	                          call 0x4003e75	      2153	wrstabs.c	FUNCTION_49	CALL_9
0x4003e75	      0xb801000000	                              mov eax, 1	      2155	wrstabs.c	FUNCTION_49
0x4003e7a	        0x4883c448	                           add rsp, 0x48	      2156	wrstabs.c	FUNCTION_49
0x4003e7e	              0x5b	                                 pop rbx	      2156	wrstabs.c	FUNCTION_49
0x4003e7f	              0x5d	                                 pop rbp	      2156	wrstabs.c	FUNCTION_49
0x4003e80	              0xc3	                                     ret	      2156	wrstabs.c	FUNCTION_49
stab_complex_type	FOR,0:ELSE,0:DO,0:WHILE,0:IF,0:SWITCH,0:CALL,2:functions,0	42
0x4000fc0	              0x55	                                push rbp	       731	wrstabs.c	FUNCTION_13
0x4000fc1	          0x4889e5	                            mov rbp, rsp	       731	wrstabs.c	FUNCTION_13
0x4000fc4	        0x4883ec60	                           sub rsp, 0x60	       731	wrstabs.c	FUNCTION_13
0x4000fc8	        0x48897da8	             mov qword [rbp - 0x58], rdi	       731	wrstabs.c	FUNCTION_13
0x4000fcc	          0x8975a4	             mov dword [rbp - 0x5c], esi	       731	wrstabs.c	FUNCTION_13
0x4000fcf	    0x64488b042528	                mov rax, qword fs:[0x28]	       731	wrstabs.c	FUNCTION_13
0x4000fd8	        0x488945f8	                mov qword [rbp - 8], rax	       731	wrstabs.c	FUNCTION_13
0x4000fdc	            0x31c0	                            xor eax, eax	       731	wrstabs.c	FUNCTION_13
0x4000fde	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       732	wrstabs.c	FUNCTION_13
0x4000fe2	        0x488945b0	             mov qword [rbp - 0x50], rax	       732	wrstabs.c	FUNCTION_13
0x4000fe6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       736	wrstabs.c	FUNCTION_13
0x4000fea	        0x488b4068	            mov rax, qword [rax + 0x68] 	       736	wrstabs.c	FUNCTION_13
0x4000fee	        0x488945b8	             mov qword [rbp - 0x48], rax	       736	wrstabs.c	FUNCTION_13
0x4000ff2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       737	wrstabs.c	FUNCTION_13
0x4000ff6	        0x488b4068	            mov rax, qword [rax + 0x68] 	       737	wrstabs.c	FUNCTION_13
0x4000ffa	        0x488d5001	                      lea rdx, [rax + 1]	       737	wrstabs.c	FUNCTION_13
0x4000ffe	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       737	wrstabs.c	FUNCTION_13
0x4001002	        0x48895068	             mov qword [rax + 0x68], rdx	       737	wrstabs.c	FUNCTION_13
0x4001006	          0x8b75a4	             mov esi, dword [rbp - 0x5c]	       739	wrstabs.c	FUNCTION_13	CALL_1
0x4001009	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       739	wrstabs.c	FUNCTION_13	CALL_1
0x400100d	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       739	wrstabs.c	FUNCTION_13	CALL_1
0x4001011	        0x488d45c0	                   lea rax, [rbp - 0x40]	       739	wrstabs.c	FUNCTION_13	CALL_1
0x4001015	          0x4189f0	                            mov r8d, esi	       739	wrstabs.c	FUNCTION_13	CALL_1
0x4001018	      0xbe00000000	                              mov esi, 0	       739	wrstabs.c	FUNCTION_13	CALL_1
0x400101d	          0x4889c7	                            mov rdi, rax	       739	wrstabs.c	FUNCTION_13	CALL_1
0x4001020	      0xb800000000	                              mov eax, 0	       739	wrstabs.c	FUNCTION_13	CALL_1
0x4001025	      0xe800000000	                          call 0x400102a	       739	wrstabs.c	FUNCTION_13	CALL_1
0x400102a	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       741	wrstabs.c	FUNCTION_13	CALL_2
0x400102d	          0x8d0c00	                    lea ecx, [rax + rax]	       741	wrstabs.c	FUNCTION_13	CALL_2
0x4001030	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       741	wrstabs.c	FUNCTION_13	CALL_2
0x4001034	        0x488d75c0	                   lea rsi, [rbp - 0x40]	       741	wrstabs.c	FUNCTION_13	CALL_2
0x4001038	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       741	wrstabs.c	FUNCTION_13	CALL_2
0x400103c	          0x4189c8	                            mov r8d, ecx	       741	wrstabs.c	FUNCTION_13	CALL_2
0x400103f	      0xb901000000	                              mov ecx, 1	       741	wrstabs.c	FUNCTION_13	CALL_2
0x4001044	          0x4889c7	                            mov rdi, rax	       741	wrstabs.c	FUNCTION_13	CALL_2
0x4001047	      0xe8d3f2ffff	               call sym.stab_push_string	       741	wrstabs.c	FUNCTION_13	CALL_2
0x400104c	        0x488b7df8	                mov rdi, qword [rbp - 8]	       742	wrstabs.c	FUNCTION_13
0x4001050	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       742	wrstabs.c	FUNCTION_13
0x4001059	            0x7405	                            je 0x4001060	       742	wrstabs.c	FUNCTION_13
0x400105b	      0xe800000000	                          call 0x4001060	       742	wrstabs.c	FUNCTION_13
0x4001060	              0xc9	                                   leave	       742	wrstabs.c	FUNCTION_13
0x4001061	              0xc3	                                     ret	       742	wrstabs.c	FUNCTION_13
stab_get_struct_index	FOR,0:ELSE,1:DO,0:WHILE,1:IF,4:SWITCH,0:CALL,2:functions,0	156
0x400211d	              0x55	                                push rbp	      1263	wrstabs.c	FUNCTION_27
0x400211e	          0x4889e5	                            mov rbp, rsp	      1263	wrstabs.c	FUNCTION_27
0x4002121	        0x4883ec30	                           sub rsp, 0x30	      1263	wrstabs.c	FUNCTION_27
0x4002125	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1263	wrstabs.c	FUNCTION_27
0x4002129	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1263	wrstabs.c	FUNCTION_27
0x400212d	          0x8955dc	             mov dword [rbp - 0x24], edx	      1263	wrstabs.c	FUNCTION_27
0x4002130	          0x894dd8	             mov dword [rbp - 0x28], ecx	      1263	wrstabs.c	FUNCTION_27
0x4002133	        0x4c8945d0	              mov qword [rbp - 0x30], r8	      1263	wrstabs.c	FUNCTION_27
0x4002137	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1264	wrstabs.c	FUNCTION_27	IF_1
0x400213a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1264	wrstabs.c	FUNCTION_27	IF_1
0x400213e	    0x488b80b00100	           mov rax, qword [rax + 0x1b0] 	      1264	wrstabs.c	FUNCTION_27	IF_1
0x4002145	          0x4839c2	                            cmp rdx, rax	      1264	wrstabs.c	FUNCTION_27	IF_1
0x4002148	     0xf82cc000000	                            jb 0x400221a	      1264	wrstabs.c	FUNCTION_27	IF_1
0x400214e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1268	wrstabs.c	FUNCTION_27	IF_1
0x4002152	    0x488b80b00100	           mov rax, qword [rax + 0x1b0] 	      1268	wrstabs.c	FUNCTION_27	IF_1
0x4002159	        0x488945f8	                mov qword [rbp - 8], rax	      1268	wrstabs.c	FUNCTION_27	IF_1
0x400215d	      0x48837df800	                  cmp qword [rbp - 8], 0	      1269	wrstabs.c	FUNCTION_27	IF_1	IF_2
0x4002162	            0x750e	                           jne 0x4002172	      1269	wrstabs.c	FUNCTION_27	IF_1	IF_2
0x4002164	    0x48c745f80a00	                mov qword [rbp - 8], 0xa	      1270	wrstabs.c	FUNCTION_27	IF_1	IF_2
0x400216c	            0xeb04	                           jmp 0x4002172	      1271	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x400216e	        0x48d165f8	                  shl qword [rbp - 8], 1	      1272	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x4002172	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1271	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x4002175	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1271	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x4002179	            0x73f3	                           jae 0x400216e	      1271	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x400217b	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x400217f	          0x4889d0	                            mov rax, rdx	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x4002182	          0x4801c0	                            add rax, rax	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x4002185	          0x4801d0	                            add rax, rdx	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x4002188	        0x48c1e003	                              shl rax, 3	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x400218c	          0x4889c2	                            mov rdx, rax	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x400218f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x4002193	    0x488b80a80100	           mov rax, qword [rax + 0x1a8] 	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x400219a	          0x4889d6	                            mov rsi, rdx	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x400219d	          0x4889c7	                            mov rdi, rax	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x40021a0	      0xe800000000	                          call 0x40021a5	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x40021a5	          0x4889c2	                            mov rdx, rax	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x40021a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1273	wrstabs.c	FUNCTION_27	IF_1
0x40021ac	    0x488990a80100	            mov qword [rax + 0x1a8], rdx	      1273	wrstabs.c	FUNCTION_27	IF_1
0x40021b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1279	wrstabs.c	FUNCTION_27	IF_1
0x40021b7	    0x488b80b00100	           mov rax, qword [rax + 0x1b0] 	      1279	wrstabs.c	FUNCTION_27	IF_1
0x40021be	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1279	wrstabs.c	FUNCTION_27	IF_1
0x40021c2	          0x4829c2	                            sub rdx, rax	      1279	wrstabs.c	FUNCTION_27	IF_1
0x40021c5	          0x4889d0	                            mov rax, rdx	      1276	wrstabs.c	FUNCTION_27	IF_1	CALL_2
0x40021c8	          0x4801c0	                            add rax, rax	      1276	wrstabs.c	FUNCTION_27	IF_1	CALL_2
0x40021cb	          0x4801d0	                            add rax, rdx	      1276	wrstabs.c	FUNCTION_27	IF_1	CALL_2
0x40021ce	        0x48c1e003	                              shl rax, 3	      1276	wrstabs.c	FUNCTION_27	IF_1	CALL_2
0x40021d2	          0x4889c6	                            mov rsi, rax	      1276	wrstabs.c	FUNCTION_27	IF_1	CALL_2
0x40021d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1276	wrstabs.c	FUNCTION_27	IF_1	CALL_2
0x40021d9	    0x488b88a80100	           mov rcx, qword [rax + 0x1a8] 	      1276	wrstabs.c	FUNCTION_27	IF_1	CALL_2
0x40021e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1277	wrstabs.c	FUNCTION_27	IF_1
0x40021e4	    0x488b90b00100	           mov rdx, qword [rax + 0x1b0] 	      1277	wrstabs.c	FUNCTION_27	IF_1
0x40021eb	          0x4889d0	                            mov rax, rdx	      1277	wrstabs.c	FUNCTION_27	IF_1
0x40021ee	          0x4801c0	                            add rax, rax	      1277	wrstabs.c	FUNCTION_27	IF_1
0x40021f1	          0x4801d0	                            add rax, rdx	      1277	wrstabs.c	FUNCTION_27	IF_1
0x40021f4	        0x48c1e003	                              shl rax, 3	      1277	wrstabs.c	FUNCTION_27	IF_1
0x40021f8	          0x4801c8	                            add rax, rcx	      1276	wrstabs.c	FUNCTION_27	IF_1	CALL_2
0x40021fb	          0x4889f2	                            mov rdx, rsi	      1276	wrstabs.c	FUNCTION_27	IF_1	CALL_2
0x40021fe	      0xbe00000000	                              mov esi, 0	      1276	wrstabs.c	FUNCTION_27	IF_1	CALL_2
0x4002203	          0x4889c7	                            mov rdi, rax	      1276	wrstabs.c	FUNCTION_27	IF_1	CALL_2
0x4002206	      0xe800000000	                          call 0x400220b	      1276	wrstabs.c	FUNCTION_27	IF_1	CALL_2
0x400220b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1281	wrstabs.c	FUNCTION_27	IF_1
0x400220f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1281	wrstabs.c	FUNCTION_27	IF_1
0x4002213	    0x488990b00100	            mov qword [rax + 0x1b0], rdx	      1281	wrstabs.c	FUNCTION_27	IF_1
0x400221a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1284	wrstabs.c	FUNCTION_27	IF_3
0x400221e	    0x488b88a80100	           mov rcx, qword [rax + 0x1a8] 	      1284	wrstabs.c	FUNCTION_27	IF_3
0x4002225	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1284	wrstabs.c	FUNCTION_27	IF_3
0x4002228	          0x4889d0	                            mov rax, rdx	      1284	wrstabs.c	FUNCTION_27	IF_3
0x400222b	          0x4801c0	                            add rax, rax	      1284	wrstabs.c	FUNCTION_27	IF_3
0x400222e	          0x4801d0	                            add rax, rdx	      1284	wrstabs.c	FUNCTION_27	IF_3
0x4002231	        0x48c1e003	                              shl rax, 3	      1284	wrstabs.c	FUNCTION_27	IF_3
0x4002235	          0x4801c8	                            add rax, rcx	      1284	wrstabs.c	FUNCTION_27	IF_3
0x4002238	          0x488b00	                    mov rax, qword [rax]	      1284	wrstabs.c	FUNCTION_27	IF_3
0x400223b	          0x4885c0	                           test rax, rax	      1284	wrstabs.c	FUNCTION_27	IF_3
0x400223e	     0xf858a000000	                           jne 0x40022ce	      1284	wrstabs.c	FUNCTION_27	IF_3
0x4002244	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1286	wrstabs.c	FUNCTION_27	IF_3
0x4002248	    0x488b88a80100	           mov rcx, qword [rax + 0x1a8] 	      1286	wrstabs.c	FUNCTION_27	IF_3
0x400224f	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1286	wrstabs.c	FUNCTION_27	IF_3
0x4002252	          0x4889d0	                            mov rax, rdx	      1286	wrstabs.c	FUNCTION_27	IF_3
0x4002255	          0x4801c0	                            add rax, rax	      1286	wrstabs.c	FUNCTION_27	IF_3
0x4002258	          0x4801d0	                            add rax, rdx	      1286	wrstabs.c	FUNCTION_27	IF_3
0x400225b	        0x48c1e003	                              shl rax, 3	      1286	wrstabs.c	FUNCTION_27	IF_3
0x400225f	        0x488d1401	                    lea rdx, [rcx + rax]	      1286	wrstabs.c	FUNCTION_27	IF_3
0x4002263	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1286	wrstabs.c	FUNCTION_27	IF_3
0x4002267	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1286	wrstabs.c	FUNCTION_27	IF_3
0x400226b	          0x488902	                    mov qword [rdx], rax	      1286	wrstabs.c	FUNCTION_27	IF_3
0x400226e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1287	wrstabs.c	FUNCTION_27	IF_3
0x4002272	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1287	wrstabs.c	FUNCTION_27	IF_3
0x4002276	        0x488d5001	                      lea rdx, [rax + 1]	      1287	wrstabs.c	FUNCTION_27	IF_3
0x400227a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1287	wrstabs.c	FUNCTION_27	IF_3
0x400227e	        0x48895068	             mov qword [rax + 0x68], rdx	      1287	wrstabs.c	FUNCTION_27	IF_3
0x4002282	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1288	wrstabs.c	FUNCTION_27	IF_3
0x4002286	    0x488b88a80100	           mov rcx, qword [rax + 0x1a8] 	      1288	wrstabs.c	FUNCTION_27	IF_3
0x400228d	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1288	wrstabs.c	FUNCTION_27	IF_3
0x4002290	          0x4889d0	                            mov rax, rdx	      1288	wrstabs.c	FUNCTION_27	IF_3
0x4002293	          0x4801c0	                            add rax, rax	      1288	wrstabs.c	FUNCTION_27	IF_3
0x4002296	          0x4801d0	                            add rax, rdx	      1288	wrstabs.c	FUNCTION_27	IF_3
0x4002299	        0x48c1e003	                              shl rax, 3	      1288	wrstabs.c	FUNCTION_27	IF_3
0x400229d	        0x488d1401	                    lea rdx, [rcx + rax]	      1288	wrstabs.c	FUNCTION_27	IF_3
0x40022a1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1288	wrstabs.c	FUNCTION_27	IF_3
0x40022a5	        0x48894208	                mov qword [rdx + 8], rax	      1288	wrstabs.c	FUNCTION_27	IF_3
0x40022a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1289	wrstabs.c	FUNCTION_27	IF_3
0x40022ad	    0x488b88a80100	           mov rcx, qword [rax + 0x1a8] 	      1289	wrstabs.c	FUNCTION_27	IF_3
0x40022b4	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1289	wrstabs.c	FUNCTION_27	IF_3
0x40022b7	          0x4889d0	                            mov rax, rdx	      1289	wrstabs.c	FUNCTION_27	IF_3
0x40022ba	          0x4801c0	                            add rax, rax	      1289	wrstabs.c	FUNCTION_27	IF_3
0x40022bd	          0x4801d0	                            add rax, rdx	      1289	wrstabs.c	FUNCTION_27	IF_3
0x40022c0	        0x48c1e003	                              shl rax, 3	      1289	wrstabs.c	FUNCTION_27	IF_3
0x40022c4	        0x488d1401	                    lea rdx, [rcx + rax]	      1289	wrstabs.c	FUNCTION_27	IF_3
0x40022c8	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1289	wrstabs.c	FUNCTION_27	IF_3
0x40022cb	          0x894210	             mov dword [rdx + 0x10], eax	      1289	wrstabs.c	FUNCTION_27	IF_3
0x40022ce	        0x837dd800	               cmp dword [rbp - 0x28], 0	      1292	wrstabs.c	FUNCTION_27	IF_4
0x40022d2	            0x754f	                           jne 0x4002323	      1292	wrstabs.c	FUNCTION_27	IF_4
0x40022d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1295	wrstabs.c	FUNCTION_27	IF_4
0x40022d8	    0x488b88a80100	           mov rcx, qword [rax + 0x1a8] 	      1295	wrstabs.c	FUNCTION_27	IF_4
0x40022df	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1295	wrstabs.c	FUNCTION_27	IF_4
0x40022e2	          0x4889d0	                            mov rax, rdx	      1295	wrstabs.c	FUNCTION_27	IF_4
0x40022e5	          0x4801c0	                            add rax, rax	      1295	wrstabs.c	FUNCTION_27	IF_4
0x40022e8	          0x4801d0	                            add rax, rdx	      1295	wrstabs.c	FUNCTION_27	IF_4
0x40022eb	        0x48c1e003	                              shl rax, 3	      1295	wrstabs.c	FUNCTION_27	IF_4
0x40022ef	        0x488d1401	                    lea rdx, [rcx + rax]	      1295	wrstabs.c	FUNCTION_27	IF_4
0x40022f3	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1295	wrstabs.c	FUNCTION_27	IF_4
0x40022f6	          0x894210	             mov dword [rdx + 0x10], eax	      1295	wrstabs.c	FUNCTION_27	IF_4
0x40022f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1296	wrstabs.c	FUNCTION_27	IF_4
0x40022fd	    0x488b88a80100	           mov rcx, qword [rax + 0x1a8] 	      1296	wrstabs.c	FUNCTION_27	IF_4
0x4002304	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1296	wrstabs.c	FUNCTION_27	IF_4
0x4002307	          0x4889d0	                            mov rax, rdx	      1296	wrstabs.c	FUNCTION_27	IF_4
0x400230a	          0x4801c0	                            add rax, rax	      1296	wrstabs.c	FUNCTION_27	IF_4
0x400230d	          0x4801d0	                            add rax, rdx	      1296	wrstabs.c	FUNCTION_27	IF_4
0x4002310	        0x48c1e003	                              shl rax, 3	      1296	wrstabs.c	FUNCTION_27	IF_4
0x4002314	        0x488d1401	                    lea rdx, [rcx + rax]	      1296	wrstabs.c	FUNCTION_27	IF_4
0x4002318	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1296	wrstabs.c	FUNCTION_27	IF_4
0x400231c	            0x8b00	                    mov eax, dword [rax]	      1296	wrstabs.c	FUNCTION_27	IF_4
0x400231e	          0x894214	             mov dword [rdx + 0x14], eax	      1296	wrstabs.c	FUNCTION_27	IF_4
0x4002321	            0xeb27	                           jmp 0x400234a	      1296	wrstabs.c	FUNCTION_27	IF_4
0x4002323	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1299	wrstabs.c	FUNCTION_27	ELSE_1
0x4002327	    0x488b88a80100	           mov rcx, qword [rax + 0x1a8] 	      1299	wrstabs.c	FUNCTION_27	ELSE_1
0x400232e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1299	wrstabs.c	FUNCTION_27	ELSE_1
0x4002331	          0x4889d0	                            mov rax, rdx	      1299	wrstabs.c	FUNCTION_27	ELSE_1
0x4002334	          0x4801c0	                            add rax, rax	      1299	wrstabs.c	FUNCTION_27	ELSE_1
0x4002337	          0x4801d0	                            add rax, rdx	      1299	wrstabs.c	FUNCTION_27	ELSE_1
0x400233a	        0x48c1e003	                              shl rax, 3	      1299	wrstabs.c	FUNCTION_27	ELSE_1
0x400233e	          0x4801c8	                            add rax, rcx	      1299	wrstabs.c	FUNCTION_27	ELSE_1
0x4002341	          0x8b5014	            mov edx, dword [rax + 0x14] 	      1299	wrstabs.c	FUNCTION_27	ELSE_1
0x4002344	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1299	wrstabs.c	FUNCTION_27	ELSE_1
0x4002348	            0x8910	                    mov dword [rax], edx	      1299	wrstabs.c	FUNCTION_27	ELSE_1
0x400234a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1301	wrstabs.c	FUNCTION_27	ELSE_1
0x400234e	    0x488b88a80100	           mov rcx, qword [rax + 0x1a8] 	      1301	wrstabs.c	FUNCTION_27	ELSE_1
0x4002355	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1301	wrstabs.c	FUNCTION_27	ELSE_1
0x4002358	          0x4889d0	                            mov rax, rdx	      1301	wrstabs.c	FUNCTION_27	ELSE_1
0x400235b	          0x4801c0	                            add rax, rax	      1301	wrstabs.c	FUNCTION_27	ELSE_1
0x400235e	          0x4801d0	                            add rax, rdx	      1301	wrstabs.c	FUNCTION_27	ELSE_1
0x4002361	        0x48c1e003	                              shl rax, 3	      1301	wrstabs.c	FUNCTION_27	ELSE_1
0x4002365	          0x4801c8	                            add rax, rcx	      1301	wrstabs.c	FUNCTION_27	ELSE_1
0x4002368	          0x488b00	                    mov rax, qword [rax]	      1301	wrstabs.c	FUNCTION_27	ELSE_1
0x400236b	              0xc9	                                   leave	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x400236c	              0xc3	                                     ret	      1302	wrstabs.c	FUNCTION_27	ELSE_1
stab_const_type	FOR,0:ELSE,0:DO,0:WHILE,0:IF,0:SWITCH,0:CALL,1:functions,0	17
0x40020a3	              0x55	                                push rbp	      1238	wrstabs.c	FUNCTION_25
0x40020a4	          0x4889e5	                            mov rbp, rsp	      1238	wrstabs.c	FUNCTION_25
0x40020a7	        0x4883ec20	                           sub rsp, 0x20	      1238	wrstabs.c	FUNCTION_25
0x40020ab	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1238	wrstabs.c	FUNCTION_25
0x40020af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1239	wrstabs.c	FUNCTION_25
0x40020b3	        0x488945f8	                mov qword [rbp - 8], rax	      1239	wrstabs.c	FUNCTION_25
0x40020b7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x40020bb	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x40020bf	          0x8b5018	            mov edx, dword [rax + 0x18] 	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x40020c2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x40020c6	    0x41b800000000	                              mov r8d, 0	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x40020cc	      0xb900000000	                              mov ecx, 0	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x40020d1	      0xbe6b000000	                           mov esi, 0x6b	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x40020d6	          0x4889c7	                            mov rdi, rax	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x40020d9	      0xe89ef2ffff	               call sym.stab_modify_type	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x40020de	              0xc9	                                   leave	      1243	wrstabs.c	FUNCTION_25
0x40020df	              0xc3	                                     ret	      1243	wrstabs.c	FUNCTION_25
stab_float_type	FOR,0:ELSE,1:DO,0:WHILE,0:IF,3:SWITCH,0:CALL,6:functions,0	96
0x4000e60	              0x55	                                push rbp	       690	wrstabs.c	FUNCTION_12
0x4000e61	          0x4889e5	                            mov rbp, rsp	       690	wrstabs.c	FUNCTION_12
0x4000e64	        0x4883ec70	                           sub rsp, 0x70	       690	wrstabs.c	FUNCTION_12
0x4000e68	        0x48897d98	             mov qword [rbp - 0x68], rdi	       690	wrstabs.c	FUNCTION_12
0x4000e6c	          0x897594	             mov dword [rbp - 0x6c], esi	       690	wrstabs.c	FUNCTION_12
0x4000e6f	    0x64488b042528	                mov rax, qword fs:[0x28]	       690	wrstabs.c	FUNCTION_12
0x4000e78	        0x488945f8	                mov qword [rbp - 8], rax	       690	wrstabs.c	FUNCTION_12
0x4000e7c	            0x31c0	                            xor eax, eax	       690	wrstabs.c	FUNCTION_12
0x4000e7e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       691	wrstabs.c	FUNCTION_12
0x4000e82	        0x488945a8	             mov qword [rbp - 0x58], rax	       691	wrstabs.c	FUNCTION_12
0x4000e86	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       693	wrstabs.c	FUNCTION_12	IF_1
0x4000e8a	            0x7451	                            je 0x4000edd	       693	wrstabs.c	FUNCTION_12	IF_1
0x4000e8c	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       694	wrstabs.c	FUNCTION_12	IF_1
0x4000e8f	          0x83e801	                              sub eax, 1	       694	wrstabs.c	FUNCTION_12	IF_1
0x4000e92	          0x83f80f	                            cmp eax, 0xf	       694	wrstabs.c	FUNCTION_12	IF_1
0x4000e95	            0x7746	                            ja 0x4000edd	       694	wrstabs.c	FUNCTION_12	IF_1
0x4000e97	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       696	wrstabs.c	FUNCTION_12	IF_1
0x4000e9a	          0x8d50ff	                      lea edx, [rax - 1]	       696	wrstabs.c	FUNCTION_12	IF_1
0x4000e9d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       696	wrstabs.c	FUNCTION_12	IF_1
0x4000ea1	            0x89d2	                            mov edx, edx	       696	wrstabs.c	FUNCTION_12	IF_1
0x4000ea3	        0x4883c21e	                           add rdx, 0x1e	       696	wrstabs.c	FUNCTION_12	IF_1
0x4000ea7	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       696	wrstabs.c	FUNCTION_12	IF_1
0x4000eac	          0x4885c0	                           test rax, rax	       696	wrstabs.c	FUNCTION_12	IF_1
0x4000eaf	            0x742c	                            je 0x4000edd	       696	wrstabs.c	FUNCTION_12	IF_1
0x4000eb1	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       698	wrstabs.c	FUNCTION_12	IF_1
0x4000eb4	          0x8d50ff	                      lea edx, [rax - 1]	       698	wrstabs.c	FUNCTION_12	IF_1
0x4000eb7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       697	wrstabs.c	FUNCTION_12	IF_1	CALL_1
0x4000ebb	            0x89d2	                            mov edx, edx	       697	wrstabs.c	FUNCTION_12	IF_1	CALL_1
0x4000ebd	        0x4883c21e	                           add rdx, 0x1e	       697	wrstabs.c	FUNCTION_12	IF_1	CALL_1
0x4000ec1	      0x488b4cd008	       mov rcx, qword [rax + rdx*8 + 8] 	       697	wrstabs.c	FUNCTION_12	IF_1	CALL_1
0x4000ec6	          0x8b5594	             mov edx, dword [rbp - 0x6c]	       697	wrstabs.c	FUNCTION_12	IF_1	CALL_1
0x4000ec9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       697	wrstabs.c	FUNCTION_12	IF_1	CALL_1
0x4000ecd	          0x4889ce	                            mov rsi, rcx	       697	wrstabs.c	FUNCTION_12	IF_1	CALL_1
0x4000ed0	          0x4889c7	                            mov rdi, rax	       697	wrstabs.c	FUNCTION_12	IF_1	CALL_1
0x4000ed3	      0xe8f9f4ffff	         call sym.stab_push_defined_type	       697	wrstabs.c	FUNCTION_12	IF_1	CALL_1
0x4000ed8	      0xe9cd000000	                           jmp 0x4000faa	       697	wrstabs.c	FUNCTION_12	IF_1	CALL_1
0x4000edd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4000ee1	      0xba00000000	                              mov edx, 0	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4000ee6	      0xbe04000000	                              mov esi, 4	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4000eeb	          0x4889c7	                            mov rdi, rax	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4000eee	      0xe857fbffff	                  call sym.stab_int_type	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4000ef3	            0x85c0	                           test eax, eax	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4000ef5	            0x750a	                           jne 0x4000f01	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4000ef7	      0xb800000000	                              mov eax, 0	       708	wrstabs.c	FUNCTION_12	ELSE_1	IF_2
0x4000efc	      0xe9a9000000	                           jmp 0x4000faa	       708	wrstabs.c	FUNCTION_12	ELSE_1	IF_2
0x4000f01	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       709	wrstabs.c	FUNCTION_12	ELSE_1	CALL_3
0x4000f05	          0x4889c7	                            mov rdi, rax	       709	wrstabs.c	FUNCTION_12	ELSE_1	CALL_3
0x4000f08	      0xe835f5ffff	                  call sym.stab_pop_type	       709	wrstabs.c	FUNCTION_12	ELSE_1	CALL_3
0x4000f0d	        0x488945b0	             mov qword [rbp - 0x50], rax	       709	wrstabs.c	FUNCTION_12	ELSE_1	CALL_3
0x4000f11	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       711	wrstabs.c	FUNCTION_12	ELSE_1
0x4000f15	        0x488b4068	            mov rax, qword [rax + 0x68] 	       711	wrstabs.c	FUNCTION_12	ELSE_1
0x4000f19	        0x488945b8	             mov qword [rbp - 0x48], rax	       711	wrstabs.c	FUNCTION_12	ELSE_1
0x4000f1d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       712	wrstabs.c	FUNCTION_12	ELSE_1
0x4000f21	        0x488b4068	            mov rax, qword [rax + 0x68] 	       712	wrstabs.c	FUNCTION_12	ELSE_1
0x4000f25	        0x488d5001	                      lea rdx, [rax + 1]	       712	wrstabs.c	FUNCTION_12	ELSE_1
0x4000f29	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       712	wrstabs.c	FUNCTION_12	ELSE_1
0x4000f2d	        0x48895068	             mov qword [rax + 0x68], rdx	       712	wrstabs.c	FUNCTION_12	ELSE_1
0x4000f31	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       714	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x4000f35	            0x7424	                            je 0x4000f5b	       714	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x4000f37	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       715	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x4000f3a	          0x83e801	                              sub eax, 1	       715	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x4000f3d	          0x83f80f	                            cmp eax, 0xf	       715	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x4000f40	            0x7719	                            ja 0x4000f5b	       715	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x4000f42	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       717	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x4000f45	          0x8d50ff	                      lea edx, [rax - 1]	       717	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x4000f48	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       717	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x4000f4c	            0x89d2	                            mov edx, edx	       717	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x4000f4e	        0x488d4a1e	                   lea rcx, [rdx + 0x1e]	       717	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x4000f52	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       717	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x4000f56	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	       717	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x4000f5b	          0x8b7594	             mov esi, dword [rbp - 0x6c]	       719	wrstabs.c	FUNCTION_12	ELSE_1	CALL_4
0x4000f5e	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       719	wrstabs.c	FUNCTION_12	ELSE_1	CALL_4
0x4000f62	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       719	wrstabs.c	FUNCTION_12	ELSE_1	CALL_4
0x4000f66	        0x488d45c0	                   lea rax, [rbp - 0x40]	       719	wrstabs.c	FUNCTION_12	ELSE_1	CALL_4
0x4000f6a	          0x4189f0	                            mov r8d, esi	       719	wrstabs.c	FUNCTION_12	ELSE_1	CALL_4
0x4000f6d	      0xbe00000000	                              mov esi, 0	       719	wrstabs.c	FUNCTION_12	ELSE_1	CALL_4
0x4000f72	          0x4889c7	                            mov rdi, rax	       719	wrstabs.c	FUNCTION_12	ELSE_1	CALL_4
0x4000f75	      0xb800000000	                              mov eax, 0	       719	wrstabs.c	FUNCTION_12	ELSE_1	CALL_4
0x4000f7a	      0xe800000000	                          call 0x4000f7f	       719	wrstabs.c	FUNCTION_12	ELSE_1	CALL_4
0x4000f7f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       721	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4000f83	          0x4889c7	                            mov rdi, rax	       721	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4000f86	      0xe800000000	                          call 0x4000f8b	       721	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4000f8b	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_6
0x4000f8e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_6
0x4000f92	        0x488d75c0	                   lea rsi, [rbp - 0x40]	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_6
0x4000f96	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_6
0x4000f9a	          0x4189c8	                            mov r8d, ecx	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_6
0x4000f9d	      0xb901000000	                              mov ecx, 1	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_6
0x4000fa2	          0x4889c7	                            mov rdi, rax	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_6
0x4000fa5	      0xe875f3ffff	               call sym.stab_push_string	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_6
0x4000faa	        0x488b7df8	                mov rdi, qword [rbp - 8]	       725	wrstabs.c	FUNCTION_12
0x4000fae	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       725	wrstabs.c	FUNCTION_12
0x4000fb7	            0x7405	                            je 0x4000fbe	       725	wrstabs.c	FUNCTION_12
0x4000fb9	      0xe800000000	                          call 0x4000fbe	       725	wrstabs.c	FUNCTION_12
0x4000fbe	              0xc9	                                   leave	       725	wrstabs.c	FUNCTION_12
0x4000fbf	              0xc3	                                     ret	       725	wrstabs.c	FUNCTION_12
stab_empty_type	FOR,0:ELSE,1:DO,0:WHILE,0:IF,1:SWITCH,0:CALL,3:functions,0	49
0x40008bc	              0x55	                                push rbp	       579	wrstabs.c	FUNCTION_9
0x40008bd	          0x4889e5	                            mov rbp, rsp	       579	wrstabs.c	FUNCTION_9
0x40008c0	        0x4883ec50	                           sub rsp, 0x50	       579	wrstabs.c	FUNCTION_9
0x40008c4	        0x48897db8	             mov qword [rbp - 0x48], rdi	       579	wrstabs.c	FUNCTION_9
0x40008c8	    0x64488b042528	                mov rax, qword fs:[0x28]	       579	wrstabs.c	FUNCTION_9
0x40008d1	        0x488945f8	                mov qword [rbp - 8], rax	       579	wrstabs.c	FUNCTION_9
0x40008d5	            0x31c0	                            xor eax, eax	       579	wrstabs.c	FUNCTION_9
0x40008d7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       580	wrstabs.c	FUNCTION_9
0x40008db	        0x488945c0	             mov qword [rbp - 0x40], rax	       580	wrstabs.c	FUNCTION_9
0x40008df	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       585	wrstabs.c	FUNCTION_9	IF_1
0x40008e3	        0x488b4070	            mov rax, qword [rax + 0x70] 	       585	wrstabs.c	FUNCTION_9	IF_1
0x40008e7	          0x4885c0	                           test rax, rax	       585	wrstabs.c	FUNCTION_9	IF_1
0x40008ea	            0x741e	                            je 0x400090a	       585	wrstabs.c	FUNCTION_9	IF_1
0x40008ec	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       586	wrstabs.c	FUNCTION_9	CALL_1
0x40008f0	        0x488b4870	            mov rcx, qword [rax + 0x70] 	       586	wrstabs.c	FUNCTION_9	CALL_1
0x40008f4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       586	wrstabs.c	FUNCTION_9	CALL_1
0x40008f8	      0xba00000000	                              mov edx, 0	       586	wrstabs.c	FUNCTION_9	CALL_1
0x40008fd	          0x4889ce	                            mov rsi, rcx	       586	wrstabs.c	FUNCTION_9	CALL_1
0x4000900	          0x4889c7	                            mov rdi, rax	       586	wrstabs.c	FUNCTION_9	CALL_1
0x4000903	      0xe8c9faffff	         call sym.stab_push_defined_type	       586	wrstabs.c	FUNCTION_9	CALL_1
0x4000908	            0xeb5d	                           jmp 0x4000967	       586	wrstabs.c	FUNCTION_9	CALL_1
0x400090a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       592	wrstabs.c	FUNCTION_9	ELSE_1
0x400090e	        0x488b4068	            mov rax, qword [rax + 0x68] 	       592	wrstabs.c	FUNCTION_9	ELSE_1
0x4000912	        0x488945c8	             mov qword [rbp - 0x38], rax	       592	wrstabs.c	FUNCTION_9	ELSE_1
0x4000916	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       593	wrstabs.c	FUNCTION_9	ELSE_1
0x400091a	        0x488b4068	            mov rax, qword [rax + 0x68] 	       593	wrstabs.c	FUNCTION_9	ELSE_1
0x400091e	        0x488d5001	                      lea rdx, [rax + 1]	       593	wrstabs.c	FUNCTION_9	ELSE_1
0x4000922	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       593	wrstabs.c	FUNCTION_9	ELSE_1
0x4000926	        0x48895068	             mov qword [rax + 0x68], rdx	       593	wrstabs.c	FUNCTION_9	ELSE_1
0x400092a	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       595	wrstabs.c	FUNCTION_9	ELSE_1	CALL_2
0x400092e	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       595	wrstabs.c	FUNCTION_9	ELSE_1	CALL_2
0x4000932	        0x488d45d0	                   lea rax, [rbp - 0x30]	       595	wrstabs.c	FUNCTION_9	ELSE_1	CALL_2
0x4000936	      0xbe00000000	                              mov esi, 0	       595	wrstabs.c	FUNCTION_9	ELSE_1	CALL_2
0x400093b	          0x4889c7	                            mov rdi, rax	       595	wrstabs.c	FUNCTION_9	ELSE_1	CALL_2
0x400093e	      0xb800000000	                              mov eax, 0	       595	wrstabs.c	FUNCTION_9	ELSE_1	CALL_2
0x4000943	      0xe800000000	                          call 0x4000948	       595	wrstabs.c	FUNCTION_9	ELSE_1	CALL_2
0x4000948	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       597	wrstabs.c	FUNCTION_9	ELSE_1	CALL_3
0x400094c	        0x488d75d0	                   lea rsi, [rbp - 0x30]	       597	wrstabs.c	FUNCTION_9	ELSE_1	CALL_3
0x4000950	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       597	wrstabs.c	FUNCTION_9	ELSE_1	CALL_3
0x4000954	    0x41b800000000	                              mov r8d, 0	       597	wrstabs.c	FUNCTION_9	ELSE_1	CALL_3
0x400095a	      0xb900000000	                              mov ecx, 0	       597	wrstabs.c	FUNCTION_9	ELSE_1	CALL_3
0x400095f	          0x4889c7	                            mov rdi, rax	       597	wrstabs.c	FUNCTION_9	ELSE_1	CALL_3
0x4000962	      0xe8b8f9ffff	               call sym.stab_push_string	       597	wrstabs.c	FUNCTION_9	ELSE_1	CALL_3
0x4000967	        0x488b7df8	                mov rdi, qword [rbp - 8]	       599	wrstabs.c	FUNCTION_9
0x400096b	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       599	wrstabs.c	FUNCTION_9
0x4000974	            0x7405	                            je 0x400097b	       599	wrstabs.c	FUNCTION_9
0x4000976	      0xe800000000	                          call 0x400097b	       599	wrstabs.c	FUNCTION_9
0x400097b	              0xc9	                                   leave	       599	wrstabs.c	FUNCTION_9
0x400097c	              0xc3	                                     ret	       599	wrstabs.c	FUNCTION_9
stab_pointer_type	FOR,0:ELSE,0:DO,0:WHILE,0:IF,0:SWITCH,0:CALL,1:functions,0	19
0x4001669	              0x55	                                push rbp	       929	wrstabs.c	FUNCTION_17
0x400166a	          0x4889e5	                            mov rbp, rsp	       929	wrstabs.c	FUNCTION_17
0x400166d	        0x4883ec20	                           sub rsp, 0x20	       929	wrstabs.c	FUNCTION_17
0x4001671	        0x48897de8	             mov qword [rbp - 0x18], rdi	       929	wrstabs.c	FUNCTION_17
0x4001675	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       930	wrstabs.c	FUNCTION_17
0x4001679	        0x488945f8	                mov qword [rbp - 8], rax	       930	wrstabs.c	FUNCTION_17
0x400167d	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	wrstabs.c	FUNCTION_17	CALL_1
0x4001681	    0x488d88800100	                  lea rcx, [rax + 0x180]	       933	wrstabs.c	FUNCTION_17	CALL_1
0x4001688	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	wrstabs.c	FUNCTION_17	CALL_1
0x400168c	    0x488d90780100	                  lea rdx, [rax + 0x178]	       933	wrstabs.c	FUNCTION_17	CALL_1
0x4001693	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	wrstabs.c	FUNCTION_17	CALL_1
0x4001697	          0x4989c8	                             mov r8, rcx	       933	wrstabs.c	FUNCTION_17	CALL_1
0x400169a	          0x4889d1	                            mov rcx, rdx	       933	wrstabs.c	FUNCTION_17	CALL_1
0x400169d	      0xba04000000	                              mov edx, 4	       933	wrstabs.c	FUNCTION_17	CALL_1
0x40016a2	      0xbe2a000000	                           mov esi, 0x2a	       933	wrstabs.c	FUNCTION_17	CALL_1
0x40016a7	          0x4889c7	                            mov rdi, rax	       933	wrstabs.c	FUNCTION_17	CALL_1
0x40016aa	      0xe8cdfcffff	               call sym.stab_modify_type	       933	wrstabs.c	FUNCTION_17	CALL_1
0x40016af	              0xc9	                                   leave	       935	wrstabs.c	FUNCTION_17
0x40016b0	              0xc3	                                     ret	       935	wrstabs.c	FUNCTION_17
stab_variable	FOR,0:ELSE,0:DO,0:WHILE,0:IF,2:SWITCH,1:CALL,14:functions,0	118
0x4003a57	              0x55	                                push rbp	      2015	wrstabs.c	FUNCTION_47
0x4003a58	          0x4889e5	                            mov rbp, rsp	      2015	wrstabs.c	FUNCTION_47
0x4003a5b	              0x53	                                push rbx	      2015	wrstabs.c	FUNCTION_47
0x4003a5c	        0x4883ec68	                           sub rsp, 0x68	      2015	wrstabs.c	FUNCTION_47
0x4003a60	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2015	wrstabs.c	FUNCTION_47
0x4003a64	        0x488975a0	             mov qword [rbp - 0x60], rsi	      2015	wrstabs.c	FUNCTION_47
0x4003a68	          0x89559c	             mov dword [rbp - 0x64], edx	      2015	wrstabs.c	FUNCTION_47
0x4003a6b	        0x48894d90	             mov qword [rbp - 0x70], rcx	      2015	wrstabs.c	FUNCTION_47
0x4003a6f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2016	wrstabs.c	FUNCTION_47
0x4003a73	        0x488945d0	             mov qword [rbp - 0x30], rax	      2016	wrstabs.c	FUNCTION_47
0x4003a77	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2021	wrstabs.c	FUNCTION_47	CALL_1
0x4003a7b	          0x4889c7	                            mov rdi, rax	      2021	wrstabs.c	FUNCTION_47	CALL_1
0x4003a7e	      0xe8bfc9ffff	                  call sym.stab_pop_type	      2021	wrstabs.c	FUNCTION_47	CALL_1
0x4003a83	        0x488945c0	             mov qword [rbp - 0x40], rax	      2021	wrstabs.c	FUNCTION_47	CALL_1
0x4003a87	        0x837d9c05	               cmp dword [rbp - 0x64], 5	      2023	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003a8b	            0x770d	                            ja 0x4003a9a	      2023	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003a8d	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2023	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003a90	    0x488b04c50000	                  mov rax, qword [rax*8]	      2023	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003a98	            0xffe0	                                 jmp rax	      2023	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003a9a	      0xe800000000	                          call 0x4003a9f	      2026	wrstabs.c	FUNCTION_47	SWITCH_1	CALL_2
0x4003a9f	    0xc745bc200000	           mov dword [rbp - 0x44], 0x20 	      2029	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003aa6	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2030	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003aae	      0xe9de000000	                           jmp 0x4003b91	      2031	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003ab3	    0xc745bc260000	           mov dword [rbp - 0x44], 0x26 	      2034	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003aba	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2035	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003ac2	      0xe9ca000000	                           jmp 0x4003b91	      2036	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003ac7	    0xc745bc260000	           mov dword [rbp - 0x44], 0x26 	      2039	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003ace	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2040	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003ad6	      0xe9b6000000	                           jmp 0x4003b91	      2041	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003adb	    0xc745bc800000	           mov dword [rbp - 0x44], 0x80 	      2044	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003ae2	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2045	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003aea	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2048	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_3
0x4003aee	           0xfb600	                   movzx eax, byte [rax]	      2048	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_3
0x4003af1	           0xfbec0	                           movsx eax, al	      2048	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_3
0x4003af4	           0xfb6c0	                           movzx eax, al	      2048	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_3
0x4003af7	            0x4898	                                    cdqe	      2048	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_3
0x4003af9	     0xfb784000000	             movzx eax, word [rax + rax]	      2048	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_3
0x4003b01	           0xfb7c0	                           movzx eax, ax	      2048	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_3
0x4003b04	          0x83e004	                              and eax, 4	      2048	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_3
0x4003b07	            0x85c0	                           test eax, eax	      2048	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_3
0x4003b09	     0xf8581000000	                           jne 0x4003b90	      2048	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_3
0x4003b0f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2053	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x4003b13	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2053	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x4003b17	        0x488945d8	             mov qword [rbp - 0x28], rax	      2053	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x4003b1b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2054	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x4003b1f	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2054	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x4003b23	        0x488d5001	                      lea rdx, [rax + 1]	      2054	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x4003b27	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2054	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x4003b2b	        0x48895068	             mov qword [rax + 0x68], rdx	      2054	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x4003b2f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x4003b33	          0x4889c7	                            mov rdi, rax	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x4003b36	      0xe800000000	                          call 0x4003b3b	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x4003b3b	        0x4883c014	                           add rax, 0x14	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x4003b3f	          0x4889c7	                            mov rdi, rax	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x4003b42	      0xe800000000	                          call 0x4003b47	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x4003b47	        0x488945e0	             mov qword [rbp - 0x20], rax	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x4003b4b	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2056	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_6
0x4003b4f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2056	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_6
0x4003b53	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2056	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_6
0x4003b57	      0xbe00000000	                              mov esi, 0	      2056	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_6
0x4003b5c	          0x4889c7	                            mov rdi, rax	      2056	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_6
0x4003b5f	      0xb800000000	                              mov eax, 0	      2056	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_6
0x4003b64	      0xe800000000	                          call 0x4003b69	      2056	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_6
0x4003b69	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2057	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_7
0x4003b6d	          0x4889c7	                            mov rdi, rax	      2057	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_7
0x4003b70	      0xe800000000	                          call 0x4003b75	      2057	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_7
0x4003b75	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2058	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x4003b79	        0x488945c0	             mov qword [rbp - 0x40], rax	      2058	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x4003b7d	            0xeb11	                           jmp 0x4003b90	      2060	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003b7f	    0xc745bc400000	           mov dword [rbp - 0x44], 0x40 	      2063	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003b86	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2064	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003b8e	            0xeb01	                           jmp 0x4003b91	      2065	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003b90	              0x90	                                     nop	      2060	wrstabs.c	FUNCTION_47	SWITCH_1
0x4003b91	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2068	wrstabs.c	FUNCTION_47	CALL_10
0x4003b95	          0x4889c7	                            mov rdi, rax	      2068	wrstabs.c	FUNCTION_47	CALL_10
0x4003b98	      0xe800000000	                          call 0x4003b9d	      2068	wrstabs.c	FUNCTION_47	CALL_10
0x4003b9d	          0x4889c3	                            mov rbx, rax	      2068	wrstabs.c	FUNCTION_47	CALL_10
0x4003ba0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2068	wrstabs.c	FUNCTION_47	CALL_10
0x4003ba4	          0x4889c7	                            mov rdi, rax	      2068	wrstabs.c	FUNCTION_47	CALL_10
0x4003ba7	      0xe800000000	                          call 0x4003bac	      2068	wrstabs.c	FUNCTION_47	CALL_10
0x4003bac	          0x4801d8	                            add rax, rbx	      2068	wrstabs.c	FUNCTION_47	CALL_10
0x4003baf	        0x4883c003	                              add rax, 3	      2068	wrstabs.c	FUNCTION_47	CALL_10
0x4003bb3	          0x4889c7	                            mov rdi, rax	      2068	wrstabs.c	FUNCTION_47	CALL_10
0x4003bb6	      0xe800000000	                          call 0x4003bbb	      2068	wrstabs.c	FUNCTION_47	CALL_10
0x4003bbb	        0x488945e8	             mov qword [rbp - 0x18], rax	      2068	wrstabs.c	FUNCTION_47	CALL_10
0x4003bbf	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      2069	wrstabs.c	FUNCTION_47	CALL_11
0x4003bc3	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      2069	wrstabs.c	FUNCTION_47	CALL_11
0x4003bc7	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2069	wrstabs.c	FUNCTION_47	CALL_11
0x4003bcb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2069	wrstabs.c	FUNCTION_47	CALL_11
0x4003bcf	          0x4989f0	                             mov r8, rsi	      2069	wrstabs.c	FUNCTION_47	CALL_11
0x4003bd2	      0xbe00000000	                              mov esi, 0	      2069	wrstabs.c	FUNCTION_47	CALL_11
0x4003bd7	          0x4889c7	                            mov rdi, rax	      2069	wrstabs.c	FUNCTION_47	CALL_11
0x4003bda	      0xb800000000	                              mov eax, 0	      2069	wrstabs.c	FUNCTION_47	CALL_11
0x4003bdf	      0xe800000000	                          call 0x4003be4	      2069	wrstabs.c	FUNCTION_47	CALL_11
0x4003be4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2070	wrstabs.c	FUNCTION_47	CALL_12
0x4003be8	          0x4889c7	                            mov rdi, rax	      2070	wrstabs.c	FUNCTION_47	CALL_12
0x4003beb	      0xe800000000	                          call 0x4003bf0	      2070	wrstabs.c	FUNCTION_47	CALL_12
0x4003bf0	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_13
0x4003bf4	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_13
0x4003bf8	          0x8b75bc	             mov esi, dword [rbp - 0x44]	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_13
0x4003bfb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_13
0x4003bff	          0x4989c8	                             mov r8, rcx	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_13
0x4003c02	          0x4889d1	                            mov rcx, rdx	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_13
0x4003c05	      0xba00000000	                              mov edx, 0	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_13
0x4003c0a	          0x4889c7	                            mov rdi, rax	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_13
0x4003c0d	      0xe8bfc4ffff	              call sym.stab_write_symbol	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_13
0x4003c12	            0x85c0	                           test eax, eax	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_13
0x4003c14	            0x7507	                           jne 0x4003c1d	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_13
0x4003c16	      0xb800000000	                              mov eax, 0	      2073	wrstabs.c	FUNCTION_47	IF_2
0x4003c1b	            0xeb11	                           jmp 0x4003c2e	      2073	wrstabs.c	FUNCTION_47	IF_2
0x4003c1d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2075	wrstabs.c	FUNCTION_47	CALL_14
0x4003c21	          0x4889c7	                            mov rdi, rax	      2075	wrstabs.c	FUNCTION_47	CALL_14
0x4003c24	      0xe800000000	                          call 0x4003c29	      2075	wrstabs.c	FUNCTION_47	CALL_14
0x4003c29	      0xb801000000	                              mov eax, 1	      2077	wrstabs.c	FUNCTION_47
0x4003c2e	        0x4883c468	                           add rsp, 0x68	      2078	wrstabs.c	FUNCTION_47
0x4003c32	              0x5b	                                 pop rbx	      2078	wrstabs.c	FUNCTION_47
0x4003c33	              0x5d	                                 pop rbp	      2078	wrstabs.c	FUNCTION_47
0x4003c34	              0xc3	                                     ret	      2078	wrstabs.c	FUNCTION_47
stab_function_type	FOR,1:ELSE,1:DO,0:WHILE,0:IF,2:SWITCH,0:CALL,10:functions,0	73
0x40016b1	              0x55	                                push rbp	       942	wrstabs.c	FUNCTION_18
0x40016b2	          0x4889e5	                            mov rbp, rsp	       942	wrstabs.c	FUNCTION_18
0x40016b5	        0x4883ec30	                           sub rsp, 0x30	       942	wrstabs.c	FUNCTION_18
0x40016b9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       942	wrstabs.c	FUNCTION_18
0x40016bd	          0x8975d4	             mov dword [rbp - 0x2c], esi	       942	wrstabs.c	FUNCTION_18
0x40016c0	          0x8955d0	             mov dword [rbp - 0x30], edx	       942	wrstabs.c	FUNCTION_18
0x40016c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       943	wrstabs.c	FUNCTION_18
0x40016c7	        0x488945e8	             mov qword [rbp - 0x18], rax	       943	wrstabs.c	FUNCTION_18
0x40016cb	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       949	wrstabs.c	FUNCTION_18	FOR_1
0x40016d2	      0xe9b7000000	                           jmp 0x400178e	       949	wrstabs.c	FUNCTION_18	FOR_1
0x40016d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       951	wrstabs.c	FUNCTION_18	FOR_1	IF_1
0x40016db	        0x488b4060	            mov rax, qword [rax + 0x60] 	       951	wrstabs.c	FUNCTION_18	FOR_1	IF_1
0x40016df	          0x8b401c	            mov eax, dword [rax + 0x1c] 	       951	wrstabs.c	FUNCTION_18	FOR_1	IF_1
0x40016e2	            0x85c0	                           test eax, eax	       951	wrstabs.c	FUNCTION_18	FOR_1	IF_1
0x40016e4	            0x7519	                           jne 0x40016ff	       951	wrstabs.c	FUNCTION_18	FOR_1	IF_1
0x40016e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       952	wrstabs.c	FUNCTION_18	FOR_1	CALL_2
0x40016ea	          0x4889c7	                            mov rdi, rax	       952	wrstabs.c	FUNCTION_18	FOR_1	CALL_2
0x40016ed	      0xe850edffff	                  call sym.stab_pop_type	       952	wrstabs.c	FUNCTION_18	FOR_1	CALL_2
0x40016f2	          0x4889c7	                            mov rdi, rax	       952	wrstabs.c	FUNCTION_18	FOR_1	CALL_2
0x40016f5	      0xe800000000	                          call 0x40016fa	       952	wrstabs.c	FUNCTION_18	FOR_1	CALL_2
0x40016fa	      0xe98b000000	                           jmp 0x400178a	       952	wrstabs.c	FUNCTION_18	FOR_1	CALL_2
0x40016ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       957	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_3
0x4001703	          0x4889c7	                            mov rdi, rax	       957	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_3
0x4001706	      0xe837edffff	                  call sym.stab_pop_type	       957	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_3
0x400170b	        0x488945f0	             mov qword [rbp - 0x10], rax	       957	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_3
0x400170f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x4001713	          0x4889c7	                            mov rdi, rax	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x4001716	      0xe800000000	                          call 0x400171b	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x400171b	        0x4883c003	                              add rax, 3	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x400171f	          0x4889c7	                            mov rdi, rax	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x4001722	      0xe800000000	                          call 0x4001727	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x4001727	        0x488945f8	                mov qword [rbp - 8], rax	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x400172b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       960	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_6
0x400172f	        0x488b45f8	                mov rax, qword [rbp - 8]	       960	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_6
0x4001733	      0xbe00000000	                              mov esi, 0	       960	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_6
0x4001738	          0x4889c7	                            mov rdi, rax	       960	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_6
0x400173b	      0xb800000000	                              mov eax, 0	       960	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_6
0x4001740	      0xe800000000	                          call 0x4001745	       960	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_6
0x4001745	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       961	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_7
0x4001749	          0x4889c7	                            mov rdi, rax	       961	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_7
0x400174c	      0xe800000000	                          call 0x4001751	       961	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_7
0x4001751	        0x488b55f8	                mov rdx, qword [rbp - 8]	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_8
0x4001755	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_8
0x4001759	          0x4989d0	                             mov r8, rdx	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_8
0x400175c	      0xb900000000	                              mov ecx, 0	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_8
0x4001761	      0xba00000000	                              mov edx, 0	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_8
0x4001766	      0xbe80000000	                           mov esi, 0x80	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_8
0x400176b	          0x4889c7	                            mov rdi, rax	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_8
0x400176e	      0xe85ee9ffff	              call sym.stab_write_symbol	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_8
0x4001773	            0x85c0	                           test eax, eax	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_8
0x4001775	            0x7507	                           jne 0x400177e	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_8
0x4001777	      0xb800000000	                              mov eax, 0	       964	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2
0x400177c	            0xeb4e	                           jmp 0x40017cc	       964	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2
0x400177e	        0x488b45f8	                mov rax, qword [rbp - 8]	       966	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_9
0x4001782	          0x4889c7	                            mov rdi, rax	       966	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_9
0x4001785	      0xe800000000	                          call 0x400178a	       966	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_9
0x400178a	        0x8345e401	               add dword [rbp - 0x1c], 1	       949	wrstabs.c	FUNCTION_18	FOR_1
0x400178e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       949	wrstabs.c	FUNCTION_18	FOR_1
0x4001791	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       949	wrstabs.c	FUNCTION_18	FOR_1
0x4001794	     0xf8c3dffffff	                            jl 0x40016d7	       949	wrstabs.c	FUNCTION_18	FOR_1
0x400179a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       970	wrstabs.c	FUNCTION_18	CALL_10
0x400179e	    0x488d88900100	                  lea rcx, [rax + 0x190]	       970	wrstabs.c	FUNCTION_18	CALL_10
0x40017a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       970	wrstabs.c	FUNCTION_18	CALL_10
0x40017a9	    0x488d90880100	                  lea rdx, [rax + 0x188]	       970	wrstabs.c	FUNCTION_18	CALL_10
0x40017b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       970	wrstabs.c	FUNCTION_18	CALL_10
0x40017b4	          0x4989c8	                             mov r8, rcx	       970	wrstabs.c	FUNCTION_18	CALL_10
0x40017b7	          0x4889d1	                            mov rcx, rdx	       970	wrstabs.c	FUNCTION_18	CALL_10
0x40017ba	      0xba00000000	                              mov edx, 0	       970	wrstabs.c	FUNCTION_18	CALL_10
0x40017bf	      0xbe66000000	                           mov esi, 0x66	       970	wrstabs.c	FUNCTION_18	CALL_10
0x40017c4	          0x4889c7	                            mov rdi, rax	       970	wrstabs.c	FUNCTION_18	CALL_10
0x40017c7	      0xe8b0fbffff	               call sym.stab_modify_type	       970	wrstabs.c	FUNCTION_18	CALL_10
0x40017cc	              0xc9	                                   leave	       972	wrstabs.c	FUNCTION_18
0x40017cd	              0xc3	                                     ret	       972	wrstabs.c	FUNCTION_18
