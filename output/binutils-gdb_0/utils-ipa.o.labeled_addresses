malloc_failure	CALL,1:DO,0:FOR,0:SWITCH,0:IF,0:WHILE,0:ELSE,0:functions,0	10
0x4000040	        0x4883ec08	                              sub rsp, 8	        33	utils.c	FUNCTION_1
0x4000044	    0x488b05000000	            mov rax, qword [0x0400004b] 	        98	stdio2.h	CALL_10
0x400004b	          0x4889f9	                            mov rcx, rdi	        33	utils.c	FUNCTION_1
0x400004e	    0x488d15000000	                   lea rdx, [0x04000055]	        98	stdio2.h	CALL_10
0x4000055	      0xbe01000000	                              mov esi, 1	        98	stdio2.h	CALL_10
0x400005a	          0x488b38	                    mov rdi, qword [rax]	        98	stdio2.h	CALL_10
0x400005d	            0x31c0	                            xor eax, eax	        98	stdio2.h	CALL_10
0x400005f	      0xe800000000	                          call 0x4000064	        98	stdio2.h	CALL_10
0x4000064	      0xbf01000000	                              mov edi, 1	        37	utils.c	FUNCTION_1	CALL_1
0x4000069	      0xe800000000	                          call 0x400006e	        37	utils.c	FUNCTION_1	CALL_1
vwarning	CALL,1:DO,0:FOR,0:SWITCH,0:IF,0:WHILE,0:ELSE,0:functions,0	22
0x4000190	            0x4154	                                push r12	        91	utils.c	FUNCTION_5
0x4000192	              0x55	                                push rbp	        91	utils.c	FUNCTION_5
0x4000193	          0x4889fd	                            mov rbp, rdi	        91	utils.c	FUNCTION_5
0x4000196	              0x53	                                push rbx	        91	utils.c	FUNCTION_5
0x4000197	    0x488b1d000000	            mov rbx, qword [0x0400019e] 	        92	utils.c	FUNCTION_5
0x400019e	    0x488d3d000000	                   lea rdi, [0x040001a5]	        98	stdio2.h	CALL_10
0x40001a5	          0x4989f4	                            mov r12, rsi	        91	utils.c	FUNCTION_5
0x40001a8	      0xba05000000	                              mov edx, 5	        98	stdio2.h	CALL_10
0x40001ad	      0xbe01000000	                              mov esi, 1	        98	stdio2.h	CALL_10
0x40001b2	          0x488b0b	                    mov rcx, qword [rbx]	        98	stdio2.h	CALL_10
0x40001b5	      0xe800000000	                          call 0x40001ba	        98	stdio2.h	CALL_10
0x40001ba	          0x488b3b	                    mov rdi, qword [rbx]	       127	stdio2.h	FUNCTION_15	CALL_1
0x40001bd	          0x4c89e1	                            mov rcx, r12	       127	stdio2.h	FUNCTION_15	CALL_1
0x40001c0	          0x4889ea	                            mov rdx, rbp	       127	stdio2.h	FUNCTION_15	CALL_1
0x40001c3	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_15	CALL_1
0x40001c8	      0xe800000000	                          call 0x40001cd	       127	stdio2.h	FUNCTION_15	CALL_1
0x40001cd	          0x488b33	                    mov rsi, qword [rbx]	        98	stdio2.h	CALL_10
0x40001d0	      0xbf0a000000	                            mov edi, 0xa	        98	stdio2.h	CALL_10
0x40001d5	              0x5b	                                 pop rbx	        95	utils.c	FUNCTION_5
0x40001d6	              0x5d	                                 pop rbp	        95	utils.c	FUNCTION_5
0x40001d7	            0x415c	                                 pop r12	        95	utils.c	FUNCTION_5
0x40001d9	      0xe900000000	                           jmp 0x40001de	        98	stdio2.h	CALL_10
verror	CALL,4:DO,0:FOR,0:SWITCH,0:IF,0:WHILE,0:ELSE,0:functions,0	19
0x4000140	    0x488b05000000	            mov rax, qword [0x04000147] 	        80	utils.c	FUNCTION_4	CALL_1
0x4000147	            0x4154	                                push r12	        78	utils.c	FUNCTION_4
0x4000149	          0x4989f4	                            mov r12, rsi	        78	utils.c	FUNCTION_4
0x400014c	              0x55	                                push rbp	        78	utils.c	FUNCTION_4
0x400014d	          0x4889fd	                            mov rbp, rdi	        78	utils.c	FUNCTION_4
0x4000150	              0x53	                                push rbx	        78	utils.c	FUNCTION_4
0x4000151	          0x488b38	                    mov rdi, qword [rax]	        80	utils.c	FUNCTION_4	CALL_1
0x4000154	      0xe800000000	                          call 0x4000159	        80	utils.c	FUNCTION_4	CALL_1
0x4000159	    0x488b1d000000	            mov rbx, qword [0x04000160] 	        81	utils.c	FUNCTION_4	CALL_2
0x4000160	          0x4c89e1	                            mov rcx, r12	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000163	          0x4889ea	                            mov rdx, rbp	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000166	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_15	CALL_1
0x400016b	          0x488b3b	                    mov rdi, qword [rbx]	       127	stdio2.h	FUNCTION_15	CALL_1
0x400016e	      0xe800000000	                          call 0x4000173	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000173	          0x488b33	                    mov rsi, qword [rbx]	        98	stdio2.h	CALL_10
0x4000176	      0xbf0a000000	                            mov edi, 0xa	        98	stdio2.h	CALL_10
0x400017b	      0xe800000000	                          call 0x4000180	        98	stdio2.h	CALL_10
0x4000180	      0xbf01000000	                              mov edi, 1	        83	utils.c	FUNCTION_4	CALL_3
0x4000185	      0xe800000000	                          call 0x400018a	        83	utils.c	FUNCTION_4	CALL_3
pfildes	CALL,2:DO,0:FOR,0:SWITCH,0:IF,0:WHILE,0:ELSE,0:functions,0	2
0x40002b0	          0x4863ff	                         movsxd rdi, edi	       137	utils.c	FUNCTION_9
0x40002b3	      0xe900000000	jmp str.ipa:_ran_out_of_memory_while_trying_to_allocate__lu_bytes	       137	utils.c	FUNCTION_9
internal_verror	CALL,2:DO,0:FOR,0:SWITCH,0:IF,0:WHILE,0:ELSE,0:functions,0	23
0x40001e0	            0x4154	                                push r12	       101	utils.c	FUNCTION_6
0x40001e2	              0x55	                                push rbp	       101	utils.c	FUNCTION_6
0x40001e3	          0x4989cc	                            mov r12, rcx	       101	utils.c	FUNCTION_6
0x40001e6	              0x53	                                push rbx	       101	utils.c	FUNCTION_6
0x40001e7	    0x488b1d000000	            mov rbx, qword [0x040001ee] 	       103	utils.c	FUNCTION_6	CALL_1
0x40001ee	          0x4889f9	                            mov rcx, rdi	        98	stdio2.h	CALL_10
0x40001f1	          0x4889d5	                            mov rbp, rdx	       101	utils.c	FUNCTION_6
0x40001f4	    0x488d15000000	                   lea rdx, [0x040001fb]	        98	stdio2.h	CALL_10
0x40001fb	          0x4189f0	                            mov r8d, esi	       101	utils.c	FUNCTION_6
0x40001fe	            0x31c0	                            xor eax, eax	        98	stdio2.h	CALL_10
0x4000200	      0xbe01000000	                              mov esi, 1	        98	stdio2.h	CALL_10
0x4000205	          0x488b3b	                    mov rdi, qword [rbx]	        98	stdio2.h	CALL_10
0x4000208	      0xe800000000	                          call 0x400020d	        98	stdio2.h	CALL_10
0x400020d	          0x488b3b	                    mov rdi, qword [rbx]	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000210	          0x4c89e1	                            mov rcx, r12	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000213	          0x4889ea	                            mov rdx, rbp	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000216	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_15	CALL_1
0x400021b	      0xe800000000	                          call 0x4000220	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000220	          0x488b33	                    mov rsi, qword [rbx]	        98	stdio2.h	CALL_10
0x4000223	      0xbf0a000000	                            mov edi, 0xa	        98	stdio2.h	CALL_10
0x4000228	      0xe800000000	                          call 0x400022d	        98	stdio2.h	CALL_10
0x400022d	      0xbf01000000	                              mov edi, 1	       106	utils.c	FUNCTION_6
0x4000232	      0xe800000000	                          call 0x4000237	       106	utils.c	FUNCTION_6
paddress	CALL,1:DO,0:FOR,0:SWITCH,0:IF,0:WHILE,0:ELSE,0:functions,0	2
0x40002a0	      0xbe08000000	                              mov esi, 8	       126	utils.c	
0x40002a5	      0xe900000000	                           jmp 0x40002aa	       126	utils.c	
internal_vwarning	CALL,1:DO,0:FOR,0:SWITCH,0:IF,0:WHILE,0:ELSE,0:functions,0	24
0x4000240	            0x4154	                                push r12	       113	utils.c	FUNCTION_7
0x4000242	              0x55	                                push rbp	       113	utils.c	FUNCTION_7
0x4000243	          0x4989cc	                            mov r12, rcx	       113	utils.c	FUNCTION_7
0x4000246	              0x53	                                push rbx	       113	utils.c	FUNCTION_7
0x4000247	    0x488b1d000000	            mov rbx, qword [0x0400024e] 	       115	utils.c	FUNCTION_7
0x400024e	          0x4889f9	                            mov rcx, rdi	        98	stdio2.h	CALL_10
0x4000251	          0x4889d5	                            mov rbp, rdx	       113	utils.c	FUNCTION_7
0x4000254	    0x488d15000000	                   lea rdx, [0x0400025b]	        98	stdio2.h	CALL_10
0x400025b	          0x4189f0	                            mov r8d, esi	       113	utils.c	FUNCTION_7
0x400025e	            0x31c0	                            xor eax, eax	        98	stdio2.h	CALL_10
0x4000260	      0xbe01000000	                              mov esi, 1	        98	stdio2.h	CALL_10
0x4000265	          0x488b3b	                    mov rdi, qword [rbx]	        98	stdio2.h	CALL_10
0x4000268	      0xe800000000	                          call 0x400026d	        98	stdio2.h	CALL_10
0x400026d	          0x488b3b	                    mov rdi, qword [rbx]	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000270	          0x4c89e1	                            mov rcx, r12	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000273	          0x4889ea	                            mov rdx, rbp	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000276	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_15	CALL_1
0x400027b	      0xe800000000	                          call 0x4000280	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000280	          0x488b33	                    mov rsi, qword [rbx]	        98	stdio2.h	CALL_10
0x4000283	      0xbf0a000000	                            mov edi, 0xa	        98	stdio2.h	CALL_10
0x4000288	              0x5b	                                 pop rbx	       118	utils.c	
0x4000289	              0x5d	                                 pop rbp	       118	utils.c	
0x400028a	            0x415c	                                 pop r12	       118	utils.c	
0x400028c	      0xe900000000	                           jmp 0x4000291	        98	stdio2.h	CALL_10
xstrdup	CALL,3:DO,0:FOR,0:SWITCH,0:IF,1:WHILE,0:ELSE,0:functions,0	13
0x4000070	              0x53	                                push rbx	        45	utils.c	FUNCTION_2
0x4000071	          0x4889fb	                            mov rbx, rdi	        45	utils.c	FUNCTION_2
0x4000074	      0xe800000000	                          call 0x4000079	        46	utils.c	FUNCTION_2	CALL_1
0x4000079	          0x4885c0	                           test rax, rax	        47	utils.c	FUNCTION_2	IF_1
0x400007c	            0x7402	                            je 0x4000080	        47	utils.c	FUNCTION_2	IF_1
0x400007e	              0x5b	                                 pop rbx	        50	utils.c	FUNCTION_2
0x400007f	              0xc3	                                     ret	        50	utils.c	FUNCTION_2
0x4000080	          0x4889df	                            mov rdi, rbx	        48	utils.c	FUNCTION_2	CALL_3
0x4000083	        0x4883c9ff	              or rcx, 0xffffffffffffffff	        48	utils.c	FUNCTION_2	CALL_3
0x4000087	            0xf2ae	              repne scasb al, byte [rdi]	        48	utils.c	FUNCTION_2	CALL_3
0x4000089	          0x48f7d1	                                 not rcx	        48	utils.c	FUNCTION_2	CALL_3
0x400008c	          0x4889cf	                            mov rdi, rcx	        48	utils.c	FUNCTION_2	CALL_3
0x400008f	      0xe800000000	                          call 0x4000094	        48	utils.c	FUNCTION_2	CALL_3
perror_with_name	CALL,8:DO,0:FOR,0:SWITCH,0:IF,1:WHILE,0:ELSE,0:functions,0	42
0x40000a0	              0x55	                                push rbp	        58	utils.c	FUNCTION_3
0x40000a1	          0x4889e5	                            mov rbp, rsp	        58	utils.c	FUNCTION_3
0x40000a4	            0x4156	                                push r14	        58	utils.c	FUNCTION_3
0x40000a6	            0x4155	                                push r13	        58	utils.c	FUNCTION_3
0x40000a8	            0x4154	                                push r12	        58	utils.c	FUNCTION_3
0x40000aa	              0x53	                                push rbx	        58	utils.c	FUNCTION_3
0x40000ab	          0x4989fe	                            mov r14, rdi	        58	utils.c	FUNCTION_3
0x40000ae	        0x4883ec10	                           sub rsp, 0x10	        58	utils.c	FUNCTION_3
0x40000b2	    0x64488b042528	                mov rax, qword fs:[0x28]	        58	utils.c	FUNCTION_3
0x40000bb	        0x488945d8	             mov qword [rbp - 0x28], rax	        58	utils.c	FUNCTION_3
0x40000bf	            0x31c0	                            xor eax, eax	        58	utils.c	FUNCTION_3
0x40000c1	      0xe800000000	                          call 0x40000c6	        62	utils.c	FUNCTION_3	CALL_1
0x40000c6	            0x8b38	                    mov edi, dword [rax]	        62	utils.c	FUNCTION_3	CALL_1
0x40000c8	      0xe800000000	                          call 0x40000cd	        62	utils.c	FUNCTION_3	CALL_1
0x40000cd	          0x4885c0	                           test rax, rax	        64	utils.c	FUNCTION_3	IF_1
0x40000d0	          0x4989c4	                            mov r12, rax	        62	utils.c	FUNCTION_3	CALL_1
0x40000d3	    0x488d05000000	                   lea rax, [0x040000da]	        64	utils.c	FUNCTION_3	IF_1
0x40000da	        0x4c0f44e0	                          cmove r12, rax	        64	utils.c	FUNCTION_3	IF_1
0x40000de	          0x4c89e7	                            mov rdi, r12	        66	utils.c	FUNCTION_3	CALL_4
0x40000e1	      0xe800000000	                          call 0x40000e6	        66	utils.c	FUNCTION_3	CALL_4
0x40000e6	          0x4c89f7	                            mov rdi, r14	        66	utils.c	FUNCTION_3	CALL_4
0x40000e9	          0x4889c3	                            mov rbx, rax	        66	utils.c	FUNCTION_3	CALL_4
0x40000ec	      0xe800000000	                          call 0x40000f1	        66	utils.c	FUNCTION_3	CALL_4
0x40000f1	          0x4989c5	                            mov r13, rax	        66	utils.c	FUNCTION_3	CALL_4
0x40000f4	      0x488d440321	            lea rax, [rbx + rax + 0x21] 	        66	utils.c	FUNCTION_3	CALL_4
0x40000f9	          0x4c89f6	                            mov rsi, r14	       110	string3.h	FUNCTION_33	CALL_3
0x40000fc	          0x4c89ea	                            mov rdx, r13	       110	string3.h	FUNCTION_33	CALL_3
0x40000ff	        0x4883e0f0	             and rax, 0xfffffffffffffff0	        66	utils.c	FUNCTION_3	CALL_4
0x4000103	          0x4829c4	                            sub rsp, rax	        66	utils.c	FUNCTION_3	CALL_4
0x4000106	      0x488d5c240f	                    lea rbx, [rsp + 0xf]	        66	utils.c	FUNCTION_3	CALL_4
0x400010b	        0x4883e3f0	             and rbx, 0xfffffffffffffff0	        66	utils.c	FUNCTION_3	CALL_4
0x400010f	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_33	CALL_3
0x4000112	      0xe800000000	                          call 0x4000117	       110	string3.h	FUNCTION_33	CALL_3
0x4000117	      0xb83a200000	                         mov eax, 0x203a	       148	string3.h	FUNCTION_37	CALL_3
0x400011c	      0x4a8d7c2b02	                lea rdi, [rbx + r13 + 2]	       148	string3.h	FUNCTION_37	CALL_3
0x4000121	          0x4c89e6	                            mov rsi, r12	       148	string3.h	FUNCTION_37	CALL_3
0x4000124	      0x664289042b	                mov word [rbx + r13], ax	       148	string3.h	FUNCTION_37	CALL_3
0x4000129	      0xe800000000	                          call 0x400012e	       148	string3.h	FUNCTION_37	CALL_3
0x400012e	    0x488d3d000000	                   lea rdi, [0x04000135]	        71	utils.c	FUNCTION_3	CALL_8
0x4000135	          0x4889de	                            mov rsi, rbx	        71	utils.c	FUNCTION_3	CALL_8
0x4000138	            0x31c0	                            xor eax, eax	        71	utils.c	FUNCTION_3	CALL_8
0x400013a	      0xe800000000	                          call 0x400013f	        71	utils.c	FUNCTION_3	CALL_8
