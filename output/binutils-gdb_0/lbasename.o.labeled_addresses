unix_lbasename	FOR,1:ELSE,0:SWITCH,0:functions,0:IF,1:DO,0:CALL,1:WHILE,0	21
0x4000040	              0x55	                                push rbp	        50	lbasename.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        50	lbasename.c	FUNCTION_1
0x4000044	        0x48897de8	             mov qword [rbp - 0x18], rdi	        50	lbasename.c	FUNCTION_1
0x4000048	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	lbasename.c	FUNCTION_1	FOR_1
0x400004c	        0x488945f8	                mov qword [rbp - 8], rax	        53	lbasename.c	FUNCTION_1	FOR_1
0x4000050	            0xeb1c	                           jmp 0x400006e	        53	lbasename.c	FUNCTION_1	FOR_1
0x4000052	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        54	lbasename.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000056	           0xfb600	                   movzx eax, byte [rax]	        54	lbasename.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000059	            0x3c2f	                            cmp al, 0x2f	        54	lbasename.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400005b	            0x750c	                           jne 0x4000069	        54	lbasename.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400005d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        55	lbasename.c	FUNCTION_1	FOR_1	IF_1
0x4000061	        0x4883c001	                              add rax, 1	        55	lbasename.c	FUNCTION_1	FOR_1	IF_1
0x4000065	        0x488945f8	                mov qword [rbp - 8], rax	        55	lbasename.c	FUNCTION_1	FOR_1	IF_1
0x4000069	      0x488345e801	               add qword [rbp - 0x18], 1	        53	lbasename.c	FUNCTION_1	FOR_1
0x400006e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	lbasename.c	FUNCTION_1	FOR_1
0x4000072	           0xfb600	                   movzx eax, byte [rax]	        53	lbasename.c	FUNCTION_1	FOR_1
0x4000075	            0x84c0	                             test al, al	        53	lbasename.c	FUNCTION_1	FOR_1
0x4000077	            0x75d9	                           jne 0x4000052	        53	lbasename.c	FUNCTION_1	FOR_1
0x4000079	        0x488b45f8	                mov rax, qword [rbp - 8]	        57	lbasename.c	FUNCTION_1
0x400007d	              0x5d	                                 pop rbp	        58	lbasename.c	FUNCTION_1
0x400007e	              0xc3	                                     ret	        58	lbasename.c	FUNCTION_1
lbasename	FOR,0:ELSE,0:SWITCH,0:functions,0:IF,0:DO,0:CALL,2:WHILE,0	9
0x4000100	              0x55	                                push rbp	        78	lbasename.c	FUNCTION_3
0x4000101	          0x4889e5	                            mov rbp, rsp	        78	lbasename.c	FUNCTION_3
0x4000104	        0x4883ec08	                              sub rsp, 8	        78	lbasename.c	FUNCTION_3
0x4000108	        0x48897df8	                mov qword [rbp - 8], rdi	        78	lbasename.c	FUNCTION_3
0x400010c	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	lbasename.c	FUNCTION_3	CALL_2
0x4000110	          0x4889c7	                            mov rdi, rax	        82	lbasename.c	FUNCTION_3	CALL_2
0x4000113	      0xe800000000	                          call 0x4000118	        82	lbasename.c	FUNCTION_3	CALL_2
0x4000118	              0xc9	                                   leave	        84	lbasename.c	FUNCTION_3
0x4000119	              0xc3	                                     ret	        84	lbasename.c	FUNCTION_3
dos_lbasename	FOR,1:ELSE,0:SWITCH,0:functions,0:IF,2:DO,0:CALL,2:WHILE,0	41
0x400007f	              0x55	                                push rbp	        62	lbasename.c	FUNCTION_2
0x4000080	          0x4889e5	                            mov rbp, rsp	        62	lbasename.c	FUNCTION_2
0x4000083	        0x48897de8	             mov qword [rbp - 0x18], rdi	        62	lbasename.c	FUNCTION_2
0x4000087	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        66	lbasename.c	FUNCTION_2	IF_1	CALL_1
0x400008b	           0xfb600	                   movzx eax, byte [rax]	        66	lbasename.c	FUNCTION_2	IF_1	CALL_1
0x400008e	           0xfbec0	                           movsx eax, al	        66	lbasename.c	FUNCTION_2	IF_1	CALL_1
0x4000091	           0xfb6c0	                           movzx eax, al	        66	lbasename.c	FUNCTION_2	IF_1	CALL_1
0x4000094	            0x4898	                                    cdqe	        66	lbasename.c	FUNCTION_2	IF_1	CALL_1
0x4000096	     0xfb784000000	             movzx eax, word [rax + rax]	        66	lbasename.c	FUNCTION_2	IF_1	CALL_1
0x400009e	           0xfb7c0	                           movzx eax, ax	        66	lbasename.c	FUNCTION_2	IF_1	CALL_1
0x40000a1	      0x2588000000	                           and eax, 0x88	        66	lbasename.c	FUNCTION_2	IF_1	CALL_1
0x40000a6	            0x85c0	                           test eax, eax	        66	lbasename.c	FUNCTION_2	IF_1	CALL_1
0x40000a8	            0x7414	                            je 0x40000be	        66	lbasename.c	FUNCTION_2	IF_1	CALL_1
0x40000aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        66	lbasename.c	FUNCTION_2	IF_1	CALL_1
0x40000ae	        0x4883c001	                              add rax, 1	        66	lbasename.c	FUNCTION_2	IF_1	CALL_1
0x40000b2	           0xfb600	                   movzx eax, byte [rax]	        66	lbasename.c	FUNCTION_2	IF_1	CALL_1
0x40000b5	            0x3c3a	                            cmp al, 0x3a	        66	lbasename.c	FUNCTION_2	IF_1	CALL_1
0x40000b7	            0x7505	                           jne 0x40000be	        66	lbasename.c	FUNCTION_2	IF_1	CALL_1
0x40000b9	      0x488345e802	               add qword [rbp - 0x18], 2	        67	lbasename.c	FUNCTION_2	IF_1
0x40000be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	lbasename.c	FUNCTION_2	FOR_1
0x40000c2	        0x488945f8	                mov qword [rbp - 8], rax	        69	lbasename.c	FUNCTION_2	FOR_1
0x40000c6	            0xeb27	                           jmp 0x40000ef	        69	lbasename.c	FUNCTION_2	FOR_1
0x40000c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	lbasename.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x40000cc	           0xfb600	                   movzx eax, byte [rax]	        70	lbasename.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x40000cf	            0x3c2f	                            cmp al, 0x2f	        70	lbasename.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x40000d1	            0x740b	                            je 0x40000de	        70	lbasename.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x40000d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	lbasename.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x40000d7	           0xfb600	                   movzx eax, byte [rax]	        70	lbasename.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x40000da	            0x3c5c	                            cmp al, 0x5c	        70	lbasename.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x40000dc	            0x750c	                           jne 0x40000ea	        70	lbasename.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x40000de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        71	lbasename.c	FUNCTION_2	FOR_1	IF_2
0x40000e2	        0x4883c001	                              add rax, 1	        71	lbasename.c	FUNCTION_2	FOR_1	IF_2
0x40000e6	        0x488945f8	                mov qword [rbp - 8], rax	        71	lbasename.c	FUNCTION_2	FOR_1	IF_2
0x40000ea	      0x488345e801	               add qword [rbp - 0x18], 1	        69	lbasename.c	FUNCTION_2	FOR_1
0x40000ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	lbasename.c	FUNCTION_2	FOR_1
0x40000f3	           0xfb600	                   movzx eax, byte [rax]	        69	lbasename.c	FUNCTION_2	FOR_1
0x40000f6	            0x84c0	                             test al, al	        69	lbasename.c	FUNCTION_2	FOR_1
0x40000f8	            0x75ce	                           jne 0x40000c8	        69	lbasename.c	FUNCTION_2	FOR_1
0x40000fa	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	lbasename.c	FUNCTION_2
0x40000fe	              0x5d	                                 pop rbp	        74	lbasename.c	FUNCTION_2
0x40000ff	              0xc3	                                     ret	        74	lbasename.c	FUNCTION_2
