decNumberInvert	SWITCH,0:IF,6:FOR,2:CALL,9:DO,0:ELSE,1:WHILE,0:functions,0	214
0x4001a31	              0x55	                                push rbp	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001a32	          0x4889e5	                            mov rbp, rsp	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001a35	        0x4883ec50	                           sub rsp, 0x50	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001a39	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001a3d	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001a41	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001a45	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4001a49	          0x8b4004	                mov eax, dword [rax + 4]	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4001a4c	            0x85c0	                           test eax, eax	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4001a4e	            0x751e	                           jne 0x4001a6e	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4001a50	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4001a54	         0xfb64008	               movzx eax, byte [rax + 8]	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4001a58	           0xfb6c0	                           movzx eax, al	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4001a5b	          0x83e070	                           and eax, 0x70	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4001a5e	            0x85c0	                           test eax, eax	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4001a60	            0x750c	                           jne 0x4001a6e	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4001a62	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4001a66	         0xfb64008	               movzx eax, byte [rax + 8]	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4001a6a	            0x84c0	                             test al, al	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4001a6c	            0x791e	                           jns 0x4001a8c	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4001a6e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1204	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_4
0x4001a72	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1204	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_4
0x4001a76	      0xbe80000000	                           mov esi, 0x80	      1204	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_4
0x4001a7b	          0x4889c7	                            mov rdi, rax	      1204	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_4
0x4001a7e	      0xe895c90000	                      call sym.decStatus	      1204	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_4
0x4001a83	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1205	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2
0x4001a87	      0xe961020000	                           jmp 0x4001ced	      1205	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2
0x4001a8c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1208	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001a90	        0x4883c00a	                            add rax, 0xa	      1208	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001a94	        0x488945e0	             mov qword [rbp - 0x20], rax	      1208	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001a98	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1209	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001a9c	        0x4883c00a	                            add rax, 0xa	      1209	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001aa0	        0x488945e8	             mov qword [rbp - 0x18], rax	      1209	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001aa4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001aa8	            0x8b00	                    mov eax, dword [rax]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001aaa	          0x83f831	                           cmp eax, 0x31	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001aad	            0x7f1b	                            jg 0x4001aca	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001aaf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001ab3	            0x8b00	                    mov eax, dword [rax]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001ab5	            0x4898	                                    cdqe	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001ab7	     0xfb680000000	                   movzx eax, byte [rax]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001abe	           0xfb6c0	                           movzx eax, al	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001ac1	          0x4801c0	                            add rax, rax	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001ac4	        0x4883e802	                              sub rax, 2	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001ac8	            0xeb24	                           jmp 0x4001aee	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001aca	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001ace	            0x8b00	                    mov eax, dword [rax]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001ad0	          0x8d4802	                      lea ecx, [rax + 2]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001ad3	      0xba56555555	                     mov edx, 0x55555556	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001ad8	            0x89c8	                            mov eax, ecx	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001ada	            0xf7ea	                                imul edx	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001adc	            0x89c8	                            mov eax, ecx	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001ade	          0xc1f81f	                           sar eax, 0x1f	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001ae1	            0x29c2	                            sub edx, eax	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001ae3	            0x89d0	                            mov eax, edx	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001ae5	            0x4898	                                    cdqe	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001ae7	          0x4801c0	                            add rax, rax	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001aea	        0x4883e802	                              sub rax, 2	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001aee	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001af2	          0x4801d0	                            add rax, rdx	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001af5	        0x488945f0	             mov qword [rbp - 0x10], rax	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4001af9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001afd	            0x8b00	                    mov eax, dword [rax]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001aff	          0x83f831	                           cmp eax, 0x31	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b02	            0x7f1b	                            jg 0x4001b1f	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b04	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b08	            0x8b00	                    mov eax, dword [rax]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b0a	            0x4898	                                    cdqe	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b0c	     0xfb680000000	                   movzx eax, byte [rax]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b13	           0xfb6c0	                           movzx eax, al	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b16	          0x4801c0	                            add rax, rax	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b19	        0x4883e802	                              sub rax, 2	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b1d	            0xeb24	                           jmp 0x4001b43	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b1f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b23	            0x8b00	                    mov eax, dword [rax]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b25	          0x8d4802	                      lea ecx, [rax + 2]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b28	      0xba56555555	                     mov edx, 0x55555556	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b2d	            0x89c8	                            mov eax, ecx	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b2f	            0xf7ea	                                imul edx	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b31	            0x89c8	                            mov eax, ecx	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b33	          0xc1f81f	                           sar eax, 0x1f	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b36	            0x29c2	                            sub edx, eax	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b38	            0x89d0	                            mov eax, edx	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b3a	            0x4898	                                    cdqe	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b3c	          0x4801c0	                            add rax, rax	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b3f	        0x4883e802	                              sub rax, 2	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b43	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b47	          0x4801d0	                            add rax, rdx	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b4a	        0x488945f8	                mov qword [rbp - 8], rax	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4001b4e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b52	            0x8b30	                    mov esi, dword [rax]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b54	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b58	            0x8b00	                    mov eax, dword [rax]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b5a	          0x83f831	                           cmp eax, 0x31	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b5d	            0x7f1d	                            jg 0x4001b7c	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b5f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b63	            0x8b00	                    mov eax, dword [rax]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b65	            0x4898	                                    cdqe	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b67	     0xfb680000000	                   movzx eax, byte [rax]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b6e	           0xfb6c0	                           movzx eax, al	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b71	          0x8d50ff	                      lea edx, [rax - 1]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b74	            0x89d0	                            mov eax, edx	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b76	             0x1c0	                            add eax, eax	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b78	             0x1d0	                            add eax, edx	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b7a	            0xeb24	                           jmp 0x4001ba0	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b7c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b80	            0x8b00	                    mov eax, dword [rax]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b82	          0x8d4802	                      lea ecx, [rax + 2]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b85	      0xba56555555	                     mov edx, 0x55555556	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b8a	            0x89c8	                            mov eax, ecx	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b8c	            0xf7ea	                                imul edx	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b8e	            0x89c8	                            mov eax, ecx	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b90	          0xc1f81f	                           sar eax, 0x1f	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b93	            0x29c2	                            sub edx, eax	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b95	            0x89d0	                            mov eax, edx	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b97	          0x8d50ff	                      lea edx, [rax - 1]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b9a	            0x89d0	                            mov eax, edx	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b9c	             0x1c0	                            add eax, eax	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001b9e	             0x1d0	                            add eax, edx	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001ba0	            0x29c6	                            sub esi, eax	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001ba2	            0x89f0	                            mov eax, esi	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001ba4	          0x8945d8	             mov dword [rbp - 0x28], eax	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4001ba7	      0xe9ee000000	                           jmp 0x4001c9a	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4001bac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1216	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	IF_3
0x4001bb0	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1216	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	IF_3
0x4001bb4	            0x7608	                           jbe 0x4001bbe	      1216	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	IF_3
0x4001bb6	    0x66c745d20000	                mov word [rbp - 0x2e], 0	      1216	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	IF_3
0x4001bbc	            0xeb0b	                           jmp 0x4001bc9	      1216	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	IF_3
0x4001bbe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1217	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x4001bc2	           0xfb700	                   movzx eax, word [rax]	      1217	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x4001bc5	        0x668945d2	               mov word [rbp - 0x2e], ax	      1217	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x4001bc9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1218	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x4001bcd	      0x66c7000000	                       mov word [rax], 0	      1218	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x4001bd2	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1221	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001bd9	      0xe9a5000000	                           jmp 0x4001c83	      1221	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001bde	         0xfb745d2	            movzx eax, word [rbp - 0x2e]	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4001be2	          0x83e001	                              and eax, 1	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4001be5	            0x85c0	                           test eax, eax	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4001be7	            0x751c	                           jne 0x4001c05	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4001be9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4001bed	           0xfb710	                   movzx edx, word [rax]	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4001bf0	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4001bf3	            0x4898	                                    cdqe	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4001bf5	    0x8b0485000000	                  mov eax, dword [rax*4]	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4001bfc	             0x1c2	                            add edx, eax	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4001bfe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4001c02	          0x668910	                      mov word [rax], dx	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4001c05	         0xfb74dd2	            movzx ecx, word [rbp - 0x2e]	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c09	           0xfb7c1	                           movzx eax, cx	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c0c	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c12	          0xc1e810	                           shr eax, 0x10	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c15	            0x89c2	                            mov edx, eax	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c17	        0x66c1ea03	                               shr dx, 3	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c1b	            0x89d0	                            mov eax, edx	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c1d	          0xc1e002	                              shl eax, 2	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c20	             0x1d0	                            add eax, edx	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c22	             0x1c0	                            add eax, eax	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c24	            0x29c1	                            sub ecx, eax	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c26	            0x89ca	                            mov edx, ecx	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c28	           0xfb7c2	                           movzx eax, dx	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c2b	          0x8945dc	             mov dword [rbp - 0x24], eax	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c2e	         0xfb745d2	            movzx eax, word [rbp - 0x2e]	      1224	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c32	           0xfb7c0	                           movzx eax, ax	      1224	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c35	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	      1224	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c3b	          0xc1e810	                           shr eax, 0x10	      1224	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c3e	        0x66c1e803	                               shr ax, 3	      1224	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c42	        0x668945d2	               mov word [rbp - 0x2e], ax	      1224	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c46	        0x837ddc01	               cmp dword [rbp - 0x24], 1	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x4001c4a	            0x7e1e	                           jle 0x4001c6a	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x4001c4c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1226	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5	CALL_8
0x4001c50	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1226	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5	CALL_8
0x4001c54	      0xbe80000000	                           mov esi, 0x80	      1226	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5	CALL_8
0x4001c59	          0x4889c7	                            mov rdi, rax	      1226	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5	CALL_8
0x4001c5c	      0xe8b7c70000	                      call sym.decStatus	      1226	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5	CALL_8
0x4001c61	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1227	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x4001c65	      0xe983000000	                           jmp 0x4001ced	      1227	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x4001c6a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4001c6e	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4001c72	            0x750b	                           jne 0x4001c7f	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4001c74	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4001c77	          0x83e801	                              sub eax, 1	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4001c7a	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4001c7d	            0x7410	                            je 0x4001c8f	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4001c7f	        0x8345d401	               add dword [rbp - 0x2c], 1	      1221	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c83	        0x837dd402	               cmp dword [rbp - 0x2c], 2	      1221	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c87	     0xf8e51ffffff	                           jle 0x4001bde	      1221	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c8d	            0xeb01	                           jmp 0x4001c90	      1221	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4001c8f	              0x90	                                     nop	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4001c90	      0x488345e002	               add qword [rbp - 0x20], 2	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4001c95	      0x488345e802	               add qword [rbp - 0x18], 2	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4001c9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4001c9e	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4001ca2	     0xf8604ffffff	                           jbe 0x4001bac	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4001ca8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4001cac	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4001cb0	        0x4883c20a	                            add rdx, 0xa	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4001cb4	          0x4829d0	                            sub rax, rdx	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4001cb7	          0x48d1f8	                              sar rax, 1	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4001cba	            0x89c2	                            mov edx, eax	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4001cbc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4001cc0	        0x4883c00a	                            add rax, 0xa	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4001cc4	            0x89d6	                            mov esi, edx	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4001cc6	          0x4889c7	                            mov rdi, rax	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4001cc9	      0xe8a6c70000	                   call sym.decGetDigits	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4001cce	            0x89c2	                            mov edx, eax	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4001cd0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4001cd4	            0x8910	                    mov dword [rax], edx	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4001cd6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1234	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001cda	    0xc74004000000	                  mov dword [rax + 4], 0	      1234	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001ce1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1235	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001ce5	        0xc6400800	                   mov byte [rax + 8], 0	      1235	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001ce9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1236	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001ced	              0xc9	                                   leave	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4001cee	              0xc3	                                     ret	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
decNumberMinMag	SWITCH,0:IF,1:FOR,0:CALL,3:DO,0:ELSE,0:WHILE,0:functions,0	36
0x4002594	              0x55	                                push rbp	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4002595	          0x4889e5	                            mov rbp, rsp	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4002598	        0x4883ec30	                           sub rsp, 0x30	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x400259c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40025a0	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40025a4	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40025a8	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40025ac	    0x64488b042528	                mov rax, qword fs:[0x28]	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40025b5	        0x488945f8	                mov qword [rbp - 8], rax	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40025b9	            0x31c0	                            xor eax, eax	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40025bb	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1608	decNumber.c	FUNCTION_68	FUNCTION_26
0x40025c2	        0x488d7df4	                    lea rdi, [rbp - 0xc]	      1609	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_1
0x40025c6	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1609	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_1
0x40025ca	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1609	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_1
0x40025ce	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1609	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_1
0x40025d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1609	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_1
0x40025d6	          0x4989f9	                             mov r9, rdi	      1609	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_1
0x40025d9	    0x41b808000000	                              mov r8d, 8	      1609	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_1
0x40025df	          0x4889c7	                            mov rdi, rax	      1609	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_1
0x40025e2	      0xe872910000	                   call sym.decCompareOp	      1609	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_1
0x40025e7	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x40025ea	            0x85c0	                           test eax, eax	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x40025ec	            0x7415	                            je 0x4002603	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x40025ee	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x40025f1	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x40025f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x40025f9	            0x89ce	                            mov esi, ecx	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x40025fb	          0x4889c7	                            mov rdi, rax	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x40025fe	      0xe815be0000	                      call sym.decStatus	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x4002603	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1614	decNumber.c	FUNCTION_68	FUNCTION_26
0x4002607	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x400260b	    0x644833342528	                xor rsi, qword fs:[0x28]	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4002614	            0x7405	                            je 0x400261b	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4002616	      0xe800000000	                          call 0x400261b	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x400261b	              0xc9	                                   leave	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x400261c	              0xc3	                                     ret	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
decNumberFromString	SWITCH,0:IF,47:FOR,8:CALL,15:DO,1:ELSE,4:WHILE,0:functions,0	542
0x400045a	              0x55	                                push rbp	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x400045b	          0x4889e5	                            mov rbp, rsp	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x400045e	    0x4881ecb00000	                           sub rsp, 0xb0	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4000465	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x400046c	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4000473	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x400047a	    0x64488b042528	                mov rax, qword fs:[0x28]	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4000483	        0x488945f8	                mov qword [rbp - 8], rax	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4000487	            0x31c0	                            xor eax, eax	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4000489	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	       491	decNumber.c	FUNCTION_68	FUNCTION_7
0x4000493	    0xc68572ffffff	                mov byte [rbp - 0x8e], 0	       492	decNumber.c	FUNCTION_68	FUNCTION_7
0x400049a	    0x48c745980000	               mov qword [rbp - 0x68], 0	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x40004a2	    0xc74580000000	               mov dword [rbp - 0x80], 0	       497	decNumber.c	FUNCTION_68	FUNCTION_7
0x40004a9	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       498	decNumber.c	FUNCTION_68	FUNCTION_7
0x40004b1	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       499	decNumber.c	FUNCTION_68	FUNCTION_7
0x40004b8	        0x488945a8	             mov qword [rbp - 0x58], rax	       499	decNumber.c	FUNCTION_68	FUNCTION_7
0x40004bc	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       500	decNumber.c	FUNCTION_68	FUNCTION_7
0x40004c4	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	       507	decNumber.c	FUNCTION_68	FUNCTION_7
0x40004ce	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       515	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1
0x40004d5	        0x488945b8	             mov qword [rbp - 0x48], rax	       515	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1
0x40004d9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40004dd	           0xfb600	                   movzx eax, byte [rax]	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40004e0	            0x3c2f	                            cmp al, 0x2f	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40004e2	            0x7e19	                           jle 0x40004fd	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40004e4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40004e8	           0xfb600	                   movzx eax, byte [rax]	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40004eb	            0x3c39	                            cmp al, 0x39	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40004ed	            0x7f0e	                            jg 0x40004fd	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40004ef	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       517	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40004f3	        0x488945b0	             mov qword [rbp - 0x50], rax	       517	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40004f7	        0x83458001	               add dword [rbp - 0x80], 1	       518	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40004fb	            0xeb64	                           jmp 0x4000561	       519	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40004fd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x4000501	           0xfb600	                   movzx eax, byte [rax]	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x4000504	            0x3c2e	                            cmp al, 0x2e	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x4000506	            0x7520	                           jne 0x4000528	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x4000508	      0x48837da000	               cmp qword [rbp - 0x60], 0	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x400050d	            0x7519	                           jne 0x4000528	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x400050f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       522	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x4000513	        0x488945a0	             mov qword [rbp - 0x60], rax	       522	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x4000517	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       523	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3	IF_4
0x400051b	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       523	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3	IF_4
0x400051f	            0x753f	                           jne 0x4000560	       523	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3	IF_4
0x4000521	      0x488345a801	               add qword [rbp - 0x58], 1	       523	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3	IF_4
0x4000526	            0xeb38	                           jmp 0x4000560	       524	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x4000528	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       525	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5
0x400052c	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	       525	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5
0x4000533	            0x7536	                           jne 0x400056b	       525	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5
0x4000535	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       526	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x4000539	           0xfb600	                   movzx eax, byte [rax]	       526	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x400053c	            0x3c2d	                            cmp al, 0x2d	       526	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x400053e	            0x750e	                           jne 0x400054e	       526	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x4000540	      0x488345a801	               add qword [rbp - 0x58], 1	       527	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x4000545	    0xc68572ffffff	            mov byte [rbp - 0x8e], 0x80 	       528	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x400054c	            0xeb13	                           jmp 0x4000561	       529	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x400054e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       530	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x4000552	           0xfb600	                   movzx eax, byte [rax]	       530	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x4000555	            0x3c2b	                            cmp al, 0x2b	       530	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x4000557	            0x7512	                           jne 0x400056b	       530	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x4000559	      0x488345a801	               add qword [rbp - 0x58], 1	       531	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x400055e	            0xeb01	                           jmp 0x4000561	       532	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x4000560	              0x90	                                     nop	       524	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x4000561	      0x488345b801	               add qword [rbp - 0x48], 1	       515	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1
0x4000566	      0xe96effffff	                           jmp 0x40004d9	       536	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1
0x400056b	              0x90	                                     nop	       535	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1
0x400056c	      0x48837db000	               cmp qword [rbp - 0x50], 0	       538	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4000571	     0xf85fa010000	                           jne 0x4000771	       538	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4000577	    0xc78578ffffff	               mov dword [rbp - 0x88], 1	       539	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4000581	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       540	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_9
0x4000585	           0xfb600	                   movzx eax, byte [rax]	       540	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_9
0x4000588	            0x84c0	                             test al, al	       540	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_9
0x400058a	     0xf8440060000	                            je 0x4000bd0	       540	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_9
0x4000590	      0x48837da000	               cmp qword [rbp - 0x60], 0	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x4000595	     0xf8538060000	                           jne 0x4000bd3	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x400059b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       547	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	CALL_4
0x40005a2	          0x4889c7	                            mov rdi, rax	       547	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	CALL_4
0x40005a5	      0xe800000000	                          call 0x40005aa	       547	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	CALL_4
0x40005aa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       548	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12	CALL_5
0x40005ae	      0xba00000000	                              mov edx, 0	       548	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12	CALL_5
0x40005b3	      0xbe00000000	                              mov esi, 0	       548	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12	CALL_5
0x40005b8	          0x4889c7	                            mov rdi, rax	       548	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12	CALL_5
0x40005bb	      0xe8f3db0000	                       call sym.decBiStr	       548	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12	CALL_5
0x40005c0	            0x84c0	                             test al, al	       548	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12	CALL_5
0x40005c2	            0x751a	                           jne 0x40005de	       548	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12	CALL_5
0x40005c4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       549	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12	CALL_6
0x40005c8	      0xba00000000	                              mov edx, 0	       549	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12	CALL_6
0x40005cd	      0xbe00000000	                              mov esi, 0	       549	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12	CALL_6
0x40005d2	          0x4889c7	                            mov rdi, rax	       549	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12	CALL_6
0x40005d5	      0xe8d9db0000	                       call sym.decBiStr	       549	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12	CALL_6
0x40005da	            0x84c0	                             test al, al	       549	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12	CALL_6
0x40005dc	            0x7425	                            je 0x4000603	       549	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12	CALL_6
0x40005de	     0xfb68572ffff	            movzx eax, byte [rbp - 0x8e]	       550	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x40005e5	          0x83c840	                            or eax, 0x40	       550	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x40005e8	            0x89c2	                            mov edx, eax	       550	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x40005ea	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       550	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x40005f1	          0x885008	                  mov byte [rax + 8], dl	       550	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x40005f4	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	       551	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x40005fe	      0xe9ec050000	                           jmp 0x4000bef	       552	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x4000603	     0xfb68572ffff	            movzx eax, byte [rbp - 0x8e]	       556	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x400060a	          0x83c820	                            or eax, 0x20	       556	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x400060d	            0x89c2	                            mov edx, eax	       556	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x400060f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       556	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4000616	          0x885008	                  mov byte [rax + 8], dl	       556	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4000619	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x400061d	           0xfb600	                   movzx eax, byte [rax]	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4000620	            0x3c73	                            cmp al, 0x73	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4000622	            0x740b	                            je 0x400062f	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4000624	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4000628	           0xfb600	                   movzx eax, byte [rax]	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x400062b	            0x3c53	                            cmp al, 0x53	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x400062d	            0x751b	                           jne 0x400064a	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x400062f	      0x488345b801	               add qword [rbp - 0x48], 1	       558	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4000634	     0xfb68572ffff	            movzx eax, byte [rbp - 0x8e]	       559	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x400063b	          0x83c810	                            or eax, 0x10	       559	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x400063e	            0x89c2	                            mov edx, eax	       559	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4000640	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       559	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4000647	          0x885008	                  mov byte [rax + 8], dl	       559	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x400064a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x400064e	           0xfb600	                   movzx eax, byte [rax]	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x4000651	            0x3c6e	                            cmp al, 0x6e	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x4000653	            0x740f	                            je 0x4000664	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x4000655	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x4000659	           0xfb600	                   movzx eax, byte [rax]	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x400065c	            0x3c4e	                            cmp al, 0x4e	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x400065e	     0xf8572050000	                           jne 0x4000bd6	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x4000664	      0x488345b801	               add qword [rbp - 0x48], 1	       562	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4000669	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x400066d	           0xfb600	                   movzx eax, byte [rax]	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x4000670	            0x3c61	                            cmp al, 0x61	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x4000672	            0x740f	                            je 0x4000683	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x4000674	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x4000678	           0xfb600	                   movzx eax, byte [rax]	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x400067b	            0x3c41	                            cmp al, 0x41	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x400067d	     0xf8556050000	                           jne 0x4000bd9	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x4000683	      0x488345b801	               add qword [rbp - 0x48], 1	       564	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4000688	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x400068c	           0xfb600	                   movzx eax, byte [rax]	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x400068f	            0x3c6e	                            cmp al, 0x6e	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x4000691	            0x740f	                            je 0x40006a2	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x4000693	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x4000697	           0xfb600	                   movzx eax, byte [rax]	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x400069a	            0x3c4e	                            cmp al, 0x4e	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x400069c	     0xf853a050000	                           jne 0x4000bdc	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x40006a2	      0x488345b801	               add qword [rbp - 0x48], 1	       566	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x40006a7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x40006ab	        0x488945a8	             mov qword [rbp - 0x58], rax	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x40006af	            0xeb05	                           jmp 0x40006b6	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x40006b1	      0x488345a801	               add qword [rbp - 0x58], 1	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x40006b6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x40006ba	           0xfb600	                   movzx eax, byte [rax]	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x40006bd	            0x3c30	                            cmp al, 0x30	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x40006bf	            0x74f0	                            je 0x40006b1	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x40006c1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       570	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_17
0x40006c5	           0xfb600	                   movzx eax, byte [rax]	       570	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_17
0x40006c8	            0x84c0	                             test al, al	       570	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_17
0x40006ca	            0x750f	                           jne 0x40006db	       570	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_17
0x40006cc	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	       571	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_17
0x40006d6	      0xe914050000	                           jmp 0x4000bef	       572	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_17
0x40006db	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       575	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3
0x40006df	        0x488945b8	             mov qword [rbp - 0x48], rax	       575	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3
0x40006e3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x40006e7	           0xfb600	                   movzx eax, byte [rax]	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x40006ea	            0x3c2f	                            cmp al, 0x2f	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x40006ec	            0x7e1e	                           jle 0x400070c	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x40006ee	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x40006f2	           0xfb600	                   movzx eax, byte [rax]	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x40006f5	            0x3c39	                            cmp al, 0x39	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x40006f7	            0x7f13	                            jg 0x400070c	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x40006f9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       577	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3
0x40006fd	        0x488945b0	             mov qword [rbp - 0x50], rax	       577	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3
0x4000701	      0x488345b801	               add qword [rbp - 0x48], 1	       575	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3
0x4000706	        0x83458001	               add dword [rbp - 0x80], 1	       575	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3
0x400070a	            0xebd7	                           jmp 0x40006e3	       578	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3
0x400070c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       579	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_19
0x4000710	           0xfb600	                   movzx eax, byte [rax]	       579	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_19
0x4000713	            0x84c0	                             test al, al	       579	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_19
0x4000715	     0xf85c4040000	                           jne 0x4000bdf	       579	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_19
0x400071b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       580	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20
0x4000722	            0x8b00	                    mov eax, dword [rax]	       580	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20
0x4000724	          0x83e801	                              sub eax, 1	       580	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20
0x4000727	          0x3b4580	             cmp eax, dword [rbp - 0x80]	       580	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20
0x400072a	            0x7d25	                           jge 0x4000751	       580	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20
0x400072c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       583	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_21
0x4000733	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       583	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_21
0x4000737	            0x84c0	                             test al, al	       583	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_21
0x4000739	     0xf85a3040000	                           jne 0x4000be2	       583	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_21
0x400073f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x4000746	            0x8b00	                    mov eax, dword [rax]	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x4000748	          0x3b4580	             cmp eax, dword [rbp - 0x80]	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x400074b	     0xf8c94040000	                            jl 0x4000be5	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x4000751	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	       587	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x400075b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       588	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4000762	         0xfb64008	               movzx eax, byte [rax + 8]	       588	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4000766	    0x888572ffffff	               mov byte [rbp - 0x8e], al	       588	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x400076c	      0xe93f010000	                           jmp 0x40008b0	       588	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4000771	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       591	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x4000775	           0xfb600	                   movzx eax, byte [rax]	       591	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x4000778	            0x84c0	                             test al, al	       591	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x400077a	     0xf8430010000	                            je 0x40008b0	       591	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x4000780	    0xc78578ffffff	               mov dword [rbp - 0x88], 1	       595	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x400078a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x400078e	           0xfb600	                   movzx eax, byte [rax]	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x4000791	            0x3c65	                            cmp al, 0x65	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x4000793	            0x740f	                            je 0x40007a4	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x4000795	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x4000799	           0xfb600	                   movzx eax, byte [rax]	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x400079c	            0x3c45	                            cmp al, 0x45	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x400079e	     0xf8544040000	                           jne 0x4000be8	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x40007a4	    0xc68573ffffff	                mov byte [rbp - 0x8d], 0	       599	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x40007ab	      0x488345b801	               add qword [rbp - 0x48], 1	       600	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x40007b0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x40007b4	           0xfb600	                   movzx eax, byte [rax]	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x40007b7	            0x3c2d	                            cmp al, 0x2d	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x40007b9	            0x750e	                           jne 0x40007c9	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x40007bb	    0xc68573ffffff	                mov byte [rbp - 0x8d], 1	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x40007c2	      0x488345b801	               add qword [rbp - 0x48], 1	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x40007c7	            0xeb10	                           jmp 0x40007d9	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x40007c9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       602	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_26
0x40007cd	           0xfb600	                   movzx eax, byte [rax]	       602	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_26
0x40007d0	            0x3c2b	                            cmp al, 0x2b	       602	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_26
0x40007d2	            0x7505	                           jne 0x40007d9	       602	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_26
0x40007d4	      0x488345b801	               add qword [rbp - 0x48], 1	       602	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_26
0x40007d9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       603	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_27
0x40007dd	           0xfb600	                   movzx eax, byte [rax]	       603	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_27
0x40007e0	            0x84c0	                             test al, al	       603	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_27
0x40007e2	     0xf8403040000	                            je 0x4000beb	       603	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_27
0x40007e8	            0xeb05	                           jmp 0x40007ef	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x40007ea	      0x488345b801	               add qword [rbp - 0x48], 1	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x40007ef	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x40007f3	           0xfb600	                   movzx eax, byte [rax]	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x40007f6	            0x3c30	                            cmp al, 0x30	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x40007f8	            0x750f	                           jne 0x4000809	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x40007fa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x40007fe	        0x4883c001	                              add rax, 1	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4000802	           0xfb600	                   movzx eax, byte [rax]	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4000805	            0x84c0	                             test al, al	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4000807	            0x75e1	                           jne 0x40007ea	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4000809	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       606	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x400080d	        0x488945c8	             mov qword [rbp - 0x38], rax	       606	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x4000811	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4000815	           0xfb600	                   movzx eax, byte [rax]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4000818	            0x3c2f	                            cmp al, 0x2f	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400081a	            0x7e3b	                           jle 0x4000857	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400081c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4000820	           0xfb600	                   movzx eax, byte [rax]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4000823	            0x3c39	                            cmp al, 0x39	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4000825	            0x7f30	                            jg 0x4000857	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4000827	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x400082d	          0x8d1400	                    lea edx, [rax + rax]	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x4000830	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x4000836	          0xc1e003	                              shl eax, 3	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x4000839	             0x1c2	                            add edx, eax	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x400083b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x400083f	           0xfb600	                   movzx eax, byte [rax]	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x4000842	           0xfbec0	                           movsx eax, al	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x4000845	             0x1d0	                            add eax, edx	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x4000847	          0x83e830	                           sub eax, 0x30	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x400084a	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x4000850	      0x488345b801	               add qword [rbp - 0x48], 1	       607	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5
0x4000855	            0xebba	                           jmp 0x4000811	       610	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5
0x4000857	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       612	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_29
0x400085b	           0xfb600	                   movzx eax, byte [rax]	       612	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_29
0x400085e	            0x84c0	                             test al, al	       612	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_29
0x4000860	     0xf8588030000	                           jne 0x4000bee	       612	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_29
0x4000866	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       617	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30
0x400086a	        0x4883c00a	                            add rax, 0xa	       617	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30
0x400086e	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       617	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30
0x4000872	            0x7723	                            ja 0x4000897	       617	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30
0x4000874	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x4000878	        0x4883c00a	                            add rax, 0xa	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x400087c	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x4000880	            0x720b	                            jb 0x400088d	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x4000882	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x4000886	           0xfb600	                   movzx eax, byte [rax]	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x4000889	            0x3c31	                            cmp al, 0x31	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x400088b	            0x7e0a	                           jle 0x4000897	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x400088d	    0xc7857cffffff	      mov dword [rbp - 0x84], 0x773593fe	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x4000897	    0x80bd73ffffff	                cmp byte [rbp - 0x8d], 0	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x400089e	            0x7406	                            je 0x40008a6	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x40008a0	    0xf79d7cffffff	                  neg dword [rbp - 0x84]	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x40008a6	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	       622	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x40008b0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       629	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33
0x40008b4	           0xfb600	                   movzx eax, byte [rax]	       629	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33
0x40008b7	            0x3c30	                            cmp al, 0x30	       629	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33
0x40008b9	            0x753e	                           jne 0x40008f9	       629	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33
0x40008bb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40008bf	        0x488945b8	             mov qword [rbp - 0x48], rax	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40008c3	            0xeb27	                           jmp 0x40008ec	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40008c5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       631	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_34
0x40008c9	           0xfb600	                   movzx eax, byte [rax]	       631	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_34
0x40008cc	            0x3c2e	                            cmp al, 0x2e	       631	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_34
0x40008ce	            0x7411	                            je 0x40008e1	       631	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_34
0x40008d0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       632	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_35
0x40008d4	           0xfb600	                   movzx eax, byte [rax]	       632	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_35
0x40008d7	            0x3c30	                            cmp al, 0x30	       632	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_35
0x40008d9	            0x751d	                           jne 0x40008f8	       632	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_35
0x40008db	        0x836d8001	               sub dword [rbp - 0x80], 1	       633	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40008df	            0xeb01	                           jmp 0x40008e2	       633	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40008e1	              0x90	                                     nop	       631	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_34
0x40008e2	      0x488345b801	               add qword [rbp - 0x48], 1	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40008e7	      0x488345a801	               add qword [rbp - 0x58], 1	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40008ec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40008f0	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40008f4	            0x72cf	                            jb 0x40008c5	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40008f6	            0xeb01	                           jmp 0x40008f9	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40008f8	              0x90	                                     nop	       632	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_35
0x40008f9	      0x48837da000	               cmp qword [rbp - 0x60], 0	       645	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x40008fe	            0x7426	                            je 0x4000926	       645	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4000900	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       645	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4000904	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       645	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4000908	            0x731c	                           jae 0x4000926	       645	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x400090a	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       646	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4000910	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       646	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4000914	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       646	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4000918	          0x4829d1	                            sub rcx, rdx	       646	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x400091b	          0x4889ca	                            mov rdx, rcx	       646	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x400091e	            0x29d0	                            sub eax, edx	       646	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4000920	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       646	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4000926	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x400092d	            0x8b00	                    mov eax, dword [rax]	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x400092f	          0x3b4580	             cmp eax, dword [rbp - 0x80]	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x4000932	            0x7c11	                            jl 0x4000945	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x4000934	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x400093b	        0x4883c00a	                            add rax, 0xa	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x400093f	        0x48894590	             mov qword [rbp - 0x70], rax	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x4000943	            0xeb78	                           jmp 0x40009bd	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x4000945	        0x837d8031	           cmp dword [rbp - 0x80], 0x31 	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4000949	            0x7f13	                            jg 0x400095e	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400094b	          0x8b4580	             mov eax, dword [rbp - 0x80]	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400094e	            0x4898	                                    cdqe	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4000950	     0xfb680000000	                   movzx eax, byte [rax]	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4000957	           0xfb6c0	                           movzx eax, al	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400095a	             0x1c0	                            add eax, eax	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400095c	            0xeb1a	                           jmp 0x4000978	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400095e	          0x8b4580	             mov eax, dword [rbp - 0x80]	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4000961	          0x8d4802	                      lea ecx, [rax + 2]	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4000964	      0xba56555555	                     mov edx, 0x55555556	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4000969	            0x89c8	                            mov eax, ecx	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400096b	            0xf7ea	                                imul edx	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400096d	            0x89c8	                            mov eax, ecx	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400096f	          0xc1f81f	                           sar eax, 0x1f	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4000972	            0x29c2	                            sub edx, eax	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4000974	            0x89d0	                            mov eax, edx	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4000976	             0x1c0	                            add eax, eax	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4000978	          0x89458c	             mov dword [rbp - 0x74], eax	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400097b	        0x488d45d0	                   lea rax, [rbp - 0x30]	       654	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3
0x400097f	        0x48894590	             mov qword [rbp - 0x70], rax	       654	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3
0x4000983	        0x837d8c1e	           cmp dword [rbp - 0x74], 0x1e 	       655	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4000987	            0x7e34	                           jle 0x40009bd	       655	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4000989	          0x8b458c	             mov eax, dword [rbp - 0x74]	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400098c	            0x4898	                                    cdqe	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400098e	          0x4889c7	                            mov rdi, rax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4000991	      0xe800000000	                          call 0x4000996	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4000996	        0x48894598	             mov qword [rbp - 0x68], rax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400099a	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x400099f	            0x7514	                           jne 0x40009b5	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40009a1	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40009a7	          0x83c810	                            or eax, 0x10	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40009aa	    0x898578ffffff	             mov dword [rbp - 0x88], eax	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40009b0	      0xe93a020000	                           jmp 0x4000bef	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40009b5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       658	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40009b9	        0x48894590	             mov qword [rbp - 0x70], rax	       658	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40009bd	    0xc74588000000	               mov dword [rbp - 0x78], 0	       666	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x40009c4	        0x837d8031	           cmp dword [rbp - 0x80], 0x31 	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009c8	            0x7f18	                            jg 0x40009e2	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009ca	          0x8b4580	             mov eax, dword [rbp - 0x80]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009cd	            0x4898	                                    cdqe	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009cf	     0xfb680000000	                   movzx eax, byte [rax]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009d6	           0xfb6c0	                           movzx eax, al	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009d9	          0x4801c0	                            add rax, rax	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009dc	        0x4883e802	                              sub rax, 2	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009e0	            0xeb21	                           jmp 0x4000a03	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009e2	          0x8b4580	             mov eax, dword [rbp - 0x80]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009e5	          0x8d4802	                      lea ecx, [rax + 2]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009e8	      0xba56555555	                     mov edx, 0x55555556	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009ed	            0x89c8	                            mov eax, ecx	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009ef	            0xf7ea	                                imul edx	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009f1	            0x89c8	                            mov eax, ecx	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009f3	          0xc1f81f	                           sar eax, 0x1f	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009f6	            0x29c2	                            sub edx, eax	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009f8	            0x89d0	                            mov eax, edx	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009fa	            0x4898	                                    cdqe	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009fc	          0x4801c0	                            add rax, rax	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40009ff	        0x4883e802	                              sub rax, 2	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4000a03	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4000a07	          0x4801d0	                            add rax, rdx	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4000a0a	        0x488945c0	             mov qword [rbp - 0x40], rax	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4000a0e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000a12	        0x488b4590	             mov rax, qword [rbp - 0x70]	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000a16	          0x4829c2	                            sub rdx, rax	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000a19	          0x4889d0	                            mov rax, rdx	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000a1c	          0x48d1f8	                              sar rax, 1	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000a1f	            0x89c2	                            mov edx, eax	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000a21	            0x89d0	                            mov eax, edx	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000a23	             0x1c0	                            add eax, eax	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000a25	             0x1d0	                            add eax, edx	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000a27	            0xf7d8	                                 neg eax	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000a29	          0x8b5580	             mov edx, dword [rbp - 0x80]	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000a2c	             0x1d0	                            add eax, edx	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000a2e	          0x894584	             mov dword [rbp - 0x7c], eax	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000a31	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       669	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4000a35	        0x488945b8	             mov qword [rbp - 0x48], rax	       669	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4000a39	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       670	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_41
0x4000a3d	           0xfb600	                   movzx eax, byte [rax]	       670	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_41
0x4000a40	            0x3c2e	                            cmp al, 0x2e	       670	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_41
0x4000a42	            0x7455	                            je 0x4000a99	       670	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_41
0x4000a44	          0x8b4588	             mov eax, dword [rbp - 0x78]	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x4000a47	          0x8d1400	                    lea edx, [rax + rax]	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x4000a4a	          0x8b4588	             mov eax, dword [rbp - 0x78]	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x4000a4d	          0xc1e003	                              shl eax, 3	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x4000a50	             0x1c2	                            add edx, eax	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x4000a52	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x4000a56	           0xfb600	                   movzx eax, byte [rax]	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x4000a59	           0xfbec0	                           movsx eax, al	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x4000a5c	             0x1d0	                            add eax, edx	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x4000a5e	          0x83e830	                           sub eax, 0x30	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x4000a61	          0x894588	             mov dword [rbp - 0x78], eax	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x4000a64	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       672	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_42
0x4000a68	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       672	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_42
0x4000a6c	            0x7436	                            je 0x4000aa4	       672	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_42
0x4000a6e	        0x836d8401	               sub dword [rbp - 0x7c], 1	       673	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4000a72	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       674	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_43
0x4000a76	            0x7f24	                            jg 0x4000a9c	       674	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_43
0x4000a78	          0x8b4588	             mov eax, dword [rbp - 0x78]	       675	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4000a7b	            0x89c2	                            mov edx, eax	       675	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4000a7d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       675	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4000a81	          0x668910	                      mov word [rax], dx	       675	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4000a84	      0x48836dc002	               sub qword [rbp - 0x40], 2	       676	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4000a89	    0xc74584030000	               mov dword [rbp - 0x7c], 3	       677	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4000a90	    0xc74588000000	               mov dword [rbp - 0x78], 0	       678	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4000a97	            0xeb04	                           jmp 0x4000a9d	       678	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4000a99	              0x90	                                     nop	       670	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_41
0x4000a9a	            0xeb01	                           jmp 0x4000a9d	       670	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_41
0x4000a9c	              0x90	                                     nop	       674	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_43
0x4000a9d	      0x488345b801	               add qword [rbp - 0x48], 1	       669	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4000aa2	            0xeb95	                           jmp 0x4000a39	       679	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4000aa4	              0x90	                                     nop	       672	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_42
0x4000aa5	          0x8b4588	             mov eax, dword [rbp - 0x78]	       680	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000aa8	            0x89c2	                            mov edx, eax	       680	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000aaa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       680	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000aae	          0x668910	                      mov word [rax], dx	       680	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000ab1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       692	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000ab8	     0xfb69572ffff	            movzx edx, byte [rbp - 0x8e]	       692	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000abf	          0x885008	                  mov byte [rax + 8], dl	       692	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000ac2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       693	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000ac9	    0x8b957cffffff	             mov edx, dword [rbp - 0x84]	       693	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000acf	          0x895004	                mov dword [rax + 4], edx	       693	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000ad2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       694	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000ad9	          0x8b5580	             mov edx, dword [rbp - 0x80]	       694	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000adc	            0x8910	                    mov dword [rax], edx	       694	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4000ade	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       697	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45
0x4000ae5	            0x8b00	                    mov eax, dword [rax]	       697	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45
0x4000ae7	          0x3b4580	             cmp eax, dword [rbp - 0x80]	       697	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45
0x4000aea	            0x7d64	                           jge 0x4000b50	       697	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45
0x4000aec	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	       698	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45
0x4000af6	    0x4c8d8578ffff	                    lea r8, [rbp - 0x88]	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4000afd	    0x488dbd74ffff	                   lea rdi, [rbp - 0x8c]	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4000b04	          0x8b4d80	             mov ecx, dword [rbp - 0x80]	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4000b07	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4000b0b	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4000b12	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4000b19	          0x4d89c1	                              mov r9, r8	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4000b1c	          0x4989f8	                             mov r8, rdi	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4000b1f	          0x4889c7	                            mov rdi, rax	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4000b22	      0xe80dc30000	                    call sym.decSetCoeff	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4000b27	    0x488d8d78ffff	                   lea rcx, [rbp - 0x88]	       701	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_13
0x4000b2e	    0x488d9574ffff	                   lea rdx, [rbp - 0x8c]	       701	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_13
0x4000b35	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	       701	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_13
0x4000b3c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       701	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_13
0x4000b43	          0x4889c7	                            mov rdi, rax	       701	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_13
0x4000b46	      0xe8b2cb0000	                    call sym.decFinalize	       701	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_13
0x4000b4b	      0xe99f000000	                           jmp 0x4000bef	       701	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_13
0x4000b50	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b57	          0x8b4004	                mov eax, dword [rax + 4]	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b5a	          0x8d48ff	                      lea ecx, [rax - 1]	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b5d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b64	          0x8b5008	                mov edx, dword [rax + 8]	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b67	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b6e	            0x8b00	                    mov eax, dword [rax]	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b70	            0x29c2	                            sub edx, eax	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b72	            0x89d0	                            mov eax, edx	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b74	            0x39c1	                            cmp ecx, eax	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b76	            0x7c28	                            jl 0x4000ba0	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b78	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b7f	          0x8b4004	                mov eax, dword [rax + 4]	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b82	          0x8d48ff	                      lea ecx, [rax - 1]	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b85	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b8c	          0x8b5004	                mov edx, dword [rax + 4]	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b8f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b96	            0x8b00	                    mov eax, dword [rax]	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b98	            0x29c2	                            sub edx, eax	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b9a	            0x89d0	                            mov eax, edx	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b9c	            0x39c1	                            cmp ecx, eax	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000b9e	            0x7e4f	                           jle 0x4000bef	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000ba0	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	       707	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4000baa	    0x488d8d78ffff	                   lea rcx, [rbp - 0x88]	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x4000bb1	    0x488d9574ffff	                   lea rdx, [rbp - 0x8c]	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x4000bb8	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x4000bbf	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x4000bc6	          0x4889c7	                            mov rdi, rax	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x4000bc9	      0xe82fcb0000	                    call sym.decFinalize	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x4000bce	            0xeb1f	                           jmp 0x4000bef	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x4000bd0	              0x90	                                     nop	       540	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_9
0x4000bd1	            0xeb1c	                           jmp 0x4000bef	       540	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_9
0x4000bd3	              0x90	                                     nop	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x4000bd4	            0xeb19	                           jmp 0x4000bef	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x4000bd6	              0x90	                                     nop	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x4000bd7	            0xeb16	                           jmp 0x4000bef	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x4000bd9	              0x90	                                     nop	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x4000bda	            0xeb13	                           jmp 0x4000bef	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x4000bdc	              0x90	                                     nop	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x4000bdd	            0xeb10	                           jmp 0x4000bef	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x4000bdf	              0x90	                                     nop	       579	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_19
0x4000be0	            0xeb0d	                           jmp 0x4000bef	       579	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_19
0x4000be2	              0x90	                                     nop	       583	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_21
0x4000be3	            0xeb0a	                           jmp 0x4000bef	       583	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_21
0x4000be5	              0x90	                                     nop	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x4000be6	            0xeb07	                           jmp 0x4000bef	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x4000be8	              0x90	                                     nop	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x4000be9	            0xeb04	                           jmp 0x4000bef	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x4000beb	              0x90	                                     nop	       603	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_27
0x4000bec	            0xeb01	                           jmp 0x4000bef	       603	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_27
0x4000bee	              0x90	                                     nop	       612	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_29
0x4000bef	        0x488b4598	             mov rax, qword [rbp - 0x68]	       714	decNumber.c	FUNCTION_68	FUNCTION_7
0x4000bf3	          0x4889c7	                            mov rdi, rax	       714	decNumber.c	FUNCTION_68	FUNCTION_7
0x4000bf6	      0xe800000000	                          call 0x4000bfb	       714	decNumber.c	FUNCTION_68	FUNCTION_7
0x4000bfb	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x4000c01	            0x85c0	                           test eax, eax	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x4000c03	            0x741e	                            je 0x4000c23	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x4000c05	    0x8b8d78ffffff	             mov ecx, dword [rbp - 0x88]	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x4000c0b	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x4000c12	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x4000c19	            0x89ce	                            mov esi, ecx	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x4000c1b	          0x4889c7	                            mov rdi, rax	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x4000c1e	      0xe8f5d70000	                      call sym.decStatus	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x4000c23	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       716	decNumber.c	FUNCTION_68	FUNCTION_7
0x4000c2a	        0x488b7df8	                mov rdi, qword [rbp - 8]	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x4000c2e	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x4000c37	            0x7405	                            je 0x4000c3e	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x4000c39	      0xe800000000	                          call 0x4000c3e	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x4000c3e	              0xc9	                                   leave	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x4000c3f	              0xc3	                                     ret	       717	decNumber.c	FUNCTION_68	FUNCTION_7
decNumberCompareSignal	SWITCH,0:IF,1:FOR,0:CALL,2:DO,0:ELSE,0:WHILE,0:functions,0	36
0x40011ca	              0x55	                                push rbp	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x40011cb	          0x4889e5	                            mov rbp, rsp	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x40011ce	        0x4883ec30	                           sub rsp, 0x30	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x40011d2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x40011d6	        0x488975e0	             mov qword [rbp - 0x20], rsi	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x40011da	        0x488955d8	             mov qword [rbp - 0x28], rdx	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x40011de	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x40011e2	    0x64488b042528	                mov rax, qword fs:[0x28]	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x40011eb	        0x488945f8	                mov qword [rbp - 8], rax	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x40011ef	            0x31c0	                            xor eax, eax	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x40011f1	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       886	decNumber.c	FUNCTION_68	FUNCTION_12
0x40011f8	        0x488d7df4	                    lea rdi, [rbp - 0xc]	       887	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_1
0x40011fc	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       887	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_1
0x4001200	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       887	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_1
0x4001204	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       887	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_1
0x4001208	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       887	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_1
0x400120c	          0x4989f9	                             mov r9, rdi	       887	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_1
0x400120f	    0x41b806000000	                              mov r8d, 6	       887	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_1
0x4001215	          0x4889c7	                            mov rdi, rax	       887	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_1
0x4001218	      0xe83ca50000	                   call sym.decCompareOp	       887	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_1
0x400121d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4001220	            0x85c0	                           test eax, eax	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4001222	            0x7415	                            je 0x4001239	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4001224	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4001227	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x400122b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x400122f	            0x89ce	                            mov esi, ecx	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4001231	          0x4889c7	                            mov rdi, rax	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4001234	      0xe8dfd10000	                      call sym.decStatus	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4001239	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       889	decNumber.c	FUNCTION_68	FUNCTION_12
0x400123d	        0x488b75f8	                mov rsi, qword [rbp - 8]	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4001241	    0x644833342528	                xor rsi, qword fs:[0x28]	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x400124a	            0x7405	                            je 0x4001251	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x400124c	      0xe800000000	                          call 0x4001251	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4001251	              0xc9	                                   leave	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4001252	              0xc3	                                     ret	       890	decNumber.c	FUNCTION_68	FUNCTION_12
decNumberNormalize	SWITCH,0:IF,0:FOR,0:CALL,1:DO,0:ELSE,0:WHILE,0:functions,0	14
0x4003b5a	              0x55	                                push rbp	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x4003b5b	          0x4889e5	                            mov rbp, rsp	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x4003b5e	        0x4883ec20	                           sub rsp, 0x20	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x4003b62	        0x48897df8	                mov qword [rbp - 8], rdi	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x4003b66	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x4003b6a	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x4003b6e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2309	decNumber.c	FUNCTION_68	FUNCTION_36	CALL_1
0x4003b72	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      2309	decNumber.c	FUNCTION_68	FUNCTION_36	CALL_1
0x4003b76	        0x488b45f8	                mov rax, qword [rbp - 8]	      2309	decNumber.c	FUNCTION_68	FUNCTION_36	CALL_1
0x4003b7a	          0x4889ce	                            mov rsi, rcx	      2309	decNumber.c	FUNCTION_68	FUNCTION_36	CALL_1
0x4003b7d	          0x4889c7	                            mov rdi, rax	      2309	decNumber.c	FUNCTION_68	FUNCTION_36	CALL_1
0x4003b80	      0xe800000000	                          call 0x4003b85	      2309	decNumber.c	FUNCTION_68	FUNCTION_36	CALL_1
0x4003b85	              0xc9	                                   leave	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
0x4003b86	              0xc3	                                     ret	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
decCompare	SWITCH,0:IF,15:FOR,0:CALL,10:DO,0:ELSE,3:WHILE,0:functions,0	189
0x400bc2d	              0x55	                                push rbp	      6164	decNumber.c	FUNCTION_3
0x400bc2e	          0x4889e5	                            mov rbp, rsp	      6164	decNumber.c	FUNCTION_3
0x400bc31	        0x4883ec40	                           sub rsp, 0x40	      6164	decNumber.c	FUNCTION_3
0x400bc35	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6164	decNumber.c	FUNCTION_3
0x400bc39	        0x488975d0	             mov qword [rbp - 0x30], rsi	      6164	decNumber.c	FUNCTION_3
0x400bc3d	            0x89d0	                            mov eax, edx	      6164	decNumber.c	FUNCTION_3
0x400bc3f	          0x8845cc	               mov byte [rbp - 0x34], al	      6164	decNumber.c	FUNCTION_3
0x400bc42	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      6169	decNumber.c	FUNCTION_3
0x400bc49	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6170	decNumber.c	FUNCTION_3	CALL_1
0x400bc4d	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      6170	decNumber.c	FUNCTION_3	CALL_1
0x400bc51	          0x6685c0	                             test ax, ax	      6170	decNumber.c	FUNCTION_3	CALL_1
0x400bc54	            0x7524	                           jne 0x400bc7a	      6170	decNumber.c	FUNCTION_3	CALL_1
0x400bc56	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6170	decNumber.c	FUNCTION_3	CALL_1
0x400bc5a	            0x8b00	                    mov eax, dword [rax]	      6170	decNumber.c	FUNCTION_3	CALL_1
0x400bc5c	          0x83f801	                              cmp eax, 1	      6170	decNumber.c	FUNCTION_3	CALL_1
0x400bc5f	            0x7519	                           jne 0x400bc7a	      6170	decNumber.c	FUNCTION_3	CALL_1
0x400bc61	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6170	decNumber.c	FUNCTION_3	CALL_1
0x400bc65	         0xfb64008	               movzx eax, byte [rax + 8]	      6170	decNumber.c	FUNCTION_3	CALL_1
0x400bc69	           0xfb6c0	                           movzx eax, al	      6170	decNumber.c	FUNCTION_3	CALL_1
0x400bc6c	          0x83e070	                           and eax, 0x70	      6170	decNumber.c	FUNCTION_3	CALL_1
0x400bc6f	            0x85c0	                           test eax, eax	      6170	decNumber.c	FUNCTION_3	CALL_1
0x400bc71	            0x7507	                           jne 0x400bc7a	      6170	decNumber.c	FUNCTION_3	CALL_1
0x400bc73	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      6170	decNumber.c	FUNCTION_3	CALL_1
0x400bc7a	        0x807dcc00	                cmp byte [rbp - 0x34], 0	      6171	decNumber.c	FUNCTION_3	IF_2
0x400bc7e	            0x7446	                            je 0x400bcc6	      6171	decNumber.c	FUNCTION_3	IF_2
0x400bc80	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400bc84	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400bc88	          0x6685c0	                             test ax, ax	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400bc8b	            0x7525	                           jne 0x400bcb2	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400bc8d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400bc91	            0x8b00	                    mov eax, dword [rax]	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400bc93	          0x83f801	                              cmp eax, 1	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400bc96	            0x751a	                           jne 0x400bcb2	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400bc98	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400bc9c	         0xfb64008	               movzx eax, byte [rax + 8]	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400bca0	           0xfb6c0	                           movzx eax, al	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400bca3	          0x83e070	                           and eax, 0x70	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400bca6	            0x85c0	                           test eax, eax	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400bca8	            0x7508	                           jne 0x400bcb2	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400bcaa	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400bcad	      0xe9e9010000	                           jmp 0x400be9b	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400bcb2	        0x837dec00	               cmp dword [rbp - 0x14], 0	      6174	decNumber.c	FUNCTION_3	IF_2	IF_4
0x400bcb6	     0xf85a4000000	                           jne 0x400bd60	      6174	decNumber.c	FUNCTION_3	IF_2	IF_4
0x400bcbc	      0xb8ffffffff	                     mov eax, 0xffffffff	      6174	decNumber.c	FUNCTION_3	IF_2	IF_4
0x400bcc1	      0xe9d5010000	                           jmp 0x400be9b	      6174	decNumber.c	FUNCTION_3	IF_2	IF_4
0x400bcc6	        0x837dec00	               cmp dword [rbp - 0x14], 0	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x400bcca	            0x7413	                            je 0x400bcdf	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x400bccc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x400bcd0	         0xfb64008	               movzx eax, byte [rax + 8]	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x400bcd4	            0x84c0	                             test al, al	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x400bcd6	            0x7907	                           jns 0x400bcdf	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x400bcd8	    0xc745ecffffff	     mov dword [rbp - 0x14], 0xffffffff 	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x400bcdf	    0xc745f0010000	               mov dword [rbp - 0x10], 1	      6179	decNumber.c	FUNCTION_3	ELSE_1
0x400bce6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400bcea	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400bcee	          0x6685c0	                             test ax, ax	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400bcf1	            0x7526	                           jne 0x400bd19	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400bcf3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400bcf7	            0x8b00	                    mov eax, dword [rax]	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400bcf9	          0x83f801	                              cmp eax, 1	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400bcfc	            0x751b	                           jne 0x400bd19	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400bcfe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400bd02	         0xfb64008	               movzx eax, byte [rax + 8]	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400bd06	           0xfb6c0	                           movzx eax, al	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400bd09	          0x83e070	                           and eax, 0x70	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400bd0c	            0x85c0	                           test eax, eax	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400bd0e	            0x7509	                           jne 0x400bd19	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400bd10	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400bd17	            0xeb13	                           jmp 0x400bd2c	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400bd19	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6181	decNumber.c	FUNCTION_3	ELSE_1	CALL_5
0x400bd1d	         0xfb64008	               movzx eax, byte [rax + 8]	      6181	decNumber.c	FUNCTION_3	ELSE_1	CALL_5
0x400bd21	            0x84c0	                             test al, al	      6181	decNumber.c	FUNCTION_3	ELSE_1	CALL_5
0x400bd23	            0x7907	                           jns 0x400bd2c	      6181	decNumber.c	FUNCTION_3	ELSE_1	CALL_5
0x400bd25	    0xc745f0ffffff	     mov dword [rbp - 0x10], 0xffffffff 	      6181	decNumber.c	FUNCTION_3	ELSE_1	CALL_5
0x400bd2c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6182	decNumber.c	FUNCTION_3	ELSE_1	IF_8
0x400bd2f	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      6182	decNumber.c	FUNCTION_3	ELSE_1	IF_8
0x400bd32	            0x7e0a	                           jle 0x400bd3e	      6182	decNumber.c	FUNCTION_3	ELSE_1	IF_8
0x400bd34	      0xb801000000	                              mov eax, 1	      6182	decNumber.c	FUNCTION_3	ELSE_1	IF_8
0x400bd39	      0xe95d010000	                           jmp 0x400be9b	      6182	decNumber.c	FUNCTION_3	ELSE_1	IF_8
0x400bd3e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6183	decNumber.c	FUNCTION_3	ELSE_1	IF_9
0x400bd41	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      6183	decNumber.c	FUNCTION_3	ELSE_1	IF_9
0x400bd44	            0x7d0a	                           jge 0x400bd50	      6183	decNumber.c	FUNCTION_3	ELSE_1	IF_9
0x400bd46	      0xb8ffffffff	                     mov eax, 0xffffffff	      6183	decNumber.c	FUNCTION_3	ELSE_1	IF_9
0x400bd4b	      0xe94b010000	                           jmp 0x400be9b	      6183	decNumber.c	FUNCTION_3	ELSE_1	IF_9
0x400bd50	        0x837dec00	               cmp dword [rbp - 0x14], 0	      6184	decNumber.c	FUNCTION_3	ELSE_1	IF_10
0x400bd54	            0x750a	                           jne 0x400bd60	      6184	decNumber.c	FUNCTION_3	ELSE_1	IF_10
0x400bd56	      0xb800000000	                              mov eax, 0	      6184	decNumber.c	FUNCTION_3	ELSE_1	IF_10
0x400bd5b	      0xe93b010000	                           jmp 0x400be9b	      6184	decNumber.c	FUNCTION_3	ELSE_1	IF_10
0x400bd60	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6188	decNumber.c	FUNCTION_3	IF_11
0x400bd64	         0xfb65008	               movzx edx, byte [rax + 8]	      6188	decNumber.c	FUNCTION_3	IF_11
0x400bd68	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6188	decNumber.c	FUNCTION_3	IF_11
0x400bd6c	         0xfb64008	               movzx eax, byte [rax + 8]	      6188	decNumber.c	FUNCTION_3	IF_11
0x400bd70	             0x9d0	                             or eax, edx	      6188	decNumber.c	FUNCTION_3	IF_11
0x400bd72	           0xfb6c0	                           movzx eax, al	      6188	decNumber.c	FUNCTION_3	IF_11
0x400bd75	          0x83e040	                           and eax, 0x40	      6188	decNumber.c	FUNCTION_3	IF_11
0x400bd78	            0x85c0	                           test eax, eax	      6188	decNumber.c	FUNCTION_3	IF_11
0x400bd7a	            0x7438	                            je 0x400bdb4	      6188	decNumber.c	FUNCTION_3	IF_11
0x400bd7c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6189	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_6
0x400bd80	         0xfb64008	               movzx eax, byte [rax + 8]	      6189	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_6
0x400bd84	           0xfb6c0	                           movzx eax, al	      6189	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_6
0x400bd87	          0x83e040	                           and eax, 0x40	      6189	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_6
0x400bd8a	            0x85c0	                           test eax, eax	      6189	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_6
0x400bd8c	            0x741e	                            je 0x400bdac	      6189	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_6
0x400bd8e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6190	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_7
0x400bd92	         0xfb64008	               movzx eax, byte [rax + 8]	      6190	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_7
0x400bd96	           0xfb6c0	                           movzx eax, al	      6190	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_7
0x400bd99	          0x83e040	                           and eax, 0x40	      6190	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_7
0x400bd9c	            0x85c0	                           test eax, eax	      6190	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_7
0x400bd9e	            0x7409	                            je 0x400bda9	      6190	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_7
0x400bda0	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      6190	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_7
0x400bda7	            0xeb03	                           jmp 0x400bdac	      6190	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_7
0x400bda9	          0xf75dec	                  neg dword [rbp - 0x14]	      6191	decNumber.c	FUNCTION_3	IF_11	IF_12	ELSE_3
0x400bdac	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6193	decNumber.c	FUNCTION_3	IF_11	ELSE_3
0x400bdaf	      0xe9e7000000	                           jmp 0x400be9b	      6193	decNumber.c	FUNCTION_3	IF_11	ELSE_3
0x400bdb4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6196	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400bdb8	          0x8b5004	                mov edx, dword [rax + 4]	      6196	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400bdbb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6196	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400bdbf	          0x8b4004	                mov eax, dword [rax + 4]	      6196	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400bdc2	            0x39c2	                            cmp edx, eax	      6196	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400bdc4	            0x7e1b	                           jle 0x400bde1	      6196	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400bdc6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6198	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400bdca	        0x488945f8	                mov qword [rbp - 8], rax	      6198	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400bdce	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6199	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400bdd2	        0x488945d8	             mov qword [rbp - 0x28], rax	      6199	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400bdd6	        0x488b45f8	                mov rax, qword [rbp - 8]	      6200	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400bdda	        0x488945d0	             mov qword [rbp - 0x30], rax	      6200	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400bdde	          0xf75dec	                  neg dword [rbp - 0x14]	      6201	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400bde1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6205	decNumber.c	FUNCTION_3
0x400bde5	          0x8b5004	                mov edx, dword [rax + 4]	      6205	decNumber.c	FUNCTION_3
0x400bde8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6205	decNumber.c	FUNCTION_3
0x400bdec	          0x8b4004	                mov eax, dword [rax + 4]	      6205	decNumber.c	FUNCTION_3
0x400bdef	            0x29c2	                            sub edx, eax	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400bdf1	          0x4189d0	                            mov r8d, edx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400bdf4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6204	decNumber.c	FUNCTION_3	CALL_10
0x400bdf8	            0x8b00	                    mov eax, dword [rax]	      6204	decNumber.c	FUNCTION_3	CALL_10
0x400bdfa	          0x83f831	                           cmp eax, 0x31	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400bdfd	            0x7f14	                            jg 0x400be13	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400bdff	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6204	decNumber.c	FUNCTION_3	CALL_10
0x400be03	            0x8b00	                    mov eax, dword [rax]	      6204	decNumber.c	FUNCTION_3	CALL_10
0x400be05	            0x4898	                                    cdqe	      6204	decNumber.c	FUNCTION_3	CALL_10
0x400be07	     0xfb680000000	                   movzx eax, byte [rax]	      6204	decNumber.c	FUNCTION_3	CALL_10
0x400be0e	           0xfb6c8	                           movzx ecx, al	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be11	            0xeb1b	                           jmp 0x400be2e	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be13	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6204	decNumber.c	FUNCTION_3	CALL_10
0x400be17	            0x8b00	                    mov eax, dword [rax]	      6204	decNumber.c	FUNCTION_3	CALL_10
0x400be19	          0x8d4802	                      lea ecx, [rax + 2]	      6204	decNumber.c	FUNCTION_3	CALL_10
0x400be1c	      0xba56555555	                     mov edx, 0x55555556	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be21	            0x89c8	                            mov eax, ecx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be23	            0xf7ea	                                imul edx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be25	            0x89c8	                            mov eax, ecx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be27	          0xc1f81f	                           sar eax, 0x1f	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be2a	            0x89d1	                            mov ecx, edx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be2c	            0x29c1	                            sub ecx, eax	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be2e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6204	decNumber.c	FUNCTION_3	CALL_10
0x400be32	        0x4c8d480a	                     lea r9, [rax + 0xa]	      6204	decNumber.c	FUNCTION_3	CALL_10
0x400be36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be3a	            0x8b00	                    mov eax, dword [rax]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be3c	          0x83f831	                           cmp eax, 0x31	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be3f	            0x7f14	                            jg 0x400be55	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be41	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be45	            0x8b00	                    mov eax, dword [rax]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be47	            0x4898	                                    cdqe	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be49	     0xfb680000000	                   movzx eax, byte [rax]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be50	           0xfb6c0	                           movzx eax, al	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be53	            0xeb1b	                           jmp 0x400be70	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be55	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be59	            0x8b00	                    mov eax, dword [rax]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be5b	          0x8d7002	                      lea esi, [rax + 2]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be5e	      0xba56555555	                     mov edx, 0x55555556	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be63	            0x89f0	                            mov eax, esi	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be65	            0xf7ea	                                imul edx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be67	            0x89f0	                            mov eax, esi	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be69	          0xc1f81f	                           sar eax, 0x1f	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be6c	            0x29c2	                            sub edx, eax	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be6e	            0x89d0	                            mov eax, edx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be70	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be74	        0x488d7a0a	                    lea rdi, [rdx + 0xa]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be78	          0x4c89ca	                             mov rdx, r9	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be7b	            0x89c6	                            mov esi, eax	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be7d	      0xe81b000000	                 call sym.decUnitCompare	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be82	          0x8945f4	              mov dword [rbp - 0xc], eax	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400be85	    0x817df4000000	      cmp dword [rbp - 0xc], 0x80000000 	      6206	decNumber.c	FUNCTION_3	IF_15
0x400be8c	            0x740a	                            je 0x400be98	      6206	decNumber.c	FUNCTION_3	IF_15
0x400be8e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6206	decNumber.c	FUNCTION_3	IF_15
0x400be91	         0xfaf45ec	            imul eax, dword [rbp - 0x14]	      6206	decNumber.c	FUNCTION_3	IF_15
0x400be95	          0x8945f4	              mov dword [rbp - 0xc], eax	      6206	decNumber.c	FUNCTION_3	IF_15
0x400be98	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6207	decNumber.c	FUNCTION_3
0x400be9b	              0xc9	                                   leave	      6208	decNumber.c	FUNCTION_3
0x400be9c	              0xc3	                                     ret	      6208	decNumber.c	FUNCTION_3
decNumberCompareTotal	SWITCH,0:IF,1:FOR,0:CALL,2:DO,0:ELSE,0:WHILE,0:functions,0	36
0x4001253	              0x55	                                push rbp	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4001254	          0x4889e5	                            mov rbp, rsp	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4001257	        0x4883ec30	                           sub rsp, 0x30	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x400125b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x400125f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4001263	        0x488955d8	             mov qword [rbp - 0x28], rdx	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4001267	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x400126b	    0x64488b042528	                mov rax, qword fs:[0x28]	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4001274	        0x488945f8	                mov qword [rbp - 8], rax	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4001278	            0x31c0	                            xor eax, eax	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x400127a	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       907	decNumber.c	FUNCTION_68	FUNCTION_13
0x4001281	        0x488d7df4	                    lea rdi, [rbp - 0xc]	       908	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_1
0x4001285	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       908	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_1
0x4001289	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       908	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_1
0x400128d	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       908	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_1
0x4001291	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       908	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_1
0x4001295	          0x4989f9	                             mov r9, rdi	       908	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_1
0x4001298	    0x41b804000000	                              mov r8d, 4	       908	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_1
0x400129e	          0x4889c7	                            mov rdi, rax	       908	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_1
0x40012a1	      0xe8b3a40000	                   call sym.decCompareOp	       908	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_1
0x40012a6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x40012a9	            0x85c0	                           test eax, eax	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x40012ab	            0x7415	                            je 0x40012c2	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x40012ad	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x40012b0	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x40012b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x40012b8	            0x89ce	                            mov esi, ecx	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x40012ba	          0x4889c7	                            mov rdi, rax	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x40012bd	      0xe856d10000	                      call sym.decStatus	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x40012c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       910	decNumber.c	FUNCTION_68	FUNCTION_13
0x40012c6	        0x488b75f8	                mov rsi, qword [rbp - 8]	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x40012ca	    0x644833342528	                xor rsi, qword fs:[0x28]	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x40012d3	            0x7405	                            je 0x40012da	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x40012d5	      0xe800000000	                          call 0x40012da	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x40012da	              0xc9	                                   leave	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x40012db	              0xc3	                                     ret	       911	decNumber.c	FUNCTION_68	FUNCTION_13
decNumberLogB	SWITCH,0:IF,5:FOR,0:CALL,9:DO,0:ELSE,3:WHILE,0:functions,0	89
0x4001d82	              0x55	                                push rbp	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4001d83	          0x4889e5	                            mov rbp, rsp	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4001d86	        0x4883ec30	                           sub rsp, 0x30	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4001d8a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4001d8e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4001d92	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4001d96	    0x64488b042528	                mov rax, qword fs:[0x28]	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4001d9f	        0x488945f8	                mov qword [rbp - 8], rax	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4001da3	            0x31c0	                            xor eax, eax	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4001da5	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1335	decNumber.c	FUNCTION_68	FUNCTION_21
0x4001dac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4001db0	         0xfb64008	               movzx eax, byte [rax + 8]	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4001db4	           0xfb6c0	                           movzx eax, al	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4001db7	          0x83e030	                           and eax, 0x30	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4001dba	            0x85c0	                           test eax, eax	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4001dbc	            0x7428	                            je 0x4001de6	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4001dbe	        0x488d4df0	                   lea rcx, [rbp - 0x10]	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4001dc2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4001dc6	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4001dca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4001dce	          0x4989c8	                             mov r8, rcx	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4001dd1	          0x4889d1	                            mov rcx, rdx	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4001dd4	      0xba00000000	                              mov edx, 0	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4001dd9	          0x4889c7	                            mov rdi, rax	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4001ddc	      0xe831c40000	                        call sym.decNaNs	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4001de1	      0xe996000000	                           jmp 0x4001e7c	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4001de6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4001dea	         0xfb64008	               movzx eax, byte [rax + 8]	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4001dee	           0xfb6c0	                           movzx eax, al	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4001df1	          0x83e040	                           and eax, 0x40	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4001df4	            0x85c0	                           test eax, eax	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4001df6	            0x7415	                            je 0x4001e0d	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4001df8	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4001dfc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4001e00	          0x4889d6	                            mov rsi, rdx	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4001e03	          0x4889c7	                            mov rdi, rax	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4001e06	      0xe800000000	                          call 0x4001e0b	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4001e0b	            0xeb6f	                           jmp 0x4001e7c	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4001e0d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4001e11	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4001e15	          0x6685c0	                             test ax, ax	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4001e18	            0x753c	                           jne 0x4001e56	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4001e1a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4001e1e	            0x8b00	                    mov eax, dword [rax]	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4001e20	          0x83f801	                              cmp eax, 1	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4001e23	            0x7531	                           jne 0x4001e56	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4001e25	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4001e29	         0xfb64008	               movzx eax, byte [rax + 8]	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4001e2d	           0xfb6c0	                           movzx eax, al	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4001e30	          0x83e070	                           and eax, 0x70	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4001e33	            0x85c0	                           test eax, eax	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4001e35	            0x751f	                           jne 0x4001e56	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4001e37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1345	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_7
0x4001e3b	          0x4889c7	                            mov rdi, rax	      1345	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_7
0x4001e3e	      0xe800000000	                          call 0x4001e43	      1345	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_7
0x4001e43	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1346	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4
0x4001e47	        0xc64008c0	                mov byte [rax + 8], 0xc0	      1346	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4
0x4001e4b	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1347	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4
0x4001e4e	          0x83c802	                               or eax, 2	      1347	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4
0x4001e51	          0x8945f0	             mov dword [rbp - 0x10], eax	      1347	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4
0x4001e54	            0xeb26	                           jmp 0x4001e7c	      1347	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4
0x4001e56	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1350	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3
0x4001e5a	          0x8b5004	                mov edx, dword [rax + 4]	      1350	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3
0x4001e5d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1350	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3
0x4001e61	            0x8b00	                    mov eax, dword [rax]	      1350	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3
0x4001e63	             0x1d0	                            add eax, edx	      1350	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3
0x4001e65	          0x83e801	                              sub eax, 1	      1350	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3
0x4001e68	          0x8945f4	              mov dword [rbp - 0xc], eax	      1350	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3
0x4001e6b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1351	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3	CALL_8
0x4001e6e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1351	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3	CALL_8
0x4001e72	            0x89d6	                            mov esi, edx	      1351	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3	CALL_8
0x4001e74	          0x4889c7	                            mov rdi, rax	      1351	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3	CALL_8
0x4001e77	      0xe800000000	                          call 0x4001e7c	      1351	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3	CALL_8
0x4001e7c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4001e7f	            0x85c0	                           test eax, eax	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4001e81	            0x7415	                            je 0x4001e98	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4001e83	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4001e86	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4001e8a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4001e8e	            0x89ce	                            mov esi, ecx	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4001e90	          0x4889c7	                            mov rdi, rax	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4001e93	      0xe880c50000	                      call sym.decStatus	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4001e98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1355	decNumber.c	FUNCTION_68	FUNCTION_21
0x4001e9c	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4001ea0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4001ea9	            0x7405	                            je 0x4001eb0	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4001eab	      0xe800000000	                          call 0x4001eb0	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4001eb0	              0xc9	                                   leave	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4001eb1	              0xc3	                                     ret	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
decNumberNextPlus	SWITCH,0:IF,3:FOR,0:CALL,5:DO,0:ELSE,0:WHILE,0:functions,0	68
0x40027b7	              0x55	                                push rbp	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027b8	          0x4889e5	                            mov rbp, rsp	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027bb	        0x4883ec70	                           sub rsp, 0x70	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027bf	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027c3	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027c7	        0x48895598	             mov qword [rbp - 0x68], rdx	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027cb	    0x64488b042528	                mov rax, qword fs:[0x28]	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027d4	        0x488945f8	                mov qword [rbp - 8], rax	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027d8	            0x31c0	                            xor eax, eax	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027da	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027de	          0x488b10	                    mov rdx, qword [rax]	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027e1	        0x488955c0	             mov qword [rbp - 0x40], rdx	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027e5	        0x488b5008	                mov rdx, qword [rax + 8]	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027e9	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027ed	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027f1	        0x488955d0	             mov qword [rbp - 0x30], rdx	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027f5	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027f8	          0x8945d8	             mov dword [rbp - 0x28], eax	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x40027fb	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1701	decNumber.c	FUNCTION_68	FUNCTION_29
0x4002802	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x4002806	         0xfb64008	               movzx eax, byte [rax + 8]	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x400280a	           0xfb6c0	                           movzx eax, al	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x400280d	      0x25c0000000	                           and eax, 0xc0	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x4002812	      0x3dc0000000	                           cmp eax, 0xc0	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x4002817	            0x7521	                           jne 0x400283a	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x4002819	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1708	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2	CALL_2
0x400281d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1708	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2	CALL_2
0x4002821	          0x4889d6	                            mov rsi, rdx	      1708	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2	CALL_2
0x4002824	          0x4889c7	                            mov rdi, rax	      1708	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2	CALL_2
0x4002827	      0xe86fb20000	                 call sym.decSetMaxValue	      1708	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2	CALL_2
0x400282c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1709	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x4002830	        0xc6400880	                mov byte [rax + 8], 0x80	      1709	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x4002834	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1711	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x4002838	            0xeb70	                           jmp 0x40028aa	      1711	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x400283a	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1713	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_3
0x400283e	          0x4889c7	                            mov rdi, rax	      1713	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_3
0x4002841	      0xe800000000	                          call 0x4002846	      1713	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_3
0x4002846	    0x66c745ea0100	                mov word [rbp - 0x16], 1	      1714	decNumber.c	FUNCTION_68	FUNCTION_29
0x400284c	    0xc745e4003665	      mov dword [rbp - 0x1c], 0xc4653600	      1715	decNumber.c	FUNCTION_68	FUNCTION_29
0x4002853	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1716	decNumber.c	FUNCTION_68	FUNCTION_29
0x400285a	        0x488d7dbc	                   lea rdi, [rbp - 0x44]	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x400285e	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x4002862	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x4002866	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x400286a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x400286e	          0x4989f9	                             mov r9, rdi	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x4002871	    0x41b800000000	                              mov r8d, 0	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x4002877	          0x4889c7	                            mov rdi, rax	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x400287a	      0xe8ba430000	                       call sym.decAddOp	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x400287f	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1718	decNumber.c	FUNCTION_68	FUNCTION_29
0x4002882	      0x2580000040	                     and eax, 0x40000080	      1718	decNumber.c	FUNCTION_68	FUNCTION_29
0x4002887	          0x8945bc	             mov dword [rbp - 0x44], eax	      1718	decNumber.c	FUNCTION_68	FUNCTION_29
0x400288a	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x400288d	            0x85c0	                           test eax, eax	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x400288f	            0x7415	                            je 0x40028a6	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x4002891	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x4002894	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x4002898	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x400289c	            0x89ce	                            mov esi, ecx	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x400289e	          0x4889c7	                            mov rdi, rax	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x40028a1	      0xe872bb0000	                      call sym.decStatus	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x40028a6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1720	decNumber.c	FUNCTION_68	FUNCTION_29
0x40028aa	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x40028ae	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x40028b7	            0x7405	                            je 0x40028be	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x40028b9	      0xe800000000	                          call 0x40028be	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x40028be	              0xc9	                                   leave	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x40028bf	              0xc3	                                     ret	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
decNumberRemainderNear	SWITCH,0:IF,1:FOR,0:CALL,3:DO,0:ELSE,0:WHILE,0:functions,0	36
0x4003d8f	              0x55	                                push rbp	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4003d90	          0x4889e5	                            mov rbp, rsp	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4003d93	        0x4883ec30	                           sub rsp, 0x30	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4003d97	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4003d9b	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4003d9f	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4003da3	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4003da7	    0x64488b042528	                mov rax, qword fs:[0x28]	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4003db0	        0x488945f8	                mov qword [rbp - 8], rax	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4003db4	            0x31c0	                            xor eax, eax	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4003db6	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      2421	decNumber.c	FUNCTION_68	FUNCTION_40
0x4003dbd	        0x488d7df4	                    lea rdi, [rbp - 0xc]	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x4003dc1	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x4003dc5	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x4003dc9	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x4003dcd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x4003dd1	          0x4989f9	                             mov r9, rdi	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x4003dd4	    0x41b810000000	                           mov r8d, 0x10	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x4003dda	          0x4889c7	                            mov rdi, rax	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x4003ddd	      0xe8263c0000	                    call sym.decDivideOp	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x4003de2	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4003de5	            0x85c0	                           test eax, eax	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4003de7	            0x7415	                            je 0x4003dfe	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4003de9	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4003dec	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4003df0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4003df4	            0x89ce	                            mov esi, ecx	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4003df6	          0x4889c7	                            mov rdi, rax	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4003df9	      0xe81aa60000	                      call sym.decStatus	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4003dfe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2427	decNumber.c	FUNCTION_68	FUNCTION_40
0x4003e02	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x4003e06	    0x644833342528	                xor rsi, qword fs:[0x28]	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x4003e0f	            0x7405	                            je 0x4003e16	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x4003e11	      0xe800000000	                          call 0x4003e16	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x4003e16	              0xc9	                                   leave	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x4003e17	              0xc3	                                     ret	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
decNumberPlus	SWITCH,0:IF,2:FOR,0:CALL,5:DO,0:ELSE,0:WHILE,0:functions,0	41
0x4002e8f	              0x55	                                push rbp	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002e90	          0x4889e5	                            mov rbp, rsp	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002e93	        0x4883ec50	                           sub rsp, 0x50	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002e97	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002e9b	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002e9f	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002ea3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002eac	        0x488945f8	                mov qword [rbp - 8], rax	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002eb0	            0x31c0	                            xor eax, eax	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002eb2	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1878	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002eb9	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1883	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_2
0x4002ebd	          0x4889c7	                            mov rdi, rax	      1883	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_2
0x4002ec0	      0xe800000000	                          call 0x4002ec5	      1883	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_2
0x4002ec5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1884	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002ec9	          0x8b4004	                mov eax, dword [rax + 4]	      1884	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002ecc	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1884	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002ecf	        0x488d7ddc	                   lea rdi, [rbp - 0x24]	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4002ed3	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4002ed7	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4002edb	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4002edf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4002ee3	          0x4989f9	                             mov r9, rdi	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4002ee6	    0x41b800000000	                              mov r8d, 0	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4002eec	          0x4889c7	                            mov rdi, rax	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4002eef	      0xe8453d0000	                       call sym.decAddOp	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4002ef4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4002ef7	            0x85c0	                           test eax, eax	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4002ef9	            0x7415	                            je 0x4002f10	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4002efb	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4002efe	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4002f02	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4002f06	            0x89ce	                            mov esi, ecx	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4002f08	          0x4889c7	                            mov rdi, rax	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4002f0b	      0xe808b50000	                      call sym.decStatus	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4002f10	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1890	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002f14	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002f18	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002f21	            0x7405	                            je 0x4002f28	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002f23	      0xe800000000	                          call 0x4002f28	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002f28	              0xc9	                                   leave	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4002f29	              0xc3	                                     ret	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
decNumberSetBCD	SWITCH,0:IF,0:FOR,3:CALL,3:DO,0:ELSE,0:WHILE,0:functions,0	92
0x40060f6	              0x55	                                push rbp	      3485	decNumber.c	FUNCTION_68	FUNCTION_57
0x40060f7	          0x4889e5	                            mov rbp, rsp	      3485	decNumber.c	FUNCTION_68	FUNCTION_57
0x40060fa	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3485	decNumber.c	FUNCTION_68	FUNCTION_57
0x40060fe	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3485	decNumber.c	FUNCTION_68	FUNCTION_57
0x4006102	          0x8955cc	             mov dword [rbp - 0x34], edx	      3485	decNumber.c	FUNCTION_68	FUNCTION_57
0x4006105	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006109	        0x488d700a	                    lea rsi, [rax + 0xa]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x400610d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006111	            0x8b00	                    mov eax, dword [rax]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006113	          0x83f831	                           cmp eax, 0x31	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006116	            0x7f1b	                            jg 0x4006133	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006118	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x400611c	            0x8b00	                    mov eax, dword [rax]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x400611e	            0x4898	                                    cdqe	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006120	     0xfb680000000	                   movzx eax, byte [rax]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006127	           0xfb6c0	                           movzx eax, al	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x400612a	          0x4801c0	                            add rax, rax	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x400612d	        0x4883e802	                              sub rax, 2	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006131	            0xeb24	                           jmp 0x4006157	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006133	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006137	            0x8b00	                    mov eax, dword [rax]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006139	          0x8d4802	                      lea ecx, [rax + 2]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x400613c	      0xba56555555	                     mov edx, 0x55555556	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006141	            0x89c8	                            mov eax, ecx	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006143	            0xf7ea	                                imul edx	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006145	            0x89c8	                            mov eax, ecx	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006147	          0xc1f81f	                           sar eax, 0x1f	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x400614a	            0x29c2	                            sub edx, eax	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x400614c	            0x89d0	                            mov eax, edx	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x400614e	            0x4898	                                    cdqe	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006150	          0x4801c0	                            add rax, rax	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006153	        0x4883e802	                              sub rax, 2	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4006157	          0x4801f0	                            add rax, rsi	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x400615a	        0x488945f0	             mov qword [rbp - 0x10], rax	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x400615e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3487	decNumber.c	FUNCTION_68	FUNCTION_57
0x4006162	        0x488945f8	                mov qword [rbp - 8], rax	      3487	decNumber.c	FUNCTION_68	FUNCTION_57
0x4006166	        0x837dcc31	           cmp dword [rbp - 0x34], 0x31 	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x400616a	            0x7718	                            ja 0x4006184	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x400616c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x400616f	     0xfb680000000	                   movzx eax, byte [rax]	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4006176	           0xfb6d0	                           movzx edx, al	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4006179	            0x89d0	                            mov eax, edx	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x400617b	             0x1c0	                            add eax, eax	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x400617d	             0x1d0	                            add eax, edx	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x400617f	          0x83e803	                              sub eax, 3	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4006182	            0xeb18	                           jmp 0x400619c	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4006184	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4006187	          0x83c002	                              add eax, 2	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x400618a	      0xbaabaaaaaa	                     mov edx, 0xaaaaaaab	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x400618f	            0xf7e2	                                 mul edx	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4006191	            0xd1ea	                              shr edx, 1	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4006193	            0x89d0	                            mov eax, edx	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4006195	             0x1c0	                            add eax, eax	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4006197	             0x1d0	                            add eax, edx	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4006199	          0x83e803	                              sub eax, 3	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x400619c	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x400619f	            0x29c2	                            sub edx, eax	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x40061a1	            0x89d0	                            mov eax, edx	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x40061a3	          0x8945ec	             mov dword [rbp - 0x14], eax	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x40061a6	            0xeb4f	                           jmp 0x40061f7	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x40061a8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3495	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x40061ac	      0x66c7000000	                       mov word [rax], 0	      3495	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x40061b1	            0xeb32	                           jmp 0x40061e5	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061b7	           0xfb700	                   movzx eax, word [rax]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061ba	          0x8d1400	                    lea edx, [rax + rax]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061c1	           0xfb700	                   movzx eax, word [rax]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061c4	          0xc1e003	                              shl eax, 3	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061c7	             0x1c2	                            add edx, eax	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061cd	           0xfb600	                   movzx eax, byte [rax]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061d0	           0xfb6c0	                           movzx eax, al	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061d3	             0x1c2	                            add edx, eax	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061d5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061d9	          0x668910	                      mov word [rax], dx	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061dc	      0x488345f801	                  add qword [rbp - 8], 1	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061e1	        0x836dec01	               sub dword [rbp - 0x14], 1	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061e5	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061e9	            0x7fc8	                            jg 0x40061b3	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40061eb	    0xc745ec030000	               mov dword [rbp - 0x14], 3	      3497	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x40061f2	      0x48836df002	               sub qword [rbp - 0x10], 2	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x40061f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x40061fb	        0x4883c00a	                            add rax, 0xa	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x40061ff	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4006203	            0x76a3	                           jbe 0x40061a8	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4006205	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      3500	decNumber.c	FUNCTION_68	FUNCTION_57
0x4006208	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3500	decNumber.c	FUNCTION_68	FUNCTION_57
0x400620c	            0x8910	                    mov dword [rax], edx	      3500	decNumber.c	FUNCTION_68	FUNCTION_57
0x400620e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3501	decNumber.c	FUNCTION_68	FUNCTION_57
0x4006212	              0x5d	                                 pop rbp	      3502	decNumber.c	FUNCTION_68	FUNCTION_57
0x4006213	              0xc3	                                     ret	      3502	decNumber.c	FUNCTION_68	FUNCTION_57
decNumberNextToward	SWITCH,0:IF,9:FOR,0:CALL,12:DO,0:ELSE,4:WHILE,0:functions,0	137
0x40028c0	              0x55	                                push rbp	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x40028c1	          0x4889e5	                            mov rbp, rsp	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x40028c4	        0x4883ec70	                           sub rsp, 0x70	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x40028c8	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x40028cc	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x40028d0	        0x48895598	             mov qword [rbp - 0x68], rdx	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x40028d4	        0x48894d90	             mov qword [rbp - 0x70], rcx	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x40028d8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x40028e1	        0x488945f8	                mov qword [rbp - 8], rax	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x40028e5	            0x31c0	                            xor eax, eax	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x40028e7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x40028eb	          0x488b10	                    mov rdx, qword [rax]	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x40028ee	        0x488955c0	             mov qword [rbp - 0x40], rdx	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x40028f2	        0x488b5008	                mov rdx, qword [rax + 8]	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x40028f6	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x40028fa	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x40028fe	        0x488955d0	             mov qword [rbp - 0x30], rdx	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4002902	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4002905	          0x8945d8	             mov dword [rbp - 0x28], eax	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4002908	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      1742	decNumber.c	FUNCTION_68	FUNCTION_30
0x400290f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x4002913	         0xfb64008	               movzx eax, byte [rax + 8]	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x4002917	           0xfb6c0	                           movzx eax, al	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x400291a	          0x83e030	                           and eax, 0x30	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x400291d	            0x85c0	                           test eax, eax	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x400291f	            0x7512	                           jne 0x4002933	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x4002921	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x4002925	         0xfb64008	               movzx eax, byte [rax + 8]	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x4002929	           0xfb6c0	                           movzx eax, al	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x400292c	          0x83e030	                           and eax, 0x30	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x400292f	            0x85c0	                           test eax, eax	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x4002931	            0x7424	                            je 0x4002957	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x4002933	        0x488d7db8	                   lea rdi, [rbp - 0x48]	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4002937	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x400293b	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x400293f	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4002943	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4002947	          0x4989f8	                             mov r8, rdi	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x400294a	          0x4889c7	                            mov rdi, rax	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x400294d	      0xe8c0b80000	                        call sym.decNaNs	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4002952	      0xe93b010000	                           jmp 0x4002a92	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4002957	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x400295b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x400295f	      0xba00000000	                              mov edx, 0	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x4002964	          0x4889ce	                            mov rsi, rcx	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x4002967	          0x4889c7	                            mov rdi, rax	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x400296a	      0xe8be920000	                     call sym.decCompare	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x400296f	          0x8945bc	             mov dword [rbp - 0x44], eax	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x4002972	    0x817dbc000000	     cmp dword [rbp - 0x44], 0x80000000 	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x4002979	            0x750e	                           jne 0x4002989	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x400297b	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x400297e	          0x83c810	                            or eax, 0x10	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x4002981	          0x8945b8	             mov dword [rbp - 0x48], eax	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x4002984	      0xe909010000	                           jmp 0x4002a92	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x4002989	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x400298d	            0x751c	                           jne 0x40029ab	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x400298f	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x4002993	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x4002997	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x400299b	          0x4889ce	                            mov rsi, rcx	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x400299e	          0x4889c7	                            mov rdi, rax	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x40029a1	      0xe800000000	                          call 0x40029a6	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x40029a6	      0xe9e7000000	                           jmp 0x4002a92	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x40029ab	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1757	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x40029af	            0x7948	                           jns 0x40029f9	      1757	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x40029b1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x40029b5	         0xfb64008	               movzx eax, byte [rax + 8]	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x40029b9	           0xfb6c0	                           movzx eax, al	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x40029bc	      0x25c0000000	                           and eax, 0xc0	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x40029c1	      0x3dc0000000	                           cmp eax, 0xc0	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x40029c6	            0x7524	                           jne 0x40029ec	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x40029c8	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1760	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6	CALL_7
0x40029cc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1760	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6	CALL_7
0x40029d0	          0x4889d6	                            mov rsi, rdx	      1760	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6	CALL_7
0x40029d3	          0x4889c7	                            mov rdi, rax	      1760	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6	CALL_7
0x40029d6	      0xe8c0b00000	                 call sym.decSetMaxValue	      1760	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6	CALL_7
0x40029db	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1761	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x40029df	        0xc6400880	                mov byte [rax + 8], 0x80	      1761	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x40029e3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1762	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x40029e7	      0xe9c6000000	                           jmp 0x4002ab2	      1762	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x40029ec	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1764	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x40029f3	        0xc645b700	                mov byte [rbp - 0x49], 0	      1765	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x40029f7	            0xeb3c	                           jmp 0x4002a35	      1765	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x40029f9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1769	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x40029fd	         0xfb64008	               movzx eax, byte [rax + 8]	      1769	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4002a01	           0xfb6c0	                           movzx eax, al	      1769	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4002a04	      0x25c0000000	                           and eax, 0xc0	      1769	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4002a09	          0x83f840	                           cmp eax, 0x40	      1769	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4002a0c	            0x751c	                           jne 0x4002a2a	      1769	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4002a0e	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1770	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7	CALL_8
0x4002a12	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1770	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7	CALL_8
0x4002a16	          0x4889d6	                            mov rsi, rdx	      1770	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7	CALL_8
0x4002a19	          0x4889c7	                            mov rdi, rax	      1770	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7	CALL_8
0x4002a1c	      0xe87ab00000	                 call sym.decSetMaxValue	      1770	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7	CALL_8
0x4002a21	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1771	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4002a25	      0xe988000000	                           jmp 0x4002ab2	      1771	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4002a2a	    0xc745cc060000	               mov dword [rbp - 0x34], 6	      1773	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4
0x4002a31	        0xc645b780	            mov byte [rbp - 0x49], 0x80 	      1774	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4
0x4002a35	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1776	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_9
0x4002a39	          0x4889c7	                            mov rdi, rax	      1776	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_9
0x4002a3c	      0xe800000000	                          call 0x4002a41	      1776	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_9
0x4002a41	    0x66c745ea0100	                mov word [rbp - 0x16], 1	      1777	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3
0x4002a47	    0xc745e4003665	      mov dword [rbp - 0x1c], 0xc4653600	      1778	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3
0x4002a4e	         0xfb67db7	            movzx edi, byte [rbp - 0x49]	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4002a52	        0x4c8d45b8	                    lea r8, [rbp - 0x48]	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4002a56	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4002a5a	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4002a5e	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4002a62	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4002a66	          0x4d89c1	                              mov r9, r8	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4002a69	          0x4189f8	                            mov r8d, edi	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4002a6c	          0x4889c7	                            mov rdi, rax	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4002a6f	      0xe8c5410000	                       call sym.decAddOp	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4002a74	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x4002a78	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x4002a7c	          0x4889d6	                            mov rsi, rdx	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x4002a7f	          0x4889c7	                            mov rdi, rax	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x4002a82	      0xe800000000	                          call 0x4002a87	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x4002a87	            0x85c0	                           test eax, eax	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x4002a89	            0x7407	                            je 0x4002a92	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x4002a8b	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x4002a92	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4002a95	            0x85c0	                           test eax, eax	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4002a97	            0x7415	                            je 0x4002aae	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4002a99	          0x8b4db8	             mov ecx, dword [rbp - 0x48]	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4002a9c	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4002aa0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4002aa4	            0x89ce	                            mov esi, ecx	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4002aa6	          0x4889c7	                            mov rdi, rax	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4002aa9	      0xe86ab90000	                      call sym.decStatus	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4002aae	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1787	decNumber.c	FUNCTION_68	FUNCTION_30
0x4002ab2	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4002ab6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4002abf	            0x7405	                            je 0x4002ac6	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4002ac1	      0xe800000000	                          call 0x4002ac6	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4002ac6	              0xc9	                                   leave	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4002ac7	              0xc3	                                     ret	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
decNumberCopySign	SWITCH,0:IF,1:FOR,0:CALL,2:DO,0:ELSE,0:WHILE,0:functions,0	30
0x4005fdf	              0x55	                                push rbp	      3429	decNumber.c	FUNCTION_68	FUNCTION_55
0x4005fe0	          0x4889e5	                            mov rbp, rsp	      3429	decNumber.c	FUNCTION_68	FUNCTION_55
0x4005fe3	        0x4883ec28	                           sub rsp, 0x28	      3429	decNumber.c	FUNCTION_68	FUNCTION_55
0x4005fe7	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3429	decNumber.c	FUNCTION_68	FUNCTION_55
0x4005feb	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3429	decNumber.c	FUNCTION_68	FUNCTION_55
0x4005fef	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3429	decNumber.c	FUNCTION_68	FUNCTION_55
0x4005ff3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3434	decNumber.c	FUNCTION_68	FUNCTION_55
0x4005ff7	         0xfb64008	               movzx eax, byte [rax + 8]	      3434	decNumber.c	FUNCTION_68	FUNCTION_55
0x4005ffb	          0x83e080	                     and eax, 0xffffff80	      3434	decNumber.c	FUNCTION_68	FUNCTION_55
0x4005ffe	          0x8845ff	                  mov byte [rbp - 1], al	      3434	decNumber.c	FUNCTION_68	FUNCTION_55
0x4006001	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3435	decNumber.c	FUNCTION_68	FUNCTION_55	CALL_2
0x4006005	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3435	decNumber.c	FUNCTION_68	FUNCTION_55	CALL_2
0x4006009	          0x4889d6	                            mov rsi, rdx	      3435	decNumber.c	FUNCTION_68	FUNCTION_55	CALL_2
0x400600c	          0x4889c7	                            mov rdi, rax	      3435	decNumber.c	FUNCTION_68	FUNCTION_55	CALL_2
0x400600f	      0xe800000000	                          call 0x4006014	      3435	decNumber.c	FUNCTION_68	FUNCTION_55	CALL_2
0x4006014	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3436	decNumber.c	FUNCTION_68	FUNCTION_55
0x4006018	         0xfb64008	               movzx eax, byte [rax + 8]	      3436	decNumber.c	FUNCTION_68	FUNCTION_55
0x400601c	          0x83e07f	                           and eax, 0x7f	      3436	decNumber.c	FUNCTION_68	FUNCTION_55
0x400601f	            0x89c2	                            mov edx, eax	      3436	decNumber.c	FUNCTION_68	FUNCTION_55
0x4006021	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3436	decNumber.c	FUNCTION_68	FUNCTION_55
0x4006025	          0x885008	                  mov byte [rax + 8], dl	      3436	decNumber.c	FUNCTION_68	FUNCTION_55
0x4006028	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x400602c	         0xfb64008	               movzx eax, byte [rax + 8]	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x4006030	           0xa45ff	                   or al, byte [rbp - 1]	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x4006033	            0x89c2	                            mov edx, eax	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x4006035	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x4006039	          0x885008	                  mov byte [rax + 8], dl	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x400603c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3438	decNumber.c	FUNCTION_68	FUNCTION_55
0x4006040	              0xc9	                                   leave	      3439	decNumber.c	FUNCTION_68	FUNCTION_55
0x4006041	              0xc3	                                     ret	      3439	decNumber.c	FUNCTION_68	FUNCTION_55
decNumberMin	SWITCH,0:IF,1:FOR,0:CALL,3:DO,0:ELSE,0:WHILE,0:functions,0	36
0x400250b	              0x55	                                push rbp	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x400250c	          0x4889e5	                            mov rbp, rsp	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x400250f	        0x4883ec30	                           sub rsp, 0x30	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4002513	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4002517	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x400251b	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x400251f	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4002523	    0x64488b042528	                mov rax, qword fs:[0x28]	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x400252c	        0x488945f8	                mov qword [rbp - 8], rax	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4002530	            0x31c0	                            xor eax, eax	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4002532	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1585	decNumber.c	FUNCTION_68	FUNCTION_25
0x4002539	        0x488d7df4	                    lea rdi, [rbp - 0xc]	      1586	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_1
0x400253d	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1586	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_1
0x4002541	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1586	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_1
0x4002545	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1586	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_1
0x4002549	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1586	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_1
0x400254d	          0x4989f9	                             mov r9, rdi	      1586	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_1
0x4002550	    0x41b803000000	                              mov r8d, 3	      1586	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_1
0x4002556	          0x4889c7	                            mov rdi, rax	      1586	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_1
0x4002559	      0xe8fb910000	                   call sym.decCompareOp	      1586	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_1
0x400255e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x4002561	            0x85c0	                           test eax, eax	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x4002563	            0x7415	                            je 0x400257a	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x4002565	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x4002568	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x400256c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x4002570	            0x89ce	                            mov esi, ecx	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x4002572	          0x4889c7	                            mov rdi, rax	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x4002575	      0xe89ebe0000	                      call sym.decStatus	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x400257a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1591	decNumber.c	FUNCTION_68	FUNCTION_25
0x400257e	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x4002582	    0x644833342528	                xor rsi, qword fs:[0x28]	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x400258b	            0x7405	                            je 0x4002592	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x400258d	      0xe800000000	                          call 0x4002592	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x4002592	              0xc9	                                   leave	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x4002593	              0xc3	                                     ret	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
decSetSubnormal	SWITCH,0:IF,7:FOR,0:CALL,5:DO,0:ELSE,0:WHILE,0:functions,1	170
0x400db1f	              0x55	                                push rbp	      7423	decNumber.c	FUNCTION_18
0x400db20	          0x4889e5	                            mov rbp, rsp	      7423	decNumber.c	FUNCTION_18
0x400db23	        0x4883ec60	                           sub rsp, 0x60	      7423	decNumber.c	FUNCTION_18
0x400db27	        0x48897db8	             mov qword [rbp - 0x48], rdi	      7423	decNumber.c	FUNCTION_18
0x400db2b	        0x488975b0	             mov qword [rbp - 0x50], rsi	      7423	decNumber.c	FUNCTION_18
0x400db2f	        0x488955a8	             mov qword [rbp - 0x58], rdx	      7423	decNumber.c	FUNCTION_18
0x400db33	        0x48894da0	             mov qword [rbp - 0x60], rcx	      7423	decNumber.c	FUNCTION_18
0x400db37	    0x64488b042528	                mov rax, qword fs:[0x28]	      7423	decNumber.c	FUNCTION_18
0x400db40	        0x488945f8	                mov qword [rbp - 8], rax	      7423	decNumber.c	FUNCTION_18
0x400db44	            0x31c0	                            xor eax, eax	      7423	decNumber.c	FUNCTION_18
0x400db46	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7439	decNumber.c	FUNCTION_18
0x400db4a	          0x8b5008	                mov edx, dword [rax + 8]	      7439	decNumber.c	FUNCTION_18
0x400db4d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7439	decNumber.c	FUNCTION_18
0x400db51	            0x8b00	                    mov eax, dword [rax]	      7439	decNumber.c	FUNCTION_18
0x400db53	          0x83e801	                              sub eax, 1	      7439	decNumber.c	FUNCTION_18
0x400db56	            0x29c2	                            sub edx, eax	      7439	decNumber.c	FUNCTION_18
0x400db58	            0x89d0	                            mov eax, edx	      7439	decNumber.c	FUNCTION_18
0x400db5a	          0x8945c8	             mov dword [rbp - 0x38], eax	      7439	decNumber.c	FUNCTION_18
0x400db5d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db61	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db65	          0x6685c0	                             test ax, ax	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db68	            0x754d	                           jne 0x400dbb7	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db6a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db6e	            0x8b00	                    mov eax, dword [rax]	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db70	          0x83f801	                              cmp eax, 1	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db73	            0x7542	                           jne 0x400dbb7	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db75	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db79	         0xfb64008	               movzx eax, byte [rax + 8]	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db7d	           0xfb6c0	                           movzx eax, al	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db80	          0x83e070	                           and eax, 0x70	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db83	            0x85c0	                           test eax, eax	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db85	            0x7530	                           jne 0x400dbb7	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db87	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db8b	          0x8b4004	                mov eax, dword [rax + 4]	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db8e	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db91	     0xf8d8d010000	                           jge 0x400dd24	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400db97	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7450	decNumber.c	FUNCTION_18	FUNCTION_1
0x400db9b	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      7450	decNumber.c	FUNCTION_18	FUNCTION_1
0x400db9e	          0x895004	                mov dword [rax + 4], edx	      7450	decNumber.c	FUNCTION_18	FUNCTION_1
0x400dba1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7451	decNumber.c	FUNCTION_18	FUNCTION_1
0x400dba5	            0x8b00	                    mov eax, dword [rax]	      7451	decNumber.c	FUNCTION_18	FUNCTION_1
0x400dba7	          0x80cc04	                                or ah, 4	      7451	decNumber.c	FUNCTION_18	FUNCTION_1
0x400dbaa	            0x89c2	                            mov edx, eax	      7451	decNumber.c	FUNCTION_18	FUNCTION_1
0x400dbac	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7451	decNumber.c	FUNCTION_18	FUNCTION_1
0x400dbb0	            0x8910	                    mov dword [rax], edx	      7451	decNumber.c	FUNCTION_18	FUNCTION_1
0x400dbb2	      0xe96d010000	                           jmp 0x400dd24	      7453	decNumber.c	FUNCTION_18	FUNCTION_1	IF_2
0x400dbb7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7456	decNumber.c	FUNCTION_18
0x400dbbb	            0x8b00	                    mov eax, dword [rax]	      7456	decNumber.c	FUNCTION_18
0x400dbbd	          0x80cc10	                             or ah, 0x10	      7456	decNumber.c	FUNCTION_18
0x400dbc0	            0x89c2	                            mov edx, eax	      7456	decNumber.c	FUNCTION_18
0x400dbc2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7456	decNumber.c	FUNCTION_18
0x400dbc6	            0x8910	                    mov dword [rax], edx	      7456	decNumber.c	FUNCTION_18
0x400dbc8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7457	decNumber.c	FUNCTION_18
0x400dbcc	          0x8b4004	                mov eax, dword [rax + 4]	      7457	decNumber.c	FUNCTION_18
0x400dbcf	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      7457	decNumber.c	FUNCTION_18
0x400dbd2	            0x29c2	                            sub edx, eax	      7457	decNumber.c	FUNCTION_18
0x400dbd4	            0x89d0	                            mov eax, edx	      7457	decNumber.c	FUNCTION_18
0x400dbd6	          0x8945cc	             mov dword [rbp - 0x34], eax	      7457	decNumber.c	FUNCTION_18
0x400dbd9	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      7458	decNumber.c	FUNCTION_18	IF_3
0x400dbdd	            0x7f27	                            jg 0x400dc06	      7458	decNumber.c	FUNCTION_18	IF_3
0x400dbdf	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x400dbe3	            0x8b00	                    mov eax, dword [rax]	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x400dbe5	          0x83e020	                           and eax, 0x20	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x400dbe8	            0x85c0	                           test eax, eax	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x400dbea	     0xf8437010000	                            je 0x400dd27	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x400dbf0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x400dbf4	            0x8b00	                    mov eax, dword [rax]	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x400dbf6	          0x80cc20	                             or ah, 0x20	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x400dbf9	            0x89c2	                            mov edx, eax	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x400dbfb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x400dbff	            0x8910	                    mov dword [rax], edx	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x400dc01	      0xe921010000	                           jmp 0x400dd27	      7463	decNumber.c	FUNCTION_18	IF_3
0x400dc06	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7468	decNumber.c	FUNCTION_18
0x400dc0a	          0x488b10	                    mov rdx, qword [rax]	      7468	decNumber.c	FUNCTION_18
0x400dc0d	        0x488955d0	             mov qword [rbp - 0x30], rdx	      7468	decNumber.c	FUNCTION_18
0x400dc11	        0x488b5008	                mov rdx, qword [rax + 8]	      7468	decNumber.c	FUNCTION_18
0x400dc15	        0x488955d8	             mov qword [rbp - 0x28], rdx	      7468	decNumber.c	FUNCTION_18
0x400dc19	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      7468	decNumber.c	FUNCTION_18
0x400dc1d	        0x488955e0	             mov qword [rbp - 0x20], rdx	      7468	decNumber.c	FUNCTION_18
0x400dc21	          0x8b4018	            mov eax, dword [rax + 0x18] 	      7468	decNumber.c	FUNCTION_18
0x400dc24	          0x8945e8	             mov dword [rbp - 0x18], eax	      7468	decNumber.c	FUNCTION_18
0x400dc27	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7469	decNumber.c	FUNCTION_18
0x400dc2b	            0x8b00	                    mov eax, dword [rax]	      7469	decNumber.c	FUNCTION_18
0x400dc2d	          0x2b45cc	             sub eax, dword [rbp - 0x34]	      7469	decNumber.c	FUNCTION_18
0x400dc30	          0x8945d0	             mov dword [rbp - 0x30], eax	      7469	decNumber.c	FUNCTION_18
0x400dc33	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7470	decNumber.c	FUNCTION_18
0x400dc36	          0x2b45cc	             sub eax, dword [rbp - 0x34]	      7470	decNumber.c	FUNCTION_18
0x400dc39	          0x8945d8	             mov dword [rbp - 0x28], eax	      7470	decNumber.c	FUNCTION_18
0x400dc3c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7472	decNumber.c	FUNCTION_18	CALL_2
0x400dc40	            0x8b10	                    mov edx, dword [rax]	      7472	decNumber.c	FUNCTION_18	CALL_2
0x400dc42	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7472	decNumber.c	FUNCTION_18	CALL_2
0x400dc46	        0x488d780a	                    lea rdi, [rax + 0xa]	      7472	decNumber.c	FUNCTION_18	CALL_2
0x400dc4a	        0x4c8b45a0	              mov r8, qword [rbp - 0x60]	      7472	decNumber.c	FUNCTION_18	CALL_2
0x400dc4e	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      7472	decNumber.c	FUNCTION_18	CALL_2
0x400dc52	        0x488d75d0	                   lea rsi, [rbp - 0x30]	      7472	decNumber.c	FUNCTION_18	CALL_2
0x400dc56	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7472	decNumber.c	FUNCTION_18	CALL_2
0x400dc5a	          0x4d89c1	                              mov r9, r8	      7472	decNumber.c	FUNCTION_18	CALL_2
0x400dc5d	          0x4989c8	                             mov r8, rcx	      7472	decNumber.c	FUNCTION_18	CALL_2
0x400dc60	            0x89d1	                            mov ecx, edx	      7472	decNumber.c	FUNCTION_18	CALL_2
0x400dc62	          0x4889fa	                            mov rdx, rdi	      7472	decNumber.c	FUNCTION_18	CALL_2
0x400dc65	          0x4889c7	                            mov rdi, rax	      7472	decNumber.c	FUNCTION_18	CALL_2
0x400dc68	      0xe8c7f1ffff	                    call sym.decSetCoeff	      7472	decNumber.c	FUNCTION_18	CALL_2
0x400dc6d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7473	decNumber.c	FUNCTION_18	CALL_3
0x400dc71	            0x8b10	                    mov edx, dword [rax]	      7473	decNumber.c	FUNCTION_18	CALL_3
0x400dc73	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      7473	decNumber.c	FUNCTION_18	CALL_3
0x400dc77	        0x488d75d0	                   lea rsi, [rbp - 0x30]	      7473	decNumber.c	FUNCTION_18	CALL_3
0x400dc7b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7473	decNumber.c	FUNCTION_18	CALL_3
0x400dc7f	          0x4889c7	                            mov rdi, rax	      7473	decNumber.c	FUNCTION_18	CALL_3
0x400dc82	      0xe8fdf5ffff	                  call sym.decApplyRound	      7473	decNumber.c	FUNCTION_18	CALL_3
0x400dc87	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7477	decNumber.c	FUNCTION_18	IF_5
0x400dc8b	            0x8b00	                    mov eax, dword [rax]	      7477	decNumber.c	FUNCTION_18	IF_5
0x400dc8d	          0x83e020	                           and eax, 0x20	      7477	decNumber.c	FUNCTION_18	IF_5
0x400dc90	            0x85c0	                           test eax, eax	      7477	decNumber.c	FUNCTION_18	IF_5
0x400dc92	            0x7411	                            je 0x400dca5	      7477	decNumber.c	FUNCTION_18	IF_5
0x400dc94	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7477	decNumber.c	FUNCTION_18	IF_5
0x400dc98	            0x8b00	                    mov eax, dword [rax]	      7477	decNumber.c	FUNCTION_18	IF_5
0x400dc9a	          0x80cc20	                             or ah, 0x20	      7477	decNumber.c	FUNCTION_18	IF_5
0x400dc9d	            0x89c2	                            mov edx, eax	      7477	decNumber.c	FUNCTION_18	IF_5
0x400dc9f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7477	decNumber.c	FUNCTION_18	IF_5
0x400dca3	            0x8910	                    mov dword [rax], edx	      7477	decNumber.c	FUNCTION_18	IF_5
0x400dca5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7481	decNumber.c	FUNCTION_18	IF_6
0x400dca9	          0x8b4004	                mov eax, dword [rax + 4]	      7481	decNumber.c	FUNCTION_18	IF_6
0x400dcac	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      7481	decNumber.c	FUNCTION_18	IF_6
0x400dcaf	            0x7e36	                           jle 0x400dce7	      7481	decNumber.c	FUNCTION_18	IF_6
0x400dcb1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x400dcb5	            0x8b00	                    mov eax, dword [rax]	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x400dcb7	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x400dcbb	        0x488d4a0a	                    lea rcx, [rdx + 0xa]	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x400dcbf	      0xba01000000	                              mov edx, 1	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x400dcc4	            0x89c6	                            mov esi, eax	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x400dcc6	          0x4889cf	                            mov rdi, rcx	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x400dcc9	      0xe8fdebffff	                 call sym.decShiftToMost	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x400dcce	            0x89c2	                            mov edx, eax	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x400dcd0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x400dcd4	            0x8910	                    mov dword [rax], edx	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x400dcd6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7483	decNumber.c	FUNCTION_18	IF_6
0x400dcda	          0x8b4004	                mov eax, dword [rax + 4]	      7483	decNumber.c	FUNCTION_18	IF_6
0x400dcdd	          0x8d50ff	                      lea edx, [rax - 1]	      7483	decNumber.c	FUNCTION_18	IF_6
0x400dce0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7483	decNumber.c	FUNCTION_18	IF_6
0x400dce4	          0x895004	                mov dword [rax + 4], edx	      7483	decNumber.c	FUNCTION_18	IF_6
0x400dce7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dceb	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dcef	          0x6685c0	                             test ax, ax	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dcf2	            0x7534	                           jne 0x400dd28	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dcf4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dcf8	            0x8b00	                    mov eax, dword [rax]	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dcfa	          0x83f801	                              cmp eax, 1	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dcfd	            0x7529	                           jne 0x400dd28	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dcff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dd03	         0xfb64008	               movzx eax, byte [rax + 8]	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dd07	           0xfb6c0	                           movzx eax, al	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dd0a	          0x83e070	                           and eax, 0x70	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dd0d	            0x85c0	                           test eax, eax	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dd0f	            0x7517	                           jne 0x400dd28	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dd11	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dd15	            0x8b00	                    mov eax, dword [rax]	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dd17	          0x80cc04	                                or ah, 4	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dd1a	            0x89c2	                            mov edx, eax	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dd1c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dd20	            0x8910	                    mov dword [rax], edx	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dd22	            0xeb04	                           jmp 0x400dd28	      7487	decNumber.c	FUNCTION_18	CALL_5
0x400dd24	              0x90	                                     nop	      7453	decNumber.c	FUNCTION_18	FUNCTION_1	IF_2
0x400dd25	            0xeb01	                           jmp 0x400dd28	      7453	decNumber.c	FUNCTION_18	FUNCTION_1	IF_2
0x400dd27	              0x90	                                     nop	      7463	decNumber.c	FUNCTION_18	IF_3
0x400dd28	        0x488b45f8	                mov rax, qword [rbp - 8]	      7488	decNumber.c	FUNCTION_18
0x400dd2c	    0x644833042528	                xor rax, qword fs:[0x28]	      7488	decNumber.c	FUNCTION_18
0x400dd35	            0x7405	                            je 0x400dd3c	      7488	decNumber.c	FUNCTION_18
0x400dd37	      0xe800000000	                          call 0x400dd3c	      7488	decNumber.c	FUNCTION_18
0x400dd3c	              0xc9	                                   leave	      7488	decNumber.c	FUNCTION_18
0x400dd3d	              0xc3	                                     ret	      7488	decNumber.c	FUNCTION_18
decNumberRescale	SWITCH,0:IF,1:FOR,0:CALL,2:DO,0:ELSE,0:WHILE,0:functions,0	36
0x4003c7d	              0x55	                                push rbp	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4003c7e	          0x4889e5	                            mov rbp, rsp	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4003c81	        0x4883ec30	                           sub rsp, 0x30	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4003c85	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4003c89	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4003c8d	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4003c91	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4003c95	    0x64488b042528	                mov rax, qword fs:[0x28]	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4003c9e	        0x488945f8	                mov qword [rbp - 8], rax	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4003ca2	            0x31c0	                            xor eax, eax	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4003ca4	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      2378	decNumber.c	FUNCTION_68	FUNCTION_38
0x4003cab	        0x488d7df4	                    lea rdi, [rbp - 0xc]	      2379	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_1
0x4003caf	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2379	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_1
0x4003cb3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2379	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_1
0x4003cb7	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      2379	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_1
0x4003cbb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2379	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_1
0x4003cbf	          0x4989f9	                             mov r9, rdi	      2379	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_1
0x4003cc2	    0x41b800000000	                              mov r8d, 0	      2379	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_1
0x4003cc8	          0x4889c7	                            mov rdi, rax	      2379	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_1
0x4003ccb	      0xe8ea760000	                  call sym.decQuantizeOp	      2379	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_1
0x4003cd0	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4003cd3	            0x85c0	                           test eax, eax	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4003cd5	            0x7415	                            je 0x4003cec	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4003cd7	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4003cda	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4003cde	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4003ce2	            0x89ce	                            mov esi, ecx	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4003ce4	          0x4889c7	                            mov rdi, rax	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4003ce7	      0xe82ca70000	                      call sym.decStatus	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4003cec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2381	decNumber.c	FUNCTION_68	FUNCTION_38
0x4003cf0	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x4003cf4	    0x644833342528	                xor rsi, qword fs:[0x28]	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x4003cfd	            0x7405	                            je 0x4003d04	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x4003cff	      0xe800000000	                          call 0x4003d04	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x4003d04	              0xc9	                                   leave	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x4003d05	              0xc3	                                     ret	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
decSetOverflow	SWITCH,1:IF,6:FOR,0:CALL,3:DO,0:ELSE,1:WHILE,0:functions,0	108
0x400d954	              0x55	                                push rbp	      7342	decNumber.c	FUNCTION_16
0x400d955	          0x4889e5	                            mov rbp, rsp	      7342	decNumber.c	FUNCTION_16
0x400d958	        0x4883ec30	                           sub rsp, 0x30	      7342	decNumber.c	FUNCTION_16
0x400d95c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      7342	decNumber.c	FUNCTION_16
0x400d960	        0x488975e0	             mov qword [rbp - 0x20], rsi	      7342	decNumber.c	FUNCTION_16
0x400d964	        0x488955d8	             mov qword [rbp - 0x28], rdx	      7342	decNumber.c	FUNCTION_16
0x400d968	        0xc645fa00	                   mov byte [rbp - 6], 0	      7343	decNumber.c	FUNCTION_16
0x400d96c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7344	decNumber.c	FUNCTION_16
0x400d970	         0xfb64008	               movzx eax, byte [rax + 8]	      7344	decNumber.c	FUNCTION_16
0x400d974	          0x83e080	                     and eax, 0xffffff80	      7344	decNumber.c	FUNCTION_16
0x400d977	          0x8845fb	                  mov byte [rbp - 5], al	      7344	decNumber.c	FUNCTION_16
0x400d97a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x400d97e	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x400d982	          0x6685c0	                             test ax, ax	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x400d985	            0x756f	                           jne 0x400d9f6	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x400d987	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x400d98b	            0x8b00	                    mov eax, dword [rax]	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x400d98d	          0x83f801	                              cmp eax, 1	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x400d990	            0x7564	                           jne 0x400d9f6	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x400d992	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x400d996	         0xfb64008	               movzx eax, byte [rax + 8]	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x400d99a	           0xfb6c0	                           movzx eax, al	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x400d99d	          0x83e070	                           and eax, 0x70	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x400d9a0	            0x85c0	                           test eax, eax	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x400d9a2	            0x7552	                           jne 0x400d9f6	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x400d9a4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7347	decNumber.c	FUNCTION_16	IF_1
0x400d9a8	          0x8b4004	                mov eax, dword [rax + 4]	      7347	decNumber.c	FUNCTION_16	IF_1
0x400d9ab	          0x8945fc	                mov dword [rbp - 4], eax	      7347	decNumber.c	FUNCTION_16	IF_1
0x400d9ae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x400d9b2	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x400d9b6	            0x84c0	                             test al, al	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x400d9b8	            0x740c	                            je 0x400d9c6	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x400d9ba	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x400d9be	            0x8b00	                    mov eax, dword [rax]	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x400d9c0	          0x83e801	                              sub eax, 1	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x400d9c3	          0x2945fc	                sub dword [rbp - 4], eax	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x400d9c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7349	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400d9ca	          0x8b4004	                mov eax, dword [rax + 4]	      7349	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400d9cd	          0x3b45fc	                cmp eax, dword [rbp - 4]	      7349	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400d9d0	     0xf8ec2000000	                           jle 0x400da98	      7349	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400d9d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7350	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400d9da	          0x8b55fc	                mov edx, dword [rbp - 4]	      7350	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400d9dd	          0x895004	                mov dword [rax + 4], edx	      7350	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400d9e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400d9e4	            0x8b00	                    mov eax, dword [rax]	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400d9e6	          0x80cc04	                                or ah, 4	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400d9e9	            0x89c2	                            mov edx, eax	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400d9eb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400d9ef	            0x8910	                    mov dword [rax], edx	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400d9f1	      0xe9a2000000	                           jmp 0x400da98	      7353	decNumber.c	FUNCTION_16	IF_1
0x400d9f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7356	decNumber.c	FUNCTION_16	CALL_2
0x400d9fa	          0x4889c7	                            mov rdi, rax	      7356	decNumber.c	FUNCTION_16	CALL_2
0x400d9fd	      0xe800000000	                          call 0x400da02	      7356	decNumber.c	FUNCTION_16	CALL_2
0x400da02	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x400da06	          0x8b400c	              mov eax, dword [rax + 0xc]	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x400da09	          0x83f805	                              cmp eax, 5	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x400da0c	            0x7417	                            je 0x400da25	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x400da0e	          0x83f805	                              cmp eax, 5	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x400da11	            0x7706	                            ja 0x400da19	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x400da13	            0x85c0	                           test eax, eax	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x400da15	            0x741a	                            je 0x400da31	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x400da17	            0xeb34	                           jmp 0x400da4d	      7370	decNumber.c	FUNCTION_16	SWITCH_1
0x400da19	          0x83f806	                              cmp eax, 6	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x400da1c	            0x741f	                            je 0x400da3d	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x400da1e	          0x83f807	                              cmp eax, 7	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x400da21	            0x7408	                            je 0x400da2b	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x400da23	            0xeb28	                           jmp 0x400da4d	      7370	decNumber.c	FUNCTION_16	SWITCH_1
0x400da25	        0xc645fa01	                   mov byte [rbp - 6], 1	      7359	decNumber.c	FUNCTION_16	SWITCH_1
0x400da29	            0xeb22	                           jmp 0x400da4d	      7360	decNumber.c	FUNCTION_16	SWITCH_1
0x400da2b	        0xc645fa01	                   mov byte [rbp - 6], 1	      7362	decNumber.c	FUNCTION_16	SWITCH_1
0x400da2f	            0xeb1c	                           jmp 0x400da4d	      7363	decNumber.c	FUNCTION_16	SWITCH_1
0x400da31	        0x807dfb00	                   cmp byte [rbp - 5], 0	      7365	decNumber.c	FUNCTION_16	SWITCH_1	IF_4
0x400da35	            0x7412	                            je 0x400da49	      7365	decNumber.c	FUNCTION_16	SWITCH_1	IF_4
0x400da37	        0xc645fa01	                   mov byte [rbp - 6], 1	      7365	decNumber.c	FUNCTION_16	SWITCH_1	IF_4
0x400da3b	            0xeb0c	                           jmp 0x400da49	      7366	decNumber.c	FUNCTION_16	SWITCH_1
0x400da3d	        0x807dfb00	                   cmp byte [rbp - 5], 0	      7368	decNumber.c	FUNCTION_16	SWITCH_1	IF_5
0x400da41	            0x7509	                           jne 0x400da4c	      7368	decNumber.c	FUNCTION_16	SWITCH_1	IF_5
0x400da43	        0xc645fa01	                   mov byte [rbp - 6], 1	      7368	decNumber.c	FUNCTION_16	SWITCH_1	IF_5
0x400da47	            0xeb03	                           jmp 0x400da4c	      7369	decNumber.c	FUNCTION_16	SWITCH_1
0x400da49	              0x90	                                     nop	      7366	decNumber.c	FUNCTION_16	SWITCH_1
0x400da4a	            0xeb01	                           jmp 0x400da4d	      7366	decNumber.c	FUNCTION_16	SWITCH_1
0x400da4c	              0x90	                                     nop	      7369	decNumber.c	FUNCTION_16	SWITCH_1
0x400da4d	        0x807dfa00	                   cmp byte [rbp - 6], 0	      7372	decNumber.c	FUNCTION_16	IF_6
0x400da51	            0x7420	                            je 0x400da73	      7372	decNumber.c	FUNCTION_16	IF_6
0x400da53	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      7373	decNumber.c	FUNCTION_16	IF_6	CALL_3
0x400da57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7373	decNumber.c	FUNCTION_16	IF_6	CALL_3
0x400da5b	          0x4889d6	                            mov rsi, rdx	      7373	decNumber.c	FUNCTION_16	IF_6	CALL_3
0x400da5e	          0x4889c7	                            mov rdi, rax	      7373	decNumber.c	FUNCTION_16	IF_6	CALL_3
0x400da61	      0xe835000000	                 call sym.decSetMaxValue	      7373	decNumber.c	FUNCTION_16	IF_6	CALL_3
0x400da66	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7374	decNumber.c	FUNCTION_16	IF_6
0x400da6a	         0xfb655fb	               movzx edx, byte [rbp - 5]	      7374	decNumber.c	FUNCTION_16	IF_6
0x400da6e	          0x885008	                  mov byte [rax + 8], dl	      7374	decNumber.c	FUNCTION_16	IF_6
0x400da71	            0xeb10	                           jmp 0x400da83	      7374	decNumber.c	FUNCTION_16	IF_6
0x400da73	         0xfb645fb	               movzx eax, byte [rbp - 5]	      7376	decNumber.c	FUNCTION_16	ELSE_1
0x400da77	          0x83c840	                            or eax, 0x40	      7376	decNumber.c	FUNCTION_16	ELSE_1
0x400da7a	            0x89c2	                            mov edx, eax	      7376	decNumber.c	FUNCTION_16	ELSE_1
0x400da7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7376	decNumber.c	FUNCTION_16	ELSE_1
0x400da80	          0x885008	                  mov byte [rax + 8], dl	      7376	decNumber.c	FUNCTION_16	ELSE_1
0x400da83	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x400da87	            0x8b00	                    mov eax, dword [rax]	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x400da89	       0xd200a0000	                           or eax, 0xa20	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x400da8e	            0x89c2	                            mov edx, eax	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x400da90	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x400da94	            0x8910	                    mov dword [rax], edx	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x400da96	            0xeb01	                           jmp 0x400da99	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x400da98	              0x90	                                     nop	      7353	decNumber.c	FUNCTION_16	IF_1
0x400da99	              0xc9	                                   leave	      7378	decNumber.c	FUNCTION_16	ELSE_1
0x400da9a	              0xc3	                                     ret	      7378	decNumber.c	FUNCTION_16	ELSE_1
decNumberAdd	SWITCH,0:IF,1:FOR,0:CALL,3:DO,0:ELSE,0:WHILE,0:functions,0	36
0x4000ce8	              0x55	                                push rbp	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4000ce9	          0x4889e5	                            mov rbp, rsp	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4000cec	        0x4883ec30	                           sub rsp, 0x30	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4000cf0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4000cf4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4000cf8	        0x488955d8	             mov qword [rbp - 0x28], rdx	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4000cfc	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4000d00	    0x64488b042528	                mov rax, qword fs:[0x28]	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4000d09	        0x488945f8	                mov qword [rbp - 8], rax	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4000d0d	            0x31c0	                            xor eax, eax	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4000d0f	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       772	decNumber.c	FUNCTION_68	FUNCTION_9
0x4000d16	        0x488d7df4	                    lea rdi, [rbp - 0xc]	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4000d1a	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4000d1e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4000d22	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4000d26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4000d2a	          0x4989f9	                             mov r9, rdi	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4000d2d	    0x41b800000000	                              mov r8d, 0	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4000d33	          0x4889c7	                            mov rdi, rax	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4000d36	      0xe8fe5e0000	                       call sym.decAddOp	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4000d3b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4000d3e	            0x85c0	                           test eax, eax	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4000d40	            0x7415	                            je 0x4000d57	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4000d42	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4000d45	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4000d49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4000d4d	            0x89ce	                            mov esi, ecx	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4000d4f	          0x4889c7	                            mov rdi, rax	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4000d52	      0xe8c1d60000	                      call sym.decStatus	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4000d57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       778	decNumber.c	FUNCTION_68	FUNCTION_9
0x4000d5b	        0x488b75f8	                mov rsi, qword [rbp - 8]	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x4000d5f	    0x644833342528	                xor rsi, qword fs:[0x28]	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x4000d68	            0x7405	                            je 0x4000d6f	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x4000d6a	      0xe800000000	                          call 0x4000d6f	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x4000d6f	              0xc9	                                   leave	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x4000d70	              0xc3	                                     ret	       779	decNumber.c	FUNCTION_68	FUNCTION_9
decUnitCompare	SWITCH,0:IF,11:FOR,2:CALL,5:DO,0:ELSE,1:WHILE,0:functions,0	229
0x400be9d	              0x55	                                push rbp	      6228	decNumber.c	FUNCTION_4
0x400be9e	          0x4889e5	                            mov rbp, rsp	      6228	decNumber.c	FUNCTION_4
0x400bea1	    0x4881eca00000	                           sub rsp, 0xa0	      6228	decNumber.c	FUNCTION_4
0x400bea8	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      6228	decNumber.c	FUNCTION_4
0x400beaf	    0x89b574ffffff	             mov dword [rbp - 0x8c], esi	      6228	decNumber.c	FUNCTION_4
0x400beb5	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      6228	decNumber.c	FUNCTION_4
0x400bebc	    0x898d70ffffff	             mov dword [rbp - 0x90], ecx	      6228	decNumber.c	FUNCTION_4
0x400bec2	    0x44898564ffff	             mov dword [rbp - 0x9c], r8d	      6228	decNumber.c	FUNCTION_4
0x400bec9	    0x64488b042528	                mov rax, qword fs:[0x28]	      6228	decNumber.c	FUNCTION_4
0x400bed2	        0x488945f8	                mov qword [rbp - 8], rax	      6228	decNumber.c	FUNCTION_4
0x400bed6	            0x31c0	                            xor eax, eax	      6228	decNumber.c	FUNCTION_4
0x400bed8	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      6231	decNumber.c	FUNCTION_4
0x400bee0	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      6236	decNumber.c	FUNCTION_4	IF_1
0x400bee7	     0xf85c7000000	                           jne 0x400bfb4	      6236	decNumber.c	FUNCTION_4	IF_1
0x400beed	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      6237	decNumber.c	FUNCTION_4	IF_1	IF_2
0x400bef3	    0x3b8570ffffff	             cmp eax, dword [rbp - 0x90]	      6237	decNumber.c	FUNCTION_4	IF_1	IF_2
0x400bef9	            0x7e0a	                           jle 0x400bf05	      6237	decNumber.c	FUNCTION_4	IF_1	IF_2
0x400befb	      0xb801000000	                              mov eax, 1	      6237	decNumber.c	FUNCTION_4	IF_1	IF_2
0x400bf00	      0xe9e6020000	                           jmp 0x400c1eb	      6237	decNumber.c	FUNCTION_4	IF_1	IF_2
0x400bf05	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      6238	decNumber.c	FUNCTION_4	IF_1	IF_3
0x400bf0b	    0x3b8570ffffff	             cmp eax, dword [rbp - 0x90]	      6238	decNumber.c	FUNCTION_4	IF_1	IF_3
0x400bf11	            0x7d0a	                           jge 0x400bf1d	      6238	decNumber.c	FUNCTION_4	IF_1	IF_3
0x400bf13	      0xb8ffffffff	                     mov eax, 0xffffffff	      6238	decNumber.c	FUNCTION_4	IF_1	IF_3
0x400bf18	      0xe9ce020000	                           jmp 0x400c1eb	      6238	decNumber.c	FUNCTION_4	IF_1	IF_3
0x400bf1d	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      6240	decNumber.c	FUNCTION_4	IF_1
0x400bf23	            0x4898	                                    cdqe	      6240	decNumber.c	FUNCTION_4	IF_1
0x400bf25	          0x4801c0	                            add rax, rax	      6240	decNumber.c	FUNCTION_4	IF_1
0x400bf28	        0x488d50fe	                      lea rdx, [rax - 2]	      6240	decNumber.c	FUNCTION_4	IF_1
0x400bf2c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6240	decNumber.c	FUNCTION_4	IF_1
0x400bf33	          0x4801d0	                            add rax, rdx	      6240	decNumber.c	FUNCTION_4	IF_1
0x400bf36	        0x488945a8	             mov qword [rbp - 0x58], rax	      6240	decNumber.c	FUNCTION_4	IF_1
0x400bf3a	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      6241	decNumber.c	FUNCTION_4	IF_1
0x400bf40	            0x4898	                                    cdqe	      6241	decNumber.c	FUNCTION_4	IF_1
0x400bf42	          0x4801c0	                            add rax, rax	      6241	decNumber.c	FUNCTION_4	IF_1
0x400bf45	        0x488d50fe	                      lea rdx, [rax - 2]	      6241	decNumber.c	FUNCTION_4	IF_1
0x400bf49	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      6241	decNumber.c	FUNCTION_4	IF_1
0x400bf50	          0x4801d0	                            add rax, rdx	      6241	decNumber.c	FUNCTION_4	IF_1
0x400bf53	        0x488945b0	             mov qword [rbp - 0x50], rax	      6241	decNumber.c	FUNCTION_4	IF_1
0x400bf57	            0xeb44	                           jmp 0x400bf9d	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x400bf59	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x400bf5d	           0xfb710	                   movzx edx, word [rax]	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x400bf60	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x400bf64	           0xfb700	                   movzx eax, word [rax]	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x400bf67	          0x6639c2	                              cmp dx, ax	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x400bf6a	            0x760a	                           jbe 0x400bf76	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x400bf6c	      0xb801000000	                              mov eax, 1	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x400bf71	      0xe975020000	                           jmp 0x400c1eb	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x400bf76	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x400bf7a	           0xfb710	                   movzx edx, word [rax]	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x400bf7d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x400bf81	           0xfb700	                   movzx eax, word [rax]	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x400bf84	          0x6639c2	                              cmp dx, ax	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x400bf87	            0x730a	                           jae 0x400bf93	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x400bf89	      0xb8ffffffff	                     mov eax, 0xffffffff	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x400bf8e	      0xe958020000	                           jmp 0x400c1eb	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x400bf93	      0x48836da802	               sub qword [rbp - 0x58], 2	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x400bf98	      0x48836db002	               sub qword [rbp - 0x50], 2	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x400bf9d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x400bfa1	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x400bfa8	            0x73af	                           jae 0x400bf59	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x400bfaa	      0xb800000000	                              mov eax, 0	      6246	decNumber.c	FUNCTION_4	IF_1
0x400bfaf	      0xe937020000	                           jmp 0x400c1eb	      6246	decNumber.c	FUNCTION_4	IF_1
0x400bfb4	    0x83bd64ffffff	           cmp dword [rbp - 0x9c], 0x31 	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bfbb	            0x7f14	                            jg 0x400bfd1	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bfbd	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bfc3	            0x4898	                                    cdqe	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bfc5	     0xfb680000000	                   movzx eax, byte [rax]	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bfcc	           0xfb6c0	                           movzx eax, al	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bfcf	            0xeb1b	                           jmp 0x400bfec	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bfd1	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bfd7	          0x8d4802	                      lea ecx, [rax + 2]	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bfda	      0xba56555555	                     mov edx, 0x55555556	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bfdf	            0x89c8	                            mov eax, ecx	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bfe1	            0xf7ea	                                imul edx	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bfe3	            0x89c8	                            mov eax, ecx	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bfe5	          0xc1f81f	                           sar eax, 0x1f	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bfe8	            0x29c2	                            sub edx, eax	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bfea	            0x89d0	                            mov eax, edx	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bfec	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bff2	             0x1d0	                            add eax, edx	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bff4	    0x3b8574ffffff	             cmp eax, dword [rbp - 0x8c]	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bffa	            0x7d0a	                           jge 0x400c006	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400bffc	      0xb801000000	                              mov eax, 1	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400c001	      0xe9e5010000	                           jmp 0x400c1eb	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400c006	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c00c	          0x8d7001	                      lea esi, [rax + 1]	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c00f	    0x83bd64ffffff	           cmp dword [rbp - 0x9c], 0x31 	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c016	            0x7f14	                            jg 0x400c02c	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c018	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c01e	            0x4898	                                    cdqe	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c020	     0xfb680000000	                   movzx eax, byte [rax]	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c027	           0xfb6c0	                           movzx eax, al	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c02a	            0xeb1b	                           jmp 0x400c047	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c02c	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c032	          0x8d4802	                      lea ecx, [rax + 2]	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c035	      0xba56555555	                     mov edx, 0x55555556	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c03a	            0x89c8	                            mov eax, ecx	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c03c	            0xf7ea	                                imul edx	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c03e	            0x89c8	                            mov eax, ecx	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c040	          0xc1f81f	                           sar eax, 0x1f	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c043	            0x29c2	                            sub edx, eax	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c045	            0x89d0	                            mov eax, edx	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c047	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c04d	             0x1d0	                            add eax, edx	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c04f	            0x39c6	                            cmp esi, eax	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c051	            0x7d0a	                           jge 0x400c05d	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c053	      0xb8ffffffff	                     mov eax, 0xffffffff	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c058	      0xe98e010000	                           jmp 0x400c1eb	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400c05d	    0x83bd64ffffff	           cmp dword [rbp - 0x9c], 0x31 	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c064	            0x7f14	                            jg 0x400c07a	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c066	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c06c	            0x4898	                                    cdqe	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c06e	     0xfb680000000	                   movzx eax, byte [rax]	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c075	           0xfb6c0	                           movzx eax, al	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c078	            0xeb1b	                           jmp 0x400c095	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c07a	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c080	          0x8d4802	                      lea ecx, [rax + 2]	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c083	      0xba56555555	                     mov edx, 0x55555556	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c088	            0x89c8	                            mov eax, ecx	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c08a	            0xf7ea	                                imul edx	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c08c	            0x89c8	                            mov eax, ecx	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c08e	          0xc1f81f	                           sar eax, 0x1f	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c091	            0x29c2	                            sub edx, eax	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c093	            0x89d0	                            mov eax, edx	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c095	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c09b	             0x1d0	                            add eax, edx	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c09d	          0x894584	             mov dword [rbp - 0x7c], eax	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400c0a0	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      6258	decNumber.c	FUNCTION_4	IF_8
0x400c0a3	    0x3b8574ffffff	             cmp eax, dword [rbp - 0x8c]	      6258	decNumber.c	FUNCTION_4	IF_8
0x400c0a9	            0x7d09	                           jge 0x400c0b4	      6258	decNumber.c	FUNCTION_4	IF_8
0x400c0ab	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      6258	decNumber.c	FUNCTION_4	IF_8
0x400c0b1	          0x894584	             mov dword [rbp - 0x7c], eax	      6258	decNumber.c	FUNCTION_4	IF_8
0x400c0b4	        0x83458402	               add dword [rbp - 0x7c], 2	      6259	decNumber.c	FUNCTION_4
0x400c0b8	        0x488d45c0	                   lea rax, [rbp - 0x40]	      6260	decNumber.c	FUNCTION_4
0x400c0bc	        0x48894598	             mov qword [rbp - 0x68], rax	      6260	decNumber.c	FUNCTION_4
0x400c0c0	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      6261	decNumber.c	FUNCTION_4	IF_9
0x400c0c3	            0x4898	                                    cdqe	      6261	decNumber.c	FUNCTION_4	IF_9
0x400c0c5	          0x4801c0	                            add rax, rax	      6261	decNumber.c	FUNCTION_4	IF_9
0x400c0c8	        0x4883f832	                           cmp rax, 0x32	      6261	decNumber.c	FUNCTION_4	IF_9
0x400c0cc	            0x762d	                           jbe 0x400c0fb	      6261	decNumber.c	FUNCTION_4	IF_9
0x400c0ce	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      6262	decNumber.c	FUNCTION_4	IF_9
0x400c0d1	            0x4898	                                    cdqe	      6262	decNumber.c	FUNCTION_4	IF_9
0x400c0d3	          0x4801c0	                            add rax, rax	      6262	decNumber.c	FUNCTION_4	IF_9
0x400c0d6	          0x4889c7	                            mov rdi, rax	      6262	decNumber.c	FUNCTION_4	IF_9
0x400c0d9	      0xe800000000	                          call 0x400c0de	      6262	decNumber.c	FUNCTION_4	IF_9
0x400c0de	        0x488945a0	             mov qword [rbp - 0x60], rax	      6262	decNumber.c	FUNCTION_4	IF_9
0x400c0e2	      0x48837da000	               cmp qword [rbp - 0x60], 0	      6263	decNumber.c	FUNCTION_4	IF_9	IF_10
0x400c0e7	            0x750a	                           jne 0x400c0f3	      6263	decNumber.c	FUNCTION_4	IF_9	IF_10
0x400c0e9	      0xb800000080	                     mov eax, 0x80000000	      6263	decNumber.c	FUNCTION_4	IF_9	IF_10
0x400c0ee	      0xe9f8000000	                           jmp 0x400c1eb	      6263	decNumber.c	FUNCTION_4	IF_9	IF_10
0x400c0f3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      6264	decNumber.c	FUNCTION_4	IF_9
0x400c0f7	        0x48894598	             mov qword [rbp - 0x68], rax	      6264	decNumber.c	FUNCTION_4	IF_9
0x400c0fb	    0x8b8d64ffffff	             mov ecx, dword [rbp - 0x9c]	      6267	decNumber.c	FUNCTION_4
0x400c101	      0xba56555555	                     mov edx, 0x55555556	      6267	decNumber.c	FUNCTION_4
0x400c106	            0x89c8	                            mov eax, ecx	      6267	decNumber.c	FUNCTION_4
0x400c108	            0xf7ea	                                imul edx	      6267	decNumber.c	FUNCTION_4
0x400c10a	            0x89c8	                            mov eax, ecx	      6267	decNumber.c	FUNCTION_4
0x400c10c	          0xc1f81f	                           sar eax, 0x1f	      6267	decNumber.c	FUNCTION_4
0x400c10f	            0x29c2	                            sub edx, eax	      6267	decNumber.c	FUNCTION_4
0x400c111	            0x89d0	                            mov eax, edx	      6267	decNumber.c	FUNCTION_4
0x400c113	          0x89458c	             mov dword [rbp - 0x74], eax	      6267	decNumber.c	FUNCTION_4
0x400c116	    0x8b8d64ffffff	             mov ecx, dword [rbp - 0x9c]	      6268	decNumber.c	FUNCTION_4
0x400c11c	      0xba56555555	                     mov edx, 0x55555556	      6268	decNumber.c	FUNCTION_4
0x400c121	            0x89c8	                            mov eax, ecx	      6268	decNumber.c	FUNCTION_4
0x400c123	            0xf7ea	                                imul edx	      6268	decNumber.c	FUNCTION_4
0x400c125	            0x89c8	                            mov eax, ecx	      6268	decNumber.c	FUNCTION_4
0x400c127	          0xc1f81f	                           sar eax, 0x1f	      6268	decNumber.c	FUNCTION_4
0x400c12a	            0x29c2	                            sub edx, eax	      6268	decNumber.c	FUNCTION_4
0x400c12c	            0x89d0	                            mov eax, edx	      6268	decNumber.c	FUNCTION_4
0x400c12e	             0x1c0	                            add eax, eax	      6268	decNumber.c	FUNCTION_4
0x400c130	             0x1d0	                            add eax, edx	      6268	decNumber.c	FUNCTION_4
0x400c132	            0x29c1	                            sub ecx, eax	      6268	decNumber.c	FUNCTION_4
0x400c134	            0x89c8	                            mov eax, ecx	      6268	decNumber.c	FUNCTION_4
0x400c136	          0x894590	             mov dword [rbp - 0x70], eax	      6268	decNumber.c	FUNCTION_4
0x400c139	          0x8b4590	             mov eax, dword [rbp - 0x70]	      6271	decNumber.c	FUNCTION_4
0x400c13c	            0x4898	                                    cdqe	      6271	decNumber.c	FUNCTION_4
0x400c13e	    0x8b0485000000	                  mov eax, dword [rax*4]	      6271	decNumber.c	FUNCTION_4
0x400c145	            0xf7d8	                                 neg eax	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400c147	          0x4189c1	                            mov r9d, eax	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400c14a	        0x4c8b4598	              mov r8, qword [rbp - 0x68]	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400c14e	          0x8b7d8c	             mov edi, dword [rbp - 0x74]	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400c151	    0x8b8d70ffffff	             mov ecx, dword [rbp - 0x90]	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400c157	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400c15e	    0x8bb574ffffff	             mov esi, dword [rbp - 0x8c]	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400c164	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400c16b	        0x4883ec08	                              sub rsp, 8	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400c16f	            0x4151	                                 push r9	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400c171	          0x4d89c1	                              mov r9, r8	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400c174	          0x4189f8	                            mov r8d, edi	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400c177	          0x4889c7	                            mov rdi, rax	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400c17a	      0xe882000000	                  call sym.decUnitAddSub	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400c17f	        0x4883c410	                           add rsp, 0x10	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400c183	          0x894594	             mov dword [rbp - 0x6c], eax	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400c186	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      6273	decNumber.c	FUNCTION_4	IF_11
0x400c18a	            0x7909	                           jns 0x400c195	      6273	decNumber.c	FUNCTION_4	IF_11
0x400c18c	    0xc74588ffffff	     mov dword [rbp - 0x78], 0xffffffff 	      6273	decNumber.c	FUNCTION_4	IF_11
0x400c193	            0xeb47	                           jmp 0x400c1dc	      6273	decNumber.c	FUNCTION_4	IF_11
0x400c195	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x400c199	        0x488945b8	             mov qword [rbp - 0x48], rax	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x400c19d	            0xeb05	                           jmp 0x400c1a4	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x400c19f	      0x488345b802	               add qword [rbp - 0x48], 2	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x400c1a4	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x400c1a7	            0x4898	                                    cdqe	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x400c1a9	          0x4801c0	                            add rax, rax	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x400c1ac	        0x488d50fe	                      lea rdx, [rax - 2]	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x400c1b0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x400c1b4	          0x4801d0	                            add rax, rdx	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x400c1b7	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x400c1bb	            0x760c	                           jbe 0x400c1c9	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x400c1bd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x400c1c1	           0xfb700	                   movzx eax, word [rax]	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x400c1c4	          0x6685c0	                             test ax, ax	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x400c1c7	            0x74d6	                            je 0x400c19f	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x400c1c9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6277	decNumber.c	FUNCTION_4	ELSE_1
0x400c1cd	           0xfb700	                   movzx eax, word [rax]	      6277	decNumber.c	FUNCTION_4	ELSE_1
0x400c1d0	          0x6685c0	                             test ax, ax	      6277	decNumber.c	FUNCTION_4	ELSE_1
0x400c1d3	           0xf95c0	                                setne al	      6277	decNumber.c	FUNCTION_4	ELSE_1
0x400c1d6	           0xfb6c0	                           movzx eax, al	      6277	decNumber.c	FUNCTION_4	ELSE_1
0x400c1d9	          0x894588	             mov dword [rbp - 0x78], eax	      6277	decNumber.c	FUNCTION_4	ELSE_1
0x400c1dc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      6280	decNumber.c	FUNCTION_4
0x400c1e0	          0x4889c7	                            mov rdi, rax	      6280	decNumber.c	FUNCTION_4
0x400c1e3	      0xe800000000	                          call 0x400c1e8	      6280	decNumber.c	FUNCTION_4
0x400c1e8	          0x8b4588	             mov eax, dword [rbp - 0x78]	      6281	decNumber.c	FUNCTION_4
0x400c1eb	        0x488b75f8	                mov rsi, qword [rbp - 8]	      6282	decNumber.c	FUNCTION_4
0x400c1ef	    0x644833342528	                xor rsi, qword fs:[0x28]	      6282	decNumber.c	FUNCTION_4
0x400c1f8	            0x7405	                            je 0x400c1ff	      6282	decNumber.c	FUNCTION_4
0x400c1fa	      0xe800000000	                          call 0x400c1ff	      6282	decNumber.c	FUNCTION_4
0x400c1ff	              0xc9	                                   leave	      6282	decNumber.c	FUNCTION_4
0x400c200	              0xc3	                                     ret	      6282	decNumber.c	FUNCTION_4
decNumberFromInt32	SWITCH,0:IF,3:FOR,0:CALL,1:DO,0:ELSE,2:WHILE,0:functions,0	29
0x4000040	              0x55	                                push rbp	       345	decNumber.c	FUNCTION_68	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	       345	decNumber.c	FUNCTION_68	FUNCTION_1
0x4000044	        0x4883ec20	                           sub rsp, 0x20	       345	decNumber.c	FUNCTION_68	FUNCTION_1
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	       345	decNumber.c	FUNCTION_68	FUNCTION_1
0x400004c	          0x8975e4	             mov dword [rbp - 0x1c], esi	       345	decNumber.c	FUNCTION_68	FUNCTION_1
0x400004f	        0x837de400	               cmp dword [rbp - 0x1c], 0	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x4000053	            0x7808	                            js 0x400005d	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x4000055	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x4000058	          0x8945fc	                mov dword [rbp - 4], eax	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x400005b	            0xeb1a	                           jmp 0x4000077	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x400005d	    0x817de4000000	     cmp dword [rbp - 0x1c], 0x80000000 	       349	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	IF_2
0x4000064	            0x7509	                           jne 0x400006f	       349	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	IF_2
0x4000066	    0xc745fc000000	         mov dword [rbp - 4], 0x80000000	       349	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	IF_2
0x400006d	            0xeb08	                           jmp 0x4000077	       349	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	IF_2
0x400006f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x4000072	            0xf7d8	                                 neg eax	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x4000074	          0x8945fc	                mov dword [rbp - 4], eax	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x4000077	          0x8b55fc	                mov edx, dword [rbp - 4]	       353	decNumber.c	FUNCTION_68	FUNCTION_1	CALL_1
0x400007a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       353	decNumber.c	FUNCTION_68	FUNCTION_1	CALL_1
0x400007e	            0x89d6	                            mov esi, edx	       353	decNumber.c	FUNCTION_68	FUNCTION_1	CALL_1
0x4000080	          0x4889c7	                            mov rdi, rax	       353	decNumber.c	FUNCTION_68	FUNCTION_1	CALL_1
0x4000083	      0xe800000000	                          call 0x4000088	       353	decNumber.c	FUNCTION_68	FUNCTION_1	CALL_1
0x4000088	        0x837de400	               cmp dword [rbp - 0x1c], 0	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x400008c	            0x7908	                           jns 0x4000096	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x400008e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x4000092	        0xc6400880	                mov byte [rax + 8], 0x80	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x4000096	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       355	decNumber.c	FUNCTION_68	FUNCTION_1
0x400009a	              0xc9	                                   leave	       356	decNumber.c	FUNCTION_68	FUNCTION_1
0x400009b	              0xc3	                                     ret	       356	decNumber.c	FUNCTION_68	FUNCTION_1
decSetMaxValue	SWITCH,0:IF,1:FOR,1:CALL,0:DO,0:ELSE,1:WHILE,0:functions,0	42
0x400da9b	              0x55	                                push rbp	      7388	decNumber.c	ELSE_1	FUNCTION_17
0x400da9c	          0x4889e5	                            mov rbp, rsp	      7388	decNumber.c	ELSE_1	FUNCTION_17
0x400da9f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      7388	decNumber.c	ELSE_1	FUNCTION_17
0x400daa3	        0x488975e0	             mov qword [rbp - 0x20], rsi	      7388	decNumber.c	ELSE_1	FUNCTION_17
0x400daa7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7390	decNumber.c	ELSE_1	FUNCTION_17
0x400daab	            0x8b00	                    mov eax, dword [rax]	      7390	decNumber.c	ELSE_1	FUNCTION_17
0x400daad	          0x8945f4	              mov dword [rbp - 0xc], eax	      7390	decNumber.c	ELSE_1	FUNCTION_17
0x400dab0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7391	decNumber.c	ELSE_1	FUNCTION_17
0x400dab4	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      7391	decNumber.c	ELSE_1	FUNCTION_17
0x400dab7	            0x8910	                    mov dword [rax], edx	      7391	decNumber.c	ELSE_1	FUNCTION_17
0x400dab9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400dabd	        0x4883c00a	                            add rax, 0xa	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400dac1	        0x488945f8	                mov qword [rbp - 8], rax	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400dac5	        0x837df403	                cmp dword [rbp - 0xc], 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400dac9	            0x7e0b	                           jle 0x400dad6	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400dacb	        0x488b45f8	                mov rax, qword [rbp - 8]	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400dacf	      0x66c700e703	                   mov word [rax], 0x3e7	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400dad4	            0xeb18	                           jmp 0x400daee	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400dad6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400dad9	            0x4898	                                    cdqe	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400dadb	    0x8b0485000000	                  mov eax, dword [rax*4]	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400dae2	          0x8d50ff	                      lea edx, [rax - 1]	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400dae5	        0x488b45f8	                mov rax, qword [rbp - 8]	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400dae9	          0x668910	                      mov word [rax], dx	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400daec	            0xeb0b	                           jmp 0x400daf9	      7397	decNumber.c	FUNCTION_17	FOR_1
0x400daee	        0x836df403	                sub dword [rbp - 0xc], 3	      7399	decNumber.c	FUNCTION_17	FOR_1	ELSE_1
0x400daf2	      0x488345f802	                  add qword [rbp - 8], 2	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400daf7	            0xebcc	                           jmp 0x400dac5	      7400	decNumber.c	FUNCTION_17	FOR_1	ELSE_1
0x400daf9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7401	decNumber.c	FUNCTION_17	ELSE_1
0x400dafd	        0xc6400800	                   mov byte [rax + 8], 0	      7401	decNumber.c	FUNCTION_17	ELSE_1
0x400db01	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400db05	          0x8b5004	                mov edx, dword [rax + 4]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400db08	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400db0c	            0x8b00	                    mov eax, dword [rax]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400db0e	            0x29c2	                            sub edx, eax	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400db10	            0x89d0	                            mov eax, edx	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400db12	          0x8d5001	                      lea edx, [rax + 1]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400db15	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400db19	          0x895004	                mov dword [rax + 4], edx	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400db1c	              0x90	                                     nop	      7403	decNumber.c	FUNCTION_17	ELSE_1
0x400db1d	              0x5d	                                 pop rbp	      7403	decNumber.c	FUNCTION_17	ELSE_1
0x400db1e	              0xc3	                                     ret	      7403	decNumber.c	FUNCTION_17	ELSE_1
decNumberDivideInteger	SWITCH,0:IF,1:FOR,0:CALL,2:DO,0:ELSE,0:WHILE,0:functions,0	36
0x400161d	              0x55	                                push rbp	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x400161e	          0x4889e5	                            mov rbp, rsp	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4001621	        0x4883ec30	                           sub rsp, 0x30	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4001625	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4001629	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x400162d	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4001631	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4001635	    0x64488b042528	                mov rax, qword fs:[0x28]	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x400163e	        0x488945f8	                mov qword [rbp - 8], rax	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4001642	            0x31c0	                            xor eax, eax	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4001644	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1016	decNumber.c	FUNCTION_68	FUNCTION_16
0x400164b	        0x488d7df4	                    lea rdi, [rbp - 0xc]	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x400164f	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x4001653	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x4001657	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x400165b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x400165f	          0x4989f9	                             mov r9, rdi	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x4001662	    0x41b820000000	                           mov r8d, 0x20	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x4001668	          0x4889c7	                            mov rdi, rax	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x400166b	      0xe898630000	                    call sym.decDivideOp	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x4001670	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x4001673	            0x85c0	                           test eax, eax	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x4001675	            0x7415	                            je 0x400168c	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x4001677	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x400167a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x400167e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x4001682	            0x89ce	                            mov esi, ecx	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x4001684	          0x4889c7	                            mov rdi, rax	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x4001687	      0xe88ccd0000	                      call sym.decStatus	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x400168c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1019	decNumber.c	FUNCTION_68	FUNCTION_16
0x4001690	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x4001694	    0x644833342528	                xor rsi, qword fs:[0x28]	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x400169d	            0x7405	                            je 0x40016a4	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x400169f	      0xe800000000	                          call 0x40016a4	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x40016a4	              0xc9	                                   leave	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x40016a5	              0xc3	                                     ret	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
decCompareOp	SWITCH,0:IF,39:FOR,0:CALL,25:DO,1:ELSE,20:WHILE,0:functions,0	351
0x400b759	              0x55	                                push rbp	      6000	decNumber.c	FUNCTION_2
0x400b75a	          0x4889e5	                            mov rbp, rsp	      6000	decNumber.c	FUNCTION_2
0x400b75d	        0x4883ec50	                           sub rsp, 0x50	      6000	decNumber.c	FUNCTION_2
0x400b761	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6000	decNumber.c	FUNCTION_2
0x400b765	        0x488975d0	             mov qword [rbp - 0x30], rsi	      6000	decNumber.c	FUNCTION_2
0x400b769	        0x488955c8	             mov qword [rbp - 0x38], rdx	      6000	decNumber.c	FUNCTION_2
0x400b76d	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      6000	decNumber.c	FUNCTION_2
0x400b771	          0x4489c0	                            mov eax, r8d	      6000	decNumber.c	FUNCTION_2
0x400b774	        0x4c894db0	              mov qword [rbp - 0x50], r9	      6000	decNumber.c	FUNCTION_2
0x400b778	          0x8845bc	               mov byte [rbp - 0x44], al	      6000	decNumber.c	FUNCTION_2
0x400b77b	    0x64488b042528	                mov rax, qword fs:[0x28]	      6000	decNumber.c	FUNCTION_2
0x400b784	        0x488945f8	                mov qword [rbp - 8], rax	      6000	decNumber.c	FUNCTION_2
0x400b788	            0x31c0	                            xor eax, eax	      6000	decNumber.c	FUNCTION_2
0x400b78a	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      6005	decNumber.c	FUNCTION_2
0x400b791	        0x807dbc04	                cmp byte [rbp - 0x44], 4	      6031	decNumber.c	FUNCTION_2	DO_1	IF_7
0x400b795	            0x7558	                           jne 0x400b7ef	      6031	decNumber.c	FUNCTION_2	DO_1	IF_7
0x400b797	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x400b79b	         0xfb64008	               movzx eax, byte [rax + 8]	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x400b79f	          0xc0e807	                               shr al, 7	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x400b7a2	            0x89c2	                            mov edx, eax	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x400b7a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x400b7a8	         0xfb64008	               movzx eax, byte [rax + 8]	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x400b7ac	            0xf7d0	                                 not eax	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x400b7ae	          0xc0e807	                               shr al, 7	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x400b7b1	            0x21d0	                            and eax, edx	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x400b7b3	            0x84c0	                             test al, al	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x400b7b5	            0x740c	                            je 0x400b7c3	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x400b7b7	    0xc745ecffffff	     mov dword [rbp - 0x14], 0xffffffff 	      6033	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8
0x400b7be	      0xe98e020000	                           jmp 0x400ba51	      6034	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8
0x400b7c3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x400b7c7	         0xfb64008	               movzx eax, byte [rax + 8]	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x400b7cb	            0xf7d0	                                 not eax	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x400b7cd	          0xc0e807	                               shr al, 7	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x400b7d0	            0x89c2	                            mov edx, eax	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x400b7d2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x400b7d6	         0xfb64008	               movzx eax, byte [rax + 8]	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x400b7da	          0xc0e807	                               shr al, 7	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x400b7dd	            0x21d0	                            and eax, edx	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x400b7df	            0x84c0	                             test al, al	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x400b7e1	            0x740c	                            je 0x400b7ef	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x400b7e3	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      6037	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9
0x400b7ea	      0xe962020000	                           jmp 0x400ba51	      6038	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9
0x400b7ef	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6044	decNumber.c	FUNCTION_2	DO_1
0x400b7f3	         0xfb65008	               movzx edx, byte [rax + 8]	      6044	decNumber.c	FUNCTION_2	DO_1
0x400b7f7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6044	decNumber.c	FUNCTION_2	DO_1
0x400b7fb	         0xfb64008	               movzx eax, byte [rax + 8]	      6044	decNumber.c	FUNCTION_2	DO_1
0x400b7ff	             0x9d0	                             or eax, edx	      6044	decNumber.c	FUNCTION_2	DO_1
0x400b801	          0x83e030	                           and eax, 0x30	      6044	decNumber.c	FUNCTION_2	DO_1
0x400b804	          0x8845e5	               mov byte [rbp - 0x1b], al	      6044	decNumber.c	FUNCTION_2	DO_1
0x400b807	        0x807de500	                cmp byte [rbp - 0x1b], 0	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x400b80b	     0xf84f9010000	                            je 0x400ba0a	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x400b811	        0x807dbc01	                cmp byte [rbp - 0x44], 1	      6046	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_11
0x400b815	     0xf84ca010000	                            je 0x400b9e5	      6046	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_11
0x400b81b	        0x807dbc06	                cmp byte [rbp - 0x44], 6	      6047	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x400b81f	            0x7518	                           jne 0x400b839	      6047	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x400b821	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6048	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x400b825	            0x8b00	                    mov eax, dword [rax]	      6048	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x400b827	       0xd80000040	                      or eax, 0x40000080	      6048	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x400b82c	            0x89c2	                            mov edx, eax	      6048	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x400b82e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6048	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x400b832	            0x8910	                    mov dword [rax], edx	      6048	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x400b834	      0xe9ac010000	                           jmp 0x400b9e5	      6048	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x400b839	        0x807dbc04	                cmp byte [rbp - 0x44], 4	      6049	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13
0x400b83d	     0xf854b010000	                           jne 0x400b98e	      6049	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13
0x400b843	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x400b847	         0xfb64008	               movzx eax, byte [rax + 8]	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x400b84b	           0xfb6c0	                           movzx eax, al	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x400b84e	          0x83e030	                           and eax, 0x30	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x400b851	            0x85c0	                           test eax, eax	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x400b853	            0x750c	                           jne 0x400b861	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x400b855	    0xc745ecffffff	     mov dword [rbp - 0x14], 0xffffffff 	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x400b85c	      0xe915010000	                           jmp 0x400b976	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x400b861	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x400b865	         0xfb64008	               movzx eax, byte [rax + 8]	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x400b869	           0xfb6c0	                           movzx eax, al	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x400b86c	          0x83e030	                           and eax, 0x30	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x400b86f	            0x85c0	                           test eax, eax	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x400b871	            0x750c	                           jne 0x400b87f	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x400b873	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x400b87a	      0xe9f7000000	                           jmp 0x400b976	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x400b87f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x400b883	         0xfb64008	               movzx eax, byte [rax + 8]	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x400b887	           0xfb6c0	                           movzx eax, al	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x400b88a	          0x83e010	                           and eax, 0x10	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x400b88d	            0x85c0	                           test eax, eax	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x400b88f	            0x741e	                            je 0x400b8af	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x400b891	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x400b895	         0xfb64008	               movzx eax, byte [rax + 8]	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x400b899	           0xfb6c0	                           movzx eax, al	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x400b89c	          0x83e020	                           and eax, 0x20	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x400b89f	            0x85c0	                           test eax, eax	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x400b8a1	            0x740c	                            je 0x400b8af	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x400b8a3	    0xc745ecffffff	     mov dword [rbp - 0x14], 0xffffffff 	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x400b8aa	      0xe9c7000000	                           jmp 0x400b976	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x400b8af	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x400b8b3	         0xfb64008	               movzx eax, byte [rax + 8]	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x400b8b7	           0xfb6c0	                           movzx eax, al	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x400b8ba	          0x83e020	                           and eax, 0x20	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x400b8bd	            0x85c0	                           test eax, eax	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x400b8bf	            0x741e	                            je 0x400b8df	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x400b8c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x400b8c5	         0xfb64008	               movzx eax, byte [rax + 8]	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x400b8c9	           0xfb6c0	                           movzx eax, al	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x400b8cc	          0x83e010	                           and eax, 0x10	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x400b8cf	            0x85c0	                           test eax, eax	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x400b8d1	            0x740c	                            je 0x400b8df	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x400b8d3	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x400b8da	      0xe997000000	                           jmp 0x400b976	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x400b8df	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6060	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_16
0x400b8e3	            0x8b00	                    mov eax, dword [rax]	      6060	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_16
0x400b8e5	          0x83f831	                           cmp eax, 0x31	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b8e8	            0x7f14	                            jg 0x400b8fe	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b8ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6060	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_16
0x400b8ee	            0x8b00	                    mov eax, dword [rax]	      6060	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_16
0x400b8f0	            0x4898	                                    cdqe	      6060	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_16
0x400b8f2	     0xfb680000000	                   movzx eax, byte [rax]	      6060	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_16
0x400b8f9	           0xfb6c8	                           movzx ecx, al	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b8fc	            0xeb1b	                           jmp 0x400b919	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b8fe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6060	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_16
0x400b902	            0x8b00	                    mov eax, dword [rax]	      6060	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_16
0x400b904	          0x8d4802	                      lea ecx, [rax + 2]	      6060	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_16
0x400b907	      0xba56555555	                     mov edx, 0x55555556	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b90c	            0x89c8	                            mov eax, ecx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b90e	            0xf7ea	                                imul edx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b910	            0x89c8	                            mov eax, ecx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b912	          0xc1f81f	                           sar eax, 0x1f	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b915	            0x89d1	                            mov ecx, edx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b917	            0x29c1	                            sub ecx, eax	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b919	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6060	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_16
0x400b91d	        0x4c8d480a	                     lea r9, [rax + 0xa]	      6060	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_16
0x400b921	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b925	            0x8b00	                    mov eax, dword [rax]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b927	          0x83f831	                           cmp eax, 0x31	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b92a	            0x7f14	                            jg 0x400b940	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b92c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b930	            0x8b00	                    mov eax, dword [rax]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b932	            0x4898	                                    cdqe	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b934	     0xfb680000000	                   movzx eax, byte [rax]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b93b	           0xfb6c0	                           movzx eax, al	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b93e	            0xeb1b	                           jmp 0x400b95b	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b940	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b944	            0x8b00	                    mov eax, dword [rax]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b946	          0x8d7002	                      lea esi, [rax + 2]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b949	      0xba56555555	                     mov edx, 0x55555556	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b94e	            0x89f0	                            mov eax, esi	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b950	            0xf7ea	                                imul edx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b952	            0x89f0	                            mov eax, esi	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b954	          0xc1f81f	                           sar eax, 0x1f	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b957	            0x29c2	                            sub edx, eax	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b959	            0x89d0	                            mov eax, edx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b95b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b95f	        0x488d7a0a	                    lea rdi, [rdx + 0xa]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b963	    0x41b800000000	                              mov r8d, 0	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b969	          0x4c89ca	                             mov rdx, r9	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b96c	            0x89c6	                            mov esi, eax	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b96e	      0xe82a050000	                 call sym.decUnitCompare	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b973	          0x8945ec	             mov dword [rbp - 0x14], eax	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400b976	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x400b97a	         0xfb64008	               movzx eax, byte [rax + 8]	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x400b97e	            0x84c0	                             test al, al	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x400b980	     0xf89ca000000	                           jns 0x400ba50	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x400b986	          0xf75dec	                  neg dword [rbp - 0x14]	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x400b989	      0xe9c2000000	                           jmp 0x400ba50	      6064	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13
0x400b98e	         0xfb645e5	            movzx eax, byte [rbp - 0x1b]	      6067	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_19
0x400b992	          0x83e010	                           and eax, 0x10	      6067	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_19
0x400b995	            0x85c0	                           test eax, eax	      6067	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_19
0x400b997	            0x754c	                           jne 0x400b9e5	      6067	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_19
0x400b999	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x400b99d	         0xfb64008	               movzx eax, byte [rax + 8]	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x400b9a1	           0xfb6c0	                           movzx eax, al	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x400b9a4	          0x83e030	                           and eax, 0x30	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x400b9a7	            0x85c0	                           test eax, eax	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x400b9a9	            0x7412	                            je 0x400b9bd	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x400b9ab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x400b9af	         0xfb64008	               movzx eax, byte [rax + 8]	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x400b9b3	           0xfb6c0	                           movzx eax, al	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x400b9b6	          0x83e030	                           and eax, 0x30	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x400b9b9	            0x85c0	                           test eax, eax	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x400b9bb	            0x7528	                           jne 0x400b9e5	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x400b9bd	        0xc645bc02	                mov byte [rbp - 0x44], 2	      6072	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20
0x400b9c1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6073	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	IF_21
0x400b9c5	         0xfb64008	               movzx eax, byte [rax + 8]	      6073	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	IF_21
0x400b9c9	           0xfb6c0	                           movzx eax, al	      6073	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	IF_21
0x400b9cc	          0x83e020	                           and eax, 0x20	      6073	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	IF_21
0x400b9cf	            0x85c0	                           test eax, eax	      6073	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	IF_21
0x400b9d1	            0x7409	                            je 0x400b9dc	      6073	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	IF_21
0x400b9d3	    0xc745ecffffff	     mov dword [rbp - 0x14], 0xffffffff 	      6073	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	IF_21
0x400b9da	            0xeb75	                           jmp 0x400ba51	      6075	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20
0x400b9dc	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x400b9e3	            0xeb6c	                           jmp 0x400ba51	      6075	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20
0x400b9e5	        0xc645bc05	                mov byte [rbp - 0x44], 5	      6078	decNumber.c	FUNCTION_2	DO_1	IF_10
0x400b9e9	        0x488b7db0	             mov rdi, qword [rbp - 0x50]	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x400b9ed	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x400b9f1	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x400b9f5	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x400b9f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x400b9fd	          0x4989f8	                             mov r8, rdi	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x400ba00	          0x4889c7	                            mov rdi, rax	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x400ba03	      0xe80a280000	                        call sym.decNaNs	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x400ba08	            0xeb47	                           jmp 0x400ba51	      6080	decNumber.c	FUNCTION_2	DO_1	IF_10
0x400ba0a	        0x807dbc07	                cmp byte [rbp - 0x44], 7	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x400ba0e	            0x7406	                            je 0x400ba16	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x400ba10	        0x807dbc08	                cmp byte [rbp - 0x44], 8	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x400ba14	            0x751d	                           jne 0x400ba33	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x400ba16	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x400ba1a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x400ba1e	      0xba01000000	                              mov edx, 1	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x400ba23	          0x4889ce	                            mov rsi, rcx	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x400ba26	          0x4889c7	                            mov rdi, rax	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x400ba29	      0xe8ff010000	                     call sym.decCompare	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x400ba2e	          0x8945ec	             mov dword [rbp - 0x14], eax	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x400ba31	            0xeb1e	                           jmp 0x400ba51	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x400ba33	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x400ba37	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x400ba3b	      0xba00000000	                              mov edx, 0	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x400ba40	          0x4889ce	                            mov rsi, rcx	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x400ba43	          0x4889c7	                            mov rdi, rax	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x400ba46	      0xe8e2010000	                     call sym.decCompare	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x400ba4b	          0x8945ec	             mov dword [rbp - 0x14], eax	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x400ba4e	            0xeb01	                           jmp 0x400ba51	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x400ba50	              0x90	                                     nop	      6064	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13
0x400ba51	    0x817dec000000	     cmp dword [rbp - 0x14], 0x80000000 	      6087	decNumber.c	FUNCTION_2	IF_23
0x400ba58	            0x7516	                           jne 0x400ba70	      6087	decNumber.c	FUNCTION_2	IF_23
0x400ba5a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6087	decNumber.c	FUNCTION_2	IF_23
0x400ba5e	            0x8b00	                    mov eax, dword [rax]	      6087	decNumber.c	FUNCTION_2	IF_23
0x400ba60	          0x83c810	                            or eax, 0x10	      6087	decNumber.c	FUNCTION_2	IF_23
0x400ba63	            0x89c2	                            mov edx, eax	      6087	decNumber.c	FUNCTION_2	IF_23
0x400ba65	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6087	decNumber.c	FUNCTION_2	IF_23
0x400ba69	            0x8910	                    mov dword [rax], edx	      6087	decNumber.c	FUNCTION_2	IF_23
0x400ba6b	      0xe9a3010000	                           jmp 0x400bc13	      6087	decNumber.c	FUNCTION_2	IF_23
0x400ba70	        0x807dbc01	                cmp byte [rbp - 0x44], 1	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x400ba74	            0x7410	                            je 0x400ba86	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x400ba76	        0x807dbc06	                cmp byte [rbp - 0x44], 6	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x400ba7a	            0x740a	                            je 0x400ba86	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x400ba7c	        0x807dbc04	                cmp byte [rbp - 0x44], 4	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x400ba80	     0xf8586000000	                           jne 0x400bb0c	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x400ba86	        0x807dbc04	                cmp byte [rbp - 0x44], 4	      6090	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25
0x400ba8a	            0x7549	                           jne 0x400bad5	      6090	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25
0x400ba8c	        0x837dec00	               cmp dword [rbp - 0x14], 0	      6090	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25
0x400ba90	            0x7543	                           jne 0x400bad5	      6090	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25
0x400ba92	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6093	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26
0x400ba96	          0x8b5004	                mov edx, dword [rax + 4]	      6093	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26
0x400ba99	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6093	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26
0x400ba9d	          0x8b4004	                mov eax, dword [rax + 4]	      6093	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26
0x400baa0	            0x39c2	                            cmp edx, eax	      6093	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26
0x400baa2	            0x7431	                            je 0x400bad5	      6093	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26
0x400baa4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6094	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	IF_27
0x400baa8	          0x8b5004	                mov edx, dword [rax + 4]	      6094	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	IF_27
0x400baab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6094	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	IF_27
0x400baaf	          0x8b4004	                mov eax, dword [rax + 4]	      6094	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	IF_27
0x400bab2	            0x39c2	                            cmp edx, eax	      6094	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	IF_27
0x400bab4	            0x7d09	                           jge 0x400babf	      6094	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	IF_27
0x400bab6	    0xc745ecffffff	     mov dword [rbp - 0x14], 0xffffffff 	      6094	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	IF_27
0x400babd	            0xeb07	                           jmp 0x400bac6	      6094	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	IF_27
0x400babf	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      6095	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	ELSE_12
0x400bac6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6096	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	CALL_23
0x400baca	         0xfb64008	               movzx eax, byte [rax + 8]	      6096	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	CALL_23
0x400bace	            0x84c0	                             test al, al	      6096	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	CALL_23
0x400bad0	            0x7903	                           jns 0x400bad5	      6096	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	CALL_23
0x400bad2	          0xf75dec	                  neg dword [rbp - 0x14]	      6096	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	CALL_23
0x400bad5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6099	decNumber.c	FUNCTION_2	ELSE_11	IF_24	CALL_24
0x400bad9	          0x4889c7	                            mov rdi, rax	      6099	decNumber.c	FUNCTION_2	ELSE_11	IF_24	CALL_24
0x400badc	      0xe800000000	                          call 0x400bae1	      6099	decNumber.c	FUNCTION_2	ELSE_11	IF_24	CALL_24
0x400bae1	        0x837dec00	               cmp dword [rbp - 0x14], 0	      6100	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x400bae5	     0xf8427010000	                            je 0x400bc12	      6100	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x400baeb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6101	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x400baef	    0x66c7400a0100	                 mov word [rax + 0xa], 1	      6101	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x400baf5	        0x837dec00	               cmp dword [rbp - 0x14], 0	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x400baf9	     0xf8913010000	                           jns 0x400bc12	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x400baff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x400bb03	        0xc6400880	                mov byte [rax + 8], 0x80	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x400bb07	      0xe906010000	                           jmp 0x400bc12	      6100	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x400bb0c	        0x807dbc05	                cmp byte [rbp - 0x44], 5	      6105	decNumber.c	FUNCTION_2	ELSE_11	IF_31
0x400bb10	     0xf84fd000000	                            je 0x400bc13	      6105	decNumber.c	FUNCTION_2	ELSE_11	IF_31
0x400bb16	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      6107	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400bb1d	        0x837dec00	               cmp dword [rbp - 0x14], 0	      6110	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400bb21	     0xf858f000000	                           jne 0x400bbb6	      6110	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400bb27	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400bb2b	         0xfb64008	               movzx eax, byte [rax + 8]	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400bb2f	          0x83e080	                     and eax, 0xffffff80	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400bb32	          0x8845e6	               mov byte [rbp - 0x1a], al	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400bb35	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6113	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400bb39	         0xfb64008	               movzx eax, byte [rax + 8]	      6113	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400bb3d	          0x83e080	                     and eax, 0xffffff80	      6113	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400bb40	          0x8845e7	               mov byte [rbp - 0x19], al	      6113	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400bb43	         0xfb645e6	            movzx eax, byte [rbp - 0x1a]	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x400bb47	          0x3a45e7	               cmp al, byte [rbp - 0x19]	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x400bb4a	            0x7418	                            je 0x400bb64	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x400bb4c	        0x807de600	                cmp byte [rbp - 0x1a], 0	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x400bb50	            0x7409	                            je 0x400bb5b	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x400bb52	    0xc745ecffffff	     mov dword [rbp - 0x14], 0xffffffff 	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x400bb59	            0xeb5b	                           jmp 0x400bbb6	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x400bb5b	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      6123	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	ELSE_16
0x400bb62	            0xeb52	                           jmp 0x400bbb6	      6123	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	ELSE_16
0x400bb64	        0x807de600	                cmp byte [rbp - 0x1a], 0	      6125	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36
0x400bb68	            0x742a	                            je 0x400bb94	      6125	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36
0x400bb6a	        0x807de700	                cmp byte [rbp - 0x19], 0	      6125	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36
0x400bb6e	            0x7424	                            je 0x400bb94	      6125	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36
0x400bb70	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x400bb74	          0x8b5004	                mov edx, dword [rax + 4]	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x400bb77	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x400bb7b	          0x8b4004	                mov eax, dword [rax + 4]	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x400bb7e	            0x39c2	                            cmp edx, eax	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x400bb80	            0x7d09	                           jge 0x400bb8b	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x400bb82	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x400bb89	            0xeb2b	                           jmp 0x400bbb6	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x400bb8b	    0xc745ecffffff	     mov dword [rbp - 0x14], 0xffffffff 	      6127	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	ELSE_18
0x400bb92	            0xeb22	                           jmp 0x400bbb6	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x400bb94	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x400bb98	          0x8b5004	                mov edx, dword [rax + 4]	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x400bb9b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x400bb9f	          0x8b4004	                mov eax, dword [rax + 4]	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x400bba2	            0x39c2	                            cmp edx, eax	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x400bba4	            0x7e09	                           jle 0x400bbaf	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x400bba6	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x400bbad	            0xeb07	                           jmp 0x400bbb6	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x400bbaf	    0xc745ecffffff	     mov dword [rbp - 0x14], 0xffffffff 	      6132	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	ELSE_20
0x400bbb6	        0x807dbc03	                cmp byte [rbp - 0x44], 3	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400bbba	            0x7406	                            je 0x400bbc2	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400bbbc	        0x807dbc08	                cmp byte [rbp - 0x44], 8	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400bbc0	            0x7503	                           jne 0x400bbc5	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400bbc2	          0xf75dec	                  neg dword [rbp - 0x14]	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400bbc5	        0x837dec00	               cmp dword [rbp - 0x14], 0	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400bbc9	            0x7e06	                           jle 0x400bbd1	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400bbcb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400bbcf	            0xeb04	                           jmp 0x400bbd5	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400bbd1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400bbd5	        0x488945f0	             mov qword [rbp - 0x10], rax	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400bbd9	        0x488b7db0	             mov rdi, qword [rbp - 0x50]	      6140	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	CALL_25
0x400bbdd	        0x488d4de8	                   lea rcx, [rbp - 0x18]	      6140	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	CALL_25
0x400bbe1	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      6140	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	CALL_25
0x400bbe5	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      6140	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	CALL_25
0x400bbe9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6140	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	CALL_25
0x400bbed	          0x4989f8	                             mov r8, rdi	      6140	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	CALL_25
0x400bbf0	          0x4889c7	                            mov rdi, rax	      6140	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	CALL_25
0x400bbf3	      0xe8cf110000	                     call sym.decCopyFit	      6140	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	CALL_25
0x400bbf8	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400bbfc	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400bc00	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400bc04	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400bc08	          0x4889c7	                            mov rdi, rax	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400bc0b	      0xe8ed1a0000	                    call sym.decFinalize	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400bc10	            0xeb01	                           jmp 0x400bc13	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400bc12	              0x90	                                     nop	      6100	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x400bc13	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6148	decNumber.c	FUNCTION_2
0x400bc17	        0x488b7df8	                mov rdi, qword [rbp - 8]	      6149	decNumber.c	FUNCTION_2
0x400bc1b	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      6149	decNumber.c	FUNCTION_2
0x400bc24	            0x7405	                            je 0x400bc2b	      6149	decNumber.c	FUNCTION_2
0x400bc26	      0xe800000000	                          call 0x400bc2b	      6149	decNumber.c	FUNCTION_2
0x400bc2b	              0xc9	                                   leave	      6149	decNumber.c	FUNCTION_2
0x400bc2c	              0xc3	                                     ret	      6149	decNumber.c	FUNCTION_2
decNumberLn	SWITCH,0:IF,7:FOR,0:CALL,7:DO,1:ELSE,0:WHILE,0:functions,0	40
0x4001cef	              0x55	                                push rbp	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4001cf0	          0x4889e5	                            mov rbp, rsp	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4001cf3	        0x4883ec30	                           sub rsp, 0x30	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4001cf7	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4001cfb	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4001cff	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4001d03	    0x64488b042528	                mov rax, qword fs:[0x28]	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4001d0c	        0x488945f8	                mov qword [rbp - 8], rax	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4001d10	            0x31c0	                            xor eax, eax	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4001d12	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1269	decNumber.c	FUNCTION_68	FUNCTION_20
0x4001d19	        0x488d55f4	                    lea rdx, [rbp - 0xc]	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x4001d1d	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x4001d21	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x4001d25	          0x4889ce	                            mov rsi, rcx	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x4001d28	          0x4889c7	                            mov rdi, rax	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x4001d2b	      0xe80ec00000	                   call sym.decCheckMath	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x4001d30	            0x85c0	                           test eax, eax	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x4001d32	            0x7518	                           jne 0x4001d4c	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x4001d34	        0x488d4df4	                    lea rcx, [rbp - 0xc]	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x4001d38	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x4001d3c	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x4001d40	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x4001d44	          0x4889c7	                            mov rdi, rax	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x4001d47	      0xe8958b0000	                        call sym.decLnOp	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x4001d4c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4001d4f	            0x85c0	                           test eax, eax	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4001d51	            0x7415	                            je 0x4001d68	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4001d53	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4001d56	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4001d5a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4001d5e	            0x89ce	                            mov esi, ecx	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4001d60	          0x4889c7	                            mov rdi, rax	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4001d63	      0xe8b0c60000	                      call sym.decStatus	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4001d68	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1306	decNumber.c	FUNCTION_68	FUNCTION_20
0x4001d6c	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4001d70	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4001d79	            0x7405	                            je 0x4001d80	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4001d7b	      0xe800000000	                          call 0x4001d80	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4001d80	              0xc9	                                   leave	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4001d81	              0xc3	                                     ret	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
decNumberQuantize	SWITCH,0:IF,1:FOR,0:CALL,2:DO,0:ELSE,0:WHILE,0:functions,0	36
0x4003ad1	              0x55	                                push rbp	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003ad2	          0x4889e5	                            mov rbp, rsp	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003ad5	        0x4883ec30	                           sub rsp, 0x30	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003ad9	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003add	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003ae1	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003ae5	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003ae9	    0x64488b042528	                mov rax, qword fs:[0x28]	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003af2	        0x488945f8	                mov qword [rbp - 8], rax	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003af6	            0x31c0	                            xor eax, eax	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003af8	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      2289	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003aff	        0x488d7df4	                    lea rdi, [rbp - 0xc]	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x4003b03	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x4003b07	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x4003b0b	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x4003b0f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x4003b13	          0x4989f9	                             mov r9, rdi	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x4003b16	    0x41b801000000	                              mov r8d, 1	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x4003b1c	          0x4889c7	                            mov rdi, rax	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x4003b1f	      0xe896780000	                  call sym.decQuantizeOp	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x4003b24	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4003b27	            0x85c0	                           test eax, eax	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4003b29	            0x7415	                            je 0x4003b40	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4003b2b	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4003b2e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4003b32	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4003b36	            0x89ce	                            mov esi, ecx	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4003b38	          0x4889c7	                            mov rdi, rax	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4003b3b	      0xe8d8a80000	                      call sym.decStatus	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4003b40	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2292	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003b44	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003b48	    0x644833342528	                xor rsi, qword fs:[0x28]	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003b51	            0x7405	                            je 0x4003b58	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003b53	      0xe800000000	                          call 0x4003b58	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003b58	              0xc9	                                   leave	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003b59	              0xc3	                                     ret	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
decNumberMaxMag	SWITCH,0:IF,1:FOR,0:CALL,3:DO,0:ELSE,0:WHILE,0:functions,0	36
0x4002482	              0x55	                                push rbp	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4002483	          0x4889e5	                            mov rbp, rsp	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4002486	        0x4883ec30	                           sub rsp, 0x30	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x400248a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x400248e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4002492	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4002496	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x400249a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x40024a3	        0x488945f8	                mov qword [rbp - 8], rax	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x40024a7	            0x31c0	                            xor eax, eax	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x40024a9	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1562	decNumber.c	FUNCTION_68	FUNCTION_24
0x40024b0	        0x488d7df4	                    lea rdi, [rbp - 0xc]	      1563	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_1
0x40024b4	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1563	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_1
0x40024b8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1563	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_1
0x40024bc	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1563	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_1
0x40024c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1563	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_1
0x40024c4	          0x4989f9	                             mov r9, rdi	      1563	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_1
0x40024c7	    0x41b807000000	                              mov r8d, 7	      1563	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_1
0x40024cd	          0x4889c7	                            mov rdi, rax	      1563	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_1
0x40024d0	      0xe884920000	                   call sym.decCompareOp	      1563	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_1
0x40024d5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x40024d8	            0x85c0	                           test eax, eax	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x40024da	            0x7415	                            je 0x40024f1	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x40024dc	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x40024df	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x40024e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x40024e7	            0x89ce	                            mov esi, ecx	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x40024e9	          0x4889c7	                            mov rdi, rax	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x40024ec	      0xe827bf0000	                      call sym.decStatus	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x40024f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1568	decNumber.c	FUNCTION_68	FUNCTION_24
0x40024f5	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x40024f9	    0x644833342528	                xor rsi, qword fs:[0x28]	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4002502	            0x7405	                            je 0x4002509	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4002504	      0xe800000000	                          call 0x4002509	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4002509	              0xc9	                                   leave	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x400250a	              0xc3	                                     ret	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
decAddOp	SWITCH,0:IF,49:FOR,0:CALL,44:DO,1:ELSE,8:WHILE,0:functions,0	819
0x4006c39	              0x55	                                push rbp	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4006c3a	          0x4889e5	                            mov rbp, rsp	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4006c3d	    0x4881ecd00000	                           sub rsp, 0xd0	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4006c44	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4006c4b	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4006c52	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4006c59	    0x48898d40ffff	             mov qword [rbp - 0xc0], rcx	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4006c60	          0x4489c0	                            mov eax, r8d	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4006c63	    0x4c898d30ffff	              mov qword [rbp - 0xd0], r9	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4006c6a	    0x88853cffffff	               mov byte [rbp - 0xc4], al	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4006c70	    0x64488b042528	                mov rax, qword fs:[0x28]	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4006c79	        0x488945f8	                mov qword [rbp - 8], rax	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4006c7d	            0x31c0	                            xor eax, eax	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4006c7f	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4006c87	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3815	decNumber.c	FUNCTION_68	FUNCTION_64
0x4006c8e	            0x8b00	                    mov eax, dword [rax]	      3815	decNumber.c	FUNCTION_68	FUNCTION_64
0x4006c90	          0x894580	             mov dword [rbp - 0x80], eax	      3815	decNumber.c	FUNCTION_68	FUNCTION_64
0x4006c93	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4006c9a	         0xfb65008	               movzx edx, byte [rax + 8]	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4006c9e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4006ca5	         0xfb64008	               movzx eax, byte [rax + 8]	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4006ca9	            0x31d0	                            xor eax, edx	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4006cab	    0x32853cffffff	               xor al, byte [rbp - 0xc4]	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4006cb1	          0x83e080	                     and eax, 0xffffff80	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4006cb4	    0x888563ffffff	               mov byte [rbp - 0x9d], al	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4006cba	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x4006cc1	         0xfb65008	               movzx edx, byte [rax + 8]	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x4006cc5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x4006ccc	         0xfb64008	               movzx eax, byte [rax + 8]	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x4006cd0	             0x9d0	                             or eax, edx	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x4006cd2	           0xfb6c0	                           movzx eax, al	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x4006cd5	          0x83e070	                           and eax, 0x70	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x4006cd8	            0x85c0	                           test eax, eax	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x4006cda	     0xf84ff000000	                            je 0x4006ddf	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x4006ce0	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3845	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	IF_8
0x4006ce7	         0xfb65008	               movzx edx, byte [rax + 8]	      3845	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	IF_8
0x4006ceb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3845	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	IF_8
0x4006cf2	         0xfb64008	               movzx eax, byte [rax + 8]	      3845	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	IF_8
0x4006cf6	             0x9d0	                             or eax, edx	      3845	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	IF_8
0x4006cf8	           0xfb6c0	                           movzx eax, al	      3845	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	IF_8
0x4006cfb	          0x83e030	                           and eax, 0x30	      3845	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	IF_8
0x4006cfe	            0x85c0	                           test eax, eax	      3845	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	IF_8
0x4006d00	            0x7433	                            je 0x4006d35	      3845	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	IF_8
0x4006d02	    0x488bbd30ffff	             mov rdi, qword [rbp - 0xd0]	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x4006d09	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x4006d10	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x4006d17	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x4006d1e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x4006d25	          0x4989f8	                             mov r8, rdi	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x4006d28	          0x4889c7	                            mov rdi, rax	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x4006d2b	      0xe8e2740000	                        call sym.decNaNs	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x4006d30	      0xe9aa0c0000	                           jmp 0x40079df	      3861	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x4006d35	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3848	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	CALL_6
0x4006d3c	         0xfb64008	               movzx eax, byte [rax + 8]	      3848	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	CALL_6
0x4006d40	           0xfb6c0	                           movzx eax, al	      3848	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	CALL_6
0x4006d43	          0x83e040	                           and eax, 0x40	      3848	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	CALL_6
0x4006d46	            0x85c0	                           test eax, eax	      3848	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	CALL_6
0x4006d48	            0x744f	                            je 0x4006d99	      3848	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	CALL_6
0x4006d4a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x4006d51	         0xfb64008	               movzx eax, byte [rax + 8]	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x4006d55	           0xfb6c0	                           movzx eax, al	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x4006d58	          0x83e040	                           and eax, 0x40	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x4006d5b	            0x85c0	                           test eax, eax	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x4006d5d	            0x7424	                            je 0x4006d83	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x4006d5f	    0x80bd63ffffff	                cmp byte [rbp - 0x9d], 0	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x4006d66	            0x741b	                            je 0x4006d83	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x4006d68	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3851	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x4006d6f	            0x8b00	                    mov eax, dword [rax]	      3851	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x4006d71	             0xc80	                             or al, 0x80	      3851	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x4006d73	            0x89c2	                            mov edx, eax	      3851	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x4006d75	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3851	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x4006d7c	            0x8910	                    mov dword [rax], edx	      3851	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x4006d7e	      0xe95c0c0000	                           jmp 0x40079df	      3852	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x4006d83	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3854	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9
0x4006d8a	         0xfb64008	               movzx eax, byte [rax + 8]	      3854	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9
0x4006d8e	          0x83e080	                     and eax, 0xffffff80	      3854	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9
0x4006d91	    0x888561ffffff	               mov byte [rbp - 0x9f], al	      3854	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9
0x4006d97	            0xeb1a	                           jmp 0x4006db3	      3854	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9
0x4006d99	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3856	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	ELSE_2
0x4006da0	         0xfb64008	               movzx eax, byte [rax + 8]	      3856	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	ELSE_2
0x4006da4	    0x32853cffffff	               xor al, byte [rbp - 0xc4]	      3856	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	ELSE_2
0x4006daa	          0x83e080	                     and eax, 0xffffff80	      3856	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	ELSE_2
0x4006dad	    0x888561ffffff	               mov byte [rbp - 0x9f], al	      3856	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	ELSE_2
0x4006db3	    0x808d61ffffff	              or byte [rbp - 0x9f], 0x40	      3857	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1
0x4006dba	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3858	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	CALL_8
0x4006dc1	          0x4889c7	                            mov rdi, rax	      3858	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	CALL_8
0x4006dc4	      0xe800000000	                          call 0x4006dc9	      3858	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	CALL_8
0x4006dc9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3859	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1
0x4006dd0	     0xfb69561ffff	            movzx edx, byte [rbp - 0x9f]	      3859	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1
0x4006dd7	          0x885008	                  mov byte [rax + 8], dl	      3859	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1
0x4006dda	      0xe9000c0000	                           jmp 0x40079df	      3861	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x4006ddf	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4006de6	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4006dea	          0x6685c0	                             test ax, ax	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4006ded	     0xf8510020000	                           jne 0x4007003	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4006df3	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4006dfa	            0x8b00	                    mov eax, dword [rax]	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4006dfc	          0x83f801	                              cmp eax, 1	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4006dff	     0xf85fe010000	                           jne 0x4007003	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4006e05	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4006e0c	         0xfb64008	               movzx eax, byte [rax + 8]	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4006e10	           0xfb6c0	                           movzx eax, al	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4006e13	          0x83e070	                           and eax, 0x70	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4006e16	            0x85c0	                           test eax, eax	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4006e18	     0xf85e5010000	                           jne 0x4007003	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4006e1e	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3867	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006e25	          0x8b4004	                mov eax, dword [rax + 4]	      3867	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006e28	          0x894584	             mov dword [rbp - 0x7c], eax	      3867	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006e2b	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3868	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006e32	         0xfb64008	               movzx eax, byte [rax + 8]	      3868	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006e36	    0x888561ffffff	               mov byte [rbp - 0x9f], al	      3868	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006e3c	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      3869	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006e46	    0x488bbd30ffff	             mov rdi, qword [rbp - 0xd0]	      3870	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_10
0x4006e4d	    0x488d8d64ffff	                   lea rcx, [rbp - 0x9c]	      3870	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_10
0x4006e54	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      3870	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_10
0x4006e5b	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      3870	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_10
0x4006e62	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3870	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_10
0x4006e69	          0x4989f8	                             mov r8, rdi	      3870	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_10
0x4006e6c	          0x4889c7	                            mov rdi, rax	      3870	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_10
0x4006e6f	      0xe8535f0000	                     call sym.decCopyFit	      3870	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_10
0x4006e74	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3871	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006e7b	         0xfb64008	               movzx eax, byte [rax + 8]	      3871	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006e7f	    0x32853cffffff	               xor al, byte [rbp - 0xc4]	      3871	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006e85	            0x89c2	                            mov edx, eax	      3871	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006e87	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3871	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006e8e	          0x885008	                  mov byte [rax + 8], dl	      3871	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006e91	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3876	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12
0x4006e98	          0x8b4004	                mov eax, dword [rax + 4]	      3876	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12
0x4006e9b	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      3876	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12
0x4006e9e	            0x29c2	                            sub edx, eax	      3876	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12
0x4006ea0	            0x89d0	                            mov eax, edx	      3876	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12
0x4006ea2	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      3876	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12
0x4006ea8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4006eaf	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4006eb3	          0x6685c0	                             test ax, ax	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4006eb6	            0x7575	                           jne 0x4006f2d	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4006eb8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4006ebf	            0x8b00	                    mov eax, dword [rax]	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4006ec1	          0x83f801	                              cmp eax, 1	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4006ec4	            0x7567	                           jne 0x4006f2d	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4006ec6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4006ecd	         0xfb64008	               movzx eax, byte [rax + 8]	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4006ed1	           0xfb6c0	                           movzx eax, al	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4006ed4	          0x83e070	                           and eax, 0x70	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4006ed7	            0x85c0	                           test eax, eax	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4006ed9	            0x7552	                           jne 0x4006f2d	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4006edb	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x4006ee2	            0x790d	                           jns 0x4006ef1	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x4006ee4	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x4006eeb	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x4006eee	          0x895004	                mov dword [rax + 4], edx	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x4006ef1	    0x80bd63ffffff	                cmp byte [rbp - 0x9d], 0	      3880	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15
0x4006ef8	     0xf84dc000000	                            je 0x4006fda	      3880	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15
0x4006efe	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4006f05	          0x8b400c	              mov eax, dword [rax + 0xc]	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4006f08	          0x83f806	                              cmp eax, 6	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4006f0b	            0x7410	                            je 0x4006f1d	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4006f0d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4006f14	        0xc6400800	                   mov byte [rax + 8], 0	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4006f18	      0xe9bd000000	                           jmp 0x4006fda	      3880	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15
0x4006f1d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3882	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	ELSE_3
0x4006f24	        0xc6400880	                mov byte [rax + 8], 0x80	      3882	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	ELSE_3
0x4006f28	      0xe9ad000000	                           jmp 0x4006fda	      3880	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15
0x4006f2d	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      3886	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4006f34	     0xf89a0000000	                           jns 0x4006fda	      3886	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4006f3a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f41	            0x8b00	                    mov eax, dword [rax]	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f43	    0x2b8578ffffff	             sub eax, dword [rbp - 0x88]	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f49	            0x89c2	                            mov edx, eax	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f4b	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f52	            0x8b00	                    mov eax, dword [rax]	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f54	            0x39c2	                            cmp edx, eax	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f56	            0x7e33	                           jle 0x4006f8b	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f58	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3888	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f5f	            0x8b10	                    mov edx, dword [rax]	      3888	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f61	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3888	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f68	            0x8b00	                    mov eax, dword [rax]	      3888	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f6a	            0x29c2	                            sub edx, eax	      3888	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f6c	            0x89d0	                            mov eax, edx	      3888	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f6e	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      3888	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f74	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3889	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f7b	            0x8b00	                    mov eax, dword [rax]	      3889	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f7d	          0x80cc08	                                or ah, 8	      3889	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f80	            0x89c2	                            mov edx, eax	      3889	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f82	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3889	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f89	            0x8910	                    mov dword [rax], edx	      3889	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4006f8b	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4006f91	            0xf7d8	                                 neg eax	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4006f93	            0x89c2	                            mov edx, eax	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4006f95	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4006f9c	            0x8b00	                    mov eax, dword [rax]	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4006f9e	    0x488b8d58ffff	             mov rcx, qword [rbp - 0xa8]	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4006fa5	        0x4883c10a	                            add rcx, 0xa	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4006fa9	            0x89c6	                            mov esi, eax	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4006fab	          0x4889cf	                            mov rdi, rcx	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4006fae	      0xe818590000	                 call sym.decShiftToMost	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4006fb3	            0x89c2	                            mov edx, eax	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4006fb5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4006fbc	            0x8910	                    mov dword [rax], edx	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4006fbe	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3892	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4006fc5	          0x8b5004	                mov edx, dword [rax + 4]	      3892	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4006fc8	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      3892	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4006fce	             0x1c2	                            add edx, eax	      3892	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4006fd0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3892	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4006fd7	          0x895004	                mov dword [rax + 4], edx	      3892	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4006fda	    0x488b8d30ffff	             mov rcx, qword [rbp - 0xd0]	      3898	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006fe1	    0x488d9564ffff	                   lea rdx, [rbp - 0x9c]	      3898	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006fe8	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      3898	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006fef	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3898	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006ff6	          0x4889c7	                            mov rdi, rax	      3898	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006ff9	      0xe8ff660000	                    call sym.decFinalize	      3898	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4006ffe	      0xe9dc090000	                           jmp 0x40079df	      3899	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4007003	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400700a	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400700e	          0x6685c0	                             test ax, ax	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4007011	     0xf856e010000	                           jne 0x4007185	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4007017	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400701e	            0x8b00	                    mov eax, dword [rax]	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4007020	          0x83f801	                              cmp eax, 1	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4007023	     0xf855c010000	                           jne 0x4007185	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4007029	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4007030	         0xfb64008	               movzx eax, byte [rax + 8]	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4007034	           0xfb6c0	                           movzx eax, al	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4007037	          0x83e070	                           and eax, 0x70	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400703a	            0x85c0	                           test eax, eax	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400703c	     0xf8543010000	                           jne 0x4007185	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4007042	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3903	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x4007049	          0x8b4004	                mov eax, dword [rax + 4]	      3903	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x400704c	          0x894588	             mov dword [rbp - 0x78], eax	      3903	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x400704f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3904	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x4007056	         0xfb64008	               movzx eax, byte [rax + 8]	      3904	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x400705a	    0x888561ffffff	               mov byte [rbp - 0x9f], al	      3904	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x4007060	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      3905	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x400706a	    0x488bbd30ffff	             mov rdi, qword [rbp - 0xd0]	      3906	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_14
0x4007071	    0x488d8d64ffff	                   lea rcx, [rbp - 0x9c]	      3906	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_14
0x4007078	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      3906	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_14
0x400707f	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	      3906	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_14
0x4007086	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3906	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_14
0x400708d	          0x4989f8	                             mov r8, rdi	      3906	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_14
0x4007090	          0x4889c7	                            mov rdi, rax	      3906	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_14
0x4007093	      0xe82f5d0000	                     call sym.decCopyFit	      3906	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_14
0x4007098	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3912	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20
0x400709f	          0x8b4004	                mov eax, dword [rax + 4]	      3912	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20
0x40070a2	          0x8b5588	             mov edx, dword [rbp - 0x78]	      3912	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20
0x40070a5	            0x29c2	                            sub edx, eax	      3912	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20
0x40070a7	            0x89d0	                            mov eax, edx	      3912	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20
0x40070a9	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      3912	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20
0x40070af	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      3913	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x40070b6	     0xf89a0000000	                           jns 0x400715c	      3913	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x40070bc	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40070c3	            0x8b00	                    mov eax, dword [rax]	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40070c5	    0x2b857cffffff	             sub eax, dword [rbp - 0x84]	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40070cb	            0x89c2	                            mov edx, eax	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40070cd	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40070d4	            0x8b00	                    mov eax, dword [rax]	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40070d6	            0x39c2	                            cmp edx, eax	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40070d8	            0x7e33	                           jle 0x400710d	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40070da	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3915	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40070e1	            0x8b10	                    mov edx, dword [rax]	      3915	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40070e3	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3915	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40070ea	            0x8b00	                    mov eax, dword [rax]	      3915	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40070ec	            0x29c2	                            sub edx, eax	      3915	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40070ee	            0x89d0	                            mov eax, edx	      3915	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40070f0	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      3915	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40070f6	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3916	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40070fd	            0x8b00	                    mov eax, dword [rax]	      3916	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40070ff	          0x80cc08	                                or ah, 8	      3916	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4007102	            0x89c2	                            mov edx, eax	      3916	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4007104	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3916	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x400710b	            0x8910	                    mov dword [rax], edx	      3916	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x400710d	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x4007113	            0xf7d8	                                 neg eax	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x4007115	            0x89c2	                            mov edx, eax	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x4007117	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x400711e	            0x8b00	                    mov eax, dword [rax]	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x4007120	    0x488b8d58ffff	             mov rcx, qword [rbp - 0xa8]	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x4007127	        0x4883c10a	                            add rcx, 0xa	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x400712b	            0x89c6	                            mov esi, eax	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x400712d	          0x4889cf	                            mov rdi, rcx	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x4007130	      0xe896570000	                 call sym.decShiftToMost	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x4007135	            0x89c2	                            mov edx, eax	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x4007137	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x400713e	            0x8910	                    mov dword [rax], edx	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x4007140	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3919	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x4007147	          0x8b5004	                mov edx, dword [rax + 4]	      3919	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x400714a	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      3919	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x4007150	             0x1c2	                            add edx, eax	      3919	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x4007152	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3919	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x4007159	          0x895004	                mov dword [rax + 4], edx	      3919	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x400715c	    0x488b8d30ffff	             mov rcx, qword [rbp - 0xd0]	      3924	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x4007163	    0x488d9564ffff	                   lea rdx, [rbp - 0x9c]	      3924	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x400716a	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      3924	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x4007171	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3924	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x4007178	          0x4889c7	                            mov rdi, rax	      3924	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x400717b	      0xe87d650000	                    call sym.decFinalize	      3924	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x4007180	      0xe95a080000	                           jmp 0x40079df	      3925	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x4007185	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400718c	          0x8b5004	                mov edx, dword [rax + 4]	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400718f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4007196	          0x8b4004	                mov eax, dword [rax + 4]	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4007199	            0x29c2	                            sub edx, eax	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400719b	            0x89d0	                            mov eax, edx	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400719d	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40071a3	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071aa	     0xf85dd010000	                           jne 0x400738d	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071b0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3937	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071b7	            0x8b00	                    mov eax, dword [rax]	      3937	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071b9	          0x83f803	                              cmp eax, 3	      3937	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071bc	     0xf8fcb010000	                            jg 0x400738d	      3937	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071c2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3938	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071c9	          0x8b5004	                mov edx, dword [rax + 4]	      3938	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071cc	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3938	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071d3	          0x8b4008	                mov eax, dword [rax + 8]	      3938	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071d6	            0x39c2	                            cmp edx, eax	      3938	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071d8	     0xf8caf010000	                            jl 0x400738d	      3938	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071de	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3939	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071e5	          0x8b5004	                mov edx, dword [rax + 4]	      3939	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071e8	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3939	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071ef	          0x8b4804	                mov ecx, dword [rax + 4]	      3939	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071f2	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3939	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071f9	            0x8b00	                    mov eax, dword [rax]	      3939	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071fb	            0x29c1	                            sub ecx, eax	      3939	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071fd	            0x89c8	                            mov eax, ecx	      3939	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40071ff	          0x83c001	                              add eax, 1	      3939	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4007202	            0x39c2	                            cmp edx, eax	      3939	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4007204	     0xf8f83010000	                            jg 0x400738d	      3939	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400720a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4007211	            0x8b00	                    mov eax, dword [rax]	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4007213	          0x3b4580	             cmp eax, dword [rbp - 0x80]	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4007216	     0xf8f71010000	                            jg 0x400738d	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400721c	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4007223	            0x8b00	                    mov eax, dword [rax]	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4007225	          0x3b4580	             cmp eax, dword [rbp - 0x80]	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4007228	     0xf8f5f010000	                            jg 0x400738d	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400722e	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3942	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4007235	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      3942	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4007239	           0xfb7c0	                           movzx eax, ax	      3942	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400723c	          0x89458c	             mov dword [rbp - 0x74], eax	      3942	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400723f	    0x80bd63ffffff	                cmp byte [rbp - 0x9d], 0	      3943	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x4007246	     0xf8585000000	                           jne 0x40072d1	      3943	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x400724c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3944	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x4007253	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      3944	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x4007257	           0xfb7c0	                           movzx eax, ax	      3944	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x400725a	           0x1458c	             add dword [rbp - 0x74], eax	      3944	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x400725d	    0x817d8ce70300	          cmp dword [rbp - 0x74], 0x3e7 	      3945	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4007264	     0xf8f23010000	                            jg 0x400738d	      3945	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400726a	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4007271	            0x8b00	                    mov eax, dword [rax]	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4007273	          0x83f802	                              cmp eax, 2	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4007276	            0x7f1b	                            jg 0x4007293	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4007278	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3947	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400727f	            0x8b00	                    mov eax, dword [rax]	      3947	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4007281	            0x4898	                                    cdqe	      3947	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4007283	    0x8b0485000000	                  mov eax, dword [rax*4]	      3947	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400728a	          0x3b458c	             cmp eax, dword [rbp - 0x74]	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400728d	     0xf8efa000000	                           jle 0x400738d	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4007293	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3948	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25	CALL_16
0x400729a	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	      3948	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25	CALL_16
0x40072a1	            0x7419	                            je 0x40072bc	      3948	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25	CALL_16
0x40072a3	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      3948	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25	CALL_16
0x40072aa	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3948	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25	CALL_16
0x40072b1	          0x4889d6	                            mov rsi, rdx	      3948	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25	CALL_16
0x40072b4	          0x4889c7	                            mov rdi, rax	      3948	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25	CALL_16
0x40072b7	      0xe800000000	                          call 0x40072bc	      3948	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25	CALL_16
0x40072bc	          0x8b458c	             mov eax, dword [rbp - 0x74]	      3949	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x40072bf	            0x89c2	                            mov edx, eax	      3949	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x40072c1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3949	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x40072c8	        0x6689500a	                mov word [rax + 0xa], dx	      3949	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x40072cc	      0xe90e070000	                           jmp 0x40079df	      3950	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x40072d1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3955	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5
0x40072d8	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      3955	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5
0x40072dc	           0xfb7c0	                           movzx eax, ax	      3955	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5
0x40072df	          0x29458c	             sub dword [rbp - 0x74], eax	      3955	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5
0x40072e2	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40072e6	     0xf8ea1000000	                           jle 0x400738d	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40072ec	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3957	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_17
0x40072f3	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	      3957	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_17
0x40072fa	            0x7419	                            je 0x4007315	      3957	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_17
0x40072fc	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      3957	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_17
0x4007303	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3957	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_17
0x400730a	          0x4889d6	                            mov rsi, rdx	      3957	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_17
0x400730d	          0x4889c7	                            mov rdi, rax	      3957	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_17
0x4007310	      0xe800000000	                          call 0x4007315	      3957	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_17
0x4007315	          0x8b458c	             mov eax, dword [rbp - 0x74]	      3958	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4007318	            0x89c2	                            mov edx, eax	      3958	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x400731a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3958	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4007321	        0x6689500a	                mov word [rax + 0xa], dx	      3958	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4007325	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400732c	            0x8b00	                    mov eax, dword [rax]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400732e	          0x83f831	                           cmp eax, 0x31	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4007331	            0x7f17	                            jg 0x400734a	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4007333	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400733a	            0x8b00	                    mov eax, dword [rax]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400733c	            0x4898	                                    cdqe	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400733e	     0xfb680000000	                   movzx eax, byte [rax]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4007345	           0xfb6c0	                           movzx eax, al	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4007348	            0xeb1e	                           jmp 0x4007368	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400734a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4007351	            0x8b00	                    mov eax, dword [rax]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4007353	          0x8d4802	                      lea ecx, [rax + 2]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4007356	      0xba56555555	                     mov edx, 0x55555556	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400735b	            0x89c8	                            mov eax, ecx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400735d	            0xf7ea	                                imul edx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400735f	            0x89c8	                            mov eax, ecx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4007361	          0xc1f81f	                           sar eax, 0x1f	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4007364	            0x29c2	                            sub edx, eax	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4007366	            0x89d0	                            mov eax, edx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4007368	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400736f	        0x4883c20a	                            add rdx, 0xa	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4007373	            0x89c6	                            mov esi, eax	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4007375	          0x4889d7	                            mov rdi, rdx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4007378	      0xe8f7700000	                   call sym.decGetDigits	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400737d	            0x89c2	                            mov edx, eax	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400737f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4007386	            0x8910	                    mov dword [rax], edx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4007388	      0xe952060000	                           jmp 0x40079df	      3961	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x400738d	    0xc78568ffffff	               mov dword [rbp - 0x98], 0	      3974	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4007397	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3975	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400739e	         0xfb64008	               movzx eax, byte [rax + 8]	      3975	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40073a2	    0x888561ffffff	               mov byte [rbp - 0x9f], al	      3975	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40073a8	    0xc78570ffffff	               mov dword [rbp - 0x90], 1	      3976	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40073b2	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      3979	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x40073b9	     0xf84f0010000	                            je 0x40075af	      3979	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x40073bf	    0xc68562ffffff	                mov byte [rbp - 0x9e], 0	      3983	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x40073c6	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      3984	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40073cd	            0x7948	                           jns 0x4007417	      3984	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40073cf	    0xf79d74ffffff	                  neg dword [rbp - 0x8c]	      3986	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40073d5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40073dc	         0xfb64008	               movzx eax, byte [rax + 8]	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40073e0	    0x32853cffffff	               xor al, byte [rbp - 0xc4]	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40073e6	    0x888561ffffff	               mov byte [rbp - 0x9f], al	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40073ec	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3988	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40073f3	        0x488945a8	             mov qword [rbp - 0x58], rax	      3988	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40073f7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3988	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40073fe	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      3988	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4007405	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3988	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4007409	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      3988	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4007410	    0xc68562ffffff	                mov byte [rbp - 0x9e], 1	      3989	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4007417	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400741e	            0x8b10	                    mov edx, dword [rax]	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4007420	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4007426	          0x8d0c02	                    lea ecx, [rdx + rax]	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4007429	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4007430	            0x8b10	                    mov edx, dword [rax]	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4007432	          0x8b4580	             mov eax, dword [rbp - 0x80]	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4007435	             0x1d0	                            add eax, edx	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4007437	          0x83c001	                              add eax, 1	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400743a	            0x39c1	                            cmp ecx, eax	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400743c	     0xf8efc000000	                           jle 0x400753e	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4007442	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3998	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4007449	            0x8b00	                    mov eax, dword [rax]	      3998	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400744b	          0x8b5580	             mov edx, dword [rbp - 0x80]	      3998	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400744e	            0x29c2	                            sub edx, eax	      3998	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4007450	            0x89d0	                            mov eax, edx	      3998	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4007452	          0x894590	             mov dword [rbp - 0x70], eax	      3998	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4007455	    0xc78564ffffff	               mov dword [rbp - 0x9c], 1	      3999	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400745f	    0x80bd63ffffff	                cmp byte [rbp - 0x9d], 0	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x4007466	            0x740e	                            je 0x4007476	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x4007468	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x400746e	            0xf7d8	                                 neg eax	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x4007470	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x4007476	    0x488bbd30ffff	             mov rdi, qword [rbp - 0xd0]	      4002	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	CALL_20
0x400747d	    0x488d8d64ffff	                   lea rcx, [rbp - 0x9c]	      4002	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	CALL_20
0x4007484	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      4002	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	CALL_20
0x400748b	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      4002	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	CALL_20
0x4007492	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4002	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	CALL_20
0x4007499	          0x4989f8	                             mov r8, rdi	      4002	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	CALL_20
0x400749c	          0x4889c7	                            mov rdi, rax	      4002	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	CALL_20
0x400749f	      0xe823590000	                     call sym.decCopyFit	      4002	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	CALL_20
0x40074a4	        0x837d9000	               cmp dword [rbp - 0x70], 0	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x40074a8	            0x7e45	                           jle 0x40074ef	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x40074aa	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x40074b1	            0x8b00	                    mov eax, dword [rax]	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x40074b3	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x40074ba	        0x488d4a0a	                    lea rcx, [rdx + 0xa]	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x40074be	          0x8b5590	             mov edx, dword [rbp - 0x70]	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x40074c1	            0x89c6	                            mov esi, eax	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x40074c3	          0x4889cf	                            mov rdi, rcx	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x40074c6	      0xe800540000	                 call sym.decShiftToMost	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x40074cb	            0x89c2	                            mov edx, eax	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x40074cd	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x40074d4	            0x8910	                    mov dword [rax], edx	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x40074d6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4006	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x40074dd	          0x8b4004	                mov eax, dword [rax + 4]	      4006	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x40074e0	          0x2b4590	             sub eax, dword [rbp - 0x70]	      4006	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x40074e3	            0x89c2	                            mov edx, eax	      4006	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x40074e5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4006	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x40074ec	          0x895004	                mov dword [rax + 4], edx	      4006	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x40074ef	    0x80bd62ffffff	                cmp byte [rbp - 0x9e], 0	      4009	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_34
0x40074f6	            0x751d	                           jne 0x4007515	      4009	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_34
0x40074f8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4009	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_34
0x40074ff	         0xfb64008	               movzx eax, byte [rax + 8]	      4009	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_34
0x4007503	    0x32853cffffff	               xor al, byte [rbp - 0xc4]	      4009	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_34
0x4007509	            0x89c2	                            mov edx, eax	      4009	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_34
0x400750b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4009	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_34
0x4007512	          0x885008	                  mov byte [rax + 8], dl	      4009	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_34
0x4007515	    0x488b8d30ffff	             mov rcx, qword [rbp - 0xd0]	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400751c	    0x488d9564ffff	                   lea rdx, [rbp - 0x9c]	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4007523	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400752a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4007531	          0x4889c7	                            mov rdi, rax	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4007534	      0xe8c4610000	                    call sym.decFinalize	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4007539	      0xe9a1040000	                           jmp 0x40079df	      4011	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400753e	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4007544	          0x83c001	                              add eax, 1	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4007547	          0x83f831	                           cmp eax, 0x31	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400754a	            0x7f1a	                            jg 0x4007566	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400754c	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4007552	          0x83c001	                              add eax, 1	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4007555	            0x4898	                                    cdqe	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4007557	     0xfb680000000	                   movzx eax, byte [rax]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400755e	           0xfb6c0	                           movzx eax, al	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4007561	          0x83e801	                              sub eax, 1	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4007564	            0xeb1e	                           jmp 0x4007584	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4007566	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400756c	          0x8d4803	                      lea ecx, [rax + 3]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400756f	      0xba56555555	                     mov edx, 0x55555556	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4007574	            0x89c8	                            mov eax, ecx	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4007576	            0xf7ea	                                imul edx	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4007578	            0x89c8	                            mov eax, ecx	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400757a	          0xc1f81f	                           sar eax, 0x1f	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400757d	            0x29c2	                            sub edx, eax	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400757f	            0x89d0	                            mov eax, edx	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4007581	          0x83e801	                              sub eax, 1	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4007584	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400758a	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x4007590	            0x89d0	                            mov eax, edx	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x4007592	             0x1c0	                            add eax, eax	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x4007594	             0x1d0	                            add eax, edx	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x4007596	            0xf7d8	                                 neg eax	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x4007598	    0x8b9574ffffff	             mov edx, dword [rbp - 0x8c]	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x400759e	             0x1d0	                            add eax, edx	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x40075a0	            0x4898	                                    cdqe	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x40075a2	    0x8b0485000000	                  mov eax, dword [rax*4]	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x40075a9	    0x898570ffffff	             mov dword [rbp - 0x90], eax	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x40075af	    0x80bd63ffffff	                cmp byte [rbp - 0x9d], 0	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x40075b6	            0x7406	                            je 0x40075be	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x40075b8	    0xf79d70ffffff	                  neg dword [rbp - 0x90]	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x40075be	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4021	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40075c5	            0x8b10	                    mov edx, dword [rax]	      4021	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40075c7	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      4021	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40075cd	             0x1d0	                            add eax, edx	      4021	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40075cf	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      4021	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40075d5	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4022	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_36
0x40075dc	            0x8b00	                    mov eax, dword [rax]	      4022	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_36
0x40075de	    0x3b856cffffff	             cmp eax, dword [rbp - 0x94]	      4022	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_36
0x40075e4	            0x7e0f	                           jle 0x40075f5	      4022	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_36
0x40075e6	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4022	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_36
0x40075ed	            0x8b00	                    mov eax, dword [rax]	      4022	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_36
0x40075ef	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      4022	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_36
0x40075f5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4026	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40075fc	        0x4883c00a	                            add rax, 0xa	      4026	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4007600	        0x48894598	             mov qword [rbp - 0x68], rax	      4026	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4007604	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400760a	          0x3b4580	             cmp eax, dword [rbp - 0x80]	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400760d	            0x7d21	                           jge 0x4007630	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400760f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4007616	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400761d	     0xf85a3000000	                           jne 0x40076c6	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4007623	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400762a	     0xf8e96000000	                           jle 0x40076c6	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4007630	    0x83bd6cffffff	           cmp dword [rbp - 0x94], 0x31 	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4007637	            0x7f17	                            jg 0x4007650	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4007639	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400763f	            0x4898	                                    cdqe	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4007641	     0xfb680000000	                   movzx eax, byte [rax]	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4007648	           0xfb6c0	                           movzx eax, al	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400764b	          0x83c001	                              add eax, 1	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400764e	            0xeb1e	                           jmp 0x400766e	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4007650	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4007656	          0x8d4802	                      lea ecx, [rax + 2]	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4007659	      0xba56555555	                     mov edx, 0x55555556	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400765e	            0x89c8	                            mov eax, ecx	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4007660	            0xf7ea	                                imul edx	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4007662	            0x89c8	                            mov eax, ecx	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4007664	          0xc1f81f	                           sar eax, 0x1f	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4007667	            0x29c2	                            sub edx, eax	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4007669	            0x89d0	                            mov eax, edx	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400766b	          0x83c001	                              add eax, 1	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400766e	          0x894594	             mov dword [rbp - 0x6c], eax	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4007671	        0x488d45b0	                   lea rax, [rbp - 0x50]	      4035	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4007675	        0x48894598	             mov qword [rbp - 0x68], rax	      4035	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4007679	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x400767c	            0x4898	                                    cdqe	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x400767e	          0x4801c0	                            add rax, rax	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4007681	        0x4883f83e	                           cmp rax, 0x3e	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4007685	            0x763f	                           jbe 0x40076c6	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4007687	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      4038	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x400768a	            0x4898	                                    cdqe	      4038	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x400768c	          0x4801c0	                            add rax, rax	      4038	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x400768f	          0x4889c7	                            mov rdi, rax	      4038	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4007692	      0xe800000000	                          call 0x4007697	      4038	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4007697	        0x488945a0	             mov qword [rbp - 0x60], rax	      4038	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x400769b	      0x48837da000	               cmp qword [rbp - 0x60], 0	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40076a0	            0x751c	                           jne 0x40076be	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40076a2	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40076a9	            0x8b00	                    mov eax, dword [rax]	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40076ab	          0x83c810	                            or eax, 0x10	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40076ae	            0x89c2	                            mov edx, eax	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40076b0	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40076b7	            0x8910	                    mov dword [rax], edx	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40076b9	      0xe921030000	                           jmp 0x40079df	      4041	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40076be	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4042	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x40076c2	        0x48894598	             mov qword [rbp - 0x68], rax	      4042	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x40076c6	     0xfb68561ffff	            movzx eax, byte [rbp - 0x9f]	      4046	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40076cd	          0x83e080	                     and eax, 0xffffff80	      4046	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40076d0	            0x89c2	                            mov edx, eax	      4046	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40076d2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4046	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40076d9	          0x885008	                  mov byte [rax + 8], dl	      4046	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40076dc	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4047	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40076e3	          0x8b5004	                mov edx, dword [rax + 4]	      4047	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40076e6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4047	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40076ed	          0x895004	                mov dword [rax + 4], edx	      4047	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40076f0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x40076f7	            0x8b00	                    mov eax, dword [rax]	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x40076f9	          0x83f831	                           cmp eax, 0x31	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40076fc	            0x7f17	                            jg 0x4007715	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40076fe	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x4007705	            0x8b00	                    mov eax, dword [rax]	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x4007707	            0x4898	                                    cdqe	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x4007709	     0xfb680000000	                   movzx eax, byte [rax]	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x4007710	           0xfb6c8	                           movzx ecx, al	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007713	            0xeb1e	                           jmp 0x4007733	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007715	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x400771c	            0x8b00	                    mov eax, dword [rax]	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x400771e	          0x8d4802	                      lea ecx, [rax + 2]	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x4007721	      0xba56555555	                     mov edx, 0x55555556	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007726	            0x89c8	                            mov eax, ecx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007728	            0xf7ea	                                imul edx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400772a	            0x89c8	                            mov eax, ecx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400772c	          0xc1f81f	                           sar eax, 0x1f	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400772f	            0x89d1	                            mov ecx, edx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007731	            0x29c1	                            sub ecx, eax	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007733	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x400773a	        0x4c8d500a	                    lea r10, [rax + 0xa]	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x400773e	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007745	            0x8b00	                    mov eax, dword [rax]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007747	          0x83f831	                           cmp eax, 0x31	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400774a	            0x7f17	                            jg 0x4007763	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400774c	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007753	            0x8b00	                    mov eax, dword [rax]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007755	            0x4898	                                    cdqe	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007757	     0xfb680000000	                   movzx eax, byte [rax]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400775e	           0xfb6c0	                           movzx eax, al	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007761	            0xeb1e	                           jmp 0x4007781	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007763	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400776a	            0x8b00	                    mov eax, dword [rax]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400776c	          0x8d7002	                      lea esi, [rax + 2]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400776f	      0xba56555555	                     mov edx, 0x55555556	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007774	            0x89f0	                            mov eax, esi	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007776	            0xf7ea	                                imul edx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007778	            0x89f0	                            mov eax, esi	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400777a	          0xc1f81f	                           sar eax, 0x1f	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400777d	            0x29c2	                            sub edx, eax	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400777f	            0x89d0	                            mov eax, edx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007781	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007788	        0x488d7a0a	                    lea rdi, [rdx + 0xa]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400778c	        0x4c8b4598	              mov r8, qword [rbp - 0x68]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007790	    0x8bb568ffffff	             mov esi, dword [rbp - 0x98]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4007796	        0x4883ec08	                              sub rsp, 8	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400779a	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40077a0	              0x52	                                push rdx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40077a1	          0x4d89c1	                              mov r9, r8	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40077a4	          0x4189f0	                            mov r8d, esi	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40077a7	          0x4c89d2	                            mov rdx, r10	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40077aa	            0x89c6	                            mov esi, eax	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40077ac	      0xe8504a0000	                  call sym.decUnitAddSub	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40077b1	        0x4883c410	                           add rsp, 0x10	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40077b5	            0x89c2	                            mov edx, eax	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40077b7	            0x89d0	                            mov eax, edx	      4059	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40077b9	             0x1c0	                            add eax, eax	      4059	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40077bb	             0x1c2	                            add edx, eax	      4059	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40077bd	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40077c4	            0x8910	                    mov dword [rax], edx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40077c6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40077cd	            0x8b00	                    mov eax, dword [rax]	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40077cf	            0x85c0	                           test eax, eax	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40077d1	            0x7930	                           jns 0x4007803	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40077d3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40077da	            0x8b00	                    mov eax, dword [rax]	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40077dc	            0xf7d8	                                 neg eax	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40077de	            0x89c2	                            mov edx, eax	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40077e0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40077e7	            0x8910	                    mov dword [rax], edx	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40077e9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4062	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40077f0	         0xfb64008	               movzx eax, byte [rax + 8]	      4062	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40077f4	          0x83f080	                     xor eax, 0xffffff80	      4062	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40077f7	            0x89c2	                            mov edx, eax	      4062	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40077f9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4062	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4007800	          0x885008	                  mov byte [rax + 8], dl	      4062	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4007803	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      4071	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400780d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4072	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41
0x4007814	        0x4883c00a	                            add rax, 0xa	      4072	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41
0x4007818	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      4072	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41
0x400781c	     0xf84a1000000	                            je 0x40078c3	      4072	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41
0x4007822	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4078	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	IF_43
0x4007829	            0x8b00	                    mov eax, dword [rax]	      4078	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	IF_43
0x400782b	          0x3b4580	             cmp eax, dword [rbp - 0x80]	      4078	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	IF_43
0x400782e	            0x7e5c	                           jle 0x400788c	      4078	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	IF_43
0x4007830	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4007837	            0x8b00	                    mov eax, dword [rax]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4007839	          0x83f831	                           cmp eax, 0x31	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400783c	            0x7f17	                            jg 0x4007855	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400783e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4007845	            0x8b00	                    mov eax, dword [rax]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4007847	            0x4898	                                    cdqe	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4007849	     0xfb680000000	                   movzx eax, byte [rax]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4007850	           0xfb6c0	                           movzx eax, al	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4007853	            0xeb1e	                           jmp 0x4007873	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4007855	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400785c	            0x8b00	                    mov eax, dword [rax]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400785e	          0x8d4802	                      lea ecx, [rax + 2]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4007861	      0xba56555555	                     mov edx, 0x55555556	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4007866	            0x89c8	                            mov eax, ecx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4007868	            0xf7ea	                                imul edx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400786a	            0x89c8	                            mov eax, ecx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400786c	          0xc1f81f	                           sar eax, 0x1f	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400786f	            0x29c2	                            sub edx, eax	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4007871	            0x89d0	                            mov eax, edx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4007873	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4007877	            0x89c6	                            mov esi, eax	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4007879	          0x4889d7	                            mov rdi, rdx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400787c	      0xe8f36b0000	                   call sym.decGetDigits	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4007881	            0x89c2	                            mov edx, eax	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4007883	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400788a	            0x8910	                    mov dword [rax], edx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400788c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x4007893	            0x8b08	                    mov ecx, dword [rax]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x4007895	    0x4c8b8530ffff	              mov r8, qword [rbp - 0xd0]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x400789c	    0x488dbd64ffff	                   lea rdi, [rbp - 0x9c]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x40078a3	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x40078a7	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x40078ae	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x40078b5	          0x4d89c1	                              mov r9, r8	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x40078b8	          0x4989f8	                             mov r8, rdi	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x40078bb	          0x4889c7	                            mov rdi, rax	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x40078be	      0xe871550000	                    call sym.decSetCoeff	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x40078c3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40078ca	            0x8b00	                    mov eax, dword [rax]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40078cc	          0x83f831	                           cmp eax, 0x31	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40078cf	            0x7f17	                            jg 0x40078e8	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40078d1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40078d8	            0x8b00	                    mov eax, dword [rax]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40078da	            0x4898	                                    cdqe	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40078dc	     0xfb680000000	                   movzx eax, byte [rax]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40078e3	           0xfb6c0	                           movzx eax, al	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40078e6	            0xeb1e	                           jmp 0x4007906	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40078e8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40078ef	            0x8b00	                    mov eax, dword [rax]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40078f1	          0x8d4802	                      lea ecx, [rax + 2]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40078f4	      0xba56555555	                     mov edx, 0x55555556	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40078f9	            0x89c8	                            mov eax, ecx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40078fb	            0xf7ea	                                imul edx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40078fd	            0x89c8	                            mov eax, ecx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40078ff	          0xc1f81f	                           sar eax, 0x1f	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4007902	            0x29c2	                            sub edx, eax	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4007904	            0x89d0	                            mov eax, edx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4007906	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400790d	        0x4883c20a	                            add rdx, 0xa	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4007911	            0x89c6	                            mov esi, eax	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4007913	          0x4889d7	                            mov rdi, rdx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4007916	      0xe8596b0000	                   call sym.decGetDigits	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400791b	            0x89c2	                            mov edx, eax	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400791d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4007924	            0x8910	                    mov dword [rax], edx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4007926	    0x488b8d30ffff	             mov rcx, qword [rbp - 0xd0]	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400792d	    0x488d9564ffff	                   lea rdx, [rbp - 0x9c]	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4007934	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400793b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4007942	          0x4889c7	                            mov rdi, rax	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4007945	      0xe8b35d0000	                    call sym.decFinalize	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400794a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4007951	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4007955	          0x6685c0	                             test ax, ax	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4007958	     0xf8581000000	                           jne 0x40079df	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400795e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4007965	            0x8b00	                    mov eax, dword [rax]	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4007967	          0x83f801	                              cmp eax, 1	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400796a	            0x7573	                           jne 0x40079df	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400796c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4007973	         0xfb64008	               movzx eax, byte [rax + 8]	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4007977	           0xfb6c0	                           movzx eax, al	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400797a	          0x83e070	                           and eax, 0x70	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400797d	            0x85c0	                           test eax, eax	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400797f	            0x755e	                           jne 0x40079df	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4007981	    0x80bd63ffffff	                cmp byte [rbp - 0x9d], 0	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4007988	            0x7455	                            je 0x40079df	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400798a	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4127	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48
0x4007991	            0x8b00	                    mov eax, dword [rax]	      4127	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48
0x4007993	          0x83e020	                           and eax, 0x20	      4127	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48
0x4007996	            0x85c0	                           test eax, eax	      4127	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48
0x4007998	            0x7545	                           jne 0x40079df	      4127	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48
0x400799a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x40079a1	          0x8b400c	              mov eax, dword [rax + 0xc]	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x40079a4	          0x83f806	                              cmp eax, 6	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x40079a7	            0x751c	                           jne 0x40079c5	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x40079a9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x40079b0	         0xfb64008	               movzx eax, byte [rax + 8]	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x40079b4	          0x83c880	                      or eax, 0xffffff80	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x40079b7	            0x89c2	                            mov edx, eax	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x40079b9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x40079c0	          0x885008	                  mov byte [rax + 8], dl	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x40079c3	            0xeb1a	                           jmp 0x40079df	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x40079c5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x40079cc	         0xfb64008	               movzx eax, byte [rax + 8]	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x40079d0	          0x83e07f	                           and eax, 0x7f	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x40079d3	            0x89c2	                            mov edx, eax	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x40079d5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x40079dc	          0x885008	                  mov byte [rax + 8], dl	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x40079df	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x40079e3	          0x4889c7	                            mov rdi, rax	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x40079e6	      0xe800000000	                          call 0x40079eb	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x40079eb	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4138	decNumber.c	FUNCTION_68	FUNCTION_64
0x40079f2	        0x488b7df8	                mov rdi, qword [rbp - 8]	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x40079f6	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x40079ff	            0x7405	                            je 0x4007a06	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4007a01	      0xe800000000	                          call 0x4007a06	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4007a06	              0xc9	                                   leave	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4007a07	              0xc3	                                     ret	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
decNumberSameQuantum	SWITCH,0:IF,5:FOR,0:CALL,6:DO,0:ELSE,2:WHILE,0:functions,0	60
0x4004324	              0x55	                                push rbp	      2577	decNumber.c	FUNCTION_68	FUNCTION_42
0x4004325	          0x4889e5	                            mov rbp, rsp	      2577	decNumber.c	FUNCTION_68	FUNCTION_42
0x4004328	        0x4883ec30	                           sub rsp, 0x30	      2577	decNumber.c	FUNCTION_68	FUNCTION_42
0x400432c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2577	decNumber.c	FUNCTION_68	FUNCTION_42
0x4004330	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2577	decNumber.c	FUNCTION_68	FUNCTION_42
0x4004334	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2577	decNumber.c	FUNCTION_68	FUNCTION_42
0x4004338	    0x66c745fe0000	                   mov word [rbp - 2], 0	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x400433e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4004342	         0xfb65008	               movzx edx, byte [rax + 8]	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4004346	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x400434a	         0xfb64008	               movzx eax, byte [rax + 8]	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x400434e	             0x9d0	                             or eax, edx	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4004350	           0xfb6c0	                           movzx eax, al	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4004353	          0x83e070	                           and eax, 0x70	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4004356	            0x85c0	                           test eax, eax	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4004358	            0x7458	                            je 0x40043b2	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x400435a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x400435e	         0xfb64008	               movzx eax, byte [rax + 8]	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4004362	           0xfb6c0	                           movzx eax, al	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4004365	          0x83e030	                           and eax, 0x30	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4004368	            0x85c0	                           test eax, eax	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x400436a	            0x741a	                            je 0x4004386	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x400436c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4004370	         0xfb64008	               movzx eax, byte [rax + 8]	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4004374	           0xfb6c0	                           movzx eax, al	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4004377	          0x83e030	                           and eax, 0x30	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x400437a	            0x85c0	                           test eax, eax	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x400437c	            0x7408	                            je 0x4004386	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x400437e	    0x66c745fe0100	                   mov word [rbp - 2], 1	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4004384	            0xeb44	                           jmp 0x40043ca	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4004386	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x400438a	         0xfb64008	               movzx eax, byte [rax + 8]	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x400438e	           0xfb6c0	                           movzx eax, al	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x4004391	          0x83e040	                           and eax, 0x40	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x4004394	            0x85c0	                           test eax, eax	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x4004396	            0x7432	                            je 0x40043ca	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x4004398	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x400439c	         0xfb64008	               movzx eax, byte [rax + 8]	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x40043a0	           0xfb6c0	                           movzx eax, al	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x40043a3	          0x83e040	                           and eax, 0x40	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x40043a6	            0x85c0	                           test eax, eax	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x40043a8	            0x7420	                            je 0x40043ca	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x40043aa	    0x66c745fe0100	                   mov word [rbp - 2], 1	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x40043b0	            0xeb18	                           jmp 0x40043ca	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x40043b2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2589	decNumber.c	FUNCTION_68	FUNCTION_42	IF_5
0x40043b6	          0x8b5004	                mov edx, dword [rax + 4]	      2589	decNumber.c	FUNCTION_68	FUNCTION_42	IF_5
0x40043b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2589	decNumber.c	FUNCTION_68	FUNCTION_42	IF_5
0x40043bd	          0x8b4004	                mov eax, dword [rax + 4]	      2589	decNumber.c	FUNCTION_68	FUNCTION_42	IF_5
0x40043c0	            0x39c2	                            cmp edx, eax	      2589	decNumber.c	FUNCTION_68	FUNCTION_42	IF_5
0x40043c2	            0x7506	                           jne 0x40043ca	      2589	decNumber.c	FUNCTION_68	FUNCTION_42	IF_5
0x40043c4	    0x66c745fe0100	                   mov word [rbp - 2], 1	      2589	decNumber.c	FUNCTION_68	FUNCTION_42	IF_5
0x40043ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2591	decNumber.c	FUNCTION_68	FUNCTION_42	CALL_6
0x40043ce	          0x4889c7	                            mov rdi, rax	      2591	decNumber.c	FUNCTION_68	FUNCTION_42	CALL_6
0x40043d1	      0xe800000000	                          call 0x40043d6	      2591	decNumber.c	FUNCTION_68	FUNCTION_42	CALL_6
0x40043d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2592	decNumber.c	FUNCTION_68	FUNCTION_42
0x40043da	         0xfb755fe	               movzx edx, word [rbp - 2]	      2592	decNumber.c	FUNCTION_68	FUNCTION_42
0x40043de	        0x6689500a	                mov word [rax + 0xa], dx	      2592	decNumber.c	FUNCTION_68	FUNCTION_42
0x40043e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2593	decNumber.c	FUNCTION_68	FUNCTION_42
0x40043e6	              0xc9	                                   leave	      2594	decNumber.c	FUNCTION_68	FUNCTION_42
0x40043e7	              0xc3	                                     ret	      2594	decNumber.c	FUNCTION_68	FUNCTION_42
decNumberToString	SWITCH,0:IF,0:FOR,0:CALL,1:DO,0:ELSE,0:WHILE,0:functions,0	14
0x40003fe	              0x55	                                push rbp	       459	decNumber.c	FUNCTION_68	FUNCTION_5
0x40003ff	          0x4889e5	                            mov rbp, rsp	       459	decNumber.c	FUNCTION_68	FUNCTION_5
0x4000402	        0x4883ec10	                           sub rsp, 0x10	       459	decNumber.c	FUNCTION_68	FUNCTION_5
0x4000406	        0x48897df8	                mov qword [rbp - 8], rdi	       459	decNumber.c	FUNCTION_68	FUNCTION_5
0x400040a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       459	decNumber.c	FUNCTION_68	FUNCTION_5
0x400040e	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       460	decNumber.c	FUNCTION_68	FUNCTION_5	CALL_1
0x4000412	        0x488b45f8	                mov rax, qword [rbp - 8]	       460	decNumber.c	FUNCTION_68	FUNCTION_5	CALL_1
0x4000416	      0xba00000000	                              mov edx, 0	       460	decNumber.c	FUNCTION_68	FUNCTION_5	CALL_1
0x400041b	          0x4889ce	                            mov rsi, rcx	       460	decNumber.c	FUNCTION_68	FUNCTION_5	CALL_1
0x400041e	          0x4889c7	                            mov rdi, rax	       460	decNumber.c	FUNCTION_68	FUNCTION_5	CALL_1
0x4000421	      0xe89b5f0000	                    call sym.decToString	       460	decNumber.c	FUNCTION_68	FUNCTION_5	CALL_1
0x4000426	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       461	decNumber.c	FUNCTION_68	FUNCTION_5
0x400042a	              0xc9	                                   leave	       462	decNumber.c	FUNCTION_68	FUNCTION_5
0x400042b	              0xc3	                                     ret	       462	decNumber.c	FUNCTION_68	FUNCTION_5
decGetInt	SWITCH,0:IF,15:FOR,2:CALL,2:DO,0:ELSE,4:WHILE,0:functions,0	169
0x400de19	              0x55	                                push rbp	      7536	decNumber.c	FUNCTION_20
0x400de1a	          0x4889e5	                            mov rbp, rsp	      7536	decNumber.c	FUNCTION_20
0x400de1d	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      7536	decNumber.c	FUNCTION_20
0x400de21	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7540	decNumber.c	FUNCTION_20
0x400de25	            0x8b10	                    mov edx, dword [rax]	      7540	decNumber.c	FUNCTION_20
0x400de27	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7540	decNumber.c	FUNCTION_20
0x400de2b	          0x8b4004	                mov eax, dword [rax + 4]	      7540	decNumber.c	FUNCTION_20
0x400de2e	             0x1d0	                            add eax, edx	      7540	decNumber.c	FUNCTION_20
0x400de30	          0x8945e8	             mov dword [rbp - 0x18], eax	      7540	decNumber.c	FUNCTION_20
0x400de33	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7541	decNumber.c	FUNCTION_20	CALL_1
0x400de37	         0xfb64008	               movzx eax, byte [rax + 8]	      7541	decNumber.c	FUNCTION_20	CALL_1
0x400de3b	          0xc0e807	                               shr al, 7	      7541	decNumber.c	FUNCTION_20	CALL_1
0x400de3e	          0x8845df	               mov byte [rbp - 0x21], al	      7541	decNumber.c	FUNCTION_20	CALL_1
0x400de41	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400de45	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400de49	          0x6685c0	                             test ax, ax	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400de4c	            0x7527	                           jne 0x400de75	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400de4e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400de52	            0x8b00	                    mov eax, dword [rax]	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400de54	          0x83f801	                              cmp eax, 1	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400de57	            0x751c	                           jne 0x400de75	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400de59	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400de5d	         0xfb64008	               movzx eax, byte [rax + 8]	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400de61	           0xfb6c0	                           movzx eax, al	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400de64	          0x83e070	                           and eax, 0x70	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400de67	            0x85c0	                           test eax, eax	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400de69	            0x750a	                           jne 0x400de75	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400de6b	      0xb800000000	                              mov eax, 0	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400de70	      0xe9d6010000	                           jmp 0x400e04b	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400de75	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7553	decNumber.c	FUNCTION_20
0x400de79	        0x4883c00a	                            add rax, 0xa	      7553	decNumber.c	FUNCTION_20
0x400de7d	        0x488945f8	                mov qword [rbp - 8], rax	      7553	decNumber.c	FUNCTION_20
0x400de81	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      7554	decNumber.c	FUNCTION_20
0x400de88	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7555	decNumber.c	FUNCTION_20	IF_2
0x400de8c	          0x8b4004	                mov eax, dword [rax + 4]	      7555	decNumber.c	FUNCTION_20	IF_2
0x400de8f	            0x85c0	                           test eax, eax	      7555	decNumber.c	FUNCTION_20	IF_2
0x400de91	            0x780f	                            js 0x400dea2	      7555	decNumber.c	FUNCTION_20	IF_2
0x400de93	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7557	decNumber.c	FUNCTION_20	IF_2
0x400de97	          0x8b4004	                mov eax, dword [rax + 4]	      7557	decNumber.c	FUNCTION_20	IF_2
0x400de9a	          0x8945e4	             mov dword [rbp - 0x1c], eax	      7557	decNumber.c	FUNCTION_20	IF_2
0x400de9d	      0xe9ab000000	                           jmp 0x400df4d	      7557	decNumber.c	FUNCTION_20	IF_2
0x400dea2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7560	decNumber.c	FUNCTION_20	ELSE_1
0x400dea6	          0x8b4004	                mov eax, dword [rax + 4]	      7560	decNumber.c	FUNCTION_20	ELSE_1
0x400dea9	            0xf7d8	                                 neg eax	      7560	decNumber.c	FUNCTION_20	ELSE_1
0x400deab	          0x8945ec	             mov dword [rbp - 0x14], eax	      7560	decNumber.c	FUNCTION_20	ELSE_1
0x400deae	            0xeb1f	                           jmp 0x400decf	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x400deb0	        0x488b45f8	                mov rax, qword [rbp - 8]	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x400deb4	           0xfb700	                   movzx eax, word [rax]	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x400deb7	          0x6685c0	                             test ax, ax	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x400deba	            0x740a	                            je 0x400dec6	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x400debc	      0xb800000080	                     mov eax, 0x80000000	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x400dec1	      0xe985010000	                           jmp 0x400e04b	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x400dec6	        0x836dec03	               sub dword [rbp - 0x14], 3	      7564	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x400deca	      0x488345f802	                  add qword [rbp - 8], 2	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x400decf	        0x837dec02	               cmp dword [rbp - 0x14], 2	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x400ded3	            0x7fdb	                            jg 0x400deb0	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x400ded5	        0x837dec00	               cmp dword [rbp - 0x14], 0	      7566	decNumber.c	FUNCTION_20	ELSE_1	IF_4
0x400ded9	            0x7509	                           jne 0x400dee4	      7566	decNumber.c	FUNCTION_20	ELSE_1	IF_4
0x400dedb	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      7566	decNumber.c	FUNCTION_20	ELSE_1	IF_4
0x400dee2	            0xeb69	                           jmp 0x400df4d	      7566	decNumber.c	FUNCTION_20	ELSE_1	IF_4
0x400dee4	        0x488b45f8	                mov rax, qword [rbp - 8]	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400dee8	           0xfb700	                   movzx eax, word [rax]	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400deeb	           0xfb7d0	                           movzx edx, ax	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400deee	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400def1	            0x89c1	                            mov ecx, eax	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400def3	            0xd3ea	                             shr edx, cl	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400def5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400def8	            0x4898	                                    cdqe	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400defa	    0x8b0485000000	                  mov eax, dword [rax*4]	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df01	           0xfafc2	                           imul eax, edx	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df04	          0xc1e811	                           shr eax, 0x11	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df07	          0x8945e0	             mov dword [rbp - 0x20], eax	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df0a	        0x488b45f8	                mov rax, qword [rbp - 8]	      7572	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df0e	           0xfb700	                   movzx eax, word [rax]	      7572	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df11	           0xfb7d0	                           movzx edx, ax	      7572	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df14	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7572	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df17	            0x4898	                                    cdqe	      7572	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df19	    0x8b0c85000000	                  mov ecx, dword [rax*4]	      7572	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df20	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7572	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df23	           0xfafc1	                           imul eax, ecx	      7572	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df26	            0x29c2	                            sub edx, eax	      7572	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df28	            0x89d0	                            mov eax, edx	      7572	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df2a	          0x8945f0	             mov dword [rbp - 0x10], eax	      7572	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df2d	        0x837df000	               cmp dword [rbp - 0x10], 0	      7577	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2	IF_5
0x400df31	            0x740a	                            je 0x400df3d	      7577	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2	IF_5
0x400df33	      0xb800000080	                     mov eax, 0x80000000	      7577	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2	IF_5
0x400df38	      0xe90e010000	                           jmp 0x400e04b	      7577	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2	IF_5
0x400df3d	      0xb803000000	                              mov eax, 3	      7579	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df42	          0x2b45ec	             sub eax, dword [rbp - 0x14]	      7579	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df45	          0x8945e4	             mov dword [rbp - 0x1c], eax	      7579	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df48	      0x488345f802	                  add qword [rbp - 8], 2	      7580	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400df4d	        0x837de400	               cmp dword [rbp - 0x1c], 0	      7586	decNumber.c	FUNCTION_20	IF_6
0x400df51	            0x7516	                           jne 0x400df69	      7586	decNumber.c	FUNCTION_20	IF_6
0x400df53	        0x488b45f8	                mov rax, qword [rbp - 8]	      7586	decNumber.c	FUNCTION_20	IF_6
0x400df57	           0xfb700	                   movzx eax, word [rax]	      7586	decNumber.c	FUNCTION_20	IF_6
0x400df5a	           0xfb7c0	                           movzx eax, ax	      7586	decNumber.c	FUNCTION_20	IF_6
0x400df5d	          0x8945e0	             mov dword [rbp - 0x20], eax	      7586	decNumber.c	FUNCTION_20	IF_6
0x400df60	        0x8345e403	               add dword [rbp - 0x1c], 3	      7586	decNumber.c	FUNCTION_20	IF_6
0x400df64	      0x488345f802	                  add qword [rbp - 8], 2	      7586	decNumber.c	FUNCTION_20	IF_6
0x400df69	        0x837de80a	            cmp dword [rbp - 0x18], 0xa 	      7588	decNumber.c	FUNCTION_20	IF_7
0x400df6d	     0xf8fae000000	                            jg 0x400e021	      7588	decNumber.c	FUNCTION_20	IF_7
0x400df73	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7589	decNumber.c	FUNCTION_20	IF_7
0x400df76	          0x8945f4	              mov dword [rbp - 0xc], eax	      7589	decNumber.c	FUNCTION_20	IF_7
0x400df79	            0xeb2a	                           jmp 0x400dfa5	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400df7b	        0x488b45f8	                mov rax, qword [rbp - 8]	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400df7f	           0xfb700	                   movzx eax, word [rax]	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400df82	           0xfb7d0	                           movzx edx, ax	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400df85	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400df88	            0x4898	                                    cdqe	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400df8a	    0x8b0485000000	                  mov eax, dword [rax*4]	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400df91	           0xfafd0	                           imul edx, eax	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400df94	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400df97	             0x1d0	                            add eax, edx	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400df99	          0x8945e0	             mov dword [rbp - 0x20], eax	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400df9c	        0x8345e403	               add dword [rbp - 0x1c], 3	      7593	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400dfa0	      0x488345f802	                  add qword [rbp - 8], 2	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400dfa5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400dfa8	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400dfab	            0x7cce	                            jl 0x400df7b	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400dfad	        0x837de80a	            cmp dword [rbp - 0x18], 0xa 	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x400dfb1	            0x756e	                           jne 0x400e021	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x400dfb3	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400dfb6	          0x83e803	                              sub eax, 3	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400dfb9	            0x4898	                                    cdqe	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400dfbb	    0x8b0485000000	                  mov eax, dword [rax*4]	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400dfc2	            0x89c6	                            mov esi, eax	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400dfc4	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400dfc7	              0x99	                                     cdq	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400dfc8	            0xf7fe	                                idiv esi	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400dfca	            0x89c2	                            mov edx, eax	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400dfcc	        0x488b45f8	                mov rax, qword [rbp - 8]	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400dfd0	        0x4883e802	                              sub rax, 2	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400dfd4	           0xfb700	                   movzx eax, word [rax]	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400dfd7	           0xfb7c0	                           movzx eax, ax	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400dfda	            0x39c2	                            cmp edx, eax	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400dfdc	            0x7409	                            je 0x400dfe7	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400dfde	    0xc745e80b0000	            mov dword [rbp - 0x18], 0xb 	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400dfe5	            0xeb2e	                           jmp 0x400e015	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400dfe7	        0x807ddf00	                cmp byte [rbp - 0x21], 0	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x400dfeb	            0x7412	                            je 0x400dfff	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x400dfed	    0x817de0fd9335	     cmp dword [rbp - 0x20], 0x773593fd 	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x400dff4	            0x7e09	                           jle 0x400dfff	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x400dff6	    0xc745e80b0000	            mov dword [rbp - 0x18], 0xb 	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x400dffd	            0xeb16	                           jmp 0x400e015	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x400dfff	        0x807ddf00	                cmp byte [rbp - 0x21], 0	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x400e003	            0x7510	                           jne 0x400e015	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x400e005	    0x817de0ffc99a	     cmp dword [rbp - 0x20], 0x3b9ac9ff 	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x400e00c	            0x7e07	                           jle 0x400e015	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x400e00e	    0xc745e80b0000	            mov dword [rbp - 0x18], 0xb 	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x400e015	        0x837de80b	            cmp dword [rbp - 0x18], 0xb 	      7600	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_12
0x400e019	            0x7506	                           jne 0x400e021	      7600	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_12
0x400e01b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      7600	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_12
0x400e01e	          0x8945e0	             mov dword [rbp - 0x20], eax	      7600	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_12
0x400e021	        0x837de80a	            cmp dword [rbp - 0x18], 0xa 	      7604	decNumber.c	FUNCTION_20	IF_13
0x400e025	            0x7e18	                           jle 0x400e03f	      7604	decNumber.c	FUNCTION_20	IF_13
0x400e027	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x400e02a	          0x83e001	                              and eax, 1	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x400e02d	            0x85c0	                           test eax, eax	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x400e02f	            0x7407	                            je 0x400e038	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x400e031	      0xb803000080	                     mov eax, 0x80000003	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x400e036	            0xeb13	                           jmp 0x400e04b	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x400e038	      0xb802000080	                     mov eax, 0x80000002	      7606	decNumber.c	FUNCTION_20	IF_13
0x400e03d	            0xeb0c	                           jmp 0x400e04b	      7606	decNumber.c	FUNCTION_20	IF_13
0x400e03f	        0x807ddf00	                cmp byte [rbp - 0x21], 0	      7609	decNumber.c	FUNCTION_20	IF_15
0x400e043	            0x7403	                            je 0x400e048	      7609	decNumber.c	FUNCTION_20	IF_15
0x400e045	          0xf75de0	                  neg dword [rbp - 0x20]	      7609	decNumber.c	FUNCTION_20	IF_15
0x400e048	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7610	decNumber.c	FUNCTION_20
0x400e04b	              0x5d	                                 pop rbp	      7611	decNumber.c	FUNCTION_20
0x400e04c	              0xc3	                                     ret	      7611	decNumber.c	FUNCTION_20
decNumberAnd	SWITCH,0:IF,8:FOR,2:CALL,12:DO,0:ELSE,2:WHILE,0:functions,0	297
0x4000d71	              0x55	                                push rbp	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x4000d72	          0x4889e5	                            mov rbp, rsp	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x4000d75	        0x4883ec60	                           sub rsp, 0x60	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x4000d79	        0x48897db8	             mov qword [rbp - 0x48], rdi	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x4000d7d	        0x488975b0	             mov qword [rbp - 0x50], rsi	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x4000d81	        0x488955a8	             mov qword [rbp - 0x58], rdx	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x4000d85	        0x48894da0	             mov qword [rbp - 0x60], rcx	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x4000d89	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4000d8d	          0x8b4004	                mov eax, dword [rax + 4]	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4000d90	            0x85c0	                           test eax, eax	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4000d92	            0x7547	                           jne 0x4000ddb	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4000d94	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4000d98	         0xfb64008	               movzx eax, byte [rax + 8]	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4000d9c	           0xfb6c0	                           movzx eax, al	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4000d9f	          0x83e070	                           and eax, 0x70	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4000da2	            0x85c0	                           test eax, eax	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4000da4	            0x7535	                           jne 0x4000ddb	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4000da6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4000daa	         0xfb64008	               movzx eax, byte [rax + 8]	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4000dae	            0x84c0	                             test al, al	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4000db0	            0x7829	                            js 0x4000ddb	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4000db2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4000db6	          0x8b4004	                mov eax, dword [rax + 4]	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4000db9	            0x85c0	                           test eax, eax	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4000dbb	            0x751e	                           jne 0x4000ddb	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4000dbd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4000dc1	         0xfb64008	               movzx eax, byte [rax + 8]	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4000dc5	           0xfb6c0	                           movzx eax, al	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4000dc8	          0x83e070	                           and eax, 0x70	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4000dcb	            0x85c0	                           test eax, eax	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4000dcd	            0x750c	                           jne 0x4000ddb	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4000dcf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4000dd3	         0xfb64008	               movzx eax, byte [rax + 8]	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4000dd7	            0x84c0	                             test al, al	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4000dd9	            0x791e	                           jns 0x4000df9	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4000ddb	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       808	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_6
0x4000ddf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       808	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_6
0x4000de3	      0xbe80000000	                           mov esi, 0x80	       808	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_6
0x4000de8	          0x4889c7	                            mov rdi, rax	       808	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_6
0x4000deb	      0xe828d60000	                      call sym.decStatus	       808	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_6
0x4000df0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       809	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2
0x4000df4	      0xe946030000	                           jmp 0x400113f	       809	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2
0x4000df9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       813	decNumber.c	FUNCTION_68	FUNCTION_10
0x4000dfd	        0x4883c00a	                            add rax, 0xa	       813	decNumber.c	FUNCTION_68	FUNCTION_10
0x4000e01	        0x488945d0	             mov qword [rbp - 0x30], rax	       813	decNumber.c	FUNCTION_68	FUNCTION_10
0x4000e05	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       814	decNumber.c	FUNCTION_68	FUNCTION_10
0x4000e09	        0x4883c00a	                            add rax, 0xa	       814	decNumber.c	FUNCTION_68	FUNCTION_10
0x4000e0d	        0x488945d8	             mov qword [rbp - 0x28], rax	       814	decNumber.c	FUNCTION_68	FUNCTION_10
0x4000e11	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       815	decNumber.c	FUNCTION_68	FUNCTION_10
0x4000e15	        0x4883c00a	                            add rax, 0xa	       815	decNumber.c	FUNCTION_68	FUNCTION_10
0x4000e19	        0x488945e0	             mov qword [rbp - 0x20], rax	       815	decNumber.c	FUNCTION_68	FUNCTION_10
0x4000e1d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e21	            0x8b00	                    mov eax, dword [rax]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e23	          0x83f831	                           cmp eax, 0x31	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e26	            0x7f1b	                            jg 0x4000e43	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e28	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e2c	            0x8b00	                    mov eax, dword [rax]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e2e	            0x4898	                                    cdqe	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e30	     0xfb680000000	                   movzx eax, byte [rax]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e37	           0xfb6c0	                           movzx eax, al	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e3a	          0x4801c0	                            add rax, rax	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e3d	        0x4883e802	                              sub rax, 2	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e41	            0xeb24	                           jmp 0x4000e67	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e43	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e47	            0x8b00	                    mov eax, dword [rax]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e49	          0x8d4802	                      lea ecx, [rax + 2]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e4c	      0xba56555555	                     mov edx, 0x55555556	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e51	            0x89c8	                            mov eax, ecx	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e53	            0xf7ea	                                imul edx	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e55	            0x89c8	                            mov eax, ecx	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e57	          0xc1f81f	                           sar eax, 0x1f	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e5a	            0x29c2	                            sub edx, eax	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e5c	            0x89d0	                            mov eax, edx	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e5e	            0x4898	                                    cdqe	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e60	          0x4801c0	                            add rax, rax	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e63	        0x4883e802	                              sub rax, 2	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e67	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e6b	          0x4801d0	                            add rax, rdx	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e6e	        0x488945e8	             mov qword [rbp - 0x18], rax	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4000e72	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000e76	            0x8b00	                    mov eax, dword [rax]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000e78	          0x83f831	                           cmp eax, 0x31	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000e7b	            0x7f1b	                            jg 0x4000e98	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000e7d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000e81	            0x8b00	                    mov eax, dword [rax]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000e83	            0x4898	                                    cdqe	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000e85	     0xfb680000000	                   movzx eax, byte [rax]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000e8c	           0xfb6c0	                           movzx eax, al	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000e8f	          0x4801c0	                            add rax, rax	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000e92	        0x4883e802	                              sub rax, 2	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000e96	            0xeb24	                           jmp 0x4000ebc	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000e98	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000e9c	            0x8b00	                    mov eax, dword [rax]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000e9e	          0x8d4802	                      lea ecx, [rax + 2]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000ea1	      0xba56555555	                     mov edx, 0x55555556	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000ea6	            0x89c8	                            mov eax, ecx	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000ea8	            0xf7ea	                                imul edx	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000eaa	            0x89c8	                            mov eax, ecx	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000eac	          0xc1f81f	                           sar eax, 0x1f	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000eaf	            0x29c2	                            sub edx, eax	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000eb1	            0x89d0	                            mov eax, edx	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000eb3	            0x4898	                                    cdqe	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000eb5	          0x4801c0	                            add rax, rax	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000eb8	        0x4883e802	                              sub rax, 2	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000ebc	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000ec0	          0x4801d0	                            add rax, rdx	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000ec3	        0x488945f0	             mov qword [rbp - 0x10], rax	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4000ec7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000ecb	            0x8b00	                    mov eax, dword [rax]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000ecd	          0x83f831	                           cmp eax, 0x31	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000ed0	            0x7f1b	                            jg 0x4000eed	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000ed2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000ed6	            0x8b00	                    mov eax, dword [rax]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000ed8	            0x4898	                                    cdqe	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000eda	     0xfb680000000	                   movzx eax, byte [rax]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000ee1	           0xfb6c0	                           movzx eax, al	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000ee4	          0x4801c0	                            add rax, rax	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000ee7	        0x4883e802	                              sub rax, 2	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000eeb	            0xeb24	                           jmp 0x4000f11	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000eed	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000ef1	            0x8b00	                    mov eax, dword [rax]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000ef3	          0x8d4802	                      lea ecx, [rax + 2]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000ef6	      0xba56555555	                     mov edx, 0x55555556	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000efb	            0x89c8	                            mov eax, ecx	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000efd	            0xf7ea	                                imul edx	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000eff	            0x89c8	                            mov eax, ecx	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000f01	          0xc1f81f	                           sar eax, 0x1f	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000f04	            0x29c2	                            sub edx, eax	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000f06	            0x89d0	                            mov eax, edx	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000f08	            0x4898	                                    cdqe	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000f0a	          0x4801c0	                            add rax, rax	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000f0d	        0x4883e802	                              sub rax, 2	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000f11	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000f15	          0x4801d0	                            add rax, rdx	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000f18	        0x488945f8	                mov qword [rbp - 8], rax	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4000f1c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f20	            0x8b30	                    mov esi, dword [rax]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f22	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f26	            0x8b00	                    mov eax, dword [rax]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f28	          0x83f831	                           cmp eax, 0x31	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f2b	            0x7f1d	                            jg 0x4000f4a	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f2d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f31	            0x8b00	                    mov eax, dword [rax]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f33	            0x4898	                                    cdqe	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f35	     0xfb680000000	                   movzx eax, byte [rax]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f3c	           0xfb6c0	                           movzx eax, al	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f3f	          0x8d50ff	                      lea edx, [rax - 1]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f42	            0x89d0	                            mov eax, edx	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f44	             0x1c0	                            add eax, eax	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f46	             0x1d0	                            add eax, edx	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f48	            0xeb24	                           jmp 0x4000f6e	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f4a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f4e	            0x8b00	                    mov eax, dword [rax]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f50	          0x8d4802	                      lea ecx, [rax + 2]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f53	      0xba56555555	                     mov edx, 0x55555556	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f58	            0x89c8	                            mov eax, ecx	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f5a	            0xf7ea	                                imul edx	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f5c	            0x89c8	                            mov eax, ecx	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f5e	          0xc1f81f	                           sar eax, 0x1f	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f61	            0x29c2	                            sub edx, eax	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f63	            0x89d0	                            mov eax, edx	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f65	          0x8d50ff	                      lea edx, [rax - 1]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f68	            0x89d0	                            mov eax, edx	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f6a	             0x1c0	                            add eax, eax	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f6c	             0x1d0	                            add eax, edx	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f6e	            0x29c6	                            sub esi, eax	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f70	            0x89f0	                            mov eax, esi	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f72	          0x8945c8	             mov dword [rbp - 0x38], eax	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4000f75	      0xe972010000	                           jmp 0x40010ec	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4000f7a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x4000f7e	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x4000f82	            0x7608	                           jbe 0x4000f8c	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x4000f84	    0x66c745c00000	                mov word [rbp - 0x40], 0	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x4000f8a	            0xeb0b	                           jmp 0x4000f97	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x4000f8c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       823	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_1
0x4000f90	           0xfb700	                   movzx eax, word [rax]	       823	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_1
0x4000f93	        0x668945c0	               mov word [rbp - 0x40], ax	       823	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_1
0x4000f97	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x4000f9b	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x4000f9f	            0x7608	                           jbe 0x4000fa9	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x4000fa1	    0x66c745c20000	                mov word [rbp - 0x3e], 0	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x4000fa7	            0xeb0b	                           jmp 0x4000fb4	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x4000fa9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       825	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4000fad	           0xfb700	                   movzx eax, word [rax]	       825	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4000fb0	        0x668945c2	               mov word [rbp - 0x3e], ax	       825	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4000fb4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4000fb8	      0x66c7000000	                       mov word [rax], 0	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4000fbd	         0xfb745c0	            movzx eax, word [rbp - 0x40]	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x4000fc1	        0x660b45c2	                or ax, word [rbp - 0x3e]	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x4000fc5	          0x6685c0	                             test ax, ax	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x4000fc8	     0xf840f010000	                            je 0x40010dd	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x4000fce	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       829	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x4000fd2	      0x66c7000000	                       mov word [rax], 0	       829	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x4000fd7	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       831	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4000fde	      0xe9ed000000	                           jmp 0x40010d0	       831	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4000fe3	         0xfb745c0	            movzx eax, word [rbp - 0x40]	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4000fe7	        0x662345c2	               and ax, word [rbp - 0x3e]	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4000feb	           0xfb7c0	                           movzx eax, ax	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4000fee	          0x83e001	                              and eax, 1	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4000ff1	            0x85c0	                           test eax, eax	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4000ff3	            0x741c	                            je 0x4001011	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4000ff5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4000ff9	           0xfb710	                   movzx edx, word [rax]	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4000ffc	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4000fff	            0x4898	                                    cdqe	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4001001	    0x8b0485000000	                  mov eax, dword [rax*4]	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4001008	             0x1c2	                            add edx, eax	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x400100a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x400100e	          0x668910	                      mov word [rax], dx	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4001011	         0xfb74dc0	            movzx ecx, word [rbp - 0x40]	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001015	           0xfb7c1	                           movzx eax, cx	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001018	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400101e	          0xc1e810	                           shr eax, 0x10	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001021	            0x89c2	                            mov edx, eax	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001023	        0x66c1ea03	                               shr dx, 3	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001027	            0x89d0	                            mov eax, edx	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001029	          0xc1e002	                              shl eax, 2	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400102c	             0x1d0	                            add eax, edx	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400102e	             0x1c0	                            add eax, eax	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001030	            0x29c1	                            sub ecx, eax	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001032	            0x89ca	                            mov edx, ecx	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001034	           0xfb7c2	                           movzx eax, dx	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001037	          0x8945cc	             mov dword [rbp - 0x34], eax	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400103a	         0xfb745c0	            movzx eax, word [rbp - 0x40]	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400103e	           0xfb7c0	                           movzx eax, ax	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001041	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001047	          0xc1e810	                           shr eax, 0x10	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400104a	        0x66c1e803	                               shr ax, 3	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400104e	        0x668945c0	               mov word [rbp - 0x40], ax	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001052	         0xfb74dc2	            movzx ecx, word [rbp - 0x3e]	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001056	           0xfb7c1	                           movzx eax, cx	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001059	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400105f	          0xc1e810	                           shr eax, 0x10	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001062	            0x89c2	                            mov edx, eax	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001064	        0x66c1ea03	                               shr dx, 3	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001068	            0x89d0	                            mov eax, edx	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400106a	          0xc1e002	                              shl eax, 2	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400106d	             0x1d0	                            add eax, edx	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400106f	             0x1c0	                            add eax, eax	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001071	            0x29c1	                            sub ecx, eax	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001073	            0x89ca	                            mov edx, ecx	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001075	           0xfb7c2	                           movzx eax, dx	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001078	           0x945cc	              or dword [rbp - 0x34], eax	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400107b	         0xfb745c2	            movzx eax, word [rbp - 0x3e]	       836	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400107f	           0xfb7c0	                           movzx eax, ax	       836	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001082	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	       836	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001088	          0xc1e810	                           shr eax, 0x10	       836	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400108b	        0x66c1e803	                               shr ax, 3	       836	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400108f	        0x668945c2	               mov word [rbp - 0x3e], ax	       836	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4001093	        0x837dcc01	               cmp dword [rbp - 0x34], 1	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4001097	            0x7e1e	                           jle 0x40010b7	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4001099	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       838	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x400109d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       838	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x40010a1	      0xbe80000000	                           mov esi, 0x80	       838	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x40010a6	          0x4889c7	                            mov rdi, rax	       838	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x40010a9	      0xe86ad30000	                      call sym.decStatus	       838	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x40010ae	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       839	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40010b2	      0xe988000000	                           jmp 0x400113f	       839	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40010b7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40010bb	        0x483b45f8	                cmp rax, qword [rbp - 8]	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40010bf	            0x750b	                           jne 0x40010cc	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40010c1	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40010c4	          0x83e801	                              sub eax, 1	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40010c7	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40010ca	            0x7410	                            je 0x40010dc	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40010cc	        0x8345c401	               add dword [rbp - 0x3c], 1	       831	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x40010d0	        0x837dc402	               cmp dword [rbp - 0x3c], 2	       831	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x40010d4	     0xf8e09ffffff	                           jle 0x4000fe3	       831	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x40010da	            0xeb01	                           jmp 0x40010dd	       831	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x40010dc	              0x90	                                     nop	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40010dd	      0x488345d002	               add qword [rbp - 0x30], 2	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x40010e2	      0x488345d802	               add qword [rbp - 0x28], 2	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x40010e7	      0x488345e002	               add qword [rbp - 0x20], 2	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x40010ec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x40010f0	        0x483b45f8	                cmp rax, qword [rbp - 8]	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x40010f4	     0xf8680feffff	                           jbe 0x4000f7a	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x40010fa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x40010fe	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x4001102	        0x4883c20a	                            add rdx, 0xa	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x4001106	          0x4829d0	                            sub rax, rdx	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x4001109	          0x48d1f8	                              sar rax, 1	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x400110c	            0x89c2	                            mov edx, eax	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x400110e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x4001112	        0x4883c00a	                            add rax, 0xa	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x4001116	            0x89d6	                            mov esi, edx	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x4001118	          0x4889c7	                            mov rdi, rax	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x400111b	      0xe854d30000	                   call sym.decGetDigits	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x4001120	            0x89c2	                            mov edx, eax	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x4001122	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x4001126	            0x8910	                    mov dword [rax], edx	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x4001128	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       847	decNumber.c	FUNCTION_68	FUNCTION_10
0x400112c	    0xc74004000000	                  mov dword [rax + 4], 0	       847	decNumber.c	FUNCTION_68	FUNCTION_10
0x4001133	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       848	decNumber.c	FUNCTION_68	FUNCTION_10
0x4001137	        0xc6400800	                   mov byte [rax + 8], 0	       848	decNumber.c	FUNCTION_68	FUNCTION_10
0x400113b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       849	decNumber.c	FUNCTION_68	FUNCTION_10
0x400113f	              0xc9	                                   leave	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4001140	              0xc3	                                     ret	       850	decNumber.c	FUNCTION_68	FUNCTION_10
decNumberScaleB	SWITCH,0:IF,6:FOR,0:CALL,11:DO,0:ELSE,3:WHILE,0:functions,0	109
0x40043e8	              0x55	                                push rbp	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40043e9	          0x4889e5	                            mov rbp, rsp	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40043ec	        0x4883ec40	                           sub rsp, 0x40	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40043f0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40043f4	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40043f8	        0x488955c8	             mov qword [rbp - 0x38], rdx	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40043fc	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004400	    0x64488b042528	                mov rax, qword fs:[0x28]	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004409	        0x488945f8	                mov qword [rbp - 8], rax	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x400440d	            0x31c0	                            xor eax, eax	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x400440f	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      2614	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004416	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x400441a	         0xfb64008	               movzx eax, byte [rax + 8]	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x400441e	           0xfb6c0	                           movzx eax, al	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x4004421	          0x83e030	                           and eax, 0x30	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x4004424	            0x85c0	                           test eax, eax	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x4004426	            0x7512	                           jne 0x400443a	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x4004428	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x400442c	         0xfb64008	               movzx eax, byte [rax + 8]	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x4004430	           0xfb6c0	                           movzx eax, al	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x4004433	          0x83e030	                           and eax, 0x30	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x4004436	            0x85c0	                           test eax, eax	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x4004438	            0x7424	                            je 0x400445e	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x400443a	        0x488d7dec	                   lea rdi, [rbp - 0x14]	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x400443e	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x4004442	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x4004446	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x400444a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x400444e	          0x4989f8	                             mov r8, rdi	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x4004451	          0x4889c7	                            mov rdi, rax	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x4004454	      0xe8b99d0000	                        call sym.decNaNs	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x4004459	      0xe9d3000000	                           jmp 0x4004531	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x400445e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x4004462	         0xfb64008	               movzx eax, byte [rax + 8]	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x4004466	           0xfb6c0	                           movzx eax, al	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x4004469	          0x83e040	                           and eax, 0x40	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x400446c	            0x85c0	                           test eax, eax	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x400446e	            0x750b	                           jne 0x400447b	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x4004470	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x4004474	          0x8b4004	                mov eax, dword [rax + 4]	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x4004477	            0x85c0	                           test eax, eax	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x4004479	            0x740c	                            je 0x4004487	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x400447b	    0xc745ec800000	           mov dword [rbp - 0x14], 0x80 	      2626	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3
0x4004482	      0xe9aa000000	                           jmp 0x4004531	      2626	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3
0x4004487	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2629	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	CALL_6
0x400448b	          0x4889c7	                            mov rdi, rax	      2629	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	CALL_6
0x400448e	      0xe886990000	                      call sym.decGetInt	      2629	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	CALL_6
0x4004493	          0x8945f4	              mov dword [rbp - 0xc], eax	      2629	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	CALL_6
0x4004496	    0x817df4000000	      cmp dword [rbp - 0xc], 0x80000000 	      2630	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x400449d	            0x7432	                            je 0x40044d1	      2630	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x400449f	    0x817df4030000	      cmp dword [rbp - 0xc], 0x80000003 	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x40044a6	            0x7429	                            je 0x40044d1	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x40044a8	    0x817df4020000	      cmp dword [rbp - 0xc], 0x80000002 	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x40044af	            0x7420	                            je 0x40044d1	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x40044b1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40044b4	              0x99	                                     cdq	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40044b5	            0x89d0	                            mov eax, edx	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40044b7	          0x3345f4	              xor eax, dword [rbp - 0xc]	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40044ba	            0x29d0	                            sub eax, edx	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40044bc	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40044c0	            0x8b0a	                    mov ecx, dword [rdx]	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40044c2	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40044c6	          0x8b5204	                mov edx, dword [rdx + 4]	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40044c9	             0x1ca	                            add edx, ecx	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40044cb	             0x1d2	                            add edx, edx	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40044cd	            0x39d0	                            cmp eax, edx	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40044cf	            0x7e09	                           jle 0x40044da	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40044d1	    0xc745ec800000	           mov dword [rbp - 0x14], 0x80 	      2633	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x40044d8	            0xeb57	                           jmp 0x4004531	      2633	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x40044da	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2635	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	CALL_8
0x40044de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2635	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	CALL_8
0x40044e2	          0x4889d6	                            mov rsi, rdx	      2635	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	CALL_8
0x40044e5	          0x4889c7	                            mov rdi, rax	      2635	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	CALL_8
0x40044e8	      0xe800000000	                          call 0x40044ed	      2635	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	CALL_8
0x40044ed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2636	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_9
0x40044f1	         0xfb64008	               movzx eax, byte [rax + 8]	      2636	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_9
0x40044f5	           0xfb6c0	                           movzx eax, al	      2636	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_9
0x40044f8	          0x83e040	                           and eax, 0x40	      2636	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_9
0x40044fb	            0x85c0	                           test eax, eax	      2636	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_9
0x40044fd	            0x7532	                           jne 0x4004531	      2636	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_9
0x40044ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2637	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5
0x4004503	          0x8b5004	                mov edx, dword [rax + 4]	      2637	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5
0x4004506	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2637	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5
0x4004509	             0x1c2	                            add edx, eax	      2637	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5
0x400450b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2637	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5
0x400450f	          0x895004	                mov dword [rax + 4], edx	      2637	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5
0x4004512	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      2638	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5
0x4004519	        0x488d4dec	                   lea rcx, [rbp - 0x14]	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x400451d	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x4004521	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x4004525	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x4004529	          0x4889c7	                            mov rdi, rax	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x400452c	      0xe8cc910000	                    call sym.decFinalize	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x4004531	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x4004534	            0x85c0	                           test eax, eax	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x4004536	            0x7415	                            je 0x400454d	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x4004538	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x400453b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x400453f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x4004543	            0x89ce	                            mov esi, ecx	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x4004545	          0x4889c7	                            mov rdi, rax	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x4004548	      0xe8cb9e0000	                      call sym.decStatus	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x400454d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2644	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004551	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004555	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x400455e	            0x7405	                            je 0x4004565	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004560	      0xe800000000	                          call 0x4004565	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004565	              0xc9	                                   leave	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004566	              0xc3	                                     ret	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
decNumberCompare	SWITCH,0:IF,1:FOR,0:CALL,2:DO,0:ELSE,0:WHILE,0:functions,0	36
0x4001141	              0x55	                                push rbp	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4001142	          0x4889e5	                            mov rbp, rsp	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4001145	        0x4883ec30	                           sub rsp, 0x30	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4001149	        0x48897de8	             mov qword [rbp - 0x18], rdi	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x400114d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4001151	        0x488955d8	             mov qword [rbp - 0x28], rdx	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4001155	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4001159	    0x64488b042528	                mov rax, qword fs:[0x28]	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4001162	        0x488945f8	                mov qword [rbp - 8], rax	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4001166	            0x31c0	                            xor eax, eax	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4001168	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       866	decNumber.c	FUNCTION_68	FUNCTION_11
0x400116f	        0x488d7df4	                    lea rdi, [rbp - 0xc]	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x4001173	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x4001177	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x400117b	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x400117f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x4001183	          0x4989f9	                             mov r9, rdi	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x4001186	    0x41b801000000	                              mov r8d, 1	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x400118c	          0x4889c7	                            mov rdi, rax	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x400118f	      0xe8c5a50000	                   call sym.decCompareOp	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x4001194	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x4001197	            0x85c0	                           test eax, eax	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x4001199	            0x7415	                            je 0x40011b0	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x400119b	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x400119e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x40011a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x40011a6	            0x89ce	                            mov esi, ecx	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x40011a8	          0x4889c7	                            mov rdi, rax	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x40011ab	      0xe868d20000	                      call sym.decStatus	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x40011b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       869	decNumber.c	FUNCTION_68	FUNCTION_11
0x40011b4	        0x488b75f8	                mov rsi, qword [rbp - 8]	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x40011b8	    0x644833342528	                xor rsi, qword fs:[0x28]	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x40011c1	            0x7405	                            je 0x40011c8	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x40011c3	      0xe800000000	                          call 0x40011c8	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x40011c8	              0xc9	                                   leave	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x40011c9	              0xc3	                                     ret	       870	decNumber.c	FUNCTION_68	FUNCTION_11
decNumberExp	SWITCH,0:IF,6:FOR,0:CALL,6:DO,1:ELSE,0:WHILE,0:functions,0	40
0x40016a6	              0x55	                                push rbp	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x40016a7	          0x4889e5	                            mov rbp, rsp	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x40016aa	        0x4883ec30	                           sub rsp, 0x30	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x40016ae	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x40016b2	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x40016b6	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x40016ba	    0x64488b042528	                mov rax, qword fs:[0x28]	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x40016c3	        0x488945f8	                mov qword [rbp - 8], rax	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x40016c7	            0x31c0	                            xor eax, eax	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x40016c9	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1049	decNumber.c	FUNCTION_68	FUNCTION_17
0x40016d0	        0x488d55f4	                    lea rdx, [rbp - 0xc]	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x40016d4	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x40016d8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x40016dc	          0x4889ce	                            mov rsi, rcx	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x40016df	          0x4889c7	                            mov rdi, rax	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x40016e2	      0xe857c60000	                   call sym.decCheckMath	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x40016e7	            0x85c0	                           test eax, eax	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x40016e9	            0x7518	                           jne 0x4001703	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x40016eb	        0x488d4df4	                    lea rcx, [rbp - 0xc]	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x40016ef	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x40016f3	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x40016f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x40016fb	          0x4889c7	                            mov rdi, rax	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x40016fe	      0xe812870000	                       call sym.decExpOp	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x4001703	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x4001706	            0x85c0	                           test eax, eax	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x4001708	            0x7415	                            je 0x400171f	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x400170a	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x400170d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x4001711	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x4001715	            0x89ce	                            mov esi, ecx	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x4001717	          0x4889c7	                            mov rdi, rax	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x400171a	      0xe8f9cc0000	                      call sym.decStatus	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x400171f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1084	decNumber.c	FUNCTION_68	FUNCTION_17
0x4001723	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x4001727	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x4001730	            0x7405	                            je 0x4001737	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x4001732	      0xe800000000	                          call 0x4001737	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x4001737	              0xc9	                                   leave	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x4001738	              0xc3	                                     ret	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
decToString	SWITCH,0:IF,24:FOR,8:CALL,15:DO,0:ELSE,4:WHILE,0:functions,0	677
0x40063c1	              0x55	                                push rbp	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x40063c2	          0x4889e5	                            mov rbp, rsp	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x40063c5	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x40063c9	        0x488975b0	             mov qword [rbp - 0x50], rsi	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x40063cd	            0x89d0	                            mov eax, edx	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x40063cf	          0x8845ac	               mov byte [rbp - 0x54], al	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x40063d2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3616	decNumber.c	FUNCTION_68	FUNCTION_63
0x40063d6	          0x8b4004	                mov eax, dword [rax + 4]	      3616	decNumber.c	FUNCTION_68	FUNCTION_63
0x40063d9	          0x8945e8	             mov dword [rbp - 0x18], eax	      3616	decNumber.c	FUNCTION_68	FUNCTION_63
0x40063dc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3620	decNumber.c	FUNCTION_68	FUNCTION_63
0x40063e0	        0x488945f0	             mov qword [rbp - 0x10], rax	      3620	decNumber.c	FUNCTION_68	FUNCTION_63
0x40063e4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40063e8	        0x488d700a	                    lea rsi, [rax + 0xa]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40063ec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40063f0	            0x8b00	                    mov eax, dword [rax]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40063f2	          0x83f831	                           cmp eax, 0x31	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40063f5	            0x7f1b	                            jg 0x4006412	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40063f7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40063fb	            0x8b00	                    mov eax, dword [rax]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40063fd	            0x4898	                                    cdqe	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40063ff	     0xfb680000000	                   movzx eax, byte [rax]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4006406	           0xfb6c0	                           movzx eax, al	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4006409	          0x4801c0	                            add rax, rax	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x400640c	        0x4883e802	                              sub rax, 2	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4006410	            0xeb24	                           jmp 0x4006436	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4006412	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4006416	            0x8b00	                    mov eax, dword [rax]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4006418	          0x8d4802	                      lea ecx, [rax + 2]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x400641b	      0xba56555555	                     mov edx, 0x55555556	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4006420	            0x89c8	                            mov eax, ecx	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4006422	            0xf7ea	                                imul edx	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4006424	            0x89c8	                            mov eax, ecx	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4006426	          0xc1f81f	                           sar eax, 0x1f	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4006429	            0x29c2	                            sub edx, eax	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x400642b	            0x89d0	                            mov eax, edx	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x400642d	            0x4898	                                    cdqe	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x400642f	          0x4801c0	                            add rax, rax	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4006432	        0x4883e802	                              sub rax, 2	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4006436	          0x4801f0	                            add rax, rsi	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4006439	        0x488945f8	                mov qword [rbp - 8], rax	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x400643d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x4006441	         0xfb64008	               movzx eax, byte [rax + 8]	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x4006445	            0x84c0	                             test al, al	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x4006447	            0x790c	                           jns 0x4006455	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x4006449	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3631	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2
0x400644d	          0xc6002d	                    mov byte [rax], 0x2d	      3631	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2
0x4006450	      0x488345f001	               add qword [rbp - 0x10], 1	      3632	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2
0x4006455	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x4006459	         0xfb64008	               movzx eax, byte [rax + 8]	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x400645d	           0xfb6c0	                           movzx eax, al	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x4006460	          0x83e070	                           and eax, 0x70	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x4006463	            0x85c0	                           test eax, eax	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x4006465	     0xf8488000000	                            je 0x40064f3	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x400646b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3635	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_5
0x400646f	         0xfb64008	               movzx eax, byte [rax + 8]	      3635	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_5
0x4006473	           0xfb6c0	                           movzx eax, al	      3635	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_5
0x4006476	          0x83e040	                           and eax, 0x40	      3635	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_5
0x4006479	            0x85c0	                           test eax, eax	      3635	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_5
0x400647b	            0x7423	                            je 0x40064a0	      3635	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_5
0x400647d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3636	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_6
0x4006481	    0xc700496e6600	               mov dword [rax], 0x666e49	      3636	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_6
0x4006487	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3637	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_7
0x400648b	        0x4883c003	                              add rax, 3	      3637	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_7
0x400648f	    0xc700696e6974	            mov dword [rax], 0x74696e69 	      3637	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_7
0x4006495	    0x66c740047900	                mov word [rax + 4], 0x79	      3637	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_7
0x400649b	      0xe997070000	                           jmp 0x4006c37	      3638	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4
0x40064a0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3640	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x40064a4	         0xfb64008	               movzx eax, byte [rax + 8]	      3640	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x40064a8	           0xfb6c0	                           movzx eax, al	      3640	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x40064ab	          0x83e010	                           and eax, 0x10	      3640	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x40064ae	            0x85c0	                           test eax, eax	      3640	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x40064b0	            0x740c	                            je 0x40064be	      3640	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x40064b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3641	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x40064b6	          0xc60073	                    mov byte [rax], 0x73	      3641	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x40064b9	      0x488345f001	               add qword [rbp - 0x10], 1	      3642	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x40064be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3644	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	CALL_8
0x40064c2	    0xc7004e614e00	               mov dword [rax], 0x4e614e	      3644	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	CALL_8
0x40064c8	      0x488345f003	               add qword [rbp - 0x10], 3	      3645	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x40064cd	        0x837de800	               cmp dword [rbp - 0x18], 0	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x40064d1	     0xf855f070000	                           jne 0x4006c36	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x40064d7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x40064db	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x40064df	          0x6685c0	                             test ax, ax	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x40064e2	            0x750f	                           jne 0x40064f3	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x40064e4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x40064e8	            0x8b00	                    mov eax, dword [rax]	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x40064ea	          0x83f801	                              cmp eax, 1	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x40064ed	     0xf8443070000	                            je 0x4006c36	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x40064f3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x40064f7	            0x8b30	                    mov esi, dword [rax]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x40064f9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x40064fd	            0x8b00	                    mov eax, dword [rax]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x40064ff	          0x83f831	                           cmp eax, 0x31	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006502	            0x7f1d	                            jg 0x4006521	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006504	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006508	            0x8b00	                    mov eax, dword [rax]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400650a	            0x4898	                                    cdqe	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400650c	     0xfb680000000	                   movzx eax, byte [rax]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006513	           0xfb6c0	                           movzx eax, al	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006516	          0x8d50ff	                      lea edx, [rax - 1]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006519	            0x89d0	                            mov eax, edx	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400651b	             0x1c0	                            add eax, eax	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400651d	             0x1d0	                            add eax, edx	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400651f	            0xeb24	                           jmp 0x4006545	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006521	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006525	            0x8b00	                    mov eax, dword [rax]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006527	          0x8d4802	                      lea ecx, [rax + 2]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400652a	      0xba56555555	                     mov edx, 0x55555556	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400652f	            0x89c8	                            mov eax, ecx	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006531	            0xf7ea	                                imul edx	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006533	            0x89c8	                            mov eax, ecx	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006535	          0xc1f81f	                           sar eax, 0x1f	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006538	            0x29c2	                            sub edx, eax	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400653a	            0x89d0	                            mov eax, edx	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400653c	          0x8d50ff	                      lea edx, [rax - 1]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400653f	            0x89d0	                            mov eax, edx	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006541	             0x1c0	                            add eax, eax	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006543	             0x1d0	                            add eax, edx	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006545	            0x29c6	                            sub esi, eax	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006547	            0x89f0	                            mov eax, esi	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4006549	          0x8945d8	             mov dword [rbp - 0x28], eax	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400654c	        0x836dd801	               sub dword [rbp - 0x28], 1	      3654	decNumber.c	FUNCTION_68	FUNCTION_63
0x4006550	        0x837de800	               cmp dword [rbp - 0x18], 0	      3656	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7
0x4006554	     0xf8510010000	                           jne 0x400666a	      3656	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7
0x400655a	      0xe9ed000000	                           jmp 0x400664c	      3657	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x400655f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3658	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4006563	           0xfb700	                   movzx eax, word [rax]	      3658	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4006566	           0xfb7c0	                           movzx eax, ax	      3658	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4006569	          0x8945dc	             mov dword [rbp - 0x24], eax	      3658	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x400656c	      0xe9c5000000	                           jmp 0x4006636	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006571	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006575	          0xc60030	                    mov byte [rax], 0x30	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006578	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400657b	            0x4898	                                    cdqe	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400657d	    0x8b0485000000	                  mov eax, dword [rax*4]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006584	             0x1c0	                            add eax, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006586	          0x8945e0	             mov dword [rbp - 0x20], eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006589	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400658c	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400658f	            0x7654	                           jbe 0x40065e5	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006591	        0xc165e002	               shl dword [rbp - 0x20], 2	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006595	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006598	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400659b	            0x7218	                            jb 0x40065b5	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400659d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065a0	          0x2945dc	             sub dword [rbp - 0x24], eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065a3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065a7	           0xfb600	                   movzx eax, byte [rax]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065aa	          0x83c008	                              add eax, 8	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065ad	            0x89c2	                            mov edx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065af	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065b3	            0x8810	                      mov byte [rax], dl	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065b5	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065b8	            0xd1e8	                              shr eax, 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065ba	          0x8945e0	             mov dword [rbp - 0x20], eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065bd	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065c0	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065c3	            0x7218	                            jb 0x40065dd	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065c5	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065c8	          0x2945dc	             sub dword [rbp - 0x24], eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065cb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065cf	           0xfb600	                   movzx eax, byte [rax]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065d2	          0x83c004	                              add eax, 4	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065d5	            0x89c2	                            mov edx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065d7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065db	            0x8810	                      mov byte [rax], dl	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065dd	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065e0	            0xd1e8	                              shr eax, 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065e2	          0x8945e0	             mov dword [rbp - 0x20], eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065e5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065e8	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065eb	            0x7218	                            jb 0x4006605	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065ed	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065f0	          0x2945dc	             sub dword [rbp - 0x24], eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065f7	           0xfb600	                   movzx eax, byte [rax]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065fa	          0x83c002	                              add eax, 2	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065fd	            0x89c2	                            mov edx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40065ff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006603	            0x8810	                      mov byte [rax], dl	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006605	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006608	            0xd1e8	                              shr eax, 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400660a	          0x8945e0	             mov dword [rbp - 0x20], eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400660d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006610	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006613	            0x7218	                            jb 0x400662d	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006615	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006618	          0x2945dc	             sub dword [rbp - 0x24], eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400661b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400661f	           0xfb600	                   movzx eax, byte [rax]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006622	          0x83c001	                              add eax, 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006625	            0x89c2	                            mov edx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006627	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400662b	            0x8810	                      mov byte [rax], dl	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400662d	      0x488345f001	               add qword [rbp - 0x10], 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006632	        0x836dd801	               sub dword [rbp - 0x28], 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006636	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400663a	     0xf8931ffffff	                           jns 0x4006571	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4006640	    0xc745d8020000	               mov dword [rbp - 0x28], 2	      3660	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4006647	      0x48836df802	                  sub qword [rbp - 8], 2	      3657	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x400664c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3657	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4006650	        0x4883c00a	                            add rax, 0xa	      3657	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4006654	        0x483b45f8	                cmp rax, qword [rbp - 8]	      3657	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4006658	     0xf8601ffffff	                           jbe 0x400655f	      3657	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x400665e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3662	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7
0x4006662	          0xc60000	                       mov byte [rax], 0	      3662	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7
0x4006665	      0xe9cd050000	                           jmp 0x4006c37	      3663	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7
0x400666a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3666	decNumber.c	FUNCTION_68	FUNCTION_63
0x400666e	            0x8b10	                    mov edx, dword [rax]	      3666	decNumber.c	FUNCTION_68	FUNCTION_63
0x4006670	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3666	decNumber.c	FUNCTION_68	FUNCTION_63
0x4006673	             0x1d0	                            add eax, edx	      3666	decNumber.c	FUNCTION_68	FUNCTION_63
0x4006675	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3666	decNumber.c	FUNCTION_68	FUNCTION_63
0x4006678	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      3667	decNumber.c	FUNCTION_68	FUNCTION_63
0x400667f	        0x837de800	               cmp dword [rbp - 0x18], 0	      3668	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4006683	            0x7f0a	                            jg 0x400668f	      3668	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4006685	        0x837dd4fb	cmp dword [rbp - 0x2c], 0xfffffffffffffffb	      3668	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4006689	     0xf8ddc000000	                           jge 0x400676b	      3668	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x400668f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3669	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4006693	            0x8b10	                    mov edx, dword [rax]	      3669	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4006695	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3669	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4006698	             0x1d0	                            add eax, edx	      3669	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x400669a	          0x83e801	                              sub eax, 1	      3669	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x400669d	          0x8945d0	             mov dword [rbp - 0x30], eax	      3669	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x40066a0	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      3670	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x40066a7	        0x807dac00	                cmp byte [rbp - 0x54], 0	      3671	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x40066ab	     0xf84ba000000	                            je 0x400676b	      3671	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x40066b1	        0x837dd000	               cmp dword [rbp - 0x30], 0	      3671	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x40066b5	     0xf84b0000000	                            je 0x400676b	      3671	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x40066bb	        0x837dd000	               cmp dword [rbp - 0x30], 0	      3675	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066bf	            0x793f	                           jns 0x4006700	      3675	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066c1	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066c4	            0xf7d8	                                 neg eax	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066c6	            0x89c1	                            mov ecx, eax	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066c8	      0xba56555555	                     mov edx, 0x55555556	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066cd	            0x89c8	                            mov eax, ecx	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066cf	            0xf7ea	                                imul edx	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066d1	            0x89c8	                            mov eax, ecx	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066d3	          0xc1f81f	                           sar eax, 0x1f	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066d6	            0x29c2	                            sub edx, eax	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066d8	            0x89d0	                            mov eax, edx	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066da	          0x8945e4	             mov dword [rbp - 0x1c], eax	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066dd	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066e0	            0x89d0	                            mov eax, edx	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066e2	             0x1c0	                            add eax, eax	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066e4	             0x1d0	                            add eax, edx	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066e6	            0x29c1	                            sub ecx, eax	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066e8	            0x89c8	                            mov eax, ecx	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066ea	          0x8945e4	             mov dword [rbp - 0x1c], eax	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40066ed	        0x837de400	               cmp dword [rbp - 0x1c], 0	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x40066f1	            0x742d	                            je 0x4006720	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x40066f3	      0xb803000000	                              mov eax, 3	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x40066f8	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x40066fb	          0x8945e4	             mov dword [rbp - 0x1c], eax	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x40066fe	            0xeb20	                           jmp 0x4006720	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4006700	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4006703	      0xba56555555	                     mov edx, 0x55555556	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4006708	            0x89c8	                            mov eax, ecx	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x400670a	            0xf7ea	                                imul edx	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x400670c	            0x89c8	                            mov eax, ecx	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x400670e	          0xc1f81f	                           sar eax, 0x1f	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4006711	            0x29c2	                            sub edx, eax	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4006713	            0x89d0	                            mov eax, edx	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4006715	             0x1c0	                            add eax, eax	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4006717	             0x1d0	                            add eax, edx	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4006719	            0x29c1	                            sub ecx, eax	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x400671b	            0x89c8	                            mov eax, ecx	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x400671d	          0x8945e4	             mov dword [rbp - 0x1c], eax	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4006720	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3682	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x4006723	          0x2945d0	             sub dword [rbp - 0x30], eax	      3682	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x4006726	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x400672a	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x400672e	          0x6685c0	                             test ax, ax	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4006731	            0x751d	                           jne 0x4006750	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4006733	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4006737	            0x8b00	                    mov eax, dword [rax]	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4006739	          0x83f801	                              cmp eax, 1	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x400673c	            0x7512	                           jne 0x4006750	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x400673e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4006742	         0xfb64008	               movzx eax, byte [rax + 8]	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4006746	           0xfb6c0	                           movzx eax, al	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4006749	          0x83e070	                           and eax, 0x70	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x400674c	            0x85c0	                           test eax, eax	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x400674e	            0x7408	                            je 0x4006758	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4006750	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4006753	           0x145d4	             add dword [rbp - 0x2c], eax	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4006756	            0xeb13	                           jmp 0x400676b	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4006758	        0x837de400	               cmp dword [rbp - 0x1c], 0	      3688	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x400675c	            0x740d	                            je 0x400676b	      3688	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x400675e	        0x8345d003	               add dword [rbp - 0x30], 3	      3689	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x4006762	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3690	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x4006765	          0x83e802	                              sub eax, 2	      3690	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x4006768	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3690	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x400676b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3697	decNumber.c	FUNCTION_68	FUNCTION_63
0x400676f	           0xfb700	                   movzx eax, word [rax]	      3697	decNumber.c	FUNCTION_68	FUNCTION_63
0x4006772	           0xfb7c0	                           movzx eax, ax	      3697	decNumber.c	FUNCTION_68	FUNCTION_63
0x4006775	          0x8945dc	             mov dword [rbp - 0x24], eax	      3697	decNumber.c	FUNCTION_68	FUNCTION_63
0x4006778	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3698	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14
0x400677c	     0xf8e43020000	                           jle 0x40069c5	      3698	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14
0x4006782	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3699	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14
0x4006785	          0x8945ec	             mov dword [rbp - 0x14], eax	      3699	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14
0x4006788	      0xe9fa000000	                           jmp 0x4006887	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x400678d	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3701	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4006791	            0x792b	                           jns 0x40067be	      3701	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4006793	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3702	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15	IF_16
0x4006797	        0x4883c00a	                            add rax, 0xa	      3702	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15	IF_16
0x400679b	        0x483b45f8	                cmp rax, qword [rbp - 8]	      3702	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15	IF_16
0x400679f	     0xf84ee000000	                            je 0x4006893	      3702	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15	IF_16
0x40067a5	      0x48836df802	                  sub qword [rbp - 8], 2	      3703	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x40067aa	    0xc745d8020000	               mov dword [rbp - 0x28], 2	      3704	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x40067b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3705	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x40067b5	           0xfb700	                   movzx eax, word [rax]	      3705	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x40067b8	           0xfb7c0	                           movzx eax, ax	      3705	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x40067bb	          0x8945dc	             mov dword [rbp - 0x24], eax	      3705	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x40067be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067c2	          0xc60030	                    mov byte [rax], 0x30	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067c5	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067c8	            0x4898	                                    cdqe	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067ca	    0x8b0485000000	                  mov eax, dword [rax*4]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067d1	             0x1c0	                            add eax, eax	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067d3	          0x8945e0	             mov dword [rbp - 0x20], eax	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067d6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067d9	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067dc	            0x7654	                           jbe 0x4006832	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067de	        0xc165e002	               shl dword [rbp - 0x20], 2	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067e2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067e5	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067e8	            0x7218	                            jb 0x4006802	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067ea	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067ed	          0x2945dc	             sub dword [rbp - 0x24], eax	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067f0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067f4	           0xfb600	                   movzx eax, byte [rax]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067f7	          0x83c008	                              add eax, 8	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067fa	            0x89c2	                            mov edx, eax	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x40067fc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006800	            0x8810	                      mov byte [rax], dl	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006802	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006805	            0xd1e8	                              shr eax, 1	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006807	          0x8945e0	             mov dword [rbp - 0x20], eax	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400680a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400680d	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006810	            0x7218	                            jb 0x400682a	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006812	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006815	          0x2945dc	             sub dword [rbp - 0x24], eax	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006818	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400681c	           0xfb600	                   movzx eax, byte [rax]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400681f	          0x83c004	                              add eax, 4	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006822	            0x89c2	                            mov edx, eax	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006824	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006828	            0x8810	                      mov byte [rax], dl	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400682a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400682d	            0xd1e8	                              shr eax, 1	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400682f	          0x8945e0	             mov dword [rbp - 0x20], eax	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006832	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006835	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006838	            0x7218	                            jb 0x4006852	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400683a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400683d	          0x2945dc	             sub dword [rbp - 0x24], eax	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006840	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006844	           0xfb600	                   movzx eax, byte [rax]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006847	          0x83c002	                              add eax, 2	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400684a	            0x89c2	                            mov edx, eax	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400684c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006850	            0x8810	                      mov byte [rax], dl	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006852	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006855	            0xd1e8	                              shr eax, 1	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006857	          0x8945e0	             mov dword [rbp - 0x20], eax	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400685a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400685d	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006860	            0x7218	                            jb 0x400687a	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006862	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006865	          0x2945dc	             sub dword [rbp - 0x24], eax	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006868	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400686c	           0xfb600	                   movzx eax, byte [rax]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400686f	          0x83c001	                              add eax, 1	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006872	            0x89c2	                            mov edx, eax	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006874	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4006878	            0x8810	                      mov byte [rax], dl	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400687a	        0x836dd401	               sub dword [rbp - 0x2c], 1	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x400687e	      0x488345f001	               add qword [rbp - 0x10], 1	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x4006883	        0x836dd801	               sub dword [rbp - 0x28], 1	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x4006887	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x400688b	     0xf8ffcfeffff	                            jg 0x400678d	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x4006891	            0xeb01	                           jmp 0x4006894	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x4006893	              0x90	                                     nop	      3702	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15	IF_16
0x4006894	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4006898	            0x8b00	                    mov eax, dword [rax]	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x400689a	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x400689d	     0xf8e17010000	                           jle 0x40069ba	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x40068a3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3710	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x40068a7	          0xc6002e	                    mov byte [rax], 0x2e	      3710	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x40068aa	      0x488345f001	               add qword [rbp - 0x10], 1	      3710	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x40068af	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3712	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x40068b3	            0x792b	                           jns 0x40068e0	      3712	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x40068b5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3713	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18	IF_19
0x40068b9	        0x4883c00a	                            add rax, 0xa	      3713	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18	IF_19
0x40068bd	        0x483b45f8	                cmp rax, qword [rbp - 8]	      3713	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18	IF_19
0x40068c1	     0xf8429020000	                            je 0x4006af0	      3713	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18	IF_19
0x40068c7	      0x48836df802	                  sub qword [rbp - 8], 2	      3714	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x40068cc	    0xc745d8020000	               mov dword [rbp - 0x28], 2	      3715	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x40068d3	        0x488b45f8	                mov rax, qword [rbp - 8]	      3716	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x40068d7	           0xfb700	                   movzx eax, word [rax]	      3716	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x40068da	           0xfb7c0	                           movzx eax, ax	      3716	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x40068dd	          0x8945dc	             mov dword [rbp - 0x24], eax	      3716	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x40068e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40068e4	          0xc60030	                    mov byte [rax], 0x30	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40068e7	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40068ea	            0x4898	                                    cdqe	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40068ec	    0x8b0485000000	                  mov eax, dword [rax*4]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40068f3	             0x1c0	                            add eax, eax	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40068f5	          0x8945e0	             mov dword [rbp - 0x20], eax	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40068f8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40068fb	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40068fe	            0x7654	                           jbe 0x4006954	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006900	        0xc165e002	               shl dword [rbp - 0x20], 2	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006904	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006907	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400690a	            0x7218	                            jb 0x4006924	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400690c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400690f	          0x2945dc	             sub dword [rbp - 0x24], eax	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006912	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006916	           0xfb600	                   movzx eax, byte [rax]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006919	          0x83c008	                              add eax, 8	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400691c	            0x89c2	                            mov edx, eax	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400691e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006922	            0x8810	                      mov byte [rax], dl	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006924	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006927	            0xd1e8	                              shr eax, 1	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006929	          0x8945e0	             mov dword [rbp - 0x20], eax	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400692c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400692f	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006932	            0x7218	                            jb 0x400694c	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006934	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006937	          0x2945dc	             sub dword [rbp - 0x24], eax	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400693a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400693e	           0xfb600	                   movzx eax, byte [rax]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006941	          0x83c004	                              add eax, 4	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006944	            0x89c2	                            mov edx, eax	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006946	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400694a	            0x8810	                      mov byte [rax], dl	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400694c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400694f	            0xd1e8	                              shr eax, 1	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006951	          0x8945e0	             mov dword [rbp - 0x20], eax	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006954	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006957	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400695a	            0x7218	                            jb 0x4006974	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400695c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400695f	          0x2945dc	             sub dword [rbp - 0x24], eax	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006962	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006966	           0xfb600	                   movzx eax, byte [rax]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006969	          0x83c002	                              add eax, 2	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400696c	            0x89c2	                            mov edx, eax	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400696e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006972	            0x8810	                      mov byte [rax], dl	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006974	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006977	            0xd1e8	                              shr eax, 1	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006979	          0x8945e0	             mov dword [rbp - 0x20], eax	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400697c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400697f	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006982	            0x7218	                            jb 0x400699c	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006984	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006987	          0x2945dc	             sub dword [rbp - 0x24], eax	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400698a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400698e	           0xfb600	                   movzx eax, byte [rax]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006991	          0x83c001	                              add eax, 1	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006994	            0x89c2	                            mov edx, eax	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4006996	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400699a	            0x8810	                      mov byte [rax], dl	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400699c	      0x488345f001	               add qword [rbp - 0x10], 1	      3711	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4
0x40069a1	        0x836dd801	               sub dword [rbp - 0x28], 1	      3711	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4
0x40069a5	      0xe905ffffff	                           jmp 0x40068af	      3719	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4
0x40069aa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x40069ae	          0xc60030	                    mov byte [rax], 0x30	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x40069b1	        0x836dd401	               sub dword [rbp - 0x2c], 1	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x40069b5	      0x488345f001	               add qword [rbp - 0x10], 1	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x40069ba	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x40069be	            0x7fea	                            jg 0x40069aa	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x40069c0	      0xe92f010000	                           jmp 0x4006af4	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x40069c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3724	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4
0x40069c9	          0xc60030	                    mov byte [rax], 0x30	      3724	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4
0x40069cc	      0x488345f001	               add qword [rbp - 0x10], 1	      3724	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4
0x40069d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3725	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4
0x40069d5	          0xc6002e	                    mov byte [rax], 0x2e	      3725	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4
0x40069d8	      0x488345f001	               add qword [rbp - 0x10], 1	      3725	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4
0x40069dd	            0xeb10	                           jmp 0x40069ef	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40069df	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40069e3	          0xc60030	                    mov byte [rax], 0x30	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40069e6	        0x8345d401	               add dword [rbp - 0x2c], 1	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40069ea	      0x488345f001	               add qword [rbp - 0x10], 1	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40069ef	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40069f3	            0x78ea	                            js 0x40069df	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40069f5	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3728	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x40069f9	            0x792b	                           jns 0x4006a26	      3728	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x40069fb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3729	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20	IF_21
0x40069ff	        0x4883c00a	                            add rax, 0xa	      3729	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20	IF_21
0x4006a03	        0x483b45f8	                cmp rax, qword [rbp - 8]	      3729	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20	IF_21
0x4006a07	     0xf84e6000000	                            je 0x4006af3	      3729	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20	IF_21
0x4006a0d	      0x48836df802	                  sub qword [rbp - 8], 2	      3730	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4006a12	    0xc745d8020000	               mov dword [rbp - 0x28], 2	      3731	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4006a19	        0x488b45f8	                mov rax, qword [rbp - 8]	      3732	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4006a1d	           0xfb700	                   movzx eax, word [rax]	      3732	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4006a20	           0xfb7c0	                           movzx eax, ax	      3732	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4006a23	          0x8945dc	             mov dword [rbp - 0x24], eax	      3732	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4006a26	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a2a	          0xc60030	                    mov byte [rax], 0x30	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a2d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a30	            0x4898	                                    cdqe	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a32	    0x8b0485000000	                  mov eax, dword [rax*4]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a39	             0x1c0	                            add eax, eax	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a3b	          0x8945e0	             mov dword [rbp - 0x20], eax	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a3e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a41	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a44	            0x7654	                           jbe 0x4006a9a	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a46	        0xc165e002	               shl dword [rbp - 0x20], 2	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a4a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a4d	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a50	            0x7218	                            jb 0x4006a6a	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a52	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a55	          0x2945dc	             sub dword [rbp - 0x24], eax	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a58	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a5c	           0xfb600	                   movzx eax, byte [rax]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a5f	          0x83c008	                              add eax, 8	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a62	            0x89c2	                            mov edx, eax	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a64	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a68	            0x8810	                      mov byte [rax], dl	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a6a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a6d	            0xd1e8	                              shr eax, 1	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a6f	          0x8945e0	             mov dword [rbp - 0x20], eax	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a72	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a75	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a78	            0x7218	                            jb 0x4006a92	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a7a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a7d	          0x2945dc	             sub dword [rbp - 0x24], eax	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a80	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a84	           0xfb600	                   movzx eax, byte [rax]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a87	          0x83c004	                              add eax, 4	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a8a	            0x89c2	                            mov edx, eax	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a8c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a90	            0x8810	                      mov byte [rax], dl	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a92	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a95	            0xd1e8	                              shr eax, 1	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a97	          0x8945e0	             mov dword [rbp - 0x20], eax	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a9a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006a9d	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006aa0	            0x7218	                            jb 0x4006aba	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006aa2	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006aa5	          0x2945dc	             sub dword [rbp - 0x24], eax	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006aa8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006aac	           0xfb600	                   movzx eax, byte [rax]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006aaf	          0x83c002	                              add eax, 2	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006ab2	            0x89c2	                            mov edx, eax	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006ab4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006ab8	            0x8810	                      mov byte [rax], dl	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006aba	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006abd	            0xd1e8	                              shr eax, 1	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006abf	          0x8945e0	             mov dword [rbp - 0x20], eax	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006ac2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006ac5	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006ac8	            0x7218	                            jb 0x4006ae2	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006aca	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006acd	          0x2945dc	             sub dword [rbp - 0x24], eax	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006ad0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006ad4	           0xfb600	                   movzx eax, byte [rax]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006ad7	          0x83c001	                              add eax, 1	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006ada	            0x89c2	                            mov edx, eax	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006adc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006ae0	            0x8810	                      mov byte [rax], dl	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4006ae2	      0x488345f001	               add qword [rbp - 0x10], 1	      3727	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7
0x4006ae7	        0x836dd801	               sub dword [rbp - 0x28], 1	      3727	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7
0x4006aeb	      0xe905ffffff	                           jmp 0x40069f5	      3735	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7
0x4006af0	              0x90	                                     nop	      3713	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18	IF_19
0x4006af1	            0xeb01	                           jmp 0x4006af4	      3713	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18	IF_19
0x4006af3	              0x90	                                     nop	      3729	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20	IF_21
0x4006af4	        0x837dd000	               cmp dword [rbp - 0x30], 0	      3741	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4006af8	     0xf842e010000	                            je 0x4006c2c	      3741	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4006afe	        0xc645cf00	                mov byte [rbp - 0x31], 0	      3742	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4006b02	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3743	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4006b06	          0xc60045	                    mov byte [rax], 0x45	      3743	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4006b09	      0x488345f001	               add qword [rbp - 0x10], 1	      3743	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4006b0e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3744	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4006b12	          0xc6002b	                    mov byte [rax], 0x2b	      3744	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4006b15	      0x488345f001	               add qword [rbp - 0x10], 1	      3744	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4006b1a	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      3745	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4006b1d	          0x8945dc	             mov dword [rbp - 0x24], eax	      3745	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4006b20	        0x837dd000	               cmp dword [rbp - 0x30], 0	      3746	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4006b24	            0x7913	                           jns 0x4006b39	      3746	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4006b26	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3747	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4006b2a	        0x4883e801	                              sub rax, 1	      3747	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4006b2e	          0xc6002d	                    mov byte [rax], 0x2d	      3747	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4006b31	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      3748	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4006b34	            0xf7d8	                                 neg eax	      3748	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4006b36	          0x8945dc	             mov dword [rbp - 0x24], eax	      3748	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4006b39	    0xc745d8090000	               mov dword [rbp - 0x28], 9	      3751	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4006b40	      0xe9dd000000	                           jmp 0x4006c22	      3751	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4006b45	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b49	          0xc60030	                    mov byte [rax], 0x30	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b4c	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b4f	            0x4898	                                    cdqe	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b51	    0x8b0485000000	                  mov eax, dword [rax*4]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b58	             0x1c0	                            add eax, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b5a	          0x8945e0	             mov dword [rbp - 0x20], eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b5d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b60	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b63	            0x7654	                           jbe 0x4006bb9	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b65	        0xc165e002	               shl dword [rbp - 0x20], 2	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b69	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b6c	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b6f	            0x7218	                            jb 0x4006b89	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b71	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b74	          0x2945dc	             sub dword [rbp - 0x24], eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b77	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b7b	           0xfb600	                   movzx eax, byte [rax]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b7e	          0x83c008	                              add eax, 8	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b81	            0x89c2	                            mov edx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b83	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b87	            0x8810	                      mov byte [rax], dl	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b89	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b8c	            0xd1e8	                              shr eax, 1	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b8e	          0x8945e0	             mov dword [rbp - 0x20], eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b91	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b94	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b97	            0x7218	                            jb 0x4006bb1	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b99	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b9c	          0x2945dc	             sub dword [rbp - 0x24], eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006b9f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006ba3	           0xfb600	                   movzx eax, byte [rax]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006ba6	          0x83c004	                              add eax, 4	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006ba9	            0x89c2	                            mov edx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bab	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006baf	            0x8810	                      mov byte [rax], dl	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bb1	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bb4	            0xd1e8	                              shr eax, 1	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bb6	          0x8945e0	             mov dword [rbp - 0x20], eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bb9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bbc	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bbf	            0x7218	                            jb 0x4006bd9	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bc1	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bc4	          0x2945dc	             sub dword [rbp - 0x24], eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bc7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bcb	           0xfb600	                   movzx eax, byte [rax]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bce	          0x83c002	                              add eax, 2	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bd1	            0x89c2	                            mov edx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bd3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bd7	            0x8810	                      mov byte [rax], dl	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bd9	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bdc	            0xd1e8	                              shr eax, 1	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bde	          0x8945e0	             mov dword [rbp - 0x20], eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006be1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006be4	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006be7	            0x7218	                            jb 0x4006c01	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006be9	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bec	          0x2945dc	             sub dword [rbp - 0x24], eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bf3	           0xfb600	                   movzx eax, byte [rax]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bf6	          0x83c001	                              add eax, 1	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bf9	            0x89c2	                            mov edx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bfb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006bff	            0x8810	                      mov byte [rax], dl	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4006c01	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4006c05	           0xfb600	                   movzx eax, byte [rax]	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4006c08	            0x3c30	                            cmp al, 0x30	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4006c0a	            0x7506	                           jne 0x4006c12	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4006c0c	        0x807dcf00	                cmp byte [rbp - 0x31], 0	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4006c10	            0x740b	                            je 0x4006c1d	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4006c12	        0xc645cf01	                mov byte [rbp - 0x31], 1	      3754	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4006c16	      0x488345f001	               add qword [rbp - 0x10], 1	      3755	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4006c1b	            0xeb01	                           jmp 0x4006c1e	      3755	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4006c1d	              0x90	                                     nop	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4006c1e	        0x836dd801	               sub dword [rbp - 0x28], 1	      3751	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4006c22	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3751	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4006c26	     0xf8919ffffff	                           jns 0x4006b45	      3751	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4006c2c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3758	decNumber.c	FUNCTION_68	FUNCTION_63
0x4006c30	          0xc60000	                       mov byte [rax], 0	      3758	decNumber.c	FUNCTION_68	FUNCTION_63
0x4006c33	              0x90	                                     nop	      3759	decNumber.c	FUNCTION_68	FUNCTION_63
0x4006c34	            0xeb01	                           jmp 0x4006c37	      3759	decNumber.c	FUNCTION_68	FUNCTION_63
0x4006c36	              0x90	                                     nop	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x4006c37	              0x5d	                                 pop rbp	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4006c38	              0xc3	                                     ret	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
decNumberSubtract	SWITCH,0:IF,1:FOR,0:CALL,3:DO,0:ELSE,0:WHILE,0:functions,0	36
0x400569e	              0x55	                                push rbp	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x400569f	          0x4889e5	                            mov rbp, rsp	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40056a2	        0x4883ec30	                           sub rsp, 0x30	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40056a6	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40056aa	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40056ae	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40056b2	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40056b6	    0x64488b042528	                mov rax, qword fs:[0x28]	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40056bf	        0x488945f8	                mov qword [rbp - 8], rax	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40056c3	            0x31c0	                            xor eax, eax	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40056c5	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      3141	decNumber.c	FUNCTION_68	FUNCTION_46
0x40056cc	        0x488d7df4	                    lea rdi, [rbp - 0xc]	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x40056d0	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x40056d4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x40056d8	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x40056dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x40056e0	          0x4989f9	                             mov r9, rdi	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x40056e3	    0x41b880000000	                           mov r8d, 0x80	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x40056e9	          0x4889c7	                            mov rdi, rax	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x40056ec	      0xe848150000	                       call sym.decAddOp	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x40056f1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x40056f4	            0x85c0	                           test eax, eax	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x40056f6	            0x7415	                            je 0x400570d	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x40056f8	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x40056fb	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x40056ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x4005703	            0x89ce	                            mov esi, ecx	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x4005705	          0x4889c7	                            mov rdi, rax	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x4005708	      0xe80b8d0000	                      call sym.decStatus	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x400570d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3148	decNumber.c	FUNCTION_68	FUNCTION_46
0x4005711	        0x488b75f8	                mov rsi, qword [rbp - 8]	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4005715	    0x644833342528	                xor rsi, qword fs:[0x28]	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x400571e	            0x7405	                            je 0x4005725	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4005720	      0xe800000000	                          call 0x4005725	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4005725	              0xc9	                                   leave	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4005726	              0xc3	                                     ret	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
decReverse	SWITCH,0:IF,0:FOR,1:CALL,0:DO,0:ELSE,0:WHILE,0:functions,0	23
0x400c882	              0x55	                                push rbp	      6656	decNumber.c	FUNCTION_7
0x400c883	          0x4889e5	                            mov rbp, rsp	      6656	decNumber.c	FUNCTION_7
0x400c886	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6656	decNumber.c	FUNCTION_7
0x400c88a	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6656	decNumber.c	FUNCTION_7
0x400c88e	            0xeb2e	                           jmp 0x400c8be	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400c890	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6659	decNumber.c	FUNCTION_7	FOR_1
0x400c894	           0xfb700	                   movzx eax, word [rax]	      6659	decNumber.c	FUNCTION_7	FOR_1
0x400c897	        0x668945fe	                  mov word [rbp - 2], ax	      6659	decNumber.c	FUNCTION_7	FOR_1
0x400c89b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6660	decNumber.c	FUNCTION_7	FOR_1
0x400c89f	           0xfb710	                   movzx edx, word [rax]	      6660	decNumber.c	FUNCTION_7	FOR_1
0x400c8a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6660	decNumber.c	FUNCTION_7	FOR_1
0x400c8a6	          0x668910	                      mov word [rax], dx	      6660	decNumber.c	FUNCTION_7	FOR_1
0x400c8a9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6661	decNumber.c	FUNCTION_7	FOR_1
0x400c8ad	         0xfb755fe	               movzx edx, word [rbp - 2]	      6661	decNumber.c	FUNCTION_7	FOR_1
0x400c8b1	          0x668910	                      mov word [rax], dx	      6661	decNumber.c	FUNCTION_7	FOR_1
0x400c8b4	      0x488345e802	               add qword [rbp - 0x18], 2	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400c8b9	      0x48836de002	               sub qword [rbp - 0x20], 2	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400c8be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400c8c2	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400c8c6	            0x72c8	                            jb 0x400c890	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400c8c8	              0x90	                                     nop	      6663	decNumber.c	FUNCTION_7
0x400c8c9	              0x5d	                                 pop rbp	      6664	decNumber.c	FUNCTION_7
0x400c8ca	              0xc3	                                     ret	      6664	decNumber.c	FUNCTION_7
decMultiplyOp	SWITCH,0:IF,22:FOR,11:CALL,16:DO,1:ELSE,3:WHILE,0:functions,0	699
0x4009101	              0x55	                                push rbp	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009102	          0x4889e5	                            mov rbp, rsp	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009105	    0x4881ec900200	                          sub rsp, 0x290	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x400910c	    0x4889bd98fdff	            mov qword [rbp - 0x268], rdi	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009113	    0x4889b590fdff	            mov qword [rbp - 0x270], rsi	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x400911a	    0x48899588fdff	            mov qword [rbp - 0x278], rdx	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009121	    0x48898d80fdff	            mov qword [rbp - 0x280], rcx	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009128	    0x4c898578fdff	             mov qword [rbp - 0x288], r8	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x400912f	    0x64488b042528	                mov rax, qword fs:[0x28]	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009138	        0x488945f8	                mov qword [rbp - 8], rax	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x400913c	            0x31c0	                            xor eax, eax	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x400913e	    0xc785b0fdffff	              mov dword [rbp - 0x250], 0	      4836	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009148	    0x48c785f8fdff	              mov qword [rbp - 0x208], 0	      4840	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009153	    0x488d8580feff	                  lea rax, [rbp - 0x180]	      4863	decNumber.c	FUNCTION_68	FUNCTION_66
0x400915a	    0x48898508feff	            mov qword [rbp - 0x1f8], rax	      4863	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009161	    0x48c78510feff	              mov qword [rbp - 0x1f0], 0	      4864	decNumber.c	FUNCTION_68	FUNCTION_66
0x400916c	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      4866	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009173	    0x48898518feff	            mov qword [rbp - 0x1e8], rax	      4866	decNumber.c	FUNCTION_68	FUNCTION_66
0x400917a	    0x48c78520feff	              mov qword [rbp - 0x1e0], 0	      4867	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009185	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      4870	decNumber.c	FUNCTION_68	FUNCTION_66
0x400918c	    0x48898528feff	            mov qword [rbp - 0x1d8], rax	      4870	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009193	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x400919a	         0xfb65008	               movzx edx, byte [rax + 8]	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x400919e	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x40091a5	         0xfb64008	               movzx eax, byte [rax + 8]	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x40091a9	            0x31d0	                            xor eax, edx	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x40091ab	          0x83e080	                     and eax, 0xffffff80	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x40091ae	    0x8885affdffff	              mov byte [rbp - 0x251], al	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x40091b4	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x40091bb	         0xfb65008	               movzx edx, byte [rax + 8]	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x40091bf	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x40091c6	         0xfb64008	               movzx eax, byte [rax + 8]	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x40091ca	             0x9d0	                             or eax, edx	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x40091cc	           0xfb6c0	                           movzx eax, al	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x40091cf	          0x83e070	                           and eax, 0x70	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x40091d2	            0x85c0	                           test eax, eax	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x40091d4	     0xf843f010000	                            je 0x4009319	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x40091da	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4901	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x40091e1	         0xfb65008	               movzx edx, byte [rax + 8]	      4901	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x40091e5	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      4901	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x40091ec	         0xfb64008	               movzx eax, byte [rax + 8]	      4901	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x40091f0	             0x9d0	                             or eax, edx	      4901	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x40091f2	           0xfb6c0	                           movzx eax, al	      4901	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x40091f5	          0x83e030	                           and eax, 0x30	      4901	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x40091f8	            0x85c0	                           test eax, eax	      4901	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x40091fa	            0x743a	                            je 0x4009236	      4901	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x40091fc	    0x488bbd78fdff	            mov rdi, qword [rbp - 0x288]	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x4009203	    0x488b8d80fdff	            mov rcx, qword [rbp - 0x280]	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x400920a	    0x488b9588fdff	            mov rdx, qword [rbp - 0x278]	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x4009211	    0x488bb590fdff	            mov rsi, qword [rbp - 0x270]	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x4009218	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x400921f	          0x4989f8	                             mov r8, rdi	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x4009222	          0x4889c7	                            mov rdi, rax	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x4009225	      0xe8e84f0000	                        call sym.decNaNs	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x400922a	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      4903	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x4009231	      0xe9c90b0000	                           jmp 0x4009dff	      4903	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x4009236	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x400923d	         0xfb64008	               movzx eax, byte [rax + 8]	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4009241	           0xfb6c0	                           movzx eax, al	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4009244	          0x83e040	                           and eax, 0x40	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4009247	            0x85c0	                           test eax, eax	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4009249	            0x7533	                           jne 0x400927e	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x400924b	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4009252	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4009256	          0x6685c0	                             test ax, ax	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4009259	            0x7523	                           jne 0x400927e	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x400925b	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4009262	            0x8b00	                    mov eax, dword [rax]	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4009264	          0x83f801	                              cmp eax, 1	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4009267	            0x7515	                           jne 0x400927e	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4009269	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4009270	         0xfb64008	               movzx eax, byte [rax + 8]	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4009274	           0xfb6c0	                           movzx eax, al	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4009277	          0x83e070	                           and eax, 0x70	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x400927a	            0x85c0	                           test eax, eax	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x400927c	            0x7448	                            je 0x40092c6	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x400927e	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4009285	         0xfb64008	               movzx eax, byte [rax + 8]	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4009289	           0xfb6c0	                           movzx eax, al	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x400928c	          0x83e040	                           and eax, 0x40	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x400928f	            0x85c0	                           test eax, eax	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4009291	            0x7555	                           jne 0x40092e8	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4009293	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x400929a	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x400929e	          0x6685c0	                             test ax, ax	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40092a1	            0x7545	                           jne 0x40092e8	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40092a3	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40092aa	            0x8b00	                    mov eax, dword [rax]	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40092ac	          0x83f801	                              cmp eax, 1	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40092af	            0x7537	                           jne 0x40092e8	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40092b1	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40092b8	         0xfb64008	               movzx eax, byte [rax + 8]	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40092bc	           0xfb6c0	                           movzx eax, al	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40092bf	          0x83e070	                           and eax, 0x70	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40092c2	            0x85c0	                           test eax, eax	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40092c4	            0x7522	                           jne 0x40092e8	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40092c6	    0x488b8578fdff	            mov rax, qword [rbp - 0x288]	      4907	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x40092cd	            0x8b00	                    mov eax, dword [rax]	      4907	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x40092cf	             0xc80	                             or al, 0x80	      4907	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x40092d1	            0x89c2	                            mov edx, eax	      4907	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x40092d3	    0x488b8578fdff	            mov rax, qword [rbp - 0x288]	      4907	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x40092da	            0x8910	                    mov dword [rax], edx	      4907	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x40092dc	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      4908	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x40092e3	      0xe9170b0000	                           jmp 0x4009dff	      4908	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x40092e8	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      4909	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	CALL_6
0x40092ef	          0x4889c7	                            mov rdi, rax	      4909	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	CALL_6
0x40092f2	      0xe800000000	                          call 0x40092f7	      4909	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	CALL_6
0x40092f7	     0xfb685affdff	           movzx eax, byte [rbp - 0x251]	      4910	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x40092fe	          0x83c840	                            or eax, 0x40	      4910	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4009301	            0x89c2	                            mov edx, eax	      4910	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4009303	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      4910	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x400930a	          0x885008	                  mov byte [rax + 8], dl	      4910	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x400930d	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      4911	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4009314	      0xe9e60a0000	                           jmp 0x4009dff	      4911	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4009319	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4009320	            0x8b10	                    mov edx, dword [rax]	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4009322	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4009329	            0x8b00	                    mov eax, dword [rax]	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x400932b	            0x39c2	                            cmp edx, eax	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x400932d	            0x7d2a	                           jge 0x4009359	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x400932f	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4918	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4009336	    0x48898558feff	            mov qword [rbp - 0x1a8], rax	      4918	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x400933d	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      4919	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4009344	    0x48898590fdff	            mov qword [rbp - 0x270], rax	      4919	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x400934b	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      4920	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4009352	    0x48898588fdff	            mov qword [rbp - 0x278], rax	      4920	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4009359	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      4945	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009360	            0x8b00	                    mov eax, dword [rax]	      4945	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009362	          0x83f806	                              cmp eax, 6	      4945	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009365	     0xf8ec2060000	                           jle 0x4009a2d	      4945	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400936b	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009372	            0x8b00	                    mov eax, dword [rax]	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009374	          0x8d4808	                      lea ecx, [rax + 8]	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009377	      0xba398ee338	                     mov edx, 0x38e38e39	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400937c	            0x89c8	                            mov eax, ecx	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400937e	            0xf7ea	                                imul edx	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009380	            0xd1fa	                              sar edx, 1	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009382	            0x89c8	                            mov eax, ecx	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009384	          0xc1f81f	                           sar eax, 0x1f	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009387	            0x29c2	                            sub edx, eax	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009389	            0x89d0	                            mov eax, edx	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400938b	    0x8985d4fdffff	            mov dword [rbp - 0x22c], eax	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009391	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009398	            0x8b00	                    mov eax, dword [rax]	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400939a	          0x8d4808	                      lea ecx, [rax + 8]	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400939d	      0xba398ee338	                     mov edx, 0x38e38e39	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40093a2	            0x89c8	                            mov eax, ecx	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40093a4	            0xf7ea	                                imul edx	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40093a6	            0xd1fa	                              sar edx, 1	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40093a8	            0x89c8	                            mov eax, ecx	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40093aa	          0xc1f81f	                           sar eax, 0x1f	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40093ad	            0x29c2	                            sub edx, eax	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40093af	            0x89d0	                            mov eax, edx	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40093b1	    0x8985d8fdffff	            mov dword [rbp - 0x228], eax	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40093b7	    0x8b95d4fdffff	            mov edx, dword [rbp - 0x22c]	      4949	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40093bd	    0x8b85d8fdffff	            mov eax, dword [rbp - 0x228]	      4949	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40093c3	             0x1d0	                            add eax, edx	      4949	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40093c5	    0x8985dcfdffff	            mov dword [rbp - 0x224], eax	      4949	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40093cb	    0x8b85d4fdffff	            mov eax, dword [rbp - 0x22c]	      4952	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40093d1	          0xc1e002	                              shl eax, 2	      4952	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40093d4	    0x8985e0fdffff	            mov dword [rbp - 0x220], eax	      4952	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40093da	    0x83bde0fdffff	          cmp dword [rbp - 0x220], 0x28 	      4953	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40093e1	            0x7e25	                           jle 0x4009408	      4953	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40093e3	    0x8b85e0fdffff	            mov eax, dword [rbp - 0x220]	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40093e9	            0x4898	                                    cdqe	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40093eb	          0x4889c7	                            mov rdi, rax	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40093ee	      0xe800000000	                          call 0x40093f3	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40093f3	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40093fa	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      4955	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x4009401	    0x48898508feff	            mov qword [rbp - 0x1f8], rax	      4955	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x4009408	    0x8b85d8fdffff	            mov eax, dword [rbp - 0x228]	      4956	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400940e	          0xc1e002	                              shl eax, 2	      4956	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009411	    0x8985e0fdffff	            mov dword [rbp - 0x220], eax	      4956	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009417	    0x83bde0fdffff	          cmp dword [rbp - 0x220], 0x28 	      4957	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x400941e	            0x7e25	                           jle 0x4009445	      4957	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4009420	    0x8b85e0fdffff	            mov eax, dword [rbp - 0x220]	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4009426	            0x4898	                                    cdqe	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4009428	          0x4889c7	                            mov rdi, rax	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x400942b	      0xe800000000	                          call 0x4009430	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4009430	    0x48898520feff	            mov qword [rbp - 0x1e0], rax	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4009437	    0x488b8520feff	            mov rax, qword [rbp - 0x1e0]	      4959	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x400943e	    0x48898518feff	            mov qword [rbp - 0x1e8], rax	      4959	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4009445	    0x8b85dcfdffff	            mov eax, dword [rbp - 0x224]	      4968	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400944b	          0xc1e003	                              shl eax, 3	      4968	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400944e	    0x8985e0fdffff	            mov dword [rbp - 0x220], eax	      4968	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009454	    0x81bde0fdffff	          cmp dword [rbp - 0x220], 0xa0 	      4973	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x400945e	            0x7e25	                           jle 0x4009485	      4973	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4009460	    0x8b85e0fdffff	            mov eax, dword [rbp - 0x220]	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4009466	            0x4898	                                    cdqe	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4009468	          0x4889c7	                            mov rdi, rax	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x400946b	      0xe800000000	                          call 0x4009470	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4009470	    0x488985f8fdff	            mov qword [rbp - 0x208], rax	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4009477	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      4975	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x400947e	    0x48898528feff	            mov qword [rbp - 0x1d8], rax	      4975	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4009485	    0x4883bd08feff	              cmp qword [rbp - 0x1f8], 0	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x400948d	            0x7414	                            je 0x40094a3	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x400948f	    0x4883bd18feff	              cmp qword [rbp - 0x1e8], 0	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4009497	            0x740a	                            je 0x40094a3	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4009499	    0x4883bd28feff	              cmp qword [rbp - 0x1d8], 0	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x40094a1	            0x751c	                           jne 0x40094bf	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x40094a3	    0x488b8578fdff	            mov rax, qword [rbp - 0x288]	      4977	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x40094aa	            0x8b00	                    mov eax, dword [rax]	      4977	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x40094ac	          0x83c810	                            or eax, 0x10	      4977	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x40094af	            0x89c2	                            mov edx, eax	      4977	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x40094b1	    0x488b8578fdff	            mov rax, qword [rbp - 0x288]	      4977	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x40094b8	            0x8910	                    mov dword [rax], edx	      4977	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x40094ba	      0xe90c090000	                           jmp 0x4009dcb	      4978	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x40094bf	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      4980	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40094c6	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	      4980	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40094cd	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x40094d4	            0x8b00	                    mov eax, dword [rax]	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x40094d6	    0x8985c8fdffff	            mov dword [rbp - 0x238], eax	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x40094dc	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x40094e3	        0x4883c00a	                            add rax, 0xa	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x40094e7	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x40094ee	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x40094f5	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x40094fc	            0xeb7c	                           jmp 0x400957a	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x40094fe	    0xc785ccfdffff	              mov dword [rbp - 0x234], 0	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4009508	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400950f	    0xc70000000000	                      mov dword [rax], 0	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4009515	            0xeb49	                           jmp 0x4009560	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4009517	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400951e	            0x8b10	                    mov edx, dword [rax]	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4009520	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4009527	           0xfb700	                   movzx eax, word [rax]	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400952a	           0xfb7c8	                           movzx ecx, ax	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400952d	    0x8b85ccfdffff	            mov eax, dword [rbp - 0x234]	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4009533	            0x4898	                                    cdqe	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4009535	    0x8b0485000000	                  mov eax, dword [rax*4]	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400953c	           0xfafc1	                           imul eax, ecx	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400953f	             0x1c2	                            add edx, eax	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4009541	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4009548	            0x8910	                    mov dword [rax], edx	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400954a	    0x8385ccfdffff	              add dword [rbp - 0x234], 3	      4988	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4009551	    0x48838540feff	              add qword [rbp - 0x1c0], 2	      4988	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4009559	    0x83adc8fdffff	              sub dword [rbp - 0x238], 3	      4988	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4009560	    0x83bdccfdffff	              cmp dword [rbp - 0x234], 8	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4009567	            0x7f09	                            jg 0x4009572	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4009569	    0x83bdc8fdffff	              cmp dword [rbp - 0x238], 0	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4009570	            0x7fa5	                            jg 0x4009517	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4009572	    0x48838530feff	              add qword [rbp - 0x1d0], 4	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x400957a	    0x83bdc8fdffff	              cmp dword [rbp - 0x238], 0	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4009581	     0xf8f77ffffff	                            jg 0x40094fe	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4009587	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      4990	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400958e	        0x4883e804	                              sub rax, 4	      4990	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009592	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      4990	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009599	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x40095a0	            0x8b00	                    mov eax, dword [rax]	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x40095a2	    0x8985c8fdffff	            mov dword [rbp - 0x238], eax	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x40095a8	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x40095af	        0x4883c00a	                            add rax, 0xa	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x40095b3	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x40095ba	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x40095c1	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x40095c8	            0xeb7c	                           jmp 0x4009646	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x40095ca	    0xc785ccfdffff	              mov dword [rbp - 0x234], 0	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40095d4	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40095db	    0xc70000000000	                      mov dword [rax], 0	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40095e1	            0xeb49	                           jmp 0x400962c	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40095e3	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40095ea	            0x8b10	                    mov edx, dword [rax]	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40095ec	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40095f3	           0xfb700	                   movzx eax, word [rax]	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40095f6	           0xfb7c8	                           movzx ecx, ax	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40095f9	    0x8b85ccfdffff	            mov eax, dword [rbp - 0x234]	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40095ff	            0x4898	                                    cdqe	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4009601	    0x8b0485000000	                  mov eax, dword [rax*4]	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4009608	           0xfafc1	                           imul eax, ecx	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400960b	             0x1c2	                            add edx, eax	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400960d	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4009614	            0x8910	                    mov dword [rax], edx	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4009616	    0x8385ccfdffff	              add dword [rbp - 0x234], 3	      4993	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400961d	    0x48838540feff	              add qword [rbp - 0x1c0], 2	      4993	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4009625	    0x83adc8fdffff	              sub dword [rbp - 0x238], 3	      4993	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400962c	    0x83bdccfdffff	              cmp dword [rbp - 0x234], 8	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4009633	            0x7f09	                            jg 0x400963e	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4009635	    0x83bdc8fdffff	              cmp dword [rbp - 0x238], 0	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400963c	            0x7fa5	                            jg 0x40095e3	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400963e	    0x48838538feff	              add qword [rbp - 0x1c8], 4	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x4009646	    0x83bdc8fdffff	              cmp dword [rbp - 0x238], 0	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x400964d	     0xf8f77ffffff	                            jg 0x40095ca	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x4009653	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      4995	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400965a	        0x4883e804	                              sub rax, 4	      4995	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400965e	    0x48898568feff	            mov qword [rbp - 0x198], rax	      4995	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009665	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x400966c	    0x48898550feff	            mov qword [rbp - 0x1b0], rax	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x4009673	            0xeb16	                           jmp 0x400968b	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x4009675	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x400967c	    0x48c700000000	                      mov qword [rax], 0	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x4009683	    0x48838550feff	              add qword [rbp - 0x1b0], 8	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x400968b	    0x8b85dcfdffff	            mov eax, dword [rbp - 0x224]	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x4009691	            0x4898	                                    cdqe	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x4009693	    0x488d14c50000	                        lea rdx, [rax*8]	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x400969b	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40096a2	          0x4801d0	                            add rax, rdx	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40096a5	    0x483b8550feff	            cmp rax, qword [rbp - 0x1b0]	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40096ac	            0x77c7	                            ja 0x4009675	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40096ae	    0xc785c0fdffff	          mov dword [rbp - 0x240], 0x12 	      5017	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40096b8	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40096bf	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40096c6	      0xe94b020000	                           jmp 0x4009916	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40096cb	    0x488b9538feff	            mov rdx, qword [rbp - 0x1c8]	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40096d2	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40096d9	          0x4829c2	                            sub rdx, rax	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40096dc	          0x4889d0	                            mov rax, rdx	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40096df	        0x48c1f802	                              sar rax, 2	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40096e3	    0x488d14c50000	                        lea rdx, [rax*8]	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40096eb	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40096f2	          0x4801d0	                            add rax, rdx	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40096f5	    0x48898550feff	            mov qword [rbp - 0x1b0], rax	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40096fc	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4009703	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400970a	            0xeb41	                           jmp 0x400974d	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400970c	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4009713	          0x488b10	                    mov rdx, qword [rax]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4009716	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400971d	            0x8b00	                    mov eax, dword [rax]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400971f	            0x89c1	                            mov ecx, eax	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4009721	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4009728	            0x8b00	                    mov eax, dword [rax]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400972a	            0x89c0	                            mov eax, eax	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400972c	        0x480fafc1	                           imul rax, rcx	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4009730	          0x4801c2	                            add rdx, rax	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4009733	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400973a	          0x488910	                    mov qword [rax], rdx	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400973d	    0x48838530feff	              add qword [rbp - 0x1d0], 4	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4009745	    0x48838550feff	              add qword [rbp - 0x1b0], 8	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400974d	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4009754	    0x483b8560feff	            cmp rax, qword [rbp - 0x1a0]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400975b	            0x76af	                           jbe 0x400970c	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400975d	    0x83adc0fdffff	              sub dword [rbp - 0x240], 1	      5023	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4009764	    0x83bdc0fdffff	              cmp dword [rbp - 0x240], 0	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x400976b	            0x7e14	                           jle 0x4009781	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x400976d	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x4009774	    0x483b8568feff	            cmp rax, qword [rbp - 0x198]	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x400977b	     0xf858c010000	                           jne 0x400990d	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x4009781	    0xc785c0fdffff	          mov dword [rbp - 0x240], 0x12 	      5025	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x400978b	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4009792	    0x48898550feff	            mov qword [rbp - 0x1b0], rax	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4009799	      0xe946010000	                           jmp 0x40098e4	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x400979e	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5028	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_17
0x40097a5	          0x488b00	                    mov rax, qword [rax]	      5028	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_17
0x40097a8	    0x483dffc99a3b	                     cmp rax, 0x3b9ac9ff	      5028	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_17
0x40097ae	     0xf8627010000	                           jbe 0x40098db	      5028	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_17
0x40097b4	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40097bb	          0x488b00	                    mov rax, qword [rax]	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40097be	        0x48c1e809	                              shr rax, 9	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40097c2	    0x48ba535a9ba0	            movabs rdx, 0x44b82fa09b5a53	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40097cc	          0x48f7e2	                                 mul rdx	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40097cf	          0x4889d0	                            mov rax, rdx	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40097d2	        0x48c1e80b	                            shr rax, 0xb	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40097d6	    0x48898570feff	            mov qword [rbp - 0x190], rax	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40097dd	    0x4881bd70feff	    cmp qword [rbp - 0x190], 0x3b9ac9ff 	      5034	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_18
0x40097e8	            0x7712	                            ja 0x40097fc	      5034	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_18
0x40097ea	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      5034	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_18
0x40097f1	    0x8985c4fdffff	            mov dword [rbp - 0x23c], eax	      5034	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_18
0x40097f7	      0xe994000000	                           jmp 0x4009890	      5034	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_18
0x40097fc	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009803	        0x48c1e809	                              shr rax, 9	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009807	    0x48ba535a9ba0	            movabs rdx, 0x44b82fa09b5a53	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009811	          0x48f7e2	                                 mul rdx	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009814	          0x4889d0	                            mov rax, rdx	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009817	        0x48c1e80b	                            shr rax, 0xb	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x400981b	    0x8985e4fdffff	            mov dword [rbp - 0x21c], eax	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009821	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5037	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009828	        0x4883c010	                           add rax, 0x10	      5037	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x400982c	    0x488b9550feff	            mov rdx, qword [rbp - 0x1b0]	      5037	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009833	        0x4883c210	                           add rdx, 0x10	      5037	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009837	          0x488b0a	                    mov rcx, qword [rdx]	      5037	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x400983a	    0x8b95e4fdffff	            mov edx, dword [rbp - 0x21c]	      5037	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009840	          0x4801ca	                            add rdx, rcx	      5037	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009843	          0x488910	                    mov qword [rax], rdx	      5037	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009846	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x400984d	          0x488b10	                    mov rdx, qword [rax]	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009850	    0x8b8de4fdffff	            mov ecx, dword [rbp - 0x21c]	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009856	    0x48b8000064a7	           movabs rax, 0xde0b6b3a7640000	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009860	        0x480fafc1	                           imul rax, rcx	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009864	          0x4829c2	                            sub rdx, rax	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009867	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x400986e	          0x488910	                    mov qword [rax], rdx	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009871	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      5039	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009878	            0x89c2	                            mov edx, eax	      5039	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x400987a	    0x8b85e4fdffff	            mov eax, dword [rbp - 0x21c]	      5039	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009880	    0x69c000ca9a3b	               imul eax, eax, 0x3b9aca00	      5039	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009886	            0x29c2	                            sub edx, eax	      5039	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009888	            0x89d0	                            mov eax, edx	      5039	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x400988a	    0x8985c4fdffff	            mov dword [rbp - 0x23c], eax	      5039	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4009890	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5041	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4009897	        0x4883c008	                              add rax, 8	      5041	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x400989b	    0x488b9550feff	            mov rdx, qword [rbp - 0x1b0]	      5041	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098a2	        0x4883c208	                              add rdx, 8	      5041	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098a6	          0x488b0a	                    mov rcx, qword [rdx]	      5041	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098a9	    0x8b95c4fdffff	            mov edx, dword [rbp - 0x23c]	      5041	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098af	          0x4801ca	                            add rdx, rcx	      5041	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098b2	          0x488910	                    mov qword [rax], rdx	      5041	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098b5	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5042	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098bc	          0x488b10	                    mov rdx, qword [rax]	      5042	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098bf	    0x8b85c4fdffff	            mov eax, dword [rbp - 0x23c]	      5042	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098c5	    0x4869c000ca9a	               imul rax, rax, 0x3b9aca00	      5042	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098cc	          0x4829c2	                            sub rdx, rax	      5042	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098cf	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5042	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098d6	          0x488910	                    mov qword [rax], rdx	      5042	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098d9	            0xeb01	                           jmp 0x40098dc	      5042	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098db	              0x90	                                     nop	      5028	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_17
0x40098dc	    0x48838550feff	              add qword [rbp - 0x1b0], 8	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098e4	    0x8b85dcfdffff	            mov eax, dword [rbp - 0x224]	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098ea	            0x4898	                                    cdqe	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098ec	    0x488d14c50000	                        lea rdx, [rax*8]	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098f4	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098fb	          0x4801d0	                            add rax, rdx	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40098fe	    0x483b8550feff	            cmp rax, qword [rbp - 0x1b0]	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4009905	     0xf8793feffff	                            ja 0x400979e	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x400990b	            0xeb01	                           jmp 0x400990e	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x400990d	              0x90	                                     nop	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x400990e	    0x48838538feff	              add qword [rbp - 0x1c8], 4	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4009916	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x400991d	    0x483b8568feff	            cmp rax, qword [rbp - 0x198]	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4009924	     0xf86a1fdffff	                           jbe 0x40096cb	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x400992a	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4009931	    0x48898550feff	            mov qword [rbp - 0x1b0], rax	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4009938	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x400993f	    0x48898548feff	            mov qword [rbp - 0x1b8], rax	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4009946	      0xe999000000	                           jmp 0x40099e4	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x400994b	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5053	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4009952	          0x488b00	                    mov rax, qword [rax]	      5053	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4009955	    0x8985d0fdffff	            mov dword [rbp - 0x230], eax	      5053	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x400995b	    0xc785ccfdffff	              mov dword [rbp - 0x234], 0	      5054	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4009965	            0xeb52	                           jmp 0x40099b9	      5054	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4009967	    0x8b85d0fdffff	            mov eax, dword [rbp - 0x230]	      5055	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x400996d	      0xbad34d6210	                     mov edx, 0x10624dd3	      5055	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4009972	            0xf7e2	                                 mul edx	      5055	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4009974	            0x89d0	                            mov eax, edx	      5055	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4009976	          0xc1e806	                              shr eax, 6	      5055	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4009979	    0x8985e8fdffff	            mov dword [rbp - 0x218], eax	      5055	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x400997f	    0x8b85d0fdffff	            mov eax, dword [rbp - 0x230]	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4009985	            0x89c2	                            mov edx, eax	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4009987	    0x8b85e8fdffff	            mov eax, dword [rbp - 0x218]	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x400998d	      0x6669c0e803	                      imul ax, ax, 0x3e8	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4009992	            0x29c2	                            sub edx, eax	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4009994	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x400999b	          0x668910	                      mov word [rax], dx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x400999e	    0x8b85e8fdffff	            mov eax, dword [rbp - 0x218]	      5057	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x40099a4	    0x8985d0fdffff	            mov dword [rbp - 0x230], eax	      5057	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x40099aa	    0x8385ccfdffff	              add dword [rbp - 0x234], 3	      5054	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x40099b1	    0x48838548feff	              add qword [rbp - 0x1b8], 2	      5054	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x40099b9	    0x83bdccfdffff	              cmp dword [rbp - 0x234], 5	      5054	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x40099c0	            0x7ea5	                           jle 0x4009967	      5054	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x40099c2	    0x8b85d0fdffff	            mov eax, dword [rbp - 0x230]	      5059	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x40099c8	            0x89c2	                            mov edx, eax	      5059	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x40099ca	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      5059	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x40099d1	          0x668910	                      mov word [rax], dx	      5059	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x40099d4	    0x48838548feff	              add qword [rbp - 0x1b8], 2	      5059	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x40099dc	    0x48838550feff	              add qword [rbp - 0x1b0], 8	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x40099e4	    0x8b85dcfdffff	            mov eax, dword [rbp - 0x224]	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x40099ea	            0x4898	                                    cdqe	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x40099ec	    0x488d14c50000	                        lea rdx, [rax*8]	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x40099f4	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x40099fb	          0x4801d0	                            add rax, rdx	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x40099fe	    0x483b8550feff	            cmp rax, qword [rbp - 0x1b0]	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4009a05	     0xf8740ffffff	                            ja 0x400994b	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4009a0b	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	      5061	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009a12	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      5061	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009a19	          0x4829c2	                            sub rdx, rax	      5061	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009a1c	          0x4889d0	                            mov rax, rdx	      5061	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009a1f	          0x48d1f8	                              sar rax, 1	      5061	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009a22	    0x8985b4fdffff	            mov dword [rbp - 0x24c], eax	      5061	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009a28	      0xe9b2020000	                           jmp 0x4009cdf	      5061	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4009a2d	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      5067	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4009a34	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	      5067	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4009a3b	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a42	            0x8b00	                    mov eax, dword [rax]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a44	          0x83f831	                           cmp eax, 0x31	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a47	            0x7f17	                            jg 0x4009a60	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a49	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a50	            0x8b00	                    mov eax, dword [rax]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a52	            0x4898	                                    cdqe	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a54	     0xfb680000000	                   movzx eax, byte [rax]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a5b	           0xfb6c8	                           movzx ecx, al	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a5e	            0xeb1e	                           jmp 0x4009a7e	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a60	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a67	            0x8b00	                    mov eax, dword [rax]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a69	          0x8d4802	                      lea ecx, [rax + 2]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a6c	      0xba56555555	                     mov edx, 0x55555556	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a71	            0x89c8	                            mov eax, ecx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a73	            0xf7ea	                                imul edx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a75	            0x89c8	                            mov eax, ecx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a77	          0xc1f81f	                           sar eax, 0x1f	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a7a	            0x89d1	                            mov ecx, edx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a7c	            0x29c1	                            sub ecx, eax	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a7e	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a85	            0x8b00	                    mov eax, dword [rax]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a87	          0x83f831	                           cmp eax, 0x31	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a8a	            0x7f17	                            jg 0x4009aa3	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a8c	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a93	            0x8b00	                    mov eax, dword [rax]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a95	            0x4898	                                    cdqe	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a97	     0xfb680000000	                   movzx eax, byte [rax]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009a9e	           0xfb6c0	                           movzx eax, al	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009aa1	            0xeb1e	                           jmp 0x4009ac1	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009aa3	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009aaa	            0x8b00	                    mov eax, dword [rax]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009aac	          0x8d7002	                      lea esi, [rax + 2]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009aaf	      0xba56555555	                     mov edx, 0x55555556	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009ab4	            0x89f0	                            mov eax, esi	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009ab6	            0xf7ea	                                imul edx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009ab8	            0x89f0	                            mov eax, esi	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009aba	          0xc1f81f	                           sar eax, 0x1f	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009abd	            0x29c2	                            sub edx, eax	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009abf	            0x89d0	                            mov eax, edx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009ac1	             0x1c8	                            add eax, ecx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009ac3	             0x1c0	                            add eax, eax	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009ac5	    0x8985e0fdffff	            mov dword [rbp - 0x220], eax	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4009acb	    0x83bde0fdffff	          cmp dword [rbp - 0x220], 0x62 	      5069	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4009ad2	            0x7e4b	                           jle 0x4009b1f	      5069	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4009ad4	    0x8b85e0fdffff	            mov eax, dword [rbp - 0x220]	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4009ada	            0x4898	                                    cdqe	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4009adc	          0x4889c7	                            mov rdi, rax	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4009adf	      0xe800000000	                          call 0x4009ae4	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4009ae4	    0x488985f8fdff	            mov qword [rbp - 0x208], rax	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4009aeb	    0x4883bdf8fdff	              cmp qword [rbp - 0x208], 0	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4009af3	            0x751c	                           jne 0x4009b11	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4009af5	    0x488b8578fdff	            mov rax, qword [rbp - 0x288]	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4009afc	            0x8b00	                    mov eax, dword [rax]	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4009afe	          0x83c810	                            or eax, 0x10	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4009b01	            0x89c2	                            mov edx, eax	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4009b03	    0x488b8578fdff	            mov rax, qword [rbp - 0x288]	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4009b0a	            0x8910	                    mov dword [rax], edx	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4009b0c	      0xe9ba020000	                           jmp 0x4009dcb	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4009b11	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      5072	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4009b18	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	      5072	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4009b1f	    0xc785b4fdffff	              mov dword [rbp - 0x24c], 1	      5080	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4009b29	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4009b30	      0x66c7000000	                       mov word [rax], 0	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4009b35	    0xc785bcfdffff	              mov dword [rbp - 0x244], 0	      5082	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4009b3f	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b46	            0x8b00	                    mov eax, dword [rax]	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b48	          0x83f831	                           cmp eax, 0x31	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b4b	            0x7f17	                            jg 0x4009b64	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b4d	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b54	            0x8b00	                    mov eax, dword [rax]	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b56	            0x4898	                                    cdqe	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b58	     0xfb680000000	                   movzx eax, byte [rax]	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b5f	           0xfb6c0	                           movzx eax, al	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b62	            0xeb1e	                           jmp 0x4009b82	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b64	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b6b	            0x8b00	                    mov eax, dword [rax]	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b6d	          0x8d4802	                      lea ecx, [rax + 2]	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b70	      0xba56555555	                     mov edx, 0x55555556	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b75	            0x89c8	                            mov eax, ecx	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b77	            0xf7ea	                                imul edx	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b79	            0x89c8	                            mov eax, ecx	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b7b	          0xc1f81f	                           sar eax, 0x1f	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b7e	            0x29c2	                            sub edx, eax	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b80	            0x89d0	                            mov eax, edx	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b82	    0x8985ecfdffff	            mov dword [rbp - 0x214], eax	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4009b88	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009b8f	        0x488d700a	                    lea rsi, [rax + 0xa]	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009b93	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009b9a	            0x8b00	                    mov eax, dword [rax]	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009b9c	          0x83f831	                           cmp eax, 0x31	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009b9f	            0x7f1a	                            jg 0x4009bbb	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009ba1	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009ba8	            0x8b00	                    mov eax, dword [rax]	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009baa	            0x4898	                                    cdqe	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009bac	     0xfb680000000	                   movzx eax, byte [rax]	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009bb3	           0xfb6c0	                           movzx eax, al	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009bb6	          0x4801c0	                            add rax, rax	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009bb9	            0xeb23	                           jmp 0x4009bde	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009bbb	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009bc2	            0x8b00	                    mov eax, dword [rax]	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009bc4	          0x8d4802	                      lea ecx, [rax + 2]	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009bc7	      0xba56555555	                     mov edx, 0x55555556	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009bcc	            0x89c8	                            mov eax, ecx	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009bce	            0xf7ea	                                imul edx	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009bd0	            0x89c8	                            mov eax, ecx	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009bd2	          0xc1f81f	                           sar eax, 0x1f	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009bd5	            0x29c2	                            sub edx, eax	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009bd7	            0x89d0	                            mov eax, edx	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009bd9	            0x4898	                                    cdqe	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009bdb	          0x4801c0	                            add rax, rax	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009bde	          0x4801f0	                            add rax, rsi	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009be1	    0x48898578feff	            mov qword [rbp - 0x188], rax	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4009be8	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4009bef	        0x4883c00a	                            add rax, 0xa	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4009bf3	    0x48898500feff	            mov qword [rbp - 0x200], rax	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4009bfa	      0xe9cc000000	                           jmp 0x4009ccb	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4009bff	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c06	           0xfb700	                   movzx eax, word [rax]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c09	          0x6685c0	                             test ax, ax	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c0c	     0xf8488000000	                            je 0x4009c9a	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c12	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      5091	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4009c19	           0xfb700	                   movzx eax, word [rax]	      5091	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4009c1c	           0xfb7c8	                           movzx ecx, ax	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c1f	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c25	            0x4898	                                    cdqe	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c27	        0x488d1400	                    lea rdx, [rax + rax]	      5091	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4009c2b	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c32	        0x4c8d0402	                     lea r8, [rdx + rax]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c36	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4009c3d	        0x488d700a	                    lea rsi, [rax + 0xa]	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4009c41	    0x8b85b4fdffff	            mov eax, dword [rbp - 0x24c]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c47	    0x2b85bcfdffff	            sub eax, dword [rbp - 0x244]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c4d	    0x8b95bcfdffff	            mov edx, dword [rbp - 0x244]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c53	          0x4863d2	                         movsxd rdx, edx	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c56	        0x488d3c12	                    lea rdi, [rdx + rdx]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c5a	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c61	          0x4801d7	                            add rdi, rdx	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c64	    0x8b95ecfdffff	            mov edx, dword [rbp - 0x214]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c6a	        0x4883ec08	                              sub rsp, 8	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c6e	              0x51	                                push rcx	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c6f	          0x4d89c1	                              mov r9, r8	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c72	    0x41b800000000	                              mov r8d, 0	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c78	            0x89d1	                            mov ecx, edx	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c7a	          0x4889f2	                            mov rdx, rsi	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c7d	            0x89c6	                            mov esi, eax	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c7f	      0xe87d250000	                  call sym.decUnitAddSub	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c84	        0x4883c410	                           add rsp, 0x10	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c88	            0x89c2	                            mov edx, eax	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c8a	    0x8b85bcfdffff	            mov eax, dword [rbp - 0x244]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c90	             0x1d0	                            add eax, edx	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c92	    0x8985b4fdffff	            mov dword [rbp - 0x24c], eax	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c98	            0xeb22	                           jmp 0x4009cbc	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4009c9a	    0x8b85b4fdffff	            mov eax, dword [rbp - 0x24c]	      5094	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x4009ca0	            0x4898	                                    cdqe	      5094	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x4009ca2	        0x488d1400	                    lea rdx, [rax + rax]	      5094	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x4009ca6	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      5094	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x4009cad	          0x4801d0	                            add rax, rdx	      5094	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x4009cb0	      0x66c7000000	                       mov word [rax], 0	      5094	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x4009cb5	    0x8385b4fdffff	              add dword [rbp - 0x24c], 1	      5095	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x4009cbc	    0x8385bcfdffff	              add dword [rbp - 0x244], 1	      5098	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4009cc3	    0x48838500feff	              add qword [rbp - 0x200], 2	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4009ccb	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4009cd2	    0x483b8578feff	            cmp rax, qword [rbp - 0x188]	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4009cd9	     0xf8220ffffff	                            jb 0x4009bff	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4009cdf	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      5111	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009ce6	     0xfb695affdff	           movzx edx, byte [rbp - 0x251]	      5111	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009ced	          0x885008	                  mov byte [rax + 8], dl	      5111	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009cf0	    0x8b95b4fdffff	            mov edx, dword [rbp - 0x24c]	      5112	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_15
0x4009cf6	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      5112	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_15
0x4009cfd	            0x89d6	                            mov esi, edx	      5112	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_15
0x4009cff	          0x4889c7	                            mov rdi, rax	      5112	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_15
0x4009d02	      0xe86d470000	                   call sym.decGetDigits	      5112	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_15
0x4009d07	            0x89c2	                            mov edx, eax	      5112	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_15
0x4009d09	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      5112	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_15
0x4009d10	            0x8910	                    mov dword [rax], edx	      5112	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_15
0x4009d12	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009d19	          0x8b5004	                mov edx, dword [rax + 4]	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009d1c	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009d23	          0x8b4004	                mov eax, dword [rax + 4]	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009d26	             0x1d0	                            add eax, edx	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009d28	    0x8985b8fdffff	            mov dword [rbp - 0x248], eax	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009d2e	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4009d35	          0x8b4004	                mov eax, dword [rax + 4]	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4009d38	            0x85c0	                           test eax, eax	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4009d3a	            0x7921	                           jns 0x4009d5d	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4009d3c	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4009d43	          0x8b4004	                mov eax, dword [rax + 4]	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4009d46	            0x85c0	                           test eax, eax	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4009d48	            0x7913	                           jns 0x4009d5d	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4009d4a	    0x83bdb8fdffff	              cmp dword [rbp - 0x248], 0	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4009d51	            0x7e0a	                           jle 0x4009d5d	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4009d53	    0xc785b8fdffff	     mov dword [rbp - 0x248], 0x88ca6c02	      5121	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4009d5d	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      5122	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009d64	    0x8b95b8fdffff	            mov edx, dword [rbp - 0x248]	      5122	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009d6a	          0x895004	                mov dword [rax + 4], edx	      5122	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009d6d	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4009d74	            0x8b08	                    mov ecx, dword [rax]	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4009d76	    0x4c8b8578fdff	             mov r8, qword [rbp - 0x288]	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4009d7d	    0x488dbdb0fdff	                  lea rdi, [rbp - 0x250]	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4009d84	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4009d8b	    0x488bb580fdff	            mov rsi, qword [rbp - 0x280]	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4009d92	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4009d99	          0x4d89c1	                              mov r9, r8	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4009d9c	          0x4989f8	                             mov r8, rdi	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4009d9f	          0x4889c7	                            mov rdi, rax	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4009da2	      0xe88d300000	                    call sym.decSetCoeff	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4009da7	    0x488b8d78fdff	            mov rcx, qword [rbp - 0x288]	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009dae	    0x488d95b0fdff	                  lea rdx, [rbp - 0x250]	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009db5	    0x488bb580fdff	            mov rsi, qword [rbp - 0x280]	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009dbc	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009dc3	          0x4889c7	                            mov rdi, rax	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009dc6	      0xe832390000	                    call sym.decFinalize	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4009dcb	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      5130	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009dd2	          0x4889c7	                            mov rdi, rax	      5130	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009dd5	      0xe800000000	                          call 0x4009dda	      5130	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009dda	    0x488b8520feff	            mov rax, qword [rbp - 0x1e0]	      5136	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009de1	          0x4889c7	                            mov rdi, rax	      5136	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009de4	      0xe800000000	                          call 0x4009de9	      5136	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009de9	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      5137	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009df0	          0x4889c7	                            mov rdi, rax	      5137	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009df3	      0xe800000000	                          call 0x4009df8	      5137	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009df8	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      5139	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009dff	        0x488b75f8	                mov rsi, qword [rbp - 8]	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009e03	    0x644833342528	                xor rsi, qword fs:[0x28]	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009e0c	            0x7405	                            je 0x4009e13	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009e0e	      0xe800000000	                          call 0x4009e13	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009e13	              0xc9	                                   leave	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4009e14	              0xc3	                                     ret	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
decTrim	SWITCH,0:IF,13:FOR,1:CALL,4:DO,0:ELSE,0:WHILE,0:functions,0	168
0x400c665	              0x55	                                push rbp	      6586	decNumber.c	FUNCTION_6
0x400c666	          0x4889e5	                            mov rbp, rsp	      6586	decNumber.c	FUNCTION_6
0x400c669	        0x4883ec40	                           sub rsp, 0x40	      6586	decNumber.c	FUNCTION_6
0x400c66d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6586	decNumber.c	FUNCTION_6
0x400c671	        0x488975d0	             mov qword [rbp - 0x30], rsi	      6586	decNumber.c	FUNCTION_6
0x400c675	            0x89c8	                            mov eax, ecx	      6586	decNumber.c	FUNCTION_6
0x400c677	        0x4c8945c0	              mov qword [rbp - 0x40], r8	      6586	decNumber.c	FUNCTION_6
0x400c67b	          0x8855cc	               mov byte [rbp - 0x34], dl	      6586	decNumber.c	FUNCTION_6
0x400c67e	          0x8845c8	               mov byte [rbp - 0x38], al	      6586	decNumber.c	FUNCTION_6
0x400c681	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6595	decNumber.c	FUNCTION_6
0x400c685	    0xc70000000000	                      mov dword [rax], 0	      6595	decNumber.c	FUNCTION_6
0x400c68b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6596	decNumber.c	FUNCTION_6	IF_2
0x400c68f	         0xfb64008	               movzx eax, byte [rax + 8]	      6596	decNumber.c	FUNCTION_6	IF_2
0x400c693	           0xfb6c0	                           movzx eax, al	      6596	decNumber.c	FUNCTION_6	IF_2
0x400c696	          0x83e070	                           and eax, 0x70	      6596	decNumber.c	FUNCTION_6	IF_2
0x400c699	            0x85c0	                           test eax, eax	      6596	decNumber.c	FUNCTION_6	IF_2
0x400c69b	            0x7512	                           jne 0x400c6af	      6596	decNumber.c	FUNCTION_6	IF_2
0x400c69d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6597	decNumber.c	FUNCTION_6	IF_2
0x400c6a1	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      6597	decNumber.c	FUNCTION_6	IF_2
0x400c6a5	           0xfb7c0	                           movzx eax, ax	      6597	decNumber.c	FUNCTION_6	IF_2
0x400c6a8	          0x83e001	                              and eax, 1	      6597	decNumber.c	FUNCTION_6	IF_2
0x400c6ab	            0x85c0	                           test eax, eax	      6597	decNumber.c	FUNCTION_6	IF_2
0x400c6ad	            0x7409	                            je 0x400c6b8	      6597	decNumber.c	FUNCTION_6	IF_2
0x400c6af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6597	decNumber.c	FUNCTION_6	IF_2
0x400c6b3	      0xe9c8010000	                           jmp 0x400c880	      6597	decNumber.c	FUNCTION_6	IF_2
0x400c6b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400c6bc	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400c6c0	          0x6685c0	                             test ax, ax	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400c6c3	            0x7531	                           jne 0x400c6f6	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400c6c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400c6c9	            0x8b00	                    mov eax, dword [rax]	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400c6cb	          0x83f801	                              cmp eax, 1	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400c6ce	            0x7526	                           jne 0x400c6f6	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400c6d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400c6d4	         0xfb64008	               movzx eax, byte [rax + 8]	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400c6d8	           0xfb6c0	                           movzx eax, al	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400c6db	          0x83e070	                           and eax, 0x70	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400c6de	            0x85c0	                           test eax, eax	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400c6e0	            0x7514	                           jne 0x400c6f6	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400c6e2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6599	decNumber.c	FUNCTION_6	IF_3
0x400c6e6	    0xc74004000000	                  mov dword [rax + 4], 0	      6599	decNumber.c	FUNCTION_6	IF_3
0x400c6ed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6600	decNumber.c	FUNCTION_6	IF_3
0x400c6f1	      0xe98a010000	                           jmp 0x400c880	      6600	decNumber.c	FUNCTION_6	IF_3
0x400c6f6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6604	decNumber.c	FUNCTION_6
0x400c6fa	          0x8b4004	                mov eax, dword [rax + 4]	      6604	decNumber.c	FUNCTION_6
0x400c6fd	          0x8945e8	             mov dword [rbp - 0x18], eax	      6604	decNumber.c	FUNCTION_6
0x400c700	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      6605	decNumber.c	FUNCTION_6
0x400c707	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6606	decNumber.c	FUNCTION_6
0x400c70b	        0x4883c00a	                            add rax, 0xa	      6606	decNumber.c	FUNCTION_6
0x400c70f	        0x488945f8	                mov qword [rbp - 8], rax	      6606	decNumber.c	FUNCTION_6
0x400c713	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      6607	decNumber.c	FUNCTION_6	FOR_1
0x400c71a	            0xeb70	                           jmp 0x400c78c	      6607	decNumber.c	FUNCTION_6	FOR_1
0x400c71c	        0x488b45f8	                mov rax, qword [rbp - 8]	      6610	decNumber.c	FUNCTION_6	FOR_1
0x400c720	           0xfb700	                   movzx eax, word [rax]	      6610	decNumber.c	FUNCTION_6	FOR_1
0x400c723	           0xfb7d0	                           movzx edx, ax	      6610	decNumber.c	FUNCTION_6	FOR_1
0x400c726	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6610	decNumber.c	FUNCTION_6	FOR_1
0x400c729	            0x89c1	                            mov ecx, eax	      6610	decNumber.c	FUNCTION_6	FOR_1
0x400c72b	            0xd3ea	                             shr edx, cl	      6610	decNumber.c	FUNCTION_6	FOR_1
0x400c72d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6610	decNumber.c	FUNCTION_6	FOR_1
0x400c730	    0x8b0485000000	                  mov eax, dword [rax*4]	      6610	decNumber.c	FUNCTION_6	FOR_1
0x400c737	           0xfafc2	                           imul eax, edx	      6610	decNumber.c	FUNCTION_6	FOR_1
0x400c73a	          0xc1e811	                           shr eax, 0x11	      6610	decNumber.c	FUNCTION_6	FOR_1
0x400c73d	          0x8945f0	             mov dword [rbp - 0x10], eax	      6610	decNumber.c	FUNCTION_6	FOR_1
0x400c740	        0x488b45f8	                mov rax, qword [rbp - 8]	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x400c744	           0xfb700	                   movzx eax, word [rax]	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x400c747	           0xfb7d0	                           movzx edx, ax	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x400c74a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x400c74d	    0x8b0485000000	                  mov eax, dword [rax*4]	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x400c754	         0xfaf45f0	            imul eax, dword [rbp - 0x10]	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x400c758	            0x39c2	                            cmp edx, eax	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x400c75a	            0x7540	                           jne 0x400c79c	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x400c75c	        0x807dcc00	                cmp byte [rbp - 0x34], 0	      6616	decNumber.c	FUNCTION_6	FOR_1	IF_6
0x400c760	            0x7510	                           jne 0x400c772	      6616	decNumber.c	FUNCTION_6	FOR_1	IF_6
0x400c762	        0x837de800	               cmp dword [rbp - 0x18], 0	      6618	decNumber.c	FUNCTION_6	FOR_1	IF_6	IF_7
0x400c766	            0x7f0a	                            jg 0x400c772	      6618	decNumber.c	FUNCTION_6	FOR_1	IF_6	IF_7
0x400c768	        0x837de800	               cmp dword [rbp - 0x18], 0	      6619	decNumber.c	FUNCTION_6	FOR_1	IF_6	IF_7	IF_8
0x400c76c	            0x7431	                            je 0x400c79f	      6619	decNumber.c	FUNCTION_6	FOR_1	IF_6	IF_7	IF_8
0x400c76e	        0x8345e801	               add dword [rbp - 0x18], 1	      6620	decNumber.c	FUNCTION_6	FOR_1	IF_6	IF_7
0x400c772	        0x8345ec01	               add dword [rbp - 0x14], 1	      6623	decNumber.c	FUNCTION_6	FOR_1
0x400c776	        0x837dec03	               cmp dword [rbp - 0x14], 3	      6624	decNumber.c	FUNCTION_6	FOR_1	IF_9
0x400c77a	            0x760c	                           jbe 0x400c788	      6624	decNumber.c	FUNCTION_6	FOR_1	IF_9
0x400c77c	      0x488345f802	                  add qword [rbp - 8], 2	      6625	decNumber.c	FUNCTION_6	FOR_1	IF_9
0x400c781	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      6626	decNumber.c	FUNCTION_6	FOR_1	IF_9
0x400c788	        0x8345e401	               add dword [rbp - 0x1c], 1	      6607	decNumber.c	FUNCTION_6	FOR_1
0x400c78c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6607	decNumber.c	FUNCTION_6	FOR_1
0x400c790	            0x8b00	                    mov eax, dword [rax]	      6607	decNumber.c	FUNCTION_6	FOR_1
0x400c792	          0x83e801	                              sub eax, 1	      6607	decNumber.c	FUNCTION_6	FOR_1
0x400c795	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      6607	decNumber.c	FUNCTION_6	FOR_1
0x400c798	            0x7f82	                            jg 0x400c71c	      6607	decNumber.c	FUNCTION_6	FOR_1
0x400c79a	            0xeb04	                           jmp 0x400c7a0	      6607	decNumber.c	FUNCTION_6	FOR_1
0x400c79c	              0x90	                                     nop	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x400c79d	            0xeb01	                           jmp 0x400c7a0	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x400c79f	              0x90	                                     nop	      6619	decNumber.c	FUNCTION_6	FOR_1	IF_6	IF_7	IF_8
0x400c7a0	        0x837de400	               cmp dword [rbp - 0x1c], 0	      6629	decNumber.c	FUNCTION_6	IF_10
0x400c7a4	            0x7509	                           jne 0x400c7af	      6629	decNumber.c	FUNCTION_6	IF_10
0x400c7a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6629	decNumber.c	FUNCTION_6	IF_10
0x400c7aa	      0xe9d1000000	                           jmp 0x400c880	      6629	decNumber.c	FUNCTION_6	IF_10
0x400c7af	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6632	decNumber.c	FUNCTION_6	IF_11
0x400c7b3	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      6632	decNumber.c	FUNCTION_6	IF_11
0x400c7b7	            0x84c0	                             test al, al	      6632	decNumber.c	FUNCTION_6	IF_11
0x400c7b9	            0x7445	                            je 0x400c800	      6632	decNumber.c	FUNCTION_6	IF_11
0x400c7bb	        0x807dc800	                cmp byte [rbp - 0x38], 0	      6632	decNumber.c	FUNCTION_6	IF_11
0x400c7bf	            0x753f	                           jne 0x400c800	      6632	decNumber.c	FUNCTION_6	IF_11
0x400c7c1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6633	decNumber.c	FUNCTION_6	IF_11
0x400c7c5	          0x8b5004	                mov edx, dword [rax + 4]	      6633	decNumber.c	FUNCTION_6	IF_11
0x400c7c8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6633	decNumber.c	FUNCTION_6	IF_11
0x400c7cc	            0x8b00	                    mov eax, dword [rax]	      6633	decNumber.c	FUNCTION_6	IF_11
0x400c7ce	            0x29c2	                            sub edx, eax	      6633	decNumber.c	FUNCTION_6	IF_11
0x400c7d0	            0x89d0	                            mov eax, edx	      6633	decNumber.c	FUNCTION_6	IF_11
0x400c7d2	          0x8d5001	                      lea edx, [rax + 1]	      6633	decNumber.c	FUNCTION_6	IF_11
0x400c7d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6633	decNumber.c	FUNCTION_6	IF_11
0x400c7d9	          0x8b4004	                mov eax, dword [rax + 4]	      6633	decNumber.c	FUNCTION_6	IF_11
0x400c7dc	            0x29c2	                            sub edx, eax	      6633	decNumber.c	FUNCTION_6	IF_11
0x400c7de	            0x89d0	                            mov eax, edx	      6633	decNumber.c	FUNCTION_6	IF_11
0x400c7e0	          0x8945f4	              mov dword [rbp - 0xc], eax	      6633	decNumber.c	FUNCTION_6	IF_11
0x400c7e3	        0x837df400	                cmp dword [rbp - 0xc], 0	      6634	decNumber.c	FUNCTION_6	IF_11	IF_12
0x400c7e7	            0x7f09	                            jg 0x400c7f2	      6634	decNumber.c	FUNCTION_6	IF_11	IF_12
0x400c7e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6634	decNumber.c	FUNCTION_6	IF_11	IF_12
0x400c7ed	      0xe98e000000	                           jmp 0x400c880	      6634	decNumber.c	FUNCTION_6	IF_11	IF_12
0x400c7f2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6635	decNumber.c	FUNCTION_6	IF_11	IF_13
0x400c7f5	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      6635	decNumber.c	FUNCTION_6	IF_11	IF_13
0x400c7f8	            0x7e06	                           jle 0x400c800	      6635	decNumber.c	FUNCTION_6	IF_11	IF_13
0x400c7fa	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6635	decNumber.c	FUNCTION_6	IF_11	IF_13
0x400c7fd	          0x8945e4	             mov dword [rbp - 0x1c], eax	      6635	decNumber.c	FUNCTION_6	IF_11	IF_13
0x400c800	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c804	            0x8b00	                    mov eax, dword [rax]	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c806	          0x83f831	                           cmp eax, 0x31	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c809	            0x7f14	                            jg 0x400c81f	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c80b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c80f	            0x8b00	                    mov eax, dword [rax]	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c811	            0x4898	                                    cdqe	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c813	     0xfb680000000	                   movzx eax, byte [rax]	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c81a	           0xfb6c0	                           movzx eax, al	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c81d	            0xeb1b	                           jmp 0x400c83a	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c81f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c823	            0x8b00	                    mov eax, dword [rax]	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c825	          0x8d4802	                      lea ecx, [rax + 2]	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c828	      0xba56555555	                     mov edx, 0x55555556	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c82d	            0x89c8	                            mov eax, ecx	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c82f	            0xf7ea	                                imul edx	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c831	            0x89c8	                            mov eax, ecx	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c833	          0xc1f81f	                           sar eax, 0x1f	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c836	            0x29c2	                            sub edx, eax	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c838	            0x89d0	                            mov eax, edx	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c83a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c83e	        0x488d4a0a	                    lea rcx, [rdx + 0xa]	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c842	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c845	            0x89c6	                            mov esi, eax	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c847	          0x4889cf	                            mov rdi, rcx	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c84a	      0xe806030000	                call sym.decShiftToLeast	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400c84f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6640	decNumber.c	FUNCTION_6
0x400c853	          0x8b5004	                mov edx, dword [rax + 4]	      6640	decNumber.c	FUNCTION_6
0x400c856	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6640	decNumber.c	FUNCTION_6
0x400c859	             0x1c2	                            add edx, eax	      6640	decNumber.c	FUNCTION_6
0x400c85b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6640	decNumber.c	FUNCTION_6
0x400c85f	          0x895004	                mov dword [rax + 4], edx	      6640	decNumber.c	FUNCTION_6
0x400c862	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6641	decNumber.c	FUNCTION_6
0x400c866	            0x8b00	                    mov eax, dword [rax]	      6641	decNumber.c	FUNCTION_6
0x400c868	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      6641	decNumber.c	FUNCTION_6
0x400c86b	            0x89c2	                            mov edx, eax	      6641	decNumber.c	FUNCTION_6
0x400c86d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6641	decNumber.c	FUNCTION_6
0x400c871	            0x8910	                    mov dword [rax], edx	      6641	decNumber.c	FUNCTION_6
0x400c873	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6642	decNumber.c	FUNCTION_6
0x400c877	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      6642	decNumber.c	FUNCTION_6
0x400c87a	            0x8910	                    mov dword [rax], edx	      6642	decNumber.c	FUNCTION_6
0x400c87c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6643	decNumber.c	FUNCTION_6
0x400c880	              0xc9	                                   leave	      6644	decNumber.c	FUNCTION_6
0x400c881	              0xc3	                                     ret	      6644	decNumber.c	FUNCTION_6
decNumberToEngString	SWITCH,0:IF,0:FOR,0:CALL,1:DO,0:ELSE,0:WHILE,0:functions,0	14
0x400042c	              0x55	                                push rbp	       464	decNumber.c	FUNCTION_68	FUNCTION_6
0x400042d	          0x4889e5	                            mov rbp, rsp	       464	decNumber.c	FUNCTION_68	FUNCTION_6
0x4000430	        0x4883ec10	                           sub rsp, 0x10	       464	decNumber.c	FUNCTION_68	FUNCTION_6
0x4000434	        0x48897df8	                mov qword [rbp - 8], rdi	       464	decNumber.c	FUNCTION_68	FUNCTION_6
0x4000438	        0x488975f0	             mov qword [rbp - 0x10], rsi	       464	decNumber.c	FUNCTION_68	FUNCTION_6
0x400043c	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       465	decNumber.c	FUNCTION_68	FUNCTION_6	CALL_1
0x4000440	        0x488b45f8	                mov rax, qword [rbp - 8]	       465	decNumber.c	FUNCTION_68	FUNCTION_6	CALL_1
0x4000444	      0xba01000000	                              mov edx, 1	       465	decNumber.c	FUNCTION_68	FUNCTION_6	CALL_1
0x4000449	          0x4889ce	                            mov rsi, rcx	       465	decNumber.c	FUNCTION_68	FUNCTION_6	CALL_1
0x400044c	          0x4889c7	                            mov rdi, rax	       465	decNumber.c	FUNCTION_68	FUNCTION_6	CALL_1
0x400044f	      0xe86d5f0000	                    call sym.decToString	       465	decNumber.c	FUNCTION_68	FUNCTION_6	CALL_1
0x4000454	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       466	decNumber.c	FUNCTION_68	FUNCTION_6
0x4000458	              0xc9	                                   leave	       467	decNumber.c	FUNCTION_68	FUNCTION_6
0x4000459	              0xc3	                                     ret	       467	decNumber.c	FUNCTION_68	FUNCTION_6
decDecap	SWITCH,0:IF,3:FOR,0:CALL,4:DO,0:ELSE,0:WHILE,0:functions,0	117
0x400e04d	              0x55	                                push rbp	      7625	decNumber.c	FUNCTION_21
0x400e04e	          0x4889e5	                            mov rbp, rsp	      7625	decNumber.c	FUNCTION_21
0x400e051	        0x4883ec20	                           sub rsp, 0x20	      7625	decNumber.c	FUNCTION_21
0x400e055	        0x48897de8	             mov qword [rbp - 0x18], rdi	      7625	decNumber.c	FUNCTION_21
0x400e059	          0x8975e4	             mov dword [rbp - 0x1c], esi	      7625	decNumber.c	FUNCTION_21
0x400e05c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7628	decNumber.c	FUNCTION_21	IF_1
0x400e060	            0x8b00	                    mov eax, dword [rax]	      7628	decNumber.c	FUNCTION_21	IF_1
0x400e062	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      7628	decNumber.c	FUNCTION_21	IF_1
0x400e065	            0x7f1d	                            jg 0x400e084	      7628	decNumber.c	FUNCTION_21	IF_1
0x400e067	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7634	decNumber.c	FUNCTION_21	IF_1
0x400e06b	    0x66c7400a0000	                 mov word [rax + 0xa], 0	      7634	decNumber.c	FUNCTION_21	IF_1
0x400e071	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7635	decNumber.c	FUNCTION_21	IF_1
0x400e075	    0xc70001000000	                      mov dword [rax], 1	      7635	decNumber.c	FUNCTION_21	IF_1
0x400e07b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7636	decNumber.c	FUNCTION_21	IF_1
0x400e07f	      0xe92d010000	                           jmp 0x400e1b1	      7636	decNumber.c	FUNCTION_21	IF_1
0x400e084	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e088	        0x488d700a	                    lea rsi, [rax + 0xa]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e08c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e090	            0x8b00	                    mov eax, dword [rax]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e092	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e095	          0x83f831	                           cmp eax, 0x31	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e098	            0x7f1e	                            jg 0x400e0b8	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e09a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e09e	            0x8b00	                    mov eax, dword [rax]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0a0	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0a3	            0x4898	                                    cdqe	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0a5	     0xfb680000000	                   movzx eax, byte [rax]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0ac	           0xfb6c0	                           movzx eax, al	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0af	          0x4801c0	                            add rax, rax	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0b2	        0x4883e802	                              sub rax, 2	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0b6	            0xeb27	                           jmp 0x400e0df	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0bc	            0x8b00	                    mov eax, dword [rax]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0be	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0c1	          0x8d4802	                      lea ecx, [rax + 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0c4	      0xba56555555	                     mov edx, 0x55555556	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0c9	            0x89c8	                            mov eax, ecx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0cb	            0xf7ea	                                imul edx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0cd	            0x89c8	                            mov eax, ecx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0cf	          0xc1f81f	                           sar eax, 0x1f	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0d2	            0x29c2	                            sub edx, eax	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0d4	            0x89d0	                            mov eax, edx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0d6	            0x4898	                                    cdqe	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0d8	          0x4801c0	                            add rax, rax	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0db	        0x4883e802	                              sub rax, 2	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0df	          0x4801f0	                            add rax, rsi	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0e2	        0x488945f8	                mov qword [rbp - 8], rax	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400e0e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e0ea	            0x8b00	                    mov eax, dword [rax]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e0ec	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e0ef	            0x89c6	                            mov esi, eax	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e0f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e0f5	            0x8b00	                    mov eax, dword [rax]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e0f7	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e0fa	          0x83f831	                           cmp eax, 0x31	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e0fd	            0x7f20	                            jg 0x400e11f	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e0ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e103	            0x8b00	                    mov eax, dword [rax]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e105	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e108	            0x4898	                                    cdqe	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e10a	     0xfb680000000	                   movzx eax, byte [rax]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e111	           0xfb6c0	                           movzx eax, al	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e114	          0x8d50ff	                      lea edx, [rax - 1]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e117	            0x89d0	                            mov eax, edx	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e119	             0x1c0	                            add eax, eax	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e11b	             0x1d0	                            add eax, edx	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e11d	            0xeb27	                           jmp 0x400e146	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e11f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e123	            0x8b00	                    mov eax, dword [rax]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e125	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e128	          0x8d4802	                      lea ecx, [rax + 2]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e12b	      0xba56555555	                     mov edx, 0x55555556	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e130	            0x89c8	                            mov eax, ecx	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e132	            0xf7ea	                                imul edx	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e134	            0x89c8	                            mov eax, ecx	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e136	          0xc1f81f	                           sar eax, 0x1f	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e139	            0x29c2	                            sub edx, eax	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e13b	            0x89d0	                            mov eax, edx	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e13d	          0x8d50ff	                      lea edx, [rax - 1]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e140	            0x89d0	                            mov eax, edx	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e142	             0x1c0	                            add eax, eax	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e144	             0x1d0	                            add eax, edx	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e146	            0x29c6	                            sub esi, eax	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e148	            0x89f0	                            mov eax, esi	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e14a	          0x8945f4	              mov dword [rbp - 0xc], eax	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400e14d	        0x837df403	                cmp dword [rbp - 0xc], 3	      7640	decNumber.c	FUNCTION_21	IF_3
0x400e151	            0x7429	                            je 0x400e17c	      7640	decNumber.c	FUNCTION_21	IF_3
0x400e153	        0x488b45f8	                mov rax, qword [rbp - 8]	      7640	decNumber.c	FUNCTION_21	IF_3
0x400e157	           0xfb700	                   movzx eax, word [rax]	      7640	decNumber.c	FUNCTION_21	IF_3
0x400e15a	           0xfb7c0	                           movzx eax, ax	      7640	decNumber.c	FUNCTION_21	IF_3
0x400e15d	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      7640	decNumber.c	FUNCTION_21	IF_3
0x400e160	          0x4863d2	                         movsxd rdx, edx	      7640	decNumber.c	FUNCTION_21	IF_3
0x400e163	    0x8b0c95000000	                  mov ecx, dword [rdx*4]	      7640	decNumber.c	FUNCTION_21	IF_3
0x400e16a	      0xba00000000	                              mov edx, 0	      7640	decNumber.c	FUNCTION_21	IF_3
0x400e16f	            0xf7f1	                                 div ecx	      7640	decNumber.c	FUNCTION_21	IF_3
0x400e171	            0x89d0	                            mov eax, edx	      7640	decNumber.c	FUNCTION_21	IF_3
0x400e173	            0x89c2	                            mov edx, eax	      7640	decNumber.c	FUNCTION_21	IF_3
0x400e175	        0x488b45f8	                mov rax, qword [rbp - 8]	      7640	decNumber.c	FUNCTION_21	IF_3
0x400e179	          0x668910	                      mov word [rax], dx	      7640	decNumber.c	FUNCTION_21	IF_3
0x400e17c	        0x488b45f8	                mov rax, qword [rbp - 8]	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400e180	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400e184	        0x4883c20a	                            add rdx, 0xa	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400e188	          0x4829d0	                            sub rax, rdx	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400e18b	          0x48d1f8	                              sar rax, 1	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400e18e	          0x83c001	                              add eax, 1	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400e191	            0x89c2	                            mov edx, eax	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400e193	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400e197	        0x4883c00a	                            add rax, 0xa	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400e19b	            0x89d6	                            mov esi, edx	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400e19d	          0x4889c7	                            mov rdi, rax	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400e1a0	      0xe8cf020000	                   call sym.decGetDigits	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400e1a5	            0x89c2	                            mov edx, eax	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400e1a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400e1ab	            0x8910	                    mov dword [rax], edx	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400e1ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7643	decNumber.c	FUNCTION_21
0x400e1b1	              0xc9	                                   leave	      7644	decNumber.c	FUNCTION_21
0x400e1b2	              0xc3	                                     ret	      7644	decNumber.c	FUNCTION_21
decBiStr	SWITCH,0:IF,2:FOR,1:CALL,0:DO,0:ELSE,0:WHILE,0:functions,0	31
0x400e1b3	              0x55	                                push rbp	      7661	decNumber.c	FUNCTION_22
0x400e1b4	          0x4889e5	                            mov rbp, rsp	      7661	decNumber.c	FUNCTION_22
0x400e1b7	        0x48897df8	                mov qword [rbp - 8], rdi	      7661	decNumber.c	FUNCTION_22
0x400e1bb	        0x488975f0	             mov qword [rbp - 0x10], rsi	      7661	decNumber.c	FUNCTION_22
0x400e1bf	        0x488955e8	             mov qword [rbp - 0x18], rdx	      7661	decNumber.c	FUNCTION_22
0x400e1c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x400e1c7	           0xfb610	                   movzx edx, byte [rax]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x400e1ca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x400e1ce	           0xfb600	                   movzx eax, byte [rax]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x400e1d1	            0x38c2	                              cmp dl, al	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x400e1d3	            0x7419	                            je 0x400e1ee	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x400e1d5	        0x488b45f8	                mov rax, qword [rbp - 8]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x400e1d9	           0xfb610	                   movzx edx, byte [rax]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x400e1dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x400e1e0	           0xfb600	                   movzx eax, byte [rax]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x400e1e3	            0x38c2	                              cmp dl, al	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x400e1e5	            0x7407	                            je 0x400e1ee	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x400e1e7	      0xb800000000	                              mov eax, 0	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x400e1ec	            0xeb22	                           jmp 0x400e210	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x400e1ee	        0x488b45f8	                mov rax, qword [rbp - 8]	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x400e1f2	           0xfb600	                   movzx eax, byte [rax]	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x400e1f5	            0x84c0	                             test al, al	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x400e1f7	            0x7411	                            je 0x400e20a	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x400e1f9	      0x488345f801	                  add qword [rbp - 8], 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x400e1fe	      0x488345f001	               add qword [rbp - 0x10], 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x400e203	      0x488345e801	               add qword [rbp - 0x18], 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x400e208	            0xebb9	                           jmp 0x400e1c3	      7666	decNumber.c	FUNCTION_22	FOR_1
0x400e20a	              0x90	                                     nop	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x400e20b	      0xb801000000	                              mov eax, 1	      7667	decNumber.c	FUNCTION_22
0x400e210	              0x5d	                                 pop rbp	      7668	decNumber.c	FUNCTION_22
0x400e211	              0xc3	                                     ret	      7668	decNumber.c	FUNCTION_22
decNumberXor	SWITCH,0:IF,8:FOR,2:CALL,12:DO,0:ELSE,2:WHILE,0:functions,0	295
0x4005903	              0x55	                                push rbp	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4005904	          0x4889e5	                            mov rbp, rsp	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4005907	        0x4883ec60	                           sub rsp, 0x60	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x400590b	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x400590f	        0x488975b0	             mov qword [rbp - 0x50], rsi	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4005913	        0x488955a8	             mov qword [rbp - 0x58], rdx	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4005917	        0x48894da0	             mov qword [rbp - 0x60], rcx	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x400591b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x400591f	          0x8b4004	                mov eax, dword [rax + 4]	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4005922	            0x85c0	                           test eax, eax	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4005924	            0x7547	                           jne 0x400596d	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4005926	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x400592a	         0xfb64008	               movzx eax, byte [rax + 8]	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x400592e	           0xfb6c0	                           movzx eax, al	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4005931	          0x83e070	                           and eax, 0x70	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4005934	            0x85c0	                           test eax, eax	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4005936	            0x7535	                           jne 0x400596d	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4005938	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x400593c	         0xfb64008	               movzx eax, byte [rax + 8]	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4005940	            0x84c0	                             test al, al	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4005942	            0x7829	                            js 0x400596d	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4005944	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4005948	          0x8b4004	                mov eax, dword [rax + 4]	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x400594b	            0x85c0	                           test eax, eax	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x400594d	            0x751e	                           jne 0x400596d	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x400594f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4005953	         0xfb64008	               movzx eax, byte [rax + 8]	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4005957	           0xfb6c0	                           movzx eax, al	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x400595a	          0x83e070	                           and eax, 0x70	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x400595d	            0x85c0	                           test eax, eax	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x400595f	            0x750c	                           jne 0x400596d	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4005961	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4005965	         0xfb64008	               movzx eax, byte [rax + 8]	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4005969	            0x84c0	                             test al, al	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x400596b	            0x791e	                           jns 0x400598b	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x400596d	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3240	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_6
0x4005971	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3240	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_6
0x4005975	      0xbe80000000	                           mov esi, 0x80	      3240	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_6
0x400597a	          0x4889c7	                            mov rdi, rax	      3240	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_6
0x400597d	      0xe8968a0000	                      call sym.decStatus	      3240	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_6
0x4005982	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3241	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2
0x4005986	      0xe93d030000	                           jmp 0x4005cc8	      3241	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2
0x400598b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3244	decNumber.c	FUNCTION_68	FUNCTION_49
0x400598f	        0x4883c00a	                            add rax, 0xa	      3244	decNumber.c	FUNCTION_68	FUNCTION_49
0x4005993	        0x488945d0	             mov qword [rbp - 0x30], rax	      3244	decNumber.c	FUNCTION_68	FUNCTION_49
0x4005997	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3245	decNumber.c	FUNCTION_68	FUNCTION_49
0x400599b	        0x4883c00a	                            add rax, 0xa	      3245	decNumber.c	FUNCTION_68	FUNCTION_49
0x400599f	        0x488945d8	             mov qword [rbp - 0x28], rax	      3245	decNumber.c	FUNCTION_68	FUNCTION_49
0x40059a3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3246	decNumber.c	FUNCTION_68	FUNCTION_49
0x40059a7	        0x4883c00a	                            add rax, 0xa	      3246	decNumber.c	FUNCTION_68	FUNCTION_49
0x40059ab	        0x488945e0	             mov qword [rbp - 0x20], rax	      3246	decNumber.c	FUNCTION_68	FUNCTION_49
0x40059af	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059b3	            0x8b00	                    mov eax, dword [rax]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059b5	          0x83f831	                           cmp eax, 0x31	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059b8	            0x7f1b	                            jg 0x40059d5	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059ba	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059be	            0x8b00	                    mov eax, dword [rax]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059c0	            0x4898	                                    cdqe	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059c2	     0xfb680000000	                   movzx eax, byte [rax]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059c9	           0xfb6c0	                           movzx eax, al	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059cc	          0x4801c0	                            add rax, rax	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059cf	        0x4883e802	                              sub rax, 2	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059d3	            0xeb24	                           jmp 0x40059f9	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059d5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059d9	            0x8b00	                    mov eax, dword [rax]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059db	          0x8d4802	                      lea ecx, [rax + 2]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059de	      0xba56555555	                     mov edx, 0x55555556	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059e3	            0x89c8	                            mov eax, ecx	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059e5	            0xf7ea	                                imul edx	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059e7	            0x89c8	                            mov eax, ecx	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059e9	          0xc1f81f	                           sar eax, 0x1f	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059ec	            0x29c2	                            sub edx, eax	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059ee	            0x89d0	                            mov eax, edx	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059f0	            0x4898	                                    cdqe	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059f2	          0x4801c0	                            add rax, rax	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059f5	        0x4883e802	                              sub rax, 2	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059f9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x40059fd	          0x4801d0	                            add rax, rdx	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4005a00	        0x488945e8	             mov qword [rbp - 0x18], rax	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4005a04	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a08	            0x8b00	                    mov eax, dword [rax]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a0a	          0x83f831	                           cmp eax, 0x31	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a0d	            0x7f1b	                            jg 0x4005a2a	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a0f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a13	            0x8b00	                    mov eax, dword [rax]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a15	            0x4898	                                    cdqe	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a17	     0xfb680000000	                   movzx eax, byte [rax]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a1e	           0xfb6c0	                           movzx eax, al	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a21	          0x4801c0	                            add rax, rax	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a24	        0x4883e802	                              sub rax, 2	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a28	            0xeb24	                           jmp 0x4005a4e	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a2a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a2e	            0x8b00	                    mov eax, dword [rax]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a30	          0x8d4802	                      lea ecx, [rax + 2]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a33	      0xba56555555	                     mov edx, 0x55555556	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a38	            0x89c8	                            mov eax, ecx	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a3a	            0xf7ea	                                imul edx	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a3c	            0x89c8	                            mov eax, ecx	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a3e	          0xc1f81f	                           sar eax, 0x1f	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a41	            0x29c2	                            sub edx, eax	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a43	            0x89d0	                            mov eax, edx	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a45	            0x4898	                                    cdqe	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a47	          0x4801c0	                            add rax, rax	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a4a	        0x4883e802	                              sub rax, 2	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a4e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a52	          0x4801d0	                            add rax, rdx	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a55	        0x488945f0	             mov qword [rbp - 0x10], rax	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4005a59	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a5d	            0x8b00	                    mov eax, dword [rax]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a5f	          0x83f831	                           cmp eax, 0x31	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a62	            0x7f1b	                            jg 0x4005a7f	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a64	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a68	            0x8b00	                    mov eax, dword [rax]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a6a	            0x4898	                                    cdqe	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a6c	     0xfb680000000	                   movzx eax, byte [rax]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a73	           0xfb6c0	                           movzx eax, al	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a76	          0x4801c0	                            add rax, rax	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a79	        0x4883e802	                              sub rax, 2	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a7d	            0xeb24	                           jmp 0x4005aa3	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a7f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a83	            0x8b00	                    mov eax, dword [rax]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a85	          0x8d4802	                      lea ecx, [rax + 2]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a88	      0xba56555555	                     mov edx, 0x55555556	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a8d	            0x89c8	                            mov eax, ecx	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a8f	            0xf7ea	                                imul edx	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a91	            0x89c8	                            mov eax, ecx	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a93	          0xc1f81f	                           sar eax, 0x1f	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a96	            0x29c2	                            sub edx, eax	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a98	            0x89d0	                            mov eax, edx	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a9a	            0x4898	                                    cdqe	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a9c	          0x4801c0	                            add rax, rax	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005a9f	        0x4883e802	                              sub rax, 2	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005aa3	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005aa7	          0x4801d0	                            add rax, rdx	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005aaa	        0x488945f8	                mov qword [rbp - 8], rax	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4005aae	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005ab2	            0x8b30	                    mov esi, dword [rax]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005ab4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005ab8	            0x8b00	                    mov eax, dword [rax]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005aba	          0x83f831	                           cmp eax, 0x31	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005abd	            0x7f1d	                            jg 0x4005adc	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005abf	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005ac3	            0x8b00	                    mov eax, dword [rax]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005ac5	            0x4898	                                    cdqe	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005ac7	     0xfb680000000	                   movzx eax, byte [rax]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005ace	           0xfb6c0	                           movzx eax, al	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005ad1	          0x8d50ff	                      lea edx, [rax - 1]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005ad4	            0x89d0	                            mov eax, edx	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005ad6	             0x1c0	                            add eax, eax	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005ad8	             0x1d0	                            add eax, edx	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005ada	            0xeb24	                           jmp 0x4005b00	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005adc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005ae0	            0x8b00	                    mov eax, dword [rax]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005ae2	          0x8d4802	                      lea ecx, [rax + 2]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005ae5	      0xba56555555	                     mov edx, 0x55555556	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005aea	            0x89c8	                            mov eax, ecx	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005aec	            0xf7ea	                                imul edx	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005aee	            0x89c8	                            mov eax, ecx	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005af0	          0xc1f81f	                           sar eax, 0x1f	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005af3	            0x29c2	                            sub edx, eax	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005af5	            0x89d0	                            mov eax, edx	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005af7	          0x8d50ff	                      lea edx, [rax - 1]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005afa	            0x89d0	                            mov eax, edx	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005afc	             0x1c0	                            add eax, eax	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005afe	             0x1d0	                            add eax, edx	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005b00	            0x29c6	                            sub esi, eax	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005b02	            0x89f0	                            mov eax, esi	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005b04	          0x8945c8	             mov dword [rbp - 0x38], eax	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4005b07	      0xe969010000	                           jmp 0x4005c75	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4005b0c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3253	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_3
0x4005b10	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3253	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_3
0x4005b14	            0x7608	                           jbe 0x4005b1e	      3253	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_3
0x4005b16	    0x66c745c00000	                mov word [rbp - 0x40], 0	      3253	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_3
0x4005b1c	            0xeb0b	                           jmp 0x4005b29	      3253	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_3
0x4005b1e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3254	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_1
0x4005b22	           0xfb700	                   movzx eax, word [rax]	      3254	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_1
0x4005b25	        0x668945c0	               mov word [rbp - 0x40], ax	      3254	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_1
0x4005b29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x4005b2d	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x4005b31	            0x7608	                           jbe 0x4005b3b	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x4005b33	    0x66c745c20000	                mov word [rbp - 0x3e], 0	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x4005b39	            0xeb0b	                           jmp 0x4005b46	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x4005b3b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3256	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x4005b3f	           0xfb700	                   movzx eax, word [rax]	      3256	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x4005b42	        0x668945c2	               mov word [rbp - 0x3e], ax	      3256	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x4005b46	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x4005b4a	      0x66c7000000	                       mov word [rax], 0	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x4005b4f	         0xfb745c0	            movzx eax, word [rbp - 0x40]	      3258	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5
0x4005b53	        0x660b45c2	                or ax, word [rbp - 0x3e]	      3258	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5
0x4005b57	          0x6685c0	                             test ax, ax	      3258	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5
0x4005b5a	     0xf8406010000	                            je 0x4005c66	      3258	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5
0x4005b60	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      3261	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005b67	      0xe9ed000000	                           jmp 0x4005c59	      3261	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005b6c	         0xfb745c0	            movzx eax, word [rbp - 0x40]	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4005b70	        0x663345c2	               xor ax, word [rbp - 0x3e]	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4005b74	           0xfb7c0	                           movzx eax, ax	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4005b77	          0x83e001	                              and eax, 1	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4005b7a	            0x85c0	                           test eax, eax	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4005b7c	            0x741c	                            je 0x4005b9a	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4005b7e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4005b82	           0xfb710	                   movzx edx, word [rax]	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4005b85	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4005b88	            0x4898	                                    cdqe	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4005b8a	    0x8b0485000000	                  mov eax, dword [rax*4]	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4005b91	             0x1c2	                            add edx, eax	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4005b93	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4005b97	          0x668910	                      mov word [rax], dx	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4005b9a	         0xfb74dc0	            movzx ecx, word [rbp - 0x40]	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005b9e	           0xfb7c1	                           movzx eax, cx	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005ba1	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005ba7	          0xc1e810	                           shr eax, 0x10	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005baa	            0x89c2	                            mov edx, eax	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bac	        0x66c1ea03	                               shr dx, 3	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bb0	            0x89d0	                            mov eax, edx	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bb2	          0xc1e002	                              shl eax, 2	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bb5	             0x1d0	                            add eax, edx	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bb7	             0x1c0	                            add eax, eax	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bb9	            0x29c1	                            sub ecx, eax	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bbb	            0x89ca	                            mov edx, ecx	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bbd	           0xfb7c2	                           movzx eax, dx	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bc0	          0x8945cc	             mov dword [rbp - 0x34], eax	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bc3	         0xfb745c0	            movzx eax, word [rbp - 0x40]	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bc7	           0xfb7c0	                           movzx eax, ax	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bca	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bd0	          0xc1e810	                           shr eax, 0x10	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bd3	        0x66c1e803	                               shr ax, 3	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bd7	        0x668945c0	               mov word [rbp - 0x40], ax	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bdb	         0xfb74dc2	            movzx ecx, word [rbp - 0x3e]	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bdf	           0xfb7c1	                           movzx eax, cx	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005be2	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005be8	          0xc1e810	                           shr eax, 0x10	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005beb	            0x89c2	                            mov edx, eax	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bed	        0x66c1ea03	                               shr dx, 3	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bf1	            0x89d0	                            mov eax, edx	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bf3	          0xc1e002	                              shl eax, 2	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bf6	             0x1d0	                            add eax, edx	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bf8	             0x1c0	                            add eax, eax	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bfa	            0x29c1	                            sub ecx, eax	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bfc	            0x89ca	                            mov edx, ecx	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005bfe	           0xfb7c2	                           movzx eax, dx	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005c01	           0x945cc	              or dword [rbp - 0x34], eax	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005c04	         0xfb745c2	            movzx eax, word [rbp - 0x3e]	      3266	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005c08	           0xfb7c0	                           movzx eax, ax	      3266	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005c0b	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	      3266	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005c11	          0xc1e810	                           shr eax, 0x10	      3266	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005c14	        0x66c1e803	                               shr ax, 3	      3266	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005c18	        0x668945c2	               mov word [rbp - 0x3e], ax	      3266	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005c1c	        0x837dcc01	               cmp dword [rbp - 0x34], 1	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4005c20	            0x7e1e	                           jle 0x4005c40	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4005c22	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3268	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x4005c26	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3268	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x4005c2a	      0xbe80000000	                           mov esi, 0x80	      3268	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x4005c2f	          0x4889c7	                            mov rdi, rax	      3268	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x4005c32	      0xe8e1870000	                      call sym.decStatus	      3268	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x4005c37	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3269	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4005c3b	      0xe988000000	                           jmp 0x4005cc8	      3269	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4005c40	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4005c44	        0x483b45f8	                cmp rax, qword [rbp - 8]	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4005c48	            0x750b	                           jne 0x4005c55	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4005c4a	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4005c4d	          0x83e801	                              sub eax, 1	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4005c50	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4005c53	            0x7410	                            je 0x4005c65	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4005c55	        0x8345c401	               add dword [rbp - 0x3c], 1	      3261	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005c59	        0x837dc402	               cmp dword [rbp - 0x3c], 2	      3261	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005c5d	     0xf8e09ffffff	                           jle 0x4005b6c	      3261	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005c63	            0xeb01	                           jmp 0x4005c66	      3261	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4005c65	              0x90	                                     nop	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4005c66	      0x488345d002	               add qword [rbp - 0x30], 2	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4005c6b	      0x488345d802	               add qword [rbp - 0x28], 2	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4005c70	      0x488345e002	               add qword [rbp - 0x20], 2	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4005c75	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4005c79	        0x483b45f8	                cmp rax, qword [rbp - 8]	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4005c7d	     0xf8689feffff	                           jbe 0x4005b0c	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4005c83	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4005c87	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4005c8b	        0x4883c20a	                            add rdx, 0xa	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4005c8f	          0x4829d0	                            sub rax, rdx	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4005c92	          0x48d1f8	                              sar rax, 1	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4005c95	            0x89c2	                            mov edx, eax	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4005c97	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4005c9b	        0x4883c00a	                            add rax, 0xa	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4005c9f	            0x89d6	                            mov esi, edx	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4005ca1	          0x4889c7	                            mov rdi, rax	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4005ca4	      0xe8cb870000	                   call sym.decGetDigits	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4005ca9	            0x89c2	                            mov edx, eax	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4005cab	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4005caf	            0x8910	                    mov dword [rax], edx	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4005cb1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3277	decNumber.c	FUNCTION_68	FUNCTION_49
0x4005cb5	    0xc74004000000	                  mov dword [rax + 4], 0	      3277	decNumber.c	FUNCTION_68	FUNCTION_49
0x4005cbc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3278	decNumber.c	FUNCTION_68	FUNCTION_49
0x4005cc0	        0xc6400800	                   mov byte [rax + 8], 0	      3278	decNumber.c	FUNCTION_68	FUNCTION_49
0x4005cc4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3279	decNumber.c	FUNCTION_68	FUNCTION_49
0x4005cc8	              0xc9	                                   leave	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4005cc9	              0xc3	                                     ret	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
decNumberRotate	SWITCH,0:IF,11:FOR,1:CALL,20:DO,0:ELSE,4:WHILE,0:functions,0	392
0x4003e18	              0x55	                                push rbp	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4003e19	          0x4889e5	                            mov rbp, rsp	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4003e1c	        0x4883ec60	                           sub rsp, 0x60	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4003e20	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4003e24	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4003e28	        0x488955a8	             mov qword [rbp - 0x58], rdx	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4003e2c	        0x48894da0	             mov qword [rbp - 0x60], rcx	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4003e30	    0x64488b042528	                mov rax, qword fs:[0x28]	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4003e39	        0x488945f8	                mov qword [rbp - 8], rax	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4003e3d	            0x31c0	                            xor eax, eax	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4003e3f	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      2457	decNumber.c	FUNCTION_68	FUNCTION_41
0x4003e46	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x4003e4a	         0xfb64008	               movzx eax, byte [rax + 8]	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x4003e4e	           0xfb6c0	                           movzx eax, al	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x4003e51	          0x83e030	                           and eax, 0x30	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x4003e54	            0x85c0	                           test eax, eax	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x4003e56	            0x7512	                           jne 0x4003e6a	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x4003e58	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x4003e5c	         0xfb64008	               movzx eax, byte [rax + 8]	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x4003e60	           0xfb6c0	                           movzx eax, al	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x4003e63	          0x83e030	                           and eax, 0x30	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x4003e66	            0x85c0	                           test eax, eax	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x4003e68	            0x7424	                            je 0x4003e8e	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x4003e6a	        0x488d7dc8	                   lea rdi, [rbp - 0x38]	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x4003e6e	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x4003e72	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x4003e76	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x4003e7a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x4003e7e	          0x4989f8	                             mov r8, rdi	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x4003e81	          0x4889c7	                            mov rdi, rax	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x4003e84	      0xe889a30000	                        call sym.decNaNs	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x4003e89	      0xe960040000	                           jmp 0x40042ee	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x4003e8e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4003e92	         0xfb64008	               movzx eax, byte [rax + 8]	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4003e96	           0xfb6c0	                           movzx eax, al	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4003e99	          0x83e040	                           and eax, 0x40	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4003e9c	            0x85c0	                           test eax, eax	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4003e9e	            0x750b	                           jne 0x4003eab	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4003ea0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4003ea4	          0x8b4004	                mov eax, dword [rax + 4]	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4003ea7	            0x85c0	                           test eax, eax	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4003ea9	            0x740c	                            je 0x4003eb7	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4003eab	    0xc745c8800000	           mov dword [rbp - 0x38], 0x80 	      2469	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3
0x4003eb2	      0xe937040000	                           jmp 0x40042ee	      2469	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3
0x4003eb7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2471	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	CALL_6
0x4003ebb	          0x4889c7	                            mov rdi, rax	      2471	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	CALL_6
0x4003ebe	      0xe8569f0000	                      call sym.decGetInt	      2471	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	CALL_6
0x4003ec3	          0x8945cc	             mov dword [rbp - 0x34], eax	      2471	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	CALL_6
0x4003ec6	    0x817dcc000000	     cmp dword [rbp - 0x34], 0x80000000 	      2472	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4003ecd	            0x7427	                            je 0x4003ef6	      2472	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4003ecf	    0x817dcc030000	     cmp dword [rbp - 0x34], 0x80000003 	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4003ed6	            0x741e	                            je 0x4003ef6	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4003ed8	    0x817dcc020000	     cmp dword [rbp - 0x34], 0x80000002 	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4003edf	            0x7415	                            je 0x4003ef6	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4003ee1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4003ee4	              0x99	                                     cdq	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4003ee5	            0x89d0	                            mov eax, edx	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4003ee7	          0x3345cc	             xor eax, dword [rbp - 0x34]	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4003eea	            0x29d0	                            sub eax, edx	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4003eec	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4003ef0	            0x8b12	                    mov edx, dword [rdx]	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4003ef2	            0x39d0	                            cmp eax, edx	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4003ef4	            0x7e0c	                           jle 0x4003f02	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4003ef6	    0xc745c8800000	           mov dword [rbp - 0x38], 0x80 	      2475	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4003efd	      0xe9ec030000	                           jmp 0x40042ee	      2475	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4003f02	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2477	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	CALL_8
0x4003f06	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2477	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	CALL_8
0x4003f0a	          0x4889d6	                            mov rsi, rdx	      2477	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	CALL_8
0x4003f0d	          0x4889c7	                            mov rdi, rax	      2477	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	CALL_8
0x4003f10	      0xe800000000	                          call 0x4003f15	      2477	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	CALL_8
0x4003f15	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2479	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_5
0x4003f19	            0x7909	                           jns 0x4003f24	      2479	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_5
0x4003f1b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2479	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_5
0x4003f1f	            0x8b00	                    mov eax, dword [rax]	      2479	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_5
0x4003f21	           0x145cc	             add dword [rbp - 0x34], eax	      2479	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_5
0x4003f24	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4003f28	     0xf84c0030000	                            je 0x40042ee	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4003f2e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4003f32	            0x8b00	                    mov eax, dword [rax]	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4003f34	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4003f37	     0xf84b1030000	                            je 0x40042ee	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4003f3d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2481	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_9
0x4003f41	         0xfb64008	               movzx eax, byte [rax + 8]	      2481	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_9
0x4003f45	           0xfb6c0	                           movzx eax, al	      2481	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_9
0x4003f48	          0x83e040	                           and eax, 0x40	      2481	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_9
0x4003f4b	            0x85c0	                           test eax, eax	      2481	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_9
0x4003f4d	     0xf859b030000	                           jne 0x40042ee	      2481	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_9
0x4003f53	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f57	        0x488d700a	                    lea rsi, [rax + 0xa]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f5b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f5f	            0x8b00	                    mov eax, dword [rax]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f61	          0x83f831	                           cmp eax, 0x31	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f64	            0x7f1b	                            jg 0x4003f81	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f66	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f6a	            0x8b00	                    mov eax, dword [rax]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f6c	            0x4898	                                    cdqe	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f6e	     0xfb680000000	                   movzx eax, byte [rax]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f75	           0xfb6c0	                           movzx eax, al	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f78	          0x4801c0	                            add rax, rax	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f7b	        0x4883e802	                              sub rax, 2	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f7f	            0xeb24	                           jmp 0x4003fa5	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f81	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f85	            0x8b00	                    mov eax, dword [rax]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f87	          0x8d4802	                      lea ecx, [rax + 2]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f8a	      0xba56555555	                     mov edx, 0x55555556	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f8f	            0x89c8	                            mov eax, ecx	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f91	            0xf7ea	                                imul edx	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f93	            0x89c8	                            mov eax, ecx	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f95	          0xc1f81f	                           sar eax, 0x1f	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f98	            0x29c2	                            sub edx, eax	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f9a	            0x89d0	                            mov eax, edx	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f9c	            0x4898	                                    cdqe	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003f9e	          0x4801c0	                            add rax, rax	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003fa1	        0x4883e802	                              sub rax, 2	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003fa5	          0x4801f0	                            add rax, rsi	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003fa8	        0x488945e8	             mov qword [rbp - 0x18], rax	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4003fac	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fb0	        0x488d700a	                    lea rsi, [rax + 0xa]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fb4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fb8	            0x8b00	                    mov eax, dword [rax]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fba	          0x83f831	                           cmp eax, 0x31	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fbd	            0x7f1b	                            jg 0x4003fda	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fbf	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fc3	            0x8b00	                    mov eax, dword [rax]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fc5	            0x4898	                                    cdqe	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fc7	     0xfb680000000	                   movzx eax, byte [rax]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fce	           0xfb6c0	                           movzx eax, al	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fd1	          0x4801c0	                            add rax, rax	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fd4	        0x4883e802	                              sub rax, 2	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fd8	            0xeb24	                           jmp 0x4003ffe	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fda	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fde	            0x8b00	                    mov eax, dword [rax]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fe0	          0x8d4802	                      lea ecx, [rax + 2]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fe3	      0xba56555555	                     mov edx, 0x55555556	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fe8	            0x89c8	                            mov eax, ecx	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fea	            0xf7ea	                                imul edx	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fec	            0x89c8	                            mov eax, ecx	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003fee	          0xc1f81f	                           sar eax, 0x1f	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003ff1	            0x29c2	                            sub edx, eax	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003ff3	            0x89d0	                            mov eax, edx	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003ff5	            0x4898	                                    cdqe	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003ff7	          0x4801c0	                            add rax, rax	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003ffa	        0x4883e802	                              sub rax, 2	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4003ffe	          0x4801f0	                            add rax, rsi	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4004001	        0x488945f0	             mov qword [rbp - 0x10], rax	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4004005	      0x488345e802	               add qword [rbp - 0x18], 2	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x400400a	            0xeb0e	                           jmp 0x400401a	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x400400c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x4004010	      0x66c7000000	                       mov word [rax], 0	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x4004015	      0x488345e802	               add qword [rbp - 0x18], 2	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x400401a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x400401e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x4004022	            0x76e8	                           jbe 0x400400c	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x4004024	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004028	            0x8b10	                    mov edx, dword [rax]	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400402a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400402e	            0x8910	                    mov dword [rax], edx	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004030	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004034	            0x8b30	                    mov esi, dword [rax]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004036	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400403a	            0x8b00	                    mov eax, dword [rax]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400403c	          0x83f831	                           cmp eax, 0x31	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400403f	            0x7f1d	                            jg 0x400405e	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004041	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004045	            0x8b00	                    mov eax, dword [rax]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004047	            0x4898	                                    cdqe	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004049	     0xfb680000000	                   movzx eax, byte [rax]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004050	           0xfb6c0	                           movzx eax, al	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004053	          0x8d50ff	                      lea edx, [rax - 1]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004056	            0x89d0	                            mov eax, edx	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004058	             0x1c0	                            add eax, eax	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400405a	             0x1d0	                            add eax, edx	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400405c	            0xeb24	                           jmp 0x4004082	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400405e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004062	            0x8b00	                    mov eax, dword [rax]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004064	          0x8d4802	                      lea ecx, [rax + 2]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004067	      0xba56555555	                     mov edx, 0x55555556	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400406c	            0x89c8	                            mov eax, ecx	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400406e	            0xf7ea	                                imul edx	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004070	            0x89c8	                            mov eax, ecx	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004072	          0xc1f81f	                           sar eax, 0x1f	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004075	            0x29c2	                            sub edx, eax	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004077	            0x89d0	                            mov eax, edx	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004079	          0x8d50ff	                      lea edx, [rax - 1]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400407c	            0x89d0	                            mov eax, edx	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400407e	             0x1c0	                            add eax, eax	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004080	             0x1d0	                            add eax, edx	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004082	            0x29c6	                            sub esi, eax	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004084	            0x89f0	                            mov eax, esi	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004086	          0x8945d0	             mov dword [rbp - 0x30], eax	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004089	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2522	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400408d	            0x8b00	                    mov eax, dword [rax]	      2522	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400408f	          0x2b45cc	             sub eax, dword [rbp - 0x34]	      2522	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004092	          0x8945cc	             mov dword [rbp - 0x34], eax	      2522	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004095	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004098	      0xba56555555	                     mov edx, 0x55555556	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400409d	            0x89c8	                            mov eax, ecx	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400409f	            0xf7ea	                                imul edx	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040a1	            0x89c8	                            mov eax, ecx	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040a3	          0xc1f81f	                           sar eax, 0x1f	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040a6	            0x29c2	                            sub edx, eax	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040a8	            0x89d0	                            mov eax, edx	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040aa	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040ad	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040b0	      0xba56555555	                     mov edx, 0x55555556	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040b5	            0x89c8	                            mov eax, ecx	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040b7	            0xf7ea	                                imul edx	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040b9	            0x89c8	                            mov eax, ecx	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040bb	          0xc1f81f	                           sar eax, 0x1f	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040be	            0x29c2	                            sub edx, eax	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040c0	            0x89d0	                            mov eax, edx	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040c2	            0x89c2	                            mov edx, eax	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040c4	             0x1d2	                            add edx, edx	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040c6	             0x1c2	                            add edx, eax	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040c8	            0x89c8	                            mov eax, ecx	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040ca	            0x29d0	                            sub eax, edx	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040cc	          0x8945d8	             mov dword [rbp - 0x28], eax	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40040cf	        0x837dd800	               cmp dword [rbp - 0x28], 0	      2525	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40040d3	     0xf8411010000	                            je 0x40041ea	      2525	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40040d9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40040dd	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40040e1	           0xfb7c0	                           movzx eax, ax	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40040e4	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40040e7	    0x8b0c95000000	                  mov ecx, dword [rdx*4]	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40040ee	      0xba00000000	                              mov edx, 0	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40040f3	            0xf7f1	                                 div ecx	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40040f5	          0x8955dc	             mov dword [rbp - 0x24], edx	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40040f8	          0x8b75d8	             mov esi, dword [rbp - 0x28]	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x40040fb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x40040ff	            0x8b00	                    mov eax, dword [rax]	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x4004101	          0x83f831	                           cmp eax, 0x31	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x4004104	            0x7f14	                            jg 0x400411a	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x4004106	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x400410a	            0x8b00	                    mov eax, dword [rax]	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x400410c	            0x4898	                                    cdqe	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x400410e	     0xfb680000000	                   movzx eax, byte [rax]	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x4004115	           0xfb6c0	                           movzx eax, al	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x4004118	            0xeb1b	                           jmp 0x4004135	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x400411a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x400411e	            0x8b00	                    mov eax, dword [rax]	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x4004120	          0x8d4802	                      lea ecx, [rax + 2]	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x4004123	      0xba56555555	                     mov edx, 0x55555556	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x4004128	            0x89c8	                            mov eax, ecx	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x400412a	            0xf7ea	                                imul edx	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x400412c	            0x89c8	                            mov eax, ecx	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x400412e	          0xc1f81f	                           sar eax, 0x1f	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x4004131	            0x29c2	                            sub edx, eax	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x4004133	            0x89d0	                            mov eax, edx	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x4004135	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x4004139	        0x488d4a0a	                    lea rcx, [rdx + 0xa]	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x400413d	            0x89f2	                            mov edx, esi	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x400413f	            0x89c6	                            mov esi, eax	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x4004141	          0x4889cf	                            mov rdi, rcx	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x4004144	      0xe80c8a0000	                call sym.decShiftToLeast	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x4004149	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2528	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400414c	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      2528	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400414f	            0x7672	                           jbe 0x40041c3	      2528	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004151	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2529	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004154	          0x2b45d0	             sub eax, dword [rbp - 0x30]	      2529	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004157	            0x89c0	                            mov eax, eax	      2529	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004159	    0x8b0c85000000	                  mov ecx, dword [rax*4]	      2529	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004160	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2529	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004163	      0xba00000000	                              mov edx, 0	      2529	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004168	            0xf7f1	                                 div ecx	      2529	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400416a	          0x8955e0	             mov dword [rbp - 0x20], edx	      2529	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400416d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004170	          0x2b45d0	             sub eax, dword [rbp - 0x30]	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004173	            0x89c0	                            mov eax, eax	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004175	    0x8b3c85000000	                  mov edi, dword [rax*4]	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400417c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400417f	      0xba00000000	                              mov edx, 0	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004184	            0xf7f7	                                 div edi	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004186	            0x89c2	                            mov edx, eax	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004188	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400418c	          0x668910	                      mov word [rax], dx	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400418f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2531	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004193	        0x488d50fe	                      lea rdx, [rax - 2]	      2531	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004197	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2531	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400419b	        0x4883e802	                              sub rax, 2	      2531	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400419f	           0xfb708	                   movzx ecx, word [rax]	      2531	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40041a2	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      2532	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40041a5	            0x89c6	                            mov esi, eax	      2532	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40041a7	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2532	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40041aa	          0x2b45d8	             sub eax, dword [rbp - 0x28]	      2532	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40041ad	          0x83c003	                              add eax, 3	      2532	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40041b0	            0x89c0	                            mov eax, eax	      2532	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40041b2	    0x8b0485000000	                  mov eax, dword [rax*4]	      2532	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40041b9	           0xfafc6	                           imul eax, esi	      2532	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40041bc	             0x1c8	                            add eax, ecx	      2531	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40041be	          0x668902	                      mov word [rdx], ax	      2531	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40041c1	            0xeb27	                           jmp 0x40041ea	      2531	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40041c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40041c7	           0xfb710	                   movzx edx, word [rax]	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40041ca	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40041cd	            0x89c1	                            mov ecx, eax	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40041cf	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40041d2	          0x2b45d8	             sub eax, dword [rbp - 0x28]	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40041d5	            0x89c0	                            mov eax, eax	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40041d7	    0x8b0485000000	                  mov eax, dword [rax*4]	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40041de	           0xfafc1	                           imul eax, ecx	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40041e1	             0x1c2	                            add edx, eax	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40041e3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40041e7	          0x668910	                      mov word [rax], dx	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40041ea	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      2540	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9
0x40041ee	     0xf84c9000000	                            je 0x40042bd	      2540	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9
0x40041f4	      0xb803000000	                              mov eax, 3	      2544	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9
0x40041f9	          0x2b45d0	             sub eax, dword [rbp - 0x30]	      2544	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9
0x40041fc	          0x8945d8	             mov dword [rbp - 0x28], eax	      2544	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9
0x40041ff	        0x837dd800	               cmp dword [rbp - 0x28], 0	      2545	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4004203	            0x7459	                            je 0x400425e	      2545	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4004205	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4004209	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x400420d	           0xfb7c0	                           movzx eax, ax	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4004210	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4004213	    0x8b0c95000000	                  mov ecx, dword [rdx*4]	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x400421a	      0xba00000000	                              mov edx, 0	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x400421f	            0xf7f1	                                 div ecx	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4004221	          0x8955e4	             mov dword [rbp - 0x1c], edx	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4004224	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2547	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10	CALL_15
0x4004227	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2547	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10	CALL_15
0x400422a	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      2547	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10	CALL_15
0x400422e	        0x4883c10a	                            add rcx, 0xa	      2547	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10	CALL_15
0x4004232	            0x89c6	                            mov esi, eax	      2547	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10	CALL_15
0x4004234	          0x4889cf	                            mov rdi, rcx	      2547	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10	CALL_15
0x4004237	      0xe819890000	                call sym.decShiftToLeast	      2547	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10	CALL_15
0x400423c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4004240	           0xfb710	                   movzx edx, word [rax]	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4004243	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4004246	            0x89c1	                            mov ecx, eax	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4004248	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x400424b	    0x8b0485000000	                  mov eax, dword [rax*4]	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4004252	           0xfafc1	                           imul eax, ecx	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4004255	             0x1c2	                            add edx, eax	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4004257	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x400425b	          0x668910	                      mov word [rax], dx	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x400425e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x4004262	        0x488d500a	                    lea rdx, [rax + 0xa]	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x4004266	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x4004269	          0x4801c0	                            add rax, rax	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x400426c	          0x4801c2	                            add rdx, rax	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x400426f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x4004273	          0x4889c6	                            mov rsi, rax	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x4004276	          0x4889d7	                            mov rdi, rdx	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x4004279	      0xe804860000	                     call sym.decReverse	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x400427e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2554	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_17
0x4004282	        0x488d500a	                    lea rdx, [rax + 0xa]	      2554	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_17
0x4004286	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2554	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_17
0x4004289	          0x4801c0	                            add rax, rax	      2554	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_17
0x400428c	        0x4883e802	                              sub rax, 2	      2554	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_17
0x4004290	          0x4801c2	                            add rdx, rax	      2554	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_17
0x4004293	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2554	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_17
0x4004297	        0x4883c00a	                            add rax, 0xa	      2554	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_17
0x400429b	          0x4889d6	                            mov rsi, rdx	      2554	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_17
0x400429e	          0x4889c7	                            mov rdi, rax	      2554	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_17
0x40042a1	      0xe8dc850000	                     call sym.decReverse	      2554	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_17
0x40042a6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2555	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_18
0x40042aa	        0x488d500a	                    lea rdx, [rax + 0xa]	      2555	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_18
0x40042ae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2555	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_18
0x40042b2	          0x4889c6	                            mov rsi, rax	      2555	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_18
0x40042b5	          0x4889d7	                            mov rdi, rdx	      2555	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_18
0x40042b8	      0xe8c5850000	                     call sym.decReverse	      2555	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_18
0x40042bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x40042c1	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x40042c5	        0x4883c20a	                            add rdx, 0xa	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x40042c9	          0x4829d0	                            sub rax, rdx	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x40042cc	          0x48d1f8	                              sar rax, 1	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x40042cf	          0x83c001	                              add eax, 1	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x40042d2	            0x89c2	                            mov edx, eax	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x40042d4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x40042d8	        0x4883c00a	                            add rax, 0xa	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x40042dc	            0x89d6	                            mov esi, edx	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x40042de	          0x4889c7	                            mov rdi, rax	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x40042e1	      0xe88ea10000	                   call sym.decGetDigits	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x40042e6	            0x89c2	                            mov edx, eax	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x40042e8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x40042ec	            0x8910	                    mov dword [rax], edx	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x40042ee	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x40042f1	            0x85c0	                           test eax, eax	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x40042f3	            0x7415	                            je 0x400430a	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x40042f5	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x40042f8	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x40042fc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x4004300	            0x89ce	                            mov esi, ecx	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x4004302	          0x4889c7	                            mov rdi, rax	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x4004305	      0xe80ea10000	                      call sym.decStatus	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x400430a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2564	decNumber.c	FUNCTION_68	FUNCTION_41
0x400430e	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004312	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x400431b	            0x7405	                            je 0x4004322	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x400431d	      0xe800000000	                          call 0x4004322	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004322	              0xc9	                                   leave	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004323	              0xc3	                                     ret	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
decNumberDivide	SWITCH,0:IF,1:FOR,0:CALL,3:DO,0:ELSE,0:WHILE,0:functions,0	36
0x4001594	              0x55	                                push rbp	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x4001595	          0x4889e5	                            mov rbp, rsp	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x4001598	        0x4883ec30	                           sub rsp, 0x30	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x400159c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x40015a0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x40015a4	        0x488955d8	             mov qword [rbp - 0x28], rdx	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x40015a8	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x40015ac	    0x64488b042528	                mov rax, qword fs:[0x28]	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x40015b5	        0x488945f8	                mov qword [rbp - 8], rax	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x40015b9	            0x31c0	                            xor eax, eax	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x40015bb	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       993	decNumber.c	FUNCTION_68	FUNCTION_15
0x40015c2	        0x488d7df4	                    lea rdi, [rbp - 0xc]	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x40015c6	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x40015ca	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x40015ce	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x40015d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x40015d6	          0x4989f9	                             mov r9, rdi	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x40015d9	    0x41b880000000	                           mov r8d, 0x80	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x40015df	          0x4889c7	                            mov rdi, rax	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x40015e2	      0xe821640000	                    call sym.decDivideOp	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x40015e7	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x40015ea	            0x85c0	                           test eax, eax	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x40015ec	            0x7415	                            je 0x4001603	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x40015ee	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x40015f1	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x40015f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x40015f9	            0x89ce	                            mov esi, ecx	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x40015fb	          0x4889c7	                            mov rdi, rax	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x40015fe	      0xe815ce0000	                      call sym.decStatus	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x4001603	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       999	decNumber.c	FUNCTION_68	FUNCTION_15
0x4001607	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x400160b	    0x644833342528	                xor rsi, qword fs:[0x28]	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x4001614	            0x7405	                            je 0x400161b	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x4001616	      0xe800000000	                          call 0x400161b	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x400161b	              0xc9	                                   leave	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x400161c	              0xc3	                                     ret	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
decGetDigits	SWITCH,0:IF,6:FOR,2:CALL,1:DO,0:ELSE,0:WHILE,0:functions,0	51
0x400e474	              0x55	                                push rbp	      7761	decNumber.c	FUNCTION_25
0x400e475	          0x4889e5	                            mov rbp, rsp	      7761	decNumber.c	FUNCTION_25
0x400e478	        0x48897de8	             mov qword [rbp - 0x18], rdi	      7761	decNumber.c	FUNCTION_25
0x400e47c	          0x8975e4	             mov dword [rbp - 0x1c], esi	      7761	decNumber.c	FUNCTION_25
0x400e47f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      7762	decNumber.c	FUNCTION_25
0x400e482	            0x4898	                                    cdqe	      7762	decNumber.c	FUNCTION_25
0x400e484	          0x4801c0	                            add rax, rax	      7762	decNumber.c	FUNCTION_25
0x400e487	        0x488d50fe	                      lea rdx, [rax - 2]	      7762	decNumber.c	FUNCTION_25
0x400e48b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7762	decNumber.c	FUNCTION_25
0x400e48f	          0x4801d0	                            add rax, rdx	      7762	decNumber.c	FUNCTION_25
0x400e492	        0x488945f8	                mov qword [rbp - 8], rax	      7762	decNumber.c	FUNCTION_25
0x400e496	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      7763	decNumber.c	FUNCTION_25
0x400e499	          0x8d50ff	                      lea edx, [rax - 1]	      7763	decNumber.c	FUNCTION_25
0x400e49c	            0x89d0	                            mov eax, edx	      7763	decNumber.c	FUNCTION_25
0x400e49e	             0x1c0	                            add eax, eax	      7763	decNumber.c	FUNCTION_25
0x400e4a0	             0x1d0	                            add eax, edx	      7763	decNumber.c	FUNCTION_25
0x400e4a2	          0x83c001	                              add eax, 1	      7763	decNumber.c	FUNCTION_25
0x400e4a5	          0x8945f4	              mov dword [rbp - 0xc], eax	      7763	decNumber.c	FUNCTION_25
0x400e4a8	            0xeb41	                           jmp 0x400e4eb	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400e4aa	        0x488b45f8	                mov rax, qword [rbp - 8]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400e4ae	           0xfb700	                   movzx eax, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400e4b1	          0x6685c0	                             test ax, ax	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400e4b4	            0x7511	                           jne 0x400e4c7	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400e4b6	        0x837df401	                cmp dword [rbp - 0xc], 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400e4ba	            0x743b	                            je 0x400e4f7	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400e4bc	        0x836df403	                sub dword [rbp - 0xc], 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400e4c0	      0x48836df802	                  sub qword [rbp - 8], 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400e4c5	            0xeb24	                           jmp 0x400e4eb	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400e4c7	        0x488b45f8	                mov rax, qword [rbp - 8]	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x400e4cb	           0xfb700	                   movzx eax, word [rax]	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x400e4ce	        0x6683f809	                               cmp ax, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x400e4d2	            0x7626	                           jbe 0x400e4fa	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x400e4d4	        0x8345f401	                add dword [rbp - 0xc], 1	      7780	decNumber.c	FUNCTION_25	FOR_1
0x400e4d8	        0x488b45f8	                mov rax, qword [rbp - 8]	      7782	decNumber.c	FUNCTION_25	FOR_1	IF_5
0x400e4dc	           0xfb700	                   movzx eax, word [rax]	      7782	decNumber.c	FUNCTION_25	FOR_1	IF_5
0x400e4df	        0x6683f863	                            cmp ax, 0x63	      7782	decNumber.c	FUNCTION_25	FOR_1	IF_5
0x400e4e3	            0x7618	                           jbe 0x400e4fd	      7782	decNumber.c	FUNCTION_25	FOR_1	IF_5
0x400e4e5	        0x8345f401	                add dword [rbp - 0xc], 1	      7783	decNumber.c	FUNCTION_25	FOR_1
0x400e4e9	            0xeb13	                           jmp 0x400e4fe	      7793	decNumber.c	FUNCTION_25	FOR_1
0x400e4eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400e4ef	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400e4f3	            0x73b5	                           jae 0x400e4aa	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400e4f5	            0xeb07	                           jmp 0x400e4fe	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400e4f7	              0x90	                                     nop	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400e4f8	            0xeb04	                           jmp 0x400e4fe	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400e4fa	              0x90	                                     nop	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x400e4fb	            0xeb01	                           jmp 0x400e4fe	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x400e4fd	              0x90	                                     nop	      7782	decNumber.c	FUNCTION_25	FOR_1	IF_5
0x400e4fe	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      7795	decNumber.c	FUNCTION_25
0x400e501	              0x5d	                                 pop rbp	      7796	decNumber.c	FUNCTION_25
0x400e502	              0xc3	                                     ret	      7796	decNumber.c	FUNCTION_25
decShiftToMost	SWITCH,0:IF,4:FOR,3:CALL,4:DO,0:ELSE,1:WHILE,0:functions,0	206
0x400c8cb	              0x55	                                push rbp	      6679	decNumber.c	FUNCTION_8
0x400c8cc	          0x4889e5	                            mov rbp, rsp	      6679	decNumber.c	FUNCTION_8
0x400c8cf	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      6679	decNumber.c	FUNCTION_8
0x400c8d3	          0x8975c4	             mov dword [rbp - 0x3c], esi	      6679	decNumber.c	FUNCTION_8
0x400c8d6	          0x8955c0	             mov dword [rbp - 0x40], edx	      6679	decNumber.c	FUNCTION_8
0x400c8d9	        0x837dc000	               cmp dword [rbp - 0x40], 0	      6684	decNumber.c	FUNCTION_8	IF_1
0x400c8dd	            0x7508	                           jne 0x400c8e7	      6684	decNumber.c	FUNCTION_8	IF_1
0x400c8df	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      6684	decNumber.c	FUNCTION_8	IF_1
0x400c8e2	      0xe96c020000	                           jmp 0x400cb53	      6684	decNumber.c	FUNCTION_8	IF_1
0x400c8e7	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      6685	decNumber.c	FUNCTION_8	IF_2
0x400c8ea	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6685	decNumber.c	FUNCTION_8	IF_2
0x400c8ed	             0x1d0	                            add eax, edx	      6685	decNumber.c	FUNCTION_8	IF_2
0x400c8ef	          0x83f803	                              cmp eax, 3	      6685	decNumber.c	FUNCTION_8	IF_2
0x400c8f2	            0x7f2a	                            jg 0x400c91e	      6685	decNumber.c	FUNCTION_8	IF_2
0x400c8f4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6686	decNumber.c	FUNCTION_8	IF_2
0x400c8f8	           0xfb710	                   movzx edx, word [rax]	      6686	decNumber.c	FUNCTION_8	IF_2
0x400c8fb	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6686	decNumber.c	FUNCTION_8	IF_2
0x400c8fe	            0x4898	                                    cdqe	      6686	decNumber.c	FUNCTION_8	IF_2
0x400c900	    0x8b0485000000	                  mov eax, dword [rax*4]	      6686	decNumber.c	FUNCTION_8	IF_2
0x400c907	           0xfafd0	                           imul edx, eax	      6686	decNumber.c	FUNCTION_8	IF_2
0x400c90a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6686	decNumber.c	FUNCTION_8	IF_2
0x400c90e	          0x668910	                      mov word [rax], dx	      6686	decNumber.c	FUNCTION_8	IF_2
0x400c911	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      6687	decNumber.c	FUNCTION_8	IF_2
0x400c914	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6687	decNumber.c	FUNCTION_8	IF_2
0x400c917	             0x1d0	                            add eax, edx	      6687	decNumber.c	FUNCTION_8	IF_2
0x400c919	      0xe935020000	                           jmp 0x400cb53	      6687	decNumber.c	FUNCTION_8	IF_2
0x400c91e	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      6690	decNumber.c	FUNCTION_8
0x400c925	        0x837dc431	           cmp dword [rbp - 0x3c], 0x31 	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c929	            0x7f18	                            jg 0x400c943	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c92b	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c92e	            0x4898	                                    cdqe	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c930	     0xfb680000000	                   movzx eax, byte [rax]	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c937	           0xfb6c0	                           movzx eax, al	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c93a	          0x4801c0	                            add rax, rax	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c93d	        0x4883e802	                              sub rax, 2	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c941	            0xeb21	                           jmp 0x400c964	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c943	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c946	          0x8d4802	                      lea ecx, [rax + 2]	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c949	      0xba56555555	                     mov edx, 0x55555556	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c94e	            0x89c8	                            mov eax, ecx	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c950	            0xf7ea	                                imul edx	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c952	            0x89c8	                            mov eax, ecx	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c954	          0xc1f81f	                           sar eax, 0x1f	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c957	            0x29c2	                            sub edx, eax	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c959	            0x89d0	                            mov eax, edx	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c95b	            0x4898	                                    cdqe	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c95d	          0x4801c0	                            add rax, rax	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c960	        0x4883e802	                              sub rax, 2	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c964	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c968	          0x4801d0	                            add rax, rdx	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c96b	        0x488945f0	             mov qword [rbp - 0x10], rax	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400c96f	        0x837dc031	           cmp dword [rbp - 0x40], 0x31 	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c973	            0x7f14	                            jg 0x400c989	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c975	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c978	            0x4898	                                    cdqe	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c97a	     0xfb680000000	                   movzx eax, byte [rax]	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c981	           0xfb6c0	                           movzx eax, al	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c984	          0x4801c0	                            add rax, rax	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c987	            0xeb1d	                           jmp 0x400c9a6	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c989	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c98c	          0x8d4802	                      lea ecx, [rax + 2]	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c98f	      0xba56555555	                     mov edx, 0x55555556	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c994	            0x89c8	                            mov eax, ecx	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c996	            0xf7ea	                                imul edx	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c998	            0x89c8	                            mov eax, ecx	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c99a	          0xc1f81f	                           sar eax, 0x1f	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c99d	            0x29c2	                            sub edx, eax	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c99f	            0x89d0	                            mov eax, edx	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c9a1	            0x4898	                                    cdqe	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c9a3	          0x4801c0	                            add rax, rax	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c9a6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c9aa	          0x4801d0	                            add rax, rdx	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c9ad	        0x488945e8	             mov qword [rbp - 0x18], rax	      6692	decNumber.c	FUNCTION_8	CALL_2
0x400c9b1	        0x837dc031	           cmp dword [rbp - 0x40], 0x31 	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9b5	            0x7f1a	                            jg 0x400c9d1	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9b7	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9ba	            0x4898	                                    cdqe	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9bc	     0xfb680000000	                   movzx eax, byte [rax]	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9c3	           0xfb6c0	                           movzx eax, al	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9c6	          0x8d50ff	                      lea edx, [rax - 1]	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9c9	            0x89d0	                            mov eax, edx	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9cb	             0x1c0	                            add eax, eax	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9cd	             0x1d0	                            add eax, edx	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9cf	            0xeb21	                           jmp 0x400c9f2	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9d1	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9d4	          0x8d4802	                      lea ecx, [rax + 2]	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9d7	      0xba56555555	                     mov edx, 0x55555556	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9dc	            0x89c8	                            mov eax, ecx	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9de	            0xf7ea	                                imul edx	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9e0	            0x89c8	                            mov eax, ecx	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9e2	          0xc1f81f	                           sar eax, 0x1f	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9e5	            0x29c2	                            sub edx, eax	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9e7	            0x89d0	                            mov eax, edx	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9e9	          0x8d50ff	                      lea edx, [rax - 1]	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9ec	            0x89d0	                            mov eax, edx	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9ee	             0x1c0	                            add eax, eax	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9f0	             0x1d0	                            add eax, edx	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9f2	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9f5	            0x29c2	                            sub edx, eax	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9f7	            0x89d0	                            mov eax, edx	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9f9	      0xba03000000	                              mov edx, 3	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400c9fe	            0x29c2	                            sub edx, eax	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400ca00	            0x89d0	                            mov eax, edx	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400ca02	          0x8945dc	             mov dword [rbp - 0x24], eax	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400ca05	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      6694	decNumber.c	FUNCTION_8	IF_3
0x400ca09	            0x7529	                           jne 0x400ca34	      6694	decNumber.c	FUNCTION_8	IF_3
0x400ca0b	            0xeb18	                           jmp 0x400ca25	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x400ca0d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x400ca11	           0xfb710	                   movzx edx, word [rax]	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x400ca14	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x400ca18	          0x668910	                      mov word [rax], dx	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x400ca1b	      0x48836df002	               sub qword [rbp - 0x10], 2	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x400ca20	      0x48836de802	               sub qword [rbp - 0x18], 2	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x400ca25	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x400ca29	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x400ca2d	            0x73de	                           jae 0x400ca0d	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x400ca2f	      0xe90d010000	                           jmp 0x400cb41	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x400ca34	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca37	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca3a	             0x1d0	                            add eax, edx	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca3c	          0x83f831	                           cmp eax, 0x31	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca3f	            0x7f1d	                            jg 0x400ca5e	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca41	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca44	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca47	             0x1d0	                            add eax, edx	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca49	            0x4898	                                    cdqe	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca4b	     0xfb680000000	                   movzx eax, byte [rax]	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca52	           0xfb6c0	                           movzx eax, al	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca55	          0x4801c0	                            add rax, rax	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca58	        0x4883e802	                              sub rax, 2	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca5c	            0xeb26	                           jmp 0x400ca84	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca5e	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca61	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca64	             0x1d0	                            add eax, edx	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca66	          0x8d4802	                      lea ecx, [rax + 2]	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca69	      0xba56555555	                     mov edx, 0x55555556	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca6e	            0x89c8	                            mov eax, ecx	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca70	            0xf7ea	                                imul edx	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca72	            0x89c8	                            mov eax, ecx	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca74	          0xc1f81f	                           sar eax, 0x1f	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca77	            0x29c2	                            sub edx, eax	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca79	            0x89d0	                            mov eax, edx	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca7b	            0x4898	                                    cdqe	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca7d	          0x4801c0	                            add rax, rax	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca80	        0x4883e802	                              sub rax, 2	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca84	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca88	          0x4801d0	                            add rax, rdx	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca8b	        0x488945f8	                mov qword [rbp - 8], rax	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400ca8f	      0xe985000000	                           jmp 0x400cb19	      6699	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400ca94	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400ca98	           0xfb700	                   movzx eax, word [rax]	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400ca9b	           0xfb7d0	                           movzx edx, ax	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400ca9e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400caa1	            0x89c1	                            mov ecx, eax	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400caa3	            0xd3ea	                             shr edx, cl	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400caa5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400caa8	            0x4898	                                    cdqe	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400caaa	    0x8b0485000000	                  mov eax, dword [rax*4]	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cab1	           0xfafc2	                           imul eax, edx	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cab4	          0xc1e811	                           shr eax, 0x11	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cab7	          0x8945e0	             mov dword [rbp - 0x20], eax	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400caba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6703	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cabe	           0xfb700	                   movzx eax, word [rax]	      6703	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cac1	           0xfb7d0	                           movzx edx, ax	      6703	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cac4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6703	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cac7	            0x4898	                                    cdqe	      6703	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cac9	    0x8b0485000000	                  mov eax, dword [rax*4]	      6703	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cad0	         0xfaf45e0	            imul eax, dword [rbp - 0x20]	      6703	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cad4	            0x29c2	                            sub edx, eax	      6703	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cad6	            0x89d0	                            mov eax, edx	      6703	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cad8	          0x8945e4	             mov dword [rbp - 0x1c], eax	      6703	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cadb	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6704	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cade	           0x145d8	             add dword [rbp - 0x28], eax	      6704	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cae1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6709	decNumber.c	FUNCTION_8	ELSE_1	FOR_2	IF_4
0x400cae5	        0x483b45f8	                cmp rax, qword [rbp - 8]	      6709	decNumber.c	FUNCTION_8	ELSE_1	FOR_2	IF_4
0x400cae9	            0x770c	                            ja 0x400caf7	      6709	decNumber.c	FUNCTION_8	ELSE_1	FOR_2	IF_4
0x400caeb	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      6709	decNumber.c	FUNCTION_8	ELSE_1	FOR_2	IF_4
0x400caee	            0x89c2	                            mov edx, eax	      6709	decNumber.c	FUNCTION_8	ELSE_1	FOR_2	IF_4
0x400caf0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6709	decNumber.c	FUNCTION_8	ELSE_1	FOR_2	IF_4
0x400caf4	          0x668910	                      mov word [rax], dx	      6709	decNumber.c	FUNCTION_8	ELSE_1	FOR_2	IF_4
0x400caf7	      0xb803000000	                              mov eax, 3	      6710	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cafc	          0x2b45dc	             sub eax, dword [rbp - 0x24]	      6710	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400caff	            0x4898	                                    cdqe	      6710	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cb01	    0x8b0485000000	                  mov eax, dword [rax*4]	      6710	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cb08	         0xfaf45e4	            imul eax, dword [rbp - 0x1c]	      6710	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cb0c	          0x8945d8	             mov dword [rbp - 0x28], eax	      6710	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cb0f	      0x48836df002	               sub qword [rbp - 0x10], 2	      6699	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cb14	      0x48836de802	               sub qword [rbp - 0x18], 2	      6699	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cb19	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6699	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cb1d	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      6699	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cb21	     0xf836dffffff	                           jae 0x400ca94	      6699	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400cb27	            0xeb18	                           jmp 0x400cb41	      6715	decNumber.c	FUNCTION_8	FOR_3
0x400cb29	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      6716	decNumber.c	FUNCTION_8	FOR_3
0x400cb2c	            0x89c2	                            mov edx, eax	      6716	decNumber.c	FUNCTION_8	FOR_3
0x400cb2e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6716	decNumber.c	FUNCTION_8	FOR_3
0x400cb32	          0x668910	                      mov word [rax], dx	      6716	decNumber.c	FUNCTION_8	FOR_3
0x400cb35	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      6717	decNumber.c	FUNCTION_8	FOR_3
0x400cb3c	      0x48836de802	               sub qword [rbp - 0x18], 2	      6715	decNumber.c	FUNCTION_8	FOR_3
0x400cb41	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6715	decNumber.c	FUNCTION_8	FOR_3
0x400cb45	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      6715	decNumber.c	FUNCTION_8	FOR_3
0x400cb49	            0x73de	                           jae 0x400cb29	      6715	decNumber.c	FUNCTION_8	FOR_3
0x400cb4b	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      6719	decNumber.c	FUNCTION_8
0x400cb4e	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6719	decNumber.c	FUNCTION_8
0x400cb51	             0x1d0	                            add eax, edx	      6719	decNumber.c	FUNCTION_8
0x400cb53	              0x5d	                                 pop rbp	      6720	decNumber.c	FUNCTION_8
0x400cb54	              0xc3	                                     ret	      6720	decNumber.c	FUNCTION_8
decApplyRound	SWITCH,1:IF,27:FOR,4:CALL,6:DO,0:ELSE,6:WHILE,0:functions,0	327
0x400d284	              0x55	                                push rbp	      7065	decNumber.c	FUNCTION_13
0x400d285	          0x4889e5	                            mov rbp, rsp	      7065	decNumber.c	FUNCTION_13
0x400d288	        0x4883ec50	                           sub rsp, 0x50	      7065	decNumber.c	FUNCTION_13
0x400d28c	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      7065	decNumber.c	FUNCTION_13
0x400d290	        0x488975c0	             mov qword [rbp - 0x40], rsi	      7065	decNumber.c	FUNCTION_13
0x400d294	          0x8955bc	             mov dword [rbp - 0x44], edx	      7065	decNumber.c	FUNCTION_13
0x400d297	        0x48894db0	             mov qword [rbp - 0x50], rcx	      7065	decNumber.c	FUNCTION_13
0x400d29b	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      7069	decNumber.c	FUNCTION_13	IF_1
0x400d29f	     0xf844c040000	                            je 0x400d6f1	      7069	decNumber.c	FUNCTION_13	IF_1
0x400d2a5	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      7071	decNumber.c	FUNCTION_13
0x400d2ac	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7074	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2b0	          0x8b400c	              mov eax, dword [rax + 0xc]	      7074	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2b3	          0x83f807	                              cmp eax, 7	      7074	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2b6	     0xf8752010000	                            ja 0x400d40e	      7074	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2bc	            0x89c0	                            mov eax, eax	      7074	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2be	    0x488b04c50000	                  mov rax, qword [rax*8]	      7074	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2c6	            0xffe0	                                 jmp rax	      7074	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2cc	         0xfb7480a	            movzx ecx, word [rax + 0xa] 	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2d0	           0xfb7c1	                           movzx eax, cx	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2d3	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2d9	          0xc1e810	                           shr eax, 0x10	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2dc	            0x89c2	                            mov edx, eax	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2de	        0x66c1ea02	                               shr dx, 2	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2e2	            0x89d0	                            mov eax, edx	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2e4	          0xc1e002	                              shl eax, 2	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2e7	             0x1d0	                            add eax, edx	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2e9	            0x29c1	                            sub ecx, eax	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2eb	            0x89ca	                            mov edx, ecx	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2ed	           0xfb7c2	                           movzx eax, dx	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2f0	          0x8945e4	             mov dword [rbp - 0x1c], eax	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x400d2f3	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      7082	decNumber.c	FUNCTION_13	SWITCH_1	IF_2
0x400d2f7	            0x7912	                           jns 0x400d30b	      7082	decNumber.c	FUNCTION_13	SWITCH_1	IF_2
0x400d2f9	        0x837de401	               cmp dword [rbp - 0x1c], 1	      7082	decNumber.c	FUNCTION_13	SWITCH_1	IF_2
0x400d2fd	            0x740c	                            je 0x400d30b	      7082	decNumber.c	FUNCTION_13	SWITCH_1	IF_2
0x400d2ff	    0xc745d8ffffff	     mov dword [rbp - 0x28], 0xffffffff 	      7082	decNumber.c	FUNCTION_13	SWITCH_1	IF_2
0x400d306	      0xe916010000	                           jmp 0x400d421	      7085	decNumber.c	FUNCTION_13	SWITCH_1
0x400d30b	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      7083	decNumber.c	FUNCTION_13	SWITCH_1	IF_3
0x400d30f	     0xf8e0c010000	                           jle 0x400d421	      7083	decNumber.c	FUNCTION_13	SWITCH_1	IF_3
0x400d315	        0x837de400	               cmp dword [rbp - 0x1c], 0	      7083	decNumber.c	FUNCTION_13	SWITCH_1	IF_3
0x400d319	     0xf8502010000	                           jne 0x400d421	      7083	decNumber.c	FUNCTION_13	SWITCH_1	IF_3
0x400d31f	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      7083	decNumber.c	FUNCTION_13	SWITCH_1	IF_3
0x400d326	      0xe9f6000000	                           jmp 0x400d421	      7085	decNumber.c	FUNCTION_13	SWITCH_1
0x400d32b	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      7089	decNumber.c	FUNCTION_13	SWITCH_1	IF_4
0x400d32f	     0xf89ef000000	                           jns 0x400d424	      7089	decNumber.c	FUNCTION_13	SWITCH_1	IF_4
0x400d335	    0xc745d8ffffff	     mov dword [rbp - 0x28], 0xffffffff 	      7089	decNumber.c	FUNCTION_13	SWITCH_1	IF_4
0x400d33c	      0xe9e3000000	                           jmp 0x400d424	      7090	decNumber.c	FUNCTION_13	SWITCH_1
0x400d341	        0x837dbc05	               cmp dword [rbp - 0x44], 5	      7093	decNumber.c	FUNCTION_13	SWITCH_1	IF_5
0x400d345	     0xf8edc000000	                           jle 0x400d427	      7093	decNumber.c	FUNCTION_13	SWITCH_1	IF_5
0x400d34b	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      7093	decNumber.c	FUNCTION_13	SWITCH_1	IF_5
0x400d352	      0xe9d0000000	                           jmp 0x400d427	      7094	decNumber.c	FUNCTION_13	SWITCH_1
0x400d357	        0x837dbc05	               cmp dword [rbp - 0x44], 5	      7097	decNumber.c	FUNCTION_13	SWITCH_1	IF_6
0x400d35b	            0x7e0c	                           jle 0x400d369	      7097	decNumber.c	FUNCTION_13	SWITCH_1	IF_6
0x400d35d	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      7097	decNumber.c	FUNCTION_13	SWITCH_1	IF_6
0x400d364	      0xe9c1000000	                           jmp 0x400d42a	      7102	decNumber.c	FUNCTION_13	SWITCH_1
0x400d369	        0x837dbc05	               cmp dword [rbp - 0x44], 5	      7098	decNumber.c	FUNCTION_13	SWITCH_1	ELSE_2	IF_7
0x400d36d	     0xf85b7000000	                           jne 0x400d42a	      7098	decNumber.c	FUNCTION_13	SWITCH_1	ELSE_2	IF_7
0x400d373	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7100	decNumber.c	FUNCTION_13	SWITCH_1	ELSE_2	IF_7	IF_8
0x400d377	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      7100	decNumber.c	FUNCTION_13	SWITCH_1	ELSE_2	IF_7	IF_8
0x400d37b	           0xfb7c0	                           movzx eax, ax	      7100	decNumber.c	FUNCTION_13	SWITCH_1	ELSE_2	IF_7	IF_8
0x400d37e	          0x83e001	                              and eax, 1	      7100	decNumber.c	FUNCTION_13	SWITCH_1	ELSE_2	IF_7	IF_8
0x400d381	            0x85c0	                           test eax, eax	      7100	decNumber.c	FUNCTION_13	SWITCH_1	ELSE_2	IF_7	IF_8
0x400d383	     0xf84a1000000	                            je 0x400d42a	      7100	decNumber.c	FUNCTION_13	SWITCH_1	ELSE_2	IF_7	IF_8
0x400d389	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      7100	decNumber.c	FUNCTION_13	SWITCH_1	ELSE_2	IF_7	IF_8
0x400d390	      0xe995000000	                           jmp 0x400d42a	      7102	decNumber.c	FUNCTION_13	SWITCH_1
0x400d395	        0x837dbc04	               cmp dword [rbp - 0x44], 4	      7105	decNumber.c	FUNCTION_13	SWITCH_1	IF_9
0x400d399	     0xf8e8e000000	                           jle 0x400d42d	      7105	decNumber.c	FUNCTION_13	SWITCH_1	IF_9
0x400d39f	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      7105	decNumber.c	FUNCTION_13	SWITCH_1	IF_9
0x400d3a6	      0xe982000000	                           jmp 0x400d42d	      7106	decNumber.c	FUNCTION_13	SWITCH_1
0x400d3ab	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      7109	decNumber.c	FUNCTION_13	SWITCH_1	IF_10
0x400d3af	            0x7e7f	                           jle 0x400d430	      7109	decNumber.c	FUNCTION_13	SWITCH_1	IF_10
0x400d3b1	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      7109	decNumber.c	FUNCTION_13	SWITCH_1	IF_10
0x400d3b8	            0xeb76	                           jmp 0x400d430	      7110	decNumber.c	FUNCTION_13	SWITCH_1
0x400d3ba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7115	decNumber.c	FUNCTION_13	SWITCH_1	IF_11	CALL_1
0x400d3be	         0xfb64008	               movzx eax, byte [rax + 8]	      7115	decNumber.c	FUNCTION_13	SWITCH_1	IF_11	CALL_1
0x400d3c2	            0x84c0	                             test al, al	      7115	decNumber.c	FUNCTION_13	SWITCH_1	IF_11	CALL_1
0x400d3c4	            0x790f	                           jns 0x400d3d5	      7115	decNumber.c	FUNCTION_13	SWITCH_1	IF_11	CALL_1
0x400d3c6	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      7116	decNumber.c	FUNCTION_13	SWITCH_1	IF_11	IF_12
0x400d3ca	            0x7967	                           jns 0x400d433	      7116	decNumber.c	FUNCTION_13	SWITCH_1	IF_11	IF_12
0x400d3cc	    0xc745d8ffffff	     mov dword [rbp - 0x28], 0xffffffff 	      7116	decNumber.c	FUNCTION_13	SWITCH_1	IF_11	IF_12
0x400d3d3	            0xeb5e	                           jmp 0x400d433	      7121	decNumber.c	FUNCTION_13	SWITCH_1
0x400d3d5	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      7119	decNumber.c	FUNCTION_13	SWITCH_1	ELSE_3	IF_13
0x400d3d9	            0x7e58	                           jle 0x400d433	      7119	decNumber.c	FUNCTION_13	SWITCH_1	ELSE_3	IF_13
0x400d3db	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      7119	decNumber.c	FUNCTION_13	SWITCH_1	ELSE_3	IF_13
0x400d3e2	            0xeb4f	                           jmp 0x400d433	      7121	decNumber.c	FUNCTION_13	SWITCH_1
0x400d3e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7126	decNumber.c	FUNCTION_13	SWITCH_1	IF_14	CALL_2
0x400d3e8	         0xfb64008	               movzx eax, byte [rax + 8]	      7126	decNumber.c	FUNCTION_13	SWITCH_1	IF_14	CALL_2
0x400d3ec	            0x84c0	                             test al, al	      7126	decNumber.c	FUNCTION_13	SWITCH_1	IF_14	CALL_2
0x400d3ee	            0x780f	                            js 0x400d3ff	      7126	decNumber.c	FUNCTION_13	SWITCH_1	IF_14	CALL_2
0x400d3f0	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      7127	decNumber.c	FUNCTION_13	SWITCH_1	IF_14	IF_15
0x400d3f4	            0x7940	                           jns 0x400d436	      7127	decNumber.c	FUNCTION_13	SWITCH_1	IF_14	IF_15
0x400d3f6	    0xc745d8ffffff	     mov dword [rbp - 0x28], 0xffffffff 	      7127	decNumber.c	FUNCTION_13	SWITCH_1	IF_14	IF_15
0x400d3fd	            0xeb37	                           jmp 0x400d436	      7132	decNumber.c	FUNCTION_13	SWITCH_1
0x400d3ff	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      7130	decNumber.c	FUNCTION_13	SWITCH_1	ELSE_4	IF_16
0x400d403	            0x7e31	                           jle 0x400d436	      7130	decNumber.c	FUNCTION_13	SWITCH_1	ELSE_4	IF_16
0x400d405	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      7130	decNumber.c	FUNCTION_13	SWITCH_1	ELSE_4	IF_16
0x400d40c	            0xeb28	                           jmp 0x400d436	      7132	decNumber.c	FUNCTION_13	SWITCH_1
0x400d40e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7135	decNumber.c	FUNCTION_13	SWITCH_1
0x400d412	            0x8b00	                    mov eax, dword [rax]	      7135	decNumber.c	FUNCTION_13	SWITCH_1
0x400d414	          0x83c840	                            or eax, 0x40	      7135	decNumber.c	FUNCTION_13	SWITCH_1
0x400d417	            0x89c2	                            mov edx, eax	      7135	decNumber.c	FUNCTION_13	SWITCH_1
0x400d419	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7135	decNumber.c	FUNCTION_13	SWITCH_1
0x400d41d	            0x8910	                    mov dword [rax], edx	      7135	decNumber.c	FUNCTION_13	SWITCH_1
0x400d41f	            0xeb16	                           jmp 0x400d437	      7139	decNumber.c	FUNCTION_13	SWITCH_1
0x400d421	              0x90	                                     nop	      7085	decNumber.c	FUNCTION_13	SWITCH_1
0x400d422	            0xeb13	                           jmp 0x400d437	      7085	decNumber.c	FUNCTION_13	SWITCH_1
0x400d424	              0x90	                                     nop	      7090	decNumber.c	FUNCTION_13	SWITCH_1
0x400d425	            0xeb10	                           jmp 0x400d437	      7090	decNumber.c	FUNCTION_13	SWITCH_1
0x400d427	              0x90	                                     nop	      7094	decNumber.c	FUNCTION_13	SWITCH_1
0x400d428	            0xeb0d	                           jmp 0x400d437	      7094	decNumber.c	FUNCTION_13	SWITCH_1
0x400d42a	              0x90	                                     nop	      7102	decNumber.c	FUNCTION_13	SWITCH_1
0x400d42b	            0xeb0a	                           jmp 0x400d437	      7102	decNumber.c	FUNCTION_13	SWITCH_1
0x400d42d	              0x90	                                     nop	      7106	decNumber.c	FUNCTION_13	SWITCH_1
0x400d42e	            0xeb07	                           jmp 0x400d437	      7106	decNumber.c	FUNCTION_13	SWITCH_1
0x400d430	              0x90	                                     nop	      7110	decNumber.c	FUNCTION_13	SWITCH_1
0x400d431	            0xeb04	                           jmp 0x400d437	      7110	decNumber.c	FUNCTION_13	SWITCH_1
0x400d433	              0x90	                                     nop	      7121	decNumber.c	FUNCTION_13	SWITCH_1
0x400d434	            0xeb01	                           jmp 0x400d437	      7121	decNumber.c	FUNCTION_13	SWITCH_1
0x400d436	              0x90	                                     nop	      7132	decNumber.c	FUNCTION_13	SWITCH_1
0x400d437	        0x837dd800	               cmp dword [rbp - 0x28], 0	      7143	decNumber.c	FUNCTION_13	IF_17
0x400d43b	     0xf84b3020000	                            je 0x400d6f4	      7143	decNumber.c	FUNCTION_13	IF_17
0x400d441	        0x837dd800	               cmp dword [rbp - 0x28], 0	      7150	decNumber.c	FUNCTION_13	IF_18
0x400d445	     0xf8ee6000000	                           jle 0x400d531	      7150	decNumber.c	FUNCTION_13	IF_18
0x400d44b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7152	decNumber.c	FUNCTION_13	IF_18
0x400d44f	            0x8b00	                    mov eax, dword [rax]	      7152	decNumber.c	FUNCTION_13	IF_18
0x400d451	          0x8945dc	             mov dword [rbp - 0x24], eax	      7152	decNumber.c	FUNCTION_13	IF_18
0x400d454	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7153	decNumber.c	FUNCTION_13	IF_18	FOR_1
0x400d458	        0x4883c00a	                            add rax, 0xa	      7153	decNumber.c	FUNCTION_13	IF_18	FOR_1
0x400d45c	        0x488945e8	             mov qword [rbp - 0x18], rax	      7153	decNumber.c	FUNCTION_13	IF_18	FOR_1
0x400d460	        0x837ddc03	               cmp dword [rbp - 0x24], 3	      7154	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400d464	     0xf87a8000000	                            ja 0x400d512	      7154	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400d46a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7156	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_20
0x400d46e	           0xfb700	                   movzx eax, word [rax]	      7156	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_20
0x400d471	           0xfb7d0	                           movzx edx, ax	      7156	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_20
0x400d474	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      7156	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_20
0x400d477	    0x8b0485000000	                  mov eax, dword [rax*4]	      7156	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_20
0x400d47e	          0x83e801	                              sub eax, 1	      7156	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_20
0x400d481	            0x39c2	                            cmp edx, eax	      7156	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_20
0x400d483	     0xf85ec010000	                           jne 0x400d675	      7156	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_20
0x400d489	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      7158	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400d48c	          0x83e801	                              sub eax, 1	      7158	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400d48f	            0x89c0	                            mov eax, eax	      7158	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400d491	    0x8b0485000000	                  mov eax, dword [rax*4]	      7158	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400d498	            0x89c2	                            mov edx, eax	      7158	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400d49a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7158	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400d49e	          0x668910	                      mov word [rax], dx	      7158	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400d4a1	      0x48836de802	               sub qword [rbp - 0x18], 2	      7159	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	FOR_2
0x400d4a6	            0xeb0e	                           jmp 0x400d4b6	      7159	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	FOR_2
0x400d4a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7159	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	FOR_2
0x400d4ac	      0x66c7000000	                       mov word [rax], 0	      7159	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	FOR_2
0x400d4b1	      0x48836de802	               sub qword [rbp - 0x18], 2	      7159	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	FOR_2
0x400d4b6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7159	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	FOR_2
0x400d4ba	        0x4883c00a	                            add rax, 0xa	      7159	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	FOR_2
0x400d4be	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      7159	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	FOR_2
0x400d4c2	            0x76e4	                           jbe 0x400d4a8	      7159	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	FOR_2
0x400d4c4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7160	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400d4c8	          0x8b4004	                mov eax, dword [rax + 4]	      7160	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400d4cb	          0x8d5001	                      lea edx, [rax + 1]	      7160	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400d4ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7160	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400d4d2	          0x895004	                mov dword [rax + 4], edx	      7160	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400d4d5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7162	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21
0x400d4d9	          0x8b5004	                mov edx, dword [rax + 4]	      7162	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21
0x400d4dc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7162	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21
0x400d4e0	            0x8b00	                    mov eax, dword [rax]	      7162	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21
0x400d4e2	             0x1c2	                            add edx, eax	      7162	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21
0x400d4e4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7162	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21
0x400d4e8	          0x8b4004	                mov eax, dword [rax + 4]	      7162	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21
0x400d4eb	          0x83c001	                              add eax, 1	      7162	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21
0x400d4ee	            0x39c2	                            cmp edx, eax	      7162	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21
0x400d4f0	     0xf8e01020000	                           jle 0x400d6f7	      7162	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21
0x400d4f6	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      7163	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21	CALL_4
0x400d4fa	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      7163	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21	CALL_4
0x400d4fe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7163	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21	CALL_4
0x400d502	          0x4889ce	                            mov rsi, rcx	      7163	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21	CALL_4
0x400d505	          0x4889c7	                            mov rdi, rax	      7163	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21	CALL_4
0x400d508	      0xe847040000	                 call sym.decSetOverflow	      7163	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21	CALL_4
0x400d50d	      0xe9e5010000	                           jmp 0x400d6f7	      7165	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400d512	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7168	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_22
0x400d516	           0xfb700	                   movzx eax, word [rax]	      7168	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_22
0x400d519	        0x663de703	                           cmp ax, 0x3e7	      7168	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_22
0x400d51d	     0xf8555010000	                           jne 0x400d678	      7168	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_22
0x400d523	        0x836ddc03	               sub dword [rbp - 0x24], 3	      7169	decNumber.c	FUNCTION_13	IF_18	FOR_1
0x400d527	      0x488345e802	               add qword [rbp - 0x18], 2	      7153	decNumber.c	FUNCTION_13	IF_18	FOR_1
0x400d52c	      0xe92fffffff	                           jmp 0x400d460	      7170	decNumber.c	FUNCTION_13	IF_18	FOR_1
0x400d531	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7176	decNumber.c	FUNCTION_13	ELSE_5
0x400d535	            0x8b00	                    mov eax, dword [rax]	      7176	decNumber.c	FUNCTION_13	ELSE_5
0x400d537	          0x8945e0	             mov dword [rbp - 0x20], eax	      7176	decNumber.c	FUNCTION_13	ELSE_5
0x400d53a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7177	decNumber.c	FUNCTION_13	ELSE_5	FOR_3
0x400d53e	        0x4883c00a	                            add rax, 0xa	      7177	decNumber.c	FUNCTION_13	ELSE_5	FOR_3
0x400d542	        0x488945f0	             mov qword [rbp - 0x10], rax	      7177	decNumber.c	FUNCTION_13	ELSE_5	FOR_3
0x400d546	        0x837de003	               cmp dword [rbp - 0x20], 3	      7178	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x400d54a	     0xf870b010000	                            ja 0x400d65b	      7178	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x400d550	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7180	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_24
0x400d554	           0xfb700	                   movzx eax, word [rax]	      7180	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_24
0x400d557	           0xfb7d0	                           movzx edx, ax	      7180	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_24
0x400d55a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7180	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_24
0x400d55d	          0x83e801	                              sub eax, 1	      7180	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_24
0x400d560	            0x89c0	                            mov eax, eax	      7180	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_24
0x400d562	    0x8b0485000000	                  mov eax, dword [rax*4]	      7180	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_24
0x400d569	            0x39c2	                            cmp edx, eax	      7180	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_24
0x400d56b	     0xf850a010000	                           jne 0x400d67b	      7180	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_24
0x400d571	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7182	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x400d575	        0x488945f8	                mov qword [rbp - 8], rax	      7182	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x400d579	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7183	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x400d57c	    0x8b0485000000	                  mov eax, dword [rax*4]	      7183	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x400d583	          0x8d50ff	                      lea edx, [rax - 1]	      7183	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x400d586	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7183	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x400d58a	          0x668910	                      mov word [rax], dx	      7183	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x400d58d	      0x48836df002	               sub qword [rbp - 0x10], 2	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x400d592	            0xeb15	                           jmp 0x400d5a9	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x400d594	    0x8b0500000000	            mov eax, dword [0x0400d59a] 	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x400d59a	          0x8d50ff	                      lea edx, [rax - 1]	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x400d59d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x400d5a1	          0x668910	                      mov word [rax], dx	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x400d5a4	      0x48836df002	               sub qword [rbp - 0x10], 2	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x400d5a9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x400d5ad	        0x4883c00a	                            add rax, 0xa	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x400d5b1	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x400d5b5	            0x76dd	                           jbe 0x400d594	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x400d5b7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7186	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x400d5bb	          0x8b4004	                mov eax, dword [rax + 4]	      7186	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x400d5be	          0x8d50ff	                      lea edx, [rax - 1]	      7186	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x400d5c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7186	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x400d5c5	          0x895004	                mov dword [rax + 4], edx	      7186	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x400d5c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7193	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d5cc	          0x8b4004	                mov eax, dword [rax + 4]	      7193	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d5cf	          0x8d4801	                      lea ecx, [rax + 1]	      7193	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d5d2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7193	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d5d6	          0x8b5008	                mov edx, dword [rax + 8]	      7193	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d5d9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7193	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d5dd	            0x8b00	                    mov eax, dword [rax]	      7193	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d5df	            0x29c2	                            sub edx, eax	      7193	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d5e1	            0x89d0	                            mov eax, edx	      7193	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d5e3	          0x83c001	                              add eax, 1	      7193	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d5e6	            0x39c1	                            cmp ecx, eax	      7193	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d5e8	     0xf850c010000	                           jne 0x400d6fa	      7193	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d5ee	        0x837de001	               cmp dword [rbp - 0x20], 1	      7194	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	IF_26
0x400d5f2	            0x7516	                           jne 0x400d60a	      7194	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	IF_26
0x400d5f4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7194	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	IF_26
0x400d5f8	            0x8b00	                    mov eax, dword [rax]	      7194	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	IF_26
0x400d5fa	          0x83f801	                              cmp eax, 1	      7194	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	IF_26
0x400d5fd	            0x750b	                           jne 0x400d60a	      7194	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	IF_26
0x400d5ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      7194	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	IF_26
0x400d603	      0x66c7000000	                       mov word [rax], 0	      7194	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	IF_26
0x400d608	            0xeb28	                           jmp 0x400d632	      7194	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	IF_26
0x400d60a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7196	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	ELSE_6
0x400d60d	          0x83e801	                              sub eax, 1	      7196	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	ELSE_6
0x400d610	            0x89c0	                            mov eax, eax	      7196	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	ELSE_6
0x400d612	    0x8b0485000000	                  mov eax, dword [rax*4]	      7196	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	ELSE_6
0x400d619	          0x8d50ff	                      lea edx, [rax - 1]	      7196	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	ELSE_6
0x400d61c	        0x488b45f8	                mov rax, qword [rbp - 8]	      7196	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	ELSE_6
0x400d620	          0x668910	                      mov word [rax], dx	      7196	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	ELSE_6
0x400d623	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7197	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	ELSE_6
0x400d627	            0x8b00	                    mov eax, dword [rax]	      7197	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	ELSE_6
0x400d629	          0x8d50ff	                      lea edx, [rax - 1]	      7197	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	ELSE_6
0x400d62c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7197	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	ELSE_6
0x400d630	            0x8910	                    mov dword [rax], edx	      7197	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	ELSE_6
0x400d632	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7199	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d636	          0x8b4004	                mov eax, dword [rax + 4]	      7199	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d639	          0x8d5001	                      lea edx, [rax + 1]	      7199	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d63c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7199	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d640	          0x895004	                mov dword [rax + 4], edx	      7199	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d643	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7200	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d647	            0x8b00	                    mov eax, dword [rax]	      7200	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d649	       0xd20380000	                          or eax, 0x3820	      7200	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d64e	            0x89c2	                            mov edx, eax	      7200	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d650	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7200	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d654	            0x8910	                    mov dword [rax], edx	      7200	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400d656	      0xe99f000000	                           jmp 0x400d6fa	      7202	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x400d65b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7206	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_27
0x400d65f	           0xfb700	                   movzx eax, word [rax]	      7206	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_27
0x400d662	          0x6685c0	                             test ax, ax	      7206	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_27
0x400d665	            0x7517	                           jne 0x400d67e	      7206	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_27
0x400d667	        0x836de003	               sub dword [rbp - 0x20], 3	      7207	decNumber.c	FUNCTION_13	ELSE_5	FOR_3
0x400d66b	      0x488345f002	               add qword [rbp - 0x10], 2	      7177	decNumber.c	FUNCTION_13	ELSE_5	FOR_3
0x400d670	      0xe9d1feffff	                           jmp 0x400d546	      7208	decNumber.c	FUNCTION_13	ELSE_5	FOR_3
0x400d675	              0x90	                                     nop	      7156	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_20
0x400d676	            0xeb07	                           jmp 0x400d67f	      7156	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_20
0x400d678	              0x90	                                     nop	      7168	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_22
0x400d679	            0xeb04	                           jmp 0x400d67f	      7168	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_22
0x400d67b	              0x90	                                     nop	      7180	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_24
0x400d67c	            0xeb01	                           jmp 0x400d67f	      7180	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_24
0x400d67e	              0x90	                                     nop	      7206	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_27
0x400d67f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d683	        0x488d700a	                    lea rsi, [rax + 0xa]	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d687	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d68b	            0x8b00	                    mov eax, dword [rax]	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d68d	          0x83f831	                           cmp eax, 0x31	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d690	            0x7f14	                            jg 0x400d6a6	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d692	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d696	            0x8b00	                    mov eax, dword [rax]	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d698	            0x4898	                                    cdqe	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d69a	     0xfb680000000	                   movzx eax, byte [rax]	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6a1	           0xfb6c0	                           movzx eax, al	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6a4	            0xeb1b	                           jmp 0x400d6c1	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6a6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6aa	            0x8b00	                    mov eax, dword [rax]	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6ac	          0x8d4802	                      lea ecx, [rax + 2]	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6af	      0xba56555555	                     mov edx, 0x55555556	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6b4	            0x89c8	                            mov eax, ecx	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6b6	            0xf7ea	                                imul edx	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6b8	            0x89c8	                            mov eax, ecx	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6ba	          0xc1f81f	                           sar eax, 0x1f	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6bd	            0x29c2	                            sub edx, eax	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6bf	            0x89d0	                            mov eax, edx	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6c1	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6c5	        0x488d7a0a	                    lea rdi, [rdx + 0xa]	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6c9	        0x4883ec08	                              sub rsp, 8	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6cd	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6d0	              0x52	                                push rdx	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6d1	          0x4989f1	                             mov r9, rsi	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6d4	    0x41b800000000	                              mov r8d, 0	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6da	      0xb901000000	                              mov ecx, 1	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6df	      0xba00000000	                              mov edx, 0	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6e4	            0x89c6	                            mov esi, eax	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6e6	      0xe816ebffff	                  call sym.decUnitAddSub	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6eb	        0x4883c410	                           add rsp, 0x10	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6ef	            0xeb0a	                           jmp 0x400d6fb	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400d6f1	              0x90	                                     nop	      7069	decNumber.c	FUNCTION_13	IF_1
0x400d6f2	            0xeb07	                           jmp 0x400d6fb	      7069	decNumber.c	FUNCTION_13	IF_1
0x400d6f4	              0x90	                                     nop	      7143	decNumber.c	FUNCTION_13	IF_17
0x400d6f5	            0xeb04	                           jmp 0x400d6fb	      7143	decNumber.c	FUNCTION_13	IF_17
0x400d6f7	              0x90	                                     nop	      7165	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400d6f8	            0xeb01	                           jmp 0x400d6fb	      7165	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400d6fa	              0x90	                                     nop	      7202	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x400d6fb	              0xc9	                                   leave	      7214	decNumber.c	FUNCTION_13
0x400d6fc	              0xc3	                                     ret	      7214	decNumber.c	FUNCTION_13
decNumberClass	SWITCH,0:IF,9:FOR,0:CALL,9:DO,0:ELSE,0:WHILE,0:functions,0	81
0x4005cca	              0x55	                                push rbp	      3293	decNumber.c	FUNCTION_68	FUNCTION_50
0x4005ccb	          0x4889e5	                            mov rbp, rsp	      3293	decNumber.c	FUNCTION_68	FUNCTION_50
0x4005cce	        0x4883ec10	                           sub rsp, 0x10	      3293	decNumber.c	FUNCTION_68	FUNCTION_50
0x4005cd2	        0x48897df8	                mov qword [rbp - 8], rdi	      3293	decNumber.c	FUNCTION_68	FUNCTION_50
0x4005cd6	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3293	decNumber.c	FUNCTION_68	FUNCTION_50
0x4005cda	        0x488b45f8	                mov rax, qword [rbp - 8]	      3294	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_1
0x4005cde	         0xfb64008	               movzx eax, byte [rax + 8]	      3294	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_1
0x4005ce2	           0xfb6c0	                           movzx eax, al	      3294	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_1
0x4005ce5	          0x83e070	                           and eax, 0x70	      3294	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_1
0x4005ce8	            0x85c0	                           test eax, eax	      3294	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_1
0x4005cea	            0x7458	                            je 0x4005d44	      3294	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_1
0x4005cec	        0x488b45f8	                mov rax, qword [rbp - 8]	      3295	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_2
0x4005cf0	         0xfb64008	               movzx eax, byte [rax + 8]	      3295	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_2
0x4005cf4	           0xfb6c0	                           movzx eax, al	      3295	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_2
0x4005cf7	          0x83e020	                           and eax, 0x20	      3295	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_2
0x4005cfa	            0x85c0	                           test eax, eax	      3295	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_2
0x4005cfc	            0x740a	                            je 0x4005d08	      3295	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_2
0x4005cfe	      0xb801000000	                              mov eax, 1	      3295	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_2
0x4005d03	      0xe9c9000000	                           jmp 0x4005dd1	      3295	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_2
0x4005d08	        0x488b45f8	                mov rax, qword [rbp - 8]	      3296	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_3
0x4005d0c	         0xfb64008	               movzx eax, byte [rax + 8]	      3296	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_3
0x4005d10	           0xfb6c0	                           movzx eax, al	      3296	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_3
0x4005d13	          0x83e010	                           and eax, 0x10	      3296	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_3
0x4005d16	            0x85c0	                           test eax, eax	      3296	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_3
0x4005d18	            0x740a	                            je 0x4005d24	      3296	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_3
0x4005d1a	      0xb800000000	                              mov eax, 0	      3296	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_3
0x4005d1f	      0xe9ad000000	                           jmp 0x4005dd1	      3296	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_3
0x4005d24	        0x488b45f8	                mov rax, qword [rbp - 8]	      3298	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_4
0x4005d28	         0xfb64008	               movzx eax, byte [rax + 8]	      3298	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_4
0x4005d2c	            0x84c0	                             test al, al	      3298	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_4
0x4005d2e	            0x790a	                           jns 0x4005d3a	      3298	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_4
0x4005d30	      0xb802000000	                              mov eax, 2	      3298	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_4
0x4005d35	      0xe997000000	                           jmp 0x4005dd1	      3298	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_4
0x4005d3a	      0xb809000000	                              mov eax, 9	      3299	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1
0x4005d3f	      0xe98d000000	                           jmp 0x4005dd1	      3299	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1
0x4005d44	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3302	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_5
0x4005d48	        0x488b45f8	                mov rax, qword [rbp - 8]	      3302	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_5
0x4005d4c	          0x4889d6	                            mov rsi, rdx	      3302	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_5
0x4005d4f	          0x4889c7	                            mov rdi, rax	      3302	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_5
0x4005d52	      0xe800000000	                          call 0x4005d57	      3302	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_5
0x4005d57	            0x85c0	                           test eax, eax	      3302	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_5
0x4005d59	            0x741a	                            je 0x4005d75	      3302	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_5
0x4005d5b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3303	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_6
0x4005d5f	         0xfb64008	               movzx eax, byte [rax + 8]	      3303	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_6
0x4005d63	            0x84c0	                             test al, al	      3303	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_6
0x4005d65	            0x7907	                           jns 0x4005d6e	      3303	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_6
0x4005d67	      0xb803000000	                              mov eax, 3	      3303	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_6
0x4005d6c	            0xeb63	                           jmp 0x4005dd1	      3303	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_6
0x4005d6e	      0xb808000000	                              mov eax, 8	      3304	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5
0x4005d73	            0xeb5c	                           jmp 0x4005dd1	      3304	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5
0x4005d75	        0x488b45f8	                mov rax, qword [rbp - 8]	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4005d79	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4005d7d	          0x6685c0	                             test ax, ax	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4005d80	            0x7537	                           jne 0x4005db9	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4005d82	        0x488b45f8	                mov rax, qword [rbp - 8]	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4005d86	            0x8b00	                    mov eax, dword [rax]	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4005d88	          0x83f801	                              cmp eax, 1	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4005d8b	            0x752c	                           jne 0x4005db9	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4005d8d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4005d91	         0xfb64008	               movzx eax, byte [rax + 8]	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4005d95	           0xfb6c0	                           movzx eax, al	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4005d98	          0x83e070	                           and eax, 0x70	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4005d9b	            0x85c0	                           test eax, eax	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4005d9d	            0x751a	                           jne 0x4005db9	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4005d9f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3308	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_8
0x4005da3	         0xfb64008	               movzx eax, byte [rax + 8]	      3308	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_8
0x4005da7	            0x84c0	                             test al, al	      3308	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_8
0x4005da9	            0x7907	                           jns 0x4005db2	      3308	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_8
0x4005dab	      0xb805000000	                              mov eax, 5	      3308	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_8
0x4005db0	            0xeb1f	                           jmp 0x4005dd1	      3308	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_8
0x4005db2	      0xb806000000	                              mov eax, 6	      3309	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7
0x4005db7	            0xeb18	                           jmp 0x4005dd1	      3309	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7
0x4005db9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3311	decNumber.c	FUNCTION_68	FUNCTION_50	CALL_9
0x4005dbd	         0xfb64008	               movzx eax, byte [rax + 8]	      3311	decNumber.c	FUNCTION_68	FUNCTION_50	CALL_9
0x4005dc1	            0x84c0	                             test al, al	      3311	decNumber.c	FUNCTION_68	FUNCTION_50	CALL_9
0x4005dc3	            0x7907	                           jns 0x4005dcc	      3311	decNumber.c	FUNCTION_68	FUNCTION_50	CALL_9
0x4005dc5	      0xb804000000	                              mov eax, 4	      3311	decNumber.c	FUNCTION_68	FUNCTION_50	CALL_9
0x4005dca	            0xeb05	                           jmp 0x4005dd1	      3311	decNumber.c	FUNCTION_68	FUNCTION_50	CALL_9
0x4005dcc	      0xb807000000	                              mov eax, 7	      3312	decNumber.c	FUNCTION_68	FUNCTION_50
0x4005dd1	              0xc9	                                   leave	      3313	decNumber.c	FUNCTION_68	FUNCTION_50
0x4005dd2	              0xc3	                                     ret	      3313	decNumber.c	FUNCTION_68	FUNCTION_50
decShiftToLeast	SWITCH,0:IF,5:FOR,2:CALL,3:DO,0:ELSE,0:WHILE,0:functions,0	201
0x400cb55	              0x55	                                push rbp	      6735	decNumber.c	FUNCTION_9
0x400cb56	          0x4889e5	                            mov rbp, rsp	      6735	decNumber.c	FUNCTION_9
0x400cb59	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6735	decNumber.c	FUNCTION_9
0x400cb5d	          0x8975d4	             mov dword [rbp - 0x2c], esi	      6735	decNumber.c	FUNCTION_9
0x400cb60	          0x8955d0	             mov dword [rbp - 0x30], edx	      6735	decNumber.c	FUNCTION_9
0x400cb63	        0x837dd000	               cmp dword [rbp - 0x30], 0	      6740	decNumber.c	FUNCTION_9	IF_1
0x400cb67	            0x7508	                           jne 0x400cb71	      6740	decNumber.c	FUNCTION_9	IF_1
0x400cb69	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6740	decNumber.c	FUNCTION_9	IF_1
0x400cb6c	      0xe954020000	                           jmp 0x400cdc5	      6740	decNumber.c	FUNCTION_9	IF_1
0x400cb71	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      6741	decNumber.c	FUNCTION_9	IF_2
0x400cb74	            0x89d0	                            mov eax, edx	      6741	decNumber.c	FUNCTION_9	IF_2
0x400cb76	             0x1c0	                            add eax, eax	      6741	decNumber.c	FUNCTION_9	IF_2
0x400cb78	             0x1d0	                            add eax, edx	      6741	decNumber.c	FUNCTION_9	IF_2
0x400cb7a	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      6741	decNumber.c	FUNCTION_9	IF_2
0x400cb7d	            0x7513	                           jne 0x400cb92	      6741	decNumber.c	FUNCTION_9	IF_2
0x400cb7f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6742	decNumber.c	FUNCTION_9	IF_2
0x400cb83	      0x66c7000000	                       mov word [rax], 0	      6742	decNumber.c	FUNCTION_9	IF_2
0x400cb88	      0xb801000000	                              mov eax, 1	      6743	decNumber.c	FUNCTION_9	IF_2
0x400cb8d	      0xe933020000	                           jmp 0x400cdc5	      6743	decNumber.c	FUNCTION_9	IF_2
0x400cb92	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6746	decNumber.c	FUNCTION_9
0x400cb96	        0x488945f0	             mov qword [rbp - 0x10], rax	      6746	decNumber.c	FUNCTION_9
0x400cb9a	        0x837dd031	           cmp dword [rbp - 0x30], 0x31 	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cb9e	            0x7f1a	                            jg 0x400cbba	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cba0	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cba3	            0x4898	                                    cdqe	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cba5	     0xfb680000000	                   movzx eax, byte [rax]	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbac	           0xfb6c0	                           movzx eax, al	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbaf	          0x8d50ff	                      lea edx, [rax - 1]	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbb2	            0x89d0	                            mov eax, edx	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbb4	             0x1c0	                            add eax, eax	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbb6	             0x1d0	                            add eax, edx	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbb8	            0xeb21	                           jmp 0x400cbdb	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbba	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbbd	          0x8d4802	                      lea ecx, [rax + 2]	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbc0	      0xba56555555	                     mov edx, 0x55555556	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbc5	            0x89c8	                            mov eax, ecx	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbc7	            0xf7ea	                                imul edx	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbc9	            0x89c8	                            mov eax, ecx	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbcb	          0xc1f81f	                           sar eax, 0x1f	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbce	            0x29c2	                            sub edx, eax	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbd0	            0x89d0	                            mov eax, edx	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbd2	          0x8d50ff	                      lea edx, [rax - 1]	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbd5	            0x89d0	                            mov eax, edx	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbd7	             0x1c0	                            add eax, eax	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbd9	             0x1d0	                            add eax, edx	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbdb	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbde	            0x29c2	                            sub edx, eax	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbe0	            0x89d0	                            mov eax, edx	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbe2	          0x8945e8	             mov dword [rbp - 0x18], eax	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400cbe5	        0x837de803	               cmp dword [rbp - 0x18], 3	      6748	decNumber.c	FUNCTION_9	IF_3
0x400cbe9	     0xf8588000000	                           jne 0x400cc77	      6748	decNumber.c	FUNCTION_9	IF_3
0x400cbef	        0x837dd031	           cmp dword [rbp - 0x30], 0x31 	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cbf3	            0x7f14	                            jg 0x400cc09	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cbf5	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cbf8	            0x4898	                                    cdqe	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cbfa	     0xfb680000000	                   movzx eax, byte [rax]	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc01	           0xfb6c0	                           movzx eax, al	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc04	          0x4801c0	                            add rax, rax	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc07	            0xeb1d	                           jmp 0x400cc26	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc09	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc0c	          0x8d4802	                      lea ecx, [rax + 2]	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc0f	      0xba56555555	                     mov edx, 0x55555556	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc14	            0x89c8	                            mov eax, ecx	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc16	            0xf7ea	                                imul edx	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc18	            0x89c8	                            mov eax, ecx	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc1a	          0xc1f81f	                           sar eax, 0x1f	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc1d	            0x29c2	                            sub edx, eax	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc1f	            0x89d0	                            mov eax, edx	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc21	            0x4898	                                    cdqe	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc23	          0x4801c0	                            add rax, rax	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc26	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc2a	          0x4801d0	                            add rax, rdx	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc2d	        0x488945f8	                mov qword [rbp - 8], rax	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400cc31	            0xeb18	                           jmp 0x400cc4b	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x400cc33	        0x488b45f8	                mov rax, qword [rbp - 8]	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x400cc37	           0xfb710	                   movzx edx, word [rax]	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x400cc3a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x400cc3e	          0x668910	                      mov word [rax], dx	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x400cc41	      0x488345f002	               add qword [rbp - 0x10], 2	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x400cc46	      0x488345f802	                  add qword [rbp - 8], 2	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x400cc4b	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x400cc4e	            0x4898	                                    cdqe	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x400cc50	        0x488d1400	                    lea rdx, [rax + rax]	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x400cc54	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x400cc58	          0x4801d0	                            add rax, rdx	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x400cc5b	        0x483b45f8	                cmp rax, qword [rbp - 8]	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x400cc5f	            0x77d2	                            ja 0x400cc33	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x400cc61	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      6751	decNumber.c	FUNCTION_9	IF_3
0x400cc65	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6751	decNumber.c	FUNCTION_9	IF_3
0x400cc69	          0x4829c2	                            sub rdx, rax	      6751	decNumber.c	FUNCTION_9	IF_3
0x400cc6c	          0x4889d0	                            mov rax, rdx	      6751	decNumber.c	FUNCTION_9	IF_3
0x400cc6f	          0x48d1f8	                              sar rax, 1	      6751	decNumber.c	FUNCTION_9	IF_3
0x400cc72	      0xe94e010000	                           jmp 0x400cdc5	      6751	decNumber.c	FUNCTION_9	IF_3
0x400cc77	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400cc7a	          0x2b45e8	             sub eax, dword [rbp - 0x18]	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400cc7d	          0x83f831	                           cmp eax, 0x31	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400cc80	            0x7f17	                            jg 0x400cc99	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400cc82	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400cc85	          0x2b45e8	             sub eax, dword [rbp - 0x18]	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400cc88	            0x4898	                                    cdqe	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400cc8a	     0xfb680000000	                   movzx eax, byte [rax]	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400cc91	           0xfb6c0	                           movzx eax, al	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400cc94	          0x4801c0	                            add rax, rax	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400cc97	            0xeb20	                           jmp 0x400ccb9	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400cc99	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400cc9c	          0x2b45e8	             sub eax, dword [rbp - 0x18]	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400cc9f	          0x8d4802	                      lea ecx, [rax + 2]	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400cca2	      0xba56555555	                     mov edx, 0x55555556	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400cca7	            0x89c8	                            mov eax, ecx	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400cca9	            0xf7ea	                                imul edx	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400ccab	            0x89c8	                            mov eax, ecx	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400ccad	          0xc1f81f	                           sar eax, 0x1f	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400ccb0	            0x29c2	                            sub edx, eax	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400ccb2	            0x89d0	                            mov eax, edx	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400ccb4	            0x4898	                                    cdqe	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400ccb6	          0x4801c0	                            add rax, rax	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400ccb9	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400ccbd	          0x4801d0	                            add rax, rdx	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400ccc0	        0x488945f8	                mov qword [rbp - 8], rax	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400ccc4	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      6756	decNumber.c	FUNCTION_9
0x400ccc7	            0x89d0	                            mov eax, edx	      6756	decNumber.c	FUNCTION_9
0x400ccc9	             0x1c0	                            add eax, eax	      6756	decNumber.c	FUNCTION_9
0x400cccb	             0x1d0	                            add eax, edx	      6756	decNumber.c	FUNCTION_9
0x400cccd	          0x2b45d0	             sub eax, dword [rbp - 0x30]	      6756	decNumber.c	FUNCTION_9
0x400ccd0	          0x8945e0	             mov dword [rbp - 0x20], eax	      6756	decNumber.c	FUNCTION_9
0x400ccd3	        0x488b45f8	                mov rax, qword [rbp - 8]	      6758	decNumber.c	FUNCTION_9
0x400ccd7	           0xfb700	                   movzx eax, word [rax]	      6758	decNumber.c	FUNCTION_9
0x400ccda	           0xfb7d0	                           movzx edx, ax	      6758	decNumber.c	FUNCTION_9
0x400ccdd	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6758	decNumber.c	FUNCTION_9
0x400cce0	            0x89c1	                            mov ecx, eax	      6758	decNumber.c	FUNCTION_9
0x400cce2	            0xd3ea	                             shr edx, cl	      6758	decNumber.c	FUNCTION_9
0x400cce4	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6758	decNumber.c	FUNCTION_9
0x400cce7	            0x4898	                                    cdqe	      6758	decNumber.c	FUNCTION_9
0x400cce9	    0x8b0485000000	                  mov eax, dword [rax*4]	      6758	decNumber.c	FUNCTION_9
0x400ccf0	           0xfafc2	                           imul eax, edx	      6758	decNumber.c	FUNCTION_9
0x400ccf3	          0xc1e811	                           shr eax, 0x11	      6758	decNumber.c	FUNCTION_9
0x400ccf6	          0x8945e4	             mov dword [rbp - 0x1c], eax	      6758	decNumber.c	FUNCTION_9
0x400ccf9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6763	decNumber.c	FUNCTION_9	FOR_2
0x400ccfc	            0x89c2	                            mov edx, eax	      6763	decNumber.c	FUNCTION_9	FOR_2
0x400ccfe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6763	decNumber.c	FUNCTION_9	FOR_2
0x400cd02	          0x668910	                      mov word [rax], dx	      6763	decNumber.c	FUNCTION_9	FOR_2
0x400cd05	      0xb803000000	                              mov eax, 3	      6764	decNumber.c	FUNCTION_9	FOR_2
0x400cd0a	          0x2b45e8	             sub eax, dword [rbp - 0x18]	      6764	decNumber.c	FUNCTION_9	FOR_2
0x400cd0d	          0x2945e0	             sub dword [rbp - 0x20], eax	      6764	decNumber.c	FUNCTION_9	FOR_2
0x400cd10	        0x837de000	               cmp dword [rbp - 0x20], 0	      6765	decNumber.c	FUNCTION_9	FOR_2	IF_4
0x400cd14	     0xf8e93000000	                           jle 0x400cdad	      6765	decNumber.c	FUNCTION_9	FOR_2	IF_4
0x400cd1a	      0x488345f802	                  add qword [rbp - 8], 2	      6766	decNumber.c	FUNCTION_9	FOR_2
0x400cd1f	        0x488b45f8	                mov rax, qword [rbp - 8]	      6767	decNumber.c	FUNCTION_9	FOR_2
0x400cd23	           0xfb700	                   movzx eax, word [rax]	      6767	decNumber.c	FUNCTION_9	FOR_2
0x400cd26	           0xfb7c0	                           movzx eax, ax	      6767	decNumber.c	FUNCTION_9	FOR_2
0x400cd29	          0x8945e4	             mov dword [rbp - 0x1c], eax	      6767	decNumber.c	FUNCTION_9	FOR_2
0x400cd2c	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      6769	decNumber.c	FUNCTION_9	FOR_2
0x400cd2f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6769	decNumber.c	FUNCTION_9	FOR_2
0x400cd32	            0x89c1	                            mov ecx, eax	      6769	decNumber.c	FUNCTION_9	FOR_2
0x400cd34	            0xd3ea	                             shr edx, cl	      6769	decNumber.c	FUNCTION_9	FOR_2
0x400cd36	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6769	decNumber.c	FUNCTION_9	FOR_2
0x400cd39	            0x4898	                                    cdqe	      6769	decNumber.c	FUNCTION_9	FOR_2
0x400cd3b	    0x8b0485000000	                  mov eax, dword [rax*4]	      6769	decNumber.c	FUNCTION_9	FOR_2
0x400cd42	           0xfafc2	                           imul eax, edx	      6769	decNumber.c	FUNCTION_9	FOR_2
0x400cd45	          0xc1e811	                           shr eax, 0x11	      6769	decNumber.c	FUNCTION_9	FOR_2
0x400cd48	          0x8945e4	             mov dword [rbp - 0x1c], eax	      6769	decNumber.c	FUNCTION_9	FOR_2
0x400cd4b	        0x488b45f8	                mov rax, qword [rbp - 8]	      6770	decNumber.c	FUNCTION_9	FOR_2
0x400cd4f	           0xfb700	                   movzx eax, word [rax]	      6770	decNumber.c	FUNCTION_9	FOR_2
0x400cd52	           0xfb7d0	                           movzx edx, ax	      6770	decNumber.c	FUNCTION_9	FOR_2
0x400cd55	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6770	decNumber.c	FUNCTION_9	FOR_2
0x400cd58	            0x4898	                                    cdqe	      6770	decNumber.c	FUNCTION_9	FOR_2
0x400cd5a	    0x8b0c85000000	                  mov ecx, dword [rax*4]	      6770	decNumber.c	FUNCTION_9	FOR_2
0x400cd61	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6770	decNumber.c	FUNCTION_9	FOR_2
0x400cd64	           0xfafc1	                           imul eax, ecx	      6770	decNumber.c	FUNCTION_9	FOR_2
0x400cd67	            0x29c2	                            sub edx, eax	      6770	decNumber.c	FUNCTION_9	FOR_2
0x400cd69	            0x89d0	                            mov eax, edx	      6770	decNumber.c	FUNCTION_9	FOR_2
0x400cd6b	          0x8945ec	             mov dword [rbp - 0x14], eax	      6770	decNumber.c	FUNCTION_9	FOR_2
0x400cd6e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6775	decNumber.c	FUNCTION_9	FOR_2
0x400cd72	           0xfb710	                   movzx edx, word [rax]	      6775	decNumber.c	FUNCTION_9	FOR_2
0x400cd75	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6775	decNumber.c	FUNCTION_9	FOR_2
0x400cd78	            0x89c1	                            mov ecx, eax	      6775	decNumber.c	FUNCTION_9	FOR_2
0x400cd7a	      0xb803000000	                              mov eax, 3	      6775	decNumber.c	FUNCTION_9	FOR_2
0x400cd7f	          0x2b45e8	             sub eax, dword [rbp - 0x18]	      6775	decNumber.c	FUNCTION_9	FOR_2
0x400cd82	            0x4898	                                    cdqe	      6775	decNumber.c	FUNCTION_9	FOR_2
0x400cd84	    0x8b0485000000	                  mov eax, dword [rax*4]	      6775	decNumber.c	FUNCTION_9	FOR_2
0x400cd8b	           0xfafc1	                           imul eax, ecx	      6775	decNumber.c	FUNCTION_9	FOR_2
0x400cd8e	             0x1c2	                            add edx, eax	      6775	decNumber.c	FUNCTION_9	FOR_2
0x400cd90	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6775	decNumber.c	FUNCTION_9	FOR_2
0x400cd94	          0x668910	                      mov word [rax], dx	      6775	decNumber.c	FUNCTION_9	FOR_2
0x400cd97	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6776	decNumber.c	FUNCTION_9	FOR_2
0x400cd9a	          0x2945e0	             sub dword [rbp - 0x20], eax	      6776	decNumber.c	FUNCTION_9	FOR_2
0x400cd9d	        0x837de000	               cmp dword [rbp - 0x20], 0	      6777	decNumber.c	FUNCTION_9	FOR_2	IF_5
0x400cda1	            0x7e0d	                           jle 0x400cdb0	      6777	decNumber.c	FUNCTION_9	FOR_2	IF_5
0x400cda3	      0x488345f002	               add qword [rbp - 0x10], 2	      6762	decNumber.c	FUNCTION_9	FOR_2
0x400cda8	      0xe94cffffff	                           jmp 0x400ccf9	      6778	decNumber.c	FUNCTION_9	FOR_2
0x400cdad	              0x90	                                     nop	      6765	decNumber.c	FUNCTION_9	FOR_2	IF_4
0x400cdae	            0xeb01	                           jmp 0x400cdb1	      6765	decNumber.c	FUNCTION_9	FOR_2	IF_4
0x400cdb0	              0x90	                                     nop	      6777	decNumber.c	FUNCTION_9	FOR_2	IF_5
0x400cdb1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      6779	decNumber.c	FUNCTION_9
0x400cdb5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6779	decNumber.c	FUNCTION_9
0x400cdb9	          0x4829c2	                            sub rdx, rax	      6779	decNumber.c	FUNCTION_9
0x400cdbc	          0x4889d0	                            mov rax, rdx	      6779	decNumber.c	FUNCTION_9
0x400cdbf	          0x48d1f8	                              sar rax, 1	      6779	decNumber.c	FUNCTION_9
0x400cdc2	          0x83c001	                              add eax, 1	      6779	decNumber.c	FUNCTION_9
0x400cdc5	              0x5d	                                 pop rbp	      6780	decNumber.c	FUNCTION_9
0x400cdc6	              0xc3	                                     ret	      6780	decNumber.c	FUNCTION_9
decNumberPower	SWITCH,0:IF,53:FOR,1:CALL,54:DO,1:ELSE,9:WHILE,0:functions,0	590
0x4002fad	              0x55	                                push rbp	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4002fae	          0x4889e5	                            mov rbp, rsp	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4002fb1	    0x4881ec100100	                          sub rsp, 0x110	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4002fb8	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4002fbf	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4002fc6	    0x488995f8feff	            mov qword [rbp - 0x108], rdx	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4002fcd	    0x48898df0feff	            mov qword [rbp - 0x110], rcx	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4002fd4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4002fdd	        0x488945f8	                mov qword [rbp - 8], rax	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4002fe1	            0x31c0	                            xor eax, eax	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4002fe3	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4002fee	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4002ff9	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      1950	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003000	            0x8b00	                    mov eax, dword [rax]	      1950	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003002	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      1950	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003008	    0xc68518ffffff	                mov byte [rbp - 0xe8], 0	      1952	decNumber.c	FUNCTION_68	FUNCTION_34
0x400300f	    0xc68519ffffff	                mov byte [rbp - 0xe7], 0	      1953	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003016	    0xc6851affffff	                mov byte [rbp - 0xe6], 0	      1954	decNumber.c	FUNCTION_68	FUNCTION_34
0x400301d	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	      1961	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003027	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	      1962	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003031	    0xc6851cffffff	                mov byte [rbp - 0xe4], 0	      1963	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003038	        0x488d4590	                   lea rax, [rbp - 0x70]	      1968	decNumber.c	FUNCTION_68	FUNCTION_34
0x400303c	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      1968	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003043	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x400304a	         0xfb65008	               movzx edx, byte [rax + 8]	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x400304e	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x4003055	         0xfb64008	               movzx eax, byte [rax + 8]	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x4003059	             0x9d0	                             or eax, edx	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x400305b	           0xfb6c0	                           movzx eax, al	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x400305e	          0x83e070	                           and eax, 0x70	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x4003061	            0x85c0	                           test eax, eax	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x4003063	     0xf840c020000	                            je 0x4003275	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x4003069	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x4003070	         0xfb64008	               movzx eax, byte [rax + 8]	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x4003074	           0xfb6c0	                           movzx eax, al	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x4003077	          0x83e030	                           and eax, 0x30	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x400307a	            0x85c0	                           test eax, eax	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x400307c	            0x7515	                           jne 0x4003093	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x400307e	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x4003085	         0xfb64008	               movzx eax, byte [rax + 8]	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x4003089	           0xfb6c0	                           movzx eax, al	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x400308c	          0x83e030	                           and eax, 0x30	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x400308f	            0x85c0	                           test eax, eax	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x4003091	            0x7433	                            je 0x40030c6	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x4003093	    0x488dbd24ffff	                   lea rdi, [rbp - 0xdc]	      1996	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_8
0x400309a	    0x488b8df0feff	            mov rcx, qword [rbp - 0x110]	      1996	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_8
0x40030a1	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      1996	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_8
0x40030a8	    0x488bb500ffff	            mov rsi, qword [rbp - 0x100]	      1996	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_8
0x40030af	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1996	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_8
0x40030b6	          0x4989f8	                             mov r8, rdi	      1996	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_8
0x40030b9	          0x4889c7	                            mov rdi, rax	      1996	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_8
0x40030bc	      0xe851b10000	                        call sym.decNaNs	      1996	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_8
0x40030c1	      0xe9a8090000	                           jmp 0x4003a6e	      1997	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8
0x40030c6	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1998	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	CALL_9
0x40030cd	         0xfb64008	               movzx eax, byte [rax + 8]	      1998	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	CALL_9
0x40030d1	           0xfb6c0	                           movzx eax, al	      1998	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	CALL_9
0x40030d4	          0x83e040	                           and eax, 0x40	      1998	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	CALL_9
0x40030d7	            0x85c0	                           test eax, eax	      1998	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	CALL_9
0x40030d9	     0xf8496010000	                            je 0x4003275	      1998	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	CALL_9
0x40030df	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1999	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9
0x40030e6	         0xfb64008	               movzx eax, byte [rax + 8]	      1999	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9
0x40030ea	          0x83e080	                     and eax, 0xffffff80	      1999	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9
0x40030ed	    0x88851dffffff	               mov byte [rbp - 0xe3], al	      1999	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9
0x40030f3	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2000	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_10
0x40030fa	         0xfb64008	               movzx eax, byte [rax + 8]	      2000	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_10
0x40030fe	            0x84c0	                             test al, al	      2000	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_10
0x4003100	            0x7946	                           jns 0x4003148	      2000	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_10
0x4003102	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x4003109	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x400310d	          0x6685c0	                             test ax, ax	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x4003110	            0x7523	                           jne 0x4003135	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x4003112	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x4003119	            0x8b00	                    mov eax, dword [rax]	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x400311b	          0x83f801	                              cmp eax, 1	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x400311e	            0x7515	                           jne 0x4003135	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x4003120	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x4003127	         0xfb64008	               movzx eax, byte [rax + 8]	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x400312b	           0xfb6c0	                           movzx eax, al	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x400312e	          0x83e070	                           and eax, 0x70	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x4003131	            0x85c0	                           test eax, eax	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x4003133	            0x7413	                            je 0x4003148	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x4003135	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2002	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10
0x400313b	             0xc80	                             or al, 0x80	      2002	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10
0x400313d	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      2002	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10
0x4003143	      0xe925090000	                           jmp 0x4003a6d	      2023	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9
0x4003148	        0x488d4580	                   lea rax, [rbp - 0x80]	      2004	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_12
0x400314c	          0x4889c7	                            mov rdi, rax	      2004	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_12
0x400314f	      0xe800000000	                          call 0x4003154	      2004	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_12
0x4003154	    0x66c7458a0100	                mov word [rbp - 0x76], 1	      2005	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1
0x400315a	    0x488b8df0feff	            mov rcx, qword [rbp - 0x110]	      2006	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_13
0x4003161	        0x488d5580	                   lea rdx, [rbp - 0x80]	      2006	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_13
0x4003165	    0x488bb500ffff	            mov rsi, qword [rbp - 0x100]	      2006	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_13
0x400316c	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2006	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_13
0x4003173	          0x4889c7	                            mov rdi, rax	      2006	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_13
0x4003176	      0xe800000000	                          call 0x400317b	      2006	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_13
0x400317b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2007	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_14
0x4003182	          0x4889c7	                            mov rdi, rax	      2007	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_14
0x4003185	      0xe800000000	                          call 0x400318a	      2007	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_14
0x400318a	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2008	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	CALL_15
0x4003191	         0xfb64008	               movzx eax, byte [rax + 8]	      2008	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	CALL_15
0x4003195	            0x84c0	                             test al, al	      2008	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	CALL_15
0x4003197	            0x792c	                           jns 0x40031c5	      2008	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	CALL_15
0x4003199	    0x80bd1dffffff	                cmp byte [rbp - 0xe3], 0	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x40031a0	     0xf84c7080000	                            je 0x4003a6d	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x40031a6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x40031ad	         0xfb64008	               movzx eax, byte [rax + 8]	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x40031b1	          0x83c840	                            or eax, 0x40	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x40031b4	            0x89c2	                            mov edx, eax	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x40031b6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x40031bd	          0x885008	                  mov byte [rax + 8], dl	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x40031c0	      0xe9a8080000	                           jmp 0x4003a6d	      2023	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9
0x40031c5	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2011	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x40031cc	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      2011	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x40031d0	          0x6685c0	                             test ax, ax	      2011	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x40031d3	            0x7574	                           jne 0x4003249	      2011	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x40031d5	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2013	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x40031dc	            0x8b00	                    mov eax, dword [rax]	      2013	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x40031de	          0x83e801	                              sub eax, 1	      2013	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x40031e1	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      2013	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x40031e7	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2014	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x40031ee	    0x66c7400a0100	                 mov word [rax + 0xa], 1	      2014	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x40031f4	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x40031fb	        0x488d480a	                    lea rcx, [rax + 0xa]	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x40031ff	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x4003205	            0x89c2	                            mov edx, eax	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x4003207	      0xbe01000000	                              mov esi, 1	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x400320c	          0x4889cf	                            mov rdi, rcx	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x400320f	      0xe8b7960000	                 call sym.decShiftToMost	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x4003214	            0x89c2	                            mov edx, eax	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x4003216	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x400321d	            0x8910	                    mov dword [rax], edx	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x400321f	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      2016	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4003225	            0xf7d8	                                 neg eax	      2016	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4003227	            0x89c2	                            mov edx, eax	      2016	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4003229	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2016	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4003230	          0x895004	                mov dword [rax + 4], edx	      2016	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4003233	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2017	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4003239	       0xd20080000	                           or eax, 0x820	      2017	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x400323e	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      2017	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4003244	      0xe924080000	                           jmp 0x4003a6d	      2023	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9
0x4003249	    0x80bd1dffffff	                cmp byte [rbp - 0xe3], 0	      2020	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_3	IF_14
0x4003250	     0xf8517080000	                           jne 0x4003a6d	      2020	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_3	IF_14
0x4003256	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2020	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_3	IF_14
0x400325d	         0xfb64008	               movzx eax, byte [rax + 8]	      2020	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_3	IF_14
0x4003261	          0x83c840	                            or eax, 0x40	      2020	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_3	IF_14
0x4003264	            0x89c2	                            mov edx, eax	      2020	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_3	IF_14
0x4003266	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2020	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_3	IF_14
0x400326d	          0x885008	                  mov byte [rax + 8], dl	      2020	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_3	IF_14
0x4003270	      0xe9f8070000	                           jmp 0x4003a6d	      2023	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9
0x4003275	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2028	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_17
0x400327c	          0x4889c7	                            mov rdi, rax	      2028	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_17
0x400327f	      0xe895ab0000	                      call sym.decGetInt	      2028	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_17
0x4003284	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      2028	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_17
0x400328a	    0x81bd28ffffff	     cmp dword [rbp - 0xd8], 0x80000000 	      2029	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15
0x4003294	            0x7435	                            je 0x40032cb	      2029	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15
0x4003296	    0xc68518ffffff	                mov byte [rbp - 0xe8], 1	      2030	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15
0x400329d	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	      2031	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15
0x40032a3	          0x83e001	                              and eax, 1	      2031	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15
0x40032a6	    0x88851affffff	               mov byte [rbp - 0xe6], al	      2031	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15
0x40032ac	    0x81bd28ffffff	     cmp dword [rbp - 0xd8], 0x80000002 	      2032	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15	IF_16
0x40032b6	            0x7413	                            je 0x40032cb	      2032	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15	IF_16
0x40032b8	    0x81bd28ffffff	     cmp dword [rbp - 0xd8], 0x80000003 	      2032	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15	IF_16
0x40032c2	            0x7407	                            je 0x40032cb	      2032	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15	IF_16
0x40032c4	    0xc68519ffffff	                mov byte [rbp - 0xe7], 1	      2033	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15	IF_16
0x40032cb	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2036	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17	CALL_18
0x40032d2	         0xfb64008	               movzx eax, byte [rax + 8]	      2036	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17	CALL_18
0x40032d6	            0x84c0	                             test al, al	      2036	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17	CALL_18
0x40032d8	            0x7910	                           jns 0x40032ea	      2036	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17	CALL_18
0x40032da	    0x80bd1affffff	                cmp byte [rbp - 0xe6], 0	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x40032e1	            0x7407	                            je 0x40032ea	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x40032e3	    0xc6851cffffff	            mov byte [rbp - 0xe4], 0x80 	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x40032ea	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x40032f1	         0xfb64008	               movzx eax, byte [rax + 8]	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x40032f5	           0xfb6c0	                           movzx eax, al	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x40032f8	          0x83e040	                           and eax, 0x40	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x40032fb	            0x85c0	                           test eax, eax	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x40032fd	     0xf848e000000	                            je 0x4003391	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x4003303	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2041	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18
0x400330a	         0xfb64008	               movzx eax, byte [rax + 8]	      2041	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18
0x400330e	    0x88851effffff	               mov byte [rbp - 0xe2], al	      2041	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18
0x4003314	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2042	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_20
0x400331b	          0x4889c7	                            mov rdi, rax	      2042	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_20
0x400331e	      0xe800000000	                          call 0x4003323	      2042	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_20
0x4003323	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      2043	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	IF_19
0x400332a	            0x7512	                           jne 0x400333e	      2043	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	IF_19
0x400332c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2043	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	IF_19
0x4003333	    0x66c7400a0100	                 mov word [rax + 0xa], 1	      2043	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	IF_19
0x4003339	      0xe930070000	                           jmp 0x4003a6e	      2053	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18
0x400333e	    0x80bd18ffffff	                cmp byte [rbp - 0xe8], 0	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x4003345	            0x7522	                           jne 0x4003369	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x4003347	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x400334e	         0xfb64008	               movzx eax, byte [rax + 8]	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x4003352	            0x84c0	                             test al, al	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x4003354	            0x7913	                           jns 0x4003369	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x4003356	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2047	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20
0x400335c	             0xc80	                             or al, 0x80	      2047	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20
0x400335e	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      2047	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20
0x4003364	      0xe905070000	                           jmp 0x4003a6e	      2048	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20
0x4003369	     0xfb6851effff	            movzx eax, byte [rbp - 0xe2]	      2049	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_21
0x4003370	            0x84c0	                             test al, al	      2049	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_21
0x4003372	            0x7807	                            js 0x400337b	      2049	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_21
0x4003374	    0x808d1cffffff	              or byte [rbp - 0xe4], 0x40	      2049	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_21
0x400337b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2051	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4
0x4003382	     0xfb6951cffff	            movzx edx, byte [rbp - 0xe4]	      2051	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4
0x4003389	          0x885008	                  mov byte [rax + 8], dl	      2051	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4
0x400338c	      0xe9dd060000	                           jmp 0x4003a6e	      2053	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18
0x4003391	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x4003398	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x400339c	          0x6685c0	                             test ax, ax	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x400339f	     0xf8587000000	                           jne 0x400342c	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x40033a5	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x40033ac	            0x8b00	                    mov eax, dword [rax]	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x40033ae	          0x83f801	                              cmp eax, 1	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x40033b1	            0x7579	                           jne 0x400342c	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x40033b3	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x40033ba	         0xfb64008	               movzx eax, byte [rax + 8]	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x40033be	           0xfb6c0	                           movzx eax, al	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x40033c1	          0x83e070	                           and eax, 0x70	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x40033c4	            0x85c0	                           test eax, eax	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x40033c6	            0x7564	                           jne 0x400342c	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x40033c8	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      2057	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	IF_23
0x40033cf	            0x7513	                           jne 0x40033e4	      2057	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	IF_23
0x40033d1	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2064	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	IF_23
0x40033d7	             0xc80	                             or al, 0x80	      2064	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	IF_23
0x40033d9	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      2064	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	IF_23
0x40033df	      0xe98a060000	                           jmp 0x4003a6e	      2080	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22
0x40033e4	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2067	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5
0x40033eb	         0xfb64008	               movzx eax, byte [rax + 8]	      2067	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5
0x40033ef	    0x88851fffffff	               mov byte [rbp - 0xe1], al	      2067	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5
0x40033f5	     0xfb6851fffff	            movzx eax, byte [rbp - 0xe1]	      2068	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5	IF_25
0x40033fc	            0x84c0	                             test al, al	      2068	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5	IF_25
0x40033fe	            0x7907	                           jns 0x4003407	      2068	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5	IF_25
0x4003400	    0x808d1cffffff	              or byte [rbp - 0xe4], 0x40	      2074	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5	IF_25
0x4003407	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2076	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5	CALL_24
0x400340e	          0x4889c7	                            mov rdi, rax	      2076	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5	CALL_24
0x4003411	      0xe800000000	                          call 0x4003416	      2076	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5	CALL_24
0x4003416	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2078	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5
0x400341d	     0xfb6951cffff	            movzx edx, byte [rbp - 0xe4]	      2078	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5
0x4003424	          0x885008	                  mov byte [rax + 8], dl	      2078	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5
0x4003427	      0xe942060000	                           jmp 0x4003a6e	      2080	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22
0x400342c	    0x80bd19ffffff	                cmp byte [rbp - 0xe7], 0	      2084	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x4003433	     0xf85c6000000	                           jne 0x40034ff	      2084	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x4003439	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2087	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28	CALL_25
0x4003440	         0xfb64008	               movzx eax, byte [rax + 8]	      2087	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28	CALL_25
0x4003444	            0x84c0	                             test al, al	      2087	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28	CALL_25
0x4003446	            0x7913	                           jns 0x400345b	      2087	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28	CALL_25
0x4003448	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2088	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28
0x400344e	             0xc80	                             or al, 0x80	      2088	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28
0x4003450	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      2088	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28
0x4003456	      0xe913060000	                           jmp 0x4003a6e	      2089	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28
0x400345b	    0x488d9524ffff	                   lea rdx, [rbp - 0xdc]	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x4003462	    0x488b8df0feff	            mov rcx, qword [rbp - 0x110]	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x4003469	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x4003470	          0x4889ce	                            mov rsi, rcx	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x4003473	          0x4889c7	                            mov rdi, rax	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x4003476	      0xe8c3a80000	                   call sym.decCheckMath	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x400347b	            0x85c0	                           test eax, eax	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x400347d	     0xf85eb050000	                           jne 0x4003a6e	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x4003483	    0x488d9524ffff	                   lea rdx, [rbp - 0xdc]	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x400348a	    0x488b8df0feff	            mov rcx, qword [rbp - 0x110]	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4003491	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4003498	          0x4889ce	                            mov rsi, rcx	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x400349b	          0x4889c7	                            mov rdi, rax	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x400349e	      0xe89ba80000	                   call sym.decCheckMath	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x40034a3	            0x85c0	                           test eax, eax	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x40034a5	     0xf85c3050000	                           jne 0x4003a6e	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x40034ab	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x40034b2	      0xbe40000000	                           mov esi, 0x40	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x40034b7	          0x4889c7	                            mov rdi, rax	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x40034ba	      0xe800000000	                          call 0x40034bf	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x40034bf	    0xc78564ffffff	         mov dword [rbp - 0x9c], 0xf423f	      2094	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x40034c9	    0xc78568ffffff	      mov dword [rbp - 0x98], 0xfff0bdc1	      2095	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x40034d3	    0xc68578ffffff	                mov byte [rbp - 0x88], 0	      2096	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x40034da	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x40034e1	            0x8b10	                    mov edx, dword [rax]	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x40034e3	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x40034ea	            0x8b00	                    mov eax, dword [rax]	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x40034ec	            0x39c2	                            cmp edx, eax	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x40034ee	           0xf4dc2	                         cmovge eax, edx	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x40034f1	          0x83c00a	                            add eax, 0xa	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x40034f4	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x40034fa	      0xe9b9000000	                           jmp 0x40035b8	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x40034ff	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      2112	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x4003506	            0x7521	                           jne 0x4003529	      2112	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x4003508	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2114	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30	CALL_30
0x400350f	          0x4889c7	                            mov rdi, rax	      2114	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30	CALL_30
0x4003512	      0xe800000000	                          call 0x4003517	      2114	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30	CALL_30
0x4003517	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2115	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x400351e	    0x66c7400a0100	                 mov word [rax + 0xa], 1	      2115	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x4003524	      0xe945050000	                           jmp 0x4003a6e	      2116	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x4003529	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      2118	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_31
0x4003530	            0x7906	                           jns 0x4003538	      2118	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_31
0x4003532	    0xf79d28ffffff	                  neg dword [rbp - 0xd8]	      2118	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_31
0x4003538	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x400353f	          0x488b10	                    mov rdx, qword [rax]	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4003542	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4003549	        0x488b5008	                mov rdx, qword [rax + 8]	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x400354d	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4003554	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4003558	    0x48899570ffff	             mov qword [rbp - 0x90], rdx	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x400355f	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4003562	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4003568	    0xc7856cffffff	               mov dword [rbp - 0x94], 3	      2121	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4003572	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4003579	            0x8b10	                    mov edx, dword [rax]	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x400357b	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4003582	          0x8b4004	                mov eax, dword [rax + 4]	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4003585	             0x1c2	                            add edx, eax	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4003587	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x400358d	             0x1d0	                            add eax, edx	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x400358f	          0x83c002	                              add eax, 2	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4003592	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4003598	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x400359e	      0x3dffc99a3b	                     cmp eax, 0x3b9ac9ff	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x40035a3	            0x7e13	                           jle 0x40035b8	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x40035a5	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x40035ab	             0xc80	                             or al, 0x80	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x40035ad	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x40035b3	      0xe9b6040000	                           jmp 0x4003a6e	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x40035b8	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035be	          0x83f831	                           cmp eax, 0x31	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035c1	            0x7f1f	                            jg 0x40035e2	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035c3	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035c9	            0x4898	                                    cdqe	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035cb	     0xfb680000000	                   movzx eax, byte [rax]	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035d2	           0xfb6c0	                           movzx eax, al	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035d5	          0x83e801	                              sub eax, 1	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035d8	            0x4898	                                    cdqe	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035da	        0x4883c006	                              add rax, 6	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035de	             0x1c0	                            add eax, eax	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035e0	            0xeb26	                           jmp 0x4003608	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035e2	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035e8	          0x8d4802	                      lea ecx, [rax + 2]	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035eb	      0xba56555555	                     mov edx, 0x55555556	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035f0	            0x89c8	                            mov eax, ecx	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035f2	            0xf7ea	                                imul edx	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035f4	            0x89c8	                            mov eax, ecx	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035f6	          0xc1f81f	                           sar eax, 0x1f	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035f9	            0x29c2	                            sub edx, eax	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035fb	            0x89d0	                            mov eax, edx	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40035fd	          0x83e801	                              sub eax, 1	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4003600	            0x4898	                                    cdqe	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4003602	        0x4883c006	                              add rax, 6	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4003606	             0x1c0	                            add eax, eax	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4003608	    0x898538ffffff	             mov dword [rbp - 0xc8], eax	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x400360e	    0x83bd38ffffff	           cmp dword [rbp - 0xc8], 0x30 	      2135	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4003615	            0x7641	                           jbe 0x4003658	      2135	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4003617	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x400361d	          0x4889c7	                            mov rdi, rax	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4003620	      0xe800000000	                          call 0x4003625	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4003625	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x400362c	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	      2137	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x4003634	            0x7514	                           jne 0x400364a	      2137	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x4003636	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2138	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x400363c	          0x83c810	                            or eax, 0x10	      2138	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x400363f	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      2138	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x4003645	      0xe924040000	                           jmp 0x4003a6e	      2139	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x400364a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2140	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4003651	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2140	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4003658	    0x80bd19ffffff	                cmp byte [rbp - 0xe7], 0	      2144	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36
0x400365f	     0xf853b010000	                           jne 0x40037a0	      2144	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36
0x4003665	    0x488d8d24ffff	                   lea rcx, [rbp - 0xdc]	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x400366c	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4003673	    0x488bb500ffff	            mov rsi, qword [rbp - 0x100]	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x400367a	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4003681	          0x4889c7	                            mov rdi, rax	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4003684	      0xe858720000	                        call sym.decLnOp	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4003689	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4003690	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4003694	          0x6685c0	                             test ax, ax	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4003697	     0xf85ac000000	                           jne 0x4003749	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x400369d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40036a4	            0x8b00	                    mov eax, dword [rax]	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40036a6	          0x83f801	                              cmp eax, 1	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40036a9	     0xf859a000000	                           jne 0x4003749	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40036af	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40036b6	         0xfb64008	               movzx eax, byte [rax + 8]	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40036ba	           0xfb6c0	                           movzx eax, al	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40036bd	          0x83e070	                           and eax, 0x70	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40036c0	            0x85c0	                           test eax, eax	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40036c2	     0xf8581000000	                           jne 0x4003749	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40036c8	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2152	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37
0x40036cf	    0x66c7400a0100	                 mov word [rax + 0xa], 1	      2152	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37
0x40036d5	    0x80bd18ffffff	                cmp byte [rbp - 0xe8], 0	      2153	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x40036dc	     0xf8537030000	                           jne 0x4003a19	      2153	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x40036e2	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2154	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x40036e9	            0x8b00	                    mov eax, dword [rax]	      2154	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x40036eb	          0x83e801	                              sub eax, 1	      2154	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x40036ee	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	      2154	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x40036f4	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2155	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38	CALL_34
0x40036fb	        0x488d480a	                    lea rcx, [rax + 0xa]	      2155	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38	CALL_34
0x40036ff	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      2155	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38	CALL_34
0x4003705	            0x89c2	                            mov edx, eax	      2155	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38	CALL_34
0x4003707	      0xbe01000000	                              mov esi, 1	      2155	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38	CALL_34
0x400370c	          0x4889cf	                            mov rdi, rcx	      2155	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38	CALL_34
0x400370f	      0xe8b7910000	                 call sym.decShiftToMost	      2155	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38	CALL_34
0x4003714	            0x89c2	                            mov edx, eax	      2155	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38	CALL_34
0x4003716	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2155	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38	CALL_34
0x400371d	            0x8910	                    mov dword [rax], edx	      2155	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38	CALL_34
0x400371f	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      2156	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4003725	            0xf7d8	                                 neg eax	      2156	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4003727	            0x89c2	                            mov edx, eax	      2156	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4003729	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2156	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4003730	          0x895004	                mov dword [rax + 4], edx	      2156	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4003733	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2157	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4003739	       0xd20080000	                           or eax, 0x820	      2157	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x400373e	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      2157	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4003744	      0xe9d0020000	                           jmp 0x4003a19	      2153	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4003749	    0x488dbd24ffff	                   lea rdi, [rbp - 0xdc]	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4003750	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4003757	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x400375e	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4003765	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x400376c	          0x4989f8	                             mov r8, rdi	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x400376f	          0x4889c7	                            mov rdi, rax	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4003772	      0xe88a590000	                  call sym.decMultiplyOp	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4003777	    0x488d8d24ffff	                   lea rcx, [rbp - 0xdc]	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x400377e	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x4003785	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x400378c	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x4003793	          0x4889c7	                            mov rdi, rax	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x4003796	      0xe87a660000	                       call sym.decExpOp	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x400379b	      0xe979020000	                           jmp 0x4003a19	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x40037a0	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2168	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	CALL_37
0x40037a7	          0x4889c7	                            mov rdi, rax	      2168	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	CALL_37
0x40037aa	      0xe800000000	                          call 0x40037af	      2168	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	CALL_37
0x40037af	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2169	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8
0x40037b6	    0x66c7400a0100	                 mov word [rax + 0xa], 1	      2169	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8
0x40037bc	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2173	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_38
0x40037c3	         0xfb64008	               movzx eax, byte [rax + 8]	      2173	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_38
0x40037c7	            0x84c0	                             test al, al	      2173	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_38
0x40037c9	     0xf89d9000000	                           jns 0x40038a8	      2173	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_38
0x40037cf	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2174	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39
0x40037d3	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2174	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39
0x40037da	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x40037e1	        0x488d4580	                   lea rax, [rbp - 0x80]	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x40037e5	          0x4889d6	                            mov rsi, rdx	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x40037e8	          0x4889c7	                            mov rdi, rax	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x40037eb	      0xe800000000	                          call 0x40037f0	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x40037f0	    0x488dbd24ffff	                   lea rdi, [rbp - 0xdc]	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x40037f7	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x40037fe	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4003805	        0x488d7580	                   lea rsi, [rbp - 0x80]	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4003809	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4003810	          0x4989f9	                             mov r9, rdi	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4003813	    0x41b880000000	                           mov r8d, 0x80	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4003819	          0x4889c7	                            mov rdi, rax	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x400381c	      0xe8e7410000	                    call sym.decDivideOp	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4003821	    0x83bd38ffffff	           cmp dword [rbp - 0xc8], 0x30 	      2182	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4003828	            0x7641	                           jbe 0x400386b	      2182	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x400382a	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	      2183	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4003830	          0x4889c7	                            mov rdi, rax	      2183	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4003833	      0xe800000000	                          call 0x4003838	      2183	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4003838	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2183	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x400383f	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      2184	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4003847	            0x7514	                           jne 0x400385d	      2184	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4003849	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2185	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x400384f	          0x83c810	                            or eax, 0x10	      2185	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4003852	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      2185	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4003858	      0xe911020000	                           jmp 0x4003a6e	      2186	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x400385d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2187	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4003864	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2187	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x400386b	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x4003872	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x4003879	          0x4889d6	                            mov rsi, rdx	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x400387c	          0x4889c7	                            mov rdi, rax	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x400387f	      0xe800000000	                          call 0x4003884	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x4003884	        0x488d5580	                   lea rdx, [rbp - 0x80]	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4003888	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x400388f	          0x4889d6	                            mov rsi, rdx	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4003892	          0x4889c7	                            mov rdi, rax	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4003895	      0xe800000000	                          call 0x400389a	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x400389a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2192	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40
0x40038a1	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      2192	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40
0x40038a8	    0xc6851bffffff	                mov byte [rbp - 0xe5], 0	      2199	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8
0x40038af	    0xc7852cffffff	               mov dword [rbp - 0xd4], 1	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x40038b9	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2202	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43
0x40038bf	      0x2500220000	                         and eax, 0x2200	      2202	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43
0x40038c4	            0x85c0	                           test eax, eax	      2202	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43
0x40038c6	            0x744a	                            je 0x4003912	      2202	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43
0x40038c8	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40038ce	      0x2500020000	                          and eax, 0x200	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40038d3	            0x85c0	                           test eax, eax	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40038d5	     0xf85cb000000	                           jne 0x40039a6	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40038db	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40038e2	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40038e6	          0x6685c0	                             test ax, ax	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40038e9	            0x7527	                           jne 0x4003912	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40038eb	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40038f2	            0x8b00	                    mov eax, dword [rax]	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40038f4	          0x83f801	                              cmp eax, 1	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40038f7	            0x7519	                           jne 0x4003912	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40038f9	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4003900	         0xfb64008	               movzx eax, byte [rax + 8]	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4003904	           0xfb6c0	                           movzx eax, al	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4003907	          0x83e070	                           and eax, 0x70	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x400390a	            0x85c0	                           test eax, eax	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x400390c	     0xf8494000000	                            je 0x40039a6	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4003912	    0xd1a528ffffff	               shl dword [rbp - 0xd8], 1	      2207	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x4003918	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      2208	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45
0x400391f	            0x7935	                           jns 0x4003956	      2208	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45
0x4003921	    0xc6851bffffff	                mov byte [rbp - 0xe5], 1	      2209	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45
0x4003928	    0x488dbd24ffff	                   lea rdi, [rbp - 0xdc]	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x400392f	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x4003936	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x400393d	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x4003944	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x400394b	          0x4989f8	                             mov r8, rdi	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x400394e	          0x4889c7	                            mov rdi, rax	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x4003951	      0xe8ab570000	                  call sym.decMultiplyOp	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x4003956	    0x83bd2cffffff	           cmp dword [rbp - 0xd4], 0x1f 	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x400395d	            0x7446	                            je 0x40039a5	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x400395f	    0x80bd1bffffff	                cmp byte [rbp - 0xe5], 0	      2213	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_47
0x4003966	            0x7430	                            je 0x4003998	      2213	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_47
0x4003968	    0x488dbd24ffff	                   lea rdi, [rbp - 0xdc]	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x400396f	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4003976	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x400397d	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4003984	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x400398b	          0x4989f8	                             mov r8, rdi	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x400398e	          0x4889c7	                            mov rdi, rax	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4003991	      0xe86b570000	                  call sym.decMultiplyOp	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4003996	            0xeb01	                           jmp 0x4003999	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4003998	              0x90	                                     nop	      2213	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_47
0x4003999	    0x83852cffffff	               add dword [rbp - 0xd4], 1	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x40039a0	      0xe914ffffff	                           jmp 0x40038b9	      2215	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x40039a5	              0x90	                                     nop	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x40039a6	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2218	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40039ac	      0x2500220000	                         and eax, 0x2200	      2218	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40039b1	            0x85c0	                           test eax, eax	      2218	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40039b3	            0x7464	                            je 0x4003a19	      2218	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40039b5	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40039bc	         0xfb64008	               movzx eax, byte [rax + 8]	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40039c0	          0x83e07f	                           and eax, 0x7f	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40039c3	            0x89c2	                            mov edx, eax	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40039c5	     0xfb6851cffff	            movzx eax, byte [rbp - 0xe4]	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40039cc	             0x9d0	                             or eax, edx	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40039ce	            0x89c2	                            mov edx, eax	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40039d0	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40039d7	          0x885008	                  mov byte [rax + 8], dl	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40039da	    0x488d8d24ffff	                   lea rcx, [rbp - 0xdc]	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x40039e1	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x40039e8	    0x488bb5f0feff	            mov rsi, qword [rbp - 0x110]	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x40039ef	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x40039f6	          0x4889c7	                            mov rdi, rax	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x40039f9	      0xe8ff9c0000	                    call sym.decFinalize	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x40039fe	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      2235	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_48
0x4003a05	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2235	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_48
0x4003a0c	          0x4889d6	                            mov rsi, rdx	      2235	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_48
0x4003a0f	          0x4889c7	                            mov rdi, rax	      2235	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_48
0x4003a12	      0xe800000000	                          call 0x4003a17	      2235	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_48
0x4003a17	            0xeb55	                           jmp 0x4003a6e	      2236	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4003a19	    0x488dbd24ffff	                   lea rdi, [rbp - 0xdc]	      2249	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_51
0x4003a20	    0x488d8d20ffff	                   lea rcx, [rbp - 0xe0]	      2249	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_51
0x4003a27	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	      2249	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_51
0x4003a2e	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	      2249	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_51
0x4003a35	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2249	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_51
0x4003a3c	          0x4989f8	                             mov r8, rdi	      2249	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_51
0x4003a3f	          0x4889c7	                            mov rdi, rax	      2249	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_51
0x4003a42	      0xe880930000	                     call sym.decCopyFit	      2249	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_51
0x4003a47	    0x488d8d24ffff	                   lea rcx, [rbp - 0xdc]	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4003a4e	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4003a55	    0x488bb5f0feff	            mov rsi, qword [rbp - 0x110]	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4003a5c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4003a63	          0x4889c7	                            mov rdi, rax	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4003a66	      0xe8929c0000	                    call sym.decFinalize	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4003a6b	            0xeb01	                           jmp 0x4003a6e	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4003a6d	              0x90	                                     nop	      2023	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9
0x4003a6e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2256	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003a75	          0x4889c7	                            mov rdi, rax	      2256	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003a78	      0xe800000000	                          call 0x4003a7d	      2256	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003a7d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2257	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003a84	          0x4889c7	                            mov rdi, rax	      2257	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003a87	      0xe800000000	                          call 0x4003a8c	      2257	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003a8c	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4003a92	            0x85c0	                           test eax, eax	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4003a94	            0x741e	                            je 0x4003ab4	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4003a96	    0x8b8d24ffffff	             mov ecx, dword [rbp - 0xdc]	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4003a9c	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4003aa3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4003aaa	            0x89ce	                            mov esi, ecx	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4003aac	          0x4889c7	                            mov rdi, rax	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4003aaf	      0xe864a90000	                      call sym.decStatus	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4003ab4	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2266	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003abb	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003abf	    0x644833342528	                xor rsi, qword fs:[0x28]	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003ac8	            0x7405	                            je 0x4003acf	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003aca	      0xe800000000	                          call 0x4003acf	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003acf	              0xc9	                                   leave	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4003ad0	              0xc3	                                     ret	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
decNumberShift	SWITCH,0:IF,11:FOR,0:CALL,14:DO,0:ELSE,6:WHILE,0:functions,0	191
0x4004567	              0x55	                                push rbp	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004568	          0x4889e5	                            mov rbp, rsp	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x400456b	        0x4883ec30	                           sub rsp, 0x30	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x400456f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004573	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004577	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x400457b	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x400457f	    0x64488b042528	                mov rax, qword fs:[0x28]	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004588	        0x488945f8	                mov qword [rbp - 8], rax	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x400458c	            0x31c0	                            xor eax, eax	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x400458e	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      2670	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004595	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x4004599	         0xfb64008	               movzx eax, byte [rax + 8]	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x400459d	           0xfb6c0	                           movzx eax, al	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x40045a0	          0x83e030	                           and eax, 0x30	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x40045a3	            0x85c0	                           test eax, eax	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x40045a5	            0x7512	                           jne 0x40045b9	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x40045a7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x40045ab	         0xfb64008	               movzx eax, byte [rax + 8]	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x40045af	           0xfb6c0	                           movzx eax, al	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x40045b2	          0x83e030	                           and eax, 0x30	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x40045b5	            0x85c0	                           test eax, eax	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x40045b7	            0x7424	                            je 0x40045dd	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x40045b9	        0x488d7df0	                   lea rdi, [rbp - 0x10]	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x40045bd	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x40045c1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x40045c5	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x40045c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x40045cd	          0x4989f8	                             mov r8, rdi	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x40045d0	          0x4889c7	                            mov rdi, rax	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x40045d3	      0xe83a9c0000	                        call sym.decNaNs	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x40045d8	      0xe9dc010000	                           jmp 0x40047b9	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x40045dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x40045e1	         0xfb64008	               movzx eax, byte [rax + 8]	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x40045e5	           0xfb6c0	                           movzx eax, al	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x40045e8	          0x83e040	                           and eax, 0x40	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x40045eb	            0x85c0	                           test eax, eax	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x40045ed	            0x750b	                           jne 0x40045fa	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x40045ef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x40045f3	          0x8b4004	                mov eax, dword [rax + 4]	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x40045f6	            0x85c0	                           test eax, eax	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x40045f8	            0x740c	                            je 0x4004606	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x40045fa	    0xc745f0800000	           mov dword [rbp - 0x10], 0x80 	      2682	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3
0x4004601	      0xe9b3010000	                           jmp 0x40047b9	      2682	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3
0x4004606	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2684	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	CALL_6
0x400460a	          0x4889c7	                            mov rdi, rax	      2684	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	CALL_6
0x400460d	      0xe807980000	                      call sym.decGetInt	      2684	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	CALL_6
0x4004612	          0x8945f4	              mov dword [rbp - 0xc], eax	      2684	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	CALL_6
0x4004615	    0x817df4000000	      cmp dword [rbp - 0xc], 0x80000000 	      2685	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x400461c	            0x7427	                            je 0x4004645	      2685	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x400461e	    0x817df4030000	      cmp dword [rbp - 0xc], 0x80000003 	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x4004625	            0x741e	                            je 0x4004645	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x4004627	    0x817df4020000	      cmp dword [rbp - 0xc], 0x80000002 	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x400462e	            0x7415	                            je 0x4004645	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x4004630	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004633	              0x99	                                     cdq	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004634	            0x89d0	                            mov eax, edx	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004636	          0x3345f4	              xor eax, dword [rbp - 0xc]	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004639	            0x29d0	                            sub eax, edx	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x400463b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x400463f	            0x8b12	                    mov edx, dword [rdx]	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004641	            0x39d0	                            cmp eax, edx	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004643	            0x7e0c	                           jle 0x4004651	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004645	    0xc745f0800000	           mov dword [rbp - 0x10], 0x80 	      2688	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x400464c	      0xe968010000	                           jmp 0x40047b9	      2688	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x4004651	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2690	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	CALL_8
0x4004655	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2690	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	CALL_8
0x4004659	          0x4889d6	                            mov rsi, rdx	      2690	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	CALL_8
0x400465c	          0x4889c7	                            mov rdi, rax	      2690	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	CALL_8
0x400465f	      0xe800000000	                          call 0x4004664	      2690	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	CALL_8
0x4004664	        0x837df400	                cmp dword [rbp - 0xc], 0	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x4004668	     0xf844b010000	                            je 0x40047b9	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x400466e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x4004672	         0xfb64008	               movzx eax, byte [rax + 8]	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x4004676	           0xfb6c0	                           movzx eax, al	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x4004679	          0x83e040	                           and eax, 0x40	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x400467c	            0x85c0	                           test eax, eax	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x400467e	     0xf8535010000	                           jne 0x40047b9	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x4004684	        0x837df400	                cmp dword [rbp - 0xc], 0	      2692	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6
0x4004688	     0xf8e9e000000	                           jle 0x400472c	      2692	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6
0x400468e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2693	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x4004692	            0x8b00	                    mov eax, dword [rax]	      2693	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x4004694	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      2693	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x4004697	            0x7519	                           jne 0x40046b2	      2693	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x4004699	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2694	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x400469d	    0x66c7400a0000	                 mov word [rax + 0xa], 0	      2694	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x40046a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2695	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x40046a7	    0xc70001000000	                      mov dword [rax], 1	      2695	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x40046ad	      0xe907010000	                           jmp 0x40047b9	      2695	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x40046b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x40046b6	            0x8b10	                    mov edx, dword [rax]	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x40046b8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x40046bb	             0x1c2	                            add edx, eax	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x40046bd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x40046c1	            0x8b00	                    mov eax, dword [rax]	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x40046c3	            0x39c2	                            cmp edx, eax	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x40046c5	            0x7e21	                           jle 0x40046e8	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x40046c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x40046cb	            0x8b10	                    mov edx, dword [rax]	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x40046cd	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x40046d0	             0x1c2	                            add edx, eax	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x40046d2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x40046d6	            0x8b00	                    mov eax, dword [rax]	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x40046d8	            0x29c2	                            sub edx, eax	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x40046da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x40046de	            0x89d6	                            mov esi, edx	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x40046e0	          0x4889c7	                            mov rdi, rax	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x40046e3	      0xe865990000	                       call sym.decDecap	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x40046e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x40046ec	            0x8b00	                    mov eax, dword [rax]	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x40046ee	          0x83f801	                              cmp eax, 1	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x40046f1	            0x7f11	                            jg 0x4004704	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x40046f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x40046f7	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x40046fb	          0x6685c0	                             test ax, ax	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x40046fe	     0xf84b5000000	                            je 0x40047b9	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x4004704	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4004708	            0x8b00	                    mov eax, dword [rax]	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x400470a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x400470e	        0x488d4a0a	                    lea rcx, [rdx + 0xa]	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4004712	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4004715	            0x89c6	                            mov esi, eax	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4004717	          0x4889cf	                            mov rdi, rcx	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x400471a	      0xe8ac810000	                 call sym.decShiftToMost	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x400471f	            0x89c2	                            mov edx, eax	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4004721	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4004725	            0x8910	                    mov dword [rax], edx	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4004727	      0xe98d000000	                           jmp 0x40047b9	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x400472c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x400472f	            0xf7d8	                                 neg eax	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004731	            0x89c2	                            mov edx, eax	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004733	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004737	            0x8b00	                    mov eax, dword [rax]	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004739	            0x39c2	                            cmp edx, eax	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x400473b	            0x7c16	                            jl 0x4004753	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x400473d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2710	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004741	    0x66c7400a0000	                 mov word [rax + 0xa], 0	      2710	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004747	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2711	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x400474b	    0xc70001000000	                      mov dword [rax], 1	      2711	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004751	            0xeb66	                           jmp 0x40047b9	      2711	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004753	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004756	            0xf7d8	                                 neg eax	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004758	            0x89c6	                            mov esi, eax	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x400475a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x400475e	            0x8b00	                    mov eax, dword [rax]	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004760	          0x83f831	                           cmp eax, 0x31	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004763	            0x7f14	                            jg 0x4004779	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004765	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004769	            0x8b00	                    mov eax, dword [rax]	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x400476b	            0x4898	                                    cdqe	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x400476d	     0xfb680000000	                   movzx eax, byte [rax]	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004774	           0xfb6c0	                           movzx eax, al	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004777	            0xeb1b	                           jmp 0x4004794	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004779	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x400477d	            0x8b00	                    mov eax, dword [rax]	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x400477f	          0x8d4802	                      lea ecx, [rax + 2]	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004782	      0xba56555555	                     mov edx, 0x55555556	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004787	            0x89c8	                            mov eax, ecx	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004789	            0xf7ea	                                imul edx	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x400478b	            0x89c8	                            mov eax, ecx	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x400478d	          0xc1f81f	                           sar eax, 0x1f	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004790	            0x29c2	                            sub edx, eax	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004792	            0x89d0	                            mov eax, edx	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004794	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004798	        0x488d4a0a	                    lea rcx, [rdx + 0xa]	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x400479c	            0x89f2	                            mov edx, esi	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x400479e	            0x89c6	                            mov esi, eax	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x40047a0	          0x4889cf	                            mov rdi, rcx	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x40047a3	      0xe8ad830000	                call sym.decShiftToLeast	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x40047a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2715	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6
0x40047ac	            0x8b10	                    mov edx, dword [rax]	      2715	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6
0x40047ae	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2715	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6
0x40047b1	             0x1c2	                            add edx, eax	      2715	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6
0x40047b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2715	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6
0x40047b7	            0x8910	                    mov dword [rax], edx	      2715	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6
0x40047b9	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x40047bc	            0x85c0	                           test eax, eax	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x40047be	            0x7415	                            je 0x40047d5	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x40047c0	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x40047c3	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x40047c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x40047cb	            0x89ce	                            mov esi, ecx	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x40047cd	          0x4889c7	                            mov rdi, rax	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x40047d0	      0xe8439c0000	                      call sym.decStatus	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x40047d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2722	decNumber.c	FUNCTION_68	FUNCTION_44
0x40047d9	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x40047dd	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x40047e6	            0x7405	                            je 0x40047ed	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x40047e8	      0xe800000000	                          call 0x40047ed	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x40047ed	              0xc9	                                   leave	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x40047ee	              0xc3	                                     ret	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
decNumberCopyNegate	SWITCH,0:IF,1:FOR,0:CALL,2:DO,0:ELSE,0:WHILE,0:functions,0	19
0x4005fa2	              0x55	                                push rbp	      3407	decNumber.c	FUNCTION_68	FUNCTION_54
0x4005fa3	          0x4889e5	                            mov rbp, rsp	      3407	decNumber.c	FUNCTION_68	FUNCTION_54
0x4005fa6	        0x4883ec10	                           sub rsp, 0x10	      3407	decNumber.c	FUNCTION_68	FUNCTION_54
0x4005faa	        0x48897df8	                mov qword [rbp - 8], rdi	      3407	decNumber.c	FUNCTION_68	FUNCTION_54
0x4005fae	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3407	decNumber.c	FUNCTION_68	FUNCTION_54
0x4005fb2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3411	decNumber.c	FUNCTION_68	FUNCTION_54	CALL_2
0x4005fb6	        0x488b45f8	                mov rax, qword [rbp - 8]	      3411	decNumber.c	FUNCTION_68	FUNCTION_54	CALL_2
0x4005fba	          0x4889d6	                            mov rsi, rdx	      3411	decNumber.c	FUNCTION_68	FUNCTION_54	CALL_2
0x4005fbd	          0x4889c7	                            mov rdi, rax	      3411	decNumber.c	FUNCTION_68	FUNCTION_54	CALL_2
0x4005fc0	      0xe800000000	                          call 0x4005fc5	      3411	decNumber.c	FUNCTION_68	FUNCTION_54	CALL_2
0x4005fc5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3412	decNumber.c	FUNCTION_68	FUNCTION_54
0x4005fc9	         0xfb64008	               movzx eax, byte [rax + 8]	      3412	decNumber.c	FUNCTION_68	FUNCTION_54
0x4005fcd	          0x83f080	                     xor eax, 0xffffff80	      3412	decNumber.c	FUNCTION_68	FUNCTION_54
0x4005fd0	            0x89c2	                            mov edx, eax	      3412	decNumber.c	FUNCTION_68	FUNCTION_54
0x4005fd2	        0x488b45f8	                mov rax, qword [rbp - 8]	      3412	decNumber.c	FUNCTION_68	FUNCTION_54
0x4005fd6	          0x885008	                  mov byte [rax + 8], dl	      3412	decNumber.c	FUNCTION_68	FUNCTION_54
0x4005fd9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3413	decNumber.c	FUNCTION_68	FUNCTION_54
0x4005fdd	              0xc9	                                   leave	      3414	decNumber.c	FUNCTION_68	FUNCTION_54
0x4005fde	              0xc3	                                     ret	      3414	decNumber.c	FUNCTION_68	FUNCTION_54
decNumberToInt32	SWITCH,0:IF,5:FOR,1:CALL,3:DO,0:ELSE,2:WHILE,0:functions,0	104
0x4000149	              0x55	                                push rbp	       380	decNumber.c	FUNCTION_68	FUNCTION_3
0x400014a	          0x4889e5	                            mov rbp, rsp	       380	decNumber.c	FUNCTION_68	FUNCTION_3
0x400014d	        0x4883ec30	                           sub rsp, 0x30	       380	decNumber.c	FUNCTION_68	FUNCTION_3
0x4000151	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       380	decNumber.c	FUNCTION_68	FUNCTION_3
0x4000155	        0x488975d0	             mov qword [rbp - 0x30], rsi	       380	decNumber.c	FUNCTION_68	FUNCTION_3
0x4000159	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x400015d	         0xfb64008	               movzx eax, byte [rax + 8]	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4000161	           0xfb6c0	                           movzx eax, al	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4000164	          0x83e070	                           and eax, 0x70	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4000167	            0x85c0	                           test eax, eax	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4000169	     0xf8519010000	                           jne 0x4000288	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x400016f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4000173	            0x8b00	                    mov eax, dword [rax]	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4000175	          0x83f80a	                            cmp eax, 0xa	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4000178	     0xf8f0a010000	                            jg 0x4000288	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x400017e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4000182	          0x8b4004	                mov eax, dword [rax + 4]	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4000185	            0x85c0	                           test eax, eax	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4000187	     0xf85fb000000	                           jne 0x4000288	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x400018d	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       390	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x4000194	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       391	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x4000198	        0x4883c00a	                            add rax, 0xa	       391	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x400019c	        0x488945f8	                mov qword [rbp - 8], rax	       391	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       392	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001a4	           0xfb700	                   movzx eax, word [rax]	       392	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001a7	           0xfb7c0	                           movzx eax, ax	       392	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001aa	          0x8945f0	             mov dword [rbp - 0x10], eax	       392	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001ad	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001b0	      0xbacdcccccc	                     mov edx, 0xcccccccd	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001b5	            0xf7e2	                                 mul edx	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001b7	            0x89d0	                            mov eax, edx	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001b9	          0xc1e803	                              shr eax, 3	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001bc	          0x8945ec	             mov dword [rbp - 0x14], eax	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001bf	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001c2	      0xbacdcccccc	                     mov edx, 0xcccccccd	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001c7	            0x89c8	                            mov eax, ecx	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001c9	            0xf7e2	                                 mul edx	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001cb	          0xc1ea03	                              shr edx, 3	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001ce	            0x89d0	                            mov eax, edx	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001d0	          0xc1e002	                              shl eax, 2	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001d3	             0x1d0	                            add eax, edx	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001d5	             0x1c0	                            add eax, eax	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001d7	            0x29c1	                            sub ecx, eax	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001d9	            0x89c8	                            mov eax, ecx	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001db	          0x8945f0	             mov dword [rbp - 0x10], eax	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001de	      0x488345f802	                  add qword [rbp - 8], 2	       397	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40001e3	    0xc745e8030000	               mov dword [rbp - 0x18], 3	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40001ea	            0xeb28	                           jmp 0x4000214	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40001ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40001f0	           0xfb700	                   movzx eax, word [rax]	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40001f3	           0xfb7d0	                           movzx edx, ax	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40001f6	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40001f9	          0x83e801	                              sub eax, 1	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40001fc	            0x4898	                                    cdqe	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40001fe	    0x8b0485000000	                  mov eax, dword [rax*4]	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4000205	           0xfafc2	                           imul eax, edx	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4000208	           0x145ec	             add dword [rbp - 0x14], eax	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x400020b	      0x488345f802	                  add qword [rbp - 8], 2	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4000210	        0x8345e803	               add dword [rbp - 0x18], 3	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4000214	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4000218	            0x8b00	                    mov eax, dword [rax]	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x400021a	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x400021d	            0x7fcd	                            jg 0x40001ec	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x400021f	    0x817deccccccc	      cmp dword [rbp - 0x14], 0xccccccc 	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4000226	            0x770f	                            ja 0x4000237	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4000228	    0x817deccccccc	      cmp dword [rbp - 0x14], 0xccccccc 	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x400022f	            0x7528	                           jne 0x4000259	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4000231	        0x837df007	               cmp dword [rbp - 0x10], 7	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4000235	            0x7622	                           jbe 0x4000259	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4000237	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x400023b	         0xfb64008	               movzx eax, byte [rax + 8]	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x400023f	            0x84c0	                             test al, al	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4000241	            0x7944	                           jns 0x4000287	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4000243	    0x817deccccccc	      cmp dword [rbp - 0x14], 0xccccccc 	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x400024a	            0x753b	                           jne 0x4000287	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x400024c	        0x837df008	               cmp dword [rbp - 0x10], 8	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4000250	            0x7535	                           jne 0x4000287	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4000252	      0xb800000080	                     mov eax, 0x80000000	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4000257	            0xeb45	                           jmp 0x400029e	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4000259	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       407	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	CALL_2
0x400025c	          0x8d1400	                    lea edx, [rax + rax]	       407	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	CALL_2
0x400025f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       407	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	CALL_2
0x4000262	          0xc1e003	                              shl eax, 3	       407	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	CALL_2
0x4000265	             0x1c2	                            add edx, eax	       407	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	CALL_2
0x4000267	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       407	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	CALL_2
0x400026a	             0x1d0	                            add eax, edx	       407	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	CALL_2
0x400026c	          0x8945f4	              mov dword [rbp - 0xc], eax	       407	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	CALL_2
0x400026f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x4000273	         0xfb64008	               movzx eax, byte [rax + 8]	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x4000277	            0x84c0	                             test al, al	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x4000279	            0x7907	                           jns 0x4000282	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x400027b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x400027e	            0xf7d8	                                 neg eax	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x4000280	            0xeb1c	                           jmp 0x400029e	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x4000282	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       409	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2
0x4000285	            0xeb17	                           jmp 0x400029e	       409	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2
0x4000287	              0x90	                                     nop	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4000288	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       412	decNumber.c	FUNCTION_68	FUNCTION_3	CALL_3
0x400028c	      0xbe80000000	                           mov esi, 0x80	       412	decNumber.c	FUNCTION_68	FUNCTION_3	CALL_3
0x4000291	          0x4889c7	                            mov rdi, rax	       412	decNumber.c	FUNCTION_68	FUNCTION_3	CALL_3
0x4000294	      0xe800000000	                          call 0x4000299	       412	decNumber.c	FUNCTION_68	FUNCTION_3	CALL_3
0x4000299	      0xb800000000	                              mov eax, 0	       413	decNumber.c	FUNCTION_68	FUNCTION_3
0x400029e	              0xc9	                                   leave	       414	decNumber.c	FUNCTION_68	FUNCTION_3
0x400029f	              0xc3	                                     ret	       414	decNumber.c	FUNCTION_68	FUNCTION_3
decNumberCopy	SWITCH,0:IF,3:FOR,1:CALL,2:DO,0:ELSE,0:WHILE,0:functions,0	77
0x4005e63	              0x55	                                push rbp	      3346	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005e64	          0x4889e5	                            mov rbp, rsp	      3346	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005e67	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3346	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005e6b	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3346	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005e6f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x4005e73	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x4005e77	            0x7509	                           jne 0x4005e82	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x4005e79	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x4005e7d	      0xe9e1000000	                           jmp 0x4005f63	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x4005e82	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005e86	         0xfb65008	               movzx edx, byte [rax + 8]	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005e8a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005e8e	          0x885008	                  mov byte [rax + 8], dl	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005e91	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005e95	          0x8b5004	                mov edx, dword [rax + 4]	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005e98	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005e9c	          0x895004	                mov dword [rax + 4], edx	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005e9f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005ea3	            0x8b10	                    mov edx, dword [rax]	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005ea5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005ea9	            0x8910	                    mov dword [rax], edx	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005eab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005eaf	         0xfb7500a	            movzx edx, word [rax + 0xa] 	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005eb3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005eb7	        0x6689500a	                mov word [rax + 0xa], dx	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005ebb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4005ebf	            0x8b00	                    mov eax, dword [rax]	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4005ec1	          0x83f803	                              cmp eax, 3	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4005ec4	     0xf8e95000000	                           jle 0x4005f5f	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4005eca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4005ece	        0x4883c00a	                            add rax, 0xa	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4005ed2	        0x4883c002	                              add rax, 2	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4005ed6	        0x488945f0	             mov qword [rbp - 0x10], rax	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4005eda	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005ede	        0x488d700a	                    lea rsi, [rax + 0xa]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005ee2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005ee6	            0x8b00	                    mov eax, dword [rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005ee8	          0x83f831	                           cmp eax, 0x31	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005eeb	            0x7f17	                            jg 0x4005f04	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005eed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005ef1	            0x8b00	                    mov eax, dword [rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005ef3	            0x4898	                                    cdqe	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005ef5	     0xfb680000000	                   movzx eax, byte [rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005efc	           0xfb6c0	                           movzx eax, al	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005eff	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005f02	            0xeb20	                           jmp 0x4005f24	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005f04	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005f08	            0x8b00	                    mov eax, dword [rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005f0a	          0x8d4802	                      lea ecx, [rax + 2]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005f0d	      0xba56555555	                     mov edx, 0x55555556	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005f12	            0x89c8	                            mov eax, ecx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005f14	            0xf7ea	                                imul edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005f16	            0x89c8	                            mov eax, ecx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005f18	          0xc1f81f	                           sar eax, 0x1f	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005f1b	            0x29c2	                            sub edx, eax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005f1d	            0x89d0	                            mov eax, edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005f1f	            0x4898	                                    cdqe	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005f21	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005f24	          0x4801f0	                            add rax, rsi	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005f27	        0x488945f8	                mov qword [rbp - 8], rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005f2b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005f2f	        0x4883c00a	                            add rax, 0xa	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005f33	        0x4883c002	                              add rax, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005f37	        0x488945e8	             mov qword [rbp - 0x18], rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005f3b	            0xeb18	                           jmp 0x4005f55	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005f3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005f41	           0xfb710	                   movzx edx, word [rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005f44	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005f48	          0x668910	                      mov word [rax], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005f4b	      0x488345e802	               add qword [rbp - 0x18], 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005f50	      0x488345f002	               add qword [rbp - 0x10], 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005f55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005f59	        0x483b45f8	                cmp rax, qword [rbp - 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005f5d	            0x72de	                            jb 0x4005f3d	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005f5f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3371	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005f63	              0x5d	                                 pop rbp	      3372	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005f64	              0xc3	                                     ret	      3372	decNumber.c	FUNCTION_68	FUNCTION_52
decNumberRemainder	SWITCH,0:IF,1:FOR,0:CALL,3:DO,0:ELSE,0:WHILE,0:functions,0	36
0x4003d06	              0x55	                                push rbp	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4003d07	          0x4889e5	                            mov rbp, rsp	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4003d0a	        0x4883ec30	                           sub rsp, 0x30	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4003d0e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4003d12	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4003d16	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4003d1a	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4003d1e	    0x64488b042528	                mov rax, qword fs:[0x28]	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4003d27	        0x488945f8	                mov qword [rbp - 8], rax	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4003d2b	            0x31c0	                            xor eax, eax	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4003d2d	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      2398	decNumber.c	FUNCTION_68	FUNCTION_39
0x4003d34	        0x488d7df4	                    lea rdi, [rbp - 0xc]	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x4003d38	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x4003d3c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x4003d40	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x4003d44	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x4003d48	          0x4989f9	                             mov r9, rdi	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x4003d4b	    0x41b840000000	                           mov r8d, 0x40	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x4003d51	          0x4889c7	                            mov rdi, rax	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x4003d54	      0xe8af3c0000	                    call sym.decDivideOp	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x4003d59	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x4003d5c	            0x85c0	                           test eax, eax	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x4003d5e	            0x7415	                            je 0x4003d75	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x4003d60	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x4003d63	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x4003d67	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x4003d6b	            0x89ce	                            mov esi, ecx	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x4003d6d	          0x4889c7	                            mov rdi, rax	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x4003d70	      0xe8a3a60000	                      call sym.decStatus	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x4003d75	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2404	decNumber.c	FUNCTION_68	FUNCTION_39
0x4003d79	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x4003d7d	    0x644833342528	                xor rsi, qword fs:[0x28]	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x4003d86	            0x7405	                            je 0x4003d8d	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x4003d88	      0xe800000000	                          call 0x4003d8d	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x4003d8d	              0xc9	                                   leave	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x4003d8e	              0xc3	                                     ret	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
decNumberTrim	SWITCH,0:IF,1:FOR,0:CALL,3:DO,0:ELSE,0:WHILE,0:functions,0	25
0x400631e	              0x55	                                push rbp	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x400631f	          0x4889e5	                            mov rbp, rsp	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x4006322	        0x4883ec50	                           sub rsp, 0x50	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x4006326	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x400632a	    0x64488b042528	                mov rax, qword fs:[0x28]	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x4006333	        0x488945f8	                mov qword [rbp - 8], rax	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x4006337	            0x31c0	                            xor eax, eax	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x4006339	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3560	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_2
0x400633d	      0xbe00000000	                              mov esi, 0	      3560	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_2
0x4006342	          0x4889c7	                            mov rdi, rax	      3560	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_2
0x4006345	      0xe800000000	                          call 0x400634a	      3560	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_2
0x400634a	        0x488d55cc	                   lea rdx, [rbp - 0x34]	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x400634e	        0x488d75d0	                   lea rsi, [rbp - 0x30]	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x4006352	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x4006356	          0x4989d0	                             mov r8, rdx	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x4006359	      0xb901000000	                              mov ecx, 1	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x400635e	      0xba00000000	                              mov edx, 0	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x4006363	          0x4889c7	                            mov rdi, rax	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x4006366	      0xe8fa620000	                        call sym.decTrim	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x400636b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x400636f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4006378	            0x7405	                            je 0x400637f	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x400637a	      0xe800000000	                          call 0x400637f	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x400637f	              0xc9	                                   leave	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4006380	              0xc3	                                     ret	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
decNaNs	SWITCH,0:IF,6:FOR,1:CALL,4:DO,0:ELSE,5:WHILE,0:functions,0	164
0x400e212	              0x55	                                push rbp	      7686	decNumber.c	FUNCTION_23
0x400e213	          0x4889e5	                            mov rbp, rsp	      7686	decNumber.c	FUNCTION_23
0x400e216	        0x4883ec50	                           sub rsp, 0x50	      7686	decNumber.c	FUNCTION_23
0x400e21a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      7686	decNumber.c	FUNCTION_23
0x400e21e	        0x488975d0	             mov qword [rbp - 0x30], rsi	      7686	decNumber.c	FUNCTION_23
0x400e222	        0x488955c8	             mov qword [rbp - 0x38], rdx	      7686	decNumber.c	FUNCTION_23
0x400e226	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      7686	decNumber.c	FUNCTION_23
0x400e22a	        0x4c8945b8	              mov qword [rbp - 0x48], r8	      7686	decNumber.c	FUNCTION_23
0x400e22e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7689	decNumber.c	FUNCTION_23	IF_1
0x400e232	         0xfb64008	               movzx eax, byte [rax + 8]	      7689	decNumber.c	FUNCTION_23	IF_1
0x400e236	           0xfb6c0	                           movzx eax, al	      7689	decNumber.c	FUNCTION_23	IF_1
0x400e239	          0x83e010	                           and eax, 0x10	      7689	decNumber.c	FUNCTION_23	IF_1
0x400e23c	            0x85c0	                           test eax, eax	      7689	decNumber.c	FUNCTION_23	IF_1
0x400e23e	            0x7415	                            je 0x400e255	      7689	decNumber.c	FUNCTION_23	IF_1
0x400e240	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7690	decNumber.c	FUNCTION_23	IF_1
0x400e244	            0x8b00	                    mov eax, dword [rax]	      7690	decNumber.c	FUNCTION_23	IF_1
0x400e246	       0xd80000040	                      or eax, 0x40000080	      7690	decNumber.c	FUNCTION_23	IF_1
0x400e24b	            0x89c2	                            mov edx, eax	      7690	decNumber.c	FUNCTION_23	IF_1
0x400e24d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7690	decNumber.c	FUNCTION_23	IF_1
0x400e251	            0x8910	                    mov dword [rax], edx	      7690	decNumber.c	FUNCTION_23	IF_1
0x400e253	            0xeb50	                           jmp 0x400e2a5	      7690	decNumber.c	FUNCTION_23	IF_1
0x400e255	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      7691	decNumber.c	FUNCTION_23	IF_2
0x400e25a	            0x7449	                            je 0x400e2a5	      7691	decNumber.c	FUNCTION_23	IF_2
0x400e25c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7692	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400e260	         0xfb64008	               movzx eax, byte [rax + 8]	      7692	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400e264	           0xfb6c0	                           movzx eax, al	      7692	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400e267	          0x83e010	                           and eax, 0x10	      7692	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400e26a	            0x85c0	                           test eax, eax	      7692	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400e26c	            0x741d	                            je 0x400e28b	      7692	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400e26e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7693	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400e272	        0x488945d0	             mov qword [rbp - 0x30], rax	      7693	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400e276	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7694	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400e27a	            0x8b00	                    mov eax, dword [rax]	      7694	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400e27c	       0xd80000040	                      or eax, 0x40000080	      7694	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400e281	            0x89c2	                            mov edx, eax	      7694	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400e283	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7694	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400e287	            0x8910	                    mov dword [rax], edx	      7694	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400e289	            0xeb1a	                           jmp 0x400e2a5	      7694	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400e28b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7696	decNumber.c	FUNCTION_23	IF_4
0x400e28f	         0xfb64008	               movzx eax, byte [rax + 8]	      7696	decNumber.c	FUNCTION_23	IF_4
0x400e293	           0xfb6c0	                           movzx eax, al	      7696	decNumber.c	FUNCTION_23	IF_4
0x400e296	          0x83e020	                           and eax, 0x20	      7696	decNumber.c	FUNCTION_23	IF_4
0x400e299	            0x85c0	                           test eax, eax	      7696	decNumber.c	FUNCTION_23	IF_4
0x400e29b	            0x7508	                           jne 0x400e2a5	      7696	decNumber.c	FUNCTION_23	IF_4
0x400e29d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7697	decNumber.c	FUNCTION_23	ELSE_4
0x400e2a1	        0x488945d0	             mov qword [rbp - 0x30], rax	      7697	decNumber.c	FUNCTION_23	ELSE_4
0x400e2a5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400e2a9	            0x8b10	                    mov edx, dword [rax]	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400e2ab	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400e2af	            0x8b00	                    mov eax, dword [rax]	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400e2b1	            0x39c2	                            cmp edx, eax	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400e2b3	            0x7f18	                            jg 0x400e2cd	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400e2b5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400e2b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400e2bd	          0x4889d6	                            mov rsi, rdx	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400e2c0	          0x4889c7	                            mov rdi, rax	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400e2c3	      0xe800000000	                          call 0x400e2c8	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400e2c8	      0xe912010000	                           jmp 0x400e3df	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400e2cd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7705	decNumber.c	FUNCTION_23	ELSE_5
0x400e2d1	         0xfb65008	               movzx edx, byte [rax + 8]	      7705	decNumber.c	FUNCTION_23	ELSE_5
0x400e2d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7705	decNumber.c	FUNCTION_23	ELSE_5
0x400e2d9	          0x885008	                  mov byte [rax + 8], dl	      7705	decNumber.c	FUNCTION_23	ELSE_5
0x400e2dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e2e0	        0x488d700a	                    lea rsi, [rax + 0xa]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e2e4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e2e8	            0x8b00	                    mov eax, dword [rax]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e2ea	          0x83f831	                           cmp eax, 0x31	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e2ed	            0x7f17	                            jg 0x400e306	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e2ef	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e2f3	            0x8b00	                    mov eax, dword [rax]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e2f5	            0x4898	                                    cdqe	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e2f7	     0xfb680000000	                   movzx eax, byte [rax]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e2fe	           0xfb6c0	                           movzx eax, al	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e301	          0x4801c0	                            add rax, rax	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e304	            0xeb20	                           jmp 0x400e326	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e306	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e30a	            0x8b00	                    mov eax, dword [rax]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e30c	          0x8d4802	                      lea ecx, [rax + 2]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e30f	      0xba56555555	                     mov edx, 0x55555556	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e314	            0x89c8	                            mov eax, ecx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e316	            0xf7ea	                                imul edx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e318	            0x89c8	                            mov eax, ecx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e31a	          0xc1f81f	                           sar eax, 0x1f	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e31d	            0x29c2	                            sub edx, eax	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e31f	            0x89d0	                            mov eax, edx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e321	            0x4898	                                    cdqe	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e323	          0x4801c0	                            add rax, rax	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e326	          0x4801f0	                            add rax, rsi	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e329	        0x488945f8	                mov qword [rbp - 8], rax	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400e32d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400e331	        0x4883c00a	                            add rax, 0xa	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400e335	        0x488945f0	             mov qword [rbp - 0x10], rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400e339	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400e33d	        0x4883c00a	                            add rax, 0xa	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400e341	        0x488945e8	             mov qword [rbp - 0x18], rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400e345	            0xeb18	                           jmp 0x400e35f	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400e347	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400e34b	           0xfb710	                   movzx edx, word [rax]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400e34e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400e352	          0x668910	                      mov word [rax], dx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400e355	      0x488345f002	               add qword [rbp - 0x10], 2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400e35a	      0x488345e802	               add qword [rbp - 0x18], 2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400e35f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400e363	        0x483b45f8	                cmp rax, qword [rbp - 8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400e367	            0x72de	                            jb 0x400e347	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400e369	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e36d	            0x8b00	                    mov eax, dword [rax]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e36f	          0x83f831	                           cmp eax, 0x31	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e372	            0x7f1a	                            jg 0x400e38e	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e374	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e378	            0x8b00	                    mov eax, dword [rax]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e37a	            0x4898	                                    cdqe	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e37c	     0xfb680000000	                   movzx eax, byte [rax]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e383	           0xfb6d0	                           movzx edx, al	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e386	            0x89d0	                            mov eax, edx	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e388	             0x1c0	                            add eax, eax	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e38a	             0x1d0	                            add eax, edx	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e38c	            0xeb1f	                           jmp 0x400e3ad	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e38e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e392	            0x8b00	                    mov eax, dword [rax]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e394	          0x8d4802	                      lea ecx, [rax + 2]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e397	      0xba56555555	                     mov edx, 0x55555556	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e39c	            0x89c8	                            mov eax, ecx	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e39e	            0xf7ea	                                imul edx	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e3a0	            0x89c8	                            mov eax, ecx	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e3a2	          0xc1f81f	                           sar eax, 0x1f	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e3a5	            0x29c2	                            sub edx, eax	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e3a7	            0x89d0	                            mov eax, edx	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e3a9	             0x1c0	                            add eax, eax	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e3ab	             0x1d0	                            add eax, edx	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e3ad	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e3b1	            0x8902	                    mov dword [rdx], eax	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400e3b3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400e3b7	            0x8b10	                    mov edx, dword [rax]	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400e3b9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400e3bd	            0x8b00	                    mov eax, dword [rax]	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400e3bf	            0x39c2	                            cmp edx, eax	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400e3c1	            0x7e1c	                           jle 0x400e3df	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400e3c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400e3c7	            0x8b10	                    mov edx, dword [rax]	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400e3c9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400e3cd	            0x8b00	                    mov eax, dword [rax]	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400e3cf	            0x29c2	                            sub edx, eax	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400e3d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400e3d5	            0x89d6	                            mov esi, edx	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400e3d7	          0x4889c7	                            mov rdi, rax	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400e3da	      0xe86efcffff	                       call sym.decDecap	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400e3df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7713	decNumber.c	FUNCTION_23
0x400e3e3	         0xfb64008	               movzx eax, byte [rax + 8]	      7713	decNumber.c	FUNCTION_23
0x400e3e7	          0x83e0ef	                     and eax, 0xffffffef	      7713	decNumber.c	FUNCTION_23
0x400e3ea	            0x89c2	                            mov edx, eax	      7713	decNumber.c	FUNCTION_23
0x400e3ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7713	decNumber.c	FUNCTION_23
0x400e3f0	          0x885008	                  mov byte [rax + 8], dl	      7713	decNumber.c	FUNCTION_23
0x400e3f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7714	decNumber.c	FUNCTION_23
0x400e3f7	         0xfb64008	               movzx eax, byte [rax + 8]	      7714	decNumber.c	FUNCTION_23
0x400e3fb	          0x83c820	                            or eax, 0x20	      7714	decNumber.c	FUNCTION_23
0x400e3fe	            0x89c2	                            mov edx, eax	      7714	decNumber.c	FUNCTION_23
0x400e400	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7714	decNumber.c	FUNCTION_23
0x400e404	          0x885008	                  mov byte [rax + 8], dl	      7714	decNumber.c	FUNCTION_23
0x400e407	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7715	decNumber.c	FUNCTION_23
0x400e40b	    0xc74004000000	                  mov dword [rax + 4], 0	      7715	decNumber.c	FUNCTION_23
0x400e412	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7717	decNumber.c	FUNCTION_23
0x400e416	              0xc9	                                   leave	      7718	decNumber.c	FUNCTION_23
0x400e417	              0xc3	                                     ret	      7718	decNumber.c	FUNCTION_23
decNumberMax	SWITCH,0:IF,1:FOR,0:CALL,3:DO,0:ELSE,0:WHILE,0:functions,0	36
0x40023f9	              0x55	                                push rbp	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x40023fa	          0x4889e5	                            mov rbp, rsp	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x40023fd	        0x4883ec30	                           sub rsp, 0x30	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4002401	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4002405	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4002409	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x400240d	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4002411	    0x64488b042528	                mov rax, qword fs:[0x28]	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x400241a	        0x488945f8	                mov qword [rbp - 8], rax	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x400241e	            0x31c0	                            xor eax, eax	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4002420	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1539	decNumber.c	FUNCTION_68	FUNCTION_23
0x4002427	        0x488d7df4	                    lea rdi, [rbp - 0xc]	      1540	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_1
0x400242b	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1540	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_1
0x400242f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1540	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_1
0x4002433	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1540	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_1
0x4002437	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1540	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_1
0x400243b	          0x4989f9	                             mov r9, rdi	      1540	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_1
0x400243e	    0x41b802000000	                              mov r8d, 2	      1540	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_1
0x4002444	          0x4889c7	                            mov rdi, rax	      1540	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_1
0x4002447	      0xe80d930000	                   call sym.decCompareOp	      1540	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_1
0x400244c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x400244f	            0x85c0	                           test eax, eax	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x4002451	            0x7415	                            je 0x4002468	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x4002453	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x4002456	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x400245a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x400245e	            0x89ce	                            mov esi, ecx	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x4002460	          0x4889c7	                            mov rdi, rax	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x4002463	      0xe8b0bf0000	                      call sym.decStatus	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x4002468	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1545	decNumber.c	FUNCTION_68	FUNCTION_23
0x400246c	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4002470	    0x644833342528	                xor rsi, qword fs:[0x28]	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4002479	            0x7405	                            je 0x4002480	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x400247b	      0xe800000000	                          call 0x4002480	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4002480	              0xc9	                                   leave	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4002481	              0xc3	                                     ret	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
decCopyFit	SWITCH,0:IF,0:FOR,0:CALL,1:DO,0:ELSE,0:WHILE,0:functions,0	33
0x400cdc7	              0x55	                                push rbp	      6838	decNumber.c	FUNCTION_11
0x400cdc8	          0x4889e5	                            mov rbp, rsp	      6838	decNumber.c	FUNCTION_11
0x400cdcb	        0x4883ec30	                           sub rsp, 0x30	      6838	decNumber.c	FUNCTION_11
0x400cdcf	        0x48897df8	                mov qword [rbp - 8], rdi	      6838	decNumber.c	FUNCTION_11
0x400cdd3	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6838	decNumber.c	FUNCTION_11
0x400cdd7	        0x488955e8	             mov qword [rbp - 0x18], rdx	      6838	decNumber.c	FUNCTION_11
0x400cddb	        0x48894de0	             mov qword [rbp - 0x20], rcx	      6838	decNumber.c	FUNCTION_11
0x400cddf	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      6838	decNumber.c	FUNCTION_11
0x400cde3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6839	decNumber.c	FUNCTION_11
0x400cde7	         0xfb65008	               movzx edx, byte [rax + 8]	      6839	decNumber.c	FUNCTION_11
0x400cdeb	        0x488b45f8	                mov rax, qword [rbp - 8]	      6839	decNumber.c	FUNCTION_11
0x400cdef	          0x885008	                  mov byte [rax + 8], dl	      6839	decNumber.c	FUNCTION_11
0x400cdf2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6840	decNumber.c	FUNCTION_11
0x400cdf6	          0x8b5004	                mov edx, dword [rax + 4]	      6840	decNumber.c	FUNCTION_11
0x400cdf9	        0x488b45f8	                mov rax, qword [rbp - 8]	      6840	decNumber.c	FUNCTION_11
0x400cdfd	          0x895004	                mov dword [rax + 4], edx	      6840	decNumber.c	FUNCTION_11
0x400ce00	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400ce04	            0x8b10	                    mov edx, dword [rax]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400ce06	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400ce0a	        0x488d780a	                    lea rdi, [rax + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400ce0e	        0x4c8b45d8	              mov r8, qword [rbp - 0x28]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400ce12	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400ce16	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400ce1a	        0x488b45f8	                mov rax, qword [rbp - 8]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400ce1e	          0x4d89c1	                              mov r9, r8	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400ce21	          0x4989c8	                             mov r8, rcx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400ce24	            0x89d1	                            mov ecx, edx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400ce26	          0x4889fa	                            mov rdx, rdi	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400ce29	          0x4889c7	                            mov rdi, rax	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400ce2c	      0xe803000000	                    call sym.decSetCoeff	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400ce31	              0x90	                                     nop	      6842	decNumber.c	FUNCTION_11
0x400ce32	              0xc9	                                   leave	      6842	decNumber.c	FUNCTION_11
0x400ce33	              0xc3	                                     ret	      6842	decNumber.c	FUNCTION_11
decNumberClassToString	SWITCH,0:IF,10:FOR,0:CALL,0:DO,0:ELSE,0:WHILE,0:functions,0	46
0x4005dd3	              0x55	                                push rbp	      3321	decNumber.c	FUNCTION_68	FUNCTION_51
0x4005dd4	          0x4889e5	                            mov rbp, rsp	      3321	decNumber.c	FUNCTION_68	FUNCTION_51
0x4005dd7	          0x897dfc	                mov dword [rbp - 4], edi	      3321	decNumber.c	FUNCTION_68	FUNCTION_51
0x4005dda	        0x837dfc08	                  cmp dword [rbp - 4], 8	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x4005dde	            0x7507	                           jne 0x4005de7	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x4005de0	      0xb800000000	                              mov eax, 0	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x4005de5	            0xeb7a	                           jmp 0x4005e61	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x4005de7	        0x837dfc03	                  cmp dword [rbp - 4], 3	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x4005deb	            0x7507	                           jne 0x4005df4	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x4005ded	      0xb800000000	                              mov eax, 0	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x4005df2	            0xeb6d	                           jmp 0x4005e61	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x4005df4	        0x837dfc06	                  cmp dword [rbp - 4], 6	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x4005df8	            0x7507	                           jne 0x4005e01	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x4005dfa	      0xb800000000	                              mov eax, 0	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x4005dff	            0xeb60	                           jmp 0x4005e61	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x4005e01	        0x837dfc05	                  cmp dword [rbp - 4], 5	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x4005e05	            0x7507	                           jne 0x4005e0e	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x4005e07	      0xb800000000	                              mov eax, 0	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x4005e0c	            0xeb53	                           jmp 0x4005e61	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x4005e0e	        0x837dfc07	                  cmp dword [rbp - 4], 7	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4005e12	            0x7507	                           jne 0x4005e1b	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4005e14	      0xb800000000	                              mov eax, 0	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4005e19	            0xeb46	                           jmp 0x4005e61	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4005e1b	        0x837dfc04	                  cmp dword [rbp - 4], 4	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x4005e1f	            0x7507	                           jne 0x4005e28	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x4005e21	      0xb800000000	                              mov eax, 0	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x4005e26	            0xeb39	                           jmp 0x4005e61	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x4005e28	        0x837dfc09	                  cmp dword [rbp - 4], 9	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x4005e2c	            0x7507	                           jne 0x4005e35	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x4005e2e	      0xb800000000	                              mov eax, 0	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x4005e33	            0xeb2c	                           jmp 0x4005e61	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x4005e35	        0x837dfc02	                  cmp dword [rbp - 4], 2	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x4005e39	            0x7507	                           jne 0x4005e42	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x4005e3b	      0xb800000000	                              mov eax, 0	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x4005e40	            0xeb1f	                           jmp 0x4005e61	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x4005e42	        0x837dfc01	                  cmp dword [rbp - 4], 1	      3330	decNumber.c	FUNCTION_68	FUNCTION_51	IF_9
0x4005e46	            0x7507	                           jne 0x4005e4f	      3330	decNumber.c	FUNCTION_68	FUNCTION_51	IF_9
0x4005e48	      0xb800000000	                              mov eax, 0	      3330	decNumber.c	FUNCTION_68	FUNCTION_51	IF_9
0x4005e4d	            0xeb12	                           jmp 0x4005e61	      3330	decNumber.c	FUNCTION_68	FUNCTION_51	IF_9
0x4005e4f	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3331	decNumber.c	FUNCTION_68	FUNCTION_51	IF_10
0x4005e53	            0x7507	                           jne 0x4005e5c	      3331	decNumber.c	FUNCTION_68	FUNCTION_51	IF_10
0x4005e55	      0xb800000000	                              mov eax, 0	      3331	decNumber.c	FUNCTION_68	FUNCTION_51	IF_10
0x4005e5a	            0xeb05	                           jmp 0x4005e61	      3331	decNumber.c	FUNCTION_68	FUNCTION_51	IF_10
0x4005e5c	      0xb800000000	                              mov eax, 0	      3332	decNumber.c	FUNCTION_68	FUNCTION_51
0x4005e61	              0x5d	                                 pop rbp	      3333	decNumber.c	FUNCTION_68	FUNCTION_51
0x4005e62	              0xc3	                                     ret	      3333	decNumber.c	FUNCTION_68	FUNCTION_51
decNumberLog10	SWITCH,0:IF,15:FOR,0:CALL,22:DO,1:ELSE,0:WHILE,0:functions,0	281
0x4001eb2	              0x55	                                push rbp	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001eb3	          0x4889e5	                            mov rbp, rsp	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001eb6	    0x4881ec100100	                          sub rsp, 0x110	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001ebd	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001ec4	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001ecb	    0x488995f8feff	            mov qword [rbp - 0x108], rdx	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001ed2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001edb	        0x488945f8	                mov qword [rbp - 8], rax	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001edf	            0x31c0	                            xor eax, eax	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001ee1	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      1391	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001eeb	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	      1391	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001ef5	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      1399	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001f00	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1400	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001f04	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      1400	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001f0b	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      1402	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001f16	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1403	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001f1a	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      1403	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001f21	        0x488d4580	                   lea rax, [rbp - 0x80]	      1405	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001f25	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1405	decNumber.c	FUNCTION_68	FUNCTION_22
0x4001f2c	    0x488d951cffff	                   lea rdx, [rbp - 0xe4]	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4001f33	    0x488b8df8feff	            mov rcx, qword [rbp - 0x108]	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4001f3a	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4001f41	          0x4889ce	                            mov rsi, rcx	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4001f44	          0x4889c7	                            mov rdi, rax	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4001f47	      0xe8f2bd0000	                   call sym.decCheckMath	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4001f4c	            0x85c0	                           test eax, eax	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4001f4e	     0xf8542040000	                           jne 0x4002396	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4001f54	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      1434	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_8
0x4001f5b	      0xbe40000000	                           mov esi, 0x40	      1434	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_8
0x4001f60	          0x4889c7	                            mov rdi, rax	      1434	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_8
0x4001f63	      0xe800000000	                          call 0x4001f68	      1434	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_8
0x4001f68	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001f6f	         0xfb64008	               movzx eax, byte [rax + 8]	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001f73	           0xfb6c0	                           movzx eax, al	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001f76	      0x25f0000000	                           and eax, 0xf0	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001f7b	            0x85c0	                           test eax, eax	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001f7d	     0xf8521010000	                           jne 0x40020a4	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001f83	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001f8a	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001f8e	          0x6685c0	                             test ax, ax	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001f91	            0x7527	                           jne 0x4001fba	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001f93	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001f9a	            0x8b00	                    mov eax, dword [rax]	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001f9c	          0x83f801	                              cmp eax, 1	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001f9f	            0x7519	                           jne 0x4001fba	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001fa1	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001fa8	         0xfb64008	               movzx eax, byte [rax + 8]	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001fac	           0xfb6c0	                           movzx eax, al	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001faf	          0x83e070	                           and eax, 0x70	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001fb2	            0x85c0	                           test eax, eax	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001fb4	     0xf84ea000000	                            je 0x40020a4	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4001fba	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	      1438	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7
0x4001fc4	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      1439	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7
0x4001fce	    0xc78560ffffff	               mov dword [rbp - 0xa0], 1	      1442	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7
0x4001fd8	    0x488dbd28ffff	                   lea rdi, [rbp - 0xd8]	      1443	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_10
0x4001fdf	    0x488d8d24ffff	                   lea rcx, [rbp - 0xdc]	      1443	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_10
0x4001fe6	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      1443	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_10
0x4001fed	    0x488bb500ffff	            mov rsi, qword [rbp - 0x100]	      1443	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_10
0x4001ff4	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1443	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_10
0x4001ffb	          0x4989f8	                             mov r8, rdi	      1443	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_10
0x4001ffe	          0x4889c7	                            mov rdi, rax	      1443	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_10
0x4002001	      0xe8c1ad0000	                     call sym.decCopyFit	      1443	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_10
0x4002006	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x400200c	          0x83e020	                           and eax, 0x20	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x400200f	            0x85c0	                           test eax, eax	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4002011	     0xf858d000000	                           jne 0x40020a4	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4002017	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x400201e	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4002022	        0x6683f801	                               cmp ax, 1	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4002026	            0x757c	                           jne 0x40020a4	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4002028	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1450	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_11
0x400202f	          0x8b5004	                mov edx, dword [rax + 4]	      1450	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_11
0x4002032	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1450	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_11
0x4002039	            0x89d6	                            mov esi, edx	      1450	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_11
0x400203b	          0x4889c7	                            mov rdi, rax	      1450	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_11
0x400203e	      0xe800000000	                          call 0x4002043	      1450	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_11
0x4002043	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	      1451	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x400204d	    0x488dbd1cffff	                   lea rdi, [rbp - 0xe4]	      1452	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_12
0x4002054	    0x488d8d24ffff	                   lea rcx, [rbp - 0xdc]	      1452	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_12
0x400205b	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      1452	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_12
0x4002062	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      1452	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_12
0x4002069	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1452	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_12
0x4002070	          0x4989f8	                             mov r8, rdi	      1452	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_12
0x4002073	          0x4889c7	                            mov rdi, rax	      1452	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_12
0x4002076	      0xe84cad0000	                     call sym.decCopyFit	      1452	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_12
0x400207b	    0x488d8d1cffff	                   lea rcx, [rbp - 0xe4]	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4002082	    0x488d9524ffff	                   lea rdx, [rbp - 0xdc]	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4002089	    0x488bb5f8feff	            mov rsi, qword [rbp - 0x108]	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4002090	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4002097	          0x4889c7	                            mov rdi, rax	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x400209a	      0xe85eb60000	                    call sym.decFinalize	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x400209f	      0xe9f2020000	                           jmp 0x4002396	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x40020a4	    0xc7852cffffff	               mov dword [rbp - 0xd4], 6	      1462	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40020ae	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40020b5	            0x8b00	                    mov eax, dword [rax]	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40020b7	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40020be	            0x8b0a	                    mov ecx, dword [rdx]	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40020c0	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40020c6	             0x1ca	                            add edx, ecx	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40020c8	            0x39d0	                            cmp eax, edx	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40020ca	           0xf4cc2	                          cmovl eax, edx	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40020cd	          0x83c003	                              add eax, 3	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40020d0	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40020d6	    0x83bd30ffffff	           cmp dword [rbp - 0xd0], 0x31 	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x40020dd	            0x7f1f	                            jg 0x40020fe	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x40020df	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x40020e5	            0x4898	                                    cdqe	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x40020e7	     0xfb680000000	                   movzx eax, byte [rax]	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x40020ee	           0xfb6c0	                           movzx eax, al	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x40020f1	          0x83e801	                              sub eax, 1	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x40020f4	            0x4898	                                    cdqe	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x40020f6	        0x4883c006	                              add rax, 6	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x40020fa	             0x1c0	                            add eax, eax	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x40020fc	            0xeb26	                           jmp 0x4002124	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x40020fe	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4002104	          0x8d4802	                      lea ecx, [rax + 2]	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4002107	      0xba56555555	                     mov edx, 0x55555556	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x400210c	            0x89c8	                            mov eax, ecx	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x400210e	            0xf7ea	                                imul edx	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4002110	            0x89c8	                            mov eax, ecx	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4002112	          0xc1f81f	                           sar eax, 0x1f	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4002115	            0x29c2	                            sub edx, eax	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4002117	            0x89d0	                            mov eax, edx	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4002119	          0x83e801	                              sub eax, 1	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x400211c	            0x4898	                                    cdqe	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x400211e	        0x4883c006	                              add rax, 6	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4002122	             0x1c0	                            add eax, eax	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4002124	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x400212a	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x24 	      1467	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x4002131	            0x7641	                           jbe 0x4002174	      1467	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x4002133	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      1468	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x4002139	          0x4889c7	                            mov rdi, rax	      1468	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x400213c	      0xe800000000	                          call 0x4002141	      1468	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x4002141	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1468	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x4002148	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      1469	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x4002150	            0x7514	                           jne 0x4002166	      1469	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x4002152	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1470	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x4002158	          0x83c810	                            or eax, 0x10	      1470	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x400215b	    0x89851cffffff	             mov dword [rbp - 0xe4], eax	      1470	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x4002161	      0xe930020000	                           jmp 0x4002396	      1471	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x4002166	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1472	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x400216d	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      1472	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x4002174	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1474	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400217a	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      1474	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4002180	    0xc78564ffffff	         mov dword [rbp - 0x9c], 0xf423f	      1475	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400218a	    0xc78568ffffff	      mov dword [rbp - 0x98], 0xfff0bdc1	      1476	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4002194	    0xc68578ffffff	                mov byte [rbp - 0x88], 0	      1477	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400219b	    0x488d8d1cffff	                   lea rcx, [rbp - 0xe4]	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x40021a2	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x40021a9	    0x488bb500ffff	            mov rsi, qword [rbp - 0x100]	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x40021b0	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x40021b7	          0x4889c7	                            mov rdi, rax	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x40021ba	      0xe822870000	                        call sym.decLnOp	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x40021bf	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x40021c5	      0x25dd000000	                           and eax, 0xdd	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x40021ca	            0x85c0	                           test eax, eax	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x40021cc	            0x7413	                            je 0x40021e1	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x40021ce	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x40021d4	      0x2500000040	                     and eax, 0x40000000	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x40021d9	            0x85c0	                           test eax, eax	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x40021db	     0xf84b4010000	                            je 0x4002395	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x40021e1	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x40021e8	         0xfb64008	               movzx eax, byte [rax + 8]	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x40021ec	           0xfb6c0	                           movzx eax, al	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x40021ef	          0x83e070	                           and eax, 0x70	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x40021f2	            0x85c0	                           test eax, eax	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x40021f4	            0x7533	                           jne 0x4002229	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x40021f6	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x40021fd	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4002201	          0x6685c0	                             test ax, ax	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4002204	            0x7541	                           jne 0x4002247	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4002206	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x400220d	            0x8b00	                    mov eax, dword [rax]	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x400220f	          0x83f801	                              cmp eax, 1	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4002212	            0x7533	                           jne 0x4002247	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4002214	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x400221b	         0xfb64008	               movzx eax, byte [rax + 8]	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x400221f	           0xfb6c0	                           movzx eax, al	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4002222	          0x83e070	                           and eax, 0x70	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4002225	            0x85c0	                           test eax, eax	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4002227	            0x751e	                           jne 0x4002247	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4002229	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      1484	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_16
0x4002230	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1484	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_16
0x4002237	          0x4889d6	                            mov rsi, rdx	      1484	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_16
0x400223a	          0x4889c7	                            mov rdi, rax	      1484	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_16
0x400223d	      0xe800000000	                          call 0x4002242	      1484	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_16
0x4002242	      0xe94f010000	                           jmp 0x4002396	      1485	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12
0x4002247	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1488	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400224e	            0x8b00	                    mov eax, dword [rax]	      1488	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4002250	          0x83c003	                              add eax, 3	      1488	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4002253	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      1488	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4002259	    0x83bd30ffffff	           cmp dword [rbp - 0xd0], 0x31 	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4002260	            0x7f1f	                            jg 0x4002281	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4002262	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4002268	            0x4898	                                    cdqe	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x400226a	     0xfb680000000	                   movzx eax, byte [rax]	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4002271	           0xfb6c0	                           movzx eax, al	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4002274	          0x83e801	                              sub eax, 1	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4002277	            0x4898	                                    cdqe	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4002279	        0x4883c006	                              add rax, 6	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x400227d	             0x1c0	                            add eax, eax	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x400227f	            0xeb26	                           jmp 0x40022a7	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4002281	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4002287	          0x8d4802	                      lea ecx, [rax + 2]	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x400228a	      0xba56555555	                     mov edx, 0x55555556	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x400228f	            0x89c8	                            mov eax, ecx	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4002291	            0xf7ea	                                imul edx	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4002293	            0x89c8	                            mov eax, ecx	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4002295	          0xc1f81f	                           sar eax, 0x1f	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4002298	            0x29c2	                            sub edx, eax	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x400229a	            0x89d0	                            mov eax, edx	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x400229c	          0x83e801	                              sub eax, 1	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x400229f	            0x4898	                                    cdqe	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x40022a1	        0x4883c006	                              add rax, 6	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x40022a5	             0x1c0	                            add eax, eax	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x40022a7	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x40022ad	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x24 	      1490	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x40022b4	            0x7641	                           jbe 0x40022f7	      1490	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x40022b6	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      1491	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x40022bc	          0x4889c7	                            mov rdi, rax	      1491	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x40022bf	      0xe800000000	                          call 0x40022c4	      1491	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x40022c4	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1491	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x40022cb	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      1492	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x40022d3	            0x7514	                           jne 0x40022e9	      1492	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x40022d5	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1493	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x40022db	          0x83c810	                            or eax, 0x10	      1493	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x40022de	    0x89851cffffff	             mov dword [rbp - 0xe4], eax	      1493	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x40022e4	      0xe9ad000000	                           jmp 0x4002396	      1494	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x40022e9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1495	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x40022f0	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      1495	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x40022f7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1497	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_18
0x40022fe	          0x4889c7	                            mov rdi, rax	      1497	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_18
0x4002301	      0xe800000000	                          call 0x4002306	      1497	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_18
0x4002306	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1501	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400230d	    0x66c7400a0a00	               mov word [rax + 0xa], 0xa	      1501	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4002313	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1503	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400231a	    0xc70002000000	                      mov dword [rax], 2	      1503	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4002320	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1505	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4002326	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      1505	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400232c	    0x488d8d20ffff	                   lea rcx, [rbp - 0xe0]	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x4002333	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x400233a	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x4002341	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x4002348	          0x4889c7	                            mov rdi, rax	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x400234b	      0xe891850000	                        call sym.decLnOp	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x4002350	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1508	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4002357	            0x8b00	                    mov eax, dword [rax]	      1508	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4002359	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      1508	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400235f	    0x488dbd1cffff	                   lea rdi, [rbp - 0xe4]	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x4002366	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x400236d	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x4002374	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x400237b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x4002382	          0x4989f9	                             mov r9, rdi	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x4002385	    0x41b880000000	                           mov r8d, 0x80	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x400238b	          0x4889c7	                            mov rdi, rax	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x400238e	      0xe875560000	                    call sym.decDivideOp	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x4002393	            0xeb01	                           jmp 0x4002396	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x4002395	              0x90	                                     nop	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x4002396	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x400239d	          0x4889c7	                            mov rdi, rax	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x40023a0	      0xe800000000	                          call 0x40023a5	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x40023a5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1513	decNumber.c	FUNCTION_68	FUNCTION_22
0x40023ac	          0x4889c7	                            mov rdi, rax	      1513	decNumber.c	FUNCTION_68	FUNCTION_22
0x40023af	      0xe800000000	                          call 0x40023b4	      1513	decNumber.c	FUNCTION_68	FUNCTION_22
0x40023b4	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x40023ba	            0x85c0	                           test eax, eax	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x40023bc	            0x741e	                            je 0x40023dc	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x40023be	    0x8b8d1cffffff	             mov ecx, dword [rbp - 0xe4]	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x40023c4	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x40023cb	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x40023d2	            0x89ce	                            mov esi, ecx	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x40023d4	          0x4889c7	                            mov rdi, rax	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x40023d7	      0xe83cc00000	                      call sym.decStatus	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x40023dc	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1522	decNumber.c	FUNCTION_68	FUNCTION_22
0x40023e3	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x40023e7	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x40023f0	            0x7405	                            je 0x40023f7	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x40023f2	      0xe800000000	                          call 0x40023f7	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x40023f7	              0xc9	                                   leave	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x40023f8	              0xc3	                                     ret	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
decExpOp	SWITCH,0:IF,27:FOR,2:CALL,42:DO,1:ELSE,3:WHILE,0:functions,0	580
0x4009e15	              0x55	                                push rbp	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e16	          0x4889e5	                            mov rbp, rsp	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e19	    0x4881ec400200	                          sub rsp, 0x240	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e20	    0x4889bdd8fdff	            mov qword [rbp - 0x228], rdi	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e27	    0x4889b5d0fdff	            mov qword [rbp - 0x230], rsi	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e2e	    0x488995c8fdff	            mov qword [rbp - 0x238], rdx	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e35	    0x48898dc0fdff	            mov qword [rbp - 0x240], rcx	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e3c	    0x64488b042528	                mov rax, qword fs:[0x28]	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e45	        0x488945f8	                mov qword [rbp - 8], rax	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e49	            0x31c0	                            xor eax, eax	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e4b	    0xc785ecfdffff	              mov dword [rbp - 0x214], 0	      5223	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e55	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      5228	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e5c	    0x48898520feff	            mov qword [rbp - 0x1e0], rax	      5228	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e63	    0x48c78528feff	              mov qword [rbp - 0x1d8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e6e	    0x48c78530feff	              mov qword [rbp - 0x1d0], 0	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e79	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      5245	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e80	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	      5245	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e87	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e92	        0x488d4580	                   lea rax, [rbp - 0x80]	      5249	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e96	    0x48898548feff	            mov qword [rbp - 0x1b8], rax	      5249	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009e9d	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	      5253	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009ea4	    0x48898558feff	            mov qword [rbp - 0x1a8], rax	      5253	decNumber.c	FUNCTION_68	FUNCTION_67
0x4009eab	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      5262	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x4009eb2	         0xfb64008	               movzx eax, byte [rax + 8]	      5262	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x4009eb6	           0xfb6c0	                           movzx eax, al	      5262	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x4009eb9	          0x83e070	                           and eax, 0x70	      5262	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x4009ebc	            0x85c0	                           test eax, eax	      5262	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x4009ebe	     0xf848a000000	                            je 0x4009f4e	      5262	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x4009ec4	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      5263	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_6
0x4009ecb	         0xfb64008	               movzx eax, byte [rax + 8]	      5263	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_6
0x4009ecf	           0xfb6c0	                           movzx eax, al	      5263	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_6
0x4009ed2	          0x83e040	                           and eax, 0x40	      5263	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_6
0x4009ed5	            0x85c0	                           test eax, eax	      5263	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_6
0x4009ed7	            0x7441	                            je 0x4009f1a	      5263	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_6
0x4009ed9	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      5264	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	IF_4	CALL_7
0x4009ee0	         0xfb64008	               movzx eax, byte [rax + 8]	      5264	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	IF_4	CALL_7
0x4009ee4	            0x84c0	                             test al, al	      5264	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	IF_4	CALL_7
0x4009ee6	            0x7914	                           jns 0x4009efc	      5264	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	IF_4	CALL_7
0x4009ee8	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      5265	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_8
0x4009eef	          0x4889c7	                            mov rdi, rax	      5265	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_8
0x4009ef2	      0xe800000000	                          call 0x4009ef7	      5265	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_8
0x4009ef7	      0xe99b090000	                           jmp 0x400a897	      5269	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x4009efc	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      5266	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_9
0x4009f03	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      5266	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_9
0x4009f0a	          0x4889d6	                            mov rsi, rdx	      5266	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_9
0x4009f0d	          0x4889c7	                            mov rdi, rax	      5266	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_9
0x4009f10	      0xe800000000	                          call 0x4009f15	      5266	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_9
0x4009f15	      0xe97d090000	                           jmp 0x400a897	      5269	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x4009f1a	    0x488b8dc0fdff	            mov rcx, qword [rbp - 0x240]	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x4009f21	    0x488b95c8fdff	            mov rdx, qword [rbp - 0x238]	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x4009f28	    0x488bb5d0fdff	            mov rsi, qword [rbp - 0x230]	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x4009f2f	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x4009f36	          0x4989c8	                             mov r8, rcx	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x4009f39	          0x4889d1	                            mov rcx, rdx	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x4009f3c	      0xba00000000	                              mov edx, 0	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x4009f41	          0x4889c7	                            mov rdi, rax	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x4009f44	      0xe8c9420000	                        call sym.decNaNs	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x4009f49	      0xe949090000	                           jmp 0x400a897	      5269	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x4009f4e	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4009f55	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4009f59	          0x6685c0	                             test ax, ax	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4009f5c	            0x7544	                           jne 0x4009fa2	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4009f5e	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4009f65	            0x8b00	                    mov eax, dword [rax]	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4009f67	          0x83f801	                              cmp eax, 1	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4009f6a	            0x7536	                           jne 0x4009fa2	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4009f6c	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4009f73	         0xfb64008	               movzx eax, byte [rax + 8]	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4009f77	           0xfb6c0	                           movzx eax, al	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4009f7a	          0x83e070	                           and eax, 0x70	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4009f7d	            0x85c0	                           test eax, eax	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4009f7f	            0x7521	                           jne 0x4009fa2	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4009f81	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      5272	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_12
0x4009f88	          0x4889c7	                            mov rdi, rax	      5272	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_12
0x4009f8b	      0xe800000000	                          call 0x4009f90	      5272	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_12
0x4009f90	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      5273	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5
0x4009f97	    0x66c7400a0100	                 mov word [rax + 0xa], 1	      5273	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5
0x4009f9d	      0xe9f5080000	                           jmp 0x400a897	      5274	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5
0x4009fa2	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      5290	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_13
0x4009fa9	          0x4889c7	                            mov rdi, rax	      5290	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_13
0x4009fac	      0xe800000000	                          call 0x4009fb1	      5290	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_13
0x4009fb1	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      5291	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4009fb8	    0x66c7400a0400	                 mov word [rax + 0xa], 4	      5291	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4009fbe	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      5292	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4009fc5	            0x8b00	                    mov eax, dword [rax]	      5292	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4009fc7	            0xf7d8	                                 neg eax	      5292	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4009fc9	            0x89c2	                            mov edx, eax	      5292	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4009fcb	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      5292	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4009fd2	          0x895004	                mov dword [rax + 4], edx	      5292	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4009fd5	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x4009fdc	         0xfb64008	               movzx eax, byte [rax + 8]	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x4009fe0	            0x84c0	                             test al, al	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x4009fe2	            0x7917	                           jns 0x4009ffb	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x4009fe4	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x4009feb	          0x8b4004	                mov eax, dword [rax + 4]	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x4009fee	          0x8d50ff	                      lea edx, [rax - 1]	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x4009ff1	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x4009ff8	          0x895004	                mov dword [rax + 4], edx	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x4009ffb	    0x488b8dd0fdff	            mov rcx, qword [rbp - 0x230]	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x400a002	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x400a009	      0xba01000000	                              mov edx, 1	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x400a00e	          0x4889ce	                            mov rsi, rcx	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x400a011	          0x4889c7	                            mov rdi, rax	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x400a014	      0xe8141c0000	                     call sym.decCompare	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x400a019	    0x89850cfeffff	            mov dword [rbp - 0x1f4], eax	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x400a01f	    0x81bd0cfeffff	    cmp dword [rbp - 0x1f4], 0x80000000 	      5295	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x400a029	            0x751c	                           jne 0x400a047	      5295	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x400a02b	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      5296	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x400a032	            0x8b00	                    mov eax, dword [rax]	      5296	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x400a034	          0x83c810	                            or eax, 0x10	      5296	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x400a037	            0x89c2	                            mov edx, eax	      5296	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x400a039	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      5296	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x400a040	            0x8910	                    mov dword [rax], edx	      5296	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x400a042	      0xe950080000	                           jmp 0x400a897	      5297	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x400a047	    0x83bd0cfeffff	              cmp dword [rbp - 0x1f4], 0	      5298	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a04e	     0xf888b000000	                            js 0x400a0df	      5298	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a054	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      5299	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a05b	            0x8b00	                    mov eax, dword [rax]	      5299	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a05d	          0x83e801	                              sub eax, 1	      5299	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a060	    0x898510feffff	            mov dword [rbp - 0x1f0], eax	      5299	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a066	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      5300	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_16
0x400a06d	          0x4889c7	                            mov rdi, rax	      5300	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_16
0x400a070	      0xe800000000	                          call 0x400a075	      5300	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_16
0x400a075	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      5301	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a07c	    0x66c7400a0100	                 mov word [rax + 0xa], 1	      5301	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a082	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x400a089	        0x488d480a	                    lea rcx, [rax + 0xa]	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x400a08d	    0x8b8510feffff	            mov eax, dword [rbp - 0x1f0]	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x400a093	            0x89c2	                            mov edx, eax	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x400a095	      0xbe01000000	                              mov esi, 1	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x400a09a	          0x4889cf	                            mov rdi, rcx	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x400a09d	      0xe829280000	                 call sym.decShiftToMost	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x400a0a2	            0x89c2	                            mov edx, eax	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x400a0a4	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x400a0ab	            0x8910	                    mov dword [rax], edx	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x400a0ad	    0x8b8510feffff	            mov eax, dword [rbp - 0x1f0]	      5303	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a0b3	            0xf7d8	                                 neg eax	      5303	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a0b5	            0x89c2	                            mov edx, eax	      5303	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a0b7	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      5303	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a0be	          0x895004	                mov dword [rax + 4], edx	      5303	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a0c1	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      5304	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a0c8	            0x8b00	                    mov eax, dword [rax]	      5304	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a0ca	       0xd20080000	                           or eax, 0x820	      5304	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a0cf	            0x89c2	                            mov edx, eax	      5304	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a0d1	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      5304	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a0d8	            0x8910	                    mov dword [rax], edx	      5304	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a0da	      0xe9b8070000	                           jmp 0x400a897	      5305	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400a0df	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	      5309	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_18
0x400a0e6	      0xbe40000000	                           mov esi, 0x40	      5309	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_18
0x400a0eb	          0x4889c7	                            mov rdi, rax	      5309	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_18
0x400a0ee	      0xe800000000	                          call 0x400a0f3	      5309	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_18
0x400a0f3	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      5311	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a0fa	          0x8b4004	                mov eax, dword [rax + 4]	      5311	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a0fd	    0x898564feffff	            mov dword [rbp - 0x19c], eax	      5311	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a103	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      5312	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a10a	          0x8b4008	                mov eax, dword [rax + 8]	      5312	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a10d	    0x898568feffff	            mov dword [rbp - 0x198], eax	      5312	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a113	    0xc68578feffff	               mov byte [rbp - 0x188], 0	      5313	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a11a	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      5317	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a121	          0x8b5004	                mov edx, dword [rax + 4]	      5317	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a124	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      5317	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a12b	            0x8b00	                    mov eax, dword [rax]	      5317	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a12d	             0x1d0	                            add eax, edx	      5317	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a12f	    0x8985f4fdffff	            mov dword [rbp - 0x20c], eax	      5317	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a135	    0x83bdf4fdffff	              cmp dword [rbp - 0x20c], 8	      5323	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x400a13c	            0x7e52	                           jle 0x400a190	      5323	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x400a13e	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      5327	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_19
0x400a145	          0x4889c7	                            mov rdi, rax	      5327	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_19
0x400a148	      0xe800000000	                          call 0x400a14d	      5327	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_19
0x400a14d	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      5328	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x400a154	    0x66c7400a0200	                 mov word [rax + 0xa], 2	      5328	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x400a15a	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x400a161	         0xfb64008	               movzx eax, byte [rax + 8]	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x400a165	            0x84c0	                             test al, al	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x400a167	            0x790e	                           jns 0x400a177	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x400a169	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x400a170	    0xc74004feffff	        mov dword [rax + 4], 0xfffffffe 	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x400a177	    0xc785f4fdffff	              mov dword [rbp - 0x20c], 8	      5330	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x400a181	    0xc785f8fdffff	              mov dword [rbp - 0x208], 9	      5331	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x400a18b	      0xe9fa040000	                           jmp 0x400a68a	      5331	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x400a190	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      5334	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a197	            0x8b00	                    mov eax, dword [rax]	      5334	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a199	          0x83f808	                              cmp eax, 8	      5334	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a19c	           0xf9fc0	                                 setg al	      5334	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a19f	           0xfb6c0	                           movzx eax, al	      5334	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a1a2	    0x898514feffff	            mov dword [rbp - 0x1ec], eax	      5334	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a1a8	      0xb808000000	                              mov eax, 8	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x400a1ad	    0x2b85f4fdffff	            sub eax, dword [rbp - 0x20c]	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x400a1b3	            0x89c2	                            mov edx, eax	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x400a1b5	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x400a1bb	            0x39c2	                            cmp edx, eax	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x400a1bd	           0xf4ec2	                         cmovle eax, edx	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x400a1c0	    0x898518feffff	            mov dword [rbp - 0x1e8], eax	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x400a1c6	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      5346	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a1cd	            0x8b00	                    mov eax, dword [rax]	      5346	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a1cf	            0xf7d8	                                 neg eax	      5346	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a1d1	    0x2b8518feffff	            sub eax, dword [rbp - 0x1e8]	      5346	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a1d7	    0x8985fcfdffff	            mov dword [rbp - 0x204], eax	      5346	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a1dd	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	      5347	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a1e3	     0x185f4fdffff	            add dword [rbp - 0x20c], eax	      5347	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a1e9	    0x83bdf4fdffff	              cmp dword [rbp - 0x20c], 0	      5348	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x400a1f0	            0x7916	                           jns 0x400a208	      5348	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x400a1f2	    0x8b85f4fdffff	            mov eax, dword [rbp - 0x20c]	      5349	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x400a1f8	     0x185fcfdffff	            add dword [rbp - 0x204], eax	      5349	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x400a1fe	    0xc785f4fdffff	              mov dword [rbp - 0x20c], 0	      5350	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x400a208	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      5353	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x400a20f	          0x8b4004	                mov eax, dword [rax + 4]	      5353	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x400a212	    0x3b85fcfdffff	            cmp eax, dword [rbp - 0x204]	      5353	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x400a218	     0xf84f6000000	                            je 0x400a314	      5353	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x400a21e	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      5354	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x400a225	    0x48898550feff	            mov qword [rbp - 0x1b0], rax	      5354	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x400a22c	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a233	            0x8b00	                    mov eax, dword [rax]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a235	          0x83f831	                           cmp eax, 0x31	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a238	            0x7f22	                            jg 0x400a25c	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a23a	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a241	            0x8b00	                    mov eax, dword [rax]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a243	            0x4898	                                    cdqe	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a245	     0xfb680000000	                   movzx eax, byte [rax]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a24c	           0xfb6c0	                           movzx eax, al	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a24f	          0x83e801	                              sub eax, 1	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a252	            0x4898	                                    cdqe	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a254	        0x4883c006	                              add rax, 6	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a258	             0x1c0	                            add eax, eax	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a25a	            0xeb29	                           jmp 0x400a285	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a25c	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a263	            0x8b00	                    mov eax, dword [rax]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a265	          0x8d4802	                      lea ecx, [rax + 2]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a268	      0xba56555555	                     mov edx, 0x55555556	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a26d	            0x89c8	                            mov eax, ecx	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a26f	            0xf7ea	                                imul edx	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a271	            0x89c8	                            mov eax, ecx	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a273	          0xc1f81f	                           sar eax, 0x1f	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a276	            0x29c2	                            sub edx, eax	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a278	            0x89d0	                            mov eax, edx	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a27a	          0x83e801	                              sub eax, 1	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a27d	            0x4898	                                    cdqe	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a27f	        0x4883c006	                              add rax, 6	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a283	             0x1c0	                            add eax, eax	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a285	    0x89851cfeffff	            mov dword [rbp - 0x1e4], eax	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400a28b	    0x83bd1cfeffff	          cmp dword [rbp - 0x1e4], 0x3c 	      5356	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x400a292	            0x7649	                           jbe 0x400a2dd	      5356	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x400a294	    0x8b851cfeffff	            mov eax, dword [rbp - 0x1e4]	      5357	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x400a29a	          0x4889c7	                            mov rdi, rax	      5357	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x400a29d	      0xe800000000	                          call 0x400a2a2	      5357	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x400a2a2	    0x48898528feff	            mov qword [rbp - 0x1d8], rax	      5357	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x400a2a9	    0x4883bd28feff	              cmp qword [rbp - 0x1d8], 0	      5358	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x400a2b1	            0x751c	                           jne 0x400a2cf	      5358	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x400a2b3	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      5359	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x400a2ba	            0x8b00	                    mov eax, dword [rax]	      5359	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x400a2bc	          0x83c810	                            or eax, 0x10	      5359	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x400a2bf	            0x89c2	                            mov edx, eax	      5359	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x400a2c1	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      5359	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x400a2c8	            0x8910	                    mov dword [rax], edx	      5359	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x400a2ca	      0xe9c8050000	                           jmp 0x400a897	      5360	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x400a2cf	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      5361	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x400a2d6	    0x48898550feff	            mov qword [rbp - 0x1b0], rax	      5361	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x400a2dd	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x400a2e4	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x400a2eb	          0x4889d6	                            mov rsi, rdx	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x400a2ee	          0x4889c7	                            mov rdi, rax	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x400a2f1	      0xe800000000	                          call 0x400a2f6	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x400a2f6	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5364	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x400a2fd	    0x8b95fcfdffff	            mov edx, dword [rbp - 0x204]	      5364	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x400a303	          0x895004	                mov dword [rax + 4], edx	      5364	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x400a306	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5365	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x400a30d	    0x48898520feff	            mov qword [rbp - 0x1e0], rax	      5365	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x400a314	    0x488b8520feff	            mov rax, qword [rbp - 0x1e0]	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400a31b	            0x8b10	                    mov edx, dword [rax]	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400a31d	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400a324	            0x8b00	                    mov eax, dword [rax]	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400a326	            0x39c2	                            cmp edx, eax	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400a328	           0xf4cd0	                          cmovl edx, eax	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400a32b	    0x8b85f4fdffff	            mov eax, dword [rbp - 0x20c]	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400a331	             0x1d0	                            add eax, edx	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400a333	          0x83c002	                              add eax, 2	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400a336	    0x8985f8fdffff	            mov dword [rbp - 0x208], eax	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400a33c	    0x8b85f8fdffff	            mov eax, dword [rbp - 0x208]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a342	             0x1c0	                            add eax, eax	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a344	          0x83f831	                           cmp eax, 0x31	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a347	            0x7f21	                            jg 0x400a36a	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a349	    0x8b85f8fdffff	            mov eax, dword [rbp - 0x208]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a34f	             0x1c0	                            add eax, eax	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a351	            0x4898	                                    cdqe	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a353	     0xfb680000000	                   movzx eax, byte [rax]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a35a	           0xfb6c0	                           movzx eax, al	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a35d	          0x83e801	                              sub eax, 1	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a360	            0x4898	                                    cdqe	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a362	        0x4883c006	                              add rax, 6	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a366	             0x1c0	                            add eax, eax	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a368	            0xeb29	                           jmp 0x400a393	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a36a	    0x8b85f8fdffff	            mov eax, dword [rbp - 0x208]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a370	          0x83c001	                              add eax, 1	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a373	          0x8d0c00	                    lea ecx, [rax + rax]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a376	      0xba56555555	                     mov edx, 0x55555556	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a37b	            0x89c8	                            mov eax, ecx	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a37d	            0xf7ea	                                imul edx	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a37f	            0x89c8	                            mov eax, ecx	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a381	          0xc1f81f	                           sar eax, 0x1f	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a384	            0x29c2	                            sub edx, eax	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a386	            0x89d0	                            mov eax, edx	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a388	          0x83e801	                              sub eax, 1	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a38b	            0x4898	                                    cdqe	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a38d	        0x4883c006	                              add rax, 6	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a391	             0x1c0	                            add eax, eax	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a393	    0x89851cfeffff	            mov dword [rbp - 0x1e4], eax	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400a399	    0x83bd1cfeffff	          cmp dword [rbp - 0x1e4], 0x78 	      5388	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400a3a0	            0x7649	                           jbe 0x400a3eb	      5388	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400a3a2	    0x8b851cfeffff	            mov eax, dword [rbp - 0x1e4]	      5389	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400a3a8	          0x4889c7	                            mov rdi, rax	      5389	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400a3ab	      0xe800000000	                          call 0x400a3b0	      5389	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400a3b0	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	      5389	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400a3b7	    0x4883bd40feff	              cmp qword [rbp - 0x1c0], 0	      5390	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x400a3bf	            0x751c	                           jne 0x400a3dd	      5390	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x400a3c1	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      5391	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x400a3c8	            0x8b00	                    mov eax, dword [rax]	      5391	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x400a3ca	          0x83c810	                            or eax, 0x10	      5391	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x400a3cd	            0x89c2	                            mov edx, eax	      5391	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x400a3cf	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      5391	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x400a3d6	            0x8910	                    mov dword [rax], edx	      5391	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x400a3d8	      0xe9ba040000	                           jmp 0x400a897	      5392	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x400a3dd	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      5393	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400a3e4	    0x48898548feff	            mov qword [rbp - 0x1b8], rax	      5393	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400a3eb	    0x8b85f8fdffff	            mov eax, dword [rbp - 0x208]	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a3f1	          0x83c002	                              add eax, 2	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a3f4	          0x83f831	                           cmp eax, 0x31	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a3f7	            0x7f22	                            jg 0x400a41b	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a3f9	    0x8b85f8fdffff	            mov eax, dword [rbp - 0x208]	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a3ff	          0x83c002	                              add eax, 2	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a402	            0x4898	                                    cdqe	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a404	     0xfb680000000	                   movzx eax, byte [rax]	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a40b	           0xfb6c0	                           movzx eax, al	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a40e	          0x83e801	                              sub eax, 1	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a411	            0x4898	                                    cdqe	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a413	        0x4883c006	                              add rax, 6	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a417	             0x1c0	                            add eax, eax	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a419	            0xeb26	                           jmp 0x400a441	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a41b	    0x8b85f8fdffff	            mov eax, dword [rbp - 0x208]	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a421	          0x8d4804	                      lea ecx, [rax + 4]	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a424	      0xba56555555	                     mov edx, 0x55555556	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a429	            0x89c8	                            mov eax, ecx	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a42b	            0xf7ea	                                imul edx	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a42d	            0x89c8	                            mov eax, ecx	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a42f	          0xc1f81f	                           sar eax, 0x1f	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a432	            0x29c2	                            sub edx, eax	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a434	            0x89d0	                            mov eax, edx	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a436	          0x83e801	                              sub eax, 1	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a439	            0x4898	                                    cdqe	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a43b	        0x4883c006	                              add rax, 6	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a43f	             0x1c0	                            add eax, eax	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a441	    0x89851cfeffff	            mov dword [rbp - 0x1e4], eax	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400a447	    0x83bd1cfeffff	          cmp dword [rbp - 0x1e4], 0x48 	      5400	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400a44e	            0x7649	                           jbe 0x400a499	      5400	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400a450	    0x8b851cfeffff	            mov eax, dword [rbp - 0x1e4]	      5401	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400a456	          0x4889c7	                            mov rdi, rax	      5401	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400a459	      0xe800000000	                          call 0x400a45e	      5401	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400a45e	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	      5401	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400a465	    0x4883bd30feff	              cmp qword [rbp - 0x1d0], 0	      5402	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x400a46d	            0x751c	                           jne 0x400a48b	      5402	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x400a46f	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      5403	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x400a476	            0x8b00	                    mov eax, dword [rax]	      5403	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x400a478	          0x83c810	                            or eax, 0x10	      5403	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x400a47b	            0x89c2	                            mov edx, eax	      5403	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x400a47d	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      5403	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x400a484	            0x8910	                    mov dword [rax], edx	      5403	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x400a486	      0xe90c040000	                           jmp 0x400a897	      5404	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x400a48b	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      5405	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400a492	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	      5405	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400a499	    0x488b9520feff	            mov rdx, qword [rbp - 0x1e0]	      5408	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_27
0x400a4a0	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5408	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_27
0x400a4a7	          0x4889d6	                            mov rsi, rdx	      5408	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_27
0x400a4aa	          0x4889c7	                            mov rdi, rax	      5408	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_27
0x400a4ad	      0xe800000000	                          call 0x400a4b2	      5408	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_27
0x400a4b2	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      5409	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_28
0x400a4b9	          0x4889c7	                            mov rdi, rax	      5409	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_28
0x400a4bc	      0xe800000000	                          call 0x400a4c1	      5409	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_28
0x400a4c1	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      5409	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_28
0x400a4c8	    0x66c7400a0100	                 mov word [rax + 0xa], 1	      5409	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_28
0x400a4ce	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      5410	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_29
0x400a4d5	          0x4889c7	                            mov rdi, rax	      5410	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_29
0x400a4d8	      0xe800000000	                          call 0x400a4dd	      5410	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_29
0x400a4dd	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      5410	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_29
0x400a4e4	    0x66c7400a0200	                 mov word [rax + 0xa], 2	      5410	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_29
0x400a4ea	    0x488d85c0feff	                  lea rax, [rbp - 0x140]	      5411	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_30
0x400a4f1	          0x4889c7	                            mov rdi, rax	      5411	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_30
0x400a4f4	      0xe800000000	                          call 0x400a4f9	      5411	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_30
0x400a4f9	    0x66c785cafeff	               mov word [rbp - 0x136], 1	      5411	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_30
0x400a502	    0x488d8580feff	                  lea rax, [rbp - 0x180]	      5414	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_31
0x400a509	      0xbe40000000	                           mov esi, 0x40	      5414	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_31
0x400a50e	          0x4889c7	                            mov rdi, rax	      5414	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_31
0x400a511	      0xe800000000	                          call 0x400a516	      5414	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_31
0x400a516	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a51d	    0x488985a0feff	            mov qword [rbp - 0x160], rax	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a524	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a52b	    0x488985a8feff	            mov qword [rbp - 0x158], rax	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a532	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a539	    0x488985b0feff	            mov qword [rbp - 0x150], rax	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a540	    0x8b8598feffff	            mov eax, dword [rbp - 0x168]	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a546	    0x8985b8feffff	            mov dword [rbp - 0x148], eax	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a54c	    0x8b85f8fdffff	            mov eax, dword [rbp - 0x208]	      5417	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a552	             0x1c0	                            add eax, eax	      5417	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a554	    0x898560feffff	            mov dword [rbp - 0x1a0], eax	      5417	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a55a	    0x8b85f8fdffff	            mov eax, dword [rbp - 0x208]	      5419	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a560	    0x898580feffff	            mov dword [rbp - 0x180], eax	      5419	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a566	    0xc78588feffff	     mov dword [rbp - 0x178], 0xc4653601	      5420	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400a570	    0x488bbdc0fdff	            mov rdi, qword [rbp - 0x240]	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x400a577	    0x488d8d60feff	                  lea rcx, [rbp - 0x1a0]	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x400a57e	    0x488b9538feff	            mov rdx, qword [rbp - 0x1c8]	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x400a585	    0x488bb548feff	            mov rsi, qword [rbp - 0x1b8]	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x400a58c	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x400a593	          0x4989f9	                             mov r9, rdi	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x400a596	    0x41b800000000	                              mov r8d, 0	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x400a59c	          0x4889c7	                            mov rdi, rax	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x400a59f	      0xe895c6ffff	                       call sym.decAddOp	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x400a5a4	    0x488dbdecfdff	                  lea rdi, [rbp - 0x214]	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x400a5ab	    0x488d8d80feff	                  lea rcx, [rbp - 0x180]	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x400a5b2	    0x488b9520feff	            mov rdx, qword [rbp - 0x1e0]	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x400a5b9	    0x488bb538feff	            mov rsi, qword [rbp - 0x1c8]	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x400a5c0	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x400a5c7	          0x4989f8	                             mov r8, rdi	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x400a5ca	          0x4889c7	                            mov rdi, rax	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x400a5cd	      0xe82febffff	                  call sym.decMultiplyOp	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x400a5d2	    0x488dbdecfdff	                  lea rdi, [rbp - 0x214]	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400a5d9	    0x488d8d80feff	                  lea rcx, [rbp - 0x180]	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400a5e0	    0x488b9558feff	            mov rdx, qword [rbp - 0x1a8]	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400a5e7	    0x488bb538feff	            mov rsi, qword [rbp - 0x1c8]	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400a5ee	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400a5f5	          0x4989f9	                             mov r9, rdi	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400a5f8	    0x41b880000000	                           mov r8d, 0x80	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400a5fe	          0x4889c7	                            mov rdi, rax	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400a601	      0xe802d4ffff	                    call sym.decDivideOp	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400a606	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a60d	            0x8b10	                    mov edx, dword [rax]	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a60f	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a616	          0x8b4004	                mov eax, dword [rax + 4]	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a619	          0x8d0c02	                    lea ecx, [rdx + rax]	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a61c	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a623	            0x8b10	                    mov edx, dword [rax]	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a625	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a62c	          0x8b4004	                mov eax, dword [rax + 4]	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a62f	             0x1c2	                            add edx, eax	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a631	    0x8b85f8fdffff	            mov eax, dword [rbp - 0x208]	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a637	             0x1d0	                            add eax, edx	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a639	          0x83c001	                              add eax, 1	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a63c	            0x39c1	                            cmp ecx, eax	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a63e	            0x7c11	                            jl 0x400a651	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a640	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a647	            0x8b00	                    mov eax, dword [rax]	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a649	    0x3b85f8fdffff	            cmp eax, dword [rbp - 0x208]	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a64f	            0x7d39	                           jge 0x400a68a	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400a651	    0x488dbdecfdff	                  lea rdi, [rbp - 0x214]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400a658	    0x488d8da0feff	                  lea rcx, [rbp - 0x160]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400a65f	    0x488d95c0feff	                  lea rdx, [rbp - 0x140]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400a666	    0x488bb558feff	            mov rsi, qword [rbp - 0x1a8]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400a66d	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400a674	          0x4989f9	                             mov r9, rdi	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400a677	    0x41b800000000	                              mov r8d, 0	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400a67d	          0x4889c7	                            mov rdi, rax	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400a680	      0xe8b4c5ffff	                       call sym.decAddOp	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400a685	      0xe9e6feffff	                           jmp 0x400a570	      5440	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1
0x400a68a	    0x83bdf4fdffff	              cmp dword [rbp - 0x20c], 0	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400a691	     0xf8e58010000	                           jle 0x400a7ef	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400a697	    0xc78500feffff	              mov dword [rbp - 0x200], 0	      5453	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400a6a1	    0x8b85f4fdffff	            mov eax, dword [rbp - 0x20c]	      5455	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400a6a7	            0x4898	                                    cdqe	      5455	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400a6a9	    0x8b0485000000	                  mov eax, dword [rax*4]	      5455	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400a6b0	    0x898508feffff	            mov dword [rbp - 0x1f8], eax	      5455	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400a6b6	    0x8b85f8fdffff	            mov eax, dword [rbp - 0x208]	      5456	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400a6bc	          0x83c002	                              add eax, 2	      5456	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400a6bf	    0x898560feffff	            mov dword [rbp - 0x1a0], eax	      5456	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400a6c5	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5460	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	CALL_37
0x400a6cc	          0x4889c7	                            mov rdi, rax	      5460	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	CALL_37
0x400a6cf	      0xe800000000	                          call 0x400a6d4	      5460	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	CALL_37
0x400a6d4	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5460	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	CALL_37
0x400a6db	    0x66c7400a0100	                 mov word [rax + 0xa], 1	      5460	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	CALL_37
0x400a6e1	    0xc78504feffff	              mov dword [rbp - 0x1fc], 1	      5461	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x400a6eb	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      5463	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_22
0x400a6f2	            0x8b00	                    mov eax, dword [rax]	      5463	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_22
0x400a6f4	      0x2500220000	                         and eax, 0x2200	      5463	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_22
0x400a6f9	            0x85c0	                           test eax, eax	      5463	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_22
0x400a6fb	            0x744d	                            je 0x400a74a	      5463	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_22
0x400a6fd	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a704	            0x8b00	                    mov eax, dword [rax]	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a706	      0x2500020000	                          and eax, 0x200	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a70b	            0x85c0	                           test eax, eax	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a70d	     0xf85ce000000	                           jne 0x400a7e1	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a713	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a71a	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a71e	          0x6685c0	                             test ax, ax	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a721	            0x7527	                           jne 0x400a74a	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a723	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a72a	            0x8b00	                    mov eax, dword [rax]	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a72c	          0x83f801	                              cmp eax, 1	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a72f	            0x7519	                           jne 0x400a74a	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a731	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a738	         0xfb64008	               movzx eax, byte [rax + 8]	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a73c	           0xfb6c0	                           movzx eax, al	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a73f	          0x83e070	                           and eax, 0x70	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a742	            0x85c0	                           test eax, eax	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a744	     0xf8497000000	                            je 0x400a7e1	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400a74a	    0xd1a508feffff	              shl dword [rbp - 0x1f8], 1	      5465	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x400a750	    0x83bd08feffff	              cmp dword [rbp - 0x1f8], 0	      5466	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24
0x400a757	            0x7938	                           jns 0x400a791	      5466	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24
0x400a759	    0xc78500feffff	              mov dword [rbp - 0x200], 1	      5467	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24
0x400a763	    0x488bbdc0fdff	            mov rdi, qword [rbp - 0x240]	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x400a76a	    0x488d8d60feff	                  lea rcx, [rbp - 0x1a0]	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x400a771	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x400a778	    0x488bb538feff	            mov rsi, qword [rbp - 0x1c8]	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x400a77f	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x400a786	          0x4989f8	                             mov r8, rdi	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x400a789	          0x4889c7	                            mov rdi, rax	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x400a78c	      0xe870e9ffff	                  call sym.decMultiplyOp	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x400a791	    0x83bd04feffff	          cmp dword [rbp - 0x1fc], 0x1f 	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x400a798	            0x7446	                            je 0x400a7e0	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x400a79a	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      5471	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_26
0x400a7a1	            0x7430	                            je 0x400a7d3	      5471	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_26
0x400a7a3	    0x488bbdc0fdff	            mov rdi, qword [rbp - 0x240]	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400a7aa	    0x488d8d60feff	                  lea rcx, [rbp - 0x1a0]	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400a7b1	    0x488b9538feff	            mov rdx, qword [rbp - 0x1c8]	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400a7b8	    0x488bb538feff	            mov rsi, qword [rbp - 0x1c8]	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400a7bf	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400a7c6	          0x4989f8	                             mov r8, rdi	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400a7c9	          0x4889c7	                            mov rdi, rax	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400a7cc	      0xe830e9ffff	                  call sym.decMultiplyOp	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400a7d1	            0xeb01	                           jmp 0x400a7d4	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400a7d3	              0x90	                                     nop	      5471	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_26
0x400a7d4	    0x838504feffff	              add dword [rbp - 0x1fc], 1	      5461	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x400a7db	      0xe90bffffff	                           jmp 0x400a6eb	      5473	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x400a7e0	              0x90	                                     nop	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x400a7e1	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5475	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400a7e8	    0x48898548feff	            mov qword [rbp - 0x1b8], rax	      5475	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400a7ef	    0xc785f0fdffff	              mov dword [rbp - 0x210], 1	      5479	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a7f9	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400a800	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400a804	          0x6685c0	                             test ax, ax	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400a807	            0x752d	                           jne 0x400a836	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400a809	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400a810	            0x8b00	                    mov eax, dword [rax]	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400a812	          0x83f801	                              cmp eax, 1	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400a815	            0x751f	                           jne 0x400a836	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400a817	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400a81e	         0xfb64008	               movzx eax, byte [rax + 8]	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400a822	           0xfb6c0	                           movzx eax, al	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400a825	          0x83e070	                           and eax, 0x70	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400a828	            0x85c0	                           test eax, eax	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400a82a	            0x750a	                           jne 0x400a836	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400a82c	    0xc785f0fdffff	              mov dword [rbp - 0x210], 0	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400a836	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      5481	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a83d	            0x8b00	                    mov eax, dword [rax]	      5481	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a83f	    0x898560feffff	            mov dword [rbp - 0x1a0], eax	      5481	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a845	    0x488bbdc0fdff	            mov rdi, qword [rbp - 0x240]	      5482	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_42
0x400a84c	    0x488d8df0fdff	                  lea rcx, [rbp - 0x210]	      5482	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_42
0x400a853	    0x488d9560feff	                  lea rdx, [rbp - 0x1a0]	      5482	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_42
0x400a85a	    0x488bb548feff	            mov rsi, qword [rbp - 0x1b8]	      5482	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_42
0x400a861	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      5482	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_42
0x400a868	          0x4989f8	                             mov r8, rdi	      5482	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_42
0x400a86b	          0x4889c7	                            mov rdi, rax	      5482	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_42
0x400a86e	      0xe854250000	                     call sym.decCopyFit	      5482	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_42
0x400a873	    0x488b8dc0fdff	            mov rcx, qword [rbp - 0x240]	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a87a	    0x488d95f0fdff	                  lea rdx, [rbp - 0x210]	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a881	    0x488bb5c8fdff	            mov rsi, qword [rbp - 0x238]	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a888	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a88f	          0x4889c7	                            mov rdi, rax	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a892	      0xe8662e0000	                    call sym.decFinalize	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400a897	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      5486	decNumber.c	FUNCTION_68	FUNCTION_67
0x400a89e	          0x4889c7	                            mov rdi, rax	      5486	decNumber.c	FUNCTION_68	FUNCTION_67
0x400a8a1	      0xe800000000	                          call 0x400a8a6	      5486	decNumber.c	FUNCTION_68	FUNCTION_67
0x400a8a6	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      5487	decNumber.c	FUNCTION_68	FUNCTION_67
0x400a8ad	          0x4889c7	                            mov rdi, rax	      5487	decNumber.c	FUNCTION_68	FUNCTION_67
0x400a8b0	      0xe800000000	                          call 0x400a8b5	      5487	decNumber.c	FUNCTION_68	FUNCTION_67
0x400a8b5	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      5488	decNumber.c	FUNCTION_68	FUNCTION_67
0x400a8bc	          0x4889c7	                            mov rdi, rax	      5488	decNumber.c	FUNCTION_68	FUNCTION_67
0x400a8bf	      0xe800000000	                          call 0x400a8c4	      5488	decNumber.c	FUNCTION_68	FUNCTION_67
0x400a8c4	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      5490	decNumber.c	FUNCTION_68	FUNCTION_67
0x400a8cb	        0x488b75f8	                mov rsi, qword [rbp - 8]	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x400a8cf	    0x644833342528	                xor rsi, qword fs:[0x28]	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x400a8d8	            0x7405	                            je 0x400a8df	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x400a8da	      0xe800000000	                          call 0x400a8df	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x400a8df	              0xc9	                                   leave	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x400a8e0	              0xc3	                                     ret	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
decUnitAddSub	SWITCH,0:IF,31:FOR,4:CALL,2:DO,0:ELSE,4:WHILE,0:functions,0	321
0x400c201	              0x55	                                push rbp	      6333	decNumber.c	FUNCTION_5
0x400c202	          0x4889e5	                            mov rbp, rsp	      6333	decNumber.c	FUNCTION_5
0x400c205	        0x48897db8	             mov qword [rbp - 0x48], rdi	      6333	decNumber.c	FUNCTION_5
0x400c209	          0x8975b4	             mov dword [rbp - 0x4c], esi	      6333	decNumber.c	FUNCTION_5
0x400c20c	        0x488955a8	             mov qword [rbp - 0x58], rdx	      6333	decNumber.c	FUNCTION_5
0x400c210	          0x894db0	             mov dword [rbp - 0x50], ecx	      6333	decNumber.c	FUNCTION_5
0x400c213	        0x448945a4	             mov dword [rbp - 0x5c], r8d	      6333	decNumber.c	FUNCTION_5
0x400c217	        0x4c894d98	              mov qword [rbp - 0x68], r9	      6333	decNumber.c	FUNCTION_5
0x400c21b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6334	decNumber.c	FUNCTION_5
0x400c21f	        0x488945e8	             mov qword [rbp - 0x18], rax	      6334	decNumber.c	FUNCTION_5
0x400c223	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6335	decNumber.c	FUNCTION_5
0x400c227	        0x488945f0	             mov qword [rbp - 0x10], rax	      6335	decNumber.c	FUNCTION_5
0x400c22b	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      6338	decNumber.c	FUNCTION_5
0x400c232	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6349	decNumber.c	FUNCTION_5
0x400c235	            0x4898	                                    cdqe	      6349	decNumber.c	FUNCTION_5
0x400c237	        0x488d1400	                    lea rdx, [rax + rax]	      6349	decNumber.c	FUNCTION_5
0x400c23b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6349	decNumber.c	FUNCTION_5
0x400c23f	          0x4801d0	                            add rax, rdx	      6349	decNumber.c	FUNCTION_5
0x400c242	        0x488945e0	             mov qword [rbp - 0x20], rax	      6349	decNumber.c	FUNCTION_5
0x400c246	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      6350	decNumber.c	FUNCTION_5
0x400c249	            0x4898	                                    cdqe	      6350	decNumber.c	FUNCTION_5
0x400c24b	        0x488d1400	                    lea rdx, [rax + rax]	      6350	decNumber.c	FUNCTION_5
0x400c24f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6350	decNumber.c	FUNCTION_5
0x400c253	          0x4801d0	                            add rax, rdx	      6350	decNumber.c	FUNCTION_5
0x400c256	        0x488945d8	             mov qword [rbp - 0x28], rax	      6350	decNumber.c	FUNCTION_5
0x400c25a	        0x837da400	               cmp dword [rbp - 0x5c], 0	      6351	decNumber.c	FUNCTION_5	IF_2
0x400c25e	     0xf8487000000	                            je 0x400c2eb	      6351	decNumber.c	FUNCTION_5	IF_2
0x400c264	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6352	decNumber.c	FUNCTION_5	IF_2
0x400c267	            0x4898	                                    cdqe	      6352	decNumber.c	FUNCTION_5	IF_2
0x400c269	          0x4801c0	                            add rax, rax	      6352	decNumber.c	FUNCTION_5	IF_2
0x400c26c	        0x480145d8	            add qword [rbp - 0x28], rax 	      6352	decNumber.c	FUNCTION_5	IF_2
0x400c270	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400c274	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400c278	            0x755b	                           jne 0x400c2d5	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400c27a	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400c27d	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400c280	            0x7f53	                            jg 0x400c2d5	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400c282	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6355	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400c285	            0x4898	                                    cdqe	      6355	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400c287	          0x4801c0	                            add rax, rax	      6355	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400c28a	        0x48014598	            add qword [rbp - 0x68], rax 	      6355	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400c28e	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6356	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400c291	            0x4898	                                    cdqe	      6356	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400c293	          0x4801c0	                            add rax, rax	      6356	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400c296	        0x480145b8	            add qword [rbp - 0x48], rax 	      6356	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400c29a	            0xeb4f	                           jmp 0x400c2eb	      6356	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400c29c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x400c29f	            0x4898	                                    cdqe	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x400c2a1	        0x488d1400	                    lea rdx, [rax + rax]	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x400c2a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x400c2a9	          0x4801d0	                            add rax, rdx	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x400c2ac	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x400c2b0	            0x7610	                           jbe 0x400c2c2	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x400c2b2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x400c2b6	           0xfb710	                   movzx edx, word [rax]	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x400c2b9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x400c2bd	          0x668910	                      mov word [rax], dx	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x400c2c0	            0xeb09	                           jmp 0x400c2cb	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x400c2c2	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6360	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	ELSE_2
0x400c2c6	      0x66c7000000	                       mov word [rax], 0	      6360	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	ELSE_2
0x400c2cb	      0x488345b802	               add qword [rbp - 0x48], 2	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x400c2d0	      0x4883459802	               add qword [rbp - 0x68], 2	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x400c2d5	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x400c2d8	            0x4898	                                    cdqe	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x400c2da	        0x488d1400	                    lea rdx, [rax + rax]	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x400c2de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x400c2e2	          0x4801d0	                            add rax, rdx	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x400c2e5	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x400c2e9	            0x77b1	                            ja 0x400c29c	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x400c2eb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6363	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x400c2ef	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6363	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x400c2f3	     0xf862c010000	                           jbe 0x400c425	      6363	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x400c2f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6364	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x400c2fd	        0x488945f8	                mov qword [rbp - 8], rax	      6364	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x400c301	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6365	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x400c305	        0x488945d8	             mov qword [rbp - 0x28], rax	      6365	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x400c309	        0x488b45f8	                mov rax, qword [rbp - 8]	      6366	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x400c30d	        0x488945e0	             mov qword [rbp - 0x20], rax	      6366	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x400c311	      0xe90f010000	                           jmp 0x400c425	      6373	decNumber.c	FUNCTION_5	FOR_2
0x400c316	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6374	decNumber.c	FUNCTION_5	FOR_2
0x400c31a	           0xfb700	                   movzx eax, word [rax]	      6374	decNumber.c	FUNCTION_5	FOR_2
0x400c31d	           0xfb7c0	                           movzx eax, ax	      6374	decNumber.c	FUNCTION_5	FOR_2
0x400c320	           0x145cc	             add dword [rbp - 0x34], eax	      6374	decNumber.c	FUNCTION_5	FOR_2
0x400c323	      0x488345b802	               add qword [rbp - 0x48], 2	      6375	decNumber.c	FUNCTION_5	FOR_2
0x400c328	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6376	decNumber.c	FUNCTION_5	FOR_2
0x400c32c	           0xfb700	                   movzx eax, word [rax]	      6376	decNumber.c	FUNCTION_5	FOR_2
0x400c32f	           0xfb7c0	                           movzx eax, ax	      6376	decNumber.c	FUNCTION_5	FOR_2
0x400c332	         0xfaf4510	            imul eax, dword [rbp + 0x10]	      6376	decNumber.c	FUNCTION_5	FOR_2
0x400c336	           0x145cc	             add dword [rbp - 0x34], eax	      6376	decNumber.c	FUNCTION_5	FOR_2
0x400c339	      0x488345a802	               add qword [rbp - 0x58], 2	      6377	decNumber.c	FUNCTION_5	FOR_2
0x400c33e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6379	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x400c341	      0x3de7030000	                          cmp eax, 0x3e7	      6379	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x400c346	            0x7718	                            ja 0x400c360	      6379	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x400c348	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6380	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x400c34b	            0x89c2	                            mov edx, eax	      6380	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x400c34d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6380	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x400c351	          0x668910	                      mov word [rax], dx	      6380	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x400c354	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      6381	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x400c35b	      0xe9c0000000	                           jmp 0x400c420	      6382	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x400c360	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      6403	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c364	            0x7855	                            js 0x400c3bb	      6403	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c366	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6404	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c369	          0xc1e803	                              shr eax, 3	      6404	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c36c	    0x69c089410000	                   imul eax, eax, 0x4189	      6404	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c372	          0xc1e815	                           shr eax, 0x15	      6404	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c375	          0x8945d4	             mov dword [rbp - 0x2c], eax	      6404	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c378	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6405	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c37b	            0x89c2	                            mov edx, eax	      6405	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c37d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6405	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c380	      0x6669c0e803	                      imul ax, ax, 0x3e8	      6405	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c385	            0x29c2	                            sub edx, eax	      6405	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c387	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6405	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c38b	          0x668910	                      mov word [rax], dx	      6405	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c38e	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6406	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c391	          0x8945cc	             mov dword [rbp - 0x34], eax	      6406	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c394	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6407	decNumber.c	FUNCTION_5	FOR_2	IF_10	IF_11
0x400c398	           0xfb700	                   movzx eax, word [rax]	      6407	decNumber.c	FUNCTION_5	FOR_2	IF_10	IF_11
0x400c39b	        0x663de703	                           cmp ax, 0x3e7	      6407	decNumber.c	FUNCTION_5	FOR_2	IF_10	IF_11
0x400c39f	            0x767b	                           jbe 0x400c41c	      6407	decNumber.c	FUNCTION_5	FOR_2	IF_10	IF_11
0x400c3a1	        0x8345cc01	               add dword [rbp - 0x34], 1	      6408	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c3a5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6409	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c3a9	           0xfb700	                   movzx eax, word [rax]	      6409	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c3ac	    0x8d9018fcffff	                  lea edx, [rax - 0x3e8]	      6409	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c3b2	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6409	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c3b6	          0x668910	                      mov word [rax], dx	      6409	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c3b9	            0xeb65	                           jmp 0x400c420	      6410	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400c3bb	    0x8145cc40420f	         add dword [rbp - 0x34], 0xf4240	      6413	decNumber.c	FUNCTION_5	FOR_2
0x400c3c2	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6414	decNumber.c	FUNCTION_5	FOR_2
0x400c3c5	          0xc1e803	                              shr eax, 3	      6414	decNumber.c	FUNCTION_5	FOR_2
0x400c3c8	    0x69c089410000	                   imul eax, eax, 0x4189	      6414	decNumber.c	FUNCTION_5	FOR_2
0x400c3ce	          0xc1e815	                           shr eax, 0x15	      6414	decNumber.c	FUNCTION_5	FOR_2
0x400c3d1	          0x8945d4	             mov dword [rbp - 0x2c], eax	      6414	decNumber.c	FUNCTION_5	FOR_2
0x400c3d4	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6415	decNumber.c	FUNCTION_5	FOR_2
0x400c3d7	            0x89c2	                            mov edx, eax	      6415	decNumber.c	FUNCTION_5	FOR_2
0x400c3d9	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6415	decNumber.c	FUNCTION_5	FOR_2
0x400c3dc	      0x6669c0e803	                      imul ax, ax, 0x3e8	      6415	decNumber.c	FUNCTION_5	FOR_2
0x400c3e1	            0x29c2	                            sub edx, eax	      6415	decNumber.c	FUNCTION_5	FOR_2
0x400c3e3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6415	decNumber.c	FUNCTION_5	FOR_2
0x400c3e7	          0x668910	                      mov word [rax], dx	      6415	decNumber.c	FUNCTION_5	FOR_2
0x400c3ea	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6416	decNumber.c	FUNCTION_5	FOR_2
0x400c3ed	      0x2de8030000	                          sub eax, 0x3e8	      6416	decNumber.c	FUNCTION_5	FOR_2
0x400c3f2	          0x8945cc	             mov dword [rbp - 0x34], eax	      6416	decNumber.c	FUNCTION_5	FOR_2
0x400c3f5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6417	decNumber.c	FUNCTION_5	FOR_2	IF_12
0x400c3f9	           0xfb700	                   movzx eax, word [rax]	      6417	decNumber.c	FUNCTION_5	FOR_2	IF_12
0x400c3fc	        0x663de703	                           cmp ax, 0x3e7	      6417	decNumber.c	FUNCTION_5	FOR_2	IF_12
0x400c400	            0x761d	                           jbe 0x400c41f	      6417	decNumber.c	FUNCTION_5	FOR_2	IF_12
0x400c402	        0x8345cc01	               add dword [rbp - 0x34], 1	      6418	decNumber.c	FUNCTION_5	FOR_2
0x400c406	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6419	decNumber.c	FUNCTION_5	FOR_2
0x400c40a	           0xfb700	                   movzx eax, word [rax]	      6419	decNumber.c	FUNCTION_5	FOR_2
0x400c40d	    0x8d9018fcffff	                  lea edx, [rax - 0x3e8]	      6419	decNumber.c	FUNCTION_5	FOR_2
0x400c413	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6419	decNumber.c	FUNCTION_5	FOR_2
0x400c417	          0x668910	                      mov word [rax], dx	      6419	decNumber.c	FUNCTION_5	FOR_2
0x400c41a	            0xeb04	                           jmp 0x400c420	      6419	decNumber.c	FUNCTION_5	FOR_2
0x400c41c	              0x90	                                     nop	      6407	decNumber.c	FUNCTION_5	FOR_2	IF_10	IF_11
0x400c41d	            0xeb01	                           jmp 0x400c420	      6407	decNumber.c	FUNCTION_5	FOR_2	IF_10	IF_11
0x400c41f	              0x90	                                     nop	      6417	decNumber.c	FUNCTION_5	FOR_2	IF_12
0x400c420	      0x4883459802	               add qword [rbp - 0x68], 2	      6373	decNumber.c	FUNCTION_5	FOR_2
0x400c425	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6373	decNumber.c	FUNCTION_5	FOR_2
0x400c429	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      6373	decNumber.c	FUNCTION_5	FOR_2
0x400c42d	     0xf82e3feffff	                            jb 0x400c316	      6373	decNumber.c	FUNCTION_5	FOR_2
0x400c433	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c437	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c43b	     0xf833a010000	                           jae 0x400c57b	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c441	      0xe927010000	                           jmp 0x400c56d	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c446	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6455	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x400c449	            0x4898	                                    cdqe	      6455	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x400c44b	        0x488d1400	                    lea rdx, [rax + rax]	      6455	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x400c44f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6455	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x400c453	          0x4801d0	                            add rax, rdx	      6455	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x400c456	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      6455	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x400c45a	            0x7614	                           jbe 0x400c470	      6455	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x400c45c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6456	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x400c460	           0xfb700	                   movzx eax, word [rax]	      6456	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x400c463	           0xfb7c0	                           movzx eax, ax	      6456	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x400c466	           0x145cc	             add dword [rbp - 0x34], eax	      6456	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x400c469	      0x488345b802	               add qword [rbp - 0x48], 2	      6457	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x400c46e	            0xeb16	                           jmp 0x400c486	      6457	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x400c470	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6460	decNumber.c	FUNCTION_5	IF_16	FOR_3	ELSE_3
0x400c474	           0xfb700	                   movzx eax, word [rax]	      6460	decNumber.c	FUNCTION_5	IF_16	FOR_3	ELSE_3
0x400c477	           0xfb7c0	                           movzx eax, ax	      6460	decNumber.c	FUNCTION_5	IF_16	FOR_3	ELSE_3
0x400c47a	         0xfaf4510	            imul eax, dword [rbp + 0x10]	      6460	decNumber.c	FUNCTION_5	IF_16	FOR_3	ELSE_3
0x400c47e	           0x145cc	             add dword [rbp - 0x34], eax	      6460	decNumber.c	FUNCTION_5	IF_16	FOR_3	ELSE_3
0x400c481	      0x488345a802	               add qword [rbp - 0x58], 2	      6461	decNumber.c	FUNCTION_5	IF_16	FOR_3	ELSE_3
0x400c486	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6465	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x400c489	      0x3de7030000	                          cmp eax, 0x3e7	      6465	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x400c48e	            0x7718	                            ja 0x400c4a8	      6465	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x400c490	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6466	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x400c493	            0x89c2	                            mov edx, eax	      6466	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x400c495	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6466	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x400c499	          0x668910	                      mov word [rax], dx	      6466	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x400c49c	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      6467	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x400c4a3	      0xe9c0000000	                           jmp 0x400c568	      6468	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x400c4a8	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      6490	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4ac	            0x7855	                            js 0x400c503	      6490	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4ae	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6491	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4b1	          0xc1e803	                              shr eax, 3	      6491	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4b4	    0x69c089410000	                   imul eax, eax, 0x4189	      6491	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4ba	          0xc1e815	                           shr eax, 0x15	      6491	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4bd	          0x8945d4	             mov dword [rbp - 0x2c], eax	      6491	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4c0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6492	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4c3	            0x89c2	                            mov edx, eax	      6492	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4c5	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6492	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4c8	      0x6669c0e803	                      imul ax, ax, 0x3e8	      6492	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4cd	            0x29c2	                            sub edx, eax	      6492	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4cf	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6492	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4d3	          0x668910	                      mov word [rax], dx	      6492	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4d6	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6493	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4d9	          0x8945cc	             mov dword [rbp - 0x34], eax	      6493	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4dc	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6494	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22	IF_23
0x400c4e0	           0xfb700	                   movzx eax, word [rax]	      6494	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22	IF_23
0x400c4e3	        0x663de703	                           cmp ax, 0x3e7	      6494	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22	IF_23
0x400c4e7	            0x767b	                           jbe 0x400c564	      6494	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22	IF_23
0x400c4e9	        0x8345cc01	               add dword [rbp - 0x34], 1	      6495	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4ed	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6496	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4f1	           0xfb700	                   movzx eax, word [rax]	      6496	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4f4	    0x8d9018fcffff	                  lea edx, [rax - 0x3e8]	      6496	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4fa	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6496	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c4fe	          0x668910	                      mov word [rax], dx	      6496	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c501	            0xeb65	                           jmp 0x400c568	      6497	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400c503	    0x8145cc40420f	         add dword [rbp - 0x34], 0xf4240	      6500	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c50a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6501	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c50d	          0xc1e803	                              shr eax, 3	      6501	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c510	    0x69c089410000	                   imul eax, eax, 0x4189	      6501	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c516	          0xc1e815	                           shr eax, 0x15	      6501	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c519	          0x8945d4	             mov dword [rbp - 0x2c], eax	      6501	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c51c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6502	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c51f	            0x89c2	                            mov edx, eax	      6502	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c521	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6502	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c524	      0x6669c0e803	                      imul ax, ax, 0x3e8	      6502	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c529	            0x29c2	                            sub edx, eax	      6502	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c52b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6502	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c52f	          0x668910	                      mov word [rax], dx	      6502	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c532	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6503	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c535	      0x2de8030000	                          sub eax, 0x3e8	      6503	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c53a	          0x8945cc	             mov dword [rbp - 0x34], eax	      6503	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c53d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6504	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_24
0x400c541	           0xfb700	                   movzx eax, word [rax]	      6504	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_24
0x400c544	        0x663de703	                           cmp ax, 0x3e7	      6504	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_24
0x400c548	            0x761d	                           jbe 0x400c567	      6504	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_24
0x400c54a	        0x8345cc01	               add dword [rbp - 0x34], 1	      6505	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c54e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6506	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c552	           0xfb700	                   movzx eax, word [rax]	      6506	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c555	    0x8d9018fcffff	                  lea edx, [rax - 0x3e8]	      6506	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c55b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6506	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c55f	          0x668910	                      mov word [rax], dx	      6506	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c562	            0xeb04	                           jmp 0x400c568	      6506	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c564	              0x90	                                     nop	      6494	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22	IF_23
0x400c565	            0xeb01	                           jmp 0x400c568	      6494	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22	IF_23
0x400c567	              0x90	                                     nop	      6504	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_24
0x400c568	      0x4883459802	               add qword [rbp - 0x68], 2	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c56d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c571	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c575	     0xf82cbfeffff	                            jb 0x400c446	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400c57b	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      6540	decNumber.c	FUNCTION_5	IF_28
0x400c57f	            0x7516	                           jne 0x400c597	      6540	decNumber.c	FUNCTION_5	IF_28
0x400c581	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      6540	decNumber.c	FUNCTION_5	IF_28
0x400c585	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6540	decNumber.c	FUNCTION_5	IF_28
0x400c589	          0x4829c2	                            sub rdx, rax	      6540	decNumber.c	FUNCTION_5	IF_28
0x400c58c	          0x4889d0	                            mov rax, rdx	      6540	decNumber.c	FUNCTION_5	IF_28
0x400c58f	          0x48d1f8	                              sar rax, 1	      6540	decNumber.c	FUNCTION_5	IF_28
0x400c592	      0xe9cc000000	                           jmp 0x400c663	      6540	decNumber.c	FUNCTION_5	IF_28
0x400c597	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      6541	decNumber.c	FUNCTION_5	IF_29
0x400c59b	            0x7e27	                           jle 0x400c5c4	      6541	decNumber.c	FUNCTION_5	IF_29
0x400c59d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6542	decNumber.c	FUNCTION_5	IF_29
0x400c5a0	            0x89c2	                            mov edx, eax	      6542	decNumber.c	FUNCTION_5	IF_29
0x400c5a2	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6542	decNumber.c	FUNCTION_5	IF_29
0x400c5a6	          0x668910	                      mov word [rax], dx	      6542	decNumber.c	FUNCTION_5	IF_29
0x400c5a9	      0x4883459802	               add qword [rbp - 0x68], 2	      6543	decNumber.c	FUNCTION_5	IF_29
0x400c5ae	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      6544	decNumber.c	FUNCTION_5	IF_29
0x400c5b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6544	decNumber.c	FUNCTION_5	IF_29
0x400c5b6	          0x4829c2	                            sub rdx, rax	      6544	decNumber.c	FUNCTION_5	IF_29
0x400c5b9	          0x4889d0	                            mov rax, rdx	      6544	decNumber.c	FUNCTION_5	IF_29
0x400c5bc	          0x48d1f8	                              sar rax, 1	      6544	decNumber.c	FUNCTION_5	IF_29
0x400c5bf	      0xe99f000000	                           jmp 0x400c663	      6544	decNumber.c	FUNCTION_5	IF_29
0x400c5c4	    0xc745d0010000	               mov dword [rbp - 0x30], 1	      6547	decNumber.c	FUNCTION_5
0x400c5cb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6548	decNumber.c	FUNCTION_5	FOR_4
0x400c5cf	        0x48894598	             mov qword [rbp - 0x68], rax	      6548	decNumber.c	FUNCTION_5	FOR_4
0x400c5d3	            0xeb4d	                           jmp 0x400c622	      6548	decNumber.c	FUNCTION_5	FOR_4
0x400c5d5	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6549	decNumber.c	FUNCTION_5	FOR_4
0x400c5d8	    0x8d90e7030000	                  lea edx, [rax + 0x3e7]	      6549	decNumber.c	FUNCTION_5	FOR_4
0x400c5de	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6549	decNumber.c	FUNCTION_5	FOR_4
0x400c5e2	           0xfb700	                   movzx eax, word [rax]	      6549	decNumber.c	FUNCTION_5	FOR_4
0x400c5e5	           0xfb7c0	                           movzx eax, ax	      6549	decNumber.c	FUNCTION_5	FOR_4
0x400c5e8	            0x29c2	                            sub edx, eax	      6549	decNumber.c	FUNCTION_5	FOR_4
0x400c5ea	            0x89d0	                            mov eax, edx	      6549	decNumber.c	FUNCTION_5	FOR_4
0x400c5ec	          0x8945d0	             mov dword [rbp - 0x30], eax	      6549	decNumber.c	FUNCTION_5	FOR_4
0x400c5ef	    0x817dd0e70300	          cmp dword [rbp - 0x30], 0x3e7 	      6550	decNumber.c	FUNCTION_5	FOR_4	IF_30
0x400c5f6	            0x7f15	                            jg 0x400c60d	      6550	decNumber.c	FUNCTION_5	FOR_4	IF_30
0x400c5f8	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6551	decNumber.c	FUNCTION_5	FOR_4	IF_30
0x400c5fb	            0x89c2	                            mov edx, eax	      6551	decNumber.c	FUNCTION_5	FOR_4	IF_30
0x400c5fd	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6551	decNumber.c	FUNCTION_5	FOR_4	IF_30
0x400c601	          0x668910	                      mov word [rax], dx	      6551	decNumber.c	FUNCTION_5	FOR_4	IF_30
0x400c604	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      6552	decNumber.c	FUNCTION_5	FOR_4	IF_30
0x400c60b	            0xeb10	                           jmp 0x400c61d	      6552	decNumber.c	FUNCTION_5	FOR_4	IF_30
0x400c60d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6555	decNumber.c	FUNCTION_5	FOR_4	ELSE_4
0x400c611	      0x66c7000000	                       mov word [rax], 0	      6555	decNumber.c	FUNCTION_5	FOR_4	ELSE_4
0x400c616	    0xc745d0010000	               mov dword [rbp - 0x30], 1	      6556	decNumber.c	FUNCTION_5	FOR_4	ELSE_4
0x400c61d	      0x4883459802	               add qword [rbp - 0x68], 2	      6548	decNumber.c	FUNCTION_5	FOR_4
0x400c622	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6548	decNumber.c	FUNCTION_5	FOR_4
0x400c626	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6548	decNumber.c	FUNCTION_5	FOR_4
0x400c62a	            0x72a9	                            jb 0x400c5d5	      6548	decNumber.c	FUNCTION_5	FOR_4
0x400c62c	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6563	decNumber.c	FUNCTION_5	IF_31
0x400c62f	          0x2b45cc	             sub eax, dword [rbp - 0x34]	      6563	decNumber.c	FUNCTION_5	IF_31
0x400c632	          0x83f801	                              cmp eax, 1	      6563	decNumber.c	FUNCTION_5	IF_31
0x400c635	            0x741b	                            je 0x400c652	      6563	decNumber.c	FUNCTION_5	IF_31
0x400c637	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6564	decNumber.c	FUNCTION_5	IF_31
0x400c63a	            0x89c2	                            mov edx, eax	      6564	decNumber.c	FUNCTION_5	IF_31
0x400c63c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6564	decNumber.c	FUNCTION_5	IF_31
0x400c63f	            0x29c2	                            sub edx, eax	      6564	decNumber.c	FUNCTION_5	IF_31
0x400c641	            0x89d0	                            mov eax, edx	      6564	decNumber.c	FUNCTION_5	IF_31
0x400c643	          0x8d50ff	                      lea edx, [rax - 1]	      6564	decNumber.c	FUNCTION_5	IF_31
0x400c646	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6564	decNumber.c	FUNCTION_5	IF_31
0x400c64a	          0x668910	                      mov word [rax], dx	      6564	decNumber.c	FUNCTION_5	IF_31
0x400c64d	      0x4883459802	               add qword [rbp - 0x68], 2	      6565	decNumber.c	FUNCTION_5	IF_31
0x400c652	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      6567	decNumber.c	FUNCTION_5
0x400c656	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6567	decNumber.c	FUNCTION_5
0x400c65a	          0x4829c2	                            sub rdx, rax	      6567	decNumber.c	FUNCTION_5
0x400c65d	          0x4889d0	                            mov rax, rdx	      6567	decNumber.c	FUNCTION_5
0x400c660	          0x48d1f8	                              sar rax, 1	      6567	decNumber.c	FUNCTION_5
0x400c663	              0x5d	                                 pop rbp	      6568	decNumber.c	FUNCTION_5
0x400c664	              0xc3	                                     ret	      6568	decNumber.c	FUNCTION_5
decNumberGetBCD	SWITCH,0:IF,1:FOR,2:CALL,0:DO,0:ELSE,0:WHILE,0:functions,0	57
0x4006042	              0x55	                                push rbp	      3451	decNumber.c	FUNCTION_68	FUNCTION_56
0x4006043	          0x4889e5	                            mov rbp, rsp	      3451	decNumber.c	FUNCTION_68	FUNCTION_56
0x4006046	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3451	decNumber.c	FUNCTION_68	FUNCTION_56
0x400604a	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3451	decNumber.c	FUNCTION_68	FUNCTION_56
0x400604e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3452	decNumber.c	FUNCTION_68	FUNCTION_56
0x4006052	            0x8b00	                    mov eax, dword [rax]	      3452	decNumber.c	FUNCTION_68	FUNCTION_56
0x4006054	            0x4898	                                    cdqe	      3452	decNumber.c	FUNCTION_68	FUNCTION_56
0x4006056	        0x488d50ff	                      lea rdx, [rax - 1]	      3452	decNumber.c	FUNCTION_68	FUNCTION_56
0x400605a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3452	decNumber.c	FUNCTION_68	FUNCTION_56
0x400605e	          0x4801d0	                            add rax, rdx	      3452	decNumber.c	FUNCTION_68	FUNCTION_56
0x4006061	        0x488945f0	             mov qword [rbp - 0x10], rax	      3452	decNumber.c	FUNCTION_68	FUNCTION_56
0x4006065	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3453	decNumber.c	FUNCTION_68	FUNCTION_56
0x4006069	        0x4883c00a	                            add rax, 0xa	      3453	decNumber.c	FUNCTION_68	FUNCTION_56
0x400606d	        0x488945f8	                mov qword [rbp - 8], rax	      3453	decNumber.c	FUNCTION_68	FUNCTION_56
0x4006071	        0x488b45f8	                mov rax, qword [rbp - 8]	      3458	decNumber.c	FUNCTION_68	FUNCTION_56
0x4006075	           0xfb700	                   movzx eax, word [rax]	      3458	decNumber.c	FUNCTION_68	FUNCTION_56
0x4006078	           0xfb7c0	                           movzx eax, ax	      3458	decNumber.c	FUNCTION_68	FUNCTION_56
0x400607b	          0x8945e8	             mov dword [rbp - 0x18], eax	      3458	decNumber.c	FUNCTION_68	FUNCTION_56
0x400607e	    0xc745ec030000	               mov dword [rbp - 0x14], 3	      3459	decNumber.c	FUNCTION_68	FUNCTION_56
0x4006085	            0xeb5f	                           jmp 0x40060e6	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4006087	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x400608a	      0xbacdcccccc	                     mov edx, 0xcccccccd	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x400608f	            0x89c8	                            mov eax, ecx	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4006091	            0xf7e2	                                 mul edx	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4006093	          0xc1ea03	                              shr edx, 3	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4006096	            0x89d0	                            mov eax, edx	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4006098	          0xc1e002	                              shl eax, 2	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x400609b	             0x1d0	                            add eax, edx	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x400609d	             0x1c0	                            add eax, eax	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x400609f	            0x29c1	                            sub ecx, eax	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060a1	            0x89ca	                            mov edx, ecx	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060a3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060a7	            0x8810	                      mov byte [rax], dl	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060a9	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3462	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060ac	      0xbacdcccccc	                     mov edx, 0xcccccccd	      3462	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060b1	            0xf7e2	                                 mul edx	      3462	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060b3	            0x89d0	                            mov eax, edx	      3462	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060b5	          0xc1e803	                              shr eax, 3	      3462	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060b8	          0x8945e8	             mov dword [rbp - 0x18], eax	      3462	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060bb	        0x836dec01	               sub dword [rbp - 0x14], 1	      3463	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060bf	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3464	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2	IF_1
0x40060c3	            0x751b	                           jne 0x40060e0	      3464	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2	IF_1
0x40060c5	      0x488345f802	                  add qword [rbp - 8], 2	      3465	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060ca	        0x488b45f8	                mov rax, qword [rbp - 8]	      3466	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060ce	           0xfb700	                   movzx eax, word [rax]	      3466	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060d1	           0xfb7c0	                           movzx eax, ax	      3466	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060d4	          0x8945e8	             mov dword [rbp - 0x18], eax	      3466	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060d7	    0xc745ec030000	               mov dword [rbp - 0x14], 3	      3467	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060de	            0xeb01	                           jmp 0x40060e1	      3467	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060e0	              0x90	                                     nop	      3464	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2	IF_1
0x40060e1	      0x48836df001	               sub qword [rbp - 0x10], 1	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060e6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060ea	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060ee	            0x7397	                           jae 0x4006087	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x40060f0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3470	decNumber.c	FUNCTION_68	FUNCTION_56
0x40060f4	              0x5d	                                 pop rbp	      3471	decNumber.c	FUNCTION_68	FUNCTION_56
0x40060f5	              0xc3	                                     ret	      3471	decNumber.c	FUNCTION_68	FUNCTION_56
decNumberIsSubnormal	SWITCH,0:IF,4:FOR,0:CALL,3:DO,0:ELSE,0:WHILE,0:functions,0	44
0x4006299	              0x55	                                push rbp	      3530	decNumber.c	FUNCTION_68	FUNCTION_59
0x400629a	          0x4889e5	                            mov rbp, rsp	      3530	decNumber.c	FUNCTION_68	FUNCTION_59
0x400629d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3530	decNumber.c	FUNCTION_68	FUNCTION_59
0x40062a1	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3530	decNumber.c	FUNCTION_68	FUNCTION_59
0x40062a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x40062a9	         0xfb64008	               movzx eax, byte [rax + 8]	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x40062ad	           0xfb6c0	                           movzx eax, al	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x40062b0	          0x83e070	                           and eax, 0x70	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x40062b3	            0x85c0	                           test eax, eax	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x40062b5	            0x7407	                            je 0x40062be	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x40062b7	      0xb800000000	                              mov eax, 0	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x40062bc	            0xeb5e	                           jmp 0x400631c	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x40062be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x40062c2	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x40062c6	          0x6685c0	                             test ax, ax	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x40062c9	            0x7524	                           jne 0x40062ef	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x40062cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x40062cf	            0x8b00	                    mov eax, dword [rax]	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x40062d1	          0x83f801	                              cmp eax, 1	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x40062d4	            0x7519	                           jne 0x40062ef	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x40062d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x40062da	         0xfb64008	               movzx eax, byte [rax + 8]	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x40062de	           0xfb6c0	                           movzx eax, al	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x40062e1	          0x83e070	                           and eax, 0x70	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x40062e4	            0x85c0	                           test eax, eax	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x40062e6	            0x7507	                           jne 0x40062ef	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x40062e8	      0xb800000000	                              mov eax, 0	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x40062ed	            0xeb2d	                           jmp 0x400631c	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x40062ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3539	decNumber.c	FUNCTION_68	FUNCTION_59
0x40062f3	          0x8b5004	                mov edx, dword [rax + 4]	      3539	decNumber.c	FUNCTION_68	FUNCTION_59
0x40062f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3539	decNumber.c	FUNCTION_68	FUNCTION_59
0x40062fa	            0x8b00	                    mov eax, dword [rax]	      3539	decNumber.c	FUNCTION_68	FUNCTION_59
0x40062fc	             0x1d0	                            add eax, edx	      3539	decNumber.c	FUNCTION_68	FUNCTION_59
0x40062fe	          0x83e801	                              sub eax, 1	      3539	decNumber.c	FUNCTION_68	FUNCTION_59
0x4006301	          0x8945fc	                mov dword [rbp - 4], eax	      3539	decNumber.c	FUNCTION_68	FUNCTION_59
0x4006304	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3540	decNumber.c	FUNCTION_68	FUNCTION_59	IF_4
0x4006308	          0x8b4008	                mov eax, dword [rax + 8]	      3540	decNumber.c	FUNCTION_68	FUNCTION_59	IF_4
0x400630b	          0x3b45fc	                cmp eax, dword [rbp - 4]	      3540	decNumber.c	FUNCTION_68	FUNCTION_59	IF_4
0x400630e	            0x7e07	                           jle 0x4006317	      3540	decNumber.c	FUNCTION_68	FUNCTION_59	IF_4
0x4006310	      0xb801000000	                              mov eax, 1	      3540	decNumber.c	FUNCTION_68	FUNCTION_59	IF_4
0x4006315	            0xeb05	                           jmp 0x400631c	      3540	decNumber.c	FUNCTION_68	FUNCTION_59	IF_4
0x4006317	      0xb800000000	                              mov eax, 0	      3541	decNumber.c	FUNCTION_68	FUNCTION_59
0x400631c	              0x5d	                                 pop rbp	      3542	decNumber.c	FUNCTION_68	FUNCTION_59
0x400631d	              0xc3	                                     ret	      3542	decNumber.c	FUNCTION_68	FUNCTION_59
decSetCoeff	SWITCH,0:IF,21:FOR,5:CALL,1:DO,0:ELSE,6:WHILE,0:functions,0	333
0x400ce34	              0x55	                                push rbp	      6884	decNumber.c	FUNCTION_12
0x400ce35	          0x4889e5	                            mov rbp, rsp	      6884	decNumber.c	FUNCTION_12
0x400ce38	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      6884	decNumber.c	FUNCTION_12
0x400ce3c	        0x488975c0	             mov qword [rbp - 0x40], rsi	      6884	decNumber.c	FUNCTION_12
0x400ce40	        0x488955b8	             mov qword [rbp - 0x48], rdx	      6884	decNumber.c	FUNCTION_12
0x400ce44	          0x894db4	             mov dword [rbp - 0x4c], ecx	      6884	decNumber.c	FUNCTION_12
0x400ce47	        0x4c8945a8	              mov qword [rbp - 0x58], r8	      6884	decNumber.c	FUNCTION_12
0x400ce4b	        0x4c894da0	              mov qword [rbp - 0x60], r9	      6884	decNumber.c	FUNCTION_12
0x400ce4f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6894	decNumber.c	FUNCTION_12
0x400ce53	            0x8b00	                    mov eax, dword [rax]	      6894	decNumber.c	FUNCTION_12
0x400ce55	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      6894	decNumber.c	FUNCTION_12
0x400ce58	            0x29c2	                            sub edx, eax	      6894	decNumber.c	FUNCTION_12
0x400ce5a	            0x89d0	                            mov eax, edx	      6894	decNumber.c	FUNCTION_12
0x400ce5c	          0x8945dc	             mov dword [rbp - 0x24], eax	      6894	decNumber.c	FUNCTION_12
0x400ce5f	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      6895	decNumber.c	FUNCTION_12	IF_1
0x400ce63	            0x7f7b	                            jg 0x400cee0	      6895	decNumber.c	FUNCTION_12	IF_1
0x400ce65	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6896	decNumber.c	FUNCTION_12	IF_1	IF_2
0x400ce69	        0x4883c00a	                            add rax, 0xa	      6896	decNumber.c	FUNCTION_12	IF_1	IF_2
0x400ce6d	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      6896	decNumber.c	FUNCTION_12	IF_1	IF_2
0x400ce71	            0x7447	                            je 0x400ceba	      6896	decNumber.c	FUNCTION_12	IF_1	IF_2
0x400ce73	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6898	decNumber.c	FUNCTION_12	IF_1	IF_2
0x400ce76	          0x8945d4	             mov dword [rbp - 0x2c], eax	      6898	decNumber.c	FUNCTION_12	IF_1	IF_2
0x400ce79	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6899	decNumber.c	FUNCTION_12	IF_1	IF_2
0x400ce7d	        0x488945f0	             mov qword [rbp - 0x10], rax	      6899	decNumber.c	FUNCTION_12	IF_1	IF_2
0x400ce81	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6900	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x400ce85	        0x4883c00a	                            add rax, 0xa	      6900	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x400ce89	        0x488945f8	                mov qword [rbp - 8], rax	      6900	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x400ce8d	            0xeb1c	                           jmp 0x400ceab	      6900	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x400ce8f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6901	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x400ce93	           0xfb710	                   movzx edx, word [rax]	      6901	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x400ce96	        0x488b45f8	                mov rax, qword [rbp - 8]	      6901	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x400ce9a	          0x668910	                      mov word [rax], dx	      6901	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x400ce9d	      0x488345f802	                  add qword [rbp - 8], 2	      6900	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x400cea2	      0x488345f002	               add qword [rbp - 0x10], 2	      6900	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x400cea7	        0x836dd403	               sub dword [rbp - 0x2c], 3	      6900	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x400ceab	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      6900	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x400ceaf	            0x7fde	                            jg 0x400ce8f	      6900	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x400ceb1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6902	decNumber.c	FUNCTION_12	IF_1	IF_2
0x400ceb5	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      6902	decNumber.c	FUNCTION_12	IF_1	IF_2
0x400ceb8	            0x8910	                    mov dword [rax], edx	      6902	decNumber.c	FUNCTION_12	IF_1	IF_2
0x400ceba	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6905	decNumber.c	FUNCTION_12	IF_1	IF_3
0x400cebe	            0x8b00	                    mov eax, dword [rax]	      6905	decNumber.c	FUNCTION_12	IF_1	IF_3
0x400cec0	            0x85c0	                           test eax, eax	      6905	decNumber.c	FUNCTION_12	IF_1	IF_3
0x400cec2	     0xf84b6030000	                            je 0x400d27e	      6905	decNumber.c	FUNCTION_12	IF_1	IF_3
0x400cec8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      6905	decNumber.c	FUNCTION_12	IF_1	IF_3
0x400cecc	            0x8b00	                    mov eax, dword [rax]	      6905	decNumber.c	FUNCTION_12	IF_1	IF_3
0x400cece	       0xd20080000	                           or eax, 0x820	      6905	decNumber.c	FUNCTION_12	IF_1	IF_3
0x400ced3	            0x89c2	                            mov edx, eax	      6905	decNumber.c	FUNCTION_12	IF_1	IF_3
0x400ced5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      6905	decNumber.c	FUNCTION_12	IF_1	IF_3
0x400ced9	            0x8910	                    mov dword [rax], edx	      6905	decNumber.c	FUNCTION_12	IF_1	IF_3
0x400cedb	      0xe99e030000	                           jmp 0x400d27e	      6906	decNumber.c	FUNCTION_12	IF_1
0x400cee0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6910	decNumber.c	FUNCTION_12
0x400cee4	          0x8b5004	                mov edx, dword [rax + 4]	      6910	decNumber.c	FUNCTION_12
0x400cee7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6910	decNumber.c	FUNCTION_12
0x400ceea	             0x1c2	                            add edx, eax	      6910	decNumber.c	FUNCTION_12
0x400ceec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6910	decNumber.c	FUNCTION_12
0x400cef0	          0x895004	                mov dword [rax + 4], edx	      6910	decNumber.c	FUNCTION_12
0x400cef3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      6911	decNumber.c	FUNCTION_12
0x400cef7	            0x8b00	                    mov eax, dword [rax]	      6911	decNumber.c	FUNCTION_12
0x400cef9	          0x80cc08	                                or ah, 8	      6911	decNumber.c	FUNCTION_12
0x400cefc	            0x89c2	                            mov edx, eax	      6911	decNumber.c	FUNCTION_12
0x400cefe	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      6911	decNumber.c	FUNCTION_12
0x400cf02	            0x8910	                    mov dword [rax], edx	      6911	decNumber.c	FUNCTION_12
0x400cf04	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6912	decNumber.c	FUNCTION_12	IF_4
0x400cf08	            0x8b00	                    mov eax, dword [rax]	      6912	decNumber.c	FUNCTION_12	IF_4
0x400cf0a	          0x83f801	                              cmp eax, 1	      6912	decNumber.c	FUNCTION_12	IF_4
0x400cf0d	            0x7e0a	                           jle 0x400cf19	      6912	decNumber.c	FUNCTION_12	IF_4
0x400cf0f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6912	decNumber.c	FUNCTION_12	IF_4
0x400cf13	    0xc70001000000	                      mov dword [rax], 1	      6912	decNumber.c	FUNCTION_12	IF_4
0x400cf19	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6914	decNumber.c	FUNCTION_12	IF_5
0x400cf1c	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      6914	decNumber.c	FUNCTION_12	IF_5
0x400cf1f	            0x7e75	                           jle 0x400cf96	      6914	decNumber.c	FUNCTION_12	IF_5
0x400cf21	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6917	decNumber.c	FUNCTION_12	IF_5	IF_6
0x400cf25	            0x8b00	                    mov eax, dword [rax]	      6917	decNumber.c	FUNCTION_12	IF_5	IF_6
0x400cf27	            0x85c0	                           test eax, eax	      6917	decNumber.c	FUNCTION_12	IF_5	IF_6
0x400cf29	            0x7f37	                            jg 0x400cf62	      6917	decNumber.c	FUNCTION_12	IF_5	IF_6
0x400cf2b	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6918	decNumber.c	FUNCTION_12	IF_5	IF_6
0x400cf2e	          0x8945d4	             mov dword [rbp - 0x2c], eax	      6918	decNumber.c	FUNCTION_12	IF_5	IF_6
0x400cf31	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400cf35	        0x488945f0	             mov qword [rbp - 0x10], rax	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400cf39	            0xeb21	                           jmp 0x400cf5c	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400cf3b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400cf3f	           0xfb700	                   movzx eax, word [rax]	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400cf42	          0x6685c0	                             test ax, ax	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400cf45	            0x740c	                            je 0x400cf53	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400cf47	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6920	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400cf4b	    0xc70001000000	                      mov dword [rax], 1	      6920	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400cf51	            0xeb0f	                           jmp 0x400cf62	      6921	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400cf53	      0x488345f002	               add qword [rbp - 0x10], 2	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400cf58	        0x836dd403	               sub dword [rbp - 0x2c], 3	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400cf5c	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400cf60	            0x7fd9	                            jg 0x400cf3b	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400cf62	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6924	decNumber.c	FUNCTION_12	IF_5	IF_8
0x400cf66	            0x8b00	                    mov eax, dword [rax]	      6924	decNumber.c	FUNCTION_12	IF_5	IF_8
0x400cf68	            0x85c0	                           test eax, eax	      6924	decNumber.c	FUNCTION_12	IF_5	IF_8
0x400cf6a	            0x7411	                            je 0x400cf7d	      6924	decNumber.c	FUNCTION_12	IF_5	IF_8
0x400cf6c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      6924	decNumber.c	FUNCTION_12	IF_5	IF_8
0x400cf70	            0x8b00	                    mov eax, dword [rax]	      6924	decNumber.c	FUNCTION_12	IF_5	IF_8
0x400cf72	          0x83c820	                            or eax, 0x20	      6924	decNumber.c	FUNCTION_12	IF_5	IF_8
0x400cf75	            0x89c2	                            mov edx, eax	      6924	decNumber.c	FUNCTION_12	IF_5	IF_8
0x400cf77	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      6924	decNumber.c	FUNCTION_12	IF_5	IF_8
0x400cf7b	            0x8910	                    mov dword [rax], edx	      6924	decNumber.c	FUNCTION_12	IF_5	IF_8
0x400cf7d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6925	decNumber.c	FUNCTION_12	IF_5
0x400cf81	    0x66c7400a0000	                 mov word [rax + 0xa], 0	      6925	decNumber.c	FUNCTION_12	IF_5
0x400cf87	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6926	decNumber.c	FUNCTION_12	IF_5
0x400cf8b	    0xc70001000000	                      mov dword [rax], 1	      6926	decNumber.c	FUNCTION_12	IF_5
0x400cf91	      0xe9ec020000	                           jmp 0x400d282	      6927	decNumber.c	FUNCTION_12	IF_5
0x400cf96	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      6936	decNumber.c	FUNCTION_12
0x400cf9d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6937	decNumber.c	FUNCTION_12	FOR_3
0x400cfa1	        0x488945f0	             mov qword [rbp - 0x10], rax	      6937	decNumber.c	FUNCTION_12	FOR_3
0x400cfa5	        0x8345d403	               add dword [rbp - 0x2c], 3	      6938	decNumber.c	FUNCTION_12	FOR_3
0x400cfa9	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6939	decNumber.c	FUNCTION_12	FOR_3	IF_9
0x400cfac	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      6939	decNumber.c	FUNCTION_12	FOR_3	IF_9
0x400cfaf	            0x7d1d	                           jge 0x400cfce	      6939	decNumber.c	FUNCTION_12	FOR_3	IF_9
0x400cfb1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6940	decNumber.c	FUNCTION_12	FOR_3	IF_10
0x400cfb5	           0xfb700	                   movzx eax, word [rax]	      6940	decNumber.c	FUNCTION_12	FOR_3	IF_10
0x400cfb8	          0x6685c0	                             test ax, ax	      6940	decNumber.c	FUNCTION_12	FOR_3	IF_10
0x400cfbb	            0x740a	                            je 0x400cfc7	      6940	decNumber.c	FUNCTION_12	FOR_3	IF_10
0x400cfbd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6940	decNumber.c	FUNCTION_12	FOR_3	IF_10
0x400cfc1	    0xc70001000000	                      mov dword [rax], 1	      6940	decNumber.c	FUNCTION_12	FOR_3	IF_10
0x400cfc7	      0x488345f002	               add qword [rbp - 0x10], 2	      6937	decNumber.c	FUNCTION_12	FOR_3
0x400cfcc	            0xebd7	                           jmp 0x400cfa5	      6941	decNumber.c	FUNCTION_12	FOR_3
0x400cfce	              0x90	                                     nop	      6939	decNumber.c	FUNCTION_12	FOR_3	IF_9
0x400cfcf	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6944	decNumber.c	FUNCTION_12
0x400cfd2	          0x8d50fd	                      lea edx, [rax - 3]	      6944	decNumber.c	FUNCTION_12
0x400cfd5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6944	decNumber.c	FUNCTION_12
0x400cfd8	            0x29d0	                            sub eax, edx	      6944	decNumber.c	FUNCTION_12
0x400cfda	          0x83e801	                              sub eax, 1	      6944	decNumber.c	FUNCTION_12
0x400cfdd	          0x8945e0	             mov dword [rbp - 0x20], eax	      6944	decNumber.c	FUNCTION_12
0x400cfe0	        0x837de002	               cmp dword [rbp - 0x20], 2	      6945	decNumber.c	FUNCTION_12	IF_11
0x400cfe4	     0xf85cb000000	                           jne 0x400d0b5	      6945	decNumber.c	FUNCTION_12	IF_11
0x400cfea	    0x8b0500000000	            mov eax, dword [0x0400cff0] 	      6946	decNumber.c	FUNCTION_12	IF_11
0x400cff0	           0xfb7c0	                           movzx eax, ax	      6946	decNumber.c	FUNCTION_12	IF_11
0x400cff3	            0xd1f8	                              sar eax, 1	      6946	decNumber.c	FUNCTION_12	IF_11
0x400cff5	        0x668945d2	               mov word [rbp - 0x2e], ax	      6946	decNumber.c	FUNCTION_12	IF_11
0x400cff9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6948	decNumber.c	FUNCTION_12	IF_11	IF_12
0x400cffd	           0xfb700	                   movzx eax, word [rax]	      6948	decNumber.c	FUNCTION_12	IF_11	IF_12
0x400d000	        0x663b45d2	               cmp ax, word [rbp - 0x2e]	      6948	decNumber.c	FUNCTION_12	IF_11	IF_12
0x400d004	            0x722a	                            jb 0x400d030	      6948	decNumber.c	FUNCTION_12	IF_11	IF_12
0x400d006	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6949	decNumber.c	FUNCTION_12	IF_11	IF_12	IF_13
0x400d00a	           0xfb700	                   movzx eax, word [rax]	      6949	decNumber.c	FUNCTION_12	IF_11	IF_12	IF_13
0x400d00d	        0x663b45d2	               cmp ax, word [rbp - 0x2e]	      6949	decNumber.c	FUNCTION_12	IF_11	IF_12	IF_13
0x400d011	            0x760c	                           jbe 0x400d01f	      6949	decNumber.c	FUNCTION_12	IF_11	IF_12	IF_13
0x400d013	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6949	decNumber.c	FUNCTION_12	IF_11	IF_12	IF_13
0x400d017	    0xc70007000000	                      mov dword [rax], 7	      6949	decNumber.c	FUNCTION_12	IF_11	IF_12	IF_13
0x400d01d	            0xeb27	                           jmp 0x400d046	      6949	decNumber.c	FUNCTION_12	IF_11	IF_12	IF_13
0x400d01f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6950	decNumber.c	FUNCTION_12	IF_11	IF_12	ELSE_1
0x400d023	            0x8b00	                    mov eax, dword [rax]	      6950	decNumber.c	FUNCTION_12	IF_11	IF_12	ELSE_1
0x400d025	          0x8d5005	                      lea edx, [rax + 5]	      6950	decNumber.c	FUNCTION_12	IF_11	IF_12	ELSE_1
0x400d028	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6950	decNumber.c	FUNCTION_12	IF_11	IF_12	ELSE_1
0x400d02c	            0x8910	                    mov dword [rax], edx	      6950	decNumber.c	FUNCTION_12	IF_11	IF_12	ELSE_1
0x400d02e	            0xeb16	                           jmp 0x400d046	      6950	decNumber.c	FUNCTION_12	IF_11	IF_12	ELSE_1
0x400d030	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6953	decNumber.c	FUNCTION_12	IF_11	ELSE_2	IF_14
0x400d034	           0xfb700	                   movzx eax, word [rax]	      6953	decNumber.c	FUNCTION_12	IF_11	ELSE_2	IF_14
0x400d037	          0x6685c0	                             test ax, ax	      6953	decNumber.c	FUNCTION_12	IF_11	ELSE_2	IF_14
0x400d03a	            0x740a	                            je 0x400d046	      6953	decNumber.c	FUNCTION_12	IF_11	ELSE_2	IF_14
0x400d03c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6953	decNumber.c	FUNCTION_12	IF_11	ELSE_2	IF_14
0x400d040	    0xc70003000000	                      mov dword [rax], 3	      6953	decNumber.c	FUNCTION_12	IF_11	ELSE_2	IF_14
0x400d046	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6955	decNumber.c	FUNCTION_12	IF_11	IF_15
0x400d04a	            0x8b00	                    mov eax, dword [rax]	      6955	decNumber.c	FUNCTION_12	IF_11	IF_15
0x400d04c	            0x85c0	                           test eax, eax	      6955	decNumber.c	FUNCTION_12	IF_11	IF_15
0x400d04e	            0x7f19	                            jg 0x400d069	      6955	decNumber.c	FUNCTION_12	IF_11	IF_15
0x400d050	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6956	decNumber.c	FUNCTION_12	IF_11	IF_15
0x400d054	    0x66c7400a0000	                 mov word [rax + 0xa], 0	      6956	decNumber.c	FUNCTION_12	IF_11	IF_15
0x400d05a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6957	decNumber.c	FUNCTION_12	IF_11	IF_15
0x400d05e	    0xc70001000000	                      mov dword [rax], 1	      6957	decNumber.c	FUNCTION_12	IF_11	IF_15
0x400d064	      0xe9f7010000	                           jmp 0x400d260	      6957	decNumber.c	FUNCTION_12	IF_11	IF_15
0x400d069	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6960	decNumber.c	FUNCTION_12	IF_11	ELSE_3
0x400d06d	            0x8b00	                    mov eax, dword [rax]	      6960	decNumber.c	FUNCTION_12	IF_11	ELSE_3
0x400d06f	          0x8945d4	             mov dword [rbp - 0x2c], eax	      6960	decNumber.c	FUNCTION_12	IF_11	ELSE_3
0x400d072	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6961	decNumber.c	FUNCTION_12	IF_11	ELSE_3
0x400d076	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      6961	decNumber.c	FUNCTION_12	IF_11	ELSE_3
0x400d079	            0x8910	                    mov dword [rax], edx	      6961	decNumber.c	FUNCTION_12	IF_11	ELSE_3
0x400d07b	      0x488345f002	               add qword [rbp - 0x10], 2	      6962	decNumber.c	FUNCTION_12	IF_11	ELSE_3
0x400d080	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6964	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x400d084	        0x4883c00a	                            add rax, 0xa	      6964	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x400d088	        0x488945f8	                mov qword [rbp - 8], rax	      6964	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x400d08c	            0xeb1c	                           jmp 0x400d0aa	      6964	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x400d08e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6965	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x400d092	           0xfb710	                   movzx edx, word [rax]	      6965	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x400d095	        0x488b45f8	                mov rax, qword [rbp - 8]	      6965	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x400d099	          0x668910	                      mov word [rax], dx	      6965	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x400d09c	      0x488345f802	                  add qword [rbp - 8], 2	      6964	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x400d0a1	      0x488345f002	               add qword [rbp - 0x10], 2	      6964	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x400d0a6	        0x836dd403	               sub dword [rbp - 0x2c], 3	      6964	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x400d0aa	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      6964	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x400d0ae	            0x7fde	                            jg 0x400d08e	      6964	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x400d0b0	      0xe9ab010000	                           jmp 0x400d260	      6964	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x400d0b5	        0x837de000	               cmp dword [rbp - 0x20], 0	      6972	decNumber.c	FUNCTION_12	ELSE_4	IF_16
0x400d0b9	            0x750f	                           jne 0x400d0ca	      6972	decNumber.c	FUNCTION_12	ELSE_4	IF_16
0x400d0bb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6972	decNumber.c	FUNCTION_12	ELSE_4	IF_16
0x400d0bf	           0xfb700	                   movzx eax, word [rax]	      6972	decNumber.c	FUNCTION_12	ELSE_4	IF_16
0x400d0c2	           0xfb7c0	                           movzx eax, ax	      6972	decNumber.c	FUNCTION_12	ELSE_4	IF_16
0x400d0c5	          0x8945d8	             mov dword [rbp - 0x28], eax	      6972	decNumber.c	FUNCTION_12	ELSE_4	IF_16
0x400d0c8	            0xeb53	                           jmp 0x400d11d	      6972	decNumber.c	FUNCTION_12	ELSE_4	IF_16
0x400d0ca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d0ce	           0xfb700	                   movzx eax, word [rax]	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d0d1	           0xfb7d0	                           movzx edx, ax	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d0d4	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d0d7	            0x89c1	                            mov ecx, eax	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d0d9	            0xd3ea	                             shr edx, cl	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d0db	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d0de	    0x8b0485000000	                  mov eax, dword [rax*4]	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d0e5	           0xfafc2	                           imul eax, edx	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d0e8	          0xc1e811	                           shr eax, 0x11	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d0eb	          0x8945d8	             mov dword [rbp - 0x28], eax	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d0ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6976	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d0f2	           0xfb700	                   movzx eax, word [rax]	      6976	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d0f5	           0xfb7d0	                           movzx edx, ax	      6976	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d0f8	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6976	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d0fb	    0x8b0485000000	                  mov eax, dword [rax*4]	      6976	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d102	         0xfaf45d8	            imul eax, dword [rbp - 0x28]	      6976	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d106	            0x29c2	                            sub edx, eax	      6976	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d108	            0x89d0	                            mov eax, edx	      6976	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d10a	          0x8945e4	             mov dword [rbp - 0x1c], eax	      6976	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x400d10d	        0x837de400	               cmp dword [rbp - 0x1c], 0	      6981	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5	IF_17
0x400d111	            0x740a	                            je 0x400d11d	      6981	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5	IF_17
0x400d113	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6981	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5	IF_17
0x400d117	    0xc70001000000	                      mov dword [rax], 1	      6981	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5	IF_17
0x400d11d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      6985	decNumber.c	FUNCTION_12	ELSE_4
0x400d120	    0x69c09a190000	                   imul eax, eax, 0x199a	      6985	decNumber.c	FUNCTION_12	ELSE_4
0x400d126	          0xc1e810	                           shr eax, 0x10	      6985	decNumber.c	FUNCTION_12	ELSE_4
0x400d129	          0x8945e8	             mov dword [rbp - 0x18], eax	      6985	decNumber.c	FUNCTION_12	ELSE_4
0x400d12c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6987	decNumber.c	FUNCTION_12	ELSE_4	CALL_1
0x400d12f	          0x8d1400	                    lea edx, [rax + rax]	      6987	decNumber.c	FUNCTION_12	ELSE_4	CALL_1
0x400d132	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6987	decNumber.c	FUNCTION_12	ELSE_4	CALL_1
0x400d135	          0xc1e003	                              shl eax, 3	      6987	decNumber.c	FUNCTION_12	ELSE_4	CALL_1
0x400d138	             0x1c2	                            add edx, eax	      6987	decNumber.c	FUNCTION_12	ELSE_4	CALL_1
0x400d13a	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      6987	decNumber.c	FUNCTION_12	ELSE_4	CALL_1
0x400d13d	            0x29d0	                            sub eax, edx	      6987	decNumber.c	FUNCTION_12	ELSE_4	CALL_1
0x400d13f	          0x8945ec	             mov dword [rbp - 0x14], eax	      6987	decNumber.c	FUNCTION_12	ELSE_4	CALL_1
0x400d142	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6988	decNumber.c	FUNCTION_12	ELSE_4
0x400d145	          0x8945d8	             mov dword [rbp - 0x28], eax	      6988	decNumber.c	FUNCTION_12	ELSE_4
0x400d148	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6995	decNumber.c	FUNCTION_12	ELSE_4
0x400d14c	            0x8b10	                    mov edx, dword [rax]	      6995	decNumber.c	FUNCTION_12	ELSE_4
0x400d14e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6995	decNumber.c	FUNCTION_12	ELSE_4
0x400d151	     0xfb680000000	                   movzx eax, byte [rax]	      6995	decNumber.c	FUNCTION_12	ELSE_4
0x400d158	           0xfb6c0	                           movzx eax, al	      6995	decNumber.c	FUNCTION_12	ELSE_4
0x400d15b	             0x1c2	                            add edx, eax	      6995	decNumber.c	FUNCTION_12	ELSE_4
0x400d15d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6995	decNumber.c	FUNCTION_12	ELSE_4
0x400d161	            0x8910	                    mov dword [rax], edx	      6995	decNumber.c	FUNCTION_12	ELSE_4
0x400d163	        0x8345e001	               add dword [rbp - 0x20], 1	      6996	decNumber.c	FUNCTION_12	ELSE_4
0x400d167	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7000	decNumber.c	FUNCTION_12	ELSE_4	IF_18
0x400d16b	            0x8b00	                    mov eax, dword [rax]	      7000	decNumber.c	FUNCTION_12	ELSE_4	IF_18
0x400d16d	            0x85c0	                           test eax, eax	      7000	decNumber.c	FUNCTION_12	ELSE_4	IF_18
0x400d16f	            0x7f19	                            jg 0x400d18a	      7000	decNumber.c	FUNCTION_12	ELSE_4	IF_18
0x400d171	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7001	decNumber.c	FUNCTION_12	ELSE_4	IF_18
0x400d175	    0x66c7400a0000	                 mov word [rax + 0xa], 0	      7001	decNumber.c	FUNCTION_12	ELSE_4	IF_18
0x400d17b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7002	decNumber.c	FUNCTION_12	ELSE_4	IF_18
0x400d17f	    0xc70001000000	                      mov dword [rax], 1	      7002	decNumber.c	FUNCTION_12	ELSE_4	IF_18
0x400d185	      0xe9d6000000	                           jmp 0x400d260	      7002	decNumber.c	FUNCTION_12	ELSE_4	IF_18
0x400d18a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7005	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6
0x400d18e	            0x8b00	                    mov eax, dword [rax]	      7005	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6
0x400d190	          0x8945d4	             mov dword [rbp - 0x2c], eax	      7005	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6
0x400d193	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7006	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6
0x400d197	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      7006	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6
0x400d19a	            0x8910	                    mov dword [rax], edx	      7006	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6
0x400d19c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7008	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1a0	        0x4883c00a	                            add rax, 0xa	      7008	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1a4	        0x488945f8	                mov qword [rbp - 8], rax	      7008	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1a8	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7009	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1ab	            0x89c2	                            mov edx, eax	      7009	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      7009	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1b1	          0x668910	                      mov word [rax], dx	      7009	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1b4	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      7010	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1b7	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7010	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1ba	             0x1d0	                            add eax, edx	      7010	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1bc	          0x83e803	                              sub eax, 3	      7010	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1bf	          0x8945d4	             mov dword [rbp - 0x2c], eax	      7010	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1c2	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      7011	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5	IF_19
0x400d1c6	     0xf8e90000000	                           jle 0x400d25c	      7011	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5	IF_19
0x400d1cc	      0x488345f002	               add qword [rbp - 0x10], 2	      7012	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7013	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1d5	           0xfb700	                   movzx eax, word [rax]	      7013	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1d8	           0xfb7c0	                           movzx eax, ax	      7013	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1db	          0x8945d8	             mov dword [rbp - 0x28], eax	      7013	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1de	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7015	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1e1	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      7015	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1e4	            0x89c1	                            mov ecx, eax	      7015	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1e6	            0xd3ea	                             shr edx, cl	      7015	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1e8	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7015	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1eb	    0x8b0485000000	                  mov eax, dword [rax*4]	      7015	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1f2	           0xfafc2	                           imul eax, edx	      7015	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1f5	          0xc1e811	                           shr eax, 0x11	      7015	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1f8	          0x8945d8	             mov dword [rbp - 0x28], eax	      7015	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1fb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7016	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d1ff	           0xfb700	                   movzx eax, word [rax]	      7016	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d202	           0xfb7d0	                           movzx edx, ax	      7016	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d205	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7016	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d208	    0x8b0485000000	                  mov eax, dword [rax*4]	      7016	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d20f	         0xfaf45d8	            imul eax, dword [rbp - 0x28]	      7016	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d213	            0x29c2	                            sub edx, eax	      7016	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d215	            0x89d0	                            mov eax, edx	      7016	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d217	          0x8945e4	             mov dword [rbp - 0x1c], eax	      7016	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d21a	        0x488b45f8	                mov rax, qword [rbp - 8]	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d21e	           0xfb710	                   movzx edx, word [rax]	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d221	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d224	            0x89c1	                            mov ecx, eax	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d226	      0xb803000000	                              mov eax, 3	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d22b	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d22e	            0x89c0	                            mov eax, eax	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d230	    0x8b0485000000	                  mov eax, dword [rax*4]	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d237	           0xfafc1	                           imul eax, ecx	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d23a	             0x1c2	                            add edx, eax	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d23c	        0x488b45f8	                mov rax, qword [rbp - 8]	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d240	          0x668910	                      mov word [rax], dx	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d243	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      7022	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d246	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      7022	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d249	          0x8945d4	             mov dword [rbp - 0x2c], eax	      7022	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d24c	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      7023	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5	IF_20
0x400d250	            0x7e0d	                           jle 0x400d25f	      7023	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5	IF_20
0x400d252	      0x488345f802	                  add qword [rbp - 8], 2	      7008	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d257	      0xe94cffffff	                           jmp 0x400d1a8	      7024	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x400d25c	              0x90	                                     nop	      7011	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5	IF_19
0x400d25d	            0xeb01	                           jmp 0x400d260	      7011	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5	IF_19
0x400d25f	              0x90	                                     nop	      7023	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5	IF_20
0x400d260	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7028	decNumber.c	FUNCTION_12	IF_21
0x400d264	            0x8b00	                    mov eax, dword [rax]	      7028	decNumber.c	FUNCTION_12	IF_21
0x400d266	            0x85c0	                           test eax, eax	      7028	decNumber.c	FUNCTION_12	IF_21
0x400d268	            0x7417	                            je 0x400d281	      7028	decNumber.c	FUNCTION_12	IF_21
0x400d26a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7028	decNumber.c	FUNCTION_12	IF_21
0x400d26e	            0x8b00	                    mov eax, dword [rax]	      7028	decNumber.c	FUNCTION_12	IF_21
0x400d270	          0x83c820	                            or eax, 0x20	      7028	decNumber.c	FUNCTION_12	IF_21
0x400d273	            0x89c2	                            mov edx, eax	      7028	decNumber.c	FUNCTION_12	IF_21
0x400d275	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7028	decNumber.c	FUNCTION_12	IF_21
0x400d279	            0x8910	                    mov dword [rax], edx	      7028	decNumber.c	FUNCTION_12	IF_21
0x400d27b	              0x90	                                     nop	      7029	decNumber.c	FUNCTION_12
0x400d27c	            0xeb03	                           jmp 0x400d281	      7029	decNumber.c	FUNCTION_12
0x400d27e	              0x90	                                     nop	      6906	decNumber.c	FUNCTION_12	IF_1
0x400d27f	            0xeb01	                           jmp 0x400d282	      6906	decNumber.c	FUNCTION_12	IF_1
0x400d281	              0x90	                                     nop	      7029	decNumber.c	FUNCTION_12
0x400d282	              0x5d	                                 pop rbp	      7030	decNumber.c	FUNCTION_12
0x400d283	              0xc3	                                     ret	      7030	decNumber.c	FUNCTION_12
decNumberReduce	SWITCH,0:IF,6:FOR,0:CALL,7:DO,1:ELSE,0:WHILE,0:functions,0	65
0x4003b87	              0x55	                                push rbp	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003b88	          0x4889e5	                            mov rbp, rsp	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003b8b	        0x4883ec40	                           sub rsp, 0x40	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003b8f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003b93	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003b97	        0x488955c8	             mov qword [rbp - 0x38], rdx	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003b9b	    0x64488b042528	                mov rax, qword fs:[0x28]	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003ba4	        0x488945f8	                mov qword [rbp - 8], rax	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003ba8	            0x31c0	                            xor eax, eax	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003baa	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      2317	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003bb1	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      2318	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003bb8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2339	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_3
0x4003bbc	         0xfb64008	               movzx eax, byte [rax + 8]	      2339	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_3
0x4003bc0	           0xfb6c0	                           movzx eax, al	      2339	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_3
0x4003bc3	          0x83e030	                           and eax, 0x30	      2339	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_3
0x4003bc6	            0x85c0	                           test eax, eax	      2339	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_3
0x4003bc8	            0x7425	                            je 0x4003bef	      2339	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_3
0x4003bca	        0x488d4dec	                   lea rcx, [rbp - 0x14]	      2340	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_4
0x4003bce	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2340	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_4
0x4003bd2	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      2340	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_4
0x4003bd6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2340	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_4
0x4003bda	          0x4989c8	                             mov r8, rcx	      2340	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_4
0x4003bdd	          0x4889d1	                            mov rcx, rdx	      2340	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_4
0x4003be0	      0xba00000000	                              mov edx, 0	      2340	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_4
0x4003be5	          0x4889c7	                            mov rdi, rax	      2340	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_4
0x4003be8	      0xe825a60000	                        call sym.decNaNs	      2340	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_4
0x4003bed	            0xeb58	                           jmp 0x4003c47	      2341	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5
0x4003bef	        0x488d7dec	                   lea rdi, [rbp - 0x14]	      2345	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_5
0x4003bf3	        0x488d4df0	                   lea rcx, [rbp - 0x10]	      2345	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_5
0x4003bf7	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2345	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_5
0x4003bfb	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      2345	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_5
0x4003bff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2345	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_5
0x4003c03	          0x4989f8	                             mov r8, rdi	      2345	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_5
0x4003c06	          0x4889c7	                            mov rdi, rax	      2345	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_5
0x4003c09	      0xe8b9910000	                     call sym.decCopyFit	      2345	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_5
0x4003c0e	        0x488d4dec	                   lea rcx, [rbp - 0x14]	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x4003c12	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x4003c16	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x4003c1a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x4003c1e	          0x4889c7	                            mov rdi, rax	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x4003c21	      0xe8d79a0000	                    call sym.decFinalize	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x4003c26	        0x488d55f4	                    lea rdx, [rbp - 0xc]	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x4003c2a	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x4003c2e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x4003c32	          0x4989d0	                             mov r8, rdx	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x4003c35	      0xb900000000	                              mov ecx, 0	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x4003c3a	      0xba01000000	                              mov edx, 1	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x4003c3f	          0x4889c7	                            mov rdi, rax	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x4003c42	      0xe81e8a0000	                        call sym.decTrim	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x4003c47	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4003c4a	            0x85c0	                           test eax, eax	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4003c4c	            0x7415	                            je 0x4003c63	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4003c4e	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4003c51	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4003c55	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4003c59	            0x89ce	                            mov esi, ecx	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4003c5b	          0x4889c7	                            mov rdi, rax	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4003c5e	      0xe8b5a70000	                      call sym.decStatus	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4003c63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2355	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003c67	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003c6b	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003c74	            0x7405	                            je 0x4003c7b	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003c76	      0xe800000000	                          call 0x4003c7b	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003c7b	              0xc9	                                   leave	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003c7c	              0xc3	                                     ret	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
decNumberIsNormal	SWITCH,0:IF,4:FOR,0:CALL,3:DO,0:ELSE,0:WHILE,0:functions,0	44
0x4006214	              0x55	                                push rbp	      3510	decNumber.c	FUNCTION_68	FUNCTION_58
0x4006215	          0x4889e5	                            mov rbp, rsp	      3510	decNumber.c	FUNCTION_68	FUNCTION_58
0x4006218	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3510	decNumber.c	FUNCTION_68	FUNCTION_58
0x400621c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3510	decNumber.c	FUNCTION_68	FUNCTION_58
0x4006220	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x4006224	         0xfb64008	               movzx eax, byte [rax + 8]	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x4006228	           0xfb6c0	                           movzx eax, al	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x400622b	          0x83e070	                           and eax, 0x70	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x400622e	            0x85c0	                           test eax, eax	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x4006230	            0x7407	                            je 0x4006239	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x4006232	      0xb800000000	                              mov eax, 0	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x4006237	            0xeb5e	                           jmp 0x4006297	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x4006239	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x400623d	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4006241	          0x6685c0	                             test ax, ax	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4006244	            0x7524	                           jne 0x400626a	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4006246	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x400624a	            0x8b00	                    mov eax, dword [rax]	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x400624c	          0x83f801	                              cmp eax, 1	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x400624f	            0x7519	                           jne 0x400626a	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4006251	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4006255	         0xfb64008	               movzx eax, byte [rax + 8]	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4006259	           0xfb6c0	                           movzx eax, al	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x400625c	          0x83e070	                           and eax, 0x70	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x400625f	            0x85c0	                           test eax, eax	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4006261	            0x7507	                           jne 0x400626a	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4006263	      0xb800000000	                              mov eax, 0	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4006268	            0xeb2d	                           jmp 0x4006297	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x400626a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3519	decNumber.c	FUNCTION_68	FUNCTION_58
0x400626e	          0x8b5004	                mov edx, dword [rax + 4]	      3519	decNumber.c	FUNCTION_68	FUNCTION_58
0x4006271	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3519	decNumber.c	FUNCTION_68	FUNCTION_58
0x4006275	            0x8b00	                    mov eax, dword [rax]	      3519	decNumber.c	FUNCTION_68	FUNCTION_58
0x4006277	             0x1d0	                            add eax, edx	      3519	decNumber.c	FUNCTION_68	FUNCTION_58
0x4006279	          0x83e801	                              sub eax, 1	      3519	decNumber.c	FUNCTION_68	FUNCTION_58
0x400627c	          0x8945fc	                mov dword [rbp - 4], eax	      3519	decNumber.c	FUNCTION_68	FUNCTION_58
0x400627f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x4006283	          0x8b4008	                mov eax, dword [rax + 8]	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x4006286	          0x3b45fc	                cmp eax, dword [rbp - 4]	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x4006289	            0x7e07	                           jle 0x4006292	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x400628b	      0xb800000000	                              mov eax, 0	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x4006290	            0xeb05	                           jmp 0x4006297	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x4006292	      0xb801000000	                              mov eax, 1	      3521	decNumber.c	FUNCTION_68	FUNCTION_58
0x4006297	              0x5d	                                 pop rbp	      3522	decNumber.c	FUNCTION_68	FUNCTION_58
0x4006298	              0xc3	                                     ret	      3522	decNumber.c	FUNCTION_68	FUNCTION_58
decLnOp	SWITCH,0:IF,29:FOR,1:CALL,41:DO,1:ELSE,3:WHILE,0:functions,32	578
0x400a8e1	              0x55	                                push rbp	      5582	decNumber.c	FUNCTION_68
0x400a8e2	          0x4889e5	                            mov rbp, rsp	      5582	decNumber.c	FUNCTION_68
0x400a8e5	    0x4881ec400100	                          sub rsp, 0x140	      5582	decNumber.c	FUNCTION_68
0x400a8ec	    0x4889bdd8feff	            mov qword [rbp - 0x128], rdi	      5582	decNumber.c	FUNCTION_68
0x400a8f3	    0x4889b5d0feff	            mov qword [rbp - 0x130], rsi	      5582	decNumber.c	FUNCTION_68
0x400a8fa	    0x488995c8feff	            mov qword [rbp - 0x138], rdx	      5582	decNumber.c	FUNCTION_68
0x400a901	    0x48898dc0feff	            mov qword [rbp - 0x140], rcx	      5582	decNumber.c	FUNCTION_68
0x400a908	    0x64488b042528	                mov rax, qword fs:[0x28]	      5582	decNumber.c	FUNCTION_68
0x400a911	        0x488945f8	                mov qword [rbp - 8], rax	      5582	decNumber.c	FUNCTION_68
0x400a915	            0x31c0	                            xor eax, eax	      5582	decNumber.c	FUNCTION_68
0x400a917	    0xc785e4feffff	              mov dword [rbp - 0x11c], 0	      5583	decNumber.c	
0x400a921	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	      5594	decNumber.c	
0x400a92c	        0x488d4580	                   lea rax, [rbp - 0x80]	      5595	decNumber.c	
0x400a930	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      5595	decNumber.c	
0x400a937	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      5597	decNumber.c	
0x400a942	        0x488d45b0	                   lea rax, [rbp - 0x50]	      5598	decNumber.c	
0x400a946	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      5598	decNumber.c	
0x400a94d	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5610	decNumber.c	DO_1	IF_2
0x400a954	         0xfb64008	               movzx eax, byte [rax + 8]	      5610	decNumber.c	DO_1	IF_2
0x400a958	           0xfb6c0	                           movzx eax, al	      5610	decNumber.c	DO_1	IF_2
0x400a95b	          0x83e070	                           and eax, 0x70	      5610	decNumber.c	DO_1	IF_2
0x400a95e	            0x85c0	                           test eax, eax	      5610	decNumber.c	DO_1	IF_2
0x400a960	     0xf8491000000	                            je 0x400a9f7	      5610	decNumber.c	DO_1	IF_2
0x400a966	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5611	decNumber.c	DO_1	IF_2	IF_3	CALL_4
0x400a96d	         0xfb64008	               movzx eax, byte [rax + 8]	      5611	decNumber.c	DO_1	IF_2	IF_3	CALL_4
0x400a971	           0xfb6c0	                           movzx eax, al	      5611	decNumber.c	DO_1	IF_2	IF_3	CALL_4
0x400a974	          0x83e040	                           and eax, 0x40	      5611	decNumber.c	DO_1	IF_2	IF_3	CALL_4
0x400a977	            0x85c0	                           test eax, eax	      5611	decNumber.c	DO_1	IF_2	IF_3	CALL_4
0x400a979	            0x7448	                            je 0x400a9c3	      5611	decNumber.c	DO_1	IF_2	IF_3	CALL_4
0x400a97b	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5612	decNumber.c	DO_1	IF_2	IF_3	IF_4	CALL_5
0x400a982	         0xfb64008	               movzx eax, byte [rax + 8]	      5612	decNumber.c	DO_1	IF_2	IF_3	IF_4	CALL_5
0x400a986	            0x84c0	                             test al, al	      5612	decNumber.c	DO_1	IF_2	IF_3	IF_4	CALL_5
0x400a988	            0x791b	                           jns 0x400a9a5	      5612	decNumber.c	DO_1	IF_2	IF_3	IF_4	CALL_5
0x400a98a	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      5613	decNumber.c	DO_1	IF_2	IF_3	IF_4
0x400a991	            0x8b00	                    mov eax, dword [rax]	      5613	decNumber.c	DO_1	IF_2	IF_3	IF_4
0x400a993	             0xc80	                             or al, 0x80	      5613	decNumber.c	DO_1	IF_2	IF_3	IF_4
0x400a995	            0x89c2	                            mov edx, eax	      5613	decNumber.c	DO_1	IF_2	IF_3	IF_4
0x400a997	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      5613	decNumber.c	DO_1	IF_2	IF_3	IF_4
0x400a99e	            0x8910	                    mov dword [rax], edx	      5613	decNumber.c	DO_1	IF_2	IF_3	IF_4
0x400a9a0	      0xe9da090000	                           jmp 0x400b37f	      5617	decNumber.c	DO_1	IF_2
0x400a9a5	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      5614	decNumber.c	DO_1	IF_2	IF_3	CALL_6
0x400a9ac	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5614	decNumber.c	DO_1	IF_2	IF_3	CALL_6
0x400a9b3	          0x4889d6	                            mov rsi, rdx	      5614	decNumber.c	DO_1	IF_2	IF_3	CALL_6
0x400a9b6	          0x4889c7	                            mov rdi, rax	      5614	decNumber.c	DO_1	IF_2	IF_3	CALL_6
0x400a9b9	      0xe800000000	                          call 0x400a9be	      5614	decNumber.c	DO_1	IF_2	IF_3	CALL_6
0x400a9be	      0xe9bc090000	                           jmp 0x400b37f	      5617	decNumber.c	DO_1	IF_2
0x400a9c3	    0x488b8dc0feff	            mov rcx, qword [rbp - 0x140]	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x400a9ca	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x400a9d1	    0x488bb5d0feff	            mov rsi, qword [rbp - 0x130]	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x400a9d8	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x400a9df	          0x4989c8	                             mov r8, rcx	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x400a9e2	          0x4889d1	                            mov rcx, rdx	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x400a9e5	      0xba00000000	                              mov edx, 0	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x400a9ea	          0x4889c7	                            mov rdi, rax	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x400a9ed	      0xe820380000	                        call sym.decNaNs	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x400a9f2	      0xe988090000	                           jmp 0x400b37f	      5617	decNumber.c	DO_1	IF_2
0x400a9f7	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400a9fe	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400aa02	          0x6685c0	                             test ax, ax	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400aa05	            0x7542	                           jne 0x400aa49	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400aa07	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400aa0e	            0x8b00	                    mov eax, dword [rax]	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400aa10	          0x83f801	                              cmp eax, 1	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400aa13	            0x7534	                           jne 0x400aa49	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400aa15	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400aa1c	         0xfb64008	               movzx eax, byte [rax + 8]	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400aa20	           0xfb6c0	                           movzx eax, al	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400aa23	          0x83e070	                           and eax, 0x70	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400aa26	            0x85c0	                           test eax, eax	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400aa28	            0x751f	                           jne 0x400aa49	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400aa2a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5620	decNumber.c	DO_1	IF_5	CALL_9
0x400aa31	          0x4889c7	                            mov rdi, rax	      5620	decNumber.c	DO_1	IF_5	CALL_9
0x400aa34	      0xe800000000	                          call 0x400aa39	      5620	decNumber.c	DO_1	IF_5	CALL_9
0x400aa39	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5621	decNumber.c	DO_1	IF_5
0x400aa40	        0xc64008c0	                mov byte [rax + 8], 0xc0	      5621	decNumber.c	DO_1	IF_5
0x400aa44	      0xe936090000	                           jmp 0x400b37f	      5622	decNumber.c	DO_1	IF_5
0x400aa49	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5625	decNumber.c	DO_1	IF_6	CALL_10
0x400aa50	         0xfb64008	               movzx eax, byte [rax + 8]	      5625	decNumber.c	DO_1	IF_6	CALL_10
0x400aa54	            0x84c0	                             test al, al	      5625	decNumber.c	DO_1	IF_6	CALL_10
0x400aa56	            0x791b	                           jns 0x400aa73	      5625	decNumber.c	DO_1	IF_6	CALL_10
0x400aa58	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      5626	decNumber.c	DO_1	IF_6
0x400aa5f	            0x8b00	                    mov eax, dword [rax]	      5626	decNumber.c	DO_1	IF_6
0x400aa61	             0xc80	                             or al, 0x80	      5626	decNumber.c	DO_1	IF_6
0x400aa63	            0x89c2	                            mov edx, eax	      5626	decNumber.c	DO_1	IF_6
0x400aa65	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      5626	decNumber.c	DO_1	IF_6
0x400aa6c	            0x8910	                    mov dword [rax], edx	      5626	decNumber.c	DO_1	IF_6
0x400aa6e	      0xe90c090000	                           jmp 0x400b37f	      5627	decNumber.c	DO_1	IF_6
0x400aa73	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5632	decNumber.c	DO_1	IF_7
0x400aa7a	          0x8b4004	                mov eax, dword [rax + 4]	      5632	decNumber.c	DO_1	IF_7
0x400aa7d	            0x85c0	                           test eax, eax	      5632	decNumber.c	DO_1	IF_7
0x400aa7f	     0xf853e010000	                           jne 0x400abc3	      5632	decNumber.c	DO_1	IF_7
0x400aa85	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      5632	decNumber.c	DO_1	IF_7
0x400aa8c	            0x8b00	                    mov eax, dword [rax]	      5632	decNumber.c	DO_1	IF_7
0x400aa8e	          0x83f828	                           cmp eax, 0x28	      5632	decNumber.c	DO_1	IF_7
0x400aa91	     0xf8f2c010000	                            jg 0x400abc3	      5632	decNumber.c	DO_1	IF_7
0x400aa97	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aa9e	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aaa2	        0x6683f80a	                             cmp ax, 0xa	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aaa6	     0xf8581000000	                           jne 0x400ab2d	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aaac	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aab3	            0x8b00	                    mov eax, dword [rax]	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aab5	          0x83f802	                              cmp eax, 2	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aab8	            0x7573	                           jne 0x400ab2d	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aaba	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aac1	          0x488b10	                    mov rdx, qword [rax]	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aac4	    0x48899520ffff	             mov qword [rbp - 0xe0], rdx	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aacb	        0x488b5008	                mov rdx, qword [rax + 8]	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aacf	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aad6	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aada	    0x48899530ffff	             mov qword [rbp - 0xd0], rdx	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aae1	          0x8b4018	            mov eax, dword [rax + 0x18] 	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aae4	    0x898538ffffff	             mov dword [rbp - 0xc8], eax	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aaea	    0xc7852cffffff	               mov dword [rbp - 0xd4], 3	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400aaf4	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	      5640	decNumber.c	DO_1	IF_7	IF_8	IF_9	CALL_11
0x400aafb	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5640	decNumber.c	DO_1	IF_7	IF_8	IF_9	CALL_11
0x400ab02	      0xbe00000000	                              mov esi, 0	      5640	decNumber.c	DO_1	IF_7	IF_8	IF_9	CALL_11
0x400ab07	          0x4889c7	                            mov rdi, rax	      5640	decNumber.c	DO_1	IF_7	IF_8	IF_9	CALL_11
0x400ab0a	      0xe800000000	                          call 0x400ab0f	      5640	decNumber.c	DO_1	IF_7	IF_8	IF_9	CALL_11
0x400ab0f	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      5641	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400ab16	            0x8b00	                    mov eax, dword [rax]	      5641	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400ab18	       0xd20080000	                           or eax, 0x820	      5641	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400ab1d	            0x89c2	                            mov edx, eax	      5641	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400ab1f	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      5641	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400ab26	            0x8910	                    mov dword [rax], edx	      5641	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400ab28	      0xe952080000	                           jmp 0x400b37f	      5642	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400ab2d	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab34	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab38	        0x6683f802	                               cmp ax, 2	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab3c	     0xf8581000000	                           jne 0x400abc3	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab42	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab49	            0x8b00	                    mov eax, dword [rax]	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab4b	          0x83f801	                              cmp eax, 1	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab4e	            0x7573	                           jne 0x400abc3	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab50	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab57	          0x488b10	                    mov rdx, qword [rax]	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab5a	    0x48899520ffff	             mov qword [rbp - 0xe0], rdx	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab61	        0x488b5008	                mov rdx, qword [rax + 8]	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab65	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab6c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab70	    0x48899530ffff	             mov qword [rbp - 0xd0], rdx	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab77	          0x8b4018	            mov eax, dword [rax + 0x18] 	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab7a	    0x898538ffffff	             mov dword [rbp - 0xc8], eax	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab80	    0xc7852cffffff	               mov dword [rbp - 0xd4], 3	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400ab8a	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	      5646	decNumber.c	DO_1	IF_7	IF_8	IF_10	CALL_12
0x400ab91	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5646	decNumber.c	DO_1	IF_7	IF_8	IF_10	CALL_12
0x400ab98	      0xbe00000000	                              mov esi, 0	      5646	decNumber.c	DO_1	IF_7	IF_8	IF_10	CALL_12
0x400ab9d	          0x4889c7	                            mov rdi, rax	      5646	decNumber.c	DO_1	IF_7	IF_8	IF_10	CALL_12
0x400aba0	      0xe800000000	                          call 0x400aba5	      5646	decNumber.c	DO_1	IF_7	IF_8	IF_10	CALL_12
0x400aba5	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      5647	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400abac	            0x8b00	                    mov eax, dword [rax]	      5647	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400abae	       0xd20080000	                           or eax, 0x820	      5647	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400abb3	            0x89c2	                            mov edx, eax	      5647	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400abb5	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      5647	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400abbc	            0x8910	                    mov dword [rax], edx	      5647	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400abbe	      0xe9bc070000	                           jmp 0x400b37f	      5648	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400abc3	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400abca	            0x8b10	                    mov edx, dword [rax]	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400abcc	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400abd3	            0x8b00	                    mov eax, dword [rax]	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400abd5	      0xb907000000	                              mov ecx, 7	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400abda	          0x83f807	                              cmp eax, 7	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400abdd	           0xf4cc1	                          cmovl eax, ecx	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400abe0	            0x39c2	                            cmp edx, eax	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400abe2	           0xf4dc2	                         cmovge eax, edx	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400abe5	          0x83c002	                              add eax, 2	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400abe8	    0x8985f4feffff	            mov dword [rbp - 0x10c], eax	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400abee	    0x83bdf4feffff	          cmp dword [rbp - 0x10c], 0x31 	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400abf5	            0x7f2c	                            jg 0x400ac23	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400abf7	      0xb810000000	                           mov eax, 0x10	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400abfc	    0x83bdf4feffff	          cmp dword [rbp - 0x10c], 0x10 	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac03	     0xf4d85f4feff	         cmovge eax, dword [rbp - 0x10c]	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac0a	            0x4898	                                    cdqe	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac0c	     0xfb680000000	                   movzx eax, byte [rax]	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac13	           0xfb6c0	                           movzx eax, al	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac16	          0x83e801	                              sub eax, 1	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac19	            0x4898	                                    cdqe	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac1b	        0x4883c006	                              add rax, 6	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac1f	             0x1c0	                            add eax, eax	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac21	            0xeb33	                           jmp 0x400ac56	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac23	      0xb810000000	                           mov eax, 0x10	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac28	    0x83bdf4feffff	          cmp dword [rbp - 0x10c], 0x10 	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac2f	     0xf4d85f4feff	         cmovge eax, dword [rbp - 0x10c]	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac36	          0x8d4802	                      lea ecx, [rax + 2]	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac39	      0xba56555555	                     mov edx, 0x55555556	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac3e	            0x89c8	                            mov eax, ecx	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac40	            0xf7ea	                                imul edx	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac42	            0x89c8	                            mov eax, ecx	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac44	          0xc1f81f	                           sar eax, 0x1f	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac47	            0x29c2	                            sub edx, eax	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac49	            0x89d0	                            mov eax, edx	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac4b	          0x83e801	                              sub eax, 1	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac4e	            0x4898	                                    cdqe	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac50	        0x4883c006	                              add rax, 6	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac54	             0x1c0	                            add eax, eax	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac56	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ac5c	    0x83bdf8feffff	          cmp dword [rbp - 0x108], 0x30 	      5665	decNumber.c	DO_1	IF_7	IF_11
0x400ac63	            0x7649	                           jbe 0x400acae	      5665	decNumber.c	DO_1	IF_7	IF_11
0x400ac65	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5666	decNumber.c	DO_1	IF_7	IF_11
0x400ac6b	          0x4889c7	                            mov rdi, rax	      5666	decNumber.c	DO_1	IF_7	IF_11
0x400ac6e	      0xe800000000	                          call 0x400ac73	      5666	decNumber.c	DO_1	IF_7	IF_11
0x400ac73	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      5666	decNumber.c	DO_1	IF_7	IF_11
0x400ac7a	    0x4883bd00ffff	              cmp qword [rbp - 0x100], 0	      5667	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x400ac82	            0x751c	                           jne 0x400aca0	      5667	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x400ac84	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      5668	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x400ac8b	            0x8b00	                    mov eax, dword [rax]	      5668	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x400ac8d	          0x83c810	                            or eax, 0x10	      5668	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x400ac90	            0x89c2	                            mov edx, eax	      5668	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x400ac92	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      5668	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x400ac99	            0x8910	                    mov dword [rax], edx	      5668	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x400ac9b	      0xe9df060000	                           jmp 0x400b37f	      5669	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x400aca0	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      5670	decNumber.c	DO_1	IF_7	IF_11
0x400aca7	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      5670	decNumber.c	DO_1	IF_7	IF_11
0x400acae	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5672	decNumber.c	DO_1	IF_7
0x400acb5	            0x8b10	                    mov edx, dword [rax]	      5672	decNumber.c	DO_1	IF_7
0x400acb7	    0x8b85f4feffff	            mov eax, dword [rbp - 0x10c]	      5672	decNumber.c	DO_1	IF_7
0x400acbd	             0x1d0	                            add eax, edx	      5672	decNumber.c	DO_1	IF_7
0x400acbf	    0x8985ecfeffff	            mov dword [rbp - 0x114], eax	      5672	decNumber.c	DO_1	IF_7
0x400acc5	    0x83bdecfeffff	          cmp dword [rbp - 0x114], 0x31 	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400accc	            0x7f2c	                            jg 0x400acfa	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400acce	      0xb810000000	                           mov eax, 0x10	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400acd3	    0x83bdecfeffff	          cmp dword [rbp - 0x114], 0x10 	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400acda	     0xf4d85ecfeff	         cmovge eax, dword [rbp - 0x114]	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ace1	            0x4898	                                    cdqe	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ace3	     0xfb680000000	                   movzx eax, byte [rax]	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400acea	           0xfb6c0	                           movzx eax, al	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400aced	          0x83e801	                              sub eax, 1	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400acf0	            0x4898	                                    cdqe	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400acf2	        0x4883c006	                              add rax, 6	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400acf6	             0x1c0	                            add eax, eax	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400acf8	            0xeb33	                           jmp 0x400ad2d	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400acfa	      0xb810000000	                           mov eax, 0x10	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400acff	    0x83bdecfeffff	          cmp dword [rbp - 0x114], 0x10 	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ad06	     0xf4d85ecfeff	         cmovge eax, dword [rbp - 0x114]	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ad0d	          0x8d4802	                      lea ecx, [rax + 2]	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ad10	      0xba56555555	                     mov edx, 0x55555556	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ad15	            0x89c8	                            mov eax, ecx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ad17	            0xf7ea	                                imul edx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ad19	            0x89c8	                            mov eax, ecx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ad1b	          0xc1f81f	                           sar eax, 0x1f	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ad1e	            0x29c2	                            sub edx, eax	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ad20	            0x89d0	                            mov eax, edx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ad22	          0x83e801	                              sub eax, 1	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ad25	            0x4898	                                    cdqe	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ad27	        0x4883c006	                              add rax, 6	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ad2b	             0x1c0	                            add eax, eax	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ad2d	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ad33	    0x83bdf8feffff	          cmp dword [rbp - 0x108], 0x3c 	      5674	decNumber.c	DO_1	IF_7	IF_13
0x400ad3a	            0x7649	                           jbe 0x400ad85	      5674	decNumber.c	DO_1	IF_7	IF_13
0x400ad3c	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5675	decNumber.c	DO_1	IF_7	IF_13
0x400ad42	          0x4889c7	                            mov rdi, rax	      5675	decNumber.c	DO_1	IF_7	IF_13
0x400ad45	      0xe800000000	                          call 0x400ad4a	      5675	decNumber.c	DO_1	IF_7	IF_13
0x400ad4a	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      5675	decNumber.c	DO_1	IF_7	IF_13
0x400ad51	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      5676	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x400ad59	            0x751c	                           jne 0x400ad77	      5676	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x400ad5b	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      5677	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x400ad62	            0x8b00	                    mov eax, dword [rax]	      5677	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x400ad64	          0x83c810	                            or eax, 0x10	      5677	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x400ad67	            0x89c2	                            mov edx, eax	      5677	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x400ad69	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      5677	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x400ad70	            0x8910	                    mov dword [rax], edx	      5677	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x400ad72	      0xe908060000	                           jmp 0x400b37f	      5678	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x400ad77	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5679	decNumber.c	DO_1	IF_7	IF_13
0x400ad7e	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      5679	decNumber.c	DO_1	IF_7	IF_13
0x400ad85	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5691	decNumber.c	DO_1	IF_7	CALL_19
0x400ad8c	      0xbe40000000	                           mov esi, 0x40	      5691	decNumber.c	DO_1	IF_7	CALL_19
0x400ad91	          0x4889c7	                            mov rdi, rax	      5691	decNumber.c	DO_1	IF_7	CALL_19
0x400ad94	      0xe800000000	                          call 0x400ad99	      5691	decNumber.c	DO_1	IF_7	CALL_19
0x400ad99	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5692	decNumber.c	DO_1	IF_7
0x400ada0	          0x8b5004	                mov edx, dword [rax + 4]	      5692	decNumber.c	DO_1	IF_7
0x400ada3	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5692	decNumber.c	DO_1	IF_7
0x400adaa	            0x8b00	                    mov eax, dword [rax]	      5692	decNumber.c	DO_1	IF_7
0x400adac	             0x1d0	                            add eax, edx	      5692	decNumber.c	DO_1	IF_7
0x400adae	    0x8985fcfeffff	            mov dword [rbp - 0x104], eax	      5692	decNumber.c	DO_1	IF_7
0x400adb4	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      5693	decNumber.c	DO_1	IF_7	CALL_20
0x400adba	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5693	decNumber.c	DO_1	IF_7	CALL_20
0x400adc1	            0x89d6	                            mov esi, edx	      5693	decNumber.c	DO_1	IF_7	CALL_20
0x400adc3	          0x4889c7	                            mov rdi, rax	      5693	decNumber.c	DO_1	IF_7	CALL_20
0x400adc6	      0xe800000000	                          call 0x400adcb	      5693	decNumber.c	DO_1	IF_7	CALL_20
0x400adcb	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5694	decNumber.c	DO_1	IF_7	CALL_21
0x400add2	      0xbe79222300	                       mov esi, 0x232279	      5694	decNumber.c	DO_1	IF_7	CALL_21
0x400add7	          0x4889c7	                            mov rdi, rax	      5694	decNumber.c	DO_1	IF_7	CALL_21
0x400adda	      0xe800000000	                          call 0x400addf	      5694	decNumber.c	DO_1	IF_7	CALL_21
0x400addf	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5695	decNumber.c	DO_1	IF_7
0x400ade6	    0xc74004faffff	        mov dword [rax + 4], 0xfffffffa 	      5695	decNumber.c	DO_1	IF_7
0x400aded	    0x488dbde4feff	                  lea rdi, [rbp - 0x11c]	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x400adf4	    0x488d8d20ffff	                   lea rcx, [rbp - 0xe0]	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x400adfb	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x400ae02	    0x488bb508ffff	             mov rsi, qword [rbp - 0xf8]	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x400ae09	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x400ae10	          0x4989f8	                             mov r8, rdi	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x400ae13	          0x4889c7	                            mov rdi, rax	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x400ae16	      0xe8e6e2ffff	                  call sym.decMultiplyOp	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x400ae1b	    0xc785e8feffff	              mov dword [rbp - 0x118], 0	      5699	decNumber.c	DO_1	IF_7
0x400ae25	    0xc78520ffffff	               mov dword [rbp - 0xe0], 2	      5700	decNumber.c	DO_1	IF_7
0x400ae2f	    0xc7852cffffff	               mov dword [rbp - 0xd4], 5	      5700	decNumber.c	DO_1	IF_7
0x400ae39	    0x488dbde4feff	                  lea rdi, [rbp - 0x11c]	      5701	decNumber.c	DO_1	IF_7	CALL_23
0x400ae40	    0x488d8de8feff	                  lea rcx, [rbp - 0x118]	      5701	decNumber.c	DO_1	IF_7	CALL_23
0x400ae47	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	      5701	decNumber.c	DO_1	IF_7	CALL_23
0x400ae4e	    0x488bb5d0feff	            mov rsi, qword [rbp - 0x130]	      5701	decNumber.c	DO_1	IF_7	CALL_23
0x400ae55	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5701	decNumber.c	DO_1	IF_7	CALL_23
0x400ae5c	          0x4989f8	                             mov r8, rdi	      5701	decNumber.c	DO_1	IF_7	CALL_23
0x400ae5f	          0x4889c7	                            mov rdi, rax	      5701	decNumber.c	DO_1	IF_7	CALL_23
0x400ae62	      0xe8601f0000	                     call sym.decCopyFit	      5701	decNumber.c	DO_1	IF_7	CALL_23
0x400ae67	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5702	decNumber.c	DO_1	IF_7
0x400ae6e	    0xc74004000000	                  mov dword [rax + 4], 0	      5702	decNumber.c	DO_1	IF_7
0x400ae75	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5703	decNumber.c	DO_1	IF_7	CALL_24
0x400ae7c	          0x4889c7	                            mov rdi, rax	      5703	decNumber.c	DO_1	IF_7	CALL_24
0x400ae7f	      0xe8952f0000	                      call sym.decGetInt	      5703	decNumber.c	DO_1	IF_7	CALL_24
0x400ae84	    0x8985f0feffff	            mov dword [rbp - 0x110], eax	      5703	decNumber.c	DO_1	IF_7	CALL_24
0x400ae8a	    0x83bdf0feffff	              cmp dword [rbp - 0x110], 9	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x400ae91	            0x7f1a	                            jg 0x400aead	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x400ae93	    0x8b85f0feffff	            mov eax, dword [rbp - 0x110]	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x400ae99	          0x8d1400	                    lea edx, [rax + rax]	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x400ae9c	    0x8b85f0feffff	            mov eax, dword [rbp - 0x110]	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x400aea2	          0xc1e003	                              shl eax, 3	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x400aea5	             0x1d0	                            add eax, edx	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x400aea7	    0x8985f0feffff	            mov dword [rbp - 0x110], eax	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x400aead	    0x8b85f0feffff	            mov eax, dword [rbp - 0x110]	      5705	decNumber.c	DO_1	IF_7
0x400aeb3	          0x83e80a	                            sub eax, 0xa	      5705	decNumber.c	DO_1	IF_7
0x400aeb6	            0x4898	                                    cdqe	      5705	decNumber.c	DO_1	IF_7
0x400aeb8	     0xfb784000000	             movzx eax, word [rax + rax]	      5705	decNumber.c	DO_1	IF_7
0x400aec0	           0xfb7c0	                           movzx eax, ax	      5705	decNumber.c	DO_1	IF_7
0x400aec3	    0x8985f0feffff	            mov dword [rbp - 0x110], eax	      5705	decNumber.c	DO_1	IF_7
0x400aec9	    0x8b85f0feffff	            mov eax, dword [rbp - 0x110]	      5706	decNumber.c	DO_1	IF_7	CALL_26
0x400aecf	          0xc1f802	                              sar eax, 2	      5706	decNumber.c	DO_1	IF_7	CALL_26
0x400aed2	            0x89c2	                            mov edx, eax	      5706	decNumber.c	DO_1	IF_7	CALL_26
0x400aed4	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5706	decNumber.c	DO_1	IF_7	CALL_26
0x400aedb	            0x89d6	                            mov esi, edx	      5706	decNumber.c	DO_1	IF_7	CALL_26
0x400aedd	          0x4889c7	                            mov rdi, rax	      5706	decNumber.c	DO_1	IF_7	CALL_26
0x400aee0	      0xe800000000	                          call 0x400aee5	      5706	decNumber.c	DO_1	IF_7	CALL_26
0x400aee5	    0x8b85f0feffff	            mov eax, dword [rbp - 0x110]	      5707	decNumber.c	DO_1	IF_7
0x400aeeb	          0x83e003	                              and eax, 3	      5707	decNumber.c	DO_1	IF_7
0x400aeee	      0xbafdffffff	                     mov edx, 0xfffffffd	      5707	decNumber.c	DO_1	IF_7
0x400aef3	            0x29c2	                            sub edx, eax	      5707	decNumber.c	DO_1	IF_7
0x400aef5	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5707	decNumber.c	DO_1	IF_7
0x400aefc	          0x895004	                mov dword [rax + 4], edx	      5707	decNumber.c	DO_1	IF_7
0x400aeff	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5708	decNumber.c	DO_1	IF_7
0x400af06	        0xc6400880	                mov byte [rax + 8], 0x80	      5708	decNumber.c	DO_1	IF_7
0x400af0a	    0xc78520ffffff	           mov dword [rbp - 0xe0], 0x10 	      5709	decNumber.c	DO_1	IF_7
0x400af14	    0xc7852cffffff	               mov dword [rbp - 0xd4], 3	      5709	decNumber.c	DO_1	IF_7
0x400af1e	    0x488dbde4feff	                  lea rdi, [rbp - 0x11c]	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400af25	    0x488d8d20ffff	                   lea rcx, [rbp - 0xe0]	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400af2c	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400af33	    0x488bb508ffff	             mov rsi, qword [rbp - 0xf8]	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400af3a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400af41	          0x4989f9	                             mov r9, rdi	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400af44	    0x41b800000000	                              mov r8d, 0	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400af4a	          0x4889c7	                            mov rdi, rax	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400af4d	      0xe8e7bcffff	                       call sym.decAddOp	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400af52	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      5715	decNumber.c	DO_1	IF_7	CALL_28
0x400af59	          0x4889c7	                            mov rdi, rax	      5715	decNumber.c	DO_1	IF_7	CALL_28
0x400af5c	      0xe800000000	                          call 0x400af61	      5715	decNumber.c	DO_1	IF_7	CALL_28
0x400af61	    0x66c7856affff	                mov word [rbp - 0x96], 1	      5715	decNumber.c	DO_1	IF_7	CALL_28
0x400af6a	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      5719	decNumber.c	DO_1	IF_7
0x400af71	          0x8b4004	                mov eax, dword [rax + 4]	      5719	decNumber.c	DO_1	IF_7
0x400af74	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      5719	decNumber.c	DO_1	IF_7
0x400af7a	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      5720	decNumber.c	DO_1	IF_7
0x400af81	          0x8b4008	                mov eax, dword [rax + 8]	      5720	decNumber.c	DO_1	IF_7
0x400af84	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      5720	decNumber.c	DO_1	IF_7
0x400af8a	    0xc68538ffffff	                mov byte [rbp - 0xc8], 0	      5721	decNumber.c	DO_1	IF_7
0x400af91	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      5723	decNumber.c	DO_1	IF_7
0x400af98	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      5723	decNumber.c	DO_1	IF_7
0x400af9f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5723	decNumber.c	DO_1	IF_7
0x400afa6	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5723	decNumber.c	DO_1	IF_7
0x400afad	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5723	decNumber.c	DO_1	IF_7
0x400afb4	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      5723	decNumber.c	DO_1	IF_7
0x400afbb	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	      5723	decNumber.c	DO_1	IF_7
0x400afc1	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      5723	decNumber.c	DO_1	IF_7
0x400afc7	    0xc78544ffffff	        mov dword [rbp - 0xbc], 0x1e847e	      5724	decNumber.c	DO_1	IF_7
0x400afd1	    0xc78548ffffff	      mov dword [rbp - 0xb8], 0xffe17b82	      5725	decNumber.c	DO_1	IF_7
0x400afdb	    0xc785ecfeffff	              mov dword [rbp - 0x114], 9	      5729	decNumber.c	DO_1	IF_7
0x400afe5	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      5732	decNumber.c	DO_1	IF_7
0x400afeb	    0x898520ffffff	             mov dword [rbp - 0xe0], eax	      5732	decNumber.c	DO_1	IF_7
0x400aff1	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5733	decNumber.c	DO_1	IF_7
0x400aff8	            0x8b10	                    mov edx, dword [rax]	      5733	decNumber.c	DO_1	IF_7
0x400affa	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      5733	decNumber.c	DO_1	IF_7
0x400b000	             0x1d0	                            add eax, edx	      5733	decNumber.c	DO_1	IF_7
0x400b002	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      5733	decNumber.c	DO_1	IF_7
0x400b008	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5744	decNumber.c	DO_1	IF_7	FOR_1
0x400b00f	         0xfb64008	               movzx eax, byte [rax + 8]	      5744	decNumber.c	DO_1	IF_7	FOR_1
0x400b013	          0x83f080	                     xor eax, 0xffffff80	      5744	decNumber.c	DO_1	IF_7	FOR_1
0x400b016	            0x89c2	                            mov edx, eax	      5744	decNumber.c	DO_1	IF_7	FOR_1
0x400b018	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5744	decNumber.c	DO_1	IF_7	FOR_1
0x400b01f	          0x885008	                  mov byte [rax + 8], dl	      5744	decNumber.c	DO_1	IF_7	FOR_1
0x400b022	    0x488d8de4feff	                  lea rcx, [rbp - 0x11c]	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x400b029	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x400b030	    0x488bb508ffff	             mov rsi, qword [rbp - 0xf8]	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x400b037	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x400b03e	          0x4889c7	                            mov rdi, rax	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x400b041	      0xe8cfedffff	                       call sym.decExpOp	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x400b046	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5746	decNumber.c	DO_1	IF_7	FOR_1
0x400b04d	         0xfb64008	               movzx eax, byte [rax + 8]	      5746	decNumber.c	DO_1	IF_7	FOR_1
0x400b051	          0x83f080	                     xor eax, 0xffffff80	      5746	decNumber.c	DO_1	IF_7	FOR_1
0x400b054	            0x89c2	                            mov edx, eax	      5746	decNumber.c	DO_1	IF_7	FOR_1
0x400b056	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5746	decNumber.c	DO_1	IF_7	FOR_1
0x400b05d	          0x885008	                  mov byte [rax + 8], dl	      5746	decNumber.c	DO_1	IF_7	FOR_1
0x400b060	    0x488dbde4feff	                  lea rdi, [rbp - 0x11c]	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x400b067	    0x488d8d40ffff	                   lea rcx, [rbp - 0xc0]	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x400b06e	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x400b075	    0x488bb518ffff	             mov rsi, qword [rbp - 0xe8]	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x400b07c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x400b083	          0x4989f8	                             mov r8, rdi	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x400b086	          0x4889c7	                            mov rdi, rax	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x400b089	      0xe873e0ffff	                  call sym.decMultiplyOp	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x400b08e	    0x488dbde4feff	                  lea rdi, [rbp - 0x11c]	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x400b095	    0x488d8d40ffff	                   lea rcx, [rbp - 0xc0]	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x400b09c	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x400b0a3	    0x488bb518ffff	             mov rsi, qword [rbp - 0xe8]	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x400b0aa	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x400b0b1	          0x4989f9	                             mov r9, rdi	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x400b0b4	    0x41b880000000	                           mov r8d, 0x80	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x400b0ba	          0x4889c7	                            mov rdi, rax	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x400b0bd	      0xe877bbffff	                       call sym.decAddOp	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x400b0c2	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400b0c9	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400b0cd	          0x6685c0	                             test ax, ax	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400b0d0	            0x7523	                           jne 0x400b0f5	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400b0d2	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400b0d9	            0x8b00	                    mov eax, dword [rax]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400b0db	          0x83f801	                              cmp eax, 1	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400b0de	            0x7515	                           jne 0x400b0f5	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400b0e0	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400b0e7	         0xfb64008	               movzx eax, byte [rax + 8]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400b0eb	           0xfb6c0	                           movzx eax, al	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400b0ee	          0x83e070	                           and eax, 0x70	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400b0f1	            0x85c0	                           test eax, eax	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400b0f3	            0x7441	                            je 0x400b136	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400b0f5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5760	decNumber.c	DO_1	IF_7	FOR_1	IF_17
0x400b0fc	            0x8b10	                    mov edx, dword [rax]	      5760	decNumber.c	DO_1	IF_7	FOR_1	IF_17
0x400b0fe	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5760	decNumber.c	DO_1	IF_7	FOR_1	IF_17
0x400b105	          0x8b4004	                mov eax, dword [rax + 4]	      5760	decNumber.c	DO_1	IF_7	FOR_1	IF_17
0x400b108	          0x8d0c02	                    lea ecx, [rdx + rax]	      5760	decNumber.c	DO_1	IF_7	FOR_1	IF_17
0x400b10b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5760	decNumber.c	DO_1	IF_7	FOR_1	IF_17
0x400b112	            0x8b10	                    mov edx, dword [rax]	      5760	decNumber.c	DO_1	IF_7	FOR_1	IF_17
0x400b114	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5760	decNumber.c	DO_1	IF_7	FOR_1	IF_17
0x400b11b	          0x8b4004	                mov eax, dword [rax + 4]	      5760	decNumber.c	DO_1	IF_7	FOR_1	IF_17
0x400b11e	             0x1c2	                            add edx, eax	      5760	decNumber.c	DO_1	IF_7	FOR_1	IF_17
0x400b120	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      5760	decNumber.c	DO_1	IF_7	FOR_1	IF_17
0x400b127	            0x8b00	                    mov eax, dword [rax]	      5760	decNumber.c	DO_1	IF_7	FOR_1	IF_17
0x400b129	             0x1d0	                            add eax, edx	      5760	decNumber.c	DO_1	IF_7	FOR_1	IF_17
0x400b12b	          0x83c001	                              add eax, 1	      5760	decNumber.c	DO_1	IF_7	FOR_1	IF_17
0x400b12e	            0x39c1	                            cmp ecx, eax	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400b130	     0xf8c10010000	                            jl 0x400b246	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400b136	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5761	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_18
0x400b13d	            0x8b00	                    mov eax, dword [rax]	      5761	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_18
0x400b13f	    0x3b85f4feffff	            cmp eax, dword [rbp - 0x10c]	      5761	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_18
0x400b145	     0xf848b010000	                            je 0x400b2d6	      5761	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_18
0x400b14b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400b152	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400b156	          0x6685c0	                             test ax, ax	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400b159	     0xf8598000000	                           jne 0x400b1f7	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400b15f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400b166	            0x8b00	                    mov eax, dword [rax]	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400b168	          0x83f801	                              cmp eax, 1	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400b16b	     0xf8586000000	                           jne 0x400b1f7	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400b171	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400b178	         0xfb64008	               movzx eax, byte [rax + 8]	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400b17c	           0xfb6c0	                           movzx eax, al	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400b17f	          0x83e070	                           and eax, 0x70	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400b182	            0x85c0	                           test eax, eax	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400b184	            0x7571	                           jne 0x400b1f7	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400b186	    0x488dbde4feff	                  lea rdi, [rbp - 0x11c]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x400b18d	    0x488d8d20ffff	                   lea rcx, [rbp - 0xe0]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x400b194	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x400b19b	    0x488bb5d0feff	            mov rsi, qword [rbp - 0x130]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x400b1a2	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x400b1a9	          0x4989f9	                             mov r9, rdi	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x400b1ac	    0x41b801000000	                              mov r8d, 1	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x400b1b2	          0x4889c7	                            mov rdi, rax	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x400b1b5	      0xe89f050000	                   call sym.decCompareOp	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x400b1ba	     0xfb7857affff	            movzx eax, word [rbp - 0x86]	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x400b1c1	          0x6685c0	                             test ax, ax	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x400b1c4	            0x7513	                           jne 0x400b1d9	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x400b1c6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x400b1cd	    0xc74004000000	                  mov dword [rax + 4], 0	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x400b1d4	      0xe9fe000000	                           jmp 0x400b2d7	      5766	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19
0x400b1d9	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x400b1e0	            0x8b00	                    mov eax, dword [rax]	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x400b1e2	       0xd20080000	                           or eax, 0x820	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x400b1e7	            0x89c2	                            mov edx, eax	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x400b1e9	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x400b1f0	            0x8910	                    mov dword [rax], edx	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x400b1f2	      0xe9e0000000	                           jmp 0x400b2d7	      5766	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19
0x400b1f7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b1fe	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b202	          0x6685c0	                             test ax, ax	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b205	            0x753f	                           jne 0x400b246	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b207	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b20e	            0x8b00	                    mov eax, dword [rax]	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b210	          0x83f801	                              cmp eax, 1	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b213	            0x7531	                           jne 0x400b246	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b215	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b21c	         0xfb64008	               movzx eax, byte [rax + 8]	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b220	           0xfb6c0	                           movzx eax, al	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b223	          0x83e070	                           and eax, 0x70	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b226	            0x85c0	                           test eax, eax	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b228	            0x751c	                           jne 0x400b246	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b22a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b231	          0x8b4004	                mov eax, dword [rax + 4]	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b234	    0x2b85f4feffff	            sub eax, dword [rbp - 0x10c]	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b23a	            0x89c2	                            mov edx, eax	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b23c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b243	          0x895004	                mov dword [rax + 4], edx	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400b246	    0x488dbde4feff	                  lea rdi, [rbp - 0x11c]	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x400b24d	    0x488d8d20ffff	                   lea rcx, [rbp - 0xe0]	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x400b254	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x400b25b	    0x488bb508ffff	             mov rsi, qword [rbp - 0xf8]	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x400b262	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x400b269	          0x4989f9	                             mov r9, rdi	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x400b26c	    0x41b800000000	                              mov r8d, 0	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x400b272	          0x4889c7	                            mov rdi, rax	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x400b275	      0xe8bfb9ffff	                       call sym.decAddOp	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x400b27a	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      5774	decNumber.c	DO_1	IF_7	FOR_1	IF_22
0x400b280	    0x3b85f4feffff	            cmp eax, dword [rbp - 0x10c]	      5774	decNumber.c	DO_1	IF_7	FOR_1	IF_22
0x400b286	            0x7448	                            je 0x400b2d0	      5774	decNumber.c	DO_1	IF_7	FOR_1	IF_22
0x400b288	    0xd1a5ecfeffff	              shl dword [rbp - 0x114], 1	      5776	decNumber.c	DO_1	IF_7	FOR_1
0x400b28e	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      5777	decNumber.c	DO_1	IF_7	FOR_1	IF_23
0x400b294	    0x3b85f4feffff	            cmp eax, dword [rbp - 0x10c]	      5777	decNumber.c	DO_1	IF_7	FOR_1	IF_23
0x400b29a	            0x7e0c	                           jle 0x400b2a8	      5777	decNumber.c	DO_1	IF_7	FOR_1	IF_23
0x400b29c	    0x8b85f4feffff	            mov eax, dword [rbp - 0x10c]	      5777	decNumber.c	DO_1	IF_7	FOR_1	IF_23
0x400b2a2	    0x8985ecfeffff	            mov dword [rbp - 0x114], eax	      5777	decNumber.c	DO_1	IF_7	FOR_1	IF_23
0x400b2a8	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      5778	decNumber.c	DO_1	IF_7	FOR_1
0x400b2ae	    0x898520ffffff	             mov dword [rbp - 0xe0], eax	      5778	decNumber.c	DO_1	IF_7	FOR_1
0x400b2b4	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x400b2bb	            0x8b10	                    mov edx, dword [rax]	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x400b2bd	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x400b2c3	             0x1d0	                            add eax, edx	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x400b2c5	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x400b2cb	      0xe938fdffff	                           jmp 0x400b008	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x400b2d0	              0x90	                                     nop	      5774	decNumber.c	DO_1	IF_7	FOR_1	IF_22
0x400b2d1	      0xe932fdffff	                           jmp 0x400b008	      5780	decNumber.c	DO_1	IF_7	FOR_1
0x400b2d6	              0x90	                                     nop	      5761	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_18
0x400b2d7	    0xc785e8feffff	              mov dword [rbp - 0x118], 1	      5790	decNumber.c	DO_1	IF_7
0x400b2e1	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x400b2e8	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x400b2ec	          0x6685c0	                             test ax, ax	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x400b2ef	            0x752d	                           jne 0x400b31e	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x400b2f1	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x400b2f8	            0x8b00	                    mov eax, dword [rax]	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x400b2fa	          0x83f801	                              cmp eax, 1	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x400b2fd	            0x751f	                           jne 0x400b31e	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x400b2ff	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x400b306	         0xfb64008	               movzx eax, byte [rax + 8]	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x400b30a	           0xfb6c0	                           movzx eax, al	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x400b30d	          0x83e070	                           and eax, 0x70	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x400b310	            0x85c0	                           test eax, eax	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x400b312	            0x750a	                           jne 0x400b31e	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x400b314	    0xc785e8feffff	              mov dword [rbp - 0x118], 0	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x400b31e	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      5792	decNumber.c	DO_1	IF_7
0x400b325	            0x8b00	                    mov eax, dword [rax]	      5792	decNumber.c	DO_1	IF_7
0x400b327	    0x898520ffffff	             mov dword [rbp - 0xe0], eax	      5792	decNumber.c	DO_1	IF_7
0x400b32d	    0x488bbdc0feff	            mov rdi, qword [rbp - 0x140]	      5793	decNumber.c	DO_1	IF_7	CALL_39
0x400b334	    0x488d8de8feff	                  lea rcx, [rbp - 0x118]	      5793	decNumber.c	DO_1	IF_7	CALL_39
0x400b33b	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	      5793	decNumber.c	DO_1	IF_7	CALL_39
0x400b342	    0x488bb508ffff	             mov rsi, qword [rbp - 0xf8]	      5793	decNumber.c	DO_1	IF_7	CALL_39
0x400b349	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5793	decNumber.c	DO_1	IF_7	CALL_39
0x400b350	          0x4989f8	                             mov r8, rdi	      5793	decNumber.c	DO_1	IF_7	CALL_39
0x400b353	          0x4889c7	                            mov rdi, rax	      5793	decNumber.c	DO_1	IF_7	CALL_39
0x400b356	      0xe86c1a0000	                     call sym.decCopyFit	      5793	decNumber.c	DO_1	IF_7	CALL_39
0x400b35b	    0x488b8dc0feff	            mov rcx, qword [rbp - 0x140]	      5794	decNumber.c	DO_1	IF_7
0x400b362	    0x488d95e8feff	                  lea rdx, [rbp - 0x118]	      5794	decNumber.c	DO_1	IF_7
0x400b369	    0x488bb5c8feff	            mov rsi, qword [rbp - 0x138]	      5794	decNumber.c	DO_1	IF_7
0x400b370	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5794	decNumber.c	DO_1	IF_7
0x400b377	          0x4889c7	                            mov rdi, rax	      5794	decNumber.c	DO_1	IF_7
0x400b37a	      0xe87e230000	                    call sym.decFinalize	      5794	decNumber.c	DO_1	IF_7
0x400b37f	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      5797	decNumber.c	DO_1
0x400b386	          0x4889c7	                            mov rdi, rax	      5797	decNumber.c	DO_1
0x400b389	      0xe800000000	                          call 0x400b38e	      5797	decNumber.c	DO_1
0x400b38e	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5798	decNumber.c	DO_1
0x400b395	          0x4889c7	                            mov rdi, rax	      5798	decNumber.c	DO_1
0x400b398	      0xe800000000	                          call 0x400b39d	      5798	decNumber.c	DO_1
0x400b39d	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5800	decNumber.c	DO_1
0x400b3a4	        0x488b75f8	                mov rsi, qword [rbp - 8]	      5801	decNumber.c	DO_1
0x400b3a8	    0x644833342528	                xor rsi, qword fs:[0x28]	      5801	decNumber.c	DO_1
0x400b3b1	            0x7405	                            je 0x400b3b8	      5801	decNumber.c	DO_1
0x400b3b3	      0xe800000000	                          call 0x400b3b8	      5801	decNumber.c	DO_1
0x400b3b8	              0xc9	                                   leave	      5801	decNumber.c	DO_1
0x400b3b9	              0xc3	                                     ret	      5801	decNumber.c	DO_1
decNumberFromUInt32	SWITCH,0:IF,1:FOR,1:CALL,2:DO,0:ELSE,0:WHILE,0:functions,0	54
0x400009c	              0x55	                                push rbp	       358	decNumber.c	FUNCTION_68	FUNCTION_2
0x400009d	          0x4889e5	                            mov rbp, rsp	       358	decNumber.c	FUNCTION_68	FUNCTION_2
0x40000a0	        0x4883ec20	                           sub rsp, 0x20	       358	decNumber.c	FUNCTION_68	FUNCTION_2
0x40000a4	        0x48897de8	             mov qword [rbp - 0x18], rdi	       358	decNumber.c	FUNCTION_68	FUNCTION_2
0x40000a8	          0x8975e4	             mov dword [rbp - 0x1c], esi	       358	decNumber.c	FUNCTION_68	FUNCTION_2
0x40000ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       360	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_1
0x40000af	          0x4889c7	                            mov rdi, rax	       360	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_1
0x40000b2	      0xe800000000	                          call 0x40000b7	       360	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_1
0x40000b7	        0x837de400	               cmp dword [rbp - 0x1c], 0	       361	decNumber.c	FUNCTION_68	FUNCTION_2	IF_1
0x40000bb	            0x7509	                           jne 0x40000c6	       361	decNumber.c	FUNCTION_68	FUNCTION_2	IF_1
0x40000bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       361	decNumber.c	FUNCTION_68	FUNCTION_2	IF_1
0x40000c1	      0xe981000000	                           jmp 0x4000147	       361	decNumber.c	FUNCTION_68	FUNCTION_2	IF_1
0x40000c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40000ca	        0x4883c00a	                            add rax, 0xa	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40000ce	        0x488945f8	                mov qword [rbp - 8], rax	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40000d2	            0xeb3b	                           jmp 0x400010f	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40000d4	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40000d7	      0xbad34d6210	                     mov edx, 0x10624dd3	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40000dc	            0x89c8	                            mov eax, ecx	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40000de	            0xf7e2	                                 mul edx	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40000e0	            0x89d0	                            mov eax, edx	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40000e2	          0xc1e806	                              shr eax, 6	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40000e5	    0x69c0e8030000	                    imul eax, eax, 0x3e8	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40000eb	            0x29c1	                            sub ecx, eax	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40000ed	            0x89c8	                            mov eax, ecx	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40000ef	            0x89c2	                            mov edx, eax	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40000f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40000f5	          0x668910	                      mov word [rax], dx	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40000f8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       364	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40000fb	      0xbad34d6210	                     mov edx, 0x10624dd3	       364	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4000100	            0xf7e2	                                 mul edx	       364	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4000102	            0x89d0	                            mov eax, edx	       364	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4000104	          0xc1e806	                              shr eax, 6	       364	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4000107	          0x8945e4	             mov dword [rbp - 0x1c], eax	       364	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x400010a	      0x488345f802	                  add qword [rbp - 8], 2	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x400010f	        0x837de400	               cmp dword [rbp - 0x1c], 0	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4000113	            0x75bf	                           jne 0x40000d4	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4000115	        0x488b45f8	                mov rax, qword [rbp - 8]	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4000119	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x400011d	        0x4883c20a	                            add rdx, 0xa	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4000121	          0x4829d0	                            sub rax, rdx	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4000124	          0x48d1f8	                              sar rax, 1	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4000127	            0x89c2	                            mov edx, eax	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4000129	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x400012d	        0x4883c00a	                            add rax, 0xa	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4000131	            0x89d6	                            mov esi, edx	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4000133	          0x4889c7	                            mov rdi, rax	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4000136	      0xe839e30000	                   call sym.decGetDigits	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x400013b	            0x89c2	                            mov edx, eax	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x400013d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4000141	            0x8910	                    mov dword [rax], edx	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4000143	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       367	decNumber.c	FUNCTION_68	FUNCTION_2
0x4000147	              0xc9	                                   leave	       368	decNumber.c	FUNCTION_68	FUNCTION_2
0x4000148	              0xc3	                                     ret	       368	decNumber.c	FUNCTION_68	FUNCTION_2
decNumberMinus	SWITCH,0:IF,2:FOR,0:CALL,5:DO,0:ELSE,0:WHILE,0:functions,0	41
0x400261d	              0x55	                                push rbp	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x400261e	          0x4889e5	                            mov rbp, rsp	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4002621	        0x4883ec50	                           sub rsp, 0x50	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4002625	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4002629	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x400262d	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4002631	    0x64488b042528	                mov rax, qword fs:[0x28]	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x400263a	        0x488945f8	                mov qword [rbp - 8], rax	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x400263e	            0x31c0	                            xor eax, eax	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4002640	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1634	decNumber.c	FUNCTION_68	FUNCTION_27
0x4002647	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1640	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_2
0x400264b	          0x4889c7	                            mov rdi, rax	      1640	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_2
0x400264e	      0xe800000000	                          call 0x4002653	      1640	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_2
0x4002653	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1641	decNumber.c	FUNCTION_68	FUNCTION_27
0x4002657	          0x8b4004	                mov eax, dword [rax + 4]	      1641	decNumber.c	FUNCTION_68	FUNCTION_27
0x400265a	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1641	decNumber.c	FUNCTION_68	FUNCTION_27
0x400265d	        0x488d7ddc	                   lea rdi, [rbp - 0x24]	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x4002661	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x4002665	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x4002669	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x400266d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x4002671	          0x4989f9	                             mov r9, rdi	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x4002674	    0x41b880000000	                           mov r8d, 0x80	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x400267a	          0x4889c7	                            mov rdi, rax	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x400267d	      0xe8b7450000	                       call sym.decAddOp	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x4002682	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x4002685	            0x85c0	                           test eax, eax	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x4002687	            0x7415	                            je 0x400269e	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x4002689	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x400268c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x4002690	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x4002694	            0x89ce	                            mov esi, ecx	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x4002696	          0x4889c7	                            mov rdi, rax	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x4002699	      0xe87abd0000	                      call sym.decStatus	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x400269e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1647	decNumber.c	FUNCTION_68	FUNCTION_27
0x40026a2	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x40026a6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x40026af	            0x7405	                            je 0x40026b6	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x40026b1	      0xe800000000	                          call 0x40026b6	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x40026b6	              0xc9	                                   leave	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x40026b7	              0xc3	                                     ret	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
decFinalize	SWITCH,0:IF,9:FOR,0:CALL,9:DO,0:ELSE,0:WHILE,0:functions,0	181
0x400d6fd	              0x55	                                push rbp	      7269	decNumber.c	FUNCTION_15
0x400d6fe	          0x4889e5	                            mov rbp, rsp	      7269	decNumber.c	FUNCTION_15
0x400d701	        0x4883ec50	                           sub rsp, 0x50	      7269	decNumber.c	FUNCTION_15
0x400d705	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      7269	decNumber.c	FUNCTION_15
0x400d709	        0x488975c0	             mov qword [rbp - 0x40], rsi	      7269	decNumber.c	FUNCTION_15
0x400d70d	        0x488955b8	             mov qword [rbp - 0x48], rdx	      7269	decNumber.c	FUNCTION_15
0x400d711	        0x48894db0	             mov qword [rbp - 0x50], rcx	      7269	decNumber.c	FUNCTION_15
0x400d715	    0x64488b042528	                mov rax, qword fs:[0x28]	      7269	decNumber.c	FUNCTION_15
0x400d71e	        0x488945f8	                mov qword [rbp - 8], rax	      7269	decNumber.c	FUNCTION_15
0x400d722	            0x31c0	                            xor eax, eax	      7269	decNumber.c	FUNCTION_15
0x400d724	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7271	decNumber.c	FUNCTION_15
0x400d728	          0x8b5008	                mov edx, dword [rax + 8]	      7271	decNumber.c	FUNCTION_15
0x400d72b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7271	decNumber.c	FUNCTION_15
0x400d72f	            0x8b00	                    mov eax, dword [rax]	      7271	decNumber.c	FUNCTION_15
0x400d731	            0x29c2	                            sub edx, eax	      7271	decNumber.c	FUNCTION_15
0x400d733	            0x89d0	                            mov eax, edx	      7271	decNumber.c	FUNCTION_15
0x400d735	          0x83c001	                              add eax, 1	      7271	decNumber.c	FUNCTION_15
0x400d738	          0x8945d4	             mov dword [rbp - 0x2c], eax	      7271	decNumber.c	FUNCTION_15
0x400d73b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7279	decNumber.c	FUNCTION_15	IF_1
0x400d73f	          0x8b4004	                mov eax, dword [rax + 4]	      7279	decNumber.c	FUNCTION_15	IF_1
0x400d742	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      7279	decNumber.c	FUNCTION_15	IF_1
0x400d745	     0xf8fc7000000	                            jg 0x400d812	      7279	decNumber.c	FUNCTION_15	IF_1
0x400d74b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7283	decNumber.c	FUNCTION_15	IF_1	IF_2
0x400d74f	          0x8b4004	                mov eax, dword [rax + 4]	      7283	decNumber.c	FUNCTION_15	IF_1	IF_2
0x400d752	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      7283	decNumber.c	FUNCTION_15	IF_1	IF_2
0x400d755	            0x7d1d	                           jge 0x400d774	      7283	decNumber.c	FUNCTION_15	IF_1	IF_2
0x400d757	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      7285	decNumber.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400d75b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      7285	decNumber.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400d75f	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      7285	decNumber.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400d763	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7285	decNumber.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400d767	          0x4889c7	                            mov rdi, rax	      7285	decNumber.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400d76a	      0xe8b0030000	                call sym.decSetSubnormal	      7285	decNumber.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400d76f	      0xe9ca010000	                           jmp 0x400d93e	      7286	decNumber.c	FUNCTION_15	IF_1	IF_2
0x400d774	        0x488d45e0	                   lea rax, [rbp - 0x20]	      7289	decNumber.c	FUNCTION_15	IF_1	CALL_2
0x400d778	          0x4889c7	                            mov rdi, rax	      7289	decNumber.c	FUNCTION_15	IF_1	CALL_2
0x400d77b	      0xe800000000	                          call 0x400d780	      7289	decNumber.c	FUNCTION_15	IF_1	CALL_2
0x400d780	    0x66c745ea0100	                mov word [rbp - 0x16], 1	      7290	decNumber.c	FUNCTION_15	IF_1
0x400d786	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7291	decNumber.c	FUNCTION_15	IF_1
0x400d78a	          0x8b4008	                mov eax, dword [rax + 8]	      7291	decNumber.c	FUNCTION_15	IF_1
0x400d78d	          0x8945e4	             mov dword [rbp - 0x1c], eax	      7291	decNumber.c	FUNCTION_15	IF_1
0x400d790	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      7292	decNumber.c	FUNCTION_15	IF_1	CALL_3
0x400d794	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7292	decNumber.c	FUNCTION_15	IF_1	CALL_3
0x400d798	      0xba01000000	                              mov edx, 1	      7292	decNumber.c	FUNCTION_15	IF_1	CALL_3
0x400d79d	          0x4889ce	                            mov rsi, rcx	      7292	decNumber.c	FUNCTION_15	IF_1	CALL_3
0x400d7a0	          0x4889c7	                            mov rdi, rax	      7292	decNumber.c	FUNCTION_15	IF_1	CALL_3
0x400d7a3	      0xe885e4ffff	                     call sym.decCompare	      7292	decNumber.c	FUNCTION_15	IF_1	CALL_3
0x400d7a8	          0x8945d8	             mov dword [rbp - 0x28], eax	      7292	decNumber.c	FUNCTION_15	IF_1	CALL_3
0x400d7ab	    0x817dd8000000	     cmp dword [rbp - 0x28], 0x80000000 	      7293	decNumber.c	FUNCTION_15	IF_1	IF_3
0x400d7b2	            0x7516	                           jne 0x400d7ca	      7293	decNumber.c	FUNCTION_15	IF_1	IF_3
0x400d7b4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7294	decNumber.c	FUNCTION_15	IF_1	IF_3
0x400d7b8	            0x8b00	                    mov eax, dword [rax]	      7294	decNumber.c	FUNCTION_15	IF_1	IF_3
0x400d7ba	          0x83c810	                            or eax, 0x10	      7294	decNumber.c	FUNCTION_15	IF_1	IF_3
0x400d7bd	            0x89c2	                            mov edx, eax	      7294	decNumber.c	FUNCTION_15	IF_1	IF_3
0x400d7bf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7294	decNumber.c	FUNCTION_15	IF_1	IF_3
0x400d7c3	            0x8910	                    mov dword [rax], edx	      7294	decNumber.c	FUNCTION_15	IF_1	IF_3
0x400d7c5	      0xe974010000	                           jmp 0x400d93e	      7295	decNumber.c	FUNCTION_15	IF_1	IF_3
0x400d7ca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x400d7ce	            0x8b00	                    mov eax, dword [rax]	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x400d7d0	            0x85c0	                           test eax, eax	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x400d7d2	            0x793e	                           jns 0x400d812	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x400d7d4	        0x837dd800	               cmp dword [rbp - 0x28], 0	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x400d7d8	            0x7538	                           jne 0x400d812	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x400d7da	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7298	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x400d7de	            0x8b10	                    mov edx, dword [rax]	      7298	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x400d7e0	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      7298	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x400d7e4	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      7298	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x400d7e8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7298	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x400d7ec	          0x4889c7	                            mov rdi, rax	      7298	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x400d7ef	      0xe890faffff	                  call sym.decApplyRound	      7298	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x400d7f4	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      7299	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x400d7f8	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      7299	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x400d7fc	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      7299	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x400d800	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7299	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x400d804	          0x4889c7	                            mov rdi, rax	      7299	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x400d807	      0xe813030000	                call sym.decSetSubnormal	      7299	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x400d80c	              0x90	                                     nop	      7300	decNumber.c	FUNCTION_15	IF_1	IF_4
0x400d80d	      0xe92c010000	                           jmp 0x400d93e	      7300	decNumber.c	FUNCTION_15	IF_1	IF_4
0x400d812	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7305	decNumber.c	FUNCTION_15	CALL_6
0x400d816	            0x8b00	                    mov eax, dword [rax]	      7305	decNumber.c	FUNCTION_15	CALL_6
0x400d818	            0x85c0	                           test eax, eax	      7305	decNumber.c	FUNCTION_15	CALL_6
0x400d81a	            0x741a	                            je 0x400d836	      7305	decNumber.c	FUNCTION_15	CALL_6
0x400d81c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7305	decNumber.c	FUNCTION_15	CALL_6
0x400d820	            0x8b10	                    mov edx, dword [rax]	      7305	decNumber.c	FUNCTION_15	CALL_6
0x400d822	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      7305	decNumber.c	FUNCTION_15	CALL_6
0x400d826	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      7305	decNumber.c	FUNCTION_15	CALL_6
0x400d82a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7305	decNumber.c	FUNCTION_15	CALL_6
0x400d82e	          0x4889c7	                            mov rdi, rax	      7305	decNumber.c	FUNCTION_15	CALL_6
0x400d831	      0xe84efaffff	                  call sym.decApplyRound	      7305	decNumber.c	FUNCTION_15	CALL_6
0x400d836	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7308	decNumber.c	FUNCTION_15	IF_6
0x400d83a	          0x8b5004	                mov edx, dword [rax + 4]	      7308	decNumber.c	FUNCTION_15	IF_6
0x400d83d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7308	decNumber.c	FUNCTION_15	IF_6
0x400d841	          0x8b4804	                mov ecx, dword [rax + 4]	      7308	decNumber.c	FUNCTION_15	IF_6
0x400d844	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7308	decNumber.c	FUNCTION_15	IF_6
0x400d848	            0x8b00	                    mov eax, dword [rax]	      7308	decNumber.c	FUNCTION_15	IF_6
0x400d84a	            0x29c1	                            sub ecx, eax	      7308	decNumber.c	FUNCTION_15	IF_6
0x400d84c	            0x89c8	                            mov eax, ecx	      7308	decNumber.c	FUNCTION_15	IF_6
0x400d84e	          0x83c001	                              add eax, 1	      7308	decNumber.c	FUNCTION_15	IF_6
0x400d851	            0x39c2	                            cmp edx, eax	      7308	decNumber.c	FUNCTION_15	IF_6
0x400d853	     0xf8ee1000000	                           jle 0x400d93a	      7308	decNumber.c	FUNCTION_15	IF_6
0x400d859	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7312	decNumber.c	FUNCTION_15	IF_7
0x400d85d	          0x8b5004	                mov edx, dword [rax + 4]	      7312	decNumber.c	FUNCTION_15	IF_7
0x400d860	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7312	decNumber.c	FUNCTION_15	IF_7
0x400d864	          0x8b4804	                mov ecx, dword [rax + 4]	      7312	decNumber.c	FUNCTION_15	IF_7
0x400d867	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7312	decNumber.c	FUNCTION_15	IF_7
0x400d86b	            0x8b00	                    mov eax, dword [rax]	      7312	decNumber.c	FUNCTION_15	IF_7
0x400d86d	            0x29c1	                            sub ecx, eax	      7312	decNumber.c	FUNCTION_15	IF_7
0x400d86f	            0x89c8	                            mov eax, ecx	      7312	decNumber.c	FUNCTION_15	IF_7
0x400d871	          0x83c001	                              add eax, 1	      7312	decNumber.c	FUNCTION_15	IF_7
0x400d874	            0x39c2	                            cmp edx, eax	      7312	decNumber.c	FUNCTION_15	IF_7
0x400d876	            0x7e1c	                           jle 0x400d894	      7312	decNumber.c	FUNCTION_15	IF_7
0x400d878	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x400d87c	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x400d880	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x400d884	          0x4889ce	                            mov rsi, rcx	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x400d887	          0x4889c7	                            mov rdi, rax	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x400d88a	      0xe8c5000000	                 call sym.decSetOverflow	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x400d88f	      0xe9aa000000	                           jmp 0x400d93e	      7314	decNumber.c	FUNCTION_15	IF_7
0x400d894	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7317	decNumber.c	FUNCTION_15	IF_8
0x400d898	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      7317	decNumber.c	FUNCTION_15	IF_8
0x400d89c	            0x84c0	                             test al, al	      7317	decNumber.c	FUNCTION_15	IF_8
0x400d89e	     0xf8499000000	                            je 0x400d93d	      7317	decNumber.c	FUNCTION_15	IF_8
0x400d8a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7320	decNumber.c	FUNCTION_15
0x400d8a8	          0x8b5004	                mov edx, dword [rax + 4]	      7320	decNumber.c	FUNCTION_15
0x400d8ab	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7320	decNumber.c	FUNCTION_15
0x400d8af	          0x8b4804	                mov ecx, dword [rax + 4]	      7320	decNumber.c	FUNCTION_15
0x400d8b2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7320	decNumber.c	FUNCTION_15
0x400d8b6	            0x8b00	                    mov eax, dword [rax]	      7320	decNumber.c	FUNCTION_15
0x400d8b8	            0x29c1	                            sub ecx, eax	      7320	decNumber.c	FUNCTION_15
0x400d8ba	            0x89c8	                            mov eax, ecx	      7320	decNumber.c	FUNCTION_15
0x400d8bc	          0x83c001	                              add eax, 1	      7320	decNumber.c	FUNCTION_15
0x400d8bf	            0x29c2	                            sub edx, eax	      7320	decNumber.c	FUNCTION_15
0x400d8c1	            0x89d0	                            mov eax, edx	      7320	decNumber.c	FUNCTION_15
0x400d8c3	          0x8945dc	             mov dword [rbp - 0x24], eax	      7320	decNumber.c	FUNCTION_15
0x400d8c6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x400d8ca	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x400d8ce	          0x6685c0	                             test ax, ax	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x400d8d1	            0x751d	                           jne 0x400d8f0	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x400d8d3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x400d8d7	            0x8b00	                    mov eax, dword [rax]	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x400d8d9	          0x83f801	                              cmp eax, 1	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x400d8dc	            0x7512	                           jne 0x400d8f0	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x400d8de	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x400d8e2	         0xfb64008	               movzx eax, byte [rax + 8]	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x400d8e6	           0xfb6c0	                           movzx eax, al	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x400d8e9	          0x83e070	                           and eax, 0x70	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x400d8ec	            0x85c0	                           test eax, eax	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x400d8ee	            0x7423	                            je 0x400d913	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x400d8f0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x400d8f4	            0x8b00	                    mov eax, dword [rax]	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x400d8f6	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x400d8fa	        0x488d4a0a	                    lea rcx, [rdx + 0xa]	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x400d8fe	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x400d901	            0x89c6	                            mov esi, eax	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x400d903	          0x4889cf	                            mov rdi, rcx	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x400d906	      0xe8c0efffff	                 call sym.decShiftToMost	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x400d90b	            0x89c2	                            mov edx, eax	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x400d90d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x400d911	            0x8910	                    mov dword [rax], edx	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x400d913	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7326	decNumber.c	FUNCTION_15
0x400d917	          0x8b4004	                mov eax, dword [rax + 4]	      7326	decNumber.c	FUNCTION_15
0x400d91a	          0x2b45dc	             sub eax, dword [rbp - 0x24]	      7326	decNumber.c	FUNCTION_15
0x400d91d	            0x89c2	                            mov edx, eax	      7326	decNumber.c	FUNCTION_15
0x400d91f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7326	decNumber.c	FUNCTION_15
0x400d923	          0x895004	                mov dword [rax + 4], edx	      7326	decNumber.c	FUNCTION_15
0x400d926	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7327	decNumber.c	FUNCTION_15
0x400d92a	            0x8b00	                    mov eax, dword [rax]	      7327	decNumber.c	FUNCTION_15
0x400d92c	          0x80cc04	                                or ah, 4	      7327	decNumber.c	FUNCTION_15
0x400d92f	            0x89c2	                            mov edx, eax	      7327	decNumber.c	FUNCTION_15
0x400d931	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      7327	decNumber.c	FUNCTION_15
0x400d935	            0x8910	                    mov dword [rax], edx	      7327	decNumber.c	FUNCTION_15
0x400d937	              0x90	                                     nop	      7328	decNumber.c	FUNCTION_15
0x400d938	            0xeb04	                           jmp 0x400d93e	      7328	decNumber.c	FUNCTION_15
0x400d93a	              0x90	                                     nop	      7308	decNumber.c	FUNCTION_15	IF_6
0x400d93b	            0xeb01	                           jmp 0x400d93e	      7308	decNumber.c	FUNCTION_15	IF_6
0x400d93d	              0x90	                                     nop	      7317	decNumber.c	FUNCTION_15	IF_8
0x400d93e	        0x488b45f8	                mov rax, qword [rbp - 8]	      7329	decNumber.c	FUNCTION_15
0x400d942	    0x644833042528	                xor rax, qword fs:[0x28]	      7329	decNumber.c	FUNCTION_15
0x400d94b	            0x7405	                            je 0x400d952	      7329	decNumber.c	FUNCTION_15
0x400d94d	      0xe800000000	                          call 0x400d952	      7329	decNumber.c	FUNCTION_15
0x400d952	              0xc9	                                   leave	      7329	decNumber.c	FUNCTION_15
0x400d953	              0xc3	                                     ret	      7329	decNumber.c	FUNCTION_15
decNumberCopyAbs	SWITCH,0:IF,1:FOR,0:CALL,2:DO,0:ELSE,0:WHILE,0:functions,0	19
0x4005f65	              0x55	                                push rbp	      3386	decNumber.c	FUNCTION_68	FUNCTION_53
0x4005f66	          0x4889e5	                            mov rbp, rsp	      3386	decNumber.c	FUNCTION_68	FUNCTION_53
0x4005f69	        0x4883ec10	                           sub rsp, 0x10	      3386	decNumber.c	FUNCTION_68	FUNCTION_53
0x4005f6d	        0x48897df8	                mov qword [rbp - 8], rdi	      3386	decNumber.c	FUNCTION_68	FUNCTION_53
0x4005f71	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3386	decNumber.c	FUNCTION_68	FUNCTION_53
0x4005f75	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3390	decNumber.c	FUNCTION_68	FUNCTION_53	CALL_2
0x4005f79	        0x488b45f8	                mov rax, qword [rbp - 8]	      3390	decNumber.c	FUNCTION_68	FUNCTION_53	CALL_2
0x4005f7d	          0x4889d6	                            mov rsi, rdx	      3390	decNumber.c	FUNCTION_68	FUNCTION_53	CALL_2
0x4005f80	          0x4889c7	                            mov rdi, rax	      3390	decNumber.c	FUNCTION_68	FUNCTION_53	CALL_2
0x4005f83	      0xe800000000	                          call 0x4005f88	      3390	decNumber.c	FUNCTION_68	FUNCTION_53	CALL_2
0x4005f88	        0x488b45f8	                mov rax, qword [rbp - 8]	      3391	decNumber.c	FUNCTION_68	FUNCTION_53
0x4005f8c	         0xfb64008	               movzx eax, byte [rax + 8]	      3391	decNumber.c	FUNCTION_68	FUNCTION_53
0x4005f90	          0x83e07f	                           and eax, 0x7f	      3391	decNumber.c	FUNCTION_68	FUNCTION_53
0x4005f93	            0x89c2	                            mov edx, eax	      3391	decNumber.c	FUNCTION_68	FUNCTION_53
0x4005f95	        0x488b45f8	                mov rax, qword [rbp - 8]	      3391	decNumber.c	FUNCTION_68	FUNCTION_53
0x4005f99	          0x885008	                  mov byte [rax + 8], dl	      3391	decNumber.c	FUNCTION_68	FUNCTION_53
0x4005f9c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3392	decNumber.c	FUNCTION_68	FUNCTION_53
0x4005fa0	              0xc9	                                   leave	      3393	decNumber.c	FUNCTION_68	FUNCTION_53
0x4005fa1	              0xc3	                                     ret	      3393	decNumber.c	FUNCTION_68	FUNCTION_53
decNumberMultiply	SWITCH,0:IF,1:FOR,0:CALL,3:DO,0:ELSE,0:WHILE,0:functions,0	35
0x4002f2a	              0x55	                                push rbp	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4002f2b	          0x4889e5	                            mov rbp, rsp	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4002f2e	        0x4883ec30	                           sub rsp, 0x30	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4002f32	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4002f36	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4002f3a	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4002f3e	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4002f42	    0x64488b042528	                mov rax, qword fs:[0x28]	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4002f4b	        0x488945f8	                mov qword [rbp - 8], rax	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4002f4f	            0x31c0	                            xor eax, eax	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4002f51	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1907	decNumber.c	FUNCTION_68	FUNCTION_33
0x4002f58	        0x488d7df4	                    lea rdi, [rbp - 0xc]	      1908	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_1
0x4002f5c	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1908	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_1
0x4002f60	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1908	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_1
0x4002f64	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1908	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_1
0x4002f68	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1908	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_1
0x4002f6c	          0x4989f8	                             mov r8, rdi	      1908	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_1
0x4002f6f	          0x4889c7	                            mov rdi, rax	      1908	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_1
0x4002f72	      0xe88a610000	                  call sym.decMultiplyOp	      1908	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_1
0x4002f77	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4002f7a	            0x85c0	                           test eax, eax	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4002f7c	            0x7415	                            je 0x4002f93	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4002f7e	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4002f81	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4002f85	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4002f89	            0x89ce	                            mov esi, ecx	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4002f8b	          0x4889c7	                            mov rdi, rax	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4002f8e	      0xe885b40000	                      call sym.decStatus	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4002f93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1913	decNumber.c	FUNCTION_68	FUNCTION_33
0x4002f97	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4002f9b	    0x644833342528	                xor rsi, qword fs:[0x28]	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4002fa4	            0x7405	                            je 0x4002fab	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4002fa6	      0xe800000000	                          call 0x4002fab	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4002fab	              0xc9	                                   leave	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4002fac	              0xc3	                                     ret	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
decNumberToIntegralExact	SWITCH,0:IF,5:FOR,0:CALL,8:DO,0:ELSE,2:WHILE,0:functions,0	90
0x4005727	              0x55	                                push rbp	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x4005728	          0x4889e5	                            mov rbp, rsp	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x400572b	        0x4883ec70	                           sub rsp, 0x70	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x400572f	        0x48897da8	             mov qword [rbp - 0x58], rdi	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x4005733	        0x488975a0	             mov qword [rbp - 0x60], rsi	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x4005737	        0x48895598	             mov qword [rbp - 0x68], rdx	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x400573b	    0x64488b042528	                mov rax, qword fs:[0x28]	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x4005744	        0x488945f8	                mov qword [rbp - 8], rax	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x4005748	            0x31c0	                            xor eax, eax	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x400574a	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      3176	decNumber.c	FUNCTION_68	FUNCTION_47
0x4005751	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3183	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2
0x4005755	         0xfb64008	               movzx eax, byte [rax + 8]	      3183	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2
0x4005759	           0xfb6c0	                           movzx eax, al	      3183	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2
0x400575c	          0x83e070	                           and eax, 0x70	      3183	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2
0x400575f	            0x85c0	                           test eax, eax	      3183	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2
0x4005761	            0x7452	                            je 0x40057b5	      3183	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2
0x4005763	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x4005767	         0xfb64008	               movzx eax, byte [rax + 8]	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x400576b	           0xfb6c0	                           movzx eax, al	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x400576e	          0x83e040	                           and eax, 0x40	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x4005771	            0x85c0	                           test eax, eax	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x4005773	            0x7418	                            je 0x400578d	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x4005775	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x4005779	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x400577d	          0x4889d6	                            mov rsi, rdx	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x4005780	          0x4889c7	                            mov rdi, rax	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x4005783	      0xe800000000	                          call 0x4005788	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x4005788	      0xe9ab000000	                           jmp 0x4005838	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x400578d	        0x488d4dbc	                   lea rcx, [rbp - 0x44]	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x4005791	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x4005795	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x4005799	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x400579d	          0x4989c8	                             mov r8, rcx	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x40057a0	          0x4889d1	                            mov rcx, rdx	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x40057a3	      0xba00000000	                              mov edx, 0	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x40057a8	          0x4889c7	                            mov rdi, rax	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x40057ab	      0xe8628a0000	                        call sym.decNaNs	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x40057b0	      0xe983000000	                           jmp 0x4005838	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x40057b5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x40057b9	          0x8b4004	                mov eax, dword [rax + 4]	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x40057bc	            0x85c0	                           test eax, eax	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x40057be	            0x7818	                            js 0x40057d8	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x40057c0	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x40057c4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x40057c8	          0x4889d6	                            mov rsi, rdx	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x40057cb	          0x4889c7	                            mov rdi, rax	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x40057ce	      0xe800000000	                          call 0x40057d3	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x40057d3	      0xe980000000	                           jmp 0x4005858	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x40057d8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x40057dc	          0x488b10	                    mov rdx, qword [rax]	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x40057df	        0x488955c0	             mov qword [rbp - 0x40], rdx	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x40057e3	        0x488b5008	                mov rdx, qword [rax + 8]	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x40057e7	        0x488955c8	             mov qword [rbp - 0x38], rdx	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x40057eb	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x40057ef	        0x488955d0	             mov qword [rbp - 0x30], rdx	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x40057f3	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x40057f6	          0x8945d8	             mov dword [rbp - 0x28], eax	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x40057f9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3192	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x40057fd	            0x8b00	                    mov eax, dword [rax]	      3192	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x40057ff	          0x8945c0	             mov dword [rbp - 0x40], eax	      3192	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4005802	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      3193	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4005809	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3194	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_6
0x400580d	          0x4889c7	                            mov rdi, rax	      3194	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_6
0x4005810	      0xe800000000	                          call 0x4005815	      3194	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_6
0x4005815	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      3195	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_7
0x4005819	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      3195	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_7
0x400581d	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      3195	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_7
0x4005821	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3195	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_7
0x4005825	          0x4889c7	                            mov rdi, rax	      3195	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_7
0x4005828	      0xe800000000	                          call 0x400582d	      3195	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_7
0x400582d	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      3196	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4005830	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3196	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4005833	             0x9d0	                             or eax, edx	      3196	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4005835	          0x8945bc	             mov dword [rbp - 0x44], eax	      3196	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4005838	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x400583b	            0x85c0	                           test eax, eax	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x400583d	            0x7415	                            je 0x4005854	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x400583f	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x4005842	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x4005846	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x400584a	            0x89ce	                            mov esi, ecx	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x400584c	          0x4889c7	                            mov rdi, rax	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x400584f	      0xe8c48b0000	                      call sym.decStatus	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x4005854	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3199	decNumber.c	FUNCTION_68	FUNCTION_47
0x4005858	        0x488b7df8	                mov rdi, qword [rbp - 8]	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x400585c	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x4005865	            0x7405	                            je 0x400586c	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x4005867	      0xe800000000	                          call 0x400586c	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x400586c	              0xc9	                                   leave	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x400586d	              0xc3	                                     ret	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
decNumberSquareRoot	SWITCH,0:IF,29:FOR,1:CALL,51:DO,1:ELSE,8:WHILE,0:functions,0	774
0x40047ef	              0x55	                                push rbp	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x40047f0	          0x4889e5	                            mov rbp, rsp	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x40047f3	    0x4881ec900100	                          sub rsp, 0x190	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x40047fa	    0x4889bd88feff	            mov qword [rbp - 0x178], rdi	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4004801	    0x4889b580feff	            mov qword [rbp - 0x180], rsi	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4004808	    0x48899578feff	            mov qword [rbp - 0x188], rdx	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400480f	    0x64488b042528	                mov rax, qword fs:[0x28]	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4004818	        0x488945f8	                mov qword [rbp - 8], rax	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400481c	            0x31c0	                            xor eax, eax	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400481e	    0xc7859cfeffff	              mov dword [rbp - 0x164], 0	      2803	decNumber.c	FUNCTION_68	FUNCTION_45
0x4004828	    0xc785a0feffff	              mov dword [rbp - 0x160], 0	      2804	decNumber.c	FUNCTION_68	FUNCTION_45
0x4004832	    0xc785a4feffff	              mov dword [rbp - 0x15c], 0	      2804	decNumber.c	FUNCTION_68	FUNCTION_45
0x400483c	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x4004847	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x4004852	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x400485d	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2823	decNumber.c	FUNCTION_68	FUNCTION_45
0x4004864	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      2823	decNumber.c	FUNCTION_68	FUNCTION_45
0x400486b	        0x488d45a0	                   lea rax, [rbp - 0x60]	      2824	decNumber.c	FUNCTION_68	FUNCTION_45
0x400486f	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      2824	decNumber.c	FUNCTION_68	FUNCTION_45
0x4004876	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2825	decNumber.c	FUNCTION_68	FUNCTION_45
0x400487a	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      2825	decNumber.c	FUNCTION_68	FUNCTION_45
0x4004881	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      2828	decNumber.c	FUNCTION_68	FUNCTION_45
0x4004888	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      2828	decNumber.c	FUNCTION_68	FUNCTION_45
0x400488f	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      2850	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x4004896	         0xfb64008	               movzx eax, byte [rax + 8]	      2850	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x400489a	           0xfb6c0	                           movzx eax, al	      2850	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x400489d	          0x83e070	                           and eax, 0x70	      2850	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x40048a0	            0x85c0	                           test eax, eax	      2850	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x40048a2	     0xf8489000000	                            je 0x4004931	      2850	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x40048a8	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      2851	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_7
0x40048af	         0xfb64008	               movzx eax, byte [rax + 8]	      2851	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_7
0x40048b3	           0xfb6c0	                           movzx eax, al	      2851	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_7
0x40048b6	          0x83e040	                           and eax, 0x40	      2851	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_7
0x40048b9	            0x85c0	                           test eax, eax	      2851	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_7
0x40048bb	            0x7440	                            je 0x40048fd	      2851	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_7
0x40048bd	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      2852	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_8
0x40048c4	         0xfb64008	               movzx eax, byte [rax + 8]	      2852	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_8
0x40048c8	            0x84c0	                             test al, al	      2852	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_8
0x40048ca	            0x7913	                           jns 0x40048df	      2852	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_8
0x40048cc	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      2852	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_8
0x40048d2	             0xc80	                             or al, 0x80	      2852	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_8
0x40048d4	    0x8985a0feffff	            mov dword [rbp - 0x160], eax	      2852	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_8
0x40048da	      0xe94d0d0000	                           jmp 0x400562c	      2856	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x40048df	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      2853	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_9
0x40048e6	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      2853	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_9
0x40048ed	          0x4889d6	                            mov rsi, rdx	      2853	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_9
0x40048f0	          0x4889c7	                            mov rdi, rax	      2853	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_9
0x40048f3	      0xe800000000	                          call 0x40048f8	      2853	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_9
0x40048f8	      0xe92f0d0000	                           jmp 0x400562c	      2856	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x40048fd	    0x488d8da0feff	                  lea rcx, [rbp - 0x160]	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x4004904	    0x488b9578feff	            mov rdx, qword [rbp - 0x188]	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x400490b	    0x488bb580feff	            mov rsi, qword [rbp - 0x180]	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x4004912	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x4004919	          0x4989c8	                             mov r8, rcx	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x400491c	          0x4889d1	                            mov rcx, rdx	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x400491f	      0xba00000000	                              mov edx, 0	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x4004924	          0x4889c7	                            mov rdi, rax	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x4004927	      0xe8e6980000	                        call sym.decNaNs	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x400492c	      0xe9fb0c0000	                           jmp 0x400562c	      2856	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x4004931	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      2862	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004938	          0x8b4004	                mov eax, dword [rax + 4]	      2862	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400493b	            0xd1f8	                              sar eax, 1	      2862	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400493d	    0x8985bcfeffff	            mov dword [rbp - 0x144], eax	      2862	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004943	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x400494a	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x400494e	          0x6685c0	                             test ax, ax	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x4004951	            0x7575	                           jne 0x40049c8	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x4004953	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x400495a	            0x8b00	                    mov eax, dword [rax]	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x400495c	          0x83f801	                              cmp eax, 1	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x400495f	            0x7567	                           jne 0x40049c8	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x4004961	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x4004968	         0xfb64008	               movzx eax, byte [rax + 8]	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x400496c	           0xfb6c0	                           movzx eax, al	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x400496f	          0x83e070	                           and eax, 0x70	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x4004972	            0x85c0	                           test eax, eax	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x4004974	            0x7552	                           jne 0x40049c8	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x4004976	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      2866	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_12
0x400497d	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      2866	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_12
0x4004984	          0x4889d6	                            mov rsi, rdx	      2866	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_12
0x4004987	          0x4889c7	                            mov rdi, rax	      2866	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_12
0x400498a	      0xe800000000	                          call 0x400498f	      2866	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_12
0x400498f	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      2867	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x4004996	    0x8b95bcfeffff	            mov edx, dword [rbp - 0x144]	      2867	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x400499c	          0x895004	                mov dword [rax + 4], edx	      2867	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x400499f	    0x488d8da0feff	                  lea rcx, [rbp - 0x160]	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x40049a6	    0x488d959cfeff	                  lea rdx, [rbp - 0x164]	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x40049ad	    0x488bb578feff	            mov rsi, qword [rbp - 0x188]	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x40049b4	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x40049bb	          0x4889c7	                            mov rdi, rax	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x40049be	      0xe83a8d0000	                    call sym.decFinalize	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x40049c3	      0xe9640c0000	                           jmp 0x400562c	      2870	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x40049c8	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      2874	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_9	CALL_13
0x40049cf	         0xfb64008	               movzx eax, byte [rax + 8]	      2874	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_9	CALL_13
0x40049d3	            0x84c0	                             test al, al	      2874	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_9	CALL_13
0x40049d5	            0x7913	                           jns 0x40049ea	      2874	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_9	CALL_13
0x40049d7	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      2875	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_9
0x40049dd	             0xc80	                             or al, 0x80	      2875	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_9
0x40049df	    0x8985a0feffff	            mov dword [rbp - 0x160], eax	      2875	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_9
0x40049e5	      0xe9420c0000	                           jmp 0x400562c	      2876	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_9
0x40049ea	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2886	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_14
0x40049f1	            0x8b00	                    mov eax, dword [rax]	      2886	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_14
0x40049f3	          0x8d5001	                      lea edx, [rax + 1]	      2886	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_14
0x40049f6	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      2886	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_14
0x40049fd	            0x8b00	                    mov eax, dword [rax]	      2886	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_14
0x40049ff	            0x39c2	                            cmp edx, eax	      2886	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_14
0x4004a01	           0xf4dc2	                         cmovge eax, edx	      2886	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_14
0x4004a04	    0x8985c0feffff	            mov dword [rbp - 0x140], eax	      2886	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_14
0x4004a0a	      0xb807000000	                              mov eax, 7	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x4004a0f	    0x83bdc0feffff	              cmp dword [rbp - 0x140], 7	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x4004a16	     0xf4d85c0feff	         cmovge eax, dword [rbp - 0x140]	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x4004a1d	    0x8985c0feffff	            mov dword [rbp - 0x140], eax	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x4004a23	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      2888	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004a29	          0x83c002	                              add eax, 2	      2888	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004a2c	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	      2888	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004a32	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a39	            0x8b00	                    mov eax, dword [rax]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a3b	          0x83f831	                           cmp eax, 0x31	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a3e	            0x7f22	                            jg 0x4004a62	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a40	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a47	            0x8b00	                    mov eax, dword [rax]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a49	            0x4898	                                    cdqe	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a4b	     0xfb680000000	                   movzx eax, byte [rax]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a52	           0xfb6c0	                           movzx eax, al	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a55	          0x83e801	                              sub eax, 1	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a58	            0x4898	                                    cdqe	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a5a	        0x4883c006	                              add rax, 6	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a5e	             0x1c0	                            add eax, eax	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a60	            0xeb29	                           jmp 0x4004a8b	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a62	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a69	            0x8b00	                    mov eax, dword [rax]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a6b	          0x8d4802	                      lea ecx, [rax + 2]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a6e	      0xba56555555	                     mov edx, 0x55555556	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a73	            0x89c8	                            mov eax, ecx	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a75	            0xf7ea	                                imul edx	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a77	            0x89c8	                            mov eax, ecx	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a79	          0xc1f81f	                           sar eax, 0x1f	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a7c	            0x29c2	                            sub edx, eax	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a7e	            0x89d0	                            mov eax, edx	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a80	          0x83e801	                              sub eax, 1	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a83	            0x4898	                                    cdqe	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a85	        0x4883c006	                              add rax, 6	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a89	             0x1c0	                            add eax, eax	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a8b	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4004a91	    0x83bdc8feffff	          cmp dword [rbp - 0x138], 0x24 	      2891	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x4004a98	            0x7e43	                           jle 0x4004add	      2891	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x4004a9a	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      2892	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x4004aa0	            0x4898	                                    cdqe	      2892	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x4004aa2	          0x4889c7	                            mov rdi, rax	      2892	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x4004aa5	      0xe800000000	                          call 0x4004aaa	      2892	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x4004aaa	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      2892	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x4004ab1	    0x4883bdd8feff	              cmp qword [rbp - 0x128], 0	      2893	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x4004ab9	            0x7514	                           jne 0x4004acf	      2893	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x4004abb	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      2894	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x4004ac1	          0x83c810	                            or eax, 0x10	      2894	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x4004ac4	    0x8985a0feffff	            mov dword [rbp - 0x160], eax	      2894	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x4004aca	      0xe95d0b0000	                           jmp 0x400562c	      2895	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x4004acf	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2896	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x4004ad6	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      2896	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x4004add	    0x83bdc4feffff	          cmp dword [rbp - 0x13c], 0x31 	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004ae4	            0x7f1f	                            jg 0x4004b05	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004ae6	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004aec	            0x4898	                                    cdqe	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004aee	     0xfb680000000	                   movzx eax, byte [rax]	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004af5	           0xfb6c0	                           movzx eax, al	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004af8	          0x83e801	                              sub eax, 1	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004afb	            0x4898	                                    cdqe	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004afd	        0x4883c006	                              add rax, 6	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004b01	             0x1c0	                            add eax, eax	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004b03	            0xeb26	                           jmp 0x4004b2b	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004b05	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004b0b	          0x8d4802	                      lea ecx, [rax + 2]	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004b0e	      0xba56555555	                     mov edx, 0x55555556	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004b13	            0x89c8	                            mov eax, ecx	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004b15	            0xf7ea	                                imul edx	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004b17	            0x89c8	                            mov eax, ecx	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004b19	          0xc1f81f	                           sar eax, 0x1f	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004b1c	            0x29c2	                            sub edx, eax	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004b1e	            0x89d0	                            mov eax, edx	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004b20	          0x83e801	                              sub eax, 1	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004b23	            0x4898	                                    cdqe	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004b25	        0x4883c006	                              add rax, 6	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004b29	             0x1c0	                            add eax, eax	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004b2b	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4004b31	    0x83bdc8feffff	          cmp dword [rbp - 0x138], 0x24 	      2900	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4004b38	            0x7e72	                           jle 0x4004bac	      2900	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4004b3a	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4004b40	            0x4898	                                    cdqe	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4004b42	          0x4889c7	                            mov rdi, rax	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4004b45	      0xe800000000	                          call 0x4004b4a	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4004b4a	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4004b51	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      2902	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4004b57	            0x4898	                                    cdqe	      2902	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4004b59	          0x4889c7	                            mov rdi, rax	      2902	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4004b5c	      0xe800000000	                          call 0x4004b61	      2902	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4004b61	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      2902	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4004b68	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x4004b70	            0x740a	                            je 0x4004b7c	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x4004b72	    0x4883bde8feff	              cmp qword [rbp - 0x118], 0	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x4004b7a	            0x7514	                           jne 0x4004b90	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x4004b7c	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      2904	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x4004b82	          0x83c810	                            or eax, 0x10	      2904	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x4004b85	    0x8985a0feffff	            mov dword [rbp - 0x160], eax	      2904	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x4004b8b	      0xe99c0a0000	                           jmp 0x400562c	      2905	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x4004b90	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      2906	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4004b97	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      2906	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4004b9e	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2907	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4004ba5	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      2907	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4004bac	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      2911	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_18
0x4004bb3	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2911	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_18
0x4004bba	          0x4889d6	                            mov rsi, rdx	      2911	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_18
0x4004bbd	          0x4889c7	                            mov rdi, rax	      2911	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_18
0x4004bc0	      0xe800000000	                          call 0x4004bc5	      2911	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_18
0x4004bc5	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004bcc	          0x8b5004	                mov edx, dword [rax + 4]	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004bcf	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004bd6	            0x8b00	                    mov eax, dword [rax]	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004bd8	             0x1d0	                            add eax, edx	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004bda	    0x8985b4feffff	            mov dword [rbp - 0x14c], eax	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004be0	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2913	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004be7	            0x8b00	                    mov eax, dword [rax]	      2913	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004be9	            0xf7d8	                                 neg eax	      2913	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004beb	            0x89c2	                            mov edx, eax	      2913	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004bed	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2913	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004bf4	          0x895004	                mov dword [rax + 4], edx	      2913	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004bf7	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      2916	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_19
0x4004bfe	      0xbe40000000	                           mov esi, 0x40	      2916	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_19
0x4004c03	          0x4889c7	                            mov rdi, rax	      2916	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_19
0x4004c06	      0xe800000000	                          call 0x4004c0b	      2916	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_19
0x4004c0b	    0xc78514ffffff	      mov dword [rbp - 0xec], 0x3b9ac9ff	      2917	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004c15	    0xc78518ffffff	      mov dword [rbp - 0xe8], 0xc4653601	      2918	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004c1f	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      2924	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004c25	    0x898510ffffff	             mov dword [rbp - 0xf0], eax	      2924	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004c2b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2925	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004c32	        0xc6400800	                   mov byte [rax + 8], 0	      2925	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004c36	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2925	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004c3d	    0xc70003000000	                      mov dword [rax], 3	      2925	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004c43	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2926	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004c4a	        0xc6400800	                   mov byte [rax + 8], 0	      2926	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004c4e	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2926	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004c55	    0xc70003000000	                      mov dword [rax], 3	      2926	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004c5b	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      2927	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4004c61	          0x83e001	                              and eax, 1	      2927	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4004c64	            0x85c0	                           test eax, eax	      2927	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4004c66	            0x7538	                           jne 0x4004ca0	      2927	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4004c68	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2929	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4004c6f	    0xc74004fdffff	        mov dword [rax + 4], 0xfffffffd 	      2929	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4004c76	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2930	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4004c7d	    0xc74004fdffff	        mov dword [rax + 4], 0xfffffffd 	      2930	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4004c84	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2932	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4004c8b	    0x66c7400a0301	            mov word [rax + 0xa], 0x103 	      2932	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4004c91	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2933	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4004c98	    0x66c7400a3303	            mov word [rax + 0xa], 0x333 	      2933	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4004c9e	            0xeb54	                           jmp 0x4004cf4	      2933	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4004ca0	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2944	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4004ca7	          0x8b4004	                mov eax, dword [rax + 4]	      2944	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4004caa	          0x8d50ff	                      lea edx, [rax - 1]	      2944	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4004cad	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2944	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4004cb4	          0x895004	                mov dword [rax + 4], edx	      2944	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4004cb7	    0x8385b4feffff	              add dword [rbp - 0x14c], 1	      2945	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4004cbe	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2946	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4004cc5	    0xc74004fcffff	        mov dword [rax + 4], 0xfffffffc 	      2946	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4004ccc	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2947	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4004cd3	    0xc74004feffff	        mov dword [rax + 4], 0xfffffffe 	      2947	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4004cda	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2949	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4004ce1	    0x66c7400a3303	            mov word [rax + 0xa], 0x333 	      2949	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4004ce7	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2950	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4004cee	    0x66c7400a0301	            mov word [rax + 0xa], 0x103 	      2950	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4004cf4	    0x488dbda4feff	                  lea rdi, [rbp - 0x15c]	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x4004cfb	    0x488d8d10ffff	                   lea rcx, [rbp - 0xf0]	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x4004d02	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x4004d09	    0x488bb5f8feff	            mov rsi, qword [rbp - 0x108]	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x4004d10	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x4004d17	          0x4989f8	                             mov r8, rdi	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x4004d1a	          0x4889c7	                            mov rdi, rax	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x4004d1d	      0xe8df430000	                  call sym.decMultiplyOp	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x4004d22	    0x488dbda4feff	                  lea rdi, [rbp - 0x15c]	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x4004d29	    0x488d8d10ffff	                   lea rcx, [rbp - 0xf0]	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x4004d30	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x4004d37	    0x488bb5f8feff	            mov rsi, qword [rbp - 0x108]	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x4004d3e	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x4004d45	          0x4989f9	                             mov r9, rdi	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x4004d48	    0x41b800000000	                              mov r8d, 0	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x4004d4e	          0x4889c7	                            mov rdi, rax	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x4004d51	      0xe8e31e0000	                       call sym.decAddOp	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x4004d56	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      2966	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_22
0x4004d5d	          0x4889c7	                            mov rdi, rax	      2966	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_22
0x4004d60	      0xe800000000	                          call 0x4004d65	      2966	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_22
0x4004d65	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2967	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_23
0x4004d6c	          0x4889c7	                            mov rdi, rax	      2967	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_23
0x4004d6f	      0xe800000000	                          call 0x4004d74	      2967	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_23
0x4004d74	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2968	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004d7b	    0x66c7400a0500	                 mov word [rax + 0xa], 5	      2968	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004d81	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2969	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004d88	    0xc74004ffffff	        mov dword [rax + 4], 0xffffffff 	      2969	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004d8f	    0xc78510ffffff	               mov dword [rbp - 0xf0], 3	      2970	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004d99	      0xe9b3000000	                           jmp 0x4004e51	      2971	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1
0x4004d9e	    0x8b8510ffffff	             mov eax, dword [rbp - 0xf0]	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x4004da4	          0x83e801	                              sub eax, 1	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x4004da7	          0x8d1400	                    lea edx, [rax + rax]	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x4004daa	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x4004db0	            0x39c2	                            cmp edx, eax	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x4004db2	           0xf4ec2	                         cmovle eax, edx	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x4004db5	    0x898510ffffff	             mov dword [rbp - 0xf0], eax	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x4004dbb	    0x488dbda4feff	                  lea rdi, [rbp - 0x15c]	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x4004dc2	    0x488d8d10ffff	                   lea rcx, [rbp - 0xf0]	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x4004dc9	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x4004dd0	    0x488bb5f0feff	            mov rsi, qword [rbp - 0x110]	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x4004dd7	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x4004dde	          0x4989f9	                             mov r9, rdi	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x4004de1	    0x41b880000000	                           mov r8d, 0x80	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x4004de7	          0x4889c7	                            mov rdi, rax	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x4004dea	      0xe8192c0000	                    call sym.decDivideOp	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x4004def	    0x488dbda4feff	                  lea rdi, [rbp - 0x15c]	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4004df6	    0x488d8d10ffff	                   lea rcx, [rbp - 0xf0]	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4004dfd	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4004e04	    0x488bb500ffff	            mov rsi, qword [rbp - 0x100]	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4004e0b	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4004e12	          0x4989f9	                             mov r9, rdi	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4004e15	    0x41b800000000	                              mov r8d, 0	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4004e1b	          0x4889c7	                            mov rdi, rax	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4004e1e	      0xe8161e0000	                       call sym.decAddOp	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4004e23	    0x488dbda4feff	                  lea rdi, [rbp - 0x15c]	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x4004e2a	    0x488d8d10ffff	                   lea rcx, [rbp - 0xf0]	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x4004e31	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x4004e38	    0x488bb500ffff	            mov rsi, qword [rbp - 0x100]	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x4004e3f	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x4004e46	          0x4989f8	                             mov r8, rdi	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x4004e49	          0x4889c7	                            mov rdi, rax	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x4004e4c	      0xe8b0420000	                  call sym.decMultiplyOp	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x4004e51	    0x8b8510ffffff	             mov eax, dword [rbp - 0xf0]	      2971	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1
0x4004e57	    0x3b85c4feffff	            cmp eax, dword [rbp - 0x13c]	      2971	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1
0x4004e5d	     0xf8c3bffffff	                            jl 0x4004d9e	      2971	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1
0x4004e63	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004e6a	          0x488b10	                    mov rdx, qword [rax]	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004e6d	    0x48899530ffff	             mov qword [rbp - 0xd0], rdx	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004e74	        0x488b5008	                mov rdx, qword [rax + 8]	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004e78	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004e7f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004e83	    0x48899540ffff	             mov qword [rbp - 0xc0], rdx	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004e8a	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004e8d	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004e93	    0xc7853cffffff	               mov dword [rbp - 0xc4], 3	      2986	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004e9d	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004ea4	          0x8b5004	                mov edx, dword [rax + 4]	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004ea7	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004ead	            0x89c1	                            mov ecx, eax	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004eaf	          0xc1e91f	                           shr ecx, 0x1f	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004eb2	             0x1c8	                            add eax, ecx	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004eb4	            0xd1f8	                              sar eax, 1	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004eb6	             0x1c2	                            add edx, eax	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004eb8	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004ebf	          0x895004	                mov dword [rax + 4], edx	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004ec2	    0xc785a8feffff	              mov dword [rbp - 0x158], 0	      2988	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004ecc	    0xc7859cfeffff	              mov dword [rbp - 0x164], 0	      2989	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004ed6	    0x488dbda8feff	                  lea rdi, [rbp - 0x158]	      2990	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_28
0x4004edd	    0x488d8d9cfeff	                  lea rcx, [rbp - 0x164]	      2990	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_28
0x4004ee4	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2990	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_28
0x4004eeb	    0x488bb5f8feff	            mov rsi, qword [rbp - 0x108]	      2990	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_28
0x4004ef2	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2990	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_28
0x4004ef9	          0x4989f8	                             mov r8, rdi	      2990	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_28
0x4004efc	          0x4889c7	                            mov rdi, rax	      2990	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_28
0x4004eff	      0xe8c37e0000	                     call sym.decCopyFit	      2990	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_28
0x4004f04	    0x488d8da8feff	                  lea rcx, [rbp - 0x158]	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f0b	    0x488d959cfeff	                  lea rdx, [rbp - 0x164]	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f12	    0x488db530ffff	                   lea rsi, [rbp - 0xd0]	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f19	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f20	          0x4889c7	                            mov rdi, rax	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f23	      0xe8d5870000	                    call sym.decFinalize	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f28	    0x8b85a8feffff	            mov eax, dword [rbp - 0x158]	      2995	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x4004f2e	      0x2500020000	                          and eax, 0x200	      2995	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x4004f33	            0x85c0	                           test eax, eax	      2995	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x4004f35	            0x742a	                            je 0x4004f61	      2995	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x4004f37	    0x8b85a8feffff	            mov eax, dword [rbp - 0x158]	      2996	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x4004f3d	    0x8985a0feffff	            mov dword [rbp - 0x160], eax	      2996	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x4004f43	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      2997	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15	CALL_29
0x4004f4a	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      2997	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15	CALL_29
0x4004f51	          0x4889d6	                            mov rsi, rdx	      2997	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15	CALL_29
0x4004f54	          0x4889c7	                            mov rdi, rax	      2997	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15	CALL_29
0x4004f57	      0xe800000000	                          call 0x4004f5c	      2997	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15	CALL_29
0x4004f5c	      0xe9cb060000	                           jmp 0x400562c	      2998	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x4004f61	    0x8b85a8feffff	            mov eax, dword [rbp - 0x158]	      3002	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f67	      0x25dff7ffff	                     and eax, 0xfffff7df	      3002	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f6c	            0x89c2	                            mov edx, eax	      3002	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f6e	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      3002	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f74	             0x9d0	                             or eax, edx	      3002	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f76	    0x8985a0feffff	            mov dword [rbp - 0x160], eax	      3002	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f7c	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f83	          0x8b5004	                mov edx, dword [rax + 4]	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f86	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f8c	            0x89c1	                            mov ecx, eax	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f8e	          0xc1e91f	                           shr ecx, 0x1f	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f91	             0x1c8	                            add eax, ecx	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f93	            0xd1f8	                              sar eax, 1	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f95	            0x29c2	                            sub edx, eax	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f97	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004f9e	          0x895004	                mov dword [rax + 4], edx	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004fa1	    0x8b8510ffffff	             mov eax, dword [rbp - 0xf0]	      3012	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004fa7	          0x83e801	                              sub eax, 1	      3012	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004faa	    0x898510ffffff	             mov dword [rbp - 0xf0], eax	      3012	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004fb0	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3013	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004fb7	            0x8b00	                    mov eax, dword [rax]	      3013	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004fb9	            0xf7d0	                                 not eax	      3013	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004fbb	            0x89c2	                            mov edx, eax	      3013	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004fbd	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3013	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004fc4	          0x895004	                mov dword [rax + 4], edx	      3013	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4004fc7	    0x488dbda4feff	                  lea rdi, [rbp - 0x15c]	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x4004fce	    0x488d8d10ffff	                   lea rcx, [rbp - 0xf0]	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x4004fd5	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x4004fdc	    0x488bb5f8feff	            mov rsi, qword [rbp - 0x108]	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x4004fe3	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x4004fea	          0x4989f9	                             mov r9, rdi	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x4004fed	    0x41b880000000	                           mov r8d, 0x80	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x4004ff3	          0x4889c7	                            mov rdi, rax	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x4004ff6	      0xe83e1c0000	                       call sym.decAddOp	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x4004ffb	    0xc7851cffffff	               mov dword [rbp - 0xe4], 1	      3015	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4005005	    0x488dbda4feff	                  lea rdi, [rbp - 0x15c]	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x400500c	    0x488d8d10ffff	                   lea rcx, [rbp - 0xf0]	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x4005013	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x400501a	    0x488bb500ffff	            mov rsi, qword [rbp - 0x100]	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x4005021	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x4005028	          0x4989f8	                             mov r8, rdi	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x400502b	          0x4889c7	                            mov rdi, rax	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x400502e	      0xe8ce400000	                  call sym.decMultiplyOp	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x4005033	    0x488dbda4feff	                  lea rdi, [rbp - 0x15c]	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x400503a	    0x488d8d10ffff	                   lea rcx, [rbp - 0xf0]	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x4005041	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x4005048	    0x488bb5f0feff	            mov rsi, qword [rbp - 0x110]	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x400504f	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x4005056	          0x4989f9	                             mov r9, rdi	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x4005059	    0x41b801000000	                              mov r8d, 1	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x400505f	          0x4889c7	                            mov rdi, rax	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x4005062	      0xe8f2660000	                   call sym.decCompareOp	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x4005067	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3018	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_33
0x400506e	         0xfb64008	               movzx eax, byte [rax + 8]	      3018	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_33
0x4005072	            0x84c0	                             test al, al	      3018	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_33
0x4005074	     0xf89cf000000	                           jns 0x4005149	      3018	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_33
0x400507a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3020	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x4005081	          0x8b4004	                mov eax, dword [rax + 4]	      3020	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x4005084	          0x8d5001	                      lea edx, [rax + 1]	      3020	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x4005087	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3020	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x400508e	          0x895004	                mov dword [rax + 4], edx	      3020	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x4005091	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3021	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x4005098	    0x66c7400a0100	                 mov word [rax + 0xa], 1	      3021	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x400509e	    0x488dbda4feff	                  lea rdi, [rbp - 0x15c]	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40050a5	    0x488d8d10ffff	                   lea rcx, [rbp - 0xf0]	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40050ac	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40050b3	    0x488bb5f8feff	            mov rsi, qword [rbp - 0x108]	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40050ba	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40050c1	          0x4989f9	                             mov r9, rdi	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40050c4	    0x41b880000000	                           mov r8d, 0x80	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40050ca	          0x4889c7	                            mov rdi, rax	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40050cd	      0xe8671b0000	                       call sym.decAddOp	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40050d2	    0x8b9538ffffff	             mov edx, dword [rbp - 0xc8]	      3024	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x40050d8	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      3024	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x40050de	            0x89c1	                            mov ecx, eax	      3024	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x40050e0	          0xc1e91f	                           shr ecx, 0x1f	      3024	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x40050e3	             0x1c8	                            add eax, ecx	      3024	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x40050e5	            0xd1f8	                              sar eax, 1	      3024	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x40050e7	            0x29c2	                            sub edx, eax	      3024	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x40050e9	            0x89d0	                            mov eax, edx	      3024	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x40050eb	    0x898538ffffff	             mov dword [rbp - 0xc8], eax	      3024	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x40050f1	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	      3025	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x40050f7	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      3025	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x40050fd	            0x89c1	                            mov ecx, eax	      3025	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x40050ff	          0xc1e91f	                           shr ecx, 0x1f	      3025	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x4005102	             0x1c8	                            add eax, ecx	      3025	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x4005104	            0xd1f8	                              sar eax, 1	      3025	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x4005106	            0x29c2	                            sub edx, eax	      3025	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x4005108	            0x89d0	                            mov eax, edx	      3025	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x400510a	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      3025	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x4005110	    0x488dbda4feff	                  lea rdi, [rbp - 0x15c]	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x4005117	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x400511e	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x4005125	    0x488db550ffff	                   lea rsi, [rbp - 0xb0]	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x400512c	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x4005133	          0x4989f9	                             mov r9, rdi	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x4005136	    0x41b800000000	                              mov r8d, 0	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x400513c	          0x4889c7	                            mov rdi, rax	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x400513f	      0xe8f51a0000	                       call sym.decAddOp	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x4005144	      0xe97d010000	                           jmp 0x40052c6	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x4005149	    0x488dbda4feff	                  lea rdi, [rbp - 0x15c]	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x4005150	    0x488d8d10ffff	                   lea rcx, [rbp - 0xf0]	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x4005157	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x400515e	    0x488bb5f8feff	            mov rsi, qword [rbp - 0x108]	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x4005165	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x400516c	          0x4989f9	                             mov r9, rdi	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x400516f	    0x41b800000000	                              mov r8d, 0	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x4005175	          0x4889c7	                            mov rdi, rax	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x4005178	      0xe8bc1a0000	                       call sym.decAddOp	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x400517d	    0xc7851cffffff	               mov dword [rbp - 0xe4], 5	      3030	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4
0x4005187	    0x488dbda4feff	                  lea rdi, [rbp - 0x15c]	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x400518e	    0x488d8d10ffff	                   lea rcx, [rbp - 0xf0]	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x4005195	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x400519c	    0x488bb500ffff	            mov rsi, qword [rbp - 0x100]	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x40051a3	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x40051aa	          0x4989f8	                             mov r8, rdi	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x40051ad	          0x4889c7	                            mov rdi, rax	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x40051b0	      0xe84c3f0000	                  call sym.decMultiplyOp	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x40051b5	    0x488dbda4feff	                  lea rdi, [rbp - 0x15c]	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x40051bc	    0x488d8d10ffff	                   lea rcx, [rbp - 0xf0]	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x40051c3	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x40051ca	    0x488bb500ffff	            mov rsi, qword [rbp - 0x100]	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x40051d1	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x40051d8	          0x4989f9	                             mov r9, rdi	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x40051db	    0x41b801000000	                              mov r8d, 1	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x40051e1	          0x4889c7	                            mov rdi, rax	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x40051e4	      0xe870650000	                   call sym.decCompareOp	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x40051e9	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3033	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_39
0x40051f0	         0xfb64008	               movzx eax, byte [rax + 8]	      3033	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_39
0x40051f4	            0x84c0	                             test al, al	      3033	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_39
0x40051f6	     0xf89ca000000	                           jns 0x40052c6	      3033	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_39
0x40051fc	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3034	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005203	          0x8b4004	                mov eax, dword [rax + 4]	      3034	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005206	          0x8d5001	                      lea edx, [rax + 1]	      3034	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005209	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3034	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005210	          0x895004	                mov dword [rax + 4], edx	      3034	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005213	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3035	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x400521a	    0x66c7400a0100	                 mov word [rax + 0xa], 1	      3035	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005220	    0x488dbda4feff	                  lea rdi, [rbp - 0x15c]	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x4005227	    0x488d8d10ffff	                   lea rcx, [rbp - 0xf0]	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x400522e	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x4005235	    0x488bb5f8feff	            mov rsi, qword [rbp - 0x108]	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x400523c	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x4005243	          0x4989f9	                             mov r9, rdi	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x4005246	    0x41b800000000	                              mov r8d, 0	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x400524c	          0x4889c7	                            mov rdi, rax	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x400524f	      0xe8e5190000	                       call sym.decAddOp	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x4005254	    0x8b9538ffffff	             mov edx, dword [rbp - 0xc8]	      3038	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x400525a	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      3038	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005260	            0x89c1	                            mov ecx, eax	      3038	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005262	          0xc1e91f	                           shr ecx, 0x1f	      3038	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005265	             0x1c8	                            add eax, ecx	      3038	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005267	            0xd1f8	                              sar eax, 1	      3038	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005269	            0x29c2	                            sub edx, eax	      3038	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x400526b	            0x89d0	                            mov eax, edx	      3038	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x400526d	    0x898538ffffff	             mov dword [rbp - 0xc8], eax	      3038	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005273	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	      3039	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005279	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      3039	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x400527f	            0x89c1	                            mov ecx, eax	      3039	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005281	          0xc1e91f	                           shr ecx, 0x1f	      3039	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005284	             0x1c8	                            add eax, ecx	      3039	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005286	            0xd1f8	                              sar eax, 1	      3039	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005288	            0x29c2	                            sub edx, eax	      3039	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x400528a	            0x89d0	                            mov eax, edx	      3039	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x400528c	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      3039	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4005292	    0x488dbda4feff	                  lea rdi, [rbp - 0x15c]	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x4005299	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40052a0	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40052a7	    0x488db550ffff	                   lea rsi, [rbp - 0xb0]	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40052ae	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40052b5	          0x4989f9	                             mov r9, rdi	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40052b8	    0x41b800000000	                              mov r8d, 0	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40052be	          0x4889c7	                            mov rdi, rax	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40052c1	      0xe873190000	                       call sym.decAddOp	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40052c6	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3047	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40052cd	          0x8b5004	                mov edx, dword [rax + 4]	      3047	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40052d0	    0x8b85b4feffff	            mov eax, dword [rbp - 0x14c]	      3047	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40052d6	            0x89c1	                            mov ecx, eax	      3047	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40052d8	          0xc1e91f	                           shr ecx, 0x1f	      3047	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40052db	             0x1c8	                            add eax, ecx	      3047	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40052dd	            0xd1f8	                              sar eax, 1	      3047	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40052df	             0x1c2	                            add edx, eax	      3047	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40052e1	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3047	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40052e8	          0x895004	                mov dword [rax + 4], edx	      3047	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40052eb	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      3051	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_42
0x40052f2	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3051	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_42
0x40052f9	          0x4889d6	                            mov rsi, rdx	      3051	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_42
0x40052fc	          0x4889c7	                            mov rdi, rax	      3051	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_42
0x40052ff	      0xe800000000	                          call 0x4005304	      3051	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_42
0x4005304	    0x488d95acfeff	                  lea rdx, [rbp - 0x154]	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x400530b	    0x488bb578feff	            mov rsi, qword [rbp - 0x188]	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x4005312	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x4005319	          0x4989d0	                             mov r8, rdx	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x400531c	      0xb901000000	                              mov ecx, 1	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x4005321	      0xba01000000	                              mov edx, 1	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x4005326	          0x4889c7	                            mov rdi, rax	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x4005329	      0xe837730000	                        call sym.decTrim	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x400532e	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3058	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x4005335	            0x8b00	                    mov eax, dword [rax]	      3058	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x4005337	             0x1c0	                            add eax, eax	      3058	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x4005339	          0x83e801	                              sub eax, 1	      3058	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x400533c	    0x3b85c0feffff	            cmp eax, dword [rbp - 0x140]	      3058	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x4005342	            0x7e16	                           jle 0x400535a	      3058	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x4005344	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      3059	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x400534a	       0xd20080000	                           or eax, 0x820	      3059	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x400534f	    0x8985a0feffff	            mov dword [rbp - 0x160], eax	      3059	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x4005355	      0xe94d020000	                           jmp 0x40055a7	      3059	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x400535a	    0xc785b0feffff	              mov dword [rbp - 0x150], 0	      3062	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5
0x4005364	    0x488dbdb0feff	                  lea rdi, [rbp - 0x150]	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x400536b	    0x488d8d10ffff	                   lea rcx, [rbp - 0xf0]	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x4005372	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x4005379	    0x488bb500ffff	            mov rsi, qword [rbp - 0x100]	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x4005380	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x4005387	          0x4989f8	                             mov r8, rdi	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x400538a	          0x4889c7	                            mov rdi, rax	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x400538d	      0xe86f3d0000	                  call sym.decMultiplyOp	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x4005392	    0x8b85b0feffff	            mov eax, dword [rbp - 0x150]	      3064	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	IF_19
0x4005398	      0x2500020000	                          and eax, 0x200	      3064	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	IF_19
0x400539d	            0x85c0	                           test eax, eax	      3064	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	IF_19
0x400539f	            0x7416	                            je 0x40053b7	      3064	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	IF_19
0x40053a1	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      3065	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	IF_19
0x40053a7	       0xd20080000	                           or eax, 0x820	      3065	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	IF_19
0x40053ac	    0x8985a0feffff	            mov dword [rbp - 0x160], eax	      3065	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	IF_19
0x40053b2	      0xe9f0010000	                           jmp 0x40055a7	      3065	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	IF_19
0x40053b7	    0x488dbdb0feff	                  lea rdi, [rbp - 0x150]	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x40053be	    0x488d8d10ffff	                   lea rcx, [rbp - 0xf0]	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x40053c5	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x40053cc	    0x488bb500ffff	            mov rsi, qword [rbp - 0x100]	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x40053d3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x40053da	          0x4989f9	                             mov r9, rdi	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x40053dd	    0x41b801000000	                              mov r8d, 1	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x40053e3	          0x4889c7	                            mov rdi, rax	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x40053e6	      0xe86e630000	                   call sym.decCompareOp	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x40053eb	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x40053f2	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x40053f6	          0x6685c0	                             test ax, ax	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x40053f9	            0x7523	                           jne 0x400541e	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x40053fb	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x4005402	            0x8b00	                    mov eax, dword [rax]	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x4005404	          0x83f801	                              cmp eax, 1	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x4005407	            0x7515	                           jne 0x400541e	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x4005409	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x4005410	         0xfb64008	               movzx eax, byte [rax + 8]	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x4005414	           0xfb6c0	                           movzx eax, al	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x4005417	          0x83e070	                           and eax, 0x70	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x400541a	            0x85c0	                           test eax, eax	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x400541c	            0x7416	                            je 0x4005434	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x400541e	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x4005424	       0xd20080000	                           or eax, 0x820	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x4005429	    0x8985a0feffff	            mov dword [rbp - 0x160], eax	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x400542f	      0xe973010000	                           jmp 0x40055a7	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x4005434	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3073	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7
0x400543b	          0x8b4004	                mov eax, dword [rax + 4]	      3073	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7
0x400543e	    0x8b95bcfeffff	            mov edx, dword [rbp - 0x144]	      3073	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7
0x4005444	            0x29c2	                            sub edx, eax	      3073	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7
0x4005446	            0x89d0	                            mov eax, edx	      3073	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7
0x4005448	    0x8985b8feffff	            mov dword [rbp - 0x148], eax	      3073	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7
0x400544e	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 0	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x4005455	            0x7914	                           jns 0x400546b	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x4005457	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x400545d	          0x80cc08	                                or ah, 8	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x4005460	    0x8985a0feffff	            mov dword [rbp - 0x160], eax	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x4005466	      0xe93c010000	                           jmp 0x40055a7	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x400546b	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      3077	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x4005472	          0x8b5004	                mov edx, dword [rax + 4]	      3077	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x4005475	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      3077	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x400547c	            0x8b00	                    mov eax, dword [rax]	      3077	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x400547e	            0x29c2	                            sub edx, eax	      3077	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x4005480	            0x89d0	                            mov eax, edx	      3077	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x4005482	          0x83c001	                              add eax, 1	      3077	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x4005485	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      3077	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x400548b	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x4005492	          0x8b4004	                mov eax, dword [rax + 4]	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x4005495	    0x8b95ccfeffff	            mov edx, dword [rbp - 0x134]	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x400549b	            0x29c2	                            sub edx, eax	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x400549d	            0x89d0	                            mov eax, edx	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x400549f	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x40054a5	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40054ab	    0x3b85d0feffff	            cmp eax, dword [rbp - 0x130]	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40054b1	            0x7e2a	                           jle 0x40054dd	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40054b3	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40054ba	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40054be	            0x84c0	                             test al, al	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40054c0	            0x741b	                            je 0x40054dd	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40054c2	    0x8b85d0feffff	            mov eax, dword [rbp - 0x130]	      3080	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40054c8	    0x8985b8feffff	            mov dword [rbp - 0x148], eax	      3080	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40054ce	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      3081	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40054d4	          0x80cc04	                                or ah, 4	      3081	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40054d7	    0x8985a0feffff	            mov dword [rbp - 0x160], eax	      3081	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40054dd	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      3083	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x40054e3	    0x3b85b8feffff	            cmp eax, dword [rbp - 0x148]	      3083	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x40054e9	            0x7d1b	                           jge 0x4005506	      3083	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x40054eb	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      3084	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x40054f1	    0x8985b8feffff	            mov dword [rbp - 0x148], eax	      3084	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x40054f7	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      3085	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x40054fd	          0x80cc04	                                or ah, 4	      3085	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x4005500	    0x8985a0feffff	            mov dword [rbp - 0x160], eax	      3085	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x4005506	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 0	      3087	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x400550d	     0xf8e94000000	                           jle 0x40055a7	      3087	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x4005513	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400551a	            0x8b00	                    mov eax, dword [rax]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400551c	          0x83f831	                           cmp eax, 0x31	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400551f	            0x7f17	                            jg 0x4005538	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4005521	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4005528	            0x8b00	                    mov eax, dword [rax]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400552a	            0x4898	                                    cdqe	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400552c	     0xfb680000000	                   movzx eax, byte [rax]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4005533	           0xfb6c0	                           movzx eax, al	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4005536	            0xeb1e	                           jmp 0x4005556	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4005538	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400553f	            0x8b00	                    mov eax, dword [rax]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4005541	          0x8d4802	                      lea ecx, [rax + 2]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4005544	      0xba56555555	                     mov edx, 0x55555556	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4005549	            0x89c8	                            mov eax, ecx	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400554b	            0xf7ea	                                imul edx	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400554d	            0x89c8	                            mov eax, ecx	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400554f	          0xc1f81f	                           sar eax, 0x1f	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4005552	            0x29c2	                            sub edx, eax	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4005554	            0x89d0	                            mov eax, edx	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4005556	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400555d	        0x488d4a0a	                    lea rcx, [rdx + 0xa]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4005561	    0x8b95b8feffff	            mov edx, dword [rbp - 0x148]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4005567	            0x89c6	                            mov esi, eax	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4005569	          0x4889cf	                            mov rdi, rcx	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400556c	      0xe8e4750000	                call sym.decShiftToLeast	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4005571	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3089	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x4005578	          0x8b5004	                mov edx, dword [rax + 4]	      3089	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x400557b	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	      3089	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x4005581	             0x1c2	                            add edx, eax	      3089	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x4005583	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3089	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x400558a	          0x895004	                mov dword [rax + 4], edx	      3089	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x400558d	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3090	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x4005594	            0x8b00	                    mov eax, dword [rax]	      3090	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x4005596	    0x2b85b8feffff	            sub eax, dword [rbp - 0x148]	      3090	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x400559c	            0x89c2	                            mov edx, eax	      3090	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x400559e	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      3090	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x40055a5	            0x8910	                    mov dword [rax], edx	      3090	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x40055a7	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      3099	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x40055ad	      0x2500200000	                         and eax, 0x2000	      3099	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x40055b2	            0x85c0	                           test eax, eax	      3099	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x40055b4	            0x745d	                            je 0x4005613	      3099	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x40055b6	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      3100	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x40055bd	          0x8b5004	                mov edx, dword [rax + 4]	      3100	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x40055c0	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      3100	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x40055c7	            0x8b00	                    mov eax, dword [rax]	      3100	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x40055c9	             0x1d0	                            add eax, edx	      3100	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x40055cb	          0x83e801	                              sub eax, 1	      3100	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x40055ce	    0x8985d4feffff	            mov dword [rbp - 0x12c], eax	      3100	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x40055d4	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x40055db	          0x8b4008	                mov eax, dword [rax + 8]	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x40055de	             0x1c0	                            add eax, eax	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x40055e0	    0x3b85d4feffff	            cmp eax, dword [rbp - 0x12c]	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x40055e6	            0x7f0f	                            jg 0x40055f7	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x40055e8	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x40055ee	          0x80e4cf	                            and ah, 0xcf	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x40055f1	    0x8985a0feffff	            mov dword [rbp - 0x160], eax	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x40055f7	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x40055fd	          0x83e020	                           and eax, 0x20	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x4005600	            0x85c0	                           test eax, eax	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x4005602	            0x750f	                           jne 0x4005613	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x4005604	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x400560a	          0x80e4df	                            and ah, 0xdf	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x400560d	    0x8985a0feffff	            mov dword [rbp - 0x160], eax	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x4005613	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x400561a	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x4005621	          0x4889d6	                            mov rsi, rdx	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x4005624	          0x4889c7	                            mov rdi, rax	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x4005627	      0xe800000000	                          call 0x400562c	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x400562c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      3114	decNumber.c	FUNCTION_68	FUNCTION_45
0x4005633	          0x4889c7	                            mov rdi, rax	      3114	decNumber.c	FUNCTION_68	FUNCTION_45
0x4005636	      0xe800000000	                          call 0x400563b	      3114	decNumber.c	FUNCTION_68	FUNCTION_45
0x400563b	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3115	decNumber.c	FUNCTION_68	FUNCTION_45
0x4005642	          0x4889c7	                            mov rdi, rax	      3115	decNumber.c	FUNCTION_68	FUNCTION_45
0x4005645	      0xe800000000	                          call 0x400564a	      3115	decNumber.c	FUNCTION_68	FUNCTION_45
0x400564a	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      3116	decNumber.c	FUNCTION_68	FUNCTION_45
0x4005651	          0x4889c7	                            mov rdi, rax	      3116	decNumber.c	FUNCTION_68	FUNCTION_45
0x4005654	      0xe800000000	                          call 0x4005659	      3116	decNumber.c	FUNCTION_68	FUNCTION_45
0x4005659	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x400565f	            0x85c0	                           test eax, eax	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x4005661	            0x741e	                            je 0x4005681	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x4005663	    0x8b8da0feffff	            mov ecx, dword [rbp - 0x160]	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x4005669	    0x488b9578feff	            mov rdx, qword [rbp - 0x188]	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x4005670	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x4005677	            0x89ce	                            mov esi, ecx	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x4005679	          0x4889c7	                            mov rdi, rax	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x400567c	      0xe8978d0000	                      call sym.decStatus	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x4005681	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      3124	decNumber.c	FUNCTION_68	FUNCTION_45
0x4005688	        0x488b75f8	                mov rsi, qword [rbp - 8]	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400568c	    0x644833342528	                xor rsi, qword fs:[0x28]	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x4005695	            0x7405	                            je 0x400569c	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x4005697	      0xe800000000	                          call 0x400569c	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400569c	              0xc9	                                   leave	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400569d	              0xc3	                                     ret	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
decNumberZero	SWITCH,0:IF,1:FOR,0:CALL,1:DO,0:ELSE,0:WHILE,0:functions,0	14
0x400638c	              0x55	                                push rbp	      3582	decNumber.c	FUNCTION_68	FUNCTION_62
0x400638d	          0x4889e5	                            mov rbp, rsp	      3582	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006390	        0x48897df8	                mov qword [rbp - 8], rdi	      3582	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006394	        0x488b45f8	                mov rax, qword [rbp - 8]	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006398	        0xc6400800	                   mov byte [rax + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400639c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40063a0	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40063a7	        0x488b45f8	                mov rax, qword [rbp - 8]	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40063ab	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40063b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40063b5	    0x66c7400a0000	                 mov word [rax + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40063bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      3592	decNumber.c	FUNCTION_68	FUNCTION_62
0x40063bf	              0x5d	                                 pop rbp	      3593	decNumber.c	FUNCTION_68	FUNCTION_62
0x40063c0	              0xc3	                                     ret	      3593	decNumber.c	FUNCTION_68	FUNCTION_62
decNumberCompareTotalMag	SWITCH,0:IF,8:FOR,0:CALL,11:DO,1:ELSE,0:WHILE,0:functions,0	168
0x40012dc	              0x55	                                push rbp	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40012dd	          0x4889e5	                            mov rbp, rsp	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40012e0	    0x4881ecb00000	                           sub rsp, 0xb0	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40012e7	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40012ee	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40012f5	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40012fc	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4001303	    0x64488b042528	                mov rax, qword fs:[0x28]	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x400130c	        0x488945f8	                mov qword [rbp - 8], rax	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4001310	            0x31c0	                            xor eax, eax	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4001312	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	       928	decNumber.c	FUNCTION_68	FUNCTION_14
0x400131c	    0x48c745800000	               mov qword [rbp - 0x80], 0	       931	decNumber.c	FUNCTION_68	FUNCTION_14
0x4001324	    0x48c745880000	               mov qword [rbp - 0x78], 0	       933	decNumber.c	FUNCTION_68	FUNCTION_14
0x400132c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       942	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_4
0x4001333	         0xfb64008	               movzx eax, byte [rax + 8]	       942	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_4
0x4001337	            0x84c0	                             test al, al	       942	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_4
0x4001339	     0xf89da000000	                           jns 0x4001419	       942	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_4
0x400133f	        0x488d45a0	                   lea rax, [rbp - 0x60]	       943	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x4001343	        0x48894590	             mov qword [rbp - 0x70], rax	       943	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x4001347	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400134e	            0x8b00	                    mov eax, dword [rax]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4001350	          0x83f831	                           cmp eax, 0x31	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4001353	            0x7f22	                            jg 0x4001377	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4001355	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400135c	            0x8b00	                    mov eax, dword [rax]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400135e	            0x4898	                                    cdqe	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4001360	     0xfb680000000	                   movzx eax, byte [rax]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4001367	           0xfb6c0	                           movzx eax, al	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400136a	          0x83e801	                              sub eax, 1	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400136d	            0x4898	                                    cdqe	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400136f	        0x4883c006	                              add rax, 6	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4001373	             0x1c0	                            add eax, eax	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4001375	            0xeb29	                           jmp 0x40013a0	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4001377	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400137e	            0x8b00	                    mov eax, dword [rax]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4001380	          0x8d4802	                      lea ecx, [rax + 2]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4001383	      0xba56555555	                     mov edx, 0x55555556	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4001388	            0x89c8	                            mov eax, ecx	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400138a	            0xf7ea	                                imul edx	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400138c	            0x89c8	                            mov eax, ecx	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400138e	          0xc1f81f	                           sar eax, 0x1f	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4001391	            0x29c2	                            sub edx, eax	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4001393	            0x89d0	                            mov eax, edx	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4001395	          0x83e801	                              sub eax, 1	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4001398	            0x4898	                                    cdqe	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400139a	        0x4883c006	                              add rax, 6	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400139e	             0x1c0	                            add eax, eax	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x40013a0	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x40013a6	    0x83bd7cffffff	           cmp dword [rbp - 0x84], 0x24 	       945	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x40013ad	            0x7635	                           jbe 0x40013e4	       945	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x40013af	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       946	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x40013b5	          0x4889c7	                            mov rdi, rax	       946	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x40013b8	      0xe800000000	                          call 0x40013bd	       946	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x40013bd	        0x48894580	             mov qword [rbp - 0x80], rax	       946	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x40013c1	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       947	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x40013c6	            0x7514	                           jne 0x40013dc	       947	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x40013c8	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       948	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x40013ce	          0x83c810	                            or eax, 0x10	       948	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x40013d1	    0x898578ffffff	             mov dword [rbp - 0x88], eax	       948	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x40013d7	      0xe95b010000	                           jmp 0x4001537	       949	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x40013dc	        0x488b4580	             mov rax, qword [rbp - 0x80]	       950	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x40013e0	        0x48894590	             mov qword [rbp - 0x70], rax	       950	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x40013e4	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	       952	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_6
0x40013eb	        0x488b4590	             mov rax, qword [rbp - 0x70]	       952	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_6
0x40013ef	          0x4889d6	                            mov rsi, rdx	       952	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_6
0x40013f2	          0x4889c7	                            mov rdi, rax	       952	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_6
0x40013f5	      0xe800000000	                          call 0x40013fa	       952	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_6
0x40013fa	        0x488b4590	             mov rax, qword [rbp - 0x70]	       953	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x40013fe	         0xfb64008	               movzx eax, byte [rax + 8]	       953	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x4001402	          0x83e07f	                           and eax, 0x7f	       953	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x4001405	            0x89c2	                            mov edx, eax	       953	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x4001407	        0x488b4590	             mov rax, qword [rbp - 0x70]	       953	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x400140b	          0x885008	                  mov byte [rax + 8], dl	       953	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x400140e	        0x488b4590	             mov rax, qword [rbp - 0x70]	       954	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x4001412	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       954	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x4001419	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       956	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_7
0x4001420	         0xfb64008	               movzx eax, byte [rax + 8]	       956	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_7
0x4001424	            0x84c0	                             test al, al	       956	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_7
0x4001426	     0xf89d7000000	                           jns 0x4001503	       956	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_7
0x400142c	        0x488d45d0	                   lea rax, [rbp - 0x30]	       957	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x4001430	        0x48894598	             mov qword [rbp - 0x68], rax	       957	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x4001434	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400143b	            0x8b00	                    mov eax, dword [rax]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400143d	          0x83f831	                           cmp eax, 0x31	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4001440	            0x7f22	                            jg 0x4001464	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4001442	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4001449	            0x8b00	                    mov eax, dword [rax]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400144b	            0x4898	                                    cdqe	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400144d	     0xfb680000000	                   movzx eax, byte [rax]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4001454	           0xfb6c0	                           movzx eax, al	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4001457	          0x83e801	                              sub eax, 1	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400145a	            0x4898	                                    cdqe	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400145c	        0x4883c006	                              add rax, 6	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4001460	             0x1c0	                            add eax, eax	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4001462	            0xeb29	                           jmp 0x400148d	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4001464	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400146b	            0x8b00	                    mov eax, dword [rax]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400146d	          0x8d4802	                      lea ecx, [rax + 2]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4001470	      0xba56555555	                     mov edx, 0x55555556	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4001475	            0x89c8	                            mov eax, ecx	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4001477	            0xf7ea	                                imul edx	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4001479	            0x89c8	                            mov eax, ecx	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400147b	          0xc1f81f	                           sar eax, 0x1f	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400147e	            0x29c2	                            sub edx, eax	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4001480	            0x89d0	                            mov eax, edx	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4001482	          0x83e801	                              sub eax, 1	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4001485	            0x4898	                                    cdqe	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4001487	        0x4883c006	                              add rax, 6	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400148b	             0x1c0	                            add eax, eax	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400148d	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4001493	    0x83bd7cffffff	           cmp dword [rbp - 0x84], 0x24 	       959	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x400149a	            0x7632	                           jbe 0x40014ce	       959	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x400149c	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       960	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x40014a2	          0x4889c7	                            mov rdi, rax	       960	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x40014a5	      0xe800000000	                          call 0x40014aa	       960	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x40014aa	        0x48894588	             mov qword [rbp - 0x78], rax	       960	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x40014ae	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       961	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x40014b3	            0x7511	                           jne 0x40014c6	       961	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x40014b5	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       962	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x40014bb	          0x83c810	                            or eax, 0x10	       962	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x40014be	    0x898578ffffff	             mov dword [rbp - 0x88], eax	       962	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x40014c4	            0xeb71	                           jmp 0x4001537	       963	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x40014c6	        0x488b4588	             mov rax, qword [rbp - 0x78]	       964	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x40014ca	        0x48894598	             mov qword [rbp - 0x68], rax	       964	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x40014ce	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       966	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_9
0x40014d5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       966	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_9
0x40014d9	          0x4889d6	                            mov rsi, rdx	       966	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_9
0x40014dc	          0x4889c7	                            mov rdi, rax	       966	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_9
0x40014df	      0xe800000000	                          call 0x40014e4	       966	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_9
0x40014e4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x40014e8	         0xfb64008	               movzx eax, byte [rax + 8]	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x40014ec	          0x83e07f	                           and eax, 0x7f	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x40014ef	            0x89c2	                            mov edx, eax	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x40014f1	        0x488b4598	             mov rax, qword [rbp - 0x68]	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x40014f5	          0x885008	                  mov byte [rax + 8], dl	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x40014f8	        0x488b4598	             mov rax, qword [rbp - 0x68]	       968	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x40014fc	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       968	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x4001503	    0x488dbd78ffff	                   lea rdi, [rbp - 0x88]	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x400150a	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4001511	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4001518	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x400151f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4001526	          0x4989f9	                             mov r9, rdi	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4001529	    0x41b804000000	                              mov r8d, 4	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x400152f	          0x4889c7	                            mov rdi, rax	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4001532	      0xe822a20000	                   call sym.decCompareOp	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4001537	        0x488b4580	             mov rax, qword [rbp - 0x80]	       973	decNumber.c	FUNCTION_68	FUNCTION_14
0x400153b	          0x4889c7	                            mov rdi, rax	       973	decNumber.c	FUNCTION_68	FUNCTION_14
0x400153e	      0xe800000000	                          call 0x4001543	       973	decNumber.c	FUNCTION_68	FUNCTION_14
0x4001543	        0x488b4588	             mov rax, qword [rbp - 0x78]	       974	decNumber.c	FUNCTION_68	FUNCTION_14
0x4001547	          0x4889c7	                            mov rdi, rax	       974	decNumber.c	FUNCTION_68	FUNCTION_14
0x400154a	      0xe800000000	                          call 0x400154f	       974	decNumber.c	FUNCTION_68	FUNCTION_14
0x400154f	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x4001555	            0x85c0	                           test eax, eax	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x4001557	            0x741e	                            je 0x4001577	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x4001559	    0x8b8d78ffffff	             mov ecx, dword [rbp - 0x88]	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x400155f	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x4001566	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x400156d	            0x89ce	                            mov esi, ecx	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x400156f	          0x4889c7	                            mov rdi, rax	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x4001572	      0xe8a1ce0000	                      call sym.decStatus	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x4001577	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       976	decNumber.c	FUNCTION_68	FUNCTION_14
0x400157e	        0x488b75f8	                mov rsi, qword [rbp - 8]	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4001582	    0x644833342528	                xor rsi, qword fs:[0x28]	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x400158b	            0x7405	                            je 0x4001592	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x400158d	      0xe800000000	                          call 0x4001592	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4001592	              0xc9	                                   leave	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4001593	              0xc3	                                     ret	       977	decNumber.c	FUNCTION_68	FUNCTION_14
decNumberFMA	SWITCH,0:IF,10:FOR,0:CALL,17:DO,1:ELSE,1:WHILE,0:functions,0	169
0x4001739	              0x55	                                push rbp	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x400173a	          0x4889e5	                            mov rbp, rsp	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x400173d	    0x4881ecd00000	                           sub rsp, 0xd0	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4001744	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x400174b	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4001752	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4001759	    0x48898d40ffff	             mov qword [rbp - 0xc0], rcx	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4001760	    0x4c898538ffff	              mov qword [rbp - 0xc8], r8	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4001767	    0x64488b042528	                mov rax, qword fs:[0x28]	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4001770	        0x488945f8	                mov qword [rbp - 8], rax	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4001774	            0x31c0	                            xor eax, eax	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4001776	    0xc78568ffffff	               mov dword [rbp - 0x98], 0	      1106	decNumber.c	FUNCTION_68	FUNCTION_18
0x4001780	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x400178b	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4001792	         0xfb64008	               movzx eax, byte [rax + 8]	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4001796	           0xfb6c0	                           movzx eax, al	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4001799	          0x83e070	                           and eax, 0x70	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x400179c	            0x85c0	                           test eax, eax	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x400179e	            0x7528	                           jne 0x40017c8	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x40017a0	    0x488d9568ffff	                   lea rdx, [rbp - 0x98]	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x40017a7	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x40017ae	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x40017b5	          0x4889ce	                            mov rsi, rcx	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x40017b8	          0x4889c7	                            mov rdi, rax	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x40017bb	      0xe87ec50000	                   call sym.decCheckMath	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x40017c0	            0x85c0	                           test eax, eax	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x40017c2	     0xf8515020000	                           jne 0x40019dd	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x40017c8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x40017cf	         0xfb64008	               movzx eax, byte [rax + 8]	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x40017d3	           0xfb6c0	                           movzx eax, al	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x40017d6	          0x83e070	                           and eax, 0x70	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x40017d9	            0x85c0	                           test eax, eax	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x40017db	            0x7528	                           jne 0x4001805	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x40017dd	    0x488d9568ffff	                   lea rdx, [rbp - 0x98]	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x40017e4	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x40017eb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x40017f2	          0x4889ce	                            mov rsi, rcx	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x40017f5	          0x4889c7	                            mov rdi, rax	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x40017f8	      0xe841c50000	                   call sym.decCheckMath	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x40017fd	            0x85c0	                           test eax, eax	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x40017ff	     0xf85d8010000	                           jne 0x40019dd	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4001805	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x400180c	         0xfb64008	               movzx eax, byte [rax + 8]	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4001810	           0xfb6c0	                           movzx eax, al	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4001813	          0x83e070	                           and eax, 0x70	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4001816	            0x85c0	                           test eax, eax	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4001818	            0x7528	                           jne 0x4001842	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x400181a	    0x488d9568ffff	                   lea rdx, [rbp - 0x98]	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4001821	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4001828	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x400182f	          0x4889ce	                            mov rsi, rcx	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4001832	          0x4889c7	                            mov rdi, rax	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4001835	      0xe804c50000	                   call sym.decCheckMath	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x400183a	            0x85c0	                           test eax, eax	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x400183c	     0xf859b010000	                           jne 0x40019dd	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4001842	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4001849	          0x488b10	                    mov rdx, qword [rax]	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x400184c	        0x48895580	             mov qword [rbp - 0x80], rdx	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4001850	        0x488b5008	                mov rdx, qword [rax + 8]	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4001854	        0x48895588	             mov qword [rbp - 0x78], rdx	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4001858	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x400185c	        0x48895590	             mov qword [rbp - 0x70], rdx	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4001860	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4001863	          0x894598	             mov dword [rbp - 0x68], eax	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4001866	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1131	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x400186d	            0x8b10	                    mov edx, dword [rax]	      1131	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x400186f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1131	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4001876	            0x8b00	                    mov eax, dword [rax]	      1131	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4001878	             0x1d0	                            add eax, edx	      1131	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x400187a	          0x894580	             mov dword [rbp - 0x80], eax	      1131	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x400187d	    0xc74584ffc99a	      mov dword [rbp - 0x7c], 0x3b9ac9ff	      1133	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4001884	    0xc74588013665	      mov dword [rbp - 0x78], 0xc4653601	      1134	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x400188b	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1136	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x400188f	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1136	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4001896	          0x8b4580	             mov eax, dword [rbp - 0x80]	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4001899	          0x83f831	                           cmp eax, 0x31	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x400189c	            0x7f1c	                            jg 0x40018ba	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x400189e	          0x8b4580	             mov eax, dword [rbp - 0x80]	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018a1	            0x4898	                                    cdqe	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018a3	     0xfb680000000	                   movzx eax, byte [rax]	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018aa	           0xfb6c0	                           movzx eax, al	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018ad	          0x83e801	                              sub eax, 1	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018b0	            0x4898	                                    cdqe	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018b2	        0x4883c006	                              add rax, 6	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018b6	             0x1c0	                            add eax, eax	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018b8	            0xeb23	                           jmp 0x40018dd	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018ba	          0x8b4580	             mov eax, dword [rbp - 0x80]	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018bd	          0x8d4802	                      lea ecx, [rax + 2]	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018c0	      0xba56555555	                     mov edx, 0x55555556	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018c5	            0x89c8	                            mov eax, ecx	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018c7	            0xf7ea	                                imul edx	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018c9	            0x89c8	                            mov eax, ecx	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018cb	          0xc1f81f	                           sar eax, 0x1f	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018ce	            0x29c2	                            sub edx, eax	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018d0	            0x89d0	                            mov eax, edx	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018d2	          0x83e801	                              sub eax, 1	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018d5	            0x4898	                                    cdqe	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018d7	        0x4883c006	                              add rax, 6	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018db	             0x1c0	                            add eax, eax	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018dd	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40018e3	    0x83bd6cffffff	           cmp dword [rbp - 0x94], 0x3c 	      1138	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x40018ea	            0x7641	                           jbe 0x400192d	      1138	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x40018ec	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      1139	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x40018f2	          0x4889c7	                            mov rdi, rax	      1139	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x40018f5	      0xe800000000	                          call 0x40018fa	      1139	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x40018fa	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1139	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x4001901	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      1140	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x4001909	            0x7514	                           jne 0x400191f	      1140	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x400190b	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      1141	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x4001911	          0x83c810	                            or eax, 0x10	      1141	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x4001914	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      1141	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x400191a	      0xe9be000000	                           jmp 0x40019dd	      1142	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x400191f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1143	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x4001926	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1143	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x400192d	    0x488dbd68ffff	                   lea rdi, [rbp - 0x98]	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x4001934	        0x488d4d80	                   lea rcx, [rbp - 0x80]	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x4001938	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x400193f	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x4001946	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x400194d	          0x4989f8	                             mov r8, rdi	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x4001950	          0x4889c7	                            mov rdi, rax	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x4001953	      0xe8a9770000	                  call sym.decMultiplyOp	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x4001958	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      1154	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x400195e	      0x2580000000	                           and eax, 0x80	      1154	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x4001963	            0x85c0	                           test eax, eax	      1154	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x4001965	            0x7442	                            je 0x40019a9	      1154	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x4001967	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      1155	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8
0x400196d	      0x2500000040	                     and eax, 0x40000000	      1155	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8
0x4001972	            0x85c0	                           test eax, eax	      1155	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8
0x4001974	            0x751c	                           jne 0x4001992	      1155	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8
0x4001976	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1156	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8	CALL_12
0x400197d	          0x4889c7	                            mov rdi, rax	      1156	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8	CALL_12
0x4001980	      0xe800000000	                          call 0x4001985	      1156	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8	CALL_12
0x4001985	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1157	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8
0x400198c	        0xc6400820	                mov byte [rax + 8], 0x20	      1157	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8
0x4001990	            0xeb4b	                           jmp 0x40019dd	      1158	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8
0x4001992	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1160	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	CALL_13
0x4001996	          0x4889c7	                            mov rdi, rax	      1160	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	CALL_13
0x4001999	      0xe800000000	                          call 0x400199e	      1160	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	CALL_13
0x400199e	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1161	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x40019a2	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      1161	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x40019a9	    0x488dbd68ffff	                   lea rdi, [rbp - 0x98]	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x40019b0	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x40019b7	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x40019be	    0x488bb578ffff	             mov rsi, qword [rbp - 0x88]	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x40019c5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x40019cc	          0x4989f9	                             mov r9, rdi	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x40019cf	    0x41b800000000	                              mov r8d, 0	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x40019d5	          0x4889c7	                            mov rdi, rax	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x40019d8	      0xe85c520000	                       call sym.decAddOp	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x40019dd	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1172	decNumber.c	FUNCTION_68	FUNCTION_18
0x40019e4	          0x4889c7	                            mov rdi, rax	      1172	decNumber.c	FUNCTION_68	FUNCTION_18
0x40019e7	      0xe800000000	                          call 0x40019ec	      1172	decNumber.c	FUNCTION_68	FUNCTION_18
0x40019ec	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x40019f2	            0x85c0	                           test eax, eax	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x40019f4	            0x741e	                            je 0x4001a14	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x40019f6	    0x8b8d68ffffff	             mov ecx, dword [rbp - 0x98]	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x40019fc	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4001a03	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4001a0a	            0x89ce	                            mov esi, ecx	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4001a0c	          0x4889c7	                            mov rdi, rax	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4001a0f	      0xe804ca0000	                      call sym.decStatus	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4001a14	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1177	decNumber.c	FUNCTION_68	FUNCTION_18
0x4001a1b	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4001a1f	    0x644833342528	                xor rsi, qword fs:[0x28]	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4001a28	            0x7405	                            je 0x4001a2f	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4001a2a	      0xe800000000	                          call 0x4001a2f	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4001a2f	              0xc9	                                   leave	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4001a30	              0xc3	                                     ret	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
decCheckMath	SWITCH,0:IF,2:FOR,0:CALL,1:DO,0:ELSE,1:WHILE,0:functions,0	73
0x400dd3e	              0x55	                                push rbp	      7509	decNumber.c	FUNCTION_19
0x400dd3f	          0x4889e5	                            mov rbp, rsp	      7509	decNumber.c	FUNCTION_19
0x400dd42	        0x48897de8	             mov qword [rbp - 0x18], rdi	      7509	decNumber.c	FUNCTION_19
0x400dd46	        0x488975e0	             mov qword [rbp - 0x20], rsi	      7509	decNumber.c	FUNCTION_19
0x400dd4a	        0x488955d8	             mov qword [rbp - 0x28], rdx	      7509	decNumber.c	FUNCTION_19
0x400dd4e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7510	decNumber.c	FUNCTION_19
0x400dd52	            0x8b00	                    mov eax, dword [rax]	      7510	decNumber.c	FUNCTION_19
0x400dd54	          0x8945fc	                mov dword [rbp - 4], eax	      7510	decNumber.c	FUNCTION_19
0x400dd57	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7511	decNumber.c	FUNCTION_19	IF_1
0x400dd5b	            0x8b00	                    mov eax, dword [rax]	      7511	decNumber.c	FUNCTION_19	IF_1
0x400dd5d	      0x3d3f420f00	                        cmp eax, 0xf423f	      7511	decNumber.c	FUNCTION_19	IF_1
0x400dd62	            0x7f1e	                            jg 0x400dd82	      7511	decNumber.c	FUNCTION_19	IF_1
0x400dd64	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7512	decNumber.c	FUNCTION_19	IF_1
0x400dd68	          0x8b4004	                mov eax, dword [rax + 4]	      7512	decNumber.c	FUNCTION_19	IF_1
0x400dd6b	      0x3d3f420f00	                        cmp eax, 0xf423f	      7512	decNumber.c	FUNCTION_19	IF_1
0x400dd70	            0x7f10	                            jg 0x400dd82	      7512	decNumber.c	FUNCTION_19	IF_1
0x400dd72	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7513	decNumber.c	FUNCTION_19	IF_1
0x400dd76	          0x8b4008	                mov eax, dword [rax + 8]	      7513	decNumber.c	FUNCTION_19	IF_1
0x400dd79	            0xf7d8	                                 neg eax	      7513	decNumber.c	FUNCTION_19	IF_1
0x400dd7b	      0x3d3f420f00	                        cmp eax, 0xf423f	      7513	decNumber.c	FUNCTION_19	IF_1
0x400dd80	            0x7e13	                           jle 0x400dd95	      7513	decNumber.c	FUNCTION_19	IF_1
0x400dd82	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7513	decNumber.c	FUNCTION_19	IF_1
0x400dd86	            0x8b00	                    mov eax, dword [rax]	      7513	decNumber.c	FUNCTION_19	IF_1
0x400dd88	          0x83c840	                            or eax, 0x40	      7513	decNumber.c	FUNCTION_19	IF_1
0x400dd8b	            0x89c2	                            mov edx, eax	      7513	decNumber.c	FUNCTION_19	IF_1
0x400dd8d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7513	decNumber.c	FUNCTION_19	IF_1
0x400dd91	            0x8910	                    mov dword [rax], edx	      7513	decNumber.c	FUNCTION_19	IF_1
0x400dd93	            0xeb73	                           jmp 0x400de08	      7513	decNumber.c	FUNCTION_19	IF_1
0x400dd95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400dd99	            0x8b00	                    mov eax, dword [rax]	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400dd9b	      0x3d3f420f00	                        cmp eax, 0xf423f	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400dda0	            0x7f2c	                            jg 0x400ddce	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400dda2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7515	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400dda6	          0x8b5004	                mov edx, dword [rax + 4]	      7515	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400dda9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7515	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddad	            0x8b00	                    mov eax, dword [rax]	      7515	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddaf	             0x1d0	                            add eax, edx	      7515	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddb1	      0x3d40420f00	                        cmp eax, 0xf4240	      7515	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddb6	            0x7f16	                            jg 0x400ddce	      7515	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddb8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddbc	          0x8b5004	                mov edx, dword [rax + 4]	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddbf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddc3	            0x8b00	                    mov eax, dword [rax]	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddc5	             0x1d0	                            add eax, edx	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddc7	      0x3d847be1ff	                     cmp eax, 0xffe17b84	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddcc	            0x7d3a	                           jge 0x400de08	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddd2	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddd6	          0x6685c0	                             test ax, ax	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddd9	            0x751d	                           jne 0x400ddf8	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400dddb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400dddf	            0x8b00	                    mov eax, dword [rax]	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400dde1	          0x83f801	                              cmp eax, 1	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400dde4	            0x7512	                           jne 0x400ddf8	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400dde6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddea	         0xfb64008	               movzx eax, byte [rax + 8]	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddee	           0xfb6c0	                           movzx eax, al	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddf1	          0x83e070	                           and eax, 0x70	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddf4	            0x85c0	                           test eax, eax	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddf6	            0x7410	                            je 0x400de08	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddf8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddfc	            0x8b00	                    mov eax, dword [rax]	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400ddfe	             0xc80	                             or al, 0x80	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400de00	            0x89c2	                            mov edx, eax	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400de02	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400de06	            0x8910	                    mov dword [rax], edx	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400de08	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7518	decNumber.c	FUNCTION_19
0x400de0c	            0x8b00	                    mov eax, dword [rax]	      7518	decNumber.c	FUNCTION_19
0x400de0e	          0x3b45fc	                cmp eax, dword [rbp - 4]	      7518	decNumber.c	FUNCTION_19
0x400de11	           0xf95c0	                                setne al	      7518	decNumber.c	FUNCTION_19
0x400de14	           0xfb6c0	                           movzx eax, al	      7518	decNumber.c	FUNCTION_19
0x400de17	              0x5d	                                 pop rbp	      7519	decNumber.c	FUNCTION_19
0x400de18	              0xc3	                                     ret	      7519	decNumber.c	FUNCTION_19
decQuantizeOp	SWITCH,0:IF,21:FOR,0:CALL,15:DO,1:ELSE,6:WHILE,0:functions,0	276
0x400b3ba	              0x55	                                push rbp	      5827	decNumber.c	FUNCTION_1
0x400b3bb	          0x4889e5	                            mov rbp, rsp	      5827	decNumber.c	FUNCTION_1
0x400b3be	        0x4883c480	             add rsp, 0xffffffffffffff80	      5827	decNumber.c	FUNCTION_1
0x400b3c2	        0x48897da8	             mov qword [rbp - 0x58], rdi	      5827	decNumber.c	FUNCTION_1
0x400b3c6	        0x488975a0	             mov qword [rbp - 0x60], rsi	      5827	decNumber.c	FUNCTION_1
0x400b3ca	        0x48895598	             mov qword [rbp - 0x68], rdx	      5827	decNumber.c	FUNCTION_1
0x400b3ce	        0x48894d90	             mov qword [rbp - 0x70], rcx	      5827	decNumber.c	FUNCTION_1
0x400b3d2	          0x4489c0	                            mov eax, r8d	      5827	decNumber.c	FUNCTION_1
0x400b3d5	        0x4c894d80	              mov qword [rbp - 0x80], r9	      5827	decNumber.c	FUNCTION_1
0x400b3d9	          0x88458c	               mov byte [rbp - 0x74], al	      5827	decNumber.c	FUNCTION_1
0x400b3dc	    0x64488b042528	                mov rax, qword fs:[0x28]	      5827	decNumber.c	FUNCTION_1
0x400b3e5	        0x488945f8	                mov qword [rbp - 8], rax	      5827	decNumber.c	FUNCTION_1
0x400b3e9	            0x31c0	                            xor eax, eax	      5827	decNumber.c	FUNCTION_1
0x400b3eb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5832	decNumber.c	FUNCTION_1
0x400b3ef	        0x488945c8	             mov qword [rbp - 0x38], rax	      5832	decNumber.c	FUNCTION_1
0x400b3f3	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5833	decNumber.c	FUNCTION_1
0x400b3f7	            0x8b00	                    mov eax, dword [rax]	      5833	decNumber.c	FUNCTION_1
0x400b3f9	          0x8945bc	             mov dword [rbp - 0x44], eax	      5833	decNumber.c	FUNCTION_1
0x400b3fc	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      5835	decNumber.c	FUNCTION_1
0x400b403	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5836	decNumber.c	FUNCTION_1
0x400b407	          0x8b4008	                mov eax, dword [rax + 8]	      5836	decNumber.c	FUNCTION_1
0x400b40a	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      5836	decNumber.c	FUNCTION_1
0x400b40d	          0x83ea01	                              sub edx, 1	      5836	decNumber.c	FUNCTION_1
0x400b410	            0x29d0	                            sub eax, edx	      5836	decNumber.c	FUNCTION_1
0x400b412	          0x8945c0	             mov dword [rbp - 0x40], eax	      5836	decNumber.c	FUNCTION_1
0x400b415	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400b419	         0xfb65008	               movzx edx, byte [rax + 8]	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400b41d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400b421	         0xfb64008	               movzx eax, byte [rax + 8]	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400b425	             0x9d0	                             or eax, edx	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400b427	           0xfb6c0	                           movzx eax, al	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400b42a	          0x83e070	                           and eax, 0x70	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400b42d	            0x85c0	                           test eax, eax	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400b42f	     0xf8489000000	                            je 0x400b4be	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400b435	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5863	decNumber.c	FUNCTION_1	DO_1	IF_7	IF_8
0x400b439	         0xfb65008	               movzx edx, byte [rax + 8]	      5863	decNumber.c	FUNCTION_1	DO_1	IF_7	IF_8
0x400b43d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5863	decNumber.c	FUNCTION_1	DO_1	IF_7	IF_8
0x400b441	         0xfb64008	               movzx eax, byte [rax + 8]	      5863	decNumber.c	FUNCTION_1	DO_1	IF_7	IF_8
0x400b445	             0x9d0	                             or eax, edx	      5863	decNumber.c	FUNCTION_1	DO_1	IF_7	IF_8
0x400b447	           0xfb6c0	                           movzx eax, al	      5863	decNumber.c	FUNCTION_1	DO_1	IF_7	IF_8
0x400b44a	          0x83e030	                           and eax, 0x30	      5863	decNumber.c	FUNCTION_1	DO_1	IF_7	IF_8
0x400b44d	            0x85c0	                           test eax, eax	      5863	decNumber.c	FUNCTION_1	DO_1	IF_7	IF_8
0x400b44f	            0x7424	                            je 0x400b475	      5863	decNumber.c	FUNCTION_1	DO_1	IF_7	IF_8
0x400b451	        0x488b7d80	             mov rdi, qword [rbp - 0x80]	      5864	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_4
0x400b455	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      5864	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_4
0x400b459	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      5864	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_4
0x400b45d	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      5864	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_4
0x400b461	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5864	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_4
0x400b465	          0x4989f8	                             mov r8, rdi	      5864	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_4
0x400b468	          0x4889c7	                            mov rdi, rax	      5864	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_4
0x400b46b	      0xe8a22d0000	                        call sym.decNaNs	      5864	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_4
0x400b470	      0xe9ca020000	                           jmp 0x400b73f	      5870	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400b475	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5866	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400b479	         0xfb65008	               movzx edx, byte [rax + 8]	      5866	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400b47d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5866	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400b481	         0xfb64008	               movzx eax, byte [rax + 8]	      5866	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400b485	            0x31d0	                            xor eax, edx	      5866	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400b487	           0xfb6c0	                           movzx eax, al	      5866	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400b48a	          0x83e040	                           and eax, 0x40	      5866	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400b48d	            0x85c0	                           test eax, eax	      5866	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400b48f	            0x7415	                            je 0x400b4a6	      5866	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400b491	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5867	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400b495	            0x8b00	                    mov eax, dword [rax]	      5867	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400b497	             0xc80	                             or al, 0x80	      5867	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400b499	            0x89c2	                            mov edx, eax	      5867	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400b49b	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5867	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400b49f	            0x8910	                    mov dword [rax], edx	      5867	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400b4a1	      0xe999020000	                           jmp 0x400b73f	      5870	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400b4a6	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      5869	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_5
0x400b4aa	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5869	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_5
0x400b4ae	          0x4889d6	                            mov rsi, rdx	      5869	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_5
0x400b4b1	          0x4889c7	                            mov rdi, rax	      5869	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_5
0x400b4b4	      0xe800000000	                          call 0x400b4b9	      5869	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_5
0x400b4b9	      0xe981020000	                           jmp 0x400b73f	      5870	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400b4be	        0x807d8c00	                cmp byte [rbp - 0x74], 0	      5874	decNumber.c	FUNCTION_1	DO_1	IF_10
0x400b4c2	            0x740c	                            je 0x400b4d0	      5874	decNumber.c	FUNCTION_1	DO_1	IF_10
0x400b4c4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5874	decNumber.c	FUNCTION_1	DO_1	IF_10
0x400b4c8	          0x8b4004	                mov eax, dword [rax + 4]	      5874	decNumber.c	FUNCTION_1	DO_1	IF_10
0x400b4cb	          0x8945b8	             mov dword [rbp - 0x48], eax	      5874	decNumber.c	FUNCTION_1	DO_1	IF_10
0x400b4ce	            0xeb0f	                           jmp 0x400b4df	      5874	decNumber.c	FUNCTION_1	DO_1	IF_10
0x400b4d0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5879	decNumber.c	FUNCTION_1	DO_1	ELSE_3	CALL_6
0x400b4d4	          0x4889c7	                            mov rdi, rax	      5879	decNumber.c	FUNCTION_1	DO_1	ELSE_3	CALL_6
0x400b4d7	      0xe83d290000	                      call sym.decGetInt	      5879	decNumber.c	FUNCTION_1	DO_1	ELSE_3	CALL_6
0x400b4dc	          0x8945b8	             mov dword [rbp - 0x48], eax	      5879	decNumber.c	FUNCTION_1	DO_1	ELSE_3	CALL_6
0x400b4df	    0x817db8000000	     cmp dword [rbp - 0x48], 0x80000000 	      5886	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b4e6	            0x7426	                            je 0x400b50e	      5886	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b4e8	    0x817db8030000	     cmp dword [rbp - 0x48], 0x80000003 	      5887	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b4ef	            0x741d	                            je 0x400b50e	      5887	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b4f1	    0x817db8020000	     cmp dword [rbp - 0x48], 0x80000002 	      5887	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b4f8	            0x7414	                            je 0x400b50e	      5887	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b4fa	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b4fd	          0x3b45c0	             cmp eax, dword [rbp - 0x40]	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b500	            0x7c0c	                            jl 0x400b50e	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b502	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5889	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b506	          0x8b4004	                mov eax, dword [rax + 4]	      5889	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b509	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      5889	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b50c	            0x7d15	                           jge 0x400b523	      5889	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b50e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5890	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b512	            0x8b00	                    mov eax, dword [rax]	      5890	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b514	             0xc80	                             or al, 0x80	      5890	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b516	            0x89c2	                            mov edx, eax	      5890	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b518	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5890	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b51c	            0x8910	                    mov dword [rax], edx	      5890	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b51e	      0xe91c020000	                           jmp 0x400b73f	      5891	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400b523	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400b527	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400b52b	          0x6685c0	                             test ax, ax	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400b52e	            0x753f	                           jne 0x400b56f	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400b530	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400b534	            0x8b00	                    mov eax, dword [rax]	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400b536	          0x83f801	                              cmp eax, 1	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400b539	            0x7534	                           jne 0x400b56f	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400b53b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400b53f	         0xfb64008	               movzx eax, byte [rax + 8]	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400b543	           0xfb6c0	                           movzx eax, al	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400b546	          0x83e070	                           and eax, 0x70	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400b549	            0x85c0	                           test eax, eax	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400b54b	            0x7522	                           jne 0x400b56f	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400b54d	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      5895	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_8
0x400b551	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5895	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_8
0x400b555	          0x4889d6	                            mov rsi, rdx	      5895	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_8
0x400b558	          0x4889c7	                            mov rdi, rax	      5895	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_8
0x400b55b	      0xe800000000	                          call 0x400b560	      5895	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_8
0x400b560	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5896	decNumber.c	FUNCTION_1	DO_1	IF_13
0x400b564	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      5896	decNumber.c	FUNCTION_1	DO_1	IF_13
0x400b567	          0x895004	                mov dword [rax + 4], edx	      5896	decNumber.c	FUNCTION_1	DO_1	IF_13
0x400b56a	      0xe976010000	                           jmp 0x400b6e5	      5896	decNumber.c	FUNCTION_1	DO_1	IF_13
0x400b56f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5902	decNumber.c	FUNCTION_1	DO_1	ELSE_4
0x400b573	          0x8b4004	                mov eax, dword [rax + 4]	      5902	decNumber.c	FUNCTION_1	DO_1	ELSE_4
0x400b576	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      5902	decNumber.c	FUNCTION_1	DO_1	ELSE_4
0x400b579	            0x29c2	                            sub edx, eax	      5902	decNumber.c	FUNCTION_1	DO_1	ELSE_4
0x400b57b	            0x89d0	                            mov eax, edx	      5902	decNumber.c	FUNCTION_1	DO_1	ELSE_4
0x400b57d	          0x8945c4	             mov dword [rbp - 0x3c], eax	      5902	decNumber.c	FUNCTION_1	DO_1	ELSE_4
0x400b580	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5904	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x400b584	            0x8b00	                    mov eax, dword [rax]	      5904	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x400b586	          0x2b45c4	             sub eax, dword [rbp - 0x3c]	      5904	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x400b589	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      5904	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x400b58c	            0x7e15	                           jle 0x400b5a3	      5904	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x400b58e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5905	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x400b592	            0x8b00	                    mov eax, dword [rax]	      5905	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x400b594	             0xc80	                             or al, 0x80	      5905	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x400b596	            0x89c2	                            mov edx, eax	      5905	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x400b598	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5905	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x400b59c	            0x8910	                    mov dword [rax], edx	      5905	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x400b59e	      0xe99c010000	                           jmp 0x400b73f	      5906	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x400b5a3	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      5909	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400b5a7	     0xf8ee5000000	                           jle 0x400b692	      5909	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400b5ad	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400b5b1	          0x488b10	                    mov rdx, qword [rax]	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400b5b4	        0x488955d0	             mov qword [rbp - 0x30], rdx	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400b5b8	        0x488b5008	                mov rdx, qword [rax + 8]	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400b5bc	        0x488955d8	             mov qword [rbp - 0x28], rdx	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400b5c0	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400b5c4	        0x488955e0	             mov qword [rbp - 0x20], rdx	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400b5c8	          0x8b4018	            mov eax, dword [rax + 0x18] 	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400b5cb	          0x8945e8	             mov dword [rbp - 0x18], eax	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400b5ce	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5914	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400b5d2	            0x8b00	                    mov eax, dword [rax]	      5914	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400b5d4	          0x2b45c4	             sub eax, dword [rbp - 0x3c]	      5914	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400b5d7	          0x8945d0	             mov dword [rbp - 0x30], eax	      5914	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400b5da	        0x488b7d80	             mov rdi, qword [rbp - 0x80]	      5916	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_9
0x400b5de	        0x488d4db4	                   lea rcx, [rbp - 0x4c]	      5916	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_9
0x400b5e2	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      5916	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_9
0x400b5e6	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      5916	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_9
0x400b5ea	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5916	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_9
0x400b5ee	          0x4989f8	                             mov r8, rdi	      5916	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_9
0x400b5f1	          0x4889c7	                            mov rdi, rax	      5916	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_9
0x400b5f4	      0xe8ce170000	                     call sym.decCopyFit	      5916	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_9
0x400b5f9	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      5917	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_10
0x400b5fc	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      5917	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_10
0x400b600	        0x488d75d0	                   lea rsi, [rbp - 0x30]	      5917	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_10
0x400b604	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5917	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_10
0x400b608	          0x4889c7	                            mov rdi, rax	      5917	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_10
0x400b60b	      0xe8741c0000	                  call sym.decApplyRound	      5917	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_10
0x400b610	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      5918	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400b617	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5921	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x400b61b	          0x8b4004	                mov eax, dword [rax + 4]	      5921	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x400b61e	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      5921	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x400b621	     0xf8ebe000000	                           jle 0x400b6e5	      5921	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x400b627	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5924	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400b62b	            0x8b00	                    mov eax, dword [rax]	      5924	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400b62d	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      5924	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400b630	            0x7528	                           jne 0x400b65a	      5924	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400b632	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5925	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400b636	            0x8b00	                    mov eax, dword [rax]	      5925	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400b638	      0x25dff7ffff	                     and eax, 0xfffff7df	      5925	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400b63d	            0x89c2	                            mov edx, eax	      5925	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400b63f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5925	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400b643	            0x8910	                    mov dword [rax], edx	      5925	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400b645	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400b649	            0x8b00	                    mov eax, dword [rax]	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400b64b	             0xc80	                             or al, 0x80	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400b64d	            0x89c2	                            mov edx, eax	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400b64f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400b653	            0x8910	                    mov dword [rax], edx	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400b655	      0xe9e5000000	                           jmp 0x400b73f	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400b65a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x400b65e	            0x8b00	                    mov eax, dword [rax]	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x400b660	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x400b664	        0x488d4a0a	                    lea rcx, [rdx + 0xa]	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x400b668	      0xba01000000	                              mov edx, 1	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x400b66d	            0x89c6	                            mov esi, eax	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x400b66f	          0x4889cf	                            mov rdi, rcx	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x400b672	      0xe854120000	                 call sym.decShiftToMost	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x400b677	            0x89c2	                            mov edx, eax	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x400b679	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x400b67d	            0x8910	                    mov dword [rax], edx	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x400b67f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5930	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x400b683	          0x8b4004	                mov eax, dword [rax + 4]	      5930	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x400b686	          0x8d50ff	                      lea edx, [rax - 1]	      5930	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x400b689	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5930	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x400b68d	          0x895004	                mov dword [rax + 4], edx	      5930	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x400b690	            0xeb53	                           jmp 0x400b6e5	      5930	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x400b692	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      5940	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	CALL_13
0x400b696	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5940	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	CALL_13
0x400b69a	          0x4889d6	                            mov rsi, rdx	      5940	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	CALL_13
0x400b69d	          0x4889c7	                            mov rdi, rax	      5940	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	CALL_13
0x400b6a0	      0xe800000000	                          call 0x400b6a5	      5940	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	CALL_13
0x400b6a5	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      5942	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x400b6a9	            0x793a	                           jns 0x400b6e5	      5942	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x400b6ab	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x400b6ae	            0xf7d8	                                 neg eax	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x400b6b0	            0x89c2	                            mov edx, eax	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x400b6b2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x400b6b6	            0x8b00	                    mov eax, dword [rax]	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x400b6b8	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x400b6bc	        0x4883c10a	                            add rcx, 0xa	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x400b6c0	            0x89c6	                            mov esi, eax	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x400b6c2	          0x4889cf	                            mov rdi, rcx	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x400b6c5	      0xe801120000	                 call sym.decShiftToMost	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x400b6ca	            0x89c2	                            mov edx, eax	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x400b6cc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x400b6d0	            0x8910	                    mov dword [rax], edx	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x400b6d2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5944	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x400b6d6	          0x8b5004	                mov edx, dword [rax + 4]	      5944	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x400b6d9	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      5944	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x400b6dc	             0x1c2	                            add edx, eax	      5944	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x400b6de	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5944	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x400b6e2	          0x895004	                mov dword [rax + 4], edx	      5944	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x400b6e5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b6e9	          0x8b5004	                mov edx, dword [rax + 4]	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b6ec	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b6f0	          0x8b4804	                mov ecx, dword [rax + 4]	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b6f3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b6f7	            0x8b00	                    mov eax, dword [rax]	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b6f9	            0x29c1	                            sub ecx, eax	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b6fb	            0x89c8	                            mov eax, ecx	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b6fd	          0x83c001	                              add eax, 1	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b700	            0x39c2	                            cmp edx, eax	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b702	            0x7e12	                           jle 0x400b716	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b704	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5952	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b708	            0x8b00	                    mov eax, dword [rax]	      5952	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b70a	             0xc80	                             or al, 0x80	      5952	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b70c	            0x89c2	                            mov edx, eax	      5952	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b70e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5952	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b712	            0x8910	                    mov dword [rax], edx	      5952	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b714	            0xeb29	                           jmp 0x400b73f	      5953	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400b716	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      5956	decNumber.c	FUNCTION_1	DO_1	ELSE_6	CALL_15
0x400b71a	        0x488d55b4	                   lea rdx, [rbp - 0x4c]	      5956	decNumber.c	FUNCTION_1	DO_1	ELSE_6	CALL_15
0x400b71e	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      5956	decNumber.c	FUNCTION_1	DO_1	ELSE_6	CALL_15
0x400b722	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5956	decNumber.c	FUNCTION_1	DO_1	ELSE_6	CALL_15
0x400b726	          0x4889c7	                            mov rdi, rax	      5956	decNumber.c	FUNCTION_1	DO_1	ELSE_6	CALL_15
0x400b729	      0xe8cf1f0000	                    call sym.decFinalize	      5956	decNumber.c	FUNCTION_1	DO_1	ELSE_6	CALL_15
0x400b72e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5957	decNumber.c	FUNCTION_1	DO_1	ELSE_6
0x400b732	            0x8b00	                    mov eax, dword [rax]	      5957	decNumber.c	FUNCTION_1	DO_1	ELSE_6
0x400b734	          0x80e4df	                            and ah, 0xdf	      5957	decNumber.c	FUNCTION_1	DO_1	ELSE_6
0x400b737	            0x89c2	                            mov edx, eax	      5957	decNumber.c	FUNCTION_1	DO_1	ELSE_6
0x400b739	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5957	decNumber.c	FUNCTION_1	DO_1	ELSE_6
0x400b73d	            0x8910	                    mov dword [rax], edx	      5957	decNumber.c	FUNCTION_1	DO_1	ELSE_6
0x400b73f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5965	decNumber.c	FUNCTION_1
0x400b743	        0x488b7df8	                mov rdi, qword [rbp - 8]	      5966	decNumber.c	FUNCTION_1
0x400b747	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      5966	decNumber.c	FUNCTION_1
0x400b750	            0x7405	                            je 0x400b757	      5966	decNumber.c	FUNCTION_1
0x400b752	      0xe800000000	                          call 0x400b757	      5966	decNumber.c	FUNCTION_1
0x400b757	              0xc9	                                   leave	      5966	decNumber.c	FUNCTION_1
0x400b758	              0xc3	                                     ret	      5966	decNumber.c	FUNCTION_1
decNumberVersion	SWITCH,0:IF,0:FOR,0:CALL,0:DO,0:ELSE,0:WHILE,0:functions,0	5
0x4006381	              0x55	                                push rbp	      3569	decNumber.c	FUNCTION_68	FUNCTION_61
0x4006382	          0x4889e5	                            mov rbp, rsp	      3569	decNumber.c	FUNCTION_68	FUNCTION_61
0x4006385	      0xb800000000	                              mov eax, 0	      3570	decNumber.c	FUNCTION_68	FUNCTION_61
0x400638a	              0x5d	                                 pop rbp	      3571	decNumber.c	FUNCTION_68	FUNCTION_61
0x400638b	              0xc3	                                     ret	      3571	decNumber.c	FUNCTION_68	FUNCTION_61
decNumberOr	SWITCH,0:IF,8:FOR,2:CALL,12:DO,0:ELSE,2:WHILE,0:functions,0	295
0x4002ac8	              0x55	                                push rbp	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002ac9	          0x4889e5	                            mov rbp, rsp	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002acc	        0x4883ec60	                           sub rsp, 0x60	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002ad0	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002ad4	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002ad8	        0x488955a8	             mov qword [rbp - 0x58], rdx	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002adc	        0x48894da0	             mov qword [rbp - 0x60], rcx	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002ae0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002ae4	          0x8b4004	                mov eax, dword [rax + 4]	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002ae7	            0x85c0	                           test eax, eax	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002ae9	            0x7547	                           jne 0x4002b32	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002aeb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002aef	         0xfb64008	               movzx eax, byte [rax + 8]	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002af3	           0xfb6c0	                           movzx eax, al	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002af6	          0x83e070	                           and eax, 0x70	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002af9	            0x85c0	                           test eax, eax	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002afb	            0x7535	                           jne 0x4002b32	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002afd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002b01	         0xfb64008	               movzx eax, byte [rax + 8]	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002b05	            0x84c0	                             test al, al	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002b07	            0x7829	                            js 0x4002b32	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002b09	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002b0d	          0x8b4004	                mov eax, dword [rax + 4]	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002b10	            0x85c0	                           test eax, eax	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002b12	            0x751e	                           jne 0x4002b32	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002b14	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002b18	         0xfb64008	               movzx eax, byte [rax + 8]	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002b1c	           0xfb6c0	                           movzx eax, al	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002b1f	          0x83e070	                           and eax, 0x70	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002b22	            0x85c0	                           test eax, eax	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002b24	            0x750c	                           jne 0x4002b32	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002b26	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002b2a	         0xfb64008	               movzx eax, byte [rax + 8]	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002b2e	            0x84c0	                             test al, al	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002b30	            0x791e	                           jns 0x4002b50	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002b32	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1817	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_6
0x4002b36	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1817	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_6
0x4002b3a	      0xbe80000000	                           mov esi, 0x80	      1817	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_6
0x4002b3f	          0x4889c7	                            mov rdi, rax	      1817	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_6
0x4002b42	      0xe8d1b80000	                      call sym.decStatus	      1817	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_6
0x4002b47	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1818	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2
0x4002b4b	      0xe93d030000	                           jmp 0x4002e8d	      1818	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2
0x4002b50	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1821	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002b54	        0x4883c00a	                            add rax, 0xa	      1821	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002b58	        0x488945d0	             mov qword [rbp - 0x30], rax	      1821	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002b5c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1822	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002b60	        0x4883c00a	                            add rax, 0xa	      1822	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002b64	        0x488945d8	             mov qword [rbp - 0x28], rax	      1822	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002b68	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1823	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002b6c	        0x4883c00a	                            add rax, 0xa	      1823	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002b70	        0x488945e0	             mov qword [rbp - 0x20], rax	      1823	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002b74	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002b78	            0x8b00	                    mov eax, dword [rax]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002b7a	          0x83f831	                           cmp eax, 0x31	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002b7d	            0x7f1b	                            jg 0x4002b9a	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002b7f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002b83	            0x8b00	                    mov eax, dword [rax]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002b85	            0x4898	                                    cdqe	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002b87	     0xfb680000000	                   movzx eax, byte [rax]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002b8e	           0xfb6c0	                           movzx eax, al	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002b91	          0x4801c0	                            add rax, rax	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002b94	        0x4883e802	                              sub rax, 2	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002b98	            0xeb24	                           jmp 0x4002bbe	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002b9a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002b9e	            0x8b00	                    mov eax, dword [rax]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002ba0	          0x8d4802	                      lea ecx, [rax + 2]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002ba3	      0xba56555555	                     mov edx, 0x55555556	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002ba8	            0x89c8	                            mov eax, ecx	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002baa	            0xf7ea	                                imul edx	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002bac	            0x89c8	                            mov eax, ecx	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002bae	          0xc1f81f	                           sar eax, 0x1f	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002bb1	            0x29c2	                            sub edx, eax	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002bb3	            0x89d0	                            mov eax, edx	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002bb5	            0x4898	                                    cdqe	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002bb7	          0x4801c0	                            add rax, rax	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002bba	        0x4883e802	                              sub rax, 2	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002bbe	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002bc2	          0x4801d0	                            add rax, rdx	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002bc5	        0x488945e8	             mov qword [rbp - 0x18], rax	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002bc9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002bcd	            0x8b00	                    mov eax, dword [rax]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002bcf	          0x83f831	                           cmp eax, 0x31	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002bd2	            0x7f1b	                            jg 0x4002bef	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002bd4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002bd8	            0x8b00	                    mov eax, dword [rax]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002bda	            0x4898	                                    cdqe	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002bdc	     0xfb680000000	                   movzx eax, byte [rax]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002be3	           0xfb6c0	                           movzx eax, al	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002be6	          0x4801c0	                            add rax, rax	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002be9	        0x4883e802	                              sub rax, 2	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002bed	            0xeb24	                           jmp 0x4002c13	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002bef	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002bf3	            0x8b00	                    mov eax, dword [rax]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002bf5	          0x8d4802	                      lea ecx, [rax + 2]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002bf8	      0xba56555555	                     mov edx, 0x55555556	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002bfd	            0x89c8	                            mov eax, ecx	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002bff	            0xf7ea	                                imul edx	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002c01	            0x89c8	                            mov eax, ecx	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002c03	          0xc1f81f	                           sar eax, 0x1f	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002c06	            0x29c2	                            sub edx, eax	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002c08	            0x89d0	                            mov eax, edx	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002c0a	            0x4898	                                    cdqe	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002c0c	          0x4801c0	                            add rax, rax	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002c0f	        0x4883e802	                              sub rax, 2	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002c13	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002c17	          0x4801d0	                            add rax, rdx	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002c1a	        0x488945f0	             mov qword [rbp - 0x10], rax	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002c1e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c22	            0x8b00	                    mov eax, dword [rax]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c24	          0x83f831	                           cmp eax, 0x31	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c27	            0x7f1b	                            jg 0x4002c44	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c29	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c2d	            0x8b00	                    mov eax, dword [rax]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c2f	            0x4898	                                    cdqe	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c31	     0xfb680000000	                   movzx eax, byte [rax]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c38	           0xfb6c0	                           movzx eax, al	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c3b	          0x4801c0	                            add rax, rax	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c3e	        0x4883e802	                              sub rax, 2	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c42	            0xeb24	                           jmp 0x4002c68	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c44	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c48	            0x8b00	                    mov eax, dword [rax]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c4a	          0x8d4802	                      lea ecx, [rax + 2]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c4d	      0xba56555555	                     mov edx, 0x55555556	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c52	            0x89c8	                            mov eax, ecx	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c54	            0xf7ea	                                imul edx	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c56	            0x89c8	                            mov eax, ecx	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c58	          0xc1f81f	                           sar eax, 0x1f	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c5b	            0x29c2	                            sub edx, eax	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c5d	            0x89d0	                            mov eax, edx	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c5f	            0x4898	                                    cdqe	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c61	          0x4801c0	                            add rax, rax	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c64	        0x4883e802	                              sub rax, 2	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c68	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c6c	          0x4801d0	                            add rax, rdx	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c6f	        0x488945f8	                mov qword [rbp - 8], rax	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002c73	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002c77	            0x8b30	                    mov esi, dword [rax]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002c79	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002c7d	            0x8b00	                    mov eax, dword [rax]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002c7f	          0x83f831	                           cmp eax, 0x31	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002c82	            0x7f1d	                            jg 0x4002ca1	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002c84	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002c88	            0x8b00	                    mov eax, dword [rax]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002c8a	            0x4898	                                    cdqe	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002c8c	     0xfb680000000	                   movzx eax, byte [rax]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002c93	           0xfb6c0	                           movzx eax, al	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002c96	          0x8d50ff	                      lea edx, [rax - 1]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002c99	            0x89d0	                            mov eax, edx	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002c9b	             0x1c0	                            add eax, eax	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002c9d	             0x1d0	                            add eax, edx	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002c9f	            0xeb24	                           jmp 0x4002cc5	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002ca1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002ca5	            0x8b00	                    mov eax, dword [rax]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002ca7	          0x8d4802	                      lea ecx, [rax + 2]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002caa	      0xba56555555	                     mov edx, 0x55555556	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002caf	            0x89c8	                            mov eax, ecx	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002cb1	            0xf7ea	                                imul edx	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002cb3	            0x89c8	                            mov eax, ecx	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002cb5	          0xc1f81f	                           sar eax, 0x1f	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002cb8	            0x29c2	                            sub edx, eax	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002cba	            0x89d0	                            mov eax, edx	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002cbc	          0x8d50ff	                      lea edx, [rax - 1]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002cbf	            0x89d0	                            mov eax, edx	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002cc1	             0x1c0	                            add eax, eax	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002cc3	             0x1d0	                            add eax, edx	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002cc5	            0x29c6	                            sub esi, eax	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002cc7	            0x89f0	                            mov eax, esi	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002cc9	          0x8945c8	             mov dword [rbp - 0x38], eax	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002ccc	      0xe969010000	                           jmp 0x4002e3a	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002cd1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1830	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_3
0x4002cd5	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1830	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_3
0x4002cd9	            0x7608	                           jbe 0x4002ce3	      1830	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_3
0x4002cdb	    0x66c745c00000	                mov word [rbp - 0x40], 0	      1830	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_3
0x4002ce1	            0xeb0b	                           jmp 0x4002cee	      1830	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_3
0x4002ce3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1831	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_1
0x4002ce7	           0xfb700	                   movzx eax, word [rax]	      1831	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_1
0x4002cea	        0x668945c0	               mov word [rbp - 0x40], ax	      1831	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_1
0x4002cee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x4002cf2	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x4002cf6	            0x7608	                           jbe 0x4002d00	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x4002cf8	    0x66c745c20000	                mov word [rbp - 0x3e], 0	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x4002cfe	            0xeb0b	                           jmp 0x4002d0b	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x4002d00	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1833	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4002d04	           0xfb700	                   movzx eax, word [rax]	      1833	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4002d07	        0x668945c2	               mov word [rbp - 0x3e], ax	      1833	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4002d0b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4002d0f	      0x66c7000000	                       mov word [rax], 0	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4002d14	         0xfb745c0	            movzx eax, word [rbp - 0x40]	      1835	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5
0x4002d18	        0x660b45c2	                or ax, word [rbp - 0x3e]	      1835	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5
0x4002d1c	          0x6685c0	                             test ax, ax	      1835	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5
0x4002d1f	     0xf8406010000	                            je 0x4002e2b	      1835	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5
0x4002d25	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      1838	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d2c	      0xe9ed000000	                           jmp 0x4002e1e	      1838	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d31	         0xfb745c0	            movzx eax, word [rbp - 0x40]	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002d35	        0x660b45c2	                or ax, word [rbp - 0x3e]	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002d39	           0xfb7c0	                           movzx eax, ax	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002d3c	          0x83e001	                              and eax, 1	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002d3f	            0x85c0	                           test eax, eax	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002d41	            0x741c	                            je 0x4002d5f	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002d43	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002d47	           0xfb710	                   movzx edx, word [rax]	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002d4a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002d4d	            0x4898	                                    cdqe	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002d4f	    0x8b0485000000	                  mov eax, dword [rax*4]	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002d56	             0x1c2	                            add edx, eax	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002d58	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002d5c	          0x668910	                      mov word [rax], dx	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002d5f	         0xfb74dc0	            movzx ecx, word [rbp - 0x40]	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d63	           0xfb7c1	                           movzx eax, cx	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d66	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d6c	          0xc1e810	                           shr eax, 0x10	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d6f	            0x89c2	                            mov edx, eax	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d71	        0x66c1ea03	                               shr dx, 3	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d75	            0x89d0	                            mov eax, edx	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d77	          0xc1e002	                              shl eax, 2	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d7a	             0x1d0	                            add eax, edx	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d7c	             0x1c0	                            add eax, eax	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d7e	            0x29c1	                            sub ecx, eax	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d80	            0x89ca	                            mov edx, ecx	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d82	           0xfb7c2	                           movzx eax, dx	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d85	          0x8945cc	             mov dword [rbp - 0x34], eax	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d88	         0xfb745c0	            movzx eax, word [rbp - 0x40]	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d8c	           0xfb7c0	                           movzx eax, ax	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d8f	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d95	          0xc1e810	                           shr eax, 0x10	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d98	        0x66c1e803	                               shr ax, 3	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002d9c	        0x668945c0	               mov word [rbp - 0x40], ax	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002da0	         0xfb74dc2	            movzx ecx, word [rbp - 0x3e]	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002da4	           0xfb7c1	                           movzx eax, cx	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002da7	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002dad	          0xc1e810	                           shr eax, 0x10	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002db0	            0x89c2	                            mov edx, eax	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002db2	        0x66c1ea03	                               shr dx, 3	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002db6	            0x89d0	                            mov eax, edx	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002db8	          0xc1e002	                              shl eax, 2	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002dbb	             0x1d0	                            add eax, edx	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002dbd	             0x1c0	                            add eax, eax	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002dbf	            0x29c1	                            sub ecx, eax	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002dc1	            0x89ca	                            mov edx, ecx	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002dc3	           0xfb7c2	                           movzx eax, dx	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002dc6	           0x945cc	              or dword [rbp - 0x34], eax	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002dc9	         0xfb745c2	            movzx eax, word [rbp - 0x3e]	      1843	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002dcd	           0xfb7c0	                           movzx eax, ax	      1843	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002dd0	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	      1843	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002dd6	          0xc1e810	                           shr eax, 0x10	      1843	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002dd9	        0x66c1e803	                               shr ax, 3	      1843	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002ddd	        0x668945c2	               mov word [rbp - 0x3e], ax	      1843	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002de1	        0x837dcc01	               cmp dword [rbp - 0x34], 1	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4002de5	            0x7e1e	                           jle 0x4002e05	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4002de7	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1845	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x4002deb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1845	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x4002def	      0xbe80000000	                           mov esi, 0x80	      1845	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x4002df4	          0x4889c7	                            mov rdi, rax	      1845	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x4002df7	      0xe81cb60000	                      call sym.decStatus	      1845	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x4002dfc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1846	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4002e00	      0xe988000000	                           jmp 0x4002e8d	      1846	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4002e05	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002e09	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002e0d	            0x750b	                           jne 0x4002e1a	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002e0f	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002e12	          0x83e801	                              sub eax, 1	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002e15	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002e18	            0x7410	                            je 0x4002e2a	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002e1a	        0x8345c401	               add dword [rbp - 0x3c], 1	      1838	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e1e	        0x837dc402	               cmp dword [rbp - 0x3c], 2	      1838	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e22	     0xf8e09ffffff	                           jle 0x4002d31	      1838	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e28	            0xeb01	                           jmp 0x4002e2b	      1838	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e2a	              0x90	                                     nop	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002e2b	      0x488345d002	               add qword [rbp - 0x30], 2	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002e30	      0x488345d802	               add qword [rbp - 0x28], 2	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002e35	      0x488345e002	               add qword [rbp - 0x20], 2	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002e3a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002e3e	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002e42	     0xf8689feffff	                           jbe 0x4002cd1	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002e48	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002e4c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002e50	        0x4883c20a	                            add rdx, 0xa	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002e54	          0x4829d0	                            sub rax, rdx	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002e57	          0x48d1f8	                              sar rax, 1	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002e5a	            0x89c2	                            mov edx, eax	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002e5c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002e60	        0x4883c00a	                            add rax, 0xa	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002e64	            0x89d6	                            mov esi, edx	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002e66	          0x4889c7	                            mov rdi, rax	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002e69	      0xe806b60000	                   call sym.decGetDigits	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002e6e	            0x89c2	                            mov edx, eax	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002e70	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002e74	            0x8910	                    mov dword [rax], edx	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002e76	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1854	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002e7a	    0xc74004000000	                  mov dword [rax + 4], 0	      1854	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002e81	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1855	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002e85	        0xc6400800	                   mov byte [rax + 8], 0	      1855	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002e89	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1856	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002e8d	              0xc9	                                   leave	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002e8e	              0xc3	                                     ret	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
decNumberToUInt32	SWITCH,0:IF,3:FOR,1:CALL,4:DO,0:ELSE,2:WHILE,0:functions,0	103
0x40002a0	              0x55	                                push rbp	       416	decNumber.c	FUNCTION_68	FUNCTION_4
0x40002a1	          0x4889e5	                            mov rbp, rsp	       416	decNumber.c	FUNCTION_68	FUNCTION_4
0x40002a4	        0x4883ec30	                           sub rsp, 0x30	       416	decNumber.c	FUNCTION_68	FUNCTION_4
0x40002a8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       416	decNumber.c	FUNCTION_68	FUNCTION_4
0x40002ac	        0x488975d0	             mov qword [rbp - 0x30], rsi	       416	decNumber.c	FUNCTION_68	FUNCTION_4
0x40002b0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40002b4	         0xfb64008	               movzx eax, byte [rax + 8]	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40002b8	           0xfb6c0	                           movzx eax, al	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40002bb	          0x83e070	                           and eax, 0x70	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40002be	            0x85c0	                           test eax, eax	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40002c0	     0xf8520010000	                           jne 0x40003e6	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40002c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40002ca	            0x8b00	                    mov eax, dword [rax]	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40002cc	          0x83f80a	                            cmp eax, 0xa	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40002cf	     0xf8f11010000	                            jg 0x40003e6	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40002d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40002d9	          0x8b4004	                mov eax, dword [rax + 4]	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40002dc	            0x85c0	                           test eax, eax	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40002de	     0xf8502010000	                           jne 0x40003e6	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40002e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x40002e8	         0xfb64008	               movzx eax, byte [rax + 8]	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x40002ec	            0x84c0	                             test al, al	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x40002ee	            0x7936	                           jns 0x4000326	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x40002f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x40002f4	         0xfb7400a	            movzx eax, word [rax + 0xa] 	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x40002f8	          0x6685c0	                             test ax, ax	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x40002fb	     0xf85e4000000	                           jne 0x40003e5	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4000301	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4000305	            0x8b00	                    mov eax, dword [rax]	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4000307	          0x83f801	                              cmp eax, 1	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x400030a	     0xf85d5000000	                           jne 0x40003e5	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4000310	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4000314	         0xfb64008	               movzx eax, byte [rax + 8]	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4000318	           0xfb6c0	                           movzx eax, al	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x400031b	          0x83e070	                           and eax, 0x70	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x400031e	            0x85c0	                           test eax, eax	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4000320	     0xf85bf000000	                           jne 0x40003e5	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4000326	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       426	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x400032d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       427	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000331	        0x4883c00a	                            add rax, 0xa	       427	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000335	        0x488945f8	                mov qword [rbp - 8], rax	       427	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000339	        0x488b45f8	                mov rax, qword [rbp - 8]	       428	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x400033d	           0xfb700	                   movzx eax, word [rax]	       428	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000340	           0xfb7c0	                           movzx eax, ax	       428	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000343	          0x8945f4	              mov dword [rbp - 0xc], eax	       428	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000346	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000349	      0xbacdcccccc	                     mov edx, 0xcccccccd	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x400034e	            0xf7e2	                                 mul edx	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000350	            0x89d0	                            mov eax, edx	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000352	          0xc1e803	                              shr eax, 3	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000355	          0x8945f0	             mov dword [rbp - 0x10], eax	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000358	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x400035b	      0xbacdcccccc	                     mov edx, 0xcccccccd	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000360	            0x89c8	                            mov eax, ecx	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000362	            0xf7e2	                                 mul edx	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000364	          0xc1ea03	                              shr edx, 3	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000367	            0x89d0	                            mov eax, edx	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000369	          0xc1e002	                              shl eax, 2	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x400036c	             0x1d0	                            add eax, edx	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x400036e	             0x1c0	                            add eax, eax	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000370	            0x29c1	                            sub ecx, eax	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000372	            0x89c8	                            mov eax, ecx	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000374	          0x8945f4	              mov dword [rbp - 0xc], eax	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4000377	      0x488345f802	                  add qword [rbp - 8], 2	       433	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x400037c	    0xc745ec030000	               mov dword [rbp - 0x14], 3	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4000383	            0xeb28	                           jmp 0x40003ad	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4000385	        0x488b45f8	                mov rax, qword [rbp - 8]	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4000389	           0xfb700	                   movzx eax, word [rax]	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x400038c	           0xfb7d0	                           movzx edx, ax	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x400038f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4000392	          0x83e801	                              sub eax, 1	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4000395	            0x4898	                                    cdqe	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4000397	    0x8b0485000000	                  mov eax, dword [rax*4]	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x400039e	           0xfafc2	                           imul eax, edx	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40003a1	           0x145f0	             add dword [rbp - 0x10], eax	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40003a4	      0x488345f802	                  add qword [rbp - 8], 2	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40003a9	        0x8345ec03	               add dword [rbp - 0x14], 3	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40003ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40003b1	            0x8b00	                    mov eax, dword [rax]	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40003b3	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40003b6	            0x7fcd	                            jg 0x4000385	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40003b8	    0x817df0999999	     cmp dword [rbp - 0x10], 0x19999999 	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x40003bf	            0x7725	                            ja 0x40003e6	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x40003c1	    0x817df0999999	     cmp dword [rbp - 0x10], 0x19999999 	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x40003c8	            0x7506	                           jne 0x40003d0	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x40003ca	        0x837df405	                cmp dword [rbp - 0xc], 5	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x40003ce	            0x7716	                            ja 0x40003e6	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x40003d0	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x40003d3	          0x8d1400	                    lea edx, [rax + rax]	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x40003d6	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x40003d9	          0xc1e003	                              shl eax, 3	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x40003dc	             0x1c2	                            add edx, eax	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x40003de	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x40003e1	             0x1d0	                            add eax, edx	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x40003e3	            0xeb17	                           jmp 0x40003fc	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x40003e5	              0x90	                                     nop	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40003e6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       441	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_4
0x40003ea	      0xbe80000000	                           mov esi, 0x80	       441	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_4
0x40003ef	          0x4889c7	                            mov rdi, rax	       441	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_4
0x40003f2	      0xe800000000	                          call 0x40003f7	       441	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_4
0x40003f7	      0xb800000000	                              mov eax, 0	       442	decNumber.c	FUNCTION_68	FUNCTION_4
0x40003fc	              0xc9	                                   leave	       443	decNumber.c	FUNCTION_68	FUNCTION_4
0x40003fd	              0xc3	                                     ret	       443	decNumber.c	FUNCTION_68	FUNCTION_4
decDivideOp	SWITCH,0:IF,78:FOR,13:CALL,50:DO,1:ELSE,15:WHILE,0:functions,0	1305
0x4007a08	              0x55	                                push rbp	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a09	          0x4889e5	                            mov rbp, rsp	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a0c	    0x4881eca00100	                          sub rsp, 0x1a0	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a13	    0x4889bd88feff	            mov qword [rbp - 0x178], rdi	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a1a	    0x4889b580feff	            mov qword [rbp - 0x180], rsi	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a21	    0x48899578feff	            mov qword [rbp - 0x188], rdx	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a28	    0x48898d70feff	            mov qword [rbp - 0x190], rcx	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a2f	          0x4489c0	                            mov eax, r8d	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a32	    0x4c898d60feff	             mov qword [rbp - 0x1a0], r9	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a39	    0x88856cfeffff	              mov byte [rbp - 0x194], al	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a3f	    0x64488b042528	                mov rax, qword fs:[0x28]	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a48	        0x488945f8	                mov qword [rbp - 8], rax	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a4c	            0x31c0	                            xor eax, eax	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a4e	        0x488d4590	                   lea rax, [rbp - 0x70]	      4219	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a52	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      4219	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a59	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a64	        0x488d45c0	                   lea rax, [rbp - 0x40]	      4227	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a68	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4227	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a6f	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a7a	    0xc785c0feffff	              mov dword [rbp - 0x140], 0	      4238	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a84	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      4243	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a8b	            0x8b00	                    mov eax, dword [rax]	      4243	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a8d	    0x8985e8feffff	            mov dword [rbp - 0x118], eax	      4243	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a93	    0xc785d0feffff	              mov dword [rbp - 0x130], 0	      4245	decNumber.c	FUNCTION_68	FUNCTION_65
0x4007a9d	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007aa4	         0xfb65008	               movzx edx, byte [rax + 8]	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007aa8	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007aaf	         0xfb64008	               movzx eax, byte [rax + 8]	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007ab3	            0x31d0	                            xor eax, edx	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007ab5	          0x83e080	                     and eax, 0xffffff80	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007ab8	    0x88859bfeffff	              mov byte [rbp - 0x165], al	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007abe	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x4007ac5	         0xfb65008	               movzx edx, byte [rax + 8]	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x4007ac9	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x4007ad0	         0xfb64008	               movzx eax, byte [rax + 8]	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x4007ad4	             0x9d0	                             or eax, edx	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x4007ad6	           0xfb6c0	                           movzx eax, al	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x4007ad9	          0x83e070	                           and eax, 0x70	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x4007adc	            0x85c0	                           test eax, eax	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x4007ade	     0xf84a9010000	                            je 0x4007c8d	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x4007ae4	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4281	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x4007aeb	         0xfb65008	               movzx edx, byte [rax + 8]	      4281	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x4007aef	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4281	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x4007af6	         0xfb64008	               movzx eax, byte [rax + 8]	      4281	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x4007afa	             0x9d0	                             or eax, edx	      4281	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x4007afc	           0xfb6c0	                           movzx eax, al	      4281	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x4007aff	          0x83e030	                           and eax, 0x30	      4281	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x4007b02	            0x85c0	                           test eax, eax	      4281	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x4007b04	            0x7433	                            je 0x4007b39	      4281	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x4007b06	    0x488bbd60feff	            mov rdi, qword [rbp - 0x1a0]	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x4007b0d	    0x488b8d70feff	            mov rcx, qword [rbp - 0x190]	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x4007b14	    0x488b9578feff	            mov rdx, qword [rbp - 0x188]	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x4007b1b	    0x488bb580feff	            mov rsi, qword [rbp - 0x180]	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x4007b22	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x4007b29	          0x4989f8	                             mov r8, rdi	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x4007b2c	          0x4889c7	                            mov rdi, rax	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x4007b2f	      0xe8de660000	                        call sym.decNaNs	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x4007b34	      0xe98d150000	                           jmp 0x40090c6	      4283	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x4007b39	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4286	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	CALL_7
0x4007b40	         0xfb64008	               movzx eax, byte [rax + 8]	      4286	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	CALL_7
0x4007b44	           0xfb6c0	                           movzx eax, al	      4286	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	CALL_7
0x4007b47	          0x83e040	                           and eax, 0x40	      4286	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	CALL_7
0x4007b4a	            0x85c0	                           test eax, eax	      4286	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	CALL_7
0x4007b4c	            0x7468	                            je 0x4007bb6	      4286	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	CALL_7
0x4007b4e	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x4007b55	         0xfb64008	               movzx eax, byte [rax + 8]	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x4007b59	           0xfb6c0	                           movzx eax, al	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x4007b5c	          0x83e040	                           and eax, 0x40	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x4007b5f	            0x85c0	                           test eax, eax	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x4007b61	            0x750e	                           jne 0x4007b71	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x4007b63	     0xfb6856cfeff	           movzx eax, byte [rbp - 0x194]	      4288	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10
0x4007b6a	          0x83e050	                           and eax, 0x50	      4288	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10
0x4007b6d	            0x85c0	                           test eax, eax	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x4007b6f	            0x741b	                            je 0x4007b8c	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x4007b71	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4289	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10
0x4007b78	            0x8b00	                    mov eax, dword [rax]	      4289	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10
0x4007b7a	             0xc80	                             or al, 0x80	      4289	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10
0x4007b7c	            0x89c2	                            mov edx, eax	      4289	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10
0x4007b7e	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4289	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10
0x4007b85	            0x8910	                    mov dword [rax], edx	      4289	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10
0x4007b87	      0xe93a150000	                           jmp 0x40090c6	      4290	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10
0x4007b8c	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4293	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	CALL_9
0x4007b93	          0x4889c7	                            mov rdi, rax	      4293	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	CALL_9
0x4007b96	      0xe800000000	                          call 0x4007b9b	      4293	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	CALL_9
0x4007b9b	     0xfb6859bfeff	           movzx eax, byte [rbp - 0x165]	      4294	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9
0x4007ba2	          0x83c840	                            or eax, 0x40	      4294	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9
0x4007ba5	            0x89c2	                            mov edx, eax	      4294	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9
0x4007ba7	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4294	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9
0x4007bae	          0x885008	                  mov byte [rax + 8], dl	      4294	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9
0x4007bb1	      0xe910150000	                           jmp 0x40090c6	      4295	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9
0x4007bb6	    0xc785a4feffff	              mov dword [rbp - 0x15c], 0	      4298	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x4007bc0	     0xfb6856cfeff	           movzx eax, byte [rbp - 0x194]	      4299	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11
0x4007bc7	          0x83e050	                           and eax, 0x50	      4299	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11
0x4007bca	            0x85c0	                           test eax, eax	      4299	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11
0x4007bcc	            0x7430	                            je 0x4007bfe	      4299	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11
0x4007bce	    0x488bbd60feff	            mov rdi, qword [rbp - 0x1a0]	      4301	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11	CALL_10
0x4007bd5	    0x488d8da4feff	                  lea rcx, [rbp - 0x15c]	      4301	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11	CALL_10
0x4007bdc	    0x488b9570feff	            mov rdx, qword [rbp - 0x190]	      4301	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11	CALL_10
0x4007be3	    0x488bb580feff	            mov rsi, qword [rbp - 0x180]	      4301	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11	CALL_10
0x4007bea	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4301	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11	CALL_10
0x4007bf1	          0x4989f8	                             mov r8, rdi	      4301	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11	CALL_10
0x4007bf4	          0x4889c7	                            mov rdi, rax	      4301	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11	CALL_10
0x4007bf7	      0xe8cb510000	                     call sym.decCopyFit	      4301	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11	CALL_10
0x4007bfc	            0xeb66	                           jmp 0x4007c64	      4301	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11	CALL_10
0x4007bfe	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4304	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	CALL_11
0x4007c05	          0x4889c7	                            mov rdi, rax	      4304	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	CALL_11
0x4007c08	      0xe800000000	                          call 0x4007c0d	      4304	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	CALL_11
0x4007c0d	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4305	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2
0x4007c14	     0xfb6959bfeff	           movzx edx, byte [rbp - 0x165]	      4305	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2
0x4007c1b	          0x885008	                  mov byte [rax + 8], dl	      4305	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2
0x4007c1e	     0xfb6856cfeff	           movzx eax, byte [rbp - 0x194]	      4308	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c25	            0x84c0	                             test al, al	      4308	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c27	            0x793b	                           jns 0x4007c64	      4308	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c29	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c30	          0x8b5008	                mov edx, dword [rax + 8]	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c33	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c3a	            0x8b00	                    mov eax, dword [rax]	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c3c	            0x29c2	                            sub edx, eax	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c3e	            0x89d0	                            mov eax, edx	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c40	          0x8d5001	                      lea edx, [rax + 1]	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c43	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c4a	          0x895004	                mov dword [rax + 4], edx	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c4d	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c54	            0x8b00	                    mov eax, dword [rax]	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c56	          0x80cc04	                                or ah, 4	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c59	            0x89c2	                            mov edx, eax	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c5b	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c62	            0x8910	                    mov dword [rax], edx	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4007c64	    0x488b8d60feff	            mov rcx, qword [rbp - 0x1a0]	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x4007c6b	    0x488d95a4feff	                  lea rdx, [rbp - 0x15c]	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x4007c72	    0x488bb570feff	            mov rsi, qword [rbp - 0x190]	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x4007c79	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x4007c80	          0x4889c7	                            mov rdi, rax	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x4007c83	      0xe8755a0000	                    call sym.decFinalize	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x4007c88	      0xe939140000	                           jmp 0x40090c6	      4314	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x4007c8d	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4007c94	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4007c98	          0x6685c0	                             test ax, ax	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4007c9b	     0xf85f3000000	                           jne 0x4007d94	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4007ca1	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4007ca8	            0x8b00	                    mov eax, dword [rax]	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4007caa	          0x83f801	                              cmp eax, 1	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4007cad	     0xf85e1000000	                           jne 0x4007d94	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4007cb3	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4007cba	         0xfb64008	               movzx eax, byte [rax + 8]	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4007cbe	           0xfb6c0	                           movzx eax, al	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4007cc1	          0x83e070	                           and eax, 0x70	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4007cc4	            0x85c0	                           test eax, eax	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4007cc6	     0xf85c8000000	                           jne 0x4007d94	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4007ccc	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x4007cd3	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x4007cd7	          0x6685c0	                             test ax, ax	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x4007cda	            0x754e	                           jne 0x4007d2a	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x4007cdc	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x4007ce3	            0x8b00	                    mov eax, dword [rax]	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x4007ce5	          0x83f801	                              cmp eax, 1	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x4007ce8	            0x7540	                           jne 0x4007d2a	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x4007cea	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x4007cf1	         0xfb64008	               movzx eax, byte [rax + 8]	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x4007cf5	           0xfb6c0	                           movzx eax, al	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x4007cf8	          0x83e070	                           and eax, 0x70	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x4007cfb	            0x85c0	                           test eax, eax	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x4007cfd	            0x752b	                           jne 0x4007d2a	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x4007cff	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4321	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_14
0x4007d06	          0x4889c7	                            mov rdi, rax	      4321	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_14
0x4007d09	      0xe800000000	                          call 0x4007d0e	      4321	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_14
0x4007d0e	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x4007d15	            0x8b00	                    mov eax, dword [rax]	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x4007d17	          0x83c808	                               or eax, 8	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x4007d1a	            0x89c2	                            mov edx, eax	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x4007d1c	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x4007d23	            0x8910	                    mov dword [rax], edx	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x4007d25	      0xe99c130000	                           jmp 0x40090c6	      4332	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13
0x4007d2a	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4325	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	CALL_15
0x4007d31	          0x4889c7	                            mov rdi, rax	      4325	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	CALL_15
0x4007d34	      0xe800000000	                          call 0x4007d39	      4325	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	CALL_15
0x4007d39	     0xfb6856cfeff	           movzx eax, byte [rbp - 0x194]	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x4007d40	          0x83e050	                           and eax, 0x50	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x4007d43	            0x85c0	                           test eax, eax	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x4007d45	            0x741b	                            je 0x4007d62	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x4007d47	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x4007d4e	            0x8b00	                    mov eax, dword [rax]	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x4007d50	             0xc80	                             or al, 0x80	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x4007d52	            0x89c2	                            mov edx, eax	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x4007d54	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x4007d5b	            0x8910	                    mov dword [rax], edx	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x4007d5d	      0xe964130000	                           jmp 0x40090c6	      4332	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13
0x4007d62	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4328	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4007d69	            0x8b00	                    mov eax, dword [rax]	      4328	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4007d6b	          0x83c802	                               or eax, 2	      4328	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4007d6e	            0x89c2	                            mov edx, eax	      4328	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4007d70	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4328	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4007d77	            0x8910	                    mov dword [rax], edx	      4328	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4007d79	     0xfb6859bfeff	           movzx eax, byte [rbp - 0x165]	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4007d80	          0x83c840	                            or eax, 0x40	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4007d83	            0x89c2	                            mov edx, eax	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4007d85	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4007d8c	          0x885008	                  mov byte [rax + 8], dl	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4007d8f	      0xe932130000	                           jmp 0x40090c6	      4332	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13
0x4007d94	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4007d9b	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4007d9f	          0x6685c0	                             test ax, ax	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4007da2	     0xf854c010000	                           jne 0x4007ef4	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4007da8	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4007daf	            0x8b00	                    mov eax, dword [rax]	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4007db1	          0x83f801	                              cmp eax, 1	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4007db4	     0xf853a010000	                           jne 0x4007ef4	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4007dba	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4007dc1	         0xfb64008	               movzx eax, byte [rax + 8]	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4007dc5	           0xfb6c0	                           movzx eax, al	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4007dc8	          0x83e070	                           and eax, 0x70	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4007dcb	            0x85c0	                           test eax, eax	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4007dcd	     0xf8521010000	                           jne 0x4007ef4	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4007dd3	     0xfb6856cfeff	           movzx eax, byte [rbp - 0x194]	      4340	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4007dda	            0x84c0	                             test al, al	      4340	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4007ddc	     0xf898b000000	                           jns 0x4007e6d	      4340	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4007de2	    0xc785a4feffff	              mov dword [rbp - 0x15c], 0	      4341	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4007dec	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4007df3	          0x8b5004	                mov edx, dword [rax + 4]	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4007df6	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4007dfd	          0x8b4004	                mov eax, dword [rax + 4]	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4007e00	            0x29c2	                            sub edx, eax	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4007e02	            0x89d0	                            mov eax, edx	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4007e04	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4007e0a	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      4343	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_18
0x4007e11	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4343	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_18
0x4007e18	          0x4889d6	                            mov rsi, rdx	      4343	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_18
0x4007e1b	          0x4889c7	                            mov rdi, rax	      4343	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_18
0x4007e1e	      0xe800000000	                          call 0x4007e23	      4343	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_18
0x4007e23	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4344	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4007e2a	     0xfb6959bfeff	           movzx edx, byte [rbp - 0x165]	      4344	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4007e31	          0x885008	                  mov byte [rax + 8], dl	      4344	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4007e34	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4345	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4007e3b	    0x8b95ccfeffff	            mov edx, dword [rbp - 0x134]	      4345	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4007e41	          0x895004	                mov dword [rax + 4], edx	      4345	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4007e44	    0x488b8d60feff	            mov rcx, qword [rbp - 0x1a0]	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x4007e4b	    0x488d95a4feff	                  lea rdx, [rbp - 0x15c]	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x4007e52	    0x488bb570feff	            mov rsi, qword [rbp - 0x190]	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x4007e59	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x4007e60	          0x4889c7	                            mov rdi, rax	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x4007e63	      0xe895580000	                    call sym.decFinalize	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x4007e68	      0xe958120000	                           jmp 0x40090c5	      4360	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16
0x4007e6d	     0xfb6856cfeff	           movzx eax, byte [rbp - 0x194]	      4348	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19
0x4007e74	          0x83e020	                           and eax, 0x20	      4348	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19
0x4007e77	            0x85c0	                           test eax, eax	      4348	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19
0x4007e79	            0x7425	                            je 0x4007ea0	      4348	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19
0x4007e7b	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4349	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19	CALL_20
0x4007e82	          0x4889c7	                            mov rdi, rax	      4349	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19	CALL_20
0x4007e85	      0xe800000000	                          call 0x4007e8a	      4349	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19	CALL_20
0x4007e8a	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4350	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19
0x4007e91	     0xfb6959bfeff	           movzx edx, byte [rbp - 0x165]	      4350	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19
0x4007e98	          0x885008	                  mov byte [rax + 8], dl	      4350	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19
0x4007e9b	      0xe925120000	                           jmp 0x40090c5	      4360	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16
0x4007ea0	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4353	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7
0x4007ea7	          0x8b4004	                mov eax, dword [rax + 4]	      4353	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7
0x4007eaa	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      4353	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7
0x4007eb0	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      4354	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	CALL_21
0x4007eb7	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4354	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	CALL_21
0x4007ebe	          0x4889d6	                            mov rsi, rdx	      4354	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	CALL_21
0x4007ec1	          0x4889c7	                            mov rdi, rax	      4354	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	CALL_21
0x4007ec4	      0xe800000000	                          call 0x4007ec9	      4354	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	CALL_21
0x4007ec9	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4355	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	IF_20
0x4007ed0	          0x8b4004	                mov eax, dword [rax + 4]	      4355	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	IF_20
0x4007ed3	    0x3b85ccfeffff	            cmp eax, dword [rbp - 0x134]	      4355	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	IF_20
0x4007ed9	     0xf8ee6110000	                           jle 0x40090c5	      4355	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	IF_20
0x4007edf	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4355	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	IF_20
0x4007ee6	    0x8b95ccfeffff	            mov edx, dword [rbp - 0x134]	      4355	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	IF_20
0x4007eec	          0x895004	                mov dword [rax + 4], edx	      4355	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	IF_20
0x4007eef	      0xe9d1110000	                           jmp 0x40090c5	      4360	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16
0x4007ef4	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007efb	          0x8b5004	                mov edx, dword [rax + 4]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007efe	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007f05	            0x8b00	                    mov eax, dword [rax]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007f07	          0x8d0c02	                    lea ecx, [rdx + rax]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007f0a	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007f11	          0x8b5004	                mov edx, dword [rax + 4]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007f14	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007f1b	            0x8b00	                    mov eax, dword [rax]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007f1d	             0x1d0	                            add eax, edx	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007f1f	            0x29c1	                            sub ecx, eax	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007f21	            0x89c8	                            mov eax, ecx	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007f23	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4007f29	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 0	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x4007f30	     0xf89d0000000	                           jns 0x4008006	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x4007f36	    0x80bd6cfeffff	           cmp byte [rbp - 0x194], 0x80 	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x4007f3d	     0xf84c3000000	                            je 0x4008006	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x4007f43	     0xfb6856cfeff	           movzx eax, byte [rbp - 0x194]	      4372	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22
0x4007f4a	          0x83e020	                           and eax, 0x20	      4372	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22
0x4007f4d	            0x85c0	                           test eax, eax	      4372	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22
0x4007f4f	            0x7425	                            je 0x4007f76	      4372	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22
0x4007f51	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4373	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22	CALL_22
0x4007f58	          0x4889c7	                            mov rdi, rax	      4373	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22	CALL_22
0x4007f5b	      0xe800000000	                          call 0x4007f60	      4373	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22	CALL_22
0x4007f60	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4377	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22	IF_23
0x4007f67	     0xfb6959bfeff	           movzx edx, byte [rbp - 0x165]	      4377	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22	IF_23
0x4007f6e	          0x885008	                  mov byte [rax + 8], dl	      4377	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22	IF_23
0x4007f71	      0xe950110000	                           jmp 0x40090c6	      4378	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22
0x4007f76	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4381	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24
0x4007f7d	          0x8b5004	                mov edx, dword [rax + 4]	      4381	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24
0x4007f80	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4381	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24
0x4007f87	          0x8b4004	                mov eax, dword [rax + 4]	      4381	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24
0x4007f8a	            0x39c2	                            cmp edx, eax	      4381	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24
0x4007f8c	            0x7f78	                            jg 0x4008006	      4381	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24
0x4007f8e	     0xfb6856cfeff	           movzx eax, byte [rbp - 0x194]	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4007f95	          0x83e040	                           and eax, 0x40	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4007f98	            0x85c0	                           test eax, eax	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4007f9a	            0x7509	                           jne 0x4007fa5	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4007f9c	    0x83bdccfeffff	cmp dword [rbp - 0x134], 0xffffffffffffffff	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4007fa3	            0x7d61	                           jge 0x4008006	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4007fa5	    0xc785a4feffff	              mov dword [rbp - 0x15c], 0	      4385	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4007faf	    0x488bbd60feff	            mov rdi, qword [rbp - 0x1a0]	      4386	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25	CALL_23
0x4007fb6	    0x488d8da4feff	                  lea rcx, [rbp - 0x15c]	      4386	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25	CALL_23
0x4007fbd	    0x488b9570feff	            mov rdx, qword [rbp - 0x190]	      4386	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25	CALL_23
0x4007fc4	    0x488bb580feff	            mov rsi, qword [rbp - 0x180]	      4386	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25	CALL_23
0x4007fcb	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4386	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25	CALL_23
0x4007fd2	          0x4989f8	                             mov r8, rdi	      4386	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25	CALL_23
0x4007fd5	          0x4889c7	                            mov rdi, rax	      4386	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25	CALL_23
0x4007fd8	      0xe8ea4d0000	                     call sym.decCopyFit	      4386	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25	CALL_23
0x4007fdd	    0x488b8d60feff	            mov rcx, qword [rbp - 0x1a0]	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4007fe4	    0x488d95a4feff	                  lea rdx, [rbp - 0x15c]	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4007feb	    0x488bb570feff	            mov rsi, qword [rbp - 0x190]	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4007ff2	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4007ff9	          0x4889c7	                            mov rdi, rax	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4007ffc	      0xe8fc560000	                    call sym.decFinalize	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4008001	      0xe9c0100000	                           jmp 0x40090c6	      4388	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4008006	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400800c	          0x83c003	                              add eax, 3	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400800f	          0x83f831	                           cmp eax, 0x31	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4008012	            0x7f17	                            jg 0x400802b	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4008014	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400801a	          0x83c003	                              add eax, 3	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400801d	            0x4898	                                    cdqe	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400801f	     0xfb680000000	                   movzx eax, byte [rax]	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4008026	           0xfb6c0	                           movzx eax, al	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4008029	            0xeb1b	                           jmp 0x4008046	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400802b	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4008031	          0x8d4805	                      lea ecx, [rax + 5]	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4008034	      0xba56555555	                     mov edx, 0x55555556	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4008039	            0x89c8	                            mov eax, ecx	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400803b	            0xf7ea	                                imul edx	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400803d	            0x89c8	                            mov eax, ecx	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400803f	          0xc1f81f	                           sar eax, 0x1f	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4008042	            0x29c2	                            sub edx, eax	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4008044	            0x89d0	                            mov eax, edx	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4008046	    0x8985ecfeffff	            mov dword [rbp - 0x114], eax	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400804c	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4008052	            0x4898	                                    cdqe	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4008054	          0x4801c0	                            add rax, rax	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4008057	        0x4883f822	                           cmp rax, 0x22	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x400805b	            0x764e	                           jbe 0x40080ab	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x400805d	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4008063	            0x4898	                                    cdqe	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4008065	          0x4801c0	                            add rax, rax	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4008068	          0x4889c7	                            mov rdi, rax	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x400806b	      0xe800000000	                          call 0x4008070	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4008070	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4008077	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      4402	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x400807f	            0x751c	                           jne 0x400809d	      4402	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x4008081	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4403	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x4008088	            0x8b00	                    mov eax, dword [rax]	      4403	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x400808a	          0x83c810	                            or eax, 0x10	      4403	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x400808d	            0x89c2	                            mov edx, eax	      4403	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x400808f	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4403	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x4008096	            0x8910	                    mov dword [rax], edx	      4403	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x4008098	      0xe929100000	                           jmp 0x40090c6	      4404	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x400809d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4405	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x40080a4	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      4405	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x40080ab	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40080b2	            0x8b10	                    mov edx, dword [rax]	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40080b4	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40080ba	             0x1d0	                            add eax, edx	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40080bc	          0x83e801	                              sub eax, 1	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40080bf	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40080c5	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4420	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_28
0x40080cc	            0x8b00	                    mov eax, dword [rax]	      4420	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_28
0x40080ce	    0x3b85c4feffff	            cmp eax, dword [rbp - 0x13c]	      4420	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_28
0x40080d4	            0x7e0f	                           jle 0x40080e5	      4420	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_28
0x40080d6	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4420	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_28
0x40080dd	            0x8b00	                    mov eax, dword [rax]	      4420	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_28
0x40080df	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	      4420	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_28
0x40080e5	    0x83bdc4feffff	          cmp dword [rbp - 0x13c], 0x31 	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x40080ec	            0x7f17	                            jg 0x4008105	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x40080ee	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x40080f4	            0x4898	                                    cdqe	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x40080f6	     0xfb680000000	                   movzx eax, byte [rax]	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x40080fd	           0xfb6c0	                           movzx eax, al	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4008100	          0x83c002	                              add eax, 2	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4008103	            0xeb1e	                           jmp 0x4008123	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4008105	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400810b	          0x8d4802	                      lea ecx, [rax + 2]	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400810e	      0xba56555555	                     mov edx, 0x55555556	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4008113	            0x89c8	                            mov eax, ecx	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4008115	            0xf7ea	                                imul edx	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4008117	            0x89c8	                            mov eax, ecx	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4008119	          0xc1f81f	                           sar eax, 0x1f	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400811c	            0x29c2	                            sub edx, eax	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400811e	            0x89d0	                            mov eax, edx	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4008120	          0x83c002	                              add eax, 2	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4008123	    0x8985b8feffff	            mov dword [rbp - 0x148], eax	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4008129	     0xfb6856cfeff	           movzx eax, byte [rbp - 0x194]	      4423	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_29
0x4008130	            0x84c0	                             test al, al	      4423	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_29
0x4008132	            0x7807	                            js 0x400813b	      4423	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_29
0x4008134	    0x8385b8feffff	              add dword [rbp - 0x148], 1	      4423	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_29
0x400813b	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4008141	          0x83c001	                              add eax, 1	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4008144	            0x4898	                                    cdqe	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4008146	          0x4801c0	                            add rax, rax	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4008149	        0x4883f832	                           cmp rax, 0x32	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x400814d	            0x7651	                           jbe 0x40081a0	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x400814f	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4008155	          0x83c001	                              add eax, 1	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4008158	            0x4898	                                    cdqe	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x400815a	          0x4801c0	                            add rax, rax	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x400815d	          0x4889c7	                            mov rdi, rax	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4008160	      0xe800000000	                          call 0x4008165	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4008165	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x400816c	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	      4427	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x4008174	            0x751c	                           jne 0x4008192	      4427	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x4008176	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4428	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x400817d	            0x8b00	                    mov eax, dword [rax]	      4428	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x400817f	          0x83c810	                            or eax, 0x10	      4428	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x4008182	            0x89c2	                            mov edx, eax	      4428	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x4008184	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4428	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x400818b	            0x8910	                    mov dword [rax], edx	      4428	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x400818d	      0xe9340f0000	                           jmp 0x40090c6	      4429	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x4008192	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4430	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4008199	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4430	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x40081a0	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	      4439	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40081a6	            0x4898	                                    cdqe	      4439	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40081a8	          0x4801c0	                            add rax, rax	      4439	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40081ab	        0x488d50fe	                      lea rdx, [rax - 2]	      4439	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40081af	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4439	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40081b6	          0x4801d0	                            add rax, rdx	      4439	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40081b9	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      4439	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40081c0	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x40081c7	        0x488d700a	                    lea rsi, [rax + 0xa]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x40081cb	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x40081d2	            0x8b00	                    mov eax, dword [rax]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x40081d4	          0x83f831	                           cmp eax, 0x31	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x40081d7	            0x7f1e	                            jg 0x40081f7	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x40081d9	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x40081e0	            0x8b00	                    mov eax, dword [rax]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x40081e2	            0x4898	                                    cdqe	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x40081e4	     0xfb680000000	                   movzx eax, byte [rax]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x40081eb	           0xfb6c0	                           movzx eax, al	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x40081ee	          0x4801c0	                            add rax, rax	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x40081f1	        0x4883e802	                              sub rax, 2	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x40081f5	            0xeb27	                           jmp 0x400821e	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x40081f7	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x40081fe	            0x8b00	                    mov eax, dword [rax]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4008200	          0x8d4802	                      lea ecx, [rax + 2]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4008203	      0xba56555555	                     mov edx, 0x55555556	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4008208	            0x89c8	                            mov eax, ecx	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400820a	            0xf7ea	                                imul edx	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400820c	            0x89c8	                            mov eax, ecx	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400820e	          0xc1f81f	                           sar eax, 0x1f	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4008211	            0x29c2	                            sub edx, eax	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4008213	            0x89d0	                            mov eax, edx	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4008215	            0x4898	                                    cdqe	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4008217	          0x4801c0	                            add rax, rax	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400821a	        0x4883e802	                              sub rax, 2	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400821e	          0x4801f0	                            add rax, rsi	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4008221	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4008228	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400822f	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4008236	            0xeb24	                           jmp 0x400825c	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4008238	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400823f	           0xfb710	                   movzx edx, word [rax]	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4008242	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4008249	          0x668910	                      mov word [rax], dx	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400824c	    0x4883ad48ffff	               sub qword [rbp - 0xb8], 2	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4008254	    0x4883ad40ffff	               sub qword [rbp - 0xc0], 2	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400825c	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4008263	        0x4883c00a	                            add rax, 0xa	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4008267	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400826e	            0x76c8	                           jbe 0x4008238	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4008270	            0xeb14	                           jmp 0x4008286	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x4008272	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x4008279	      0x66c7000000	                       mov word [rax], 0	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x400827e	    0x4883ad40ffff	               sub qword [rbp - 0xc0], 2	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x4008286	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x400828d	    0x483b8528ffff	             cmp rax, qword [rbp - 0xd8]	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x4008294	            0x73dc	                           jae 0x4008272	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x4008296	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	      4445	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400829c	    0x8985bcfeffff	            mov dword [rbp - 0x144], eax	      4445	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40082a2	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082a9	            0x8b00	                    mov eax, dword [rax]	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082ab	          0x83f831	                           cmp eax, 0x31	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082ae	            0x7f17	                            jg 0x40082c7	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082b0	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082b7	            0x8b00	                    mov eax, dword [rax]	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082b9	            0x4898	                                    cdqe	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082bb	     0xfb680000000	                   movzx eax, byte [rax]	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082c2	           0xfb6c0	                           movzx eax, al	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082c5	            0xeb1e	                           jmp 0x40082e5	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082c7	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082ce	            0x8b00	                    mov eax, dword [rax]	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082d0	          0x8d4802	                      lea ecx, [rax + 2]	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082d3	      0xba56555555	                     mov edx, 0x55555556	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082d8	            0x89c8	                            mov eax, ecx	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082da	            0xf7ea	                                imul edx	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082dc	            0x89c8	                            mov eax, ecx	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082de	          0xc1f81f	                           sar eax, 0x1f	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082e1	            0x29c2	                            sub edx, eax	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082e3	            0x89d0	                            mov eax, edx	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082e5	    0x8985f0feffff	            mov dword [rbp - 0x110], eax	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x40082eb	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4447	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40082f2	        0x4883c00a	                            add rax, 0xa	      4447	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40082f6	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4447	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40082fd	    0x8b85f0feffff	            mov eax, dword [rbp - 0x110]	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4008303	            0x4898	                                    cdqe	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4008305	          0x4801c0	                            add rax, rax	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4008308	        0x488d50fe	                      lea rdx, [rax - 2]	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400830c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4008313	          0x4801d0	                            add rax, rdx	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4008316	        0x48894580	             mov qword [rbp - 0x80], rax	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400831a	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4452	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400831e	           0xfb700	                   movzx eax, word [rax]	      4452	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4008321	           0xfb7c0	                           movzx eax, ax	      4452	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4008324	    0x8985b0feffff	            mov dword [rbp - 0x150], eax	      4452	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400832a	    0x83bdf0feffff	              cmp dword [rbp - 0x110], 1	      4453	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_32
0x4008331	            0x7e07	                           jle 0x400833a	      4453	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_32
0x4008333	    0x8385b0feffff	              add dword [rbp - 0x150], 1	      4453	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_32
0x400833a	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4454	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400833e	           0xfb700	                   movzx eax, word [rax]	      4454	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4008341	           0xfb7c0	                           movzx eax, ax	      4454	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4008344	    0x69c0e8030000	                    imul eax, eax, 0x3e8	      4454	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400834a	    0x8985b4feffff	            mov dword [rbp - 0x14c], eax	      4454	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4008350	    0x83bdf0feffff	              cmp dword [rbp - 0x110], 1	      4455	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33
0x4008357	            0x7e24	                           jle 0x400837d	      4455	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33
0x4008359	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4456	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33
0x400835d	        0x4883e802	                              sub rax, 2	      4456	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33
0x4008361	           0xfb700	                   movzx eax, word [rax]	      4456	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33
0x4008364	           0xfb7c0	                           movzx eax, ax	      4456	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33
0x4008367	     0x185b4feffff	            add dword [rbp - 0x14c], eax	      4456	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33
0x400836d	    0x83bdf0feffff	              cmp dword [rbp - 0x110], 2	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x4008374	            0x7e07	                           jle 0x400837d	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x4008376	    0x8385b4feffff	              add dword [rbp - 0x14c], 1	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x400837d	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4008388	            0xeb0f	                           jmp 0x4008399	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x400838a	    0x83adccfeffff	              sub dword [rbp - 0x134], 1	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4008391	    0x48838550ffff	               add qword [rbp - 0xb0], 4	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4008399	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x40083a0	           0xfb700	                   movzx eax, word [rax]	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x40083a3	           0xfb7d0	                           movzx edx, ax	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x40083a6	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x40083ad	            0x8b00	                    mov eax, dword [rax]	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x40083af	            0x39c2	                            cmp edx, eax	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x40083b1	            0x73d7	                           jae 0x400838a	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x40083b3	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x40083be	            0xeb0f	                           jmp 0x40083cf	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x40083c0	    0x8385ccfeffff	              add dword [rbp - 0x134], 1	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x40083c7	    0x48838550ffff	               add qword [rbp - 0xb0], 4	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x40083cf	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x40083d3	           0xfb700	                   movzx eax, word [rax]	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x40083d6	           0xfb7d0	                           movzx edx, ax	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x40083d9	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x40083e0	            0x8b00	                    mov eax, dword [rax]	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x40083e2	            0x39c2	                            cmp edx, eax	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x40083e4	            0x73da	                           jae 0x40083c0	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x40083e6	     0xfb6856cfeff	           movzx eax, byte [rbp - 0x194]	      4474	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x40083ed	            0x84c0	                             test al, al	      4474	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x40083ef	     0xf8808010000	                            js 0x40084fd	      4474	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x40083f5	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x40083fc	            0x8b00	                    mov eax, dword [rax]	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x40083fe	          0x83f831	                           cmp eax, 0x31	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4008401	            0x7f17	                            jg 0x400841a	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4008403	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400840a	            0x8b00	                    mov eax, dword [rax]	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400840c	            0x4898	                                    cdqe	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400840e	     0xfb680000000	                   movzx eax, byte [rax]	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4008415	           0xfb6c0	                           movzx eax, al	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4008418	            0xeb1e	                           jmp 0x4008438	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400841a	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4008421	            0x8b00	                    mov eax, dword [rax]	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4008423	          0x8d4802	                      lea ecx, [rax + 2]	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4008426	      0xba56555555	                     mov edx, 0x55555556	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400842b	            0x89c8	                            mov eax, ecx	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400842d	            0xf7ea	                                imul edx	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400842f	            0x89c8	                            mov eax, ecx	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4008431	          0xc1f81f	                           sar eax, 0x1f	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4008434	            0x29c2	                            sub edx, eax	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4008436	            0x89d0	                            mov eax, edx	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4008438	    0x8b95b8feffff	            mov edx, dword [rbp - 0x148]	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400843e	            0x29c2	                            sub edx, eax	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4008440	            0x89d0	                            mov eax, edx	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4008442	             0x1c0	                            add eax, eax	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4008444	             0x1d0	                            add eax, edx	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4008446	    0x8985c0feffff	            mov dword [rbp - 0x140], eax	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400844c	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 0	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x4008453	            0x7910	                           jns 0x4008465	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x4008455	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x400845b	            0xf7d8	                                 neg eax	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x400845d	    0x8985d4feffff	            mov dword [rbp - 0x12c], eax	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x4008463	            0xeb2d	                           jmp 0x4008492	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x4008465	    0x8b8dccfeffff	            mov ecx, dword [rbp - 0x134]	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400846b	      0xba56555555	                     mov edx, 0x55555556	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4008470	            0x89c8	                            mov eax, ecx	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4008472	            0xf7ea	                                imul edx	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4008474	            0x89c8	                            mov eax, ecx	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4008476	          0xc1f81f	                           sar eax, 0x1f	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4008479	            0x29c2	                            sub edx, eax	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400847b	            0x89d0	                            mov eax, edx	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400847d	             0x1c0	                            add eax, eax	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400847f	             0x1d0	                            add eax, edx	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4008481	            0x29c1	                            sub ecx, eax	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4008483	            0x89ca	                            mov edx, ecx	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4008485	      0xb803000000	                              mov eax, 3	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400848a	            0x29d0	                            sub eax, edx	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400848c	    0x8985d4feffff	            mov dword [rbp - 0x12c], eax	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4008492	    0x8b95d4feffff	            mov edx, dword [rbp - 0x12c]	      4481	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_29
0x4008498	    0x8b8db8feffff	            mov ecx, dword [rbp - 0x148]	      4481	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_29
0x400849e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4481	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_29
0x40084a5	            0x89ce	                            mov esi, ecx	      4481	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_29
0x40084a7	          0x4889c7	                            mov rdi, rax	      4481	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_29
0x40084aa	      0xe8a6460000	                call sym.decShiftToLeast	      4481	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_29
0x40084af	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4482	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x40084b5	     0x185ccfeffff	            add dword [rbp - 0x134], eax	      4482	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x40084bb	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4483	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x40084c1	    0x2985c0feffff	            sub dword [rbp - 0x140], eax	      4483	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x40084c7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x40084ce	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x40084d5	            0xeb1b	                           jmp 0x40084f2	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x40084d7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x40084de	      0x66c7000000	                       mov word [rax], 0	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x40084e3	    0x83add4feffff	              sub dword [rbp - 0x12c], 3	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x40084ea	    0x4883ad58ffff	               sub qword [rbp - 0xa8], 2	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x40084f2	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 2	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x40084f9	            0x7fdc	                            jg 0x40084d7	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x40084fb	            0xeb42	                           jmp 0x400853f	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x40084fd	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4488	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9
0x4008504	          0x8b5004	                mov edx, dword [rax + 4]	      4488	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9
0x4008507	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4488	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9
0x400850e	          0x8b4004	                mov eax, dword [rax + 4]	      4488	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9
0x4008511	            0x29c2	                            sub edx, eax	      4488	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9
0x4008513	            0x89d0	                            mov eax, edx	      4488	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9
0x4008515	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      4488	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9
0x400851b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4491	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x4008522	           0xfb710	                   movzx edx, word [rax]	      4491	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x4008525	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4491	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x4008529	           0xfb700	                   movzx eax, word [rax]	      4491	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x400852c	          0x6639c2	                              cmp dx, ax	      4491	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x400852f	            0x730e	                           jae 0x400853f	      4491	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x4008531	    0x83adbcfeffff	              sub dword [rbp - 0x144], 1	      4492	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x4008538	    0x83adccfeffff	              sub dword [rbp - 0x134], 3	      4493	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x400853f	    0xc785a8feffff	              mov dword [rbp - 0x158], 0	      4498	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4008549	    0xc785acfeffff	              mov dword [rbp - 0x154], 0	      4499	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4008553	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4008559	            0x4898	                                    cdqe	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400855b	          0x4801c0	                            add rax, rax	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400855e	        0x488d50fe	                      lea rdx, [rax - 2]	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4008562	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4008569	          0x4801d0	                            add rax, rdx	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400856c	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4008573	    0x66c7859efeff	               mov word [rbp - 0x162], 0	      4502	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x400857c	            0xeb0f	                           jmp 0x400858d	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x400857e	    0x83adb8feffff	              sub dword [rbp - 0x148], 1	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x4008585	    0x4883ad38ffff	               sub qword [rbp - 0xc8], 2	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x400858d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x4008594	           0xfb700	                   movzx eax, word [rax]	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x4008597	          0x6685c0	                             test ax, ax	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x400859a	            0x7510	                           jne 0x40085ac	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x400859c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x40085a3	    0x483b8528ffff	             cmp rax, qword [rbp - 0xd8]	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x40085aa	            0x77d2	                            ja 0x400857e	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x40085ac	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	      4509	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_38
0x40085b2	    0x3b85bcfeffff	            cmp eax, dword [rbp - 0x144]	      4509	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_38
0x40085b8	     0xf8cee010000	                            jl 0x40087ac	      4509	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_38
0x40085be	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	      4510	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40085c4	    0x3b85bcfeffff	            cmp eax, dword [rbp - 0x144]	      4510	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40085ca	     0xf8507010000	                           jne 0x40086d7	      4510	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40085d0	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4514	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40085d4	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      4514	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40085db	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4515	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9
0x40085e2	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4515	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9
0x40085e9	    0x66c785a0feff	               mov word [rbp - 0x160], 0	      4517	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9
0x40085f2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4518	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_40
0x40085f9	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	      4518	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_40
0x4008600	            0x7211	                            jb 0x4008613	      4518	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_40
0x4008602	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4518	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_40
0x4008609	           0xfb700	                   movzx eax, word [rax]	      4518	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_40
0x400860c	    0x668985a0feff	              mov word [rbp - 0x160], ax	      4518	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_40
0x4008613	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4519	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_41
0x400861a	           0xfb700	                   movzx eax, word [rax]	      4519	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_41
0x400861d	    0x663b85a0feff	              cmp ax, word [rbp - 0x160]	      4519	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_41
0x4008624	            0x7522	                           jne 0x4008648	      4519	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_41
0x4008626	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4520	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_42
0x400862d	    0x483b8528ffff	             cmp rax, qword [rbp - 0xd8]	      4520	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_42
0x4008634	            0x7415	                            je 0x400864b	      4520	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_42
0x4008636	    0x4883ad60ffff	               sub qword [rbp - 0xa0], 2	      4515	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9
0x400863e	    0x4883ad68ffff	               sub qword [rbp - 0x98], 2	      4515	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9
0x4008646	            0xeba1	                           jmp 0x40085e9	      4521	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9
0x4008648	              0x90	                                     nop	      4519	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_41
0x4008649	            0xeb01	                           jmp 0x400864c	      4519	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_41
0x400864b	              0x90	                                     nop	      4520	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_42
0x400864c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4523	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_43
0x4008653	           0xfb700	                   movzx eax, word [rax]	      4523	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_43
0x4008656	    0x663b85a0feff	              cmp ax, word [rbp - 0x160]	      4523	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_43
0x400865d	     0xf824c010000	                            jb 0x40087af	      4523	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_43
0x4008663	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4524	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x400866a	           0xfb700	                   movzx eax, word [rax]	      4524	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x400866d	    0x663b85a0feff	              cmp ax, word [rbp - 0x160]	      4524	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x4008674	            0x752c	                           jne 0x40086a2	      4524	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x4008676	     0xfb7859efeff	           movzx eax, word [rbp - 0x162]	      4528	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x400867d	          0x83c001	                              add eax, 1	      4528	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x4008680	    0x6689859efeff	              mov word [rbp - 0x162], ax	      4528	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x4008687	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4529	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x400868e	      0x66c7000000	                       mov word [rax], 0	      4529	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x4008693	    0xc785b8feffff	              mov dword [rbp - 0x148], 1	      4530	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x400869d	      0xe90e010000	                           jmp 0x40087b0	      4531	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x40086a2	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40086a9	           0xfb700	                   movzx eax, word [rax]	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40086ac	           0xfb7c0	                           movzx eax, ax	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40086af	    0x69d0e8030000	                    imul edx, eax, 0x3e8	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40086b5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40086bc	        0x4883e802	                              sub rax, 2	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40086c0	           0xfb700	                   movzx eax, word [rax]	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40086c3	           0xfb7c0	                           movzx eax, ax	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40086c6	             0x1d0	                            add eax, edx	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40086c8	              0x99	                                     cdq	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40086c9	    0xf7bdb4feffff	                idiv dword [rbp - 0x14c]	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40086cf	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40086d5	            0xeb33	                           jmp 0x400870a	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x40086d7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x40086de	           0xfb700	                   movzx eax, word [rax]	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x40086e1	           0xfb7c0	                           movzx eax, ax	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x40086e4	    0x69d0e8030000	                    imul edx, eax, 0x3e8	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x40086ea	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x40086f1	        0x4883e802	                              sub rax, 2	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x40086f5	           0xfb700	                   movzx eax, word [rax]	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x40086f8	           0xfb7c0	                           movzx eax, ax	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x40086fb	             0x1d0	                            add eax, edx	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x40086fd	              0x99	                                     cdq	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x40086fe	    0xf7bdb0feffff	                idiv dword [rbp - 0x150]	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x4008704	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x400870a	    0x83bdc8feffff	              cmp dword [rbp - 0x138], 0	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x4008711	            0x750a	                           jne 0x400871d	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x4008713	    0xc785c8feffff	              mov dword [rbp - 0x138], 1	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x400871d	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      4545	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7
0x4008723	    0x6601859efeff	              add word [rbp - 0x162], ax	      4545	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7
0x400872a	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      4548	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7
0x4008730	    0x2b85f0feffff	            sub eax, dword [rbp - 0x110]	      4548	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7
0x4008736	    0x8985f4feffff	            mov dword [rbp - 0x10c], eax	      4548	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7
0x400873c	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4008742	            0xf7d8	                                 neg eax	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4008744	            0x89c6	                            mov esi, eax	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4008746	    0x8b85f4feffff	            mov eax, dword [rbp - 0x10c]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400874c	            0x4898	                                    cdqe	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400874e	        0x488d1400	                    lea rdx, [rax + rax]	      4556	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7
0x4008752	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4008759	        0x4c8d0402	                     lea r8, [rdx + rax]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400875d	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4008763	    0x2b85f4feffff	            sub eax, dword [rbp - 0x10c]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4008769	    0x8b95f4feffff	            mov edx, dword [rbp - 0x10c]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400876f	          0x4863d2	                         movsxd rdx, edx	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4008772	        0x488d0c12	                    lea rcx, [rdx + rdx]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4008776	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400877d	        0x488d3c11	                    lea rdi, [rcx + rdx]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4008781	    0x8b8df0feffff	            mov ecx, dword [rbp - 0x110]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4008787	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400878e	        0x4883ec08	                              sub rsp, 8	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4008792	              0x56	                                push rsi	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4008793	          0x4d89c1	                              mov r9, r8	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4008796	    0x41b800000000	                              mov r8d, 0	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400879c	            0x89c6	                            mov esi, eax	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400879e	      0xe85e3a0000	                  call sym.decUnitAddSub	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x40087a3	        0x4883c410	                           add rsp, 0x10	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x40087a7	      0xe9d0fdffff	                           jmp 0x400857c	      4562	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7
0x40087ac	              0x90	                                     nop	      4509	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_38
0x40087ad	            0xeb01	                           jmp 0x40087b0	      4509	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_38
0x40087af	              0x90	                                     nop	      4523	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_43
0x40087b0	    0x83bda8feffff	              cmp dword [rbp - 0x158], 0	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x40087b7	            0x750a	                           jne 0x40087c3	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x40087b9	    0x6683bd9efeff	               cmp word [rbp - 0x162], 0	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x40087c1	            0x7477	                            je 0x400883a	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x40087c3	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4567	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x40087ca	     0xfb7959efeff	           movzx edx, word [rbp - 0x162]	      4567	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x40087d1	          0x668910	                      mov word [rax], dx	      4567	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x40087d4	    0x83bda8feffff	              cmp dword [rbp - 0x158], 0	      4569	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47
0x40087db	            0x7539	                           jne 0x4008816	      4569	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47
0x40087dd	    0x8385acfeffff	              add dword [rbp - 0x154], 1	      4570	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47
0x40087e4	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x40087ef	            0xeb0f	                           jmp 0x4008800	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x40087f1	    0x8385acfeffff	              add dword [rbp - 0x154], 1	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x40087f8	    0x48838550ffff	               add qword [rbp - 0xb0], 4	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4008800	     0xfb7959efeff	           movzx edx, word [rbp - 0x162]	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4008807	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x400880e	            0x8b00	                    mov eax, dword [rax]	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4008810	            0x39c2	                            cmp edx, eax	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4008812	            0x73dd	                           jae 0x40087f1	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4008814	            0xeb07	                           jmp 0x400881d	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4008816	    0x8385acfeffff	              add dword [rbp - 0x154], 3	      4573	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	ELSE_11
0x400881d	    0x8385a8feffff	              add dword [rbp - 0x158], 1	      4574	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x4008824	    0x4883ad20ffff	               sub qword [rbp - 0xe0], 2	      4575	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x400882c	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x4008832	    0x3b85e8feffff	            cmp eax, dword [rbp - 0x118]	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x4008838	            0x7f66	                            jg 0x40088a0	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x400883a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x4008841	           0xfb700	                   movzx eax, word [rax]	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x4008844	          0x6685c0	                             test ax, ax	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x4008847	            0x7530	                           jne 0x4008879	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x4008849	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x4008850	            0x7527	                           jne 0x4008879	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x4008852	     0xfb6856cfeff	           movzx eax, byte [rbp - 0x194]	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x4008859	          0x83e050	                           and eax, 0x50	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x400885c	            0x85c0	                           test eax, eax	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x400885e	            0x7543	                           jne 0x40088a3	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x4008860	     0xfb6856cfeff	           movzx eax, byte [rbp - 0x194]	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x4008867	            0x84c0	                             test al, al	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x4008869	            0x790e	                           jns 0x4008879	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400886b	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x4008871	    0x3b85d0feffff	            cmp eax, dword [rbp - 0x130]	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x4008877	            0x7e2d	                           jle 0x40088a6	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x4008879	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 0	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4008880	            0x750b	                           jne 0x400888d	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4008882	     0xfb6856cfeff	           movzx eax, byte [rbp - 0x194]	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4008889	            0x84c0	                             test al, al	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400888b	            0x791c	                           jns 0x40088a9	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400888d	    0x83adbcfeffff	              sub dword [rbp - 0x144], 1	      4592	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x4008894	    0x83adccfeffff	              sub dword [rbp - 0x134], 3	      4593	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x400889b	      0xe9d3fcffff	                           jmp 0x4008573	      4594	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x40088a0	              0x90	                                     nop	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x40088a1	            0xeb07	                           jmp 0x40088aa	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x40088a3	              0x90	                                     nop	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x40088a4	            0xeb04	                           jmp 0x40088aa	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x40088a6	              0x90	                                     nop	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x40088a7	            0xeb01	                           jmp 0x40088aa	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x40088a9	              0x90	                                     nop	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x40088aa	    0x83bda8feffff	              cmp dword [rbp - 0x158], 0	      4601	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x40088b1	            0x7522	                           jne 0x40088d5	      4601	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x40088b3	    0xc785a8feffff	              mov dword [rbp - 0x158], 1	      4602	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x40088bd	    0xc785acfeffff	              mov dword [rbp - 0x154], 1	      4603	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x40088c7	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4604	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x40088ce	      0x66c7000000	                       mov word [rax], 0	      4604	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x40088d3	            0xeb08	                           jmp 0x40088dd	      4604	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x40088d5	    0x48838520ffff	               add qword [rbp - 0xe0], 2	      4606	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12
0x40088dd	    0xc785a4feffff	              mov dword [rbp - 0x15c], 0	      4609	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12
0x40088e7	     0xfb6856cfeff	           movzx eax, byte [rbp - 0x194]	      4610	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54
0x40088ee	            0x84c0	                             test al, al	      4610	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54
0x40088f0	     0xf8964010000	                           jns 0x4008a5a	      4610	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54
0x40088f6	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x40088fd	           0xfb700	                   movzx eax, word [rax]	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x4008900	          0x6685c0	                             test ax, ax	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x4008903	            0x7509	                           jne 0x400890e	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x4008905	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x400890c	            0x7e0f	                           jle 0x400891d	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x400890e	    0xc785a4feffff	              mov dword [rbp - 0x15c], 1	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x4008918	      0xe925070000	                           jmp 0x4009042	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x400891d	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4619	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13
0x4008924	           0xfb700	                   movzx eax, word [rax]	      4619	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13
0x4008927	    0x668985a2feff	              mov word [rbp - 0x15e], ax	      4619	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13
0x400892e	     0xfb785a2feff	           movzx eax, word [rbp - 0x15e]	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x4008935	          0x83e001	                              and eax, 1	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x4008938	            0x85c0	                           test eax, eax	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x400893a	     0xf8502070000	                           jne 0x4009042	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x4008940	    0x6683bda2feff	               cmp word [rbp - 0x15e], 0	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x4008948	     0xf84f4060000	                            je 0x4009042	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x400894e	    0xc785d8feffff	              mov dword [rbp - 0x128], 0	      4622	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x4008958	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x400895e	    0x3b85d0feffff	            cmp eax, dword [rbp - 0x130]	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x4008964	            0x7d60	                           jge 0x40089c6	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x4008966	     0xfb795a2feff	           movzx edx, word [rbp - 0x15e]	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400896d	     0xfb7b5a2feff	           movzx esi, word [rbp - 0x15e]	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4008974	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400897a	          0x83c001	                              add eax, 1	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400897d	            0x89c1	                            mov ecx, eax	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400897f	            0xd3ee	                             shr esi, cl	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4008981	            0x89f1	                            mov ecx, esi	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4008983	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4008989	          0x83c001	                              add eax, 1	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400898c	            0x4898	                                    cdqe	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400898e	    0x8b0485000000	                  mov eax, dword [rax*4]	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4008995	           0xfafc1	                           imul eax, ecx	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4008998	          0xc1e811	                           shr eax, 0x11	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400899b	            0x89c1	                            mov ecx, eax	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400899d	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x40089a3	          0x83c001	                              add eax, 1	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x40089a6	            0x4898	                                    cdqe	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x40089a8	    0x8b0485000000	                  mov eax, dword [rax*4]	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x40089af	           0xfafc1	                           imul eax, ecx	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x40089b2	            0x39c2	                            cmp edx, eax	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x40089b4	            0x7513	                           jne 0x40089c9	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x40089b6	    0x8385ccfeffff	              add dword [rbp - 0x134], 1	      4631	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11
0x40089bd	    0x8385d8feffff	              add dword [rbp - 0x128], 1	      4623	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11
0x40089c4	            0xeb92	                           jmp 0x4008958	      4632	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11
0x40089c6	              0x90	                                     nop	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x40089c7	            0xeb01	                           jmp 0x40089ca	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x40089c9	              0x90	                                     nop	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x40089ca	    0x83bdd8feffff	              cmp dword [rbp - 0x128], 0	      4633	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60
0x40089d1	     0xf8e6b060000	                           jle 0x4009042	      4633	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60
0x40089d7	    0x8b95d8feffff	            mov edx, dword [rbp - 0x128]	      4634	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_35
0x40089dd	    0x8b8da8feffff	            mov ecx, dword [rbp - 0x158]	      4634	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_35
0x40089e3	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4634	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_35
0x40089ea	            0x89ce	                            mov esi, ecx	      4634	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_35
0x40089ec	          0x4889c7	                            mov rdi, rax	      4634	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_35
0x40089ef	      0xe861410000	                call sym.decShiftToLeast	      4634	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_35
0x40089f4	    0x8985a8feffff	            mov dword [rbp - 0x158], eax	      4634	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_35
0x40089fa	    0x8b95a8feffff	            mov edx, dword [rbp - 0x158]	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x4008a00	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x4008a07	            0x89d6	                            mov esi, edx	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x4008a09	          0x4889c7	                            mov rdi, rax	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x4008a0c	      0xe8635a0000	                   call sym.decGetDigits	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x4008a11	    0x8985acfeffff	            mov dword [rbp - 0x154], eax	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x4008a17	    0x83bdacfeffff	          cmp dword [rbp - 0x154], 0x31 	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a1e	            0x7f14	                            jg 0x4008a34	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a20	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a26	            0x4898	                                    cdqe	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a28	     0xfb680000000	                   movzx eax, byte [rax]	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a2f	           0xfb6c0	                           movzx eax, al	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a32	            0xeb1b	                           jmp 0x4008a4f	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a34	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a3a	          0x8d4802	                      lea ecx, [rax + 2]	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a3d	      0xba56555555	                     mov edx, 0x55555556	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a42	            0x89c8	                            mov eax, ecx	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a44	            0xf7ea	                                imul edx	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a46	            0x89c8	                            mov eax, ecx	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a48	          0xc1f81f	                           sar eax, 0x1f	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a4b	            0x29c2	                            sub edx, eax	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a4d	            0x89d0	                            mov eax, edx	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a4f	    0x8985a8feffff	            mov dword [rbp - 0x158], eax	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a55	      0xe9e8050000	                           jmp 0x4009042	      4636	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_37
0x4008a5a	    0x8b95acfeffff	            mov edx, dword [rbp - 0x154]	      4645	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x4008a60	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      4645	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x4008a66	             0x1d0	                            add eax, edx	      4645	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x4008a68	    0x3b85e8feffff	            cmp eax, dword [rbp - 0x118]	      4645	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x4008a6e	            0x7e1c	                           jle 0x4008a8c	      4645	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x4008a70	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4646	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x4008a77	            0x8b00	                    mov eax, dword [rax]	      4646	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x4008a79	          0x83c804	                               or eax, 4	      4646	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x4008a7c	            0x89c2	                            mov edx, eax	      4646	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x4008a7e	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4646	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x4008a85	            0x8910	                    mov dword [rax], edx	      4646	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x4008a87	      0xe93a060000	                           jmp 0x40090c6	      4647	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x4008a8c	     0xfb6856cfeff	           movzx eax, byte [rbp - 0x194]	      4649	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008a93	          0x83e050	                           and eax, 0x50	      4649	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008a96	            0x85c0	                           test eax, eax	      4649	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008a98	     0xf84a4050000	                            je 0x4009042	      4649	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008a9e	    0xc6859cfeffff	               mov byte [rbp - 0x164], 0	      4653	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008aa5	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4657	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008aac	         0xfb64008	               movzx eax, byte [rax + 8]	      4657	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008ab0	    0x88859bfeffff	              mov byte [rbp - 0x165], al	      4657	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008ab6	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008abd	           0xfb700	                   movzx eax, word [rax]	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008ac0	          0x6685c0	                             test ax, ax	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008ac3	     0xf859d000000	                           jne 0x4008b66	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008ac9	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008ad0	     0xf8590000000	                           jne 0x4008b66	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008ad6	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4662	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008add	          0x8b4004	                mov eax, dword [rax + 4]	      4662	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008ae0	    0x8985e4feffff	            mov dword [rbp - 0x11c], eax	      4662	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008ae6	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4663	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_64
0x4008aed	          0x8b4004	                mov eax, dword [rax + 4]	      4663	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_64
0x4008af0	    0x3b85e4feffff	            cmp eax, dword [rbp - 0x11c]	      4663	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_64
0x4008af6	            0x7d10	                           jge 0x4008b08	      4663	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_64
0x4008af8	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4663	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_64
0x4008aff	          0x8b4004	                mov eax, dword [rax + 4]	      4663	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_64
0x4008b02	    0x8985e4feffff	            mov dword [rbp - 0x11c], eax	      4663	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_64
0x4008b08	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4664	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	CALL_38
0x4008b0f	          0x4889c7	                            mov rdi, rax	      4664	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	CALL_38
0x4008b12	      0xe800000000	                          call 0x4008b17	      4664	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	CALL_38
0x4008b17	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4668	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_65
0x4008b1e	    0x8b95e4feffff	            mov edx, dword [rbp - 0x11c]	      4668	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_65
0x4008b24	          0x895004	                mov dword [rax + 4], edx	      4668	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_65
0x4008b27	     0xfb6859bfeff	           movzx eax, byte [rbp - 0x165]	      4669	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008b2e	          0x83e080	                     and eax, 0xffffff80	      4669	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008b31	            0x89c2	                            mov edx, eax	      4669	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008b33	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4669	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008b3a	          0x885008	                  mov byte [rax + 8], dl	      4669	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008b3d	    0x488b8d60feff	            mov rcx, qword [rbp - 0x1a0]	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008b44	    0x488d95a4feff	                  lea rdx, [rbp - 0x15c]	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008b4b	    0x488bb570feff	            mov rsi, qword [rbp - 0x190]	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008b52	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008b59	          0x4889c7	                            mov rdi, rax	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008b5c	      0xe89c4b0000	                    call sym.decFinalize	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008b61	      0xe960050000	                           jmp 0x40090c6	      4671	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4008b66	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x4008b6d	           0xfb700	                   movzx eax, word [rax]	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x4008b70	           0xfb7c0	                           movzx eax, ax	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x4008b73	          0x83e001	                              and eax, 1	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x4008b76	            0x85c0	                           test eax, eax	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x4008b78	            0x7407	                            je 0x4008b81	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x4008b7a	    0xc6859cfeffff	               mov byte [rbp - 0x164], 1	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x4008b81	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4675	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008b88	        0x48894588	             mov qword [rbp - 0x78], rax	      4675	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008b8c	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      4676	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008b92	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      4676	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008b98	    0x8b95c0feffff	            mov edx, dword [rbp - 0x140]	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008b9e	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008ba4	             0x1c2	                            add edx, eax	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008ba6	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008bad	          0x8b4004	                mov eax, dword [rax + 4]	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008bb0	            0x29c2	                            sub edx, eax	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008bb2	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008bb9	          0x8b4004	                mov eax, dword [rax + 4]	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008bbc	             0x1d0	                            add eax, edx	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008bbe	    0x8985dcfeffff	            mov dword [rbp - 0x124], eax	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008bc4	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4684	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_67
0x4008bca	    0x3b85dcfeffff	            cmp eax, dword [rbp - 0x124]	      4684	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_67
0x4008bd0	            0x7d0c	                           jge 0x4008bde	      4684	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_67
0x4008bd2	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4684	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_67
0x4008bd8	    0x8985dcfeffff	            mov dword [rbp - 0x124], eax	      4684	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_67
0x4008bde	    0x8b95dcfeffff	            mov edx, dword [rbp - 0x124]	      4687	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_39
0x4008be4	    0x8b8db8feffff	            mov ecx, dword [rbp - 0x148]	      4687	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_39
0x4008bea	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4687	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_39
0x4008bf1	            0x89ce	                            mov esi, ecx	      4687	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_39
0x4008bf3	          0x4889c7	                            mov rdi, rax	      4687	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_39
0x4008bf6	      0xe85a3f0000	                call sym.decShiftToLeast	      4687	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_39
0x4008bfb	    0x8985b8feffff	            mov dword [rbp - 0x148], eax	      4687	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_39
0x4008c01	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4688	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008c08	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4688	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008c0f	    0x8b95b8feffff	            mov edx, dword [rbp - 0x148]	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x4008c15	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x4008c1c	            0x89d6	                            mov esi, edx	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x4008c1e	          0x4889c7	                            mov rdi, rax	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x4008c21	      0xe84e580000	                   call sym.decGetDigits	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x4008c26	    0x8985acfeffff	            mov dword [rbp - 0x154], eax	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x4008c2c	    0x83bdacfeffff	          cmp dword [rbp - 0x154], 0x31 	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4008c33	            0x7f14	                            jg 0x4008c49	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4008c35	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4008c3b	            0x4898	                                    cdqe	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4008c3d	     0xfb680000000	                   movzx eax, byte [rax]	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4008c44	           0xfb6c0	                           movzx eax, al	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4008c47	            0xeb1b	                           jmp 0x4008c64	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4008c49	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4008c4f	          0x8d4802	                      lea ecx, [rax + 2]	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4008c52	      0xba56555555	                     mov edx, 0x55555556	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4008c57	            0x89c8	                            mov eax, ecx	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4008c59	            0xf7ea	                                imul edx	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4008c5b	            0x89c8	                            mov eax, ecx	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4008c5d	          0xc1f81f	                           sar eax, 0x1f	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4008c60	            0x29c2	                            sub edx, eax	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4008c62	            0x89d0	                            mov eax, edx	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4008c64	    0x8985a8feffff	            mov dword [rbp - 0x158], eax	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4008c6a	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4692	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008c71	          0x8b4004	                mov eax, dword [rax + 4]	      4692	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008c74	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      4692	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4008c7a	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4693	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_68
0x4008c81	          0x8b4004	                mov eax, dword [rax + 4]	      4693	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_68
0x4008c84	    0x3b85ccfeffff	            cmp eax, dword [rbp - 0x134]	      4693	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_68
0x4008c8a	            0x7d10	                           jge 0x4008c9c	      4693	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_68
0x4008c8c	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4693	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_68
0x4008c93	          0x8b4004	                mov eax, dword [rax + 4]	      4693	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_68
0x4008c96	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      4693	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_68
0x4008c9c	     0xfb6856cfeff	           movzx eax, byte [rbp - 0x194]	      4698	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69
0x4008ca3	          0x83e010	                           and eax, 0x10	      4698	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69
0x4008ca6	            0x85c0	                           test eax, eax	      4698	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69
0x4008ca8	     0xf8494030000	                            je 0x4009042	      4698	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69
0x4008cae	    0x488bbd20ffff	             mov rdi, qword [rbp - 0xe0]	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4008cb5	    0x8b8da8feffff	            mov ecx, dword [rbp - 0x158]	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4008cbb	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4008cc2	    0x8bb5a8feffff	            mov esi, dword [rbp - 0x158]	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4008cc8	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4008ccf	        0x4883ec08	                              sub rsp, 8	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4008cd3	            0x6a01	                                  push 1	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4008cd5	          0x4989f9	                             mov r9, rdi	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4008cd8	    0x41b800000000	                              mov r8d, 0	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4008cde	          0x4889c7	                            mov rdi, rax	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4008ce1	      0xe81b350000	                  call sym.decUnitAddSub	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4008ce6	        0x4883c410	                           add rsp, 0x10	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4008cea	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4008cf0	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4712	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69
0x4008cf7	          0x8b4004	                mov eax, dword [rax + 4]	      4712	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69
0x4008cfa	    0x2b85ccfeffff	            sub eax, dword [rbp - 0x134]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d00	          0x4189c0	                            mov r8d, eax	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d03	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d0a	            0x8b00	                    mov eax, dword [rax]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d0c	          0x83f831	                           cmp eax, 0x31	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d0f	            0x7f17	                            jg 0x4008d28	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d11	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d18	            0x8b00	                    mov eax, dword [rax]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d1a	            0x4898	                                    cdqe	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d1c	     0xfb680000000	                   movzx eax, byte [rax]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d23	           0xfb6c0	                           movzx eax, al	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d26	            0xeb1e	                           jmp 0x4008d46	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d28	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d2f	            0x8b00	                    mov eax, dword [rax]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d31	          0x8d4802	                      lea ecx, [rax + 2]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d34	      0xba56555555	                     mov edx, 0x55555556	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d39	            0x89c8	                            mov eax, ecx	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d3b	            0xf7ea	                                imul edx	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d3d	            0x89c8	                            mov eax, ecx	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d3f	          0xc1f81f	                           sar eax, 0x1f	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d42	            0x29c2	                            sub edx, eax	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d44	            0x89d0	                            mov eax, edx	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d46	    0x488b9578feff	            mov rdx, qword [rbp - 0x188]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d4d	        0x4883c20a	                            add rdx, 0xa	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d51	    0x8bb5f8feffff	            mov esi, dword [rbp - 0x108]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d57	    0x488bbd20ffff	             mov rdi, qword [rbp - 0xe0]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d5e	            0x89c1	                            mov ecx, eax	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d60	      0xe838310000	                 call sym.decUnitCompare	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d65	    0x8985fcfeffff	            mov dword [rbp - 0x104], eax	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4008d6b	    0x81bdfcfeffff	    cmp dword [rbp - 0x104], 0x80000000 	      4713	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x4008d75	            0x751c	                           jne 0x4008d93	      4713	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x4008d77	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4714	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x4008d7e	            0x8b00	                    mov eax, dword [rax]	      4714	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x4008d80	          0x83c810	                            or eax, 0x10	      4714	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x4008d83	            0x89c2	                            mov edx, eax	      4714	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x4008d85	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4714	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x4008d8c	            0x8910	                    mov dword [rax], edx	      4714	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x4008d8e	      0xe933030000	                           jmp 0x40090c6	      4715	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x4008d93	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008d9a	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008da1	            0xeb64	                           jmp 0x4008e07	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008da3	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4721	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008daa	           0xfb700	                   movzx eax, word [rax]	      4721	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008dad	           0xfb7c0	                           movzx eax, ax	      4721	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008db0	          0x83e001	                              and eax, 1	      4721	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008db3	    0x898500ffffff	            mov dword [rbp - 0x100], eax	      4721	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008db9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4722	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008dc0	           0xfb700	                   movzx eax, word [rax]	      4722	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008dc3	          0x66d1e8	                               shr ax, 1	      4722	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008dc6	            0x89c2	                            mov edx, eax	      4722	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008dc8	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4722	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008dcf	          0x668910	                      mov word [rax], dx	      4722	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008dd2	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      4723	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12	IF_71
0x4008dd9	            0x7423	                            je 0x4008dfe	      4723	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12	IF_71
0x4008ddb	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4724	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008de2	        0x4883e802	                              sub rax, 2	      4724	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008de6	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      4724	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008ded	        0x4883ea02	                              sub rdx, 2	      4724	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008df1	           0xfb712	                   movzx edx, word [rdx]	      4724	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008df4	      0x6681c2f401	                           add dx, 0x1f4	      4724	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008df9	          0x668910	                      mov word [rax], dx	      4724	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008dfc	            0xeb01	                           jmp 0x4008dff	      4724	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008dfe	              0x90	                                     nop	      4723	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12	IF_71
0x4008dff	    0x48838570ffff	               add qword [rbp - 0x90], 2	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008e07	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008e0d	            0x4898	                                    cdqe	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008e0f	        0x488d1400	                    lea rdx, [rax + rax]	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008e13	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008e1a	          0x4801d0	                            add rax, rdx	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008e1d	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008e24	     0xf8779ffffff	                            ja 0x4008da3	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4008e2a	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008e31	            0x7f1a	                            jg 0x4008e4d	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008e33	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008e3a	     0xf8502020000	                           jne 0x4009042	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008e40	    0x80bd9cfeffff	               cmp byte [rbp - 0x164], 0	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008e47	     0xf84f5010000	                            je 0x4009042	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008e4d	    0xc6859dfeffff	               mov byte [rbp - 0x163], 0	      4734	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008e54	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4735	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73
0x4008e5a	    0x3b85e8feffff	            cmp eax, dword [rbp - 0x118]	      4735	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73
0x4008e60	            0x7564	                           jne 0x4008ec6	      4735	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73
0x4008e62	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4736	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13
0x4008e66	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      4736	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13
0x4008e6d	    0x83bde0feffff	              cmp dword [rbp - 0x120], 3	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x4008e74	            0x7e12	                           jle 0x4008e88	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x4008e76	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x4008e7d	           0xfb700	                   movzx eax, word [rax]	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x4008e80	        0x663de703	                           cmp ax, 0x3e7	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x4008e84	            0x742e	                            je 0x4008eb4	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x4008e86	            0xeb3e	                           jmp 0x4008ec6	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x4008e88	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x4008e8f	           0xfb700	                   movzx eax, word [rax]	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x4008e92	           0xfb7d0	                           movzx edx, ax	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x4008e95	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x4008e9b	            0x4898	                                    cdqe	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x4008e9d	    0x8b0485000000	                  mov eax, dword [rax*4]	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x4008ea4	          0x83e801	                              sub eax, 1	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x4008ea7	            0x39c2	                            cmp edx, eax	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x4008ea9	            0x751a	                           jne 0x4008ec5	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x4008eab	    0xc6859dfeffff	               mov byte [rbp - 0x163], 1	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x4008eb2	            0xeb11	                           jmp 0x4008ec5	      4742	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15
0x4008eb4	    0x83ade0feffff	              sub dword [rbp - 0x120], 3	      4744	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13
0x4008ebb	    0x48838570ffff	               add qword [rbp - 0x90], 2	      4736	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13
0x4008ec3	            0xeba8	                           jmp 0x4008e6d	      4745	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13
0x4008ec5	              0x90	                                     nop	      4742	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15
0x4008ec6	    0x80bd9dfeffff	               cmp byte [rbp - 0x163], 0	      4747	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4008ecd	            0x741c	                            je 0x4008eeb	      4747	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4008ecf	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4748	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4008ed6	            0x8b00	                    mov eax, dword [rax]	      4748	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4008ed8	          0x83c804	                               or eax, 4	      4748	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4008edb	            0x89c2	                            mov edx, eax	      4748	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4008edd	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      4748	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4008ee4	            0x8910	                    mov dword [rax], edx	      4748	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4008ee6	      0xe9db010000	                           jmp 0x40090c6	      4749	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4008eeb	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008ef2	          0x8b4004	                mov eax, dword [rax + 4]	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008ef5	    0x2b85ccfeffff	            sub eax, dword [rbp - 0x134]	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008efb	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f01	    0x8b8d04ffffff	             mov ecx, dword [rbp - 0xfc]	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f07	      0xba56555555	                     mov edx, 0x55555556	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f0c	            0x89c8	                            mov eax, ecx	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f0e	            0xf7ea	                                imul edx	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f10	            0x89c8	                            mov eax, ecx	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f12	          0xc1f81f	                           sar eax, 0x1f	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f15	            0x29c2	                            sub edx, eax	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f17	            0x89d0	                            mov eax, edx	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f19	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f1f	    0x8b8d04ffffff	             mov ecx, dword [rbp - 0xfc]	      4756	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f25	      0xba56555555	                     mov edx, 0x55555556	      4756	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f2a	            0x89c8	                            mov eax, ecx	      4756	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f2c	            0xf7ea	                                imul edx	      4756	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f2e	            0x89c8	                            mov eax, ecx	      4756	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f30	          0xc1f81f	                           sar eax, 0x1f	      4756	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f33	            0x29c2	                            sub edx, eax	      4756	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f35	            0x89d0	                            mov eax, edx	      4756	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f37	             0x1c0	                            add eax, eax	      4756	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f39	             0x1d0	                            add eax, edx	      4756	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f3b	            0x29c1	                            sub ecx, eax	      4756	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f3d	            0x89c8	                            mov eax, ecx	      4756	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f3f	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      4756	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f45	    0x8b850cffffff	             mov eax, dword [rbp - 0xf4]	      4760	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f4b	            0x4898	                                    cdqe	      4760	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f4d	    0x8b0485000000	                  mov eax, dword [rax*4]	      4760	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4008f54	            0xf7d8	                                 neg eax	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008f56	          0x4189c1	                            mov r9d, eax	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008f59	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4759	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_46
0x4008f60	            0x8b00	                    mov eax, dword [rax]	      4759	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_46
0x4008f62	          0x83f831	                           cmp eax, 0x31	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008f65	            0x7f17	                            jg 0x4008f7e	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008f67	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4759	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_46
0x4008f6e	            0x8b00	                    mov eax, dword [rax]	      4759	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_46
0x4008f70	            0x4898	                                    cdqe	      4759	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_46
0x4008f72	     0xfb680000000	                   movzx eax, byte [rax]	      4759	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_46
0x4008f79	           0xfb6c0	                           movzx eax, al	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008f7c	            0xeb1e	                           jmp 0x4008f9c	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008f7e	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      4759	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_46
0x4008f85	            0x8b00	                    mov eax, dword [rax]	      4759	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_46
0x4008f87	          0x8d4802	                      lea ecx, [rax + 2]	      4759	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_46
0x4008f8a	      0xba56555555	                     mov edx, 0x55555556	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008f8f	            0x89c8	                            mov eax, ecx	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008f91	            0xf7ea	                                imul edx	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008f93	            0x89c8	                            mov eax, ecx	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008f95	          0xc1f81f	                           sar eax, 0x1f	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008f98	            0x29c2	                            sub edx, eax	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008f9a	            0x89d0	                            mov eax, edx	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008f9c	    0x488b9578feff	            mov rdx, qword [rbp - 0x188]	      4759	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_46
0x4008fa3	        0x4883c20a	                            add rdx, 0xa	      4759	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_46
0x4008fa7	    0x4c8b8520ffff	              mov r8, qword [rbp - 0xe0]	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008fae	    0x8b8d08ffffff	             mov ecx, dword [rbp - 0xf8]	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008fb4	    0x8bb5a8feffff	            mov esi, dword [rbp - 0x158]	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008fba	    0x488bbd20ffff	             mov rdi, qword [rbp - 0xe0]	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008fc1	        0x4883ec08	                              sub rsp, 8	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008fc5	            0x4151	                                 push r9	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008fc7	          0x4d89c1	                              mov r9, r8	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008fca	          0x4189c8	                            mov r8d, ecx	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008fcd	            0x89c1	                            mov ecx, eax	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008fcf	      0xe82d320000	                  call sym.decUnitAddSub	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008fd4	        0x4883c410	                           add rsp, 0x10	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008fd8	            0xf7d8	                                 neg eax	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008fda	    0x8985a8feffff	            mov dword [rbp - 0x158], eax	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4008fe0	    0x8b95a8feffff	            mov edx, dword [rbp - 0x158]	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x4008fe6	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x4008fed	            0x89d6	                            mov esi, edx	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x4008fef	          0x4889c7	                            mov rdi, rax	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x4008ff2	      0xe87d540000	                   call sym.decGetDigits	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x4008ff7	    0x8985acfeffff	            mov dword [rbp - 0x154], eax	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x4008ffd	    0x83bdacfeffff	          cmp dword [rbp - 0x154], 0x31 	      4762	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_48
0x4009004	            0x7f14	                            jg 0x400901a	      4762	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_48
0x4009006	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      4762	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_48
0x400900c	            0x4898	                                    cdqe	      4762	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_48
0x400900e	     0xfb680000000	                   movzx eax, byte [rax]	      4762	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_48
0x4009015	           0xfb6c0	                           movzx eax, al	      4762	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_48
0x4009018	            0xeb1b	                           jmp 0x4009035	      4762	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_48
0x400901a	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      4762	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_48
0x4009020	          0x8d4802	                      lea ecx, [rax + 2]	      4762	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_48
0x4009023	      0xba56555555	                     mov edx, 0x55555556	      4762	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_48
0x4009028	            0x89c8	                            mov eax, ecx	      4762	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_48
0x400902a	            0xf7ea	                                imul edx	      4762	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_48
0x400902c	            0x89c8	                            mov eax, ecx	      4762	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_48
0x400902e	          0xc1f81f	                           sar eax, 0x1f	      4762	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_48
0x4009031	            0x29c2	                            sub edx, eax	      4762	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_48
0x4009033	            0x89d0	                            mov eax, edx	      4762	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_48
0x4009035	    0x8985a8feffff	            mov dword [rbp - 0x158], eax	      4762	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_48
0x400903b	    0x80b59bfeffff	            xor byte [rbp - 0x165], 0x80	      4764	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4009042	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4771	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4009049	    0x8b95ccfeffff	            mov edx, dword [rbp - 0x134]	      4771	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400904f	          0x895004	                mov dword [rax + 4], edx	      4771	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4009052	     0xfb6859bfeff	           movzx eax, byte [rbp - 0x165]	      4772	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4009059	          0x83e080	                     and eax, 0xffffff80	      4772	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400905c	            0x89c2	                            mov edx, eax	      4772	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400905e	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4772	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4009065	          0x885008	                  mov byte [rax + 8], dl	      4772	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4009068	    0x4c8b8560feff	             mov r8, qword [rbp - 0x1a0]	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400906f	    0x488dbda4feff	                  lea rdi, [rbp - 0x15c]	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x4009076	    0x8b8dacfeffff	            mov ecx, dword [rbp - 0x154]	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400907c	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x4009083	    0x488bb570feff	            mov rsi, qword [rbp - 0x190]	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400908a	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x4009091	          0x4d89c1	                              mov r9, r8	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x4009094	          0x4989f8	                             mov r8, rdi	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x4009097	          0x4889c7	                            mov rdi, rax	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400909a	      0xe8953d0000	                    call sym.decSetCoeff	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400909f	    0x488b8d60feff	            mov rcx, qword [rbp - 0x1a0]	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40090a6	    0x488d95a4feff	                  lea rdx, [rbp - 0x15c]	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40090ad	    0x488bb570feff	            mov rsi, qword [rbp - 0x190]	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40090b4	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40090bb	          0x4889c7	                            mov rdi, rax	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40090be	      0xe83a460000	                    call sym.decFinalize	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40090c3	            0xeb01	                           jmp 0x40090c6	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40090c5	              0x90	                                     nop	      4360	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16
0x40090c6	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4785	decNumber.c	FUNCTION_68	FUNCTION_65
0x40090cd	          0x4889c7	                            mov rdi, rax	      4785	decNumber.c	FUNCTION_68	FUNCTION_65
0x40090d0	      0xe800000000	                          call 0x40090d5	      4785	decNumber.c	FUNCTION_68	FUNCTION_65
0x40090d5	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4786	decNumber.c	FUNCTION_68	FUNCTION_65
0x40090dc	          0x4889c7	                            mov rdi, rax	      4786	decNumber.c	FUNCTION_68	FUNCTION_65
0x40090df	      0xe800000000	                          call 0x40090e4	      4786	decNumber.c	FUNCTION_68	FUNCTION_65
0x40090e4	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4791	decNumber.c	FUNCTION_68	FUNCTION_65
0x40090eb	        0x488b7df8	                mov rdi, qword [rbp - 8]	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x40090ef	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x40090f8	            0x7405	                            je 0x40090ff	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x40090fa	      0xe800000000	                          call 0x40090ff	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x40090ff	              0xc9	                                   leave	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x4009100	              0xc3	                                     ret	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
decStatus	SWITCH,0:IF,2:FOR,0:CALL,2:DO,0:ELSE,1:WHILE,0:functions,0	29
0x400e418	              0x55	                                push rbp	      7735	decNumber.c	FUNCTION_24
0x400e419	          0x4889e5	                            mov rbp, rsp	      7735	decNumber.c	FUNCTION_24
0x400e41c	        0x4883ec20	                           sub rsp, 0x20	      7735	decNumber.c	FUNCTION_24
0x400e420	        0x48897df8	                mov qword [rbp - 8], rdi	      7735	decNumber.c	FUNCTION_24
0x400e424	          0x8975f4	              mov dword [rbp - 0xc], esi	      7735	decNumber.c	FUNCTION_24
0x400e427	        0x488955e8	             mov qword [rbp - 0x18], rdx	      7735	decNumber.c	FUNCTION_24
0x400e42b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      7736	decNumber.c	FUNCTION_24	IF_1
0x400e42e	      0x25dd000000	                           and eax, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400e433	            0x85c0	                           test eax, eax	      7736	decNumber.c	FUNCTION_24	IF_1
0x400e435	            0x7429	                            je 0x400e460	      7736	decNumber.c	FUNCTION_24	IF_1
0x400e437	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e43a	      0x2500000040	                     and eax, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e43f	            0x85c0	                           test eax, eax	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e441	            0x7409	                            je 0x400e44c	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e443	    0x8165f4ffffff	       and dword [rbp - 0xc], 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e44a	            0xeb14	                           jmp 0x400e460	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e44c	        0x488b45f8	                mov rax, qword [rbp - 8]	      7740	decNumber.c	FUNCTION_24	IF_1	ELSE_1	CALL_1
0x400e450	          0x4889c7	                            mov rdi, rax	      7740	decNumber.c	FUNCTION_24	IF_1	ELSE_1	CALL_1
0x400e453	      0xe800000000	                          call 0x400e458	      7740	decNumber.c	FUNCTION_24	IF_1	ELSE_1	CALL_1
0x400e458	        0x488b45f8	                mov rax, qword [rbp - 8]	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400e45c	        0xc6400820	                mov byte [rax + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400e460	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400e463	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400e467	            0x89d6	                            mov esi, edx	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400e469	          0x4889c7	                            mov rdi, rax	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400e46c	      0xe800000000	                          call 0x400e471	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400e471	              0x90	                                     nop	      7745	decNumber.c	FUNCTION_24
0x400e472	              0xc9	                                   leave	      7746	decNumber.c	FUNCTION_24
0x400e473	              0xc3	                                     ret	      7746	decNumber.c	FUNCTION_24
decNumberNextMinus	SWITCH,0:IF,3:FOR,0:CALL,5:DO,0:ELSE,0:WHILE,0:functions,0	66
0x40026b8	              0x55	                                push rbp	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026b9	          0x4889e5	                            mov rbp, rsp	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026bc	        0x4883ec70	                           sub rsp, 0x70	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026c0	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026c4	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026c8	        0x48895598	             mov qword [rbp - 0x68], rdx	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026cc	    0x64488b042528	                mov rax, qword fs:[0x28]	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026d5	        0x488945f8	                mov qword [rbp - 8], rax	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026d9	            0x31c0	                            xor eax, eax	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026db	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026df	          0x488b10	                    mov rdx, qword [rax]	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026e2	        0x488955c0	             mov qword [rbp - 0x40], rdx	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026e6	        0x488b5008	                mov rdx, qword [rax + 8]	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026ea	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026ee	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026f2	        0x488955d0	             mov qword [rbp - 0x30], rdx	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026f6	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026f9	          0x8945d8	             mov dword [rbp - 0x28], eax	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x40026fc	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1665	decNumber.c	FUNCTION_68	FUNCTION_28
0x4002703	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x4002707	         0xfb64008	               movzx eax, byte [rax + 8]	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x400270b	           0xfb6c0	                           movzx eax, al	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x400270e	      0x25c0000000	                           and eax, 0xc0	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x4002713	          0x83f840	                           cmp eax, 0x40	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x4002716	            0x7519	                           jne 0x4002731	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x4002718	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1672	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2	CALL_2
0x400271c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1672	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2	CALL_2
0x4002720	          0x4889d6	                            mov rsi, rdx	      1672	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2	CALL_2
0x4002723	          0x4889c7	                            mov rdi, rax	      1672	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2	CALL_2
0x4002726	      0xe870b30000	                 call sym.decSetMaxValue	      1672	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2	CALL_2
0x400272b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1674	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x400272f	            0xeb70	                           jmp 0x40027a1	      1674	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x4002731	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1676	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_3
0x4002735	          0x4889c7	                            mov rdi, rax	      1676	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_3
0x4002738	      0xe800000000	                          call 0x400273d	      1676	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_3
0x400273d	    0x66c745ea0100	                mov word [rbp - 0x16], 1	      1677	decNumber.c	FUNCTION_68	FUNCTION_28
0x4002743	    0xc745e4003665	      mov dword [rbp - 0x1c], 0xc4653600	      1678	decNumber.c	FUNCTION_68	FUNCTION_28
0x400274a	    0xc745cc060000	               mov dword [rbp - 0x34], 6	      1679	decNumber.c	FUNCTION_68	FUNCTION_28
0x4002751	        0x488d7dbc	                   lea rdi, [rbp - 0x44]	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x4002755	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x4002759	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x400275d	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x4002761	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x4002765	          0x4989f9	                             mov r9, rdi	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x4002768	    0x41b880000000	                           mov r8d, 0x80	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x400276e	          0x4889c7	                            mov rdi, rax	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x4002771	      0xe8c3440000	                       call sym.decAddOp	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x4002776	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1681	decNumber.c	FUNCTION_68	FUNCTION_28
0x4002779	      0x2580000040	                     and eax, 0x40000080	      1681	decNumber.c	FUNCTION_68	FUNCTION_28
0x400277e	          0x8945bc	             mov dword [rbp - 0x44], eax	      1681	decNumber.c	FUNCTION_68	FUNCTION_28
0x4002781	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x4002784	            0x85c0	                           test eax, eax	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x4002786	            0x7415	                            je 0x400279d	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x4002788	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x400278b	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x400278f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x4002793	            0x89ce	                            mov esi, ecx	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x4002795	          0x4889c7	                            mov rdi, rax	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x4002798	      0xe87bbc0000	                      call sym.decStatus	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x400279d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1683	decNumber.c	FUNCTION_68	FUNCTION_28
0x40027a1	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40027a5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40027ae	            0x7405	                            je 0x40027b5	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40027b0	      0xe800000000	                          call 0x40027b5	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40027b5	              0xc9	                                   leave	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40027b6	              0xc3	                                     ret	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
decNumberToIntegralValue	SWITCH,0:IF,0:FOR,0:CALL,1:DO,0:ELSE,0:WHILE,0:functions,0	39
0x400586e	              0x55	                                push rbp	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x400586f	          0x4889e5	                            mov rbp, rsp	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x4005872	        0x4883ec50	                           sub rsp, 0x50	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x4005876	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x400587a	        0x488975c0	             mov qword [rbp - 0x40], rsi	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x400587e	        0x488955b8	             mov qword [rbp - 0x48], rdx	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x4005882	    0x64488b042528	                mov rax, qword fs:[0x28]	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x400588b	        0x488945f8	                mov qword [rbp - 8], rax	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x400588f	            0x31c0	                            xor eax, eax	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x4005891	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x4005895	          0x488b10	                    mov rdx, qword [rax]	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x4005898	        0x488955d0	             mov qword [rbp - 0x30], rdx	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x400589c	        0x488b5008	                mov rdx, qword [rax + 8]	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058a0	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058a4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058a8	        0x488955e0	             mov qword [rbp - 0x20], rdx	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058ac	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058af	          0x8945e8	             mov dword [rbp - 0x18], eax	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058b2	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      3205	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058b9	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3206	decNumber.c	FUNCTION_68	FUNCTION_48	CALL_1
0x40058bd	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      3206	decNumber.c	FUNCTION_68	FUNCTION_48	CALL_1
0x40058c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3206	decNumber.c	FUNCTION_68	FUNCTION_48	CALL_1
0x40058c5	          0x4889ce	                            mov rsi, rcx	      3206	decNumber.c	FUNCTION_68	FUNCTION_48	CALL_1
0x40058c8	          0x4889c7	                            mov rdi, rax	      3206	decNumber.c	FUNCTION_68	FUNCTION_48	CALL_1
0x40058cb	      0xe800000000	                          call 0x40058d0	      3206	decNumber.c	FUNCTION_68	FUNCTION_48	CALL_1
0x40058d0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3209	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058d4	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3209	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058d7	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      3209	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058da	    0x81e280000000	                           and edx, 0x80	      3209	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058e0	             0x9c2	                             or edx, eax	      3209	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058e2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3209	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058e6	          0x895014	             mov dword [rax + 0x14], edx	      3209	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058e9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3210	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058ed	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058f1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058fa	            0x7405	                            je 0x4005901	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x40058fc	      0xe800000000	                          call 0x4005901	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4005901	              0xc9	                                   leave	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4005902	              0xc3	                                     ret	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
decNumberAbs	SWITCH,0:IF,2:FOR,0:CALL,5:DO,0:ELSE,0:WHILE,0:functions,0	45
0x4000c40	              0x55	                                push rbp	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000c41	          0x4889e5	                            mov rbp, rsp	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000c44	        0x4883ec50	                           sub rsp, 0x50	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000c48	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000c4c	        0x488975c0	             mov qword [rbp - 0x40], rsi	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000c50	        0x488955b8	             mov qword [rbp - 0x48], rdx	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000c54	    0x64488b042528	                mov rax, qword fs:[0x28]	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000c5d	        0x488945f8	                mov qword [rbp - 8], rax	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000c61	            0x31c0	                            xor eax, eax	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000c63	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       741	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000c6a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       747	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_2
0x4000c6e	          0x4889c7	                            mov rdi, rax	       747	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_2
0x4000c71	      0xe800000000	                          call 0x4000c76	       747	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_2
0x4000c76	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       748	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000c7a	          0x8b4004	                mov eax, dword [rax + 4]	       748	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000c7d	          0x8945e4	             mov dword [rbp - 0x1c], eax	       748	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000c80	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4000c84	         0xfb64008	               movzx eax, byte [rax + 8]	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4000c88	           0xfb6c0	                           movzx eax, al	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4000c8b	      0x2580000000	                           and eax, 0x80	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4000c90	          0x4189c0	                            mov r8d, eax	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4000c93	        0x488d7ddc	                   lea rdi, [rbp - 0x24]	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4000c97	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4000c9b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4000c9f	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4000ca3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4000ca7	          0x4989f9	                             mov r9, rdi	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4000caa	          0x4889c7	                            mov rdi, rax	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4000cad	      0xe8875f0000	                       call sym.decAddOp	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4000cb2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4000cb5	            0x85c0	                           test eax, eax	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4000cb7	            0x7415	                            je 0x4000cce	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4000cb9	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4000cbc	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4000cc0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4000cc4	            0x89ce	                            mov esi, ecx	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4000cc6	          0x4889c7	                            mov rdi, rax	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4000cc9	      0xe84ad70000	                      call sym.decStatus	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4000cce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       754	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000cd2	        0x488b4df8	                mov rcx, qword [rbp - 8]	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000cd6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000cdf	            0x7405	                            je 0x4000ce6	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000ce1	      0xe800000000	                          call 0x4000ce6	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000ce6	              0xc9	                                   leave	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4000ce7	              0xc3	                                     ret	       755	decNumber.c	FUNCTION_68	FUNCTION_8
