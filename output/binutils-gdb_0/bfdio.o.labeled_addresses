close_on_exec	IF,2:WHILE,0:CALL,3:DO,0:ELSE,0:SWITCH,0:FOR,0:functions,0	30
0x4000085	              0x55	                                push rbp	        71	bfdio.c	FUNCTION_3
0x4000086	          0x4889e5	                            mov rbp, rsp	        71	bfdio.c	FUNCTION_3
0x4000089	        0x4883ec20	                           sub rsp, 0x20	        71	bfdio.c	FUNCTION_3
0x400008d	        0x48897de8	             mov qword [rbp - 0x18], rdi	        71	bfdio.c	FUNCTION_3
0x4000091	      0x48837de800	               cmp qword [rbp - 0x18], 0	        73	bfdio.c	FUNCTION_3	IF_1
0x4000096	            0x744d	                            je 0x40000e5	        73	bfdio.c	FUNCTION_3	IF_1
0x4000098	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        75	bfdio.c	FUNCTION_3	IF_1	CALL_1
0x400009c	          0x4889c7	                            mov rdi, rax	        75	bfdio.c	FUNCTION_3	IF_1	CALL_1
0x400009f	      0xe800000000	                          call 0x40000a4	        75	bfdio.c	FUNCTION_3	IF_1	CALL_1
0x40000a4	          0x8945f8	                mov dword [rbp - 8], eax	        75	bfdio.c	FUNCTION_3	IF_1	CALL_1
0x40000a7	          0x8b45f8	                mov eax, dword [rbp - 8]	        76	bfdio.c	FUNCTION_3	IF_1	CALL_2
0x40000aa	      0xba00000000	                              mov edx, 0	        76	bfdio.c	FUNCTION_3	IF_1	CALL_2
0x40000af	      0xbe01000000	                              mov esi, 1	        76	bfdio.c	FUNCTION_3	IF_1	CALL_2
0x40000b4	            0x89c7	                            mov edi, eax	        76	bfdio.c	FUNCTION_3	IF_1	CALL_2
0x40000b6	      0xb800000000	                              mov eax, 0	        76	bfdio.c	FUNCTION_3	IF_1	CALL_2
0x40000bb	      0xe800000000	                          call 0x40000c0	        76	bfdio.c	FUNCTION_3	IF_1	CALL_2
0x40000c0	          0x8945fc	                mov dword [rbp - 4], eax	        76	bfdio.c	FUNCTION_3	IF_1	CALL_2
0x40000c3	        0x837dfc00	                  cmp dword [rbp - 4], 0	        77	bfdio.c	FUNCTION_3	IF_1	IF_2
0x40000c7	            0x781c	                            js 0x40000e5	        77	bfdio.c	FUNCTION_3	IF_1	IF_2
0x40000c9	          0x8b45fc	                mov eax, dword [rbp - 4]	        78	bfdio.c	FUNCTION_3	IF_1	CALL_3
0x40000cc	          0x83c801	                               or eax, 1	        78	bfdio.c	FUNCTION_3	IF_1	CALL_3
0x40000cf	            0x89c2	                            mov edx, eax	        78	bfdio.c	FUNCTION_3	IF_1	CALL_3
0x40000d1	          0x8b45f8	                mov eax, dword [rbp - 8]	        78	bfdio.c	FUNCTION_3	IF_1	CALL_3
0x40000d4	      0xbe02000000	                              mov esi, 2	        78	bfdio.c	FUNCTION_3	IF_1	CALL_3
0x40000d9	            0x89c7	                            mov edi, eax	        78	bfdio.c	FUNCTION_3	IF_1	CALL_3
0x40000db	      0xb800000000	                              mov eax, 0	        78	bfdio.c	FUNCTION_3	IF_1	CALL_3
0x40000e0	      0xe800000000	                          call 0x40000e5	        78	bfdio.c	FUNCTION_3	IF_1	CALL_3
0x40000e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        81	bfdio.c	FUNCTION_3
0x40000e9	              0xc9	                                   leave	        82	bfdio.c	FUNCTION_3
0x40000ea	              0xc3	                                     ret	        82	bfdio.c	FUNCTION_3
bfd_bwrite	IF,3:WHILE,0:CALL,2:DO,0:ELSE,1:SWITCH,0:FOR,0:functions,0	39
0x40001ea	              0x55	                                push rbp	       207	bfdio.c	FUNCTION_6
0x40001eb	          0x4889e5	                            mov rbp, rsp	       207	bfdio.c	FUNCTION_6
0x40001ee	        0x4883ec30	                           sub rsp, 0x30	       207	bfdio.c	FUNCTION_6
0x40001f2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       207	bfdio.c	FUNCTION_6
0x40001f6	        0x488975e0	             mov qword [rbp - 0x20], rsi	       207	bfdio.c	FUNCTION_6
0x40001fa	        0x488955d8	             mov qword [rbp - 0x28], rdx	       207	bfdio.c	FUNCTION_6
0x40001fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       210	bfdio.c	FUNCTION_6	IF_1
0x4000202	        0x488b4018	            mov rax, qword [rax + 0x18] 	       210	bfdio.c	FUNCTION_6	IF_1
0x4000206	          0x4885c0	                           test rax, rax	       210	bfdio.c	FUNCTION_6	IF_1
0x4000209	            0x7423	                            je 0x400022e	       210	bfdio.c	FUNCTION_6	IF_1
0x400020b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       211	bfdio.c	FUNCTION_6	CALL_1
0x400020f	        0x488b4018	            mov rax, qword [rax + 0x18] 	       211	bfdio.c	FUNCTION_6	CALL_1
0x4000213	        0x488b4008	                mov rax, qword [rax + 8]	       211	bfdio.c	FUNCTION_6	CALL_1
0x4000217	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       211	bfdio.c	FUNCTION_6	CALL_1
0x400021b	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       211	bfdio.c	FUNCTION_6	CALL_1
0x400021f	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       211	bfdio.c	FUNCTION_6	CALL_1
0x4000223	          0x4889cf	                            mov rdi, rcx	       211	bfdio.c	FUNCTION_6	CALL_1
0x4000226	            0xffd0	                                call rax	       211	bfdio.c	FUNCTION_6	CALL_1
0x4000228	        0x488945f8	                mov qword [rbp - 8], rax	       211	bfdio.c	FUNCTION_6	CALL_1
0x400022c	            0xeb08	                           jmp 0x4000236	       211	bfdio.c	FUNCTION_6	CALL_1
0x400022e	    0x48c745f80000	                  mov qword [rbp - 8], 0	       213	bfdio.c	FUNCTION_6	ELSE_1
0x4000236	      0x48837df8ff	 cmp qword [rbp - 8], 0xffffffffffffffff	       215	bfdio.c	FUNCTION_6	IF_2
0x400023b	            0x7417	                            je 0x4000254	       215	bfdio.c	FUNCTION_6	IF_2
0x400023d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       216	bfdio.c	FUNCTION_6	IF_2
0x4000241	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       216	bfdio.c	FUNCTION_6	IF_2
0x4000245	        0x488b45f8	                mov rax, qword [rbp - 8]	       216	bfdio.c	FUNCTION_6	IF_2
0x4000249	          0x4801c2	                            add rdx, rax	       216	bfdio.c	FUNCTION_6	IF_2
0x400024c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       216	bfdio.c	FUNCTION_6	IF_2
0x4000250	        0x48895030	             mov qword [rax + 0x30], rdx	       216	bfdio.c	FUNCTION_6	IF_2
0x4000254	        0x488b45f8	                mov rax, qword [rbp - 8]	       217	bfdio.c	FUNCTION_6	IF_3
0x4000258	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       217	bfdio.c	FUNCTION_6	IF_3
0x400025c	            0x7415	                            je 0x4000273	       217	bfdio.c	FUNCTION_6	IF_3
0x400025e	      0xe800000000	                          call 0x4000263	       220	bfdio.c	FUNCTION_6	IF_3
0x4000263	    0xc7001c000000	                   mov dword [rax], 0x1c	       220	bfdio.c	FUNCTION_6	IF_3
0x4000269	      0xbf01000000	                              mov edi, 1	       222	bfdio.c	FUNCTION_6	IF_3	CALL_2
0x400026e	      0xe800000000	                          call 0x4000273	       222	bfdio.c	FUNCTION_6	IF_3	CALL_2
0x4000273	        0x488b45f8	                mov rax, qword [rbp - 8]	       224	bfdio.c	FUNCTION_6
0x4000277	              0xc9	                                   leave	       225	bfdio.c	FUNCTION_6
0x4000278	              0xc3	                                     ret	       225	bfdio.c	FUNCTION_6
bfd_get_size	IF,2:WHILE,0:CALL,1:DO,0:ELSE,0:SWITCH,0:FOR,0:functions,0	32
0x40005f5	              0x55	                                push rbp	       425	bfdio.c	FUNCTION_12
0x40005f6	          0x4889e5	                            mov rbp, rsp	       425	bfdio.c	FUNCTION_12
0x40005f9	    0x4881ecb00000	                           sub rsp, 0xb0	       425	bfdio.c	FUNCTION_12
0x4000600	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	       425	bfdio.c	FUNCTION_12
0x4000607	    0x64488b042528	                mov rax, qword fs:[0x28]	       425	bfdio.c	FUNCTION_12
0x4000610	        0x488945f8	                mov qword [rbp - 8], rax	       425	bfdio.c	FUNCTION_12
0x4000614	            0x31c0	                            xor eax, eax	       425	bfdio.c	FUNCTION_12
0x4000616	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       428	bfdio.c	FUNCTION_12	IF_1
0x400061d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       428	bfdio.c	FUNCTION_12	IF_1
0x4000621	          0x4885c0	                           test rax, rax	       428	bfdio.c	FUNCTION_12	IF_1
0x4000624	            0x7507	                           jne 0x400062d	       428	bfdio.c	FUNCTION_12	IF_1
0x4000626	      0xb800000000	                              mov eax, 0	       429	bfdio.c	FUNCTION_12	IF_1
0x400062b	            0xeb34	                           jmp 0x4000661	       429	bfdio.c	FUNCTION_12	IF_1
0x400062d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       431	bfdio.c	FUNCTION_12	IF_2	CALL_1
0x4000634	        0x488b4018	            mov rax, qword [rax + 0x18] 	       431	bfdio.c	FUNCTION_12	IF_2	CALL_1
0x4000638	        0x488b4030	            mov rax, qword [rax + 0x30] 	       431	bfdio.c	FUNCTION_12	IF_2	CALL_1
0x400063c	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	       431	bfdio.c	FUNCTION_12	IF_2	CALL_1
0x4000643	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       431	bfdio.c	FUNCTION_12	IF_2	CALL_1
0x400064a	          0x4889ce	                            mov rsi, rcx	       431	bfdio.c	FUNCTION_12	IF_2	CALL_1
0x400064d	          0x4889d7	                            mov rdi, rdx	       431	bfdio.c	FUNCTION_12	IF_2	CALL_1
0x4000650	            0xffd0	                                call rax	       431	bfdio.c	FUNCTION_12	IF_2	CALL_1
0x4000652	            0x85c0	                           test eax, eax	       431	bfdio.c	FUNCTION_12	IF_2	CALL_1
0x4000654	            0x7407	                            je 0x400065d	       431	bfdio.c	FUNCTION_12	IF_2	CALL_1
0x4000656	      0xb800000000	                              mov eax, 0	       432	bfdio.c	FUNCTION_12	IF_2
0x400065b	            0xeb04	                           jmp 0x4000661	       432	bfdio.c	FUNCTION_12	IF_2
0x400065d	        0x488b4590	             mov rax, qword [rbp - 0x70]	       434	bfdio.c	FUNCTION_12
0x4000661	        0x488b75f8	                mov rsi, qword [rbp - 8]	       435	bfdio.c	FUNCTION_12
0x4000665	    0x644833342528	                xor rsi, qword fs:[0x28]	       435	bfdio.c	FUNCTION_12
0x400066e	            0x7405	                            je 0x4000675	       435	bfdio.c	FUNCTION_12
0x4000670	      0xe800000000	                          call 0x4000675	       435	bfdio.c	FUNCTION_12
0x4000675	              0xc9	                                   leave	       435	bfdio.c	FUNCTION_12
0x4000676	              0xc3	                                     ret	       435	bfdio.c	FUNCTION_12
bfd_bread	IF,5:WHILE,0:CALL,2:DO,0:ELSE,1:SWITCH,0:FOR,0:functions,0	58
0x4000118	              0x55	                                push rbp	       178	bfdio.c	FUNCTION_5
0x4000119	          0x4889e5	                            mov rbp, rsp	       178	bfdio.c	FUNCTION_5
0x400011c	        0x4883ec30	                           sub rsp, 0x30	       178	bfdio.c	FUNCTION_5
0x4000120	        0x48897de8	             mov qword [rbp - 0x18], rdi	       178	bfdio.c	FUNCTION_5
0x4000124	        0x488975e0	             mov qword [rbp - 0x20], rsi	       178	bfdio.c	FUNCTION_5
0x4000128	        0x488955d8	             mov qword [rbp - 0x28], rdx	       178	bfdio.c	FUNCTION_5
0x400012c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       183	bfdio.c	FUNCTION_5	IF_1
0x4000130	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       183	bfdio.c	FUNCTION_5	IF_1
0x4000137	          0x4885c0	                           test rax, rax	       183	bfdio.c	FUNCTION_5	IF_1
0x400013a	            0x7453	                            je 0x400018f	       183	bfdio.c	FUNCTION_5	IF_1
0x400013c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       185	bfdio.c	FUNCTION_5	IF_1	CALL_1
0x4000140	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       185	bfdio.c	FUNCTION_5	IF_1	CALL_1
0x4000147	        0x488b4008	                mov rax, qword [rax + 8]	       185	bfdio.c	FUNCTION_5	IF_1	CALL_1
0x400014b	        0x488945f8	                mov qword [rbp - 8], rax	       185	bfdio.c	FUNCTION_5	IF_1	CALL_1
0x400014f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       187	bfdio.c	FUNCTION_5	IF_1	IF_2
0x4000153	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       187	bfdio.c	FUNCTION_5	IF_1	IF_2
0x4000157	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       187	bfdio.c	FUNCTION_5	IF_1	IF_2
0x400015b	          0x4801d0	                            add rax, rdx	       187	bfdio.c	FUNCTION_5	IF_1	IF_2
0x400015e	        0x483b45f8	                cmp rax, qword [rbp - 8]	       187	bfdio.c	FUNCTION_5	IF_1	IF_2
0x4000162	            0x762b	                           jbe 0x400018f	       187	bfdio.c	FUNCTION_5	IF_1	IF_2
0x4000164	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       189	bfdio.c	FUNCTION_5	IF_1	IF_2	IF_3
0x4000168	        0x488b4030	            mov rax, qword [rax + 0x30] 	       189	bfdio.c	FUNCTION_5	IF_1	IF_2	IF_3
0x400016c	        0x483b45f8	                cmp rax, qword [rbp - 8]	       189	bfdio.c	FUNCTION_5	IF_1	IF_2	IF_3
0x4000170	            0x7207	                            jb 0x4000179	       189	bfdio.c	FUNCTION_5	IF_1	IF_2	IF_3
0x4000172	      0xb800000000	                              mov eax, 0	       190	bfdio.c	FUNCTION_5	IF_1	IF_2	IF_3
0x4000177	            0xeb6f	                           jmp 0x40001e8	       190	bfdio.c	FUNCTION_5	IF_1	IF_2	IF_3
0x4000179	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       191	bfdio.c	FUNCTION_5	IF_1	IF_2
0x400017d	        0x488b4030	            mov rax, qword [rax + 0x30] 	       191	bfdio.c	FUNCTION_5	IF_1	IF_2
0x4000181	        0x488b55f8	                mov rdx, qword [rbp - 8]	       191	bfdio.c	FUNCTION_5	IF_1	IF_2
0x4000185	          0x4829c2	                            sub rdx, rax	       191	bfdio.c	FUNCTION_5	IF_1	IF_2
0x4000188	          0x4889d0	                            mov rax, rdx	       191	bfdio.c	FUNCTION_5	IF_1	IF_2
0x400018b	        0x488945e0	             mov qword [rbp - 0x20], rax	       191	bfdio.c	FUNCTION_5	IF_1	IF_2
0x400018f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       195	bfdio.c	FUNCTION_5	IF_4
0x4000193	        0x488b4018	            mov rax, qword [rax + 0x18] 	       195	bfdio.c	FUNCTION_5	IF_4
0x4000197	          0x4885c0	                           test rax, rax	       195	bfdio.c	FUNCTION_5	IF_4
0x400019a	            0x7422	                            je 0x40001be	       195	bfdio.c	FUNCTION_5	IF_4
0x400019c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       196	bfdio.c	FUNCTION_5	CALL_2
0x40001a0	        0x488b4018	            mov rax, qword [rax + 0x18] 	       196	bfdio.c	FUNCTION_5	CALL_2
0x40001a4	          0x488b00	                    mov rax, qword [rax]	       196	bfdio.c	FUNCTION_5	CALL_2
0x40001a7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       196	bfdio.c	FUNCTION_5	CALL_2
0x40001ab	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       196	bfdio.c	FUNCTION_5	CALL_2
0x40001af	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       196	bfdio.c	FUNCTION_5	CALL_2
0x40001b3	          0x4889cf	                            mov rdi, rcx	       196	bfdio.c	FUNCTION_5	CALL_2
0x40001b6	            0xffd0	                                call rax	       196	bfdio.c	FUNCTION_5	CALL_2
0x40001b8	        0x488945f0	             mov qword [rbp - 0x10], rax	       196	bfdio.c	FUNCTION_5	CALL_2
0x40001bc	            0xeb08	                           jmp 0x40001c6	       196	bfdio.c	FUNCTION_5	CALL_2
0x40001be	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       198	bfdio.c	FUNCTION_5	ELSE_1
0x40001c6	      0x48837df0ff	cmp qword [rbp - 0x10], 0xffffffffffffffff	       199	bfdio.c	FUNCTION_5	IF_5
0x40001cb	            0x7417	                            je 0x40001e4	       199	bfdio.c	FUNCTION_5	IF_5
0x40001cd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       200	bfdio.c	FUNCTION_5	IF_5
0x40001d1	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       200	bfdio.c	FUNCTION_5	IF_5
0x40001d5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       200	bfdio.c	FUNCTION_5	IF_5
0x40001d9	          0x4801c2	                            add rdx, rax	       200	bfdio.c	FUNCTION_5	IF_5
0x40001dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       200	bfdio.c	FUNCTION_5	IF_5
0x40001e0	        0x48895030	             mov qword [rax + 0x30], rdx	       200	bfdio.c	FUNCTION_5	IF_5
0x40001e4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       202	bfdio.c	FUNCTION_5
0x40001e8	              0xc9	                                   leave	       203	bfdio.c	FUNCTION_5
0x40001e9	              0xc3	                                     ret	       203	bfdio.c	FUNCTION_5
bfd_get_mtime	IF,3:WHILE,0:CALL,1:DO,0:ELSE,0:SWITCH,0:FOR,0:functions,0	43
0x4000545	              0x55	                                push rbp	       374	bfdio.c	ELSE_5	FUNCTION_11
0x4000546	          0x4889e5	                            mov rbp, rsp	       374	bfdio.c	ELSE_5	FUNCTION_11
0x4000549	    0x4881ecb00000	                           sub rsp, 0xb0	       374	bfdio.c	ELSE_5	FUNCTION_11
0x4000550	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	       374	bfdio.c	ELSE_5	FUNCTION_11
0x4000557	    0x64488b042528	                mov rax, qword fs:[0x28]	       374	bfdio.c	ELSE_5	FUNCTION_11
0x4000560	        0x488945f8	                mov qword [rbp - 8], rax	       374	bfdio.c	ELSE_5	FUNCTION_11
0x4000564	            0x31c0	                            xor eax, eax	       374	bfdio.c	ELSE_5	FUNCTION_11
0x4000566	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       377	bfdio.c	ELSE_5	FUNCTION_11	IF_1
0x400056d	         0xfb64047	           movzx eax, byte [rax + 0x47] 	       377	bfdio.c	ELSE_5	FUNCTION_11	IF_1
0x4000571	          0x83e010	                           and eax, 0x10	       377	bfdio.c	ELSE_5	FUNCTION_11	IF_1
0x4000574	            0x84c0	                             test al, al	       377	bfdio.c	ELSE_5	FUNCTION_11	IF_1
0x4000576	            0x740d	                            je 0x4000585	       377	bfdio.c	ELSE_5	FUNCTION_11	IF_1
0x4000578	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       378	bfdio.c	ELSE_5	FUNCTION_11	IF_1
0x400057f	        0x488b4038	            mov rax, qword [rax + 0x38] 	       378	bfdio.c	ELSE_5	FUNCTION_11	IF_1
0x4000583	            0xeb5a	                           jmp 0x40005df	       378	bfdio.c	ELSE_5	FUNCTION_11	IF_1
0x4000585	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       380	bfdio.c	ELSE_5	FUNCTION_11	IF_2
0x400058c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       380	bfdio.c	ELSE_5	FUNCTION_11	IF_2
0x4000590	          0x4885c0	                           test rax, rax	       380	bfdio.c	ELSE_5	FUNCTION_11	IF_2
0x4000593	            0x7507	                           jne 0x400059c	       380	bfdio.c	ELSE_5	FUNCTION_11	IF_2
0x4000595	      0xb800000000	                              mov eax, 0	       381	bfdio.c	ELSE_5	FUNCTION_11	IF_2
0x400059a	            0xeb43	                           jmp 0x40005df	       381	bfdio.c	ELSE_5	FUNCTION_11	IF_2
0x400059c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       383	bfdio.c	ELSE_5	FUNCTION_11	IF_3	CALL_1
0x40005a3	        0x488b4018	            mov rax, qword [rax + 0x18] 	       383	bfdio.c	ELSE_5	FUNCTION_11	IF_3	CALL_1
0x40005a7	        0x488b4030	            mov rax, qword [rax + 0x30] 	       383	bfdio.c	ELSE_5	FUNCTION_11	IF_3	CALL_1
0x40005ab	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	       383	bfdio.c	ELSE_5	FUNCTION_11	IF_3	CALL_1
0x40005b2	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       383	bfdio.c	ELSE_5	FUNCTION_11	IF_3	CALL_1
0x40005b9	          0x4889ce	                            mov rsi, rcx	       383	bfdio.c	ELSE_5	FUNCTION_11	IF_3	CALL_1
0x40005bc	          0x4889d7	                            mov rdi, rdx	       383	bfdio.c	ELSE_5	FUNCTION_11	IF_3	CALL_1
0x40005bf	            0xffd0	                                call rax	       383	bfdio.c	ELSE_5	FUNCTION_11	IF_3	CALL_1
0x40005c1	            0x85c0	                           test eax, eax	       383	bfdio.c	ELSE_5	FUNCTION_11	IF_3	CALL_1
0x40005c3	            0x7407	                            je 0x40005cc	       383	bfdio.c	ELSE_5	FUNCTION_11	IF_3	CALL_1
0x40005c5	      0xb800000000	                              mov eax, 0	       384	bfdio.c	ELSE_5	FUNCTION_11	IF_3
0x40005ca	            0xeb13	                           jmp 0x40005df	       384	bfdio.c	ELSE_5	FUNCTION_11	IF_3
0x40005cc	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       386	bfdio.c	ELSE_5	FUNCTION_11
0x40005d0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       386	bfdio.c	ELSE_5	FUNCTION_11
0x40005d7	        0x48895038	             mov qword [rax + 0x38], rdx	       386	bfdio.c	ELSE_5	FUNCTION_11
0x40005db	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       387	bfdio.c	ELSE_5	FUNCTION_11
0x40005df	        0x488b75f8	                mov rsi, qword [rbp - 8]	       388	bfdio.c	ELSE_5	FUNCTION_11
0x40005e3	    0x644833342528	                xor rsi, qword fs:[0x28]	       388	bfdio.c	ELSE_5	FUNCTION_11
0x40005ec	            0x7405	                            je 0x40005f3	       388	bfdio.c	ELSE_5	FUNCTION_11
0x40005ee	      0xe800000000	                          call 0x40005f3	       388	bfdio.c	ELSE_5	FUNCTION_11
0x40005f3	              0xc9	                                   leave	       388	bfdio.c	ELSE_5	FUNCTION_11
0x40005f4	              0xc3	                                     ret	       388	bfdio.c	ELSE_5	FUNCTION_11
memory_bwrite	IF,4:WHILE,0:CALL,3:DO,0:ELSE,0:SWITCH,0:FOR,0:functions,0	82
0x40007e4	              0x55	                                push rbp	       515	bfdio.c	FUNCTION_16
0x40007e5	          0x4889e5	                            mov rbp, rsp	       515	bfdio.c	FUNCTION_16
0x40007e8	        0x4883ec40	                           sub rsp, 0x40	       515	bfdio.c	FUNCTION_16
0x40007ec	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       515	bfdio.c	FUNCTION_16
0x40007f0	        0x488975d0	             mov qword [rbp - 0x30], rsi	       515	bfdio.c	FUNCTION_16
0x40007f4	        0x488955c8	             mov qword [rbp - 0x38], rdx	       515	bfdio.c	FUNCTION_16
0x40007f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       516	bfdio.c	FUNCTION_16
0x40007fc	        0x488b4010	            mov rax, qword [rax + 0x10] 	       516	bfdio.c	FUNCTION_16
0x4000800	        0x488945e8	             mov qword [rbp - 0x18], rax	       516	bfdio.c	FUNCTION_16
0x4000804	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       518	bfdio.c	FUNCTION_16	IF_1
0x4000808	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       518	bfdio.c	FUNCTION_16	IF_1
0x400080c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       518	bfdio.c	FUNCTION_16	IF_1
0x4000810	          0x4801c2	                            add rdx, rax	       518	bfdio.c	FUNCTION_16	IF_1
0x4000813	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       518	bfdio.c	FUNCTION_16	IF_1
0x4000817	          0x488b00	                    mov rax, qword [rax]	       518	bfdio.c	FUNCTION_16	IF_1
0x400081a	          0x4839c2	                            cmp rdx, rax	       518	bfdio.c	FUNCTION_16	IF_1
0x400081d	     0xf86c1000000	                           jbe 0x40008e4	       518	bfdio.c	FUNCTION_16	IF_1
0x4000823	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       522	bfdio.c	FUNCTION_16	IF_1
0x4000827	          0x488b00	                    mov rax, qword [rax]	       522	bfdio.c	FUNCTION_16	IF_1
0x400082a	        0x4883c07f	                           add rax, 0x7f	       522	bfdio.c	FUNCTION_16	IF_1
0x400082e	        0x4883e080	             and rax, 0xffffffffffffff80	       522	bfdio.c	FUNCTION_16	IF_1
0x4000832	        0x488945f0	             mov qword [rbp - 0x10], rax	       522	bfdio.c	FUNCTION_16	IF_1
0x4000836	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       523	bfdio.c	FUNCTION_16	IF_1
0x400083a	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       523	bfdio.c	FUNCTION_16	IF_1
0x400083e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       523	bfdio.c	FUNCTION_16	IF_1
0x4000842	          0x4801c2	                            add rdx, rax	       523	bfdio.c	FUNCTION_16	IF_1
0x4000845	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       523	bfdio.c	FUNCTION_16	IF_1
0x4000849	          0x488910	                    mov qword [rax], rdx	       523	bfdio.c	FUNCTION_16	IF_1
0x400084c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       525	bfdio.c	FUNCTION_16	IF_1
0x4000850	          0x488b00	                    mov rax, qword [rax]	       525	bfdio.c	FUNCTION_16	IF_1
0x4000853	        0x4883c07f	                           add rax, 0x7f	       525	bfdio.c	FUNCTION_16	IF_1
0x4000857	        0x4883e080	             and rax, 0xffffffffffffff80	       525	bfdio.c	FUNCTION_16	IF_1
0x400085b	        0x488945f8	                mov qword [rbp - 8], rax	       525	bfdio.c	FUNCTION_16	IF_1
0x400085f	        0x488b45f8	                mov rax, qword [rbp - 8]	       526	bfdio.c	FUNCTION_16	IF_1	IF_2
0x4000863	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       526	bfdio.c	FUNCTION_16	IF_1	IF_2
0x4000867	            0x767b	                           jbe 0x40008e4	       526	bfdio.c	FUNCTION_16	IF_1	IF_2
0x4000869	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       528	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x400086d	        0x488b4008	                mov rax, qword [rax + 8]	       528	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4000871	        0x488b55f8	                mov rdx, qword [rbp - 8]	       528	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4000875	          0x4889d6	                            mov rsi, rdx	       528	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4000878	          0x4889c7	                            mov rdi, rax	       528	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x400087b	      0xe800000000	                          call 0x4000880	       528	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4000880	          0x4889c2	                            mov rdx, rax	       528	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4000883	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       528	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4000887	        0x48895008	                mov qword [rax + 8], rdx	       528	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x400088b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       529	bfdio.c	FUNCTION_16	IF_1	IF_2	IF_3
0x400088f	        0x488b4008	                mov rax, qword [rax + 8]	       529	bfdio.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4000893	          0x4885c0	                           test rax, rax	       529	bfdio.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4000896	            0x7512	                           jne 0x40008aa	       529	bfdio.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4000898	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       531	bfdio.c	FUNCTION_16	IF_1	IF_2	IF_3
0x400089c	    0x48c700000000	                      mov qword [rax], 0	       531	bfdio.c	FUNCTION_16	IF_1	IF_2	IF_3
0x40008a3	      0xb800000000	                              mov eax, 0	       532	bfdio.c	FUNCTION_16	IF_1	IF_2	IF_3
0x40008a8	            0xeb64	                           jmp 0x400090e	       532	bfdio.c	FUNCTION_16	IF_1	IF_2	IF_3
0x40008aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       534	bfdio.c	FUNCTION_16	IF_1	IF_2	IF_4
0x40008ae	          0x488b00	                    mov rax, qword [rax]	       534	bfdio.c	FUNCTION_16	IF_1	IF_2	IF_4
0x40008b1	        0x483b45f8	                cmp rax, qword [rbp - 8]	       534	bfdio.c	FUNCTION_16	IF_1	IF_2	IF_4
0x40008b5	            0x732d	                           jae 0x40008e4	       534	bfdio.c	FUNCTION_16	IF_1	IF_2	IF_4
0x40008b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       535	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40008bb	          0x488b00	                    mov rax, qword [rax]	       535	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40008be	        0x488b55f8	                mov rdx, qword [rbp - 8]	       535	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40008c2	          0x4829c2	                            sub rdx, rax	       535	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40008c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       535	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40008c9	        0x488b4808	                mov rcx, qword [rax + 8]	       535	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40008cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       535	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40008d1	          0x488b00	                    mov rax, qword [rax]	       535	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40008d4	          0x4801c8	                            add rax, rcx	       535	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40008d7	      0xbe00000000	                              mov esi, 0	       535	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40008dc	          0x4889c7	                            mov rdi, rax	       535	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40008df	      0xe800000000	                          call 0x40008e4	       535	bfdio.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x40008e4	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       538	bfdio.c	FUNCTION_16	CALL_3
0x40008e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       538	bfdio.c	FUNCTION_16	CALL_3
0x40008ec	        0x488b4808	                mov rcx, qword [rax + 8]	       538	bfdio.c	FUNCTION_16	CALL_3
0x40008f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       538	bfdio.c	FUNCTION_16	CALL_3
0x40008f4	        0x488b4030	            mov rax, qword [rax + 0x30] 	       538	bfdio.c	FUNCTION_16	CALL_3
0x40008f8	          0x4801c1	                            add rcx, rax	       538	bfdio.c	FUNCTION_16	CALL_3
0x40008fb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       538	bfdio.c	FUNCTION_16	CALL_3
0x40008ff	          0x4889c6	                            mov rsi, rax	       538	bfdio.c	FUNCTION_16	CALL_3
0x4000902	          0x4889cf	                            mov rdi, rcx	       538	bfdio.c	FUNCTION_16	CALL_3
0x4000905	      0xe800000000	                          call 0x400090a	       538	bfdio.c	FUNCTION_16	CALL_3
0x400090a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       539	bfdio.c	FUNCTION_16
0x400090e	              0xc9	                                   leave	       540	bfdio.c	FUNCTION_16
0x400090f	              0xc3	                                     ret	       540	bfdio.c	FUNCTION_16
bfd_seek	IF,8:WHILE,1:CALL,7:DO,0:ELSE,5:SWITCH,0:FOR,0:functions,0	113
0x40003ad	              0x55	                                push rbp	       281	bfdio.c	FUNCTION_10
0x40003ae	          0x4889e5	                            mov rbp, rsp	       281	bfdio.c	FUNCTION_10
0x40003b1	        0x4883ec40	                           sub rsp, 0x40	       281	bfdio.c	FUNCTION_10
0x40003b5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       281	bfdio.c	FUNCTION_10
0x40003b9	        0x488975d0	             mov qword [rbp - 0x30], rsi	       281	bfdio.c	FUNCTION_10
0x40003bd	          0x8955cc	             mov dword [rbp - 0x34], edx	       281	bfdio.c	FUNCTION_10
0x40003c0	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       288	bfdio.c	FUNCTION_10	CALL_1
0x40003c4	            0x7415	                            je 0x40003db	       288	bfdio.c	FUNCTION_10	CALL_1
0x40003c6	        0x837dcc01	               cmp dword [rbp - 0x34], 1	       288	bfdio.c	FUNCTION_10	CALL_1
0x40003ca	            0x740f	                            je 0x40003db	       288	bfdio.c	FUNCTION_10	CALL_1
0x40003cc	      0xbe20010000	                          mov esi, 0x120	       288	bfdio.c	FUNCTION_10	CALL_1
0x40003d1	      0xbf00000000	                              mov edi, 0	       288	bfdio.c	FUNCTION_10	CALL_1
0x40003d6	      0xe800000000	                          call 0x40003db	       288	bfdio.c	FUNCTION_10	CALL_1
0x40003db	        0x837dcc01	               cmp dword [rbp - 0x34], 1	       290	bfdio.c	FUNCTION_10	IF_1
0x40003df	            0x7511	                           jne 0x40003f2	       290	bfdio.c	FUNCTION_10	IF_1
0x40003e1	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       290	bfdio.c	FUNCTION_10	IF_1
0x40003e6	            0x750a	                           jne 0x40003f2	       290	bfdio.c	FUNCTION_10	IF_1
0x40003e8	      0xb800000000	                              mov eax, 0	       291	bfdio.c	FUNCTION_10	IF_1
0x40003ed	      0xe951010000	                           jmp 0x4000543	       291	bfdio.c	FUNCTION_10	IF_1
0x40003f2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       293	bfdio.c	FUNCTION_10	IF_2	CALL_2
0x40003f6	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       293	bfdio.c	FUNCTION_10	IF_2	CALL_2
0x40003fd	          0x4885c0	                           test rax, rax	       293	bfdio.c	FUNCTION_10	IF_2	CALL_2
0x4000400	            0x7416	                            je 0x4000418	       293	bfdio.c	FUNCTION_10	IF_2	CALL_2
0x4000402	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       293	bfdio.c	FUNCTION_10	IF_2	CALL_2
0x4000406	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       293	bfdio.c	FUNCTION_10	IF_2	CALL_2
0x400040d	         0xfb64048	           movzx eax, byte [rax + 0x48] 	       293	bfdio.c	FUNCTION_10	IF_2	CALL_2
0x4000411	          0x83e001	                              and eax, 1	       293	bfdio.c	FUNCTION_10	IF_2	CALL_2
0x4000414	            0x84c0	                             test al, al	       293	bfdio.c	FUNCTION_10	IF_2	CALL_2
0x4000416	            0x7421	                            je 0x4000439	       293	bfdio.c	FUNCTION_10	IF_2	CALL_2
0x4000418	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       295	bfdio.c	FUNCTION_10	IF_2	IF_3
0x400041c	            0x751b	                           jne 0x4000439	       295	bfdio.c	FUNCTION_10	IF_2	IF_3
0x400041e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       295	bfdio.c	FUNCTION_10	IF_2	IF_3
0x4000422	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       295	bfdio.c	FUNCTION_10	IF_2	IF_3
0x4000426	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       295	bfdio.c	FUNCTION_10	IF_2	IF_3
0x400042a	          0x4839c2	                            cmp rdx, rax	       295	bfdio.c	FUNCTION_10	IF_2	IF_3
0x400042d	            0x750a	                           jne 0x4000439	       295	bfdio.c	FUNCTION_10	IF_2	IF_3
0x400042f	      0xb800000000	                              mov eax, 0	       296	bfdio.c	FUNCTION_10	IF_2	IF_3
0x4000434	      0xe90a010000	                           jmp 0x4000543	       296	bfdio.c	FUNCTION_10	IF_2	IF_3
0x4000439	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       313	bfdio.c	FUNCTION_10
0x400043d	        0x488945f0	             mov qword [rbp - 0x10], rax	       313	bfdio.c	FUNCTION_10
0x4000441	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       314	bfdio.c	FUNCTION_10	IF_4
0x4000445	            0x7552	                           jne 0x4000499	       314	bfdio.c	FUNCTION_10	IF_4
0x4000447	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       316	bfdio.c	FUNCTION_10	IF_4
0x400044b	        0x488945f8	                mov qword [rbp - 8], rax	       316	bfdio.c	FUNCTION_10	IF_4
0x400044f	            0xeb22	                           jmp 0x4000473	       318	bfdio.c	FUNCTION_10	IF_4	WHILE_1
0x4000451	        0x488b45f8	                mov rax, qword [rbp - 8]	       321	bfdio.c	FUNCTION_10	IF_4	WHILE_1
0x4000455	        0x488b5058	            mov rdx, qword [rax + 0x58] 	       321	bfdio.c	FUNCTION_10	IF_4	WHILE_1
0x4000459	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       321	bfdio.c	FUNCTION_10	IF_4	WHILE_1
0x400045d	          0x4801d0	                            add rax, rdx	       321	bfdio.c	FUNCTION_10	IF_4	WHILE_1
0x4000460	        0x488945f0	             mov qword [rbp - 0x10], rax	       321	bfdio.c	FUNCTION_10	IF_4	WHILE_1
0x4000464	        0x488b45f8	                mov rax, qword [rbp - 8]	       322	bfdio.c	FUNCTION_10	IF_4	WHILE_1
0x4000468	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       322	bfdio.c	FUNCTION_10	IF_4	WHILE_1
0x400046f	        0x488945f8	                mov qword [rbp - 8], rax	       322	bfdio.c	FUNCTION_10	IF_4	WHILE_1
0x4000473	        0x488b45f8	                mov rax, qword [rbp - 8]	       318	bfdio.c	FUNCTION_10	IF_4	WHILE_1
0x4000477	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       318	bfdio.c	FUNCTION_10	IF_4	WHILE_1
0x400047e	          0x4885c0	                           test rax, rax	       318	bfdio.c	FUNCTION_10	IF_4	WHILE_1
0x4000481	            0x7416	                            je 0x4000499	       318	bfdio.c	FUNCTION_10	IF_4	WHILE_1
0x4000483	        0x488b45f8	                mov rax, qword [rbp - 8]	       319	bfdio.c	FUNCTION_10	IF_4	WHILE_1	CALL_3
0x4000487	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       319	bfdio.c	FUNCTION_10	IF_4	WHILE_1	CALL_3
0x400048e	         0xfb64048	           movzx eax, byte [rax + 0x48] 	       319	bfdio.c	FUNCTION_10	IF_4	WHILE_1	CALL_3
0x4000492	          0x83e001	                              and eax, 1	       319	bfdio.c	FUNCTION_10	IF_4	WHILE_1	CALL_3
0x4000495	            0x84c0	                             test al, al	       319	bfdio.c	FUNCTION_10	IF_4	WHILE_1	CALL_3
0x4000497	            0x74b8	                            je 0x4000451	       319	bfdio.c	FUNCTION_10	IF_4	WHILE_1	CALL_3
0x4000499	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       326	bfdio.c	FUNCTION_10	IF_5
0x400049d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       326	bfdio.c	FUNCTION_10	IF_5
0x40004a1	          0x4885c0	                           test rax, rax	       326	bfdio.c	FUNCTION_10	IF_5
0x40004a4	            0x7421	                            je 0x40004c7	       326	bfdio.c	FUNCTION_10	IF_5
0x40004a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       327	bfdio.c	FUNCTION_10	CALL_4
0x40004aa	        0x488b4018	            mov rax, qword [rax + 0x18] 	       327	bfdio.c	FUNCTION_10	CALL_4
0x40004ae	        0x488b4018	            mov rax, qword [rax + 0x18] 	       327	bfdio.c	FUNCTION_10	CALL_4
0x40004b2	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       327	bfdio.c	FUNCTION_10	CALL_4
0x40004b5	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       327	bfdio.c	FUNCTION_10	CALL_4
0x40004b9	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       327	bfdio.c	FUNCTION_10	CALL_4
0x40004bd	          0x4889cf	                            mov rdi, rcx	       327	bfdio.c	FUNCTION_10	CALL_4
0x40004c0	            0xffd0	                                call rax	       327	bfdio.c	FUNCTION_10	CALL_4
0x40004c2	          0x8945e8	             mov dword [rbp - 0x18], eax	       327	bfdio.c	FUNCTION_10	CALL_4
0x40004c5	            0xeb07	                           jmp 0x40004ce	       327	bfdio.c	FUNCTION_10	CALL_4
0x40004c7	    0xc745e8ffffff	     mov dword [rbp - 0x18], 0xffffffff 	       329	bfdio.c	FUNCTION_10	ELSE_2
0x40004ce	        0x837de800	               cmp dword [rbp - 0x18], 0	       331	bfdio.c	FUNCTION_10	ELSE_2	IF_6
0x40004d2	            0x7441	                            je 0x4000515	       331	bfdio.c	FUNCTION_10	ELSE_2	IF_6
0x40004d4	      0xe800000000	                          call 0x40004d9	       333	bfdio.c	FUNCTION_10	ELSE_2	IF_6
0x40004d9	            0x8b00	                    mov eax, dword [rax]	       333	bfdio.c	FUNCTION_10	ELSE_2	IF_6
0x40004db	          0x8945ec	             mov dword [rbp - 0x14], eax	       333	bfdio.c	FUNCTION_10	ELSE_2	IF_6
0x40004de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       336	bfdio.c	FUNCTION_10	ELSE_2	IF_6	CALL_5
0x40004e2	          0x4889c7	                            mov rdi, rax	       336	bfdio.c	FUNCTION_10	ELSE_2	IF_6	CALL_5
0x40004e5	      0xe800000000	                          call 0x40004ea	       336	bfdio.c	FUNCTION_10	ELSE_2	IF_6	CALL_5
0x40004ea	        0x837dec16	           cmp dword [rbp - 0x14], 0x16 	       340	bfdio.c	FUNCTION_10	ELSE_2	IF_6	IF_7
0x40004ee	            0x750c	                           jne 0x40004fc	       340	bfdio.c	FUNCTION_10	ELSE_2	IF_6	IF_7
0x40004f0	      0xbf12000000	                           mov edi, 0x12	       341	bfdio.c	FUNCTION_10	ELSE_2	IF_6	CALL_6
0x40004f5	      0xe800000000	                          call 0x40004fa	       341	bfdio.c	FUNCTION_10	ELSE_2	IF_6	CALL_6
0x40004fa	            0xeb44	                           jmp 0x4000540	       341	bfdio.c	FUNCTION_10	ELSE_2	IF_6	CALL_6
0x40004fc	      0xbf01000000	                              mov edi, 1	       344	bfdio.c	FUNCTION_10	ELSE_2	IF_6	ELSE_3	CALL_7
0x4000501	      0xe800000000	                          call 0x4000506	       344	bfdio.c	FUNCTION_10	ELSE_2	IF_6	ELSE_3	CALL_7
0x4000506	      0xe800000000	                          call 0x400050b	       345	bfdio.c	FUNCTION_10	ELSE_2	IF_6	ELSE_3
0x400050b	          0x4889c2	                            mov rdx, rax	       345	bfdio.c	FUNCTION_10	ELSE_2	IF_6	ELSE_3
0x400050e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       345	bfdio.c	FUNCTION_10	ELSE_2	IF_6	ELSE_3
0x4000511	            0x8902	                    mov dword [rdx], eax	       345	bfdio.c	FUNCTION_10	ELSE_2	IF_6	ELSE_3
0x4000513	            0xeb2b	                           jmp 0x4000540	       345	bfdio.c	FUNCTION_10	ELSE_2	IF_6	ELSE_3
0x4000515	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       351	bfdio.c	FUNCTION_10	ELSE_4	IF_8
0x4000519	            0x750e	                           jne 0x4000529	       351	bfdio.c	FUNCTION_10	ELSE_4	IF_8
0x400051b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       352	bfdio.c	FUNCTION_10	ELSE_4	IF_8
0x400051f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       352	bfdio.c	FUNCTION_10	ELSE_4	IF_8
0x4000523	        0x48895030	             mov qword [rax + 0x30], rdx	       352	bfdio.c	FUNCTION_10	ELSE_4	IF_8
0x4000527	            0xeb17	                           jmp 0x4000540	       352	bfdio.c	FUNCTION_10	ELSE_4	IF_8
0x4000529	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       354	bfdio.c	FUNCTION_10	ELSE_4	ELSE_5
0x400052d	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       354	bfdio.c	FUNCTION_10	ELSE_4	ELSE_5
0x4000531	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       354	bfdio.c	FUNCTION_10	ELSE_4	ELSE_5
0x4000535	          0x4801c2	                            add rdx, rax	       354	bfdio.c	FUNCTION_10	ELSE_4	ELSE_5
0x4000538	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       354	bfdio.c	FUNCTION_10	ELSE_4	ELSE_5
0x400053c	        0x48895030	             mov qword [rax + 0x30], rdx	       354	bfdio.c	FUNCTION_10	ELSE_4	ELSE_5
0x4000540	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       356	bfdio.c	FUNCTION_10	ELSE_5
0x4000543	              0xc9	                                   leave	       357	bfdio.c	FUNCTION_10	ELSE_5
0x4000544	              0xc3	                                     ret	       357	bfdio.c	FUNCTION_10	ELSE_5
bfd_get_file_size	IF,1:WHILE,0:CALL,3:DO,0:ELSE,0:SWITCH,0:FOR,0:functions,0	23
0x4000677	              0x55	                                push rbp	       453	bfdio.c	FUNCTION_13
0x4000678	          0x4889e5	                            mov rbp, rsp	       453	bfdio.c	FUNCTION_13
0x400067b	        0x4883ec10	                           sub rsp, 0x10	       453	bfdio.c	FUNCTION_13
0x400067f	        0x48897df8	                mov qword [rbp - 8], rdi	       453	bfdio.c	FUNCTION_13
0x4000683	        0x488b45f8	                mov rax, qword [rbp - 8]	       454	bfdio.c	FUNCTION_13	IF_1
0x4000687	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       454	bfdio.c	FUNCTION_13	IF_1
0x400068e	          0x4885c0	                           test rax, rax	       454	bfdio.c	FUNCTION_13	IF_1
0x4000691	            0x7427	                            je 0x40006ba	       454	bfdio.c	FUNCTION_13	IF_1
0x4000693	        0x488b45f8	                mov rax, qword [rbp - 8]	       455	bfdio.c	FUNCTION_13	IF_1	CALL_1
0x4000697	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       455	bfdio.c	FUNCTION_13	IF_1	CALL_1
0x400069e	         0xfb64048	           movzx eax, byte [rax + 0x48] 	       455	bfdio.c	FUNCTION_13	IF_1	CALL_1
0x40006a2	          0x83e001	                              and eax, 1	       455	bfdio.c	FUNCTION_13	IF_1	CALL_1
0x40006a5	            0x84c0	                             test al, al	       455	bfdio.c	FUNCTION_13	IF_1	CALL_1
0x40006a7	            0x7511	                           jne 0x40006ba	       455	bfdio.c	FUNCTION_13	IF_1	CALL_1
0x40006a9	        0x488b45f8	                mov rax, qword [rbp - 8]	       456	bfdio.c	FUNCTION_13	CALL_2
0x40006ad	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       456	bfdio.c	FUNCTION_13	CALL_2
0x40006b4	        0x488b4008	                mov rax, qword [rax + 8]	       456	bfdio.c	FUNCTION_13	CALL_2
0x40006b8	            0xeb0c	                           jmp 0x40006c6	       456	bfdio.c	FUNCTION_13	CALL_2
0x40006ba	        0x488b45f8	                mov rax, qword [rbp - 8]	       458	bfdio.c	FUNCTION_13	CALL_3
0x40006be	          0x4889c7	                            mov rdi, rax	       458	bfdio.c	FUNCTION_13	CALL_3
0x40006c1	      0xe800000000	                          call 0x40006c6	       458	bfdio.c	FUNCTION_13	CALL_3
0x40006c6	              0xc9	                                   leave	       459	bfdio.c	FUNCTION_13
0x40006c7	              0xc3	                                     ret	       459	bfdio.c	FUNCTION_13
bfd_tell	IF,1:WHILE,1:CALL,2:DO,0:ELSE,1:SWITCH,0:FOR,0:functions,0	45
0x4000279	              0x55	                                push rbp	       229	bfdio.c	FUNCTION_7
0x400027a	          0x4889e5	                            mov rbp, rsp	       229	bfdio.c	FUNCTION_7
0x400027d	        0x4883ec20	                           sub rsp, 0x20	       229	bfdio.c	FUNCTION_7
0x4000281	        0x48897de8	             mov qword [rbp - 0x18], rdi	       229	bfdio.c	FUNCTION_7
0x4000285	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       232	bfdio.c	FUNCTION_7	IF_1
0x4000289	        0x488b4018	            mov rax, qword [rax + 0x18] 	       232	bfdio.c	FUNCTION_7	IF_1
0x400028d	          0x4885c0	                           test rax, rax	       232	bfdio.c	FUNCTION_7	IF_1
0x4000290	            0x7470	                            je 0x4000302	       232	bfdio.c	FUNCTION_7	IF_1
0x4000292	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       234	bfdio.c	FUNCTION_7	IF_1
0x4000296	        0x488945f8	                mov qword [rbp - 8], rax	       234	bfdio.c	FUNCTION_7	IF_1
0x400029a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       235	bfdio.c	FUNCTION_7	IF_1	CALL_1
0x400029e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       235	bfdio.c	FUNCTION_7	IF_1	CALL_1
0x40002a2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       235	bfdio.c	FUNCTION_7	IF_1	CALL_1
0x40002a6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       235	bfdio.c	FUNCTION_7	IF_1	CALL_1
0x40002aa	          0x4889d7	                            mov rdi, rdx	       235	bfdio.c	FUNCTION_7	IF_1	CALL_1
0x40002ad	            0xffd0	                                call rax	       235	bfdio.c	FUNCTION_7	IF_1	CALL_1
0x40002af	        0x488945f0	             mov qword [rbp - 0x10], rax	       235	bfdio.c	FUNCTION_7	IF_1	CALL_1
0x40002b3	            0xeb25	                           jmp 0x40002da	       237	bfdio.c	FUNCTION_7	IF_1	WHILE_1
0x40002b5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       240	bfdio.c	FUNCTION_7	IF_1	WHILE_1
0x40002b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       240	bfdio.c	FUNCTION_7	IF_1	WHILE_1
0x40002bd	        0x488b4058	            mov rax, qword [rax + 0x58] 	       240	bfdio.c	FUNCTION_7	IF_1	WHILE_1
0x40002c1	          0x4829c2	                            sub rdx, rax	       240	bfdio.c	FUNCTION_7	IF_1	WHILE_1
0x40002c4	          0x4889d0	                            mov rax, rdx	       240	bfdio.c	FUNCTION_7	IF_1	WHILE_1
0x40002c7	        0x488945f0	             mov qword [rbp - 0x10], rax	       240	bfdio.c	FUNCTION_7	IF_1	WHILE_1
0x40002cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       241	bfdio.c	FUNCTION_7	IF_1	WHILE_1
0x40002cf	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       241	bfdio.c	FUNCTION_7	IF_1	WHILE_1
0x40002d6	        0x488945f8	                mov qword [rbp - 8], rax	       241	bfdio.c	FUNCTION_7	IF_1	WHILE_1
0x40002da	        0x488b45f8	                mov rax, qword [rbp - 8]	       237	bfdio.c	FUNCTION_7	IF_1	WHILE_1
0x40002de	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       237	bfdio.c	FUNCTION_7	IF_1	WHILE_1
0x40002e5	          0x4885c0	                           test rax, rax	       237	bfdio.c	FUNCTION_7	IF_1	WHILE_1
0x40002e8	            0x7420	                            je 0x400030a	       237	bfdio.c	FUNCTION_7	IF_1	WHILE_1
0x40002ea	        0x488b45f8	                mov rax, qword [rbp - 8]	       238	bfdio.c	FUNCTION_7	IF_1	WHILE_1	CALL_2
0x40002ee	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       238	bfdio.c	FUNCTION_7	IF_1	WHILE_1	CALL_2
0x40002f5	         0xfb64048	           movzx eax, byte [rax + 0x48] 	       238	bfdio.c	FUNCTION_7	IF_1	WHILE_1	CALL_2
0x40002f9	          0x83e001	                              and eax, 1	       238	bfdio.c	FUNCTION_7	IF_1	WHILE_1	CALL_2
0x40002fc	            0x84c0	                             test al, al	       238	bfdio.c	FUNCTION_7	IF_1	WHILE_1	CALL_2
0x40002fe	            0x74b5	                            je 0x40002b5	       238	bfdio.c	FUNCTION_7	IF_1	WHILE_1	CALL_2
0x4000300	            0xeb08	                           jmp 0x400030a	       238	bfdio.c	FUNCTION_7	IF_1	WHILE_1	CALL_2
0x4000302	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       245	bfdio.c	FUNCTION_7	ELSE_1
0x400030a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       247	bfdio.c	FUNCTION_7	ELSE_1
0x400030e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       247	bfdio.c	FUNCTION_7	ELSE_1
0x4000312	        0x48895030	             mov qword [rax + 0x30], rdx	       247	bfdio.c	FUNCTION_7	ELSE_1
0x4000316	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       248	bfdio.c	FUNCTION_7	ELSE_1
0x400031a	              0xc9	                                   leave	       249	bfdio.c	FUNCTION_7	ELSE_1
0x400031b	              0xc3	                                     ret	       249	bfdio.c	FUNCTION_7	ELSE_1
_bfd_real_fopen	IF,1:WHILE,0:CALL,13:DO,0:ELSE,1:SWITCH,0:FOR,1:functions,0	14
0x40000eb	              0x55	                                push rbp	        86	bfdio.c	FUNCTION_4
0x40000ec	          0x4889e5	                            mov rbp, rsp	        86	bfdio.c	FUNCTION_4
0x40000ef	        0x4883ec10	                           sub rsp, 0x10	        86	bfdio.c	FUNCTION_4
0x40000f3	        0x48897df8	                mov qword [rbp - 8], rdi	        86	bfdio.c	FUNCTION_4
0x40000f7	        0x488975f0	             mov qword [rbp - 0x10], rsi	        86	bfdio.c	FUNCTION_4
0x40000fb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       120	bfdio.c	FUNCTION_4	CALL_11
0x40000ff	        0x488b45f8	                mov rax, qword [rbp - 8]	       120	bfdio.c	FUNCTION_4	CALL_11
0x4000103	          0x4889d6	                            mov rsi, rdx	       120	bfdio.c	FUNCTION_4	CALL_11
0x4000106	          0x4889c7	                            mov rdi, rax	       120	bfdio.c	FUNCTION_4	CALL_11
0x4000109	      0xe800000000	                          call 0x400010e	       120	bfdio.c	FUNCTION_4	CALL_11
0x400010e	          0x4889c7	                            mov rdi, rax	       120	bfdio.c	FUNCTION_4	CALL_11
0x4000111	      0xe86fffffff	                  call sym.close_on_exec	       120	bfdio.c	FUNCTION_4	CALL_11
0x4000116	              0xc9	                                   leave	       125	bfdio.c	FUNCTION_4
0x4000117	              0xc3	                                     ret	       125	bfdio.c	FUNCTION_4
bfd_mmap	IF,1:WHILE,0:CALL,1:DO,0:ELSE,0:SWITCH,0:FOR,0:functions,0	31
0x40006c8	              0x55	                                push rbp	       481	bfdio.c	FUNCTION_14
0x40006c9	          0x4889e5	                            mov rbp, rsp	       481	bfdio.c	FUNCTION_14
0x40006cc	        0x4883ec40	                           sub rsp, 0x40	       481	bfdio.c	FUNCTION_14
0x40006d0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       481	bfdio.c	FUNCTION_14
0x40006d4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       481	bfdio.c	FUNCTION_14
0x40006d8	        0x488955d8	             mov qword [rbp - 0x28], rdx	       481	bfdio.c	FUNCTION_14
0x40006dc	          0x894dd4	             mov dword [rbp - 0x2c], ecx	       481	bfdio.c	FUNCTION_14
0x40006df	        0x448945d0	             mov dword [rbp - 0x30], r8d	       481	bfdio.c	FUNCTION_14
0x40006e3	        0x4c894dc8	              mov qword [rbp - 0x38], r9	       481	bfdio.c	FUNCTION_14
0x40006e7	    0x48c745f8ffff	 mov qword [rbp - 8], 0xffffffffffffffff	       482	bfdio.c	FUNCTION_14
0x40006ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       484	bfdio.c	FUNCTION_14	IF_1
0x40006f3	        0x488b4018	            mov rax, qword [rax + 0x18] 	       484	bfdio.c	FUNCTION_14	IF_1
0x40006f7	          0x4885c0	                           test rax, rax	       484	bfdio.c	FUNCTION_14	IF_1
0x40006fa	            0x7506	                           jne 0x4000702	       484	bfdio.c	FUNCTION_14	IF_1
0x40006fc	        0x488b45f8	                mov rax, qword [rbp - 8]	       485	bfdio.c	FUNCTION_14	IF_1
0x4000700	            0xeb2f	                           jmp 0x4000731	       485	bfdio.c	FUNCTION_14	IF_1
0x4000702	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       487	bfdio.c	FUNCTION_14	CALL_1
0x4000706	        0x488b4018	            mov rax, qword [rax + 0x18] 	       487	bfdio.c	FUNCTION_14	CALL_1
0x400070a	        0x488b4038	            mov rax, qword [rax + 0x38] 	       487	bfdio.c	FUNCTION_14	CALL_1
0x400070e	        0x4c8b4dc8	              mov r9, qword [rbp - 0x38]	       487	bfdio.c	FUNCTION_14	CALL_1
0x4000712	        0x448b45d0	             mov r8d, dword [rbp - 0x30]	       487	bfdio.c	FUNCTION_14	CALL_1
0x4000716	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       487	bfdio.c	FUNCTION_14	CALL_1
0x4000719	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       487	bfdio.c	FUNCTION_14	CALL_1
0x400071d	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       487	bfdio.c	FUNCTION_14	CALL_1
0x4000721	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	       487	bfdio.c	FUNCTION_14	CALL_1
0x4000725	          0xff7518	                 push qword [rbp + 0x18]	       487	bfdio.c	FUNCTION_14	CALL_1
0x4000728	          0xff7510	                 push qword [rbp + 0x10]	       487	bfdio.c	FUNCTION_14	CALL_1
0x400072b	            0xffd0	                                call rax	       487	bfdio.c	FUNCTION_14	CALL_1
0x400072d	        0x4883c410	                           add rsp, 0x10	       487	bfdio.c	FUNCTION_14	CALL_1
0x4000731	              0xc9	                                   leave	       489	bfdio.c	FUNCTION_14
0x4000732	              0xc3	                                     ret	       489	bfdio.c	FUNCTION_14
memory_bmmap	IF,0:WHILE,0:CALL,0:DO,0:ELSE,0:SWITCH,0:FOR,0:functions,0	11
0x4000b57	              0x55	                                push rbp	       638	bfdio.c	FUNCTION_22
0x4000b58	          0x4889e5	                            mov rbp, rsp	       638	bfdio.c	FUNCTION_22
0x4000b5b	        0x48897df8	                mov qword [rbp - 8], rdi	       638	bfdio.c	FUNCTION_22
0x4000b5f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       638	bfdio.c	FUNCTION_22
0x4000b63	        0x488955e8	             mov qword [rbp - 0x18], rdx	       638	bfdio.c	FUNCTION_22
0x4000b67	          0x894de4	             mov dword [rbp - 0x1c], ecx	       638	bfdio.c	FUNCTION_22
0x4000b6a	        0x448945e0	             mov dword [rbp - 0x20], r8d	       638	bfdio.c	FUNCTION_22
0x4000b6e	        0x4c894dd8	              mov qword [rbp - 0x28], r9	       638	bfdio.c	FUNCTION_22
0x4000b72	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       639	bfdio.c	FUNCTION_22
0x4000b79	              0x5d	                                 pop rbp	       640	bfdio.c	FUNCTION_22
0x4000b7a	              0xc3	                                     ret	       640	bfdio.c	FUNCTION_22
memory_bflush	IF,0:WHILE,0:CALL,0:DO,0:ELSE,0:SWITCH,0:FOR,0:functions,0	6
0x4000afd	              0x55	                                push rbp	       617	bfdio.c	FUNCTION_20
0x4000afe	          0x4889e5	                            mov rbp, rsp	       617	bfdio.c	FUNCTION_20
0x4000b01	        0x48897df8	                mov qword [rbp - 8], rdi	       617	bfdio.c	FUNCTION_20
0x4000b05	      0xb800000000	                              mov eax, 0	       618	bfdio.c	FUNCTION_20
0x4000b0a	              0x5d	                                 pop rbp	       619	bfdio.c	FUNCTION_20
0x4000b0b	              0xc3	                                     ret	       619	bfdio.c	FUNCTION_20
memory_btell	IF,0:WHILE,0:CALL,0:DO,0:ELSE,0:SWITCH,0:FOR,0:functions,0	7
0x4000910	              0x55	                                push rbp	       544	bfdio.c	FUNCTION_17
0x4000911	          0x4889e5	                            mov rbp, rsp	       544	bfdio.c	FUNCTION_17
0x4000914	        0x48897df8	                mov qword [rbp - 8], rdi	       544	bfdio.c	FUNCTION_17
0x4000918	        0x488b45f8	                mov rax, qword [rbp - 8]	       545	bfdio.c	FUNCTION_17
0x400091c	        0x488b4030	            mov rax, qword [rax + 0x30] 	       545	bfdio.c	FUNCTION_17
0x4000920	              0x5d	                                 pop rbp	       546	bfdio.c	FUNCTION_17
0x4000921	              0xc3	                                     ret	       546	bfdio.c	FUNCTION_17
_bfd_real_fseek	IF,0:WHILE,0:CALL,3:DO,0:ELSE,0:SWITCH,0:FOR,0:functions,0	14
0x400005a	              0x55	                                push rbp	        57	bfdio.c	FUNCTION_2
0x400005b	          0x4889e5	                            mov rbp, rsp	        57	bfdio.c	FUNCTION_2
0x400005e	        0x4883ec20	                           sub rsp, 0x20	        57	bfdio.c	FUNCTION_2
0x4000062	        0x48897df8	                mov qword [rbp - 8], rdi	        57	bfdio.c	FUNCTION_2
0x4000066	        0x488975f0	             mov qword [rbp - 0x10], rsi	        57	bfdio.c	FUNCTION_2
0x400006a	          0x8955ec	             mov dword [rbp - 0x14], edx	        57	bfdio.c	FUNCTION_2
0x400006d	          0x8b55ec	             mov edx, dword [rbp - 0x14]	        59	bfdio.c	FUNCTION_2	CALL_1
0x4000070	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        59	bfdio.c	FUNCTION_2	CALL_1
0x4000074	        0x488b45f8	                mov rax, qword [rbp - 8]	        59	bfdio.c	FUNCTION_2	CALL_1
0x4000078	          0x4889ce	                            mov rsi, rcx	        59	bfdio.c	FUNCTION_2	CALL_1
0x400007b	          0x4889c7	                            mov rdi, rax	        59	bfdio.c	FUNCTION_2	CALL_1
0x400007e	      0xe800000000	                          call 0x4000083	        59	bfdio.c	FUNCTION_2	CALL_1
0x4000083	              0xc9	                                   leave	        65	bfdio.c	FUNCTION_2
0x4000084	              0xc3	                                     ret	        65	bfdio.c	FUNCTION_2
memory_bclose	IF,1:WHILE,0:CALL,2:DO,0:ELSE,0:SWITCH,0:FOR,0:functions,0	23
0x4000aa9	              0x55	                                push rbp	       604	bfdio.c	FUNCTION_19
0x4000aaa	          0x4889e5	                            mov rbp, rsp	       604	bfdio.c	FUNCTION_19
0x4000aad	        0x4883ec20	                           sub rsp, 0x20	       604	bfdio.c	FUNCTION_19
0x4000ab1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       604	bfdio.c	FUNCTION_19
0x4000ab5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       605	bfdio.c	FUNCTION_19
0x4000ab9	        0x488b4010	            mov rax, qword [rax + 0x10] 	       605	bfdio.c	FUNCTION_19
0x4000abd	        0x488945f8	                mov qword [rbp - 8], rax	       605	bfdio.c	FUNCTION_19
0x4000ac1	        0x488b45f8	                mov rax, qword [rbp - 8]	       607	bfdio.c	FUNCTION_19	IF_1
0x4000ac5	        0x488b4008	                mov rax, qword [rax + 8]	       607	bfdio.c	FUNCTION_19	IF_1
0x4000ac9	          0x4885c0	                           test rax, rax	       607	bfdio.c	FUNCTION_19	IF_1
0x4000acc	            0x7410	                            je 0x4000ade	       607	bfdio.c	FUNCTION_19	IF_1
0x4000ace	        0x488b45f8	                mov rax, qword [rbp - 8]	       608	bfdio.c	FUNCTION_19	CALL_1
0x4000ad2	        0x488b4008	                mov rax, qword [rax + 8]	       608	bfdio.c	FUNCTION_19	CALL_1
0x4000ad6	          0x4889c7	                            mov rdi, rax	       608	bfdio.c	FUNCTION_19	CALL_1
0x4000ad9	      0xe800000000	                          call 0x4000ade	       608	bfdio.c	FUNCTION_19	CALL_1
0x4000ade	        0x488b45f8	                mov rax, qword [rbp - 8]	       609	bfdio.c	FUNCTION_19	CALL_2
0x4000ae2	          0x4889c7	                            mov rdi, rax	       609	bfdio.c	FUNCTION_19	CALL_2
0x4000ae5	      0xe800000000	                          call 0x4000aea	       609	bfdio.c	FUNCTION_19	CALL_2
0x4000aea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       610	bfdio.c	FUNCTION_19
0x4000aee	    0x48c740100000	               mov qword [rax + 0x10], 0	       610	bfdio.c	FUNCTION_19
0x4000af6	      0xb800000000	                              mov eax, 0	       612	bfdio.c	FUNCTION_19
0x4000afb	              0xc9	                                   leave	       613	bfdio.c	FUNCTION_19
0x4000afc	              0xc3	                                     ret	       613	bfdio.c	FUNCTION_19
_bfd_real_ftell	IF,0:WHILE,0:CALL,3:DO,0:ELSE,0:SWITCH,0:FOR,0:functions,0	9
0x4000040	              0x55	                                push rbp	        45	bfdio.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        45	bfdio.c	FUNCTION_1
0x4000044	        0x4883ec10	                           sub rsp, 0x10	        45	bfdio.c	FUNCTION_1
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	        45	bfdio.c	FUNCTION_1
0x400004c	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	bfdio.c	FUNCTION_1	CALL_1
0x4000050	          0x4889c7	                            mov rdi, rax	        47	bfdio.c	FUNCTION_1	CALL_1
0x4000053	      0xe800000000	                          call 0x4000058	        47	bfdio.c	FUNCTION_1	CALL_1
0x4000058	              0xc9	                                   leave	        53	bfdio.c	FUNCTION_1
0x4000059	              0xc3	                                     ret	        53	bfdio.c	FUNCTION_1
memory_bseek	IF,6:WHILE,0:CALL,3:DO,0:ELSE,2:SWITCH,0:FOR,0:functions,0	102
0x4000922	              0x55	                                push rbp	       550	bfdio.c	FUNCTION_18
0x4000923	          0x4889e5	                            mov rbp, rsp	       550	bfdio.c	FUNCTION_18
0x4000926	        0x4883ec40	                           sub rsp, 0x40	       550	bfdio.c	FUNCTION_18
0x400092a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       550	bfdio.c	FUNCTION_18
0x400092e	        0x488975d0	             mov qword [rbp - 0x30], rsi	       550	bfdio.c	FUNCTION_18
0x4000932	          0x8955cc	             mov dword [rbp - 0x34], edx	       550	bfdio.c	FUNCTION_18
0x4000935	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       554	bfdio.c	FUNCTION_18
0x4000939	        0x488b4010	            mov rax, qword [rax + 0x10] 	       554	bfdio.c	FUNCTION_18
0x400093d	        0x488945e8	             mov qword [rbp - 0x18], rax	       554	bfdio.c	FUNCTION_18
0x4000941	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       556	bfdio.c	FUNCTION_18	IF_1
0x4000945	            0x750a	                           jne 0x4000951	       556	bfdio.c	FUNCTION_18	IF_1
0x4000947	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       557	bfdio.c	FUNCTION_18	IF_1
0x400094b	        0x488945e0	             mov qword [rbp - 0x20], rax	       557	bfdio.c	FUNCTION_18	IF_1
0x400094f	            0xeb13	                           jmp 0x4000964	       557	bfdio.c	FUNCTION_18	IF_1
0x4000951	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       559	bfdio.c	FUNCTION_18	ELSE_1
0x4000955	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       559	bfdio.c	FUNCTION_18	ELSE_1
0x4000959	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       559	bfdio.c	FUNCTION_18	ELSE_1
0x400095d	          0x4801d0	                            add rax, rdx	       559	bfdio.c	FUNCTION_18	ELSE_1
0x4000960	        0x488945e0	             mov qword [rbp - 0x20], rax	       559	bfdio.c	FUNCTION_18	ELSE_1
0x4000964	      0x48837de000	               cmp qword [rbp - 0x20], 0	       561	bfdio.c	FUNCTION_18	ELSE_1	IF_2
0x4000969	            0x7921	                           jns 0x400098c	       561	bfdio.c	FUNCTION_18	ELSE_1	IF_2
0x400096b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       563	bfdio.c	FUNCTION_18	ELSE_1	IF_2
0x400096f	    0x48c740300000	               mov qword [rax + 0x30], 0	       563	bfdio.c	FUNCTION_18	ELSE_1	IF_2
0x4000977	      0xe800000000	                          call 0x400097c	       564	bfdio.c	FUNCTION_18	ELSE_1	IF_2
0x400097c	    0xc70016000000	                   mov dword [rax], 0x16	       564	bfdio.c	FUNCTION_18	ELSE_1	IF_2
0x4000982	      0xb8ffffffff	                     mov eax, 0xffffffff	       565	bfdio.c	FUNCTION_18	ELSE_1	IF_2
0x4000987	      0xe91b010000	                           jmp 0x4000aa7	       565	bfdio.c	FUNCTION_18	ELSE_1	IF_2
0x400098c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       568	bfdio.c	FUNCTION_18	IF_3
0x4000990	          0x488b10	                    mov rdx, qword [rax]	       568	bfdio.c	FUNCTION_18	IF_3
0x4000993	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       568	bfdio.c	FUNCTION_18	IF_3
0x4000997	          0x4839c2	                            cmp rdx, rax	       568	bfdio.c	FUNCTION_18	IF_3
0x400099a	     0xf8302010000	                           jae 0x4000aa2	       568	bfdio.c	FUNCTION_18	IF_3
0x40009a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       570	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009a4	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       570	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009a8	          0x83e018	                           and eax, 0x18	       570	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009ab	            0x3c10	                            cmp al, 0x10	       570	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009ad	            0x7413	                            je 0x40009c2	       570	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       571	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009b3	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       571	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009b7	          0x83e018	                           and eax, 0x18	       571	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009ba	            0x3c18	                            cmp al, 0x18	       571	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009bc	     0xf85b4000000	                           jne 0x4000a76	       571	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       575	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009c6	          0x488b00	                    mov rax, qword [rax]	       575	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009c9	        0x4883c07f	                           add rax, 0x7f	       575	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009cd	        0x4883e080	             and rax, 0xffffffffffffff80	       575	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009d1	        0x488945f0	             mov qword [rbp - 0x10], rax	       575	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009d5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       576	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       576	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009dd	          0x488910	                    mov qword [rax], rdx	       576	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       578	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009e4	          0x488b00	                    mov rax, qword [rax]	       578	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009e7	        0x4883c07f	                           add rax, 0x7f	       578	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009eb	        0x4883e080	             and rax, 0xffffffffffffff80	       578	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009ef	        0x488945f8	                mov qword [rbp - 8], rax	       578	bfdio.c	FUNCTION_18	IF_3	IF_4
0x40009f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       579	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5
0x40009f7	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       579	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5
0x40009fb	     0xf86a0000000	                           jbe 0x4000aa1	       579	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5
0x4000a01	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       581	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_1
0x4000a05	        0x488b4008	                mov rax, qword [rax + 8]	       581	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_1
0x4000a09	        0x488b55f8	                mov rdx, qword [rbp - 8]	       581	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_1
0x4000a0d	          0x4889d6	                            mov rsi, rdx	       581	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_1
0x4000a10	          0x4889c7	                            mov rdi, rax	       581	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_1
0x4000a13	      0xe800000000	                          call 0x4000a18	       581	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_1
0x4000a18	          0x4889c2	                            mov rdx, rax	       581	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_1
0x4000a1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       581	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_1
0x4000a1f	        0x48895008	                mov qword [rax + 8], rdx	       581	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_1
0x4000a23	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       582	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	IF_6
0x4000a27	        0x488b4008	                mov rax, qword [rax + 8]	       582	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	IF_6
0x4000a2b	          0x4885c0	                           test rax, rax	       582	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	IF_6
0x4000a2e	            0x751d	                           jne 0x4000a4d	       582	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	IF_6
0x4000a30	      0xe800000000	                          call 0x4000a35	       584	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	IF_6
0x4000a35	    0xc70016000000	                   mov dword [rax], 0x16	       584	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	IF_6
0x4000a3b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       585	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	IF_6
0x4000a3f	    0x48c700000000	                      mov qword [rax], 0	       585	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	IF_6
0x4000a46	      0xb8ffffffff	                     mov eax, 0xffffffff	       586	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	IF_6
0x4000a4b	            0xeb5a	                           jmp 0x4000aa7	       586	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	IF_6
0x4000a4d	        0x488b45f8	                mov rax, qword [rbp - 8]	       588	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_2
0x4000a51	        0x482b45f0	             sub rax, qword [rbp - 0x10]	       588	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_2
0x4000a55	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       588	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_2
0x4000a59	        0x488b4a08	                mov rcx, qword [rdx + 8]	       588	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_2
0x4000a5d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       588	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_2
0x4000a61	          0x4801d1	                            add rcx, rdx	       588	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_2
0x4000a64	          0x4889c2	                            mov rdx, rax	       588	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_2
0x4000a67	      0xbe00000000	                              mov esi, 0	       588	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_2
0x4000a6c	          0x4889cf	                            mov rdi, rcx	       588	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_2
0x4000a6f	      0xe800000000	                          call 0x4000a74	       588	bfdio.c	FUNCTION_18	IF_3	IF_4	IF_5	CALL_2
0x4000a74	            0xeb2b	                           jmp 0x4000aa1	       572	bfdio.c	FUNCTION_18	IF_3	IF_4
0x4000a76	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       593	bfdio.c	FUNCTION_18	IF_3	ELSE_2
0x4000a7a	          0x488b10	                    mov rdx, qword [rax]	       593	bfdio.c	FUNCTION_18	IF_3	ELSE_2
0x4000a7d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       593	bfdio.c	FUNCTION_18	IF_3	ELSE_2
0x4000a81	        0x48895030	             mov qword [rax + 0x30], rdx	       593	bfdio.c	FUNCTION_18	IF_3	ELSE_2
0x4000a85	      0xe800000000	                          call 0x4000a8a	       594	bfdio.c	FUNCTION_18	IF_3	ELSE_2
0x4000a8a	    0xc70016000000	                   mov dword [rax], 0x16	       594	bfdio.c	FUNCTION_18	IF_3	ELSE_2
0x4000a90	      0xbf12000000	                           mov edi, 0x12	       595	bfdio.c	FUNCTION_18	IF_3	ELSE_2	CALL_3
0x4000a95	      0xe800000000	                          call 0x4000a9a	       595	bfdio.c	FUNCTION_18	IF_3	ELSE_2	CALL_3
0x4000a9a	      0xb8ffffffff	                     mov eax, 0xffffffff	       596	bfdio.c	FUNCTION_18	IF_3	ELSE_2
0x4000a9f	            0xeb06	                           jmp 0x4000aa7	       596	bfdio.c	FUNCTION_18	IF_3	ELSE_2
0x4000aa1	              0x90	                                     nop	       572	bfdio.c	FUNCTION_18	IF_3	IF_4
0x4000aa2	      0xb800000000	                              mov eax, 0	       599	bfdio.c	FUNCTION_18
0x4000aa7	              0xc9	                                   leave	       600	bfdio.c	FUNCTION_18
0x4000aa8	              0xc3	                                     ret	       600	bfdio.c	FUNCTION_18
memory_bread	IF,2:WHILE,0:CALL,2:DO,0:ELSE,1:SWITCH,0:FOR,0:functions,0	49
0x4000733	              0x55	                                push rbp	       495	bfdio.c	FUNCTION_15
0x4000734	          0x4889e5	                            mov rbp, rsp	       495	bfdio.c	FUNCTION_15
0x4000737	        0x4883ec30	                           sub rsp, 0x30	       495	bfdio.c	FUNCTION_15
0x400073b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       495	bfdio.c	FUNCTION_15
0x400073f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       495	bfdio.c	FUNCTION_15
0x4000743	        0x488955d8	             mov qword [rbp - 0x28], rdx	       495	bfdio.c	FUNCTION_15
0x4000747	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       499	bfdio.c	FUNCTION_15
0x400074b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       499	bfdio.c	FUNCTION_15
0x400074f	        0x488945f8	                mov qword [rbp - 8], rax	       499	bfdio.c	FUNCTION_15
0x4000753	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       500	bfdio.c	FUNCTION_15
0x4000757	        0x488945f0	             mov qword [rbp - 0x10], rax	       500	bfdio.c	FUNCTION_15
0x400075b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       501	bfdio.c	FUNCTION_15	IF_1
0x400075f	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       501	bfdio.c	FUNCTION_15	IF_1
0x4000763	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       501	bfdio.c	FUNCTION_15	IF_1
0x4000767	          0x4801c2	                            add rdx, rax	       501	bfdio.c	FUNCTION_15	IF_1
0x400076a	        0x488b45f8	                mov rax, qword [rbp - 8]	       501	bfdio.c	FUNCTION_15	IF_1
0x400076e	          0x488b00	                    mov rax, qword [rax]	       501	bfdio.c	FUNCTION_15	IF_1
0x4000771	          0x4839c2	                            cmp rdx, rax	       501	bfdio.c	FUNCTION_15	IF_1
0x4000774	            0x7641	                           jbe 0x40007b7	       501	bfdio.c	FUNCTION_15	IF_1
0x4000776	        0x488b45f8	                mov rax, qword [rbp - 8]	       503	bfdio.c	FUNCTION_15	IF_1	IF_2
0x400077a	          0x488b10	                    mov rdx, qword [rax]	       503	bfdio.c	FUNCTION_15	IF_1	IF_2
0x400077d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       503	bfdio.c	FUNCTION_15	IF_1	IF_2
0x4000781	        0x488b4030	            mov rax, qword [rax + 0x30] 	       503	bfdio.c	FUNCTION_15	IF_1	IF_2
0x4000785	          0x4839c2	                            cmp rdx, rax	       503	bfdio.c	FUNCTION_15	IF_1	IF_2
0x4000788	            0x730a	                           jae 0x4000794	       503	bfdio.c	FUNCTION_15	IF_1	IF_2
0x400078a	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       504	bfdio.c	FUNCTION_15	IF_1	IF_2
0x4000792	            0xeb19	                           jmp 0x40007ad	       504	bfdio.c	FUNCTION_15	IF_1	IF_2
0x4000794	        0x488b45f8	                mov rax, qword [rbp - 8]	       506	bfdio.c	FUNCTION_15	IF_1	ELSE_1
0x4000798	          0x488b10	                    mov rdx, qword [rax]	       506	bfdio.c	FUNCTION_15	IF_1	ELSE_1
0x400079b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       506	bfdio.c	FUNCTION_15	IF_1	ELSE_1
0x400079f	        0x488b4030	            mov rax, qword [rax + 0x30] 	       506	bfdio.c	FUNCTION_15	IF_1	ELSE_1
0x40007a3	          0x4829c2	                            sub rdx, rax	       506	bfdio.c	FUNCTION_15	IF_1	ELSE_1
0x40007a6	          0x4889d0	                            mov rax, rdx	       506	bfdio.c	FUNCTION_15	IF_1	ELSE_1
0x40007a9	        0x488945f0	             mov qword [rbp - 0x10], rax	       506	bfdio.c	FUNCTION_15	IF_1	ELSE_1
0x40007ad	      0xbf12000000	                           mov edi, 0x12	       507	bfdio.c	FUNCTION_15	IF_1	CALL_1
0x40007b2	      0xe800000000	                          call 0x40007b7	       507	bfdio.c	FUNCTION_15	IF_1	CALL_1
0x40007b7	        0x488b45f8	                mov rax, qword [rbp - 8]	       509	bfdio.c	FUNCTION_15	CALL_2
0x40007bb	        0x488b5008	                mov rdx, qword [rax + 8]	       509	bfdio.c	FUNCTION_15	CALL_2
0x40007bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       509	bfdio.c	FUNCTION_15	CALL_2
0x40007c3	        0x488b4030	            mov rax, qword [rax + 0x30] 	       509	bfdio.c	FUNCTION_15	CALL_2
0x40007c7	        0x488d0c02	                    lea rcx, [rdx + rax]	       509	bfdio.c	FUNCTION_15	CALL_2
0x40007cb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       509	bfdio.c	FUNCTION_15	CALL_2
0x40007cf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       509	bfdio.c	FUNCTION_15	CALL_2
0x40007d3	          0x4889ce	                            mov rsi, rcx	       509	bfdio.c	FUNCTION_15	CALL_2
0x40007d6	          0x4889c7	                            mov rdi, rax	       509	bfdio.c	FUNCTION_15	CALL_2
0x40007d9	      0xe800000000	                          call 0x40007de	       509	bfdio.c	FUNCTION_15	CALL_2
0x40007de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       510	bfdio.c	FUNCTION_15
0x40007e2	              0xc9	                                   leave	       511	bfdio.c	FUNCTION_15
0x40007e3	              0xc3	                                     ret	       511	bfdio.c	FUNCTION_15
memory_bstat	IF,0:WHILE,0:CALL,1:DO,0:ELSE,0:SWITCH,0:FOR,0:functions,0	21
0x4000b0c	              0x55	                                push rbp	       623	bfdio.c	FUNCTION_21
0x4000b0d	          0x4889e5	                            mov rbp, rsp	       623	bfdio.c	FUNCTION_21
0x4000b10	        0x4883ec20	                           sub rsp, 0x20	       623	bfdio.c	FUNCTION_21
0x4000b14	        0x48897de8	             mov qword [rbp - 0x18], rdi	       623	bfdio.c	FUNCTION_21
0x4000b18	        0x488975e0	             mov qword [rbp - 0x20], rsi	       623	bfdio.c	FUNCTION_21
0x4000b1c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       624	bfdio.c	FUNCTION_21
0x4000b20	        0x488b4010	            mov rax, qword [rax + 0x10] 	       624	bfdio.c	FUNCTION_21
0x4000b24	        0x488945f8	                mov qword [rbp - 8], rax	       624	bfdio.c	FUNCTION_21
0x4000b28	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       626	bfdio.c	FUNCTION_21	CALL_1
0x4000b2c	      0xba90000000	                           mov edx, 0x90	       626	bfdio.c	FUNCTION_21	CALL_1
0x4000b31	      0xbe00000000	                              mov esi, 0	       626	bfdio.c	FUNCTION_21	CALL_1
0x4000b36	          0x4889c7	                            mov rdi, rax	       626	bfdio.c	FUNCTION_21	CALL_1
0x4000b39	      0xe800000000	                          call 0x4000b3e	       626	bfdio.c	FUNCTION_21	CALL_1
0x4000b3e	        0x488b45f8	                mov rax, qword [rbp - 8]	       627	bfdio.c	FUNCTION_21
0x4000b42	          0x488b00	                    mov rax, qword [rax]	       627	bfdio.c	FUNCTION_21
0x4000b45	          0x4889c2	                            mov rdx, rax	       627	bfdio.c	FUNCTION_21
0x4000b48	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       627	bfdio.c	FUNCTION_21
0x4000b4c	        0x48895030	             mov qword [rax + 0x30], rdx	       627	bfdio.c	FUNCTION_21
0x4000b50	      0xb800000000	                              mov eax, 0	       629	bfdio.c	FUNCTION_21
0x4000b55	              0xc9	                                   leave	       630	bfdio.c	FUNCTION_21
0x4000b56	              0xc3	                                     ret	       630	bfdio.c	FUNCTION_21
bfd_flush	IF,1:WHILE,0:CALL,1:DO,0:ELSE,0:SWITCH,0:FOR,0:functions,0	18
0x400031c	              0x55	                                push rbp	       253	bfdio.c	ELSE_1	FUNCTION_8
0x400031d	          0x4889e5	                            mov rbp, rsp	       253	bfdio.c	ELSE_1	FUNCTION_8
0x4000320	        0x4883ec10	                           sub rsp, 0x10	       253	bfdio.c	ELSE_1	FUNCTION_8
0x4000324	        0x48897df8	                mov qword [rbp - 8], rdi	       253	bfdio.c	ELSE_1	FUNCTION_8
0x4000328	        0x488b45f8	                mov rax, qword [rbp - 8]	       254	bfdio.c	ELSE_1	FUNCTION_8	IF_1
0x400032c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       254	bfdio.c	ELSE_1	FUNCTION_8	IF_1
0x4000330	          0x4885c0	                           test rax, rax	       254	bfdio.c	ELSE_1	FUNCTION_8	IF_1
0x4000333	            0x7417	                            je 0x400034c	       254	bfdio.c	ELSE_1	FUNCTION_8	IF_1
0x4000335	        0x488b45f8	                mov rax, qword [rbp - 8]	       255	bfdio.c	ELSE_1	FUNCTION_8	CALL_1
0x4000339	        0x488b4018	            mov rax, qword [rax + 0x18] 	       255	bfdio.c	ELSE_1	FUNCTION_8	CALL_1
0x400033d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       255	bfdio.c	ELSE_1	FUNCTION_8	CALL_1
0x4000341	        0x488b55f8	                mov rdx, qword [rbp - 8]	       255	bfdio.c	ELSE_1	FUNCTION_8	CALL_1
0x4000345	          0x4889d7	                            mov rdi, rdx	       255	bfdio.c	ELSE_1	FUNCTION_8	CALL_1
0x4000348	            0xffd0	                                call rax	       255	bfdio.c	ELSE_1	FUNCTION_8	CALL_1
0x400034a	            0xeb05	                           jmp 0x4000351	       255	bfdio.c	ELSE_1	FUNCTION_8	CALL_1
0x400034c	      0xb800000000	                              mov eax, 0	       256	bfdio.c	ELSE_1	FUNCTION_8
0x4000351	              0xc9	                                   leave	       257	bfdio.c	ELSE_1	FUNCTION_8
0x4000352	              0xc3	                                     ret	       257	bfdio.c	ELSE_1	FUNCTION_8
bfd_stat	IF,2:WHILE,0:CALL,2:DO,0:ELSE,1:SWITCH,0:FOR,0:functions,0	27
0x4000353	              0x55	                                push rbp	       263	bfdio.c	FUNCTION_9
0x4000354	          0x4889e5	                            mov rbp, rsp	       263	bfdio.c	FUNCTION_9
0x4000357	        0x4883ec20	                           sub rsp, 0x20	       263	bfdio.c	FUNCTION_9
0x400035b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       263	bfdio.c	FUNCTION_9
0x400035f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       263	bfdio.c	FUNCTION_9
0x4000363	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       266	bfdio.c	FUNCTION_9	IF_1
0x4000367	        0x488b4018	            mov rax, qword [rax + 0x18] 	       266	bfdio.c	FUNCTION_9	IF_1
0x400036b	          0x4885c0	                           test rax, rax	       266	bfdio.c	FUNCTION_9	IF_1
0x400036e	            0x7421	                            je 0x4000391	       266	bfdio.c	FUNCTION_9	IF_1
0x4000370	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       267	bfdio.c	FUNCTION_9	CALL_1
0x4000374	        0x488b4018	            mov rax, qword [rax + 0x18] 	       267	bfdio.c	FUNCTION_9	CALL_1
0x4000378	        0x488b4030	            mov rax, qword [rax + 0x30] 	       267	bfdio.c	FUNCTION_9	CALL_1
0x400037c	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       267	bfdio.c	FUNCTION_9	CALL_1
0x4000380	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       267	bfdio.c	FUNCTION_9	CALL_1
0x4000384	          0x4889ce	                            mov rsi, rcx	       267	bfdio.c	FUNCTION_9	CALL_1
0x4000387	          0x4889d7	                            mov rdi, rdx	       267	bfdio.c	FUNCTION_9	CALL_1
0x400038a	            0xffd0	                                call rax	       267	bfdio.c	FUNCTION_9	CALL_1
0x400038c	          0x8945fc	                mov dword [rbp - 4], eax	       267	bfdio.c	FUNCTION_9	CALL_1
0x400038f	            0xeb07	                           jmp 0x4000398	       267	bfdio.c	FUNCTION_9	CALL_1
0x4000391	    0xc745fcffffff	        mov dword [rbp - 4], 0xffffffff 	       269	bfdio.c	FUNCTION_9	ELSE_1
0x4000398	        0x837dfc00	                  cmp dword [rbp - 4], 0	       271	bfdio.c	FUNCTION_9	IF_2
0x400039c	            0x790a	                           jns 0x40003a8	       271	bfdio.c	FUNCTION_9	IF_2
0x400039e	      0xbf01000000	                              mov edi, 1	       272	bfdio.c	FUNCTION_9	CALL_2
0x40003a3	      0xe800000000	                          call 0x40003a8	       272	bfdio.c	FUNCTION_9	CALL_2
0x40003a8	          0x8b45fc	                mov eax, dword [rbp - 4]	       273	bfdio.c	FUNCTION_9
0x40003ab	              0xc9	                                   leave	       274	bfdio.c	FUNCTION_9
0x40003ac	              0xc3	                                     ret	       274	bfdio.c	FUNCTION_9
