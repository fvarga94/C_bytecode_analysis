strip_main	IF,14:FOR,1:ELSE,2:DO,0:SWITCH,1:functions,0:WHILE,1:CALL,23	290
0x40083f1	              0x55	                                push rbp	      4315	objcopy.c	FUNCTION_57
0x40083f2	          0x4889e5	                            mov rbp, rsp	      4315	objcopy.c	FUNCTION_57
0x40083f5	    0x4881ecf00000	                           sub rsp, 0xf0	      4315	objcopy.c	FUNCTION_57
0x40083fc	    0x89bd1cffffff	             mov dword [rbp - 0xe4], edi	      4315	objcopy.c	FUNCTION_57
0x4008402	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	      4315	objcopy.c	FUNCTION_57
0x4008409	    0x64488b042528	                mov rax, qword fs:[0x28]	      4315	objcopy.c	FUNCTION_57
0x4008412	        0x488945f8	                mov qword [rbp - 8], rax	      4315	objcopy.c	FUNCTION_57
0x4008416	            0x31c0	                            xor eax, eax	      4315	objcopy.c	FUNCTION_57
0x4008418	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      4316	objcopy.c	FUNCTION_57
0x4008423	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      4317	objcopy.c	FUNCTION_57
0x400842e	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	      4318	objcopy.c	FUNCTION_57
0x4008438	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	      4319	objcopy.c	FUNCTION_57
0x4008442	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      4322	objcopy.c	FUNCTION_57
0x400844d	    0xc70500000000	               mov dword [0x04008457], 1	      4324	objcopy.c	FUNCTION_57
0x4008457	      0xe9ed010000	                           jmp 0x4008649	      4326	objcopy.c	FUNCTION_57	WHILE_1	CALL_1
0x400845c	    0x81bd38ffffff	           cmp dword [rbp - 0xc8], 0xcf 	      4329	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008466	     0xf87c9010000	                            ja 0x4008635	      4329	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x400846c	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	      4329	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008472	    0x488b04c50000	                  mov rax, qword [rax*8]	      4329	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x400847a	            0xffe0	                                 jmp rax	      4329	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x400847c	    0x488b05000000	            mov rax, qword [0x04008483] 	      4332	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008483	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      4332	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x400848a	      0xe9ba010000	                           jmp 0x4008649	      4333	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x400848f	    0x488b05000000	            mov rax, qword [0x04008496] 	      4335	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008496	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      4335	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x400849d	      0xe9a7010000	                           jmp 0x4008649	      4336	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40084a2	    0x488b05000000	            mov rax, qword [0x040084a9] 	      4338	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40084a9	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      4338	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40084b0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4338	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40084b7	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      4338	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40084be	      0xe986010000	                           jmp 0x4008649	      4339	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40084c3	    0x488b05000000	            mov rax, qword [0x040084ca] 	      4341	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_2
0x40084ca	          0x4889c7	                            mov rdi, rax	      4341	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_2
0x40084cd	      0xe861f0ffff	   call sym.handle_remove_section_option	      4341	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_2
0x40084d2	      0xe972010000	                           jmp 0x4008649	      4342	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40084d7	    0x488b05000000	            mov rax, qword [0x040084de] 	      4344	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_3
0x40084de	          0x4889c7	                            mov rdi, rax	      4344	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_3
0x40084e1	      0xe8f4efffff	call sym.handle_remove_relocations_option	      4344	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_3
0x40084e6	      0xe95e010000	                           jmp 0x4008649	      4345	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40084eb	    0xc70500000000	               mov dword [0x040084f5], 7	      4347	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40084f5	      0xe94f010000	                           jmp 0x4008649	      4348	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40084fa	    0xc70500000000	               mov dword [0x04008504], 2	      4352	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008504	      0xe940010000	                           jmp 0x4008649	      4353	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008509	    0xc70500000000	               mov dword [0x04008513], 5	      4355	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008513	      0xe931010000	                           jmp 0x4008649	      4356	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008518	    0xc70500000000	               mov dword [0x04008522], 3	      4358	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008522	      0xe922010000	                           jmp 0x4008649	      4359	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008527	    0x488b15000000	            mov rdx, qword [0x0400852e] 	      4361	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_4
0x400852e	    0x488b05000000	            mov rax, qword [0x04008535] 	      4361	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_4
0x4008535	          0x4889d6	                            mov rsi, rdx	      4361	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_4
0x4008538	          0x4889c7	                            mov rdi, rax	      4361	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_4
0x400853b	      0xe80b88ffff	            call sym.add_specific_symbol	      4361	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_4
0x4008540	      0xe904010000	                           jmp 0x4008649	      4362	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008545	    0xc70500000000	               mov dword [0x0400854f], 1	      4364	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x400854f	      0xe9f5000000	                           jmp 0x4008649	      4365	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008554	    0xc70500000000	               mov dword [0x0400855e], 0	      4367	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x400855e	      0xe9e6000000	                           jmp 0x4008649	      4368	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008563	    0x488b15000000	            mov rdx, qword [0x0400856a] 	      4370	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_5
0x400856a	    0x488b05000000	            mov rax, qword [0x04008571] 	      4370	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_5
0x4008571	          0x4889d6	                            mov rsi, rdx	      4370	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_5
0x4008574	          0x4889c7	                            mov rdi, rax	      4370	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_5
0x4008577	      0xe8cf87ffff	            call sym.add_specific_symbol	      4370	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_5
0x400857c	      0xe9c8000000	                           jmp 0x4008649	      4371	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008581	    0x488b05000000	            mov rax, qword [0x04008588] 	      4373	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008588	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      4373	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x400858f	      0xe9b5000000	                           jmp 0x4008649	      4374	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008594	    0xc70500000000	               mov dword [0x0400859e], 1	      4376	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x400859e	      0xe9a6000000	                           jmp 0x4008649	      4377	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40085a3	    0xc70500000000	               mov dword [0x040085ad], 1	      4379	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40085ad	      0xe997000000	                           jmp 0x4008649	      4380	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40085b2	    0xc70500000000	               mov dword [0x040085bc], 0	      4382	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40085bc	      0xe988000000	                           jmp 0x4008649	      4383	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40085c1	    0xc70500000000	               mov dword [0x040085cb], 2	      4385	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40085cb	            0xeb7c	                           jmp 0x4008649	      4386	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40085cd	    0xc70500000000	               mov dword [0x040085d7], 1	      4388	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40085d7	            0xeb70	                           jmp 0x4008649	      4389	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40085d9	    0xc70500000000	               mov dword [0x040085e3], 1	      4391	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40085e3	            0xeb64	                           jmp 0x4008649	      4392	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40085e5	    0xc7852cffffff	               mov dword [rbp - 0xd4], 1	      4394	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40085ef	            0xeb58	                           jmp 0x4008649	      4395	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40085f1	    0xc78530ffffff	               mov dword [rbp - 0xd0], 1	      4397	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40085fb	            0xeb4c	                           jmp 0x4008649	      4398	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x40085fd	    0xc70500000000	               mov dword [0x04008607], 4	      4400	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008607	            0xeb40	                           jmp 0x4008649	      4401	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008609	    0xc70500000000	               mov dword [0x04008613], 1	      4403	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008613	            0xeb34	                           jmp 0x4008649	      4404	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008615	    0xc70500000000	               mov dword [0x0400861f], 1	      4409	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x400861f	            0xeb28	                           jmp 0x4008649	      4410	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1
0x4008621	    0x488b05000000	            mov rax, qword [0x04008628] 	      4413	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_6
0x4008628	      0xbe00000000	                              mov esi, 0	      4413	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_6
0x400862d	          0x4889c7	                            mov rdi, rax	      4413	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_6
0x4008630	      0xe8a17bffff	                    call sym.strip_usage	      4413	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_6
0x4008635	    0x488b05000000	            mov rax, qword [0x0400863c] 	      4415	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_7
0x400863c	      0xbe01000000	                              mov esi, 1	      4415	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_7
0x4008641	          0x4889c7	                            mov rdi, rax	      4415	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_7
0x4008644	      0xe88d7bffff	                    call sym.strip_usage	      4415	objcopy.c	FUNCTION_57	WHILE_1	SWITCH_1	CALL_7
0x4008649	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	      4326	objcopy.c	FUNCTION_57	WHILE_1	CALL_1
0x4008650	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      4326	objcopy.c	FUNCTION_57	WHILE_1	CALL_1
0x4008656	    0x41b800000000	                              mov r8d, 0	      4326	objcopy.c	FUNCTION_57	WHILE_1	CALL_1
0x400865c	      0xb900000000	                              mov ecx, 0	      4326	objcopy.c	FUNCTION_57	WHILE_1	CALL_1
0x4008661	      0xba00000000	                              mov edx, 0	      4326	objcopy.c	FUNCTION_57	WHILE_1	CALL_1
0x4008666	            0x89c7	                            mov edi, eax	      4326	objcopy.c	FUNCTION_57	WHILE_1	CALL_1
0x4008668	      0xe800000000	                          call 0x400866d	      4326	objcopy.c	FUNCTION_57	WHILE_1	CALL_1
0x400866d	    0x898538ffffff	             mov dword [rbp - 0xc8], eax	      4326	objcopy.c	FUNCTION_57	WHILE_1	CALL_1
0x4008673	    0x83bd38ffffff	cmp dword [rbp - 0xc8], 0xffffffffffffffff	      4326	objcopy.c	FUNCTION_57	WHILE_1	CALL_1
0x400867a	     0xf85dcfdffff	                           jne 0x400845c	      4326	objcopy.c	FUNCTION_57	WHILE_1	CALL_1
0x4008680	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 0	      4419	objcopy.c	FUNCTION_57	IF_1
0x4008687	            0x740f	                            je 0x4008698	      4419	objcopy.c	FUNCTION_57	IF_1
0x4008689	      0xe800000000	                          call 0x400868e	      4421	objcopy.c	FUNCTION_57	IF_1	CALL_8
0x400868e	      0xb800000000	                              mov eax, 0	      4422	objcopy.c	FUNCTION_57	IF_1
0x4008693	      0xe94a030000	                           jmp 0x40089e2	      4422	objcopy.c	FUNCTION_57	IF_1
0x4008698	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	      4425	objcopy.c	FUNCTION_57	IF_2
0x400869f	            0x740a	                            je 0x40086ab	      4425	objcopy.c	FUNCTION_57	IF_2
0x40086a1	      0xbf00000000	                              mov edi, 0	      4426	objcopy.c	FUNCTION_57	CALL_9
0x40086a6	      0xe800000000	                          call 0x40086ab	      4426	objcopy.c	FUNCTION_57	CALL_9
0x40086ab	      0xe826fdffff	          call sym.default_deterministic	      4428	objcopy.c	FUNCTION_57	CALL_10
0x40086b0	    0x8b0500000000	            mov eax, dword [0x040086b6] 	      4431	objcopy.c	FUNCTION_57	IF_3
0x40086b6	            0x85c0	                           test eax, eax	      4431	objcopy.c	FUNCTION_57	IF_3
0x40086b8	            0x7528	                           jne 0x40086e2	      4431	objcopy.c	FUNCTION_57	IF_3
0x40086ba	    0x8b0500000000	            mov eax, dword [0x040086c0] 	      4432	objcopy.c	FUNCTION_57	IF_3
0x40086c0	            0x85c0	                           test eax, eax	      4432	objcopy.c	FUNCTION_57	IF_3
0x40086c2	            0x751e	                           jne 0x40086e2	      4432	objcopy.c	FUNCTION_57	IF_3
0x40086c4	    0x488b05000000	            mov rax, qword [0x040086cb] 	      4433	objcopy.c	FUNCTION_57	IF_3	CALL_11
0x40086cb	          0x4889c7	                            mov rdi, rax	      4433	objcopy.c	FUNCTION_57	IF_3	CALL_11
0x40086ce	      0xe800000000	                          call 0x40086d3	      4433	objcopy.c	FUNCTION_57	IF_3	CALL_11
0x40086d3	          0x4885c0	                           test rax, rax	      4433	objcopy.c	FUNCTION_57	IF_3	CALL_11
0x40086d6	            0x750a	                           jne 0x40086e2	      4433	objcopy.c	FUNCTION_57	IF_3	CALL_11
0x40086d8	    0xc70500000000	               mov dword [0x040086e2], 7	      4434	objcopy.c	FUNCTION_57	IF_3
0x40086e2	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      4436	objcopy.c	FUNCTION_57	IF_4
0x40086ea	            0x750e	                           jne 0x40086fa	      4436	objcopy.c	FUNCTION_57	IF_4
0x40086ec	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4437	objcopy.c	FUNCTION_57	IF_4
0x40086f3	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      4437	objcopy.c	FUNCTION_57	IF_4
0x40086fa	    0x8b0500000000	            mov eax, dword [0x04008700] 	      4439	objcopy.c	FUNCTION_57
0x4008700	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      4439	objcopy.c	FUNCTION_57
0x4008706	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      4440	objcopy.c	FUNCTION_57	IF_5
0x400870c	    0x3b851cffffff	             cmp eax, dword [rbp - 0xe4]	      4440	objcopy.c	FUNCTION_57	IF_5
0x4008712	            0x7423	                            je 0x4008737	      4440	objcopy.c	FUNCTION_57	IF_5
0x4008714	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      4441	objcopy.c	FUNCTION_57	IF_5
0x400871c	     0xf84a8020000	                            je 0x40089ca	      4441	objcopy.c	FUNCTION_57	IF_5
0x4008722	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      4441	objcopy.c	FUNCTION_57	IF_5
0x4008728	          0x83c001	                              add eax, 1	      4441	objcopy.c	FUNCTION_57	IF_5
0x400872b	    0x3b851cffffff	             cmp eax, dword [rbp - 0xe4]	      4441	objcopy.c	FUNCTION_57	IF_5
0x4008731	     0xf8d93020000	                           jge 0x40089ca	      4441	objcopy.c	FUNCTION_57	IF_5
0x4008737	    0x488b05000000	            mov rax, qword [0x0400873e] 	      4442	objcopy.c	FUNCTION_57	CALL_12
0x400873e	      0xbe01000000	                              mov esi, 1	      4442	objcopy.c	FUNCTION_57	CALL_12
0x4008743	          0x4889c7	                            mov rdi, rax	      4442	objcopy.c	FUNCTION_57	CALL_12
0x4008746	      0xe88b7affff	                    call sym.strip_usage	      4442	objcopy.c	FUNCTION_57	CALL_12
0x400874b	    0x8b0500000000	            mov eax, dword [0x04008751] 	      4446	objcopy.c	FUNCTION_57	FOR_1
0x4008751	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	      4446	objcopy.c	FUNCTION_57	FOR_1
0x4008757	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      4450	objcopy.c	FUNCTION_57	FOR_1	IF_6	CALL_13
0x400875d	            0x4898	                                    cdqe	      4450	objcopy.c	FUNCTION_57	FOR_1	IF_6	CALL_13
0x400875f	    0x488d14c50000	                        lea rdx, [rax*8]	      4450	objcopy.c	FUNCTION_57	FOR_1	IF_6	CALL_13
0x4008767	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4450	objcopy.c	FUNCTION_57	FOR_1	IF_6	CALL_13
0x400876e	          0x4801d0	                            add rax, rdx	      4450	objcopy.c	FUNCTION_57	FOR_1	IF_6	CALL_13
0x4008771	          0x488b00	                    mov rax, qword [rax]	      4450	objcopy.c	FUNCTION_57	FOR_1	IF_6	CALL_13
0x4008774	          0x4889c7	                            mov rdi, rax	      4450	objcopy.c	FUNCTION_57	FOR_1	IF_6	CALL_13
0x4008777	      0xe800000000	                          call 0x400877c	      4450	objcopy.c	FUNCTION_57	FOR_1	IF_6	CALL_13
0x400877c	          0x4885c0	                           test rax, rax	      4450	objcopy.c	FUNCTION_57	FOR_1	IF_6	CALL_13
0x400877f	            0x7f0f	                            jg 0x4008790	      4450	objcopy.c	FUNCTION_57	FOR_1	IF_6	CALL_13
0x4008781	    0xc70500000000	               mov dword [0x0400878b], 1	      4452	objcopy.c	FUNCTION_57	FOR_1	IF_6
0x400878b	      0xe933020000	                           jmp 0x40089c3	      4453	objcopy.c	FUNCTION_57	FOR_1	IF_6
0x4008790	    0x8b0500000000	            mov eax, dword [0x04008796] 	      4456	objcopy.c	FUNCTION_57	FOR_1	IF_7
0x4008796	            0x85c0	                           test eax, eax	      4456	objcopy.c	FUNCTION_57	FOR_1	IF_7
0x4008798	            0x742f	                            je 0x40087c9	      4456	objcopy.c	FUNCTION_57	FOR_1	IF_7
0x400879a	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      4459	objcopy.c	FUNCTION_57	FOR_1	CALL_14
0x40087a0	            0x4898	                                    cdqe	      4459	objcopy.c	FUNCTION_57	FOR_1	CALL_14
0x40087a2	    0x488d14c50000	                        lea rdx, [rax*8]	      4459	objcopy.c	FUNCTION_57	FOR_1	CALL_14
0x40087aa	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4459	objcopy.c	FUNCTION_57	FOR_1	CALL_14
0x40087b1	          0x4801d0	                            add rax, rdx	      4459	objcopy.c	FUNCTION_57	FOR_1	CALL_14
0x40087b4	          0x488b00	                    mov rax, qword [rax]	      4459	objcopy.c	FUNCTION_57	FOR_1	CALL_14
0x40087b7	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      4459	objcopy.c	FUNCTION_57	FOR_1	CALL_14
0x40087be	          0x4889d6	                            mov rsi, rdx	      4459	objcopy.c	FUNCTION_57	FOR_1	CALL_14
0x40087c1	          0x4889c7	                            mov rdi, rax	      4459	objcopy.c	FUNCTION_57	FOR_1	CALL_14
0x40087c4	      0xe800000000	                          call 0x40087c9	      4459	objcopy.c	FUNCTION_57	FOR_1	CALL_14
0x40087c9	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      4461	objcopy.c	FUNCTION_57	FOR_1	IF_8
0x40087d1	            0x7433	                            je 0x4008806	      4461	objcopy.c	FUNCTION_57	FOR_1	IF_8
0x40087d3	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      4462	objcopy.c	FUNCTION_57	FOR_1	IF_8	CALL_15
0x40087d9	            0x4898	                                    cdqe	      4462	objcopy.c	FUNCTION_57	FOR_1	IF_8	CALL_15
0x40087db	    0x488d14c50000	                        lea rdx, [rax*8]	      4462	objcopy.c	FUNCTION_57	FOR_1	IF_8	CALL_15
0x40087e3	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4462	objcopy.c	FUNCTION_57	FOR_1	IF_8	CALL_15
0x40087ea	          0x4801d0	                            add rax, rdx	      4462	objcopy.c	FUNCTION_57	FOR_1	IF_8	CALL_15
0x40087ed	          0x488b00	                    mov rax, qword [rax]	      4462	objcopy.c	FUNCTION_57	FOR_1	IF_8	CALL_15
0x40087f0	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      4462	objcopy.c	FUNCTION_57	FOR_1	IF_8	CALL_15
0x40087f7	          0x4889d6	                            mov rsi, rdx	      4462	objcopy.c	FUNCTION_57	FOR_1	IF_8	CALL_15
0x40087fa	          0x4889c7	                            mov rdi, rax	      4462	objcopy.c	FUNCTION_57	FOR_1	IF_8	CALL_15
0x40087fd	      0xe800000000	                          call 0x4008802	      4462	objcopy.c	FUNCTION_57	FOR_1	IF_8	CALL_15
0x4008802	            0x85c0	                           test eax, eax	      4462	objcopy.c	FUNCTION_57	FOR_1	IF_8	CALL_15
0x4008804	            0x752e	                           jne 0x4008834	      4462	objcopy.c	FUNCTION_57	FOR_1	IF_8	CALL_15
0x4008806	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      4463	objcopy.c	FUNCTION_57	FOR_1	CALL_16
0x400880c	            0x4898	                                    cdqe	      4463	objcopy.c	FUNCTION_57	FOR_1	CALL_16
0x400880e	    0x488d14c50000	                        lea rdx, [rax*8]	      4463	objcopy.c	FUNCTION_57	FOR_1	CALL_16
0x4008816	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4463	objcopy.c	FUNCTION_57	FOR_1	CALL_16
0x400881d	          0x4801d0	                            add rax, rdx	      4463	objcopy.c	FUNCTION_57	FOR_1	CALL_16
0x4008820	          0x488b00	                    mov rax, qword [rax]	      4463	objcopy.c	FUNCTION_57	FOR_1	CALL_16
0x4008823	          0x4889c7	                            mov rdi, rax	      4463	objcopy.c	FUNCTION_57	FOR_1	CALL_16
0x4008826	      0xe800000000	                          call 0x400882b	      4463	objcopy.c	FUNCTION_57	FOR_1	CALL_16
0x400882b	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4463	objcopy.c	FUNCTION_57	FOR_1	CALL_16
0x4008832	            0xeb0e	                           jmp 0x4008842	      4463	objcopy.c	FUNCTION_57	FOR_1	CALL_16
0x4008834	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4465	objcopy.c	FUNCTION_57	FOR_1	ELSE_1
0x400883b	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4465	objcopy.c	FUNCTION_57	FOR_1	ELSE_1
0x4008842	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      4467	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9
0x400884a	            0x7550	                           jne 0x400889c	      4467	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9
0x400884c	      0xbf00000000	                              mov edi, 0	      4470	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9	CALL_18
0x4008851	      0xe800000000	                          call 0x4008856	      4470	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9	CALL_18
0x4008856	          0x4889c1	                            mov rcx, rax	      4470	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9	CALL_18
0x4008859	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      4469	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9	CALL_17
0x400885f	            0x4898	                                    cdqe	      4469	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9	CALL_17
0x4008861	    0x488d14c50000	                        lea rdx, [rax*8]	      4469	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9	CALL_17
0x4008869	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4469	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9	CALL_17
0x4008870	          0x4801d0	                            add rax, rdx	      4469	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9	CALL_17
0x4008873	          0x488b00	                    mov rax, qword [rax]	      4469	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9	CALL_17
0x4008876	      0xba00000000	                              mov edx, 0	      4469	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9	CALL_17
0x400887b	      0xbe00000000	                              mov esi, 0	      4469	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9	CALL_17
0x4008880	          0x4889c7	                            mov rdi, rax	      4469	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9	CALL_17
0x4008883	      0xb800000000	                              mov eax, 0	      4469	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9	CALL_17
0x4008888	      0xe800000000	                          call 0x400888d	      4469	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9	CALL_17
0x400888d	    0xc70500000000	               mov dword [0x04008897], 1	      4471	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9
0x4008897	      0xe927010000	                           jmp 0x40089c3	      4472	objcopy.c	FUNCTION_57	FOR_1	ELSE_1	IF_9
0x400889c	    0xc70500000000	               mov dword [0x040088a6], 0	      4475	objcopy.c	FUNCTION_57	FOR_1
0x40088a6	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      4476	objcopy.c	FUNCTION_57	FOR_1	CALL_19
0x40088ac	            0x4898	                                    cdqe	      4476	objcopy.c	FUNCTION_57	FOR_1	CALL_19
0x40088ae	    0x488d14c50000	                        lea rdx, [rax*8]	      4476	objcopy.c	FUNCTION_57	FOR_1	CALL_19
0x40088b6	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4476	objcopy.c	FUNCTION_57	FOR_1	CALL_19
0x40088bd	          0x4801d0	                            add rax, rdx	      4476	objcopy.c	FUNCTION_57	FOR_1	CALL_19
0x40088c0	          0x488b00	                    mov rax, qword [rax]	      4476	objcopy.c	FUNCTION_57	FOR_1	CALL_19
0x40088c3	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      4476	objcopy.c	FUNCTION_57	FOR_1	CALL_19
0x40088ca	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      4476	objcopy.c	FUNCTION_57	FOR_1	CALL_19
0x40088d1	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      4476	objcopy.c	FUNCTION_57	FOR_1	CALL_19
0x40088d8	    0x41b800000000	                              mov r8d, 0	      4476	objcopy.c	FUNCTION_57	FOR_1	CALL_19
0x40088de	          0x4889c7	                            mov rdi, rax	      4476	objcopy.c	FUNCTION_57	FOR_1	CALL_19
0x40088e1	      0xe8b3deffff	                      call sym.copy_file	      4476	objcopy.c	FUNCTION_57	FOR_1	CALL_19
0x40088e6	    0x8b0500000000	            mov eax, dword [0x040088ec] 	      4477	objcopy.c	FUNCTION_57	FOR_1	IF_10
0x40088ec	            0x85c0	                           test eax, eax	      4477	objcopy.c	FUNCTION_57	FOR_1	IF_10
0x40088ee	     0xf85a1000000	                           jne 0x4008995	      4477	objcopy.c	FUNCTION_57	FOR_1	IF_10
0x40088f4	    0x8b0500000000	            mov eax, dword [0x040088fa] 	      4479	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_11
0x40088fa	            0x85c0	                           test eax, eax	      4479	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_11
0x40088fc	            0x7419	                            je 0x4008917	      4479	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_11
0x40088fe	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      4480	objcopy.c	FUNCTION_57	FOR_1	IF_10	CALL_20
0x4008905	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4480	objcopy.c	FUNCTION_57	FOR_1	IF_10	CALL_20
0x400890c	          0x4889d6	                            mov rsi, rdx	      4480	objcopy.c	FUNCTION_57	FOR_1	IF_10	CALL_20
0x400890f	          0x4889c7	                            mov rdi, rax	      4480	objcopy.c	FUNCTION_57	FOR_1	IF_10	CALL_20
0x4008912	      0xe800000000	                          call 0x4008917	      4480	objcopy.c	FUNCTION_57	FOR_1	IF_10	CALL_20
0x4008917	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4481	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12
0x400891e	    0x483b8558ffff	             cmp rax, qword [rbp - 0xa8]	      4481	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12
0x4008925	            0x7456	                            je 0x400897d	      4481	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12
0x4008927	    0x8b1500000000	            mov edx, dword [0x0400892d] 	      4482	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12	CALL_21
0x400892d	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      4482	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12	CALL_21
0x4008935	            0x751f	                           jne 0x4008956	      4482	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12	CALL_21
0x4008937	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      4483	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12
0x400893d	            0x4898	                                    cdqe	      4483	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12
0x400893f	    0x488d0cc50000	                        lea rcx, [rax*8]	      4483	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12
0x4008947	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4483	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12
0x400894e	          0x4801c8	                            add rax, rcx	      4483	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12
0x4008951	          0x488b00	                    mov rax, qword [rax]	      4482	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12	CALL_21
0x4008954	            0xeb07	                           jmp 0x400895d	      4482	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12	CALL_21
0x4008956	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4482	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12	CALL_21
0x400895d	    0x488b8d58ffff	             mov rcx, qword [rbp - 0xa8]	      4482	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12	CALL_21
0x4008964	          0x4889c6	                            mov rsi, rax	      4482	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12	CALL_21
0x4008967	          0x4889cf	                            mov rdi, rcx	      4482	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12	CALL_21
0x400896a	      0xe800000000	                          call 0x400896f	      4482	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12	CALL_21
0x400896f	            0x85c0	                           test eax, eax	      4484	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12
0x4008971	           0xf95c0	                                setne al	      4484	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12
0x4008974	           0xfb6c0	                           movzx eax, al	      4484	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12
0x4008977	    0x890500000000	            mov dword [0x0400897d], eax 	      4482	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_12	CALL_21
0x400897d	    0x8b0500000000	            mov eax, dword [0x04008983] 	      4485	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_13
0x4008983	            0x85c0	                           test eax, eax	      4485	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_13
0x4008985	            0x751d	                           jne 0x40089a4	      4485	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_13
0x4008987	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      4486	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_13
0x400898d	    0x890500000000	            mov dword [0x04008993], eax 	      4486	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_13
0x4008993	            0xeb0f	                           jmp 0x40089a4	      4486	objcopy.c	FUNCTION_57	FOR_1	IF_10	IF_13
0x4008995	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4489	objcopy.c	FUNCTION_57	FOR_1	CALL_22
0x400899c	          0x4889c7	                            mov rdi, rax	      4489	objcopy.c	FUNCTION_57	FOR_1	CALL_22
0x400899f	      0xe800000000	                          call 0x40089a4	      4489	objcopy.c	FUNCTION_57	FOR_1	CALL_22
0x40089a4	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4490	objcopy.c	FUNCTION_57	FOR_1	IF_14
0x40089ab	    0x483b8558ffff	             cmp rax, qword [rbp - 0xa8]	      4490	objcopy.c	FUNCTION_57	FOR_1	IF_14
0x40089b2	            0x740f	                            je 0x40089c3	      4490	objcopy.c	FUNCTION_57	FOR_1	IF_14
0x40089b4	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4491	objcopy.c	FUNCTION_57	FOR_1	CALL_23
0x40089bb	          0x4889c7	                            mov rdi, rax	      4491	objcopy.c	FUNCTION_57	FOR_1	CALL_23
0x40089be	      0xe800000000	                          call 0x40089c3	      4491	objcopy.c	FUNCTION_57	FOR_1	CALL_23
0x40089c3	    0x838534ffffff	               add dword [rbp - 0xcc], 1	      4444	objcopy.c	FUNCTION_57	FOR_1
0x40089ca	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      4444	objcopy.c	FUNCTION_57	FOR_1
0x40089d0	    0x3b851cffffff	             cmp eax, dword [rbp - 0xe4]	      4444	objcopy.c	FUNCTION_57	FOR_1
0x40089d6	     0xf8c6ffdffff	                            jl 0x400874b	      4444	objcopy.c	FUNCTION_57	FOR_1
0x40089dc	    0x8b0500000000	            mov eax, dword [0x040089e2] 	      4494	objcopy.c	FUNCTION_57
0x40089e2	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4495	objcopy.c	FUNCTION_57
0x40089e6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4495	objcopy.c	FUNCTION_57
0x40089ef	            0x7405	                            je 0x40089f6	      4495	objcopy.c	FUNCTION_57
0x40089f1	      0xe800000000	                          call 0x40089f6	      4495	objcopy.c	FUNCTION_57
0x40089f6	              0xc9	                                   leave	      4495	objcopy.c	FUNCTION_57
0x40089f7	              0xc3	                                     ret	      4495	objcopy.c	FUNCTION_57
add_specific_symbol	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1	17
0x4000d4b	              0x55	                                push rbp	      1019	objcopy.c	FUNCTION_12
0x4000d4c	          0x4889e5	                            mov rbp, rsp	      1019	objcopy.c	FUNCTION_12
0x4000d4f	        0x4883ec10	                           sub rsp, 0x10	      1019	objcopy.c	FUNCTION_12
0x4000d53	        0x48897df8	                mov qword [rbp - 8], rdi	      1019	objcopy.c	FUNCTION_12
0x4000d57	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1019	objcopy.c	FUNCTION_12
0x4000d5b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000d5f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000d63	      0xba01000000	                              mov edx, 1	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000d68	          0x4889ce	                            mov rsi, rcx	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000d6b	          0x4889c7	                            mov rdi, rax	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000d6e	      0xe800000000	                          call 0x4000d73	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000d73	          0x4889c2	                            mov rdx, rax	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000d76	        0x488b45f8	                mov rax, qword [rbp - 8]	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000d7a	          0x488902	                    mov qword [rdx], rax	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000d7d	              0x90	                                     nop	      1021	objcopy.c	FUNCTION_12
0x4000d7e	              0xc9	                                   leave	      1021	objcopy.c	FUNCTION_12
0x4000d7f	              0xc3	                                     ret	      1021	objcopy.c	FUNCTION_12
is_strip_section_1	IF,11:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,10	126
0x400141d	              0x55	                                push rbp	      1280	objcopy.c	FUNCTION_21
0x400141e	          0x4889e5	                            mov rbp, rsp	      1280	objcopy.c	FUNCTION_21
0x4001421	              0x53	                                push rbx	      1280	objcopy.c	FUNCTION_21
0x4001422	        0x4883ec28	                           sub rsp, 0x28	      1280	objcopy.c	FUNCTION_21
0x4001426	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1280	objcopy.c	FUNCTION_21
0x400142a	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1280	objcopy.c	FUNCTION_21
0x400142e	    0x8b0500000000	            mov eax, dword [0x04001434] 	      1281	objcopy.c	FUNCTION_21	IF_1
0x4001434	            0x85c0	                           test eax, eax	      1281	objcopy.c	FUNCTION_21	IF_1
0x4001436	            0x750e	                           jne 0x4001446	      1281	objcopy.c	FUNCTION_21	IF_1
0x4001438	    0x8b0500000000	            mov eax, dword [0x0400143e] 	      1281	objcopy.c	FUNCTION_21	IF_1
0x400143e	            0x85c0	                           test eax, eax	      1281	objcopy.c	FUNCTION_21	IF_1
0x4001440	     0xf84d4000000	                            je 0x400151a	      1281	objcopy.c	FUNCTION_21	IF_1
0x4001446	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1286	objcopy.c	FUNCTION_21	IF_1	CALL_1
0x400144a	          0x488b00	                    mov rax, qword [rax]	      1286	objcopy.c	FUNCTION_21	IF_1	CALL_1
0x400144d	      0xba01000000	                              mov edx, 1	      1286	objcopy.c	FUNCTION_21	IF_1	CALL_1
0x4001452	      0xbe00000000	                              mov esi, 0	      1286	objcopy.c	FUNCTION_21	IF_1	CALL_1
0x4001457	          0x4889c7	                            mov rdi, rax	      1286	objcopy.c	FUNCTION_21	IF_1	CALL_1
0x400145a	      0xe80af5ffff	              call sym.find_section_list	      1286	objcopy.c	FUNCTION_21	IF_1	CALL_1
0x400145f	        0x488945e0	             mov qword [rbp - 0x20], rax	      1286	objcopy.c	FUNCTION_21	IF_1	CALL_1
0x4001463	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1288	objcopy.c	FUNCTION_21	IF_1	CALL_2
0x4001467	          0x488b00	                    mov rax, qword [rax]	      1288	objcopy.c	FUNCTION_21	IF_1	CALL_2
0x400146a	      0xba02000000	                              mov edx, 2	      1288	objcopy.c	FUNCTION_21	IF_1	CALL_2
0x400146f	      0xbe00000000	                              mov esi, 0	      1288	objcopy.c	FUNCTION_21	IF_1	CALL_2
0x4001474	          0x4889c7	                            mov rdi, rax	      1288	objcopy.c	FUNCTION_21	IF_1	CALL_2
0x4001477	      0xe8edf4ffff	              call sym.find_section_list	      1288	objcopy.c	FUNCTION_21	IF_1	CALL_2
0x400147c	        0x488945e8	             mov qword [rbp - 0x18], rax	      1288	objcopy.c	FUNCTION_21	IF_1	CALL_2
0x4001480	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1291	objcopy.c	FUNCTION_21	IF_1	IF_2
0x4001485	            0x7428	                            je 0x40014af	      1291	objcopy.c	FUNCTION_21	IF_1	IF_2
0x4001487	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1291	objcopy.c	FUNCTION_21	IF_1	IF_2
0x400148c	            0x7421	                            je 0x40014af	      1291	objcopy.c	FUNCTION_21	IF_1	IF_2
0x400148e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4001492	          0x488b18	                    mov rbx, qword [rax]	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4001495	      0xbf00000000	                              mov edi, 0	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x400149a	      0xe800000000	                          call 0x400149f	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x400149f	          0x4889de	                            mov rsi, rbx	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x40014a2	          0x4889c7	                            mov rdi, rax	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x40014a5	      0xb800000000	                              mov eax, 0	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x40014aa	      0xe800000000	                          call 0x40014af	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x40014af	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1294	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x40014b4	            0x7438	                            je 0x40014ee	      1294	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x40014b6	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1294	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x40014ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1294	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x40014be	          0x4889d6	                            mov rsi, rdx	      1294	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x40014c1	          0x4889c7	                            mov rdi, rax	      1294	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x40014c4	      0xe871feffff	              call sym.is_update_section	      1294	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x40014c9	            0x85c0	                           test eax, eax	      1294	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x40014cb	            0x7421	                            je 0x40014ee	      1294	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x40014cd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x40014d1	          0x488b18	                    mov rbx, qword [rax]	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x40014d4	      0xbf00000000	                              mov edi, 0	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x40014d9	      0xe800000000	                          call 0x40014de	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x40014de	          0x4889de	                            mov rsi, rbx	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x40014e1	          0x4889c7	                            mov rdi, rax	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x40014e4	      0xb800000000	                              mov eax, 0	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x40014e9	      0xe800000000	                          call 0x40014ee	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x40014ee	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1298	objcopy.c	FUNCTION_21	IF_1	IF_4
0x40014f3	            0x740a	                            je 0x40014ff	      1298	objcopy.c	FUNCTION_21	IF_1	IF_4
0x40014f5	      0xb801000000	                              mov eax, 1	      1299	objcopy.c	FUNCTION_21	IF_1	IF_4
0x40014fa	      0xe9e3000000	                           jmp 0x40015e2	      1299	objcopy.c	FUNCTION_21	IF_1	IF_4
0x40014ff	    0x8b0500000000	            mov eax, dword [0x04001505] 	      1300	objcopy.c	FUNCTION_21	IF_1	IF_5
0x4001505	            0x85c0	                           test eax, eax	      1300	objcopy.c	FUNCTION_21	IF_1	IF_5
0x4001507	            0x7411	                            je 0x400151a	      1300	objcopy.c	FUNCTION_21	IF_1	IF_5
0x4001509	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1300	objcopy.c	FUNCTION_21	IF_1	IF_5
0x400150e	            0x750a	                           jne 0x400151a	      1300	objcopy.c	FUNCTION_21	IF_1	IF_5
0x4001510	      0xb801000000	                              mov eax, 1	      1301	objcopy.c	FUNCTION_21	IF_1	IF_5
0x4001515	      0xe9c8000000	                           jmp 0x40015e2	      1301	objcopy.c	FUNCTION_21	IF_1	IF_5
0x400151a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1304	objcopy.c	FUNCTION_21	IF_6
0x400151e	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1304	objcopy.c	FUNCTION_21	IF_6
0x4001521	      0x2500200000	                         and eax, 0x2000	      1304	objcopy.c	FUNCTION_21	IF_6
0x4001526	            0x85c0	                           test eax, eax	      1304	objcopy.c	FUNCTION_21	IF_6
0x4001528	     0xf8487000000	                            je 0x40015b5	      1304	objcopy.c	FUNCTION_21	IF_6
0x400152e	    0x8b0500000000	            mov eax, dword [0x04001534] 	      1306	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4001534	          0x83f802	                              cmp eax, 2	      1306	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4001537	            0x742b	                            je 0x4001564	      1306	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4001539	    0x8b0500000000	            mov eax, dword [0x0400153f] 	      1307	objcopy.c	FUNCTION_21	IF_6	IF_7
0x400153f	          0x83f803	                              cmp eax, 3	      1307	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4001542	            0x7420	                            je 0x4001564	      1307	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4001544	    0x8b0500000000	            mov eax, dword [0x0400154a] 	      1308	objcopy.c	FUNCTION_21	IF_6	IF_7
0x400154a	          0x83f807	                              cmp eax, 7	      1308	objcopy.c	FUNCTION_21	IF_6	IF_7
0x400154d	            0x7415	                            je 0x4001564	      1308	objcopy.c	FUNCTION_21	IF_6	IF_7
0x400154f	    0x8b0500000000	            mov eax, dword [0x04001555] 	      1309	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4001555	          0x83f802	                              cmp eax, 2	      1309	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4001558	            0x740a	                            je 0x4001564	      1309	objcopy.c	FUNCTION_21	IF_6	IF_7
0x400155a	    0x8b0500000000	            mov eax, dword [0x04001560] 	      1310	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4001560	            0x85c0	                           test eax, eax	      1310	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4001562	            0x741f	                            je 0x4001583	      1310	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4001564	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x4001568	          0x488b00	                    mov rax, qword [rax]	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x400156b	      0xbe00000000	                              mov esi, 0	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x4001570	          0x4889c7	                            mov rdi, rax	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x4001573	      0xe800000000	                          call 0x4001578	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x4001578	            0x85c0	                           test eax, eax	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x400157a	            0x7407	                            je 0x4001583	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x400157c	      0xb801000000	                              mov eax, 1	      1316	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8
0x4001581	            0xeb5f	                           jmp 0x40015e2	      1316	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8
0x4001583	    0x8b0500000000	            mov eax, dword [0x04001589] 	      1319	objcopy.c	FUNCTION_21	IF_6	IF_9
0x4001589	          0x83f805	                              cmp eax, 5	      1319	objcopy.c	FUNCTION_21	IF_6	IF_9
0x400158c	            0x7515	                           jne 0x40015a3	      1319	objcopy.c	FUNCTION_21	IF_6	IF_9
0x400158e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1320	objcopy.c	FUNCTION_21	IF_6	CALL_9
0x4001592	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1320	objcopy.c	FUNCTION_21	IF_6	CALL_9
0x4001596	          0x4889d6	                            mov rsi, rdx	      1320	objcopy.c	FUNCTION_21	IF_6	CALL_9
0x4001599	          0x4889c7	                            mov rdi, rax	      1320	objcopy.c	FUNCTION_21	IF_6	CALL_9
0x400159c	      0xe843fdffff	                 call sym.is_dwo_section	      1320	objcopy.c	FUNCTION_21	IF_6	CALL_9
0x40015a1	            0xeb3f	                           jmp 0x40015e2	      1320	objcopy.c	FUNCTION_21	IF_6	CALL_9
0x40015a3	    0x8b0500000000	            mov eax, dword [0x040015a9] 	      1322	objcopy.c	FUNCTION_21	IF_6	IF_10
0x40015a9	          0x83f804	                              cmp eax, 4	      1322	objcopy.c	FUNCTION_21	IF_6	IF_10
0x40015ac	            0x7507	                           jne 0x40015b5	      1322	objcopy.c	FUNCTION_21	IF_6	IF_10
0x40015ae	      0xb800000000	                              mov eax, 0	      1323	objcopy.c	FUNCTION_21	IF_6	IF_10
0x40015b3	            0xeb2d	                           jmp 0x40015e2	      1323	objcopy.c	FUNCTION_21	IF_6	IF_10
0x40015b5	    0x8b0500000000	            mov eax, dword [0x040015bb] 	      1326	objcopy.c	FUNCTION_21	IF_11
0x40015bb	          0x83f806	                              cmp eax, 6	      1326	objcopy.c	FUNCTION_21	IF_11
0x40015be	            0x751d	                           jne 0x40015dd	      1326	objcopy.c	FUNCTION_21	IF_11
0x40015c0	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1327	objcopy.c	FUNCTION_21	CALL_10
0x40015c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1327	objcopy.c	FUNCTION_21	CALL_10
0x40015c8	          0x4889d6	                            mov rsi, rdx	      1327	objcopy.c	FUNCTION_21	CALL_10
0x40015cb	          0x4889c7	                            mov rdi, rax	      1327	objcopy.c	FUNCTION_21	CALL_10
0x40015ce	      0xe811fdffff	                 call sym.is_dwo_section	      1327	objcopy.c	FUNCTION_21	CALL_10
0x40015d3	            0x85c0	                           test eax, eax	      1327	objcopy.c	FUNCTION_21	CALL_10
0x40015d5	           0xf94c0	                                 sete al	      1327	objcopy.c	FUNCTION_21	CALL_10
0x40015d8	           0xfb6c0	                           movzx eax, al	      1327	objcopy.c	FUNCTION_21	CALL_10
0x40015db	            0xeb05	                           jmp 0x40015e2	      1327	objcopy.c	FUNCTION_21	CALL_10
0x40015dd	      0xb800000000	                              mov eax, 0	      1329	objcopy.c	FUNCTION_21
0x40015e2	        0x4883c428	                           add rsp, 0x28	      1330	objcopy.c	FUNCTION_21
0x40015e6	              0x5b	                                 pop rbx	      1330	objcopy.c	FUNCTION_21
0x40015e7	              0x5d	                                 pop rbp	      1330	objcopy.c	FUNCTION_21
0x40015e8	              0xc3	                                     ret	      1330	objcopy.c	FUNCTION_21
write_debugging_info	IF,4:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,15	153
0x4008194	              0x55	                                push rbp	      4253	objcopy.c	FUNCTION_55
0x4008195	          0x4889e5	                            mov rbp, rsp	      4253	objcopy.c	FUNCTION_55
0x4008198	              0x53	                                push rbx	      4253	objcopy.c	FUNCTION_55
0x4008199	        0x4883ec68	                           sub rsp, 0x68	      4253	objcopy.c	FUNCTION_55
0x400819d	        0x48897da8	             mov qword [rbp - 0x58], rdi	      4253	objcopy.c	FUNCTION_55
0x40081a1	        0x488975a0	             mov qword [rbp - 0x60], rsi	      4253	objcopy.c	FUNCTION_55
0x40081a5	        0x48895598	             mov qword [rbp - 0x68], rdx	      4253	objcopy.c	FUNCTION_55
0x40081a9	        0x48894d90	             mov qword [rbp - 0x70], rcx	      4253	objcopy.c	FUNCTION_55
0x40081ad	    0x64488b042528	                mov rax, qword fs:[0x28]	      4253	objcopy.c	FUNCTION_55
0x40081b6	        0x488945e8	             mov qword [rbp - 0x18], rax	      4253	objcopy.c	FUNCTION_55
0x40081ba	            0x31c0	                            xor eax, eax	      4253	objcopy.c	FUNCTION_55
0x40081bc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4254	objcopy.c	FUNCTION_55	IF_1
0x40081c0	        0x488b4008	                mov rax, qword [rax + 8]	      4254	objcopy.c	FUNCTION_55	IF_1
0x40081c4	          0x8b4008	                mov eax, dword [rax + 8]	      4254	objcopy.c	FUNCTION_55	IF_1
0x40081c7	          0x83f802	                              cmp eax, 2	      4254	objcopy.c	FUNCTION_55	IF_1
0x40081ca	            0x7414	                            je 0x40081e0	      4254	objcopy.c	FUNCTION_55	IF_1
0x40081cc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4255	objcopy.c	FUNCTION_55	IF_1
0x40081d0	        0x488b4008	                mov rax, qword [rax + 8]	      4255	objcopy.c	FUNCTION_55	IF_1
0x40081d4	          0x8b4008	                mov eax, dword [rax + 8]	      4255	objcopy.c	FUNCTION_55	IF_1
0x40081d7	          0x83f805	                              cmp eax, 5	      4255	objcopy.c	FUNCTION_55	IF_1
0x40081da	     0xf859d010000	                           jne 0x400837d	      4255	objcopy.c	FUNCTION_55	IF_1
0x40081e0	        0x4c8d45d0	                    lea r8, [rbp - 0x30]	      4262	objcopy.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x40081e4	        0x488d7dc0	                   lea rdi, [rbp - 0x40]	      4262	objcopy.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x40081e8	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	      4262	objcopy.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x40081ec	        0x488d55b8	                   lea rdx, [rbp - 0x48]	      4262	objcopy.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x40081f0	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      4262	objcopy.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x40081f4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4262	objcopy.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x40081f8	          0x4d89c1	                              mov r9, r8	      4262	objcopy.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x40081fb	          0x4989f8	                             mov r8, rdi	      4262	objcopy.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x40081fe	          0x4889c7	                            mov rdi, rax	      4262	objcopy.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x4008201	      0xe800000000	                          call 0x4008206	      4262	objcopy.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x4008206	            0x85c0	                           test eax, eax	      4262	objcopy.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x4008208	            0x750a	                           jne 0x4008214	      4262	objcopy.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x400820a	      0xb800000000	                              mov eax, 0	      4265	objcopy.c	FUNCTION_55	IF_1	IF_2
0x400820f	      0xe9a7010000	                           jmp 0x40083bb	      4265	objcopy.c	FUNCTION_55	IF_1	IF_2
0x4008214	    0xc745b4082100	          mov dword [rbp - 0x4c], 0x2108	      4267	objcopy.c	FUNCTION_55	IF_1
0x400821b	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      4268	objcopy.c	FUNCTION_55	IF_1	CALL_2
0x400821e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4268	objcopy.c	FUNCTION_55	IF_1	CALL_2
0x4008222	      0xbe00000000	                              mov esi, 0	      4268	objcopy.c	FUNCTION_55	IF_1	CALL_2
0x4008227	          0x4889c7	                            mov rdi, rax	      4268	objcopy.c	FUNCTION_55	IF_1	CALL_2
0x400822a	      0xe800000000	                          call 0x400822f	      4268	objcopy.c	FUNCTION_55	IF_1	CALL_2
0x400822f	        0x488945d8	             mov qword [rbp - 0x28], rax	      4268	objcopy.c	FUNCTION_55	IF_1	CALL_2
0x4008233	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      4269	objcopy.c	FUNCTION_55	IF_1	CALL_3
0x4008236	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4269	objcopy.c	FUNCTION_55	IF_1	CALL_3
0x400823a	      0xbe00000000	                              mov esi, 0	      4269	objcopy.c	FUNCTION_55	IF_1	CALL_3
0x400823f	          0x4889c7	                            mov rdi, rax	      4269	objcopy.c	FUNCTION_55	IF_1	CALL_3
0x4008242	      0xe800000000	                          call 0x4008247	      4269	objcopy.c	FUNCTION_55	IF_1	CALL_3
0x4008247	        0x488945e0	             mov qword [rbp - 0x20], rax	      4269	objcopy.c	FUNCTION_55	IF_1	CALL_3
0x400824b	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4270	objcopy.c	FUNCTION_55	IF_1	IF_3
0x4008250	            0x7475	                            je 0x40082c7	      4270	objcopy.c	FUNCTION_55	IF_1	IF_3
0x4008252	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4271	objcopy.c	FUNCTION_55	IF_1	IF_3
0x4008257	            0x746e	                            je 0x40082c7	      4271	objcopy.c	FUNCTION_55	IF_1	IF_3
0x4008259	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4272	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_4
0x400825d	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      4272	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_4
0x4008261	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4272	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_4
0x4008265	          0x4889ce	                            mov rsi, rcx	      4272	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_4
0x4008268	          0x4889c7	                            mov rdi, rax	      4272	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_4
0x400826b	      0xe800000000	                          call 0x4008270	      4272	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_4
0x4008270	            0x85c0	                           test eax, eax	      4272	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_4
0x4008272	            0x7453	                            je 0x40082c7	      4272	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_4
0x4008274	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      4273	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_5
0x4008278	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      4273	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_5
0x400827c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4273	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_5
0x4008280	          0x4889ce	                            mov rsi, rcx	      4273	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_5
0x4008283	          0x4889c7	                            mov rdi, rax	      4273	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_5
0x4008286	      0xe800000000	                          call 0x400828b	      4273	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_5
0x400828b	            0x85c0	                           test eax, eax	      4273	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_5
0x400828d	            0x7438	                            je 0x40082c7	      4273	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_5
0x400828f	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      4274	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_6
0x4008293	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4274	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_6
0x4008297	      0xba02000000	                              mov edx, 2	      4274	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_6
0x400829c	          0x4889ce	                            mov rsi, rcx	      4274	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_6
0x400829f	          0x4889c7	                            mov rdi, rax	      4274	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_6
0x40082a2	      0xe8da7dffff	      call sym.bfd_set_section_alignment	      4274	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_6
0x40082a7	            0x85c0	                           test eax, eax	      4274	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_6
0x40082a9	            0x741c	                            je 0x40082c7	      4274	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_6
0x40082ab	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      4275	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_7
0x40082af	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4275	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_7
0x40082b3	      0xba00000000	                              mov edx, 0	      4275	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_7
0x40082b8	          0x4889ce	                            mov rsi, rcx	      4275	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_7
0x40082bb	          0x4889c7	                            mov rdi, rax	      4275	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_7
0x40082be	      0xe8be7dffff	      call sym.bfd_set_section_alignment	      4275	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_7
0x40082c3	            0x85c0	                           test eax, eax	      4275	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_7
0x40082c5	            0x7535	                           jne 0x40082fc	      4275	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_7
0x40082c7	      0xbf00000000	                              mov edi, 0	      4278	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_9
0x40082cc	      0xe800000000	                          call 0x40082d1	      4278	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_9
0x40082d1	          0x4889c2	                            mov rdx, rax	      4278	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_9
0x40082d4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4277	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_8
0x40082d8	          0x4889d1	                            mov rcx, rdx	      4277	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_8
0x40082db	      0xba00000000	                              mov edx, 0	      4277	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_8
0x40082e0	          0x4889c6	                            mov rsi, rax	      4277	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_8
0x40082e3	      0xbf00000000	                              mov edi, 0	      4277	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_8
0x40082e8	      0xb800000000	                              mov eax, 0	      4277	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_8
0x40082ed	      0xe800000000	                          call 0x40082f2	      4277	objcopy.c	FUNCTION_55	IF_1	IF_3	CALL_8
0x40082f2	      0xb800000000	                              mov eax, 0	      4279	objcopy.c	FUNCTION_55	IF_1	IF_3
0x40082f7	      0xe9bf000000	                           jmp 0x40083bb	      4279	objcopy.c	FUNCTION_55	IF_1	IF_3
0x40082fc	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      4286	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_10
0x4008300	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4286	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_10
0x4008304	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      4286	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_10
0x4008308	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4286	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_10
0x400830c	          0x4989c8	                             mov r8, rcx	      4286	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_10
0x400830f	      0xb900000000	                              mov ecx, 0	      4286	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_10
0x4008314	          0x4889c7	                            mov rdi, rax	      4286	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_10
0x4008317	      0xe800000000	                          call 0x400831c	      4286	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_10
0x400831c	            0x85c0	                           test eax, eax	      4286	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_10
0x400831e	            0x7424	                            je 0x4008344	      4286	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_10
0x4008320	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      4287	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_11
0x4008324	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4287	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_11
0x4008328	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      4287	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_11
0x400832c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4287	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_11
0x4008330	          0x4989c8	                             mov r8, rcx	      4287	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_11
0x4008333	      0xb900000000	                              mov ecx, 0	      4287	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_11
0x4008338	          0x4889c7	                            mov rdi, rax	      4287	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_11
0x400833b	      0xe800000000	                          call 0x4008340	      4287	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_11
0x4008340	            0x85c0	                           test eax, eax	      4287	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_11
0x4008342	            0x7532	                           jne 0x4008376	      4287	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_11
0x4008344	      0xbf00000000	                              mov edi, 0	      4291	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_13
0x4008349	      0xe800000000	                          call 0x400834e	      4291	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_13
0x400834e	          0x4889c2	                            mov rdx, rax	      4291	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_13
0x4008351	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4290	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_12
0x4008355	          0x4889d1	                            mov rcx, rdx	      4290	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_12
0x4008358	      0xba00000000	                              mov edx, 0	      4290	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_12
0x400835d	          0x4889c6	                            mov rsi, rax	      4290	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_12
0x4008360	      0xbf00000000	                              mov edi, 0	      4290	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_12
0x4008365	      0xb800000000	                              mov eax, 0	      4290	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_12
0x400836a	      0xe800000000	                          call 0x400836f	      4290	objcopy.c	FUNCTION_55	IF_1	IF_4	CALL_12
0x400836f	      0xb800000000	                              mov eax, 0	      4292	objcopy.c	FUNCTION_55	IF_1	IF_4
0x4008374	            0xeb45	                           jmp 0x40083bb	      4292	objcopy.c	FUNCTION_55	IF_1	IF_4
0x4008376	      0xb801000000	                              mov eax, 1	      4295	objcopy.c	FUNCTION_55	IF_1
0x400837b	            0xeb3e	                           jmp 0x40083bb	      4295	objcopy.c	FUNCTION_55	IF_1
0x400837d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4300	objcopy.c	FUNCTION_55
0x4008381	        0x488b4008	                mov rax, qword [rax + 8]	      4300	objcopy.c	FUNCTION_55
0x4008385	          0x488b18	                    mov rbx, qword [rax]	      4298	objcopy.c	FUNCTION_55	CALL_14
0x4008388	      0xbf00000000	                              mov edi, 0	      4299	objcopy.c	FUNCTION_55	CALL_15
0x400838d	      0xe800000000	                          call 0x4008392	      4299	objcopy.c	FUNCTION_55	CALL_15
0x4008392	          0x4889c2	                            mov rdx, rax	      4299	objcopy.c	FUNCTION_55	CALL_15
0x4008395	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4298	objcopy.c	FUNCTION_55	CALL_14
0x4008399	          0x4989d8	                             mov r8, rbx	      4298	objcopy.c	FUNCTION_55	CALL_14
0x400839c	          0x4889d1	                            mov rcx, rdx	      4298	objcopy.c	FUNCTION_55	CALL_14
0x400839f	      0xba00000000	                              mov edx, 0	      4298	objcopy.c	FUNCTION_55	CALL_14
0x40083a4	          0x4889c6	                            mov rsi, rax	      4298	objcopy.c	FUNCTION_55	CALL_14
0x40083a7	      0xbf00000000	                              mov edi, 0	      4298	objcopy.c	FUNCTION_55	CALL_14
0x40083ac	      0xb800000000	                              mov eax, 0	      4298	objcopy.c	FUNCTION_55	CALL_14
0x40083b1	      0xe800000000	                          call 0x40083b6	      4298	objcopy.c	FUNCTION_55	CALL_14
0x40083b6	      0xb800000000	                              mov eax, 0	      4301	objcopy.c	FUNCTION_55
0x40083bb	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4302	objcopy.c	FUNCTION_55
0x40083bf	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4302	objcopy.c	FUNCTION_55
0x40083c8	            0x7405	                            je 0x40083cf	      4302	objcopy.c	FUNCTION_55
0x40083ca	      0xe800000000	                          call 0x40083cf	      4302	objcopy.c	FUNCTION_55
0x40083cf	        0x4883c468	                           add rsp, 0x68	      4302	objcopy.c	FUNCTION_55
0x40083d3	              0x5b	                                 pop rbx	      4302	objcopy.c	FUNCTION_55
0x40083d4	              0x5d	                                 pop rbp	      4302	objcopy.c	FUNCTION_55
0x40083d5	              0xc3	                                     ret	      4302	objcopy.c	FUNCTION_55
get_sections	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,0	19
0x4007e3f	              0x55	                                push rbp	      4146	objcopy.c	FUNCTION_52
0x4007e40	          0x4889e5	                            mov rbp, rsp	      4146	objcopy.c	FUNCTION_52
0x4007e43	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4146	objcopy.c	FUNCTION_52
0x4007e47	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4146	objcopy.c	FUNCTION_52
0x4007e4b	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4146	objcopy.c	FUNCTION_52
0x4007e4f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4147	objcopy.c	FUNCTION_52
0x4007e53	        0x488945f8	                mov qword [rbp - 8], rax	      4147	objcopy.c	FUNCTION_52
0x4007e57	        0x488b45f8	                mov rax, qword [rbp - 8]	      4149	objcopy.c	FUNCTION_52
0x4007e5b	          0x488b00	                    mov rax, qword [rax]	      4149	objcopy.c	FUNCTION_52
0x4007e5e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4149	objcopy.c	FUNCTION_52
0x4007e62	          0x488910	                    mov qword [rax], rdx	      4149	objcopy.c	FUNCTION_52
0x4007e65	        0x488b45f8	                mov rax, qword [rbp - 8]	      4150	objcopy.c	FUNCTION_52
0x4007e69	          0x488b00	                    mov rax, qword [rax]	      4150	objcopy.c	FUNCTION_52
0x4007e6c	        0x488d5008	                      lea rdx, [rax + 8]	      4150	objcopy.c	FUNCTION_52
0x4007e70	        0x488b45f8	                mov rax, qword [rbp - 8]	      4150	objcopy.c	FUNCTION_52
0x4007e74	          0x488910	                    mov qword [rax], rdx	      4150	objcopy.c	FUNCTION_52
0x4007e77	              0x90	                                     nop	      4151	objcopy.c	FUNCTION_52
0x4007e78	              0x5d	                                 pop rbp	      4151	objcopy.c	FUNCTION_52
0x4007e79	              0xc3	                                     ret	      4151	objcopy.c	FUNCTION_52
add_section_rename	IF,2:FOR,1:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,5	63
0x4006c9c	              0x55	                                push rbp	      3593	objcopy.c	FUNCTION_42
0x4006c9d	          0x4889e5	                            mov rbp, rsp	      3593	objcopy.c	FUNCTION_42
0x4006ca0	        0x4883ec30	                           sub rsp, 0x30	      3593	objcopy.c	FUNCTION_42
0x4006ca4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3593	objcopy.c	FUNCTION_42
0x4006ca8	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3593	objcopy.c	FUNCTION_42
0x4006cac	          0x8955dc	             mov dword [rbp - 0x24], edx	      3593	objcopy.c	FUNCTION_42
0x4006caf	    0x488b05000000	            mov rax, qword [0x04006cb6] 	      3597	objcopy.c	FUNCTION_42	FOR_1
0x4006cb6	        0x488945f8	                mov qword [rbp - 8], rax	      3597	objcopy.c	FUNCTION_42	FOR_1
0x4006cba	            0xeb6e	                           jmp 0x4006d2a	      3597	objcopy.c	FUNCTION_42	FOR_1
0x4006cbc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3598	objcopy.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4006cc0	          0x488b00	                    mov rax, qword [rax]	      3598	objcopy.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4006cc3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3598	objcopy.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4006cc7	          0x4889d6	                            mov rsi, rdx	      3598	objcopy.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4006cca	          0x4889c7	                            mov rdi, rax	      3598	objcopy.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4006ccd	      0xe800000000	                          call 0x4006cd2	      3598	objcopy.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4006cd2	            0x85c0	                           test eax, eax	      3598	objcopy.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4006cd4	            0x7548	                           jne 0x4006d1e	      3598	objcopy.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4006cd6	        0x488b45f8	                mov rax, qword [rbp - 8]	      3601	objcopy.c	FUNCTION_42	FOR_1	IF_1	IF_2	CALL_2
0x4006cda	        0x488b4008	                mov rax, qword [rax + 8]	      3601	objcopy.c	FUNCTION_42	FOR_1	IF_1	IF_2	CALL_2
0x4006cde	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3601	objcopy.c	FUNCTION_42	FOR_1	IF_1	IF_2	CALL_2
0x4006ce2	          0x4889d6	                            mov rsi, rdx	      3601	objcopy.c	FUNCTION_42	FOR_1	IF_1	IF_2	CALL_2
0x4006ce5	          0x4889c7	                            mov rdi, rax	      3601	objcopy.c	FUNCTION_42	FOR_1	IF_1	IF_2	CALL_2
0x4006ce8	      0xe800000000	                          call 0x4006ced	      3601	objcopy.c	FUNCTION_42	FOR_1	IF_1	IF_2	CALL_2
0x4006ced	            0x85c0	                           test eax, eax	      3601	objcopy.c	FUNCTION_42	FOR_1	IF_1	IF_2	CALL_2
0x4006cef	            0x750c	                           jne 0x4006cfd	      3601	objcopy.c	FUNCTION_42	FOR_1	IF_1	IF_2	CALL_2
0x4006cf1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3602	objcopy.c	FUNCTION_42	FOR_1	IF_1	IF_2
0x4006cf5	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3602	objcopy.c	FUNCTION_42	FOR_1	IF_1	IF_2
0x4006cf8	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      3602	objcopy.c	FUNCTION_42	FOR_1	IF_1	IF_2
0x4006cfb	            0x747f	                            je 0x4006d7c	      3602	objcopy.c	FUNCTION_42	FOR_1	IF_1	IF_2
0x4006cfd	      0xbf00000000	                              mov edi, 0	      3605	objcopy.c	FUNCTION_42	FOR_1	IF_1	CALL_4
0x4006d02	      0xe800000000	                          call 0x4006d07	      3605	objcopy.c	FUNCTION_42	FOR_1	IF_1	CALL_4
0x4006d07	          0x4889c2	                            mov rdx, rax	      3605	objcopy.c	FUNCTION_42	FOR_1	IF_1	CALL_4
0x4006d0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3605	objcopy.c	FUNCTION_42	FOR_1	IF_1	CALL_4
0x4006d0e	          0x4889c6	                            mov rsi, rax	      3605	objcopy.c	FUNCTION_42	FOR_1	IF_1	CALL_4
0x4006d11	          0x4889d7	                            mov rdi, rdx	      3605	objcopy.c	FUNCTION_42	FOR_1	IF_1	CALL_4
0x4006d14	      0xb800000000	                              mov eax, 0	      3605	objcopy.c	FUNCTION_42	FOR_1	IF_1	CALL_4
0x4006d19	      0xe800000000	                          call 0x4006d1e	      3605	objcopy.c	FUNCTION_42	FOR_1	IF_1	CALL_4
0x4006d1e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3597	objcopy.c	FUNCTION_42	FOR_1
0x4006d22	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3597	objcopy.c	FUNCTION_42	FOR_1
0x4006d26	        0x488945f8	                mov qword [rbp - 8], rax	      3597	objcopy.c	FUNCTION_42	FOR_1
0x4006d2a	      0x48837df800	                  cmp qword [rbp - 8], 0	      3597	objcopy.c	FUNCTION_42	FOR_1
0x4006d2f	            0x758b	                           jne 0x4006cbc	      3597	objcopy.c	FUNCTION_42	FOR_1
0x4006d31	      0xbf20000000	                           mov edi, 0x20	      3608	objcopy.c	FUNCTION_42	CALL_5
0x4006d36	      0xe800000000	                          call 0x4006d3b	      3608	objcopy.c	FUNCTION_42	CALL_5
0x4006d3b	        0x488945f8	                mov qword [rbp - 8], rax	      3608	objcopy.c	FUNCTION_42	CALL_5
0x4006d3f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3610	objcopy.c	FUNCTION_42
0x4006d43	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3610	objcopy.c	FUNCTION_42
0x4006d47	          0x488910	                    mov qword [rax], rdx	      3610	objcopy.c	FUNCTION_42
0x4006d4a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3611	objcopy.c	FUNCTION_42
0x4006d4e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3611	objcopy.c	FUNCTION_42
0x4006d52	        0x48895008	                mov qword [rax + 8], rdx	      3611	objcopy.c	FUNCTION_42
0x4006d56	        0x488b45f8	                mov rax, qword [rbp - 8]	      3612	objcopy.c	FUNCTION_42
0x4006d5a	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3612	objcopy.c	FUNCTION_42
0x4006d5d	          0x895010	             mov dword [rax + 0x10], edx	      3612	objcopy.c	FUNCTION_42
0x4006d60	    0x488b15000000	            mov rdx, qword [0x04006d67] 	      3613	objcopy.c	FUNCTION_42
0x4006d67	        0x488b45f8	                mov rax, qword [rbp - 8]	      3613	objcopy.c	FUNCTION_42
0x4006d6b	        0x48895018	             mov qword [rax + 0x18], rdx	      3613	objcopy.c	FUNCTION_42
0x4006d6f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3615	objcopy.c	FUNCTION_42
0x4006d73	    0x488905000000	            mov qword [0x04006d7a], rax 	      3615	objcopy.c	FUNCTION_42
0x4006d7a	            0xeb01	                           jmp 0x4006d7d	      3615	objcopy.c	FUNCTION_42
0x4006d7c	              0x90	                                     nop	      3603	objcopy.c	FUNCTION_42	FOR_1	IF_1	IF_2
0x4006d7d	              0xc9	                                   leave	      3616	objcopy.c	FUNCTION_42
0x4006d7e	              0xc3	                                     ret	      3616	objcopy.c	FUNCTION_42
create_symbol_htabs	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,9	23
0x4000cd8	              0x55	                                push rbp	      1001	objcopy.c	FUNCTION_11
0x4000cd9	          0x4889e5	                            mov rbp, rsp	      1001	objcopy.c	FUNCTION_11
0x4000cdc	      0xe8ccffffff	             call sym.create_symbol_htab	      1002	objcopy.c	FUNCTION_11	CALL_1
0x4000ce1	    0x488905000000	            mov qword [0x04000ce8], rax 	      1002	objcopy.c	FUNCTION_11	CALL_1
0x4000ce8	      0xe8c0ffffff	             call sym.create_symbol_htab	      1003	objcopy.c	FUNCTION_11	CALL_2
0x4000ced	    0x488905000000	            mov qword [0x04000cf4], rax 	      1003	objcopy.c	FUNCTION_11	CALL_2
0x4000cf4	      0xe8b4ffffff	             call sym.create_symbol_htab	      1004	objcopy.c	FUNCTION_11	CALL_3
0x4000cf9	    0x488905000000	            mov qword [0x04000d00], rax 	      1004	objcopy.c	FUNCTION_11	CALL_3
0x4000d00	      0xe8a8ffffff	             call sym.create_symbol_htab	      1005	objcopy.c	FUNCTION_11	CALL_4
0x4000d05	    0x488905000000	            mov qword [0x04000d0c], rax 	      1005	objcopy.c	FUNCTION_11	CALL_4
0x4000d0c	      0xe89cffffff	             call sym.create_symbol_htab	      1006	objcopy.c	FUNCTION_11	CALL_5
0x4000d11	    0x488905000000	            mov qword [0x04000d18], rax 	      1006	objcopy.c	FUNCTION_11	CALL_5
0x4000d18	      0xe890ffffff	             call sym.create_symbol_htab	      1007	objcopy.c	FUNCTION_11	CALL_6
0x4000d1d	    0x488905000000	            mov qword [0x04000d24], rax 	      1007	objcopy.c	FUNCTION_11	CALL_6
0x4000d24	      0xe884ffffff	             call sym.create_symbol_htab	      1008	objcopy.c	FUNCTION_11	CALL_7
0x4000d29	    0x488905000000	            mov qword [0x04000d30], rax 	      1008	objcopy.c	FUNCTION_11	CALL_7
0x4000d30	      0xe820ffffff	       call sym.create_symbol2redef_htab	      1009	objcopy.c	FUNCTION_11	CALL_8
0x4000d35	    0x488905000000	            mov qword [0x04000d3c], rax 	      1009	objcopy.c	FUNCTION_11	CALL_8
0x4000d3c	      0xe86cffffff	             call sym.create_symbol_htab	      1012	objcopy.c	FUNCTION_11	CALL_9
0x4000d41	    0x488905000000	            mov qword [0x04000d48], rax 	      1012	objcopy.c	FUNCTION_11	CALL_9
0x4000d48	              0x90	                                     nop	      1013	objcopy.c	FUNCTION_11
0x4000d49	              0x5d	                                 pop rbp	      1013	objcopy.c	FUNCTION_11
0x4000d4a	              0xc3	                                     ret	      1013	objcopy.c	FUNCTION_11
is_specified_symbol	IF,1:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2	35
0x4001163	              0x55	                                push rbp	      1182	objcopy.c	FUNCTION_16
0x4001164	          0x4889e5	                            mov rbp, rsp	      1182	objcopy.c	FUNCTION_16
0x4001167	        0x4883ec30	                           sub rsp, 0x30	      1182	objcopy.c	FUNCTION_16
0x400116b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1182	objcopy.c	FUNCTION_16
0x400116f	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1182	objcopy.c	FUNCTION_16
0x4001173	    0x64488b042528	                mov rax, qword fs:[0x28]	      1182	objcopy.c	FUNCTION_16
0x400117c	        0x488945f8	                mov qword [rbp - 8], rax	      1182	objcopy.c	FUNCTION_16
0x4001180	            0x31c0	                            xor eax, eax	      1182	objcopy.c	FUNCTION_16
0x4001182	    0x8b0500000000	            mov eax, dword [0x04001188] 	      1183	objcopy.c	FUNCTION_16	IF_1
0x4001188	            0x85c0	                           test eax, eax	      1183	objcopy.c	FUNCTION_16	IF_1
0x400118a	            0x7429	                            je 0x40011b5	      1183	objcopy.c	FUNCTION_16	IF_1
0x400118c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1187	objcopy.c	FUNCTION_16	IF_1
0x4001190	        0x488945e0	             mov qword [rbp - 0x20], rax	      1187	objcopy.c	FUNCTION_16	IF_1
0x4001194	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1188	objcopy.c	FUNCTION_16	IF_1
0x400119b	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x400119f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x40011a3	      0xbe00000000	                              mov esi, 0	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x40011a8	          0x4889c7	                            mov rdi, rax	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x40011ab	      0xe800000000	                          call 0x40011b0	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x40011b0	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1192	objcopy.c	FUNCTION_16	IF_1
0x40011b3	            0xeb1c	                           jmp 0x40011d1	      1192	objcopy.c	FUNCTION_16	IF_1
0x40011b5	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40011b9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40011bd	          0x4889d6	                            mov rsi, rdx	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40011c0	          0x4889c7	                            mov rdi, rax	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40011c3	      0xe800000000	                          call 0x40011c8	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40011c8	          0x4885c0	                           test rax, rax	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40011cb	           0xf95c0	                                setne al	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40011ce	           0xfb6c0	                           movzx eax, al	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40011d1	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1196	objcopy.c	FUNCTION_16
0x40011d5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1196	objcopy.c	FUNCTION_16
0x40011de	            0x7405	                            je 0x40011e5	      1196	objcopy.c	FUNCTION_16
0x40011e0	      0xe800000000	                          call 0x40011e5	      1196	objcopy.c	FUNCTION_16
0x40011e5	              0xc9	                                   leave	      1196	objcopy.c	FUNCTION_16
0x40011e6	              0xc3	                                     ret	      1196	objcopy.c	FUNCTION_16
set_pe_subsystem	IF,9:FOR,2:ELSE,2:DO,0:SWITCH,1:functions,0:WHILE,0:CALL,13	169
0x40089f8	              0x55	                                push rbp	      4501	objcopy.c	FUNCTION_58
0x40089f9	          0x4889e5	                            mov rbp, rsp	      4501	objcopy.c	FUNCTION_58
0x40089fc	        0x4883ec50	                           sub rsp, 0x50	      4501	objcopy.c	FUNCTION_58
0x4008a00	        0x48897db8	             mov qword [rbp - 0x48], rdi	      4501	objcopy.c	FUNCTION_58
0x4008a04	    0x64488b042528	                mov rax, qword fs:[0x28]	      4501	objcopy.c	FUNCTION_58
0x4008a0d	        0x488945f8	                mov qword [rbp - 8], rax	      4501	objcopy.c	FUNCTION_58
0x4008a11	            0x31c0	                            xor eax, eax	      4501	objcopy.c	FUNCTION_58
0x4008a13	    0xc745d0ffffff	     mov dword [rbp - 0x30], 0xffffffff 	      4525	objcopy.c	FUNCTION_58
0x4008a1a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4528	objcopy.c	FUNCTION_58	CALL_1
0x4008a1e	      0xbe3a000000	                           mov esi, 0x3a	      4528	objcopy.c	FUNCTION_58	CALL_1
0x4008a23	          0x4889c7	                            mov rdi, rax	      4528	objcopy.c	FUNCTION_58	CALL_1
0x4008a26	      0xe800000000	                          call 0x4008a2b	      4528	objcopy.c	FUNCTION_58	CALL_1
0x4008a2b	        0x488945f0	             mov qword [rbp - 0x10], rax	      4528	objcopy.c	FUNCTION_58	CALL_1
0x4008a2f	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4529	objcopy.c	FUNCTION_58	IF_1
0x4008a34	            0x750d	                           jne 0x4008a43	      4529	objcopy.c	FUNCTION_58	IF_1
0x4008a36	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4530	objcopy.c	FUNCTION_58	IF_1
0x4008a3a	        0x488945e0	             mov qword [rbp - 0x20], rax	      4530	objcopy.c	FUNCTION_58	IF_1
0x4008a3e	      0xe9c6000000	                           jmp 0x4008b09	      4530	objcopy.c	FUNCTION_58	IF_1
0x4008a43	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4533	objcopy.c	FUNCTION_58	ELSE_1
0x4008a47	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4533	objcopy.c	FUNCTION_58	ELSE_1
0x4008a4b	          0x4829c2	                            sub rdx, rax	      4533	objcopy.c	FUNCTION_58	ELSE_1
0x4008a4e	          0x4889d0	                            mov rax, rdx	      4533	objcopy.c	FUNCTION_58	ELSE_1
0x4008a51	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4533	objcopy.c	FUNCTION_58	ELSE_1
0x4008a54	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4534	objcopy.c	FUNCTION_58	ELSE_1	CALL_2
0x4008a58	          0x4889c7	                            mov rdi, rax	      4534	objcopy.c	FUNCTION_58	ELSE_1	CALL_2
0x4008a5b	      0xe800000000	                          call 0x4008a60	      4534	objcopy.c	FUNCTION_58	ELSE_1	CALL_2
0x4008a60	        0x488945d8	             mov qword [rbp - 0x28], rax	      4534	objcopy.c	FUNCTION_58	ELSE_1	CALL_2
0x4008a64	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4535	objcopy.c	FUNCTION_58	ELSE_1
0x4008a68	        0x488945e0	             mov qword [rbp - 0x20], rax	      4535	objcopy.c	FUNCTION_58	ELSE_1
0x4008a6c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4536	objcopy.c	FUNCTION_58	ELSE_1
0x4008a70	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      4536	objcopy.c	FUNCTION_58	ELSE_1
0x4008a73	            0x4898	                                    cdqe	      4536	objcopy.c	FUNCTION_58	ELSE_1
0x4008a75	          0x4801d0	                            add rax, rdx	      4536	objcopy.c	FUNCTION_58	ELSE_1
0x4008a78	          0xc60000	                       mov byte [rax], 0	      4536	objcopy.c	FUNCTION_58	ELSE_1
0x4008a7b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4537	objcopy.c	FUNCTION_58	ELSE_1
0x4008a7f	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      4537	objcopy.c	FUNCTION_58	ELSE_1
0x4008a82	          0x4863d2	                         movsxd rdx, edx	      4537	objcopy.c	FUNCTION_58	ELSE_1
0x4008a85	        0x4883c201	                              add rdx, 1	      4537	objcopy.c	FUNCTION_58	ELSE_1
0x4008a89	          0x4801d0	                            add rax, rdx	      4537	objcopy.c	FUNCTION_58	ELSE_1
0x4008a8c	        0x488945f0	             mov qword [rbp - 0x10], rax	      4537	objcopy.c	FUNCTION_58	ELSE_1
0x4008a90	        0x488d4dd8	                   lea rcx, [rbp - 0x28]	      4538	objcopy.c	FUNCTION_58	ELSE_1	CALL_3
0x4008a94	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4538	objcopy.c	FUNCTION_58	ELSE_1	CALL_3
0x4008a98	      0xba00000000	                              mov edx, 0	      4538	objcopy.c	FUNCTION_58	ELSE_1	CALL_3
0x4008a9d	          0x4889ce	                            mov rsi, rcx	      4538	objcopy.c	FUNCTION_58	ELSE_1	CALL_3
0x4008aa0	          0x4889c7	                            mov rdi, rax	      4538	objcopy.c	FUNCTION_58	ELSE_1	CALL_3
0x4008aa3	      0xe800000000	                          call 0x4008aa8	      4538	objcopy.c	FUNCTION_58	ELSE_1	CALL_3
0x4008aa8	    0x668905000000	               mov word [0x04008aaf], ax	      4538	objcopy.c	FUNCTION_58	ELSE_1	CALL_3
0x4008aaf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4539	objcopy.c	FUNCTION_58	ELSE_1	IF_2
0x4008ab3	           0xfb600	                   movzx eax, byte [rax]	      4539	objcopy.c	FUNCTION_58	ELSE_1	IF_2
0x4008ab6	            0x3c2e	                            cmp al, 0x2e	      4539	objcopy.c	FUNCTION_58	ELSE_1	IF_2
0x4008ab8	            0x7523	                           jne 0x4008add	      4539	objcopy.c	FUNCTION_58	ELSE_1	IF_2
0x4008aba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4540	objcopy.c	FUNCTION_58	ELSE_1	CALL_4
0x4008abe	        0x488d4801	                      lea rcx, [rax + 1]	      4540	objcopy.c	FUNCTION_58	ELSE_1	CALL_4
0x4008ac2	        0x488d45d8	                   lea rax, [rbp - 0x28]	      4540	objcopy.c	FUNCTION_58	ELSE_1	CALL_4
0x4008ac6	      0xba00000000	                              mov edx, 0	      4540	objcopy.c	FUNCTION_58	ELSE_1	CALL_4
0x4008acb	          0x4889c6	                            mov rsi, rax	      4540	objcopy.c	FUNCTION_58	ELSE_1	CALL_4
0x4008ace	          0x4889cf	                            mov rdi, rcx	      4540	objcopy.c	FUNCTION_58	ELSE_1	CALL_4
0x4008ad1	      0xe800000000	                          call 0x4008ad6	      4540	objcopy.c	FUNCTION_58	ELSE_1	CALL_4
0x4008ad6	    0x668905000000	               mov word [0x04008add], ax	      4540	objcopy.c	FUNCTION_58	ELSE_1	CALL_4
0x4008add	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4541	objcopy.c	FUNCTION_58	ELSE_1	IF_3
0x4008ae1	           0xfb600	                   movzx eax, byte [rax]	      4541	objcopy.c	FUNCTION_58	ELSE_1	IF_3
0x4008ae4	            0x84c0	                             test al, al	      4541	objcopy.c	FUNCTION_58	ELSE_1	IF_3
0x4008ae6	            0x7421	                            je 0x4008b09	      4541	objcopy.c	FUNCTION_58	ELSE_1	IF_3
0x4008ae8	      0xbf00000000	                              mov edi, 0	      4542	objcopy.c	FUNCTION_58	ELSE_1	CALL_6
0x4008aed	      0xe800000000	                          call 0x4008af2	      4542	objcopy.c	FUNCTION_58	ELSE_1	CALL_6
0x4008af2	          0x4889c2	                            mov rdx, rax	      4542	objcopy.c	FUNCTION_58	ELSE_1	CALL_6
0x4008af5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4542	objcopy.c	FUNCTION_58	ELSE_1	CALL_6
0x4008af9	          0x4889c6	                            mov rsi, rax	      4542	objcopy.c	FUNCTION_58	ELSE_1	CALL_6
0x4008afc	          0x4889d7	                            mov rdi, rdx	      4542	objcopy.c	FUNCTION_58	ELSE_1	CALL_6
0x4008aff	      0xb800000000	                              mov eax, 0	      4542	objcopy.c	FUNCTION_58	ELSE_1	CALL_6
0x4008b04	      0xe800000000	                          call 0x4008b09	      4542	objcopy.c	FUNCTION_58	ELSE_1	CALL_6
0x4008b09	        0x488d4dd8	                   lea rcx, [rbp - 0x28]	      4546	objcopy.c	FUNCTION_58	CALL_7
0x4008b0d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4546	objcopy.c	FUNCTION_58	CALL_7
0x4008b11	      0xba00000000	                              mov edx, 0	      4546	objcopy.c	FUNCTION_58	CALL_7
0x4008b16	          0x4889ce	                            mov rsi, rcx	      4546	objcopy.c	FUNCTION_58	CALL_7
0x4008b19	          0x4889c7	                            mov rdi, rax	      4546	objcopy.c	FUNCTION_58	CALL_7
0x4008b1c	      0xe800000000	                          call 0x4008b21	      4546	objcopy.c	FUNCTION_58	CALL_7
0x4008b21	        0x668945ce	               mov word [rbp - 0x32], ax	      4546	objcopy.c	FUNCTION_58	CALL_7
0x4008b25	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4547	objcopy.c	FUNCTION_58	IF_4
0x4008b29	           0xfb600	                   movzx eax, byte [rax]	      4547	objcopy.c	FUNCTION_58	IF_4
0x4008b2c	            0x84c0	                             test al, al	      4547	objcopy.c	FUNCTION_58	IF_4
0x4008b2e	            0x7553	                           jne 0x4008b83	      4547	objcopy.c	FUNCTION_58	IF_4
0x4008b30	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      4549	objcopy.c	FUNCTION_58	IF_4	FOR_1	CALL_8
0x4008b38	            0xeb40	                           jmp 0x4008b7a	      4549	objcopy.c	FUNCTION_58	IF_4	FOR_1	CALL_8
0x4008b3a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4550	objcopy.c	FUNCTION_58	IF_4	FOR_1	IF_5
0x4008b3e	        0x48c1e004	                              shl rax, 4	      4550	objcopy.c	FUNCTION_58	IF_4	FOR_1	IF_5
0x4008b42	    0x480500000000	                              add rax, 0	      4550	objcopy.c	FUNCTION_58	IF_4	FOR_1	IF_5
0x4008b48	           0xfb700	                   movzx eax, word [rax]	      4550	objcopy.c	FUNCTION_58	IF_4	FOR_1	IF_5
0x4008b4b	        0x663b45ce	               cmp ax, word [rbp - 0x32]	      4550	objcopy.c	FUNCTION_58	IF_4	FOR_1	IF_5
0x4008b4f	            0x7524	                           jne 0x4008b75	      4550	objcopy.c	FUNCTION_58	IF_4	FOR_1	IF_5
0x4008b51	         0xfb745ce	            movzx eax, word [rbp - 0x32]	      4552	objcopy.c	FUNCTION_58	IF_4	FOR_1	IF_5
0x4008b55	    0x668905000000	               mov word [0x04008b5c], ax	      4552	objcopy.c	FUNCTION_58	IF_4	FOR_1	IF_5
0x4008b5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4553	objcopy.c	FUNCTION_58	IF_4	FOR_1	IF_5
0x4008b60	        0x48c1e004	                              shl rax, 4	      4553	objcopy.c	FUNCTION_58	IF_4	FOR_1	IF_5
0x4008b64	    0x480500000000	                              add rax, 0	      4553	objcopy.c	FUNCTION_58	IF_4	FOR_1	IF_5
0x4008b6a	           0xfb600	                   movzx eax, byte [rax]	      4553	objcopy.c	FUNCTION_58	IF_4	FOR_1	IF_5
0x4008b6d	           0xfbec0	                           movsx eax, al	      4553	objcopy.c	FUNCTION_58	IF_4	FOR_1	IF_5
0x4008b70	          0x8945d0	             mov dword [rbp - 0x30], eax	      4553	objcopy.c	FUNCTION_58	IF_4	FOR_1	IF_5
0x4008b73	            0xeb79	                           jmp 0x4008bee	      4554	objcopy.c	FUNCTION_58	IF_4	FOR_1	IF_5
0x4008b75	      0x488345e801	               add qword [rbp - 0x18], 1	      4549	objcopy.c	FUNCTION_58	IF_4	FOR_1	CALL_8
0x4008b7a	      0x48837de809	               cmp qword [rbp - 0x18], 9	      4549	objcopy.c	FUNCTION_58	IF_4	FOR_1	CALL_8
0x4008b7f	            0x76b9	                           jbe 0x4008b3a	      4549	objcopy.c	FUNCTION_58	IF_4	FOR_1	CALL_8
0x4008b81	            0xeb6b	                           jmp 0x4008bee	      4549	objcopy.c	FUNCTION_58	IF_4	FOR_1	CALL_8
0x4008b83	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      4560	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	CALL_9
0x4008b8b	            0xeb5a	                           jmp 0x4008be7	      4560	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	CALL_9
0x4008b8d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4561	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6	CALL_10
0x4008b91	        0x48c1e004	                              shl rax, 4	      4561	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6	CALL_10
0x4008b95	    0x480500000000	                              add rax, 0	      4561	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6	CALL_10
0x4008b9b	          0x488b10	                    mov rdx, qword [rax]	      4561	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6	CALL_10
0x4008b9e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4561	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6	CALL_10
0x4008ba2	          0x4889d6	                            mov rsi, rdx	      4561	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6	CALL_10
0x4008ba5	          0x4889c7	                            mov rdi, rax	      4561	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6	CALL_10
0x4008ba8	      0xe800000000	                          call 0x4008bad	      4561	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6	CALL_10
0x4008bad	            0x85c0	                           test eax, eax	      4561	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6	CALL_10
0x4008baf	            0x7531	                           jne 0x4008be2	      4561	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6	CALL_10
0x4008bb1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4563	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6
0x4008bb5	        0x48c1e004	                              shl rax, 4	      4563	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6
0x4008bb9	    0x480500000000	                              add rax, 0	      4563	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6
0x4008bbf	           0xfb700	                   movzx eax, word [rax]	      4563	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6
0x4008bc2	    0x668905000000	               mov word [0x04008bc9], ax	      4563	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6
0x4008bc9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4564	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6
0x4008bcd	        0x48c1e004	                              shl rax, 4	      4564	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6
0x4008bd1	    0x480500000000	                              add rax, 0	      4564	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6
0x4008bd7	           0xfb600	                   movzx eax, byte [rax]	      4564	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6
0x4008bda	           0xfbec0	                           movsx eax, al	      4564	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6
0x4008bdd	          0x8945d0	             mov dword [rbp - 0x30], eax	      4564	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6
0x4008be0	            0xeb0c	                           jmp 0x4008bee	      4565	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	IF_6
0x4008be2	      0x488345e801	               add qword [rbp - 0x18], 1	      4560	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	CALL_9
0x4008be7	      0x48837de809	               cmp qword [rbp - 0x18], 9	      4560	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	CALL_9
0x4008bec	            0x769f	                           jbe 0x4008b8d	      4560	objcopy.c	FUNCTION_58	ELSE_2	FOR_2	CALL_9
0x4008bee	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      4569	objcopy.c	FUNCTION_58	SWITCH_1
0x4008bf1	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4569	objcopy.c	FUNCTION_58	SWITCH_1
0x4008bf4	            0x7406	                            je 0x4008bfc	      4569	objcopy.c	FUNCTION_58	SWITCH_1
0x4008bf6	            0x85c0	                           test eax, eax	      4569	objcopy.c	FUNCTION_58	SWITCH_1
0x4008bf8	            0x7455	                            je 0x4008c4f	      4569	objcopy.c	FUNCTION_58	SWITCH_1
0x4008bfa	            0xeb21	                           jmp 0x4008c1d	      4569	objcopy.c	FUNCTION_58	SWITCH_1
0x4008bfc	      0xbf00000000	                              mov edi, 0	      4572	objcopy.c	FUNCTION_58	SWITCH_1	CALL_12
0x4008c01	      0xe800000000	                          call 0x4008c06	      4572	objcopy.c	FUNCTION_58	SWITCH_1	CALL_12
0x4008c06	          0x4889c2	                            mov rdx, rax	      4572	objcopy.c	FUNCTION_58	SWITCH_1	CALL_12
0x4008c09	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4572	objcopy.c	FUNCTION_58	SWITCH_1	CALL_12
0x4008c0d	          0x4889c6	                            mov rsi, rax	      4572	objcopy.c	FUNCTION_58	SWITCH_1	CALL_12
0x4008c10	          0x4889d7	                            mov rdi, rdx	      4572	objcopy.c	FUNCTION_58	SWITCH_1	CALL_12
0x4008c13	      0xb800000000	                              mov eax, 0	      4572	objcopy.c	FUNCTION_58	SWITCH_1	CALL_12
0x4008c18	      0xe800000000	                          call 0x4008c1d	      4572	objcopy.c	FUNCTION_58	SWITCH_1	CALL_12
0x4008c1d	    0x488b05000000	            mov rax, qword [0x04008c24] 	      4577	objcopy.c	FUNCTION_58	SWITCH_1	IF_7
0x4008c24	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      4577	objcopy.c	FUNCTION_58	SWITCH_1	IF_7
0x4008c28	            0x750b	                           jne 0x4008c35	      4577	objcopy.c	FUNCTION_58	SWITCH_1	IF_7
0x4008c2a	    0x48c705000000	          mov qword [0x04008c35], 0x200 	      4578	objcopy.c	FUNCTION_58	SWITCH_1	IF_7
0x4008c35	    0x488b05000000	            mov rax, qword [0x04008c3c] 	      4579	objcopy.c	FUNCTION_58	SWITCH_1	IF_8
0x4008c3c	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      4579	objcopy.c	FUNCTION_58	SWITCH_1	IF_8
0x4008c40	            0x7510	                           jne 0x4008c52	      4579	objcopy.c	FUNCTION_58	SWITCH_1	IF_8
0x4008c42	    0x48c705000000	         mov qword [0x04008c4d], 0x1000 	      4580	objcopy.c	FUNCTION_58	SWITCH_1	IF_8
0x4008c4d	            0xeb03	                           jmp 0x4008c52	      4581	objcopy.c	FUNCTION_58	SWITCH_1
0x4008c4f	              0x90	                                     nop	      4575	objcopy.c	FUNCTION_58	SWITCH_1
0x4008c50	            0xeb01	                           jmp 0x4008c53	      4575	objcopy.c	FUNCTION_58	SWITCH_1
0x4008c52	              0x90	                                     nop	      4581	objcopy.c	FUNCTION_58	SWITCH_1
0x4008c53	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4583	objcopy.c	FUNCTION_58	IF_9
0x4008c57	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      4583	objcopy.c	FUNCTION_58	IF_9
0x4008c5b	            0x740c	                            je 0x4008c69	      4583	objcopy.c	FUNCTION_58	IF_9
0x4008c5d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4584	objcopy.c	FUNCTION_58	CALL_13
0x4008c61	          0x4889c7	                            mov rdi, rax	      4584	objcopy.c	FUNCTION_58	CALL_13
0x4008c64	      0xe800000000	                          call 0x4008c69	      4584	objcopy.c	FUNCTION_58	CALL_13
0x4008c69	              0x90	                                     nop	      4585	objcopy.c	FUNCTION_58
0x4008c6a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4585	objcopy.c	FUNCTION_58
0x4008c6e	    0x644833042528	                xor rax, qword fs:[0x28]	      4585	objcopy.c	FUNCTION_58
0x4008c77	            0x7405	                            je 0x4008c7e	      4585	objcopy.c	FUNCTION_58
0x4008c79	      0xe800000000	                          call 0x4008c7e	      4585	objcopy.c	FUNCTION_58
0x4008c7e	              0xc9	                                   leave	      4585	objcopy.c	FUNCTION_58
0x4008c7f	              0xc3	                                     ret	      4585	objcopy.c	FUNCTION_58
copy_unknown_object	IF,7:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,1:CALL,19	164
0x40027d5	              0x55	                                push rbp	      1827	objcopy.c	FUNCTION_31
0x40027d6	          0x4889e5	                            mov rbp, rsp	      1827	objcopy.c	FUNCTION_31
0x40027d9	            0x4154	                                push r12	      1827	objcopy.c	FUNCTION_31
0x40027db	              0x53	                                push rbx	      1827	objcopy.c	FUNCTION_31
0x40027dc	    0x4881ecd00000	                           sub rsp, 0xd0	      1827	objcopy.c	FUNCTION_31
0x40027e3	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	      1827	objcopy.c	FUNCTION_31
0x40027ea	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	      1827	objcopy.c	FUNCTION_31
0x40027f1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1827	objcopy.c	FUNCTION_31
0x40027fa	        0x488945e8	             mov qword [rbp - 0x18], rax	      1827	objcopy.c	FUNCTION_31
0x40027fe	            0x31c0	                            xor eax, eax	      1827	objcopy.c	FUNCTION_31
0x4002800	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1834	objcopy.c	FUNCTION_31	IF_1
0x4002807	        0x488b4008	                mov rax, qword [rax + 8]	      1834	objcopy.c	FUNCTION_31	IF_1
0x400280b	    0x488b80e00100	           mov rax, qword [rax + 0x1e0] 	      1834	objcopy.c	FUNCTION_31	IF_1
0x4002812	    0x488d8d50ffff	                   lea rcx, [rbp - 0xb0]	      1834	objcopy.c	FUNCTION_31	IF_1
0x4002819	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      1834	objcopy.c	FUNCTION_31	IF_1
0x4002820	          0x4889ce	                            mov rsi, rcx	      1834	objcopy.c	FUNCTION_31	IF_1
0x4002823	          0x4889d7	                            mov rdi, rdx	      1834	objcopy.c	FUNCTION_31	IF_1
0x4002826	            0xffd0	                                call rax	      1834	objcopy.c	FUNCTION_31	IF_1
0x4002828	            0x85c0	                           test eax, eax	      1834	objcopy.c	FUNCTION_31	IF_1
0x400282a	            0x742d	                            je 0x4002859	      1834	objcopy.c	FUNCTION_31	IF_1
0x400282c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1836	objcopy.c	FUNCTION_31	IF_1	CALL_1
0x4002833	      0xb900000000	                              mov ecx, 0	      1836	objcopy.c	FUNCTION_31	IF_1	CALL_1
0x4002838	      0xba00000000	                              mov edx, 0	      1836	objcopy.c	FUNCTION_31	IF_1	CALL_1
0x400283d	          0x4889c6	                            mov rsi, rax	      1836	objcopy.c	FUNCTION_31	IF_1	CALL_1
0x4002840	      0xbf00000000	                              mov edi, 0	      1836	objcopy.c	FUNCTION_31	IF_1	CALL_1
0x4002845	      0xb800000000	                              mov eax, 0	      1836	objcopy.c	FUNCTION_31	IF_1	CALL_1
0x400284a	      0xe800000000	                          call 0x400284f	      1836	objcopy.c	FUNCTION_31	IF_1	CALL_1
0x400284f	      0xb800000000	                              mov eax, 0	      1837	objcopy.c	FUNCTION_31	IF_1
0x4002854	      0xe94c020000	                           jmp 0x4002aa5	      1837	objcopy.c	FUNCTION_31	IF_1
0x4002859	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1840	objcopy.c	FUNCTION_31
0x400285d	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      1840	objcopy.c	FUNCTION_31
0x4002864	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	      1841	objcopy.c	FUNCTION_31	IF_2
0x400286c	            0x7936	                           jns 0x40028a4	      1841	objcopy.c	FUNCTION_31	IF_2
0x400286e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1843	objcopy.c	FUNCTION_31	IF_2	CALL_3
0x4002875	          0x4889c7	                            mov rdi, rax	      1843	objcopy.c	FUNCTION_31	IF_2	CALL_3
0x4002878	      0xe800000000	                          call 0x400287d	      1843	objcopy.c	FUNCTION_31	IF_2	CALL_3
0x400287d	          0x4889c3	                            mov rbx, rax	      1843	objcopy.c	FUNCTION_31	IF_2	CALL_3
0x4002880	      0xbf00000000	                              mov edi, 0	      1843	objcopy.c	FUNCTION_31	IF_2	CALL_3
0x4002885	      0xe800000000	                          call 0x400288a	      1843	objcopy.c	FUNCTION_31	IF_2	CALL_3
0x400288a	          0x4889de	                            mov rsi, rbx	      1843	objcopy.c	FUNCTION_31	IF_2	CALL_3
0x400288d	          0x4889c7	                            mov rdi, rax	      1843	objcopy.c	FUNCTION_31	IF_2	CALL_3
0x4002890	      0xb800000000	                              mov eax, 0	      1843	objcopy.c	FUNCTION_31	IF_2	CALL_3
0x4002895	      0xe800000000	                          call 0x400289a	      1843	objcopy.c	FUNCTION_31	IF_2	CALL_3
0x400289a	      0xb800000000	                              mov eax, 0	      1845	objcopy.c	FUNCTION_31	IF_2
0x400289f	      0xe901020000	                           jmp 0x4002aa5	      1845	objcopy.c	FUNCTION_31	IF_2
0x40028a4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1848	objcopy.c	FUNCTION_31	IF_3	CALL_5
0x40028ab	      0xba00000000	                              mov edx, 0	      1848	objcopy.c	FUNCTION_31	IF_3	CALL_5
0x40028b0	      0xbe00000000	                              mov esi, 0	      1848	objcopy.c	FUNCTION_31	IF_3	CALL_5
0x40028b5	          0x4889c7	                            mov rdi, rax	      1848	objcopy.c	FUNCTION_31	IF_3	CALL_5
0x40028b8	      0xe800000000	                          call 0x40028bd	      1848	objcopy.c	FUNCTION_31	IF_3	CALL_5
0x40028bd	            0x85c0	                           test eax, eax	      1848	objcopy.c	FUNCTION_31	IF_3	CALL_5
0x40028bf	            0x7421	                            je 0x40028e2	      1848	objcopy.c	FUNCTION_31	IF_3	CALL_5
0x40028c1	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1850	objcopy.c	FUNCTION_31	IF_3	CALL_7
0x40028c8	          0x4889c7	                            mov rdi, rax	      1850	objcopy.c	FUNCTION_31	IF_3	CALL_7
0x40028cb	      0xe800000000	                          call 0x40028d0	      1850	objcopy.c	FUNCTION_31	IF_3	CALL_7
0x40028d0	          0x4889c7	                            mov rdi, rax	      1850	objcopy.c	FUNCTION_31	IF_3	CALL_7
0x40028d3	      0xe800000000	                          call 0x40028d8	      1850	objcopy.c	FUNCTION_31	IF_3	CALL_7
0x40028d8	      0xb800000000	                              mov eax, 0	      1851	objcopy.c	FUNCTION_31	IF_3
0x40028dd	      0xe9c3010000	                           jmp 0x4002aa5	      1851	objcopy.c	FUNCTION_31	IF_3
0x40028e2	    0x8b0500000000	            mov eax, dword [0x040028e8] 	      1854	objcopy.c	FUNCTION_31	IF_4
0x40028e8	            0x85c0	                           test eax, eax	      1854	objcopy.c	FUNCTION_31	IF_4
0x40028ea	            0x7439	                            je 0x4002925	      1854	objcopy.c	FUNCTION_31	IF_4
0x40028ec	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1856	objcopy.c	FUNCTION_31	CALL_10
0x40028f3	          0x488b18	                    mov rbx, qword [rax]	      1856	objcopy.c	FUNCTION_31	CALL_10
0x40028f6	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1855	objcopy.c	FUNCTION_31	IF_4	CALL_9
0x40028fd	          0x4889c7	                            mov rdi, rax	      1855	objcopy.c	FUNCTION_31	IF_4	CALL_9
0x4002900	      0xe800000000	                          call 0x4002905	      1855	objcopy.c	FUNCTION_31	IF_4	CALL_9
0x4002905	          0x4989c4	                            mov r12, rax	      1855	objcopy.c	FUNCTION_31	IF_4	CALL_9
0x4002908	      0xbf00000000	                              mov edi, 0	      1855	objcopy.c	FUNCTION_31	IF_4	CALL_9
0x400290d	      0xe800000000	                          call 0x4002912	      1855	objcopy.c	FUNCTION_31	IF_4	CALL_9
0x4002912	          0x4889da	                            mov rdx, rbx	      1855	objcopy.c	FUNCTION_31	IF_4	CALL_9
0x4002915	          0x4c89e6	                            mov rsi, r12	      1855	objcopy.c	FUNCTION_31	IF_4	CALL_9
0x4002918	          0x4889c7	                            mov rdi, rax	      1855	objcopy.c	FUNCTION_31	IF_4	CALL_9
0x400291b	      0xb800000000	                              mov eax, 0	      1855	objcopy.c	FUNCTION_31	IF_4	CALL_9
0x4002920	      0xe800000000	                          call 0x4002925	      1855	objcopy.c	FUNCTION_31	IF_4	CALL_9
0x4002925	      0xbf00200000	                         mov edi, 0x2000	      1858	objcopy.c	FUNCTION_31	CALL_11
0x400292a	      0xe800000000	                          call 0x400292f	      1858	objcopy.c	FUNCTION_31	CALL_11
0x400292f	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1858	objcopy.c	FUNCTION_31	CALL_11
0x4002936	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      1859	objcopy.c	FUNCTION_31
0x4002941	      0xe918010000	                           jmp 0x4002a5e	      1860	objcopy.c	FUNCTION_31	WHILE_1
0x4002946	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1862	objcopy.c	FUNCTION_31	WHILE_1
0x400294d	            0x89c2	                            mov edx, eax	      1862	objcopy.c	FUNCTION_31	WHILE_1
0x400294f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1862	objcopy.c	FUNCTION_31	WHILE_1
0x4002956	            0x29c2	                            sub edx, eax	      1862	objcopy.c	FUNCTION_31	WHILE_1
0x4002958	            0x89d0	                            mov eax, edx	      1862	objcopy.c	FUNCTION_31	WHILE_1
0x400295a	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      1862	objcopy.c	FUNCTION_31	WHILE_1
0x4002960	    0x81bd34ffffff	         cmp dword [rbp - 0xcc], 0x2000 	      1863	objcopy.c	FUNCTION_31	WHILE_1	IF_5
0x400296a	            0x7e0a	                           jle 0x4002976	      1863	objcopy.c	FUNCTION_31	WHILE_1	IF_5
0x400296c	    0xc78534ffffff	          mov dword [rbp - 0xcc], 0x2000	      1864	objcopy.c	FUNCTION_31	WHILE_1	IF_5
0x4002976	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      1866	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_12
0x400297c	          0x4863c8	                         movsxd rcx, eax	      1866	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_12
0x400297f	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      1866	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_12
0x4002986	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1866	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_12
0x400298d	          0x4889ce	                            mov rsi, rcx	      1866	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_12
0x4002990	          0x4889c7	                            mov rdi, rax	      1866	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_12
0x4002993	      0xe800000000	                          call 0x4002998	      1866	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_12
0x4002998	          0x4889c2	                            mov rdx, rax	      1866	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_12
0x400299b	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      1867	objcopy.c	FUNCTION_31	WHILE_1	IF_6
0x40029a1	            0x4898	                                    cdqe	      1867	objcopy.c	FUNCTION_31	WHILE_1	IF_6
0x40029a3	          0x4839c2	                            cmp rdx, rax	      1866	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_12
0x40029a6	            0x743c	                            je 0x40029e4	      1866	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_12
0x40029a8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1869	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_13
0x40029af	      0xb900000000	                              mov ecx, 0	      1869	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_13
0x40029b4	      0xba00000000	                              mov edx, 0	      1869	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_13
0x40029b9	          0x4889c6	                            mov rsi, rax	      1869	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_13
0x40029bc	      0xbf00000000	                              mov edi, 0	      1869	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_13
0x40029c1	      0xb800000000	                              mov eax, 0	      1869	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_13
0x40029c6	      0xe800000000	                          call 0x40029cb	      1869	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_13
0x40029cb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1870	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_14
0x40029d2	          0x4889c7	                            mov rdi, rax	      1870	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_14
0x40029d5	      0xe800000000	                          call 0x40029da	      1870	objcopy.c	FUNCTION_31	WHILE_1	IF_6	CALL_14
0x40029da	      0xb800000000	                              mov eax, 0	      1871	objcopy.c	FUNCTION_31	WHILE_1	IF_6
0x40029df	      0xe9c1000000	                           jmp 0x4002aa5	      1871	objcopy.c	FUNCTION_31	WHILE_1	IF_6
0x40029e4	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      1874	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_15
0x40029ea	          0x4863c8	                         movsxd rcx, eax	      1874	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_15
0x40029ed	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      1874	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_15
0x40029f4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1874	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_15
0x40029fb	          0x4889ce	                            mov rsi, rcx	      1874	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_15
0x40029fe	          0x4889c7	                            mov rdi, rax	      1874	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_15
0x4002a01	      0xe800000000	                          call 0x4002a06	      1874	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_15
0x4002a06	          0x4889c2	                            mov rdx, rax	      1874	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_15
0x4002a09	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      1875	objcopy.c	FUNCTION_31	WHILE_1	IF_7
0x4002a0f	            0x4898	                                    cdqe	      1875	objcopy.c	FUNCTION_31	WHILE_1	IF_7
0x4002a11	          0x4839c2	                            cmp rdx, rax	      1874	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_15
0x4002a14	            0x7439	                            je 0x4002a4f	      1874	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_15
0x4002a16	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1877	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_16
0x4002a1d	      0xb900000000	                              mov ecx, 0	      1877	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_16
0x4002a22	      0xba00000000	                              mov edx, 0	      1877	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_16
0x4002a27	          0x4889c6	                            mov rsi, rax	      1877	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_16
0x4002a2a	      0xbf00000000	                              mov edi, 0	      1877	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_16
0x4002a2f	      0xb800000000	                              mov eax, 0	      1877	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_16
0x4002a34	      0xe800000000	                          call 0x4002a39	      1877	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_16
0x4002a39	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1878	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_17
0x4002a40	          0x4889c7	                            mov rdi, rax	      1878	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_17
0x4002a43	      0xe800000000	                          call 0x4002a48	      1878	objcopy.c	FUNCTION_31	WHILE_1	IF_7	CALL_17
0x4002a48	      0xb800000000	                              mov eax, 0	      1879	objcopy.c	FUNCTION_31	WHILE_1	IF_7
0x4002a4d	            0xeb56	                           jmp 0x4002aa5	      1879	objcopy.c	FUNCTION_31	WHILE_1	IF_7
0x4002a4f	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      1882	objcopy.c	FUNCTION_31	WHILE_1
0x4002a55	            0x4898	                                    cdqe	      1882	objcopy.c	FUNCTION_31	WHILE_1
0x4002a57	    0x48018538ffff	            add qword [rbp - 0xc8], rax 	      1882	objcopy.c	FUNCTION_31	WHILE_1
0x4002a5e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1860	objcopy.c	FUNCTION_31	WHILE_1
0x4002a65	    0x483b8540ffff	             cmp rax, qword [rbp - 0xc0]	      1860	objcopy.c	FUNCTION_31	WHILE_1
0x4002a6c	     0xf8cd4feffff	                            jl 0x4002946	      1860	objcopy.c	FUNCTION_31	WHILE_1
0x4002a72	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      1887	objcopy.c	FUNCTION_31	CALL_18
0x4002a78	          0x80cc01	                                or ah, 1	      1887	objcopy.c	FUNCTION_31	CALL_18
0x4002a7b	            0x89c2	                            mov edx, eax	      1887	objcopy.c	FUNCTION_31	CALL_18
0x4002a7d	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1887	objcopy.c	FUNCTION_31	CALL_18
0x4002a84	          0x488b00	                    mov rax, qword [rax]	      1887	objcopy.c	FUNCTION_31	CALL_18
0x4002a87	            0x89d6	                            mov esi, edx	      1887	objcopy.c	FUNCTION_31	CALL_18
0x4002a89	          0x4889c7	                            mov rdi, rax	      1887	objcopy.c	FUNCTION_31	CALL_18
0x4002a8c	      0xe800000000	                          call 0x4002a91	      1887	objcopy.c	FUNCTION_31	CALL_18
0x4002a91	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1888	objcopy.c	FUNCTION_31	CALL_19
0x4002a98	          0x4889c7	                            mov rdi, rax	      1888	objcopy.c	FUNCTION_31	CALL_19
0x4002a9b	      0xe800000000	                          call 0x4002aa0	      1888	objcopy.c	FUNCTION_31	CALL_19
0x4002aa0	      0xb801000000	                              mov eax, 1	      1889	objcopy.c	FUNCTION_31
0x4002aa5	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1890	objcopy.c	FUNCTION_31
0x4002aa9	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1890	objcopy.c	FUNCTION_31
0x4002ab2	            0x7405	                            je 0x4002ab9	      1890	objcopy.c	FUNCTION_31
0x4002ab4	      0xe800000000	                          call 0x4002ab9	      1890	objcopy.c	FUNCTION_31
0x4002ab9	    0x4881c4d00000	                           add rsp, 0xd0	      1890	objcopy.c	FUNCTION_31
0x4002ac0	              0x5b	                                 pop rbx	      1890	objcopy.c	FUNCTION_31
0x4002ac1	            0x415c	                                 pop r12	      1890	objcopy.c	FUNCTION_31
0x4002ac3	              0x5d	                                 pop rbp	      1890	objcopy.c	FUNCTION_31
0x4002ac4	              0xc3	                                     ret	      1890	objcopy.c	FUNCTION_31
eq_string	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1	15
0x4000c80	              0x55	                                push rbp	       989	objcopy.c	FUNCTION_9
0x4000c81	          0x4889e5	                            mov rbp, rsp	       989	objcopy.c	FUNCTION_9
0x4000c84	        0x4883ec10	                           sub rsp, 0x10	       989	objcopy.c	FUNCTION_9
0x4000c88	        0x48897df8	                mov qword [rbp - 8], rdi	       989	objcopy.c	FUNCTION_9
0x4000c8c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       989	objcopy.c	FUNCTION_9
0x4000c90	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       990	objcopy.c	FUNCTION_9	CALL_1
0x4000c94	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	objcopy.c	FUNCTION_9	CALL_1
0x4000c98	          0x4889d6	                            mov rsi, rdx	       990	objcopy.c	FUNCTION_9	CALL_1
0x4000c9b	          0x4889c7	                            mov rdi, rax	       990	objcopy.c	FUNCTION_9	CALL_1
0x4000c9e	      0xe800000000	                          call 0x4000ca3	       990	objcopy.c	FUNCTION_9	CALL_1
0x4000ca3	            0x85c0	                           test eax, eax	       990	objcopy.c	FUNCTION_9	CALL_1
0x4000ca5	           0xf94c0	                                 sete al	       990	objcopy.c	FUNCTION_9	CALL_1
0x4000ca8	           0xfb6c0	                           movzx eax, al	       990	objcopy.c	FUNCTION_9	CALL_1
0x4000cab	              0xc9	                                   leave	       991	objcopy.c	FUNCTION_9
0x4000cac	              0xc3	                                     ret	       991	objcopy.c	FUNCTION_9
create_new_symbol	IF,2:FOR,0:ELSE,1:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,3	58
0x4001897	              0x55	                                push rbp	      1438	objcopy.c	FUNCTION_26
0x4001898	          0x4889e5	                            mov rbp, rsp	      1438	objcopy.c	FUNCTION_26
0x400189b	              0x53	                                push rbx	      1438	objcopy.c	FUNCTION_26
0x400189c	        0x4883ec28	                           sub rsp, 0x28	      1438	objcopy.c	FUNCTION_26
0x40018a0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1438	objcopy.c	FUNCTION_26
0x40018a4	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1438	objcopy.c	FUNCTION_26
0x40018a8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1439	objcopy.c	FUNCTION_26
0x40018ac	        0x488b4008	                mov rax, qword [rax + 8]	      1439	objcopy.c	FUNCTION_26
0x40018b0	    0x488b80000200	           mov rax, qword [rax + 0x200] 	      1439	objcopy.c	FUNCTION_26
0x40018b7	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1439	objcopy.c	FUNCTION_26
0x40018bb	          0x4889d7	                            mov rdi, rdx	      1439	objcopy.c	FUNCTION_26
0x40018be	            0xffd0	                                call rax	      1439	objcopy.c	FUNCTION_26
0x40018c0	        0x488945e0	             mov qword [rbp - 0x20], rax	      1439	objcopy.c	FUNCTION_26
0x40018c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1441	objcopy.c	FUNCTION_26
0x40018c8	        0x488b5008	                mov rdx, qword [rax + 8]	      1441	objcopy.c	FUNCTION_26
0x40018cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1441	objcopy.c	FUNCTION_26
0x40018d0	        0x48895008	                mov qword [rax + 8], rdx	      1441	objcopy.c	FUNCTION_26
0x40018d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1442	objcopy.c	FUNCTION_26
0x40018d8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1442	objcopy.c	FUNCTION_26
0x40018dc	          0x4889c2	                            mov rdx, rax	      1442	objcopy.c	FUNCTION_26
0x40018df	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1442	objcopy.c	FUNCTION_26
0x40018e3	        0x48895010	             mov qword [rax + 0x10], rdx	      1442	objcopy.c	FUNCTION_26
0x40018e7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1443	objcopy.c	FUNCTION_26
0x40018eb	          0x8b5018	            mov edx, dword [rax + 0x18] 	      1443	objcopy.c	FUNCTION_26
0x40018ee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1443	objcopy.c	FUNCTION_26
0x40018f2	          0x895018	             mov dword [rax + 0x18], edx	      1443	objcopy.c	FUNCTION_26
0x40018f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1444	objcopy.c	FUNCTION_26	IF_1
0x40018f9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1444	objcopy.c	FUNCTION_26	IF_1
0x40018fd	          0x4885c0	                           test rax, rax	      1444	objcopy.c	FUNCTION_26	IF_1
0x4001900	            0x7452	                            je 0x4001954	      1444	objcopy.c	FUNCTION_26	IF_1
0x4001902	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1446	objcopy.c	FUNCTION_26	IF_1	CALL_1
0x4001906	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1446	objcopy.c	FUNCTION_26	IF_1	CALL_1
0x400190a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1446	objcopy.c	FUNCTION_26	IF_1	CALL_1
0x400190e	          0x4889d6	                            mov rsi, rdx	      1446	objcopy.c	FUNCTION_26	IF_1	CALL_1
0x4001911	          0x4889c7	                            mov rdi, rax	      1446	objcopy.c	FUNCTION_26	IF_1	CALL_1
0x4001914	      0xe800000000	                          call 0x4001919	      1446	objcopy.c	FUNCTION_26	IF_1	CALL_1
0x4001919	        0x488945e8	             mov qword [rbp - 0x18], rax	      1446	objcopy.c	FUNCTION_26	IF_1	CALL_1
0x400191d	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1447	objcopy.c	FUNCTION_26	IF_1	IF_2
0x4001922	            0x7522	                           jne 0x4001946	      1447	objcopy.c	FUNCTION_26	IF_1	IF_2
0x4001924	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x4001928	        0x488b5820	            mov rbx, qword [rax + 0x20] 	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x400192c	      0xbf00000000	                              mov edi, 0	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x4001931	      0xe800000000	                          call 0x4001936	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x4001936	          0x4889de	                            mov rsi, rbx	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x4001939	          0x4889c7	                            mov rdi, rax	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x400193c	      0xb800000000	                              mov eax, 0	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x4001941	      0xe800000000	                          call 0x4001946	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x4001946	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1449	objcopy.c	FUNCTION_26	IF_1
0x400194a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1449	objcopy.c	FUNCTION_26	IF_1
0x400194e	        0x48895020	             mov qword [rax + 0x20], rdx	      1449	objcopy.c	FUNCTION_26	IF_1
0x4001952	            0xeb0c	                           jmp 0x4001960	      1449	objcopy.c	FUNCTION_26	IF_1
0x4001954	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1452	objcopy.c	FUNCTION_26	ELSE_1
0x4001958	    0x48c740200000	               mov qword [rax + 0x20], 0	      1452	objcopy.c	FUNCTION_26	ELSE_1
0x4001960	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1453	objcopy.c	FUNCTION_26	ELSE_1
0x4001964	        0x4883c428	                           add rsp, 0x28	      1454	objcopy.c	FUNCTION_26	ELSE_1
0x4001968	              0x5b	                                 pop rbx	      1454	objcopy.c	FUNCTION_26	ELSE_1
0x4001969	              0x5d	                                 pop rbp	      1454	objcopy.c	FUNCTION_26	ELSE_1
0x400196a	              0xc3	                                     ret	      1454	objcopy.c	FUNCTION_26	ELSE_1
mark_symbols_used_in_relocations	IF,7:FOR,1:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,7	131
0x4007f96	              0x55	                                push rbp	      4203	objcopy.c	FUNCTION_54
0x4007f97	          0x4889e5	                            mov rbp, rsp	      4203	objcopy.c	FUNCTION_54
0x4007f9a	        0x4883ec50	                           sub rsp, 0x50	      4203	objcopy.c	FUNCTION_54
0x4007f9e	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      4203	objcopy.c	FUNCTION_54
0x4007fa2	        0x488975c0	             mov qword [rbp - 0x40], rsi	      4203	objcopy.c	FUNCTION_54
0x4007fa6	        0x488955b8	             mov qword [rbp - 0x48], rdx	      4203	objcopy.c	FUNCTION_54
0x4007faa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4204	objcopy.c	FUNCTION_54
0x4007fae	        0x488945e0	             mov qword [rbp - 0x20], rax	      4204	objcopy.c	FUNCTION_54
0x4007fb2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4210	objcopy.c	FUNCTION_54	IF_1
0x4007fb6	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4210	objcopy.c	FUNCTION_54	IF_1
0x4007fba	          0x4885c0	                           test rax, rax	      4210	objcopy.c	FUNCTION_54	IF_1
0x4007fbd	     0xf84c8010000	                            je 0x400818b	      4210	objcopy.c	FUNCTION_54	IF_1
0x4007fc3	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4213	objcopy.c	FUNCTION_54	CALL_1
0x4007fc7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4213	objcopy.c	FUNCTION_54	CALL_1
0x4007fcb	          0x4889d6	                            mov rsi, rdx	      4213	objcopy.c	FUNCTION_54	CALL_1
0x4007fce	          0x4889c7	                            mov rdi, rax	      4213	objcopy.c	FUNCTION_54	CALL_1
0x4007fd1	      0xe800000000	                          call 0x4007fd6	      4213	objcopy.c	FUNCTION_54	CALL_1
0x4007fd6	        0x488945e8	             mov qword [rbp - 0x18], rax	      4213	objcopy.c	FUNCTION_54	CALL_1
0x4007fda	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4214	objcopy.c	FUNCTION_54	IF_2
0x4007fdf	            0x7924	                           jns 0x4008005	      4214	objcopy.c	FUNCTION_54	IF_2
0x4007fe1	      0x48837de8ff	cmp qword [rbp - 0x18], 0xffffffffffffffff	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x4007fe6	            0x750e	                           jne 0x4007ff6	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x4007fe8	      0xe800000000	                          call 0x4007fed	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x4007fed	          0x83f805	                              cmp eax, 5	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x4007ff0	     0xf8498010000	                            je 0x400818e	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x4007ff6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4219	objcopy.c	FUNCTION_54	IF_2	CALL_3
0x4007ffa	          0x488b00	                    mov rax, qword [rax]	      4219	objcopy.c	FUNCTION_54	IF_2	CALL_3
0x4007ffd	          0x4889c7	                            mov rdi, rax	      4219	objcopy.c	FUNCTION_54	IF_2	CALL_3
0x4008000	      0xe800000000	                          call 0x4008005	      4219	objcopy.c	FUNCTION_54	IF_2	CALL_3
0x4008005	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4222	objcopy.c	FUNCTION_54	IF_4
0x400800a	     0xf8481010000	                            je 0x4008191	      4222	objcopy.c	FUNCTION_54	IF_4
0x4008010	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4225	objcopy.c	FUNCTION_54	CALL_4
0x4008014	          0x4889c7	                            mov rdi, rax	      4225	objcopy.c	FUNCTION_54	CALL_4
0x4008017	      0xe800000000	                          call 0x400801c	      4225	objcopy.c	FUNCTION_54	CALL_4
0x400801c	        0x488945f0	             mov qword [rbp - 0x10], rax	      4225	objcopy.c	FUNCTION_54	CALL_4
0x4008020	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      4226	objcopy.c	FUNCTION_54	CALL_5
0x4008024	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4226	objcopy.c	FUNCTION_54	CALL_5
0x4008028	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      4226	objcopy.c	FUNCTION_54	CALL_5
0x400802c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4226	objcopy.c	FUNCTION_54	CALL_5
0x4008030	          0x4889c7	                            mov rdi, rax	      4226	objcopy.c	FUNCTION_54	CALL_5
0x4008033	      0xe800000000	                          call 0x4008038	      4226	objcopy.c	FUNCTION_54	CALL_5
0x4008038	        0x488945f8	                mov qword [rbp - 8], rax	      4226	objcopy.c	FUNCTION_54	CALL_5
0x400803c	      0x48837df800	                  cmp qword [rbp - 8], 0	      4227	objcopy.c	FUNCTION_54	IF_5
0x4008041	            0x790f	                           jns 0x4008052	      4227	objcopy.c	FUNCTION_54	IF_5
0x4008043	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4228	objcopy.c	FUNCTION_54	CALL_6
0x4008047	          0x488b00	                    mov rax, qword [rax]	      4228	objcopy.c	FUNCTION_54	CALL_6
0x400804a	          0x4889c7	                            mov rdi, rax	      4228	objcopy.c	FUNCTION_54	CALL_6
0x400804d	      0xe800000000	                          call 0x4008052	      4228	objcopy.c	FUNCTION_54	CALL_6
0x4008052	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      4232	objcopy.c	FUNCTION_54	FOR_1
0x400805a	      0xe909010000	                           jmp 0x4008168	      4232	objcopy.c	FUNCTION_54	FOR_1
0x400805f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008063	    0x488d14c50000	                        lea rdx, [rax*8]	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400806b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400806f	          0x4801d0	                            add rax, rdx	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008072	          0x488b00	                    mov rax, qword [rax]	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008075	          0x488b00	                    mov rax, qword [rax]	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008078	          0x4885c0	                           test rax, rax	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400807b	     0xf84e2000000	                            je 0x4008163	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008081	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008085	    0x488d14c50000	                        lea rdx, [rax*8]	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400808d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008091	          0x4801d0	                            add rax, rdx	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008094	          0x488b00	                    mov rax, qword [rax]	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008097	          0x488b00	                    mov rax, qword [rax]	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400809a	          0x488b00	                    mov rax, qword [rax]	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400809d	          0x4885c0	                           test rax, rax	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080a0	     0xf84bd000000	                            je 0x4008163	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080aa	    0x488d14c50000	                        lea rdx, [rax*8]	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080b6	          0x4801d0	                            add rax, rdx	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080b9	          0x488b00	                    mov rax, qword [rax]	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080bc	          0x488b00	                    mov rax, qword [rax]	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080bf	          0x488b10	                    mov rdx, qword [rax]	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080c2	    0x488b05000000	            mov rax, qword [0x040080c9] 	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080c9	          0x4839c2	                            cmp rdx, rax	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080cc	     0xf8491000000	                            je 0x4008163	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080d6	    0x488d14c50000	                        lea rdx, [rax*8]	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080e2	          0x4801d0	                            add rax, rdx	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080e5	          0x488b00	                    mov rax, qword [rax]	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080e8	          0x488b00	                    mov rax, qword [rax]	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080eb	          0x488b10	                    mov rdx, qword [rax]	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080ee	    0x488b05000000	            mov rax, qword [0x040080f5] 	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080f5	          0x4839c2	                            cmp rdx, rax	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080f8	            0x7469	                            je 0x4008163	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40080fe	    0x488d14c50000	                        lea rdx, [rax*8]	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008106	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400810a	          0x4801d0	                            add rax, rdx	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400810d	          0x488b00	                    mov rax, qword [rax]	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008110	          0x488b00	                    mov rax, qword [rax]	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008113	          0x488b10	                    mov rdx, qword [rax]	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008116	    0x488b05000000	            mov rax, qword [0x0400811d] 	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400811d	          0x4839c2	                            cmp rdx, rax	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008120	            0x7441	                            je 0x4008163	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008122	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008126	    0x488d14c50000	                        lea rdx, [rax*8]	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400812e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008132	          0x4801d0	                            add rax, rdx	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008135	          0x488b00	                    mov rax, qword [rax]	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008138	          0x488b00	                    mov rax, qword [rax]	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400813b	          0x488b00	                    mov rax, qword [rax]	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400813e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008142	    0x488d0cd50000	                        lea rcx, [rdx*8]	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400814a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400814e	          0x4801ca	                            add rdx, rcx	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008151	          0x488b12	                    mov rdx, qword [rdx]	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008154	          0x488b12	                    mov rdx, qword [rdx]	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008157	          0x488b12	                    mov rdx, qword [rdx]	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400815a	          0x8b5218	            mov edx, dword [rdx + 0x18] 	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400815d	          0x83ca20	                            or edx, 0x20	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008160	          0x895018	             mov dword [rax + 0x18], edx	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4008163	      0x488345d801	               add qword [rbp - 0x28], 1	      4232	objcopy.c	FUNCTION_54	FOR_1
0x4008168	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4232	objcopy.c	FUNCTION_54	FOR_1
0x400816c	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4232	objcopy.c	FUNCTION_54	FOR_1
0x4008170	     0xf8ce9feffff	                            jl 0x400805f	      4232	objcopy.c	FUNCTION_54	FOR_1
0x4008176	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4243	objcopy.c	FUNCTION_54	IF_7
0x400817b	            0x7415	                            je 0x4008192	      4243	objcopy.c	FUNCTION_54	IF_7
0x400817d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4244	objcopy.c	FUNCTION_54	CALL_7
0x4008181	          0x4889c7	                            mov rdi, rax	      4244	objcopy.c	FUNCTION_54	CALL_7
0x4008184	      0xe800000000	                          call 0x4008189	      4244	objcopy.c	FUNCTION_54	CALL_7
0x4008189	            0xeb07	                           jmp 0x4008192	      4244	objcopy.c	FUNCTION_54	CALL_7
0x400818b	              0x90	                                     nop	      4211	objcopy.c	FUNCTION_54	IF_1
0x400818c	            0xeb04	                           jmp 0x4008192	      4211	objcopy.c	FUNCTION_54	IF_1
0x400818e	              0x90	                                     nop	      4218	objcopy.c	FUNCTION_54	IF_2	IF_3
0x400818f	            0xeb01	                           jmp 0x4008192	      4218	objcopy.c	FUNCTION_54	IF_2	IF_3
0x4008191	              0x90	                                     nop	      4223	objcopy.c	FUNCTION_54	IF_4
0x4008192	              0xc9	                                   leave	      4245	objcopy.c	FUNCTION_54
0x4008193	              0xc3	                                     ret	      4245	objcopy.c	FUNCTION_54
htab_hash_redefnode	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1	12
0x4000c30	              0x55	                                push rbp	       971	objcopy.c	FUNCTION_7
0x4000c31	          0x4889e5	                            mov rbp, rsp	       971	objcopy.c	FUNCTION_7
0x4000c34	        0x4883ec20	                           sub rsp, 0x20	       971	objcopy.c	FUNCTION_7
0x4000c38	        0x48897de8	             mov qword [rbp - 0x18], rdi	       971	objcopy.c	FUNCTION_7
0x4000c3c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       972	objcopy.c	FUNCTION_7
0x4000c40	        0x488945f8	                mov qword [rbp - 8], rax	       972	objcopy.c	FUNCTION_7
0x4000c44	        0x488b45f8	                mov rax, qword [rbp - 8]	       973	objcopy.c	FUNCTION_7	CALL_1
0x4000c48	          0x488b00	                    mov rax, qword [rax]	       973	objcopy.c	FUNCTION_7	CALL_1
0x4000c4b	          0x4889c7	                            mov rdi, rax	       973	objcopy.c	FUNCTION_7	CALL_1
0x4000c4e	      0xe800000000	                          call 0x4000c53	       973	objcopy.c	FUNCTION_7	CALL_1
0x4000c53	              0xc9	                                   leave	       974	objcopy.c	FUNCTION_7
0x4000c54	              0xc3	                                     ret	       974	objcopy.c	FUNCTION_7
is_nondebug_keep_contents_section	IF,2:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2	34
0x4001717	              0x55	                                push rbp	      1379	objcopy.c	FUNCTION_23
0x4001718	          0x4889e5	                            mov rbp, rsp	      1379	objcopy.c	FUNCTION_23
0x400171b	        0x4883ec10	                           sub rsp, 0x10	      1379	objcopy.c	FUNCTION_23
0x400171f	        0x48897df8	                mov qword [rbp - 8], rdi	      1379	objcopy.c	FUNCTION_23
0x4001723	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1379	objcopy.c	FUNCTION_23
0x4001727	        0x488b45f8	                mov rax, qword [rbp - 8]	      1381	objcopy.c	FUNCTION_23	IF_1
0x400172b	        0x488b4008	                mov rax, qword [rax + 8]	      1381	objcopy.c	FUNCTION_23	IF_1
0x400172f	          0x8b4008	                mov eax, dword [rax + 8]	      1381	objcopy.c	FUNCTION_23	IF_1
0x4001732	          0x83f805	                              cmp eax, 5	      1381	objcopy.c	FUNCTION_23	IF_1
0x4001735	            0x7519	                           jne 0x4001750	      1381	objcopy.c	FUNCTION_23	IF_1
0x4001737	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1382	objcopy.c	FUNCTION_23	CALL_1
0x400173b	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1382	objcopy.c	FUNCTION_23	CALL_1
0x4001742	          0x8b4004	                mov eax, dword [rax + 4]	      1382	objcopy.c	FUNCTION_23	CALL_1
0x4001745	          0x83f807	                              cmp eax, 7	      1382	objcopy.c	FUNCTION_23	CALL_1
0x4001748	           0xf94c0	                                 sete al	      1382	objcopy.c	FUNCTION_23	CALL_1
0x400174b	           0xfb6c0	                           movzx eax, al	      1382	objcopy.c	FUNCTION_23	CALL_1
0x400174e	            0xeb33	                           jmp 0x4001783	      1382	objcopy.c	FUNCTION_23	CALL_1
0x4001750	        0x488b45f8	                mov rax, qword [rbp - 8]	      1389	objcopy.c	FUNCTION_23	IF_2
0x4001754	        0x488b4008	                mov rax, qword [rax + 8]	      1389	objcopy.c	FUNCTION_23	IF_2
0x4001758	          0x8b4008	                mov eax, dword [rax + 8]	      1389	objcopy.c	FUNCTION_23	IF_2
0x400175b	          0x83f802	                              cmp eax, 2	      1389	objcopy.c	FUNCTION_23	IF_2
0x400175e	            0x751e	                           jne 0x400177e	      1389	objcopy.c	FUNCTION_23	IF_2
0x4001760	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1390	objcopy.c	FUNCTION_23	CALL_2
0x4001764	          0x488b00	                    mov rax, qword [rax]	      1390	objcopy.c	FUNCTION_23	CALL_2
0x4001767	      0xbe00000000	                              mov esi, 0	      1390	objcopy.c	FUNCTION_23	CALL_2
0x400176c	          0x4889c7	                            mov rdi, rax	      1390	objcopy.c	FUNCTION_23	CALL_2
0x400176f	      0xe800000000	                          call 0x4001774	      1390	objcopy.c	FUNCTION_23	CALL_2
0x4001774	            0x85c0	                           test eax, eax	      1390	objcopy.c	FUNCTION_23	CALL_2
0x4001776	           0xf94c0	                                 sete al	      1390	objcopy.c	FUNCTION_23	CALL_2
0x4001779	           0xfb6c0	                           movzx eax, al	      1390	objcopy.c	FUNCTION_23	CALL_2
0x400177c	            0xeb05	                           jmp 0x4001783	      1390	objcopy.c	FUNCTION_23	CALL_2
0x400177e	      0xb800000000	                              mov eax, 0	      1392	objcopy.c	FUNCTION_23
0x4001783	              0xc9	                                   leave	      1393	objcopy.c	FUNCTION_23
0x4001784	              0xc3	                                     ret	      1393	objcopy.c	FUNCTION_23
is_func_note	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,0	10
0x4002b7e	              0x55	                                push rbp	      1940	objcopy.c	FUNCTION_35
0x4002b7f	          0x4889e5	                            mov rbp, rsp	      1940	objcopy.c	FUNCTION_35
0x4002b82	        0x48897df8	                mov qword [rbp - 8], rdi	      1940	objcopy.c	FUNCTION_35
0x4002b86	        0x488b45f8	                mov rax, qword [rbp - 8]	      1941	objcopy.c	FUNCTION_35
0x4002b8a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1941	objcopy.c	FUNCTION_35
0x4002b8e	    0x483d01010000	                          cmp rax, 0x101	      1941	objcopy.c	FUNCTION_35
0x4002b94	           0xf94c0	                                 sete al	      1941	objcopy.c	FUNCTION_35
0x4002b97	           0xfb6c0	                           movzx eax, al	      1941	objcopy.c	FUNCTION_35
0x4002b9a	              0x5d	                                 pop rbp	      1942	objcopy.c	FUNCTION_35
0x4002b9b	              0xc3	                                     ret	      1942	objcopy.c	FUNCTION_35
add_specific_symbols	IF,9:FOR,5:ELSE,0:DO,0:SWITCH,1:functions,0:WHILE,0:CALL,14	229
0x4000db5	              0x55	                                push rbp	      1038	objcopy.c	FUNCTION_14
0x4000db6	          0x4889e5	                            mov rbp, rsp	      1038	objcopy.c	FUNCTION_14
0x4000db9	              0x53	                                push rbx	      1038	objcopy.c	FUNCTION_14
0x4000dba	        0x4883ec68	                           sub rsp, 0x68	      1038	objcopy.c	FUNCTION_14
0x4000dbe	        0x48897d98	             mov qword [rbp - 0x68], rdi	      1038	objcopy.c	FUNCTION_14
0x4000dc2	        0x48897590	             mov qword [rbp - 0x70], rsi	      1038	objcopy.c	FUNCTION_14
0x4000dc6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1045	objcopy.c	FUNCTION_14	CALL_1
0x4000dca	          0x4889c7	                            mov rdi, rax	      1045	objcopy.c	FUNCTION_14	CALL_1
0x4000dcd	      0xe800000000	                          call 0x4000dd2	      1045	objcopy.c	FUNCTION_14	CALL_1
0x4000dd2	        0x488945d8	             mov qword [rbp - 0x28], rax	      1045	objcopy.c	FUNCTION_14	CALL_1
0x4000dd6	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1046	objcopy.c	FUNCTION_14	IF_1
0x4000ddb	            0x750f	                           jne 0x4000dec	      1046	objcopy.c	FUNCTION_14	IF_1
0x4000ddd	    0xc70500000000	               mov dword [0x04000de7], 1	      1048	objcopy.c	FUNCTION_14	IF_1
0x4000de7	      0xe9d5020000	                           jmp 0x40010c1	      1049	objcopy.c	FUNCTION_14	IF_1
0x4000dec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1052	objcopy.c	FUNCTION_14	CALL_2
0x4000df0	        0x4883c002	                              add rax, 2	      1052	objcopy.c	FUNCTION_14	CALL_2
0x4000df4	          0x4889c7	                            mov rdi, rax	      1052	objcopy.c	FUNCTION_14	CALL_2
0x4000df7	      0xe800000000	                          call 0x4000dfc	      1052	objcopy.c	FUNCTION_14	CALL_2
0x4000dfc	        0x488945e0	             mov qword [rbp - 0x20], rax	      1052	objcopy.c	FUNCTION_14	CALL_2
0x4000e00	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1053	objcopy.c	FUNCTION_14	CALL_3
0x4000e04	      0xbe00000000	                              mov esi, 0	      1053	objcopy.c	FUNCTION_14	CALL_3
0x4000e09	          0x4889c7	                            mov rdi, rax	      1053	objcopy.c	FUNCTION_14	CALL_3
0x4000e0c	      0xe800000000	                          call 0x4000e11	      1053	objcopy.c	FUNCTION_14	CALL_3
0x4000e11	        0x488945e8	             mov qword [rbp - 0x18], rax	      1053	objcopy.c	FUNCTION_14	CALL_3
0x4000e15	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1054	objcopy.c	FUNCTION_14	IF_2
0x4000e1a	            0x7535	                           jne 0x4000e51	      1054	objcopy.c	FUNCTION_14	IF_2
0x4000e1c	      0xe800000000	                          call 0x4000e21	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000e21	            0x8b00	                    mov eax, dword [rax]	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000e23	            0x89c7	                            mov edi, eax	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000e25	      0xe800000000	                          call 0x4000e2a	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000e2a	          0x4889c3	                            mov rbx, rax	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000e2d	      0xbf00000000	                              mov edi, 0	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000e32	      0xe800000000	                          call 0x4000e37	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000e37	          0x4889c1	                            mov rcx, rax	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000e3a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000e3e	          0x4889da	                            mov rdx, rbx	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000e41	          0x4889c6	                            mov rsi, rax	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000e44	          0x4889cf	                            mov rdi, rcx	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000e47	      0xb800000000	                              mov eax, 0	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000e4c	      0xe800000000	                          call 0x4000e51	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000e51	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000e55	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000e59	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000e5d	      0xbe01000000	                              mov esi, 1	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000e62	          0x4889c7	                            mov rdi, rax	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000e65	      0xe800000000	                          call 0x4000e6a	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000e6a	          0x4885c0	                           test rax, rax	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000e6d	            0x7410	                            je 0x4000e7f	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000e6f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000e73	          0x4889c7	                            mov rdi, rax	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000e76	      0xe800000000	                          call 0x4000e7b	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000e7b	            0x85c0	                           test eax, eax	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000e7d	            0x7421	                            je 0x4000ea0	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000e7f	      0xbf00000000	                              mov edi, 0	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000e84	      0xe800000000	                          call 0x4000e89	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000e89	          0x4889c2	                            mov rdx, rax	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000e8c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000e90	          0x4889c6	                            mov rsi, rax	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000e93	          0x4889d7	                            mov rdi, rdx	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000e96	      0xb800000000	                              mov eax, 0	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000e9b	      0xe800000000	                          call 0x4000ea0	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000ea0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1060	objcopy.c	FUNCTION_14	CALL_11
0x4000ea4	          0x4889c7	                            mov rdi, rax	      1060	objcopy.c	FUNCTION_14	CALL_11
0x4000ea7	      0xe800000000	                          call 0x4000eac	      1060	objcopy.c	FUNCTION_14	CALL_11
0x4000eac	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1061	objcopy.c	FUNCTION_14
0x4000eb0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1061	objcopy.c	FUNCTION_14
0x4000eb4	          0x4801d0	                            add rax, rdx	      1061	objcopy.c	FUNCTION_14
0x4000eb7	          0xc6000a	                     mov byte [rax], 0xa	      1061	objcopy.c	FUNCTION_14
0x4000eba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1062	objcopy.c	FUNCTION_14
0x4000ebe	        0x488d5001	                      lea rdx, [rax + 1]	      1062	objcopy.c	FUNCTION_14
0x4000ec2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1062	objcopy.c	FUNCTION_14
0x4000ec6	          0x4801d0	                            add rax, rdx	      1062	objcopy.c	FUNCTION_14
0x4000ec9	          0xc60000	                       mov byte [rax], 0	      1062	objcopy.c	FUNCTION_14
0x4000ecc	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      1064	objcopy.c	FUNCTION_14
0x4000ed3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1066	objcopy.c	FUNCTION_14	FOR_1
0x4000ed7	        0x488945b0	             mov qword [rbp - 0x50], rax	      1066	objcopy.c	FUNCTION_14	FOR_1
0x4000edb	      0xe9d2010000	                           jmp 0x40010b2	      1066	objcopy.c	FUNCTION_14	FOR_1
0x4000ee0	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      1071	objcopy.c	FUNCTION_14	FOR_1
0x4000ee7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1073	objcopy.c	FUNCTION_14	FOR_1	FOR_2
0x4000eeb	        0x488945b8	             mov qword [rbp - 0x48], rax	      1073	objcopy.c	FUNCTION_14	FOR_1	FOR_2
0x4000eef	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000ef3	           0xfb600	                   movzx eax, byte [rax]	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000ef6	           0xfbec0	                           movsx eax, al	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000ef9	          0x83f80a	                            cmp eax, 0xa	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000efc	            0x7417	                            je 0x4000f15	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000efe	          0x83f80a	                            cmp eax, 0xa	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f01	            0x7f06	                            jg 0x4000f09	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f03	            0x85c0	                           test eax, eax	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f05	            0x7456	                            je 0x4000f5d	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f07	            0xeb65	                           jmp 0x4000f6e	      1105	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f09	          0x83f80d	                            cmp eax, 0xd	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f0c	            0x742b	                            je 0x4000f39	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f0e	          0x83f823	                           cmp eax, 0x23	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f11	            0x7453	                            je 0x4000f66	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f13	            0xeb59	                           jmp 0x4000f6e	      1105	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f15	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1078	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f19	          0xc60000	                       mov byte [rax], 0	      1078	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f1c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1080	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x4000f20	        0x4883c001	                              add rax, 1	      1080	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x4000f24	           0xfb600	                   movzx eax, byte [rax]	      1080	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x4000f27	            0x3c0d	                             cmp al, 0xd	      1080	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x4000f29	            0x7505	                           jne 0x4000f30	      1080	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x4000f2b	      0x488345b801	               add qword [rbp - 0x48], 1	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x4000f30	    0xc745ac010000	               mov dword [rbp - 0x54], 1	      1082	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f37	            0xeb35	                           jmp 0x4000f6e	      1083	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f39	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1086	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f3d	          0xc60000	                       mov byte [rax], 0	      1086	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f40	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1088	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x4000f44	        0x4883c001	                              add rax, 1	      1088	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x4000f48	           0xfb600	                   movzx eax, byte [rax]	      1088	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x4000f4b	            0x3c0a	                             cmp al, 0xa	      1088	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x4000f4d	            0x7505	                           jne 0x4000f54	      1088	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x4000f4f	      0x488345b801	               add qword [rbp - 0x48], 1	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x4000f54	    0xc745ac010000	               mov dword [rbp - 0x54], 1	      1090	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f5b	            0xeb11	                           jmp 0x4000f6e	      1091	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f5d	    0xc745ac010000	               mov dword [rbp - 0x54], 1	      1094	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f64	            0xeb08	                           jmp 0x4000f6e	      1095	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f66	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1101	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f6a	          0xc60000	                       mov byte [rax], 0	      1101	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f6d	              0x90	                                     nop	      1102	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000f6e	        0x837dac00	               cmp dword [rbp - 0x54], 0	      1108	objcopy.c	FUNCTION_14	FOR_1	FOR_2	IF_6
0x4000f72	            0x750a	                           jne 0x4000f7e	      1108	objcopy.c	FUNCTION_14	FOR_1	FOR_2	IF_6
0x4000f74	      0x488345b801	               add qword [rbp - 0x48], 1	      1073	objcopy.c	FUNCTION_14	FOR_1	FOR_2
0x4000f79	      0xe971ffffff	                           jmp 0x4000eef	      1110	objcopy.c	FUNCTION_14	FOR_1	FOR_2
0x4000f7e	              0x90	                                     nop	      1109	objcopy.c	FUNCTION_14	FOR_1	FOR_2	IF_6
0x4000f7f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000f83	        0x488945c0	             mov qword [rbp - 0x40], rax	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000f87	            0xeb05	                           jmp 0x4000f8e	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000f89	      0x488345c001	               add qword [rbp - 0x40], 1	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000f8e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000f92	           0xfb600	                   movzx eax, byte [rax]	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000f95	            0x3c20	                            cmp al, 0x20	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000f97	            0x74f0	                            je 0x4000f89	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000f99	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000f9d	           0xfb600	                   movzx eax, byte [rax]	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000fa0	            0x3c09	                               cmp al, 9	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000fa2	            0x74e5	                            je 0x4000f89	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000fa4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fa8	        0x488945c8	             mov qword [rbp - 0x38], rax	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fac	            0xeb05	                           jmp 0x4000fb3	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fae	      0x488345c801	               add qword [rbp - 0x38], 1	      1120	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fb3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1118	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fb7	           0xfb600	                   movzx eax, byte [rax]	      1118	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fba	            0x3c20	                            cmp al, 0x20	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fbc	            0x742c	                            je 0x4000fea	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fbe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1118	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fc2	           0xfb600	                   movzx eax, byte [rax]	      1118	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fc5	            0x3c09	                               cmp al, 9	      1118	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fc7	            0x7421	                            je 0x4000fea	      1118	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fc9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fcd	           0xfb600	                   movzx eax, byte [rax]	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fd0	            0x3c0a	                             cmp al, 0xa	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fd2	            0x7416	                            je 0x4000fea	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fd4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fd8	           0xfb600	                   movzx eax, byte [rax]	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fdb	            0x3c0d	                             cmp al, 0xd	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fdd	            0x740b	                            je 0x4000fea	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fdf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fe3	           0xfb600	                   movzx eax, byte [rax]	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fe6	            0x84c0	                             test al, al	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fe8	            0x75c4	                           jne 0x4000fae	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000fea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x4000fee	           0xfb600	                   movzx eax, byte [rax]	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x4000ff1	            0x3c0a	                             cmp al, 0xa	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x4000ff3	     0xf8484000000	                            je 0x400107d	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x4000ff9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x4000ffd	           0xfb600	                   movzx eax, byte [rax]	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x4001000	            0x3c0d	                             cmp al, 0xd	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x4001002	            0x7479	                            je 0x400107d	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x4001004	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x4001008	           0xfb600	                   movzx eax, byte [rax]	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x400100b	            0x84c0	                             test al, al	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x400100d	            0x746e	                            je 0x400107d	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x400100f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x4001013	        0x4883c001	                              add rax, 1	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x4001017	        0x488945d0	             mov qword [rbp - 0x30], rax	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x400101b	            0xeb05	                           jmp 0x4001022	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x400101d	      0x488345d001	               add qword [rbp - 0x30], 1	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x4001022	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x4001026	           0xfb600	                   movzx eax, byte [rax]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x4001029	            0x3c20	                            cmp al, 0x20	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x400102b	            0x74f0	                            je 0x400101d	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x400102d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x4001031	           0xfb600	                   movzx eax, byte [rax]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x4001034	            0x3c09	                               cmp al, 9	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x4001036	            0x74e5	                            je 0x400101d	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x4001038	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x400103c	           0xfb600	                   movzx eax, byte [rax]	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x400103f	            0x3c0a	                             cmp al, 0xa	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4001041	            0x743a	                            je 0x400107d	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4001043	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4001047	           0xfb600	                   movzx eax, byte [rax]	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x400104a	            0x3c0d	                             cmp al, 0xd	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x400104c	            0x742f	                            je 0x400107d	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x400104e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4001052	           0xfb600	                   movzx eax, byte [rax]	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4001055	            0x84c0	                             test al, al	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4001057	            0x7424	                            je 0x400107d	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4001059	      0xbf00000000	                              mov edi, 0	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x400105e	      0xe800000000	                          call 0x4001063	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x4001063	          0x4889c1	                            mov rcx, rax	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x4001066	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x4001069	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x400106d	          0x4889c6	                            mov rsi, rax	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x4001070	          0x4889cf	                            mov rdi, rcx	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x4001073	      0xb800000000	                              mov eax, 0	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x4001078	      0xe800000000	                          call 0x400107d	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x400107d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1135	objcopy.c	FUNCTION_14	FOR_1
0x4001081	          0xc60000	                       mov byte [rax], 0	      1135	objcopy.c	FUNCTION_14	FOR_1
0x4001084	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x4001088	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x400108c	            0x7613	                           jbe 0x40010a1	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x400108e	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1138	objcopy.c	FUNCTION_14	FOR_1	CALL_14
0x4001092	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1138	objcopy.c	FUNCTION_14	FOR_1	CALL_14
0x4001096	          0x4889d6	                            mov rsi, rdx	      1138	objcopy.c	FUNCTION_14	FOR_1	CALL_14
0x4001099	          0x4889c7	                            mov rdi, rax	      1138	objcopy.c	FUNCTION_14	FOR_1	CALL_14
0x400109c	      0xe8aafcffff	            call sym.add_specific_symbol	      1138	objcopy.c	FUNCTION_14	FOR_1	CALL_14
0x40010a1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1142	objcopy.c	FUNCTION_14	FOR_1
0x40010a5	        0x488945b0	             mov qword [rbp - 0x50], rax	      1142	objcopy.c	FUNCTION_14	FOR_1
0x40010a9	        0x8345a801	               add dword [rbp - 0x58], 1	      1143	objcopy.c	FUNCTION_14	FOR_1
0x40010ad	      0x488345b001	               add qword [rbp - 0x50], 1	      1066	objcopy.c	FUNCTION_14	FOR_1
0x40010b2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1066	objcopy.c	FUNCTION_14	FOR_1
0x40010b6	           0xfb600	                   movzx eax, byte [rax]	      1066	objcopy.c	FUNCTION_14	FOR_1
0x40010b9	            0x84c0	                             test al, al	      1066	objcopy.c	FUNCTION_14	FOR_1
0x40010bb	     0xf851ffeffff	                           jne 0x4000ee0	      1066	objcopy.c	FUNCTION_14	FOR_1
0x40010c1	        0x4883c468	                           add rsp, 0x68	      1145	objcopy.c	FUNCTION_14
0x40010c5	              0x5b	                                 pop rbx	      1145	objcopy.c	FUNCTION_14
0x40010c6	              0x5d	                                 pop rbp	      1145	objcopy.c	FUNCTION_14
0x40010c7	              0xc3	                                     ret	      1145	objcopy.c	FUNCTION_14
copy_relocations_in_section	IF,12:FOR,1:ELSE,4:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,13	211
0x40075ba	              0x55	                                push rbp	      3919	objcopy.c	FUNCTION_50
0x40075bb	          0x4889e5	                            mov rbp, rsp	      3919	objcopy.c	FUNCTION_50
0x40075be	        0x4883ec60	                           sub rsp, 0x60	      3919	objcopy.c	FUNCTION_50
0x40075c2	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3919	objcopy.c	FUNCTION_50
0x40075c6	        0x488975b0	             mov qword [rbp - 0x50], rsi	      3919	objcopy.c	FUNCTION_50
0x40075ca	        0x488955a8	             mov qword [rbp - 0x58], rdx	      3919	objcopy.c	FUNCTION_50
0x40075ce	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3920	objcopy.c	FUNCTION_50
0x40075d2	        0x488945e8	             mov qword [rbp - 0x18], rax	      3920	objcopy.c	FUNCTION_50
0x40075d6	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      3926	objcopy.c	FUNCTION_50	IF_1	CALL_1
0x40075da	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3926	objcopy.c	FUNCTION_50	IF_1	CALL_1
0x40075de	      0xba00000000	                              mov edx, 0	      3926	objcopy.c	FUNCTION_50	IF_1	CALL_1
0x40075e3	          0x4889ce	                            mov rsi, rcx	      3926	objcopy.c	FUNCTION_50	IF_1	CALL_1
0x40075e6	          0x4889c7	                            mov rdi, rax	      3926	objcopy.c	FUNCTION_50	IF_1	CALL_1
0x40075e9	      0xe8fdfdffff	                   call sym.skip_section	      3926	objcopy.c	FUNCTION_50	IF_1	CALL_1
0x40075ee	            0x85c0	                           test eax, eax	      3926	objcopy.c	FUNCTION_50	IF_1	CALL_1
0x40075f0	     0xf850c030000	                           jne 0x4007902	      3926	objcopy.c	FUNCTION_50	IF_1	CALL_1
0x40075f6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3929	objcopy.c	FUNCTION_50
0x40075fa	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3929	objcopy.c	FUNCTION_50
0x40075fe	        0x488945f0	             mov qword [rbp - 0x10], rax	      3929	objcopy.c	FUNCTION_50
0x4007602	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3932	objcopy.c	FUNCTION_50	IF_2
0x4007606	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      3932	objcopy.c	FUNCTION_50	IF_2
0x400760a	          0x83e007	                              and eax, 7	      3932	objcopy.c	FUNCTION_50	IF_2
0x400760d	            0x3c03	                               cmp al, 3	      3932	objcopy.c	FUNCTION_50	IF_2
0x400760f	            0x7422	                            je 0x4007633	      3932	objcopy.c	FUNCTION_50	IF_2
0x4007611	    0x8b0500000000	            mov eax, dword [0x04007617] 	      3933	objcopy.c	FUNCTION_50	IF_2
0x4007617	          0x83f806	                              cmp eax, 6	      3933	objcopy.c	FUNCTION_50	IF_2
0x400761a	            0x7417	                            je 0x4007633	      3933	objcopy.c	FUNCTION_50	IF_2
0x400761c	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      3934	objcopy.c	FUNCTION_50	IF_2	CALL_2
0x4007620	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3934	objcopy.c	FUNCTION_50	IF_2	CALL_2
0x4007624	          0x4889d6	                            mov rsi, rdx	      3934	objcopy.c	FUNCTION_50	IF_2	CALL_2
0x4007627	          0x4889c7	                            mov rdi, rax	      3934	objcopy.c	FUNCTION_50	IF_2	CALL_2
0x400762a	      0xe8d0feffff	            call sym.discard_relocations	      3934	objcopy.c	FUNCTION_50	IF_2	CALL_2
0x400762f	            0x85c0	                           test eax, eax	      3934	objcopy.c	FUNCTION_50	IF_2	CALL_2
0x4007631	            0x740a	                            je 0x400763d	      3934	objcopy.c	FUNCTION_50	IF_2	CALL_2
0x4007633	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      3935	objcopy.c	FUNCTION_50	IF_2
0x400763b	            0xeb67	                           jmp 0x40076a4	      3935	objcopy.c	FUNCTION_50	IF_2
0x400763d	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      3938	objcopy.c	FUNCTION_50	ELSE_1	CALL_3
0x4007641	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3938	objcopy.c	FUNCTION_50	ELSE_1	CALL_3
0x4007645	          0x4889d6	                            mov rsi, rdx	      3938	objcopy.c	FUNCTION_50	ELSE_1	CALL_3
0x4007648	          0x4889c7	                            mov rdi, rax	      3938	objcopy.c	FUNCTION_50	ELSE_1	CALL_3
0x400764b	      0xe800000000	                          call 0x4007650	      3938	objcopy.c	FUNCTION_50	ELSE_1	CALL_3
0x4007650	        0x488945c0	             mov qword [rbp - 0x40], rax	      3938	objcopy.c	FUNCTION_50	ELSE_1	CALL_3
0x4007654	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      3940	objcopy.c	FUNCTION_50	ELSE_1	IF_3
0x4007659	            0x7949	                           jns 0x40076a4	      3940	objcopy.c	FUNCTION_50	ELSE_1	IF_3
0x400765b	      0x48837dc0ff	cmp qword [rbp - 0x40], 0xffffffffffffffff	      3943	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4	CALL_4
0x4007660	            0x7514	                           jne 0x4007676	      3943	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4	CALL_4
0x4007662	      0xe800000000	                          call 0x4007667	      3943	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4	CALL_4
0x4007667	          0x83f805	                              cmp eax, 5	      3943	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4	CALL_4
0x400766a	            0x750a	                           jne 0x4007676	      3943	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4	CALL_4
0x400766c	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      3944	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4
0x4007674	            0xeb2e	                           jmp 0x40076a4	      3944	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4
0x4007676	    0xc70500000000	               mov dword [0x04007680], 1	      3947	objcopy.c	FUNCTION_50	ELSE_1	IF_3	ELSE_2
0x4007680	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      3948	objcopy.c	FUNCTION_50	ELSE_1	IF_3	ELSE_2	CALL_5
0x4007684	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3948	objcopy.c	FUNCTION_50	ELSE_1	IF_3	ELSE_2	CALL_5
0x4007688	      0xb900000000	                              mov ecx, 0	      3948	objcopy.c	FUNCTION_50	ELSE_1	IF_3	ELSE_2	CALL_5
0x400768d	          0x4889c6	                            mov rsi, rax	      3948	objcopy.c	FUNCTION_50	ELSE_1	IF_3	ELSE_2	CALL_5
0x4007690	      0xbf00000000	                              mov edi, 0	      3948	objcopy.c	FUNCTION_50	ELSE_1	IF_3	ELSE_2	CALL_5
0x4007695	      0xb800000000	                              mov eax, 0	      3948	objcopy.c	FUNCTION_50	ELSE_1	IF_3	ELSE_2	CALL_5
0x400769a	      0xe800000000	                          call 0x400769f	      3948	objcopy.c	FUNCTION_50	ELSE_1	IF_3	ELSE_2	CALL_5
0x400769f	      0xe95f020000	                           jmp 0x4007903	      3949	objcopy.c	FUNCTION_50	ELSE_1	IF_3	ELSE_2
0x40076a4	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      3954	objcopy.c	FUNCTION_50	IF_5
0x40076a9	            0x753b	                           jne 0x40076e6	      3954	objcopy.c	FUNCTION_50	IF_5
0x40076ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3956	objcopy.c	FUNCTION_50	IF_5
0x40076af	        0x488b4008	                mov rax, qword [rax + 8]	      3956	objcopy.c	FUNCTION_50	IF_5
0x40076b3	    0x488b80780200	           mov rax, qword [rax + 0x278] 	      3956	objcopy.c	FUNCTION_50	IF_5
0x40076ba	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      3956	objcopy.c	FUNCTION_50	IF_5
0x40076be	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	      3956	objcopy.c	FUNCTION_50	IF_5
0x40076c2	      0xb900000000	                              mov ecx, 0	      3956	objcopy.c	FUNCTION_50	IF_5
0x40076c7	      0xba00000000	                              mov edx, 0	      3956	objcopy.c	FUNCTION_50	IF_5
0x40076cc	            0xffd0	                                call rax	      3956	objcopy.c	FUNCTION_50	IF_5
0x40076ce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3957	objcopy.c	FUNCTION_50	IF_5
0x40076d2	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3957	objcopy.c	FUNCTION_50	IF_5
0x40076d5	          0x83e0fb	                     and eax, 0xfffffffb	      3957	objcopy.c	FUNCTION_50	IF_5
0x40076d8	            0x89c2	                            mov edx, eax	      3957	objcopy.c	FUNCTION_50	IF_5
0x40076da	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3957	objcopy.c	FUNCTION_50	IF_5
0x40076de	          0x895020	             mov dword [rax + 0x20], edx	      3957	objcopy.c	FUNCTION_50	IF_5
0x40076e1	      0xe91d020000	                           jmp 0x4007903	      3957	objcopy.c	FUNCTION_50	IF_5
0x40076e6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3961	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x40076ea	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3961	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x40076f1	          0x4885c0	                           test rax, rax	      3961	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x40076f4	            0x7421	                            je 0x4007717	      3961	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x40076f6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3965	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x40076fa	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3965	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x4007700	            0x89c0	                            mov eax, eax	      3965	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x4007702	        0x488945d0	             mov qword [rbp - 0x30], rax	      3965	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x4007706	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3966	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x400770a	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3966	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x4007711	        0x488945c8	             mov qword [rbp - 0x38], rax	      3966	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x4007715	            0xeb6c	                           jmp 0x4007783	      3966	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x4007717	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3970	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_6
0x400771b	          0x4889c7	                            mov rdi, rax	      3970	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_6
0x400771e	      0xe800000000	                          call 0x4007723	      3970	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_6
0x4007723	        0x488945c8	             mov qword [rbp - 0x38], rax	      3970	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_6
0x4007727	    0x488b0d000000	            mov rcx, qword [0x0400772e] 	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x400772e	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x4007732	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x4007736	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x400773a	          0x4889c7	                            mov rdi, rax	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x400773d	      0xe800000000	                          call 0x4007742	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x4007742	        0x488945d0	             mov qword [rbp - 0x30], rax	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x4007746	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      3972	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7
0x400774b	            0x7936	                           jns 0x4007783	      3972	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7
0x400774d	    0xc70500000000	               mov dword [0x04007757], 1	      3974	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7
0x4007757	      0xbf00000000	                              mov edi, 0	      3976	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_9
0x400775c	      0xe800000000	                          call 0x4007761	      3976	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_9
0x4007761	          0x4889c1	                            mov rcx, rax	      3976	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_9
0x4007764	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x4007768	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x400776c	          0x4889c6	                            mov rsi, rax	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x400776f	      0xbf00000000	                              mov edi, 0	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x4007774	      0xb800000000	                              mov eax, 0	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x4007779	      0xe800000000	                          call 0x400777e	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x400777e	      0xe980010000	                           jmp 0x4007903	      3977	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7
0x4007783	    0x8b0500000000	            mov eax, dword [0x04007789] 	      3981	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x4007789	          0x83f807	                              cmp eax, 7	      3981	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x400778c	     0xf8511010000	                           jne 0x40078a3	      3981	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x4007792	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      3986	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x400779a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3989	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_10
0x400779e	          0x4889c7	                            mov rdi, rax	      3989	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_10
0x40077a1	      0xe800000000	                          call 0x40077a6	      3989	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_10
0x40077a6	        0x488945f8	                mov qword [rbp - 8], rax	      3989	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_10
0x40077aa	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x40077b2	      0xe9b2000000	                           jmp 0x4007869	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x40077b7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3993	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x40077bb	    0x488d14c50000	                        lea rdx, [rax*8]	      3993	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x40077c3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3993	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x40077c7	          0x4801d0	                            add rax, rdx	      3993	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x40077ca	          0x488b00	                    mov rax, qword [rax]	      3993	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x40077cd	          0x488b00	                    mov rax, qword [rax]	      3993	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x40077d0	          0x4885c0	                           test rax, rax	      3993	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x40077d3	     0xf848b000000	                            je 0x4007864	      3993	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x40077d9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3995	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x40077dd	    0x488d14c50000	                        lea rdx, [rax*8]	      3995	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x40077e5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3995	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x40077e9	          0x4801d0	                            add rax, rdx	      3995	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x40077ec	          0x488b00	                    mov rax, qword [rax]	      3995	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x40077ef	          0x488b00	                    mov rax, qword [rax]	      3995	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x40077f2	          0x488b00	                    mov rax, qword [rax]	      3995	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x40077f5	          0x4885c0	                           test rax, rax	      3995	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x40077f8	            0x746a	                            je 0x4007864	      3995	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x40077fa	    0x488b15000000	            mov rdx, qword [0x04007801] 	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x4007801	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x4007805	    0x488d0cc50000	                        lea rcx, [rax*8]	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x400780d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x4007811	          0x4801c8	                            add rax, rcx	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x4007814	          0x488b00	                    mov rax, qword [rax]	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x4007817	          0x488b00	                    mov rax, qword [rax]	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x400781a	          0x488b00	                    mov rax, qword [rax]	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x400781d	        0x488b4008	                mov rax, qword [rax + 8]	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x4007821	          0x4889d6	                            mov rsi, rdx	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x4007824	          0x4889c7	                            mov rdi, rax	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x4007827	      0xe83799ffff	            call sym.is_specified_symbol	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x400782c	            0x85c0	                           test eax, eax	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x400782e	            0x7434	                            je 0x4007864	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x4007830	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x4007834	        0x488d5001	                      lea rdx, [rax + 1]	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x4007838	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x400783c	    0x488d14c50000	                        lea rdx, [rax*8]	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x4007844	        0x488b45f8	                mov rax, qword [rbp - 8]	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x4007848	          0x4801c2	                            add rdx, rax	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x400784b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x400784f	    0x488d0cc50000	                        lea rcx, [rax*8]	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x4007857	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x400785b	          0x4801c8	                            add rax, rcx	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x400785e	          0x488b00	                    mov rax, qword [rax]	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x4007861	          0x488902	                    mov qword [rdx], rax	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x4007864	      0x488345e001	               add qword [rbp - 0x20], 1	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x4007869	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x400786d	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x4007871	     0xf8c40ffffff	                            jl 0x40077b7	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x4007877	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4000	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x400787b	        0x488945d0	             mov qword [rbp - 0x30], rax	      4000	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x400787f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4001	objcopy.c	FUNCTION_50	ELSE_3	IF_8	IF_11
0x4007883	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      4001	objcopy.c	FUNCTION_50	ELSE_3	IF_8	IF_11
0x400788a	          0x4885c0	                           test rax, rax	      4001	objcopy.c	FUNCTION_50	ELSE_3	IF_8	IF_11
0x400788d	            0x750c	                           jne 0x400789b	      4001	objcopy.c	FUNCTION_50	ELSE_3	IF_8	IF_11
0x400788f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4002	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_12
0x4007893	          0x4889c7	                            mov rdi, rax	      4002	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_12
0x4007896	      0xe800000000	                          call 0x400789b	      4002	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_12
0x400789b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4003	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x400789f	        0x488945c8	             mov qword [rbp - 0x38], rax	      4003	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x40078a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x40078a7	        0x488b4008	                mov rax, qword [rax + 8]	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x40078ab	    0x4c8b80780200	            mov r8, qword [rax + 0x278] 	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x40078b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x40078b6	            0x89c2	                            mov edx, eax	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x40078b8	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x40078bd	            0x7406	                            je 0x40078c5	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x40078bf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x40078c3	            0xeb05	                           jmp 0x40078ca	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x40078c5	      0xb800000000	                              mov eax, 0	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x40078ca	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x40078ce	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x40078d2	            0x89d1	                            mov ecx, edx	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x40078d4	          0x4889c2	                            mov rdx, rax	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x40078d7	          0x41ffd0	                                 call r8	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x40078da	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4007	objcopy.c	FUNCTION_50	ELSE_3	IF_12
0x40078df	            0x7522	                           jne 0x4007903	      4007	objcopy.c	FUNCTION_50	ELSE_3	IF_12
0x40078e1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4009	objcopy.c	FUNCTION_50	ELSE_3	IF_12
0x40078e5	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4009	objcopy.c	FUNCTION_50	ELSE_3	IF_12
0x40078e8	          0x83e0fb	                     and eax, 0xfffffffb	      4009	objcopy.c	FUNCTION_50	ELSE_3	IF_12
0x40078eb	            0x89c2	                            mov edx, eax	      4009	objcopy.c	FUNCTION_50	ELSE_3	IF_12
0x40078ed	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4009	objcopy.c	FUNCTION_50	ELSE_3	IF_12
0x40078f1	          0x895020	             mov dword [rax + 0x20], edx	      4009	objcopy.c	FUNCTION_50	ELSE_3	IF_12
0x40078f4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4010	objcopy.c	FUNCTION_50	ELSE_3	IF_12	CALL_13
0x40078f8	          0x4889c7	                            mov rdi, rax	      4010	objcopy.c	FUNCTION_50	ELSE_3	IF_12	CALL_13
0x40078fb	      0xe800000000	                          call 0x4007900	      4010	objcopy.c	FUNCTION_50	ELSE_3	IF_12	CALL_13
0x4007900	            0xeb01	                           jmp 0x4007903	      4010	objcopy.c	FUNCTION_50	ELSE_3	IF_12	CALL_13
0x4007902	              0x90	                                     nop	      3927	objcopy.c	FUNCTION_50	IF_1
0x4007903	              0xc9	                                   leave	      4013	objcopy.c	FUNCTION_50
0x4007904	              0xc3	                                     ret	      4013	objcopy.c	FUNCTION_50
lookup_sym_redefinition	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1	28
0x400226d	              0x55	                                push rbp	      1674	objcopy.c	FUNCTION_28
0x400226e	          0x4889e5	                            mov rbp, rsp	      1674	objcopy.c	FUNCTION_28
0x4002271	        0x4883ec40	                           sub rsp, 0x40	      1674	objcopy.c	FUNCTION_28
0x4002275	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1674	objcopy.c	FUNCTION_28
0x4002279	    0x64488b042528	                mov rax, qword fs:[0x28]	      1674	objcopy.c	FUNCTION_28
0x4002282	        0x488945f8	                mov qword [rbp - 8], rax	      1674	objcopy.c	FUNCTION_28
0x4002286	            0x31c0	                            xor eax, eax	      1674	objcopy.c	FUNCTION_28
0x4002288	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1675	objcopy.c	FUNCTION_28
0x400228c	        0x488945e0	             mov qword [rbp - 0x20], rax	      1675	objcopy.c	FUNCTION_28
0x4002290	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1675	objcopy.c	FUNCTION_28
0x4002298	    0x488b05000000	            mov rax, qword [0x0400229f] 	      1677	objcopy.c	FUNCTION_28	CALL_1
0x400229f	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1676	objcopy.c	FUNCTION_28
0x40022a3	          0x4889d6	                            mov rsi, rdx	      1676	objcopy.c	FUNCTION_28
0x40022a6	          0x4889c7	                            mov rdi, rax	      1676	objcopy.c	FUNCTION_28
0x40022a9	      0xe800000000	                          call 0x40022ae	      1676	objcopy.c	FUNCTION_28
0x40022ae	        0x488945d8	             mov qword [rbp - 0x28], rax	      1676	objcopy.c	FUNCTION_28
0x40022b2	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1679	objcopy.c	FUNCTION_28
0x40022b7	            0x740a	                            je 0x40022c3	      1679	objcopy.c	FUNCTION_28
0x40022b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1679	objcopy.c	FUNCTION_28
0x40022bd	        0x488b4008	                mov rax, qword [rax + 8]	      1679	objcopy.c	FUNCTION_28
0x40022c1	            0xeb04	                           jmp 0x40022c7	      1679	objcopy.c	FUNCTION_28
0x40022c3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1679	objcopy.c	FUNCTION_28
0x40022c7	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1680	objcopy.c	FUNCTION_28
0x40022cb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1680	objcopy.c	FUNCTION_28
0x40022d4	            0x7405	                            je 0x40022db	      1680	objcopy.c	FUNCTION_28
0x40022d6	      0xe800000000	                          call 0x40022db	      1680	objcopy.c	FUNCTION_28
0x40022db	              0xc9	                                   leave	      1680	objcopy.c	FUNCTION_28
0x40022dc	              0xc3	                                     ret	      1680	objcopy.c	FUNCTION_28
find_section_rename	IF,2:FOR,1:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1	37
0x4006d7f	              0x55	                                push rbp	      3624	objcopy.c	FUNCTION_43
0x4006d80	          0x4889e5	                            mov rbp, rsp	      3624	objcopy.c	FUNCTION_43
0x4006d83	        0x4883ec20	                           sub rsp, 0x20	      3624	objcopy.c	FUNCTION_43
0x4006d87	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3624	objcopy.c	FUNCTION_43
0x4006d8b	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3624	objcopy.c	FUNCTION_43
0x4006d8f	    0x488b05000000	            mov rax, qword [0x04006d96] 	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4006d96	        0x488945f8	                mov qword [rbp - 8], rax	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4006d9a	            0xeb50	                           jmp 0x4006dec	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4006d9c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4006da0	          0x488b00	                    mov rax, qword [rax]	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4006da3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4006da7	          0x4889d6	                            mov rsi, rdx	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4006daa	          0x4889c7	                            mov rdi, rax	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4006dad	      0xe800000000	                          call 0x4006db2	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4006db2	            0x85c0	                           test eax, eax	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4006db4	            0x752a	                           jne 0x4006de0	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4006db6	      0x48837de000	               cmp qword [rbp - 0x20], 0	      3630	objcopy.c	FUNCTION_43	FOR_1	IF_1	IF_2
0x4006dbb	            0x7419	                            je 0x4006dd6	      3630	objcopy.c	FUNCTION_43	FOR_1	IF_1	IF_2
0x4006dbd	        0x488b45f8	                mov rax, qword [rbp - 8]	      3630	objcopy.c	FUNCTION_43	FOR_1	IF_1	IF_2
0x4006dc1	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3630	objcopy.c	FUNCTION_43	FOR_1	IF_1	IF_2
0x4006dc4	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3630	objcopy.c	FUNCTION_43	FOR_1	IF_1	IF_2
0x4006dc7	            0x740d	                            je 0x4006dd6	      3630	objcopy.c	FUNCTION_43	FOR_1	IF_1	IF_2
0x4006dc9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3631	objcopy.c	FUNCTION_43	FOR_1	IF_1	IF_2
0x4006dcd	          0x8b5010	            mov edx, dword [rax + 0x10] 	      3631	objcopy.c	FUNCTION_43	FOR_1	IF_1	IF_2
0x4006dd0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3631	objcopy.c	FUNCTION_43	FOR_1	IF_1	IF_2
0x4006dd4	            0x8910	                    mov dword [rax], edx	      3631	objcopy.c	FUNCTION_43	FOR_1	IF_1	IF_2
0x4006dd6	        0x488b45f8	                mov rax, qword [rbp - 8]	      3633	objcopy.c	FUNCTION_43	FOR_1	IF_1
0x4006dda	        0x488b4008	                mov rax, qword [rax + 8]	      3633	objcopy.c	FUNCTION_43	FOR_1	IF_1
0x4006dde	            0xeb17	                           jmp 0x4006df7	      3633	objcopy.c	FUNCTION_43	FOR_1	IF_1
0x4006de0	        0x488b45f8	                mov rax, qword [rbp - 8]	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4006de4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4006de8	        0x488945f8	                mov qword [rbp - 8], rax	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4006dec	      0x48837df800	                  cmp qword [rbp - 8], 0	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4006df1	            0x75a9	                           jne 0x4006d9c	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4006df3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3636	objcopy.c	FUNCTION_43
0x4006df7	              0xc9	                                   leave	      3637	objcopy.c	FUNCTION_43
0x4006df8	              0xc3	                                     ret	      3637	objcopy.c	FUNCTION_43
is_dwo_section	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2	26
0x40012e4	              0x55	                                push rbp	      1230	objcopy.c	FUNCTION_18
0x40012e5	          0x4889e5	                            mov rbp, rsp	      1230	objcopy.c	FUNCTION_18
0x40012e8	        0x4883ec20	                           sub rsp, 0x20	      1230	objcopy.c	FUNCTION_18
0x40012ec	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1230	objcopy.c	FUNCTION_18
0x40012f0	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1230	objcopy.c	FUNCTION_18
0x40012f4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1231	objcopy.c	FUNCTION_18
0x40012f8	          0x488b00	                    mov rax, qword [rax]	      1231	objcopy.c	FUNCTION_18
0x40012fb	        0x488945f8	                mov qword [rbp - 8], rax	      1231	objcopy.c	FUNCTION_18
0x40012ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      1232	objcopy.c	FUNCTION_18	CALL_1
0x4001303	          0x4889c7	                            mov rdi, rax	      1232	objcopy.c	FUNCTION_18	CALL_1
0x4001306	      0xe800000000	                          call 0x400130b	      1232	objcopy.c	FUNCTION_18	CALL_1
0x400130b	          0x8945f4	              mov dword [rbp - 0xc], eax	      1232	objcopy.c	FUNCTION_18	CALL_1
0x400130e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4001311	            0x4898	                                    cdqe	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4001313	        0x488d50fc	                      lea rdx, [rax - 4]	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4001317	        0x488b45f8	                mov rax, qword [rbp - 8]	      1234	objcopy.c	FUNCTION_18	CALL_2
0x400131b	          0x4801d0	                            add rax, rdx	      1234	objcopy.c	FUNCTION_18	CALL_2
0x400131e	      0xba04000000	                              mov edx, 4	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4001323	      0xbe00000000	                              mov esi, 0	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4001328	          0x4889c7	                            mov rdi, rax	      1234	objcopy.c	FUNCTION_18	CALL_2
0x400132b	      0xe800000000	                          call 0x4001330	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4001330	            0x85c0	                           test eax, eax	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4001332	           0xf94c0	                                 sete al	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4001335	           0xfb6c0	                           movzx eax, al	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4001338	              0xc9	                                   leave	      1235	objcopy.c	FUNCTION_18
0x4001339	              0xc3	                                     ret	      1235	objcopy.c	FUNCTION_18
compare_section_lma	IF,7:FOR,0:ELSE,3:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,0	88
0x4007e7a	              0x55	                                push rbp	      4159	objcopy.c	FUNCTION_53
0x4007e7b	          0x4889e5	                            mov rbp, rsp	      4159	objcopy.c	FUNCTION_53
0x4007e7e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4159	objcopy.c	FUNCTION_53
0x4007e82	        0x488975d0	             mov qword [rbp - 0x30], rsi	      4159	objcopy.c	FUNCTION_53
0x4007e86	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4160	objcopy.c	FUNCTION_53
0x4007e8a	        0x488945f0	             mov qword [rbp - 0x10], rax	      4160	objcopy.c	FUNCTION_53
0x4007e8e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4161	objcopy.c	FUNCTION_53
0x4007e92	        0x488945f8	                mov qword [rbp - 8], rax	      4161	objcopy.c	FUNCTION_53
0x4007e96	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4165	objcopy.c	FUNCTION_53
0x4007e9a	          0x488b00	                    mov rax, qword [rax]	      4165	objcopy.c	FUNCTION_53
0x4007e9d	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4165	objcopy.c	FUNCTION_53
0x4007ea0	          0x8945e8	             mov dword [rbp - 0x18], eax	      4165	objcopy.c	FUNCTION_53
0x4007ea3	        0x488b45f8	                mov rax, qword [rbp - 8]	      4166	objcopy.c	FUNCTION_53
0x4007ea7	          0x488b00	                    mov rax, qword [rax]	      4166	objcopy.c	FUNCTION_53
0x4007eaa	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4166	objcopy.c	FUNCTION_53
0x4007ead	          0x8945ec	             mov dword [rbp - 0x14], eax	      4166	objcopy.c	FUNCTION_53
0x4007eb0	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      4167	objcopy.c	FUNCTION_53	IF_1
0x4007eb3	      0x2500010000	                          and eax, 0x100	      4167	objcopy.c	FUNCTION_53	IF_1
0x4007eb8	            0x85c0	                           test eax, eax	      4167	objcopy.c	FUNCTION_53	IF_1
0x4007eba	            0x740a	                            je 0x4007ec6	      4167	objcopy.c	FUNCTION_53	IF_1
0x4007ebc	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      4168	objcopy.c	FUNCTION_53	IF_1
0x4007ebf	          0x83e002	                              and eax, 2	      4168	objcopy.c	FUNCTION_53	IF_1
0x4007ec2	            0x85c0	                           test eax, eax	      4168	objcopy.c	FUNCTION_53	IF_1
0x4007ec4	            0x7520	                           jne 0x4007ee6	      4168	objcopy.c	FUNCTION_53	IF_1
0x4007ec6	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4170	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4007ec9	      0x2500010000	                          and eax, 0x100	      4170	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4007ece	            0x85c0	                           test eax, eax	      4170	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4007ed0	            0x7434	                            je 0x4007f06	      4170	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4007ed2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4171	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4007ed5	          0x83e002	                              and eax, 2	      4171	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4007ed8	            0x85c0	                           test eax, eax	      4171	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4007eda	            0x742a	                            je 0x4007f06	      4171	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4007edc	      0xb8ffffffff	                     mov eax, 0xffffffff	      4172	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4007ee1	      0xe9ae000000	                           jmp 0x4007f94	      4172	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4007ee6	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4176	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x4007ee9	      0x2500010000	                          and eax, 0x100	      4176	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x4007eee	            0x85c0	                           test eax, eax	      4176	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x4007ef0	            0x740a	                            je 0x4007efc	      4176	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x4007ef2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4177	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x4007ef5	          0x83e002	                              and eax, 2	      4177	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x4007ef8	            0x85c0	                           test eax, eax	      4177	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x4007efa	            0x750b	                           jne 0x4007f07	      4177	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x4007efc	      0xb801000000	                              mov eax, 1	      4178	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x4007f01	      0xe98e000000	                           jmp 0x4007f94	      4178	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x4007f06	              0x90	                                     nop	      4170	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4007f07	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4182	objcopy.c	FUNCTION_53	IF_4
0x4007f0b	          0x488b00	                    mov rax, qword [rax]	      4182	objcopy.c	FUNCTION_53	IF_4
0x4007f0e	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4182	objcopy.c	FUNCTION_53	IF_4
0x4007f12	        0x488b45f8	                mov rax, qword [rbp - 8]	      4182	objcopy.c	FUNCTION_53	IF_4
0x4007f16	          0x488b00	                    mov rax, qword [rax]	      4182	objcopy.c	FUNCTION_53	IF_4
0x4007f19	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4182	objcopy.c	FUNCTION_53	IF_4
0x4007f1d	          0x4839c2	                            cmp rdx, rax	      4182	objcopy.c	FUNCTION_53	IF_4
0x4007f20	            0x7607	                           jbe 0x4007f29	      4182	objcopy.c	FUNCTION_53	IF_4
0x4007f22	      0xb801000000	                              mov eax, 1	      4183	objcopy.c	FUNCTION_53	IF_4
0x4007f27	            0xeb6b	                           jmp 0x4007f94	      4183	objcopy.c	FUNCTION_53	IF_4
0x4007f29	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4184	objcopy.c	FUNCTION_53	ELSE_2	IF_5
0x4007f2d	          0x488b00	                    mov rax, qword [rax]	      4184	objcopy.c	FUNCTION_53	ELSE_2	IF_5
0x4007f30	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4184	objcopy.c	FUNCTION_53	ELSE_2	IF_5
0x4007f34	        0x488b45f8	                mov rax, qword [rbp - 8]	      4184	objcopy.c	FUNCTION_53	ELSE_2	IF_5
0x4007f38	          0x488b00	                    mov rax, qword [rax]	      4184	objcopy.c	FUNCTION_53	ELSE_2	IF_5
0x4007f3b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4184	objcopy.c	FUNCTION_53	ELSE_2	IF_5
0x4007f3f	          0x4839c2	                            cmp rdx, rax	      4184	objcopy.c	FUNCTION_53	ELSE_2	IF_5
0x4007f42	            0x7307	                           jae 0x4007f4b	      4184	objcopy.c	FUNCTION_53	ELSE_2	IF_5
0x4007f44	      0xb8ffffffff	                     mov eax, 0xffffffff	      4185	objcopy.c	FUNCTION_53	ELSE_2	IF_5
0x4007f49	            0xeb49	                           jmp 0x4007f94	      4185	objcopy.c	FUNCTION_53	ELSE_2	IF_5
0x4007f4b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4188	objcopy.c	FUNCTION_53	IF_6
0x4007f4f	          0x488b00	                    mov rax, qword [rax]	      4188	objcopy.c	FUNCTION_53	IF_6
0x4007f52	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4188	objcopy.c	FUNCTION_53	IF_6
0x4007f56	        0x488b45f8	                mov rax, qword [rbp - 8]	      4188	objcopy.c	FUNCTION_53	IF_6
0x4007f5a	          0x488b00	                    mov rax, qword [rax]	      4188	objcopy.c	FUNCTION_53	IF_6
0x4007f5d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4188	objcopy.c	FUNCTION_53	IF_6
0x4007f61	          0x4839c2	                            cmp rdx, rax	      4188	objcopy.c	FUNCTION_53	IF_6
0x4007f64	            0x7607	                           jbe 0x4007f6d	      4188	objcopy.c	FUNCTION_53	IF_6
0x4007f66	      0xb801000000	                              mov eax, 1	      4189	objcopy.c	FUNCTION_53	IF_6
0x4007f6b	            0xeb27	                           jmp 0x4007f94	      4189	objcopy.c	FUNCTION_53	IF_6
0x4007f6d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4007f71	          0x488b00	                    mov rax, qword [rax]	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4007f74	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4007f78	        0x488b45f8	                mov rax, qword [rbp - 8]	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4007f7c	          0x488b00	                    mov rax, qword [rax]	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4007f7f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4007f83	          0x4839c2	                            cmp rdx, rax	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4007f86	            0x7307	                           jae 0x4007f8f	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4007f88	      0xb8ffffffff	                     mov eax, 0xffffffff	      4191	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4007f8d	            0xeb05	                           jmp 0x4007f94	      4191	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4007f8f	      0xb800000000	                              mov eax, 0	      4193	objcopy.c	FUNCTION_53
0x4007f94	              0x5d	                                 pop rbp	      4194	objcopy.c	FUNCTION_53
0x4007f95	              0xc3	                                     ret	      4194	objcopy.c	FUNCTION_53
add_specific_symbol_node	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1	17
0x4000d80	              0x55	                                push rbp	      1027	objcopy.c	FUNCTION_13
0x4000d81	          0x4889e5	                            mov rbp, rsp	      1027	objcopy.c	FUNCTION_13
0x4000d84	        0x4883ec10	                           sub rsp, 0x10	      1027	objcopy.c	FUNCTION_13
0x4000d88	        0x48897df8	                mov qword [rbp - 8], rdi	      1027	objcopy.c	FUNCTION_13
0x4000d8c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1027	objcopy.c	FUNCTION_13
0x4000d90	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000d94	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000d98	      0xba01000000	                              mov edx, 1	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000d9d	          0x4889ce	                            mov rsi, rcx	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000da0	          0x4889c7	                            mov rdi, rax	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000da3	      0xe800000000	                          call 0x4000da8	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000da8	          0x4889c2	                            mov rdx, rax	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000dab	        0x488b45f8	                mov rax, qword [rbp - 8]	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000daf	          0x488902	                    mov qword [rdx], rax	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000db2	              0x90	                                     nop	      1029	objcopy.c	FUNCTION_13
0x4000db3	              0xc9	                                   leave	      1029	objcopy.c	FUNCTION_13
0x4000db4	              0xc3	                                     ret	      1029	objcopy.c	FUNCTION_13
is_hidden_symbol	IF,1:FOR,0:ELSE,0:DO,0:SWITCH,1:functions,0:WHILE,0:CALL,2	36
0x4001785	              0x55	                                push rbp	      1399	objcopy.c	FUNCTION_24
0x4001786	          0x4889e5	                            mov rbp, rsp	      1399	objcopy.c	FUNCTION_24
0x4001789	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1399	objcopy.c	FUNCTION_24
0x400178d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1402	objcopy.c	FUNCTION_24	CALL_1
0x4001791	          0x488b00	                    mov rax, qword [rax]	      1402	objcopy.c	FUNCTION_24	CALL_1
0x4001794	          0x4885c0	                           test rax, rax	      1402	objcopy.c	FUNCTION_24	CALL_1
0x4001797	            0x742c	                            je 0x40017c5	      1402	objcopy.c	FUNCTION_24	CALL_1
0x4001799	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1402	objcopy.c	FUNCTION_24	CALL_1
0x400179d	          0x488b00	                    mov rax, qword [rax]	      1402	objcopy.c	FUNCTION_24	CALL_1
0x40017a0	        0x488b4008	                mov rax, qword [rax + 8]	      1402	objcopy.c	FUNCTION_24	CALL_1
0x40017a4	          0x8b4008	                mov eax, dword [rax + 8]	      1402	objcopy.c	FUNCTION_24	CALL_1
0x40017a7	          0x83f805	                              cmp eax, 5	      1402	objcopy.c	FUNCTION_24	CALL_1
0x40017aa	            0x7519	                           jne 0x40017c5	      1402	objcopy.c	FUNCTION_24	CALL_1
0x40017ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1402	objcopy.c	FUNCTION_24	CALL_1
0x40017b0	          0x488b00	                    mov rax, qword [rax]	      1402	objcopy.c	FUNCTION_24	CALL_1
0x40017b3	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1402	objcopy.c	FUNCTION_24	CALL_1
0x40017ba	          0x4885c0	                           test rax, rax	      1402	objcopy.c	FUNCTION_24	CALL_1
0x40017bd	            0x7406	                            je 0x40017c5	      1402	objcopy.c	FUNCTION_24	CALL_1
0x40017bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1402	objcopy.c	FUNCTION_24	CALL_1
0x40017c3	            0xeb05	                           jmp 0x40017ca	      1402	objcopy.c	FUNCTION_24	CALL_1
0x40017c5	      0xb800000000	                              mov eax, 0	      1402	objcopy.c	FUNCTION_24	CALL_1
0x40017ca	        0x488945f8	                mov qword [rbp - 8], rax	      1402	objcopy.c	FUNCTION_24	CALL_1
0x40017ce	      0x48837df800	                  cmp qword [rbp - 8], 0	      1403	objcopy.c	FUNCTION_24	IF_1
0x40017d3	            0x741d	                            je 0x40017f2	      1403	objcopy.c	FUNCTION_24	IF_1
0x40017d5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1404	objcopy.c	FUNCTION_24	IF_1	SWITCH_1	CALL_2
0x40017d9	         0xfb64049	           movzx eax, byte [rax + 0x49] 	      1404	objcopy.c	FUNCTION_24	IF_1	SWITCH_1	CALL_2
0x40017dd	           0xfb6c0	                           movzx eax, al	      1404	objcopy.c	FUNCTION_24	IF_1	SWITCH_1	CALL_2
0x40017e0	          0x83e003	                              and eax, 3	      1404	objcopy.c	FUNCTION_24	IF_1	SWITCH_1	CALL_2
0x40017e3	          0x83e801	                              sub eax, 1	      1404	objcopy.c	FUNCTION_24	IF_1	SWITCH_1	CALL_2
0x40017e6	          0x83f801	                              cmp eax, 1	      1404	objcopy.c	FUNCTION_24	IF_1	SWITCH_1	CALL_2
0x40017e9	            0x7707	                            ja 0x40017f2	      1404	objcopy.c	FUNCTION_24	IF_1	SWITCH_1	CALL_2
0x40017eb	      0xb801000000	                              mov eax, 1	      1408	objcopy.c	FUNCTION_24	IF_1	SWITCH_1
0x40017f0	            0xeb05	                           jmp 0x40017f7	      1408	objcopy.c	FUNCTION_24	IF_1	SWITCH_1
0x40017f2	      0xb800000000	                              mov eax, 0	      1410	objcopy.c	FUNCTION_24
0x40017f7	              0x5d	                                 pop rbp	      1411	objcopy.c	FUNCTION_24
0x40017f8	              0xc3	                                     ret	      1411	objcopy.c	FUNCTION_24
create_symbol2redef_htab	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1	11
0x4000c55	              0x55	                                push rbp	       980	objcopy.c	FUNCTION_8
0x4000c56	          0x4889e5	                            mov rbp, rsp	       980	objcopy.c	FUNCTION_8
0x4000c59	    0x41b900000000	                              mov r9d, 0	       981	objcopy.c	FUNCTION_8	CALL_1
0x4000c5f	    0x41b800000000	                              mov r8d, 0	       981	objcopy.c	FUNCTION_8	CALL_1
0x4000c65	      0xb900000000	                              mov ecx, 0	       981	objcopy.c	FUNCTION_8	CALL_1
0x4000c6a	      0xba00000000	                              mov edx, 0	       981	objcopy.c	FUNCTION_8	CALL_1
0x4000c6f	      0xbe00000000	                              mov esi, 0	       981	objcopy.c	FUNCTION_8	CALL_1
0x4000c74	      0xbf10000000	                           mov edi, 0x10	       981	objcopy.c	FUNCTION_8	CALL_1
0x4000c79	      0xe800000000	                          call 0x4000c7e	       981	objcopy.c	FUNCTION_8	CALL_1
0x4000c7e	              0x5d	                                 pop rbp	       983	objcopy.c	FUNCTION_8
0x4000c7f	              0xc3	                                     ret	       983	objcopy.c	FUNCTION_8
set_long_section_mode	IF,2:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2	40
0x4006718	              0x55	                                push rbp	      3411	objcopy.c	FUNCTION_40
0x4006719	          0x4889e5	                            mov rbp, rsp	      3411	objcopy.c	FUNCTION_40
0x400671c	        0x4883ec20	                           sub rsp, 0x20	      3411	objcopy.c	FUNCTION_40
0x4006720	        0x48897df8	                mov qword [rbp - 8], rdi	      3411	objcopy.c	FUNCTION_40
0x4006724	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3411	objcopy.c	FUNCTION_40
0x4006728	          0x8955ec	             mov dword [rbp - 0x14], edx	      3411	objcopy.c	FUNCTION_40
0x400672b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3413	objcopy.c	FUNCTION_40	IF_1
0x400672f	        0x488b4008	                mov rax, qword [rax + 8]	      3413	objcopy.c	FUNCTION_40	IF_1
0x4006733	          0x8b4008	                mov eax, dword [rax + 8]	      3413	objcopy.c	FUNCTION_40	IF_1
0x4006736	          0x83f802	                              cmp eax, 2	      3413	objcopy.c	FUNCTION_40	IF_1
0x4006739	            0x755b	                           jne 0x4006796	      3413	objcopy.c	FUNCTION_40	IF_1
0x400673b	        0x837dec02	               cmp dword [rbp - 0x14], 2	      3415	objcopy.c	FUNCTION_40	IF_1	IF_2
0x400673f	            0x752d	                           jne 0x400676e	      3415	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4006741	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3416	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4006745	        0x488b4008	                mov rax, qword [rax + 8]	      3416	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4006749	          0x8b4008	                mov eax, dword [rax + 8]	      3416	objcopy.c	FUNCTION_40	IF_1	IF_2
0x400674c	          0x83f802	                              cmp eax, 2	      3416	objcopy.c	FUNCTION_40	IF_1	IF_2
0x400674f	            0x751d	                           jne 0x400676e	      3416	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4006751	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x4006755	        0x488b4008	                mov rax, qword [rax + 8]	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x4006759	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x4006760	          0x8b4074	            mov eax, dword [rax + 0x74] 	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x4006763	            0x85c0	                           test eax, eax	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x4006765	           0xf95c0	                                setne al	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x4006768	           0xfb6c0	                           movzx eax, al	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x400676b	          0x8945ec	             mov dword [rbp - 0x14], eax	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x400676e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x4006772	        0x488b4008	                mov rax, qword [rax + 8]	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x4006776	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x400677d	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x4006781	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x4006785	           0xf95c2	                                setne dl	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x4006788	           0xfb6ca	                           movzx ecx, dl	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x400678b	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x400678f	            0x89ce	                            mov esi, ecx	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x4006791	          0x4889d7	                            mov rdi, rdx	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x4006794	            0xffd0	                                call rax	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x4006796	              0x90	                                     nop	      3420	objcopy.c	FUNCTION_40
0x4006797	              0xc9	                                   leave	      3420	objcopy.c	FUNCTION_40
0x4006798	              0xc3	                                     ret	      3420	objcopy.c	FUNCTION_40
find_section_list	IF,12:FOR,1:ELSE,2:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,10	179
0x4000969	              0x55	                                push rbp	       876	objcopy.c	FUNCTION_5
0x400096a	          0x4889e5	                            mov rbp, rsp	       876	objcopy.c	FUNCTION_5
0x400096d	        0x4883ec20	                           sub rsp, 0x20	       876	objcopy.c	FUNCTION_5
0x4000971	        0x48897de8	             mov qword [rbp - 0x18], rdi	       876	objcopy.c	FUNCTION_5
0x4000975	          0x8975e4	             mov dword [rbp - 0x1c], esi	       876	objcopy.c	FUNCTION_5
0x4000978	          0x8955e0	             mov dword [rbp - 0x20], edx	       876	objcopy.c	FUNCTION_5
0x400097b	    0x48c745f80000	                  mov qword [rbp - 8], 0	       877	objcopy.c	FUNCTION_5
0x4000983	    0x488b05000000	            mov rax, qword [0x0400098a] 	       881	objcopy.c	FUNCTION_5	FOR_1
0x400098a	        0x488945f0	             mov qword [rbp - 0x10], rax	       881	objcopy.c	FUNCTION_5	FOR_1
0x400098e	      0xe9c0010000	                           jmp 0x4000b53	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000993	        0x837de400	               cmp dword [rbp - 0x1c], 0	       883	objcopy.c	FUNCTION_5	FOR_1	IF_1
0x4000997	     0xf8426010000	                            je 0x4000ac3	       883	objcopy.c	FUNCTION_5	FOR_1	IF_1
0x400099d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40009a1	        0x488b4008	                mov rax, qword [rax + 8]	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40009a5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40009a9	          0x4889d6	                            mov rsi, rdx	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40009ac	          0x4889c7	                            mov rdi, rax	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40009af	      0xe800000000	                          call 0x40009b4	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40009b4	            0x85c0	                           test eax, eax	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40009b6	     0xf858c010000	                           jne 0x4000b48	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40009bc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       888	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009c0	          0x8b4014	            mov eax, dword [rax + 0x14] 	       888	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009c3	          0x83e001	                              and eax, 1	       888	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009c6	            0x85c0	                           test eax, eax	       888	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009c8	            0x740a	                            je 0x40009d4	       888	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009ca	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       889	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009cd	          0x83e002	                              and eax, 2	       889	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009d0	            0x85c0	                           test eax, eax	       889	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009d2	            0x7518	                           jne 0x40009ec	       889	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009d4	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       890	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009d7	          0x83e001	                              and eax, 1	       890	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009da	            0x85c0	                           test eax, eax	       890	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009dc	            0x742f	                            je 0x4000a0d	       890	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       891	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009e2	          0x8b4014	            mov eax, dword [rax + 0x14] 	       891	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009e5	          0x83e002	                              and eax, 2	       891	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009e8	            0x85c0	                           test eax, eax	       891	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009ea	            0x7421	                            je 0x4000a0d	       891	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x40009ec	      0xbf00000000	                              mov edi, 0	       892	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x40009f1	      0xe800000000	                          call 0x40009f6	       892	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x40009f6	          0x4889c2	                            mov rdx, rax	       892	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x40009f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       892	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x40009fd	          0x4889c6	                            mov rsi, rax	       892	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x4000a00	          0x4889d7	                            mov rdi, rdx	       892	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x4000a03	      0xb800000000	                              mov eax, 0	       892	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x4000a08	      0xe800000000	                          call 0x4000a0d	       892	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x4000a0d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       894	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000a11	          0x8b4014	            mov eax, dword [rax + 0x14] 	       894	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000a14	          0x83e004	                              and eax, 4	       894	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000a17	            0x85c0	                           test eax, eax	       894	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000a19	            0x740a	                            je 0x4000a25	       894	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000a1b	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       895	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000a1e	          0x83e008	                              and eax, 8	       895	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000a21	            0x85c0	                           test eax, eax	       895	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000a23	            0x7514	                           jne 0x4000a39	       895	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000a25	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       896	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000a28	          0x83e004	                              and eax, 4	       896	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000a2b	            0x85c0	                           test eax, eax	       896	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000a2d	            0x742b	                            je 0x4000a5a	       896	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000a2f	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       897	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000a32	          0x83e008	                              and eax, 8	       897	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000a35	            0x85c0	                           test eax, eax	       897	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000a37	            0x7421	                            je 0x4000a5a	       897	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000a39	      0xbf00000000	                              mov edi, 0	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000a3e	      0xe800000000	                          call 0x4000a43	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000a43	          0x4889c2	                            mov rdx, rax	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000a46	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000a4a	          0x4889c6	                            mov rsi, rax	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000a4d	          0x4889d7	                            mov rdi, rdx	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000a50	      0xb800000000	                              mov eax, 0	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000a55	      0xe800000000	                          call 0x4000a5a	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000a5a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       900	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000a5e	          0x8b4014	            mov eax, dword [rax + 0x14] 	       900	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000a61	          0x83e010	                           and eax, 0x10	       900	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000a64	            0x85c0	                           test eax, eax	       900	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000a66	            0x740a	                            je 0x4000a72	       900	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000a68	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       901	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000a6b	          0x83e020	                           and eax, 0x20	       901	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000a6e	            0x85c0	                           test eax, eax	       901	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000a70	            0x7514	                           jne 0x4000a86	       901	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000a72	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       902	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000a75	          0x83e010	                           and eax, 0x10	       902	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000a78	            0x85c0	                           test eax, eax	       902	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000a7a	            0x742b	                            je 0x4000aa7	       902	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000a7c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       903	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000a7f	          0x83e020	                           and eax, 0x20	       903	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000a82	            0x85c0	                           test eax, eax	       903	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000a84	            0x7421	                            je 0x4000aa7	       903	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000a86	      0xbf00000000	                              mov edi, 0	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x4000a8b	      0xe800000000	                          call 0x4000a90	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x4000a90	          0x4889c2	                            mov rdx, rax	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x4000a93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x4000a97	          0x4889c6	                            mov rsi, rax	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x4000a9a	          0x4889d7	                            mov rdi, rdx	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x4000a9d	      0xb800000000	                              mov eax, 0	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x4000aa2	      0xe800000000	                          call 0x4000aa7	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x4000aa7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       907	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4000aab	          0x8b4014	            mov eax, dword [rax + 0x14] 	       907	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4000aae	           0xb45e0	              or eax, dword [rbp - 0x20]	       907	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4000ab1	            0x89c2	                            mov edx, eax	       907	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4000ab3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       907	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4000ab7	          0x895014	             mov dword [rax + 0x14], edx	       907	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4000aba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       908	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4000abe	      0xe928010000	                           jmp 0x4000beb	       908	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4000ac3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4000ac7	          0x8b4014	            mov eax, dword [rax + 0x14] 	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4000aca	          0x2345e0	             and eax, dword [rbp - 0x20]	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4000acd	            0x85c0	                           test eax, eax	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4000acf	            0x7477	                            je 0x4000b48	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4000ad1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4000ad5	        0x488b4008	                mov rax, qword [rax + 8]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4000ad9	           0xfb600	                   movzx eax, byte [rax]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4000adc	            0x3c21	                            cmp al, 0x21	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4000ade	            0x7539	                           jne 0x4000b19	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4000ae0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000ae4	        0x488b4008	                mov rax, qword [rax + 8]	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000ae8	        0x488d4801	                      lea rcx, [rax + 1]	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000aec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000af0	      0xba00000000	                              mov edx, 0	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000af5	          0x4889c6	                            mov rsi, rax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000af8	          0x4889cf	                            mov rdi, rcx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000afb	      0xe800000000	                          call 0x4000b00	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000b00	            0x85c0	                           test eax, eax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000b02	            0x7544	                           jne 0x4000b48	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000b04	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4000b08	    0xc74010010000	               mov dword [rax + 0x10], 1	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4000b0f	      0xb800000000	                              mov eax, 0	       923	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4000b14	      0xe9d2000000	                           jmp 0x4000beb	       923	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4000b19	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000b1d	        0x488b4008	                mov rax, qword [rax + 8]	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000b21	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000b25	      0xba00000000	                              mov edx, 0	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000b2a	          0x4889ce	                            mov rsi, rcx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000b2d	          0x4889c7	                            mov rdi, rax	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000b30	      0xe800000000	                          call 0x4000b35	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000b35	            0x85c0	                           test eax, eax	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000b37	            0x750f	                           jne 0x4000b48	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000b39	      0x48837df800	                  cmp qword [rbp - 8], 0	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000b3e	            0x7508	                           jne 0x4000b48	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000b40	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       931	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000b44	        0x488945f8	                mov qword [rbp - 8], rax	       931	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000b48	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000b4c	          0x488b00	                    mov rax, qword [rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000b4f	        0x488945f0	             mov qword [rbp - 0x10], rax	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000b53	      0x48837df000	               cmp qword [rbp - 0x10], 0	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000b58	     0xf8535feffff	                           jne 0x4000993	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000b5e	        0x837de400	               cmp dword [rbp - 0x1c], 0	       937	objcopy.c	FUNCTION_5	IF_11
0x4000b62	            0x7518	                           jne 0x4000b7c	       937	objcopy.c	FUNCTION_5	IF_11
0x4000b64	      0x48837df800	                  cmp qword [rbp - 8], 0	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000b69	            0x740b	                            je 0x4000b76	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000b6b	        0x488b45f8	                mov rax, qword [rbp - 8]	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000b6f	    0xc74010010000	               mov dword [rax + 0x10], 1	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000b76	        0x488b45f8	                mov rax, qword [rbp - 8]	       941	objcopy.c	FUNCTION_5	IF_11
0x4000b7a	            0xeb6f	                           jmp 0x4000beb	       941	objcopy.c	FUNCTION_5	IF_11
0x4000b7c	      0xbf30000000	                           mov edi, 0x30	       944	objcopy.c	FUNCTION_5	CALL_10
0x4000b81	      0xe800000000	                          call 0x4000b86	       944	objcopy.c	FUNCTION_5	CALL_10
0x4000b86	        0x488945f0	             mov qword [rbp - 0x10], rax	       944	objcopy.c	FUNCTION_5	CALL_10
0x4000b8a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       945	objcopy.c	FUNCTION_5
0x4000b8e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       945	objcopy.c	FUNCTION_5
0x4000b92	        0x48895008	                mov qword [rax + 8], rdx	       945	objcopy.c	FUNCTION_5
0x4000b96	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       946	objcopy.c	FUNCTION_5
0x4000b9a	    0xc74010000000	               mov dword [rax + 0x10], 0	       946	objcopy.c	FUNCTION_5
0x4000ba1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       947	objcopy.c	FUNCTION_5
0x4000ba5	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       947	objcopy.c	FUNCTION_5
0x4000ba8	          0x895014	             mov dword [rax + 0x14], edx	       947	objcopy.c	FUNCTION_5
0x4000bab	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       948	objcopy.c	FUNCTION_5
0x4000baf	    0x48c740180000	               mov qword [rax + 0x18], 0	       948	objcopy.c	FUNCTION_5
0x4000bb7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       949	objcopy.c	FUNCTION_5
0x4000bbb	    0x48c740200000	               mov qword [rax + 0x20], 0	       949	objcopy.c	FUNCTION_5
0x4000bc3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       950	objcopy.c	FUNCTION_5
0x4000bc7	    0xc74028000000	               mov dword [rax + 0x28], 0	       950	objcopy.c	FUNCTION_5
0x4000bce	    0x488b15000000	            mov rdx, qword [0x04000bd5] 	       951	objcopy.c	FUNCTION_5
0x4000bd5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       951	objcopy.c	FUNCTION_5
0x4000bd9	          0x488910	                    mov qword [rax], rdx	       951	objcopy.c	FUNCTION_5
0x4000bdc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       952	objcopy.c	FUNCTION_5
0x4000be0	    0x488905000000	            mov qword [0x04000be7], rax 	       952	objcopy.c	FUNCTION_5
0x4000be7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       954	objcopy.c	FUNCTION_5
0x4000beb	              0xc9	                                   leave	       955	objcopy.c	FUNCTION_5
0x4000bec	              0xc3	                                     ret	       955	objcopy.c	FUNCTION_5
bfd_set_section_vma	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,0	19
0x4000040	              0x55	                                push rbp	      1686	bfd.h	FUNCTION_65
0x4000041	          0x4889e5	                            mov rbp, rsp	      1686	bfd.h	FUNCTION_65
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	      1686	bfd.h	FUNCTION_65
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1686	bfd.h	FUNCTION_65
0x400004c	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1686	bfd.h	FUNCTION_65
0x4000050	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1687	bfd.h	FUNCTION_65
0x4000054	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1687	bfd.h	FUNCTION_65
0x4000058	        0x48895030	             mov qword [rax + 0x30], rdx	      1687	bfd.h	FUNCTION_65
0x400005c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1687	bfd.h	FUNCTION_65
0x4000060	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1687	bfd.h	FUNCTION_65
0x4000064	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1687	bfd.h	FUNCTION_65
0x4000068	        0x48895028	             mov qword [rax + 0x28], rdx	      1687	bfd.h	FUNCTION_65
0x400006c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1688	bfd.h	FUNCTION_65
0x4000070	         0xfb65024	           movzx edx, byte [rax + 0x24] 	      1688	bfd.h	FUNCTION_65
0x4000074	          0x83ca01	                               or edx, 1	      1688	bfd.h	FUNCTION_65
0x4000077	          0x885024	               mov byte [rax + 0x24], dl	      1688	bfd.h	FUNCTION_65
0x400007a	      0xb801000000	                              mov eax, 1	      1689	bfd.h	FUNCTION_65
0x400007f	              0x5d	                                 pop rbp	      1690	bfd.h	FUNCTION_65
0x4000080	              0xc3	                                     ret	      1690	bfd.h	FUNCTION_65
is_specified_symbol_predicate	IF,3:FOR,0:ELSE,1:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2	44
0x40010c8	              0x55	                                push rbp	      1152	objcopy.c	FUNCTION_15
0x40010c9	          0x4889e5	                            mov rbp, rsp	      1152	objcopy.c	FUNCTION_15
0x40010cc	        0x4883ec20	                           sub rsp, 0x20	      1152	objcopy.c	FUNCTION_15
0x40010d0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1152	objcopy.c	FUNCTION_15
0x40010d4	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1152	objcopy.c	FUNCTION_15
0x40010d8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1153	objcopy.c	FUNCTION_15
0x40010dc	        0x488945f0	             mov qword [rbp - 0x10], rax	      1153	objcopy.c	FUNCTION_15
0x40010e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1155	objcopy.c	FUNCTION_15
0x40010e4	          0x488b00	                    mov rax, qword [rax]	      1155	objcopy.c	FUNCTION_15
0x40010e7	        0x488945f8	                mov qword [rbp - 8], rax	      1155	objcopy.c	FUNCTION_15
0x40010eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1157	objcopy.c	FUNCTION_15	IF_1
0x40010ef	           0xfb600	                   movzx eax, byte [rax]	      1157	objcopy.c	FUNCTION_15	IF_1
0x40010f2	            0x3c21	                            cmp al, 0x21	      1157	objcopy.c	FUNCTION_15	IF_1
0x40010f4	            0x7431	                            je 0x4001127	      1157	objcopy.c	FUNCTION_15	IF_1
0x40010f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x40010fa	          0x488b08	                    mov rcx, qword [rax]	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x40010fd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001101	      0xba00000000	                              mov edx, 0	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001106	          0x4889ce	                            mov rsi, rcx	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001109	          0x4889c7	                            mov rdi, rax	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400110c	      0xe800000000	                          call 0x4001111	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001111	            0x85c0	                           test eax, eax	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001113	            0x7547	                           jne 0x400115c	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001115	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1161	objcopy.c	FUNCTION_15	IF_1	IF_2
0x4001119	    0xc74008010000	                  mov dword [rax + 8], 1	      1161	objcopy.c	FUNCTION_15	IF_1	IF_2
0x4001120	      0xb801000000	                              mov eax, 1	      1163	objcopy.c	FUNCTION_15	IF_1	IF_2
0x4001125	            0xeb3a	                           jmp 0x4001161	      1163	objcopy.c	FUNCTION_15	IF_1	IF_2
0x4001127	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x400112b	          0x488b00	                    mov rax, qword [rax]	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x400112e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4001132	        0x488d4a01	                      lea rcx, [rdx + 1]	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4001136	      0xba00000000	                              mov edx, 0	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x400113b	          0x4889c6	                            mov rsi, rax	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x400113e	          0x4889cf	                            mov rdi, rcx	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4001141	      0xe800000000	                          call 0x4001146	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4001146	            0x85c0	                           test eax, eax	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4001148	            0x7512	                           jne 0x400115c	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x400114a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1170	objcopy.c	FUNCTION_15	ELSE_1	IF_3
0x400114e	    0xc74008000000	                  mov dword [rax + 8], 0	      1170	objcopy.c	FUNCTION_15	ELSE_1	IF_3
0x4001155	      0xb800000000	                              mov eax, 0	      1172	objcopy.c	FUNCTION_15	ELSE_1	IF_3
0x400115a	            0xeb05	                           jmp 0x4001161	      1172	objcopy.c	FUNCTION_15	ELSE_1	IF_3
0x400115c	      0xb801000000	                              mov eax, 1	      1177	objcopy.c	FUNCTION_15
0x4001161	              0xc9	                                   leave	      1178	objcopy.c	FUNCTION_15
0x4001162	              0xc3	                                     ret	      1178	objcopy.c	FUNCTION_15
setup_bfd_headers	IF,1:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2	30
0x4006df9	              0x55	                                push rbp	      3644	objcopy.c	FUNCTION_44
0x4006dfa	          0x4889e5	                            mov rbp, rsp	      3644	objcopy.c	FUNCTION_44
0x4006dfd	        0x4883ec10	                           sub rsp, 0x10	      3644	objcopy.c	FUNCTION_44
0x4006e01	        0x48897df8	                mov qword [rbp - 8], rdi	      3644	objcopy.c	FUNCTION_44
0x4006e05	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3644	objcopy.c	FUNCTION_44
0x4006e09	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3647	objcopy.c	FUNCTION_44	IF_1
0x4006e0d	        0x488b4008	                mov rax, qword [rax + 8]	      3647	objcopy.c	FUNCTION_44	IF_1
0x4006e11	    0x488b80600100	           mov rax, qword [rax + 0x160] 	      3647	objcopy.c	FUNCTION_44	IF_1
0x4006e18	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      3647	objcopy.c	FUNCTION_44	IF_1
0x4006e1c	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3647	objcopy.c	FUNCTION_44	IF_1
0x4006e20	          0x4889ce	                            mov rsi, rcx	      3647	objcopy.c	FUNCTION_44	IF_1
0x4006e23	          0x4889d7	                            mov rdi, rdx	      3647	objcopy.c	FUNCTION_44	IF_1
0x4006e26	            0xffd0	                                call rax	      3647	objcopy.c	FUNCTION_44	IF_1
0x4006e28	            0x85c0	                           test eax, eax	      3647	objcopy.c	FUNCTION_44	IF_1
0x4006e2a	            0x7537	                           jne 0x4006e63	      3647	objcopy.c	FUNCTION_44	IF_1
0x4006e2c	    0xc70500000000	               mov dword [0x04006e36], 1	      3649	objcopy.c	FUNCTION_44	IF_1
0x4006e36	      0xbf00000000	                              mov edi, 0	      3651	objcopy.c	FUNCTION_44	IF_1	CALL_2
0x4006e3b	      0xe800000000	                          call 0x4006e40	      3651	objcopy.c	FUNCTION_44	IF_1	CALL_2
0x4006e40	          0x4889c2	                            mov rdx, rax	      3651	objcopy.c	FUNCTION_44	IF_1	CALL_2
0x4006e43	        0x488b45f8	                mov rax, qword [rbp - 8]	      3650	objcopy.c	FUNCTION_44	IF_1	CALL_1
0x4006e47	          0x4889d1	                            mov rcx, rdx	      3650	objcopy.c	FUNCTION_44	IF_1	CALL_1
0x4006e4a	      0xba00000000	                              mov edx, 0	      3650	objcopy.c	FUNCTION_44	IF_1	CALL_1
0x4006e4f	          0x4889c6	                            mov rsi, rax	      3650	objcopy.c	FUNCTION_44	IF_1	CALL_1
0x4006e52	      0xbf00000000	                              mov edi, 0	      3650	objcopy.c	FUNCTION_44	IF_1	CALL_1
0x4006e57	      0xb800000000	                              mov eax, 0	      3650	objcopy.c	FUNCTION_44	IF_1	CALL_1
0x4006e5c	      0xe800000000	                          call 0x4006e61	      3650	objcopy.c	FUNCTION_44	IF_1	CALL_1
0x4006e61	            0xeb01	                           jmp 0x4006e64	      3652	objcopy.c	FUNCTION_44	IF_1
0x4006e63	              0x90	                                     nop	      3656	objcopy.c	FUNCTION_44
0x4006e64	              0xc9	                                   leave	      3657	objcopy.c	FUNCTION_44
0x4006e65	              0xc3	                                     ret	      3657	objcopy.c	FUNCTION_44
merge_gnu_build_notes	IF,39:FOR,5:ELSE,9:DO,0:SWITCH,1:functions,0:WHILE,2:CALL,34	897
0x4002bd4	              0x55	                                push rbp	      1959	objcopy.c	FUNCTION_37
0x4002bd5	          0x4889e5	                            mov rbp, rsp	      1959	objcopy.c	FUNCTION_37
0x4002bd8	            0x4154	                                push r12	      1959	objcopy.c	FUNCTION_37
0x4002bda	              0x53	                                push rbx	      1959	objcopy.c	FUNCTION_37
0x4002bdb	    0x4881ec300100	                          sub rsp, 0x130	      1959	objcopy.c	FUNCTION_37
0x4002be2	    0x4889bdd8feff	            mov qword [rbp - 0x128], rdi	      1959	objcopy.c	FUNCTION_37
0x4002be9	    0x4889b5d0feff	            mov qword [rbp - 0x130], rsi	      1959	objcopy.c	FUNCTION_37
0x4002bf0	    0x488995c8feff	            mov qword [rbp - 0x138], rdx	      1959	objcopy.c	FUNCTION_37
0x4002bf7	    0x48898dc0feff	            mov qword [rbp - 0x140], rcx	      1959	objcopy.c	FUNCTION_37
0x4002bfe	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      1961	objcopy.c	FUNCTION_37
0x4002c09	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1963	objcopy.c	FUNCTION_37
0x4002c10	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      1963	objcopy.c	FUNCTION_37
0x4002c17	    0xc785e8feffff	              mov dword [rbp - 0x118], 0	      1964	objcopy.c	FUNCTION_37
0x4002c21	    0xc785ecfeffff	              mov dword [rbp - 0x114], 0	      1965	objcopy.c	FUNCTION_37
0x4002c2b	    0xc785f0feffff	              mov dword [rbp - 0x110], 0	      1966	objcopy.c	FUNCTION_37
0x4002c35	    0xc785f4feffff	              mov dword [rbp - 0x10c], 0	      1967	objcopy.c	FUNCTION_37
0x4002c3f	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      1968	objcopy.c	FUNCTION_37
0x4002c4a	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1969	objcopy.c	FUNCTION_37
0x4002c51	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      1969	objcopy.c	FUNCTION_37
0x4002c58	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      1972	objcopy.c	FUNCTION_37
0x4002c63	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      1973	objcopy.c	FUNCTION_37
0x4002c6e	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      1974	objcopy.c	FUNCTION_37
0x4002c79	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      1975	objcopy.c	FUNCTION_37
0x4002c84	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      1979	objcopy.c	FUNCTION_37	CALL_1
0x4002c8b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      1979	objcopy.c	FUNCTION_37	CALL_1
0x4002c92	          0x4889d6	                            mov rsi, rdx	      1979	objcopy.c	FUNCTION_37	CALL_1
0x4002c95	          0x4889c7	                            mov rdi, rax	      1979	objcopy.c	FUNCTION_37	CALL_1
0x4002c98	      0xe800000000	                          call 0x4002c9d	      1979	objcopy.c	FUNCTION_37	CALL_1
0x4002c9d	        0x488945b0	             mov qword [rbp - 0x50], rax	      1979	objcopy.c	FUNCTION_37	CALL_1
0x4002ca1	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1980	objcopy.c	FUNCTION_37	IF_1
0x4002ca6	            0x7e4c	                           jle 0x4002cf4	      1980	objcopy.c	FUNCTION_37	IF_1
0x4002ca8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1987	objcopy.c	FUNCTION_37	IF_1	CALL_2
0x4002cac	          0x4889c7	                            mov rdi, rax	      1987	objcopy.c	FUNCTION_37	IF_1	CALL_2
0x4002caf	      0xe800000000	                          call 0x4002cb4	      1987	objcopy.c	FUNCTION_37	IF_1	CALL_2
0x4002cb4	        0x488945b8	             mov qword [rbp - 0x48], rax	      1987	objcopy.c	FUNCTION_37	IF_1	CALL_2
0x4002cb8	    0x488b0d000000	            mov rcx, qword [0x04002cbf] 	      1988	objcopy.c	FUNCTION_37	IF_1	CALL_3
0x4002cbf	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1988	objcopy.c	FUNCTION_37	IF_1	CALL_3
0x4002cc3	    0x488bb5d0feff	            mov rsi, qword [rbp - 0x130]	      1988	objcopy.c	FUNCTION_37	IF_1	CALL_3
0x4002cca	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      1988	objcopy.c	FUNCTION_37	IF_1	CALL_3
0x4002cd1	          0x4889c7	                            mov rdi, rax	      1988	objcopy.c	FUNCTION_37	IF_1	CALL_3
0x4002cd4	      0xe800000000	                          call 0x4002cd9	      1988	objcopy.c	FUNCTION_37	IF_1	CALL_3
0x4002cd9	        0x488945c0	             mov qword [rbp - 0x40], rax	      1988	objcopy.c	FUNCTION_37	IF_1	CALL_3
0x4002cdd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1989	objcopy.c	FUNCTION_37	IF_1	CALL_4
0x4002ce1	          0x4889c7	                            mov rdi, rax	      1989	objcopy.c	FUNCTION_37	IF_1	CALL_4
0x4002ce4	      0xe800000000	                          call 0x4002ce9	      1989	objcopy.c	FUNCTION_37	IF_1	CALL_4
0x4002ce9	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1990	objcopy.c	FUNCTION_37	IF_1	IF_2
0x4002cee	     0xf85110f0000	                           jne 0x4003c05	      1990	objcopy.c	FUNCTION_37	IF_1	IF_2
0x4002cf4	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1996	objcopy.c	FUNCTION_37	CALL_5
0x4002cfb	    0x48baabaaaaaa	          movabs rdx, 0xaaaaaaaaaaaaaaab	      1996	objcopy.c	FUNCTION_37	CALL_5
0x4002d05	          0x48f7e2	                                 mul rdx	      1996	objcopy.c	FUNCTION_37	CALL_5
0x4002d08	          0x4889d0	                            mov rax, rdx	      1996	objcopy.c	FUNCTION_37	CALL_5
0x4002d0b	        0x48c1e803	                              shr rax, 3	      1996	objcopy.c	FUNCTION_37	CALL_5
0x4002d0f	      0xbe48000000	                           mov esi, 0x48	      1996	objcopy.c	FUNCTION_37	CALL_5
0x4002d14	          0x4889c7	                            mov rdi, rax	      1996	objcopy.c	FUNCTION_37	CALL_5
0x4002d17	      0xe800000000	                          call 0x4002d1c	      1996	objcopy.c	FUNCTION_37	CALL_5
0x4002d1c	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      1996	objcopy.c	FUNCTION_37	CALL_5
0x4002d23	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1996	objcopy.c	FUNCTION_37	CALL_5
0x4002d2a	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      1996	objcopy.c	FUNCTION_37	CALL_5
0x4002d31	      0xe961050000	                           jmp 0x4003297	      1997	objcopy.c	FUNCTION_37	WHILE_1
0x4002d36	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2001	objcopy.c	FUNCTION_37	WHILE_1
0x4002d3d	        0x488b4008	                mov rax, qword [rax + 8]	      2001	objcopy.c	FUNCTION_37	WHILE_1
0x4002d41	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2001	objcopy.c	FUNCTION_37	WHILE_1
0x4002d45	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      2001	objcopy.c	FUNCTION_37	WHILE_1
0x4002d4c	          0x4889d7	                            mov rdi, rdx	      2001	objcopy.c	FUNCTION_37	WHILE_1
0x4002d4f	            0xffd0	                                call rax	      2001	objcopy.c	FUNCTION_37	WHILE_1
0x4002d51	        0x4883c003	                              add rax, 3	      2001	objcopy.c	FUNCTION_37	WHILE_1
0x4002d55	        0x4883e0fc	             and rax, 0xfffffffffffffffc	      2001	objcopy.c	FUNCTION_37	WHILE_1
0x4002d59	          0x4889c2	                            mov rdx, rax	      2001	objcopy.c	FUNCTION_37	WHILE_1
0x4002d5c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2001	objcopy.c	FUNCTION_37	WHILE_1
0x4002d63	          0x488910	                    mov qword [rax], rdx	      2001	objcopy.c	FUNCTION_37	WHILE_1
0x4002d66	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2002	objcopy.c	FUNCTION_37	WHILE_1
0x4002d6d	        0x488b4008	                mov rax, qword [rax + 8]	      2002	objcopy.c	FUNCTION_37	WHILE_1
0x4002d71	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2002	objcopy.c	FUNCTION_37	WHILE_1
0x4002d75	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      2002	objcopy.c	FUNCTION_37	WHILE_1
0x4002d7c	        0x4883c204	                              add rdx, 4	      2002	objcopy.c	FUNCTION_37	WHILE_1
0x4002d80	          0x4889d7	                            mov rdi, rdx	      2002	objcopy.c	FUNCTION_37	WHILE_1
0x4002d83	            0xffd0	                                call rax	      2002	objcopy.c	FUNCTION_37	WHILE_1
0x4002d85	        0x4883c003	                              add rax, 3	      2002	objcopy.c	FUNCTION_37	WHILE_1
0x4002d89	        0x4883e0fc	             and rax, 0xfffffffffffffffc	      2002	objcopy.c	FUNCTION_37	WHILE_1
0x4002d8d	          0x4889c2	                            mov rdx, rax	      2002	objcopy.c	FUNCTION_37	WHILE_1
0x4002d90	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2002	objcopy.c	FUNCTION_37	WHILE_1
0x4002d97	        0x48895008	                mov qword [rax + 8], rdx	      2002	objcopy.c	FUNCTION_37	WHILE_1
0x4002d9b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2003	objcopy.c	FUNCTION_37	WHILE_1
0x4002da2	        0x488b4008	                mov rax, qword [rax + 8]	      2003	objcopy.c	FUNCTION_37	WHILE_1
0x4002da6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2003	objcopy.c	FUNCTION_37	WHILE_1
0x4002daa	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      2003	objcopy.c	FUNCTION_37	WHILE_1
0x4002db1	        0x4883c208	                              add rdx, 8	      2003	objcopy.c	FUNCTION_37	WHILE_1
0x4002db5	          0x4889d7	                            mov rdi, rdx	      2003	objcopy.c	FUNCTION_37	WHILE_1
0x4002db8	            0xffd0	                                call rax	      2003	objcopy.c	FUNCTION_37	WHILE_1
0x4002dba	          0x4889c2	                            mov rdx, rax	      2003	objcopy.c	FUNCTION_37	WHILE_1
0x4002dbd	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2003	objcopy.c	FUNCTION_37	WHILE_1
0x4002dc4	        0x48895010	             mov qword [rax + 0x10], rdx	      2003	objcopy.c	FUNCTION_37	WHILE_1
0x4002dc8	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2005	objcopy.c	FUNCTION_37	WHILE_1	IF_3
0x4002dcf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2005	objcopy.c	FUNCTION_37	WHILE_1	IF_3
0x4002dd3	    0x483d00010000	                          cmp rax, 0x100	      2005	objcopy.c	FUNCTION_37	WHILE_1	IF_3
0x4002dd9	            0x7429	                            je 0x4002e04	      2005	objcopy.c	FUNCTION_37	WHILE_1	IF_3
0x4002ddb	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2006	objcopy.c	FUNCTION_37	WHILE_1	IF_3
0x4002de2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2006	objcopy.c	FUNCTION_37	WHILE_1	IF_3
0x4002de6	    0x483d01010000	                          cmp rax, 0x101	      2006	objcopy.c	FUNCTION_37	WHILE_1	IF_3
0x4002dec	            0x7416	                            je 0x4002e04	      2006	objcopy.c	FUNCTION_37	WHILE_1	IF_3
0x4002dee	      0xbf00000000	                              mov edi, 0	      2008	objcopy.c	FUNCTION_37	WHILE_1	IF_3	CALL_6
0x4002df3	      0xe800000000	                          call 0x4002df8	      2008	objcopy.c	FUNCTION_37	WHILE_1	IF_3	CALL_6
0x4002df8	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2008	objcopy.c	FUNCTION_37	WHILE_1	IF_3	CALL_6
0x4002dff	      0xe9020e0000	                           jmp 0x4003c06	      2009	objcopy.c	FUNCTION_37	WHILE_1	IF_3
0x4002e04	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2012	objcopy.c	FUNCTION_37	WHILE_1	IF_4
0x4002e0b	          0x488b10	                    mov rdx, qword [rax]	      2012	objcopy.c	FUNCTION_37	WHILE_1	IF_4
0x4002e0e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2012	objcopy.c	FUNCTION_37	WHILE_1	IF_4
0x4002e15	        0x488b4008	                mov rax, qword [rax + 8]	      2012	objcopy.c	FUNCTION_37	WHILE_1	IF_4
0x4002e19	          0x4801d0	                            add rax, rdx	      2012	objcopy.c	FUNCTION_37	WHILE_1	IF_4
0x4002e1c	        0x4883c00c	                            add rax, 0xc	      2012	objcopy.c	FUNCTION_37	WHILE_1	IF_4
0x4002e20	    0x483b8520ffff	             cmp rax, qword [rbp - 0xe0]	      2012	objcopy.c	FUNCTION_37	WHILE_1	IF_4
0x4002e27	            0x7616	                           jbe 0x4002e3f	      2012	objcopy.c	FUNCTION_37	WHILE_1	IF_4
0x4002e29	      0xbf00000000	                              mov edi, 0	      2014	objcopy.c	FUNCTION_37	WHILE_1	IF_4	CALL_7
0x4002e2e	      0xe800000000	                          call 0x4002e33	      2014	objcopy.c	FUNCTION_37	WHILE_1	IF_4	CALL_7
0x4002e33	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2014	objcopy.c	FUNCTION_37	WHILE_1	IF_4	CALL_7
0x4002e3a	      0xe9c70d0000	                           jmp 0x4003c06	      2015	objcopy.c	FUNCTION_37	WHILE_1	IF_4
0x4002e3f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2018	objcopy.c	FUNCTION_37	WHILE_1	IF_5
0x4002e46	          0x488b00	                    mov rax, qword [rax]	      2018	objcopy.c	FUNCTION_37	WHILE_1	IF_5
0x4002e49	        0x4883f801	                              cmp rax, 1	      2018	objcopy.c	FUNCTION_37	WHILE_1	IF_5
0x4002e4d	            0x7716	                            ja 0x4002e65	      2018	objcopy.c	FUNCTION_37	WHILE_1	IF_5
0x4002e4f	      0xbf00000000	                              mov edi, 0	      2020	objcopy.c	FUNCTION_37	WHILE_1	IF_5	CALL_8
0x4002e54	      0xe800000000	                          call 0x4002e59	      2020	objcopy.c	FUNCTION_37	WHILE_1	IF_5	CALL_8
0x4002e59	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2020	objcopy.c	FUNCTION_37	WHILE_1	IF_5	CALL_8
0x4002e60	      0xe9a10d0000	                           jmp 0x4003c06	      2021	objcopy.c	FUNCTION_37	WHILE_1	IF_5
0x4002e65	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2024	objcopy.c	FUNCTION_37	WHILE_1
0x4002e6c	        0x488d500c	                    lea rdx, [rax + 0xc]	      2024	objcopy.c	FUNCTION_37	WHILE_1
0x4002e70	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2024	objcopy.c	FUNCTION_37	WHILE_1
0x4002e77	        0x48895018	             mov qword [rax + 0x18], rdx	      2024	objcopy.c	FUNCTION_37	WHILE_1
0x4002e7b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2025	objcopy.c	FUNCTION_37	WHILE_1
0x4002e82	          0x488b00	                    mov rax, qword [rax]	      2025	objcopy.c	FUNCTION_37	WHILE_1
0x4002e85	        0x488d500c	                    lea rdx, [rax + 0xc]	      2025	objcopy.c	FUNCTION_37	WHILE_1
0x4002e89	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2025	objcopy.c	FUNCTION_37	WHILE_1
0x4002e90	          0x4801c2	                            add rdx, rax	      2025	objcopy.c	FUNCTION_37	WHILE_1
0x4002e93	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2025	objcopy.c	FUNCTION_37	WHILE_1
0x4002e9a	        0x48895020	             mov qword [rax + 0x20], rdx	      2025	objcopy.c	FUNCTION_37	WHILE_1
0x4002e9e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2027	objcopy.c	FUNCTION_37	WHILE_1
0x4002ea5	          0x488b10	                    mov rdx, qword [rax]	      2027	objcopy.c	FUNCTION_37	WHILE_1
0x4002ea8	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2027	objcopy.c	FUNCTION_37	WHILE_1
0x4002eaf	        0x488b4008	                mov rax, qword [rax + 8]	      2027	objcopy.c	FUNCTION_37	WHILE_1
0x4002eb3	          0x4801c2	                            add rdx, rax	      2027	objcopy.c	FUNCTION_37	WHILE_1
0x4002eb6	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2027	objcopy.c	FUNCTION_37	WHILE_1
0x4002ebd	          0x4829d0	                            sub rax, rdx	      2027	objcopy.c	FUNCTION_37	WHILE_1
0x4002ec0	        0x4883e80c	                            sub rax, 0xc	      2027	objcopy.c	FUNCTION_37	WHILE_1
0x4002ec4	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2027	objcopy.c	FUNCTION_37	WHILE_1
0x4002ecb	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2028	objcopy.c	FUNCTION_37	WHILE_1
0x4002ed2	          0x488b10	                    mov rdx, qword [rax]	      2028	objcopy.c	FUNCTION_37	WHILE_1
0x4002ed5	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2028	objcopy.c	FUNCTION_37	WHILE_1
0x4002edc	        0x488b4008	                mov rax, qword [rax + 8]	      2028	objcopy.c	FUNCTION_37	WHILE_1
0x4002ee0	          0x4801d0	                            add rax, rdx	      2028	objcopy.c	FUNCTION_37	WHILE_1
0x4002ee3	        0x4883c00c	                            add rax, 0xc	      2028	objcopy.c	FUNCTION_37	WHILE_1
0x4002ee7	    0x48018530ffff	            add qword [rbp - 0xd0], rax 	      2028	objcopy.c	FUNCTION_37	WHILE_1
0x4002eee	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2030	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002ef5	          0x488b00	                    mov rax, qword [rax]	      2030	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002ef8	        0x4883f802	                              cmp rax, 2	      2030	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002efc	            0x764a	                           jbe 0x4002f48	      2030	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002efe	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2031	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f05	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2031	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f09	           0xfb600	                   movzx eax, byte [rax]	      2031	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f0c	            0x3c24	                            cmp al, 0x24	      2031	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f0e	            0x7538	                           jne 0x4002f48	      2031	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f10	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2032	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f17	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2032	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f1b	        0x4883c001	                              add rax, 1	      2032	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f1f	           0xfb600	                   movzx eax, byte [rax]	      2032	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f22	            0x3c01	                               cmp al, 1	      2032	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f24	            0x7522	                           jne 0x4002f48	      2032	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f26	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2033	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f2d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2033	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f31	        0x4883c002	                              add rax, 2	      2033	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f35	           0xfb600	                   movzx eax, byte [rax]	      2033	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f38	            0x3c31	                            cmp al, 0x31	      2033	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f3a	            0x750c	                           jne 0x4002f48	      2033	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f3c	    0x8385e8feffff	              add dword [rbp - 0x118], 1	      2034	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f43	      0xe9c4000000	                           jmp 0x400300c	      2034	objcopy.c	FUNCTION_37	WHILE_1	IF_6
0x4002f48	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2035	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f4f	          0x488b00	                    mov rax, qword [rax]	      2035	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f52	        0x4883f804	                              cmp rax, 4	      2035	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f56	     0xf86b0000000	                           jbe 0x400300c	      2035	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f5c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2036	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f63	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2036	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f67	           0xfb600	                   movzx eax, byte [rax]	      2036	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f6a	            0x3c47	                            cmp al, 0x47	      2036	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f6c	     0xf859a000000	                           jne 0x400300c	      2036	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f72	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2037	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f79	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2037	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f7d	        0x4883c001	                              add rax, 1	      2037	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f81	           0xfb600	                   movzx eax, byte [rax]	      2037	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f84	            0x3c41	                            cmp al, 0x41	      2037	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f86	     0xf8580000000	                           jne 0x400300c	      2037	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f8c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2038	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f93	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2038	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f97	        0x4883c002	                              add rax, 2	      2038	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f9b	           0xfb600	                   movzx eax, byte [rax]	      2038	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002f9e	            0x3c24	                            cmp al, 0x24	      2038	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002fa0	            0x756a	                           jne 0x400300c	      2038	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002fa2	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2039	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002fa9	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2039	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002fad	        0x4883c003	                              add rax, 3	      2039	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002fb1	           0xfb600	                   movzx eax, byte [rax]	      2039	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002fb4	            0x3c01	                               cmp al, 1	      2039	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002fb6	            0x7554	                           jne 0x400300c	      2039	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7
0x4002fb8	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2041	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	IF_8
0x4002fbf	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2041	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	IF_8
0x4002fc3	        0x4883c004	                              add rax, 4	      2041	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	IF_8
0x4002fc7	           0xfb600	                   movzx eax, byte [rax]	      2041	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	IF_8
0x4002fca	            0x3c32	                            cmp al, 0x32	      2041	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	IF_8
0x4002fcc	            0x7509	                           jne 0x4002fd7	      2041	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	IF_8
0x4002fce	    0x8385ecfeffff	              add dword [rbp - 0x114], 1	      2042	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	IF_8
0x4002fd5	            0xeb35	                           jmp 0x400300c	      2042	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	IF_8
0x4002fd7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2043	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	ELSE_2	IF_9
0x4002fde	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2043	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	ELSE_2	IF_9
0x4002fe2	        0x4883c004	                              add rax, 4	      2043	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	ELSE_2	IF_9
0x4002fe6	           0xfb600	                   movzx eax, byte [rax]	      2043	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	ELSE_2	IF_9
0x4002fe9	            0x3c33	                            cmp al, 0x33	      2043	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	ELSE_2	IF_9
0x4002feb	            0x7509	                           jne 0x4002ff6	      2043	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	ELSE_2	IF_9
0x4002fed	    0x8385f0feffff	              add dword [rbp - 0x110], 1	      2044	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	ELSE_2	IF_9
0x4002ff4	            0xeb16	                           jmp 0x400300c	      2044	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	ELSE_2	IF_9
0x4002ff6	      0xbf00000000	                              mov edi, 0	      2047	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	ELSE_3	CALL_9
0x4002ffb	      0xe800000000	                          call 0x4003000	      2047	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	ELSE_3	CALL_9
0x4003000	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2047	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	ELSE_3	CALL_9
0x4003007	      0xe9fa0b0000	                           jmp 0x4003c06	      2048	objcopy.c	FUNCTION_37	WHILE_1	ELSE_1	IF_7	ELSE_3
0x400300c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2052	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003013	        0x488b4008	                mov rax, qword [rax + 8]	      2052	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003017	        0x4883f804	                              cmp rax, 4	      2052	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400301b	            0x7443	                            je 0x4003060	      2052	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400301d	        0x4883f804	                              cmp rax, 4	      2052	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003021	            0x770a	                            ja 0x400302d	      2052	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003023	          0x4885c0	                           test rax, rax	      2052	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003026	            0x741a	                            je 0x4003042	      2052	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003028	      0xe956010000	                           jmp 0x4003183	      2052	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400302d	        0x4883f808	                              cmp rax, 8	      2052	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003031	            0x7463	                            je 0x4003096	      2052	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003033	        0x4883f810	                           cmp rax, 0x10	      2052	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003037	     0xf84f4000000	                            je 0x4003131	      2052	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400303d	      0xe941010000	                           jmp 0x4003183	      2052	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003042	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      2055	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400304d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2055	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003054	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2055	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400305b	      0xe939010000	                           jmp 0x4003199	      2056	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003060	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2059	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003067	        0x488b4008	                mov rax, qword [rax + 8]	      2059	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400306b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2059	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400306f	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2059	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003076	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2059	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400307a	          0x4889d7	                            mov rdi, rdx	      2059	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400307d	            0xffd0	                                call rax	      2059	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400307f	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2059	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003086	    0x48c78560ffff	mov qword [rbp - 0xa0], 0xffffffffffffffff	      2067	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003091	      0xe903010000	                           jmp 0x4003199	      2068	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003096	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2071	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10	CALL_10
0x400309d	          0x4889c7	                            mov rdi, rax	      2071	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10	CALL_10
0x40030a0	      0xe8f7faffff	                       call sym.is_64bit	      2071	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10	CALL_10
0x40030a5	            0x85c0	                           test eax, eax	      2071	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10	CALL_10
0x40030a7	            0x7555	                           jne 0x40030fe	      2071	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10	CALL_10
0x40030a9	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2073	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10
0x40030b0	        0x488b4008	                mov rax, qword [rax + 8]	      2073	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10
0x40030b4	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2073	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10
0x40030b8	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2073	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10
0x40030bf	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2073	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10
0x40030c3	          0x4889d7	                            mov rdi, rdx	      2073	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10
0x40030c6	            0xffd0	                                call rax	      2073	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10
0x40030c8	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2073	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10
0x40030cf	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2074	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10
0x40030d6	        0x488b4008	                mov rax, qword [rax + 8]	      2074	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10
0x40030da	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2074	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10
0x40030de	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2074	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10
0x40030e5	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2074	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10
0x40030e9	        0x4883c204	                              add rdx, 4	      2074	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10
0x40030ed	          0x4889d7	                            mov rdi, rdx	      2074	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10
0x40030f0	            0xffd0	                                call rax	      2074	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10
0x40030f2	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2074	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_10
0x40030f9	      0xe99b000000	                           jmp 0x4003199	      2088	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x40030fe	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2078	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	ELSE_4
0x4003105	        0x488b4008	                mov rax, qword [rax + 8]	      2078	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	ELSE_4
0x4003109	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2078	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	ELSE_4
0x400310d	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2078	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	ELSE_4
0x4003114	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2078	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	ELSE_4
0x4003118	          0x4889d7	                            mov rdi, rdx	      2078	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	ELSE_4
0x400311b	            0xffd0	                                call rax	      2078	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	ELSE_4
0x400311d	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2078	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	ELSE_4
0x4003124	    0x48c78560ffff	mov qword [rbp - 0xa0], 0xffffffffffffffff	      2086	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	ELSE_4
0x400312f	            0xeb68	                           jmp 0x4003199	      2088	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003131	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2091	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003138	        0x488b4008	                mov rax, qword [rax + 8]	      2091	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400313c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2091	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003140	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2091	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003147	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2091	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400314b	          0x4889d7	                            mov rdi, rdx	      2091	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400314e	            0xffd0	                                call rax	      2091	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003150	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2091	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003157	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2092	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400315e	        0x488b4008	                mov rax, qword [rax + 8]	      2092	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003162	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2092	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003166	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2092	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400316d	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2092	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003171	        0x4883c208	                              add rdx, 8	      2092	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003175	          0x4889d7	                            mov rdi, rdx	      2092	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003178	            0xffd0	                                call rax	      2092	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400317a	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2092	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003181	            0xeb16	                           jmp 0x4003199	      2093	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003183	      0xbf00000000	                              mov edi, 0	      2096	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_11
0x4003188	      0xe800000000	                          call 0x400318d	      2096	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_11
0x400318d	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2096	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_11
0x4003194	      0xe96d0a0000	                           jmp 0x4003c06	      2097	objcopy.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4003199	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2100	objcopy.c	FUNCTION_37	WHILE_1	IF_11	CALL_12
0x40031a0	          0x4889c7	                            mov rdi, rax	      2100	objcopy.c	FUNCTION_37	WHILE_1	IF_11	CALL_12
0x40031a3	      0xe8b8f9ffff	                   call sym.is_open_note	      2100	objcopy.c	FUNCTION_37	WHILE_1	IF_11	CALL_12
0x40031a8	            0x85c0	                           test eax, eax	      2100	objcopy.c	FUNCTION_37	WHILE_1	IF_11	CALL_12
0x40031aa	            0x7456	                            je 0x4003202	      2100	objcopy.c	FUNCTION_37	WHILE_1	IF_11	CALL_12
0x40031ac	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      2102	objcopy.c	FUNCTION_37	WHILE_1	IF_11	IF_12
0x40031b4	            0x740e	                            je 0x40031c4	      2102	objcopy.c	FUNCTION_37	WHILE_1	IF_11	IF_12
0x40031b6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2103	objcopy.c	FUNCTION_37	WHILE_1	IF_11	IF_12
0x40031bd	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2103	objcopy.c	FUNCTION_37	WHILE_1	IF_11	IF_12
0x40031c4	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2105	objcopy.c	FUNCTION_37	WHILE_1	IF_11
0x40031cb	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      2105	objcopy.c	FUNCTION_37	WHILE_1	IF_11
0x40031d2	        0x48895030	             mov qword [rax + 0x30], rdx	      2105	objcopy.c	FUNCTION_37	WHILE_1	IF_11
0x40031d6	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      2107	objcopy.c	FUNCTION_37	WHILE_1	IF_11	IF_13
0x40031de	            0x740e	                            je 0x40031ee	      2107	objcopy.c	FUNCTION_37	WHILE_1	IF_11	IF_13
0x40031e0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2108	objcopy.c	FUNCTION_37	WHILE_1	IF_11	IF_13
0x40031e7	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2108	objcopy.c	FUNCTION_37	WHILE_1	IF_11	IF_13
0x40031ee	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2110	objcopy.c	FUNCTION_37	WHILE_1	IF_11
0x40031f5	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      2110	objcopy.c	FUNCTION_37	WHILE_1	IF_11
0x40031fc	        0x48895038	             mov qword [rax + 0x38], rdx	      2110	objcopy.c	FUNCTION_37	WHILE_1	IF_11
0x4003200	            0xeb54	                           jmp 0x4003256	      2110	objcopy.c	FUNCTION_37	WHILE_1	IF_11
0x4003202	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      2114	objcopy.c	FUNCTION_37	WHILE_1	ELSE_5	IF_14
0x400320a	            0x740e	                            je 0x400321a	      2114	objcopy.c	FUNCTION_37	WHILE_1	ELSE_5	IF_14
0x400320c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2115	objcopy.c	FUNCTION_37	WHILE_1	ELSE_5	IF_14
0x4003213	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      2115	objcopy.c	FUNCTION_37	WHILE_1	ELSE_5	IF_14
0x400321a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2117	objcopy.c	FUNCTION_37	WHILE_1	ELSE_5
0x4003221	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      2117	objcopy.c	FUNCTION_37	WHILE_1	ELSE_5
0x4003228	        0x48895030	             mov qword [rax + 0x30], rdx	      2117	objcopy.c	FUNCTION_37	WHILE_1	ELSE_5
0x400322c	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      2119	objcopy.c	FUNCTION_37	WHILE_1	ELSE_5	IF_15
0x4003234	            0x740e	                            je 0x4003244	      2119	objcopy.c	FUNCTION_37	WHILE_1	ELSE_5	IF_15
0x4003236	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2120	objcopy.c	FUNCTION_37	WHILE_1	ELSE_5	IF_15
0x400323d	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2120	objcopy.c	FUNCTION_37	WHILE_1	ELSE_5	IF_15
0x4003244	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2122	objcopy.c	FUNCTION_37	WHILE_1	ELSE_5
0x400324b	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      2122	objcopy.c	FUNCTION_37	WHILE_1	ELSE_5
0x4003252	        0x48895038	             mov qword [rax + 0x38], rdx	      2122	objcopy.c	FUNCTION_37	WHILE_1	ELSE_5
0x4003256	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2125	objcopy.c	FUNCTION_37	WHILE_1	IF_16
0x400325d	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2125	objcopy.c	FUNCTION_37	WHILE_1	IF_16
0x4003261	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2125	objcopy.c	FUNCTION_37	WHILE_1	IF_16
0x4003268	          0x488b00	                    mov rax, qword [rax]	      2125	objcopy.c	FUNCTION_37	WHILE_1	IF_16
0x400326b	        0x4883e801	                              sub rax, 1	      2125	objcopy.c	FUNCTION_37	WHILE_1	IF_16
0x400326f	          0x4801d0	                            add rax, rdx	      2125	objcopy.c	FUNCTION_37	WHILE_1	IF_16
0x4003272	           0xfb600	                   movzx eax, byte [rax]	      2125	objcopy.c	FUNCTION_37	WHILE_1	IF_16
0x4003275	            0x84c0	                             test al, al	      2125	objcopy.c	FUNCTION_37	WHILE_1	IF_16
0x4003277	            0x7416	                            je 0x400328f	      2125	objcopy.c	FUNCTION_37	WHILE_1	IF_16
0x4003279	      0xbf00000000	                              mov edi, 0	      2127	objcopy.c	FUNCTION_37	WHILE_1	IF_16	CALL_13
0x400327e	      0xe800000000	                          call 0x4003283	      2127	objcopy.c	FUNCTION_37	WHILE_1	IF_16	CALL_13
0x4003283	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2127	objcopy.c	FUNCTION_37	WHILE_1	IF_16	CALL_13
0x400328a	      0xe977090000	                           jmp 0x4003c06	      2128	objcopy.c	FUNCTION_37	WHILE_1	IF_16
0x400328f	    0x48838518ffff	           add qword [rbp - 0xe8], 0x48 	      2131	objcopy.c	FUNCTION_37	WHILE_1
0x4003297	    0x4883bd20ffff	            cmp qword [rbp - 0xe0], 0xb 	      1997	objcopy.c	FUNCTION_37	WHILE_1
0x400329f	     0xf8791faffff	                            ja 0x4002d36	      1997	objcopy.c	FUNCTION_37	WHILE_1
0x40032a5	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2134	objcopy.c	FUNCTION_37
0x40032ac	        0x488945c8	             mov qword [rbp - 0x38], rax	      2134	objcopy.c	FUNCTION_37
0x40032b0	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      2137	objcopy.c	FUNCTION_37	IF_17
0x40032b8	            0x7416	                            je 0x40032d0	      2137	objcopy.c	FUNCTION_37	IF_17
0x40032ba	      0xbf00000000	                              mov edi, 0	      2139	objcopy.c	FUNCTION_37	IF_17	CALL_14
0x40032bf	      0xe800000000	                          call 0x40032c4	      2139	objcopy.c	FUNCTION_37	IF_17	CALL_14
0x40032c4	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2139	objcopy.c	FUNCTION_37	IF_17	CALL_14
0x40032cb	      0xe936090000	                           jmp 0x4003c06	      2140	objcopy.c	FUNCTION_37	IF_17
0x40032d0	    0x83bde8feffff	              cmp dword [rbp - 0x118], 0	      2143	objcopy.c	FUNCTION_37	IF_18
0x40032d7	            0x7528	                           jne 0x4003301	      2143	objcopy.c	FUNCTION_37	IF_18
0x40032d9	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 0	      2143	objcopy.c	FUNCTION_37	IF_18
0x40032e0	            0x751f	                           jne 0x4003301	      2143	objcopy.c	FUNCTION_37	IF_18
0x40032e2	    0x83bdf0feffff	              cmp dword [rbp - 0x110], 0	      2143	objcopy.c	FUNCTION_37	IF_18
0x40032e9	            0x7516	                           jne 0x4003301	      2143	objcopy.c	FUNCTION_37	IF_18
0x40032eb	      0xbf00000000	                              mov edi, 0	      2145	objcopy.c	FUNCTION_37	IF_18	CALL_15
0x40032f0	      0xe800000000	                          call 0x40032f5	      2145	objcopy.c	FUNCTION_37	IF_18	CALL_15
0x40032f5	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2145	objcopy.c	FUNCTION_37	IF_18	CALL_15
0x40032fc	      0xe905090000	                           jmp 0x4003c06	      2146	objcopy.c	FUNCTION_37	IF_18
0x4003301	    0x83bde8feffff	              cmp dword [rbp - 0x118], 0	      2149	objcopy.c	FUNCTION_37	IF_19
0x4003308	            0x7409	                            je 0x4003313	      2149	objcopy.c	FUNCTION_37	IF_19
0x400330a	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 0	      2149	objcopy.c	FUNCTION_37	IF_19
0x4003311	            0x7524	                           jne 0x4003337	      2149	objcopy.c	FUNCTION_37	IF_19
0x4003313	    0x83bde8feffff	              cmp dword [rbp - 0x118], 0	      2150	objcopy.c	FUNCTION_37	IF_19
0x400331a	            0x7409	                            je 0x4003325	      2150	objcopy.c	FUNCTION_37	IF_19
0x400331c	    0x83bdf0feffff	              cmp dword [rbp - 0x110], 0	      2150	objcopy.c	FUNCTION_37	IF_19
0x4003323	            0x7512	                           jne 0x4003337	      2150	objcopy.c	FUNCTION_37	IF_19
0x4003325	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 0	      2151	objcopy.c	FUNCTION_37	IF_19
0x400332c	            0x741f	                            je 0x400334d	      2151	objcopy.c	FUNCTION_37	IF_19
0x400332e	    0x83bdf0feffff	              cmp dword [rbp - 0x110], 0	      2151	objcopy.c	FUNCTION_37	IF_19
0x4003335	            0x7416	                            je 0x400334d	      2151	objcopy.c	FUNCTION_37	IF_19
0x4003337	      0xbf00000000	                              mov edi, 0	      2153	objcopy.c	FUNCTION_37	IF_19	CALL_16
0x400333c	      0xe800000000	                          call 0x4003341	      2153	objcopy.c	FUNCTION_37	IF_19	CALL_16
0x4003341	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2153	objcopy.c	FUNCTION_37	IF_19	CALL_16
0x4003348	      0xe9b9080000	                           jmp 0x4003c06	      2154	objcopy.c	FUNCTION_37	IF_19
0x400334d	    0x83bde8feffff	              cmp dword [rbp - 0x118], 1	      2158	objcopy.c	FUNCTION_37	IF_20
0x4003354	     0xf84ac080000	                            je 0x4003c06	      2158	objcopy.c	FUNCTION_37	IF_20
0x400335a	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 1	      2158	objcopy.c	FUNCTION_37	IF_20
0x4003361	     0xf849f080000	                            je 0x4003c06	      2158	objcopy.c	FUNCTION_37	IF_20
0x4003367	    0x83bdf0feffff	              cmp dword [rbp - 0x110], 1	      2158	objcopy.c	FUNCTION_37	IF_20
0x400336e	     0xf8492080000	                            je 0x4003c06	      2158	objcopy.c	FUNCTION_37	IF_20
0x4003374	    0x83bde8feffff	              cmp dword [rbp - 0x118], 0	      2161	objcopy.c	FUNCTION_37
0x400337b	            0x7407	                            je 0x4003384	      2161	objcopy.c	FUNCTION_37
0x400337d	      0xb801000000	                              mov eax, 1	      2161	objcopy.c	FUNCTION_37
0x4003382	            0xeb05	                           jmp 0x4003389	      2161	objcopy.c	FUNCTION_37
0x4003384	      0xb803000000	                              mov eax, 3	      2161	objcopy.c	FUNCTION_37
0x4003389	    0x898500ffffff	            mov dword [rbp - 0x100], eax	      2161	objcopy.c	FUNCTION_37
0x400338f	    0x8b8500ffffff	            mov eax, dword [rbp - 0x100]	      2162	objcopy.c	FUNCTION_37
0x4003395	          0x83c001	                              add eax, 1	      2162	objcopy.c	FUNCTION_37
0x4003398	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      2162	objcopy.c	FUNCTION_37
0x400339e	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2165	objcopy.c	FUNCTION_37	IF_21
0x40033a5	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2165	objcopy.c	FUNCTION_37	IF_21
0x40033a9	    0x8b8500ffffff	            mov eax, dword [rbp - 0x100]	      2165	objcopy.c	FUNCTION_37	IF_21
0x40033af	            0x4898	                                    cdqe	      2165	objcopy.c	FUNCTION_37	IF_21
0x40033b1	          0x4801d0	                            add rax, rdx	      2165	objcopy.c	FUNCTION_37	IF_21
0x40033b4	           0xfb600	                   movzx eax, byte [rax]	      2165	objcopy.c	FUNCTION_37	IF_21
0x40033b7	            0x3c01	                               cmp al, 1	      2165	objcopy.c	FUNCTION_37	IF_21
0x40033b9	            0x7416	                            je 0x40033d1	      2165	objcopy.c	FUNCTION_37	IF_21
0x40033bb	      0xbf00000000	                              mov edi, 0	      2167	objcopy.c	FUNCTION_37	IF_21	CALL_17
0x40033c0	      0xe800000000	                          call 0x40033c5	      2167	objcopy.c	FUNCTION_37	IF_21	CALL_17
0x40033c5	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2167	objcopy.c	FUNCTION_37	IF_21	CALL_17
0x40033cc	      0xe935080000	                           jmp 0x4003c06	      2168	objcopy.c	FUNCTION_37	IF_21
0x40033d1	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2186	objcopy.c	FUNCTION_37	FOR_1
0x40033d8	        0x4883c048	                           add rax, 0x48	      2186	objcopy.c	FUNCTION_37	FOR_1
0x40033dc	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      2186	objcopy.c	FUNCTION_37	FOR_1
0x40033e3	      0xe972040000	                           jmp 0x400385a	      2186	objcopy.c	FUNCTION_37	FOR_1
0x40033e8	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      2190	objcopy.c	FUNCTION_37	FOR_1
0x40033f3	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2193	objcopy.c	FUNCTION_37	FOR_1	IF_22	CALL_18
0x40033fa	          0x4889c7	                            mov rdi, rax	      2193	objcopy.c	FUNCTION_37	FOR_1	IF_22	CALL_18
0x40033fd	      0xe85ef7ffff	                   call sym.is_open_note	      2193	objcopy.c	FUNCTION_37	FOR_1	IF_22	CALL_18
0x4003402	            0x85c0	                           test eax, eax	      2193	objcopy.c	FUNCTION_37	FOR_1	IF_22	CALL_18
0x4003404	     0xf8441040000	                            je 0x400384b	      2193	objcopy.c	FUNCTION_37	FOR_1	IF_22	CALL_18
0x400340a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2196	objcopy.c	FUNCTION_37	FOR_1
0x4003411	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2196	objcopy.c	FUNCTION_37	FOR_1
0x4003415	    0x8b8500ffffff	            mov eax, dword [rbp - 0x100]	      2196	objcopy.c	FUNCTION_37	FOR_1
0x400341b	            0x4898	                                    cdqe	      2196	objcopy.c	FUNCTION_37	FOR_1
0x400341d	          0x4801d0	                            add rax, rdx	      2196	objcopy.c	FUNCTION_37	FOR_1
0x4003420	           0xfb600	                   movzx eax, byte [rax]	      2196	objcopy.c	FUNCTION_37	FOR_1
0x4003423	           0xfbec0	                           movsx eax, al	      2196	objcopy.c	FUNCTION_37	FOR_1
0x4003426	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      2196	objcopy.c	FUNCTION_37	FOR_1
0x400342c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2200	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x4003433	        0x4883e848	                           sub rax, 0x48	      2200	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x4003437	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2200	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x400343e	      0xe9f2030000	                           jmp 0x4003835	      2200	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x4003443	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2202	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x400344a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2202	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x400344e	    0x8b8500ffffff	            mov eax, dword [rbp - 0x100]	      2202	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x4003454	            0x4898	                                    cdqe	      2202	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x4003456	          0x4801d0	                            add rax, rdx	      2202	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x4003459	           0xfb600	                   movzx eax, byte [rax]	      2202	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x400345c	           0xfbec0	                           movsx eax, al	      2202	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x400345f	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      2202	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x4003465	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      2206	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_23
0x400346d	            0x7531	                           jne 0x40034a0	      2206	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_23
0x400346f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2207	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_23
0x4003476	        0x488b4008	                mov rax, qword [rax + 8]	      2207	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_23
0x400347a	          0x4885c0	                           test rax, rax	      2207	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_23
0x400347d	            0x7421	                            je 0x40034a0	      2207	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_23
0x400347f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2208	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_23	CALL_19
0x4003486	          0x4889c7	                            mov rdi, rax	      2208	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_23	CALL_19
0x4003489	      0xe8f0f6ffff	                   call sym.is_func_note	      2208	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_23	CALL_19
0x400348e	            0x85c0	                           test eax, eax	      2208	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_23	CALL_19
0x4003490	            0x750e	                           jne 0x40034a0	      2208	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_23	CALL_19
0x4003492	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2209	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_23
0x4003499	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2209	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_23
0x40034a0	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2211	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_24	CALL_20
0x40034a7	          0x4889c7	                            mov rdi, rax	      2211	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_24	CALL_20
0x40034aa	      0xe8b1f6ffff	                   call sym.is_open_note	      2211	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_24	CALL_20
0x40034af	            0x85c0	                           test eax, eax	      2211	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_24	CALL_20
0x40034b1	     0xf846f030000	                            je 0x4003826	      2211	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_24	CALL_20
0x40034b7	    0x8b850cffffff	             mov eax, dword [rbp - 0xf4]	      2215	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_25
0x40034bd	    0x3b8508ffffff	             cmp eax, dword [rbp - 0xf8]	      2215	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_25
0x40034c3	     0xf8560030000	                           jne 0x4003829	      2215	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_25
0x40034c9	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 4	      2219	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26
0x40034d0	     0xf85f9010000	                           jne 0x40036cf	      2219	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26
0x40034d6	    0xc785f8feffff	              mov dword [rbp - 0x108], 0	      2228	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x40034e0	    0x48c745800000	               mov qword [rbp - 0x80], 0	      2228	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x40034e8	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2229	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x40034ef	          0x488b00	                    mov rax, qword [rax]	      2229	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x40034f2	            0x89c2	                            mov edx, eax	      2229	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x40034f4	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      2229	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x40034fa	            0x29c2	                            sub edx, eax	      2229	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x40034fc	            0x89d0	                            mov eax, edx	      2229	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x40034fe	    0x8985fcfeffff	            mov dword [rbp - 0x104], eax	      2229	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x4003504	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2230	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x400350b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2230	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x400350f	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      2230	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x4003515	            0x4898	                                    cdqe	      2230	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x4003517	          0x4801d0	                            add rax, rdx	      2230	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x400351a	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2230	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x4003521	            0xeb39	                           jmp 0x400355c	      2228	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x4003523	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2233	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x400352a	        0x488d5001	                      lea rdx, [rax + 1]	      2233	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x400352e	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      2233	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x4003535	           0xfb600	                   movzx eax, byte [rax]	      2233	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x4003538	           0xfb6c0	                           movzx eax, al	      2233	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x400353b	        0x488945d0	             mov qword [rbp - 0x30], rax	      2233	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x400353f	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      2234	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x4003545	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2234	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x4003549	            0x89c1	                            mov ecx, eax	      2234	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x400354b	          0x48d3e2	                             shl rdx, cl	      2234	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x400354e	          0x4889d0	                            mov rax, rdx	      2234	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x4003551	        0x48094580	              or qword [rbp - 0x80], rax	      2234	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x4003555	    0x8385f8feffff	              add dword [rbp - 0x108], 8	      2235	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x400355c	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      2231	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x4003562	          0x8d50ff	                      lea edx, [rax - 1]	      2231	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x4003565	    0x8995fcfeffff	            mov dword [rbp - 0x104], edx	      2231	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x400356b	            0x85c0	                           test eax, eax	      2228	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x400356d	            0x75b4	                           jne 0x4003523	      2228	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_3
0x400356f	    0xc785f8feffff	              mov dword [rbp - 0x108], 0	      2238	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x4003579	    0x48c745880000	               mov qword [rbp - 0x78], 0	      2238	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x4003581	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2239	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x4003588	          0x488b00	                    mov rax, qword [rax]	      2239	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x400358b	            0x89c2	                            mov edx, eax	      2239	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x400358d	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      2239	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x4003593	            0x29c2	                            sub edx, eax	      2239	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x4003595	            0x89d0	                            mov eax, edx	      2239	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x4003597	    0x8985fcfeffff	            mov dword [rbp - 0x104], eax	      2239	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x400359d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2240	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035a4	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2240	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035a8	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      2240	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035ae	            0x4898	                                    cdqe	      2240	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035b0	          0x4801d0	                            add rax, rdx	      2240	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035b3	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2240	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035ba	            0xeb39	                           jmp 0x40035f5	      2238	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035bc	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2243	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035c3	        0x488d5001	                      lea rdx, [rax + 1]	      2243	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035c7	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      2243	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035ce	           0xfb600	                   movzx eax, byte [rax]	      2243	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035d1	           0xfb6c0	                           movzx eax, al	      2243	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035d4	        0x488945d0	             mov qword [rbp - 0x30], rax	      2243	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035d8	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      2244	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035de	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2244	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035e2	            0x89c1	                            mov ecx, eax	      2244	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035e4	          0x48d3e2	                             shl rdx, cl	      2244	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035e7	          0x4889d0	                            mov rax, rdx	      2244	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035ea	        0x48094588	              or qword [rbp - 0x78], rax	      2244	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035ee	    0x8385f8feffff	              add dword [rbp - 0x108], 8	      2245	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035f5	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      2241	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035fb	          0x8d50ff	                      lea edx, [rax - 1]	      2241	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x40035fe	    0x8995fcfeffff	            mov dword [rbp - 0x104], edx	      2241	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x4003604	            0x85c0	                           test eax, eax	      2238	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x4003606	            0x75b4	                           jne 0x40035bc	      2238	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	FOR_4
0x4003608	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2248	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26
0x400360c	        0x48014588	            add qword [rbp - 0x78], rax 	      2248	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26
0x4003610	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2249	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	IF_27	CALL_21
0x4003614	          0x4889c7	                            mov rdi, rax	      2249	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	IF_27	CALL_21
0x4003617	      0xe8a9f4ffff	                      call sym.num_bytes	      2249	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	IF_27	CALL_21
0x400361c	            0x89c1	                            mov ecx, eax	      2249	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	IF_27	CALL_21
0x400361e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2249	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	IF_27	CALL_21
0x4003625	          0x488b10	                    mov rdx, qword [rax]	      2249	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	IF_27	CALL_21
0x4003628	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      2249	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	IF_27	CALL_21
0x400362e	            0x4898	                                    cdqe	      2249	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	IF_27	CALL_21
0x4003630	          0x4829c2	                            sub rdx, rax	      2249	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	IF_27	CALL_21
0x4003633	          0x4889d0	                            mov rax, rdx	      2249	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	IF_27	CALL_21
0x4003636	          0x4839c1	                            cmp rcx, rax	      2249	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	IF_27	CALL_21
0x4003639	     0xf83ed010000	                           jae 0x400382c	      2249	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	IF_27	CALL_21
0x400363f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2259	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26
0x4003646	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2259	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26
0x400364a	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      2259	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26
0x4003650	            0x4898	                                    cdqe	      2259	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26
0x4003652	          0x4801d0	                            add rax, rdx	      2259	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26
0x4003655	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2259	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26
0x400365c	            0xeb2f	                           jmp 0x400368d	      2260	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x400365e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2263	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x4003662	           0xfb6c0	                           movzx eax, al	      2263	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x4003665	        0x488945d0	             mov qword [rbp - 0x30], rax	      2263	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x4003669	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2264	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x4003670	        0x488d5001	                      lea rdx, [rax + 1]	      2264	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x4003674	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      2264	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x400367b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2264	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x400367f	            0x8810	                      mov byte [rax], dl	      2264	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x4003681	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      2265	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2	IF_28
0x4003686	            0x7428	                            je 0x40036b0	      2265	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2	IF_28
0x4003688	      0x48c16d8808	               shr qword [rbp - 0x78], 8	      2267	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x400368d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2260	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x4003694	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2260	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x4003698	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2261	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x400369f	          0x488b00	                    mov rax, qword [rax]	      2261	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x40036a2	          0x4801d0	                            add rax, rdx	      2261	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x40036a5	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	      2260	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x40036ac	            0x77b0	                            ja 0x400365e	      2260	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x40036ae	            0xeb01	                           jmp 0x40036b1	      2260	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2
0x40036b0	              0x90	                                     nop	      2266	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	WHILE_2	IF_28
0x40036b1	    0xc785f4feffff	              mov dword [rbp - 0x10c], 1	      2270	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26
0x40036bb	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2271	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26
0x40036c2	    0x48c740100000	               mov qword [rax + 0x10], 0	      2271	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26
0x40036ca	      0xe983010000	                           jmp 0x4003852	      2272	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26
0x40036cf	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2276	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29
0x40036d6	          0x488b10	                    mov rdx, qword [rax]	      2276	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29
0x40036d9	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2276	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29
0x40036e0	          0x488b00	                    mov rax, qword [rax]	      2276	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29
0x40036e3	          0x4839c2	                            cmp rdx, rax	      2276	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29
0x40036e6	     0xf85ba000000	                           jne 0x40037a6	      2276	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29
0x40036ec	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2277	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	CALL_22
0x40036f3	          0x488b10	                    mov rdx, qword [rax]	      2277	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	CALL_22
0x40036f6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2278	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29
0x40036fd	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      2278	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29
0x4003701	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2277	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	CALL_22
0x4003708	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2277	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	CALL_22
0x400370c	          0x4889ce	                            mov rsi, rcx	      2277	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	CALL_22
0x400370f	          0x4889c7	                            mov rdi, rax	      2277	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	CALL_22
0x4003712	      0xe800000000	                          call 0x4003717	      2277	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	CALL_22
0x4003717	            0x85c0	                           test eax, eax	      2277	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	CALL_22
0x4003719	     0xf8587000000	                           jne 0x40037a6	      2277	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	CALL_22
0x400371f	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2279	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	CALL_23
0x4003726	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2279	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	CALL_23
0x400372d	          0x4889d6	                            mov rsi, rdx	      2279	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	CALL_23
0x4003730	          0x4889c7	                            mov rdi, rax	      2279	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	CALL_23
0x4003733	      0xe8b3f3ffff	                     call sym.gap_exists	      2279	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	CALL_23
0x4003738	            0x85c0	                           test eax, eax	      2279	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	CALL_23
0x400373a	            0x756a	                           jne 0x40037a6	      2279	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	CALL_23
0x400373c	    0xc785f4feffff	              mov dword [rbp - 0x10c], 1	      2281	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29
0x4003746	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2282	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29
0x400374d	    0x48c740100000	               mov qword [rax + 0x10], 0	      2282	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29
0x4003755	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2284	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	IF_30
0x400375c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2284	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	IF_30
0x4003760	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2284	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	IF_30
0x4003767	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2284	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	IF_30
0x400376b	          0x4839c2	                            cmp rdx, rax	      2284	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	IF_30
0x400376e	            0x7616	                           jbe 0x4003786	      2284	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	IF_30
0x4003770	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2285	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	IF_30
0x4003777	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2285	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	IF_30
0x400377b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2285	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	IF_30
0x4003782	        0x48895038	             mov qword [rax + 0x38], rdx	      2285	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	IF_30
0x4003786	    0x83bdf0feffff	              cmp dword [rbp - 0x110], 0	      2287	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	IF_31
0x400378d	     0xf84bb000000	                            je 0x400384e	      2287	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	IF_31
0x4003793	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2288	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	IF_31
0x400379a	    0xc74040010000	               mov dword [rax + 0x40], 1	      2288	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29	IF_31
0x40037a1	      0xe9a8000000	                           jmp 0x400384e	      2289	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29
0x40037a6	    0x83bdf0feffff	              cmp dword [rbp - 0x110], 0	      2296	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_32
0x40037ad	            0x743c	                            je 0x40037eb	      2296	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_32
0x40037af	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2300	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_32
0x40037b6	    0xc74040010000	               mov dword [rax + 0x40], 1	      2300	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_32
0x40037bd	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2301	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_32
0x40037c4	    0x48c740100101	          mov qword [rax + 0x10], 0x101 	      2301	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_32
0x40037cc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2302	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_32
0x40037d3	    0xc74040010000	               mov dword [rax + 0x40], 1	      2302	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_32
0x40037da	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2303	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_32
0x40037e1	    0x48c740100101	          mov qword [rax + 0x10], 0x101 	      2303	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_32
0x40037e9	            0xeb66	                           jmp 0x4003851	      2315	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x40037eb	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2307	objcopy.c	FUNCTION_37	FOR_1	FOR_2	ELSE_6	IF_33
0x40037f2	        0x488b4008	                mov rax, qword [rax + 8]	      2307	objcopy.c	FUNCTION_37	FOR_1	FOR_2	ELSE_6	IF_33
0x40037f6	          0x4885c0	                           test rax, rax	      2307	objcopy.c	FUNCTION_37	FOR_1	FOR_2	ELSE_6	IF_33
0x40037f9	            0x7556	                           jne 0x4003851	      2307	objcopy.c	FUNCTION_37	FOR_1	FOR_2	ELSE_6	IF_33
0x40037fb	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      2308	objcopy.c	FUNCTION_37	FOR_1	FOR_2	ELSE_6	IF_33
0x4003803	            0x744c	                            je 0x4003851	      2308	objcopy.c	FUNCTION_37	FOR_1	FOR_2	ELSE_6	IF_33
0x4003805	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2309	objcopy.c	FUNCTION_37	FOR_1	FOR_2	ELSE_6	IF_33
0x400380c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2309	objcopy.c	FUNCTION_37	FOR_1	FOR_2	ELSE_6	IF_33
0x4003810	          0x4885c0	                           test rax, rax	      2309	objcopy.c	FUNCTION_37	FOR_1	FOR_2	ELSE_6	IF_33
0x4003813	            0x753c	                           jne 0x4003851	      2309	objcopy.c	FUNCTION_37	FOR_1	FOR_2	ELSE_6	IF_33
0x4003815	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2310	objcopy.c	FUNCTION_37	FOR_1	FOR_2	ELSE_6	IF_33
0x400381c	    0x48c740100001	          mov qword [rax + 0x10], 0x100 	      2310	objcopy.c	FUNCTION_37	FOR_1	FOR_2	ELSE_6	IF_33
0x4003824	            0xeb2b	                           jmp 0x4003851	      2315	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x4003826	              0x90	                                     nop	      2212	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_24
0x4003827	            0xeb04	                           jmp 0x400382d	      2212	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_24
0x4003829	              0x90	                                     nop	      2216	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_25
0x400382a	            0xeb01	                           jmp 0x400382d	      2216	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_25
0x400382c	              0x90	                                     nop	      2255	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_26	IF_27
0x400382d	    0x4883ad68ffff	           sub qword [rbp - 0x98], 0x48 	      2200	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x4003835	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2200	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x400383c	    0x483b8510ffff	             cmp rax, qword [rbp - 0xf0]	      2200	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x4003843	     0xf83fafbffff	                           jae 0x4003443	      2200	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x4003849	            0xeb07	                           jmp 0x4003852	      2200	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x400384b	              0x90	                                     nop	      2194	objcopy.c	FUNCTION_37	FOR_1	IF_22
0x400384c	            0xeb04	                           jmp 0x4003852	      2194	objcopy.c	FUNCTION_37	FOR_1	IF_22
0x400384e	              0x90	                                     nop	      2289	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29
0x400384f	            0xeb01	                           jmp 0x4003852	      2289	objcopy.c	FUNCTION_37	FOR_1	FOR_2	IF_29
0x4003851	              0x90	                                     nop	      2315	objcopy.c	FUNCTION_37	FOR_1	FOR_2
0x4003852	    0x48838518ffff	           add qword [rbp - 0xe8], 0x48 	      2186	objcopy.c	FUNCTION_37	FOR_1
0x400385a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2186	objcopy.c	FUNCTION_37	FOR_1
0x4003861	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2186	objcopy.c	FUNCTION_37	FOR_1
0x4003865	     0xf827dfbffff	                            jb 0x40033e8	      2186	objcopy.c	FUNCTION_37	FOR_1
0x400386b	    0x83bdf4feffff	              cmp dword [rbp - 0x10c], 0	      2319	objcopy.c	FUNCTION_37	IF_34
0x4003872	     0xf848e030000	                            je 0x4003c06	      2319	objcopy.c	FUNCTION_37	IF_34
0x4003878	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      2325	objcopy.c	FUNCTION_37	IF_34
0x4003880	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      2326	objcopy.c	FUNCTION_37	IF_34
0x4003888	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2329	objcopy.c	FUNCTION_37	IF_34	CALL_24
0x400388f	          0x4889c7	                            mov rdi, rax	      2329	objcopy.c	FUNCTION_37	IF_34	CALL_24
0x4003892	      0xe800000000	                          call 0x4003897	      2329	objcopy.c	FUNCTION_37	IF_34	CALL_24
0x4003897	        0x488945d8	             mov qword [rbp - 0x28], rax	      2329	objcopy.c	FUNCTION_37	IF_34	CALL_24
0x400389b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2329	objcopy.c	FUNCTION_37	IF_34	CALL_24
0x400389f	        0x48894598	             mov qword [rbp - 0x68], rax	      2329	objcopy.c	FUNCTION_37	IF_34	CALL_24
0x40038a3	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2330	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x40038aa	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      2330	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x40038b1	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      2330	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x40038b8	        0x48894590	             mov qword [rbp - 0x70], rax	      2330	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x40038bc	      0xe9ee020000	                           jmp 0x4003baf	      2330	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x40038c1	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2334	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x40038c8	          0x488b10	                    mov rdx, qword [rax]	      2334	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x40038cb	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2334	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x40038d2	        0x488b4008	                mov rax, qword [rax + 8]	      2334	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x40038d6	          0x4801d0	                            add rax, rdx	      2334	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x40038d9	        0x4883c00c	                            add rax, 0xc	      2334	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x40038dd	        0x488945e0	             mov qword [rbp - 0x20], rax	      2334	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x40038e1	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2336	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35
0x40038e8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2336	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35
0x40038ec	          0x4885c0	                           test rax, rax	      2336	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35
0x40038ef	     0xf84aa020000	                            je 0x4003b9f	      2336	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35
0x40038f5	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2338	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36
0x40038fc	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2338	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36
0x40038ff	            0x85c0	                           test eax, eax	      2338	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36
0x4003901	     0xf845b020000	                            je 0x4003b62	      2338	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36
0x4003907	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2342	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x400390e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2342	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003912	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      2342	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003916	     0xf85c1000000	                           jne 0x40039dd	      2342	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x400391c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2342	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003923	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2342	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003927	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      2342	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x400392b	     0xf85ac000000	                           jne 0x40039dd	      2342	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003931	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2344	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003938	        0x488b4008	                mov rax, qword [rax + 8]	      2344	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x400393c	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2344	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003940	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2344	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003947	          0x488b12	                    mov rdx, qword [rdx]	      2344	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x400394a	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2344	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x400394e	          0x4889ce	                            mov rsi, rcx	      2344	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003951	          0x4889d7	                            mov rdi, rdx	      2344	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003954	            0xffd0	                                call rax	      2344	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003956	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2345	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x400395d	        0x488b4008	                mov rax, qword [rax + 8]	      2345	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003961	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2345	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003965	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2345	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003969	        0x4883c204	                              add rdx, 4	      2345	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x400396d	          0x4889d6	                            mov rsi, rdx	      2345	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003970	      0xbf00000000	                              mov edi, 0	      2345	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003975	            0xffd0	                                call rax	      2345	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003977	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2346	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x400397e	        0x488b4008	                mov rax, qword [rax + 8]	      2346	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003982	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2346	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003986	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2346	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x400398a	        0x488d4a08	                      lea rcx, [rdx + 8]	      2346	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x400398e	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2346	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003995	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      2346	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x4003999	          0x4889ce	                            mov rsi, rcx	      2346	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x400399c	          0x4889d7	                            mov rdi, rdx	      2346	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x400399f	            0xffd0	                                call rax	      2346	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x40039a1	      0x488345980c	             add qword [rbp - 0x68], 0xc	      2347	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x40039a6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2348	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37	CALL_25
0x40039ad	          0x488b10	                    mov rdx, qword [rax]	      2348	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37	CALL_25
0x40039b0	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2348	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37	CALL_25
0x40039b7	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      2348	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37	CALL_25
0x40039bb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2348	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37	CALL_25
0x40039bf	          0x4889ce	                            mov rsi, rcx	      2348	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37	CALL_25
0x40039c2	          0x4889c7	                            mov rdi, rax	      2348	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37	CALL_25
0x40039c5	      0xe800000000	                          call 0x40039ca	      2348	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37	CALL_25
0x40039ca	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2349	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x40039d1	          0x488b00	                    mov rax, qword [rax]	      2349	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x40039d4	        0x48014598	            add qword [rbp - 0x68], rax 	      2349	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x40039d8	      0xe9a4010000	                           jmp 0x4003b81	      2349	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	IF_37
0x40039dd	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2353	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x40039e4	        0x488b4008	                mov rax, qword [rax + 8]	      2353	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x40039e8	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2353	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x40039ec	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2353	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x40039f3	          0x488b12	                    mov rdx, qword [rdx]	      2353	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x40039f6	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2353	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x40039fa	          0x4889ce	                            mov rsi, rcx	      2353	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x40039fd	          0x4889d7	                            mov rdi, rdx	      2353	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x4003a00	            0xffd0	                                call rax	      2353	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x4003a02	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2354	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_26
0x4003a09	        0x488b4008	                mov rax, qword [rax + 8]	      2354	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_26
0x4003a0d	        0x488b5848	            mov rbx, qword [rax + 0x48] 	      2354	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_26
0x4003a11	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2354	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_26
0x4003a15	        0x4c8d6004	                      lea r12, [rax + 4]	      2354	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_26
0x4003a19	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2354	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_26
0x4003a20	          0x4889c7	                            mov rdi, rax	      2354	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_26
0x4003a23	      0xe874f1ffff	                       call sym.is_64bit	      2354	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_26
0x4003a28	            0x85c0	                           test eax, eax	      2354	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_26
0x4003a2a	            0x7407	                            je 0x4003a33	      2354	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_26
0x4003a2c	      0xb810000000	                           mov eax, 0x10	      2354	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_26
0x4003a31	            0xeb05	                           jmp 0x4003a38	      2354	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_26
0x4003a33	      0xb808000000	                              mov eax, 8	      2354	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_26
0x4003a38	          0x4c89e6	                            mov rsi, r12	      2354	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_26
0x4003a3b	          0x4889c7	                            mov rdi, rax	      2354	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_26
0x4003a3e	            0xffd3	                                call rbx	      2354	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_26
0x4003a40	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2355	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x4003a47	        0x488b4008	                mov rax, qword [rax + 8]	      2355	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x4003a4b	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2355	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x4003a4f	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2355	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x4003a53	        0x488d4a08	                      lea rcx, [rdx + 8]	      2355	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x4003a57	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2355	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x4003a5e	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      2355	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x4003a62	          0x4889ce	                            mov rsi, rcx	      2355	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x4003a65	          0x4889d7	                            mov rdi, rdx	      2355	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x4003a68	            0xffd0	                                call rax	      2355	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x4003a6a	      0x488345980c	             add qword [rbp - 0x68], 0xc	      2356	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x4003a6f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2357	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_27
0x4003a76	          0x488b10	                    mov rdx, qword [rax]	      2357	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_27
0x4003a79	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2357	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_27
0x4003a80	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      2357	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_27
0x4003a84	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2357	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_27
0x4003a88	          0x4889ce	                            mov rsi, rcx	      2357	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_27
0x4003a8b	          0x4889c7	                            mov rdi, rax	      2357	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_27
0x4003a8e	      0xe800000000	                          call 0x4003a93	      2357	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	CALL_27
0x4003a93	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2358	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x4003a9a	          0x488b00	                    mov rax, qword [rax]	      2358	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x4003a9d	        0x48014598	            add qword [rbp - 0x68], rax 	      2358	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7
0x4003aa1	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2359	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38	CALL_28
0x4003aa8	          0x4889c7	                            mov rdi, rax	      2359	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38	CALL_28
0x4003aab	      0xe8ecf0ffff	                       call sym.is_64bit	      2359	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38	CALL_28
0x4003ab0	            0x85c0	                           test eax, eax	      2359	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38	CALL_28
0x4003ab2	            0x7457	                            je 0x4003b0b	      2359	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38	CALL_28
0x4003ab4	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2361	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003abb	        0x488b4008	                mov rax, qword [rax + 8]	      2361	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003abf	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2361	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003ac3	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2361	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003aca	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      2361	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003ace	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2361	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003ad2	          0x4889ce	                            mov rsi, rcx	      2361	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003ad5	          0x4889d7	                            mov rdi, rdx	      2361	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003ad8	            0xffd0	                                call rax	      2361	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003ada	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2362	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003ae1	        0x488b4008	                mov rax, qword [rax + 8]	      2362	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003ae5	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2362	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003ae9	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2362	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003aed	        0x488d4a08	                      lea rcx, [rdx + 8]	      2362	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003af1	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2362	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003af8	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      2362	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003afc	          0x4889ce	                            mov rsi, rcx	      2362	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003aff	          0x4889d7	                            mov rdi, rdx	      2362	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003b02	            0xffd0	                                call rax	      2362	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003b04	      0x4883459810	            add qword [rbp - 0x68], 0x10	      2363	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003b09	            0xeb76	                           jmp 0x4003b81	      2363	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	IF_38
0x4003b0b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2367	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b12	        0x488b4008	                mov rax, qword [rax + 8]	      2367	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b16	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2367	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b1a	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2367	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b21	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      2367	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b25	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2367	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b29	          0x4889ce	                            mov rsi, rcx	      2367	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b2c	          0x4889d7	                            mov rdi, rdx	      2367	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b2f	            0xffd0	                                call rax	      2367	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b31	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2368	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b38	        0x488b4008	                mov rax, qword [rax + 8]	      2368	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b3c	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2368	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b40	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2368	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b44	        0x488d4a04	                      lea rcx, [rdx + 4]	      2368	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b48	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2368	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b4f	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      2368	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b53	          0x4889ce	                            mov rsi, rcx	      2368	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b56	          0x4889d7	                            mov rdi, rdx	      2368	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b59	            0xffd0	                                call rax	      2368	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b5b	      0x4883459808	               add qword [rbp - 0x68], 8	      2369	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b60	            0xeb1f	                           jmp 0x4003b81	      2369	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	IF_36	ELSE_7	ELSE_8
0x4003b62	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2375	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	ELSE_9	CALL_29
0x4003b66	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      2375	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	ELSE_9	CALL_29
0x4003b6a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2375	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	ELSE_9	CALL_29
0x4003b6e	          0x4889ce	                            mov rsi, rcx	      2375	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	ELSE_9	CALL_29
0x4003b71	          0x4889c7	                            mov rdi, rax	      2375	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	ELSE_9	CALL_29
0x4003b74	      0xe800000000	                          call 0x4003b79	      2375	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	ELSE_9	CALL_29
0x4003b79	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2376	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	ELSE_9
0x4003b7d	        0x48014598	            add qword [rbp - 0x68], rax 	      2376	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35	ELSE_9
0x4003b81	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2378	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35
0x4003b88	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2378	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35
0x4003b8c	        0x488945a0	             mov qword [rbp - 0x60], rax	      2378	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35
0x4003b90	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2379	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35
0x4003b97	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2379	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35
0x4003b9b	        0x488945a8	             mov qword [rbp - 0x58], rax	      2379	objcopy.c	FUNCTION_37	IF_34	FOR_5	IF_35
0x4003b9f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2382	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x4003ba3	        0x48014590	            add qword [rbp - 0x70], rax 	      2382	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x4003ba7	    0x48838518ffff	           add qword [rbp - 0xe8], 0x48 	      2332	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x4003baf	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2330	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x4003bb6	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2330	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x4003bba	     0xf8201fdffff	                            jb 0x40038c1	      2330	objcopy.c	FUNCTION_37	IF_34	FOR_5
0x4003bc0	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2385	objcopy.c	FUNCTION_37	IF_34
0x4003bc4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2385	objcopy.c	FUNCTION_37	IF_34
0x4003bc8	          0x4829c2	                            sub rdx, rax	      2385	objcopy.c	FUNCTION_37	IF_34
0x4003bcb	          0x4889d0	                            mov rax, rdx	      2385	objcopy.c	FUNCTION_37	IF_34
0x4003bce	        0x488945e8	             mov qword [rbp - 0x18], rax	      2385	objcopy.c	FUNCTION_37	IF_34
0x4003bd2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2386	objcopy.c	FUNCTION_37	IF_34	CALL_30
0x4003bd6	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2386	objcopy.c	FUNCTION_37	IF_34	CALL_30
0x4003bda	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      2386	objcopy.c	FUNCTION_37	IF_34	CALL_30
0x4003be1	          0x4889ce	                            mov rsi, rcx	      2386	objcopy.c	FUNCTION_37	IF_34	CALL_30
0x4003be4	          0x4889c7	                            mov rdi, rax	      2386	objcopy.c	FUNCTION_37	IF_34	CALL_30
0x4003be7	      0xe800000000	                          call 0x4003bec	      2386	objcopy.c	FUNCTION_37	IF_34	CALL_30
0x4003bec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2387	objcopy.c	FUNCTION_37	IF_34
0x4003bf0	    0x488985c8feff	            mov qword [rbp - 0x138], rax	      2387	objcopy.c	FUNCTION_37	IF_34
0x4003bf7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2388	objcopy.c	FUNCTION_37	IF_34	CALL_31
0x4003bfb	          0x4889c7	                            mov rdi, rax	      2388	objcopy.c	FUNCTION_37	IF_34	CALL_31
0x4003bfe	      0xe800000000	                          call 0x4003c03	      2388	objcopy.c	FUNCTION_37	IF_34	CALL_31
0x4003c03	            0xeb01	                           jmp 0x4003c06	      2388	objcopy.c	FUNCTION_37	IF_34	CALL_31
0x4003c05	              0x90	                                     nop	      1991	objcopy.c	FUNCTION_37	IF_1	IF_2
0x4003c06	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      2392	objcopy.c	FUNCTION_37	IF_39
0x4003c0e	            0x743b	                            je 0x4003c4b	      2392	objcopy.c	FUNCTION_37	IF_39
0x4003c10	      0xbf11000000	                           mov edi, 0x11	      2394	objcopy.c	FUNCTION_37	IF_39	CALL_32
0x4003c15	      0xe800000000	                          call 0x4003c1a	      2394	objcopy.c	FUNCTION_37	IF_39	CALL_32
0x4003c1a	    0x488b8d28ffff	             mov rcx, qword [rbp - 0xd8]	      2395	objcopy.c	FUNCTION_37	IF_39	CALL_33
0x4003c21	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      2395	objcopy.c	FUNCTION_37	IF_39	CALL_33
0x4003c28	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2395	objcopy.c	FUNCTION_37	IF_39	CALL_33
0x4003c2f	          0x4889c6	                            mov rsi, rax	      2395	objcopy.c	FUNCTION_37	IF_39	CALL_33
0x4003c32	      0xbf00000000	                              mov edi, 0	      2395	objcopy.c	FUNCTION_37	IF_39	CALL_33
0x4003c37	      0xb800000000	                              mov eax, 0	      2395	objcopy.c	FUNCTION_37	IF_39	CALL_33
0x4003c3c	      0xe800000000	                          call 0x4003c41	      2395	objcopy.c	FUNCTION_37	IF_39	CALL_33
0x4003c41	    0xc70500000000	               mov dword [0x04003c4b], 1	      2396	objcopy.c	FUNCTION_37	IF_39
0x4003c4b	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2399	objcopy.c	FUNCTION_37	CALL_34
0x4003c52	          0x4889c7	                            mov rdi, rax	      2399	objcopy.c	FUNCTION_37	CALL_34
0x4003c55	      0xe800000000	                          call 0x4003c5a	      2399	objcopy.c	FUNCTION_37	CALL_34
0x4003c5a	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2400	objcopy.c	FUNCTION_37
0x4003c61	    0x4881c4300100	                          add rsp, 0x130	      2401	objcopy.c	FUNCTION_37
0x4003c68	              0x5b	                                 pop rbx	      2401	objcopy.c	FUNCTION_37
0x4003c69	            0x415c	                                 pop r12	      2401	objcopy.c	FUNCTION_37
0x4003c6b	              0x5d	                                 pop rbp	      2401	objcopy.c	FUNCTION_37
0x4003c6c	              0xc3	                                     ret	      2401	objcopy.c	FUNCTION_37
setup_section	IF,22:FOR,0:ELSE,7:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,25	345
0x4006e66	              0x55	                                push rbp	      3664	objcopy.c	FUNCTION_45
0x4006e67	          0x4889e5	                            mov rbp, rsp	      3664	objcopy.c	FUNCTION_45
0x4006e6a	              0x53	                                push rbx	      3664	objcopy.c	FUNCTION_45
0x4006e6b	    0x4881ec980000	                           sub rsp, 0x98	      3664	objcopy.c	FUNCTION_45
0x4006e72	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      3664	objcopy.c	FUNCTION_45
0x4006e79	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      3664	objcopy.c	FUNCTION_45
0x4006e80	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      3664	objcopy.c	FUNCTION_45
0x4006e87	    0x64488b042528	                mov rax, qword fs:[0x28]	      3664	objcopy.c	FUNCTION_45
0x4006e90	        0x488945e8	             mov qword [rbp - 0x18], rax	      3664	objcopy.c	FUNCTION_45
0x4006e94	            0x31c0	                            xor eax, eax	      3664	objcopy.c	FUNCTION_45
0x4006e96	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3665	objcopy.c	FUNCTION_45
0x4006e9d	        0x488945c0	             mov qword [rbp - 0x40], rax	      3665	objcopy.c	FUNCTION_45
0x4006ea1	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      3674	objcopy.c	FUNCTION_45
0x4006ea9	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4006eb0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4006eb7	          0x4889d6	                            mov rsi, rdx	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4006eba	          0x4889c7	                            mov rdi, rax	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4006ebd	      0xe827a7ffff	               call sym.is_strip_section	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4006ec2	            0x85c0	                           test eax, eax	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4006ec4	     0xf85ff040000	                           jne 0x40073c9	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4006eca	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3681	objcopy.c	FUNCTION_45
0x4006ed1	          0x488b00	                    mov rax, qword [rax]	      3681	objcopy.c	FUNCTION_45
0x4006ed4	        0x488945b0	             mov qword [rbp - 0x50], rax	      3681	objcopy.c	FUNCTION_45
0x4006ed8	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3682	objcopy.c	FUNCTION_45
0x4006edf	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3682	objcopy.c	FUNCTION_45
0x4006ee2	          0x894588	             mov dword [rbp - 0x78], eax	      3682	objcopy.c	FUNCTION_45
0x4006ee5	        0x488d5588	                   lea rdx, [rbp - 0x78]	      3683	objcopy.c	FUNCTION_45	CALL_2
0x4006ee9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3683	objcopy.c	FUNCTION_45	CALL_2
0x4006eed	          0x4889d6	                            mov rsi, rdx	      3683	objcopy.c	FUNCTION_45	CALL_2
0x4006ef0	          0x4889c7	                            mov rdi, rax	      3683	objcopy.c	FUNCTION_45	CALL_2
0x4006ef3	      0xe887feffff	            call sym.find_section_rename	      3683	objcopy.c	FUNCTION_45	CALL_2
0x4006ef8	        0x488945b0	             mov qword [rbp - 0x50], rax	      3683	objcopy.c	FUNCTION_45	CALL_2
0x4006efc	    0x488b05000000	            mov rax, qword [0x04006f03] 	      3686	objcopy.c	FUNCTION_45	IF_2
0x4006f03	          0x4885c0	                           test rax, rax	      3686	objcopy.c	FUNCTION_45	IF_2
0x4006f06	            0x741e	                            je 0x4006f26	      3686	objcopy.c	FUNCTION_45	IF_2
0x4006f08	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3687	objcopy.c	FUNCTION_45	IF_2
0x4006f0f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3687	objcopy.c	FUNCTION_45	IF_2
0x4006f12	          0x83e001	                              and eax, 1	      3687	objcopy.c	FUNCTION_45	IF_2
0x4006f15	            0x85c0	                           test eax, eax	      3687	objcopy.c	FUNCTION_45	IF_2
0x4006f17	            0x740d	                            je 0x4006f26	      3687	objcopy.c	FUNCTION_45	IF_2
0x4006f19	    0x488b05000000	            mov rax, qword [0x04006f20] 	      3688	objcopy.c	FUNCTION_45	IF_2
0x4006f20	        0x488945b8	             mov qword [rbp - 0x48], rax	      3688	objcopy.c	FUNCTION_45	IF_2
0x4006f24	            0xeb17	                           jmp 0x4006f3d	      3688	objcopy.c	FUNCTION_45	IF_2
0x4006f26	    0x488b05000000	            mov rax, qword [0x04006f2d] 	      3689	objcopy.c	FUNCTION_45	ELSE_1	IF_3
0x4006f2d	          0x4885c0	                           test rax, rax	      3689	objcopy.c	FUNCTION_45	ELSE_1	IF_3
0x4006f30	            0x740b	                            je 0x4006f3d	      3689	objcopy.c	FUNCTION_45	ELSE_1	IF_3
0x4006f32	    0x488b05000000	            mov rax, qword [0x04006f39] 	      3690	objcopy.c	FUNCTION_45	ELSE_1	IF_3
0x4006f39	        0x488945b8	             mov qword [rbp - 0x48], rax	      3690	objcopy.c	FUNCTION_45	ELSE_1	IF_3
0x4006f3d	      0x48837db800	               cmp qword [rbp - 0x48], 0	      3692	objcopy.c	FUNCTION_45	IF_4
0x4006f42	            0x745c	                            je 0x4006fa0	      3692	objcopy.c	FUNCTION_45	IF_4
0x4006f44	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4006f48	          0x4889c7	                            mov rdi, rax	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4006f4b	      0xe800000000	                          call 0x4006f50	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4006f50	          0x4889c3	                            mov rbx, rax	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4006f53	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4006f57	          0x4889c7	                            mov rdi, rax	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4006f5a	      0xe800000000	                          call 0x4006f5f	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4006f5f	          0x4801d8	                            add rax, rbx	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4006f62	        0x4883c001	                              add rax, 1	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4006f66	          0x4889c7	                            mov rdi, rax	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4006f69	      0xe800000000	                          call 0x4006f6e	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4006f6e	        0x488945c8	             mov qword [rbp - 0x38], rax	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4006f72	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3697	objcopy.c	FUNCTION_45	IF_4	CALL_6
0x4006f76	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3697	objcopy.c	FUNCTION_45	IF_4	CALL_6
0x4006f7a	          0x4889d6	                            mov rsi, rdx	      3697	objcopy.c	FUNCTION_45	IF_4	CALL_6
0x4006f7d	          0x4889c7	                            mov rdi, rax	      3697	objcopy.c	FUNCTION_45	IF_4	CALL_6
0x4006f80	      0xe800000000	                          call 0x4006f85	      3697	objcopy.c	FUNCTION_45	IF_4	CALL_6
0x4006f85	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      3698	objcopy.c	FUNCTION_45	IF_4	CALL_7
0x4006f89	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3698	objcopy.c	FUNCTION_45	IF_4	CALL_7
0x4006f8d	          0x4889d6	                            mov rsi, rdx	      3698	objcopy.c	FUNCTION_45	IF_4	CALL_7
0x4006f90	          0x4889c7	                            mov rdi, rax	      3698	objcopy.c	FUNCTION_45	IF_4	CALL_7
0x4006f93	      0xe800000000	                          call 0x4006f98	      3698	objcopy.c	FUNCTION_45	IF_4	CALL_7
0x4006f98	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3699	objcopy.c	FUNCTION_45	IF_4
0x4006f9c	        0x488945b0	             mov qword [rbp - 0x50], rax	      3699	objcopy.c	FUNCTION_45	IF_4
0x4006fa0	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      3702	objcopy.c	FUNCTION_45
0x4006fa7	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3704	objcopy.c	FUNCTION_45	CALL_8
0x4006fae	          0x488b00	                    mov rax, qword [rax]	      3704	objcopy.c	FUNCTION_45	CALL_8
0x4006fb1	      0xba40000000	                           mov edx, 0x40	      3704	objcopy.c	FUNCTION_45	CALL_8
0x4006fb6	      0xbe00000000	                              mov esi, 0	      3704	objcopy.c	FUNCTION_45	CALL_8
0x4006fbb	          0x4889c7	                            mov rdi, rax	      3704	objcopy.c	FUNCTION_45	CALL_8
0x4006fbe	      0xe8a699ffff	              call sym.find_section_list	      3704	objcopy.c	FUNCTION_45	CALL_8
0x4006fc3	        0x488945d0	             mov qword [rbp - 0x30], rax	      3704	objcopy.c	FUNCTION_45	CALL_8
0x4006fc7	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      3706	objcopy.c	FUNCTION_45	IF_5
0x4006fcc	            0x7417	                            je 0x4006fe5	      3706	objcopy.c	FUNCTION_45	IF_5
0x4006fce	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3707	objcopy.c	FUNCTION_45	IF_5
0x4006fd2	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3707	objcopy.c	FUNCTION_45	IF_5
0x4006fd5	          0x8b5588	             mov edx, dword [rbp - 0x78]	      3707	objcopy.c	FUNCTION_45	IF_5
0x4006fd8	    0x81e204010000	                          and edx, 0x104	      3707	objcopy.c	FUNCTION_45	IF_5
0x4006fde	             0x9d0	                             or eax, edx	      3707	objcopy.c	FUNCTION_45	IF_5
0x4006fe0	          0x894588	             mov dword [rbp - 0x78], eax	      3707	objcopy.c	FUNCTION_45	IF_5
0x4006fe3	            0xeb71	                           jmp 0x4007056	      3707	objcopy.c	FUNCTION_45	IF_5
0x4006fe5	    0x8b0500000000	            mov eax, dword [0x04006feb] 	      3708	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4006feb	          0x83f804	                              cmp eax, 4	      3708	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4006fee	            0x7566	                           jne 0x4007056	      3708	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4006ff0	          0x8b4588	             mov eax, dword [rbp - 0x78]	      3709	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4006ff3	      0x2501000002	                      and eax, 0x2000001	      3709	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4006ff8	            0x85c0	                           test eax, eax	      3709	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4006ffa	            0x745a	                            je 0x4007056	      3709	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4006ffc	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x4007003	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x400700a	          0x4889d6	                            mov rsi, rdx	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x400700d	          0x4889c7	                            mov rdi, rax	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x4007010	      0xe802a7ffff	call sym.is_nondebug_keep_contents_section	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x4007015	            0x85c0	                           test eax, eax	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x4007017	            0x753d	                           jne 0x4007056	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x4007019	          0x8b4588	             mov eax, dword [rbp - 0x78]	      3712	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x400701c	      0x25fdfefffd	                     and eax, 0xfdfffefd	      3712	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4007021	          0x894588	             mov dword [rbp - 0x78], eax	      3712	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4007024	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3713	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x4007028	        0x488b4008	                mov rax, qword [rax + 8]	      3713	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x400702c	          0x8b4008	                mov eax, dword [rax + 8]	      3713	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x400702f	          0x83f805	                              cmp eax, 5	      3713	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x4007032	            0x7522	                           jne 0x4007056	      3713	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x4007034	    0xc7458c010000	               mov dword [rbp - 0x74], 1	      3715	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x400703b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3721	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x4007042	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3721	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x4007045	      0x25fdfefffd	                     and eax, 0xfdfffefd	      3721	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x400704a	            0x89c2	                            mov edx, eax	      3721	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x400704c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3721	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x4007053	          0x895020	             mov dword [rax + 0x20], edx	      3721	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x4007056	          0x8b5588	             mov edx, dword [rbp - 0x78]	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4007059	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      3725	objcopy.c	FUNCTION_45	CALL_10
0x400705d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4007061	          0x4889ce	                            mov rsi, rcx	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4007064	          0x4889c7	                            mov rdi, rax	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4007067	      0xe800000000	                          call 0x400706c	      3725	objcopy.c	FUNCTION_45	CALL_10
0x400706c	        0x488945d8	             mov qword [rbp - 0x28], rax	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4007070	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      3727	objcopy.c	FUNCTION_45	IF_8
0x4007075	            0x7513	                           jne 0x400708a	      3727	objcopy.c	FUNCTION_45	IF_8
0x4007077	      0xbf00000000	                              mov edi, 0	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x400707c	      0xe800000000	                          call 0x4007081	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x4007081	        0x488945a8	             mov qword [rbp - 0x58], rax	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x4007085	      0xe915030000	                           jmp 0x400739f	      3730	objcopy.c	FUNCTION_45	IF_8
0x400708a	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      3733	objcopy.c	FUNCTION_45	IF_9
0x400708e	            0x7412	                            je 0x40070a2	      3733	objcopy.c	FUNCTION_45	IF_9
0x4007090	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3734	objcopy.c	FUNCTION_45	CALL_12
0x4007094	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3734	objcopy.c	FUNCTION_45	CALL_12
0x400709b	    0xc74004080000	                  mov dword [rax + 4], 8	      3734	objcopy.c	FUNCTION_45	CALL_12
0x40070a2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3736	objcopy.c	FUNCTION_45
0x40070a9	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3736	objcopy.c	FUNCTION_45
0x40070ad	        0x48894590	             mov qword [rbp - 0x70], rax	      3736	objcopy.c	FUNCTION_45
0x40070b1	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      3737	objcopy.c	FUNCTION_45	CALL_13
0x40070b5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      3737	objcopy.c	FUNCTION_45	CALL_13
0x40070b9	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	      3737	objcopy.c	FUNCTION_45	CALL_13
0x40070c0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3737	objcopy.c	FUNCTION_45	CALL_13
0x40070c7	          0x4889c7	                            mov rdi, rax	      3737	objcopy.c	FUNCTION_45	CALL_13
0x40070ca	      0xe800000000	                          call 0x40070cf	      3737	objcopy.c	FUNCTION_45	CALL_13
0x40070cf	        0x48894590	             mov qword [rbp - 0x70], rax	      3737	objcopy.c	FUNCTION_45	CALL_13
0x40070d3	    0x8b0500000000	            mov eax, dword [0x040070d9] 	      3738	objcopy.c	FUNCTION_45	IF_10
0x40070d9	            0x85c0	                           test eax, eax	      3738	objcopy.c	FUNCTION_45	IF_10
0x40070db	            0x783a	                            js 0x4007117	      3738	objcopy.c	FUNCTION_45	IF_10
0x40070dd	    0x8b0500000000	            mov eax, dword [0x040070e3] 	      3739	objcopy.c	FUNCTION_45	IF_10
0x40070e3	          0x4863d0	                         movsxd rdx, eax	      3739	objcopy.c	FUNCTION_45	IF_10
0x40070e6	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3739	objcopy.c	FUNCTION_45	IF_10
0x40070ea	          0x4801d0	                            add rax, rdx	      3739	objcopy.c	FUNCTION_45	IF_10
0x40070ed	        0x4883e801	                              sub rax, 1	      3739	objcopy.c	FUNCTION_45	IF_10
0x40070f1	    0x8b1500000000	            mov edx, dword [0x040070f7] 	      3739	objcopy.c	FUNCTION_45	IF_10
0x40070f7	          0x4863da	                         movsxd rbx, edx	      3739	objcopy.c	FUNCTION_45	IF_10
0x40070fa	      0xba00000000	                              mov edx, 0	      3739	objcopy.c	FUNCTION_45	IF_10
0x40070ff	          0x48f7f3	                                 div rbx	      3739	objcopy.c	FUNCTION_45	IF_10
0x4007102	          0x4889c2	                            mov rdx, rax	      3739	objcopy.c	FUNCTION_45	IF_10
0x4007105	    0x8b0500000000	            mov eax, dword [0x0400710b] 	      3739	objcopy.c	FUNCTION_45	IF_10
0x400710b	            0x4898	                                    cdqe	      3739	objcopy.c	FUNCTION_45	IF_10
0x400710d	        0x480fafc2	                           imul rax, rdx	      3739	objcopy.c	FUNCTION_45	IF_10
0x4007111	        0x48894590	             mov qword [rbp - 0x70], rax	      3739	objcopy.c	FUNCTION_45	IF_10
0x4007115	            0xeb12	                           jmp 0x4007129	      3739	objcopy.c	FUNCTION_45	IF_10
0x4007117	    0x8b0500000000	            mov eax, dword [0x0400711d] 	      3740	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x400711d	            0x85c0	                           test eax, eax	      3740	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x400711f	            0x7408	                            je 0x4007129	      3740	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4007121	    0x48c745900000	               mov qword [rbp - 0x70], 0	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4007129	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x400712d	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4007131	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4007135	          0x4889ce	                            mov rsi, rcx	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4007138	          0x4889c7	                            mov rdi, rax	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x400713b	      0xe800000000	                          call 0x4007140	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4007140	            0x85c0	                           test eax, eax	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4007142	            0x7513	                           jne 0x4007157	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4007144	      0xbf00000000	                              mov edi, 0	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x4007149	      0xe800000000	                          call 0x400714e	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x400714e	        0x488945a8	             mov qword [rbp - 0x58], rax	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x4007152	      0xe948020000	                           jmp 0x400739f	      3745	objcopy.c	FUNCTION_45	IF_12
0x4007157	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3748	objcopy.c	FUNCTION_45
0x400715e	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3748	objcopy.c	FUNCTION_45
0x4007162	        0x48894598	             mov qword [rbp - 0x68], rax	      3748	objcopy.c	FUNCTION_45
0x4007166	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3749	objcopy.c	FUNCTION_45	CALL_16
0x400716d	          0x488b00	                    mov rax, qword [rax]	      3749	objcopy.c	FUNCTION_45	CALL_16
0x4007170	      0xba0c000000	                            mov edx, 0xc	      3749	objcopy.c	FUNCTION_45	CALL_16
0x4007175	      0xbe00000000	                              mov esi, 0	      3749	objcopy.c	FUNCTION_45	CALL_16
0x400717a	          0x4889c7	                            mov rdi, rax	      3749	objcopy.c	FUNCTION_45	CALL_16
0x400717d	      0xe8e797ffff	              call sym.find_section_list	      3749	objcopy.c	FUNCTION_45	CALL_16
0x4007182	        0x488945d0	             mov qword [rbp - 0x30], rax	      3749	objcopy.c	FUNCTION_45	CALL_16
0x4007186	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      3751	objcopy.c	FUNCTION_45	IF_13
0x400718b	            0x742a	                            je 0x40071b7	      3751	objcopy.c	FUNCTION_45	IF_13
0x400718d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3753	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4007191	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3753	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4007194	          0x83e004	                              and eax, 4	      3753	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4007197	            0x85c0	                           test eax, eax	      3753	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4007199	            0x740e	                            je 0x40071a9	      3753	objcopy.c	FUNCTION_45	IF_13	IF_14
0x400719b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3754	objcopy.c	FUNCTION_45	IF_13	IF_14
0x400719f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3754	objcopy.c	FUNCTION_45	IF_13	IF_14
0x40071a3	        0x48894598	             mov qword [rbp - 0x68], rax	      3754	objcopy.c	FUNCTION_45	IF_13	IF_14
0x40071a7	            0xeb19	                           jmp 0x40071c2	      3754	objcopy.c	FUNCTION_45	IF_13	IF_14
0x40071a9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x40071ad	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x40071b1	        0x48014598	            add qword [rbp - 0x68], rax 	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x40071b5	            0xeb0b	                           jmp 0x40071c2	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x40071b7	    0x488b05000000	            mov rax, qword [0x040071be] 	      3759	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5
0x40071be	        0x48014598	            add qword [rbp - 0x68], rax 	      3759	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5
0x40071c2	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3761	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5	IF_15	CALL_17
0x40071c6	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      3761	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5	IF_15	CALL_17
0x40071ca	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3761	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5	IF_15	CALL_17
0x40071ce	          0x4889ce	                            mov rsi, rcx	      3761	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5	IF_15	CALL_17
0x40071d1	          0x4889c7	                            mov rdi, rax	      3761	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5	IF_15	CALL_17
0x40071d4	      0xe8678effff	            call sym.bfd_set_section_vma	      3761	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5	IF_15	CALL_17
0x40071d9	            0x85c0	                           test eax, eax	      3761	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5	IF_15	CALL_17
0x40071db	            0x7513	                           jne 0x40071f0	      3761	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5	IF_15	CALL_17
0x40071dd	      0xbf00000000	                              mov edi, 0	      3763	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5	IF_15	CALL_18
0x40071e2	      0xe800000000	                          call 0x40071e7	      3763	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5	IF_15	CALL_18
0x40071e7	        0x488945a8	             mov qword [rbp - 0x58], rax	      3763	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5	IF_15	CALL_18
0x40071eb	      0xe9af010000	                           jmp 0x400739f	      3764	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5	IF_15
0x40071f0	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3767	objcopy.c	FUNCTION_45
0x40071f7	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3767	objcopy.c	FUNCTION_45
0x40071fb	        0x488945a0	             mov qword [rbp - 0x60], rax	      3767	objcopy.c	FUNCTION_45
0x40071ff	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3768	objcopy.c	FUNCTION_45	CALL_19
0x4007206	          0x488b00	                    mov rax, qword [rax]	      3768	objcopy.c	FUNCTION_45	CALL_19
0x4007209	      0xba30000000	                           mov edx, 0x30	      3768	objcopy.c	FUNCTION_45	CALL_19
0x400720e	      0xbe00000000	                              mov esi, 0	      3768	objcopy.c	FUNCTION_45	CALL_19
0x4007213	          0x4889c7	                            mov rdi, rax	      3768	objcopy.c	FUNCTION_45	CALL_19
0x4007216	      0xe84e97ffff	              call sym.find_section_list	      3768	objcopy.c	FUNCTION_45	CALL_19
0x400721b	        0x488945d0	             mov qword [rbp - 0x30], rax	      3768	objcopy.c	FUNCTION_45	CALL_19
0x400721f	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      3770	objcopy.c	FUNCTION_45	IF_16
0x4007224	            0x742a	                            je 0x4007250	      3770	objcopy.c	FUNCTION_45	IF_16
0x4007226	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3772	objcopy.c	FUNCTION_45	IF_16	IF_17
0x400722a	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3772	objcopy.c	FUNCTION_45	IF_16	IF_17
0x400722d	          0x83e020	                           and eax, 0x20	      3772	objcopy.c	FUNCTION_45	IF_16	IF_17
0x4007230	            0x85c0	                           test eax, eax	      3772	objcopy.c	FUNCTION_45	IF_16	IF_17
0x4007232	            0x740e	                            je 0x4007242	      3772	objcopy.c	FUNCTION_45	IF_16	IF_17
0x4007234	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3773	objcopy.c	FUNCTION_45	IF_16	IF_17
0x4007238	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3773	objcopy.c	FUNCTION_45	IF_16	IF_17
0x400723c	        0x480145a0	            add qword [rbp - 0x60], rax 	      3773	objcopy.c	FUNCTION_45	IF_16	IF_17
0x4007240	            0xeb19	                           jmp 0x400725b	      3773	objcopy.c	FUNCTION_45	IF_16	IF_17
0x4007242	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3775	objcopy.c	FUNCTION_45	IF_16	ELSE_6
0x4007246	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3775	objcopy.c	FUNCTION_45	IF_16	ELSE_6
0x400724a	        0x488945a0	             mov qword [rbp - 0x60], rax	      3775	objcopy.c	FUNCTION_45	IF_16	ELSE_6
0x400724e	            0xeb0b	                           jmp 0x400725b	      3775	objcopy.c	FUNCTION_45	IF_16	ELSE_6
0x4007250	    0x488b05000000	            mov rax, qword [0x04007257] 	      3778	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x4007257	        0x480145a0	            add qword [rbp - 0x60], rax 	      3778	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x400725b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3780	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x400725f	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3780	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x4007263	        0x48895030	             mov qword [rax + 0x30], rdx	      3780	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x4007267	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3784	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7	IF_18	CALL_20
0x400726e	          0x8b5070	            mov edx, dword [rax + 0x70] 	      3784	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7	IF_18	CALL_20
0x4007271	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      3784	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7	IF_18	CALL_20
0x4007275	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3784	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7	IF_18	CALL_20
0x4007279	          0x4889ce	                            mov rsi, rcx	      3784	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7	IF_18	CALL_20
0x400727c	          0x4889c7	                            mov rdi, rax	      3784	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7	IF_18	CALL_20
0x400727f	      0xe8fd8dffff	      call sym.bfd_set_section_alignment	      3784	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7	IF_18	CALL_20
0x4007284	            0x85c0	                           test eax, eax	      3784	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7	IF_18	CALL_20
0x4007286	            0x7513	                           jne 0x400729b	      3784	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7	IF_18	CALL_20
0x4007288	      0xbf00000000	                              mov edi, 0	      3788	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7	IF_18	CALL_21
0x400728d	      0xe800000000	                          call 0x4007292	      3788	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7	IF_18	CALL_21
0x4007292	        0x488945a8	             mov qword [rbp - 0x58], rax	      3788	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7	IF_18	CALL_21
0x4007296	      0xe904010000	                           jmp 0x400739f	      3789	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7	IF_18
0x400729b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3793	objcopy.c	FUNCTION_45
0x40072a2	    0x8b90c4000000	            mov edx, dword [rax + 0xc4] 	      3793	objcopy.c	FUNCTION_45
0x40072a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3793	objcopy.c	FUNCTION_45
0x40072ac	    0x8990c4000000	             mov dword [rax + 0xc4], edx	      3793	objcopy.c	FUNCTION_45
0x40072b2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3796	objcopy.c	FUNCTION_45
0x40072b9	         0xfb64024	           movzx eax, byte [rax + 0x24] 	      3796	objcopy.c	FUNCTION_45
0x40072bd	          0xc0e804	                               shr al, 4	      3796	objcopy.c	FUNCTION_45
0x40072c0	          0x83e003	                              and eax, 3	      3796	objcopy.c	FUNCTION_45
0x40072c3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3796	objcopy.c	FUNCTION_45
0x40072c7	          0x83e003	                              and eax, 3	      3796	objcopy.c	FUNCTION_45
0x40072ca	          0xc1e004	                              shl eax, 4	      3796	objcopy.c	FUNCTION_45
0x40072cd	            0x89c1	                            mov ecx, eax	      3796	objcopy.c	FUNCTION_45
0x40072cf	         0xfb64224	           movzx eax, byte [rdx + 0x24] 	      3796	objcopy.c	FUNCTION_45
0x40072d3	          0x83e0cf	                     and eax, 0xffffffcf	      3796	objcopy.c	FUNCTION_45
0x40072d6	             0x9c8	                             or eax, ecx	      3796	objcopy.c	FUNCTION_45
0x40072d8	          0x884224	               mov byte [rdx + 0x24], al	      3796	objcopy.c	FUNCTION_45
0x40072db	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3801	objcopy.c	FUNCTION_45
0x40072e2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3801	objcopy.c	FUNCTION_45
0x40072e6	        0x48895068	             mov qword [rax + 0x68], rdx	      3801	objcopy.c	FUNCTION_45
0x40072ea	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3802	objcopy.c	FUNCTION_45
0x40072f1	    0x48c740600000	               mov qword [rax + 0x60], 0	      3802	objcopy.c	FUNCTION_45
0x40072f9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3804	objcopy.c	FUNCTION_45	IF_19
0x4007300	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3804	objcopy.c	FUNCTION_45	IF_19
0x4007303	      0x2500000002	                      and eax, 0x2000000	      3804	objcopy.c	FUNCTION_45	IF_19
0x4007308	            0x85c0	                           test eax, eax	      3804	objcopy.c	FUNCTION_45	IF_19
0x400730a	            0x7459	                            je 0x4007365	      3804	objcopy.c	FUNCTION_45	IF_19
0x400730c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3806	objcopy.c	FUNCTION_45	IF_19	CALL_22
0x4007313	          0x4889c7	                            mov rdi, rax	      3806	objcopy.c	FUNCTION_45	IF_19	CALL_22
0x4007316	      0xe8cc9effff	                call sym.group_signature	      3806	objcopy.c	FUNCTION_45	IF_19	CALL_22
0x400731b	        0x488945e0	             mov qword [rbp - 0x20], rax	      3806	objcopy.c	FUNCTION_45	IF_19	CALL_22
0x400731f	      0x48837de000	               cmp qword [rbp - 0x20], 0	      3808	objcopy.c	FUNCTION_45	IF_19	IF_20
0x4007324	            0x743f	                            je 0x4007365	      3808	objcopy.c	FUNCTION_45	IF_19	IF_20
0x4007326	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3810	objcopy.c	FUNCTION_45	IF_19	IF_20
0x400732a	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3810	objcopy.c	FUNCTION_45	IF_19	IF_20
0x400732d	          0x83c820	                            or eax, 0x20	      3810	objcopy.c	FUNCTION_45	IF_19	IF_20
0x4007330	            0x89c2	                            mov edx, eax	      3810	objcopy.c	FUNCTION_45	IF_19	IF_20
0x4007332	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3810	objcopy.c	FUNCTION_45	IF_19	IF_20
0x4007336	          0x895018	             mov dword [rax + 0x18], edx	      3810	objcopy.c	FUNCTION_45	IF_19	IF_20
0x4007339	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x4007340	        0x488b4008	                mov rax, qword [rax + 8]	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x4007344	          0x8b4008	                mov eax, dword [rax + 8]	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x4007347	          0x83f805	                              cmp eax, 5	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x400734a	            0x7519	                           jne 0x4007365	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x400734c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3812	objcopy.c	FUNCTION_45	IF_19	IF_20	CALL_23
0x4007353	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3812	objcopy.c	FUNCTION_45	IF_19	IF_20	CALL_23
0x400735a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3812	objcopy.c	FUNCTION_45	IF_19	IF_20	CALL_23
0x400735e	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      3812	objcopy.c	FUNCTION_45	IF_19	IF_20	CALL_23
0x4007365	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3818	objcopy.c	FUNCTION_45	IF_22
0x4007369	        0x488b4008	                mov rax, qword [rax + 8]	      3818	objcopy.c	FUNCTION_45	IF_22
0x400736d	    0x488b80500100	           mov rax, qword [rax + 0x150] 	      3818	objcopy.c	FUNCTION_45	IF_22
0x4007374	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      3818	objcopy.c	FUNCTION_45	IF_22
0x4007378	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      3818	objcopy.c	FUNCTION_45	IF_22
0x400737c	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	      3818	objcopy.c	FUNCTION_45	IF_22
0x4007383	    0x488bbd78ffff	             mov rdi, qword [rbp - 0x88]	      3818	objcopy.c	FUNCTION_45	IF_22
0x400738a	            0xffd0	                                call rax	      3818	objcopy.c	FUNCTION_45	IF_22
0x400738c	            0x85c0	                           test eax, eax	      3818	objcopy.c	FUNCTION_45	IF_22
0x400738e	            0x753c	                           jne 0x40073cc	      3818	objcopy.c	FUNCTION_45	IF_22
0x4007390	      0xbf00000000	                              mov edi, 0	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x4007395	      0xe800000000	                          call 0x400739a	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x400739a	        0x488945a8	             mov qword [rbp - 0x58], rax	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x400739e	              0x90	                                     nop	      3821	objcopy.c	FUNCTION_45	IF_22
0x400739f	    0xc70500000000	               mov dword [0x040073a9], 1	      3828	objcopy.c	FUNCTION_45
0x40073a9	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      3829	objcopy.c	FUNCTION_45	CALL_25
0x40073ad	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3829	objcopy.c	FUNCTION_45	CALL_25
0x40073b1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3829	objcopy.c	FUNCTION_45	CALL_25
0x40073b5	          0x4889c6	                            mov rsi, rax	      3829	objcopy.c	FUNCTION_45	CALL_25
0x40073b8	      0xbf00000000	                              mov edi, 0	      3829	objcopy.c	FUNCTION_45	CALL_25
0x40073bd	      0xb800000000	                              mov eax, 0	      3829	objcopy.c	FUNCTION_45	CALL_25
0x40073c2	      0xe800000000	                          call 0x40073c7	      3829	objcopy.c	FUNCTION_45	CALL_25
0x40073c7	            0xeb04	                           jmp 0x40073cd	      3829	objcopy.c	FUNCTION_45	CALL_25
0x40073c9	              0x90	                                     nop	      3678	objcopy.c	FUNCTION_45	IF_1
0x40073ca	            0xeb01	                           jmp 0x40073cd	      3678	objcopy.c	FUNCTION_45	IF_1
0x40073cc	              0x90	                                     nop	      3825	objcopy.c	FUNCTION_45
0x40073cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3830	objcopy.c	FUNCTION_45
0x40073d1	    0x644833042528	                xor rax, qword fs:[0x28]	      3830	objcopy.c	FUNCTION_45
0x40073da	            0x7405	                            je 0x40073e1	      3830	objcopy.c	FUNCTION_45
0x40073dc	      0xe800000000	                          call 0x40073e1	      3830	objcopy.c	FUNCTION_45
0x40073e1	    0x4881c4980000	                           add rsp, 0x98	      3830	objcopy.c	FUNCTION_45
0x40073e8	              0x5b	                                 pop rbx	      3830	objcopy.c	FUNCTION_45
0x40073e9	              0x5d	                                 pop rbp	      3830	objcopy.c	FUNCTION_45
0x40073ea	              0xc3	                                     ret	      3830	objcopy.c	FUNCTION_45
gap_exists	IF,1:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,0	35
0x4002aeb	              0x55	                                push rbp	      1922	objcopy.c	FUNCTION_33
0x4002aec	          0x4889e5	                            mov rbp, rsp	      1922	objcopy.c	FUNCTION_33
0x4002aef	        0x48897df8	                mov qword [rbp - 8], rdi	      1922	objcopy.c	FUNCTION_33
0x4002af3	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1922	objcopy.c	FUNCTION_33
0x4002af7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1924	objcopy.c	FUNCTION_33	IF_1
0x4002afb	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1924	objcopy.c	FUNCTION_33	IF_1
0x4002aff	          0x4885c0	                           test rax, rax	      1924	objcopy.c	FUNCTION_33	IF_1
0x4002b02	            0x740d	                            je 0x4002b11	      1924	objcopy.c	FUNCTION_33	IF_1
0x4002b04	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1924	objcopy.c	FUNCTION_33	IF_1
0x4002b08	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1924	objcopy.c	FUNCTION_33	IF_1
0x4002b0c	          0x4885c0	                           test rax, rax	      1924	objcopy.c	FUNCTION_33	IF_1
0x4002b0f	            0x7507	                           jne 0x4002b18	      1924	objcopy.c	FUNCTION_33	IF_1
0x4002b11	      0xb801000000	                              mov eax, 1	      1925	objcopy.c	FUNCTION_33	IF_1
0x4002b16	            0xeb46	                           jmp 0x4002b5e	      1925	objcopy.c	FUNCTION_33	IF_1
0x4002b18	        0x488b45f8	                mov rax, qword [rbp - 8]	      1929	objcopy.c	FUNCTION_33
0x4002b1c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1929	objcopy.c	FUNCTION_33
0x4002b20	        0x488d500f	                    lea rdx, [rax + 0xf]	      1929	objcopy.c	FUNCTION_33
0x4002b24	        0x488b45f8	                mov rax, qword [rbp - 8]	      1929	objcopy.c	FUNCTION_33
0x4002b28	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1929	objcopy.c	FUNCTION_33
0x4002b2c	          0x4839c2	                            cmp rdx, rax	      1929	objcopy.c	FUNCTION_33
0x4002b2f	            0x7215	                            jb 0x4002b46	      1929	objcopy.c	FUNCTION_33
0x4002b31	        0x488b45f8	                mov rax, qword [rbp - 8]	      1929	objcopy.c	FUNCTION_33
0x4002b35	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1929	objcopy.c	FUNCTION_33
0x4002b39	        0x4883c00f	                            add rax, 0xf	      1929	objcopy.c	FUNCTION_33
0x4002b3d	        0x4883e0f0	             and rax, 0xfffffffffffffff0	      1929	objcopy.c	FUNCTION_33
0x4002b41	          0x4889c2	                            mov rdx, rax	      1929	objcopy.c	FUNCTION_33
0x4002b44	            0xeb07	                           jmp 0x4002b4d	      1929	objcopy.c	FUNCTION_33
0x4002b46	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1929	objcopy.c	FUNCTION_33
0x4002b4d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1929	objcopy.c	FUNCTION_33
0x4002b51	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1929	objcopy.c	FUNCTION_33
0x4002b55	          0x4839c2	                            cmp rdx, rax	      1929	objcopy.c	FUNCTION_33
0x4002b58	           0xf92c0	                                 setb al	      1929	objcopy.c	FUNCTION_33
0x4002b5b	           0xfb6c0	                           movzx eax, al	      1929	objcopy.c	FUNCTION_33
0x4002b5e	              0x5d	                                 pop rbp	      1930	objcopy.c	FUNCTION_33
0x4002b5f	              0xc3	                                     ret	      1930	objcopy.c	FUNCTION_33
is_open_note	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,0	10
0x4002b60	              0x55	                                push rbp	      1934	objcopy.c	FUNCTION_34
0x4002b61	          0x4889e5	                            mov rbp, rsp	      1934	objcopy.c	FUNCTION_34
0x4002b64	        0x48897df8	                mov qword [rbp - 8], rdi	      1934	objcopy.c	FUNCTION_34
0x4002b68	        0x488b45f8	                mov rax, qword [rbp - 8]	      1935	objcopy.c	FUNCTION_34
0x4002b6c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1935	objcopy.c	FUNCTION_34
0x4002b70	    0x483d00010000	                          cmp rax, 0x100	      1935	objcopy.c	FUNCTION_34
0x4002b76	           0xf94c0	                                 sete al	      1935	objcopy.c	FUNCTION_34
0x4002b79	           0xfb6c0	                           movzx eax, al	      1935	objcopy.c	FUNCTION_34
0x4002b7c	              0x5d	                                 pop rbp	      1936	objcopy.c	FUNCTION_34
0x4002b7d	              0xc3	                                     ret	      1936	objcopy.c	FUNCTION_34
group_signature	IF,4:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,4	65
0x40011e7	              0x55	                                push rbp	      1202	objcopy.c	FUNCTION_17
0x40011e8	          0x4889e5	                            mov rbp, rsp	      1202	objcopy.c	FUNCTION_17
0x40011eb	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1202	objcopy.c	FUNCTION_17
0x40011ef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1203	objcopy.c	FUNCTION_17
0x40011f3	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      1203	objcopy.c	FUNCTION_17
0x40011fa	        0x488945e0	             mov qword [rbp - 0x20], rax	      1203	objcopy.c	FUNCTION_17
0x40011fe	    0x488b05000000	            mov rax, qword [0x04001205] 	      1207	objcopy.c	FUNCTION_17	IF_1
0x4001205	          0x4885c0	                           test rax, rax	      1207	objcopy.c	FUNCTION_17	IF_1
0x4001208	            0x750a	                           jne 0x4001214	      1207	objcopy.c	FUNCTION_17	IF_1
0x400120a	      0xb800000000	                              mov eax, 0	      1208	objcopy.c	FUNCTION_17	IF_1
0x400120f	      0xe9ce000000	                           jmp 0x40012e2	      1208	objcopy.c	FUNCTION_17	IF_1
0x4001214	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1210	objcopy.c	FUNCTION_17	IF_2
0x4001218	        0x488b4008	                mov rax, qword [rax + 8]	      1210	objcopy.c	FUNCTION_17	IF_2
0x400121c	          0x8b4008	                mov eax, dword [rax + 8]	      1210	objcopy.c	FUNCTION_17	IF_2
0x400121f	          0x83f805	                              cmp eax, 5	      1210	objcopy.c	FUNCTION_17	IF_2
0x4001222	            0x740a	                            je 0x400122e	      1210	objcopy.c	FUNCTION_17	IF_2
0x4001224	      0xb800000000	                              mov eax, 0	      1211	objcopy.c	FUNCTION_17	IF_2
0x4001229	      0xe9b4000000	                           jmp 0x40012e2	      1211	objcopy.c	FUNCTION_17	IF_2
0x400122e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1213	objcopy.c	FUNCTION_17	CALL_1
0x4001232	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1213	objcopy.c	FUNCTION_17	CALL_1
0x4001239	        0x488945e8	             mov qword [rbp - 0x18], rax	      1213	objcopy.c	FUNCTION_17	CALL_1
0x400123d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x4001241	          0x8b5028	            mov edx, dword [rax + 0x28] 	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x4001244	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x4001248	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x400124f	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x4001255	            0x39c2	                            cmp edx, eax	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x4001257	     0xf8580000000	                           jne 0x40012dd	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x400125d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1216	objcopy.c	FUNCTION_17	IF_3	CALL_3
0x4001261	        0x488b4008	                mov rax, qword [rax + 8]	      1216	objcopy.c	FUNCTION_17	IF_3	CALL_3
0x4001265	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1216	objcopy.c	FUNCTION_17	IF_3	CALL_3
0x400126c	        0x488945f0	             mov qword [rbp - 0x10], rax	      1216	objcopy.c	FUNCTION_17	IF_3	CALL_3
0x4001270	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1217	objcopy.c	FUNCTION_17	IF_3	CALL_4
0x4001274	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1217	objcopy.c	FUNCTION_17	IF_3	CALL_4
0x400127b	        0x4883c068	                           add rax, 0x68	      1217	objcopy.c	FUNCTION_17	IF_3	CALL_4
0x400127f	        0x488945f8	                mov qword [rbp - 8], rax	      1217	objcopy.c	FUNCTION_17	IF_3	CALL_4
0x4001283	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1219	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001287	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1219	objcopy.c	FUNCTION_17	IF_3	IF_4
0x400128a	            0x85c0	                           test eax, eax	      1219	objcopy.c	FUNCTION_17	IF_3	IF_4
0x400128c	            0x744f	                            je 0x40012dd	      1219	objcopy.c	FUNCTION_17	IF_3	IF_4
0x400128e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001292	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001295	            0x89c1	                            mov ecx, eax	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001297	        0x488b45f8	                mov rax, qword [rbp - 8]	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x400129b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x400129f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40012a3	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40012aa	         0xfb65205	               movzx edx, byte [rdx + 5]	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40012ae	           0xfb6f2	                           movzx esi, dl	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40012b1	      0xba00000000	                              mov edx, 0	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40012b6	          0x48f7f6	                                 div rsi	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40012b9	          0x4839c1	                            cmp rcx, rax	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40012bc	            0x731f	                           jae 0x40012dd	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40012be	    0x488b15000000	            mov rdx, qword [0x040012c5] 	      1221	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40012c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1221	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40012c9	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1221	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40012cc	          0x83e801	                              sub eax, 1	      1221	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40012cf	            0x89c0	                            mov eax, eax	      1221	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40012d1	        0x48c1e003	                              shl rax, 3	      1221	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40012d5	          0x4801d0	                            add rax, rdx	      1221	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40012d8	          0x488b00	                    mov rax, qword [rax]	      1221	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40012db	            0xeb05	                           jmp 0x40012e2	      1221	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40012dd	      0xb800000000	                              mov eax, 0	      1223	objcopy.c	FUNCTION_17
0x40012e2	              0x5d	                                 pop rbp	      1224	objcopy.c	FUNCTION_17
0x40012e3	              0xc3	                                     ret	      1224	objcopy.c	FUNCTION_17
is_64bit	IF,1:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1	18
0x4002b9c	              0x55	                                push rbp	      1946	objcopy.c	FUNCTION_36
0x4002b9d	          0x4889e5	                            mov rbp, rsp	      1946	objcopy.c	FUNCTION_36
0x4002ba0	        0x48897df8	                mov qword [rbp - 8], rdi	      1946	objcopy.c	FUNCTION_36
0x4002ba4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1948	objcopy.c	FUNCTION_36	IF_1
0x4002ba8	        0x488b4008	                mov rax, qword [rax + 8]	      1948	objcopy.c	FUNCTION_36	IF_1
0x4002bac	          0x8b4008	                mov eax, dword [rax + 8]	      1948	objcopy.c	FUNCTION_36	IF_1
0x4002baf	          0x83f805	                              cmp eax, 5	      1948	objcopy.c	FUNCTION_36	IF_1
0x4002bb2	            0x7407	                            je 0x4002bbb	      1948	objcopy.c	FUNCTION_36	IF_1
0x4002bb4	      0xb800000000	                              mov eax, 0	      1949	objcopy.c	FUNCTION_36	IF_1
0x4002bb9	            0xeb17	                           jmp 0x4002bd2	      1949	objcopy.c	FUNCTION_36	IF_1
0x4002bbb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1951	objcopy.c	FUNCTION_36	CALL_1
0x4002bbf	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1951	objcopy.c	FUNCTION_36	CALL_1
0x4002bc6	         0xfb64004	               movzx eax, byte [rax + 4]	      1951	objcopy.c	FUNCTION_36	CALL_1
0x4002bca	            0x3c02	                               cmp al, 2	      1951	objcopy.c	FUNCTION_36	CALL_1
0x4002bcc	           0xf94c0	                                 sete al	      1951	objcopy.c	FUNCTION_36	CALL_1
0x4002bcf	           0xfb6c0	                           movzx eax, al	      1951	objcopy.c	FUNCTION_36	CALL_1
0x4002bd2	              0x5d	                                 pop rbp	      1952	objcopy.c	FUNCTION_36
0x4002bd3	              0xc3	                                     ret	      1952	objcopy.c	FUNCTION_36
copy_archive	IF,22:FOR,1:ELSE,5:DO,0:SWITCH,0:functions,0:WHILE,1:CALL,47	440
0x4005ebc	              0x55	                                push rbp	      3209	objcopy.c	FUNCTION_39
0x4005ebd	          0x4889e5	                            mov rbp, rsp	      3209	objcopy.c	FUNCTION_39
0x4005ec0	              0x53	                                push rbx	      3209	objcopy.c	FUNCTION_39
0x4005ec1	    0x4881ec380100	                          sub rsp, 0x138	      3209	objcopy.c	FUNCTION_39
0x4005ec8	    0x4889bde8feff	            mov qword [rbp - 0x118], rdi	      3209	objcopy.c	FUNCTION_39
0x4005ecf	    0x4889b5e0feff	            mov qword [rbp - 0x120], rsi	      3209	objcopy.c	FUNCTION_39
0x4005ed6	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	      3209	objcopy.c	FUNCTION_39
0x4005edd	    0x898dd4feffff	            mov dword [rbp - 0x12c], ecx	      3209	objcopy.c	FUNCTION_39
0x4005ee3	    0x4c8985c8feff	             mov qword [rbp - 0x138], r8	      3209	objcopy.c	FUNCTION_39
0x4005eea	    0x64488b042528	                mov rax, qword fs:[0x28]	      3209	objcopy.c	FUNCTION_39
0x4005ef3	        0x488945e8	             mov qword [rbp - 0x18], rax	      3209	objcopy.c	FUNCTION_39
0x4005ef7	            0x31c0	                            xor eax, eax	      3209	objcopy.c	FUNCTION_39
0x4005ef9	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3216	objcopy.c	FUNCTION_39
0x4005f00	    0x4805e0000000	                           add rax, 0xe0	      3216	objcopy.c	FUNCTION_39
0x4005f06	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3216	objcopy.c	FUNCTION_39
0x4005f0d	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3222	objcopy.c	FUNCTION_39	CALL_1
0x4005f14	          0x488b00	                    mov rax, qword [rax]	      3222	objcopy.c	FUNCTION_39	CALL_1
0x4005f17	          0x4889c7	                            mov rdi, rax	      3222	objcopy.c	FUNCTION_39	CALL_1
0x4005f1a	      0xe800000000	                          call 0x4005f1f	      3222	objcopy.c	FUNCTION_39	CALL_1
0x4005f1f	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      3222	objcopy.c	FUNCTION_39	CALL_1
0x4005f26	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      3223	objcopy.c	FUNCTION_39	IF_1
0x4005f2e	            0x752b	                           jne 0x4005f5b	      3223	objcopy.c	FUNCTION_39	IF_1
0x4005f30	      0xe800000000	                          call 0x4005f35	      3225	objcopy.c	FUNCTION_39	CALL_4
0x4005f35	            0x8b00	                    mov eax, dword [rax]	      3224	objcopy.c	FUNCTION_39	IF_1	CALL_3
0x4005f37	            0x89c7	                            mov edi, eax	      3224	objcopy.c	FUNCTION_39	IF_1	CALL_3
0x4005f39	      0xe800000000	                          call 0x4005f3e	      3224	objcopy.c	FUNCTION_39	IF_1	CALL_3
0x4005f3e	          0x4889c3	                            mov rbx, rax	      3224	objcopy.c	FUNCTION_39	IF_1	CALL_3
0x4005f41	      0xbf00000000	                              mov edi, 0	      3224	objcopy.c	FUNCTION_39	IF_1	CALL_3
0x4005f46	      0xe800000000	                          call 0x4005f4b	      3224	objcopy.c	FUNCTION_39	IF_1	CALL_3
0x4005f4b	          0x4889de	                            mov rsi, rbx	      3224	objcopy.c	FUNCTION_39	IF_1	CALL_3
0x4005f4e	          0x4889c7	                            mov rdi, rax	      3224	objcopy.c	FUNCTION_39	IF_1	CALL_3
0x4005f51	      0xb800000000	                              mov eax, 0	      3224	objcopy.c	FUNCTION_39	IF_1	CALL_3
0x4005f56	      0xe800000000	                          call 0x4005f5b	      3224	objcopy.c	FUNCTION_39	IF_1	CALL_3
0x4005f5b	    0x8b0500000000	            mov eax, dword [0x04005f61] 	      3227	objcopy.c	FUNCTION_39	IF_2
0x4005f61	          0x83f807	                              cmp eax, 7	      3227	objcopy.c	FUNCTION_39	IF_2
0x4005f64	            0x7513	                           jne 0x4005f79	      3227	objcopy.c	FUNCTION_39	IF_2
0x4005f66	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3228	objcopy.c	FUNCTION_39	IF_2
0x4005f6d	         0xfb65047	           movzx edx, byte [rax + 0x47] 	      3228	objcopy.c	FUNCTION_39	IF_2
0x4005f71	          0x83e27f	                           and edx, 0x7f	      3228	objcopy.c	FUNCTION_39	IF_2
0x4005f74	          0x885047	               mov byte [rax + 0x47], dl	      3228	objcopy.c	FUNCTION_39	IF_2
0x4005f77	            0xeb28	                           jmp 0x4005fa1	      3228	objcopy.c	FUNCTION_39	IF_2
0x4005f79	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      3230	objcopy.c	FUNCTION_39	ELSE_1
0x4005f80	         0xfb64047	           movzx eax, byte [rax + 0x47] 	      3230	objcopy.c	FUNCTION_39	ELSE_1
0x4005f84	          0xc0e807	                               shr al, 7	      3230	objcopy.c	FUNCTION_39	ELSE_1
0x4005f87	            0x89c2	                            mov edx, eax	      3230	objcopy.c	FUNCTION_39	ELSE_1
0x4005f89	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3230	objcopy.c	FUNCTION_39	ELSE_1
0x4005f90	            0x89d1	                            mov ecx, edx	      3230	objcopy.c	FUNCTION_39	ELSE_1
0x4005f92	          0xc1e107	                              shl ecx, 7	      3230	objcopy.c	FUNCTION_39	ELSE_1
0x4005f95	         0xfb65047	           movzx edx, byte [rax + 0x47] 	      3230	objcopy.c	FUNCTION_39	ELSE_1
0x4005f99	          0x83e27f	                           and edx, 0x7f	      3230	objcopy.c	FUNCTION_39	ELSE_1
0x4005f9c	             0x9ca	                             or edx, ecx	      3230	objcopy.c	FUNCTION_39	ELSE_1
0x4005f9e	          0x885047	               mov byte [rax + 0x47], dl	      3230	objcopy.c	FUNCTION_39	ELSE_1
0x4005fa1	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      3231	objcopy.c	FUNCTION_39
0x4005fa8	         0xfb64048	           movzx eax, byte [rax + 0x48] 	      3231	objcopy.c	FUNCTION_39
0x4005fac	          0x83e001	                              and eax, 1	      3231	objcopy.c	FUNCTION_39
0x4005faf	            0x89c2	                            mov edx, eax	      3231	objcopy.c	FUNCTION_39
0x4005fb1	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3231	objcopy.c	FUNCTION_39
0x4005fb8	            0x89d1	                            mov ecx, edx	      3231	objcopy.c	FUNCTION_39
0x4005fba	          0x83e101	                              and ecx, 1	      3231	objcopy.c	FUNCTION_39
0x4005fbd	         0xfb65048	           movzx edx, byte [rax + 0x48] 	      3231	objcopy.c	FUNCTION_39
0x4005fc1	          0x83e2fe	                     and edx, 0xfffffffe	      3231	objcopy.c	FUNCTION_39
0x4005fc4	             0x9ca	                             or edx, ecx	      3231	objcopy.c	FUNCTION_39
0x4005fc6	          0x885048	               mov byte [rax + 0x48], dl	      3231	objcopy.c	FUNCTION_39
0x4005fc9	    0x8b0500000000	            mov eax, dword [0x04005fcf] 	      3233	objcopy.c	FUNCTION_39	IF_3
0x4005fcf	            0x85c0	                           test eax, eax	      3233	objcopy.c	FUNCTION_39	IF_3
0x4005fd1	            0x7437	                            je 0x400600a	      3233	objcopy.c	FUNCTION_39	IF_3
0x4005fd3	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3234	objcopy.c	FUNCTION_39	IF_3
0x4005fda	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3234	objcopy.c	FUNCTION_39	IF_3
0x4005fdd	          0xc1e805	                              shr eax, 5	      3234	objcopy.c	FUNCTION_39	IF_3
0x4005fe0	      0x25ffff0f00	                        and eax, 0xfffff	      3234	objcopy.c	FUNCTION_39	IF_3
0x4005fe5	          0x80cc20	                             or ah, 0x20	      3234	objcopy.c	FUNCTION_39	IF_3
0x4005fe8	            0x89c2	                            mov edx, eax	      3234	objcopy.c	FUNCTION_39	IF_3
0x4005fea	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3234	objcopy.c	FUNCTION_39	IF_3
0x4005ff1	    0x81e2ffff0f00	                        and edx, 0xfffff	      3234	objcopy.c	FUNCTION_39	IF_3
0x4005ff7	            0x89d1	                            mov ecx, edx	      3234	objcopy.c	FUNCTION_39	IF_3
0x4005ff9	          0xc1e105	                              shl ecx, 5	      3234	objcopy.c	FUNCTION_39	IF_3
0x4005ffc	          0x8b5044	            mov edx, dword [rax + 0x44] 	      3234	objcopy.c	FUNCTION_39	IF_3
0x4005fff	    0x81e21f0000fe	                     and edx, 0xfe00001f	      3234	objcopy.c	FUNCTION_39	IF_3
0x4006005	             0x9ca	                             or edx, ecx	      3234	objcopy.c	FUNCTION_39	IF_3
0x4006007	          0x895044	             mov dword [rax + 0x44], edx	      3234	objcopy.c	FUNCTION_39	IF_3
0x400600a	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	      3236	objcopy.c	FUNCTION_39
0x4006015	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      3238	objcopy.c	FUNCTION_39	CALL_5
0x400601c	      0xbe00000000	                              mov esi, 0	      3238	objcopy.c	FUNCTION_39	CALL_5
0x4006021	          0x4889c7	                            mov rdi, rax	      3238	objcopy.c	FUNCTION_39	CALL_5
0x4006024	      0xe800000000	                          call 0x4006029	      3238	objcopy.c	FUNCTION_39	CALL_5
0x4006029	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      3238	objcopy.c	FUNCTION_39	CALL_5
0x4006030	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      3240	objcopy.c	FUNCTION_39	IF_4	CALL_6
0x4006037	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      3240	objcopy.c	FUNCTION_39	IF_4	CALL_6
0x400603b	          0x83e007	                              and eax, 7	      3240	objcopy.c	FUNCTION_39	IF_4	CALL_6
0x400603e	           0xfb6d0	                           movzx edx, al	      3240	objcopy.c	FUNCTION_39	IF_4	CALL_6
0x4006041	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3240	objcopy.c	FUNCTION_39	IF_4	CALL_6
0x4006048	            0x89d6	                            mov esi, edx	      3240	objcopy.c	FUNCTION_39	IF_4	CALL_6
0x400604a	          0x4889c7	                            mov rdi, rax	      3240	objcopy.c	FUNCTION_39	IF_4	CALL_6
0x400604d	      0xe800000000	                          call 0x4006052	      3240	objcopy.c	FUNCTION_39	IF_4	CALL_6
0x4006052	            0x85c0	                           test eax, eax	      3240	objcopy.c	FUNCTION_39	IF_4	CALL_6
0x4006054	     0xf8552050000	                           jne 0x40065ac	      3240	objcopy.c	FUNCTION_39	IF_4	CALL_6
0x400605a	    0xc70500000000	               mov dword [0x04006064], 1	      3242	objcopy.c	FUNCTION_39	IF_4
0x4006064	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3243	objcopy.c	FUNCTION_39	IF_4	CALL_7
0x400606b	      0xb900000000	                              mov ecx, 0	      3243	objcopy.c	FUNCTION_39	IF_4	CALL_7
0x4006070	      0xba00000000	                              mov edx, 0	      3243	objcopy.c	FUNCTION_39	IF_4	CALL_7
0x4006075	          0x4889c6	                            mov rsi, rax	      3243	objcopy.c	FUNCTION_39	IF_4	CALL_7
0x4006078	      0xbf00000000	                              mov edi, 0	      3243	objcopy.c	FUNCTION_39	IF_4	CALL_7
0x400607d	      0xb800000000	                              mov eax, 0	      3243	objcopy.c	FUNCTION_39	IF_4	CALL_7
0x4006082	      0xe800000000	                          call 0x4006087	      3243	objcopy.c	FUNCTION_39	IF_4	CALL_7
0x4006087	      0xe9e8050000	                           jmp 0x4006674	      3244	objcopy.c	FUNCTION_39	IF_4
0x400608c	    0xc785fcfeffff	              mov dword [rbp - 0x104], 0	      3253	objcopy.c	FUNCTION_39	WHILE_1
0x4006096	    0xc78500ffffff	              mov dword [rbp - 0x100], 1	      3254	objcopy.c	FUNCTION_39	WHILE_1
0x40060a0	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3259	objcopy.c	FUNCTION_39	WHILE_1	IF_5	CALL_8
0x40060a7	          0x488b00	                    mov rax, qword [rax]	      3259	objcopy.c	FUNCTION_39	WHILE_1	IF_5	CALL_8
0x40060aa	          0x4889c7	                            mov rdi, rax	      3259	objcopy.c	FUNCTION_39	WHILE_1	IF_5	CALL_8
0x40060ad	      0xe800000000	                          call 0x40060b2	      3259	objcopy.c	FUNCTION_39	WHILE_1	IF_5	CALL_8
0x40060b2	            0x85c0	                           test eax, eax	      3259	objcopy.c	FUNCTION_39	WHILE_1	IF_5	CALL_8
0x40060b4	            0x7533	                           jne 0x40060e9	      3259	objcopy.c	FUNCTION_39	WHILE_1	IF_5	CALL_8
0x40060b6	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3262	objcopy.c	FUNCTION_39	WHILE_1	IF_5
0x40060bd	          0x488b18	                    mov rbx, qword [rax]	      3262	objcopy.c	FUNCTION_39	WHILE_1	IF_5
0x40060c0	      0xbf00000000	                              mov edi, 0	      3261	objcopy.c	FUNCTION_39	WHILE_1	IF_5	CALL_10
0x40060c5	      0xe800000000	                          call 0x40060ca	      3261	objcopy.c	FUNCTION_39	WHILE_1	IF_5	CALL_10
0x40060ca	          0x4889de	                            mov rsi, rbx	      3261	objcopy.c	FUNCTION_39	WHILE_1	IF_5	CALL_10
0x40060cd	          0x4889c7	                            mov rdi, rax	      3261	objcopy.c	FUNCTION_39	WHILE_1	IF_5	CALL_10
0x40060d0	      0xb800000000	                              mov eax, 0	      3261	objcopy.c	FUNCTION_39	WHILE_1	IF_5	CALL_10
0x40060d5	      0xe800000000	                          call 0x40060da	      3261	objcopy.c	FUNCTION_39	WHILE_1	IF_5	CALL_10
0x40060da	    0xc70500000000	               mov dword [0x040060e4], 1	      3263	objcopy.c	FUNCTION_39	WHILE_1	IF_5
0x40060e4	      0xe98b050000	                           jmp 0x4006674	      3264	objcopy.c	FUNCTION_39	WHILE_1	IF_5
0x40060e9	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3269	objcopy.c	FUNCTION_39	WHILE_1
0x40060f0	          0x488b10	                    mov rdx, qword [rax]	      3269	objcopy.c	FUNCTION_39	WHILE_1
0x40060f3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      3268	objcopy.c	FUNCTION_39	WHILE_1	CALL_11
0x40060fa	      0xb900000000	                              mov ecx, 0	      3268	objcopy.c	FUNCTION_39	WHILE_1	CALL_11
0x40060ff	      0xbe00000000	                              mov esi, 0	      3268	objcopy.c	FUNCTION_39	WHILE_1	CALL_11
0x4006104	          0x4889c7	                            mov rdi, rax	      3268	objcopy.c	FUNCTION_39	WHILE_1	CALL_11
0x4006107	      0xb800000000	                              mov eax, 0	      3268	objcopy.c	FUNCTION_39	WHILE_1	CALL_11
0x400610c	      0xe800000000	                          call 0x4006111	      3268	objcopy.c	FUNCTION_39	WHILE_1	CALL_11
0x4006111	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      3268	objcopy.c	FUNCTION_39	WHILE_1	CALL_11
0x4006118	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	      3272	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_12
0x400611f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3272	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_12
0x4006126	          0x4889d6	                            mov rsi, rdx	      3272	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_12
0x4006129	          0x4889c7	                            mov rdi, rax	      3272	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_12
0x400612c	      0xe800000000	                          call 0x4006131	      3272	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_12
0x4006131	            0x85c0	                           test eax, eax	      3272	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_12
0x4006133	     0xf88da000000	                            js 0x4006213	      3272	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_12
0x4006139	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3274	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_13
0x4006140	          0x4889c7	                            mov rdi, rax	      3274	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_13
0x4006143	      0xe800000000	                          call 0x4006148	      3274	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_13
0x4006148	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      3274	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_13
0x400614f	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      3275	objcopy.c	FUNCTION_39	WHILE_1	IF_6	IF_7
0x4006157	            0x753a	                           jne 0x4006193	      3275	objcopy.c	FUNCTION_39	WHILE_1	IF_6	IF_7
0x4006159	      0xe800000000	                          call 0x400615e	      3278	objcopy.c	FUNCTION_39	WHILE_1	IF_6	IF_7	CALL_16
0x400615e	            0x8b00	                    mov eax, dword [rax]	      3277	objcopy.c	FUNCTION_39	WHILE_1	IF_6	IF_7	CALL_15
0x4006160	            0x89c7	                            mov edi, eax	      3277	objcopy.c	FUNCTION_39	WHILE_1	IF_6	IF_7	CALL_15
0x4006162	      0xe800000000	                          call 0x4006167	      3277	objcopy.c	FUNCTION_39	WHILE_1	IF_6	IF_7	CALL_15
0x4006167	          0x4889c3	                            mov rbx, rax	      3277	objcopy.c	FUNCTION_39	WHILE_1	IF_6	IF_7	CALL_15
0x400616a	      0xbf00000000	                              mov edi, 0	      3277	objcopy.c	FUNCTION_39	WHILE_1	IF_6	IF_7	CALL_15
0x400616f	      0xe800000000	                          call 0x4006174	      3277	objcopy.c	FUNCTION_39	WHILE_1	IF_6	IF_7	CALL_15
0x4006174	          0x4889de	                            mov rsi, rbx	      3277	objcopy.c	FUNCTION_39	WHILE_1	IF_6	IF_7	CALL_15
0x4006177	          0x4889c7	                            mov rdi, rax	      3277	objcopy.c	FUNCTION_39	WHILE_1	IF_6	IF_7	CALL_15
0x400617a	      0xb800000000	                              mov eax, 0	      3277	objcopy.c	FUNCTION_39	WHILE_1	IF_6	IF_7	CALL_15
0x400617f	      0xe800000000	                          call 0x4006184	      3277	objcopy.c	FUNCTION_39	WHILE_1	IF_6	IF_7	CALL_15
0x4006184	    0xc70500000000	               mov dword [0x0400618e], 1	      3279	objcopy.c	FUNCTION_39	WHILE_1	IF_6	IF_7
0x400618e	      0xe9e1040000	                           jmp 0x4006674	      3280	objcopy.c	FUNCTION_39	WHILE_1	IF_6	IF_7
0x4006193	      0xbf18000000	                           mov edi, 0x18	      3283	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_17
0x4006198	      0xe800000000	                          call 0x400619d	      3283	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_17
0x400619d	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3283	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_17
0x40061a4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3284	objcopy.c	FUNCTION_39	WHILE_1	IF_6
0x40061ab	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      3284	objcopy.c	FUNCTION_39	WHILE_1	IF_6
0x40061b2	        0x48895008	                mov qword [rax + 8], rdx	      3284	objcopy.c	FUNCTION_39	WHILE_1	IF_6
0x40061b6	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3285	objcopy.c	FUNCTION_39	WHILE_1	IF_6
0x40061bd	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      3285	objcopy.c	FUNCTION_39	WHILE_1	IF_6
0x40061c4	          0x488910	                    mov qword [rax], rdx	      3285	objcopy.c	FUNCTION_39	WHILE_1	IF_6
0x40061c7	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3286	objcopy.c	FUNCTION_39	WHILE_1	IF_6
0x40061ce	    0x48c740100000	               mov qword [rax + 0x10], 0	      3286	objcopy.c	FUNCTION_39	WHILE_1	IF_6
0x40061d6	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3287	objcopy.c	FUNCTION_39	WHILE_1	IF_6
0x40061dd	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      3287	objcopy.c	FUNCTION_39	WHILE_1	IF_6
0x40061e4	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3289	objcopy.c	FUNCTION_39	WHILE_1	IF_6
0x40061eb	          0x488b10	                    mov rdx, qword [rax]	      3289	objcopy.c	FUNCTION_39	WHILE_1	IF_6
0x40061ee	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3288	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_18
0x40061f5	      0xb900000000	                              mov ecx, 0	      3288	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_18
0x40061fa	      0xbe00000000	                              mov esi, 0	      3288	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_18
0x40061ff	          0x4889c7	                            mov rdi, rax	      3288	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_18
0x4006202	      0xb800000000	                              mov eax, 0	      3288	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_18
0x4006207	      0xe800000000	                          call 0x400620c	      3288	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_18
0x400620c	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      3288	objcopy.c	FUNCTION_39	WHILE_1	IF_6	CALL_18
0x4006213	    0x8b0500000000	            mov eax, dword [0x04006219] 	      3292	objcopy.c	FUNCTION_39	WHILE_1	IF_8
0x4006219	            0x85c0	                           test eax, eax	      3292	objcopy.c	FUNCTION_39	WHILE_1	IF_8
0x400621b	            0x745b	                            je 0x4006278	      3292	objcopy.c	FUNCTION_39	WHILE_1	IF_8
0x400621d	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3294	objcopy.c	FUNCTION_39	WHILE_1	IF_8
0x4006224	        0x488b4008	                mov rax, qword [rax + 8]	      3294	objcopy.c	FUNCTION_39	WHILE_1	IF_8
0x4006228	    0x488b80e00100	           mov rax, qword [rax + 0x1e0] 	      3294	objcopy.c	FUNCTION_39	WHILE_1	IF_8
0x400622f	    0x488d8d50ffff	                   lea rcx, [rbp - 0xb0]	      3294	objcopy.c	FUNCTION_39	WHILE_1	IF_8
0x4006236	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      3294	objcopy.c	FUNCTION_39	WHILE_1	IF_8
0x400623d	          0x4889ce	                            mov rsi, rcx	      3294	objcopy.c	FUNCTION_39	WHILE_1	IF_8
0x4006240	          0x4889d7	                            mov rdi, rdx	      3294	objcopy.c	FUNCTION_39	WHILE_1	IF_8
0x4006243	            0xffd0	                                call rax	      3294	objcopy.c	FUNCTION_39	WHILE_1	IF_8
0x4006245	    0x8985fcfeffff	            mov dword [rbp - 0x104], eax	      3294	objcopy.c	FUNCTION_39	WHILE_1	IF_8
0x400624b	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      3296	objcopy.c	FUNCTION_39	WHILE_1	IF_8	IF_9
0x4006252	            0x7424	                            je 0x4006278	      3296	objcopy.c	FUNCTION_39	WHILE_1	IF_8	IF_9
0x4006254	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3298	objcopy.c	FUNCTION_39	WHILE_1	IF_8	IF_9
0x400625b	          0x488b18	                    mov rbx, qword [rax]	      3298	objcopy.c	FUNCTION_39	WHILE_1	IF_8	IF_9
0x400625e	      0xbf00000000	                              mov edi, 0	      3297	objcopy.c	FUNCTION_39	WHILE_1	IF_8	IF_9	CALL_20
0x4006263	      0xe800000000	                          call 0x4006268	      3297	objcopy.c	FUNCTION_39	WHILE_1	IF_8	IF_9	CALL_20
0x4006268	          0x4889de	                            mov rsi, rbx	      3297	objcopy.c	FUNCTION_39	WHILE_1	IF_8	IF_9	CALL_20
0x400626b	          0x4889c7	                            mov rdi, rax	      3297	objcopy.c	FUNCTION_39	WHILE_1	IF_8	IF_9	CALL_20
0x400626e	      0xb800000000	                              mov eax, 0	      3297	objcopy.c	FUNCTION_39	WHILE_1	IF_8	IF_9	CALL_20
0x4006273	      0xe800000000	                          call 0x4006278	      3297	objcopy.c	FUNCTION_39	WHILE_1	IF_8	IF_9	CALL_20
0x4006278	      0xbf18000000	                           mov edi, 0x18	      3301	objcopy.c	FUNCTION_39	WHILE_1	CALL_21
0x400627d	      0xe800000000	                          call 0x4006282	      3301	objcopy.c	FUNCTION_39	WHILE_1	CALL_21
0x4006282	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3301	objcopy.c	FUNCTION_39	WHILE_1	CALL_21
0x4006289	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3302	objcopy.c	FUNCTION_39	WHILE_1
0x4006290	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      3302	objcopy.c	FUNCTION_39	WHILE_1
0x4006297	        0x48895008	                mov qword [rax + 8], rdx	      3302	objcopy.c	FUNCTION_39	WHILE_1
0x400629b	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3303	objcopy.c	FUNCTION_39	WHILE_1
0x40062a2	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      3303	objcopy.c	FUNCTION_39	WHILE_1
0x40062a9	          0x488910	                    mov qword [rax], rdx	      3303	objcopy.c	FUNCTION_39	WHILE_1
0x40062ac	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3304	objcopy.c	FUNCTION_39	WHILE_1
0x40062b3	    0x48c740100000	               mov qword [rax + 0x10], 0	      3304	objcopy.c	FUNCTION_39	WHILE_1
0x40062bb	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3305	objcopy.c	FUNCTION_39	WHILE_1
0x40062c2	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      3305	objcopy.c	FUNCTION_39	WHILE_1
0x40062c9	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3307	objcopy.c	FUNCTION_39	WHILE_1	CALL_22
0x40062d0	      0xbe01000000	                              mov esi, 1	      3307	objcopy.c	FUNCTION_39	WHILE_1	CALL_22
0x40062d5	          0x4889c7	                            mov rdi, rax	      3307	objcopy.c	FUNCTION_39	WHILE_1	CALL_22
0x40062d8	      0xe800000000	                          call 0x40062dd	      3307	objcopy.c	FUNCTION_39	WHILE_1	CALL_22
0x40062dd	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      3307	objcopy.c	FUNCTION_39	WHILE_1	CALL_22
0x40062e3	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      3308	objcopy.c	FUNCTION_39	WHILE_1	IF_10
0x40062ea	            0x752e	                           jne 0x400631a	      3308	objcopy.c	FUNCTION_39	WHILE_1	IF_10
0x40062ec	      0xbf00000000	                              mov edi, 0	      3310	objcopy.c	FUNCTION_39	WHILE_1	CALL_24
0x40062f1	      0xe800000000	                          call 0x40062f6	      3310	objcopy.c	FUNCTION_39	WHILE_1	CALL_24
0x40062f6	          0x4889c2	                            mov rdx, rax	      3310	objcopy.c	FUNCTION_39	WHILE_1	CALL_24
0x40062f9	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3309	objcopy.c	FUNCTION_39	WHILE_1	IF_10	CALL_23
0x4006300	          0x4889d1	                            mov rcx, rdx	      3309	objcopy.c	FUNCTION_39	WHILE_1	IF_10	CALL_23
0x4006303	      0xba00000000	                              mov edx, 0	      3309	objcopy.c	FUNCTION_39	WHILE_1	IF_10	CALL_23
0x4006308	          0x4889c6	                            mov rsi, rax	      3309	objcopy.c	FUNCTION_39	WHILE_1	IF_10	CALL_23
0x400630b	      0xbf00000000	                              mov edi, 0	      3309	objcopy.c	FUNCTION_39	WHILE_1	IF_10	CALL_23
0x4006310	      0xb800000000	                              mov eax, 0	      3309	objcopy.c	FUNCTION_39	WHILE_1	IF_10	CALL_23
0x4006315	      0xe800000000	                          call 0x400631a	      3309	objcopy.c	FUNCTION_39	WHILE_1	IF_10	CALL_23
0x400631a	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      3314	objcopy.c	FUNCTION_39	WHILE_1	IF_11
0x4006321	            0x7509	                           jne 0x400632c	      3314	objcopy.c	FUNCTION_39	WHILE_1	IF_11
0x4006323	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      3314	objcopy.c	FUNCTION_39	WHILE_1	IF_11
0x400632a	            0x7522	                           jne 0x400634e	      3314	objcopy.c	FUNCTION_39	WHILE_1	IF_11
0x400632c	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      3315	objcopy.c	FUNCTION_39	WHILE_1	CALL_25
0x4006333	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3315	objcopy.c	FUNCTION_39	WHILE_1	CALL_25
0x400633a	          0x4889d6	                            mov rsi, rdx	      3315	objcopy.c	FUNCTION_39	WHILE_1	CALL_25
0x400633d	          0x4889c7	                            mov rdi, rax	      3315	objcopy.c	FUNCTION_39	WHILE_1	CALL_25
0x4006340	      0xe800000000	                          call 0x4006345	      3315	objcopy.c	FUNCTION_39	WHILE_1	CALL_25
0x4006345	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      3315	objcopy.c	FUNCTION_39	WHILE_1	CALL_25
0x400634c	            0xeb27	                           jmp 0x4006375	      3315	objcopy.c	FUNCTION_39	WHILE_1	CALL_25
0x400634e	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3317	objcopy.c	FUNCTION_39	WHILE_1	CALL_26
0x4006355	        0x488b4008	                mov rax, qword [rax + 8]	      3317	objcopy.c	FUNCTION_39	WHILE_1	CALL_26
0x4006359	          0x488b10	                    mov rdx, qword [rax]	      3317	objcopy.c	FUNCTION_39	WHILE_1	CALL_26
0x400635c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3317	objcopy.c	FUNCTION_39	WHILE_1	CALL_26
0x4006363	          0x4889d6	                            mov rsi, rdx	      3317	objcopy.c	FUNCTION_39	WHILE_1	CALL_26
0x4006366	          0x4889c7	                            mov rdi, rax	      3317	objcopy.c	FUNCTION_39	WHILE_1	CALL_26
0x4006369	      0xe800000000	                          call 0x400636e	      3317	objcopy.c	FUNCTION_39	WHILE_1	CALL_26
0x400636e	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      3317	objcopy.c	FUNCTION_39	WHILE_1	CALL_26
0x4006375	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	      3319	objcopy.c	FUNCTION_39	WHILE_1	IF_12
0x400637d	            0x7533	                           jne 0x40063b2	      3319	objcopy.c	FUNCTION_39	WHILE_1	IF_12
0x400637f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3321	objcopy.c	FUNCTION_39	WHILE_1	IF_12	CALL_27
0x4006386	      0xb900000000	                              mov ecx, 0	      3321	objcopy.c	FUNCTION_39	WHILE_1	IF_12	CALL_27
0x400638b	      0xba00000000	                              mov edx, 0	      3321	objcopy.c	FUNCTION_39	WHILE_1	IF_12	CALL_27
0x4006390	      0xbe00000000	                              mov esi, 0	      3321	objcopy.c	FUNCTION_39	WHILE_1	IF_12	CALL_27
0x4006395	          0x4889c7	                            mov rdi, rax	      3321	objcopy.c	FUNCTION_39	WHILE_1	IF_12	CALL_27
0x4006398	      0xb800000000	                              mov eax, 0	      3321	objcopy.c	FUNCTION_39	WHILE_1	IF_12	CALL_27
0x400639d	      0xe800000000	                          call 0x40063a2	      3321	objcopy.c	FUNCTION_39	WHILE_1	IF_12	CALL_27
0x40063a2	    0xc70500000000	               mov dword [0x040063ac], 1	      3322	objcopy.c	FUNCTION_39	WHILE_1	IF_12
0x40063ac	              0x90	                                     nop	      3323	objcopy.c	FUNCTION_39	WHILE_1	IF_12
0x40063ad	      0xe9c2020000	                           jmp 0x4006674	      3323	objcopy.c	FUNCTION_39	WHILE_1	IF_12
0x40063b2	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      3326	objcopy.c	FUNCTION_39	WHILE_1	IF_13
0x40063b9	     0xf8496000000	                            je 0x4006455	      3326	objcopy.c	FUNCTION_39	WHILE_1	IF_13
0x40063bf	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      3328	objcopy.c	FUNCTION_39	WHILE_1	IF_13	CALL_28
0x40063c6	    0x488b8d30ffff	             mov rcx, qword [rbp - 0xd0]	      3328	objcopy.c	FUNCTION_39	WHILE_1	IF_13	CALL_28
0x40063cd	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3328	objcopy.c	FUNCTION_39	WHILE_1	IF_13	CALL_28
0x40063d4	          0x4889ce	                            mov rsi, rcx	      3328	objcopy.c	FUNCTION_39	WHILE_1	IF_13	CALL_28
0x40063d7	          0x4889c7	                            mov rdi, rax	      3328	objcopy.c	FUNCTION_39	WHILE_1	IF_13	CALL_28
0x40063da	      0xe88ed8ffff	                    call sym.copy_object	      3328	objcopy.c	FUNCTION_39	WHILE_1	IF_13	CALL_28
0x40063df	            0x85c0	                           test eax, eax	      3328	objcopy.c	FUNCTION_39	WHILE_1	IF_13	CALL_28
0x40063e1	           0xf94c0	                                 sete al	      3328	objcopy.c	FUNCTION_39	WHILE_1	IF_13	CALL_28
0x40063e4	           0xfb6c0	                           movzx eax, al	      3328	objcopy.c	FUNCTION_39	WHILE_1	IF_13	CALL_28
0x40063e7	    0x898500ffffff	            mov dword [rbp - 0x100], eax	      3328	objcopy.c	FUNCTION_39	WHILE_1	IF_13	CALL_28
0x40063ed	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      3330	objcopy.c	FUNCTION_39	WHILE_1	IF_13	IF_14	CALL_29
0x40063f4	            0x741f	                            je 0x4006415	      3330	objcopy.c	FUNCTION_39	WHILE_1	IF_13	IF_14	CALL_29
0x40063f6	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3330	objcopy.c	FUNCTION_39	WHILE_1	IF_13	IF_14	CALL_29
0x40063fd	          0x4889c7	                            mov rdi, rax	      3330	objcopy.c	FUNCTION_39	WHILE_1	IF_13	IF_14	CALL_29
0x4006400	      0xe800000000	                          call 0x4006405	      3330	objcopy.c	FUNCTION_39	WHILE_1	IF_13	IF_14	CALL_29
0x4006405	            0x85c0	                           test eax, eax	      3330	objcopy.c	FUNCTION_39	WHILE_1	IF_13	IF_14	CALL_29
0x4006407	            0x750c	                           jne 0x4006415	      3330	objcopy.c	FUNCTION_39	WHILE_1	IF_13	IF_14	CALL_29
0x4006409	    0xc78504ffffff	               mov dword [rbp - 0xfc], 0	      3332	objcopy.c	FUNCTION_39	WHILE_1	IF_13	IF_14
0x4006413	            0xeb40	                           jmp 0x4006455	      3332	objcopy.c	FUNCTION_39	WHILE_1	IF_13	IF_14
0x4006415	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3333	objcopy.c	FUNCTION_39	WHILE_1	IF_13	ELSE_3	IF_15	CALL_30
0x400641c	          0x4889c7	                            mov rdi, rax	      3333	objcopy.c	FUNCTION_39	WHILE_1	IF_13	ELSE_3	IF_15	CALL_30
0x400641f	      0xe800000000	                          call 0x4006424	      3333	objcopy.c	FUNCTION_39	WHILE_1	IF_13	ELSE_3	IF_15	CALL_30
0x4006424	            0x85c0	                           test eax, eax	      3333	objcopy.c	FUNCTION_39	WHILE_1	IF_13	ELSE_3	IF_15	CALL_30
0x4006426	            0x752d	                           jne 0x4006455	      3333	objcopy.c	FUNCTION_39	WHILE_1	IF_13	ELSE_3	IF_15	CALL_30
0x4006428	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3335	objcopy.c	FUNCTION_39	WHILE_1	IF_13	ELSE_3	IF_15	CALL_31
0x400642f	      0xb900000000	                              mov ecx, 0	      3335	objcopy.c	FUNCTION_39	WHILE_1	IF_13	ELSE_3	IF_15	CALL_31
0x4006434	      0xba00000000	                              mov edx, 0	      3335	objcopy.c	FUNCTION_39	WHILE_1	IF_13	ELSE_3	IF_15	CALL_31
0x4006439	      0xbe00000000	                              mov esi, 0	      3335	objcopy.c	FUNCTION_39	WHILE_1	IF_13	ELSE_3	IF_15	CALL_31
0x400643e	          0x4889c7	                            mov rdi, rax	      3335	objcopy.c	FUNCTION_39	WHILE_1	IF_13	ELSE_3	IF_15	CALL_31
0x4006441	      0xb800000000	                              mov eax, 0	      3335	objcopy.c	FUNCTION_39	WHILE_1	IF_13	ELSE_3	IF_15	CALL_31
0x4006446	      0xe800000000	                          call 0x400644b	      3335	objcopy.c	FUNCTION_39	WHILE_1	IF_13	ELSE_3	IF_15	CALL_31
0x400644b	    0xc70500000000	               mov dword [0x04006455], 1	      3337	objcopy.c	FUNCTION_39	WHILE_1	IF_13	ELSE_3	IF_15
0x4006455	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      3341	objcopy.c	FUNCTION_39	WHILE_1	IF_16
0x400645c	            0x7567	                           jne 0x40064c5	      3341	objcopy.c	FUNCTION_39	WHILE_1	IF_16
0x400645e	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      3343	objcopy.c	FUNCTION_39	WHILE_1	IF_16	CALL_32
0x4006465	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3343	objcopy.c	FUNCTION_39	WHILE_1	IF_16	CALL_32
0x400646c	          0x4889d6	                            mov rsi, rdx	      3343	objcopy.c	FUNCTION_39	WHILE_1	IF_16	CALL_32
0x400646f	          0x4889c7	                            mov rdi, rax	      3343	objcopy.c	FUNCTION_39	WHILE_1	IF_16	CALL_32
0x4006472	      0xe85ec3ffff	            call sym.copy_unknown_object	      3343	objcopy.c	FUNCTION_39	WHILE_1	IF_16	CALL_32
0x4006477	            0x85c0	                           test eax, eax	      3343	objcopy.c	FUNCTION_39	WHILE_1	IF_16	CALL_32
0x4006479	           0xf94c0	                                 sete al	      3343	objcopy.c	FUNCTION_39	WHILE_1	IF_16	CALL_32
0x400647c	           0xfb6c0	                           movzx eax, al	      3343	objcopy.c	FUNCTION_39	WHILE_1	IF_16	CALL_32
0x400647f	    0x898500ffffff	            mov dword [rbp - 0x100], eax	      3343	objcopy.c	FUNCTION_39	WHILE_1	IF_16	CALL_32
0x4006485	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3344	objcopy.c	FUNCTION_39	WHILE_1	IF_16	IF_17	CALL_33
0x400648c	          0x4889c7	                            mov rdi, rax	      3344	objcopy.c	FUNCTION_39	WHILE_1	IF_16	IF_17	CALL_33
0x400648f	      0xe800000000	                          call 0x4006494	      3344	objcopy.c	FUNCTION_39	WHILE_1	IF_16	IF_17	CALL_33
0x4006494	            0x85c0	                           test eax, eax	      3344	objcopy.c	FUNCTION_39	WHILE_1	IF_16	IF_17	CALL_33
0x4006496	            0x752d	                           jne 0x40064c5	      3344	objcopy.c	FUNCTION_39	WHILE_1	IF_16	IF_17	CALL_33
0x4006498	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3346	objcopy.c	FUNCTION_39	WHILE_1	IF_16	IF_17	CALL_34
0x400649f	      0xb900000000	                              mov ecx, 0	      3346	objcopy.c	FUNCTION_39	WHILE_1	IF_16	IF_17	CALL_34
0x40064a4	      0xba00000000	                              mov edx, 0	      3346	objcopy.c	FUNCTION_39	WHILE_1	IF_16	IF_17	CALL_34
0x40064a9	      0xbe00000000	                              mov esi, 0	      3346	objcopy.c	FUNCTION_39	WHILE_1	IF_16	IF_17	CALL_34
0x40064ae	          0x4889c7	                            mov rdi, rax	      3346	objcopy.c	FUNCTION_39	WHILE_1	IF_16	IF_17	CALL_34
0x40064b1	      0xb800000000	                              mov eax, 0	      3346	objcopy.c	FUNCTION_39	WHILE_1	IF_16	IF_17	CALL_34
0x40064b6	      0xe800000000	                          call 0x40064bb	      3346	objcopy.c	FUNCTION_39	WHILE_1	IF_16	IF_17	CALL_34
0x40064bb	    0xc70500000000	               mov dword [0x040064c5], 1	      3348	objcopy.c	FUNCTION_39	WHILE_1	IF_16	IF_17
0x40064c5	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      3352	objcopy.c	FUNCTION_39	WHILE_1	IF_18
0x40064cc	            0x741e	                            je 0x40064ec	      3352	objcopy.c	FUNCTION_39	WHILE_1	IF_18
0x40064ce	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3354	objcopy.c	FUNCTION_39	WHILE_1	IF_18	CALL_35
0x40064d5	          0x4889c7	                            mov rdi, rax	      3354	objcopy.c	FUNCTION_39	WHILE_1	IF_18	CALL_35
0x40064d8	      0xe800000000	                          call 0x40064dd	      3354	objcopy.c	FUNCTION_39	WHILE_1	IF_18	CALL_35
0x40064dd	    0xc70500000000	               mov dword [0x040064e7], 1	      3355	objcopy.c	FUNCTION_39	WHILE_1	IF_18
0x40064e7	      0xe9c0000000	                           jmp 0x40065ac	      3355	objcopy.c	FUNCTION_39	WHILE_1	IF_18
0x40064ec	    0x8b0500000000	            mov eax, dword [0x040064f2] 	      3359	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	IF_19
0x40064f2	            0x85c0	                           test eax, eax	      3359	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	IF_19
0x40064f4	            0x7422	                            je 0x4006518	      3359	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	IF_19
0x40064f6	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      3359	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	IF_19
0x40064fd	            0x7519	                           jne 0x4006518	      3359	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	IF_19
0x40064ff	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	      3360	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_36
0x4006506	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3360	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_36
0x400650d	          0x4889d6	                            mov rsi, rdx	      3360	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_36
0x4006510	          0x4889c7	                            mov rdi, rax	      3360	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_36
0x4006513	      0xe800000000	                          call 0x4006518	      3360	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_36
0x4006518	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      3363	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_37
0x400651f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3363	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_37
0x4006526	          0x4889d6	                            mov rsi, rdx	      3363	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_37
0x4006529	          0x4889c7	                            mov rdi, rax	      3363	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_37
0x400652c	      0xe800000000	                          call 0x4006531	      3363	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_37
0x4006531	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      3363	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_37
0x4006538	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3365	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4
0x400653f	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      3365	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4
0x4006546	        0x48895010	             mov qword [rax + 0x10], rdx	      3365	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4
0x400654a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3367	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4
0x4006551	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      3367	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4
0x4006558	          0x488910	                    mov qword [rax], rdx	      3367	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4
0x400655b	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3368	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4
0x4006562	    0x4805d8000000	                           add rax, 0xd8	      3368	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4
0x4006568	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3368	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4
0x400656f	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3370	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4
0x4006576	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      3370	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4
0x400657d	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      3372	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_38
0x4006584	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      3372	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_38
0x400658b	          0x4889d6	                            mov rsi, rdx	      3372	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_38
0x400658e	          0x4889c7	                            mov rdi, rax	      3372	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_38
0x4006591	      0xe800000000	                          call 0x4006596	      3372	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_38
0x4006596	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      3372	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_38
0x400659d	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3374	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_39
0x40065a4	          0x4889c7	                            mov rdi, rax	      3374	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_39
0x40065a7	      0xe800000000	                          call 0x40065ac	      3374	objcopy.c	FUNCTION_39	WHILE_1	ELSE_4	CALL_39
0x40065ac	    0x8b0500000000	            mov eax, dword [0x040065b2] 	      3247	objcopy.c	FUNCTION_39	WHILE_1
0x40065b2	            0x85c0	                           test eax, eax	      3247	objcopy.c	FUNCTION_39	WHILE_1
0x40065b4	            0x750e	                           jne 0x40065c4	      3247	objcopy.c	FUNCTION_39	WHILE_1
0x40065b6	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      3247	objcopy.c	FUNCTION_39	WHILE_1
0x40065be	     0xf85c8faffff	                           jne 0x400608c	      3247	objcopy.c	FUNCTION_39	WHILE_1
0x40065c4	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3377	objcopy.c	FUNCTION_39
0x40065cb	    0x48c700000000	                      mov qword [rax], 0	      3377	objcopy.c	FUNCTION_39
0x40065d2	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3379	objcopy.c	FUNCTION_39
0x40065d9	          0x488b00	                    mov rax, qword [rax]	      3379	objcopy.c	FUNCTION_39
0x40065dc	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      3379	objcopy.c	FUNCTION_39
0x40065e3	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3380	objcopy.c	FUNCTION_39	IF_20	CALL_40
0x40065ea	          0x4889c7	                            mov rdi, rax	      3380	objcopy.c	FUNCTION_39	IF_20	CALL_40
0x40065ed	      0xe800000000	                          call 0x40065f2	      3380	objcopy.c	FUNCTION_39	IF_20	CALL_40
0x40065f2	            0x85c0	                           test eax, eax	      3380	objcopy.c	FUNCTION_39	IF_20	CALL_40
0x40065f4	            0x752d	                           jne 0x4006623	      3380	objcopy.c	FUNCTION_39	IF_20	CALL_40
0x40065f6	    0xc70500000000	               mov dword [0x04006600], 1	      3382	objcopy.c	FUNCTION_39	IF_20
0x4006600	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3383	objcopy.c	FUNCTION_39	IF_20	CALL_41
0x4006607	      0xb900000000	                              mov ecx, 0	      3383	objcopy.c	FUNCTION_39	IF_20	CALL_41
0x400660c	      0xba00000000	                              mov edx, 0	      3383	objcopy.c	FUNCTION_39	IF_20	CALL_41
0x4006611	      0xbe00000000	                              mov esi, 0	      3383	objcopy.c	FUNCTION_39	IF_20	CALL_41
0x4006616	          0x4889c7	                            mov rdi, rax	      3383	objcopy.c	FUNCTION_39	IF_20	CALL_41
0x4006619	      0xb800000000	                              mov eax, 0	      3383	objcopy.c	FUNCTION_39	IF_20	CALL_41
0x400661e	      0xe800000000	                          call 0x4006623	      3383	objcopy.c	FUNCTION_39	IF_20	CALL_41
0x4006623	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      3386	objcopy.c	FUNCTION_39
0x400662a	          0x488b00	                    mov rax, qword [rax]	      3386	objcopy.c	FUNCTION_39
0x400662d	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      3386	objcopy.c	FUNCTION_39
0x4006634	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      3387	objcopy.c	FUNCTION_39	IF_21	CALL_42
0x400663b	          0x4889c7	                            mov rdi, rax	      3387	objcopy.c	FUNCTION_39	IF_21	CALL_42
0x400663e	      0xe800000000	                          call 0x4006643	      3387	objcopy.c	FUNCTION_39	IF_21	CALL_42
0x4006643	            0x85c0	                           test eax, eax	      3387	objcopy.c	FUNCTION_39	IF_21	CALL_42
0x4006645	            0x752d	                           jne 0x4006674	      3387	objcopy.c	FUNCTION_39	IF_21	CALL_42
0x4006647	    0xc70500000000	               mov dword [0x04006651], 1	      3389	objcopy.c	FUNCTION_39	IF_21
0x4006651	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3390	objcopy.c	FUNCTION_39	IF_21	CALL_43
0x4006658	      0xb900000000	                              mov ecx, 0	      3390	objcopy.c	FUNCTION_39	IF_21	CALL_43
0x400665d	      0xba00000000	                              mov edx, 0	      3390	objcopy.c	FUNCTION_39	IF_21	CALL_43
0x4006662	      0xbe00000000	                              mov esi, 0	      3390	objcopy.c	FUNCTION_39	IF_21	CALL_43
0x4006667	          0x4889c7	                            mov rdi, rax	      3390	objcopy.c	FUNCTION_39	IF_21	CALL_43
0x400666a	      0xb800000000	                              mov eax, 0	      3390	objcopy.c	FUNCTION_39	IF_21	CALL_43
0x400666f	      0xe800000000	                          call 0x4006674	      3390	objcopy.c	FUNCTION_39	IF_21	CALL_43
0x4006674	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3395	objcopy.c	FUNCTION_39	FOR_1
0x400667b	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3395	objcopy.c	FUNCTION_39	FOR_1
0x4006682	            0xeb5c	                           jmp 0x40066e0	      3395	objcopy.c	FUNCTION_39	FOR_1
0x4006684	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3397	objcopy.c	FUNCTION_39	FOR_1	IF_22
0x400668b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3397	objcopy.c	FUNCTION_39	FOR_1	IF_22
0x400668f	          0x4885c0	                           test rax, rax	      3397	objcopy.c	FUNCTION_39	FOR_1	IF_22
0x4006692	            0x7515	                           jne 0x40066a9	      3397	objcopy.c	FUNCTION_39	FOR_1	IF_22
0x4006694	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3398	objcopy.c	FUNCTION_39	FOR_1	CALL_44
0x400669b	        0x488b4008	                mov rax, qword [rax + 8]	      3398	objcopy.c	FUNCTION_39	FOR_1	CALL_44
0x400669f	          0x4889c7	                            mov rdi, rax	      3398	objcopy.c	FUNCTION_39	FOR_1	CALL_44
0x40066a2	      0xe800000000	                          call 0x40066a7	      3398	objcopy.c	FUNCTION_39	FOR_1	CALL_44
0x40066a7	            0xeb26	                           jmp 0x40066cf	      3398	objcopy.c	FUNCTION_39	FOR_1	CALL_44
0x40066a9	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3401	objcopy.c	FUNCTION_39	FOR_1	ELSE_5	CALL_45
0x40066b0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3401	objcopy.c	FUNCTION_39	FOR_1	ELSE_5	CALL_45
0x40066b4	          0x4889c7	                            mov rdi, rax	      3401	objcopy.c	FUNCTION_39	FOR_1	ELSE_5	CALL_45
0x40066b7	      0xe800000000	                          call 0x40066bc	      3401	objcopy.c	FUNCTION_39	FOR_1	ELSE_5	CALL_45
0x40066bc	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3402	objcopy.c	FUNCTION_39	FOR_1	ELSE_5	CALL_46
0x40066c3	        0x488b4008	                mov rax, qword [rax + 8]	      3402	objcopy.c	FUNCTION_39	FOR_1	ELSE_5	CALL_46
0x40066c7	          0x4889c7	                            mov rdi, rax	      3402	objcopy.c	FUNCTION_39	FOR_1	ELSE_5	CALL_46
0x40066ca	      0xe800000000	                          call 0x40066cf	      3402	objcopy.c	FUNCTION_39	FOR_1	ELSE_5	CALL_46
0x40066cf	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3395	objcopy.c	FUNCTION_39	FOR_1
0x40066d6	          0x488b00	                    mov rax, qword [rax]	      3395	objcopy.c	FUNCTION_39	FOR_1
0x40066d9	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3395	objcopy.c	FUNCTION_39	FOR_1
0x40066e0	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      3395	objcopy.c	FUNCTION_39	FOR_1
0x40066e8	            0x759a	                           jne 0x4006684	      3395	objcopy.c	FUNCTION_39	FOR_1
0x40066ea	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      3406	objcopy.c	FUNCTION_39	CALL_47
0x40066f1	          0x4889c7	                            mov rdi, rax	      3406	objcopy.c	FUNCTION_39	CALL_47
0x40066f4	      0xe800000000	                          call 0x40066f9	      3406	objcopy.c	FUNCTION_39	CALL_47
0x40066f9	              0x90	                                     nop	      3407	objcopy.c	FUNCTION_39
0x40066fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3407	objcopy.c	FUNCTION_39
0x40066fe	    0x644833042528	                xor rax, qword fs:[0x28]	      3407	objcopy.c	FUNCTION_39
0x4006707	            0x7405	                            je 0x400670e	      3407	objcopy.c	FUNCTION_39
0x4006709	      0xe800000000	                          call 0x400670e	      3407	objcopy.c	FUNCTION_39
0x400670e	    0x4881c4380100	                          add rsp, 0x138	      3407	objcopy.c	FUNCTION_39
0x4006715	              0x5b	                                 pop rbx	      3407	objcopy.c	FUNCTION_39
0x4006716	              0x5d	                                 pop rbp	      3407	objcopy.c	FUNCTION_39
0x4006717	              0xc3	                                     ret	      3407	objcopy.c	FUNCTION_39
init_section_add	IF,1:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,5	50
0x4008d0c	              0x55	                                push rbp	      4620	objcopy.c	FUNCTION_60
0x4008d0d	          0x4889e5	                            mov rbp, rsp	      4620	objcopy.c	FUNCTION_60
0x4008d10	        0x4883ec30	                           sub rsp, 0x30	      4620	objcopy.c	FUNCTION_60
0x4008d14	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4620	objcopy.c	FUNCTION_60
0x4008d18	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4620	objcopy.c	FUNCTION_60
0x4008d1c	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4620	objcopy.c	FUNCTION_60
0x4008d20	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4624	objcopy.c	FUNCTION_60	CALL_1
0x4008d24	      0xbe3d000000	                           mov esi, 0x3d	      4624	objcopy.c	FUNCTION_60	CALL_1
0x4008d29	          0x4889c7	                            mov rdi, rax	      4624	objcopy.c	FUNCTION_60	CALL_1
0x4008d2c	      0xe800000000	                          call 0x4008d31	      4624	objcopy.c	FUNCTION_60	CALL_1
0x4008d31	        0x488945f0	             mov qword [rbp - 0x10], rax	      4624	objcopy.c	FUNCTION_60	CALL_1
0x4008d35	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4625	objcopy.c	FUNCTION_60	IF_1
0x4008d3a	            0x7521	                           jne 0x4008d5d	      4625	objcopy.c	FUNCTION_60	IF_1
0x4008d3c	      0xbf00000000	                              mov edi, 0	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4008d41	      0xe800000000	                          call 0x4008d46	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4008d46	          0x4889c2	                            mov rdx, rax	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4008d49	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4008d4d	          0x4889c6	                            mov rsi, rax	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4008d50	          0x4889d7	                            mov rdi, rdx	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4008d53	      0xb800000000	                              mov eax, 0	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4008d58	      0xe800000000	                          call 0x4008d5d	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4008d5d	      0xbf30000000	                           mov edi, 0x30	      4628	objcopy.c	FUNCTION_60	CALL_4
0x4008d62	      0xe800000000	                          call 0x4008d67	      4628	objcopy.c	FUNCTION_60	CALL_4
0x4008d67	        0x488945f8	                mov qword [rbp - 8], rax	      4628	objcopy.c	FUNCTION_60	CALL_4
0x4008d6b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4008d6f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4008d73	          0x4829c2	                            sub rdx, rax	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4008d76	          0x4889d0	                            mov rax, rdx	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4008d79	          0x4889c2	                            mov rdx, rax	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4008d7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4008d80	          0x4889d6	                            mov rsi, rdx	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4008d83	          0x4889c7	                            mov rdi, rax	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4008d86	      0xe800000000	                          call 0x4008d8b	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4008d8b	          0x4889c2	                            mov rdx, rax	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4008d8e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4008d92	        0x48895008	                mov qword [rax + 8], rdx	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4008d96	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4630	objcopy.c	FUNCTION_60
0x4008d9a	        0x488d5001	                      lea rdx, [rax + 1]	      4630	objcopy.c	FUNCTION_60
0x4008d9e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4630	objcopy.c	FUNCTION_60
0x4008da2	        0x48895010	             mov qword [rax + 0x10], rdx	      4630	objcopy.c	FUNCTION_60
0x4008da6	        0x488b45f8	                mov rax, qword [rbp - 8]	      4631	objcopy.c	FUNCTION_60
0x4008daa	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4631	objcopy.c	FUNCTION_60
0x4008dae	          0x488910	                    mov qword [rax], rdx	      4631	objcopy.c	FUNCTION_60
0x4008db1	        0x488b45f8	                mov rax, qword [rbp - 8]	      4632	objcopy.c	FUNCTION_60
0x4008db5	    0x48c740200000	               mov qword [rax + 0x20], 0	      4632	objcopy.c	FUNCTION_60
0x4008dbd	        0x488b45f8	                mov rax, qword [rbp - 8]	      4633	objcopy.c	FUNCTION_60
0x4008dc1	    0x48c740180000	               mov qword [rax + 0x18], 0	      4633	objcopy.c	FUNCTION_60
0x4008dc9	        0x488b45f8	                mov rax, qword [rbp - 8]	      4635	objcopy.c	FUNCTION_60
0x4008dcd	              0xc9	                                   leave	      4636	objcopy.c	FUNCTION_60
0x4008dce	              0xc3	                                     ret	      4636	objcopy.c	FUNCTION_60
add_redefine_and_check	IF,2:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,11	67
0x40022dd	              0x55	                                push rbp	      1687	objcopy.c	FUNCTION_29
0x40022de	          0x4889e5	                            mov rbp, rsp	      1687	objcopy.c	FUNCTION_29
0x40022e1	        0x4883ec30	                           sub rsp, 0x30	      1687	objcopy.c	FUNCTION_29
0x40022e5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1687	objcopy.c	FUNCTION_29
0x40022e9	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1687	objcopy.c	FUNCTION_29
0x40022ed	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1687	objcopy.c	FUNCTION_29
0x40022f1	      0xbf10000000	                           mov edi, 0x10	      1688	objcopy.c	FUNCTION_29
0x40022f6	      0xe800000000	                          call 0x40022fb	      1688	objcopy.c	FUNCTION_29
0x40022fb	        0x488945f8	                mov qword [rbp - 8], rax	      1688	objcopy.c	FUNCTION_29
0x40022ff	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1691	objcopy.c	FUNCTION_29	CALL_2
0x4002303	          0x4889c7	                            mov rdi, rax	      1691	objcopy.c	FUNCTION_29	CALL_2
0x4002306	      0xe800000000	                          call 0x400230b	      1691	objcopy.c	FUNCTION_29	CALL_2
0x400230b	          0x4889c2	                            mov rdx, rax	      1691	objcopy.c	FUNCTION_29	CALL_2
0x400230e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1691	objcopy.c	FUNCTION_29	CALL_2
0x4002312	          0x488910	                    mov qword [rax], rdx	      1691	objcopy.c	FUNCTION_29	CALL_2
0x4002315	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1692	objcopy.c	FUNCTION_29	CALL_3
0x4002319	          0x4889c7	                            mov rdi, rax	      1692	objcopy.c	FUNCTION_29	CALL_3
0x400231c	      0xe800000000	                          call 0x4002321	      1692	objcopy.c	FUNCTION_29	CALL_3
0x4002321	          0x4889c2	                            mov rdx, rax	      1692	objcopy.c	FUNCTION_29	CALL_3
0x4002324	        0x488b45f8	                mov rax, qword [rbp - 8]	      1692	objcopy.c	FUNCTION_29	CALL_3
0x4002328	        0x48895008	                mov qword [rax + 8], rdx	      1692	objcopy.c	FUNCTION_29	CALL_3
0x400232c	    0x488b05000000	            mov rax, qword [0x04002333] 	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4002333	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4002337	          0x4889d6	                            mov rsi, rdx	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x400233a	          0x4889c7	                            mov rdi, rax	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x400233d	      0xe800000000	                          call 0x4002342	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4002342	          0x4885c0	                           test rax, rax	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4002345	            0x7425	                            je 0x400236c	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4002347	      0xbf00000000	                              mov edi, 0	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x400234c	      0xe800000000	                          call 0x4002351	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4002351	          0x4889c1	                            mov rcx, rax	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4002354	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4002358	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x400235c	          0x4889c6	                            mov rsi, rax	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x400235f	          0x4889cf	                            mov rdi, rcx	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4002362	      0xb800000000	                              mov eax, 0	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4002367	      0xe800000000	                          call 0x400236c	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x400236c	    0x488b05000000	            mov rax, qword [0x04002373] 	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4002373	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4002377	          0x4889d6	                            mov rsi, rdx	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x400237a	          0x4889c7	                            mov rdi, rax	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x400237d	      0xe800000000	                          call 0x4002382	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4002382	          0x4885c0	                           test rax, rax	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4002385	            0x7425	                            je 0x40023ac	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4002387	      0xbf00000000	                              mov edi, 0	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x400238c	      0xe800000000	                          call 0x4002391	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4002391	          0x4889c1	                            mov rcx, rax	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4002394	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4002398	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x400239c	          0x4889c6	                            mov rsi, rax	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x400239f	          0x4889cf	                            mov rdi, rcx	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40023a2	      0xb800000000	                              mov eax, 0	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40023a7	      0xe800000000	                          call 0x40023ac	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40023ac	    0x488b15000000	            mov rdx, qword [0x040023b3] 	      1703	objcopy.c	FUNCTION_29	CALL_10
0x40023b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1703	objcopy.c	FUNCTION_29	CALL_10
0x40023b7	          0x4889d6	                            mov rsi, rdx	      1703	objcopy.c	FUNCTION_29	CALL_10
0x40023ba	          0x4889c7	                            mov rdi, rax	      1703	objcopy.c	FUNCTION_29	CALL_10
0x40023bd	      0xe8bee9ffff	       call sym.add_specific_symbol_node	      1703	objcopy.c	FUNCTION_29	CALL_10
0x40023c2	    0x488b15000000	            mov rdx, qword [0x040023c9] 	      1707	objcopy.c	FUNCTION_29	CALL_11
0x40023c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1707	objcopy.c	FUNCTION_29	CALL_11
0x40023cd	        0x488b4008	                mov rax, qword [rax + 8]	      1707	objcopy.c	FUNCTION_29	CALL_11
0x40023d1	          0x4889d6	                            mov rsi, rdx	      1707	objcopy.c	FUNCTION_29	CALL_11
0x40023d4	          0x4889c7	                            mov rdi, rax	      1707	objcopy.c	FUNCTION_29	CALL_11
0x40023d7	      0xe86fe9ffff	            call sym.add_specific_symbol	      1707	objcopy.c	FUNCTION_29	CALL_11
0x40023dc	              0x90	                                     nop	      1709	objcopy.c	FUNCTION_29
0x40023dd	              0xc9	                                   leave	      1709	objcopy.c	FUNCTION_29
0x40023de	              0xc3	                                     ret	      1709	objcopy.c	FUNCTION_29
main	IF,4:FOR,0:ELSE,1:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,17	79
0x400acdf	              0x55	                                push rbp	      5543	objcopy.c	FUNCTION_63
0x400ace0	          0x4889e5	                            mov rbp, rsp	      5543	objcopy.c	FUNCTION_63
0x400ace3	        0x4883ec20	                           sub rsp, 0x20	      5543	objcopy.c	FUNCTION_63
0x400ace7	          0x897dec	             mov dword [rbp - 0x14], edi	      5543	objcopy.c	FUNCTION_63
0x400acea	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5543	objcopy.c	FUNCTION_63
0x400acee	      0xbe00000000	                              mov esi, 0	      5545	objcopy.c	FUNCTION_63	CALL_1
0x400acf3	      0xbf05000000	                              mov edi, 5	      5545	objcopy.c	FUNCTION_63	CALL_1
0x400acf8	      0xe800000000	                          call 0x400acfd	      5545	objcopy.c	FUNCTION_63	CALL_1
0x400acfd	      0xbe00000000	                              mov esi, 0	      5548	objcopy.c	FUNCTION_63	CALL_2
0x400ad02	      0xbf00000000	                              mov edi, 0	      5548	objcopy.c	FUNCTION_63	CALL_2
0x400ad07	      0xe800000000	                          call 0x400ad0c	      5548	objcopy.c	FUNCTION_63	CALL_2
0x400ad0c	      0xbe00000000	                              mov esi, 0	      5550	objcopy.c	FUNCTION_63	CALL_3
0x400ad11	      0xbf00000000	                              mov edi, 0	      5550	objcopy.c	FUNCTION_63	CALL_3
0x400ad16	      0xe800000000	                          call 0x400ad1b	      5550	objcopy.c	FUNCTION_63	CALL_3
0x400ad1b	      0xbf00000000	                              mov edi, 0	      5551	objcopy.c	FUNCTION_63	CALL_4
0x400ad20	      0xe800000000	                          call 0x400ad25	      5551	objcopy.c	FUNCTION_63	CALL_4
0x400ad25	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5553	objcopy.c	FUNCTION_63
0x400ad29	          0x488b00	                    mov rax, qword [rax]	      5553	objcopy.c	FUNCTION_63
0x400ad2c	    0x488905000000	            mov qword [0x0400ad33], rax 	      5553	objcopy.c	FUNCTION_63
0x400ad33	    0x488b05000000	            mov rax, qword [0x0400ad3a] 	      5554	objcopy.c	FUNCTION_63	CALL_5
0x400ad3a	          0x4889c7	                            mov rdi, rax	      5554	objcopy.c	FUNCTION_63	CALL_5
0x400ad3d	      0xe800000000	                          call 0x400ad42	      5554	objcopy.c	FUNCTION_63	CALL_5
0x400ad42	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      5558	objcopy.c	FUNCTION_63	CALL_7
0x400ad46	        0x488d45ec	                   lea rax, [rbp - 0x14]	      5558	objcopy.c	FUNCTION_63	CALL_7
0x400ad4a	          0x4889d6	                            mov rsi, rdx	      5558	objcopy.c	FUNCTION_63	CALL_7
0x400ad4d	          0x4889c7	                            mov rdi, rax	      5558	objcopy.c	FUNCTION_63	CALL_7
0x400ad50	      0xe800000000	                          call 0x400ad55	      5558	objcopy.c	FUNCTION_63	CALL_7
0x400ad55	    0xc70500000000	               mov dword [0x0400ad5f], 0	      5560	objcopy.c	FUNCTION_63
0x400ad5f	    0xc70500000000	               mov dword [0x0400ad69], 0	      5561	objcopy.c	FUNCTION_63
0x400ad69	      0xe800000000	                          call 0x400ad6e	      5563	objcopy.c	FUNCTION_63	CALL_8
0x400ad6e	      0xe800000000	                          call 0x400ad73	      5564	objcopy.c	FUNCTION_63	CALL_9
0x400ad73	    0x8b0500000000	            mov eax, dword [0x0400ad79] 	      5566	objcopy.c	FUNCTION_63	IF_1
0x400ad79	            0x85c0	                           test eax, eax	      5566	objcopy.c	FUNCTION_63	IF_1
0x400ad7b	            0x794f	                           jns 0x400adcc	      5566	objcopy.c	FUNCTION_63	IF_1
0x400ad7d	    0x488b05000000	            mov rax, qword [0x0400ad84] 	      5568	objcopy.c	FUNCTION_63	IF_1	CALL_10
0x400ad84	          0x4889c7	                            mov rdi, rax	      5568	objcopy.c	FUNCTION_63	IF_1	CALL_10
0x400ad87	      0xe800000000	                          call 0x400ad8c	      5568	objcopy.c	FUNCTION_63	IF_1	CALL_10
0x400ad8c	          0x8945fc	                mov dword [rbp - 4], eax	      5568	objcopy.c	FUNCTION_63	IF_1	CALL_10
0x400ad8f	        0x837dfc04	                  cmp dword [rbp - 4], 4	      5577	objcopy.c	FUNCTION_63	IF_1	CALL_12
0x400ad93	            0x7e2c	                           jle 0x400adc1	      5577	objcopy.c	FUNCTION_63	IF_1	CALL_12
0x400ad95	    0x488b05000000	            mov rax, qword [0x0400ad9c] 	      5577	objcopy.c	FUNCTION_63	IF_1	CALL_12
0x400ad9c	          0x8b55fc	                mov edx, dword [rbp - 4]	      5577	objcopy.c	FUNCTION_63	IF_1	CALL_12
0x400ad9f	          0x4863d2	                         movsxd rdx, edx	      5577	objcopy.c	FUNCTION_63	IF_1	CALL_12
0x400ada2	        0x4883ea05	                              sub rdx, 5	      5577	objcopy.c	FUNCTION_63	IF_1	CALL_12
0x400ada6	          0x4801d0	                            add rax, rdx	      5577	objcopy.c	FUNCTION_63	IF_1	CALL_12
0x400ada9	      0xbe00000000	                              mov esi, 0	      5577	objcopy.c	FUNCTION_63	IF_1	CALL_12
0x400adae	          0x4889c7	                            mov rdi, rax	      5577	objcopy.c	FUNCTION_63	IF_1	CALL_12
0x400adb1	      0xe800000000	                          call 0x400adb6	      5577	objcopy.c	FUNCTION_63	IF_1	CALL_12
0x400adb6	            0x85c0	                           test eax, eax	      5577	objcopy.c	FUNCTION_63	IF_1	CALL_12
0x400adb8	            0x7507	                           jne 0x400adc1	      5577	objcopy.c	FUNCTION_63	IF_1	CALL_12
0x400adba	      0xb801000000	                              mov eax, 1	      5577	objcopy.c	FUNCTION_63	IF_1	CALL_12
0x400adbf	            0xeb05	                           jmp 0x400adc6	      5577	objcopy.c	FUNCTION_63	IF_1	CALL_12
0x400adc1	      0xb800000000	                              mov eax, 0	      5577	objcopy.c	FUNCTION_63	IF_1	CALL_12
0x400adc6	    0x890500000000	            mov dword [0x0400adcc], eax 	      5577	objcopy.c	FUNCTION_63	IF_1	CALL_12
0x400adcc	      0xe8075fffff	            call sym.create_symbol_htabs	      5580	objcopy.c	FUNCTION_63	CALL_13
0x400add1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5582	objcopy.c	FUNCTION_63	IF_3
0x400add5	          0x4885c0	                           test rax, rax	      5582	objcopy.c	FUNCTION_63	IF_3
0x400add8	            0x740f	                            je 0x400ade9	      5582	objcopy.c	FUNCTION_63	IF_3
0x400adda	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5583	objcopy.c	FUNCTION_63	CALL_14
0x400adde	          0x488b00	                    mov rax, qword [rax]	      5583	objcopy.c	FUNCTION_63	CALL_14
0x400ade1	          0x4889c7	                            mov rdi, rax	      5583	objcopy.c	FUNCTION_63	CALL_14
0x400ade4	      0xe800000000	                          call 0x400ade9	      5583	objcopy.c	FUNCTION_63	CALL_14
0x400ade9	    0x8b0500000000	            mov eax, dword [0x0400adef] 	      5585	objcopy.c	FUNCTION_63	IF_4
0x400adef	            0x85c0	                           test eax, eax	      5585	objcopy.c	FUNCTION_63	IF_4
0x400adf1	            0x7413	                            je 0x400ae06	      5585	objcopy.c	FUNCTION_63	IF_4
0x400adf3	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5586	objcopy.c	FUNCTION_63	CALL_15
0x400adf7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5586	objcopy.c	FUNCTION_63	CALL_15
0x400adfa	          0x4889d6	                            mov rsi, rdx	      5586	objcopy.c	FUNCTION_63	CALL_15
0x400adfd	            0x89c7	                            mov edi, eax	      5586	objcopy.c	FUNCTION_63	CALL_15
0x400adff	      0xe8edd5ffff	                     call sym.strip_main	      5586	objcopy.c	FUNCTION_63	CALL_15
0x400ae04	            0xeb11	                           jmp 0x400ae17	      5586	objcopy.c	FUNCTION_63	CALL_15
0x400ae06	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5588	objcopy.c	FUNCTION_63	CALL_16
0x400ae0a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5588	objcopy.c	FUNCTION_63	CALL_16
0x400ae0d	          0x4889d6	                            mov rsi, rdx	      5588	objcopy.c	FUNCTION_63	CALL_16
0x400ae10	            0x89c7	                            mov edi, eax	      5588	objcopy.c	FUNCTION_63	CALL_16
0x400ae12	      0xe819e1ffff	                      call sym.copy_main	      5588	objcopy.c	FUNCTION_63	CALL_16
0x400ae17	    0x8b0500000000	            mov eax, dword [0x0400ae1d] 	      5592	objcopy.c	FUNCTION_63
0x400ae1d	              0xc9	                                   leave	      5593	objcopy.c	FUNCTION_63
0x400ae1e	              0xc3	                                     ret	      5593	objcopy.c	FUNCTION_63
filter_symbols	IF,28:FOR,2:ELSE,9:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,30	579
0x400196b	              0x55	                                push rbp	      1463	objcopy.c	ELSE_1	FUNCTION_27
0x400196c	          0x4889e5	                            mov rbp, rsp	      1463	objcopy.c	ELSE_1	FUNCTION_27
0x400196f	              0x53	                                push rbx	      1463	objcopy.c	ELSE_1	FUNCTION_27
0x4001970	    0x4881ecb80000	                           sub rsp, 0xb8	      1463	objcopy.c	ELSE_1	FUNCTION_27
0x4001977	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      1463	objcopy.c	ELSE_1	FUNCTION_27
0x400197e	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      1463	objcopy.c	ELSE_1	FUNCTION_27
0x4001985	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      1463	objcopy.c	ELSE_1	FUNCTION_27
0x400198c	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	      1463	objcopy.c	ELSE_1	FUNCTION_27
0x4001993	    0x4c898548ffff	              mov qword [rbp - 0xb8], r8	      1463	objcopy.c	ELSE_1	FUNCTION_27
0x400199a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1463	objcopy.c	ELSE_1	FUNCTION_27
0x40019a3	        0x488945e8	             mov qword [rbp - 0x18], rax	      1463	objcopy.c	ELSE_1	FUNCTION_27
0x40019a7	            0x31c0	                            xor eax, eax	      1463	objcopy.c	ELSE_1	FUNCTION_27
0x40019a9	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1464	objcopy.c	ELSE_1	FUNCTION_27
0x40019b0	        0x488945c8	             mov qword [rbp - 0x38], rax	      1464	objcopy.c	ELSE_1	FUNCTION_27
0x40019b4	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1464	objcopy.c	ELSE_1	FUNCTION_27
0x40019bb	        0x488945d0	             mov qword [rbp - 0x30], rax	      1464	objcopy.c	ELSE_1	FUNCTION_27
0x40019bf	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1465	objcopy.c	ELSE_1	FUNCTION_27
0x40019c7	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1465	objcopy.c	ELSE_1	FUNCTION_27
0x40019cf	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1466	objcopy.c	ELSE_1	FUNCTION_27
0x40019d6	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1466	objcopy.c	ELSE_1	FUNCTION_27
0x40019d9	          0xc1e805	                              shr eax, 5	      1466	objcopy.c	ELSE_1	FUNCTION_27
0x40019dc	      0x25ffff0f00	                        and eax, 0xfffff	      1466	objcopy.c	ELSE_1	FUNCTION_27
0x40019e1	          0x83e042	                           and eax, 0x42	      1466	objcopy.c	ELSE_1	FUNCTION_27
0x40019e4	            0x85c0	                           test eax, eax	      1466	objcopy.c	ELSE_1	FUNCTION_27
0x40019e6	           0xf94c0	                                 sete al	      1466	objcopy.c	ELSE_1	FUNCTION_27
0x40019e9	           0xfb6c0	                           movzx eax, al	      1466	objcopy.c	ELSE_1	FUNCTION_27
0x40019ec	          0x894584	             mov dword [rbp - 0x7c], eax	      1466	objcopy.c	ELSE_1	FUNCTION_27
0x40019ef	      0xe96f070000	                           jmp 0x4002163	      1468	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x40019f4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1470	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x40019f8	    0x488d14c50000	                        lea rdx, [rax*8]	      1470	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a00	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1470	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a04	          0x4801d0	                            add rax, rdx	      1470	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a07	          0x488b00	                    mov rax, qword [rax]	      1470	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a0a	        0x488945d8	             mov qword [rbp - 0x28], rax	      1470	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a0e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1471	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a12	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1471	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a15	          0x894588	             mov dword [rbp - 0x78], eax	      1471	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a18	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1472	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a1c	        0x488b4008	                mov rax, qword [rax + 8]	      1472	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a20	        0x488945a8	             mov qword [rbp - 0x58], rax	      1472	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a24	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	      1474	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a2e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1479	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a32	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1479	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a36	    0x483d00000000	                              cmp rax, 0	      1479	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a3c	           0xf94c0	                                 sete al	      1479	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a3f	           0xfb6c0	                           movzx eax, al	      1479	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a42	          0x89458c	             mov dword [rbp - 0x74], eax	      1479	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001a45	    0x488b05000000	            mov rax, qword [0x04001a4c] 	      1481	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1
0x4001a4c	          0x4885c0	                           test rax, rax	      1481	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1
0x4001a4f	            0x744c	                            je 0x4001a9d	      1481	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1
0x4001a51	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1485	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	IF_2	CALL_1
0x4001a55	        0x488d4590	                   lea rax, [rbp - 0x70]	      1485	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	IF_2	CALL_1
0x4001a59	          0x4889d6	                            mov rsi, rdx	      1485	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	IF_2	CALL_1
0x4001a5c	          0x4889c7	                            mov rdi, rax	      1485	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	IF_2	CALL_1
0x4001a5f	      0xe895fdffff	                call sym.need_sym_before	      1485	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	IF_2	CALL_1
0x4001a64	            0x85c0	                           test eax, eax	      1485	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	IF_2	CALL_1
0x4001a66	            0x7435	                            je 0x4001a9d	      1485	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	IF_2	CALL_1
0x4001a68	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1486	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	CALL_2
0x4001a6c	        0x488d5001	                      lea rdx, [rax + 1]	      1486	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	CALL_2
0x4001a70	        0x488955a0	             mov qword [rbp - 0x60], rdx	      1486	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	CALL_2
0x4001a74	    0x488d14c50000	                        lea rdx, [rax*8]	      1486	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	CALL_2
0x4001a7c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1486	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	CALL_2
0x4001a80	        0x488d1c02	                    lea rbx, [rdx + rax]	      1486	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	CALL_2
0x4001a84	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1486	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	CALL_2
0x4001a88	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      1486	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	CALL_2
0x4001a8f	          0x4889d6	                            mov rsi, rdx	      1486	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	CALL_2
0x4001a92	          0x4889c7	                            mov rdi, rax	      1486	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	CALL_2
0x4001a95	      0xe8fdfdffff	              call sym.create_new_symbol	      1486	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	CALL_2
0x4001a9a	          0x488903	                    mov qword [rbx], rax	      1486	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_1	CALL_2
0x4001a9d	    0x488b05000000	            mov rax, qword [0x04001aa4] 	      1489	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	CALL_3
0x4001aa4	          0x4889c7	                            mov rdi, rax	      1489	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	CALL_3
0x4001aa7	      0xe800000000	                          call 0x4001aac	      1489	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	CALL_3
0x4001aac	          0x4885c0	                           test rax, rax	      1489	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	CALL_3
0x4001aaf	            0x750c	                           jne 0x4001abd	      1489	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	CALL_3
0x4001ab1	    0x488b05000000	            mov rax, qword [0x04001ab8] 	      1489	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	CALL_3
0x4001ab8	          0x4885c0	                           test rax, rax	      1489	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	CALL_3
0x4001abb	            0x744f	                            je 0x4001b0c	      1489	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	CALL_3
0x4001abd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1493	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	CALL_4
0x4001ac1	          0x4889c7	                            mov rdi, rax	      1493	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	CALL_4
0x4001ac4	      0xe8a4070000	        call sym.lookup_sym_redefinition	      1493	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	CALL_4
0x4001ac9	        0x488945b0	             mov qword [rbp - 0x50], rax	      1493	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	CALL_4
0x4001acd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1494	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	IF_4
0x4001ad1	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      1494	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	IF_4
0x4001ad5	            0x7521	                           jne 0x4001af8	      1494	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	IF_4
0x4001ad7	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1495	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	IF_4
0x4001ada	      0x2500010000	                          and eax, 0x100	      1495	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	IF_4
0x4001adf	            0x85c0	                           test eax, eax	      1495	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	IF_4
0x4001ae1	            0x7415	                            je 0x4001af8	      1495	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	IF_4
0x4001ae3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1496	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	CALL_5
0x4001ae7	      0xbe00000000	                              mov esi, 0	      1496	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	CALL_5
0x4001aec	          0x4889c7	                            mov rdi, rax	      1496	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	CALL_5
0x4001aef	      0xe88b520000	            call sym.find_section_rename	      1496	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	CALL_5
0x4001af4	        0x488945b0	             mov qword [rbp - 0x50], rax	      1496	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3	CALL_5
0x4001af8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1497	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3
0x4001afc	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1497	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3
0x4001b00	        0x48895008	                mov qword [rax + 8], rdx	      1497	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3
0x4001b04	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1498	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3
0x4001b08	        0x488945a8	             mov qword [rbp - 0x58], rax	      1498	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_3
0x4001b0c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1503	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b10	           0xfb610	                   movzx edx, byte [rax]	      1503	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b13	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1503	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b1a	        0x488b4008	                mov rax, qword [rax + 8]	      1503	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b1e	         0xfb6401c	           movzx eax, byte [rax + 0x1c] 	      1503	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b22	            0x38c2	                              cmp dl, al	      1504	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b24	            0x7541	                           jne 0x4001b67	      1504	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b26	    0x8b0500000000	            mov eax, dword [0x04001b2c] 	      1504	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b2c	            0x85c0	                           test eax, eax	      1504	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b2e	            0x7530	                           jne 0x4001b60	      1504	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b30	    0x8b0500000000	            mov eax, dword [0x04001b36] 	      1505	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b36	            0x85c0	                           test eax, eax	      1505	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b38	            0x742d	                            je 0x4001b67	      1505	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b3a	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1506	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b3d	      0x2582000000	                           and eax, 0x82	      1506	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b42	            0x85c0	                           test eax, eax	      1506	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b44	            0x751a	                           jne 0x4001b60	      1506	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b46	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      1507	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b4a	            0x7514	                           jne 0x4001b60	      1507	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b4c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1508	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b50	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1508	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b54	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1508	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b57	      0x2500100000	                         and eax, 0x1000	      1508	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b5c	            0x85c0	                           test eax, eax	      1508	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b5e	            0x7407	                            je 0x4001b67	      1508	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b60	      0xb801000000	                              mov eax, 1	      1504	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b65	            0xeb05	                           jmp 0x4001b6c	      1504	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b67	      0xb800000000	                              mov eax, 0	      1504	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b6c	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      1502	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b72	    0x8b0500000000	            mov eax, dword [0x04001b78] 	      1512	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b78	            0x85c0	                           test eax, eax	      1514	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b7a	            0x7447	                            je 0x4001bc3	      1514	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b7c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1513	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b83	        0x488b4008	                mov rax, qword [rax + 8]	      1513	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b87	         0xfb6401c	           movzx eax, byte [rax + 0x1c] 	      1513	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b8b	            0x84c0	                             test al, al	      1513	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b8d	            0x7434	                            je 0x4001bc3	      1513	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b8f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1514	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b96	        0x488b4008	                mov rax, qword [rax + 8]	      1514	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b9a	         0xfb6401c	           movzx eax, byte [rax + 0x1c] 	      1514	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001b9e	            0x84c0	                             test al, al	      1514	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001ba0	            0x741a	                            je 0x4001bbc	      1514	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001ba2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1515	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001ba6	           0xfb610	                   movzx edx, byte [rax]	      1515	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001ba9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1515	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001bb0	        0x488b4008	                mov rax, qword [rax + 8]	      1515	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001bb4	         0xfb6401c	           movzx eax, byte [rax + 0x1c] 	      1515	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001bb8	            0x38c2	                              cmp dl, al	      1515	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001bba	            0x7507	                           jne 0x4001bc3	      1515	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001bbc	      0xb801000000	                              mov eax, 1	      1514	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001bc1	            0xeb05	                           jmp 0x4001bc8	      1514	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001bc3	      0xb800000000	                              mov eax, 0	      1514	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001bc8	          0x894580	             mov dword [rbp - 0x80], eax	      1511	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4001bcb	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      1518	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_5
0x4001bd2	            0x7444	                            je 0x4001c18	      1518	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_5
0x4001bd4	        0x837d8000	               cmp dword [rbp - 0x80], 0	      1518	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_5
0x4001bd8	            0x743e	                            je 0x4001c18	      1518	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_5
0x4001bda	    0x488b05000000	            mov rax, qword [0x04001be1] 	      1518	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_5
0x4001be1	          0x4885c0	                           test rax, rax	      1518	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_5
0x4001be4	            0x7532	                           jne 0x4001c18	      1518	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_5
0x4001be6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1520	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_5
0x4001bed	        0x488b4008	                mov rax, qword [rax + 8]	      1520	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_5
0x4001bf1	         0xfb6501c	           movzx edx, byte [rax + 0x1c] 	      1520	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_5
0x4001bf5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1520	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_5
0x4001bf9	            0x8810	                      mov byte [rax], dl	      1520	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_5
0x4001bfb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1521	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_5
0x4001bff	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1521	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_5
0x4001c03	        0x48895008	                mov qword [rax + 8], rdx	      1521	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_5
0x4001c07	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	      1522	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_5
0x4001c11	    0xc74580000000	               mov dword [rbp - 0x80], 0	      1523	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_5
0x4001c18	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      1527	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_6
0x4001c1f	            0x7411	                            je 0x4001c32	      1527	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_6
0x4001c21	      0x488345a801	               add qword [rbp - 0x58], 1	      1528	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_6
0x4001c26	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1528	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_6
0x4001c2a	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1528	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_6
0x4001c2e	        0x48895008	                mov qword [rax + 8], rdx	      1528	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_6
0x4001c32	        0x837d8000	               cmp dword [rbp - 0x80], 0	      1531	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7
0x4001c36	            0x7510	                           jne 0x4001c48	      1531	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7
0x4001c38	    0x488b05000000	            mov rax, qword [0x04001c3f] 	      1531	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7
0x4001c3f	          0x4885c0	                           test rax, rax	      1531	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7
0x4001c42	     0xf84b8000000	                            je 0x4001d00	      1531	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7
0x4001c48	    0x488b05000000	            mov rax, qword [0x04001c4f] 	      1535	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_7
0x4001c4f	          0x4889c7	                            mov rdi, rax	      1535	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_7
0x4001c52	      0xe800000000	                          call 0x4001c57	      1535	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_7
0x4001c57	          0x4889c3	                            mov rbx, rax	      1535	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_7
0x4001c5a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1536	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_8
0x4001c5e	          0x4889c7	                            mov rdi, rax	      1536	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_8
0x4001c61	      0xe800000000	                          call 0x4001c66	      1536	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_8
0x4001c66	          0x4801d8	                            add rax, rbx	      1536	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_8
0x4001c69	        0x4883c002	                              add rax, 2	      1535	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_7
0x4001c6d	          0x4889c7	                            mov rdi, rax	      1535	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_7
0x4001c70	      0xe800000000	                          call 0x4001c75	      1535	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_7
0x4001c75	        0x488945e0	             mov qword [rbp - 0x20], rax	      1535	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_7
0x4001c79	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1535	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_7
0x4001c7d	        0x488945b8	             mov qword [rbp - 0x48], rax	      1535	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_7
0x4001c81	        0x837d8000	               cmp dword [rbp - 0x80], 0	      1537	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_8
0x4001c85	            0x741d	                            je 0x4001ca4	      1537	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_8
0x4001c87	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1538	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_8
0x4001c8b	        0x488d5001	                      lea rdx, [rax + 1]	      1538	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_8
0x4001c8f	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1538	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_8
0x4001c93	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      1538	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_8
0x4001c9a	        0x488b5208	                mov rdx, qword [rdx + 8]	      1538	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_8
0x4001c9e	         0xfb6521c	           movzx edx, byte [rdx + 0x1c] 	      1538	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_8
0x4001ca2	            0x8810	                      mov byte [rax], dl	      1538	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_8
0x4001ca4	    0x488b05000000	            mov rax, qword [0x04001cab] 	      1540	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_9
0x4001cab	          0x4885c0	                           test rax, rax	      1540	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_9
0x4001cae	            0x7429	                            je 0x4001cd9	      1540	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_9
0x4001cb0	    0x488b15000000	            mov rdx, qword [0x04001cb7] 	      1542	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_9	CALL_9
0x4001cb7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1542	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_9	CALL_9
0x4001cbb	          0x4889d6	                            mov rsi, rdx	      1542	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_9	CALL_9
0x4001cbe	          0x4889c7	                            mov rdi, rax	      1542	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_9	CALL_9
0x4001cc1	      0xe800000000	                          call 0x4001cc6	      1542	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_9	CALL_9
0x4001cc6	    0x488b05000000	            mov rax, qword [0x04001ccd] 	      1543	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_9	CALL_10
0x4001ccd	          0x4889c7	                            mov rdi, rax	      1543	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_9	CALL_10
0x4001cd0	      0xe800000000	                          call 0x4001cd5	      1543	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_9	CALL_10
0x4001cd5	        0x480145b8	            add qword [rbp - 0x48], rax 	      1543	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	IF_9	CALL_10
0x4001cd9	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1546	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_11
0x4001cdd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1546	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_11
0x4001ce1	          0x4889d6	                            mov rsi, rdx	      1546	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_11
0x4001ce4	          0x4889c7	                            mov rdi, rax	      1546	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_11
0x4001ce7	      0xe800000000	                          call 0x4001cec	      1546	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7	CALL_11
0x4001cec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1547	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7
0x4001cf0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1547	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7
0x4001cf4	        0x48895008	                mov qword [rax + 8], rdx	      1547	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7
0x4001cf8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1548	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7
0x4001cfc	        0x488945a8	             mov qword [rbp - 0x58], rax	      1548	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_7
0x4001d00	    0x8b0500000000	            mov eax, dword [0x04001d06] 	      1551	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_10
0x4001d06	          0x83f807	                              cmp eax, 7	      1551	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_10
0x4001d09	            0x750f	                           jne 0x4001d1a	      1551	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_10
0x4001d0b	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	      1552	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_10
0x4001d15	      0xe9c3010000	                           jmp 0x4001edd	      1552	objcopy.c	ELSE_1	FUNCTION_27	FOR_1	IF_10
0x4001d1a	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1553	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d1d	          0x83e020	                           and eax, 0x20	      1553	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d20	            0x85c0	                           test eax, eax	      1553	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d22	            0x7528	                           jne 0x4001d4c	      1553	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d24	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1554	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d27	      0x2500010000	                          and eax, 0x100	      1554	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d2c	            0x85c0	                           test eax, eax	      1554	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d2e	            0x7435	                            je 0x4001d65	      1554	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d30	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1555	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d34	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1555	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d38	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      1555	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d3f	          0x488b00	                    mov rax, qword [rax]	      1555	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d42	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1555	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d45	          0x83e020	                           and eax, 0x20	      1556	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d48	            0x85c0	                           test eax, eax	      1555	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d4a	            0x7419	                            je 0x4001d65	      1555	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d4c	    0xc78574ffffff	               mov dword [rbp - 0x8c], 1	      1558	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d56	    0xc78578ffffff	               mov dword [rbp - 0x88], 1	      1559	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d60	      0xe978010000	                           jmp 0x4001edd	      1559	objcopy.c	FUNCTION_27	FOR_1	IF_11
0x4001d65	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      1561	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_2	IF_12
0x4001d69	            0x742f	                            je 0x4001d9a	      1561	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_2	IF_12
0x4001d6b	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1562	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_2	IF_12
0x4001d6e	      0x2582000000	                           and eax, 0x82	      1562	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_2	IF_12
0x4001d73	            0x85c0	                           test eax, eax	      1562	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_2	IF_12
0x4001d75	            0x7514	                           jne 0x4001d8b	      1562	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_2	IF_12
0x4001d77	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1563	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_2	IF_12
0x4001d7b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1563	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_2	IF_12
0x4001d7f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1563	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_2	IF_12
0x4001d82	      0x2500100000	                         and eax, 0x1000	      1563	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_2	IF_12
0x4001d87	            0x85c0	                           test eax, eax	      1563	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_2	IF_12
0x4001d89	            0x740f	                            je 0x4001d9a	      1563	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_2	IF_12
0x4001d8b	    0xc78574ffffff	               mov dword [rbp - 0x8c], 1	      1564	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_2	IF_12
0x4001d95	      0xe943010000	                           jmp 0x4001edd	      1564	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_2	IF_12
0x4001d9a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1565	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_3	IF_13	CALL_12
0x4001d9e	          0x4889c7	                            mov rdi, rax	      1565	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_3	IF_13	CALL_12
0x4001da1	      0xe800000000	                          call 0x4001da6	      1565	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_3	IF_13	CALL_12
0x4001da6	          0x83f849	                           cmp eax, 0x49	      1565	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_3	IF_13	CALL_12
0x4001da9	            0x750f	                           jne 0x4001dba	      1565	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_3	IF_13	CALL_12
0x4001dab	    0xc78574ffffff	               mov dword [rbp - 0x8c], 1	      1570	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_3	IF_13
0x4001db5	      0xe923010000	                           jmp 0x4001edd	      1570	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_3	IF_13
0x4001dba	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1571	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001dbd	          0x83e002	                              and eax, 2	      1571	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001dc0	            0x85c0	                           test eax, eax	      1571	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001dc2	            0x7526	                           jne 0x4001dea	      1571	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001dc4	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1572	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001dc7	      0x2580000000	                           and eax, 0x80	      1572	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001dcc	            0x85c0	                           test eax, eax	      1572	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001dce	            0x751a	                           jne 0x4001dea	      1572	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001dd0	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      1573	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001dd4	            0x7514	                           jne 0x4001dea	      1573	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001dd6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1574	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001dda	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1574	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001dde	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1574	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001de1	      0x2500100000	                         and eax, 0x1000	      1574	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001de6	            0x85c0	                           test eax, eax	      1574	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001de8	            0x741a	                            je 0x4001e04	      1574	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001dea	    0x8b0500000000	            mov eax, dword [0x04001df0] 	      1575	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001df0	          0x83f803	                              cmp eax, 3	      1575	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001df3	           0xf95c0	                                setne al	      1575	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001df6	           0xfb6c0	                           movzx eax, al	      1575	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001df9	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      1575	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001dff	      0xe9d9000000	                           jmp 0x4001edd	      1575	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_4	IF_14
0x4001e04	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1576	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e07	          0x83e004	                              and eax, 4	      1576	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e0a	            0x85c0	                           test eax, eax	      1576	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e0c	            0x7437	                            je 0x4001e45	      1576	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e0e	    0x8b0500000000	            mov eax, dword [0x04001e14] 	      1577	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e14	          0x83f802	                              cmp eax, 2	      1579	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e17	            0x741c	                            je 0x4001e35	      1579	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e19	    0x8b0500000000	            mov eax, dword [0x04001e1f] 	      1578	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e1f	          0x83f803	                              cmp eax, 3	      1578	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e22	            0x7411	                            je 0x4001e35	      1578	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e24	    0x8b0500000000	            mov eax, dword [0x04001e2a] 	      1579	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e2a	            0x85c0	                           test eax, eax	      1579	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e2c	            0x7507	                           jne 0x4001e35	      1579	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e2e	      0xb801000000	                              mov eax, 1	      1579	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e33	            0xeb05	                           jmp 0x4001e3a	      1579	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e35	      0xb800000000	                              mov eax, 0	      1579	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e3a	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      1577	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e40	      0xe998000000	                           jmp 0x4001edd	      1577	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_5	IF_15
0x4001e45	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1580	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16	CALL_13
0x4001e4c	        0x488b4008	                mov rax, qword [rax + 8]	      1580	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16	CALL_13
0x4001e50	          0x8b4008	                mov eax, dword [rax + 8]	      1580	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16	CALL_13
0x4001e53	          0x83f802	                              cmp eax, 2	      1580	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16	CALL_13
0x4001e56	            0x7538	                           jne 0x4001e90	      1580	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16	CALL_13
0x4001e58	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1580	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16	CALL_13
0x4001e5c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1580	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16	CALL_13
0x4001e60	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1580	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16	CALL_13
0x4001e67	          0x4885c0	                           test rax, rax	      1580	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16	CALL_13
0x4001e6a	            0x7424	                            je 0x4001e90	      1580	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16	CALL_13
0x4001e6c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1580	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16	CALL_13
0x4001e70	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1580	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16	CALL_13
0x4001e74	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1580	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16	CALL_13
0x4001e7b	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1580	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16	CALL_13
0x4001e7f	          0x4885c0	                           test rax, rax	      1580	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16	CALL_13
0x4001e82	            0x740c	                            je 0x4001e90	      1580	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16	CALL_13
0x4001e84	    0xc78574ffffff	               mov dword [rbp - 0x8c], 1	      1583	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16
0x4001e8e	            0xeb4d	                           jmp 0x4001edd	      1583	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_6	IF_16
0x4001e90	    0x8b0500000000	            mov eax, dword [0x04001e96] 	      1585	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_7
0x4001e96	          0x83f803	                              cmp eax, 3	      1586	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_7
0x4001e99	            0x7437	                            je 0x4001ed2	      1586	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_7
0x4001e9b	    0x8b0500000000	            mov eax, dword [0x04001ea1] 	      1586	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_7
0x4001ea1	          0x83f802	                              cmp eax, 2	      1586	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_7
0x4001ea4	            0x742c	                            je 0x4001ed2	      1586	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_7
0x4001ea6	    0x8b0500000000	            mov eax, dword [0x04001eac] 	      1587	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_7
0x4001eac	          0x83f801	                              cmp eax, 1	      1587	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_7
0x4001eaf	            0x751a	                           jne 0x4001ecb	      1587	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_7
0x4001eb1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1588	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	CALL_14
0x4001eb5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1588	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	CALL_14
0x4001ebc	          0x4889d6	                            mov rsi, rdx	      1588	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	CALL_14
0x4001ebf	          0x4889c7	                            mov rdi, rax	      1588	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	CALL_14
0x4001ec2	      0xe800000000	                          call 0x4001ec7	      1588	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	CALL_14
0x4001ec7	            0x85c0	                           test eax, eax	      1588	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	CALL_14
0x4001ec9	            0x7507	                           jne 0x4001ed2	      1588	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	CALL_14
0x4001ecb	      0xb801000000	                              mov eax, 1	      1586	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_7
0x4001ed0	            0xeb05	                           jmp 0x4001ed7	      1586	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_7
0x4001ed2	      0xb800000000	                              mov eax, 0	      1586	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_7
0x4001ed7	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      1585	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	ELSE_7
0x4001edd	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      1590	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	CALL_15
0x4001ee4	            0x745a	                            je 0x4001f40	      1590	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	CALL_15
0x4001ee6	    0x488b15000000	            mov rdx, qword [0x04001eed] 	      1590	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	CALL_15
0x4001eed	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1590	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	CALL_15
0x4001ef1	          0x4889d6	                            mov rsi, rdx	      1590	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	CALL_15
0x4001ef4	          0x4889c7	                            mov rdi, rax	      1590	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	CALL_15
0x4001ef7	      0xe867f2ffff	            call sym.is_specified_symbol	      1590	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	CALL_15
0x4001efc	            0x85c0	                           test eax, eax	      1590	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	CALL_15
0x4001efe	            0x7440	                            je 0x4001f40	      1590	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	CALL_15
0x4001f00	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      1594	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	IF_18
0x4001f07	            0x742d	                            je 0x4001f36	      1594	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	IF_18
0x4001f09	      0xbf00000000	                              mov edi, 0	      1596	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	IF_18	CALL_17
0x4001f0e	      0xe800000000	                          call 0x4001f13	      1596	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	IF_18	CALL_17
0x4001f13	          0x4889c2	                            mov rdx, rax	      1596	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	IF_18	CALL_17
0x4001f16	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1596	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	IF_18	CALL_17
0x4001f1a	          0x4889c6	                            mov rsi, rax	      1596	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	IF_18	CALL_17
0x4001f1d	          0x4889d7	                            mov rdi, rdx	      1596	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	IF_18	CALL_17
0x4001f20	      0xb800000000	                              mov eax, 0	      1596	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	IF_18	CALL_17
0x4001f25	      0xe800000000	                          call 0x4001f2a	      1596	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	IF_18	CALL_17
0x4001f2a	    0xc70500000000	               mov dword [0x04001f34], 1	      1597	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	IF_18
0x4001f34	            0xeb0a	                           jmp 0x4001f40	      1597	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	IF_18
0x4001f36	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	      1600	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_17	ELSE_8
0x4001f40	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      1603	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_19
0x4001f47	            0x742e	                            je 0x4001f77	      1603	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_19
0x4001f49	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1604	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_19
0x4001f4c	          0x83e020	                           and eax, 0x20	      1604	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_19
0x4001f4f	            0x85c0	                           test eax, eax	      1604	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_19
0x4001f51	            0x7524	                           jne 0x4001f77	      1604	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_19
0x4001f53	    0x488b15000000	            mov rdx, qword [0x04001f5a] 	      1605	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_19	CALL_18
0x4001f5a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1605	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_19	CALL_18
0x4001f5e	          0x4889d6	                            mov rsi, rdx	      1605	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_19	CALL_18
0x4001f61	          0x4889c7	                            mov rdi, rax	      1605	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_19	CALL_18
0x4001f64	      0xe8faf1ffff	            call sym.is_specified_symbol	      1605	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_19	CALL_18
0x4001f69	            0x85c0	                           test eax, eax	      1605	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_19	CALL_18
0x4001f6b	            0x740a	                            je 0x4001f77	      1605	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_19	CALL_18
0x4001f6d	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	      1606	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_19
0x4001f77	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      1608	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_20
0x4001f7e	            0x753a	                           jne 0x4001fba	      1608	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_20
0x4001f80	    0x8b0500000000	            mov eax, dword [0x04001f86] 	      1609	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_20
0x4001f86	            0x85c0	                           test eax, eax	      1609	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_20
0x4001f88	            0x740c	                            je 0x4001f96	      1609	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_20
0x4001f8a	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1609	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_20
0x4001f8d	      0x2500400000	                         and eax, 0x4000	      1609	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_20
0x4001f92	            0x85c0	                           test eax, eax	      1609	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_20
0x4001f94	            0x751a	                           jne 0x4001fb0	      1609	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_20
0x4001f96	    0x488b15000000	            mov rdx, qword [0x04001f9d] 	      1610	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_20	CALL_19
0x4001f9d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1610	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_20	CALL_19
0x4001fa1	          0x4889d6	                            mov rsi, rdx	      1610	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_20	CALL_19
0x4001fa4	          0x4889c7	                            mov rdi, rax	      1610	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_20	CALL_19
0x4001fa7	      0xe8b7f1ffff	            call sym.is_specified_symbol	      1610	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_20	CALL_19
0x4001fac	            0x85c0	                           test eax, eax	      1610	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_20	CALL_19
0x4001fae	            0x740a	                            je 0x4001fba	      1610	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_20	CALL_19
0x4001fb0	    0xc78574ffffff	               mov dword [rbp - 0x8c], 1	      1611	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_20
0x4001fba	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      1613	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_21	CALL_20
0x4001fc1	            0x7428	                            je 0x4001feb	      1613	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_21	CALL_20
0x4001fc3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1613	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_21	CALL_20
0x4001fc7	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1613	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_21	CALL_20
0x4001fcb	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1613	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_21	CALL_20
0x4001fd2	          0x4889d6	                            mov rsi, rdx	      1613	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_21	CALL_20
0x4001fd5	          0x4889c7	                            mov rdi, rax	      1613	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_21	CALL_20
0x4001fd8	      0xe80cf6ffff	               call sym.is_strip_section	      1613	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_21	CALL_20
0x4001fdd	            0x85c0	                           test eax, eax	      1613	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_21	CALL_20
0x4001fdf	            0x740a	                            je 0x4001feb	      1613	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_21	CALL_20
0x4001fe1	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	      1614	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_21
0x4001feb	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      1616	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22
0x4001ff2	     0xf8466010000	                            je 0x400215e	      1616	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22
0x4001ff8	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1618	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23
0x4001ffb	          0x83e002	                              and eax, 2	      1618	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23
0x4001ffe	            0x85c0	                           test eax, eax	      1618	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23
0x4002000	            0x7449	                            je 0x400204b	      1618	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23
0x4002002	    0x8b0500000000	            mov eax, dword [0x04002008] 	      1619	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23	CALL_21
0x4002008	            0x85c0	                           test eax, eax	      1619	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23	CALL_21
0x400200a	            0x751a	                           jne 0x4002026	      1619	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23	CALL_21
0x400200c	    0x488b15000000	            mov rdx, qword [0x04002013] 	      1619	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23	CALL_21
0x4002013	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1619	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23	CALL_21
0x4002017	          0x4889d6	                            mov rsi, rdx	      1619	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23	CALL_21
0x400201a	          0x4889c7	                            mov rdi, rax	      1619	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23	CALL_21
0x400201d	      0xe841f1ffff	            call sym.is_specified_symbol	      1619	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23	CALL_21
0x4002022	            0x85c0	                           test eax, eax	      1619	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23	CALL_21
0x4002024	            0x7425	                            je 0x400204b	      1619	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23	CALL_21
0x4002026	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1621	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23
0x400202a	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1621	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23
0x400202d	          0x83e0fd	                     and eax, 0xfffffffd	      1621	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23
0x4002030	            0x89c2	                            mov edx, eax	      1621	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23
0x4002032	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1621	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23
0x4002036	          0x895018	             mov dword [rax + 0x18], edx	      1621	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23
0x4002039	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1622	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23
0x400203d	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1622	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23
0x4002040	             0xc80	                             or al, 0x80	      1622	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23
0x4002042	            0x89c2	                            mov edx, eax	      1622	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23
0x4002044	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1622	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23
0x4002048	          0x895018	             mov dword [rax + 0x18], edx	      1622	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_23
0x400204b	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      1625	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x400204f	     0xf8597000000	                           jne 0x40020ec	      1625	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x4002055	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1626	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x4002058	      0x2582000000	                           and eax, 0x82	      1626	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x400205d	            0x85c0	                           test eax, eax	      1626	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x400205f	     0xf8487000000	                            je 0x40020ec	      1626	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x4002065	    0x488b15000000	            mov rdx, qword [0x0400206c] 	      1627	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_22
0x400206c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1627	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_22
0x4002070	          0x4889d6	                            mov rsi, rdx	      1627	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_22
0x4002073	          0x4889c7	                            mov rdi, rax	      1627	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_22
0x4002076	      0xe8e8f0ffff	            call sym.is_specified_symbol	      1627	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_22
0x400207b	            0x85c0	                           test eax, eax	      1627	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_22
0x400207d	            0x7548	                           jne 0x40020c7	      1627	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_22
0x400207f	    0x488b05000000	            mov rax, qword [0x04002086] 	      1628	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_23
0x4002086	          0x4889c7	                            mov rdi, rax	      1628	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_23
0x4002089	      0xe800000000	                          call 0x400208e	      1628	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_23
0x400208e	          0x4885c0	                           test rax, rax	      1628	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_23
0x4002091	            0x741a	                            je 0x40020ad	      1628	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_23
0x4002093	    0x488b15000000	            mov rdx, qword [0x0400209a] 	      1629	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_24
0x400209a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1629	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_24
0x400209e	          0x4889d6	                            mov rsi, rdx	      1629	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_24
0x40020a1	          0x4889c7	                            mov rdi, rax	      1629	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_24
0x40020a4	      0xe8baf0ffff	            call sym.is_specified_symbol	      1629	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_24
0x40020a9	            0x85c0	                           test eax, eax	      1629	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_24
0x40020ab	            0x741a	                            je 0x40020c7	      1629	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_24
0x40020ad	    0x8b0500000000	            mov eax, dword [0x040020b3] 	      1630	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_25
0x40020b3	            0x85c0	                           test eax, eax	      1630	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_25
0x40020b5	            0x7435	                            je 0x40020ec	      1630	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_25
0x40020b7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1630	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_25
0x40020bb	          0x4889c7	                            mov rdi, rax	      1630	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_25
0x40020be	      0xe8c2f6ffff	               call sym.is_hidden_symbol	      1630	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_25
0x40020c3	            0x85c0	                           test eax, eax	      1630	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_25
0x40020c5	            0x7425	                            je 0x40020ec	      1630	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24	CALL_25
0x40020c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1632	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x40020cb	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1632	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x40020ce	            0x247d	                            and al, 0x7d	      1632	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x40020d0	            0x89c2	                            mov edx, eax	      1632	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x40020d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1632	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x40020d6	          0x895018	             mov dword [rax + 0x18], edx	      1632	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x40020d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1633	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x40020dd	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1633	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x40020e0	          0x83c801	                               or eax, 1	      1633	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x40020e3	            0x89c2	                            mov edx, eax	      1633	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x40020e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1633	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x40020e9	          0x895018	             mov dword [rax + 0x18], edx	      1633	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_24
0x40020ec	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      1636	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x40020f0	            0x754a	                           jne 0x400213c	      1636	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x40020f2	          0x8b4588	             mov eax, dword [rbp - 0x78]	      1637	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x40020f5	          0x83e001	                              and eax, 1	      1637	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x40020f8	            0x85c0	                           test eax, eax	      1637	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x40020fa	            0x7440	                            je 0x400213c	      1637	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x40020fc	    0x488b15000000	            mov rdx, qword [0x04002103] 	      1638	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25	CALL_26
0x4002103	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1638	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25	CALL_26
0x4002107	          0x4889d6	                            mov rsi, rdx	      1638	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25	CALL_26
0x400210a	          0x4889c7	                            mov rdi, rax	      1638	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25	CALL_26
0x400210d	      0xe851f0ffff	            call sym.is_specified_symbol	      1638	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25	CALL_26
0x4002112	            0x85c0	                           test eax, eax	      1638	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25	CALL_26
0x4002114	            0x7426	                            je 0x400213c	      1638	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25	CALL_26
0x4002116	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1640	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x400211a	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1640	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x400211d	          0x83e0fe	                     and eax, 0xfffffffe	      1640	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x4002120	            0x89c2	                            mov edx, eax	      1640	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x4002122	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1640	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x4002126	          0x895018	             mov dword [rax + 0x18], edx	      1640	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x4002129	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1641	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x400212d	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1641	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x4002130	          0x83c802	                               or eax, 2	      1641	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x4002133	            0x89c2	                            mov edx, eax	      1641	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x4002135	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1641	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x4002139	          0x895018	             mov dword [rax + 0x18], edx	      1641	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22	IF_25
0x400213c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1644	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22
0x4002140	        0x488d5001	                      lea rdx, [rax + 1]	      1644	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22
0x4002144	        0x488955a0	             mov qword [rbp - 0x60], rdx	      1644	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22
0x4002148	    0x488d14c50000	                        lea rdx, [rax*8]	      1644	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22
0x4002150	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1644	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22
0x4002154	          0x4801c2	                            add rdx, rax	      1644	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22
0x4002157	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1644	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22
0x400215b	          0x488902	                    mov qword [rdx], rax	      1644	objcopy.c	FUNCTION_27	FOR_1	ELSE_1	IF_22
0x400215e	      0x4883459801	               add qword [rbp - 0x68], 1	      1468	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4002163	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1468	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4002167	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	      1468	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x400216e	     0xf8c80f8ffff	                            jl 0x40019f4	      1468	objcopy.c	ELSE_1	FUNCTION_27	FOR_1
0x4002174	    0x488b05000000	            mov rax, qword [0x0400217b] 	      1647	objcopy.c	FUNCTION_27	ELSE_1	IF_26
0x400217b	          0x4885c0	                           test rax, rax	      1647	objcopy.c	FUNCTION_27	ELSE_1	IF_26
0x400217e	     0xf84ad000000	                            je 0x4002231	      1647	objcopy.c	FUNCTION_27	ELSE_1	IF_26
0x4002184	    0x488b05000000	            mov rax, qword [0x0400218b] 	      1649	objcopy.c	FUNCTION_27	ELSE_1	IF_26
0x400218b	        0x488945c0	             mov qword [rbp - 0x40], rax	      1649	objcopy.c	FUNCTION_27	ELSE_1	IF_26
0x400218f	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1651	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2
0x4002197	      0xe983000000	                           jmp 0x400221f	      1651	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2
0x400219c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1653	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	IF_27
0x40021a0	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1653	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	IF_27
0x40021a4	          0x4885c0	                           test rax, rax	      1653	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	IF_27
0x40021a7	            0x7431	                            je 0x40021da	      1653	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	IF_27
0x40021a9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1655	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	IF_27	IF_28	CALL_27
0x40021ad	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1655	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	IF_27	IF_28	CALL_27
0x40021b1	           0xfb600	                   movzx eax, byte [rax]	      1655	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	IF_27	IF_28	CALL_27
0x40021b4	            0x84c0	                             test al, al	      1655	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	IF_27	IF_28	CALL_27
0x40021b6	            0x7457	                            je 0x400220f	      1655	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	IF_27	IF_28	CALL_27
0x40021b8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1656	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	IF_27	CALL_29
0x40021bc	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1656	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	IF_27	CALL_29
0x40021c0	      0xbf00000000	                              mov edi, 0	      1656	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	IF_27	CALL_29
0x40021c5	      0xe800000000	                          call 0x40021ca	      1656	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	IF_27	CALL_29
0x40021ca	          0x4889de	                            mov rsi, rbx	      1656	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	IF_27	CALL_29
0x40021cd	          0x4889c7	                            mov rdi, rax	      1656	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	IF_27	CALL_29
0x40021d0	      0xb800000000	                              mov eax, 0	      1656	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	IF_27	CALL_29
0x40021d5	      0xe800000000	                          call 0x40021da	      1656	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	IF_27	CALL_29
0x40021da	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1659	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	CALL_30
0x40021de	        0x488d5001	                      lea rdx, [rax + 1]	      1659	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	CALL_30
0x40021e2	        0x488955a0	             mov qword [rbp - 0x60], rdx	      1659	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	CALL_30
0x40021e6	    0x488d14c50000	                        lea rdx, [rax*8]	      1659	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	CALL_30
0x40021ee	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1659	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	CALL_30
0x40021f2	        0x488d1c02	                    lea rbx, [rdx + rax]	      1659	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	CALL_30
0x40021f6	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      1659	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	CALL_30
0x40021fd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1659	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	CALL_30
0x4002201	          0x4889d6	                            mov rsi, rdx	      1659	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	CALL_30
0x4002204	          0x4889c7	                            mov rdi, rax	      1659	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	CALL_30
0x4002207	      0xe88bf6ffff	              call sym.create_new_symbol	      1659	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	CALL_30
0x400220c	          0x488903	                    mov qword [rbx], rax	      1659	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2	CALL_30
0x400220f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1661	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2
0x4002213	          0x488b00	                    mov rax, qword [rax]	      1661	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2
0x4002216	        0x488945c0	             mov qword [rbp - 0x40], rax	      1661	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2
0x400221a	      0x4883459801	               add qword [rbp - 0x68], 1	      1651	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2
0x400221f	    0x8b0500000000	            mov eax, dword [0x04002225] 	      1651	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2
0x4002225	            0x4898	                                    cdqe	      1651	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2
0x4002227	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      1651	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2
0x400222b	     0xf8f6bffffff	                            jg 0x400219c	      1651	objcopy.c	FUNCTION_27	ELSE_1	IF_26	FOR_2
0x4002231	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1665	objcopy.c	FUNCTION_27	ELSE_1
0x4002235	    0x488d14c50000	                        lea rdx, [rax*8]	      1665	objcopy.c	FUNCTION_27	ELSE_1
0x400223d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1665	objcopy.c	FUNCTION_27	ELSE_1
0x4002241	          0x4801d0	                            add rax, rdx	      1665	objcopy.c	FUNCTION_27	ELSE_1
0x4002244	    0x48c700000000	                      mov qword [rax], 0	      1665	objcopy.c	FUNCTION_27	ELSE_1
0x400224b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1667	objcopy.c	FUNCTION_27	ELSE_1
0x400224f	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1668	objcopy.c	FUNCTION_27	ELSE_1
0x4002253	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1668	objcopy.c	FUNCTION_27	ELSE_1
0x400225c	            0x7405	                            je 0x4002263	      1668	objcopy.c	FUNCTION_27	ELSE_1
0x400225e	      0xe800000000	                          call 0x4002263	      1668	objcopy.c	FUNCTION_27	ELSE_1
0x4002263	    0x4881c4b80000	                           add rsp, 0xb8	      1668	objcopy.c	FUNCTION_27	ELSE_1
0x400226a	              0x5b	                                 pop rbx	      1668	objcopy.c	FUNCTION_27	ELSE_1
0x400226b	              0x5d	                                 pop rbp	      1668	objcopy.c	FUNCTION_27	ELSE_1
0x400226c	              0xc3	                                     ret	      1668	objcopy.c	FUNCTION_27	ELSE_1
discard_relocations	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1	16
0x40074ff	              0x55	                                push rbp	      3889	objcopy.c	FUNCTION_48
0x4007500	          0x4889e5	                            mov rbp, rsp	      3889	objcopy.c	FUNCTION_48
0x4007503	        0x4883ec10	                           sub rsp, 0x10	      3889	objcopy.c	FUNCTION_48
0x4007507	        0x48897df8	                mov qword [rbp - 8], rdi	      3889	objcopy.c	FUNCTION_48
0x400750b	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3889	objcopy.c	FUNCTION_48
0x400750f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3890	objcopy.c	FUNCTION_48	CALL_1
0x4007513	          0x488b00	                    mov rax, qword [rax]	      3890	objcopy.c	FUNCTION_48	CALL_1
0x4007516	      0xba80000000	                           mov edx, 0x80	      3890	objcopy.c	FUNCTION_48	CALL_1
0x400751b	      0xbe00000000	                              mov esi, 0	      3890	objcopy.c	FUNCTION_48	CALL_1
0x4007520	          0x4889c7	                            mov rdi, rax	      3890	objcopy.c	FUNCTION_48	CALL_1
0x4007523	      0xe84194ffff	              call sym.find_section_list	      3890	objcopy.c	FUNCTION_48	CALL_1
0x4007528	          0x4885c0	                           test rax, rax	      3891	objcopy.c	FUNCTION_48
0x400752b	           0xf95c0	                                setne al	      3891	objcopy.c	FUNCTION_48
0x400752e	           0xfb6c0	                           movzx eax, al	      3890	objcopy.c	FUNCTION_48	CALL_1
0x4007531	              0xc9	                                   leave	      3892	objcopy.c	FUNCTION_48
0x4007532	              0xc3	                                     ret	      3892	objcopy.c	FUNCTION_48
add_redefine_syms_file	IF,15:FOR,0:ELSE,1:DO,0:SWITCH,0:functions,0:WHILE,6:CALL,23	280
0x40023df	              0x55	                                push rbp	      1716	objcopy.c	FUNCTION_30
0x40023e0	          0x4889e5	                            mov rbp, rsp	      1716	objcopy.c	FUNCTION_30
0x40023e3	              0x53	                                push rbx	      1716	objcopy.c	FUNCTION_30
0x40023e4	        0x4883ec48	                           sub rsp, 0x48	      1716	objcopy.c	FUNCTION_30
0x40023e8	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1716	objcopy.c	FUNCTION_30
0x40023ec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1724	objcopy.c	FUNCTION_30	CALL_1
0x40023f0	      0xbe00000000	                              mov esi, 0	      1724	objcopy.c	FUNCTION_30	CALL_1
0x40023f5	          0x4889c7	                            mov rdi, rax	      1724	objcopy.c	FUNCTION_30	CALL_1
0x40023f8	      0xe800000000	                          call 0x40023fd	      1724	objcopy.c	FUNCTION_30	CALL_1
0x40023fd	        0x488945e8	             mov qword [rbp - 0x18], rax	      1724	objcopy.c	FUNCTION_30	CALL_1
0x4002401	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1725	objcopy.c	FUNCTION_30	IF_1
0x4002406	            0x7535	                           jne 0x400243d	      1725	objcopy.c	FUNCTION_30	IF_1
0x4002408	      0xe800000000	                          call 0x400240d	      1727	objcopy.c	FUNCTION_30	CALL_4
0x400240d	            0x8b00	                    mov eax, dword [rax]	      1726	objcopy.c	FUNCTION_30	IF_1	CALL_3
0x400240f	            0x89c7	                            mov edi, eax	      1726	objcopy.c	FUNCTION_30	IF_1	CALL_3
0x4002411	      0xe800000000	                          call 0x4002416	      1726	objcopy.c	FUNCTION_30	IF_1	CALL_3
0x4002416	          0x4889c3	                            mov rbx, rax	      1726	objcopy.c	FUNCTION_30	IF_1	CALL_3
0x4002419	      0xbf00000000	                              mov edi, 0	      1726	objcopy.c	FUNCTION_30	IF_1	CALL_3
0x400241e	      0xe800000000	                          call 0x4002423	      1726	objcopy.c	FUNCTION_30	IF_1	CALL_3
0x4002423	          0x4889c1	                            mov rcx, rax	      1726	objcopy.c	FUNCTION_30	IF_1	CALL_3
0x4002426	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1726	objcopy.c	FUNCTION_30	IF_1	CALL_3
0x400242a	          0x4889da	                            mov rdx, rbx	      1726	objcopy.c	FUNCTION_30	IF_1	CALL_3
0x400242d	          0x4889c6	                            mov rsi, rax	      1726	objcopy.c	FUNCTION_30	IF_1	CALL_3
0x4002430	          0x4889cf	                            mov rdi, rcx	      1726	objcopy.c	FUNCTION_30	IF_1	CALL_3
0x4002433	      0xb800000000	                              mov eax, 0	      1726	objcopy.c	FUNCTION_30	IF_1	CALL_3
0x4002438	      0xe800000000	                          call 0x400243d	      1726	objcopy.c	FUNCTION_30	IF_1	CALL_3
0x400243d	    0x48c745d06400	           mov qword [rbp - 0x30], 0x64 	      1729	objcopy.c	FUNCTION_30
0x4002445	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1730	objcopy.c	FUNCTION_30	CALL_5
0x4002449	        0x4883c001	                              add rax, 1	      1730	objcopy.c	FUNCTION_30	CALL_5
0x400244d	          0x4889c7	                            mov rdi, rax	      1730	objcopy.c	FUNCTION_30	CALL_5
0x4002450	      0xe800000000	                          call 0x4002455	      1730	objcopy.c	FUNCTION_30	CALL_5
0x4002455	        0x488945c8	             mov qword [rbp - 0x38], rax	      1730	objcopy.c	FUNCTION_30	CALL_5
0x4002459	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      1732	objcopy.c	FUNCTION_30
0x4002460	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1733	objcopy.c	FUNCTION_30	CALL_6
0x4002464	          0x4889c7	                            mov rdi, rax	      1733	objcopy.c	FUNCTION_30	CALL_6
0x4002467	      0xe800000000	                          call 0x400246c	      1733	objcopy.c	FUNCTION_30	CALL_6
0x400246c	          0x8945c0	             mov dword [rbp - 0x40], eax	      1733	objcopy.c	FUNCTION_30	CALL_6
0x400246f	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1734	objcopy.c	FUNCTION_30
0x4002477	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1735	objcopy.c	FUNCTION_30
0x400247f	      0xe9fc020000	                           jmp 0x4002780	      1736	objcopy.c	FUNCTION_30	WHILE_1
0x4002484	        0x837dc023	           cmp dword [rbp - 0x40], 0x23 	      1741	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	IF_2
0x4002488	     0xf8473020000	                            je 0x4002701	      1741	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	IF_2
0x400248e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1743	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x4002492	        0x488d5001	                      lea rdx, [rax + 1]	      1743	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x4002496	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1743	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x400249a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1743	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x400249e	          0x4801d0	                            add rax, rdx	      1743	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x40024a1	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      1743	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x40024a4	            0x8810	                      mov byte [rax], dl	      1743	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x40024a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1744	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	IF_3
0x40024aa	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1744	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	IF_3
0x40024ae	            0x721f	                            jb 0x40024cf	      1744	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	IF_3
0x40024b0	        0x48d165d0	               shl qword [rbp - 0x30], 1	      1746	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	IF_3
0x40024b4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1747	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	IF_3	CALL_7
0x40024b8	        0x488d5001	                      lea rdx, [rax + 1]	      1747	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	IF_3	CALL_7
0x40024bc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1747	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	IF_3	CALL_7
0x40024c0	          0x4889d6	                            mov rsi, rdx	      1747	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	IF_3	CALL_7
0x40024c3	          0x4889c7	                            mov rdi, rax	      1747	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	IF_3	CALL_7
0x40024c6	      0xe800000000	                          call 0x40024cb	      1747	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	IF_3	CALL_7
0x40024cb	        0x488945c8	             mov qword [rbp - 0x38], rax	      1747	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	IF_3	CALL_7
0x40024cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1749	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	CALL_8
0x40024d3	          0x4889c7	                            mov rdi, rax	      1749	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	CALL_8
0x40024d6	      0xe800000000	                          call 0x40024db	      1749	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	CALL_8
0x40024db	          0x8945c0	             mov dword [rbp - 0x40], eax	      1749	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	CALL_8
0x40024de	        0x837dc020	           cmp dword [rbp - 0x40], 0x20 	      1739	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x40024e2	            0x741e	                            je 0x4002502	      1739	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x40024e4	        0x837dc009	               cmp dword [rbp - 0x40], 9	      1739	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x40024e8	            0x7418	                            je 0x4002502	      1739	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x40024ea	        0x837dc00a	            cmp dword [rbp - 0x40], 0xa 	      1739	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x40024ee	            0x7412	                            je 0x4002502	      1739	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x40024f0	        0x837dc00d	            cmp dword [rbp - 0x40], 0xd 	      1739	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x40024f4	            0x740c	                            je 0x4002502	      1739	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x40024f6	        0x837dc000	               cmp dword [rbp - 0x40], 0	      1739	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x40024fa	            0x7406	                            je 0x4002502	      1739	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x40024fc	        0x837dc0ff	cmp dword [rbp - 0x40], 0xffffffffffffffff	      1739	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x4002500	            0x7582	                           jne 0x4002484	      1739	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2
0x4002502	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1751	objcopy.c	FUNCTION_30	WHILE_1
0x4002506	        0x488d5001	                      lea rdx, [rax + 1]	      1751	objcopy.c	FUNCTION_30	WHILE_1
0x400250a	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1751	objcopy.c	FUNCTION_30	WHILE_1
0x400250e	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1751	objcopy.c	FUNCTION_30	WHILE_1
0x4002512	          0x4801d0	                            add rax, rdx	      1751	objcopy.c	FUNCTION_30	WHILE_1
0x4002515	          0xc60000	                       mov byte [rax], 0	      1751	objcopy.c	FUNCTION_30	WHILE_1
0x4002518	        0x837dc0ff	cmp dword [rbp - 0x40], 0xffffffffffffffff	      1752	objcopy.c	FUNCTION_30	WHILE_1	IF_4
0x400251c	     0xf846a020000	                            je 0x400278c	      1752	objcopy.c	FUNCTION_30	WHILE_1	IF_4
0x4002522	            0xeb0f	                           jmp 0x4002533	      1756	objcopy.c	FUNCTION_30	WHILE_1	WHILE_3
0x4002524	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1757	objcopy.c	FUNCTION_30	WHILE_1	CALL_9
0x4002528	          0x4889c7	                            mov rdi, rax	      1757	objcopy.c	FUNCTION_30	WHILE_1	CALL_9
0x400252b	      0xe800000000	                          call 0x4002530	      1757	objcopy.c	FUNCTION_30	WHILE_1	CALL_9
0x4002530	          0x8945c0	             mov dword [rbp - 0x40], eax	      1757	objcopy.c	FUNCTION_30	WHILE_1	CALL_9
0x4002533	        0x837dc020	           cmp dword [rbp - 0x40], 0x20 	      1756	objcopy.c	FUNCTION_30	WHILE_1	WHILE_3
0x4002537	            0x74eb	                            je 0x4002524	      1756	objcopy.c	FUNCTION_30	WHILE_1	WHILE_3
0x4002539	        0x837dc009	               cmp dword [rbp - 0x40], 9	      1756	objcopy.c	FUNCTION_30	WHILE_1	WHILE_3
0x400253d	            0x74e5	                            je 0x4002524	      1756	objcopy.c	FUNCTION_30	WHILE_1	WHILE_3
0x400253f	        0x837dc023	           cmp dword [rbp - 0x40], 0x23 	      1758	objcopy.c	FUNCTION_30	WHILE_1	IF_5
0x4002543	     0xf84bf010000	                            je 0x4002708	      1758	objcopy.c	FUNCTION_30	WHILE_1	IF_5
0x4002549	        0x837dc00a	            cmp dword [rbp - 0x40], 0xa 	      1758	objcopy.c	FUNCTION_30	WHILE_1	IF_5
0x400254d	     0xf84b5010000	                            je 0x4002708	      1758	objcopy.c	FUNCTION_30	WHILE_1	IF_5
0x4002553	        0x837dc00d	            cmp dword [rbp - 0x40], 0xd 	      1758	objcopy.c	FUNCTION_30	WHILE_1	IF_5
0x4002557	     0xf84ab010000	                            je 0x4002708	      1758	objcopy.c	FUNCTION_30	WHILE_1	IF_5
0x400255d	        0x837dc000	               cmp dword [rbp - 0x40], 0	      1758	objcopy.c	FUNCTION_30	WHILE_1	IF_5
0x4002561	     0xf84a1010000	                            je 0x4002708	      1758	objcopy.c	FUNCTION_30	WHILE_1	IF_5
0x4002567	        0x837dc0ff	cmp dword [rbp - 0x40], 0xffffffffffffffff	      1760	objcopy.c	FUNCTION_30	WHILE_1	IF_6
0x400256b	     0xf841e020000	                            je 0x400278f	      1760	objcopy.c	FUNCTION_30	WHILE_1	IF_6
0x4002571	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1764	objcopy.c	FUNCTION_30	WHILE_1
0x4002575	        0x488945e0	             mov qword [rbp - 0x20], rax	      1764	objcopy.c	FUNCTION_30	WHILE_1
0x4002579	            0xeb5a	                           jmp 0x40025d5	      1765	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x400257b	        0x837dc023	           cmp dword [rbp - 0x40], 0x23 	      1767	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	IF_7
0x400257f	     0xf847f010000	                            je 0x4002704	      1767	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	IF_7
0x4002585	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1769	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x4002589	        0x488d5001	                      lea rdx, [rax + 1]	      1769	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x400258d	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1769	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x4002591	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1769	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x4002595	          0x4801d0	                            add rax, rdx	      1769	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x4002598	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      1769	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x400259b	            0x8810	                      mov byte [rax], dl	      1769	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x400259d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1770	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	IF_8
0x40025a1	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1770	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	IF_8
0x40025a5	            0x721f	                            jb 0x40025c6	      1770	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	IF_8
0x40025a7	        0x48d165d0	               shl qword [rbp - 0x30], 1	      1772	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	IF_8
0x40025ab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1773	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	IF_8	CALL_10
0x40025af	        0x488d5001	                      lea rdx, [rax + 1]	      1773	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	IF_8	CALL_10
0x40025b3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1773	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	IF_8	CALL_10
0x40025b7	          0x4889d6	                            mov rsi, rdx	      1773	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	IF_8	CALL_10
0x40025ba	          0x4889c7	                            mov rdi, rax	      1773	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	IF_8	CALL_10
0x40025bd	      0xe800000000	                          call 0x40025c2	      1773	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	IF_8	CALL_10
0x40025c2	        0x488945c8	             mov qword [rbp - 0x38], rax	      1773	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	IF_8	CALL_10
0x40025c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1775	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	CALL_11
0x40025ca	          0x4889c7	                            mov rdi, rax	      1775	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	CALL_11
0x40025cd	      0xe800000000	                          call 0x40025d2	      1775	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	CALL_11
0x40025d2	          0x8945c0	             mov dword [rbp - 0x40], eax	      1775	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	CALL_11
0x40025d5	        0x837dc020	           cmp dword [rbp - 0x40], 0x20 	      1765	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x40025d9	            0x741e	                            je 0x40025f9	      1765	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x40025db	        0x837dc009	               cmp dword [rbp - 0x40], 9	      1765	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x40025df	            0x7418	                            je 0x40025f9	      1765	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x40025e1	        0x837dc00a	            cmp dword [rbp - 0x40], 0xa 	      1765	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x40025e5	            0x7412	                            je 0x40025f9	      1765	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x40025e7	        0x837dc00d	            cmp dword [rbp - 0x40], 0xd 	      1765	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x40025eb	            0x740c	                            je 0x40025f9	      1765	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x40025ed	        0x837dc000	               cmp dword [rbp - 0x40], 0	      1765	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x40025f1	            0x7406	                            je 0x40025f9	      1765	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x40025f3	        0x837dc0ff	cmp dword [rbp - 0x40], 0xffffffffffffffff	      1765	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x40025f7	            0x7582	                           jne 0x400257b	      1765	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4
0x40025f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1777	objcopy.c	FUNCTION_30	WHILE_1
0x40025fd	        0x488d5001	                      lea rdx, [rax + 1]	      1777	objcopy.c	FUNCTION_30	WHILE_1
0x4002601	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1777	objcopy.c	FUNCTION_30	WHILE_1
0x4002605	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1777	objcopy.c	FUNCTION_30	WHILE_1
0x4002609	          0x4801d0	                            add rax, rdx	      1777	objcopy.c	FUNCTION_30	WHILE_1
0x400260c	          0xc60000	                       mov byte [rax], 0	      1777	objcopy.c	FUNCTION_30	WHILE_1
0x400260f	        0x837dc0ff	cmp dword [rbp - 0x40], 0xffffffffffffffff	      1778	objcopy.c	FUNCTION_30	WHILE_1	IF_9
0x4002613	     0xf8479010000	                            je 0x4002792	      1778	objcopy.c	FUNCTION_30	WHILE_1	IF_9
0x4002619	            0xeb0f	                           jmp 0x400262a	      1782	objcopy.c	FUNCTION_30	WHILE_1	WHILE_5
0x400261b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1783	objcopy.c	FUNCTION_30	WHILE_1	CALL_12
0x400261f	          0x4889c7	                            mov rdi, rax	      1783	objcopy.c	FUNCTION_30	WHILE_1	CALL_12
0x4002622	      0xe800000000	                          call 0x4002627	      1783	objcopy.c	FUNCTION_30	WHILE_1	CALL_12
0x4002627	          0x8945c0	             mov dword [rbp - 0x40], eax	      1783	objcopy.c	FUNCTION_30	WHILE_1	CALL_12
0x400262a	        0x837dc00a	            cmp dword [rbp - 0x40], 0xa 	      1782	objcopy.c	FUNCTION_30	WHILE_1	WHILE_5
0x400262e	            0x741e	                            je 0x400264e	      1782	objcopy.c	FUNCTION_30	WHILE_1	WHILE_5
0x4002630	        0x837dc00d	            cmp dword [rbp - 0x40], 0xd 	      1782	objcopy.c	FUNCTION_30	WHILE_1	WHILE_5
0x4002634	            0x7418	                            je 0x400264e	      1782	objcopy.c	FUNCTION_30	WHILE_1	WHILE_5
0x4002636	        0x837dc000	               cmp dword [rbp - 0x40], 0	      1782	objcopy.c	FUNCTION_30	WHILE_1	WHILE_5
0x400263a	            0x7412	                            je 0x400264e	      1782	objcopy.c	FUNCTION_30	WHILE_1	WHILE_5
0x400263c	        0x837dc0ff	cmp dword [rbp - 0x40], 0xffffffffffffffff	      1782	objcopy.c	FUNCTION_30	WHILE_1	WHILE_5
0x4002640	            0x740c	                            je 0x400264e	      1782	objcopy.c	FUNCTION_30	WHILE_1	WHILE_5
0x4002642	        0x837dc020	           cmp dword [rbp - 0x40], 0x20 	      1782	objcopy.c	FUNCTION_30	WHILE_1	WHILE_5
0x4002646	            0x74d3	                            je 0x400261b	      1782	objcopy.c	FUNCTION_30	WHILE_1	WHILE_5
0x4002648	        0x837dc009	               cmp dword [rbp - 0x40], 9	      1782	objcopy.c	FUNCTION_30	WHILE_1	WHILE_5
0x400264c	            0x74cd	                            je 0x400261b	      1782	objcopy.c	FUNCTION_30	WHILE_1	WHILE_5
0x400264e	        0x837dc023	           cmp dword [rbp - 0x40], 0x23 	      1784	objcopy.c	FUNCTION_30	WHILE_1	IF_10
0x4002652	     0xf84af000000	                            je 0x4002707	      1784	objcopy.c	FUNCTION_30	WHILE_1	IF_10
0x4002658	        0x837dc00d	            cmp dword [rbp - 0x40], 0xd 	      1787	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_13
0x400265c	            0x7515	                           jne 0x4002673	      1787	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_13
0x400265e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1787	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_13
0x4002662	          0x4889c7	                            mov rdi, rax	      1787	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_13
0x4002665	      0xe800000000	                          call 0x400266a	      1787	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_13
0x400266a	          0x8945c0	             mov dword [rbp - 0x40], eax	      1787	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_13
0x400266d	        0x837dc00a	            cmp dword [rbp - 0x40], 0xa 	      1787	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_13
0x4002671	            0x740f	                            je 0x4002682	      1787	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_13
0x4002673	        0x837dc00a	            cmp dword [rbp - 0x40], 0xa 	      1788	objcopy.c	FUNCTION_30	WHILE_1	IF_11
0x4002677	            0x7409	                            je 0x4002682	      1788	objcopy.c	FUNCTION_30	WHILE_1	IF_11
0x4002679	        0x837dc0ff	cmp dword [rbp - 0x40], 0xffffffffffffffff	      1788	objcopy.c	FUNCTION_30	WHILE_1	IF_11
0x400267d	            0x755e	                           jne 0x40026dd	      1788	objcopy.c	FUNCTION_30	WHILE_1	IF_11
0x400267f	            0xeb01	                           jmp 0x4002682	      1788	objcopy.c	FUNCTION_30	WHILE_1	IF_11
0x4002681	              0x90	                                     nop	      1813	objcopy.c	FUNCTION_30	WHILE_1
0x4002682	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1792	objcopy.c	FUNCTION_30	WHILE_1	IF_11	IF_12
0x4002686	           0xfb600	                   movzx eax, byte [rax]	      1792	objcopy.c	FUNCTION_30	WHILE_1	IF_11	IF_12
0x4002689	            0x84c0	                             test al, al	      1792	objcopy.c	FUNCTION_30	WHILE_1	IF_11	IF_12
0x400268b	            0x741e	                            je 0x40026ab	      1792	objcopy.c	FUNCTION_30	WHILE_1	IF_11	IF_12
0x400268d	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1793	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_14
0x4002691	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1793	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_14
0x4002695	          0x4801c2	                            add rdx, rax	      1793	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_14
0x4002698	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1793	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_14
0x400269c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1793	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_14
0x40026a0	          0x4889ce	                            mov rsi, rcx	      1793	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_14
0x40026a3	          0x4889c7	                            mov rdi, rax	      1793	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_14
0x40026a6	      0xe832fcffff	         call sym.add_redefine_and_check	      1793	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_14
0x40026ab	        0x8345c401	               add dword [rbp - 0x3c], 1	      1795	objcopy.c	FUNCTION_30	WHILE_1	IF_11
0x40026af	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1796	objcopy.c	FUNCTION_30	WHILE_1	IF_11
0x40026b7	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1797	objcopy.c	FUNCTION_30	WHILE_1	IF_11
0x40026bf	        0x837dc0ff	cmp dword [rbp - 0x40], 0xffffffffffffffff	      1798	objcopy.c	FUNCTION_30	WHILE_1	IF_11	IF_13
0x40026c3	     0xf84cc000000	                            je 0x4002795	      1798	objcopy.c	FUNCTION_30	WHILE_1	IF_11	IF_13
0x40026c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1800	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_15
0x40026cd	          0x4889c7	                            mov rdi, rax	      1800	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_15
0x40026d0	      0xe800000000	                          call 0x40026d5	      1800	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_15
0x40026d5	          0x8945c0	             mov dword [rbp - 0x40], eax	      1800	objcopy.c	FUNCTION_30	WHILE_1	IF_11	CALL_15
0x40026d8	      0xe9a3000000	                           jmp 0x4002780	      1801	objcopy.c	FUNCTION_30	WHILE_1	IF_11
0x40026dd	      0xbf00000000	                              mov edi, 0	      1804	objcopy.c	FUNCTION_30	WHILE_1	CALL_17
0x40026e2	      0xe800000000	                          call 0x40026e7	      1804	objcopy.c	FUNCTION_30	WHILE_1	CALL_17
0x40026e7	          0x4889c1	                            mov rcx, rax	      1804	objcopy.c	FUNCTION_30	WHILE_1	CALL_17
0x40026ea	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1804	objcopy.c	FUNCTION_30	WHILE_1	CALL_17
0x40026ed	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1804	objcopy.c	FUNCTION_30	WHILE_1	CALL_17
0x40026f1	          0x4889c6	                            mov rsi, rax	      1804	objcopy.c	FUNCTION_30	WHILE_1	CALL_17
0x40026f4	          0x4889cf	                            mov rdi, rcx	      1804	objcopy.c	FUNCTION_30	WHILE_1	CALL_17
0x40026f7	      0xb800000000	                              mov eax, 0	      1804	objcopy.c	FUNCTION_30	WHILE_1	CALL_17
0x40026fc	      0xe800000000	                          call 0x4002701	      1804	objcopy.c	FUNCTION_30	WHILE_1	CALL_17
0x4002701	              0x90	                                     nop	      1742	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	IF_2
0x4002702	            0xeb04	                           jmp 0x4002708	      1742	objcopy.c	FUNCTION_30	WHILE_1	WHILE_2	IF_2
0x4002704	              0x90	                                     nop	      1768	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	IF_7
0x4002705	            0xeb01	                           jmp 0x4002708	      1768	objcopy.c	FUNCTION_30	WHILE_1	WHILE_4	IF_7
0x4002707	              0x90	                                     nop	      1785	objcopy.c	FUNCTION_30	WHILE_1	IF_10
0x4002708	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1806	objcopy.c	FUNCTION_30	WHILE_1	IF_14
0x400270d	            0x7435	                            je 0x4002744	      1806	objcopy.c	FUNCTION_30	WHILE_1	IF_14
0x400270f	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1806	objcopy.c	FUNCTION_30	WHILE_1	IF_14
0x4002714	            0x740a	                            je 0x4002720	      1806	objcopy.c	FUNCTION_30	WHILE_1	IF_14
0x4002716	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1806	objcopy.c	FUNCTION_30	WHILE_1	IF_14
0x400271a	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1806	objcopy.c	FUNCTION_30	WHILE_1	IF_14
0x400271e	            0x7524	                           jne 0x4002744	      1806	objcopy.c	FUNCTION_30	WHILE_1	IF_14
0x4002720	      0xbf00000000	                              mov edi, 0	      1807	objcopy.c	FUNCTION_30	WHILE_1	CALL_19
0x4002725	      0xe800000000	                          call 0x400272a	      1807	objcopy.c	FUNCTION_30	WHILE_1	CALL_19
0x400272a	          0x4889c1	                            mov rcx, rax	      1807	objcopy.c	FUNCTION_30	WHILE_1	CALL_19
0x400272d	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1807	objcopy.c	FUNCTION_30	WHILE_1	CALL_19
0x4002730	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1807	objcopy.c	FUNCTION_30	WHILE_1	CALL_19
0x4002734	          0x4889c6	                            mov rsi, rax	      1807	objcopy.c	FUNCTION_30	WHILE_1	CALL_19
0x4002737	          0x4889cf	                            mov rdi, rcx	      1807	objcopy.c	FUNCTION_30	WHILE_1	CALL_19
0x400273a	      0xb800000000	                              mov eax, 0	      1807	objcopy.c	FUNCTION_30	WHILE_1	CALL_19
0x400273f	      0xe800000000	                          call 0x4002744	      1807	objcopy.c	FUNCTION_30	WHILE_1	CALL_19
0x4002744	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1808	objcopy.c	FUNCTION_30	WHILE_1
0x4002748	        0x488d5001	                      lea rdx, [rax + 1]	      1808	objcopy.c	FUNCTION_30	WHILE_1
0x400274c	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1808	objcopy.c	FUNCTION_30	WHILE_1
0x4002750	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1808	objcopy.c	FUNCTION_30	WHILE_1
0x4002754	          0x4801d0	                            add rax, rdx	      1808	objcopy.c	FUNCTION_30	WHILE_1
0x4002757	          0xc60000	                       mov byte [rax], 0	      1808	objcopy.c	FUNCTION_30	WHILE_1
0x400275a	            0xeb0f	                           jmp 0x400276b	      1811	objcopy.c	FUNCTION_30	WHILE_1	WHILE_6
0x400275c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1812	objcopy.c	FUNCTION_30	WHILE_1	CALL_20
0x4002760	          0x4889c7	                            mov rdi, rax	      1812	objcopy.c	FUNCTION_30	WHILE_1	CALL_20
0x4002763	      0xe800000000	                          call 0x4002768	      1812	objcopy.c	FUNCTION_30	WHILE_1	CALL_20
0x4002768	          0x8945c0	             mov dword [rbp - 0x40], eax	      1812	objcopy.c	FUNCTION_30	WHILE_1	CALL_20
0x400276b	        0x837dc00a	            cmp dword [rbp - 0x40], 0xa 	      1811	objcopy.c	FUNCTION_30	WHILE_1	WHILE_6
0x400276f	     0xf840cffffff	                            je 0x4002681	      1811	objcopy.c	FUNCTION_30	WHILE_1	WHILE_6
0x4002775	        0x837dc0ff	cmp dword [rbp - 0x40], 0xffffffffffffffff	      1811	objcopy.c	FUNCTION_30	WHILE_1	WHILE_6
0x4002779	            0x75e1	                           jne 0x400275c	      1811	objcopy.c	FUNCTION_30	WHILE_1	WHILE_6
0x400277b	      0xe901ffffff	                           jmp 0x4002681	      1813	objcopy.c	FUNCTION_30	WHILE_1
0x4002780	        0x837dc0ff	cmp dword [rbp - 0x40], 0xffffffffffffffff	      1736	objcopy.c	FUNCTION_30	WHILE_1
0x4002784	     0xf8554fdffff	                           jne 0x40024de	      1736	objcopy.c	FUNCTION_30	WHILE_1
0x400278a	            0xeb0a	                           jmp 0x4002796	      1736	objcopy.c	FUNCTION_30	WHILE_1
0x400278c	              0x90	                                     nop	      1753	objcopy.c	FUNCTION_30	WHILE_1	IF_4
0x400278d	            0xeb07	                           jmp 0x4002796	      1753	objcopy.c	FUNCTION_30	WHILE_1	IF_4
0x400278f	              0x90	                                     nop	      1761	objcopy.c	FUNCTION_30	WHILE_1	IF_6
0x4002790	            0xeb04	                           jmp 0x4002796	      1761	objcopy.c	FUNCTION_30	WHILE_1	IF_6
0x4002792	              0x90	                                     nop	      1779	objcopy.c	FUNCTION_30	WHILE_1	IF_9
0x4002793	            0xeb01	                           jmp 0x4002796	      1779	objcopy.c	FUNCTION_30	WHILE_1	IF_9
0x4002795	              0x90	                                     nop	      1799	objcopy.c	FUNCTION_30	WHILE_1	IF_11	IF_13
0x4002796	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1816	objcopy.c	FUNCTION_30	IF_15
0x400279b	            0x7424	                            je 0x40027c1	      1816	objcopy.c	FUNCTION_30	IF_15
0x400279d	      0xbf00000000	                              mov edi, 0	      1817	objcopy.c	FUNCTION_30	CALL_22
0x40027a2	      0xe800000000	                          call 0x40027a7	      1817	objcopy.c	FUNCTION_30	CALL_22
0x40027a7	          0x4889c1	                            mov rcx, rax	      1817	objcopy.c	FUNCTION_30	CALL_22
0x40027aa	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1817	objcopy.c	FUNCTION_30	CALL_22
0x40027ad	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1817	objcopy.c	FUNCTION_30	CALL_22
0x40027b1	          0x4889c6	                            mov rsi, rax	      1817	objcopy.c	FUNCTION_30	CALL_22
0x40027b4	          0x4889cf	                            mov rdi, rcx	      1817	objcopy.c	FUNCTION_30	CALL_22
0x40027b7	      0xb800000000	                              mov eax, 0	      1817	objcopy.c	FUNCTION_30	CALL_22
0x40027bc	      0xe800000000	                          call 0x40027c1	      1817	objcopy.c	FUNCTION_30	CALL_22
0x40027c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1819	objcopy.c	FUNCTION_30	CALL_23
0x40027c5	          0x4889c7	                            mov rdi, rax	      1819	objcopy.c	FUNCTION_30	CALL_23
0x40027c8	      0xe800000000	                          call 0x40027cd	      1819	objcopy.c	FUNCTION_30	CALL_23
0x40027cd	              0x90	                                     nop	      1820	objcopy.c	FUNCTION_30
0x40027ce	        0x4883c448	                           add rsp, 0x48	      1820	objcopy.c	FUNCTION_30
0x40027d2	              0x5b	                                 pop rbx	      1820	objcopy.c	FUNCTION_30
0x40027d3	              0x5d	                                 pop rbp	      1820	objcopy.c	FUNCTION_30
0x40027d4	              0xc3	                                     ret	      1820	objcopy.c	FUNCTION_30
parse_flags	IF,2:FOR,0:ELSE,2:DO,1:SWITCH,0:functions,0:WHILE,0:CALL,8	182
0x400030b	              0x55	                                push rbp	       720	objcopy.c	FUNCTION_3
0x400030c	          0x4889e5	                            mov rbp, rsp	       720	objcopy.c	FUNCTION_3
0x400030f	        0x4883ec30	                           sub rsp, 0x30	       720	objcopy.c	FUNCTION_3
0x4000313	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       720	objcopy.c	FUNCTION_3
0x4000317	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       725	objcopy.c	FUNCTION_3
0x400031e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x4000322	      0xbe2c000000	                           mov esi, 0x2c	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x4000327	          0x4889c7	                            mov rdi, rax	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x400032a	      0xe800000000	                          call 0x400032f	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x400032f	        0x488945f0	             mov qword [rbp - 0x10], rax	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x4000333	      0x48837df000	               cmp qword [rbp - 0x10], 0	       730	objcopy.c	FUNCTION_3	DO_1	IF_1
0x4000338	            0x7511	                           jne 0x400034b	       730	objcopy.c	FUNCTION_3	DO_1	IF_1
0x400033a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x400033e	          0x4889c7	                            mov rdi, rax	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000341	      0xe800000000	                          call 0x4000346	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000346	          0x8945ec	             mov dword [rbp - 0x14], eax	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000349	            0xeb16	                           jmp 0x4000361	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x400034b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       734	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x400034f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       734	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x4000353	          0x4829c2	                            sub rdx, rax	       734	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x4000356	          0x4889d0	                            mov rax, rdx	       734	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x4000359	          0x8945ec	             mov dword [rbp - 0x14], eax	       734	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x400035c	      0x488345f001	               add qword [rbp - 0x10], 1	       735	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x4000361	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       741	objcopy.c	FUNCTION_3	DO_1
0x4000364	          0x4863d0	                         movsxd rdx, eax	       741	objcopy.c	FUNCTION_3	DO_1
0x4000367	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       741	objcopy.c	FUNCTION_3	DO_1
0x400036b	          0x4889c6	                            mov rsi, rax	       741	objcopy.c	FUNCTION_3	DO_1
0x400036e	      0xbf00000000	                              mov edi, 0	       741	objcopy.c	FUNCTION_3	DO_1
0x4000373	      0xe800000000	                          call 0x4000378	       741	objcopy.c	FUNCTION_3	DO_1
0x4000378	            0x85c0	                           test eax, eax	       741	objcopy.c	FUNCTION_3	DO_1
0x400037a	            0x7509	                           jne 0x4000385	       741	objcopy.c	FUNCTION_3	DO_1
0x400037c	        0x834de801	                or dword [rbp - 0x18], 1	       741	objcopy.c	FUNCTION_3	DO_1
0x4000380	      0xe915020000	                           jmp 0x400059a	       741	objcopy.c	FUNCTION_3	DO_1
0x4000385	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       742	objcopy.c	FUNCTION_3	DO_1
0x4000388	          0x4863d0	                         movsxd rdx, eax	       742	objcopy.c	FUNCTION_3	DO_1
0x400038b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       742	objcopy.c	FUNCTION_3	DO_1
0x400038f	          0x4889c6	                            mov rsi, rax	       742	objcopy.c	FUNCTION_3	DO_1
0x4000392	      0xbf00000000	                              mov edi, 0	       742	objcopy.c	FUNCTION_3	DO_1
0x4000397	      0xe800000000	                          call 0x400039c	       742	objcopy.c	FUNCTION_3	DO_1
0x400039c	            0x85c0	                           test eax, eax	       742	objcopy.c	FUNCTION_3	DO_1
0x400039e	            0x7509	                           jne 0x40003a9	       742	objcopy.c	FUNCTION_3	DO_1
0x40003a0	        0x834de802	                or dword [rbp - 0x18], 2	       742	objcopy.c	FUNCTION_3	DO_1
0x40003a4	      0xe9f1010000	                           jmp 0x400059a	       742	objcopy.c	FUNCTION_3	DO_1
0x40003a9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       743	objcopy.c	FUNCTION_3	DO_1
0x40003ac	          0x4863d0	                         movsxd rdx, eax	       743	objcopy.c	FUNCTION_3	DO_1
0x40003af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       743	objcopy.c	FUNCTION_3	DO_1
0x40003b3	          0x4889c6	                            mov rsi, rax	       743	objcopy.c	FUNCTION_3	DO_1
0x40003b6	      0xbf00000000	                              mov edi, 0	       743	objcopy.c	FUNCTION_3	DO_1
0x40003bb	      0xe800000000	                          call 0x40003c0	       743	objcopy.c	FUNCTION_3	DO_1
0x40003c0	            0x85c0	                           test eax, eax	       743	objcopy.c	FUNCTION_3	DO_1
0x40003c2	            0x750c	                           jne 0x40003d0	       743	objcopy.c	FUNCTION_3	DO_1
0x40003c4	    0x814de8000200	            or dword [rbp - 0x18], 0x200	       743	objcopy.c	FUNCTION_3	DO_1
0x40003cb	      0xe9ca010000	                           jmp 0x400059a	       743	objcopy.c	FUNCTION_3	DO_1
0x40003d0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       744	objcopy.c	FUNCTION_3	DO_1
0x40003d3	          0x4863d0	                         movsxd rdx, eax	       744	objcopy.c	FUNCTION_3	DO_1
0x40003d6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       744	objcopy.c	FUNCTION_3	DO_1
0x40003da	          0x4889c6	                            mov rsi, rax	       744	objcopy.c	FUNCTION_3	DO_1
0x40003dd	      0xbf00000000	                              mov edi, 0	       744	objcopy.c	FUNCTION_3	DO_1
0x40003e2	      0xe800000000	                          call 0x40003e7	       744	objcopy.c	FUNCTION_3	DO_1
0x40003e7	            0x85c0	                           test eax, eax	       744	objcopy.c	FUNCTION_3	DO_1
0x40003e9	            0x7509	                           jne 0x40003f4	       744	objcopy.c	FUNCTION_3	DO_1
0x40003eb	        0x834de808	                or dword [rbp - 0x18], 8	       744	objcopy.c	FUNCTION_3	DO_1
0x40003ef	      0xe9a6010000	                           jmp 0x400059a	       744	objcopy.c	FUNCTION_3	DO_1
0x40003f4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       745	objcopy.c	FUNCTION_3	DO_1
0x40003f7	          0x4863d0	                         movsxd rdx, eax	       745	objcopy.c	FUNCTION_3	DO_1
0x40003fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       745	objcopy.c	FUNCTION_3	DO_1
0x40003fe	          0x4889c6	                            mov rsi, rax	       745	objcopy.c	FUNCTION_3	DO_1
0x4000401	      0xbf00000000	                              mov edi, 0	       745	objcopy.c	FUNCTION_3	DO_1
0x4000406	      0xe800000000	                          call 0x400040b	       745	objcopy.c	FUNCTION_3	DO_1
0x400040b	            0x85c0	                           test eax, eax	       745	objcopy.c	FUNCTION_3	DO_1
0x400040d	            0x750c	                           jne 0x400041b	       745	objcopy.c	FUNCTION_3	DO_1
0x400040f	    0x814de8002000	           or dword [rbp - 0x18], 0x2000	       745	objcopy.c	FUNCTION_3	DO_1
0x4000416	      0xe97f010000	                           jmp 0x400059a	       745	objcopy.c	FUNCTION_3	DO_1
0x400041b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       746	objcopy.c	FUNCTION_3	DO_1
0x400041e	          0x4863d0	                         movsxd rdx, eax	       746	objcopy.c	FUNCTION_3	DO_1
0x4000421	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       746	objcopy.c	FUNCTION_3	DO_1
0x4000425	          0x4889c6	                            mov rsi, rax	       746	objcopy.c	FUNCTION_3	DO_1
0x4000428	      0xbf00000000	                              mov edi, 0	       746	objcopy.c	FUNCTION_3	DO_1
0x400042d	      0xe800000000	                          call 0x4000432	       746	objcopy.c	FUNCTION_3	DO_1
0x4000432	            0x85c0	                           test eax, eax	       746	objcopy.c	FUNCTION_3	DO_1
0x4000434	            0x7509	                           jne 0x400043f	       746	objcopy.c	FUNCTION_3	DO_1
0x4000436	        0x834de810	             or dword [rbp - 0x18], 0x10	       746	objcopy.c	FUNCTION_3	DO_1
0x400043a	      0xe95b010000	                           jmp 0x400059a	       746	objcopy.c	FUNCTION_3	DO_1
0x400043f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       747	objcopy.c	FUNCTION_3	DO_1
0x4000442	          0x4863d0	                         movsxd rdx, eax	       747	objcopy.c	FUNCTION_3	DO_1
0x4000445	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       747	objcopy.c	FUNCTION_3	DO_1
0x4000449	          0x4889c6	                            mov rsi, rax	       747	objcopy.c	FUNCTION_3	DO_1
0x400044c	      0xbf00000000	                              mov edi, 0	       747	objcopy.c	FUNCTION_3	DO_1
0x4000451	      0xe800000000	                          call 0x4000456	       747	objcopy.c	FUNCTION_3	DO_1
0x4000456	            0x85c0	                           test eax, eax	       747	objcopy.c	FUNCTION_3	DO_1
0x4000458	            0x7509	                           jne 0x4000463	       747	objcopy.c	FUNCTION_3	DO_1
0x400045a	        0x834de820	             or dword [rbp - 0x18], 0x20	       747	objcopy.c	FUNCTION_3	DO_1
0x400045e	      0xe937010000	                           jmp 0x400059a	       747	objcopy.c	FUNCTION_3	DO_1
0x4000463	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       748	objcopy.c	FUNCTION_3	DO_1
0x4000466	          0x4863d0	                         movsxd rdx, eax	       748	objcopy.c	FUNCTION_3	DO_1
0x4000469	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       748	objcopy.c	FUNCTION_3	DO_1
0x400046d	          0x4889c6	                            mov rsi, rax	       748	objcopy.c	FUNCTION_3	DO_1
0x4000470	      0xbf00000000	                              mov edi, 0	       748	objcopy.c	FUNCTION_3	DO_1
0x4000475	      0xe800000000	                          call 0x400047a	       748	objcopy.c	FUNCTION_3	DO_1
0x400047a	            0x85c0	                           test eax, eax	       748	objcopy.c	FUNCTION_3	DO_1
0x400047c	            0x7509	                           jne 0x4000487	       748	objcopy.c	FUNCTION_3	DO_1
0x400047e	        0x834de840	            or dword [rbp - 0x18], 0x40 	       748	objcopy.c	FUNCTION_3	DO_1
0x4000482	      0xe913010000	                           jmp 0x400059a	       748	objcopy.c	FUNCTION_3	DO_1
0x4000487	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       749	objcopy.c	FUNCTION_3	DO_1
0x400048a	          0x4863d0	                         movsxd rdx, eax	       749	objcopy.c	FUNCTION_3	DO_1
0x400048d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       749	objcopy.c	FUNCTION_3	DO_1
0x4000491	          0x4889c6	                            mov rsi, rax	       749	objcopy.c	FUNCTION_3	DO_1
0x4000494	      0xbf00000000	                              mov edi, 0	       749	objcopy.c	FUNCTION_3	DO_1
0x4000499	      0xe800000000	                          call 0x400049e	       749	objcopy.c	FUNCTION_3	DO_1
0x400049e	            0x85c0	                           test eax, eax	       749	objcopy.c	FUNCTION_3	DO_1
0x40004a0	            0x750c	                           jne 0x40004ae	       749	objcopy.c	FUNCTION_3	DO_1
0x40004a2	    0x814de8000000	     or dword [rbp - 0x18], section_end.	       749	objcopy.c	FUNCTION_3	DO_1
0x40004a9	      0xe9ec000000	                           jmp 0x400059a	       749	objcopy.c	FUNCTION_3	DO_1
0x40004ae	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       750	objcopy.c	FUNCTION_3	DO_1
0x40004b1	          0x4863d0	                         movsxd rdx, eax	       750	objcopy.c	FUNCTION_3	DO_1
0x40004b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       750	objcopy.c	FUNCTION_3	DO_1
0x40004b8	          0x4889c6	                            mov rsi, rax	       750	objcopy.c	FUNCTION_3	DO_1
0x40004bb	      0xbf00000000	                              mov edi, 0	       750	objcopy.c	FUNCTION_3	DO_1
0x40004c0	      0xe800000000	                          call 0x40004c5	       750	objcopy.c	FUNCTION_3	DO_1
0x40004c5	            0x85c0	                           test eax, eax	       750	objcopy.c	FUNCTION_3	DO_1
0x40004c7	            0x750c	                           jne 0x40004d5	       750	objcopy.c	FUNCTION_3	DO_1
0x40004c9	    0x814de8000100	            or dword [rbp - 0x18], 0x100	       750	objcopy.c	FUNCTION_3	DO_1
0x40004d0	      0xe9c5000000	                           jmp 0x400059a	       750	objcopy.c	FUNCTION_3	DO_1
0x40004d5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       751	objcopy.c	FUNCTION_3	DO_1
0x40004d8	          0x4863d0	                         movsxd rdx, eax	       751	objcopy.c	FUNCTION_3	DO_1
0x40004db	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       751	objcopy.c	FUNCTION_3	DO_1
0x40004df	          0x4889c6	                            mov rsi, rax	       751	objcopy.c	FUNCTION_3	DO_1
0x40004e2	      0xbf00000000	                              mov edi, 0	       751	objcopy.c	FUNCTION_3	DO_1
0x40004e7	      0xe800000000	                          call 0x40004ec	       751	objcopy.c	FUNCTION_3	DO_1
0x40004ec	            0x85c0	                           test eax, eax	       751	objcopy.c	FUNCTION_3	DO_1
0x40004ee	            0x750c	                           jne 0x40004fc	       751	objcopy.c	FUNCTION_3	DO_1
0x40004f0	    0x814de8000080	         or dword [rbp - 0x18], 0x800000	       751	objcopy.c	FUNCTION_3	DO_1
0x40004f7	      0xe99e000000	                           jmp 0x400059a	       751	objcopy.c	FUNCTION_3	DO_1
0x40004fc	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       752	objcopy.c	FUNCTION_3	DO_1
0x40004ff	          0x4863d0	                         movsxd rdx, eax	       752	objcopy.c	FUNCTION_3	DO_1
0x4000502	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       752	objcopy.c	FUNCTION_3	DO_1
0x4000506	          0x4889c6	                            mov rsi, rax	       752	objcopy.c	FUNCTION_3	DO_1
0x4000509	      0xbf00000000	                              mov edi, 0	       752	objcopy.c	FUNCTION_3	DO_1
0x400050e	      0xe800000000	                          call 0x4000513	       752	objcopy.c	FUNCTION_3	DO_1
0x4000513	            0x85c0	                           test eax, eax	       752	objcopy.c	FUNCTION_3	DO_1
0x4000515	            0x7509	                           jne 0x4000520	       752	objcopy.c	FUNCTION_3	DO_1
0x4000517	    0x814de8000000	        or dword [rbp - 0x18], 0x1000000	       752	objcopy.c	FUNCTION_3	DO_1
0x400051e	            0xeb7a	                           jmp 0x400059a	       752	objcopy.c	FUNCTION_3	DO_1
0x4000520	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000523	          0x83c001	                              add eax, 1	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000526	            0x4898	                                    cdqe	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000528	          0x4889c7	                            mov rdi, rax	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x400052b	      0xe800000000	                          call 0x4000530	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000530	        0x488945f8	                mov qword [rbp - 8], rax	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000534	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       759	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_4
0x4000537	          0x4863d0	                         movsxd rdx, eax	       759	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_4
0x400053a	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       759	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_4
0x400053e	        0x488b45f8	                mov rax, qword [rbp - 8]	       759	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_4
0x4000542	          0x4889ce	                            mov rsi, rcx	       759	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_4
0x4000545	          0x4889c7	                            mov rdi, rax	       759	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_4
0x4000548	      0xe800000000	                          call 0x400054d	       759	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_4
0x400054d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       760	objcopy.c	FUNCTION_3	DO_1	ELSE_2
0x4000550	          0x4863d0	                         movsxd rdx, eax	       760	objcopy.c	FUNCTION_3	DO_1	ELSE_2
0x4000553	        0x488b45f8	                mov rax, qword [rbp - 8]	       760	objcopy.c	FUNCTION_3	DO_1	ELSE_2
0x4000557	          0x4801d0	                            add rax, rdx	       760	objcopy.c	FUNCTION_3	DO_1	ELSE_2
0x400055a	          0xc60000	                       mov byte [rax], 0	       760	objcopy.c	FUNCTION_3	DO_1	ELSE_2
0x400055d	      0xbf00000000	                              mov edi, 0	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000562	      0xe800000000	                          call 0x4000567	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000567	          0x4889c2	                            mov rdx, rax	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x400056a	        0x488b45f8	                mov rax, qword [rbp - 8]	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x400056e	          0x4889c6	                            mov rsi, rax	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000571	          0x4889d7	                            mov rdi, rdx	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000574	      0xb800000000	                              mov eax, 0	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000579	      0xe800000000	                          call 0x400057e	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x400057e	      0xbf00000000	                              mov edi, 0	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000583	      0xe800000000	                          call 0x4000588	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000588	      0xbe00000000	                              mov esi, 0	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x400058d	          0x4889c7	                            mov rdi, rax	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000590	      0xb800000000	                              mov eax, 0	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000595	      0xe800000000	                          call 0x400059a	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x400059a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       766	objcopy.c	FUNCTION_3	DO_1
0x400059e	        0x488945d8	             mov qword [rbp - 0x28], rax	       766	objcopy.c	FUNCTION_3	DO_1
0x40005a2	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       768	objcopy.c	FUNCTION_3
0x40005a7	     0xf8571fdffff	                           jne 0x400031e	       768	objcopy.c	FUNCTION_3
0x40005ad	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       770	objcopy.c	FUNCTION_3
0x40005b0	              0xc9	                                   leave	       771	objcopy.c	FUNCTION_3
0x40005b1	              0xc3	                                     ret	       771	objcopy.c	FUNCTION_3
is_update_section	IF,2:FOR,1:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1	30
0x400133a	              0x55	                                push rbp	      1241	objcopy.c	FUNCTION_19
0x400133b	          0x4889e5	                            mov rbp, rsp	      1241	objcopy.c	FUNCTION_19
0x400133e	        0x4883ec20	                           sub rsp, 0x20	      1241	objcopy.c	FUNCTION_19
0x4001342	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1241	objcopy.c	FUNCTION_19
0x4001346	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1241	objcopy.c	FUNCTION_19
0x400134a	    0x488b05000000	            mov rax, qword [0x04001351] 	      1242	objcopy.c	FUNCTION_19	IF_1
0x4001351	          0x4885c0	                           test rax, rax	      1242	objcopy.c	FUNCTION_19	IF_1
0x4001354	            0x7444	                            je 0x400139a	      1242	objcopy.c	FUNCTION_19	IF_1
0x4001356	    0x488b05000000	            mov rax, qword [0x0400135d] 	      1246	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x400135d	        0x488945f8	                mov qword [rbp - 8], rax	      1246	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x4001361	            0xeb30	                           jmp 0x4001393	      1246	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x4001363	        0x488b45f8	                mov rax, qword [rbp - 8]	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4001367	        0x488b5008	                mov rdx, qword [rax + 8]	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x400136b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x400136f	          0x488b00	                    mov rax, qword [rax]	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4001372	          0x4889d6	                            mov rsi, rdx	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4001375	          0x4889c7	                            mov rdi, rax	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4001378	      0xe800000000	                          call 0x400137d	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x400137d	            0x85c0	                           test eax, eax	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x400137f	            0x7507	                           jne 0x4001388	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4001381	      0xb801000000	                              mov eax, 1	      1251	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2
0x4001386	            0xeb17	                           jmp 0x400139f	      1251	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2
0x4001388	        0x488b45f8	                mov rax, qword [rbp - 8]	      1248	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x400138c	          0x488b00	                    mov rax, qword [rax]	      1248	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x400138f	        0x488945f8	                mov qword [rbp - 8], rax	      1248	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x4001393	      0x48837df800	                  cmp qword [rbp - 8], 0	      1246	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x4001398	            0x75c9	                           jne 0x4001363	      1246	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x400139a	      0xb800000000	                              mov eax, 0	      1255	objcopy.c	FUNCTION_19
0x400139f	              0xc9	                                   leave	      1256	objcopy.c	FUNCTION_19
0x40013a0	              0xc3	                                     ret	      1256	objcopy.c	FUNCTION_19
num_bytes	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,1:CALL,0	12
0x4002ac5	              0x55	                                push rbp	      1896	objcopy.c	FUNCTION_32
0x4002ac6	          0x4889e5	                            mov rbp, rsp	      1896	objcopy.c	FUNCTION_32
0x4002ac9	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1896	objcopy.c	FUNCTION_32
0x4002acd	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1897	objcopy.c	FUNCTION_32
0x4002ad4	            0xeb09	                           jmp 0x4002adf	      1900	objcopy.c	FUNCTION_32	WHILE_1
0x4002ad6	        0x8345fc01	                  add dword [rbp - 4], 1	      1902	objcopy.c	FUNCTION_32	WHILE_1
0x4002ada	      0x48c16de808	               shr qword [rbp - 0x18], 8	      1903	objcopy.c	FUNCTION_32	WHILE_1
0x4002adf	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1900	objcopy.c	FUNCTION_32	WHILE_1
0x4002ae4	            0x75f0	                           jne 0x4002ad6	      1900	objcopy.c	FUNCTION_32	WHILE_1
0x4002ae6	          0x8b45fc	                mov eax, dword [rbp - 4]	      1905	objcopy.c	FUNCTION_32
0x4002ae9	              0x5d	                                 pop rbp	      1906	objcopy.c	FUNCTION_32
0x4002aea	              0xc3	                                     ret	      1906	objcopy.c	FUNCTION_32
is_merged_note_section	IF,1:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,3	36
0x40013a1	              0x55	                                push rbp	      1260	objcopy.c	FUNCTION_20
0x40013a2	          0x4889e5	                            mov rbp, rsp	      1260	objcopy.c	FUNCTION_20
0x40013a5	        0x4883ec10	                           sub rsp, 0x10	      1260	objcopy.c	FUNCTION_20
0x40013a9	        0x48897df8	                mov qword [rbp - 8], rdi	      1260	objcopy.c	FUNCTION_20
0x40013ad	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1260	objcopy.c	FUNCTION_20
0x40013b1	    0x8b0500000000	            mov eax, dword [0x040013b7] 	      1261	objcopy.c	FUNCTION_20	IF_1
0x40013b7	            0x85c0	                           test eax, eax	      1261	objcopy.c	FUNCTION_20	IF_1
0x40013b9	            0x745b	                            je 0x4001416	      1261	objcopy.c	FUNCTION_20	IF_1
0x40013bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1262	objcopy.c	FUNCTION_20	IF_1
0x40013bf	        0x488b4008	                mov rax, qword [rax + 8]	      1262	objcopy.c	FUNCTION_20	IF_1
0x40013c3	          0x8b4008	                mov eax, dword [rax + 8]	      1262	objcopy.c	FUNCTION_20	IF_1
0x40013c6	          0x83f805	                              cmp eax, 5	      1262	objcopy.c	FUNCTION_20	IF_1
0x40013c9	            0x754b	                           jne 0x4001416	      1262	objcopy.c	FUNCTION_20	IF_1
0x40013cb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1263	objcopy.c	FUNCTION_20	IF_1	CALL_1
0x40013cf	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1263	objcopy.c	FUNCTION_20	IF_1	CALL_1
0x40013d6	          0x8b4004	                mov eax, dword [rax + 4]	      1263	objcopy.c	FUNCTION_20	IF_1	CALL_1
0x40013d9	          0x83f807	                              cmp eax, 7	      1263	objcopy.c	FUNCTION_20	IF_1	CALL_1
0x40013dc	            0x7538	                           jne 0x4001416	      1263	objcopy.c	FUNCTION_20	IF_1	CALL_1
0x40013de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1266	objcopy.c	FUNCTION_20	IF_1	CALL_2
0x40013e2	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1266	objcopy.c	FUNCTION_20	IF_1	CALL_2
0x40013e9	        0x488b4008	                mov rax, qword [rax + 8]	      1266	objcopy.c	FUNCTION_20	IF_1	CALL_2
0x40013ed	      0x2500001000	                       and eax, 0x100000	      1266	objcopy.c	FUNCTION_20	IF_1	CALL_2
0x40013f2	          0x4885c0	                           test rax, rax	      1266	objcopy.c	FUNCTION_20	IF_1	CALL_2
0x40013f5	            0x7518	                           jne 0x400140f	      1266	objcopy.c	FUNCTION_20	IF_1	CALL_2
0x40013f7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x40013fb	          0x488b00	                    mov rax, qword [rax]	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x40013fe	      0xbe00000000	                              mov esi, 0	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x4001403	          0x4889c7	                            mov rdi, rax	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x4001406	      0xe800000000	                          call 0x400140b	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x400140b	            0x85c0	                           test eax, eax	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x400140d	            0x7507	                           jne 0x4001416	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x400140f	      0xb801000000	                              mov eax, 1	      1271	objcopy.c	FUNCTION_20	IF_1
0x4001414	            0xeb05	                           jmp 0x400141b	      1271	objcopy.c	FUNCTION_20	IF_1
0x4001416	      0xb800000000	                              mov eax, 0	      1273	objcopy.c	FUNCTION_20
0x400141b	              0xc9	                                   leave	      1274	objcopy.c	FUNCTION_20
0x400141c	              0xc3	                                     ret	      1274	objcopy.c	FUNCTION_20
skip_section	IF,7:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,3	69
0x40073eb	              0x55	                                push rbp	      3836	objcopy.c	FUNCTION_46
0x40073ec	          0x4889e5	                            mov rbp, rsp	      3836	objcopy.c	FUNCTION_46
0x40073ef	        0x4883ec40	                           sub rsp, 0x40	      3836	objcopy.c	FUNCTION_46
0x40073f3	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3836	objcopy.c	FUNCTION_46
0x40073f7	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3836	objcopy.c	FUNCTION_46
0x40073fb	          0x8955cc	             mov dword [rbp - 0x34], edx	      3836	objcopy.c	FUNCTION_46
0x40073fe	    0x8b0500000000	            mov eax, dword [0x04007404] 	      3843	objcopy.c	FUNCTION_46	IF_1
0x4007404	            0x85c0	                           test eax, eax	      3843	objcopy.c	FUNCTION_46	IF_1
0x4007406	            0x740a	                            je 0x4007412	      3843	objcopy.c	FUNCTION_46	IF_1
0x4007408	      0xb801000000	                              mov eax, 1	      3844	objcopy.c	FUNCTION_46	IF_1
0x400740d	      0xe9c6000000	                           jmp 0x40074d8	      3844	objcopy.c	FUNCTION_46	IF_1
0x4007412	    0x8b0500000000	            mov eax, dword [0x04007418] 	      3846	objcopy.c	FUNCTION_46	IF_2
0x4007418	            0x85c0	                           test eax, eax	      3846	objcopy.c	FUNCTION_46	IF_2
0x400741a	            0x740a	                            je 0x4007426	      3846	objcopy.c	FUNCTION_46	IF_2
0x400741c	      0xb801000000	                              mov eax, 1	      3847	objcopy.c	FUNCTION_46	IF_2
0x4007421	      0xe9b2000000	                           jmp 0x40074d8	      3847	objcopy.c	FUNCTION_46	IF_2
0x4007426	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x400742a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x400742e	          0x4889d6	                            mov rsi, rdx	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x4007431	          0x4889c7	                            mov rdi, rax	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x4007434	      0xe8b0a1ffff	               call sym.is_strip_section	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x4007439	            0x85c0	                           test eax, eax	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x400743b	            0x740a	                            je 0x4007447	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x400743d	      0xb801000000	                              mov eax, 1	      3850	objcopy.c	FUNCTION_46	IF_3
0x4007442	      0xe991000000	                           jmp 0x40074d8	      3850	objcopy.c	FUNCTION_46	IF_3
0x4007447	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3852	objcopy.c	FUNCTION_46	IF_4	CALL_2
0x400744b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3852	objcopy.c	FUNCTION_46	IF_4	CALL_2
0x400744f	          0x4889d6	                            mov rsi, rdx	      3852	objcopy.c	FUNCTION_46	IF_4	CALL_2
0x4007452	          0x4889c7	                            mov rdi, rax	      3852	objcopy.c	FUNCTION_46	IF_4	CALL_2
0x4007455	      0xe8e09effff	              call sym.is_update_section	      3852	objcopy.c	FUNCTION_46	IF_4	CALL_2
0x400745a	            0x85c0	                           test eax, eax	      3852	objcopy.c	FUNCTION_46	IF_4	CALL_2
0x400745c	            0x7407	                            je 0x4007465	      3852	objcopy.c	FUNCTION_46	IF_4	CALL_2
0x400745e	      0xb801000000	                              mov eax, 1	      3853	objcopy.c	FUNCTION_46	IF_4
0x4007463	            0xeb73	                           jmp 0x40074d8	      3853	objcopy.c	FUNCTION_46	IF_4
0x4007465	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      3857	objcopy.c	FUNCTION_46	IF_5	CALL_3
0x4007469	            0x741e	                            je 0x4007489	      3857	objcopy.c	FUNCTION_46	IF_5	CALL_3
0x400746b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3857	objcopy.c	FUNCTION_46	IF_5	CALL_3
0x400746f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3857	objcopy.c	FUNCTION_46	IF_5	CALL_3
0x4007473	          0x4889d6	                            mov rsi, rdx	      3857	objcopy.c	FUNCTION_46	IF_5	CALL_3
0x4007476	          0x4889c7	                            mov rdi, rax	      3857	objcopy.c	FUNCTION_46	IF_5	CALL_3
0x4007479	      0xe8239fffff	         call sym.is_merged_note_section	      3857	objcopy.c	FUNCTION_46	IF_5	CALL_3
0x400747e	            0x85c0	                           test eax, eax	      3857	objcopy.c	FUNCTION_46	IF_5	CALL_3
0x4007480	            0x7407	                            je 0x4007489	      3857	objcopy.c	FUNCTION_46	IF_5	CALL_3
0x4007482	      0xb801000000	                              mov eax, 1	      3858	objcopy.c	FUNCTION_46	IF_5
0x4007487	            0xeb4f	                           jmp 0x40074d8	      3858	objcopy.c	FUNCTION_46	IF_5
0x4007489	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3860	objcopy.c	FUNCTION_46
0x400748d	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3860	objcopy.c	FUNCTION_46
0x4007490	          0x8945ec	             mov dword [rbp - 0x14], eax	      3860	objcopy.c	FUNCTION_46
0x4007493	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3861	objcopy.c	FUNCTION_46	IF_6
0x4007496	      0x2500000002	                      and eax, 0x2000000	      3861	objcopy.c	FUNCTION_46	IF_6
0x400749b	            0x85c0	                           test eax, eax	      3861	objcopy.c	FUNCTION_46	IF_6
0x400749d	            0x7407	                            je 0x40074a6	      3861	objcopy.c	FUNCTION_46	IF_6
0x400749f	      0xb801000000	                              mov eax, 1	      3862	objcopy.c	FUNCTION_46	IF_6
0x40074a4	            0xeb32	                           jmp 0x40074d8	      3862	objcopy.c	FUNCTION_46	IF_6
0x40074a6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3864	objcopy.c	FUNCTION_46
0x40074aa	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3864	objcopy.c	FUNCTION_46
0x40074ae	        0x488945f0	             mov qword [rbp - 0x10], rax	      3864	objcopy.c	FUNCTION_46
0x40074b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3865	objcopy.c	FUNCTION_46
0x40074b6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3865	objcopy.c	FUNCTION_46
0x40074ba	        0x488945f8	                mov qword [rbp - 8], rax	      3865	objcopy.c	FUNCTION_46
0x40074be	      0x48837df800	                  cmp qword [rbp - 8], 0	      3867	objcopy.c	FUNCTION_46	IF_7
0x40074c3	            0x7407	                            je 0x40074cc	      3867	objcopy.c	FUNCTION_46	IF_7
0x40074c5	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3867	objcopy.c	FUNCTION_46	IF_7
0x40074ca	            0x7507	                           jne 0x40074d3	      3867	objcopy.c	FUNCTION_46	IF_7
0x40074cc	      0xb801000000	                              mov eax, 1	      3868	objcopy.c	FUNCTION_46	IF_7
0x40074d1	            0xeb05	                           jmp 0x40074d8	      3868	objcopy.c	FUNCTION_46	IF_7
0x40074d3	      0xb800000000	                              mov eax, 0	      3870	objcopy.c	FUNCTION_46
0x40074d8	              0xc9	                                   leave	      3871	objcopy.c	FUNCTION_46
0x40074d9	              0xc3	                                     ret	      3871	objcopy.c	FUNCTION_46
default_deterministic	IF,1:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,0	9
0x40083d6	              0x55	                                push rbp	      4308	objcopy.c	FUNCTION_56
0x40083d7	          0x4889e5	                            mov rbp, rsp	      4308	objcopy.c	FUNCTION_56
0x40083da	    0x8b0500000000	            mov eax, dword [0x040083e0] 	      4309	objcopy.c	FUNCTION_56	IF_1
0x40083e0	            0x85c0	                           test eax, eax	      4309	objcopy.c	FUNCTION_56	IF_1
0x40083e2	            0x790a	                           jns 0x40083ee	      4309	objcopy.c	FUNCTION_56	IF_1
0x40083e4	    0xc70500000000	               mov dword [0x040083ee], 0	      4310	objcopy.c	FUNCTION_56	IF_1
0x40083ee	              0x90	                                     nop	      4311	objcopy.c	FUNCTION_56
0x40083ef	              0x5d	                                 pop rbp	      4311	objcopy.c	FUNCTION_56
0x40083f0	              0xc3	                                     ret	      4311	objcopy.c	FUNCTION_56
copy_object	IF,101:FOR,8:ELSE,18:DO,0:SWITCH,0:functions,0:WHILE,1:CALL,171	1791
0x4003c6d	              0x55	                                push rbp	      2408	objcopy.c	FUNCTION_38
0x4003c6e	          0x4889e5	                            mov rbp, rsp	      2408	objcopy.c	FUNCTION_38
0x4003c71	            0x4156	                                push r14	      2408	objcopy.c	FUNCTION_38
0x4003c73	            0x4155	                                push r13	      2408	objcopy.c	FUNCTION_38
0x4003c75	            0x4154	                                push r12	      2408	objcopy.c	FUNCTION_38
0x4003c77	              0x53	                                push rbx	      2408	objcopy.c	FUNCTION_38
0x4003c78	    0x4881ec800100	                          sub rsp, 0x180	      2408	objcopy.c	FUNCTION_38
0x4003c7f	    0x4889bd78feff	            mov qword [rbp - 0x188], rdi	      2408	objcopy.c	FUNCTION_38
0x4003c86	    0x4889b570feff	            mov qword [rbp - 0x190], rsi	      2408	objcopy.c	FUNCTION_38
0x4003c8d	    0x48899568feff	            mov qword [rbp - 0x198], rdx	      2408	objcopy.c	FUNCTION_38
0x4003c94	    0x64488b042528	                mov rax, qword fs:[0x28]	      2408	objcopy.c	FUNCTION_38
0x4003c9d	        0x488945d8	             mov qword [rbp - 0x28], rax	      2408	objcopy.c	FUNCTION_38
0x4003ca1	            0x31c0	                            xor eax, eax	      2408	objcopy.c	FUNCTION_38
0x4003ca3	    0x48c785c0feff	              mov qword [rbp - 0x140], 0	      2411	objcopy.c	FUNCTION_38
0x4003cae	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	      2413	objcopy.c	FUNCTION_38
0x4003cb9	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      2414	objcopy.c	FUNCTION_38
0x4003cc4	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      2415	objcopy.c	FUNCTION_38
0x4003ccf	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2422	objcopy.c	FUNCTION_38	IF_1
0x4003cd6	        0x488b4008	                mov rax, qword [rax + 8]	      2422	objcopy.c	FUNCTION_38	IF_1
0x4003cda	          0x8b500c	              mov edx, dword [rax + 0xc]	      2422	objcopy.c	FUNCTION_38	IF_1
0x4003cdd	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2422	objcopy.c	FUNCTION_38	IF_1
0x4003ce4	        0x488b4008	                mov rax, qword [rax + 8]	      2422	objcopy.c	FUNCTION_38	IF_1
0x4003ce8	          0x8b400c	              mov eax, dword [rax + 0xc]	      2422	objcopy.c	FUNCTION_38	IF_1
0x4003ceb	            0x39c2	                            cmp edx, eax	      2422	objcopy.c	FUNCTION_38	IF_1
0x4003ced	            0x7447	                            je 0x4003d36	      2422	objcopy.c	FUNCTION_38	IF_1
0x4003cef	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2423	objcopy.c	FUNCTION_38	IF_1
0x4003cf6	        0x488b4008	                mov rax, qword [rax + 8]	      2423	objcopy.c	FUNCTION_38	IF_1
0x4003cfa	          0x8b400c	              mov eax, dword [rax + 0xc]	      2423	objcopy.c	FUNCTION_38	IF_1
0x4003cfd	          0x83f802	                              cmp eax, 2	      2423	objcopy.c	FUNCTION_38	IF_1
0x4003d00	            0x7434	                            je 0x4003d36	      2423	objcopy.c	FUNCTION_38	IF_1
0x4003d02	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2424	objcopy.c	FUNCTION_38	IF_1
0x4003d09	        0x488b4008	                mov rax, qword [rax + 8]	      2424	objcopy.c	FUNCTION_38	IF_1
0x4003d0d	          0x8b400c	              mov eax, dword [rax + 0xc]	      2424	objcopy.c	FUNCTION_38	IF_1
0x4003d10	          0x83f802	                              cmp eax, 2	      2424	objcopy.c	FUNCTION_38	IF_1
0x4003d13	            0x7421	                            je 0x4003d36	      2424	objcopy.c	FUNCTION_38	IF_1
0x4003d15	      0xbf00000000	                              mov edi, 0	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x4003d1a	      0xe800000000	                          call 0x4003d1f	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x4003d1f	          0x4889c7	                            mov rdi, rax	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x4003d22	      0xb800000000	                              mov eax, 0	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x4003d27	      0xe800000000	                          call 0x4003d2c	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x4003d2c	      0xb800000000	                              mov eax, 0	      2429	objcopy.c	FUNCTION_38	IF_1
0x4003d31	      0xe962210000	                           jmp 0x4005e98	      2429	objcopy.c	FUNCTION_38	IF_1
0x4003d36	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4003d3d	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4003d41	          0x83e007	                              and eax, 7	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4003d44	           0xfb6d0	                           movzx edx, al	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4003d47	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4003d4e	            0x89d6	                            mov esi, edx	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4003d50	          0x4889c7	                            mov rdi, rax	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4003d53	      0xe800000000	                          call 0x4003d58	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4003d58	            0x85c0	                           test eax, eax	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4003d5a	            0x752d	                           jne 0x4003d89	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4003d5c	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2434	objcopy.c	FUNCTION_38	IF_2	CALL_4
0x4003d63	      0xb900000000	                              mov ecx, 0	      2434	objcopy.c	FUNCTION_38	IF_2	CALL_4
0x4003d68	      0xba00000000	                              mov edx, 0	      2434	objcopy.c	FUNCTION_38	IF_2	CALL_4
0x4003d6d	          0x4889c6	                            mov rsi, rax	      2434	objcopy.c	FUNCTION_38	IF_2	CALL_4
0x4003d70	      0xbf00000000	                              mov edi, 0	      2434	objcopy.c	FUNCTION_38	IF_2	CALL_4
0x4003d75	      0xb800000000	                              mov eax, 0	      2434	objcopy.c	FUNCTION_38	IF_2	CALL_4
0x4003d7a	      0xe800000000	                          call 0x4003d7f	      2434	objcopy.c	FUNCTION_38	IF_2	CALL_4
0x4003d7f	      0xb800000000	                              mov eax, 0	      2435	objcopy.c	FUNCTION_38	IF_2
0x4003d84	      0xe90f210000	                           jmp 0x4005e98	      2435	objcopy.c	FUNCTION_38	IF_2
0x4003d89	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2438	objcopy.c	FUNCTION_38	IF_3
0x4003d90	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      2438	objcopy.c	FUNCTION_38	IF_3
0x4003d97	          0x4885c0	                           test rax, rax	      2438	objcopy.c	FUNCTION_38	IF_3
0x4003d9a	            0x7536	                           jne 0x4003dd2	      2438	objcopy.c	FUNCTION_38	IF_3
0x4003d9c	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4003da3	          0x4889c7	                            mov rdi, rax	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4003da6	      0xe800000000	                          call 0x4003dab	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4003dab	          0x4889c3	                            mov rbx, rax	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4003dae	      0xbf00000000	                              mov edi, 0	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4003db3	      0xe800000000	                          call 0x4003db8	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4003db8	          0x4889de	                            mov rsi, rbx	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4003dbb	          0x4889c7	                            mov rdi, rax	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4003dbe	      0xb800000000	                              mov eax, 0	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4003dc3	      0xe800000000	                          call 0x4003dc8	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4003dc8	      0xb800000000	                              mov eax, 0	      2442	objcopy.c	FUNCTION_38	IF_3
0x4003dcd	      0xe9c6200000	                           jmp 0x4005e98	      2442	objcopy.c	FUNCTION_38	IF_3
0x4003dd2	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2445	objcopy.c	FUNCTION_38	IF_4
0x4003dd9	        0x488b4008	                mov rax, qword [rax + 8]	      2445	objcopy.c	FUNCTION_38	IF_4
0x4003ddd	          0x8b4008	                mov eax, dword [rax + 8]	      2445	objcopy.c	FUNCTION_38	IF_4
0x4003de0	          0x83f805	                              cmp eax, 5	      2445	objcopy.c	FUNCTION_38	IF_4
0x4003de3	     0xf848e000000	                            je 0x4003e77	      2445	objcopy.c	FUNCTION_38	IF_4
0x4003de9	    0x8b0500000000	            mov eax, dword [0x04003def] 	      2447	objcopy.c	FUNCTION_38	IF_4	IF_5
0x4003def	          0x83e001	                              and eax, 1	      2447	objcopy.c	FUNCTION_38	IF_4	IF_5
0x4003df2	            0x85c0	                           test eax, eax	      2447	objcopy.c	FUNCTION_38	IF_4	IF_5
0x4003df4	            0x7441	                            je 0x4003e37	      2447	objcopy.c	FUNCTION_38	IF_4	IF_5
0x4003df6	    0x8b0500000000	            mov eax, dword [0x04003dfc] 	      2448	objcopy.c	FUNCTION_38	IF_4	IF_5
0x4003dfc	          0x83f801	                              cmp eax, 1	      2448	objcopy.c	FUNCTION_38	IF_4	IF_5
0x4003dff	            0x7436	                            je 0x4003e37	      2448	objcopy.c	FUNCTION_38	IF_4	IF_5
0x4003e01	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4003e08	          0x4889c7	                            mov rdi, rax	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4003e0b	      0xe800000000	                          call 0x4003e10	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4003e10	          0x4889c3	                            mov rbx, rax	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4003e13	      0xbf00000000	                              mov edi, 0	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4003e18	      0xe800000000	                          call 0x4003e1d	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4003e1d	          0x4889de	                            mov rsi, rbx	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4003e20	          0x4889c7	                            mov rdi, rax	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4003e23	      0xb800000000	                              mov eax, 0	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4003e28	      0xe800000000	                          call 0x4003e2d	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4003e2d	      0xb800000000	                              mov eax, 0	      2452	objcopy.c	FUNCTION_38	IF_4	IF_5
0x4003e32	      0xe961200000	                           jmp 0x4005e98	      2452	objcopy.c	FUNCTION_38	IF_4	IF_5
0x4003e37	    0x8b0500000000	            mov eax, dword [0x04003e3d] 	      2455	objcopy.c	FUNCTION_38	IF_4	IF_6
0x4003e3d	            0x85c0	                           test eax, eax	      2455	objcopy.c	FUNCTION_38	IF_4	IF_6
0x4003e3f	            0x7436	                            je 0x4003e77	      2455	objcopy.c	FUNCTION_38	IF_4	IF_6
0x4003e41	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x4003e48	          0x4889c7	                            mov rdi, rax	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x4003e4b	      0xe800000000	                          call 0x4003e50	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x4003e50	          0x4889c3	                            mov rbx, rax	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x4003e53	      0xbf00000000	                              mov edi, 0	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x4003e58	      0xe800000000	                          call 0x4003e5d	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x4003e5d	          0x4889de	                            mov rsi, rbx	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x4003e60	          0x4889c7	                            mov rdi, rax	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x4003e63	      0xb800000000	                              mov eax, 0	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x4003e68	      0xe800000000	                          call 0x4003e6d	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x4003e6d	      0xb800000000	                              mov eax, 0	      2459	objcopy.c	FUNCTION_38	IF_4	IF_6
0x4003e72	      0xe921200000	                           jmp 0x4005e98	      2459	objcopy.c	FUNCTION_38	IF_4	IF_6
0x4003e77	    0x8b0500000000	            mov eax, dword [0x04003e7d] 	      2463	objcopy.c	FUNCTION_38	IF_7
0x4003e7d	            0x85c0	                           test eax, eax	      2463	objcopy.c	FUNCTION_38	IF_7
0x4003e7f	            0x745b	                            je 0x4003edc	      2463	objcopy.c	FUNCTION_38	IF_7
0x4003e81	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2466	objcopy.c	FUNCTION_38	IF_7
0x4003e88	        0x488b4008	                mov rax, qword [rax + 8]	      2466	objcopy.c	FUNCTION_38	IF_7
0x4003e8c	          0x4c8b28	                    mov r13, qword [rax]	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_15
0x4003e8f	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2466	objcopy.c	FUNCTION_38	IF_7
0x4003e96	          0x4c8b20	                    mov r12, qword [rax]	      2466	objcopy.c	FUNCTION_38	IF_7
0x4003e99	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2465	objcopy.c	FUNCTION_38	IF_7	CALL_16
0x4003ea0	        0x488b4008	                mov rax, qword [rax + 8]	      2465	objcopy.c	FUNCTION_38	IF_7	CALL_16
0x4003ea4	          0x488b18	                    mov rbx, qword [rax]	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_15
0x4003ea7	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_15
0x4003eae	          0x4889c7	                            mov rdi, rax	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_15
0x4003eb1	      0xe800000000	                          call 0x4003eb6	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_15
0x4003eb6	          0x4989c6	                            mov r14, rax	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_15
0x4003eb9	      0xbf00000000	                              mov edi, 0	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_15
0x4003ebe	      0xe800000000	                          call 0x4003ec3	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_15
0x4003ec3	          0x4d89e8	                             mov r8, r13	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_15
0x4003ec6	          0x4c89e1	                            mov rcx, r12	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_15
0x4003ec9	          0x4889da	                            mov rdx, rbx	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_15
0x4003ecc	          0x4c89f6	                            mov rsi, r14	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_15
0x4003ecf	          0x4889c7	                            mov rdi, rax	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_15
0x4003ed2	      0xb800000000	                              mov eax, 0	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_15
0x4003ed7	      0xe800000000	                          call 0x4003edc	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_15
0x4003edc	    0x8b0500000000	            mov eax, dword [0x04003ee2] 	      2468	objcopy.c	FUNCTION_38	IF_8
0x4003ee2	            0x85c0	                           test eax, eax	      2468	objcopy.c	FUNCTION_38	IF_8
0x4003ee4	            0x740d	                            je 0x4003ef3	      2468	objcopy.c	FUNCTION_38	IF_8
0x4003ee6	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	      2469	objcopy.c	FUNCTION_38	IF_8
0x4003ef1	            0xeb3d	                           jmp 0x4003f30	      2469	objcopy.c	FUNCTION_38	IF_8
0x4003ef3	    0x8b0500000000	            mov eax, dword [0x04003ef9] 	      2472	objcopy.c	FUNCTION_38	ELSE_1	IF_9
0x4003ef9	            0x85c0	                           test eax, eax	      2472	objcopy.c	FUNCTION_38	ELSE_1	IF_9
0x4003efb	            0x7410	                            je 0x4003f0d	      2472	objcopy.c	FUNCTION_38	ELSE_1	IF_9
0x4003efd	    0x488b05000000	            mov rax, qword [0x04003f04] 	      2473	objcopy.c	FUNCTION_38	ELSE_1	IF_9
0x4003f04	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      2473	objcopy.c	FUNCTION_38	ELSE_1	IF_9
0x4003f0b	            0xeb15	                           jmp 0x4003f22	      2473	objcopy.c	FUNCTION_38	ELSE_1	IF_9
0x4003f0d	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2475	objcopy.c	FUNCTION_38	ELSE_1	ELSE_2
0x4003f14	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      2475	objcopy.c	FUNCTION_38	ELSE_1	ELSE_2
0x4003f1b	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      2475	objcopy.c	FUNCTION_38	ELSE_1	ELSE_2
0x4003f22	    0x488b05000000	            mov rax, qword [0x04003f29] 	      2476	objcopy.c	FUNCTION_38	ELSE_1
0x4003f29	    0x480185b8feff	           add qword [rbp - 0x148], rax 	      2476	objcopy.c	FUNCTION_38	ELSE_1
0x4003f30	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2481	objcopy.c	FUNCTION_38	IF_10
0x4003f37	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      2481	objcopy.c	FUNCTION_38	IF_10
0x4003f3b	          0x83e007	                              and eax, 7	      2481	objcopy.c	FUNCTION_38	IF_10
0x4003f3e	            0x3c03	                               cmp al, 3	      2481	objcopy.c	FUNCTION_38	IF_10
0x4003f40	     0xf84bd000000	                            je 0x4004003	      2481	objcopy.c	FUNCTION_38	IF_10
0x4003f46	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2485	objcopy.c	FUNCTION_38	IF_10
0x4003f4d	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2485	objcopy.c	FUNCTION_38	IF_10
0x4003f50	          0xc1e805	                              shr eax, 5	      2485	objcopy.c	FUNCTION_38	IF_10
0x4003f53	      0x25ffff0f00	                        and eax, 0xfffff	      2485	objcopy.c	FUNCTION_38	IF_10
0x4003f58	    0x898598feffff	            mov dword [rbp - 0x168], eax	      2485	objcopy.c	FUNCTION_38	IF_10
0x4003f5e	    0x8b0500000000	            mov eax, dword [0x04003f64] 	      2486	objcopy.c	FUNCTION_38	IF_10
0x4003f64	     0x98598feffff	             or dword [rbp - 0x168], eax	      2486	objcopy.c	FUNCTION_38	IF_10
0x4003f6a	    0x8b0500000000	            mov eax, dword [0x04003f70] 	      2487	objcopy.c	FUNCTION_38	IF_10
0x4003f70	            0xf7d0	                                 not eax	      2487	objcopy.c	FUNCTION_38	IF_10
0x4003f72	    0x218598feffff	            and dword [rbp - 0x168], eax	      2487	objcopy.c	FUNCTION_38	IF_10
0x4003f78	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2488	objcopy.c	FUNCTION_38	IF_10
0x4003f7f	        0x488b4008	                mov rax, qword [rax + 8]	      2488	objcopy.c	FUNCTION_38	IF_10
0x4003f83	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2488	objcopy.c	FUNCTION_38	IF_10
0x4003f86	    0x218598feffff	            and dword [rbp - 0x168], eax	      2488	objcopy.c	FUNCTION_38	IF_10
0x4003f8c	    0x8b0500000000	            mov eax, dword [0x04003f92] 	      2490	objcopy.c	FUNCTION_38	IF_10	IF_11
0x4003f92	          0x83f807	                              cmp eax, 7	      2490	objcopy.c	FUNCTION_38	IF_10	IF_11
0x4003f95	            0x7507	                           jne 0x4003f9e	      2490	objcopy.c	FUNCTION_38	IF_10	IF_11
0x4003f97	    0x83a598feffff	     and dword [rbp - 0x168], 0xfffffffe	      2491	objcopy.c	FUNCTION_38	IF_10	IF_11
0x4003f9e	    0x488b95b8feff	            mov rdx, qword [rbp - 0x148]	      2493	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_17
0x4003fa5	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2493	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_17
0x4003fac	          0x4889d6	                            mov rsi, rdx	      2493	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_17
0x4003faf	          0x4889c7	                            mov rdi, rax	      2493	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_17
0x4003fb2	      0xe800000000	                          call 0x4003fb7	      2493	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_17
0x4003fb7	            0x85c0	                           test eax, eax	      2493	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_17
0x4003fb9	            0x741b	                            je 0x4003fd6	      2493	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_17
0x4003fbb	    0x8b9598feffff	            mov edx, dword [rbp - 0x168]	      2494	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x4003fc1	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2494	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x4003fc8	            0x89d6	                            mov esi, edx	      2494	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x4003fca	          0x4889c7	                            mov rdi, rax	      2494	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x4003fcd	      0xe800000000	                          call 0x4003fd2	      2494	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x4003fd2	            0x85c0	                           test eax, eax	      2494	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x4003fd4	            0x752d	                           jne 0x4004003	      2494	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x4003fd6	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_19
0x4003fdd	      0xb900000000	                              mov ecx, 0	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_19
0x4003fe2	      0xba00000000	                              mov edx, 0	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_19
0x4003fe7	          0x4889c6	                            mov rsi, rax	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_19
0x4003fea	      0xbf00000000	                              mov edi, 0	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_19
0x4003fef	      0xb800000000	                              mov eax, 0	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_19
0x4003ff4	      0xe800000000	                          call 0x4003ff9	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_19
0x4003ff9	      0xb800000000	                              mov eax, 0	      2497	objcopy.c	FUNCTION_38	IF_10	IF_12
0x4003ffe	      0xe9951e0000	                           jmp 0x4005e98	      2497	objcopy.c	FUNCTION_38	IF_10	IF_12
0x4004003	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2502	objcopy.c	FUNCTION_38	CALL_20
0x400400a	          0x4889c7	                            mov rdi, rax	      2502	objcopy.c	FUNCTION_38	CALL_20
0x400400d	      0xe800000000	                          call 0x4004012	      2502	objcopy.c	FUNCTION_38	CALL_20
0x4004012	    0x89858cfeffff	            mov dword [rbp - 0x174], eax	      2502	objcopy.c	FUNCTION_38	CALL_20
0x4004018	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2503	objcopy.c	FUNCTION_38	CALL_21
0x400401f	          0x4889c7	                            mov rdi, rax	      2503	objcopy.c	FUNCTION_38	CALL_21
0x4004022	      0xe800000000	                          call 0x4004027	      2503	objcopy.c	FUNCTION_38	CALL_21
0x4004027	    0x898590feffff	            mov dword [rbp - 0x170], eax	      2503	objcopy.c	FUNCTION_38	CALL_21
0x400402d	    0x4883bd68feff	              cmp qword [rbp - 0x198], 0	      2504	objcopy.c	FUNCTION_38	IF_13
0x4004035	            0x7479	                            je 0x40040b0	      2504	objcopy.c	FUNCTION_38	IF_13
0x4004037	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2506	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x400403e	          0x4889c7	                            mov rdi, rax	      2506	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4004041	      0xe800000000	                          call 0x4004046	      2506	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4004046	          0x4885c0	                           test rax, rax	      2506	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4004049	            0x7416	                            je 0x4004061	      2506	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x400404b	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2507	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_23
0x4004052	          0x4889c7	                            mov rdi, rax	      2507	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_23
0x4004055	      0xe800000000	                          call 0x400405a	      2507	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_23
0x400405a	          0x8b400c	              mov eax, dword [rax + 0xc]	      2507	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_23
0x400405d	            0x85c0	                           test eax, eax	      2507	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_23
0x400405f	            0x7523	                           jne 0x4004084	      2507	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_23
0x4004061	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      2509	objcopy.c	FUNCTION_38	IF_13	IF_14
0x4004068	          0x8b400c	              mov eax, dword [rax + 0xc]	      2509	objcopy.c	FUNCTION_38	IF_13	IF_14
0x400406b	    0x89858cfeffff	            mov dword [rbp - 0x174], eax	      2509	objcopy.c	FUNCTION_38	IF_13	IF_14
0x4004071	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      2510	objcopy.c	FUNCTION_38	IF_13	IF_14
0x4004078	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2510	objcopy.c	FUNCTION_38	IF_13	IF_14
0x400407c	    0x898590feffff	            mov dword [rbp - 0x170], eax	      2510	objcopy.c	FUNCTION_38	IF_13	IF_14
0x4004082	            0xeb2c	                           jmp 0x40040b0	      2510	objcopy.c	FUNCTION_38	IF_13	IF_14
0x4004084	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_25
0x400408b	          0x4889c7	                            mov rdi, rax	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_25
0x400408e	      0xe800000000	                          call 0x4004093	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_25
0x4004093	          0x4889c3	                            mov rbx, rax	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_25
0x4004096	      0xbf00000000	                              mov edi, 0	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_25
0x400409b	      0xe800000000	                          call 0x40040a0	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_25
0x40040a0	          0x4889de	                            mov rsi, rbx	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_25
0x40040a3	          0x4889c7	                            mov rdi, rax	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_25
0x40040a6	      0xb800000000	                              mov eax, 0	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_25
0x40040ab	      0xe800000000	                          call 0x40040b0	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_25
0x40040b0	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2516	objcopy.c	FUNCTION_38	IF_15
0x40040b7	        0x488b4008	                mov rax, qword [rax + 8]	      2516	objcopy.c	FUNCTION_38	IF_15
0x40040bb	    0x488b80900200	           mov rax, qword [rax + 0x290] 	      2516	objcopy.c	FUNCTION_38	IF_15
0x40040c2	    0x8b9590feffff	            mov edx, dword [rbp - 0x170]	      2516	objcopy.c	FUNCTION_38	IF_15
0x40040c8	    0x8bb58cfeffff	            mov esi, dword [rbp - 0x174]	      2516	objcopy.c	FUNCTION_38	IF_15
0x40040ce	    0x488b8d70feff	            mov rcx, qword [rbp - 0x190]	      2516	objcopy.c	FUNCTION_38	IF_15
0x40040d5	          0x4889cf	                            mov rdi, rcx	      2516	objcopy.c	FUNCTION_38	IF_15
0x40040d8	            0xffd0	                                call rax	      2516	objcopy.c	FUNCTION_38	IF_15
0x40040da	            0x85c0	                           test eax, eax	      2516	objcopy.c	FUNCTION_38	IF_15
0x40040dc	     0xf85cd000000	                           jne 0x40041af	      2516	objcopy.c	FUNCTION_38	IF_15
0x40040e2	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2517	objcopy.c	FUNCTION_38	IF_15
0x40040e9	         0xfb64047	           movzx eax, byte [rax + 0x47] 	      2517	objcopy.c	FUNCTION_38	IF_15
0x40040ed	          0x83e004	                              and eax, 4	      2517	objcopy.c	FUNCTION_38	IF_15
0x40040f0	            0x84c0	                             test al, al	      2517	objcopy.c	FUNCTION_38	IF_15
0x40040f2	            0x7528	                           jne 0x400411c	      2517	objcopy.c	FUNCTION_38	IF_15
0x40040f4	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_28
0x40040fb	          0x4889c7	                            mov rdi, rax	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_28
0x40040fe	      0xe800000000	                          call 0x4004103	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_28
0x4004103	            0x89c3	                            mov ebx, eax	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_28
0x4004105	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_28
0x400410c	          0x4889c7	                            mov rdi, rax	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_28
0x400410f	      0xe800000000	                          call 0x4004114	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_28
0x4004114	            0x39c3	                            cmp ebx, eax	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_28
0x4004116	     0xf8493000000	                            je 0x40041af	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_28
0x400411c	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2520	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_29
0x4004123	          0x4889c7	                            mov rdi, rax	      2520	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_29
0x4004126	      0xe800000000	                          call 0x400412b	      2520	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_29
0x400412b	            0x85c0	                           test eax, eax	      2520	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_29
0x400412d	            0x752e	                           jne 0x400415d	      2520	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_29
0x400412f	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_31
0x4004136	          0x4889c7	                            mov rdi, rax	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_31
0x4004139	      0xe800000000	                          call 0x400413e	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_31
0x400413e	          0x4889c3	                            mov rbx, rax	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_31
0x4004141	      0xbf00000000	                              mov edi, 0	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_31
0x4004146	      0xe800000000	                          call 0x400414b	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_31
0x400414b	          0x4889de	                            mov rsi, rbx	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_31
0x400414e	          0x4889c7	                            mov rdi, rax	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_31
0x4004151	      0xb800000000	                              mov eax, 0	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_31
0x4004156	      0xe800000000	                          call 0x400415b	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_31
0x400415b	            0xeb48	                           jmp 0x40041a5	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_31
0x400415d	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_34
0x4004164	          0x4889c7	                            mov rdi, rax	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_34
0x4004167	      0xe800000000	                          call 0x400416c	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_34
0x400416c	          0x4889c3	                            mov rbx, rax	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_34
0x400416f	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_34
0x4004176	          0x4889c7	                            mov rdi, rax	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_34
0x4004179	      0xe800000000	                          call 0x400417e	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_34
0x400417e	          0x4889de	                            mov rsi, rbx	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_34
0x4004181	            0x89c7	                            mov edi, eax	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_34
0x4004183	      0xe800000000	                          call 0x4004188	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_34
0x4004188	          0x4889c3	                            mov rbx, rax	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_34
0x400418b	      0xbf00000000	                              mov edi, 0	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_34
0x4004190	      0xe800000000	                          call 0x4004195	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_34
0x4004195	          0x4889de	                            mov rsi, rbx	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_34
0x4004198	          0x4889c7	                            mov rdi, rax	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_34
0x400419b	      0xb800000000	                              mov eax, 0	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_34
0x40041a0	      0xe800000000	                          call 0x40041a5	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_34
0x40041a5	      0xb800000000	                              mov eax, 0	      2527	objcopy.c	FUNCTION_38	IF_15
0x40041aa	      0xe9e91c0000	                           jmp 0x4005e98	      2527	objcopy.c	FUNCTION_38	IF_15
0x40041af	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_38
0x40041b6	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_38
0x40041ba	          0x83e007	                              and eax, 7	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_38
0x40041bd	           0xfb6d0	                           movzx edx, al	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_38
0x40041c0	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_38
0x40041c7	            0x89d6	                            mov esi, edx	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_38
0x40041c9	          0x4889c7	                            mov rdi, rax	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_38
0x40041cc	      0xe800000000	                          call 0x40041d1	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_38
0x40041d1	            0x85c0	                           test eax, eax	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_38
0x40041d3	            0x752d	                           jne 0x4004202	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_38
0x40041d5	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2532	objcopy.c	FUNCTION_38	IF_17	CALL_39
0x40041dc	      0xb900000000	                              mov ecx, 0	      2532	objcopy.c	FUNCTION_38	IF_17	CALL_39
0x40041e1	      0xba00000000	                              mov edx, 0	      2532	objcopy.c	FUNCTION_38	IF_17	CALL_39
0x40041e6	          0x4889c6	                            mov rsi, rax	      2532	objcopy.c	FUNCTION_38	IF_17	CALL_39
0x40041e9	      0xbf00000000	                              mov edi, 0	      2532	objcopy.c	FUNCTION_38	IF_17	CALL_39
0x40041ee	      0xb800000000	                              mov eax, 0	      2532	objcopy.c	FUNCTION_38	IF_17	CALL_39
0x40041f3	      0xe800000000	                          call 0x40041f8	      2532	objcopy.c	FUNCTION_38	IF_17	CALL_39
0x40041f8	      0xb800000000	                              mov eax, 0	      2533	objcopy.c	FUNCTION_38	IF_17
0x40041fd	      0xe9961c0000	                           jmp 0x4005e98	      2533	objcopy.c	FUNCTION_38	IF_17
0x4004202	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2536	objcopy.c	FUNCTION_38	IF_18
0x4004209	        0x488b4008	                mov rax, qword [rax + 8]	      2536	objcopy.c	FUNCTION_38	IF_18
0x400420d	          0x8b4008	                mov eax, dword [rax + 8]	      2536	objcopy.c	FUNCTION_38	IF_18
0x4004210	          0x83f802	                              cmp eax, 2	      2536	objcopy.c	FUNCTION_38	IF_18
0x4004213	     0xf8584020000	                           jne 0x400449d	      2536	objcopy.c	FUNCTION_38	IF_18
0x4004219	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_40
0x4004220	        0x488b4008	                mov rax, qword [rax + 8]	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_40
0x4004224	          0x488b00	                    mov rax, qword [rax]	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_40
0x4004227	      0xba04000000	                              mov edx, 4	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_40
0x400422c	      0xbe00000000	                              mov esi, 0	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_40
0x4004231	          0x4889c7	                            mov rdi, rax	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_40
0x4004234	      0xe800000000	                          call 0x4004239	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_40
0x4004239	            0x85c0	                           test eax, eax	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_40
0x400423b	     0xf855c020000	                           jne 0x400449d	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_40
0x4004241	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2540	objcopy.c	FUNCTION_38	IF_18	CALL_41
0x4004248	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2540	objcopy.c	FUNCTION_38	IF_18	CALL_41
0x400424f	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2540	objcopy.c	FUNCTION_38	IF_18	CALL_41
0x4004256	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2543	objcopy.c	FUNCTION_38	IF_18	IF_19
0x400425d	        0x488b4008	                mov rax, qword [rax + 8]	      2543	objcopy.c	FUNCTION_38	IF_18	IF_19
0x4004261	          0x8b4008	                mov eax, dword [rax + 8]	      2543	objcopy.c	FUNCTION_38	IF_18	IF_19
0x4004264	          0x83f802	                              cmp eax, 2	      2543	objcopy.c	FUNCTION_38	IF_18	IF_19
0x4004267	            0x7554	                           jne 0x40042bd	      2543	objcopy.c	FUNCTION_38	IF_18	IF_19
0x4004269	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2544	objcopy.c	FUNCTION_38	IF_18	IF_19	CALL_42
0x4004270	        0x488b4008	                mov rax, qword [rax + 8]	      2544	objcopy.c	FUNCTION_38	IF_18	IF_19	CALL_42
0x4004274	          0x488b00	                    mov rax, qword [rax]	      2544	objcopy.c	FUNCTION_38	IF_18	IF_19	CALL_42
0x4004277	      0xba04000000	                              mov edx, 4	      2544	objcopy.c	FUNCTION_38	IF_18	IF_19	CALL_42
0x400427c	      0xbe00000000	                              mov esi, 0	      2544	objcopy.c	FUNCTION_38	IF_18	IF_19	CALL_42
0x4004281	          0x4889c7	                            mov rdi, rax	      2544	objcopy.c	FUNCTION_38	IF_18	IF_19	CALL_42
0x4004284	      0xe800000000	                          call 0x4004289	      2544	objcopy.c	FUNCTION_38	IF_18	IF_19	CALL_42
0x4004289	            0x85c0	                           test eax, eax	      2544	objcopy.c	FUNCTION_38	IF_18	IF_19	CALL_42
0x400428b	            0x7530	                           jne 0x40042bd	      2544	objcopy.c	FUNCTION_38	IF_18	IF_19	CALL_42
0x400428d	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2545	objcopy.c	FUNCTION_38	IF_18	CALL_43
0x4004294	    0x488b90f80000	            mov rdx, qword [rax + 0xf8] 	      2545	objcopy.c	FUNCTION_38	IF_18	CALL_43
0x400429b	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2545	objcopy.c	FUNCTION_38	IF_18	CALL_43
0x40042a2	    0x4805c8000000	                           add rax, 0xc8	      2545	objcopy.c	FUNCTION_38	IF_18	CALL_43
0x40042a8	    0x4881c2c80000	                           add rdx, 0xc8	      2545	objcopy.c	FUNCTION_38	IF_18	CALL_43
0x40042af	      0xb937000000	                           mov ecx, 0x37	      2545	objcopy.c	FUNCTION_38	IF_18	CALL_43
0x40042b4	          0x4889c7	                            mov rdi, rax	      2545	objcopy.c	FUNCTION_38	IF_18	CALL_43
0x40042b7	          0x4889d6	                            mov rsi, rdx	      2545	objcopy.c	FUNCTION_38	IF_18	CALL_43
0x40042ba	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      2545	objcopy.c	FUNCTION_38	IF_18	CALL_43
0x40042bd	    0x488b05000000	            mov rax, qword [0x040042c4] 	      2547	objcopy.c	FUNCTION_38	IF_18	IF_20
0x40042c4	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2547	objcopy.c	FUNCTION_38	IF_18	IF_20
0x40042c8	            0x7417	                            je 0x40042e1	      2547	objcopy.c	FUNCTION_38	IF_18	IF_20
0x40042ca	    0x488b15000000	            mov rdx, qword [0x040042d1] 	      2548	objcopy.c	FUNCTION_38	IF_18	IF_20
0x40042d1	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2548	objcopy.c	FUNCTION_38	IF_18	IF_20
0x40042d8	    0x488990100100	            mov qword [rax + 0x110], rdx	      2548	objcopy.c	FUNCTION_38	IF_18	IF_20
0x40042df	            0xeb0b	                           jmp 0x40042ec	      2548	objcopy.c	FUNCTION_38	IF_18	IF_20
0x40042e1	    0x48c705000000	          mov qword [0x040042ec], 0x200 	      2550	objcopy.c	FUNCTION_38	IF_18	ELSE_5
0x40042ec	    0x488b05000000	            mov rax, qword [0x040042f3] 	      2552	objcopy.c	FUNCTION_38	IF_18	IF_21
0x40042f3	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2552	objcopy.c	FUNCTION_38	IF_18	IF_21
0x40042f7	            0x7415	                            je 0x400430e	      2552	objcopy.c	FUNCTION_38	IF_18	IF_21
0x40042f9	    0x488b15000000	            mov rdx, qword [0x04004300] 	      2553	objcopy.c	FUNCTION_38	IF_18	IF_21
0x4004300	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2553	objcopy.c	FUNCTION_38	IF_18	IF_21
0x4004307	    0x488990680100	            mov qword [rax + 0x168], rdx	      2553	objcopy.c	FUNCTION_38	IF_18	IF_21
0x400430e	    0x488b05000000	            mov rax, qword [0x04004315] 	      2555	objcopy.c	FUNCTION_38	IF_18	IF_22
0x4004315	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2555	objcopy.c	FUNCTION_38	IF_18	IF_22
0x4004319	            0x7415	                            je 0x4004330	      2555	objcopy.c	FUNCTION_38	IF_18	IF_22
0x400431b	    0x488b15000000	            mov rdx, qword [0x04004322] 	      2556	objcopy.c	FUNCTION_38	IF_18	IF_22
0x4004322	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2556	objcopy.c	FUNCTION_38	IF_18	IF_22
0x4004329	    0x488990680100	            mov qword [rax + 0x168], rdx	      2556	objcopy.c	FUNCTION_38	IF_18	IF_22
0x4004330	    0x488b05000000	            mov rax, qword [0x04004337] 	      2558	objcopy.c	FUNCTION_38	IF_18	IF_23
0x4004337	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2558	objcopy.c	FUNCTION_38	IF_18	IF_23
0x400433b	            0x7415	                            je 0x4004352	      2558	objcopy.c	FUNCTION_38	IF_18	IF_23
0x400433d	    0x488b15000000	            mov rdx, qword [0x04004344] 	      2559	objcopy.c	FUNCTION_38	IF_18	IF_23
0x4004344	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2559	objcopy.c	FUNCTION_38	IF_18	IF_23
0x400434b	    0x488990000100	            mov qword [rax + 0x100], rdx	      2559	objcopy.c	FUNCTION_38	IF_18	IF_23
0x4004352	    0x488b05000000	            mov rax, qword [0x04004359] 	      2561	objcopy.c	FUNCTION_38	IF_18	IF_24
0x4004359	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2561	objcopy.c	FUNCTION_38	IF_18	IF_24
0x400435d	            0x7417	                            je 0x4004376	      2561	objcopy.c	FUNCTION_38	IF_18	IF_24
0x400435f	    0x488b15000000	            mov rdx, qword [0x04004366] 	      2562	objcopy.c	FUNCTION_38	IF_18	IF_24
0x4004366	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2562	objcopy.c	FUNCTION_38	IF_18	IF_24
0x400436d	    0x488990080100	            mov qword [rax + 0x108], rdx	      2562	objcopy.c	FUNCTION_38	IF_18	IF_24
0x4004374	            0xeb0b	                           jmp 0x4004381	      2562	objcopy.c	FUNCTION_38	IF_18	IF_24
0x4004376	    0x48c705000000	         mov qword [0x04004381], 0x1000 	      2564	objcopy.c	FUNCTION_38	IF_18	ELSE_6
0x4004381	    0x488b05000000	            mov rax, qword [0x04004388] 	      2566	objcopy.c	FUNCTION_38	IF_18	IF_25
0x4004388	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2566	objcopy.c	FUNCTION_38	IF_18	IF_25
0x400438c	            0x7415	                            je 0x40043a3	      2566	objcopy.c	FUNCTION_38	IF_18	IF_25
0x400438e	    0x488b15000000	            mov rdx, qword [0x04004395] 	      2567	objcopy.c	FUNCTION_38	IF_18	IF_25
0x4004395	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2567	objcopy.c	FUNCTION_38	IF_18	IF_25
0x400439c	    0x488990580100	            mov qword [rax + 0x158], rdx	      2567	objcopy.c	FUNCTION_38	IF_18	IF_25
0x40043a3	    0x488b05000000	            mov rax, qword [0x040043aa] 	      2569	objcopy.c	FUNCTION_38	IF_18	IF_26
0x40043aa	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2569	objcopy.c	FUNCTION_38	IF_18	IF_26
0x40043ae	            0x7415	                            je 0x40043c5	      2569	objcopy.c	FUNCTION_38	IF_18	IF_26
0x40043b0	    0x488b15000000	            mov rdx, qword [0x040043b7] 	      2570	objcopy.c	FUNCTION_38	IF_18	IF_26
0x40043b7	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2570	objcopy.c	FUNCTION_38	IF_18	IF_26
0x40043be	    0x488990580100	            mov qword [rax + 0x158], rdx	      2570	objcopy.c	FUNCTION_38	IF_18	IF_26
0x40043c5	     0xfb705000000	           movzx eax, word [0x040043cc] 	      2572	objcopy.c	FUNCTION_38	IF_18	IF_27
0x40043cc	        0x6683f8ff	              cmp ax, 0xffffffffffffffff	      2572	objcopy.c	FUNCTION_38	IF_18	IF_27
0x40043d0	            0x7415	                            je 0x40043e7	      2572	objcopy.c	FUNCTION_38	IF_18	IF_27
0x40043d2	     0xfb715000000	           movzx edx, word [0x040043d9] 	      2573	objcopy.c	FUNCTION_38	IF_18	IF_27
0x40043d9	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2573	objcopy.c	FUNCTION_38	IF_18	IF_27
0x40043e0	    0x668990480100	              mov word [rax + 0x148], dx	      2573	objcopy.c	FUNCTION_38	IF_18	IF_27
0x40043e7	     0xfb705000000	           movzx eax, word [0x040043ee] 	      2575	objcopy.c	FUNCTION_38	IF_18	IF_28
0x40043ee	        0x6683f8ff	              cmp ax, 0xffffffffffffffff	      2575	objcopy.c	FUNCTION_38	IF_18	IF_28
0x40043f2	            0x7415	                            je 0x4004409	      2575	objcopy.c	FUNCTION_38	IF_18	IF_28
0x40043f4	     0xfb715000000	           movzx edx, word [0x040043fb] 	      2576	objcopy.c	FUNCTION_38	IF_18	IF_28
0x40043fb	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2576	objcopy.c	FUNCTION_38	IF_18	IF_28
0x4004402	    0x668990200100	              mov word [rax + 0x120], dx	      2576	objcopy.c	FUNCTION_38	IF_18	IF_28
0x4004409	     0xfb705000000	           movzx eax, word [0x04004410] 	      2578	objcopy.c	FUNCTION_38	IF_18	IF_29
0x4004410	        0x6683f8ff	              cmp ax, 0xffffffffffffffff	      2578	objcopy.c	FUNCTION_38	IF_18	IF_29
0x4004414	            0x7415	                            je 0x400442b	      2578	objcopy.c	FUNCTION_38	IF_18	IF_29
0x4004416	     0xfb715000000	           movzx edx, word [0x0400441d] 	      2579	objcopy.c	FUNCTION_38	IF_18	IF_29
0x400441d	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2579	objcopy.c	FUNCTION_38	IF_18	IF_29
0x4004424	    0x668990220100	              mov word [rax + 0x122], dx	      2579	objcopy.c	FUNCTION_38	IF_18	IF_29
0x400442b	    0x488b15000000	            mov rdx, qword [0x04004432] 	      2581	objcopy.c	FUNCTION_38	IF_18	IF_30
0x4004432	    0x488b05000000	            mov rax, qword [0x04004439] 	      2581	objcopy.c	FUNCTION_38	IF_18	IF_30
0x4004439	          0x4839c2	                            cmp rdx, rax	      2581	objcopy.c	FUNCTION_38	IF_18	IF_30
0x400443c	            0x765f	                           jbe 0x400449d	      2581	objcopy.c	FUNCTION_38	IF_18	IF_30
0x400443e	    0x488b15000000	            mov rdx, qword [0x04004445] 	      2585	objcopy.c	FUNCTION_38	IF_18	IF_30
0x4004445	        0x488d45a0	                   lea rax, [rbp - 0x60]	      2585	objcopy.c	FUNCTION_38	IF_18	IF_30
0x4004449	      0xbe00000000	                              mov esi, 0	      2585	objcopy.c	FUNCTION_38	IF_18	IF_30
0x400444e	          0x4889c7	                            mov rdi, rax	      2585	objcopy.c	FUNCTION_38	IF_18	IF_30
0x4004451	      0xb800000000	                              mov eax, 0	      2585	objcopy.c	FUNCTION_38	IF_18	IF_30
0x4004456	      0xe800000000	                          call 0x400445b	      2585	objcopy.c	FUNCTION_38	IF_18	IF_30
0x400445b	    0x488b15000000	            mov rdx, qword [0x04004462] 	      2586	objcopy.c	FUNCTION_38	IF_18	IF_30
0x4004462	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2586	objcopy.c	FUNCTION_38	IF_18	IF_30
0x4004466	      0xbe00000000	                              mov esi, 0	      2586	objcopy.c	FUNCTION_38	IF_18	IF_30
0x400446b	          0x4889c7	                            mov rdi, rax	      2586	objcopy.c	FUNCTION_38	IF_18	IF_30
0x400446e	      0xb800000000	                              mov eax, 0	      2586	objcopy.c	FUNCTION_38	IF_18	IF_30
0x4004473	      0xe800000000	                          call 0x4004478	      2586	objcopy.c	FUNCTION_38	IF_18	IF_30
0x4004478	      0xbf00000000	                              mov edi, 0	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_45
0x400447d	      0xe800000000	                          call 0x4004482	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_45
0x4004482	          0x4889c1	                            mov rcx, rax	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_45
0x4004485	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_45
0x4004489	        0x488d45a0	                   lea rax, [rbp - 0x60]	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_45
0x400448d	          0x4889c6	                            mov rsi, rax	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_45
0x4004490	          0x4889cf	                            mov rdi, rcx	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_45
0x4004493	      0xb800000000	                              mov eax, 0	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_45
0x4004498	      0xe800000000	                          call 0x400449d	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_45
0x400449d	    0x488b05000000	            mov rax, qword [0x040044a4] 	      2593	objcopy.c	FUNCTION_38	IF_31
0x40044a4	          0x4885c0	                           test rax, rax	      2593	objcopy.c	FUNCTION_38	IF_31
0x40044a7	            0x740f	                            je 0x40044b8	      2593	objcopy.c	FUNCTION_38	IF_31
0x40044a9	    0x488b05000000	            mov rax, qword [0x040044b0] 	      2594	objcopy.c	FUNCTION_38	CALL_46
0x40044b0	          0x4889c7	                            mov rdi, rax	      2594	objcopy.c	FUNCTION_38	CALL_46
0x40044b3	      0xe800000000	                          call 0x40044b8	      2594	objcopy.c	FUNCTION_38	CALL_46
0x40044b8	    0x488b15000000	            mov rdx, qword [0x040044bf] 	      2596	objcopy.c	FUNCTION_38	IF_32
0x40044bf	    0x488b05000000	            mov rax, qword [0x040044c6] 	      2596	objcopy.c	FUNCTION_38	IF_32
0x40044c6	          0x4839c2	                            cmp rdx, rax	      2596	objcopy.c	FUNCTION_38	IF_32
0x40044c9	            0x740f	                            je 0x40044da	      2596	objcopy.c	FUNCTION_38	IF_32
0x40044cb	    0x488b05000000	            mov rax, qword [0x040044d2] 	      2597	objcopy.c	FUNCTION_38	CALL_47
0x40044d2	          0x4889c7	                            mov rdi, rax	      2597	objcopy.c	FUNCTION_38	CALL_47
0x40044d5	      0xe800000000	                          call 0x40044da	      2597	objcopy.c	FUNCTION_38	CALL_47
0x40044da	    0x48c705000000	               mov qword [0x040044e5], 0	      2599	objcopy.c	FUNCTION_38
0x40044e5	    0x48c705000000	               mov qword [0x040044f0], 0	      2600	objcopy.c	FUNCTION_38
0x40044f0	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2602	objcopy.c	FUNCTION_38
0x40044f7	        0x488b4008	                mov rax, qword [rax + 8]	      2602	objcopy.c	FUNCTION_38
0x40044fb	    0x488b80f00100	           mov rax, qword [rax + 0x1f0] 	      2602	objcopy.c	FUNCTION_38
0x4004502	    0x488b9578feff	            mov rdx, qword [rbp - 0x188]	      2602	objcopy.c	FUNCTION_38
0x4004509	          0x4889d7	                            mov rdi, rdx	      2602	objcopy.c	FUNCTION_38
0x400450c	            0xffd0	                                call rax	      2602	objcopy.c	FUNCTION_38
0x400450e	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2602	objcopy.c	FUNCTION_38
0x4004515	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      2603	objcopy.c	FUNCTION_38	IF_33
0x400451d	            0x792d	                           jns 0x400454c	      2603	objcopy.c	FUNCTION_38	IF_33
0x400451f	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2605	objcopy.c	FUNCTION_38	IF_33	CALL_48
0x4004526	      0xb900000000	                              mov ecx, 0	      2605	objcopy.c	FUNCTION_38	IF_33	CALL_48
0x400452b	      0xba00000000	                              mov edx, 0	      2605	objcopy.c	FUNCTION_38	IF_33	CALL_48
0x4004530	          0x4889c6	                            mov rsi, rax	      2605	objcopy.c	FUNCTION_38	IF_33	CALL_48
0x4004533	      0xbf00000000	                              mov edi, 0	      2605	objcopy.c	FUNCTION_38	IF_33	CALL_48
0x4004538	      0xb800000000	                              mov eax, 0	      2605	objcopy.c	FUNCTION_38	IF_33	CALL_48
0x400453d	      0xe800000000	                          call 0x4004542	      2605	objcopy.c	FUNCTION_38	IF_33	CALL_48
0x4004542	      0xb800000000	                              mov eax, 0	      2606	objcopy.c	FUNCTION_38	IF_33
0x4004547	      0xe94c190000	                           jmp 0x4005e98	      2606	objcopy.c	FUNCTION_38	IF_33
0x400454c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2609	objcopy.c	FUNCTION_38	CALL_49
0x4004553	          0x4889c7	                            mov rdi, rax	      2609	objcopy.c	FUNCTION_38	CALL_49
0x4004556	      0xe800000000	                          call 0x400455b	      2609	objcopy.c	FUNCTION_38	CALL_49
0x400455b	    0x488905000000	            mov qword [0x04004562], rax 	      2609	objcopy.c	FUNCTION_38	CALL_49
0x4004562	    0x488b05000000	            mov rax, qword [0x04004569] 	      2609	objcopy.c	FUNCTION_38	CALL_49
0x4004569	    0x488905000000	            mov qword [0x04004570], rax 	      2609	objcopy.c	FUNCTION_38	CALL_49
0x4004570	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2610	objcopy.c	FUNCTION_38
0x4004577	        0x488b4008	                mov rax, qword [rax + 8]	      2610	objcopy.c	FUNCTION_38
0x400457b	    0x488b80f80100	           mov rax, qword [rax + 0x1f8] 	      2610	objcopy.c	FUNCTION_38
0x4004582	    0x488b0d000000	            mov rcx, qword [0x04004589] 	      2610	objcopy.c	FUNCTION_38
0x4004589	    0x488b9578feff	            mov rdx, qword [rbp - 0x188]	      2610	objcopy.c	FUNCTION_38
0x4004590	          0x4889ce	                            mov rsi, rcx	      2610	objcopy.c	FUNCTION_38
0x4004593	          0x4889d7	                            mov rdi, rdx	      2610	objcopy.c	FUNCTION_38
0x4004596	            0xffd0	                                call rax	      2610	objcopy.c	FUNCTION_38
0x4004598	    0x488985a8feff	            mov qword [rbp - 0x158], rax	      2610	objcopy.c	FUNCTION_38
0x400459f	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      2611	objcopy.c	FUNCTION_38	IF_34
0x40045a6	          0x4885c0	                           test rax, rax	      2611	objcopy.c	FUNCTION_38	IF_34
0x40045a9	            0x792d	                           jns 0x40045d8	      2611	objcopy.c	FUNCTION_38	IF_34
0x40045ab	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2613	objcopy.c	FUNCTION_38	IF_34	CALL_50
0x40045b2	      0xb900000000	                              mov ecx, 0	      2613	objcopy.c	FUNCTION_38	IF_34	CALL_50
0x40045b7	      0xba00000000	                              mov edx, 0	      2613	objcopy.c	FUNCTION_38	IF_34	CALL_50
0x40045bc	          0x4889c6	                            mov rsi, rax	      2613	objcopy.c	FUNCTION_38	IF_34	CALL_50
0x40045bf	      0xbf00000000	                              mov edi, 0	      2613	objcopy.c	FUNCTION_38	IF_34	CALL_50
0x40045c4	      0xb800000000	                              mov eax, 0	      2613	objcopy.c	FUNCTION_38	IF_34	CALL_50
0x40045c9	      0xe800000000	                          call 0x40045ce	      2613	objcopy.c	FUNCTION_38	IF_34	CALL_50
0x40045ce	      0xb800000000	                              mov eax, 0	      2614	objcopy.c	FUNCTION_38	IF_34
0x40045d3	      0xe9c0180000	                           jmp 0x4005e98	      2614	objcopy.c	FUNCTION_38	IF_34
0x40045d8	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      2619	objcopy.c	FUNCTION_38	IF_35
0x40045df	          0x4885c0	                           test rax, rax	      2619	objcopy.c	FUNCTION_38	IF_35
0x40045e2	            0x7528	                           jne 0x400460c	      2619	objcopy.c	FUNCTION_38	IF_35
0x40045e4	    0x488b05000000	            mov rax, qword [0x040045eb] 	      2621	objcopy.c	FUNCTION_38	IF_35	CALL_51
0x40045eb	          0x4889c7	                            mov rdi, rax	      2621	objcopy.c	FUNCTION_38	IF_35	CALL_51
0x40045ee	      0xe800000000	                          call 0x40045f3	      2621	objcopy.c	FUNCTION_38	IF_35	CALL_51
0x40045f3	    0x48c705000000	               mov qword [0x040045fe], 0	      2622	objcopy.c	FUNCTION_38	IF_35
0x40045fe	    0x488b05000000	            mov rax, qword [0x04004605] 	      2622	objcopy.c	FUNCTION_38	IF_35
0x4004605	    0x488905000000	            mov qword [0x0400460c], rax 	      2622	objcopy.c	FUNCTION_38	IF_35
0x400460c	    0x488b9570feff	            mov rdx, qword [rbp - 0x190]	      2627	objcopy.c	FUNCTION_38	CALL_52
0x4004613	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2627	objcopy.c	FUNCTION_38	CALL_52
0x400461a	      0xbe00000000	                              mov esi, 0	      2627	objcopy.c	FUNCTION_38	CALL_52
0x400461f	          0x4889c7	                            mov rdi, rax	      2627	objcopy.c	FUNCTION_38	CALL_52
0x4004622	      0xe800000000	                          call 0x4004627	      2627	objcopy.c	FUNCTION_38	CALL_52
0x4004627	    0x8b0500000000	            mov eax, dword [0x0400462d] 	      2629	objcopy.c	FUNCTION_38	IF_36
0x400462d	            0x85c0	                           test eax, eax	      2629	objcopy.c	FUNCTION_38	IF_36
0x400462f	            0x7519	                           jne 0x400464a	      2629	objcopy.c	FUNCTION_38	IF_36
0x4004631	    0x488b9570feff	            mov rdx, qword [rbp - 0x190]	      2630	objcopy.c	FUNCTION_38	CALL_53
0x4004638	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2630	objcopy.c	FUNCTION_38	CALL_53
0x400463f	          0x4889d6	                            mov rsi, rdx	      2630	objcopy.c	FUNCTION_38	CALL_53
0x4004642	          0x4889c7	                            mov rdi, rax	      2630	objcopy.c	FUNCTION_38	CALL_53
0x4004645	      0xe8af270000	              call sym.setup_bfd_headers	      2630	objcopy.c	FUNCTION_38	CALL_53
0x400464a	    0x488b05000000	            mov rax, qword [0x04004651] 	      2632	objcopy.c	FUNCTION_38	IF_37
0x4004651	          0x4885c0	                           test rax, rax	      2632	objcopy.c	FUNCTION_38	IF_37
0x4004654	     0xf840b030000	                            je 0x4004965	      2632	objcopy.c	FUNCTION_38	IF_37
0x400465a	    0x488b05000000	            mov rax, qword [0x04004661] 	      2637	objcopy.c	FUNCTION_38	IF_37	FOR_1
0x4004661	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      2637	objcopy.c	FUNCTION_38	IF_37	FOR_1
0x4004668	      0xe9ea020000	                           jmp 0x4004957	      2637	objcopy.c	FUNCTION_38	IF_37	FOR_1
0x400466d	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2641	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_54
0x4004674	        0x488b4008	                mov rax, qword [rax + 8]	      2641	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_54
0x4004678	      0xba40000000	                           mov edx, 0x40	      2641	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_54
0x400467d	      0xbe00000000	                              mov esi, 0	      2641	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_54
0x4004682	          0x4889c7	                            mov rdi, rax	      2641	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_54
0x4004685	      0xe8dfc2ffff	              call sym.find_section_list	      2641	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_54
0x400468a	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2641	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_54
0x4004691	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      2643	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_38
0x4004699	            0x7415	                            je 0x40046b0	      2643	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_38
0x400469b	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2644	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_38
0x40046a2	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2644	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_38
0x40046a5	          0x80cc01	                                or ah, 1	      2644	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_38
0x40046a8	    0x89859cfeffff	            mov dword [rbp - 0x164], eax	      2644	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_38
0x40046ae	            0xeb0a	                           jmp 0x40046ba	      2644	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_38
0x40046b0	    0xc7859cfeffff	         mov dword [rbp - 0x164], 0x128 	      2646	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7
0x40046ba	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_55
0x40046c1	        0x488b5008	                mov rdx, qword [rax + 8]	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_55
0x40046c5	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_55
0x40046cc	          0x4889d6	                            mov rsi, rdx	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_55
0x40046cf	          0x4889c7	                            mov rdi, rax	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_55
0x40046d2	      0xe800000000	                          call 0x40046d7	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_55
0x40046d7	          0x4885c0	                           test rax, rax	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_55
0x40046da	            0x7446	                            je 0x4004722	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_55
0x40046dc	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2652	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_56
0x40046e3	        0x488b5808	                mov rbx, qword [rax + 8]	      2652	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_56
0x40046e7	      0xbf00000000	                              mov edi, 0	      2653	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_57
0x40046ec	      0xe800000000	                          call 0x40046f1	      2653	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_57
0x40046f1	          0x4889c2	                            mov rdx, rax	      2653	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_57
0x40046f4	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2652	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_56
0x40046fb	          0x4989d8	                             mov r8, rbx	      2652	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_56
0x40046fe	          0x4889d1	                            mov rcx, rdx	      2652	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_56
0x4004701	      0xba00000000	                              mov edx, 0	      2652	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_56
0x4004706	          0x4889c6	                            mov rsi, rax	      2652	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_56
0x4004709	      0xbf00000000	                              mov edi, 0	      2652	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_56
0x400470e	      0xb800000000	                              mov eax, 0	      2652	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_56
0x4004713	      0xe800000000	                          call 0x4004718	      2652	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_56
0x4004718	      0xb800000000	                              mov eax, 0	      2654	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39
0x400471d	      0xe976170000	                           jmp 0x4005e98	      2654	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39
0x4004722	    0x8b859cfeffff	            mov eax, dword [rbp - 0x164]	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_58
0x4004728	       0xd00001000	                        or eax, 0x100000	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_58
0x400472d	            0x89c2	                            mov edx, eax	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_58
0x400472f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_58
0x4004736	        0x488b4808	                mov rcx, qword [rax + 8]	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_58
0x400473a	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_58
0x4004741	          0x4889ce	                            mov rsi, rcx	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_58
0x4004744	          0x4889c7	                            mov rdi, rax	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_58
0x4004747	      0xe800000000	                          call 0x400474c	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_58
0x400474c	          0x4889c2	                            mov rdx, rax	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_58
0x400474f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_58
0x4004756	        0x48895028	             mov qword [rax + 0x28], rdx	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_58
0x400475a	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2664	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40
0x4004761	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2664	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40
0x4004765	          0x4885c0	                           test rax, rax	      2664	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40
0x4004768	            0x7546	                           jne 0x40047b0	      2664	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40
0x400476a	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2666	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40	CALL_59
0x4004771	        0x488b5808	                mov rbx, qword [rax + 8]	      2666	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40	CALL_59
0x4004775	      0xbf00000000	                              mov edi, 0	      2667	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40	CALL_60
0x400477a	      0xe800000000	                          call 0x400477f	      2667	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40	CALL_60
0x400477f	          0x4889c2	                            mov rdx, rax	      2667	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40	CALL_60
0x4004782	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2666	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40	CALL_59
0x4004789	          0x4989d8	                             mov r8, rbx	      2666	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40	CALL_59
0x400478c	          0x4889d1	                            mov rcx, rdx	      2666	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40	CALL_59
0x400478f	      0xba00000000	                              mov edx, 0	      2666	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40	CALL_59
0x4004794	          0x4889c6	                            mov rsi, rax	      2666	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40	CALL_59
0x4004797	      0xbf00000000	                              mov edi, 0	      2666	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40	CALL_59
0x400479c	      0xb800000000	                              mov eax, 0	      2666	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40	CALL_59
0x40047a1	      0xe800000000	                          call 0x40047a6	      2666	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40	CALL_59
0x40047a6	      0xb800000000	                              mov eax, 0	      2669	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40
0x40047ab	      0xe9e8160000	                           jmp 0x4005e98	      2669	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40
0x40047b0	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_61
0x40047b7	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_61
0x40047bb	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_61
0x40047c2	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_61
0x40047c6	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_61
0x40047cd	          0x4889ce	                            mov rsi, rcx	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_61
0x40047d0	          0x4889c7	                            mov rdi, rax	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_61
0x40047d3	      0xe800000000	                          call 0x40047d8	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_61
0x40047d8	            0x85c0	                           test eax, eax	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_61
0x40047da	            0x7533	                           jne 0x400480f	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_61
0x40047dc	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2675	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_62
0x40047e3	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2675	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_62
0x40047e7	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2675	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_62
0x40047ee	      0xb900000000	                              mov ecx, 0	      2675	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_62
0x40047f3	          0x4889c6	                            mov rsi, rax	      2675	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_62
0x40047f6	      0xbf00000000	                              mov edi, 0	      2675	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_62
0x40047fb	      0xb800000000	                              mov eax, 0	      2675	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_62
0x4004800	      0xe800000000	                          call 0x4004805	      2675	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_62
0x4004805	      0xb800000000	                              mov eax, 0	      2676	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41
0x400480a	      0xe989160000	                           jmp 0x4005e98	      2676	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41
0x400480f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2679	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_63
0x4004816	        0x488b4008	                mov rax, qword [rax + 8]	      2679	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_63
0x400481a	      0xba0c000000	                            mov edx, 0xc	      2679	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_63
0x400481f	      0xbe00000000	                              mov esi, 0	      2679	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_63
0x4004824	          0x4889c7	                            mov rdi, rax	      2679	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_63
0x4004827	      0xe83dc1ffff	              call sym.find_section_list	      2679	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_63
0x400482c	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2679	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_63
0x4004833	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      2681	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42
0x400483b	            0x745f	                            je 0x400489c	      2681	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42
0x400483d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2682	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_64
0x4004844	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2682	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_64
0x4004848	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2682	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_64
0x400484f	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      2682	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_64
0x4004853	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2682	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_64
0x400485a	          0x4889ce	                            mov rsi, rcx	      2682	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_64
0x400485d	          0x4889c7	                            mov rdi, rax	      2682	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_64
0x4004860	      0xe8dbb7ffff	            call sym.bfd_set_section_vma	      2682	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_64
0x4004865	            0x85c0	                           test eax, eax	      2682	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_64
0x4004867	            0x7533	                           jne 0x400489c	      2682	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_64
0x4004869	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2684	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_65
0x4004870	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2684	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_65
0x4004874	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2684	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_65
0x400487b	      0xb900000000	                              mov ecx, 0	      2684	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_65
0x4004880	          0x4889c6	                            mov rsi, rax	      2684	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_65
0x4004883	      0xbf00000000	                              mov edi, 0	      2684	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_65
0x4004888	      0xb800000000	                              mov eax, 0	      2684	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_65
0x400488d	      0xe800000000	                          call 0x4004892	      2684	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_65
0x4004892	      0xb800000000	                              mov eax, 0	      2685	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42
0x4004897	      0xe9fc150000	                           jmp 0x4005e98	      2685	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42
0x400489c	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2688	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_66
0x40048a3	        0x488b4008	                mov rax, qword [rax + 8]	      2688	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_66
0x40048a7	      0xba30000000	                           mov edx, 0x30	      2688	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_66
0x40048ac	      0xbe00000000	                              mov esi, 0	      2688	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_66
0x40048b1	          0x4889c7	                            mov rdi, rax	      2688	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_66
0x40048b4	      0xe8b0c0ffff	              call sym.find_section_list	      2688	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_66
0x40048b9	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2688	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_66
0x40048c0	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      2690	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43
0x40048c8	            0x747c	                            je 0x4004946	      2690	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43
0x40048ca	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2692	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43
0x40048d1	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2692	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43
0x40048d5	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      2692	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43
0x40048dc	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2692	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43
0x40048e0	        0x48895030	             mov qword [rax + 0x30], rdx	      2692	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43
0x40048e4	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2696	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44
0x40048eb	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2696	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44
0x40048ef	          0x8b5070	            mov edx, dword [rax + 0x70] 	      2694	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44	CALL_67
0x40048f2	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2694	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44	CALL_67
0x40048f9	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      2694	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44	CALL_67
0x40048fd	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2694	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44	CALL_67
0x4004904	          0x4889ce	                            mov rsi, rcx	      2694	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44	CALL_67
0x4004907	          0x4889c7	                            mov rdi, rax	      2694	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44	CALL_67
0x400490a	      0xe872b7ffff	      call sym.bfd_set_section_alignment	      2694	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44	CALL_67
0x400490f	            0x85c0	                           test eax, eax	      2694	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44	CALL_67
0x4004911	            0x7533	                           jne 0x4004946	      2694	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44	CALL_67
0x4004913	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2698	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44	CALL_68
0x400491a	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2698	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44	CALL_68
0x400491e	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2698	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44	CALL_68
0x4004925	      0xb900000000	                              mov ecx, 0	      2698	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44	CALL_68
0x400492a	          0x4889c6	                            mov rsi, rax	      2698	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44	CALL_68
0x400492d	      0xbf00000000	                              mov edi, 0	      2698	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44	CALL_68
0x4004932	      0xb800000000	                              mov eax, 0	      2698	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44	CALL_68
0x4004937	      0xe800000000	                          call 0x400493c	      2698	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44	CALL_68
0x400493c	      0xb800000000	                              mov eax, 0	      2699	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44
0x4004941	      0xe952150000	                           jmp 0x4005e98	      2699	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43	IF_44
0x4004946	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      2637	objcopy.c	FUNCTION_38	IF_37	FOR_1
0x400494d	          0x488b00	                    mov rax, qword [rax]	      2637	objcopy.c	FUNCTION_38	IF_37	FOR_1
0x4004950	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      2637	objcopy.c	FUNCTION_38	IF_37	FOR_1
0x4004957	    0x4883bdf0feff	              cmp qword [rbp - 0x110], 0	      2637	objcopy.c	FUNCTION_38	IF_37	FOR_1
0x400495f	     0xf8508fdffff	                           jne 0x400466d	      2637	objcopy.c	FUNCTION_38	IF_37	FOR_1
0x4004965	    0x488b05000000	            mov rax, qword [0x0400496c] 	      2705	objcopy.c	FUNCTION_38	IF_45
0x400496c	          0x4885c0	                           test rax, rax	      2705	objcopy.c	FUNCTION_38	IF_45
0x400496f	     0xf8409010000	                            je 0x4004a7e	      2705	objcopy.c	FUNCTION_38	IF_45
0x4004975	    0x488b05000000	            mov rax, qword [0x0400497c] 	      2709	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x400497c	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      2709	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x4004983	      0xe9e8000000	                           jmp 0x4004a70	      2709	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x4004988	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2713	objcopy.c	FUNCTION_38	IF_45	FOR_2	CALL_69
0x400498f	        0x488b5008	                mov rdx, qword [rax + 8]	      2713	objcopy.c	FUNCTION_38	IF_45	FOR_2	CALL_69
0x4004993	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2713	objcopy.c	FUNCTION_38	IF_45	FOR_2	CALL_69
0x400499a	          0x4889d6	                            mov rsi, rdx	      2713	objcopy.c	FUNCTION_38	IF_45	FOR_2	CALL_69
0x400499d	          0x4889c7	                            mov rdi, rax	      2713	objcopy.c	FUNCTION_38	IF_45	FOR_2	CALL_69
0x40049a0	      0xe800000000	                          call 0x40049a5	      2713	objcopy.c	FUNCTION_38	IF_45	FOR_2	CALL_69
0x40049a5	          0x4889c2	                            mov rdx, rax	      2713	objcopy.c	FUNCTION_38	IF_45	FOR_2	CALL_69
0x40049a8	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2713	objcopy.c	FUNCTION_38	IF_45	FOR_2	CALL_69
0x40049af	        0x48895028	             mov qword [rax + 0x28], rdx	      2713	objcopy.c	FUNCTION_38	IF_45	FOR_2	CALL_69
0x40049b3	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2714	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46
0x40049ba	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2714	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46
0x40049be	          0x4885c0	                           test rax, rax	      2714	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46
0x40049c1	            0x752f	                           jne 0x40049f2	      2714	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46
0x40049c3	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2716	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46	CALL_71
0x40049ca	        0x488b5808	                mov rbx, qword [rax + 8]	      2716	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46	CALL_71
0x40049ce	      0xbf00000000	                              mov edi, 0	      2716	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46	CALL_71
0x40049d3	      0xe800000000	                          call 0x40049d8	      2716	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46	CALL_71
0x40049d8	          0x4889de	                            mov rsi, rbx	      2716	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46	CALL_71
0x40049db	          0x4889c7	                            mov rdi, rax	      2716	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46	CALL_71
0x40049de	      0xb800000000	                              mov eax, 0	      2716	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46	CALL_71
0x40049e3	      0xe800000000	                          call 0x40049e8	      2716	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46	CALL_71
0x40049e8	      0xb800000000	                              mov eax, 0	      2717	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46
0x40049ed	      0xe9a6140000	                           jmp 0x4005e98	      2717	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46
0x40049f2	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2720	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x40049f9	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2720	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x40049fd	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2720	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x4004a01	    0x488985c8feff	            mov qword [rbp - 0x138], rax	      2720	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x4004a08	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_72
0x4004a0f	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_72
0x4004a13	    0x488b8dc8feff	            mov rcx, qword [rbp - 0x138]	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_72
0x4004a1a	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_72
0x4004a21	          0x4889ce	                            mov rsi, rcx	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_72
0x4004a24	          0x4889c7	                            mov rdi, rax	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_72
0x4004a27	      0xe800000000	                          call 0x4004a2c	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_72
0x4004a2c	            0x85c0	                           test eax, eax	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_72
0x4004a2e	            0x752f	                           jne 0x4004a5f	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_72
0x4004a30	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      2723	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_73
0x4004a37	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2723	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_73
0x4004a3e	      0xb900000000	                              mov ecx, 0	      2723	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_73
0x4004a43	          0x4889c6	                            mov rsi, rax	      2723	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_73
0x4004a46	      0xbf00000000	                              mov edi, 0	      2723	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_73
0x4004a4b	      0xb800000000	                              mov eax, 0	      2723	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_73
0x4004a50	      0xe800000000	                          call 0x4004a55	      2723	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_73
0x4004a55	      0xb800000000	                              mov eax, 0	      2724	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47
0x4004a5a	      0xe939140000	                           jmp 0x4005e98	      2724	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47
0x4004a5f	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2711	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x4004a66	          0x488b00	                    mov rax, qword [rax]	      2711	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x4004a69	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      2711	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x4004a70	    0x4883bdf8feff	              cmp qword [rbp - 0x108], 0	      2709	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x4004a78	     0xf850affffff	                           jne 0x4004988	      2709	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x4004a7e	    0x8b0500000000	            mov eax, dword [0x04004a84] 	      2729	objcopy.c	FUNCTION_38	IF_48
0x4004a84	            0x85c0	                           test eax, eax	      2729	objcopy.c	FUNCTION_38	IF_48
0x4004a86	     0xf841d020000	                            je 0x4004ca9	      2729	objcopy.c	FUNCTION_38	IF_48
0x4004a8c	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2733	objcopy.c	FUNCTION_38	IF_48	CALL_74
0x4004a93	      0xbe00000000	                              mov esi, 0	      2733	objcopy.c	FUNCTION_38	IF_48	CALL_74
0x4004a98	          0x4889c7	                            mov rdi, rax	      2733	objcopy.c	FUNCTION_38	IF_48	CALL_74
0x4004a9b	      0xe800000000	                          call 0x4004aa0	      2733	objcopy.c	FUNCTION_38	IF_48	CALL_74
0x4004aa0	    0x488985c8feff	            mov qword [rbp - 0x138], rax	      2733	objcopy.c	FUNCTION_38	IF_48	CALL_74
0x4004aa7	    0x4883bdc8feff	              cmp qword [rbp - 0x138], 0	      2734	objcopy.c	FUNCTION_38	IF_48	IF_49	CALL_75
0x4004aaf	     0xf84f4010000	                            je 0x4004ca9	      2734	objcopy.c	FUNCTION_38	IF_48	IF_49	CALL_75
0x4004ab5	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      2734	objcopy.c	FUNCTION_38	IF_48	IF_49	CALL_75
0x4004abc	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2734	objcopy.c	FUNCTION_38	IF_48	IF_49	CALL_75
0x4004ac3	          0x4889d6	                            mov rsi, rdx	      2734	objcopy.c	FUNCTION_38	IF_48	IF_49	CALL_75
0x4004ac6	          0x4889c7	                            mov rdi, rax	      2734	objcopy.c	FUNCTION_38	IF_48	IF_49	CALL_75
0x4004ac9	      0xe8d3c8ffff	         call sym.is_merged_note_section	      2734	objcopy.c	FUNCTION_38	IF_48	IF_49	CALL_75
0x4004ace	            0x85c0	                           test eax, eax	      2734	objcopy.c	FUNCTION_38	IF_48	IF_49	CALL_75
0x4004ad0	     0xf84d3010000	                            je 0x4004ca9	      2734	objcopy.c	FUNCTION_38	IF_48	IF_49	CALL_75
0x4004ad6	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2738	objcopy.c	FUNCTION_38	IF_48	IF_49
0x4004add	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2738	objcopy.c	FUNCTION_38	IF_48	IF_49
0x4004ae1	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2738	objcopy.c	FUNCTION_38	IF_48	IF_49
0x4004ae8	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      2739	objcopy.c	FUNCTION_38	IF_48	IF_49	IF_50
0x4004af0	            0x753c	                           jne 0x4004b2e	      2739	objcopy.c	FUNCTION_38	IF_48	IF_49	IF_50
0x4004af2	      0xbf00000000	                              mov edi, 0	      2741	objcopy.c	FUNCTION_38	IF_48	IF_49	IF_50	CALL_77
0x4004af7	      0xe800000000	                          call 0x4004afc	      2741	objcopy.c	FUNCTION_38	IF_48	IF_49	IF_50	CALL_77
0x4004afc	          0x4889c1	                            mov rcx, rax	      2741	objcopy.c	FUNCTION_38	IF_48	IF_49	IF_50	CALL_77
0x4004aff	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      2741	objcopy.c	FUNCTION_38	IF_48	IF_49	IF_50	CALL_77
0x4004b06	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2741	objcopy.c	FUNCTION_38	IF_48	IF_49	IF_50	CALL_77
0x4004b0d	          0x4889c6	                            mov rsi, rax	      2741	objcopy.c	FUNCTION_38	IF_48	IF_49	IF_50	CALL_77
0x4004b10	      0xbf00000000	                              mov edi, 0	      2741	objcopy.c	FUNCTION_38	IF_48	IF_49	IF_50	CALL_77
0x4004b15	      0xb800000000	                              mov eax, 0	      2741	objcopy.c	FUNCTION_38	IF_48	IF_49	IF_50	CALL_77
0x4004b1a	      0xe800000000	                          call 0x4004b1f	      2741	objcopy.c	FUNCTION_38	IF_48	IF_49	IF_50	CALL_77
0x4004b1f	    0xc70500000000	               mov dword [0x04004b29], 0	      2742	objcopy.c	FUNCTION_38	IF_48	IF_49	IF_50
0x4004b29	      0xe97b010000	                           jmp 0x4004ca9	      2742	objcopy.c	FUNCTION_38	IF_48	IF_49	IF_50
0x4004b2e	    0x488b8dc8feff	            mov rcx, qword [rbp - 0x138]	      2744	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_78
0x4004b35	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2744	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_78
0x4004b3c	      0xba00000000	                              mov edx, 0	      2744	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_78
0x4004b41	          0x4889ce	                            mov rsi, rcx	      2744	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_78
0x4004b44	          0x4889c7	                            mov rdi, rax	      2744	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_78
0x4004b47	      0xe800000000	                          call 0x4004b4c	      2744	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_78
0x4004b4c	            0x85c0	                           test eax, eax	      2744	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_78
0x4004b4e	            0x7556	                           jne 0x4004ba6	      2744	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_78
0x4004b50	      0xbf00000000	                              mov edi, 0	      2746	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_80
0x4004b55	      0xe800000000	                          call 0x4004b5a	      2746	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_80
0x4004b5a	          0x4889c1	                            mov rcx, rax	      2746	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_80
0x4004b5d	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      2746	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_80
0x4004b64	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2746	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_80
0x4004b6b	          0x4889c6	                            mov rsi, rax	      2746	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_80
0x4004b6e	      0xbf00000000	                              mov edi, 0	      2746	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_80
0x4004b73	      0xb800000000	                              mov eax, 0	      2746	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_80
0x4004b78	      0xe800000000	                          call 0x4004b7d	      2746	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_80
0x4004b7d	    0x488b05000000	            mov rax, qword [0x04004b84] 	      2747	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_81
0x4004b84	          0x4889c7	                            mov rdi, rax	      2747	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_81
0x4004b87	      0xe800000000	                          call 0x4004b8c	      2747	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51	CALL_81
0x4004b8c	    0x48c705000000	               mov qword [0x04004b97], 0	      2748	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51
0x4004b97	    0xc70500000000	               mov dword [0x04004ba1], 0	      2749	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51
0x4004ba1	      0xe903010000	                           jmp 0x4004ca9	      2749	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_9	IF_51
0x4004ba6	    0x488b0d000000	            mov rcx, qword [0x04004bad] 	      2753	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	CALL_82
0x4004bad	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2753	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	CALL_82
0x4004bb4	    0x488bb5c8feff	            mov rsi, qword [rbp - 0x138]	      2753	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	CALL_82
0x4004bbb	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2753	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	CALL_82
0x4004bc2	          0x4889c7	                            mov rdi, rax	      2753	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	CALL_82
0x4004bc5	      0xe80ae0ffff	          call sym.merge_gnu_build_notes	      2753	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	CALL_82
0x4004bca	    0x488905000000	            mov qword [0x04004bd1], rax 	      2753	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	CALL_82
0x4004bd1	    0x488b05000000	            mov rax, qword [0x04004bd8] 	      2754	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	IF_52
0x4004bd8	    0x483b8558ffff	             cmp rax, qword [rbp - 0xa8]	      2754	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	IF_52
0x4004bdf	            0x7534	                           jne 0x4004c15	      2754	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	IF_52
0x4004be1	    0x488b05000000	            mov rax, qword [0x04004be8] 	      2757	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	IF_52	CALL_83
0x4004be8	          0x4889c7	                            mov rdi, rax	      2757	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	IF_52	CALL_83
0x4004beb	      0xe800000000	                          call 0x4004bf0	      2757	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	IF_52	CALL_83
0x4004bf0	    0x48c705000000	               mov qword [0x04004bfb], 0	      2758	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	IF_52
0x4004bfb	    0xc70500000000	               mov dword [0x04004c05], 0	      2759	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	IF_52
0x4004c05	    0x48c705000000	               mov qword [0x04004c10], 0	      2760	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	IF_52
0x4004c10	      0xe994000000	                           jmp 0x4004ca9	      2760	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	IF_52
0x4004c15	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2764	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53
0x4004c1c	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2764	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53
0x4004c20	          0x4885c0	                           test rax, rax	      2764	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53
0x4004c23	            0x7428	                            je 0x4004c4d	      2764	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53
0x4004c25	    0x488b15000000	            mov rdx, qword [0x04004c2c] 	      2765	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_84
0x4004c2c	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2765	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_84
0x4004c33	        0x488b4868	            mov rcx, qword [rax + 0x68] 	      2765	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_84
0x4004c37	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2765	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_84
0x4004c3e	          0x4889ce	                            mov rsi, rcx	      2765	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_84
0x4004c41	          0x4889c7	                            mov rdi, rax	      2765	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_84
0x4004c44	      0xe800000000	                          call 0x4004c49	      2765	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_84
0x4004c49	            0x85c0	                           test eax, eax	      2765	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_84
0x4004c4b	            0x755c	                           jne 0x4004ca9	      2765	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_84
0x4004c4d	      0xbf00000000	                              mov edi, 0	      2767	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_86
0x4004c52	      0xe800000000	                          call 0x4004c57	      2767	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_86
0x4004c57	          0x4889c1	                            mov rcx, rax	      2767	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_86
0x4004c5a	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      2767	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_86
0x4004c61	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2767	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_86
0x4004c68	          0x4889c6	                            mov rsi, rax	      2767	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_86
0x4004c6b	      0xbf00000000	                              mov edi, 0	      2767	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_86
0x4004c70	      0xb800000000	                              mov eax, 0	      2767	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_86
0x4004c75	      0xe800000000	                          call 0x4004c7a	      2767	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_86
0x4004c7a	    0x488b05000000	            mov rax, qword [0x04004c81] 	      2768	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_87
0x4004c81	          0x4889c7	                            mov rdi, rax	      2768	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_87
0x4004c84	      0xe800000000	                          call 0x4004c89	      2768	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53	CALL_87
0x4004c89	    0x48c705000000	               mov qword [0x04004c94], 0	      2769	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53
0x4004c94	    0xc70500000000	               mov dword [0x04004c9e], 0	      2770	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53
0x4004c9e	    0x48c705000000	               mov qword [0x04004ca9], 0	      2771	objcopy.c	FUNCTION_38	IF_48	IF_49	ELSE_10	ELSE_11	IF_53
0x4004ca9	    0x488b05000000	            mov rax, qword [0x04004cb0] 	      2778	objcopy.c	FUNCTION_38	IF_54
0x4004cb0	          0x4885c0	                           test rax, rax	      2778	objcopy.c	FUNCTION_38	IF_54
0x4004cb3	     0xf8480020000	                            je 0x4004f39	      2778	objcopy.c	FUNCTION_38	IF_54
0x4004cb9	    0x488b05000000	            mov rax, qword [0x04004cc0] 	      2782	objcopy.c	FUNCTION_38	IF_54	FOR_3
0x4004cc0	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      2782	objcopy.c	FUNCTION_38	IF_54	FOR_3
0x4004cc7	      0xe95f020000	                           jmp 0x4004f2b	      2782	objcopy.c	FUNCTION_38	IF_54	FOR_3
0x4004ccc	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2784	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_88
0x4004cd3	        0x488b5008	                mov rdx, qword [rax + 8]	      2784	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_88
0x4004cd7	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2784	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_88
0x4004cde	          0x4889d6	                            mov rsi, rdx	      2784	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_88
0x4004ce1	          0x4889c7	                            mov rdi, rax	      2784	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_88
0x4004ce4	      0xe800000000	                          call 0x4004ce9	      2784	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_88
0x4004ce9	    0x488985c8feff	            mov qword [rbp - 0x138], rax	      2784	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_88
0x4004cf0	    0x4883bdc8feff	              cmp qword [rbp - 0x138], 0	      2785	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55
0x4004cf8	            0x7541	                           jne 0x4004d3b	      2785	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55
0x4004cfa	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2787	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55	CALL_89
0x4004d01	        0x488b5808	                mov rbx, qword [rax + 8]	      2787	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55	CALL_89
0x4004d05	      0xbf00000000	                              mov edi, 0	      2788	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55	CALL_90
0x4004d0a	      0xe800000000	                          call 0x4004d0f	      2788	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55	CALL_90
0x4004d0f	          0x4889c2	                            mov rdx, rax	      2788	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55	CALL_90
0x4004d12	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2787	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55	CALL_89
0x4004d19	          0x4989d8	                             mov r8, rbx	      2787	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55	CALL_89
0x4004d1c	          0x4889d1	                            mov rcx, rdx	      2787	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55	CALL_89
0x4004d1f	      0xba00000000	                              mov edx, 0	      2787	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55	CALL_89
0x4004d24	          0x4889c6	                            mov rsi, rax	      2787	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55	CALL_89
0x4004d27	      0xbf00000000	                              mov edi, 0	      2787	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55	CALL_89
0x4004d2c	      0xb800000000	                              mov eax, 0	      2787	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55	CALL_89
0x4004d31	      0xe800000000	                          call 0x4004d36	      2787	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55	CALL_89
0x4004d36	      0xe9df010000	                           jmp 0x4004f1a	      2790	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55
0x4004d3b	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2793	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56
0x4004d42	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2793	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56
0x4004d45	      0x2500010000	                          and eax, 0x100	      2793	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56
0x4004d4a	            0x85c0	                           test eax, eax	      2793	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56
0x4004d4c	            0x7532	                           jne 0x4004d80	      2793	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56
0x4004d4e	      0xbf00000000	                              mov edi, 0	      2796	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56	CALL_92
0x4004d53	      0xe800000000	                          call 0x4004d58	      2796	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56	CALL_92
0x4004d58	          0x4889c1	                            mov rcx, rax	      2796	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56	CALL_92
0x4004d5b	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      2795	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56	CALL_91
0x4004d62	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2795	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56	CALL_91
0x4004d69	          0x4889c6	                            mov rsi, rax	      2795	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56	CALL_91
0x4004d6c	      0xbf00000000	                              mov edi, 0	      2795	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56	CALL_91
0x4004d71	      0xb800000000	                              mov eax, 0	      2795	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56	CALL_91
0x4004d76	      0xe800000000	                          call 0x4004d7b	      2795	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56	CALL_91
0x4004d7b	      0xe99a010000	                           jmp 0x4004f1a	      2797	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56
0x4004d80	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2800	objcopy.c	FUNCTION_38	IF_54	FOR_3
0x4004d87	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2800	objcopy.c	FUNCTION_38	IF_54	FOR_3
0x4004d8b	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2800	objcopy.c	FUNCTION_38	IF_54	FOR_3
0x4004d92	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      2801	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57
0x4004d9a	            0x7532	                           jne 0x4004dce	      2801	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57
0x4004d9c	      0xbf00000000	                              mov edi, 0	      2804	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_94
0x4004da1	      0xe800000000	                          call 0x4004da6	      2804	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_94
0x4004da6	          0x4889c1	                            mov rcx, rax	      2804	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_94
0x4004da9	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      2803	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_93
0x4004db0	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2803	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_93
0x4004db7	          0x4889c6	                            mov rsi, rax	      2803	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_93
0x4004dba	      0xbf00000000	                              mov edi, 0	      2803	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_93
0x4004dbf	      0xb800000000	                              mov eax, 0	      2803	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_93
0x4004dc4	      0xe800000000	                          call 0x4004dc9	      2803	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_93
0x4004dc9	      0xe94c010000	                           jmp 0x4004f1a	      2805	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57
0x4004dce	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2809	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_95
0x4004dd5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2809	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_95
0x4004dd9	      0xbe00000000	                              mov esi, 0	      2809	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_95
0x4004dde	          0x4889c7	                            mov rdi, rax	      2809	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_95
0x4004de1	      0xe800000000	                          call 0x4004de6	      2809	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_95
0x4004de6	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2809	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_95
0x4004ded	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      2810	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_58
0x4004df5	            0x7537	                           jne 0x4004e2e	      2810	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_58
0x4004df7	      0xbf00000000	                              mov edi, 0	      2813	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_58	CALL_97
0x4004dfc	      0xe800000000	                          call 0x4004e01	      2813	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_58	CALL_97
0x4004e01	          0x4889c2	                            mov rdx, rax	      2813	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_58	CALL_97
0x4004e04	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2812	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_58	CALL_96
0x4004e0b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2812	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_58	CALL_96
0x4004e0f	          0x4889d1	                            mov rcx, rdx	      2812	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_58	CALL_96
0x4004e12	      0xba00000000	                              mov edx, 0	      2812	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_58	CALL_96
0x4004e17	      0xbe00000000	                              mov esi, 0	      2812	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_58	CALL_96
0x4004e1c	          0x4889c7	                            mov rdi, rax	      2812	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_58	CALL_96
0x4004e1f	      0xb800000000	                              mov eax, 0	      2812	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_58	CALL_96
0x4004e24	      0xe800000000	                          call 0x4004e29	      2812	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_58	CALL_96
0x4004e29	      0xe9ec000000	                           jmp 0x4004f1a	      2814	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_58
0x4004e2e	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	      2818	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	CALL_98
0x4004e35	    0x488b8dc8feff	            mov rcx, qword [rbp - 0x138]	      2818	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	CALL_98
0x4004e3c	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2818	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	CALL_98
0x4004e43	          0x4889ce	                            mov rsi, rcx	      2818	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	CALL_98
0x4004e46	          0x4889c7	                            mov rdi, rax	      2818	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	CALL_98
0x4004e49	      0xe800000000	                          call 0x4004e4e	      2818	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	CALL_98
0x4004e4e	            0x85c0	                           test eax, eax	      2818	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	CALL_98
0x4004e50	            0x747d	                            je 0x4004ecf	      2818	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	CALL_98
0x4004e52	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      2820	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_99
0x4004e59	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	      2820	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_99
0x4004e60	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2820	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_99
0x4004e67	      0xbe01000000	                              mov esi, 1	      2820	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_99
0x4004e6c	          0x4889c7	                            mov rdi, rax	      2820	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_99
0x4004e6f	      0xe800000000	                          call 0x4004e74	      2820	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_99
0x4004e74	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      2820	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_99
0x4004e7b	            0x747f	                            je 0x4004efc	      2820	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_99
0x4004e7d	      0xe800000000	                          call 0x4004e82	      2824	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_102
0x4004e82	            0x8b00	                    mov eax, dword [rax]	      2822	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_101
0x4004e84	            0x89c7	                            mov edi, eax	      2822	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_101
0x4004e86	      0xe800000000	                          call 0x4004e8b	      2822	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_101
0x4004e8b	          0x4989c4	                            mov r12, rax	      2822	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_101
0x4004e8e	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2822	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_101
0x4004e95	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      2822	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_101
0x4004e99	      0xbf00000000	                              mov edi, 0	      2822	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_101
0x4004e9e	      0xe800000000	                          call 0x4004ea3	      2822	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_101
0x4004ea3	          0x4c89e2	                            mov rdx, r12	      2822	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_101
0x4004ea6	          0x4889de	                            mov rsi, rbx	      2822	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_101
0x4004ea9	          0x4889c7	                            mov rdi, rax	      2822	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_101
0x4004eac	      0xb800000000	                              mov eax, 0	      2822	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_101
0x4004eb1	      0xe800000000	                          call 0x4004eb6	      2822	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_101
0x4004eb6	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      2825	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_103
0x4004ebd	          0x4889c7	                            mov rdi, rax	      2825	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_103
0x4004ec0	      0xe800000000	                          call 0x4004ec5	      2825	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_103
0x4004ec5	      0xb800000000	                              mov eax, 0	      2826	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60
0x4004eca	      0xe9c90f0000	                           jmp 0x4005e98	      2826	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60
0x4004ecf	      0xbf00000000	                              mov edi, 0	      2831	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_105
0x4004ed4	      0xe800000000	                          call 0x4004ed9	      2831	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_105
0x4004ed9	          0x4889c1	                            mov rcx, rax	      2831	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_105
0x4004edc	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      2830	objcopy.c	FUNCTION_38	IF_54	FOR_3	ELSE_12	CALL_104
0x4004ee3	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2830	objcopy.c	FUNCTION_38	IF_54	FOR_3	ELSE_12	CALL_104
0x4004eea	          0x4889c6	                            mov rsi, rax	      2830	objcopy.c	FUNCTION_38	IF_54	FOR_3	ELSE_12	CALL_104
0x4004eed	      0xbf00000000	                              mov edi, 0	      2830	objcopy.c	FUNCTION_38	IF_54	FOR_3	ELSE_12	CALL_104
0x4004ef2	      0xb800000000	                              mov eax, 0	      2830	objcopy.c	FUNCTION_38	IF_54	FOR_3	ELSE_12	CALL_104
0x4004ef7	      0xe800000000	                          call 0x4004efc	      2830	objcopy.c	FUNCTION_38	IF_54	FOR_3	ELSE_12	CALL_104
0x4004efc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2833	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_106
0x4004f03	          0x4889c7	                            mov rdi, rax	      2833	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_106
0x4004f06	      0xe800000000	                          call 0x4004f0b	      2833	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_106
0x4004f0b	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      2834	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_107
0x4004f12	          0x4889c7	                            mov rdi, rax	      2834	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_107
0x4004f15	      0xe800000000	                          call 0x4004f1a	      2834	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_107
0x4004f1a	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2782	objcopy.c	FUNCTION_38	IF_54	FOR_3
0x4004f21	          0x488b00	                    mov rax, qword [rax]	      2782	objcopy.c	FUNCTION_38	IF_54	FOR_3
0x4004f24	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      2782	objcopy.c	FUNCTION_38	IF_54	FOR_3
0x4004f2b	    0x4883bd00ffff	              cmp qword [rbp - 0x100], 0	      2782	objcopy.c	FUNCTION_38	IF_54	FOR_3
0x4004f33	     0xf8593fdffff	                           jne 0x4004ccc	      2782	objcopy.c	FUNCTION_38	IF_54	FOR_3
0x4004f39	    0x488b05000000	            mov rax, qword [0x04004f40] 	      2838	objcopy.c	FUNCTION_38	IF_61
0x4004f40	          0x4885c0	                           test rax, rax	      2838	objcopy.c	FUNCTION_38	IF_61
0x4004f43	     0xf84fb010000	                            je 0x4005144	      2838	objcopy.c	FUNCTION_38	IF_61
0x4004f49	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2843	objcopy.c	FUNCTION_38	IF_61	IF_62	CALL_108
0x4004f50	      0xbe00000000	                              mov esi, 0	      2843	objcopy.c	FUNCTION_38	IF_61	IF_62	CALL_108
0x4004f55	          0x4889c7	                            mov rdi, rax	      2843	objcopy.c	FUNCTION_38	IF_61	IF_62	CALL_108
0x4004f58	      0xe800000000	                          call 0x4004f5d	      2843	objcopy.c	FUNCTION_38	IF_61	IF_62	CALL_108
0x4004f5d	          0x4885c0	                           test rax, rax	      2843	objcopy.c	FUNCTION_38	IF_61	IF_62	CALL_108
0x4004f60	            0x7434	                            je 0x4004f96	      2843	objcopy.c	FUNCTION_38	IF_61	IF_62	CALL_108
0x4004f62	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2846	objcopy.c	FUNCTION_38	IF_61	IF_62
0x4004f69	          0x488b18	                    mov rbx, qword [rax]	      2846	objcopy.c	FUNCTION_38	IF_61	IF_62
0x4004f6c	      0xbf00000000	                              mov edi, 0	      2845	objcopy.c	FUNCTION_38	IF_61	IF_62	CALL_110
0x4004f71	      0xe800000000	                          call 0x4004f76	      2845	objcopy.c	FUNCTION_38	IF_61	IF_62	CALL_110
0x4004f76	          0x4889de	                            mov rsi, rbx	      2845	objcopy.c	FUNCTION_38	IF_61	IF_62	CALL_110
0x4004f79	          0x4889c7	                            mov rdi, rax	      2845	objcopy.c	FUNCTION_38	IF_61	IF_62	CALL_110
0x4004f7c	      0xb800000000	                              mov eax, 0	      2845	objcopy.c	FUNCTION_38	IF_61	IF_62	CALL_110
0x4004f81	      0xe800000000	                          call 0x4004f86	      2845	objcopy.c	FUNCTION_38	IF_61	IF_62	CALL_110
0x4004f86	    0x48c705000000	               mov qword [0x04004f91], 0	      2847	objcopy.c	FUNCTION_38	IF_61	IF_62
0x4004f91	      0xe9ae010000	                           jmp 0x4005144	      2847	objcopy.c	FUNCTION_38	IF_61	IF_62
0x4004f96	    0x488b15000000	            mov rdx, qword [0x04004f9d] 	      2851	objcopy.c	FUNCTION_38	IF_61	ELSE_13	CALL_111
0x4004f9d	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2851	objcopy.c	FUNCTION_38	IF_61	ELSE_13	CALL_111
0x4004fa4	          0x4889d6	                            mov rsi, rdx	      2851	objcopy.c	FUNCTION_38	IF_61	ELSE_13	CALL_111
0x4004fa7	          0x4889c7	                            mov rdi, rax	      2851	objcopy.c	FUNCTION_38	IF_61	ELSE_13	CALL_111
0x4004faa	      0xe800000000	                          call 0x4004faf	      2851	objcopy.c	FUNCTION_38	IF_61	ELSE_13	CALL_111
0x4004faf	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      2851	objcopy.c	FUNCTION_38	IF_61	ELSE_13	CALL_111
0x4004fb6	    0x4883bdd0feff	              cmp qword [rbp - 0x130], 0	      2854	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_63
0x4004fbe	            0x7542	                           jne 0x4005002	      2854	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_63
0x4004fc0	    0x488b1d000000	            mov rbx, qword [0x04004fc7] 	      2856	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_63	CALL_112
0x4004fc7	      0xbf00000000	                              mov edi, 0	      2857	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_63	CALL_113
0x4004fcc	      0xe800000000	                          call 0x4004fd1	      2857	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_63	CALL_113
0x4004fd1	          0x4889c2	                            mov rdx, rax	      2857	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_63	CALL_113
0x4004fd4	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2856	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_63	CALL_112
0x4004fdb	          0x4989d8	                             mov r8, rbx	      2856	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_63	CALL_112
0x4004fde	          0x4889d1	                            mov rcx, rdx	      2856	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_63	CALL_112
0x4004fe1	      0xba00000000	                              mov edx, 0	      2856	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_63	CALL_112
0x4004fe6	          0x4889c6	                            mov rsi, rax	      2856	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_63	CALL_112
0x4004fe9	      0xbf00000000	                              mov edi, 0	      2856	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_63	CALL_112
0x4004fee	      0xb800000000	                              mov eax, 0	      2856	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_63	CALL_112
0x4004ff3	      0xe800000000	                          call 0x4004ff8	      2856	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_63	CALL_112
0x4004ff8	      0xb800000000	                              mov eax, 0	      2859	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_63
0x4004ffd	      0xe9960e0000	                           jmp 0x4005e98	      2859	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_63
0x4005002	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2864	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64
0x4005009	        0x488b4008	                mov rax, qword [rax + 8]	      2864	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64
0x400500d	          0x8b4008	                mov eax, dword [rax + 8]	      2864	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64
0x4005010	          0x83f802	                              cmp eax, 2	      2864	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64
0x4005013	     0xf852b010000	                           jne 0x4005144	      2864	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64
0x4005019	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2879	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4
0x4005020	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      2879	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4
0x4005027	    0x488985c8feff	            mov qword [rbp - 0x138], rax	      2879	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4
0x400502e	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      2879	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4
0x4005039	            0xeb55	                           jmp 0x4005090	      2879	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4
0x400503b	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2882	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4	IF_65
0x4005042	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2882	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4	IF_65
0x4005046	          0x4885c0	                           test rax, rax	      2882	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4	IF_65
0x4005049	            0x7433	                            je 0x400507e	      2882	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4	IF_65
0x400504b	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      2883	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4	IF_65
0x4005053	            0x741b	                            je 0x4005070	      2883	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4	IF_65
0x4005055	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2884	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4	IF_65
0x400505c	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2884	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4	IF_65
0x4005060	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2884	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4	IF_65
0x4005067	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2884	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4	IF_65
0x400506b	          0x4839c2	                            cmp rdx, rax	      2884	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4	IF_65
0x400506e	            0x760e	                           jbe 0x400507e	      2884	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4	IF_65
0x4005070	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2885	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4	IF_65
0x4005077	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      2885	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4	IF_65
0x400507e	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2881	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4
0x4005085	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2881	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4
0x4005089	    0x488985c8feff	            mov qword [rbp - 0x138], rax	      2881	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4
0x4005090	    0x4883bdc8feff	              cmp qword [rbp - 0x138], 0	      2879	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4
0x4005098	            0x75a1	                           jne 0x400503b	      2879	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	FOR_4
0x400509a	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      2887	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050a2	            0x7475	                            je 0x4005119	      2887	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050a4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050ab	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050af	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050b6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050ba	          0x4801d0	                            add rax, rdx	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050bd	    0x488d88ff0f00	                  lea rcx, [rax + 0xfff]	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050c4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050cb	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050cf	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050d6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050da	          0x4801d0	                            add rax, rdx	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050dd	          0x4839c1	                            cmp rcx, rax	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050e0	            0x7227	                            jb 0x4005109	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050e2	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050e9	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050ed	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050f4	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050f8	          0x4801d0	                            add rax, rdx	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x40050fb	    0x4805ff0f0000	                          add rax, 0xfff	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x4005101	    0x482500f0ffff	             and rax, 0xfffffffffffff000	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x4005107	            0xeb07	                           jmp 0x4005110	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x4005109	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x4005110	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x4005117	            0xeb0b	                           jmp 0x4005124	      2888	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	IF_66
0x4005119	    0x48c78508ffff	          mov qword [rbp - 0xf8], 0x1000	      2899	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	ELSE_14
0x4005124	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      2901	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	CALL_114
0x400512b	    0x488b8dd0feff	            mov rcx, qword [rbp - 0x130]	      2901	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	CALL_114
0x4005132	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2901	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	CALL_114
0x4005139	          0x4889ce	                            mov rsi, rcx	      2901	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	CALL_114
0x400513c	          0x4889c7	                            mov rdi, rax	      2901	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	CALL_114
0x400513f	      0xe8fcaeffff	            call sym.bfd_set_section_vma	      2901	objcopy.c	FUNCTION_38	IF_61	ELSE_13	IF_64	CALL_114
0x4005144	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2906	objcopy.c	FUNCTION_38
0x400514b	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2906	objcopy.c	FUNCTION_38
0x4005151	    0x8985a0feffff	            mov dword [rbp - 0x160], eax	      2906	objcopy.c	FUNCTION_38
0x4005157	    0x83bda0feffff	              cmp dword [rbp - 0x160], 0	      2907	objcopy.c	FUNCTION_38	IF_67
0x400515e	     0xf8427040000	                            je 0x400558b	      2907	objcopy.c	FUNCTION_38	IF_67
0x4005164	    0x8b0500000000	            mov eax, dword [0x0400516a] 	      2908	objcopy.c	FUNCTION_38	IF_67
0x400516a	            0x85c0	                           test eax, eax	      2908	objcopy.c	FUNCTION_38	IF_67
0x400516c	            0x750e	                           jne 0x400517c	      2908	objcopy.c	FUNCTION_38	IF_67
0x400516e	    0x8b0500000000	            mov eax, dword [0x04005174] 	      2908	objcopy.c	FUNCTION_38	IF_67
0x4005174	            0x85c0	                           test eax, eax	      2908	objcopy.c	FUNCTION_38	IF_67
0x4005176	     0xf840f040000	                            je 0x400558b	      2908	objcopy.c	FUNCTION_38	IF_67
0x400517c	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      2918	objcopy.c	FUNCTION_38	IF_67	CALL_115
0x4005182	        0x48c1e003	                              shl rax, 3	      2918	objcopy.c	FUNCTION_38	IF_67	CALL_115
0x4005186	          0x4889c7	                            mov rdi, rax	      2918	objcopy.c	FUNCTION_38	IF_67	CALL_115
0x4005189	      0xe800000000	                          call 0x400518e	      2918	objcopy.c	FUNCTION_38	IF_67	CALL_115
0x400518e	    0x488985c0feff	            mov qword [rbp - 0x140], rax	      2918	objcopy.c	FUNCTION_38	IF_67	CALL_115
0x4005195	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      2919	objcopy.c	FUNCTION_38	IF_67
0x400519c	    0x488985b0feff	            mov qword [rbp - 0x150], rax	      2919	objcopy.c	FUNCTION_38	IF_67
0x40051a3	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	      2920	objcopy.c	FUNCTION_38	IF_67	CALL_116
0x40051aa	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2920	objcopy.c	FUNCTION_38	IF_67	CALL_116
0x40051b1	      0xbe00000000	                              mov esi, 0	      2920	objcopy.c	FUNCTION_38	IF_67	CALL_116
0x40051b6	          0x4889c7	                            mov rdi, rax	      2920	objcopy.c	FUNCTION_38	IF_67	CALL_116
0x40051b9	      0xe800000000	                          call 0x40051be	      2920	objcopy.c	FUNCTION_38	IF_67	CALL_116
0x40051be	    0x8bb5a0feffff	            mov esi, dword [rbp - 0x160]	      2922	objcopy.c	FUNCTION_38	IF_67	CALL_117
0x40051c4	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      2922	objcopy.c	FUNCTION_38	IF_67	CALL_117
0x40051cb	      0xb900000000	                              mov ecx, 0	      2922	objcopy.c	FUNCTION_38	IF_67	CALL_117
0x40051d0	      0xba08000000	                              mov edx, 8	      2922	objcopy.c	FUNCTION_38	IF_67	CALL_117
0x40051d5	          0x4889c7	                            mov rdi, rax	      2922	objcopy.c	FUNCTION_38	IF_67	CALL_117
0x40051d8	      0xe800000000	                          call 0x40051dd	      2922	objcopy.c	FUNCTION_38	IF_67	CALL_117
0x40051dd	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      2924	objcopy.c	FUNCTION_38	IF_67	CALL_118
0x40051e3	        0x48c1e003	                              shl rax, 3	      2924	objcopy.c	FUNCTION_38	IF_67	CALL_118
0x40051e7	          0x4889c7	                            mov rdi, rax	      2924	objcopy.c	FUNCTION_38	IF_67	CALL_118
0x40051ea	      0xe800000000	                          call 0x40051ef	      2924	objcopy.c	FUNCTION_38	IF_67	CALL_118
0x40051ef	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      2924	objcopy.c	FUNCTION_38	IF_67	CALL_118
0x40051f6	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      2925	objcopy.c	FUNCTION_38	IF_67	CALL_119
0x40051fc	    0x488d14c50000	                        lea rdx, [rax*8]	      2925	objcopy.c	FUNCTION_38	IF_67	CALL_119
0x4005204	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2925	objcopy.c	FUNCTION_38	IF_67	CALL_119
0x400520b	      0xbe00000000	                              mov esi, 0	      2925	objcopy.c	FUNCTION_38	IF_67	CALL_119
0x4005210	          0x4889c7	                            mov rdi, rax	      2925	objcopy.c	FUNCTION_38	IF_67	CALL_119
0x4005213	      0xe800000000	                          call 0x4005218	      2925	objcopy.c	FUNCTION_38	IF_67	CALL_119
0x4005218	    0x8b0500000000	            mov eax, dword [0x0400521e] 	      2927	objcopy.c	FUNCTION_38	IF_67	IF_68
0x400521e	            0x85c0	                           test eax, eax	      2927	objcopy.c	FUNCTION_38	IF_67	IF_68
0x4005220	     0xf84e7010000	                            je 0x400540d	      2927	objcopy.c	FUNCTION_38	IF_67	IF_68
0x4005226	    0xc78594feffff	              mov dword [rbp - 0x16c], 0	      2929	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x4005230	      0xe9c3010000	                           jmp 0x40053f8	      2929	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x4005235	    0x8b8594feffff	            mov eax, dword [rbp - 0x16c]	      2935	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x400523b	    0x488d14c50000	                        lea rdx, [rax*8]	      2935	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x4005243	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      2935	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x400524a	          0x4801d0	                            add rax, rdx	      2935	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x400524d	          0x488b00	                    mov rax, qword [rax]	      2935	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x4005250	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2935	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x4005253	    0x8985a4feffff	            mov dword [rbp - 0x15c], eax	      2935	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x4005259	    0x8b85a4feffff	            mov eax, dword [rbp - 0x15c]	      2936	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_69
0x400525f	      0x2500010000	                          and eax, 0x100	      2936	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_69
0x4005264	            0x85c0	                           test eax, eax	      2936	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_69
0x4005266	     0xf8484010000	                            je 0x40053f0	      2936	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_69
0x400526c	    0x8b85a4feffff	            mov eax, dword [rbp - 0x15c]	      2937	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_69
0x4005272	          0x83e002	                              and eax, 2	      2937	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_69
0x4005275	            0x85c0	                           test eax, eax	      2937	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_69
0x4005277	     0xf8473010000	                            je 0x40053f0	      2937	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_69
0x400527d	    0x8b8594feffff	            mov eax, dword [rbp - 0x16c]	      2940	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x4005283	    0x488d14c50000	                        lea rdx, [rax*8]	      2940	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x400528b	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      2940	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x4005292	          0x4801d0	                            add rax, rdx	      2940	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x4005295	          0x488b00	                    mov rax, qword [rax]	      2940	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x4005298	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2940	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x400529c	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2940	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052a3	    0x8b8594feffff	            mov eax, dword [rbp - 0x16c]	      2941	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052a9	    0x488d14c50000	                        lea rdx, [rax*8]	      2941	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052b1	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      2941	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052b8	          0x4801d0	                            add rax, rdx	      2941	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052bb	          0x488b00	                    mov rax, qword [rax]	      2941	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052be	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2941	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052c2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2941	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052c9	          0x4801d0	                            add rax, rdx	      2941	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052cc	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2941	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052d3	    0x8b8594feffff	            mov eax, dword [rbp - 0x16c]	      2942	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052d9	          0x83c001	                              add eax, 1	      2942	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052dc	            0x89c0	                            mov eax, eax	      2942	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052de	    0x488d14c50000	                        lea rdx, [rax*8]	      2942	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052e6	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      2942	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052ed	          0x4801d0	                            add rax, rdx	      2942	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052f0	          0x488b00	                    mov rax, qword [rax]	      2942	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052f3	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2942	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052f7	        0x48894580	             mov qword [rbp - 0x80], rax	      2942	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40052fb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2943	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70
0x4005302	        0x483b4580	             cmp rax, qword [rbp - 0x80]	      2943	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70
0x4005306	     0xf83e5000000	                           jae 0x40053f1	      2943	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70
0x400530c	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2946	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71
0x4005310	    0x482b8578ffff	             sub rax, qword [rbp - 0x88]	      2946	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71
0x4005317	          0x4889c2	                            mov rdx, rax	      2946	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71
0x400531a	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2945	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_120
0x4005321	          0x4801c2	                            add rdx, rax	      2945	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_120
0x4005324	    0x8b8594feffff	            mov eax, dword [rbp - 0x16c]	      2945	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_120
0x400532a	    0x488d0cc50000	                        lea rcx, [rax*8]	      2945	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_120
0x4005332	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      2945	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_120
0x4005339	          0x4801c8	                            add rax, rcx	      2945	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_120
0x400533c	          0x488b08	                    mov rcx, qword [rax]	      2945	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_120
0x400533f	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2945	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_120
0x4005346	          0x4889ce	                            mov rsi, rcx	      2945	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_120
0x4005349	          0x4889c7	                            mov rdi, rax	      2945	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_120
0x400534c	      0xe800000000	                          call 0x4005351	      2945	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_120
0x4005351	            0x85c0	                           test eax, eax	      2945	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_120
0x4005353	            0x754d	                           jne 0x40053a2	      2945	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_120
0x4005355	      0xbf00000000	                              mov edi, 0	      2949	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_122
0x400535a	      0xe800000000	                          call 0x400535f	      2949	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_122
0x400535f	          0x4889c1	                            mov rcx, rax	      2949	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_122
0x4005362	    0x8b8594feffff	            mov eax, dword [rbp - 0x16c]	      2948	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_121
0x4005368	    0x488d14c50000	                        lea rdx, [rax*8]	      2948	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_121
0x4005370	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      2948	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_121
0x4005377	          0x4801d0	                            add rax, rdx	      2948	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_121
0x400537a	          0x488b10	                    mov rdx, qword [rax]	      2948	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_121
0x400537d	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2948	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_121
0x4005384	          0x4889c6	                            mov rsi, rax	      2948	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_121
0x4005387	      0xbf00000000	                              mov edi, 0	      2948	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_121
0x400538c	      0xb800000000	                              mov eax, 0	      2948	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_121
0x4005391	      0xe800000000	                          call 0x4005396	      2948	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71	CALL_121
0x4005396	    0xc70500000000	               mov dword [0x040053a0], 1	      2950	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71
0x40053a0	            0xeb6b	                           jmp 0x400540d	      2951	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_71
0x40053a2	    0x8b8594feffff	            mov eax, dword [rbp - 0x16c]	      2953	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70
0x40053a8	    0x488d14c50000	                        lea rdx, [rax*8]	      2953	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70
0x40053b0	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2953	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70
0x40053b7	          0x4801c2	                            add rdx, rax	      2953	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70
0x40053ba	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2953	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70
0x40053be	    0x482b8578ffff	             sub rax, qword [rbp - 0x88]	      2953	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70
0x40053c5	          0x488902	                    mov qword [rdx], rax	      2953	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70
0x40053c8	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2954	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_72
0x40053cc	    0x482b8578ffff	             sub rax, qword [rbp - 0x88]	      2954	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_72
0x40053d3	    0x483b85e0feff	            cmp rax, qword [rbp - 0x120]	      2954	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_72
0x40053da	            0x7615	                           jbe 0x40053f1	      2954	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_72
0x40053dc	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2955	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_72
0x40053e0	    0x482b8578ffff	             sub rax, qword [rbp - 0x88]	      2955	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_72
0x40053e7	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      2955	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_72
0x40053ee	            0xeb01	                           jmp 0x40053f1	      2955	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_70	IF_72
0x40053f0	              0x90	                                     nop	      2938	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5	IF_69
0x40053f1	    0x838594feffff	              add dword [rbp - 0x16c], 1	      2929	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40053f8	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      2929	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x40053fe	          0x83e801	                              sub eax, 1	      2929	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x4005401	    0x3b8594feffff	            cmp eax, dword [rbp - 0x16c]	      2929	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x4005407	     0xf8728feffff	                            ja 0x4005235	      2929	objcopy.c	FUNCTION_38	IF_67	IF_68	FOR_5
0x400540d	    0x8b0500000000	            mov eax, dword [0x04005413] 	      2960	objcopy.c	FUNCTION_38	IF_67	IF_73
0x4005413	            0x85c0	                           test eax, eax	      2960	objcopy.c	FUNCTION_38	IF_67	IF_73
0x4005415	     0xf8470010000	                            je 0x400558b	      2960	objcopy.c	FUNCTION_38	IF_67	IF_73
0x400541b	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      2965	objcopy.c	FUNCTION_38	IF_67	IF_73
0x4005421	          0x83e801	                              sub eax, 1	      2965	objcopy.c	FUNCTION_38	IF_67	IF_73
0x4005424	            0x89c0	                            mov eax, eax	      2965	objcopy.c	FUNCTION_38	IF_67	IF_73
0x4005426	    0x488d14c50000	                        lea rdx, [rax*8]	      2965	objcopy.c	FUNCTION_38	IF_67	IF_73
0x400542e	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      2965	objcopy.c	FUNCTION_38	IF_67	IF_73
0x4005435	          0x4801d0	                            add rax, rdx	      2965	objcopy.c	FUNCTION_38	IF_67	IF_73
0x4005438	          0x488b00	                    mov rax, qword [rax]	      2965	objcopy.c	FUNCTION_38	IF_67	IF_73
0x400543b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2965	objcopy.c	FUNCTION_38	IF_67	IF_73
0x400543f	        0x48894588	             mov qword [rbp - 0x78], rax	      2965	objcopy.c	FUNCTION_38	IF_67	IF_73
0x4005443	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      2966	objcopy.c	FUNCTION_38	IF_67	IF_73
0x4005449	          0x83e801	                              sub eax, 1	      2966	objcopy.c	FUNCTION_38	IF_67	IF_73
0x400544c	            0x89c0	                            mov eax, eax	      2966	objcopy.c	FUNCTION_38	IF_67	IF_73
0x400544e	    0x488d14c50000	                        lea rdx, [rax*8]	      2966	objcopy.c	FUNCTION_38	IF_67	IF_73
0x4005456	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      2966	objcopy.c	FUNCTION_38	IF_67	IF_73
0x400545d	          0x4801d0	                            add rax, rdx	      2966	objcopy.c	FUNCTION_38	IF_67	IF_73
0x4005460	          0x488b00	                    mov rax, qword [rax]	      2966	objcopy.c	FUNCTION_38	IF_67	IF_73
0x4005463	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2966	objcopy.c	FUNCTION_38	IF_67	IF_73
0x4005467	        0x48894590	             mov qword [rbp - 0x70], rax	      2966	objcopy.c	FUNCTION_38	IF_67	IF_73
0x400546b	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2967	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74
0x400546f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2967	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74
0x4005473	          0x4801c2	                            add rdx, rax	      2967	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74
0x4005476	    0x488b05000000	            mov rax, qword [0x0400547d] 	      2967	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74
0x400547d	          0x4839c2	                            cmp rdx, rax	      2967	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74
0x4005480	     0xf8305010000	                           jae 0x400558b	      2967	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74
0x4005486	    0x488b05000000	            mov rax, qword [0x0400548d] 	      2969	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_123
0x400548d	        0x482b4588	             sub rax, qword [rbp - 0x78]	      2969	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_123
0x4005491	          0x4889c2	                            mov rdx, rax	      2969	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_123
0x4005494	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      2969	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_123
0x400549a	          0x83e801	                              sub eax, 1	      2969	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_123
0x400549d	            0x89c0	                            mov eax, eax	      2969	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_123
0x400549f	    0x488d0cc50000	                        lea rcx, [rax*8]	      2969	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_123
0x40054a7	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      2969	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_123
0x40054ae	          0x4801c8	                            add rax, rcx	      2969	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_123
0x40054b1	          0x488b08	                    mov rcx, qword [rax]	      2969	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_123
0x40054b4	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2969	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_123
0x40054bb	          0x4889ce	                            mov rsi, rcx	      2969	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_123
0x40054be	          0x4889c7	                            mov rdi, rax	      2969	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_123
0x40054c1	      0xe800000000	                          call 0x40054c6	      2969	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_123
0x40054c6	            0x85c0	                           test eax, eax	      2969	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_123
0x40054c8	            0x7552	                           jne 0x400551c	      2969	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_123
0x40054ca	      0xbf00000000	                              mov edi, 0	      2973	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_125
0x40054cf	      0xe800000000	                          call 0x40054d4	      2973	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_125
0x40054d4	          0x4889c1	                            mov rcx, rax	      2973	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_125
0x40054d7	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      2972	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_124
0x40054dd	          0x83e801	                              sub eax, 1	      2972	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_124
0x40054e0	            0x89c0	                            mov eax, eax	      2972	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_124
0x40054e2	    0x488d14c50000	                        lea rdx, [rax*8]	      2972	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_124
0x40054ea	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      2972	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_124
0x40054f1	          0x4801d0	                            add rax, rdx	      2972	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_124
0x40054f4	          0x488b10	                    mov rdx, qword [rax]	      2972	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_124
0x40054f7	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      2972	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_124
0x40054fe	          0x4889c6	                            mov rsi, rax	      2972	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_124
0x4005501	      0xbf00000000	                              mov edi, 0	      2972	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_124
0x4005506	      0xb800000000	                              mov eax, 0	      2972	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_124
0x400550b	      0xe800000000	                          call 0x4005510	      2972	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75	CALL_124
0x4005510	    0xc70500000000	               mov dword [0x0400551a], 1	      2974	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75
0x400551a	            0xeb6f	                           jmp 0x400558b	      2974	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	IF_75
0x400551c	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      2978	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15
0x4005522	          0x83e801	                              sub eax, 1	      2978	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15
0x4005525	            0x89c0	                            mov eax, eax	      2978	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15
0x4005527	    0x488d14c50000	                        lea rdx, [rax*8]	      2978	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15
0x400552f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2978	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15
0x4005536	          0x4801d0	                            add rax, rdx	      2978	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15
0x4005539	    0x488b15000000	            mov rdx, qword [0x04005540] 	      2978	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15
0x4005540	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      2978	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15
0x4005544	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      2978	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15
0x4005548	          0x4801f1	                            add rcx, rsi	      2978	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15
0x400554b	          0x4829ca	                            sub rdx, rcx	      2978	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15
0x400554e	          0x488910	                    mov qword [rax], rdx	      2978	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15
0x4005551	    0x488b05000000	            mov rax, qword [0x04005558] 	      2979	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15	IF_76
0x4005558	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      2979	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15	IF_76
0x400555c	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2979	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15	IF_76
0x4005560	          0x4801ca	                            add rdx, rcx	      2979	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15	IF_76
0x4005563	          0x4829d0	                            sub rax, rdx	      2979	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15	IF_76
0x4005566	    0x483b85e0feff	            cmp rax, qword [rbp - 0x120]	      2979	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15	IF_76
0x400556d	            0x761c	                           jbe 0x400558b	      2979	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15	IF_76
0x400556f	    0x488b05000000	            mov rax, qword [0x04005576] 	      2980	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15	IF_76
0x4005576	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      2980	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15	IF_76
0x400557a	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2980	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15	IF_76
0x400557e	          0x4801ca	                            add rdx, rcx	      2980	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15	IF_76
0x4005581	          0x4829d0	                            sub rax, rdx	      2980	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15	IF_76
0x4005584	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      2980	objcopy.c	FUNCTION_38	IF_67	IF_73	IF_74	ELSE_15	IF_76
0x400558b	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	      2988	objcopy.c	FUNCTION_38
0x4005596	    0x8b0500000000	            mov eax, dword [0x0400559c] 	      2989	objcopy.c	FUNCTION_38	IF_77
0x400559c	            0x85c0	                           test eax, eax	      2989	objcopy.c	FUNCTION_38	IF_77
0x400559e	            0x7429	                            je 0x40055c9	      2989	objcopy.c	FUNCTION_38	IF_77
0x40055a0	    0x488b95a8feff	            mov rdx, qword [rbp - 0x158]	      2990	objcopy.c	FUNCTION_38	CALL_126
0x40055a7	    0x488b35000000	            mov rsi, qword [0x040055ae] 	      2990	objcopy.c	FUNCTION_38	CALL_126
0x40055ae	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      2990	objcopy.c	FUNCTION_38	CALL_126
0x40055b5	      0xb900000000	                              mov ecx, 0	      2990	objcopy.c	FUNCTION_38	CALL_126
0x40055ba	          0x4889c7	                            mov rdi, rax	      2990	objcopy.c	FUNCTION_38	CALL_126
0x40055bd	      0xe800000000	                          call 0x40055c2	      2990	objcopy.c	FUNCTION_38	CALL_126
0x40055c2	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      2990	objcopy.c	FUNCTION_38	CALL_126
0x40055c9	    0x8b0500000000	            mov eax, dword [0x040055cf] 	      2992	objcopy.c	FUNCTION_38	IF_78
0x40055cf	          0x83f802	                              cmp eax, 2	      2992	objcopy.c	FUNCTION_38	IF_78
0x40055d2	     0xf8469010000	                            je 0x4005741	      2992	objcopy.c	FUNCTION_38	IF_78
0x40055d8	    0x8b0500000000	            mov eax, dword [0x040055de] 	      2993	objcopy.c	FUNCTION_38	IF_78
0x40055de	          0x83f807	                              cmp eax, 7	      2993	objcopy.c	FUNCTION_38	IF_78
0x40055e1	     0xf845a010000	                            je 0x4005741	      2993	objcopy.c	FUNCTION_38	IF_78
0x40055e7	    0x8b0500000000	            mov eax, dword [0x040055ed] 	      2994	objcopy.c	FUNCTION_38	IF_78
0x40055ed	          0x83f803	                              cmp eax, 3	      2994	objcopy.c	FUNCTION_38	IF_78
0x40055f0	     0xf844b010000	                            je 0x4005741	      2994	objcopy.c	FUNCTION_38	IF_78
0x40055f6	    0x8b0500000000	            mov eax, dword [0x040055fc] 	      2995	objcopy.c	FUNCTION_38	IF_78
0x40055fc	          0x83f804	                              cmp eax, 4	      2995	objcopy.c	FUNCTION_38	IF_78
0x40055ff	     0xf843c010000	                            je 0x4005741	      2995	objcopy.c	FUNCTION_38	IF_78
0x4005605	    0x8b0500000000	            mov eax, dword [0x0400560b] 	      2996	objcopy.c	FUNCTION_38	IF_78
0x400560b	          0x83f805	                              cmp eax, 5	      2996	objcopy.c	FUNCTION_38	IF_78
0x400560e	     0xf842d010000	                            je 0x4005741	      2996	objcopy.c	FUNCTION_38	IF_78
0x4005614	    0x8b0500000000	            mov eax, dword [0x0400561a] 	      2997	objcopy.c	FUNCTION_38	IF_78
0x400561a	          0x83f806	                              cmp eax, 6	      2997	objcopy.c	FUNCTION_38	IF_78
0x400561d	     0xf841e010000	                            je 0x4005741	      2997	objcopy.c	FUNCTION_38	IF_78
0x4005623	    0x8b0500000000	            mov eax, dword [0x04005629] 	      2998	objcopy.c	FUNCTION_38	IF_78
0x4005629	            0x85c0	                           test eax, eax	      2998	objcopy.c	FUNCTION_38	IF_78
0x400562b	     0xf8510010000	                           jne 0x4005741	      2998	objcopy.c	FUNCTION_38	IF_78
0x4005631	    0x8b0500000000	            mov eax, dword [0x04005637] 	      2999	objcopy.c	FUNCTION_38	IF_78
0x4005637	            0x85c0	                           test eax, eax	      2999	objcopy.c	FUNCTION_38	IF_78
0x4005639	     0xf8502010000	                           jne 0x4005741	      2999	objcopy.c	FUNCTION_38	IF_78
0x400563f	    0x488b05000000	            mov rax, qword [0x04005646] 	      3000	objcopy.c	FUNCTION_38	IF_78	CALL_127
0x4005646	          0x4889c7	                            mov rdi, rax	      3000	objcopy.c	FUNCTION_38	IF_78	CALL_127
0x4005649	      0xe800000000	                          call 0x400564e	      3000	objcopy.c	FUNCTION_38	IF_78	CALL_127
0x400564e	          0x4885c0	                           test rax, rax	      3000	objcopy.c	FUNCTION_38	IF_78	CALL_127
0x4005651	     0xf85ea000000	                           jne 0x4005741	      3000	objcopy.c	FUNCTION_38	IF_78	CALL_127
0x4005657	    0x488b05000000	            mov rax, qword [0x0400565e] 	      3001	objcopy.c	FUNCTION_38	IF_78	CALL_128
0x400565e	          0x4889c7	                            mov rdi, rax	      3001	objcopy.c	FUNCTION_38	IF_78	CALL_128
0x4005661	      0xe800000000	                          call 0x4005666	      3001	objcopy.c	FUNCTION_38	IF_78	CALL_128
0x4005666	          0x4885c0	                           test rax, rax	      3001	objcopy.c	FUNCTION_38	IF_78	CALL_128
0x4005669	     0xf85d2000000	                           jne 0x4005741	      3001	objcopy.c	FUNCTION_38	IF_78	CALL_128
0x400566f	    0x488b05000000	            mov rax, qword [0x04005676] 	      3002	objcopy.c	FUNCTION_38	IF_78	CALL_129
0x4005676	          0x4889c7	                            mov rdi, rax	      3002	objcopy.c	FUNCTION_38	IF_78	CALL_129
0x4005679	      0xe800000000	                          call 0x400567e	      3002	objcopy.c	FUNCTION_38	IF_78	CALL_129
0x400567e	          0x4885c0	                           test rax, rax	      3002	objcopy.c	FUNCTION_38	IF_78	CALL_129
0x4005681	     0xf85ba000000	                           jne 0x4005741	      3002	objcopy.c	FUNCTION_38	IF_78	CALL_129
0x4005687	    0x488b05000000	            mov rax, qword [0x0400568e] 	      3003	objcopy.c	FUNCTION_38	IF_78	CALL_130
0x400568e	          0x4889c7	                            mov rdi, rax	      3003	objcopy.c	FUNCTION_38	IF_78	CALL_130
0x4005691	      0xe800000000	                          call 0x4005696	      3003	objcopy.c	FUNCTION_38	IF_78	CALL_130
0x4005696	          0x4885c0	                           test rax, rax	      3003	objcopy.c	FUNCTION_38	IF_78	CALL_130
0x4005699	     0xf85a2000000	                           jne 0x4005741	      3003	objcopy.c	FUNCTION_38	IF_78	CALL_130
0x400569f	    0x488b05000000	            mov rax, qword [0x040056a6] 	      3004	objcopy.c	FUNCTION_38	IF_78	CALL_131
0x40056a6	          0x4889c7	                            mov rdi, rax	      3004	objcopy.c	FUNCTION_38	IF_78	CALL_131
0x40056a9	      0xe800000000	                          call 0x40056ae	      3004	objcopy.c	FUNCTION_38	IF_78	CALL_131
0x40056ae	          0x4885c0	                           test rax, rax	      3004	objcopy.c	FUNCTION_38	IF_78	CALL_131
0x40056b1	     0xf858a000000	                           jne 0x4005741	      3004	objcopy.c	FUNCTION_38	IF_78	CALL_131
0x40056b7	    0x488b05000000	            mov rax, qword [0x040056be] 	      3005	objcopy.c	FUNCTION_38	IF_78	CALL_132
0x40056be	          0x4889c7	                            mov rdi, rax	      3005	objcopy.c	FUNCTION_38	IF_78	CALL_132
0x40056c1	      0xe800000000	                          call 0x40056c6	      3005	objcopy.c	FUNCTION_38	IF_78	CALL_132
0x40056c6	          0x4885c0	                           test rax, rax	      3005	objcopy.c	FUNCTION_38	IF_78	CALL_132
0x40056c9	            0x7576	                           jne 0x4005741	      3005	objcopy.c	FUNCTION_38	IF_78	CALL_132
0x40056cb	    0x488b05000000	            mov rax, qword [0x040056d2] 	      3006	objcopy.c	FUNCTION_38	IF_78	CALL_133
0x40056d2	          0x4889c7	                            mov rdi, rax	      3006	objcopy.c	FUNCTION_38	IF_78	CALL_133
0x40056d5	      0xe800000000	                          call 0x40056da	      3006	objcopy.c	FUNCTION_38	IF_78	CALL_133
0x40056da	          0x4885c0	                           test rax, rax	      3006	objcopy.c	FUNCTION_38	IF_78	CALL_133
0x40056dd	            0x7562	                           jne 0x4005741	      3006	objcopy.c	FUNCTION_38	IF_78	CALL_133
0x40056df	    0x488b05000000	            mov rax, qword [0x040056e6] 	      3007	objcopy.c	FUNCTION_38	IF_78
0x40056e6	          0x4885c0	                           test rax, rax	      3007	objcopy.c	FUNCTION_38	IF_78
0x40056e9	            0x7556	                           jne 0x4005741	      3007	objcopy.c	FUNCTION_38	IF_78
0x40056eb	    0x8b0500000000	            mov eax, dword [0x040056f1] 	      3008	objcopy.c	FUNCTION_38	IF_78
0x40056f1	            0x85c0	                           test eax, eax	      3008	objcopy.c	FUNCTION_38	IF_78
0x40056f3	            0x754c	                           jne 0x4005741	      3008	objcopy.c	FUNCTION_38	IF_78
0x40056f5	    0x8b0500000000	            mov eax, dword [0x040056fb] 	      3009	objcopy.c	FUNCTION_38	IF_78
0x40056fb	            0x85c0	                           test eax, eax	      3009	objcopy.c	FUNCTION_38	IF_78
0x40056fd	            0x7542	                           jne 0x4005741	      3009	objcopy.c	FUNCTION_38	IF_78
0x40056ff	    0x8b0500000000	            mov eax, dword [0x04005705] 	      3010	objcopy.c	FUNCTION_38	IF_78
0x4005705	            0x85c0	                           test eax, eax	      3010	objcopy.c	FUNCTION_38	IF_78
0x4005707	            0x7538	                           jne 0x4005741	      3010	objcopy.c	FUNCTION_38	IF_78
0x4005709	    0x8b0500000000	            mov eax, dword [0x0400570f] 	      3011	objcopy.c	FUNCTION_38	IF_78
0x400570f	            0x85c0	                           test eax, eax	      3011	objcopy.c	FUNCTION_38	IF_78
0x4005711	            0x752e	                           jne 0x4005741	      3011	objcopy.c	FUNCTION_38	IF_78
0x4005713	    0x8b0500000000	            mov eax, dword [0x04005719] 	      3012	objcopy.c	FUNCTION_38	IF_78
0x4005719	            0x85c0	                           test eax, eax	      3012	objcopy.c	FUNCTION_38	IF_78
0x400571b	            0x7524	                           jne 0x4005741	      3012	objcopy.c	FUNCTION_38	IF_78
0x400571d	    0x488b05000000	            mov rax, qword [0x04005724] 	      3013	objcopy.c	FUNCTION_38	IF_78
0x4005724	          0x4885c0	                           test rax, rax	      3013	objcopy.c	FUNCTION_38	IF_78
0x4005727	            0x7518	                           jne 0x4005741	      3013	objcopy.c	FUNCTION_38	IF_78
0x4005729	    0x8b0500000000	            mov eax, dword [0x0400572f] 	      3014	objcopy.c	FUNCTION_38	IF_78
0x400572f	            0x85c0	                           test eax, eax	      3014	objcopy.c	FUNCTION_38	IF_78
0x4005731	            0x750e	                           jne 0x4005741	      3014	objcopy.c	FUNCTION_38	IF_78
0x4005733	    0x8b0500000000	            mov eax, dword [0x04005739] 	      3015	objcopy.c	FUNCTION_38	IF_78
0x4005739	            0x85c0	                           test eax, eax	      3015	objcopy.c	FUNCTION_38	IF_78
0x400573b	     0xf84ae000000	                            je 0x40057ef	      3015	objcopy.c	FUNCTION_38	IF_78
0x4005741	    0x8b0500000000	            mov eax, dword [0x04005747] 	      3025	objcopy.c	FUNCTION_38	IF_78	IF_79
0x4005747	          0x83f807	                              cmp eax, 7	      3025	objcopy.c	FUNCTION_38	IF_78	IF_79
0x400574a	            0x7442	                            je 0x400578e	      3025	objcopy.c	FUNCTION_38	IF_78	IF_79
0x400574c	      0xbf00000000	                              mov edi, 0	      3027	objcopy.c	FUNCTION_38	IF_78	IF_79	CALL_134
0x4005751	      0xe800000000	                          call 0x4005756	      3027	objcopy.c	FUNCTION_38	IF_78	IF_79	CALL_134
0x4005756	    0x488b15000000	            mov rdx, qword [0x0400575d] 	      3028	objcopy.c	FUNCTION_38	IF_78	IF_79	CALL_135
0x400575d	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      3028	objcopy.c	FUNCTION_38	IF_78	IF_79	CALL_135
0x4005764	      0xbe00000000	                              mov esi, 0	      3028	objcopy.c	FUNCTION_38	IF_78	IF_79	CALL_135
0x4005769	          0x4889c7	                            mov rdi, rax	      3028	objcopy.c	FUNCTION_38	IF_78	IF_79	CALL_135
0x400576c	      0xe800000000	                          call 0x4005771	      3028	objcopy.c	FUNCTION_38	IF_78	IF_79	CALL_135
0x4005771	      0xe800000000	                          call 0x4005776	      3031	objcopy.c	FUNCTION_38	IF_78	IF_79	IF_80	CALL_136
0x4005776	            0x85c0	                           test eax, eax	      3031	objcopy.c	FUNCTION_38	IF_78	IF_79	IF_80	CALL_136
0x4005778	            0x7414	                            je 0x400578e	      3031	objcopy.c	FUNCTION_38	IF_78	IF_79	IF_80	CALL_136
0x400577a	    0xc70500000000	               mov dword [0x04005784], 1	      3033	objcopy.c	FUNCTION_38	IF_78	IF_79	IF_80
0x4005784	      0xb800000000	                              mov eax, 0	      3034	objcopy.c	FUNCTION_38	IF_78	IF_79	IF_80
0x4005789	      0xe90a070000	                           jmp 0x4005e98	      3034	objcopy.c	FUNCTION_38	IF_78	IF_79	IF_80
0x400578e	    0x8b0500000000	            mov eax, dword [0x04005794] 	      3038	objcopy.c	FUNCTION_38	IF_78	CALL_137
0x4005794	          0x4863d0	                         movsxd rdx, eax	      3038	objcopy.c	FUNCTION_38	IF_78	CALL_137
0x4005797	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3038	objcopy.c	FUNCTION_38	IF_78	CALL_137
0x400579e	          0x4801d0	                            add rax, rdx	      3038	objcopy.c	FUNCTION_38	IF_78	CALL_137
0x40057a1	        0x4883c001	                              add rax, 1	      3038	objcopy.c	FUNCTION_38	IF_78	CALL_137
0x40057a5	        0x48c1e003	                              shl rax, 3	      3038	objcopy.c	FUNCTION_38	IF_78	CALL_137
0x40057a9	          0x4889c7	                            mov rdi, rax	      3038	objcopy.c	FUNCTION_38	IF_78	CALL_137
0x40057ac	      0xe800000000	                          call 0x40057b1	      3038	objcopy.c	FUNCTION_38	IF_78	CALL_137
0x40057b1	    0x488905000000	            mov qword [0x040057b8], rax 	      3038	objcopy.c	FUNCTION_38	IF_78	CALL_137
0x40057b8	    0x488bbda8feff	            mov rdi, qword [rbp - 0x158]	      3039	objcopy.c	FUNCTION_38	IF_78	CALL_138
0x40057bf	    0x488b0d000000	            mov rcx, qword [0x040057c6] 	      3039	objcopy.c	FUNCTION_38	IF_78	CALL_138
0x40057c6	    0x488b15000000	            mov rdx, qword [0x040057cd] 	      3039	objcopy.c	FUNCTION_38	IF_78	CALL_138
0x40057cd	    0x488bb570feff	            mov rsi, qword [rbp - 0x190]	      3039	objcopy.c	FUNCTION_38	IF_78	CALL_138
0x40057d4	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      3039	objcopy.c	FUNCTION_38	IF_78	CALL_138
0x40057db	          0x4989f8	                             mov r8, rdi	      3039	objcopy.c	FUNCTION_38	IF_78	CALL_138
0x40057de	          0x4889c7	                            mov rdi, rax	      3039	objcopy.c	FUNCTION_38	IF_78	CALL_138
0x40057e1	      0xe885c1ffff	                 call sym.filter_symbols	      3039	objcopy.c	FUNCTION_38	IF_78	CALL_138
0x40057e6	            0x89c0	                            mov eax, eax	      3039	objcopy.c	FUNCTION_38	IF_78	CALL_138
0x40057e8	    0x488985a8feff	            mov qword [rbp - 0x158], rax	      3039	objcopy.c	FUNCTION_38	IF_78	CALL_138
0x40057ef	    0x8b0500000000	            mov eax, dword [0x040057f5] 	      3042	objcopy.c	FUNCTION_38	IF_81
0x40057f5	            0x85c0	                           test eax, eax	      3042	objcopy.c	FUNCTION_38	IF_81
0x40057f7	            0x7444	                            je 0x400583d	      3042	objcopy.c	FUNCTION_38	IF_81
0x40057f9	    0x4883bde8feff	              cmp qword [rbp - 0x118], 0	      3042	objcopy.c	FUNCTION_38	IF_81
0x4005801	            0x743a	                            je 0x400583d	      3042	objcopy.c	FUNCTION_38	IF_81
0x4005803	    0x488d95a8feff	                  lea rdx, [rbp - 0x158]	      3044	objcopy.c	FUNCTION_38	IF_81	IF_82	CALL_139
0x400580a	    0x488bb5e8feff	            mov rsi, qword [rbp - 0x118]	      3044	objcopy.c	FUNCTION_38	IF_81	IF_82	CALL_139
0x4005811	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3044	objcopy.c	FUNCTION_38	IF_81	IF_82	CALL_139
0x4005818	      0xb900000000	                              mov ecx, 0	      3044	objcopy.c	FUNCTION_38	IF_81	IF_82	CALL_139
0x400581d	          0x4889c7	                            mov rdi, rax	      3044	objcopy.c	FUNCTION_38	IF_81	IF_82	CALL_139
0x4005820	      0xe86f290000	           call sym.write_debugging_info	      3044	objcopy.c	FUNCTION_38	IF_81	IF_82	CALL_139
0x4005825	            0x85c0	                           test eax, eax	      3044	objcopy.c	FUNCTION_38	IF_81	IF_82	CALL_139
0x4005827	            0x7514	                           jne 0x400583d	      3044	objcopy.c	FUNCTION_38	IF_81	IF_82	CALL_139
0x4005829	    0xc70500000000	               mov dword [0x04005833], 1	      3046	objcopy.c	FUNCTION_38	IF_81	IF_82
0x4005833	      0xb800000000	                              mov eax, 0	      3047	objcopy.c	FUNCTION_38	IF_81	IF_82
0x4005838	      0xe95b060000	                           jmp 0x4005e98	      3047	objcopy.c	FUNCTION_38	IF_81	IF_82
0x400583d	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3051	objcopy.c	FUNCTION_38	CALL_140
0x4005844	            0x89c2	                            mov edx, eax	      3051	objcopy.c	FUNCTION_38	CALL_140
0x4005846	    0x488b0d000000	            mov rcx, qword [0x0400584d] 	      3051	objcopy.c	FUNCTION_38	CALL_140
0x400584d	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3051	objcopy.c	FUNCTION_38	CALL_140
0x4005854	          0x4889ce	                            mov rsi, rcx	      3051	objcopy.c	FUNCTION_38	CALL_140
0x4005857	          0x4889c7	                            mov rdi, rax	      3051	objcopy.c	FUNCTION_38	CALL_140
0x400585a	      0xe800000000	                          call 0x400585f	      3051	objcopy.c	FUNCTION_38	CALL_140
0x400585f	    0x488b9570feff	            mov rdx, qword [rbp - 0x190]	      3054	objcopy.c	FUNCTION_38	CALL_141
0x4005866	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      3054	objcopy.c	FUNCTION_38	CALL_141
0x400586d	      0xbe00000000	                              mov esi, 0	      3054	objcopy.c	FUNCTION_38	CALL_141
0x4005872	          0x4889c7	                            mov rdi, rax	      3054	objcopy.c	FUNCTION_38	CALL_141
0x4005875	      0xe800000000	                          call 0x400587a	      3054	objcopy.c	FUNCTION_38	CALL_141
0x400587a	    0x488b9570feff	            mov rdx, qword [rbp - 0x190]	      3057	objcopy.c	FUNCTION_38	CALL_142
0x4005881	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      3057	objcopy.c	FUNCTION_38	CALL_142
0x4005888	      0xbe00000000	                              mov esi, 0	      3057	objcopy.c	FUNCTION_38	CALL_142
0x400588d	          0x4889c7	                            mov rdi, rax	      3057	objcopy.c	FUNCTION_38	CALL_142
0x4005890	      0xe800000000	                          call 0x4005895	      3057	objcopy.c	FUNCTION_38	CALL_142
0x4005895	    0x488b05000000	            mov rax, qword [0x0400589c] 	      3059	objcopy.c	FUNCTION_38	IF_83
0x400589c	          0x4885c0	                           test rax, rax	      3059	objcopy.c	FUNCTION_38	IF_83
0x400589f	     0xf84a1000000	                            je 0x4005946	      3059	objcopy.c	FUNCTION_38	IF_83
0x40058a5	    0x488b05000000	            mov rax, qword [0x040058ac] 	      3063	objcopy.c	FUNCTION_38	IF_83	FOR_6
0x40058ac	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3063	objcopy.c	FUNCTION_38	IF_83	FOR_6
0x40058b3	      0xe980000000	                           jmp 0x4005938	      3063	objcopy.c	FUNCTION_38	IF_83	FOR_6
0x40058b8	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3065	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_143
0x40058bf	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      3065	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_143
0x40058c3	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3065	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_143
0x40058ca	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      3065	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_143
0x40058ce	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3065	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_143
0x40058d5	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      3065	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_143
0x40058d9	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3065	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_143
0x40058e0	          0x4989c8	                             mov r8, rcx	      3065	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_143
0x40058e3	      0xb900000000	                              mov ecx, 0	      3065	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_143
0x40058e8	          0x4889c7	                            mov rdi, rax	      3065	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_143
0x40058eb	      0xe800000000	                          call 0x40058f0	      3065	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_143
0x40058f0	            0x85c0	                           test eax, eax	      3065	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_143
0x40058f2	            0x7533	                           jne 0x4005927	      3065	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_143
0x40058f4	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3068	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_144
0x40058fb	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      3068	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_144
0x40058ff	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3068	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_144
0x4005906	      0xb900000000	                              mov ecx, 0	      3068	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_144
0x400590b	          0x4889c6	                            mov rsi, rax	      3068	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_144
0x400590e	      0xbf00000000	                              mov edi, 0	      3068	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_144
0x4005913	      0xb800000000	                              mov eax, 0	      3068	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_144
0x4005918	      0xe800000000	                          call 0x400591d	      3068	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_144
0x400591d	      0xb800000000	                              mov eax, 0	      3069	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84
0x4005922	      0xe971050000	                           jmp 0x4005e98	      3069	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84
0x4005927	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3063	objcopy.c	FUNCTION_38	IF_83	FOR_6
0x400592e	          0x488b00	                    mov rax, qword [rax]	      3063	objcopy.c	FUNCTION_38	IF_83	FOR_6
0x4005931	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3063	objcopy.c	FUNCTION_38	IF_83	FOR_6
0x4005938	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      3063	objcopy.c	FUNCTION_38	IF_83	FOR_6
0x4005940	     0xf8572ffffff	                           jne 0x40058b8	      3063	objcopy.c	FUNCTION_38	IF_83	FOR_6
0x4005946	    0x488b05000000	            mov rax, qword [0x0400594d] 	      3074	objcopy.c	FUNCTION_38	IF_85
0x400594d	          0x4885c0	                           test rax, rax	      3074	objcopy.c	FUNCTION_38	IF_85
0x4005950	     0xf84af000000	                            je 0x4005a05	      3074	objcopy.c	FUNCTION_38	IF_85
0x4005956	    0x488b05000000	            mov rax, qword [0x0400595d] 	      3078	objcopy.c	FUNCTION_38	IF_85	FOR_7
0x400595d	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      3078	objcopy.c	FUNCTION_38	IF_85	FOR_7
0x4005964	      0xe98e000000	                           jmp 0x40059f7	      3078	objcopy.c	FUNCTION_38	IF_85	FOR_7
0x4005969	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3082	objcopy.c	FUNCTION_38	IF_85	FOR_7
0x4005970	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3082	objcopy.c	FUNCTION_38	IF_85	FOR_7
0x4005974	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3082	objcopy.c	FUNCTION_38	IF_85	FOR_7
0x4005978	    0x488985c8feff	            mov qword [rbp - 0x138], rax	      3082	objcopy.c	FUNCTION_38	IF_85	FOR_7
0x400597f	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3083	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_145
0x4005986	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      3083	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_145
0x400598a	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3083	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_145
0x4005991	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      3083	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_145
0x4005995	    0x488bb5c8feff	            mov rsi, qword [rbp - 0x138]	      3083	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_145
0x400599c	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3083	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_145
0x40059a3	          0x4989c8	                             mov r8, rcx	      3083	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_145
0x40059a6	      0xb900000000	                              mov ecx, 0	      3083	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_145
0x40059ab	          0x4889c7	                            mov rdi, rax	      3083	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_145
0x40059ae	      0xe800000000	                          call 0x40059b3	      3083	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_145
0x40059b3	            0x85c0	                           test eax, eax	      3083	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_145
0x40059b5	            0x752f	                           jne 0x40059e6	      3083	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_145
0x40059b7	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      3086	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_146
0x40059be	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3086	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_146
0x40059c5	      0xb900000000	                              mov ecx, 0	      3086	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_146
0x40059ca	          0x4889c6	                            mov rsi, rax	      3086	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_146
0x40059cd	      0xbf00000000	                              mov edi, 0	      3086	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_146
0x40059d2	      0xb800000000	                              mov eax, 0	      3086	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_146
0x40059d7	      0xe800000000	                          call 0x40059dc	      3086	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86	CALL_146
0x40059dc	      0xb800000000	                              mov eax, 0	      3087	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86
0x40059e1	      0xe9b2040000	                           jmp 0x4005e98	      3087	objcopy.c	FUNCTION_38	IF_85	FOR_7	IF_86
0x40059e6	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3080	objcopy.c	FUNCTION_38	IF_85	FOR_7
0x40059ed	          0x488b00	                    mov rax, qword [rax]	      3080	objcopy.c	FUNCTION_38	IF_85	FOR_7
0x40059f0	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      3080	objcopy.c	FUNCTION_38	IF_85	FOR_7
0x40059f7	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      3078	objcopy.c	FUNCTION_38	IF_85	FOR_7
0x40059ff	     0xf8564ffffff	                           jne 0x4005969	      3078	objcopy.c	FUNCTION_38	IF_85	FOR_7
0x4005a05	    0x8b0500000000	            mov eax, dword [0x04005a0b] 	      3092	objcopy.c	FUNCTION_38	IF_87
0x4005a0b	            0x85c0	                           test eax, eax	      3092	objcopy.c	FUNCTION_38	IF_87
0x4005a0d	     0xf8408010000	                            je 0x4005b1b	      3092	objcopy.c	FUNCTION_38	IF_87
0x4005a13	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3094	objcopy.c	FUNCTION_38	IF_87	CALL_147
0x4005a1a	      0xbe00000000	                              mov esi, 0	      3094	objcopy.c	FUNCTION_38	IF_87	CALL_147
0x4005a1f	          0x4889c7	                            mov rdi, rax	      3094	objcopy.c	FUNCTION_38	IF_87	CALL_147
0x4005a22	      0xe800000000	                          call 0x4005a27	      3094	objcopy.c	FUNCTION_38	IF_87	CALL_147
0x4005a27	    0x488985c8feff	            mov qword [rbp - 0x138], rax	      3094	objcopy.c	FUNCTION_38	IF_87	CALL_147
0x4005a2e	    0x4883bdc8feff	              cmp qword [rbp - 0x138], 0	      3095	objcopy.c	FUNCTION_38	IF_87	IF_88	CALL_148
0x4005a36	     0xf8484000000	                            je 0x4005ac0	      3095	objcopy.c	FUNCTION_38	IF_87	IF_88	CALL_148
0x4005a3c	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      3095	objcopy.c	FUNCTION_38	IF_87	IF_88	CALL_148
0x4005a43	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3095	objcopy.c	FUNCTION_38	IF_87	IF_88	CALL_148
0x4005a4a	          0x4889d6	                            mov rsi, rdx	      3095	objcopy.c	FUNCTION_38	IF_87	IF_88	CALL_148
0x4005a4d	          0x4889c7	                            mov rdi, rax	      3095	objcopy.c	FUNCTION_38	IF_87	IF_88	CALL_148
0x4005a50	      0xe84cb9ffff	         call sym.is_merged_note_section	      3095	objcopy.c	FUNCTION_38	IF_87	IF_88	CALL_148
0x4005a55	            0x85c0	                           test eax, eax	      3095	objcopy.c	FUNCTION_38	IF_87	IF_88	CALL_148
0x4005a57	            0x7467	                            je 0x4005ac0	      3095	objcopy.c	FUNCTION_38	IF_87	IF_88	CALL_148
0x4005a59	    0x488b0d000000	            mov rcx, qword [0x04005a60] 	      3097	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_149
0x4005a60	    0x488b15000000	            mov rdx, qword [0x04005a67] 	      3097	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_149
0x4005a67	    0x488bb5c8feff	            mov rsi, qword [rbp - 0x138]	      3097	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_149
0x4005a6e	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3097	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_149
0x4005a75	          0x4989c8	                             mov r8, rcx	      3097	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_149
0x4005a78	      0xb900000000	                              mov ecx, 0	      3097	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_149
0x4005a7d	          0x4889c7	                            mov rdi, rax	      3097	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_149
0x4005a80	      0xe800000000	                          call 0x4005a85	      3097	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_149
0x4005a85	            0x85c0	                           test eax, eax	      3097	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_149
0x4005a87	            0x756e	                           jne 0x4005af7	      3097	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_149
0x4005a89	      0xbf00000000	                              mov edi, 0	      3099	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_151
0x4005a8e	      0xe800000000	                          call 0x4005a93	      3099	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_151
0x4005a93	          0x4889c1	                            mov rcx, rax	      3099	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_151
0x4005a96	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      3099	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_151
0x4005a9d	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3099	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_151
0x4005aa4	          0x4889c6	                            mov rsi, rax	      3099	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_151
0x4005aa7	      0xbf00000000	                              mov edi, 0	      3099	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_151
0x4005aac	      0xb800000000	                              mov eax, 0	      3099	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_151
0x4005ab1	      0xe800000000	                          call 0x4005ab6	      3099	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89	CALL_151
0x4005ab6	      0xb800000000	                              mov eax, 0	      3100	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89
0x4005abb	      0xe9d8030000	                           jmp 0x4005e98	      3100	objcopy.c	FUNCTION_38	IF_87	IF_88	IF_89
0x4005ac0	    0x8b0500000000	            mov eax, dword [0x04005ac6] 	      3103	objcopy.c	FUNCTION_38	IF_87	ELSE_16	IF_90
0x4005ac6	            0x85c0	                           test eax, eax	      3103	objcopy.c	FUNCTION_38	IF_87	ELSE_16	IF_90
0x4005ac8	            0x752d	                           jne 0x4005af7	      3103	objcopy.c	FUNCTION_38	IF_87	ELSE_16	IF_90
0x4005aca	      0xbf00000000	                              mov edi, 0	      3104	objcopy.c	FUNCTION_38	IF_87	ELSE_16	IF_90
0x4005acf	      0xe800000000	                          call 0x4005ad4	      3104	objcopy.c	FUNCTION_38	IF_87	ELSE_16	IF_90
0x4005ad4	          0x4889c1	                            mov rcx, rax	      3104	objcopy.c	FUNCTION_38	IF_87	ELSE_16	IF_90
0x4005ad7	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      3104	objcopy.c	FUNCTION_38	IF_87	ELSE_16	IF_90
0x4005ade	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3104	objcopy.c	FUNCTION_38	IF_87	ELSE_16	IF_90
0x4005ae5	          0x4889c6	                            mov rsi, rax	      3104	objcopy.c	FUNCTION_38	IF_87	ELSE_16	IF_90
0x4005ae8	      0xbf00000000	                              mov edi, 0	      3104	objcopy.c	FUNCTION_38	IF_87	ELSE_16	IF_90
0x4005aed	      0xb800000000	                              mov eax, 0	      3104	objcopy.c	FUNCTION_38	IF_87	ELSE_16	IF_90
0x4005af2	      0xe800000000	                          call 0x4005af7	      3104	objcopy.c	FUNCTION_38	IF_87	ELSE_16	IF_90
0x4005af7	    0x488b05000000	            mov rax, qword [0x04005afe] 	      3105	objcopy.c	FUNCTION_38	IF_87	CALL_154
0x4005afe	          0x4889c7	                            mov rdi, rax	      3105	objcopy.c	FUNCTION_38	IF_87	CALL_154
0x4005b01	      0xe800000000	                          call 0x4005b06	      3105	objcopy.c	FUNCTION_38	IF_87	CALL_154
0x4005b06	    0x48c705000000	               mov qword [0x04005b11], 0	      3106	objcopy.c	FUNCTION_38	IF_87
0x4005b11	    0xc70500000000	               mov dword [0x04005b1b], 0	      3107	objcopy.c	FUNCTION_38	IF_87
0x4005b1b	    0x488b05000000	            mov rax, qword [0x04005b22] 	      3110	objcopy.c	FUNCTION_38	IF_91
0x4005b22	          0x4885c0	                           test rax, rax	      3110	objcopy.c	FUNCTION_38	IF_91
0x4005b25	            0x7466	                            je 0x4005b8d	      3110	objcopy.c	FUNCTION_38	IF_91
0x4005b27	    0x488b15000000	            mov rdx, qword [0x04005b2e] 	      3112	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_155
0x4005b2e	    0x488b8dd0feff	            mov rcx, qword [rbp - 0x130]	      3112	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_155
0x4005b35	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3112	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_155
0x4005b3c	          0x4889ce	                            mov rsi, rcx	      3112	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_155
0x4005b3f	          0x4889c7	                            mov rdi, rax	      3112	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_155
0x4005b42	      0xe800000000	                          call 0x4005b47	      3112	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_155
0x4005b47	            0x85c0	                           test eax, eax	      3112	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_155
0x4005b49	            0x7542	                           jne 0x4005b8d	      3112	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_155
0x4005b4b	    0x488b1d000000	            mov rbx, qword [0x04005b52] 	      3115	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_156
0x4005b52	      0xbf00000000	                              mov edi, 0	      3116	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_157
0x4005b57	      0xe800000000	                          call 0x4005b5c	      3116	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_157
0x4005b5c	          0x4889c2	                            mov rdx, rax	      3116	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_157
0x4005b5f	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3115	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_156
0x4005b66	          0x4989d8	                             mov r8, rbx	      3115	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_156
0x4005b69	          0x4889d1	                            mov rcx, rdx	      3115	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_156
0x4005b6c	      0xba00000000	                              mov edx, 0	      3115	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_156
0x4005b71	          0x4889c6	                            mov rsi, rax	      3115	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_156
0x4005b74	      0xbf00000000	                              mov edi, 0	      3115	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_156
0x4005b79	      0xb800000000	                              mov eax, 0	      3115	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_156
0x4005b7e	      0xe800000000	                          call 0x4005b83	      3115	objcopy.c	FUNCTION_38	IF_91	IF_92	CALL_156
0x4005b83	      0xb800000000	                              mov eax, 0	      3118	objcopy.c	FUNCTION_38	IF_91	IF_92
0x4005b88	      0xe90b030000	                           jmp 0x4005e98	      3118	objcopy.c	FUNCTION_38	IF_91	IF_92
0x4005b8d	    0x8b0500000000	            mov eax, dword [0x04005b93] 	      3122	objcopy.c	FUNCTION_38	IF_93
0x4005b93	            0x85c0	                           test eax, eax	      3122	objcopy.c	FUNCTION_38	IF_93
0x4005b95	            0x750e	                           jne 0x4005ba5	      3122	objcopy.c	FUNCTION_38	IF_93
0x4005b97	    0x8b0500000000	            mov eax, dword [0x04005b9d] 	      3122	objcopy.c	FUNCTION_38	IF_93
0x4005b9d	            0x85c0	                           test eax, eax	      3122	objcopy.c	FUNCTION_38	IF_93
0x4005b9f	     0xf84df010000	                            je 0x4005d84	      3122	objcopy.c	FUNCTION_38	IF_93
0x4005ba5	    0x4881bde0feff	        cmp qword [rbp - 0x120], 0x2000 	      3127	objcopy.c	FUNCTION_38	IF_93	IF_94
0x4005bb0	            0x760b	                           jbe 0x4005bbd	      3127	objcopy.c	FUNCTION_38	IF_93	IF_94
0x4005bb2	    0x48c785e0feff	         mov qword [rbp - 0x120], 0x2000	      3128	objcopy.c	FUNCTION_38	IF_93	IF_94
0x4005bbd	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3129	objcopy.c	FUNCTION_38	IF_93	CALL_158
0x4005bc4	          0x4889c7	                            mov rdi, rax	      3129	objcopy.c	FUNCTION_38	IF_93	CALL_158
0x4005bc7	      0xe800000000	                          call 0x4005bcc	      3129	objcopy.c	FUNCTION_38	IF_93	CALL_158
0x4005bcc	        0x48894598	             mov qword [rbp - 0x68], rax	      3129	objcopy.c	FUNCTION_38	IF_93	CALL_158
0x4005bd0	     0xfb605000000	           movzx eax, byte [0x04005bd7] 	      3130	objcopy.c	FUNCTION_38	IF_93	CALL_159
0x4005bd7	           0xfb6c8	                           movzx ecx, al	      3130	objcopy.c	FUNCTION_38	IF_93	CALL_159
0x4005bda	    0x488b95e0feff	            mov rdx, qword [rbp - 0x120]	      3130	objcopy.c	FUNCTION_38	IF_93	CALL_159
0x4005be1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3130	objcopy.c	FUNCTION_38	IF_93	CALL_159
0x4005be5	            0x89ce	                            mov esi, ecx	      3130	objcopy.c	FUNCTION_38	IF_93	CALL_159
0x4005be7	          0x4889c7	                            mov rdi, rax	      3130	objcopy.c	FUNCTION_38	IF_93	CALL_159
0x4005bea	      0xe800000000	                          call 0x4005bef	      3130	objcopy.c	FUNCTION_38	IF_93	CALL_159
0x4005bef	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3132	objcopy.c	FUNCTION_38	IF_93
0x4005bf6	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      3132	objcopy.c	FUNCTION_38	IF_93
0x4005bfc	    0x8985a0feffff	            mov dword [rbp - 0x160], eax	      3132	objcopy.c	FUNCTION_38	IF_93
0x4005c02	    0xc78594feffff	              mov dword [rbp - 0x16c], 0	      3133	objcopy.c	FUNCTION_38	IF_93	FOR_8
0x4005c0c	      0xe961010000	                           jmp 0x4005d72	      3133	objcopy.c	FUNCTION_38	IF_93	FOR_8
0x4005c11	    0x8b8594feffff	            mov eax, dword [rbp - 0x16c]	      3135	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c17	    0x488d14c50000	                        lea rdx, [rax*8]	      3135	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c1f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      3135	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c26	          0x4801d0	                            add rax, rdx	      3135	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c29	          0x488b00	                    mov rax, qword [rax]	      3135	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c2c	          0x4885c0	                           test rax, rax	      3135	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c2f	     0xf8436010000	                            je 0x4005d6b	      3135	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c35	    0x8b8594feffff	            mov eax, dword [rbp - 0x16c]	      3140	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c3b	    0x488d14c50000	                        lea rdx, [rax*8]	      3140	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c43	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      3140	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c4a	          0x4801d0	                            add rax, rdx	      3140	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c4d	          0x488b00	                    mov rax, qword [rax]	      3140	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c50	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      3140	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c57	    0x8b8594feffff	            mov eax, dword [rbp - 0x16c]	      3141	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c5d	    0x488d14c50000	                        lea rdx, [rax*8]	      3141	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c65	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      3141	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c6c	          0x4801d0	                            add rax, rdx	      3141	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c6f	          0x488b00	                    mov rax, qword [rax]	      3141	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c72	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3141	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c76	    0x482b8528ffff	             sub rax, qword [rbp - 0xd8]	      3141	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c7d	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      3141	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95
0x4005c84	      0xe9d4000000	                           jmp 0x4005d5d	      3143	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1
0x4005c89	    0x4881bd28ffff	         cmp qword [rbp - 0xd8], 0x2000 	      3147	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	IF_96
0x4005c94	            0x760d	                           jbe 0x4005ca3	      3147	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	IF_96
0x4005c96	    0x48c78538ffff	          mov qword [rbp - 0xc8], 0x2000	      3148	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	IF_96
0x4005ca1	            0xeb0e	                           jmp 0x4005cb1	      3148	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	IF_96
0x4005ca3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3150	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17
0x4005caa	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      3150	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17
0x4005cb1	    0x8b8594feffff	            mov eax, dword [rbp - 0x16c]	      3152	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_160
0x4005cb7	    0x488d14c50000	                        lea rdx, [rax*8]	      3152	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_160
0x4005cbf	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      3152	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_160
0x4005cc6	          0x4801d0	                            add rax, rdx	      3152	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_160
0x4005cc9	          0x488b30	                    mov rsi, qword [rax]	      3152	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_160
0x4005ccc	    0x488bbd38ffff	             mov rdi, qword [rbp - 0xc8]	      3152	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_160
0x4005cd3	    0x488b8d30ffff	             mov rcx, qword [rbp - 0xd0]	      3152	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_160
0x4005cda	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3152	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_160
0x4005cde	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3152	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_160
0x4005ce5	          0x4989f8	                             mov r8, rdi	      3152	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_160
0x4005ce8	          0x4889c7	                            mov rdi, rax	      3152	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_160
0x4005ceb	      0xe800000000	                          call 0x4005cf0	      3152	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_160
0x4005cf0	            0x85c0	                           test eax, eax	      3152	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_160
0x4005cf2	            0x7543	                           jne 0x4005d37	      3152	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_160
0x4005cf4	    0x8b8594feffff	            mov eax, dword [rbp - 0x16c]	      3155	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_161
0x4005cfa	    0x488d14c50000	                        lea rdx, [rax*8]	      3155	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_161
0x4005d02	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      3155	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_161
0x4005d09	          0x4801d0	                            add rax, rdx	      3155	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_161
0x4005d0c	          0x488b10	                    mov rdx, qword [rax]	      3155	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_161
0x4005d0f	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3155	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_161
0x4005d16	      0xb900000000	                              mov ecx, 0	      3155	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_161
0x4005d1b	          0x4889c6	                            mov rsi, rax	      3155	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_161
0x4005d1e	      0xbf00000000	                              mov edi, 0	      3155	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_161
0x4005d23	      0xb800000000	                              mov eax, 0	      3155	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_161
0x4005d28	      0xe800000000	                          call 0x4005d2d	      3155	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97	CALL_161
0x4005d2d	      0xb800000000	                              mov eax, 0	      3156	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97
0x4005d32	      0xe961010000	                           jmp 0x4005e98	      3156	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1	ELSE_17	IF_97
0x4005d37	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      3159	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1
0x4005d3e	    0x48298528ffff	             sub qword [rbp - 0xd8], rax	      3159	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1
0x4005d45	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      3160	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1
0x4005d4c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      3160	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1
0x4005d53	          0x4801d0	                            add rax, rdx	      3160	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1
0x4005d56	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      3160	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1
0x4005d5d	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      3143	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1
0x4005d65	     0xf851effffff	                           jne 0x4005c89	      3143	objcopy.c	FUNCTION_38	IF_93	FOR_8	IF_95	WHILE_1
0x4005d6b	    0x838594feffff	              add dword [rbp - 0x16c], 1	      3133	objcopy.c	FUNCTION_38	IF_93	FOR_8
0x4005d72	    0x8b8594feffff	            mov eax, dword [rbp - 0x16c]	      3133	objcopy.c	FUNCTION_38	IF_93	FOR_8
0x4005d78	    0x3b85a0feffff	            cmp eax, dword [rbp - 0x160]	      3133	objcopy.c	FUNCTION_38	IF_93	FOR_8
0x4005d7e	     0xf828dfeffff	                            jb 0x4005c11	      3133	objcopy.c	FUNCTION_38	IF_93	FOR_8
0x4005d84	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3170	objcopy.c	FUNCTION_38	IF_98
0x4005d8b	        0x488b4008	                mov rax, qword [rax + 8]	      3170	objcopy.c	FUNCTION_38	IF_98
0x4005d8f	    0x488b80380100	           mov rax, qword [rax + 0x138] 	      3170	objcopy.c	FUNCTION_38	IF_98
0x4005d96	    0x488b8d70feff	            mov rcx, qword [rbp - 0x190]	      3170	objcopy.c	FUNCTION_38	IF_98
0x4005d9d	    0x488b9578feff	            mov rdx, qword [rbp - 0x188]	      3170	objcopy.c	FUNCTION_38	IF_98
0x4005da4	          0x4889ce	                            mov rsi, rcx	      3170	objcopy.c	FUNCTION_38	IF_98
0x4005da7	          0x4889d7	                            mov rdi, rdx	      3170	objcopy.c	FUNCTION_38	IF_98
0x4005daa	            0xffd0	                                call rax	      3170	objcopy.c	FUNCTION_38	IF_98
0x4005dac	            0x85c0	                           test eax, eax	      3170	objcopy.c	FUNCTION_38	IF_98
0x4005dae	            0x7538	                           jne 0x4005de8	      3170	objcopy.c	FUNCTION_38	IF_98
0x4005db0	      0xbf00000000	                              mov edi, 0	      3173	objcopy.c	FUNCTION_38	IF_98	CALL_163
0x4005db5	      0xe800000000	                          call 0x4005dba	      3173	objcopy.c	FUNCTION_38	IF_98	CALL_163
0x4005dba	          0x4889c2	                            mov rdx, rax	      3173	objcopy.c	FUNCTION_38	IF_98	CALL_163
0x4005dbd	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3172	objcopy.c	FUNCTION_38	IF_98	CALL_162
0x4005dc4	          0x4889d1	                            mov rcx, rdx	      3172	objcopy.c	FUNCTION_38	IF_98	CALL_162
0x4005dc7	      0xba00000000	                              mov edx, 0	      3172	objcopy.c	FUNCTION_38	IF_98	CALL_162
0x4005dcc	          0x4889c6	                            mov rsi, rax	      3172	objcopy.c	FUNCTION_38	IF_98	CALL_162
0x4005dcf	      0xbf00000000	                              mov edi, 0	      3172	objcopy.c	FUNCTION_38	IF_98	CALL_162
0x4005dd4	      0xb800000000	                              mov eax, 0	      3172	objcopy.c	FUNCTION_38	IF_98	CALL_162
0x4005dd9	      0xe800000000	                          call 0x4005dde	      3172	objcopy.c	FUNCTION_38	IF_98	CALL_162
0x4005dde	      0xb800000000	                              mov eax, 0	      3174	objcopy.c	FUNCTION_38	IF_98
0x4005de3	      0xe9b0000000	                           jmp 0x4005e98	      3174	objcopy.c	FUNCTION_38	IF_98
0x4005de8	    0x488b05000000	            mov rax, qword [0x04005def] 	      3180	objcopy.c	FUNCTION_38	IF_99
0x4005def	          0x4885c0	                           test rax, rax	      3180	objcopy.c	FUNCTION_38	IF_99
0x4005df2	     0xf849b000000	                            je 0x4005e93	      3180	objcopy.c	FUNCTION_38	IF_99
0x4005df8	    0x488b05000000	            mov rax, qword [0x04005dff] 	      3182	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_164
0x4005dff	            0x89c2	                            mov edx, eax	      3182	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_164
0x4005e01	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3182	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_164
0x4005e08	            0x89d6	                            mov esi, edx	      3182	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_164
0x4005e0a	          0x4889c7	                            mov rdi, rax	      3182	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_164
0x4005e0d	      0xe800000000	                          call 0x4005e12	      3182	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_164
0x4005e12	            0x85c0	                           test eax, eax	      3182	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_164
0x4005e14	            0x757d	                           jne 0x4005e93	      3182	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_164
0x4005e16	    0x488b1d000000	            mov rbx, qword [0x04005e1d] 	      3184	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_166
0x4005e1d	      0xbf00000000	                              mov edi, 0	      3184	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_166
0x4005e22	      0xe800000000	                          call 0x4005e27	      3184	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_166
0x4005e27	          0x4889de	                            mov rsi, rbx	      3184	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_166
0x4005e2a	          0x4889c7	                            mov rdi, rax	      3184	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_166
0x4005e2d	      0xb800000000	                              mov eax, 0	      3184	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_166
0x4005e32	      0xe800000000	                          call 0x4005e37	      3184	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_166
0x4005e37	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3186	objcopy.c	FUNCTION_38	IF_99	IF_100	IF_101
0x4005e3e	        0x488b4008	                mov rax, qword [rax + 8]	      3186	objcopy.c	FUNCTION_38	IF_99	IF_100	IF_101
0x4005e42	          0x8b4008	                mov eax, dword [rax + 8]	      3186	objcopy.c	FUNCTION_38	IF_99	IF_100	IF_101
0x4005e45	          0x83f805	                              cmp eax, 5	      3186	objcopy.c	FUNCTION_38	IF_99	IF_100	IF_101
0x4005e48	            0x7532	                           jne 0x4005e7c	      3186	objcopy.c	FUNCTION_38	IF_99	IF_100	IF_101
0x4005e4a	      0xbf00000000	                              mov edi, 0	      3188	objcopy.c	FUNCTION_38	IF_99	IF_100	IF_101	CALL_168
0x4005e4f	      0xe800000000	                          call 0x4005e54	      3188	objcopy.c	FUNCTION_38	IF_99	IF_100	IF_101	CALL_168
0x4005e54	          0x4889c7	                            mov rdi, rax	      3188	objcopy.c	FUNCTION_38	IF_99	IF_100	IF_101	CALL_168
0x4005e57	      0xb800000000	                              mov eax, 0	      3188	objcopy.c	FUNCTION_38	IF_99	IF_100	IF_101	CALL_168
0x4005e5c	      0xe800000000	                          call 0x4005e61	      3188	objcopy.c	FUNCTION_38	IF_99	IF_100	IF_101	CALL_168
0x4005e61	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      3189	objcopy.c	FUNCTION_38	IF_99	IF_100	IF_101	CALL_169
0x4005e68	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      3189	objcopy.c	FUNCTION_38	IF_99	IF_100	IF_101	CALL_169
0x4005e6f	    0x488b15000000	            mov rdx, qword [0x04005e76] 	      3189	objcopy.c	FUNCTION_38	IF_99	IF_100	IF_101	CALL_169
0x4005e76	        0x6689503a	               mov word [rax + 0x3a], dx	      3189	objcopy.c	FUNCTION_38	IF_99	IF_100	IF_101	CALL_169
0x4005e7a	            0xeb17	                           jmp 0x4005e93	      3189	objcopy.c	FUNCTION_38	IF_99	IF_100	IF_101	CALL_169
0x4005e7c	      0xbf00000000	                              mov edi, 0	      3192	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_171
0x4005e81	      0xe800000000	                          call 0x4005e86	      3192	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_171
0x4005e86	          0x4889c7	                            mov rdi, rax	      3192	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_171
0x4005e89	      0xb800000000	                              mov eax, 0	      3192	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_171
0x4005e8e	      0xe800000000	                          call 0x4005e93	      3192	objcopy.c	FUNCTION_38	IF_99	IF_100	CALL_171
0x4005e93	      0xb801000000	                              mov eax, 1	      3196	objcopy.c	FUNCTION_38
0x4005e98	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	      3197	objcopy.c	FUNCTION_38
0x4005e9c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3197	objcopy.c	FUNCTION_38
0x4005ea5	            0x7405	                            je 0x4005eac	      3197	objcopy.c	FUNCTION_38
0x4005ea7	      0xe800000000	                          call 0x4005eac	      3197	objcopy.c	FUNCTION_38
0x4005eac	    0x4881c4800100	                          add rsp, 0x180	      3197	objcopy.c	FUNCTION_38
0x4005eb3	              0x5b	                                 pop rbx	      3197	objcopy.c	FUNCTION_38
0x4005eb4	            0x415c	                                 pop r12	      3197	objcopy.c	FUNCTION_38
0x4005eb6	            0x415d	                                 pop r13	      3197	objcopy.c	FUNCTION_38
0x4005eb8	            0x415e	                                 pop r14	      3197	objcopy.c	FUNCTION_38
0x4005eba	              0x5d	                                 pop rbp	      3197	objcopy.c	FUNCTION_38
0x4005ebb	              0xc3	                                     ret	      3197	objcopy.c	FUNCTION_38
handle_remove_section_option	IF,2:FOR,0:ELSE,2:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,5	37
0x4007533	              0x55	                                push rbp	      3901	objcopy.c	FUNCTION_49
0x4007534	          0x4889e5	                            mov rbp, rsp	      3901	objcopy.c	FUNCTION_49
0x4007537	        0x4883ec10	                           sub rsp, 0x10	      3901	objcopy.c	FUNCTION_49
0x400753b	        0x48897df8	                mov qword [rbp - 8], rdi	      3901	objcopy.c	FUNCTION_49
0x400753f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3902	objcopy.c	FUNCTION_49	IF_1	CALL_1
0x4007543	      0xba06000000	                              mov edx, 6	      3902	objcopy.c	FUNCTION_49	IF_1	CALL_1
0x4007548	      0xbe00000000	                              mov esi, 0	      3902	objcopy.c	FUNCTION_49	IF_1	CALL_1
0x400754d	          0x4889c7	                            mov rdi, rax	      3902	objcopy.c	FUNCTION_49	IF_1	CALL_1
0x4007550	      0xe800000000	                          call 0x4007555	      3902	objcopy.c	FUNCTION_49	IF_1	CALL_1
0x4007555	            0x85c0	                           test eax, eax	      3902	objcopy.c	FUNCTION_49	IF_1	CALL_1
0x4007557	            0x7512	                           jne 0x400756b	      3902	objcopy.c	FUNCTION_49	IF_1	CALL_1
0x4007559	        0x488b45f8	                mov rax, qword [rbp - 8]	      3903	objcopy.c	FUNCTION_49	CALL_2
0x400755d	        0x4883c005	                              add rax, 5	      3903	objcopy.c	FUNCTION_49	CALL_2
0x4007561	          0x4889c7	                            mov rdi, rax	      3903	objcopy.c	FUNCTION_49	CALL_2
0x4007564	      0xe871ffffff	call sym.handle_remove_relocations_option	      3903	objcopy.c	FUNCTION_49	CALL_2
0x4007569	            0xeb4c	                           jmp 0x40075b7	      3911	objcopy.c	FUNCTION_49
0x400756b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3904	objcopy.c	FUNCTION_49	ELSE_1	IF_2	CALL_3
0x400756f	      0xba05000000	                              mov edx, 5	      3904	objcopy.c	FUNCTION_49	ELSE_1	IF_2	CALL_3
0x4007574	      0xbe00000000	                              mov esi, 0	      3904	objcopy.c	FUNCTION_49	ELSE_1	IF_2	CALL_3
0x4007579	          0x4889c7	                            mov rdi, rax	      3904	objcopy.c	FUNCTION_49	ELSE_1	IF_2	CALL_3
0x400757c	      0xe800000000	                          call 0x4007581	      3904	objcopy.c	FUNCTION_49	ELSE_1	IF_2	CALL_3
0x4007581	            0x85c0	                           test eax, eax	      3904	objcopy.c	FUNCTION_49	ELSE_1	IF_2	CALL_3
0x4007583	            0x7512	                           jne 0x4007597	      3904	objcopy.c	FUNCTION_49	ELSE_1	IF_2	CALL_3
0x4007585	        0x488b45f8	                mov rax, qword [rbp - 8]	      3905	objcopy.c	FUNCTION_49	ELSE_1	IF_2
0x4007589	        0x4883c004	                              add rax, 4	      3905	objcopy.c	FUNCTION_49	ELSE_1	IF_2
0x400758d	          0x4889c7	                            mov rdi, rax	      3905	objcopy.c	FUNCTION_49	ELSE_1	IF_2
0x4007590	      0xe845ffffff	call sym.handle_remove_relocations_option	      3905	objcopy.c	FUNCTION_49	ELSE_1	IF_2
0x4007595	            0xeb20	                           jmp 0x40075b7	      3911	objcopy.c	FUNCTION_49
0x4007597	        0x488b45f8	                mov rax, qword [rbp - 8]	      3908	objcopy.c	FUNCTION_49	ELSE_2	CALL_5
0x400759b	      0xba01000000	                              mov edx, 1	      3908	objcopy.c	FUNCTION_49	ELSE_2	CALL_5
0x40075a0	      0xbe01000000	                              mov esi, 1	      3908	objcopy.c	FUNCTION_49	ELSE_2	CALL_5
0x40075a5	          0x4889c7	                            mov rdi, rax	      3908	objcopy.c	FUNCTION_49	ELSE_2	CALL_5
0x40075a8	      0xe8bc93ffff	              call sym.find_section_list	      3908	objcopy.c	FUNCTION_49	ELSE_2	CALL_5
0x40075ad	    0xc70500000000	               mov dword [0x040075b7], 1	      3909	objcopy.c	FUNCTION_49	ELSE_2
0x40075b7	              0x90	                                     nop	      3911	objcopy.c	FUNCTION_49
0x40075b8	              0xc9	                                   leave	      3911	objcopy.c	FUNCTION_49
0x40075b9	              0xc3	                                     ret	      3911	objcopy.c	FUNCTION_49
copy_usage	IF,4:FOR,9:ELSE,1:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,22	78
0x40000a1	              0x55	                                push rbp	       528	objcopy.c	FUNCTION_1
0x40000a2	          0x4889e5	                            mov rbp, rsp	       528	objcopy.c	FUNCTION_1
0x40000a5	              0x53	                                push rbx	       528	objcopy.c	FUNCTION_1
0x40000a6	        0x4883ec18	                           sub rsp, 0x18	       528	objcopy.c	FUNCTION_1
0x40000aa	        0x48897de8	             mov qword [rbp - 0x18], rdi	       528	objcopy.c	FUNCTION_1
0x40000ae	          0x8975e4	             mov dword [rbp - 0x1c], esi	       528	objcopy.c	FUNCTION_1
0x40000b1	    0x488b1d000000	            mov rbx, qword [0x040000b8] 	       529	objcopy.c	FUNCTION_1	CALL_2
0x40000b8	      0xbf00000000	                              mov edi, 0	       529	objcopy.c	FUNCTION_1	CALL_2
0x40000bd	      0xe800000000	                          call 0x40000c2	       529	objcopy.c	FUNCTION_1	CALL_2
0x40000c2	          0x4889c1	                            mov rcx, rax	       529	objcopy.c	FUNCTION_1	CALL_2
0x40000c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       529	objcopy.c	FUNCTION_1	CALL_2
0x40000c9	          0x4889da	                            mov rdx, rbx	       529	objcopy.c	FUNCTION_1	CALL_2
0x40000cc	          0x4889ce	                            mov rsi, rcx	       529	objcopy.c	FUNCTION_1	CALL_2
0x40000cf	          0x4889c7	                            mov rdi, rax	       529	objcopy.c	FUNCTION_1	CALL_2
0x40000d2	      0xb800000000	                              mov eax, 0	       529	objcopy.c	FUNCTION_1	CALL_2
0x40000d7	      0xe800000000	                          call 0x40000dc	       529	objcopy.c	FUNCTION_1	CALL_2
0x40000dc	      0xbf00000000	                              mov edi, 0	       530	objcopy.c	FUNCTION_1	CALL_4
0x40000e1	      0xe800000000	                          call 0x40000e6	       530	objcopy.c	FUNCTION_1	CALL_4
0x40000e6	          0x4889c2	                            mov rdx, rax	       530	objcopy.c	FUNCTION_1	CALL_4
0x40000e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       530	objcopy.c	FUNCTION_1	CALL_4
0x40000ed	          0x4889d6	                            mov rsi, rdx	       530	objcopy.c	FUNCTION_1	CALL_4
0x40000f0	          0x4889c7	                            mov rdi, rax	       530	objcopy.c	FUNCTION_1	CALL_4
0x40000f3	      0xb800000000	                              mov eax, 0	       530	objcopy.c	FUNCTION_1	CALL_4
0x40000f8	      0xe800000000	                          call 0x40000fd	       530	objcopy.c	FUNCTION_1	CALL_4
0x40000fd	      0xbf00000000	                              mov edi, 0	       531	objcopy.c	FUNCTION_1	CALL_6
0x4000102	      0xe800000000	                          call 0x4000107	       531	objcopy.c	FUNCTION_1	CALL_6
0x4000107	          0x4889c2	                            mov rdx, rax	       531	objcopy.c	FUNCTION_1	CALL_6
0x400010a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       531	objcopy.c	FUNCTION_1	CALL_6
0x400010e	          0x4889d6	                            mov rsi, rdx	       531	objcopy.c	FUNCTION_1	CALL_6
0x4000111	          0x4889c7	                            mov rdi, rax	       531	objcopy.c	FUNCTION_1	CALL_6
0x4000114	      0xb800000000	                              mov eax, 0	       531	objcopy.c	FUNCTION_1	CALL_6
0x4000119	      0xe800000000	                          call 0x400011e	       531	objcopy.c	FUNCTION_1	CALL_6
0x400011e	      0xbf00000000	                              mov edi, 0	       532	objcopy.c	FUNCTION_1	CALL_8
0x4000123	      0xe800000000	                          call 0x4000128	       532	objcopy.c	FUNCTION_1	CALL_8
0x4000128	          0x4889c2	                            mov rdx, rax	       532	objcopy.c	FUNCTION_1	CALL_8
0x400012b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       532	objcopy.c	FUNCTION_1	CALL_8
0x400012f	          0x4889d6	                            mov rsi, rdx	       532	objcopy.c	FUNCTION_1	CALL_8
0x4000132	          0x4889c7	                            mov rdi, rax	       532	objcopy.c	FUNCTION_1	CALL_8
0x4000135	      0xb800000000	                              mov eax, 0	       532	objcopy.c	FUNCTION_1	CALL_8
0x400013a	      0xe800000000	                          call 0x400013f	       532	objcopy.c	FUNCTION_1	CALL_8
0x400013f	      0xbf00000000	                              mov edi, 0	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_13
0x4000144	      0xe800000000	                          call 0x4000149	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_13
0x4000149	          0x4889c2	                            mov rdx, rax	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_13
0x400014c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_13
0x4000150	          0x4889d6	                            mov rsi, rdx	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_13
0x4000153	          0x4889c7	                            mov rdi, rax	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_13
0x4000156	      0xb800000000	                              mov eax, 0	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_13
0x400015b	      0xe800000000	                          call 0x4000160	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_13
0x4000160	      0xbf00000000	                              mov edi, 0	       551	objcopy.c	FUNCTION_1	IF_1	CALL_16
0x4000165	      0xe800000000	                          call 0x400016a	       551	objcopy.c	FUNCTION_1	IF_1	CALL_16
0x400016a	          0x4889c2	                            mov rdx, rax	       551	objcopy.c	FUNCTION_1	IF_1	CALL_16
0x400016d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       551	objcopy.c	FUNCTION_1	IF_1	CALL_16
0x4000171	          0x4889d6	                            mov rsi, rdx	       551	objcopy.c	FUNCTION_1	IF_1	CALL_16
0x4000174	          0x4889c7	                            mov rdi, rax	       551	objcopy.c	FUNCTION_1	IF_1	CALL_16
0x4000177	      0xb800000000	                              mov eax, 0	       551	objcopy.c	FUNCTION_1	IF_1	CALL_16
0x400017c	      0xe800000000	                          call 0x4000181	       551	objcopy.c	FUNCTION_1	IF_1	CALL_16
0x4000181	    0x488b05000000	            mov rax, qword [0x04000188] 	       656	objcopy.c	FUNCTION_1	CALL_19
0x4000188	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       656	objcopy.c	FUNCTION_1	CALL_19
0x400018c	          0x4889d6	                            mov rsi, rdx	       656	objcopy.c	FUNCTION_1	CALL_19
0x400018f	          0x4889c7	                            mov rdi, rax	       656	objcopy.c	FUNCTION_1	CALL_19
0x4000192	      0xe800000000	                          call 0x4000197	       656	objcopy.c	FUNCTION_1	CALL_19
0x4000197	      0xb83c000000	                           mov eax, 0x3c	       657	objcopy.c	FUNCTION_1	IF_4
0x400019c	            0x84c0	                             test al, al	       657	objcopy.c	FUNCTION_1	IF_4
0x400019e	            0x742c	                            je 0x40001cc	       657	objcopy.c	FUNCTION_1	IF_4
0x40001a0	        0x837de400	               cmp dword [rbp - 0x1c], 0	       657	objcopy.c	FUNCTION_1	IF_4
0x40001a4	            0x7526	                           jne 0x40001cc	       657	objcopy.c	FUNCTION_1	IF_4
0x40001a6	      0xbf00000000	                              mov edi, 0	       658	objcopy.c	FUNCTION_1	CALL_21
0x40001ab	      0xe800000000	                          call 0x40001b0	       658	objcopy.c	FUNCTION_1	CALL_21
0x40001b0	          0x4889c1	                            mov rcx, rax	       658	objcopy.c	FUNCTION_1	CALL_21
0x40001b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       658	objcopy.c	FUNCTION_1	CALL_21
0x40001b7	      0xba00000000	                              mov edx, 0	       658	objcopy.c	FUNCTION_1	CALL_21
0x40001bc	          0x4889ce	                            mov rsi, rcx	       658	objcopy.c	FUNCTION_1	CALL_21
0x40001bf	          0x4889c7	                            mov rdi, rax	       658	objcopy.c	FUNCTION_1	CALL_21
0x40001c2	      0xb800000000	                              mov eax, 0	       658	objcopy.c	FUNCTION_1	CALL_21
0x40001c7	      0xe800000000	                          call 0x40001cc	       658	objcopy.c	FUNCTION_1	CALL_21
0x40001cc	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       659	objcopy.c	FUNCTION_1	CALL_22
0x40001cf	            0x89c7	                            mov edi, eax	       659	objcopy.c	FUNCTION_1	CALL_22
0x40001d1	      0xe800000000	                    call sym.strip_usage	       659	objcopy.c	FUNCTION_1	CALL_22
strip_usage	IF,2:FOR,0:ELSE,1:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,22	78
0x40001d6	              0x55	                                push rbp	       664	objcopy.c	FUNCTION_2
0x40001d7	          0x4889e5	                            mov rbp, rsp	       664	objcopy.c	FUNCTION_2
0x40001da	              0x53	                                push rbx	       664	objcopy.c	FUNCTION_2
0x40001db	        0x4883ec18	                           sub rsp, 0x18	       664	objcopy.c	FUNCTION_2
0x40001df	        0x48897de8	             mov qword [rbp - 0x18], rdi	       664	objcopy.c	FUNCTION_2
0x40001e3	          0x8975e4	             mov dword [rbp - 0x1c], esi	       664	objcopy.c	FUNCTION_2
0x40001e6	    0x488b1d000000	            mov rbx, qword [0x040001ed] 	       665	objcopy.c	FUNCTION_2	CALL_2
0x40001ed	      0xbf00000000	                              mov edi, 0	       665	objcopy.c	FUNCTION_2	CALL_2
0x40001f2	      0xe800000000	                          call 0x40001f7	       665	objcopy.c	FUNCTION_2	CALL_2
0x40001f7	          0x4889c1	                            mov rcx, rax	       665	objcopy.c	FUNCTION_2	CALL_2
0x40001fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       665	objcopy.c	FUNCTION_2	CALL_2
0x40001fe	          0x4889da	                            mov rdx, rbx	       665	objcopy.c	FUNCTION_2	CALL_2
0x4000201	          0x4889ce	                            mov rsi, rcx	       665	objcopy.c	FUNCTION_2	CALL_2
0x4000204	          0x4889c7	                            mov rdi, rax	       665	objcopy.c	FUNCTION_2	CALL_2
0x4000207	      0xb800000000	                              mov eax, 0	       665	objcopy.c	FUNCTION_2	CALL_2
0x400020c	      0xe800000000	                          call 0x4000211	       665	objcopy.c	FUNCTION_2	CALL_2
0x4000211	      0xbf00000000	                              mov edi, 0	       666	objcopy.c	FUNCTION_2	CALL_4
0x4000216	      0xe800000000	                          call 0x400021b	       666	objcopy.c	FUNCTION_2	CALL_4
0x400021b	          0x4889c2	                            mov rdx, rax	       666	objcopy.c	FUNCTION_2	CALL_4
0x400021e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       666	objcopy.c	FUNCTION_2	CALL_4
0x4000222	          0x4889d6	                            mov rsi, rdx	       666	objcopy.c	FUNCTION_2	CALL_4
0x4000225	          0x4889c7	                            mov rdi, rax	       666	objcopy.c	FUNCTION_2	CALL_4
0x4000228	      0xb800000000	                              mov eax, 0	       666	objcopy.c	FUNCTION_2	CALL_4
0x400022d	      0xe800000000	                          call 0x4000232	       666	objcopy.c	FUNCTION_2	CALL_4
0x4000232	      0xbf00000000	                              mov edi, 0	       667	objcopy.c	FUNCTION_2	CALL_6
0x4000237	      0xe800000000	                          call 0x400023c	       667	objcopy.c	FUNCTION_2	CALL_6
0x400023c	          0x4889c2	                            mov rdx, rax	       667	objcopy.c	FUNCTION_2	CALL_6
0x400023f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       667	objcopy.c	FUNCTION_2	CALL_6
0x4000243	          0x4889d6	                            mov rsi, rdx	       667	objcopy.c	FUNCTION_2	CALL_6
0x4000246	          0x4889c7	                            mov rdi, rax	       667	objcopy.c	FUNCTION_2	CALL_6
0x4000249	      0xb800000000	                              mov eax, 0	       667	objcopy.c	FUNCTION_2	CALL_6
0x400024e	      0xe800000000	                          call 0x4000253	       667	objcopy.c	FUNCTION_2	CALL_6
0x4000253	      0xbf00000000	                              mov edi, 0	       668	objcopy.c	FUNCTION_2	CALL_8
0x4000258	      0xe800000000	                          call 0x400025d	       668	objcopy.c	FUNCTION_2	CALL_8
0x400025d	          0x4889c2	                            mov rdx, rax	       668	objcopy.c	FUNCTION_2	CALL_8
0x4000260	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       668	objcopy.c	FUNCTION_2	CALL_8
0x4000264	          0x4889d6	                            mov rsi, rdx	       668	objcopy.c	FUNCTION_2	CALL_8
0x4000267	          0x4889c7	                            mov rdi, rax	       668	objcopy.c	FUNCTION_2	CALL_8
0x400026a	      0xb800000000	                              mov eax, 0	       668	objcopy.c	FUNCTION_2	CALL_8
0x400026f	      0xe800000000	                          call 0x4000274	       668	objcopy.c	FUNCTION_2	CALL_8
0x4000274	      0xbf00000000	                              mov edi, 0	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_13
0x4000279	      0xe800000000	                          call 0x400027e	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_13
0x400027e	          0x4889c2	                            mov rdx, rax	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_13
0x4000281	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_13
0x4000285	          0x4889d6	                            mov rsi, rdx	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_13
0x4000288	          0x4889c7	                            mov rdi, rax	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_13
0x400028b	      0xb800000000	                              mov eax, 0	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_13
0x4000290	      0xe800000000	                          call 0x4000295	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_13
0x4000295	      0xbf00000000	                              mov edi, 0	       686	objcopy.c	FUNCTION_2	CALL_16
0x400029a	      0xe800000000	                          call 0x400029f	       686	objcopy.c	FUNCTION_2	CALL_16
0x400029f	          0x4889c2	                            mov rdx, rax	       686	objcopy.c	FUNCTION_2	CALL_16
0x40002a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       686	objcopy.c	FUNCTION_2	CALL_16
0x40002a6	          0x4889d6	                            mov rsi, rdx	       686	objcopy.c	FUNCTION_2	CALL_16
0x40002a9	          0x4889c7	                            mov rdi, rax	       686	objcopy.c	FUNCTION_2	CALL_16
0x40002ac	      0xb800000000	                              mov eax, 0	       686	objcopy.c	FUNCTION_2	CALL_16
0x40002b1	      0xe800000000	                          call 0x40002b6	       686	objcopy.c	FUNCTION_2	CALL_16
0x40002b6	    0x488b05000000	            mov rax, qword [0x040002bd] 	       709	objcopy.c	FUNCTION_2	CALL_19
0x40002bd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       709	objcopy.c	FUNCTION_2	CALL_19
0x40002c1	          0x4889d6	                            mov rsi, rdx	       709	objcopy.c	FUNCTION_2	CALL_19
0x40002c4	          0x4889c7	                            mov rdi, rax	       709	objcopy.c	FUNCTION_2	CALL_19
0x40002c7	      0xe800000000	                          call 0x40002cc	       709	objcopy.c	FUNCTION_2	CALL_19
0x40002cc	      0xb83c000000	                           mov eax, 0x3c	       710	objcopy.c	FUNCTION_2	IF_2
0x40002d1	            0x84c0	                             test al, al	       710	objcopy.c	FUNCTION_2	IF_2
0x40002d3	            0x742c	                            je 0x4000301	       710	objcopy.c	FUNCTION_2	IF_2
0x40002d5	        0x837de400	               cmp dword [rbp - 0x1c], 0	       710	objcopy.c	FUNCTION_2	IF_2
0x40002d9	            0x7526	                           jne 0x4000301	       710	objcopy.c	FUNCTION_2	IF_2
0x40002db	      0xbf00000000	                              mov edi, 0	       711	objcopy.c	FUNCTION_2	CALL_21
0x40002e0	      0xe800000000	                          call 0x40002e5	       711	objcopy.c	FUNCTION_2	CALL_21
0x40002e5	          0x4889c1	                            mov rcx, rax	       711	objcopy.c	FUNCTION_2	CALL_21
0x40002e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       711	objcopy.c	FUNCTION_2	CALL_21
0x40002ec	      0xba00000000	                              mov edx, 0	       711	objcopy.c	FUNCTION_2	CALL_21
0x40002f1	          0x4889ce	                            mov rsi, rcx	       711	objcopy.c	FUNCTION_2	CALL_21
0x40002f4	          0x4889c7	                            mov rdi, rax	       711	objcopy.c	FUNCTION_2	CALL_21
0x40002f7	      0xb800000000	                              mov eax, 0	       711	objcopy.c	FUNCTION_2	CALL_21
0x40002fc	      0xe800000000	                          call 0x4000301	       711	objcopy.c	FUNCTION_2	CALL_21
0x4000301	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       712	objcopy.c	FUNCTION_2	CALL_22
0x4000304	            0x89c7	                            mov edi, eax	       712	objcopy.c	FUNCTION_2	CALL_22
0x4000306	      0xe800000000	                    call sym.parse_flags	       712	objcopy.c	FUNCTION_2	CALL_22
convert_efi_target	IF,2:FOR,0:ELSE,1:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2	42
0x4008c80	              0x55	                                push rbp	      4591	objcopy.c	FUNCTION_59
0x4008c81	          0x4889e5	                            mov rbp, rsp	      4591	objcopy.c	FUNCTION_59
0x4008c84	        0x4883ec10	                           sub rsp, 0x10	      4591	objcopy.c	FUNCTION_59
0x4008c88	        0x48897df8	                mov qword [rbp - 8], rdi	      4591	objcopy.c	FUNCTION_59
0x4008c8c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4592	objcopy.c	FUNCTION_59
0x4008c90	          0xc60070	                    mov byte [rax], 0x70	      4592	objcopy.c	FUNCTION_59
0x4008c93	        0x488b45f8	                mov rax, qword [rbp - 8]	      4593	objcopy.c	FUNCTION_59
0x4008c97	        0x4883c001	                              add rax, 1	      4593	objcopy.c	FUNCTION_59
0x4008c9b	          0xc60065	                    mov byte [rax], 0x65	      4593	objcopy.c	FUNCTION_59
0x4008c9e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4594	objcopy.c	FUNCTION_59
0x4008ca2	        0x4883c002	                              add rax, 2	      4594	objcopy.c	FUNCTION_59
0x4008ca6	          0xc60069	                    mov byte [rax], 0x69	      4594	objcopy.c	FUNCTION_59
0x4008ca9	        0x488b45f8	                mov rax, qword [rbp - 8]	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4008cad	        0x4883c004	                              add rax, 4	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4008cb1	      0xbe00000000	                              mov esi, 0	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4008cb6	          0x4889c7	                            mov rdi, rax	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4008cb9	      0xe800000000	                          call 0x4008cbe	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4008cbe	            0x85c0	                           test eax, eax	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4008cc0	            0x7523	                           jne 0x4008ce5	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4008cc2	        0x488b45f8	                mov rax, qword [rbp - 8]	      4599	objcopy.c	FUNCTION_59	IF_1
0x4008cc6	        0x4883c005	                              add rax, 5	      4599	objcopy.c	FUNCTION_59	IF_1
0x4008cca	          0xc60033	                    mov byte [rax], 0x33	      4599	objcopy.c	FUNCTION_59	IF_1
0x4008ccd	        0x488b45f8	                mov rax, qword [rbp - 8]	      4600	objcopy.c	FUNCTION_59	IF_1
0x4008cd1	        0x4883c006	                              add rax, 6	      4600	objcopy.c	FUNCTION_59	IF_1
0x4008cd5	          0xc60038	                    mov byte [rax], 0x38	      4600	objcopy.c	FUNCTION_59	IF_1
0x4008cd8	        0x488b45f8	                mov rax, qword [rbp - 8]	      4601	objcopy.c	FUNCTION_59	IF_1
0x4008cdc	        0x4883c007	                              add rax, 7	      4601	objcopy.c	FUNCTION_59	IF_1
0x4008ce0	          0xc60036	                    mov byte [rax], 0x36	      4601	objcopy.c	FUNCTION_59	IF_1
0x4008ce3	            0xeb24	                           jmp 0x4008d09	      4608	objcopy.c	FUNCTION_59
0x4008ce5	        0x488b45f8	                mov rax, qword [rbp - 8]	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4008ce9	        0x4883c004	                              add rax, 4	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4008ced	      0xbe00000000	                              mov esi, 0	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4008cf2	          0x4889c7	                            mov rdi, rax	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4008cf5	      0xe800000000	                          call 0x4008cfa	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4008cfa	            0x85c0	                           test eax, eax	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4008cfc	            0x750b	                           jne 0x4008d09	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4008cfe	        0x488b45f8	                mov rax, qword [rbp - 8]	      4606	objcopy.c	FUNCTION_59	ELSE_1	IF_2
0x4008d02	        0x4883c007	                              add rax, 7	      4606	objcopy.c	FUNCTION_59	ELSE_1	IF_2
0x4008d06	          0xc6002d	                    mov byte [rax], 0x2d	      4606	objcopy.c	FUNCTION_59	ELSE_1	IF_2
0x4008d09	              0x90	                                     nop	      4608	objcopy.c	FUNCTION_59
0x4008d0a	              0xc9	                                   leave	      4608	objcopy.c	FUNCTION_59
0x4008d0b	              0xc3	                                     ret	      4608	objcopy.c	FUNCTION_59
eq_string_redefnode	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1	21
0x4000bed	              0x55	                                push rbp	       961	objcopy.c	FUNCTION_6
0x4000bee	          0x4889e5	                            mov rbp, rsp	       961	objcopy.c	FUNCTION_6
0x4000bf1	        0x4883ec20	                           sub rsp, 0x20	       961	objcopy.c	FUNCTION_6
0x4000bf5	        0x48897de8	             mov qword [rbp - 0x18], rdi	       961	objcopy.c	FUNCTION_6
0x4000bf9	        0x488975e0	             mov qword [rbp - 0x20], rsi	       961	objcopy.c	FUNCTION_6
0x4000bfd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       962	objcopy.c	FUNCTION_6
0x4000c01	        0x488945f0	             mov qword [rbp - 0x10], rax	       962	objcopy.c	FUNCTION_6
0x4000c05	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       963	objcopy.c	FUNCTION_6
0x4000c09	        0x488945f8	                mov qword [rbp - 8], rax	       963	objcopy.c	FUNCTION_6
0x4000c0d	        0x488b45f8	                mov rax, qword [rbp - 8]	       964	objcopy.c	FUNCTION_6	CALL_1
0x4000c11	          0x488b10	                    mov rdx, qword [rax]	       964	objcopy.c	FUNCTION_6	CALL_1
0x4000c14	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       964	objcopy.c	FUNCTION_6	CALL_1
0x4000c18	          0x488b00	                    mov rax, qword [rax]	       964	objcopy.c	FUNCTION_6	CALL_1
0x4000c1b	          0x4889d6	                            mov rsi, rdx	       964	objcopy.c	FUNCTION_6	CALL_1
0x4000c1e	          0x4889c7	                            mov rdi, rax	       964	objcopy.c	FUNCTION_6	CALL_1
0x4000c21	      0xe800000000	                          call 0x4000c26	       964	objcopy.c	FUNCTION_6	CALL_1
0x4000c26	            0x85c0	                           test eax, eax	       964	objcopy.c	FUNCTION_6	CALL_1
0x4000c28	           0xf94c0	                                 sete al	       964	objcopy.c	FUNCTION_6	CALL_1
0x4000c2b	           0xfb6c0	                           movzx eax, al	       964	objcopy.c	FUNCTION_6	CALL_1
0x4000c2e	              0xc9	                                   leave	       965	objcopy.c	FUNCTION_6
0x4000c2f	              0xc3	                                     ret	       965	objcopy.c	FUNCTION_6
copy_section	IF,12:FOR,4:ELSE,2:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,18	326
0x4007905	              0x55	                                push rbp	      4020	objcopy.c	FUNCTION_51
0x4007906	          0x4889e5	                            mov rbp, rsp	      4020	objcopy.c	FUNCTION_51
0x4007909	            0x4154	                                push r12	      4020	objcopy.c	FUNCTION_51
0x400790b	              0x53	                                push rbx	      4020	objcopy.c	FUNCTION_51
0x400790c	    0x4881eca00000	                           sub rsp, 0xa0	      4020	objcopy.c	FUNCTION_51
0x4007913	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      4020	objcopy.c	FUNCTION_51
0x400791a	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      4020	objcopy.c	FUNCTION_51
0x4007921	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      4020	objcopy.c	FUNCTION_51
0x4007928	    0x64488b042528	                mov rax, qword fs:[0x28]	      4020	objcopy.c	FUNCTION_51
0x4007931	        0x488945e8	             mov qword [rbp - 0x18], rax	      4020	objcopy.c	FUNCTION_51
0x4007935	            0x31c0	                            xor eax, eax	      4020	objcopy.c	FUNCTION_51
0x4007937	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4021	objcopy.c	FUNCTION_51
0x400793e	        0x488945b8	             mov qword [rbp - 0x48], rax	      4021	objcopy.c	FUNCTION_51
0x4007942	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	      4026	objcopy.c	FUNCTION_51	IF_1	CALL_1
0x4007949	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4026	objcopy.c	FUNCTION_51	IF_1	CALL_1
0x4007950	      0xba01000000	                              mov edx, 1	      4026	objcopy.c	FUNCTION_51	IF_1	CALL_1
0x4007955	          0x4889ce	                            mov rsi, rcx	      4026	objcopy.c	FUNCTION_51	IF_1	CALL_1
0x4007958	          0x4889c7	                            mov rdi, rax	      4026	objcopy.c	FUNCTION_51	IF_1	CALL_1
0x400795b	      0xe88bfaffff	                   call sym.skip_section	      4026	objcopy.c	FUNCTION_51	IF_1	CALL_1
0x4007960	            0x85c0	                           test eax, eax	      4026	objcopy.c	FUNCTION_51	IF_1	CALL_1
0x4007962	     0xf85b6040000	                           jne 0x4007e1e	      4026	objcopy.c	FUNCTION_51	IF_1	CALL_1
0x4007968	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4029	objcopy.c	FUNCTION_51
0x400796f	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4029	objcopy.c	FUNCTION_51
0x4007973	        0x488945c0	             mov qword [rbp - 0x40], rax	      4029	objcopy.c	FUNCTION_51
0x4007977	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4034	objcopy.c	FUNCTION_51
0x400797e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4034	objcopy.c	FUNCTION_51
0x4007982	        0x48894588	             mov qword [rbp - 0x78], rax	      4034	objcopy.c	FUNCTION_51
0x4007986	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4036	objcopy.c	FUNCTION_51	IF_2
0x400798d	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4036	objcopy.c	FUNCTION_51	IF_2
0x4007990	      0x2500010000	                          and eax, 0x100	      4036	objcopy.c	FUNCTION_51	IF_2
0x4007995	            0x85c0	                           test eax, eax	      4036	objcopy.c	FUNCTION_51	IF_2
0x4007997	     0xf84b4030000	                            je 0x4007d51	      4036	objcopy.c	FUNCTION_51	IF_2
0x400799d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4037	objcopy.c	FUNCTION_51	IF_2
0x40079a1	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4037	objcopy.c	FUNCTION_51	IF_2
0x40079a4	      0x2500010000	                          and eax, 0x100	      4037	objcopy.c	FUNCTION_51	IF_2
0x40079a9	            0x85c0	                           test eax, eax	      4037	objcopy.c	FUNCTION_51	IF_2
0x40079ab	     0xf84a0030000	                            je 0x4007d51	      4037	objcopy.c	FUNCTION_51	IF_2
0x40079b1	    0x48c745900000	               mov qword [rbp - 0x70], 0	      4039	objcopy.c	FUNCTION_51	IF_2
0x40079b9	        0x488d5590	                   lea rdx, [rbp - 0x70]	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40079bd	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40079c4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40079cb	          0x4889ce	                            mov rsi, rcx	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40079ce	          0x4889c7	                            mov rdi, rax	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40079d1	      0xe800000000	                          call 0x40079d6	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40079d6	            0x85c0	                           test eax, eax	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40079d8	            0x7429	                            je 0x4007a03	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40079da	        0x488d7d88	                   lea rdi, [rbp - 0x78]	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40079de	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40079e2	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40079e6	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40079ed	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40079f4	          0x4989f8	                             mov r8, rdi	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40079f7	          0x4889c7	                            mov rdi, rax	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40079fa	      0xe800000000	                          call 0x40079ff	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40079ff	            0x85c0	                           test eax, eax	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x4007a01	            0x7540	                           jne 0x4007a43	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x4007a03	    0xc70500000000	               mov dword [0x04007a0d], 1	      4045	objcopy.c	FUNCTION_51	IF_2	IF_3
0x4007a0d	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4007a14	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4007a1b	      0xb900000000	                              mov ecx, 0	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4007a20	          0x4889c6	                            mov rsi, rax	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4007a23	      0xbf00000000	                              mov edi, 0	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4007a28	      0xb800000000	                              mov eax, 0	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4007a2d	      0xe800000000	                          call 0x4007a32	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4007a32	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4047	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_5
0x4007a36	          0x4889c7	                            mov rdi, rax	      4047	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_5
0x4007a39	      0xe800000000	                          call 0x4007a3e	      4047	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_5
0x4007a3e	      0xe9dc030000	                           jmp 0x4007e1f	      4048	objcopy.c	FUNCTION_51	IF_2	IF_3
0x4007a43	    0x8b0500000000	            mov eax, dword [0x04007a49] 	      4051	objcopy.c	FUNCTION_51	IF_2	IF_4
0x4007a49	            0x85c0	                           test eax, eax	      4051	objcopy.c	FUNCTION_51	IF_2	IF_4
0x4007a4b	     0xf8426010000	                            je 0x4007b77	      4051	objcopy.c	FUNCTION_51	IF_2	IF_4
0x4007a51	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4007a55	    0x8b1500000000	            mov edx, dword [0x04007a5b] 	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4007a5b	          0x4863ca	                         movsxd rcx, edx	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4007a5e	      0xba00000000	                              mov edx, 0	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4007a63	          0x48f7f1	                                 div rcx	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4007a66	          0x4889d0	                            mov rax, rdx	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4007a69	          0x4885c0	                           test rax, rax	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4007a6c	     0xf85d7000000	                           jne 0x4007b49	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4007a72	    0x48c745980000	               mov qword [rbp - 0x68], 0	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4007a7a	      0xe9ba000000	                           jmp 0x4007b39	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4007a7f	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007a87	      0xe986000000	                           jmp 0x4007b12	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007a8c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4064	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007a90	        0x488945c8	             mov qword [rbp - 0x38], rax	      4064	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007a94	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4066	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007a98	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4066	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007a9c	          0x4801c2	                            add rdx, rax	      4066	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007a9f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4066	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007aa3	          0x4801d0	                            add rax, rdx	      4066	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007aa6	           0xfb600	                   movzx eax, byte [rax]	      4066	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007aa9	    0x88857fffffff	               mov byte [rbp - 0x81], al	      4066	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007aaf	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007ab3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007ab7	          0x4801c2	                            add rdx, rax	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007aba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007abe	          0x4801c2	                            add rdx, rax	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007ac1	    0x8b0500000000	            mov eax, dword [0x04007ac7] 	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007ac7	          0x4863c8	                         movsxd rcx, eax	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007aca	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007ace	          0x4801c8	                            add rax, rcx	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007ad1	        0x482b45a0	             sub rax, qword [rbp - 0x60]	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007ad5	        0x488d48ff	                      lea rcx, [rax - 1]	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007ad9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007add	          0x4801c8	                            add rax, rcx	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007ae0	           0xfb600	                   movzx eax, byte [rax]	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007ae3	            0x8802	                      mov byte [rdx], al	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007ae5	    0x8b0500000000	            mov eax, dword [0x04007aeb] 	      4068	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007aeb	          0x4863d0	                         movsxd rdx, eax	      4068	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007aee	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4068	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007af2	          0x4801d0	                            add rax, rdx	      4068	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007af5	        0x482b45a0	             sub rax, qword [rbp - 0x60]	      4068	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007af9	        0x488d50ff	                      lea rdx, [rax - 1]	      4068	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007afd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4068	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007b01	          0x4801c2	                            add rdx, rax	      4068	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007b04	     0xfb6857fffff	            movzx eax, byte [rbp - 0x81]	      4068	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007b0b	            0x8802	                      mov byte [rdx], al	      4068	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007b0d	      0x488345a001	               add qword [rbp - 0x60], 1	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007b12	    0x8b0500000000	            mov eax, dword [0x04007b18] 	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007b18	            0x89c2	                            mov edx, eax	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007b1a	          0xc1ea1f	                           shr edx, 0x1f	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007b1d	             0x1d0	                            add eax, edx	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007b1f	            0xd1f8	                              sar eax, 1	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007b21	            0x4898	                                    cdqe	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007b23	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007b27	     0xf875fffffff	                            ja 0x4007a8c	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4007b2d	    0x8b0500000000	            mov eax, dword [0x04007b33] 	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4007b33	            0x4898	                                    cdqe	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4007b35	        0x48014598	            add qword [rbp - 0x68], rax 	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4007b39	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4007b3d	        0x48394598	            cmp qword [rbp - 0x68], rax 	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4007b41	     0xf8238ffffff	                            jb 0x4007a7f	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4007b47	            0xeb2e	                           jmp 0x4007b77	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4007b49	    0x448b25000000	           mov r12d, dword [0x04007b50] 	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4007b50	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4007b57	          0x488b18	                    mov rbx, qword [rax]	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4007b5a	      0xbf00000000	                              mov edi, 0	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4007b5f	      0xe800000000	                          call 0x4007b64	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4007b64	          0x4489e2	                           mov edx, r12d	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4007b67	          0x4889de	                            mov rsi, rbx	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4007b6a	          0x4889c7	                            mov rdi, rax	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4007b6d	      0xb800000000	                              mov eax, 0	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4007b72	      0xe800000000	                          call 0x4007b77	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4007b77	    0x8b0500000000	            mov eax, dword [0x04007b7d] 	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007b7d	            0x85c0	                           test eax, eax	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007b7f	     0xf885c010000	                            js 0x4007ce1	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007b85	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007b89	    0x8b0500000000	            mov eax, dword [0x04007b8f] 	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007b8f	            0x4898	                                    cdqe	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007b91	          0x4801d0	                            add rax, rdx	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007b94	        0x488945a8	             mov qword [rbp - 0x58], rax	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007b98	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4081	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007b9c	        0x488945b0	             mov qword [rbp - 0x50], rax	      4081	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007ba0	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4082	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007ba4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4082	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007ba8	          0x4801d0	                            add rax, rdx	      4082	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007bab	        0x488945d0	             mov qword [rbp - 0x30], rax	      4082	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007baf	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007bb6	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007bba	    0x8b1500000000	            mov edx, dword [0x04007bc0] 	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007bc0	          0x4863ca	                         movsxd rcx, edx	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007bc3	      0xba00000000	                              mov edx, 0	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007bc8	          0x48f7f1	                                 div rcx	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007bcb	          0x4889d0	                            mov rax, rdx	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007bce	          0x894584	             mov dword [rbp - 0x7c], eax	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007bd1	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007bd4	            0x4898	                                    cdqe	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007bd6	          0x48f7d8	                                 neg rax	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007bd9	        0x480145a8	            add qword [rbp - 0x58], rax 	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007bdd	    0x8b0500000000	            mov eax, dword [0x04007be3] 	      4091	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x4007be3	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	      4091	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x4007be6	            0x7d66	                           jge 0x4007c4e	      4091	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x4007be8	    0x8b0500000000	            mov eax, dword [0x04007bee] 	      4092	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x4007bee	            0x4898	                                    cdqe	      4092	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x4007bf0	        0x480145a8	            add qword [rbp - 0x58], rax 	      4092	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x4007bf4	            0xeb58	                           jmp 0x4007c4e	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4007bf6	    0xc74580000000	               mov dword [rbp - 0x80], 0	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4007bfd	            0xeb35	                           jmp 0x4007c34	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4007bff	          0x8b4580	             mov eax, dword [rbp - 0x80]	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4007c02	          0x4863d0	                         movsxd rdx, eax	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4007c05	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4007c09	          0x4801d0	                            add rax, rdx	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4007c0c	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4007c10	            0x732f	                           jae 0x4007c41	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4007c12	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4007c16	        0x488d5001	                      lea rdx, [rax + 1]	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4007c1a	        0x488955b0	             mov qword [rbp - 0x50], rdx	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4007c1e	          0x8b5580	             mov edx, dword [rbp - 0x80]	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4007c21	          0x4863ca	                         movsxd rcx, edx	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4007c24	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4007c28	          0x4801ca	                            add rdx, rcx	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4007c2b	           0xfb612	                   movzx edx, byte [rdx]	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4007c2e	            0x8810	                      mov byte [rax], dl	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4007c30	        0x83458001	               add dword [rbp - 0x80], 1	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4007c34	    0x8b0500000000	            mov eax, dword [0x04007c3a] 	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4007c3a	          0x394580	            cmp dword [rbp - 0x80], eax 	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4007c3d	            0x7cc0	                            jl 0x4007bff	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4007c3f	            0xeb01	                           jmp 0x4007c42	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4007c41	              0x90	                                     nop	      4098	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4007c42	    0x8b0500000000	            mov eax, dword [0x04007c48] 	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4007c48	            0x4898	                                    cdqe	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4007c4a	        0x480145a8	            add qword [rbp - 0x58], rax 	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4007c4e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4007c52	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4007c56	            0x729e	                            jb 0x4007bf6	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4007c58	    0x8b0500000000	            mov eax, dword [0x04007c5e] 	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c5e	          0x4863d0	                         movsxd rdx, eax	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c61	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c65	          0x4801c2	                            add rdx, rax	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c68	    0x8b0500000000	            mov eax, dword [0x04007c6e] 	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c6e	            0x4898	                                    cdqe	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c70	          0x4829c2	                            sub rdx, rax	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c73	          0x4889d0	                            mov rax, rdx	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c76	        0x4883e801	                              sub rax, 1	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c7a	    0x8b1500000000	            mov edx, dword [0x04007c80] 	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c80	          0x4863da	                         movsxd rbx, edx	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c83	      0xba00000000	                              mov edx, 0	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c88	          0x48f7f3	                                 div rbx	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c8b	          0x4889c2	                            mov rdx, rax	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c8e	    0x8b0500000000	            mov eax, dword [0x04007c94] 	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c94	            0x4898	                                    cdqe	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c96	        0x480fafc2	                           imul rax, rdx	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c9a	        0x48894588	             mov qword [rbp - 0x78], rax	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007c9e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007ca2	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007ca6	    0x8b1500000000	            mov edx, dword [0x04007cac] 	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007cac	          0x4863da	                         movsxd rbx, edx	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007caf	      0xba00000000	                              mov edx, 0	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007cb4	          0x48f7f3	                                 div rbx	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007cb7	          0x4889c2	                            mov rdx, rax	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007cba	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007cbe	        0x48895030	             mov qword [rax + 0x30], rdx	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4007cc2	    0x8b0500000000	            mov eax, dword [0x04007cc8] 	      4104	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x4007cc8	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	      4104	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x4007ccb	            0x7d14	                           jge 0x4007ce1	      4104	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x4007ccd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4105	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x4007cd1	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4105	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x4007cd5	        0x488d5001	                      lea rdx, [rax + 1]	      4105	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x4007cd9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4105	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x4007cdd	        0x48895030	             mov qword [rax + 0x30], rdx	      4105	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x4007ce1	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4007ce5	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4007ce9	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4007ced	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4007cf1	          0x4989c8	                             mov r8, rcx	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4007cf4	      0xb900000000	                              mov ecx, 0	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4007cf9	          0x4889c7	                            mov rdi, rax	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4007cfc	      0xe800000000	                          call 0x4007d01	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4007d01	            0x85c0	                           test eax, eax	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4007d03	            0x753b	                           jne 0x4007d40	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4007d05	    0xc70500000000	               mov dword [0x04007d0f], 1	      4110	objcopy.c	FUNCTION_51	IF_2	IF_10
0x4007d0f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x4007d13	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x4007d17	      0xb900000000	                              mov ecx, 0	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x4007d1c	          0x4889c6	                            mov rsi, rax	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x4007d1f	      0xbf00000000	                              mov edi, 0	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x4007d24	      0xb800000000	                              mov eax, 0	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x4007d29	      0xe800000000	                          call 0x4007d2e	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x4007d2e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4112	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_10
0x4007d32	          0x4889c7	                            mov rdi, rax	      4112	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_10
0x4007d35	      0xe800000000	                          call 0x4007d3a	      4112	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_10
0x4007d3a	              0x90	                                     nop	      4113	objcopy.c	FUNCTION_51	IF_2	IF_10
0x4007d3b	      0xe9df000000	                           jmp 0x4007e1f	      4113	objcopy.c	FUNCTION_51	IF_2	IF_10
0x4007d40	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4115	objcopy.c	FUNCTION_51	IF_2	CALL_11
0x4007d44	          0x4889c7	                            mov rdi, rax	      4115	objcopy.c	FUNCTION_51	IF_2	CALL_11
0x4007d47	      0xe800000000	                          call 0x4007d4c	      4115	objcopy.c	FUNCTION_51	IF_2	CALL_11
0x4007d4c	      0xe9ce000000	                           jmp 0x4007e1f	      4038	objcopy.c	FUNCTION_51	IF_2
0x4007d51	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x4007d58	          0x488b00	                    mov rax, qword [rax]	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x4007d5b	      0xba40000000	                           mov edx, 0x40	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x4007d60	      0xbe00000000	                              mov esi, 0	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x4007d65	          0x4889c7	                            mov rdi, rax	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x4007d68	      0xe8fc8bffff	              call sym.find_section_list	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x4007d6d	        0x488945d8	             mov qword [rbp - 0x28], rax	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x4007d71	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x4007d76	     0xf84a3000000	                            je 0x4007e1f	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x4007d7c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4119	objcopy.c	FUNCTION_51	ELSE_2	IF_11
0x4007d80	          0x8b4028	            mov eax, dword [rax + 0x28] 	      4119	objcopy.c	FUNCTION_51	ELSE_2	IF_11
0x4007d83	      0x2500010000	                          and eax, 0x100	      4119	objcopy.c	FUNCTION_51	ELSE_2	IF_11
0x4007d88	            0x85c0	                           test eax, eax	      4119	objcopy.c	FUNCTION_51	ELSE_2	IF_11
0x4007d8a	     0xf848f000000	                            je 0x4007e1f	      4119	objcopy.c	FUNCTION_51	ELSE_2	IF_11
0x4007d90	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4121	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_13
0x4007d94	          0x4889c7	                            mov rdi, rax	      4121	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_13
0x4007d97	      0xe800000000	                          call 0x4007d9c	      4121	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_13
0x4007d9c	        0x488945e0	             mov qword [rbp - 0x20], rax	      4121	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_13
0x4007da0	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4129	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_14
0x4007da4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4129	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_14
0x4007da8	      0xbe00000000	                              mov esi, 0	      4129	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_14
0x4007dad	          0x4889c7	                            mov rdi, rax	      4129	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_14
0x4007db0	      0xe800000000	                          call 0x4007db5	      4129	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_14
0x4007db5	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4007db9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4007dbd	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4007dc1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4007dc5	          0x4989c8	                             mov r8, rcx	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4007dc8	      0xb900000000	                              mov ecx, 0	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4007dcd	          0x4889c7	                            mov rdi, rax	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4007dd0	      0xe800000000	                          call 0x4007dd5	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4007dd5	            0x85c0	                           test eax, eax	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4007dd7	            0x7537	                           jne 0x4007e10	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4007dd9	    0xc70500000000	               mov dword [0x04007de3], 1	      4132	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12
0x4007de3	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x4007de7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x4007deb	      0xb900000000	                              mov ecx, 0	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x4007df0	          0x4889c6	                            mov rsi, rax	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x4007df3	      0xbf00000000	                              mov edi, 0	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x4007df8	      0xb800000000	                              mov eax, 0	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x4007dfd	      0xe800000000	                          call 0x4007e02	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x4007e02	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4134	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_17
0x4007e06	          0x4889c7	                            mov rdi, rax	      4134	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_17
0x4007e09	      0xe800000000	                          call 0x4007e0e	      4134	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_17
0x4007e0e	            0xeb0f	                           jmp 0x4007e1f	      4135	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12
0x4007e10	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4007e14	          0x4889c7	                            mov rdi, rax	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4007e17	      0xe800000000	                          call 0x4007e1c	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4007e1c	            0xeb01	                           jmp 0x4007e1f	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4007e1e	              0x90	                                     nop	      4027	objcopy.c	FUNCTION_51	IF_1
0x4007e1f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4139	objcopy.c	FUNCTION_51
0x4007e23	    0x644833042528	                xor rax, qword fs:[0x28]	      4139	objcopy.c	FUNCTION_51
0x4007e2c	            0x7405	                            je 0x4007e33	      4139	objcopy.c	FUNCTION_51
0x4007e2e	      0xe800000000	                          call 0x4007e33	      4139	objcopy.c	FUNCTION_51
0x4007e33	    0x4881c4a00000	                           add rsp, 0xa0	      4139	objcopy.c	FUNCTION_51
0x4007e3a	              0x5b	                                 pop rbx	      4139	objcopy.c	FUNCTION_51
0x4007e3b	            0x415c	                                 pop r12	      4139	objcopy.c	FUNCTION_51
0x4007e3d	              0x5d	                                 pop rbp	      4139	objcopy.c	FUNCTION_51
0x4007e3e	              0xc3	                                     ret	      4139	objcopy.c	FUNCTION_51
need_sym_before	IF,2:FOR,1:ELSE,1:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,2	44
0x40017f9	              0x55	                                push rbp	      1415	objcopy.c	FUNCTION_25
0x40017fa	          0x4889e5	                            mov rbp, rsp	      1415	objcopy.c	FUNCTION_25
0x40017fd	        0x4883ec20	                           sub rsp, 0x20	      1415	objcopy.c	FUNCTION_25
0x4001801	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1415	objcopy.c	FUNCTION_25
0x4001805	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1415	objcopy.c	FUNCTION_25
0x4001809	    0x488b05000000	            mov rax, qword [0x04001810] 	      1417	objcopy.c	FUNCTION_25
0x4001810	        0x488945f8	                mov qword [rbp - 8], rax	      1417	objcopy.c	FUNCTION_25
0x4001814	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1420	objcopy.c	FUNCTION_25	FOR_1
0x400181b	            0xeb65	                           jmp 0x4001882	      1420	objcopy.c	FUNCTION_25	FOR_1
0x400181d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1422	objcopy.c	FUNCTION_25	FOR_1	IF_1
0x4001821	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1422	objcopy.c	FUNCTION_25	FOR_1	IF_1
0x4001825	          0x4885c0	                           test rax, rax	      1422	objcopy.c	FUNCTION_25	FOR_1	IF_1
0x4001828	            0x7465	                            je 0x400188f	      1422	objcopy.c	FUNCTION_25	FOR_1	IF_1
0x400182a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1424	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2	CALL_1
0x400182e	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1424	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2	CALL_1
0x4001832	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1424	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2	CALL_1
0x4001836	          0x4889d6	                            mov rsi, rdx	      1424	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2	CALL_1
0x4001839	          0x4889c7	                            mov rdi, rax	      1424	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2	CALL_1
0x400183c	      0xe800000000	                          call 0x4001841	      1424	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2	CALL_1
0x4001841	            0x85c0	                           test eax, eax	      1424	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2	CALL_1
0x4001843	            0x752e	                           jne 0x4001873	      1424	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2	CALL_1
0x4001845	        0x488b45f8	                mov rax, qword [rbp - 8]	      1426	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2	CALL_2
0x4001849	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1426	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2	CALL_2
0x400184d	          0x4889c7	                            mov rdi, rax	      1426	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2	CALL_2
0x4001850	      0xe800000000	                          call 0x4001855	      1426	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2	CALL_2
0x4001855	        0x488b45f8	                mov rax, qword [rbp - 8]	      1427	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2
0x4001859	    0x48c740280000	               mov qword [rax + 0x28], 0	      1427	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2
0x4001861	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1428	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2
0x4001865	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1428	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2
0x4001869	          0x488910	                    mov qword [rax], rdx	      1428	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2
0x400186c	      0xb801000000	                              mov eax, 1	      1429	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2
0x4001871	            0xeb22	                           jmp 0x4001895	      1429	objcopy.c	FUNCTION_25	FOR_1	ELSE_1	IF_2
0x4001873	        0x488b45f8	                mov rax, qword [rbp - 8]	      1431	objcopy.c	FUNCTION_25	FOR_1
0x4001877	          0x488b00	                    mov rax, qword [rax]	      1431	objcopy.c	FUNCTION_25	FOR_1
0x400187a	        0x488945f8	                mov qword [rbp - 8], rax	      1431	objcopy.c	FUNCTION_25	FOR_1
0x400187e	        0x8345f401	                add dword [rbp - 0xc], 1	      1420	objcopy.c	FUNCTION_25	FOR_1
0x4001882	    0x8b0500000000	            mov eax, dword [0x04001888] 	      1420	objcopy.c	FUNCTION_25	FOR_1
0x4001888	          0x3945f4	              cmp dword [rbp - 0xc], eax	      1420	objcopy.c	FUNCTION_25	FOR_1
0x400188b	            0x7c90	                            jl 0x400181d	      1420	objcopy.c	FUNCTION_25	FOR_1
0x400188d	            0xeb01	                           jmp 0x4001890	      1420	objcopy.c	FUNCTION_25	FOR_1
0x400188f	              0x90	                                     nop	      1423	objcopy.c	FUNCTION_25	FOR_1	IF_1
0x4001890	      0xb800000000	                              mov eax, 0	      1433	objcopy.c	FUNCTION_25
0x4001895	              0xc9	                                   leave	      1434	objcopy.c	FUNCTION_25
0x4001896	              0xc3	                                     ret	      1434	objcopy.c	FUNCTION_25
is_strip_section	IF,6:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,1:CALL,7	81
0x40015e9	              0x55	                                push rbp	      1336	objcopy.c	FUNCTION_22
0x40015ea	          0x4889e5	                            mov rbp, rsp	      1336	objcopy.c	FUNCTION_22
0x40015ed	        0x4883ec30	                           sub rsp, 0x30	      1336	objcopy.c	FUNCTION_22
0x40015f1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1336	objcopy.c	FUNCTION_22
0x40015f5	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1336	objcopy.c	FUNCTION_22
0x40015f9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1337	objcopy.c	FUNCTION_22	IF_1	CALL_1
0x40015fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1337	objcopy.c	FUNCTION_22	IF_1	CALL_1
0x4001601	          0x4889d6	                            mov rsi, rdx	      1337	objcopy.c	FUNCTION_22	IF_1	CALL_1
0x4001604	          0x4889c7	                            mov rdi, rax	      1337	objcopy.c	FUNCTION_22	IF_1	CALL_1
0x4001607	      0xe811feffff	             call sym.is_strip_section_1	      1337	objcopy.c	FUNCTION_22	IF_1	CALL_1
0x400160c	            0x85c0	                           test eax, eax	      1337	objcopy.c	FUNCTION_22	IF_1	CALL_1
0x400160e	            0x740a	                            je 0x400161a	      1337	objcopy.c	FUNCTION_22	IF_1	CALL_1
0x4001610	      0xb801000000	                              mov eax, 1	      1338	objcopy.c	FUNCTION_22	IF_1
0x4001615	      0xe9fb000000	                           jmp 0x4001715	      1338	objcopy.c	FUNCTION_22	IF_1
0x400161a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1340	objcopy.c	FUNCTION_22	IF_2
0x400161e	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1340	objcopy.c	FUNCTION_22	IF_2
0x4001621	      0x2500000002	                      and eax, 0x2000000	      1340	objcopy.c	FUNCTION_22	IF_2
0x4001626	            0x85c0	                           test eax, eax	      1340	objcopy.c	FUNCTION_22	IF_2
0x4001628	     0xf84e2000000	                            je 0x4001710	      1340	objcopy.c	FUNCTION_22	IF_2
0x400162e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1346	objcopy.c	FUNCTION_22	IF_2	CALL_2
0x4001632	          0x4889c7	                            mov rdi, rax	      1346	objcopy.c	FUNCTION_22	IF_2	CALL_2
0x4001635	      0xe8adfbffff	                call sym.group_signature	      1346	objcopy.c	FUNCTION_22	IF_2	CALL_2
0x400163a	        0x488945e8	             mov qword [rbp - 0x18], rax	      1346	objcopy.c	FUNCTION_22	IF_2	CALL_2
0x400163e	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1348	objcopy.c	FUNCTION_22	IF_2	IF_3
0x4001643	            0x750a	                           jne 0x400164f	      1348	objcopy.c	FUNCTION_22	IF_2	IF_3
0x4001645	      0xb801000000	                              mov eax, 1	      1349	objcopy.c	FUNCTION_22	IF_2	IF_3
0x400164a	      0xe9c6000000	                           jmp 0x4001715	      1349	objcopy.c	FUNCTION_22	IF_2	IF_3
0x400164f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1354	objcopy.c	FUNCTION_22	IF_2
0x4001653	        0x488b4008	                mov rax, qword [rax + 8]	      1354	objcopy.c	FUNCTION_22	IF_2
0x4001657	        0x488945f0	             mov qword [rbp - 0x10], rax	      1354	objcopy.c	FUNCTION_22	IF_2
0x400165b	    0x8b0500000000	            mov eax, dword [0x04001661] 	      1355	objcopy.c	FUNCTION_22	IF_2	IF_4
0x4001661	          0x83f807	                              cmp eax, 7	      1355	objcopy.c	FUNCTION_22	IF_2	IF_4
0x4001664	            0x751a	                           jne 0x4001680	      1355	objcopy.c	FUNCTION_22	IF_2	IF_4
0x4001666	    0x488b15000000	            mov rdx, qword [0x0400166d] 	      1356	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_3
0x400166d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1356	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_3
0x4001671	          0x4889d6	                            mov rsi, rdx	      1356	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_3
0x4001674	          0x4889c7	                            mov rdi, rax	      1356	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_3
0x4001677	      0xe8e7faffff	            call sym.is_specified_symbol	      1356	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_3
0x400167c	            0x85c0	                           test eax, eax	      1356	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_3
0x400167e	            0x741a	                            je 0x400169a	      1356	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_3
0x4001680	    0x488b15000000	            mov rdx, qword [0x04001687] 	      1357	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_4
0x4001687	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1357	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_4
0x400168b	          0x4889d6	                            mov rsi, rdx	      1357	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_4
0x400168e	          0x4889c7	                            mov rdi, rax	      1357	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_4
0x4001691	      0xe8cdfaffff	            call sym.is_specified_symbol	      1357	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_4
0x4001696	            0x85c0	                           test eax, eax	      1357	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_4
0x4001698	            0x7407	                            je 0x40016a1	      1357	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_4
0x400169a	      0xb801000000	                              mov eax, 1	      1358	objcopy.c	FUNCTION_22	IF_2	IF_4
0x400169f	            0xeb74	                           jmp 0x4001715	      1358	objcopy.c	FUNCTION_22	IF_2	IF_4
0x40016a1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1361	objcopy.c	FUNCTION_22	IF_2	CALL_5
0x40016a5	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1361	objcopy.c	FUNCTION_22	IF_2	CALL_5
0x40016ac	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      1361	objcopy.c	FUNCTION_22	IF_2	CALL_5
0x40016b3	        0x488945e0	             mov qword [rbp - 0x20], rax	      1361	objcopy.c	FUNCTION_22	IF_2	CALL_5
0x40016b7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1361	objcopy.c	FUNCTION_22	IF_2	CALL_5
0x40016bb	        0x488945f8	                mov qword [rbp - 8], rax	      1361	objcopy.c	FUNCTION_22	IF_2	CALL_5
0x40016bf	            0xeb3e	                           jmp 0x40016ff	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x40016c1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1364	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5	CALL_6
0x40016c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1364	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5	CALL_6
0x40016c9	          0x4889d6	                            mov rsi, rdx	      1364	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5	CALL_6
0x40016cc	          0x4889c7	                            mov rdi, rax	      1364	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5	CALL_6
0x40016cf	      0xe849fdffff	             call sym.is_strip_section_1	      1364	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5	CALL_6
0x40016d4	            0x85c0	                           test eax, eax	      1364	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5	CALL_6
0x40016d6	            0x7507	                           jne 0x40016df	      1364	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5	CALL_6
0x40016d8	      0xb800000000	                              mov eax, 0	      1365	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5
0x40016dd	            0xeb36	                           jmp 0x4001715	      1365	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5
0x40016df	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1366	objcopy.c	FUNCTION_22	IF_2	WHILE_1	CALL_7
0x40016e3	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1366	objcopy.c	FUNCTION_22	IF_2	WHILE_1	CALL_7
0x40016ea	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      1366	objcopy.c	FUNCTION_22	IF_2	WHILE_1	CALL_7
0x40016f1	        0x488945e0	             mov qword [rbp - 0x20], rax	      1366	objcopy.c	FUNCTION_22	IF_2	WHILE_1	CALL_7
0x40016f5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1367	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_6
0x40016f9	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1367	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_6
0x40016fd	            0x7409	                            je 0x4001708	      1367	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_6
0x40016ff	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x4001704	            0x75bb	                           jne 0x40016c1	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x4001706	            0xeb01	                           jmp 0x4001709	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x4001708	              0x90	                                     nop	      1368	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_6
0x4001709	      0xb801000000	                              mov eax, 1	      1371	objcopy.c	FUNCTION_22	IF_2
0x400170e	            0xeb05	                           jmp 0x4001715	      1371	objcopy.c	FUNCTION_22	IF_2
0x4001710	      0xb800000000	                              mov eax, 0	      1374	objcopy.c	FUNCTION_22
0x4001715	              0xc9	                                   leave	      1375	objcopy.c	FUNCTION_22
0x4001716	              0xc3	                                     ret	      1375	objcopy.c	FUNCTION_22
handle_remove_relocations_option	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1	12
0x40074da	              0x55	                                push rbp	      3878	objcopy.c	FUNCTION_47
0x40074db	          0x4889e5	                            mov rbp, rsp	      3878	objcopy.c	FUNCTION_47
0x40074de	        0x4883ec10	                           sub rsp, 0x10	      3878	objcopy.c	FUNCTION_47
0x40074e2	        0x48897df8	                mov qword [rbp - 8], rdi	      3878	objcopy.c	FUNCTION_47
0x40074e6	        0x488b45f8	                mov rax, qword [rbp - 8]	      3879	objcopy.c	FUNCTION_47	CALL_1
0x40074ea	      0xba80000000	                           mov edx, 0x80	      3879	objcopy.c	FUNCTION_47	CALL_1
0x40074ef	      0xbe01000000	                              mov esi, 1	      3879	objcopy.c	FUNCTION_47	CALL_1
0x40074f4	          0x4889c7	                            mov rdi, rax	      3879	objcopy.c	FUNCTION_47	CALL_1
0x40074f7	      0xe86d94ffff	              call sym.find_section_list	      3879	objcopy.c	FUNCTION_47	CALL_1
0x40074fc	              0x90	                                     nop	      3880	objcopy.c	FUNCTION_47
0x40074fd	              0xc9	                                   leave	      3880	objcopy.c	FUNCTION_47
0x40074fe	              0xc3	                                     ret	      3880	objcopy.c	FUNCTION_47
parse_symflags	IF,2:FOR,0:ELSE,2:DO,1:SWITCH,0:functions,0:WHILE,0:CALL,8	245
0x40005b2	              0x55	                                push rbp	       778	objcopy.c	FUNCTION_4
0x40005b3	          0x4889e5	                            mov rbp, rsp	       778	objcopy.c	FUNCTION_4
0x40005b6	        0x4883ec30	                           sub rsp, 0x30	       778	objcopy.c	FUNCTION_4
0x40005ba	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       778	objcopy.c	FUNCTION_4
0x40005be	        0x488975d0	             mov qword [rbp - 0x30], rsi	       778	objcopy.c	FUNCTION_4
0x40005c2	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       783	objcopy.c	FUNCTION_4
0x40005c9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       787	objcopy.c	FUNCTION_4	DO_1	CALL_1
0x40005cd	      0xbe2c000000	                           mov esi, 0x2c	       787	objcopy.c	FUNCTION_4	DO_1	CALL_1
0x40005d2	          0x4889c7	                            mov rdi, rax	       787	objcopy.c	FUNCTION_4	DO_1	CALL_1
0x40005d5	      0xe800000000	                          call 0x40005da	       787	objcopy.c	FUNCTION_4	DO_1	CALL_1
0x40005da	        0x488945e8	             mov qword [rbp - 0x18], rax	       787	objcopy.c	FUNCTION_4	DO_1	CALL_1
0x40005de	      0x48837de800	               cmp qword [rbp - 0x18], 0	       788	objcopy.c	FUNCTION_4	DO_1	IF_1
0x40005e3	            0x7512	                           jne 0x40005f7	       788	objcopy.c	FUNCTION_4	DO_1	IF_1
0x40005e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       789	objcopy.c	FUNCTION_4	DO_1	CALL_2
0x40005e9	          0x4889c7	                            mov rdi, rax	       789	objcopy.c	FUNCTION_4	DO_1	CALL_2
0x40005ec	      0xe800000000	                          call 0x40005f1	       789	objcopy.c	FUNCTION_4	DO_1	CALL_2
0x40005f1	        0x488945f0	             mov qword [rbp - 0x10], rax	       789	objcopy.c	FUNCTION_4	DO_1	CALL_2
0x40005f5	            0xeb17	                           jmp 0x400060e	       789	objcopy.c	FUNCTION_4	DO_1	CALL_2
0x40005f7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       792	objcopy.c	FUNCTION_4	DO_1	ELSE_1
0x40005fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       792	objcopy.c	FUNCTION_4	DO_1	ELSE_1
0x40005ff	          0x4829c2	                            sub rdx, rax	       792	objcopy.c	FUNCTION_4	DO_1	ELSE_1
0x4000602	          0x4889d0	                            mov rax, rdx	       792	objcopy.c	FUNCTION_4	DO_1	ELSE_1
0x4000605	        0x488945f0	             mov qword [rbp - 0x10], rax	       792	objcopy.c	FUNCTION_4	DO_1	ELSE_1
0x4000609	      0x488345e801	               add qword [rbp - 0x18], 1	       793	objcopy.c	FUNCTION_4	DO_1	ELSE_1
0x400060e	      0x48837df005	               cmp qword [rbp - 0x10], 5	       807	objcopy.c	FUNCTION_4	DO_1
0x4000613	            0x7522	                           jne 0x4000637	       807	objcopy.c	FUNCTION_4	DO_1
0x4000615	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       807	objcopy.c	FUNCTION_4	DO_1
0x4000619	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       807	objcopy.c	FUNCTION_4	DO_1
0x400061d	          0x4889c6	                            mov rsi, rax	       807	objcopy.c	FUNCTION_4	DO_1
0x4000620	      0xbf00000000	                              mov edi, 0	       807	objcopy.c	FUNCTION_4	DO_1
0x4000625	      0xe800000000	                          call 0x400062a	       807	objcopy.c	FUNCTION_4	DO_1
0x400062a	            0x85c0	                           test eax, eax	       807	objcopy.c	FUNCTION_4	DO_1
0x400062c	            0x7509	                           jne 0x4000637	       807	objcopy.c	FUNCTION_4	DO_1
0x400062e	        0x834de401	                or dword [rbp - 0x1c], 1	       807	objcopy.c	FUNCTION_4	DO_1
0x4000632	      0xe91a030000	                           jmp 0x4000951	       807	objcopy.c	FUNCTION_4	DO_1
0x4000637	      0x48837df006	               cmp qword [rbp - 0x10], 6	       808	objcopy.c	FUNCTION_4	DO_1
0x400063c	            0x7522	                           jne 0x4000660	       808	objcopy.c	FUNCTION_4	DO_1
0x400063e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       808	objcopy.c	FUNCTION_4	DO_1
0x4000642	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       808	objcopy.c	FUNCTION_4	DO_1
0x4000646	          0x4889c6	                            mov rsi, rax	       808	objcopy.c	FUNCTION_4	DO_1
0x4000649	      0xbf00000000	                              mov edi, 0	       808	objcopy.c	FUNCTION_4	DO_1
0x400064e	      0xe800000000	                          call 0x4000653	       808	objcopy.c	FUNCTION_4	DO_1
0x4000653	            0x85c0	                           test eax, eax	       808	objcopy.c	FUNCTION_4	DO_1
0x4000655	            0x7509	                           jne 0x4000660	       808	objcopy.c	FUNCTION_4	DO_1
0x4000657	        0x834de402	                or dword [rbp - 0x1c], 2	       808	objcopy.c	FUNCTION_4	DO_1
0x400065b	      0xe9f1020000	                           jmp 0x4000951	       808	objcopy.c	FUNCTION_4	DO_1
0x4000660	      0x48837df006	               cmp qword [rbp - 0x10], 6	       809	objcopy.c	FUNCTION_4	DO_1
0x4000665	            0x7522	                           jne 0x4000689	       809	objcopy.c	FUNCTION_4	DO_1
0x4000667	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       809	objcopy.c	FUNCTION_4	DO_1
0x400066b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       809	objcopy.c	FUNCTION_4	DO_1
0x400066f	          0x4889c6	                            mov rsi, rax	       809	objcopy.c	FUNCTION_4	DO_1
0x4000672	      0xbf00000000	                              mov edi, 0	       809	objcopy.c	FUNCTION_4	DO_1
0x4000677	      0xe800000000	                          call 0x400067c	       809	objcopy.c	FUNCTION_4	DO_1
0x400067c	            0x85c0	                           test eax, eax	       809	objcopy.c	FUNCTION_4	DO_1
0x400067e	            0x7509	                           jne 0x4000689	       809	objcopy.c	FUNCTION_4	DO_1
0x4000680	        0x834de402	                or dword [rbp - 0x1c], 2	       809	objcopy.c	FUNCTION_4	DO_1
0x4000684	      0xe9c8020000	                           jmp 0x4000951	       809	objcopy.c	FUNCTION_4	DO_1
0x4000689	      0x48837df005	               cmp qword [rbp - 0x10], 5	       810	objcopy.c	FUNCTION_4	DO_1
0x400068e	            0x7522	                           jne 0x40006b2	       810	objcopy.c	FUNCTION_4	DO_1
0x4000690	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       810	objcopy.c	FUNCTION_4	DO_1
0x4000694	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       810	objcopy.c	FUNCTION_4	DO_1
0x4000698	          0x4889c6	                            mov rsi, rax	       810	objcopy.c	FUNCTION_4	DO_1
0x400069b	      0xbf00000000	                              mov edi, 0	       810	objcopy.c	FUNCTION_4	DO_1
0x40006a0	      0xe800000000	                          call 0x40006a5	       810	objcopy.c	FUNCTION_4	DO_1
0x40006a5	            0x85c0	                           test eax, eax	       810	objcopy.c	FUNCTION_4	DO_1
0x40006a7	            0x7509	                           jne 0x40006b2	       810	objcopy.c	FUNCTION_4	DO_1
0x40006a9	        0x834de404	                or dword [rbp - 0x1c], 4	       810	objcopy.c	FUNCTION_4	DO_1
0x40006ad	      0xe99f020000	                           jmp 0x4000951	       810	objcopy.c	FUNCTION_4	DO_1
0x40006b2	      0x48837df008	               cmp qword [rbp - 0x10], 8	       811	objcopy.c	FUNCTION_4	DO_1
0x40006b7	            0x7522	                           jne 0x40006db	       811	objcopy.c	FUNCTION_4	DO_1
0x40006b9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       811	objcopy.c	FUNCTION_4	DO_1
0x40006bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       811	objcopy.c	FUNCTION_4	DO_1
0x40006c1	          0x4889c6	                            mov rsi, rax	       811	objcopy.c	FUNCTION_4	DO_1
0x40006c4	      0xbf00000000	                              mov edi, 0	       811	objcopy.c	FUNCTION_4	DO_1
0x40006c9	      0xe800000000	                          call 0x40006ce	       811	objcopy.c	FUNCTION_4	DO_1
0x40006ce	            0x85c0	                           test eax, eax	       811	objcopy.c	FUNCTION_4	DO_1
0x40006d0	            0x7509	                           jne 0x40006db	       811	objcopy.c	FUNCTION_4	DO_1
0x40006d2	        0x834de408	                or dword [rbp - 0x1c], 8	       811	objcopy.c	FUNCTION_4	DO_1
0x40006d6	      0xe976020000	                           jmp 0x4000951	       811	objcopy.c	FUNCTION_4	DO_1
0x40006db	      0x48837df004	               cmp qword [rbp - 0x10], 4	       812	objcopy.c	FUNCTION_4	DO_1
0x40006e0	            0x7525	                           jne 0x4000707	       812	objcopy.c	FUNCTION_4	DO_1
0x40006e2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       812	objcopy.c	FUNCTION_4	DO_1
0x40006e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       812	objcopy.c	FUNCTION_4	DO_1
0x40006ea	          0x4889c6	                            mov rsi, rax	       812	objcopy.c	FUNCTION_4	DO_1
0x40006ed	      0xbf00000000	                              mov edi, 0	       812	objcopy.c	FUNCTION_4	DO_1
0x40006f2	      0xe800000000	                          call 0x40006f7	       812	objcopy.c	FUNCTION_4	DO_1
0x40006f7	            0x85c0	                           test eax, eax	       812	objcopy.c	FUNCTION_4	DO_1
0x40006f9	            0x750c	                           jne 0x4000707	       812	objcopy.c	FUNCTION_4	DO_1
0x40006fb	    0x814de4800000	             or dword [rbp - 0x1c], 0x80	       812	objcopy.c	FUNCTION_4	DO_1
0x4000702	      0xe94a020000	                           jmp 0x4000951	       812	objcopy.c	FUNCTION_4	DO_1
0x4000707	      0x48837df007	               cmp qword [rbp - 0x10], 7	       813	objcopy.c	FUNCTION_4	DO_1
0x400070c	            0x7525	                           jne 0x4000733	       813	objcopy.c	FUNCTION_4	DO_1
0x400070e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       813	objcopy.c	FUNCTION_4	DO_1
0x4000712	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       813	objcopy.c	FUNCTION_4	DO_1
0x4000716	          0x4889c6	                            mov rsi, rax	       813	objcopy.c	FUNCTION_4	DO_1
0x4000719	      0xbf00000000	                              mov edi, 0	       813	objcopy.c	FUNCTION_4	DO_1
0x400071e	      0xe800000000	                          call 0x4000723	       813	objcopy.c	FUNCTION_4	DO_1
0x4000723	            0x85c0	                           test eax, eax	       813	objcopy.c	FUNCTION_4	DO_1
0x4000725	            0x750c	                           jne 0x4000733	       813	objcopy.c	FUNCTION_4	DO_1
0x4000727	    0x814de4000100	            or dword [rbp - 0x1c], 0x100	       813	objcopy.c	FUNCTION_4	DO_1
0x400072e	      0xe91e020000	                           jmp 0x4000951	       813	objcopy.c	FUNCTION_4	DO_1
0x4000733	      0x48837df00b	            cmp qword [rbp - 0x10], 0xb 	       814	objcopy.c	FUNCTION_4	DO_1
0x4000738	            0x7525	                           jne 0x400075f	       814	objcopy.c	FUNCTION_4	DO_1
0x400073a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       814	objcopy.c	FUNCTION_4	DO_1
0x400073e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       814	objcopy.c	FUNCTION_4	DO_1
0x4000742	          0x4889c6	                            mov rsi, rax	       814	objcopy.c	FUNCTION_4	DO_1
0x4000745	      0xbf00000000	                              mov edi, 0	       814	objcopy.c	FUNCTION_4	DO_1
0x400074a	      0xe800000000	                          call 0x400074f	       814	objcopy.c	FUNCTION_4	DO_1
0x400074f	            0x85c0	                           test eax, eax	       814	objcopy.c	FUNCTION_4	DO_1
0x4000751	            0x750c	                           jne 0x400075f	       814	objcopy.c	FUNCTION_4	DO_1
0x4000753	    0x814de4000800	            or dword [rbp - 0x1c], 0x800	       814	objcopy.c	FUNCTION_4	DO_1
0x400075a	      0xe9f2010000	                           jmp 0x4000951	       814	objcopy.c	FUNCTION_4	DO_1
0x400075f	      0x48837df007	               cmp qword [rbp - 0x10], 7	       815	objcopy.c	FUNCTION_4	DO_1
0x4000764	            0x7525	                           jne 0x400078b	       815	objcopy.c	FUNCTION_4	DO_1
0x4000766	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       815	objcopy.c	FUNCTION_4	DO_1
0x400076a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       815	objcopy.c	FUNCTION_4	DO_1
0x400076e	          0x4889c6	                            mov rsi, rax	       815	objcopy.c	FUNCTION_4	DO_1
0x4000771	      0xbf00000000	                              mov edi, 0	       815	objcopy.c	FUNCTION_4	DO_1
0x4000776	      0xe800000000	                          call 0x400077b	       815	objcopy.c	FUNCTION_4	DO_1
0x400077b	            0x85c0	                           test eax, eax	       815	objcopy.c	FUNCTION_4	DO_1
0x400077d	            0x750c	                           jne 0x400078b	       815	objcopy.c	FUNCTION_4	DO_1
0x400077f	    0x814de4001000	           or dword [rbp - 0x1c], 0x1000	       815	objcopy.c	FUNCTION_4	DO_1
0x4000786	      0xe9c6010000	                           jmp 0x4000951	       815	objcopy.c	FUNCTION_4	DO_1
0x400078b	      0x48837df008	               cmp qword [rbp - 0x10], 8	       816	objcopy.c	FUNCTION_4	DO_1
0x4000790	            0x7525	                           jne 0x40007b7	       816	objcopy.c	FUNCTION_4	DO_1
0x4000792	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       816	objcopy.c	FUNCTION_4	DO_1
0x4000796	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       816	objcopy.c	FUNCTION_4	DO_1
0x400079a	          0x4889c6	                            mov rsi, rax	       816	objcopy.c	FUNCTION_4	DO_1
0x400079d	      0xbf00000000	                              mov edi, 0	       816	objcopy.c	FUNCTION_4	DO_1
0x40007a2	      0xe800000000	                          call 0x40007a7	       816	objcopy.c	FUNCTION_4	DO_1
0x40007a7	            0x85c0	                           test eax, eax	       816	objcopy.c	FUNCTION_4	DO_1
0x40007a9	            0x750c	                           jne 0x40007b7	       816	objcopy.c	FUNCTION_4	DO_1
0x40007ab	    0x814de4002000	           or dword [rbp - 0x1c], 0x2000	       816	objcopy.c	FUNCTION_4	DO_1
0x40007b2	      0xe99a010000	                           jmp 0x4000951	       816	objcopy.c	FUNCTION_4	DO_1
0x40007b7	      0x48837df004	               cmp qword [rbp - 0x10], 4	       817	objcopy.c	FUNCTION_4	DO_1
0x40007bc	            0x7525	                           jne 0x40007e3	       817	objcopy.c	FUNCTION_4	DO_1
0x40007be	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       817	objcopy.c	FUNCTION_4	DO_1
0x40007c2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       817	objcopy.c	FUNCTION_4	DO_1
0x40007c6	          0x4889c6	                            mov rsi, rax	       817	objcopy.c	FUNCTION_4	DO_1
0x40007c9	      0xbf00000000	                              mov edi, 0	       817	objcopy.c	FUNCTION_4	DO_1
0x40007ce	      0xe800000000	                          call 0x40007d3	       817	objcopy.c	FUNCTION_4	DO_1
0x40007d3	            0x85c0	                           test eax, eax	       817	objcopy.c	FUNCTION_4	DO_1
0x40007d5	            0x750c	                           jne 0x40007e3	       817	objcopy.c	FUNCTION_4	DO_1
0x40007d7	    0x814de4004000	           or dword [rbp - 0x1c], 0x4000	       817	objcopy.c	FUNCTION_4	DO_1
0x40007de	      0xe96e010000	                           jmp 0x4000951	       817	objcopy.c	FUNCTION_4	DO_1
0x40007e3	      0x48837df006	               cmp qword [rbp - 0x10], 6	       818	objcopy.c	FUNCTION_4	DO_1
0x40007e8	            0x7525	                           jne 0x400080f	       818	objcopy.c	FUNCTION_4	DO_1
0x40007ea	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       818	objcopy.c	FUNCTION_4	DO_1
0x40007ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       818	objcopy.c	FUNCTION_4	DO_1
0x40007f2	          0x4889c6	                            mov rsi, rax	       818	objcopy.c	FUNCTION_4	DO_1
0x40007f5	      0xbf00000000	                              mov edi, 0	       818	objcopy.c	FUNCTION_4	DO_1
0x40007fa	      0xe800000000	                          call 0x40007ff	       818	objcopy.c	FUNCTION_4	DO_1
0x40007ff	            0x85c0	                           test eax, eax	       818	objcopy.c	FUNCTION_4	DO_1
0x4000801	            0x750c	                           jne 0x400080f	       818	objcopy.c	FUNCTION_4	DO_1
0x4000803	    0x814de4000001	          or dword [rbp - 0x1c], 0x10000	       818	objcopy.c	FUNCTION_4	DO_1
0x400080a	      0xe942010000	                           jmp 0x4000951	       818	objcopy.c	FUNCTION_4	DO_1
0x400080f	      0x48837df009	               cmp qword [rbp - 0x10], 9	       819	objcopy.c	FUNCTION_4	DO_1
0x4000814	            0x7525	                           jne 0x400083b	       819	objcopy.c	FUNCTION_4	DO_1
0x4000816	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       819	objcopy.c	FUNCTION_4	DO_1
0x400081a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       819	objcopy.c	FUNCTION_4	DO_1
0x400081e	          0x4889c6	                            mov rsi, rax	       819	objcopy.c	FUNCTION_4	DO_1
0x4000821	      0xbf00000000	                              mov edi, 0	       819	objcopy.c	FUNCTION_4	DO_1
0x4000826	      0xe800000000	                          call 0x400082b	       819	objcopy.c	FUNCTION_4	DO_1
0x400082b	            0x85c0	                           test eax, eax	       819	objcopy.c	FUNCTION_4	DO_1
0x400082d	            0x750c	                           jne 0x400083b	       819	objcopy.c	FUNCTION_4	DO_1
0x400082f	    0x814de4000020	         or dword [rbp - 0x1c], 0x200000	       819	objcopy.c	FUNCTION_4	DO_1
0x4000836	      0xe916010000	                           jmp 0x4000951	       819	objcopy.c	FUNCTION_4	DO_1
0x400083b	      0x48837df011	           cmp qword [rbp - 0x10], 0x11 	       820	objcopy.c	FUNCTION_4	DO_1
0x4000840	            0x7525	                           jne 0x4000867	       820	objcopy.c	FUNCTION_4	DO_1
0x4000842	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       820	objcopy.c	FUNCTION_4	DO_1
0x4000846	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       820	objcopy.c	FUNCTION_4	DO_1
0x400084a	          0x4889c6	                            mov rsi, rax	       820	objcopy.c	FUNCTION_4	DO_1
0x400084d	      0xbf00000000	                              mov edi, 0	       820	objcopy.c	FUNCTION_4	DO_1
0x4000852	      0xe800000000	                          call 0x4000857	       820	objcopy.c	FUNCTION_4	DO_1
0x4000857	            0x85c0	                           test eax, eax	       820	objcopy.c	FUNCTION_4	DO_1
0x4000859	            0x750c	                           jne 0x4000867	       820	objcopy.c	FUNCTION_4	DO_1
0x400085b	    0x814de4080040	         or dword [rbp - 0x1c], 0x400008	       820	objcopy.c	FUNCTION_4	DO_1
0x4000862	      0xe9ea000000	                           jmp 0x4000951	       820	objcopy.c	FUNCTION_4	DO_1
0x4000867	      0x48837df00d	            cmp qword [rbp - 0x10], 0xd 	       821	objcopy.c	FUNCTION_4	DO_1
0x400086c	            0x7525	                           jne 0x4000893	       821	objcopy.c	FUNCTION_4	DO_1
0x400086e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       821	objcopy.c	FUNCTION_4	DO_1
0x4000872	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       821	objcopy.c	FUNCTION_4	DO_1
0x4000876	          0x4889c6	                            mov rsi, rax	       821	objcopy.c	FUNCTION_4	DO_1
0x4000879	      0xbf00000000	                              mov edi, 0	       821	objcopy.c	FUNCTION_4	DO_1
0x400087e	      0xe800000000	                          call 0x4000883	       821	objcopy.c	FUNCTION_4	DO_1
0x4000883	            0x85c0	                           test eax, eax	       821	objcopy.c	FUNCTION_4	DO_1
0x4000885	            0x750c	                           jne 0x4000893	       821	objcopy.c	FUNCTION_4	DO_1
0x4000887	    0x814de4000081	         or dword [rbp - 0x1c], 0x810000	       821	objcopy.c	FUNCTION_4	DO_1
0x400088e	      0xe9be000000	                           jmp 0x4000951	       821	objcopy.c	FUNCTION_4	DO_1
0x4000893	      0x48837df007	               cmp qword [rbp - 0x10], 7	       822	objcopy.c	FUNCTION_4	DO_1
0x4000898	            0x7641	                           jbe 0x40008db	       822	objcopy.c	FUNCTION_4	DO_1
0x400089a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       822	objcopy.c	FUNCTION_4	DO_1
0x400089e	      0xba07000000	                              mov edx, 7	       822	objcopy.c	FUNCTION_4	DO_1
0x40008a3	          0x4889c6	                            mov rsi, rax	       822	objcopy.c	FUNCTION_4	DO_1
0x40008a6	      0xbf00000000	                              mov edi, 0	       822	objcopy.c	FUNCTION_4	DO_1
0x40008ab	      0xe800000000	                          call 0x40008b0	       822	objcopy.c	FUNCTION_4	DO_1
0x40008b0	            0x85c0	                           test eax, eax	       822	objcopy.c	FUNCTION_4	DO_1
0x40008b2	            0x7527	                           jne 0x40008db	       822	objcopy.c	FUNCTION_4	DO_1
0x40008b4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       822	objcopy.c	FUNCTION_4	DO_1
0x40008b8	        0x488d50f9	                      lea rdx, [rax - 7]	       822	objcopy.c	FUNCTION_4	DO_1
0x40008bc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       822	objcopy.c	FUNCTION_4	DO_1
0x40008c0	        0x4883c007	                              add rax, 7	       822	objcopy.c	FUNCTION_4	DO_1
0x40008c4	          0x4889d6	                            mov rsi, rdx	       822	objcopy.c	FUNCTION_4	DO_1
0x40008c7	          0x4889c7	                            mov rdi, rax	       822	objcopy.c	FUNCTION_4	DO_1
0x40008ca	      0xe800000000	                          call 0x40008cf	       822	objcopy.c	FUNCTION_4	DO_1
0x40008cf	          0x4889c2	                            mov rdx, rax	       822	objcopy.c	FUNCTION_4	DO_1
0x40008d2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       822	objcopy.c	FUNCTION_4	DO_1
0x40008d6	          0x488910	                    mov qword [rax], rdx	       822	objcopy.c	FUNCTION_4	DO_1
0x40008d9	            0xeb76	                           jmp 0x4000951	       822	objcopy.c	FUNCTION_4	DO_1
0x40008db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       830	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_3
0x40008df	        0x4883c001	                              add rax, 1	       830	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_3
0x40008e3	          0x4889c7	                            mov rdi, rax	       830	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_3
0x40008e6	      0xe800000000	                          call 0x40008eb	       830	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_3
0x40008eb	        0x488945f8	                mov qword [rbp - 8], rax	       830	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_3
0x40008ef	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       831	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_4
0x40008f3	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       831	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_4
0x40008f7	        0x488b45f8	                mov rax, qword [rbp - 8]	       831	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_4
0x40008fb	          0x4889ce	                            mov rsi, rcx	       831	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_4
0x40008fe	          0x4889c7	                            mov rdi, rax	       831	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_4
0x4000901	      0xe800000000	                          call 0x4000906	       831	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_4
0x4000906	        0x488b55f8	                mov rdx, qword [rbp - 8]	       832	objcopy.c	FUNCTION_4	DO_1	ELSE_2
0x400090a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       832	objcopy.c	FUNCTION_4	DO_1	ELSE_2
0x400090e	          0x4801d0	                            add rax, rdx	       832	objcopy.c	FUNCTION_4	DO_1	ELSE_2
0x4000911	          0xc60000	                       mov byte [rax], 0	       832	objcopy.c	FUNCTION_4	DO_1	ELSE_2
0x4000914	      0xbf00000000	                              mov edi, 0	       833	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_6
0x4000919	      0xe800000000	                          call 0x400091e	       833	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_6
0x400091e	          0x4889c2	                            mov rdx, rax	       833	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_6
0x4000921	        0x488b45f8	                mov rax, qword [rbp - 8]	       833	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_6
0x4000925	          0x4889c6	                            mov rsi, rax	       833	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_6
0x4000928	          0x4889d7	                            mov rdi, rdx	       833	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_6
0x400092b	      0xb800000000	                              mov eax, 0	       833	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_6
0x4000930	      0xe800000000	                          call 0x4000935	       833	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_6
0x4000935	      0xbf00000000	                              mov edi, 0	       834	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_8
0x400093a	      0xe800000000	                          call 0x400093f	       834	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_8
0x400093f	      0xbe00000000	                              mov esi, 0	       834	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_8
0x4000944	          0x4889c7	                            mov rdi, rax	       834	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_8
0x4000947	      0xb800000000	                              mov eax, 0	       834	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_8
0x400094c	      0xe800000000	                          call 0x4000951	       834	objcopy.c	FUNCTION_4	DO_1	ELSE_2	CALL_8
0x4000951	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       840	objcopy.c	FUNCTION_4	DO_1
0x4000955	        0x488945d8	             mov qword [rbp - 0x28], rax	       840	objcopy.c	FUNCTION_4	DO_1
0x4000959	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       842	objcopy.c	FUNCTION_4
0x400095e	     0xf8565fcffff	                           jne 0x40005c9	       842	objcopy.c	FUNCTION_4
0x4000964	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       844	objcopy.c	FUNCTION_4
0x4000967	              0xc9	                                   leave	       845	objcopy.c	FUNCTION_4
0x4000968	              0xc3	                                     ret	       845	objcopy.c	FUNCTION_4
copy_main	IF,73:FOR,1:ELSE,24:DO,0:SWITCH,4:functions,0:WHILE,1:CALL,182	1509
0x4008f30	              0x55	                                push rbp	      4685	objcopy.c	FUNCTION_62
0x4008f31	          0x4889e5	                            mov rbp, rsp	      4685	objcopy.c	FUNCTION_62
0x4008f34	            0x4154	                                push r12	      4685	objcopy.c	FUNCTION_62
0x4008f36	              0x53	                                push rbx	      4685	objcopy.c	FUNCTION_62
0x4008f37	    0x4881ece00100	                          sub rsp, 0x1e0	      4685	objcopy.c	FUNCTION_62
0x4008f3e	    0x89bd1cfeffff	            mov dword [rbp - 0x1e4], edi	      4685	objcopy.c	FUNCTION_62
0x4008f44	    0x4889b510feff	            mov qword [rbp - 0x1f0], rsi	      4685	objcopy.c	FUNCTION_62
0x4008f4b	    0x64488b042528	                mov rax, qword fs:[0x28]	      4685	objcopy.c	FUNCTION_62
0x4008f54	        0x488945e8	             mov qword [rbp - 0x18], rax	      4685	objcopy.c	FUNCTION_62
0x4008f58	            0x31c0	                            xor eax, eax	      4685	objcopy.c	FUNCTION_62
0x4008f5a	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	      4686	objcopy.c	FUNCTION_62
0x4008f65	    0x48c78558feff	              mov qword [rbp - 0x1a8], 0	      4687	objcopy.c	FUNCTION_62
0x4008f70	    0x48c78568feff	              mov qword [rbp - 0x198], 0	      4689	objcopy.c	FUNCTION_62
0x4008f7b	    0x48c78570feff	              mov qword [rbp - 0x190], 0	      4690	objcopy.c	FUNCTION_62
0x4008f86	    0xc78524feffff	              mov dword [rbp - 0x1dc], 0	      4691	objcopy.c	FUNCTION_62
0x4008f90	    0xc78528feffff	              mov dword [rbp - 0x1d8], 1	      4692	objcopy.c	FUNCTION_62
0x4008f9a	    0xc7852cfeffff	              mov dword [rbp - 0x1d4], 0	      4693	objcopy.c	FUNCTION_62
0x4008fa4	    0x48c78578feff	              mov qword [rbp - 0x188], 0	      4696	objcopy.c	FUNCTION_62
0x4008faf	      0xe9eb150000	                           jmp 0x400a59f	      4698	objcopy.c	FUNCTION_62	WHILE_1	CALL_1
0x4008fb4	    0x81bd3cfeffff	          cmp dword [rbp - 0x1c4], 0xd6 	      4701	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4008fbe	     0xf87c7150000	                            ja 0x400a58b	      4701	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4008fc4	    0x8b853cfeffff	            mov eax, dword [rbp - 0x1c4]	      4701	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4008fca	    0x488b04c50000	                  mov rax, qword [rax*8]	      4701	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4008fd2	            0xffe0	                                 jmp rax	      4701	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4008fd4	    0x488b05000000	            mov rax, qword [0x04008fdb] 	      4704	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_2
0x4008fdb	          0x4889c7	                            mov rdi, rax	      4704	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_2
0x4008fde	      0xe800000000	                          call 0x4008fe3	      4704	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_2
0x4008fe3	    0x890500000000	            mov dword [0x04008fe9], eax 	      4704	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_2
0x4008fe9	    0x8b0500000000	            mov eax, dword [0x04008fef] 	      4705	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_1
0x4008fef	            0x85c0	                           test eax, eax	      4705	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_1
0x4008ff1	     0xf89a8150000	                           jns 0x400a59f	      4705	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_1
0x4008ff7	      0xbf00000000	                              mov edi, 0	      4706	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_4
0x4008ffc	      0xe800000000	                          call 0x4009001	      4706	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_4
0x4009001	          0x4889c7	                            mov rdi, rax	      4706	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_4
0x4009004	      0xb800000000	                              mov eax, 0	      4706	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_4
0x4009009	      0xe800000000	                          call 0x400900e	      4706	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_4
0x400900e	    0x488b05000000	            mov rax, qword [0x04009015] 	      4710	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_5
0x4009015	          0x4889c7	                            mov rdi, rax	      4710	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_5
0x4009018	      0xe800000000	                          call 0x400901d	      4710	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_5
0x400901d	    0x48898578feff	            mov qword [rbp - 0x188], rax	      4710	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_5
0x4009024	    0x4883bd78feff	              cmp qword [rbp - 0x188], 0	      4711	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_2
0x400902c	     0xf856d150000	                           jne 0x400a59f	      4711	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_2
0x4009032	    0x488b1d000000	            mov rbx, qword [0x04009039] 	      4712	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_7
0x4009039	      0xbf00000000	                              mov edi, 0	      4712	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_7
0x400903e	      0xe800000000	                          call 0x4009043	      4712	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_7
0x4009043	          0x4889de	                            mov rsi, rbx	      4712	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_7
0x4009046	          0x4889c7	                            mov rdi, rax	      4712	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_7
0x4009049	      0xb800000000	                              mov eax, 0	      4712	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_7
0x400904e	      0xe800000000	                          call 0x4009053	      4712	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_7
0x4009053	    0x488b05000000	            mov rax, qword [0x0400905a] 	      4716	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_3
0x400905a	          0x4885c0	                           test rax, rax	      4716	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_3
0x400905d	            0x743a	                            je 0x4009099	      4716	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_3
0x400905f	    0x488b05000000	            mov rax, qword [0x04009066] 	      4718	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_3	CALL_8
0x4009066	          0x4889c7	                            mov rdi, rax	      4718	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_3	CALL_8
0x4009069	      0xe800000000	                          call 0x400906e	      4718	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_3	CALL_8
0x400906e	    0x890500000000	            mov dword [0x04009074], eax 	      4718	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_3	CALL_8
0x4009074	    0x8b0500000000	            mov eax, dword [0x0400907a] 	      4719	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_3	IF_4
0x400907a	            0x85c0	                           test eax, eax	      4719	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_3	IF_4
0x400907c	     0xf8f1d150000	                            jg 0x400a59f	      4719	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_3	IF_4
0x4009082	      0xbf00000000	                              mov edi, 0	      4720	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4009087	      0xe800000000	                          call 0x400908c	      4720	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_3	CALL_10
0x400908c	          0x4889c7	                            mov rdi, rax	      4720	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_3	CALL_10
0x400908f	      0xb800000000	                              mov eax, 0	      4720	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4009094	      0xe800000000	                          call 0x4009099	      4720	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4009099	    0xc70500000000	               mov dword [0x040090a3], 4	      4723	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_1
0x40090a3	      0xe9f7140000	                           jmp 0x400a59f	      4724	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40090a8	    0x488b05000000	            mov rax, qword [0x040090af] 	      4727	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_11
0x40090af	          0x4889c7	                            mov rdi, rax	      4727	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_11
0x40090b2	      0xe800000000	                          call 0x40090b7	      4727	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_11
0x40090b7	    0x890500000000	            mov dword [0x040090bd], eax 	      4727	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_11
0x40090bd	    0x8b0500000000	            mov eax, dword [0x040090c3] 	      4728	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_5
0x40090c3	            0x85c0	                           test eax, eax	      4728	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_5
0x40090c5	     0xf8fd4140000	                            jg 0x400a59f	      4728	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_5
0x40090cb	      0xbf00000000	                              mov edi, 0	      4729	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_13
0x40090d0	      0xe800000000	                          call 0x40090d5	      4729	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_13
0x40090d5	          0x4889c7	                            mov rdi, rax	      4729	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_13
0x40090d8	      0xb800000000	                              mov eax, 0	      4729	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_13
0x40090dd	      0xe800000000	                          call 0x40090e2	      4729	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_13
0x40090e2	    0x488b05000000	            mov rax, qword [0x040090e9] 	      4734	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40090e9	    0x48898568feff	            mov qword [rbp - 0x198], rax	      4734	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40090f0	      0xe9aa140000	                           jmp 0x400a59f	      4735	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40090f5	    0x488b05000000	            mov rax, qword [0x040090fc] 	      4739	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40090fc	    0x48898570feff	            mov qword [rbp - 0x190], rax	      4739	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009103	      0xe997140000	                           jmp 0x400a59f	      4740	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009108	    0x488b05000000	            mov rax, qword [0x0400910f] 	      4743	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400910f	    0x48898570feff	            mov qword [rbp - 0x190], rax	      4743	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009116	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      4743	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400911d	    0x48898568feff	            mov qword [rbp - 0x198], rax	      4743	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009124	      0xe976140000	                           jmp 0x400a59f	      4744	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009129	    0x488b05000000	            mov rax, qword [0x04009130] 	      4747	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_14
0x4009130	      0xba02000000	                              mov edx, 2	      4747	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_14
0x4009135	      0xbe01000000	                              mov esi, 1	      4747	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_14
0x400913a	          0x4889c7	                            mov rdi, rax	      4747	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_14
0x400913d	      0xe82778ffff	              call sym.find_section_list	      4747	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_14
0x4009142	    0xc70500000000	               mov dword [0x0400914c], 1	      4748	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400914c	      0xe94e140000	                           jmp 0x400a59f	      4749	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009151	    0x488b05000000	            mov rax, qword [0x04009158] 	      4752	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_15
0x4009158	          0x4889c7	                            mov rdi, rax	      4752	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_15
0x400915b	      0xe8d3e3ffff	   call sym.handle_remove_section_option	      4752	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_15
0x4009160	      0xe93a140000	                           jmp 0x400a59f	      4753	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009165	    0x488b05000000	            mov rax, qword [0x0400916c] 	      4756	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_16
0x400916c	          0x4889c7	                            mov rdi, rax	      4756	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_16
0x400916f	      0xe866e3ffff	call sym.handle_remove_relocations_option	      4756	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_16
0x4009174	      0xe926140000	                           jmp 0x400a59f	      4757	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009179	    0xc70500000000	               mov dword [0x04009183], 7	      4760	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009183	      0xe917140000	                           jmp 0x400a59f	      4761	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009188	    0xc70500000000	               mov dword [0x04009192], 2	      4764	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009192	      0xe908140000	                           jmp 0x400a59f	      4765	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009197	    0xc70500000000	               mov dword [0x040091a1], 5	      4768	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40091a1	      0xe9f9130000	                           jmp 0x400a59f	      4769	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40091a6	    0xc70500000000	               mov dword [0x040091b0], 3	      4772	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40091b0	      0xe9ea130000	                           jmp 0x400a59f	      4773	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40091b5	    0xc70500000000	               mov dword [0x040091bf], 4	      4776	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40091bf	      0xe9db130000	                           jmp 0x400a59f	      4777	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40091c4	    0xc70500000000	               mov dword [0x040091ce], 1	      4780	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40091ce	      0xe9cc130000	                           jmp 0x400a59f	      4781	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40091d3	    0xc70500000000	               mov dword [0x040091dd], 1	      4784	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40091dd	    0x488b05000000	            mov rax, qword [0x040091e4] 	      4785	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40091e4	    0x488905000000	            mov qword [0x040091eb], rax 	      4785	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40091eb	      0xe9af130000	                           jmp 0x400a59f	      4786	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40091f0	    0x488b15000000	            mov rdx, qword [0x040091f7] 	      4789	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_17
0x40091f7	    0x488b05000000	            mov rax, qword [0x040091fe] 	      4789	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_17
0x40091fe	          0x4889d6	                            mov rsi, rdx	      4789	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_17
0x4009201	          0x4889c7	                            mov rdi, rax	      4789	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_17
0x4009204	      0xe8427bffff	            call sym.add_specific_symbol	      4789	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_17
0x4009209	      0xe991130000	                           jmp 0x400a59f	      4790	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400920e	    0xc70500000000	               mov dword [0x04009218], 1	      4793	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009218	      0xe982130000	                           jmp 0x400a59f	      4794	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400921d	    0xc70500000000	               mov dword [0x04009227], 0	      4796	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009227	      0xe973130000	                           jmp 0x400a59f	      4797	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400922c	    0x488b15000000	            mov rdx, qword [0x04009233] 	      4800	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_18
0x4009233	    0x488b05000000	            mov rax, qword [0x0400923a] 	      4800	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_18
0x400923a	          0x4889d6	                            mov rsi, rdx	      4800	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_18
0x400923d	          0x4889c7	                            mov rdi, rax	      4800	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_18
0x4009240	      0xe8067bffff	            call sym.add_specific_symbol	      4800	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_18
0x4009245	      0xe955130000	                           jmp 0x400a59f	      4801	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400924a	    0x488b15000000	            mov rdx, qword [0x04009251] 	      4804	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_19
0x4009251	    0x488b05000000	            mov rax, qword [0x04009258] 	      4804	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_19
0x4009258	          0x4889d6	                            mov rsi, rdx	      4804	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_19
0x400925b	          0x4889c7	                            mov rdi, rax	      4804	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_19
0x400925e	      0xe8e87affff	            call sym.add_specific_symbol	      4804	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_19
0x4009263	      0xe937130000	                           jmp 0x400a59f	      4805	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009268	    0x488b15000000	            mov rdx, qword [0x0400926f] 	      4808	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_20
0x400926f	    0x488b05000000	            mov rax, qword [0x04009276] 	      4808	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_20
0x4009276	          0x4889d6	                            mov rsi, rdx	      4808	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_20
0x4009279	          0x4889c7	                            mov rdi, rax	      4808	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_20
0x400927c	      0xe8ca7affff	            call sym.add_specific_symbol	      4808	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_20
0x4009281	      0xe919130000	                           jmp 0x400a59f	      4809	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009286	    0x488b15000000	            mov rdx, qword [0x0400928d] 	      4812	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_21
0x400928d	    0x488b05000000	            mov rax, qword [0x04009294] 	      4812	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_21
0x4009294	          0x4889d6	                            mov rsi, rdx	      4812	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_21
0x4009297	          0x4889c7	                            mov rdi, rax	      4812	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_21
0x400929a	      0xe8ac7affff	            call sym.add_specific_symbol	      4812	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_21
0x400929f	      0xe9fb120000	                           jmp 0x400a59f	      4813	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40092a4	    0x488b15000000	            mov rdx, qword [0x040092ab] 	      4816	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_22
0x40092ab	    0x488b05000000	            mov rax, qword [0x040092b2] 	      4816	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_22
0x40092b2	          0x4889d6	                            mov rsi, rdx	      4816	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_22
0x40092b5	          0x4889c7	                            mov rdi, rax	      4816	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_22
0x40092b8	      0xe88e7affff	            call sym.add_specific_symbol	      4816	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_22
0x40092bd	      0xe9dd120000	                           jmp 0x400a59f	      4817	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40092c2	    0x488b15000000	            mov rdx, qword [0x040092c9] 	      4820	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_23
0x40092c9	    0x488b05000000	            mov rax, qword [0x040092d0] 	      4820	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_23
0x40092d0	          0x4889d6	                            mov rsi, rdx	      4820	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_23
0x40092d3	          0x4889c7	                            mov rdi, rax	      4820	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_23
0x40092d6	      0xe8707affff	            call sym.add_specific_symbol	      4820	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_23
0x40092db	      0xe9bf120000	                           jmp 0x400a59f	      4821	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40092e0	    0xc70500000000	               mov dword [0x040092ea], 1	      4824	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40092ea	      0xe9b0120000	                           jmp 0x400a59f	      4825	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40092ef	    0xc70500000000	               mov dword [0x040092f9], 1	      4828	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40092f9	      0xe9a1120000	                           jmp 0x400a59f	      4829	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40092fe	    0xc70500000000	               mov dword [0x04009308], 0	      4832	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009308	      0xe992120000	                           jmp 0x400a59f	      4833	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400930d	    0xc70500000000	               mov dword [0x04009317], 1	      4836	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009317	      0xe983120000	                           jmp 0x400a59f	      4837	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400931c	    0xc70500000000	               mov dword [0x04009326], 2	      4840	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009326	      0xe974120000	                           jmp 0x400a59f	      4841	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400932b	    0xc70500000000	               mov dword [0x04009335], 1	      4844	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009335	      0xe965120000	                           jmp 0x400a59f	      4845	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400933a	    0xc70500000000	               mov dword [0x04009344], 1	      4848	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009344	      0xe956120000	                           jmp 0x400a59f	      4849	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009349	    0xc78524feffff	              mov dword [rbp - 0x1dc], 1	      4852	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009353	      0xe947120000	                           jmp 0x400a59f	      4853	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009358	    0xc7852cfeffff	              mov dword [rbp - 0x1d4], 1	      4856	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009362	      0xe938120000	                           jmp 0x400a59f	      4857	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009367	    0xc70500000000	               mov dword [0x04009371], 1	      4860	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009371	      0xe929120000	                           jmp 0x400a59f	      4861	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009376	    0x488b0d000000	            mov rcx, qword [0x0400937d] 	      4864	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_24
0x400937d	    0x488b05000000	            mov rax, qword [0x04009384] 	      4864	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_24
0x4009384	      0xba00000000	                              mov edx, 0	      4864	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_24
0x4009389	          0x4889ce	                            mov rsi, rcx	      4864	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_24
0x400938c	          0x4889c7	                            mov rdi, rax	      4864	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_24
0x400938f	      0xe878f9ffff	               call sym.init_section_add	      4864	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_24
0x4009394	    0x488905000000	            mov qword [0x0400939b], rax 	      4864	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_24
0x400939b	    0x488b05000000	            mov rax, qword [0x040093a2] 	      4866	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_25
0x40093a2	          0x4889c7	                            mov rdi, rax	      4866	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_25
0x40093a5	      0xe825faffff	          call sym.section_add_load_file	      4866	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_25
0x40093aa	      0xe9f0110000	                           jmp 0x400a59f	      4867	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40093af	    0x488b0d000000	            mov rcx, qword [0x040093b6] 	      4870	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_26
0x40093b6	    0x488b05000000	            mov rax, qword [0x040093bd] 	      4870	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_26
0x40093bd	      0xba00000000	                              mov edx, 0	      4870	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_26
0x40093c2	          0x4889ce	                            mov rsi, rcx	      4870	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_26
0x40093c5	          0x4889c7	                            mov rdi, rax	      4870	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_26
0x40093c8	      0xe83ff9ffff	               call sym.init_section_add	      4870	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_26
0x40093cd	    0x488905000000	            mov qword [0x040093d4], rax 	      4870	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_26
0x40093d4	    0x488b05000000	            mov rax, qword [0x040093db] 	      4872	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_27
0x40093db	          0x4889c7	                            mov rdi, rax	      4872	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_27
0x40093de	      0xe8ecf9ffff	          call sym.section_add_load_file	      4872	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_27
0x40093e3	      0xe9b7110000	                           jmp 0x400a59f	      4873	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40093e8	    0x488b0d000000	            mov rcx, qword [0x040093ef] 	      4876	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_28
0x40093ef	    0x488b05000000	            mov rax, qword [0x040093f6] 	      4876	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_28
0x40093f6	      0xba00000000	                              mov edx, 0	      4876	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_28
0x40093fb	          0x4889ce	                            mov rsi, rcx	      4876	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_28
0x40093fe	          0x4889c7	                            mov rdi, rax	      4876	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_28
0x4009401	      0xe806f9ffff	               call sym.init_section_add	      4876	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_28
0x4009406	    0x488905000000	            mov qword [0x0400940d], rax 	      4876	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_28
0x400940d	      0xe98d110000	                           jmp 0x400a59f	      4878	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009412	      0xbf30000000	                           mov edi, 0x30	      4883	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_29
0x4009417	      0xe800000000	                          call 0x400941c	      4883	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_29
0x400941c	    0x488985c0feff	            mov qword [rbp - 0x140], rax	      4883	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_29
0x4009423	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4885	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400942a	    0x48c700000000	                      mov qword [rax], 0	      4885	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009431	    0x488b05000000	            mov rax, qword [0x04009438] 	      4886	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_30
0x4009438	      0xbe3d000000	                           mov esi, 0x3d	      4886	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_30
0x400943d	          0x4889c7	                            mov rdi, rax	      4886	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_30
0x4009440	      0xe800000000	                          call 0x4009445	      4886	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_30
0x4009445	    0x488985c8feff	            mov qword [rbp - 0x138], rax	      4886	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_30
0x400944c	    0x4883bdc8feff	              cmp qword [rbp - 0x138], 0	      4887	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_6
0x4009454	            0x751c	                           jne 0x4009472	      4887	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_6
0x4009456	      0xbf00000000	                              mov edi, 0	      4888	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_32
0x400945b	      0xe800000000	                          call 0x4009460	      4888	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_32
0x4009460	      0xbe00000000	                              mov esi, 0	      4888	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_32
0x4009465	          0x4889c7	                            mov rdi, rax	      4888	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_32
0x4009468	      0xb800000000	                              mov eax, 0	      4888	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_32
0x400946d	      0xe800000000	                          call 0x4009472	      4888	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_32
0x4009472	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      4889	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_33
0x4009479	        0x4883c001	                              add rax, 1	      4889	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_33
0x400947d	      0xbe3a000000	                           mov esi, 0x3a	      4889	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_33
0x4009482	          0x4889c7	                            mov rdi, rax	      4889	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_33
0x4009485	      0xe800000000	                          call 0x400948a	      4889	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_33
0x400948a	    0x48898580feff	            mov qword [rbp - 0x180], rax	      4889	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_33
0x4009491	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      4891	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_34
0x4009498	    0x488b15000000	            mov rdx, qword [0x0400949f] 	      4891	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_34
0x400949f	          0x4829d0	                            sub rax, rdx	      4891	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_34
0x40094a2	          0x4889c2	                            mov rdx, rax	      4891	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_34
0x40094a5	    0x488b05000000	            mov rax, qword [0x040094ac] 	      4891	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_34
0x40094ac	          0x4889d6	                            mov rsi, rdx	      4891	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_34
0x40094af	          0x4889c7	                            mov rdi, rax	      4891	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_34
0x40094b2	      0xe800000000	                          call 0x40094b7	      4891	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_34
0x40094b7	          0x4889c2	                            mov rdx, rax	      4891	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_34
0x40094ba	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4891	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_34
0x40094c1	        0x48895008	                mov qword [rax + 8], rdx	      4891	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_34
0x40094c5	    0x4883bd80feff	              cmp qword [rbp - 0x180], 0	      4892	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7
0x40094cd	            0x7469	                            je 0x4009538	      4892	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7
0x40094cf	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4894	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_35
0x40094d6	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      4894	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_35
0x40094dd	        0x4883c201	                              add rdx, 1	      4894	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_35
0x40094e1	          0x4829d0	                            sub rax, rdx	      4894	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_35
0x40094e4	          0x4889c2	                            mov rdx, rax	      4894	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_35
0x40094e7	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      4894	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_35
0x40094ee	        0x4883c001	                              add rax, 1	      4894	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_35
0x40094f2	          0x4889d6	                            mov rsi, rdx	      4894	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_35
0x40094f5	          0x4889c7	                            mov rdi, rax	      4894	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_35
0x40094f8	      0xe800000000	                          call 0x40094fd	      4894	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_35
0x40094fd	          0x4889c2	                            mov rdx, rax	      4894	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_35
0x4009500	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4894	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_35
0x4009507	        0x48895020	             mov qword [rax + 0x20], rdx	      4894	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_35
0x400950b	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4895	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_36
0x4009512	        0x4883c001	                              add rax, 1	      4895	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_36
0x4009516	      0xba00000000	                              mov edx, 0	      4895	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_36
0x400951b	      0xbe00000000	                              mov esi, 0	      4895	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_36
0x4009520	          0x4889c7	                            mov rdi, rax	      4895	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_36
0x4009523	      0xe800000000	                          call 0x4009528	      4895	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_36
0x4009528	          0x4889c2	                            mov rdx, rax	      4895	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_36
0x400952b	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4895	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_36
0x4009532	        0x48895010	             mov qword [rax + 0x10], rdx	      4895	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_36
0x4009536	            0xeb48	                           jmp 0x4009580	      4895	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_7	CALL_36
0x4009538	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4899	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_2
0x400953f	    0x48c740200000	               mov qword [rax + 0x20], 0	      4899	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_2
0x4009547	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      4900	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_2	CALL_37
0x400954e	        0x4883c001	                              add rax, 1	      4900	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_2	CALL_37
0x4009552	      0xba00000000	                              mov edx, 0	      4900	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_2	CALL_37
0x4009557	      0xbe00000000	                              mov esi, 0	      4900	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_2	CALL_37
0x400955c	          0x4889c7	                            mov rdi, rax	      4900	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_2	CALL_37
0x400955f	      0xe800000000	                          call 0x4009564	      4900	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_2	CALL_37
0x4009564	          0x4889c2	                            mov rdx, rax	      4900	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_2	CALL_37
0x4009567	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4900	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_2	CALL_37
0x400956e	        0x48895010	             mov qword [rax + 0x10], rdx	      4900	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_2	CALL_37
0x4009572	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      4901	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_2
0x4009579	    0x48898580feff	            mov qword [rbp - 0x180], rax	      4901	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_2
0x4009580	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4904	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_38
0x4009587	        0x4883c001	                              add rax, 1	      4904	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_38
0x400958b	      0xbe2c000000	                           mov esi, 0x2c	      4904	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_38
0x4009590	          0x4889c7	                            mov rdi, rax	      4904	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_38
0x4009593	      0xe800000000	                          call 0x4009598	      4904	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_38
0x4009598	    0x48898580feff	            mov qword [rbp - 0x180], rax	      4904	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_38
0x400959f	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4905	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40095a6	    0x48c740280000	               mov qword [rax + 0x28], 0	      4905	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40095ae	    0x4883bd80feff	              cmp qword [rbp - 0x180], 0	      4906	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_8
0x40095b6	            0x742f	                            je 0x40095e7	      4906	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_8
0x40095b8	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4907	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_39
0x40095bf	        0x488d5028	                   lea rdx, [rax + 0x28]	      4907	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_39
0x40095c3	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      4907	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_39
0x40095ca	        0x4883c001	                              add rax, 1	      4907	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_39
0x40095ce	          0x4889d6	                            mov rsi, rdx	      4907	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_39
0x40095d1	          0x4889c7	                            mov rdi, rax	      4907	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_39
0x40095d4	      0xe8d96fffff	                 call sym.parse_symflags	      4907	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_39
0x40095d9	            0x89c2	                            mov edx, eax	      4907	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_39
0x40095db	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4907	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_39
0x40095e2	          0x895018	             mov dword [rax + 0x18], edx	      4907	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_39
0x40095e5	            0xeb0e	                           jmp 0x40095f5	      4907	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_39
0x40095e7	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4909	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_3
0x40095ee	    0xc74018020000	               mov dword [rax + 0x18], 2	      4909	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_3
0x40095f5	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4912	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_3	IF_9
0x40095fc	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4912	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_3	IF_9
0x4009600	          0x4885c0	                           test rax, rax	      4912	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_3	IF_9
0x4009603	            0x743b	                            je 0x4009640	      4912	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_3	IF_9
0x4009605	    0x488b15000000	            mov rdx, qword [0x0400960c] 	      4914	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_3	IF_9
0x400960c	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4914	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_3	IF_9
0x4009613	          0x488910	                    mov qword [rax], rdx	      4914	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_3	IF_9
0x4009616	    0x488b05000000	            mov rax, qword [0x0400961d] 	      4915	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_3	IF_9	IF_10
0x400961d	          0x4885c0	                           test rax, rax	      4915	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_3	IF_9	IF_10
0x4009620	            0x750e	                           jne 0x4009630	      4915	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_3	IF_9	IF_10
0x4009622	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4916	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_3	IF_9	IF_10
0x4009629	    0x488905000000	            mov qword [0x04009630], rax 	      4916	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_3	IF_9	IF_10
0x4009630	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4917	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_3	IF_9
0x4009637	    0x488905000000	            mov qword [0x0400963e], rax 	      4917	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_3	IF_9
0x400963e	            0xeb1f	                           jmp 0x400965f	      4917	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_3	IF_9
0x4009640	    0x488b05000000	            mov rax, qword [0x04009647] 	      4921	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_4
0x4009647	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	      4921	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_4
0x400964e	          0x488910	                    mov qword [rax], rdx	      4921	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_4
0x4009651	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      4922	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_4
0x4009658	    0x488905000000	            mov qword [0x0400965f], rax 	      4922	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_4
0x400965f	    0x8b0500000000	            mov eax, dword [0x04009665] 	      4924	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009665	          0x83c001	                              add eax, 1	      4924	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009668	    0x890500000000	            mov dword [0x0400966e], eax 	      4924	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400966e	      0xe92c0f0000	                           jmp 0x400a59f	      4926	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009673	    0x488b05000000	            mov rax, qword [0x0400967a] 	      4929	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_40
0x400967a	      0xbe00000000	                              mov esi, 0	      4929	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_40
0x400967f	          0x4889c7	                            mov rdi, rax	      4929	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_40
0x4009682	      0xe800000000	                          call 0x4009687	      4929	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_40
0x4009687	    0x488905000000	            mov qword [0x0400968e], rax 	      4929	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_40
0x400968e	      0xe90c0f0000	                           jmp 0x400a59f	      4930	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009693	    0xc78530feffff	              mov dword [rbp - 0x1d0], 0	      4937	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400969d	    0x48c78590feff	              mov qword [rbp - 0x170], 0	      4941	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40096a8	    0x8b853cfeffff	            mov eax, dword [rbp - 0x1c4]	      4944	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_2
0x40096ae	      0x3d9d000000	                           cmp eax, 0x9d	      4944	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_2
0x40096b3	            0x7425	                            je 0x40096da	      4944	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_2
0x40096b5	      0x3d9e000000	                           cmp eax, 0x9e	      4944	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_2
0x40096ba	            0x7435	                            je 0x40096f1	      4944	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_2
0x40096bc	      0x3d9c000000	                           cmp eax, 0x9c	      4944	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_2
0x40096c1	            0x7544	                           jne 0x4009707	      4944	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_2
0x40096c3	    0x48c78590feff	              mov qword [rbp - 0x170], 0	      4947	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_2
0x40096ce	    0xc78530feffff	          mov dword [rbp - 0x1d0], 0x28 	      4948	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_2
0x40096d8	            0xeb2d	                           jmp 0x4009707	      4949	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_2
0x40096da	    0x48c78590feff	              mov qword [rbp - 0x170], 0	      4951	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_2
0x40096e5	    0xc78530feffff	          mov dword [rbp - 0x1d0], 0x20 	      4952	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_2
0x40096ef	            0xeb16	                           jmp 0x4009707	      4953	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_2
0x40096f1	    0x48c78590feff	              mov qword [rbp - 0x170], 0	      4955	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_2
0x40096fc	    0xc78530feffff	              mov dword [rbp - 0x1d0], 8	      4956	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_2
0x4009706	              0x90	                                     nop	      4957	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_2
0x4009707	    0x488b05000000	            mov rax, qword [0x0400970e] 	      4960	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_41
0x400970e	      0xbe3d000000	                           mov esi, 0x3d	      4960	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_41
0x4009713	          0x4889c7	                            mov rdi, rax	      4960	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_41
0x4009716	      0xe800000000	                          call 0x400971b	      4960	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_41
0x400971b	    0x48898588feff	            mov qword [rbp - 0x178], rax	      4960	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_41
0x4009722	    0x4883bd88feff	              cmp qword [rbp - 0x178], 0	      4961	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11
0x400972a	            0x7572	                           jne 0x400979e	      4961	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11
0x400972c	    0x488b05000000	            mov rax, qword [0x04009733] 	      4963	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	CALL_42
0x4009733	      0xbe2b000000	                           mov esi, 0x2b	      4963	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	CALL_42
0x4009738	          0x4889c7	                            mov rdi, rax	      4963	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	CALL_42
0x400973b	      0xe800000000	                          call 0x4009740	      4963	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	CALL_42
0x4009740	    0x48898588feff	            mov qword [rbp - 0x178], rax	      4963	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	CALL_42
0x4009747	    0x4883bd88feff	              cmp qword [rbp - 0x178], 0	      4964	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	IF_12
0x400974f	     0xf8587000000	                           jne 0x40097dc	      4964	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	IF_12
0x4009755	    0x488b05000000	            mov rax, qword [0x0400975c] 	      4966	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	IF_12	CALL_43
0x400975c	      0xbe2d000000	                           mov esi, 0x2d	      4966	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	IF_12	CALL_43
0x4009761	          0x4889c7	                            mov rdi, rax	      4966	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	IF_12	CALL_43
0x4009764	      0xe800000000	                          call 0x4009769	      4966	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	IF_12	CALL_43
0x4009769	    0x48898588feff	            mov qword [rbp - 0x178], rax	      4966	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	IF_12	CALL_43
0x4009770	    0x4883bd88feff	              cmp qword [rbp - 0x178], 0	      4967	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	IF_12	IF_13
0x4009778	            0x7562	                           jne 0x40097dc	      4967	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	IF_12	IF_13
0x400977a	      0xbf00000000	                              mov edi, 0	      4968	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	IF_12	CALL_45
0x400977f	      0xe800000000	                          call 0x4009784	      4968	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	IF_12	CALL_45
0x4009784	          0x4889c2	                            mov rdx, rax	      4968	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	IF_12	CALL_45
0x4009787	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      4968	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	IF_12	CALL_45
0x400978e	          0x4889c6	                            mov rsi, rax	      4968	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	IF_12	CALL_45
0x4009791	          0x4889d7	                            mov rdi, rdx	      4968	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	IF_12	CALL_45
0x4009794	      0xb800000000	                              mov eax, 0	      4968	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	IF_12	CALL_45
0x4009799	      0xe800000000	                          call 0x400979e	      4968	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_11	IF_12	CALL_45
0x400979e	    0x8b853cfeffff	            mov eax, dword [rbp - 0x1c4]	      4974	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_5	SWITCH_3
0x40097a4	      0x3d9d000000	                           cmp eax, 0x9d	      4974	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_5	SWITCH_3
0x40097a9	            0x741a	                            je 0x40097c5	      4974	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_5	SWITCH_3
0x40097ab	      0x3d9e000000	                           cmp eax, 0x9e	      4974	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_5	SWITCH_3
0x40097b0	            0x741f	                            je 0x40097d1	      4974	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_5	SWITCH_3
0x40097b2	      0x3d9c000000	                           cmp eax, 0x9c	      4974	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_5	SWITCH_3
0x40097b7	            0x7523	                           jne 0x40097dc	      4974	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_5	SWITCH_3
0x40097b9	    0xc78530feffff	          mov dword [rbp - 0x1d0], 0x14 	      4977	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_5	SWITCH_3
0x40097c3	            0xeb17	                           jmp 0x40097dc	      4978	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_5	SWITCH_3
0x40097c5	    0xc78530feffff	          mov dword [rbp - 0x1d0], 0x10 	      4980	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_5	SWITCH_3
0x40097cf	            0xeb0b	                           jmp 0x40097dc	      4981	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_5	SWITCH_3
0x40097d1	    0xc78530feffff	              mov dword [rbp - 0x1d0], 4	      4983	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_5	SWITCH_3
0x40097db	              0x90	                                     nop	      4984	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_5	SWITCH_3
0x40097dc	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4988	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40097e3	    0x488b15000000	            mov rdx, qword [0x040097ea] 	      4988	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40097ea	          0x4829d0	                            sub rax, rdx	      4988	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40097ed	    0x898540feffff	            mov dword [rbp - 0x1c0], eax	      4988	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40097f3	    0x8b8540feffff	            mov eax, dword [rbp - 0x1c0]	      4989	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_46
0x40097f9	          0x83c001	                              add eax, 1	      4989	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_46
0x40097fc	            0x4898	                                    cdqe	      4989	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_46
0x40097fe	          0x4889c7	                            mov rdi, rax	      4989	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_46
0x4009801	      0xe800000000	                          call 0x4009806	      4989	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_46
0x4009806	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      4989	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_46
0x400980d	    0x8b8540feffff	            mov eax, dword [rbp - 0x1c0]	      4990	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_47
0x4009813	          0x4863d0	                         movsxd rdx, eax	      4990	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_47
0x4009816	    0x488b0d000000	            mov rcx, qword [0x0400981d] 	      4990	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_47
0x400981d	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      4990	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_47
0x4009824	          0x4889ce	                            mov rsi, rcx	      4990	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_47
0x4009827	          0x4889c7	                            mov rdi, rax	      4990	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_47
0x400982a	      0xe800000000	                          call 0x400982f	      4990	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_47
0x400982f	    0x8b8540feffff	            mov eax, dword [rbp - 0x1c0]	      4991	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009835	          0x4863d0	                         movsxd rdx, eax	      4991	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009838	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      4991	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400983f	          0x4801d0	                            add rax, rdx	      4991	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009842	          0xc60000	                       mov byte [rax], 0	      4991	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009845	    0x8b9530feffff	            mov edx, dword [rbp - 0x1d0]	      4993	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_48
0x400984b	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      4993	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_48
0x4009852	      0xbe01000000	                              mov esi, 1	      4993	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_48
0x4009857	          0x4889c7	                            mov rdi, rax	      4993	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_48
0x400985a	      0xe80a71ffff	              call sym.find_section_list	      4993	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_48
0x400985f	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4993	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_48
0x4009866	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4995	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_49
0x400986d	        0x488d5001	                      lea rdx, [rax + 1]	      4995	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_49
0x4009871	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      4995	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_49
0x4009878	          0x4889c6	                            mov rsi, rax	      4995	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_49
0x400987b	          0x4889d7	                            mov rdi, rdx	      4995	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_49
0x400987e	      0xe800000000	                          call 0x4009883	      4995	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_49
0x4009883	    0x48898598feff	            mov qword [rbp - 0x168], rax	      4995	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_49
0x400988a	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      4996	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_14
0x4009891	           0xfb600	                   movzx eax, byte [rax]	      4996	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_14
0x4009894	            0x3c2d	                            cmp al, 0x2d	      4996	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_14
0x4009896	            0x7507	                           jne 0x400989f	      4996	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_14
0x4009898	    0x48f79d98feff	                 neg qword [rbp - 0x168]	      4997	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_14
0x400989f	    0x8b853cfeffff	            mov eax, dword [rbp - 0x1c4]	      4999	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098a5	      0x3d9d000000	                           cmp eax, 0x9d	      4999	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098aa	            0x7420	                            je 0x40098cc	      4999	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098ac	      0x3d9e000000	                           cmp eax, 0x9e	      4999	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098b1	            0x742d	                            je 0x40098e0	      4999	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098b3	      0x3d9c000000	                           cmp eax, 0x9c	      4999	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098b8	            0x7539	                           jne 0x40098f3	      4999	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098ba	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5002	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098c1	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      5002	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098c8	        0x48895018	             mov qword [rax + 0x18], rdx	      5002	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098cc	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5006	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098d3	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      5006	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098da	        0x48895020	             mov qword [rax + 0x20], rdx	      5006	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098de	            0xeb13	                           jmp 0x40098f3	      5007	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098e0	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5010	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098e7	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      5010	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098ee	        0x48895018	             mov qword [rax + 0x18], rdx	      5010	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098f2	              0x90	                                     nop	      5011	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	SWITCH_4
0x40098f3	      0xe9a70c0000	                           jmp 0x400a59f	      5014	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x40098f8	    0x488b05000000	            mov rax, qword [0x040098ff] 	      5017	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_50
0x40098ff	      0xbe00000000	                              mov esi, 0	      5017	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_50
0x4009904	          0x4889c7	                            mov rdi, rax	      5017	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_50
0x4009907	      0xe800000000	                          call 0x400990c	      5017	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_50
0x400990c	    0x488905000000	            mov qword [0x04009913], rax 	      5017	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_50
0x4009913	    0x488b05000000	            mov rax, qword [0x0400991a] 	      5018	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400991a	    0x488905000000	            mov qword [0x04009921], rax 	      5018	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009921	      0xe9790c0000	                           jmp 0x400a59f	      5019	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009926	    0xc78528feffff	              mov dword [rbp - 0x1d8], 1	      5022	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009930	      0xe96a0c0000	                           jmp 0x400a59f	      5023	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009935	    0xc70500000000	               mov dword [0x0400993f], 1	      5026	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400993f	      0xe95b0c0000	                           jmp 0x400a59f	      5027	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009944	    0x488b05000000	            mov rax, qword [0x0400994b] 	      5030	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15
0x400994b	          0x4885c0	                           test rax, rax	      5030	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15
0x400994e	     0xf84bd000000	                            je 0x4009a11	      5030	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15
0x4009954	    0x488b05000000	            mov rax, qword [0x0400995b] 	      5032	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	IF_16	CALL_51
0x400995b	      0xbe00000000	                              mov esi, 0	      5032	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	IF_16	CALL_51
0x4009960	          0x4889c7	                            mov rdi, rax	      5032	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	IF_16	CALL_51
0x4009963	      0xe800000000	                          call 0x4009968	      5032	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	IF_16	CALL_51
0x4009968	            0x85c0	                           test eax, eax	      5032	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	IF_16	CALL_51
0x400996a	            0x750f	                           jne 0x400997b	      5032	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	IF_16	CALL_51
0x400996c	    0xc70500000000	           mov dword [0x04009976], 0x10 	      5033	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	IF_16
0x4009976	      0xe9240c0000	                           jmp 0x400a59f	      5033	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	IF_16
0x400997b	    0x488b05000000	            mov rax, qword [0x04009982] 	      5034	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_6	IF_17	CALL_52
0x4009982	      0xbe00000000	                              mov esi, 0	      5034	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_6	IF_17	CALL_52
0x4009987	          0x4889c7	                            mov rdi, rax	      5034	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_6	IF_17	CALL_52
0x400998a	      0xe800000000	                          call 0x400998f	      5034	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_6	IF_17	CALL_52
0x400998f	            0x85c0	                           test eax, eax	      5034	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_6	IF_17	CALL_52
0x4009991	            0x750f	                           jne 0x40099a2	      5034	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_6	IF_17	CALL_52
0x4009993	    0xc70500000000	               mov dword [0x0400999d], 3	      5035	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_6	IF_17
0x400999d	      0xe9fd0b0000	                           jmp 0x400a59f	      5035	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_6	IF_17
0x40099a2	    0x488b05000000	            mov rax, qword [0x040099a9] 	      5036	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_7	IF_18	CALL_53
0x40099a9	      0xbe00000000	                              mov esi, 0	      5036	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_7	IF_18	CALL_53
0x40099ae	          0x4889c7	                            mov rdi, rax	      5036	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_7	IF_18	CALL_53
0x40099b1	      0xe800000000	                          call 0x40099b6	      5036	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_7	IF_18	CALL_53
0x40099b6	            0x85c0	                           test eax, eax	      5036	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_7	IF_18	CALL_53
0x40099b8	            0x750f	                           jne 0x40099c9	      5036	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_7	IF_18	CALL_53
0x40099ba	    0xc70500000000	               mov dword [0x040099c4], 5	      5037	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_7	IF_18
0x40099c4	      0xe9d60b0000	                           jmp 0x400a59f	      5037	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_7	IF_18
0x40099c9	    0x488b05000000	            mov rax, qword [0x040099d0] 	      5038	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_8	IF_19	CALL_54
0x40099d0	      0xbe00000000	                              mov esi, 0	      5038	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_8	IF_19	CALL_54
0x40099d5	          0x4889c7	                            mov rdi, rax	      5038	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_8	IF_19	CALL_54
0x40099d8	      0xe800000000	                          call 0x40099dd	      5038	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_8	IF_19	CALL_54
0x40099dd	            0x85c0	                           test eax, eax	      5038	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_8	IF_19	CALL_54
0x40099df	            0x750f	                           jne 0x40099f0	      5038	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_8	IF_19	CALL_54
0x40099e1	    0xc70500000000	               mov dword [0x040099eb], 9	      5039	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_8	IF_19
0x40099eb	      0xe9af0b0000	                           jmp 0x400a59f	      5039	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_8	IF_19
0x40099f0	    0x488b1d000000	            mov rbx, qword [0x040099f7] 	      5041	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_9	CALL_56
0x40099f7	      0xbf00000000	                              mov edi, 0	      5041	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_9	CALL_56
0x40099fc	      0xe800000000	                          call 0x4009a01	      5041	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_9	CALL_56
0x4009a01	          0x4889de	                            mov rsi, rbx	      5041	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_9	CALL_56
0x4009a04	          0x4889c7	                            mov rdi, rax	      5041	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_9	CALL_56
0x4009a07	      0xb800000000	                              mov eax, 0	      5041	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_9	CALL_56
0x4009a0c	      0xe800000000	                          call 0x4009a11	      5041	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_15	ELSE_9	CALL_56
0x4009a11	    0xc70500000000	               mov dword [0x04009a1b], 1	      5045	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_10
0x4009a1b	      0xe97f0b0000	                           jmp 0x400a59f	      5046	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009a20	    0xc70500000000	               mov dword [0x04009a2a], 1	      5049	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009a2a	      0xe9700b0000	                           jmp 0x400a59f	      5050	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009a2f	    0xc70500000000	           mov dword [0x04009a39], 0x10 	      5053	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009a39	      0xe9610b0000	                           jmp 0x400a59f	      5054	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009a3e	    0x488b05000000	            mov rax, qword [0x04009a45] 	      5057	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_20	CALL_57
0x4009a45	      0xbe00000000	                              mov esi, 0	      5057	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_20	CALL_57
0x4009a4a	          0x4889c7	                            mov rdi, rax	      5057	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_20	CALL_57
0x4009a4d	      0xe800000000	                          call 0x4009a52	      5057	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_20	CALL_57
0x4009a52	            0x85c0	                           test eax, eax	      5057	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_20	CALL_57
0x4009a54	            0x750f	                           jne 0x4009a65	      5057	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_20	CALL_57
0x4009a56	    0xc70500000000	               mov dword [0x04009a60], 1	      5058	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_20
0x4009a60	      0xe93a0b0000	                           jmp 0x400a59f	      5058	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_20
0x4009a65	    0x488b05000000	            mov rax, qword [0x04009a6c] 	      5059	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_11	IF_21	CALL_58
0x4009a6c	      0xbe00000000	                              mov esi, 0	      5059	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_11	IF_21	CALL_58
0x4009a71	          0x4889c7	                            mov rdi, rax	      5059	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_11	IF_21	CALL_58
0x4009a74	      0xe800000000	                          call 0x4009a79	      5059	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_11	IF_21	CALL_58
0x4009a79	            0x85c0	                           test eax, eax	      5059	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_11	IF_21	CALL_58
0x4009a7b	            0x750f	                           jne 0x4009a8c	      5059	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_11	IF_21	CALL_58
0x4009a7d	    0xc70500000000	               mov dword [0x04009a87], 2	      5060	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_11	IF_21
0x4009a87	      0xe9130b0000	                           jmp 0x400a59f	      5060	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_11	IF_21
0x4009a8c	    0x488b1d000000	            mov rbx, qword [0x04009a93] 	      5062	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_12	CALL_60
0x4009a93	      0xbf00000000	                              mov edi, 0	      5062	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_12	CALL_60
0x4009a98	      0xe800000000	                          call 0x4009a9d	      5062	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_12	CALL_60
0x4009a9d	          0x4889de	                            mov rsi, rbx	      5062	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_12	CALL_60
0x4009aa0	          0x4889c7	                            mov rdi, rax	      5062	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_12	CALL_60
0x4009aa3	      0xb800000000	                              mov eax, 0	      5062	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_12	CALL_60
0x4009aa8	      0xe800000000	                          call 0x4009aad	      5062	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_12	CALL_60
0x4009aad	    0x488b05000000	            mov rax, qword [0x04009ab4] 	      5070	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_61
0x4009ab4	      0xbe00000000	                              mov esi, 0	      5070	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_61
0x4009ab9	          0x4889c7	                            mov rdi, rax	      5070	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_61
0x4009abc	      0xe800000000	                          call 0x4009ac1	      5070	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_61
0x4009ac1	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      5070	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_61
0x4009ac8	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      5071	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009acf	    0x880500000000	               mov byte [0x04009ad5], al	      5071	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009ad5	     0xfb605000000	           movzx eax, byte [0x04009adc] 	      5072	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22
0x4009adc	           0xfb6c0	                           movzx eax, al	      5072	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22
0x4009adf	    0x483b85e0feff	            cmp rax, qword [rbp - 0x120]	      5072	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22
0x4009ae6	            0x744a	                            je 0x4009b32	      5072	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22
0x4009ae8	    0x488b95e0feff	            mov rdx, qword [rbp - 0x120]	      5076	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22
0x4009aef	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5076	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22
0x4009af3	      0xbe00000000	                              mov esi, 0	      5076	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22
0x4009af8	          0x4889c7	                            mov rdi, rax	      5076	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22
0x4009afb	      0xb800000000	                              mov eax, 0	      5076	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22
0x4009b00	      0xe800000000	                          call 0x4009b05	      5076	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22
0x4009b05	     0xfb605000000	           movzx eax, byte [0x04009b0c] 	      5078	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22	CALL_63
0x4009b0c	           0xfb6d8	                           movzx ebx, al	      5078	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22	CALL_63
0x4009b0f	      0xbf00000000	                              mov edi, 0	      5078	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22	CALL_63
0x4009b14	      0xe800000000	                          call 0x4009b19	      5078	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22	CALL_63
0x4009b19	          0x4889c1	                            mov rcx, rax	      5078	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22	CALL_63
0x4009b1c	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5078	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22	CALL_63
0x4009b20	            0x89da	                            mov edx, ebx	      5078	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22	CALL_63
0x4009b22	          0x4889c6	                            mov rsi, rax	      5078	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22	CALL_63
0x4009b25	          0x4889cf	                            mov rdi, rcx	      5078	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22	CALL_63
0x4009b28	      0xb800000000	                              mov eax, 0	      5078	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22	CALL_63
0x4009b2d	      0xe800000000	                          call 0x4009b32	      5078	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_22	CALL_63
0x4009b32	    0xc70500000000	               mov dword [0x04009b3c], 1	      5081	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009b3c	      0xe95e0a0000	                           jmp 0x400a59f	      5083	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009b41	    0xc78528feffff	              mov dword [rbp - 0x1d8], 0	      5086	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009b4b	      0xe94f0a0000	                           jmp 0x400a59f	      5087	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009b50	    0x488b05000000	            mov rax, qword [0x04009b57] 	      5090	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_64
0x4009b57	      0xbe00000000	                              mov esi, 0	      5090	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_64
0x4009b5c	          0x4889c7	                            mov rdi, rax	      5090	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_64
0x4009b5f	      0xe800000000	                          call 0x4009b64	      5090	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_64
0x4009b64	    0x488905000000	            mov qword [0x04009b6b], rax 	      5090	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_64
0x4009b6b	    0xc70500000000	               mov dword [0x04009b75], 1	      5091	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009b75	      0xe9250a0000	                           jmp 0x400a59f	      5092	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009b7a	    0xc70500000000	               mov dword [0x04009b84], 1	      5095	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009b84	      0xe9160a0000	                           jmp 0x400a59f	      5096	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009b89	    0x488b05000000	            mov rax, qword [0x04009b90] 	      5107	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_65
0x4009b90	      0xbe3d000000	                           mov esi, 0x3d	      5107	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_65
0x4009b95	          0x4889c7	                            mov rdi, rax	      5107	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_65
0x4009b98	      0xe800000000	                          call 0x4009b9d	      5107	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_65
0x4009b9d	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      5107	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_65
0x4009ba4	    0x4883bde8feff	              cmp qword [rbp - 0x118], 0	      5108	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_23
0x4009bac	            0x751c	                           jne 0x4009bca	      5108	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_23
0x4009bae	      0xbf00000000	                              mov edi, 0	      5109	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_67
0x4009bb3	      0xe800000000	                          call 0x4009bb8	      5109	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_67
0x4009bb8	      0xbe00000000	                              mov esi, 0	      5109	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_67
0x4009bbd	          0x4889c7	                            mov rdi, rax	      5109	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_67
0x4009bc0	      0xb800000000	                              mov eax, 0	      5109	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_67
0x4009bc5	      0xe800000000	                          call 0x4009bca	      5109	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_67
0x4009bca	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5111	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009bd1	    0x488b15000000	            mov rdx, qword [0x04009bd8] 	      5111	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009bd8	          0x4829d0	                            sub rax, rdx	      5111	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009bdb	    0x898544feffff	            mov dword [rbp - 0x1bc], eax	      5111	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009be1	    0x8b8544feffff	            mov eax, dword [rbp - 0x1bc]	      5112	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_68
0x4009be7	          0x83c001	                              add eax, 1	      5112	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_68
0x4009bea	            0x4898	                                    cdqe	      5112	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_68
0x4009bec	          0x4889c7	                            mov rdi, rax	      5112	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_68
0x4009bef	      0xe800000000	                          call 0x4009bf4	      5112	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_68
0x4009bf4	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      5112	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_68
0x4009bfb	    0x8b8544feffff	            mov eax, dword [rbp - 0x1bc]	      5113	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_69
0x4009c01	          0x4863d0	                         movsxd rdx, eax	      5113	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_69
0x4009c04	    0x488b0d000000	            mov rcx, qword [0x04009c0b] 	      5113	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_69
0x4009c0b	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      5113	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_69
0x4009c12	          0x4889ce	                            mov rsi, rcx	      5113	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_69
0x4009c15	          0x4889c7	                            mov rdi, rax	      5113	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_69
0x4009c18	      0xe800000000	                          call 0x4009c1d	      5113	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_69
0x4009c1d	    0x8b8544feffff	            mov eax, dword [rbp - 0x1bc]	      5114	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009c23	          0x4863d0	                         movsxd rdx, eax	      5114	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009c26	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      5114	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009c2d	          0x4801d0	                            add rax, rdx	      5114	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009c30	          0xc60000	                       mov byte [rax], 0	      5114	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009c33	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5116	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009c3a	        0x4883c001	                              add rax, 1	      5116	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009c3e	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      5116	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009c45	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      5117	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_70
0x4009c4c	          0x4889c7	                            mov rdi, rax	      5117	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_70
0x4009c4f	      0xe800000000	                          call 0x4009c54	      5117	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_70
0x4009c54	    0x898544feffff	            mov dword [rbp - 0x1bc], eax	      5117	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_70
0x4009c5a	    0x8b8544feffff	            mov eax, dword [rbp - 0x1bc]	      5118	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_71
0x4009c60	          0x83c001	                              add eax, 1	      5118	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_71
0x4009c63	            0x4898	                                    cdqe	      5118	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_71
0x4009c65	          0x4889c7	                            mov rdi, rax	      5118	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_71
0x4009c68	      0xe800000000	                          call 0x4009c6d	      5118	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_71
0x4009c6d	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      5118	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_71
0x4009c74	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      5119	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_72
0x4009c7b	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      5119	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_72
0x4009c82	          0x4889d6	                            mov rsi, rdx	      5119	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_72
0x4009c85	          0x4889c7	                            mov rdi, rax	      5119	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_72
0x4009c88	      0xe800000000	                          call 0x4009c8d	      5119	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_72
0x4009c8d	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	      5121	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_73
0x4009c94	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      5121	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_73
0x4009c9b	          0x4889c6	                            mov rsi, rax	      5121	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_73
0x4009c9e	      0xbf00000000	                              mov edi, 0	      5121	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_73
0x4009ca3	      0xe83586ffff	         call sym.add_redefine_and_check	      5121	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_73
0x4009ca8	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      5123	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_74
0x4009caf	          0x4889c7	                            mov rdi, rax	      5123	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_74
0x4009cb2	      0xe800000000	                          call 0x4009cb7	      5123	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_74
0x4009cb7	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      5124	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_75
0x4009cbe	          0x4889c7	                            mov rdi, rax	      5124	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_75
0x4009cc1	      0xe800000000	                          call 0x4009cc6	      5124	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_75
0x4009cc6	      0xe9d4080000	                           jmp 0x400a59f	      5126	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009ccb	    0x488b05000000	            mov rax, qword [0x04009cd2] 	      5129	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_76
0x4009cd2	          0x4889c7	                            mov rdi, rax	      5129	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_76
0x4009cd5	      0xe80587ffff	         call sym.add_redefine_syms_file	      5129	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_76
0x4009cda	      0xe9c0080000	                           jmp 0x400a59f	      5130	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009cdf	    0x488b05000000	            mov rax, qword [0x04009ce6] 	      5139	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_77
0x4009ce6	      0xbe3d000000	                           mov esi, 0x3d	      5139	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_77
0x4009ceb	          0x4889c7	                            mov rdi, rax	      5139	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_77
0x4009cee	      0xe800000000	                          call 0x4009cf3	      5139	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_77
0x4009cf3	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      5139	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_77
0x4009cfa	    0x4883bd08ffff	               cmp qword [rbp - 0xf8], 0	      5140	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_24
0x4009d02	            0x751c	                           jne 0x4009d20	      5140	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_24
0x4009d04	      0xbf00000000	                              mov edi, 0	      5141	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_79
0x4009d09	      0xe800000000	                          call 0x4009d0e	      5141	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_79
0x4009d0e	      0xbe00000000	                              mov esi, 0	      5141	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_79
0x4009d13	          0x4889c7	                            mov rdi, rax	      5141	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_79
0x4009d16	      0xb800000000	                              mov eax, 0	      5141	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_79
0x4009d1b	      0xe800000000	                          call 0x4009d20	      5141	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_79
0x4009d20	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5143	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009d27	    0x488b15000000	            mov rdx, qword [0x04009d2e] 	      5143	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009d2e	          0x4829d0	                            sub rax, rdx	      5143	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009d31	    0x898548feffff	            mov dword [rbp - 0x1b8], eax	      5143	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009d37	    0x8b8548feffff	            mov eax, dword [rbp - 0x1b8]	      5144	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_80
0x4009d3d	          0x83c001	                              add eax, 1	      5144	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_80
0x4009d40	            0x4898	                                    cdqe	      5144	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_80
0x4009d42	          0x4889c7	                            mov rdi, rax	      5144	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_80
0x4009d45	      0xe800000000	                          call 0x4009d4a	      5144	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_80
0x4009d4a	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      5144	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_80
0x4009d51	    0x8b8548feffff	            mov eax, dword [rbp - 0x1b8]	      5145	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_81
0x4009d57	          0x4863d0	                         movsxd rdx, eax	      5145	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_81
0x4009d5a	    0x488b0d000000	            mov rcx, qword [0x04009d61] 	      5145	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_81
0x4009d61	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5145	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_81
0x4009d68	          0x4889ce	                            mov rsi, rcx	      5145	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_81
0x4009d6b	          0x4889c7	                            mov rdi, rax	      5145	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_81
0x4009d6e	      0xe800000000	                          call 0x4009d73	      5145	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_81
0x4009d73	    0x8b8548feffff	            mov eax, dword [rbp - 0x1b8]	      5146	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009d79	          0x4863d0	                         movsxd rdx, eax	      5146	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009d7c	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5146	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009d83	          0x4801d0	                            add rax, rdx	      5146	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009d86	          0xc60000	                       mov byte [rax], 0	      5146	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009d89	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5148	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_82
0x4009d90	      0xba40000000	                           mov edx, 0x40	      5148	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_82
0x4009d95	      0xbe01000000	                              mov esi, 1	      5148	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_82
0x4009d9a	          0x4889c7	                            mov rdi, rax	      5148	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_82
0x4009d9d	      0xe8c76bffff	              call sym.find_section_list	      5148	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_82
0x4009da2	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      5148	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_82
0x4009da9	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5150	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_83
0x4009db0	        0x4883c001	                              add rax, 1	      5150	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_83
0x4009db4	          0x4889c7	                            mov rdi, rax	      5150	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_83
0x4009db7	      0xe84f65ffff	                    call sym.parse_flags	      5150	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_83
0x4009dbc	            0x89c2	                            mov edx, eax	      5150	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_83
0x4009dbe	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5150	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_83
0x4009dc5	          0x895028	             mov dword [rax + 0x28], edx	      5150	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_83
0x4009dc8	      0xe9d2070000	                           jmp 0x400a59f	      5152	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009dcd	    0x488b05000000	            mov rax, qword [0x04009dd4] 	      5162	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_84
0x4009dd4	      0xbe3d000000	                           mov esi, 0x3d	      5162	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_84
0x4009dd9	          0x4889c7	                            mov rdi, rax	      5162	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_84
0x4009ddc	      0xe800000000	                          call 0x4009de1	      5162	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_84
0x4009de1	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      5162	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_84
0x4009de8	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      5163	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_25
0x4009df0	            0x751c	                           jne 0x4009e0e	      5163	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_25
0x4009df2	      0xbf00000000	                              mov edi, 0	      5164	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_86
0x4009df7	      0xe800000000	                          call 0x4009dfc	      5164	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_86
0x4009dfc	      0xbe00000000	                              mov esi, 0	      5164	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_86
0x4009e01	          0x4889c7	                            mov rdi, rax	      5164	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_86
0x4009e04	      0xb800000000	                              mov eax, 0	      5164	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_86
0x4009e09	      0xe800000000	                          call 0x4009e0e	      5164	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_86
0x4009e0e	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      5166	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009e15	    0x488b15000000	            mov rdx, qword [0x04009e1c] 	      5166	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009e1c	          0x4829d0	                            sub rax, rdx	      5166	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009e1f	    0x898538feffff	            mov dword [rbp - 0x1c8], eax	      5166	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009e25	    0x83bd38feffff	              cmp dword [rbp - 0x1c8], 0	      5167	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_26
0x4009e2c	            0x751c	                           jne 0x4009e4a	      5167	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_26
0x4009e2e	      0xbf00000000	                              mov edi, 0	      5168	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_88
0x4009e33	      0xe800000000	                          call 0x4009e38	      5168	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_88
0x4009e38	      0xbe00000000	                              mov esi, 0	      5168	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_88
0x4009e3d	          0x4889c7	                            mov rdi, rax	      5168	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_88
0x4009e40	      0xb800000000	                              mov eax, 0	      5168	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_88
0x4009e45	      0xe800000000	                          call 0x4009e4a	      5168	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_88
0x4009e4a	    0x8b8538feffff	            mov eax, dword [rbp - 0x1c8]	      5170	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_89
0x4009e50	          0x83c001	                              add eax, 1	      5170	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_89
0x4009e53	            0x89c0	                            mov eax, eax	      5170	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_89
0x4009e55	          0x4889c7	                            mov rdi, rax	      5170	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_89
0x4009e58	      0xe800000000	                          call 0x4009e5d	      5170	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_89
0x4009e5d	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      5170	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_89
0x4009e64	    0x8b9538feffff	            mov edx, dword [rbp - 0x1c8]	      5171	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_90
0x4009e6a	    0x488b0d000000	            mov rcx, qword [0x04009e71] 	      5171	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_90
0x4009e71	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5171	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_90
0x4009e78	          0x4889ce	                            mov rsi, rcx	      5171	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_90
0x4009e7b	          0x4889c7	                            mov rdi, rax	      5171	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_90
0x4009e7e	      0xe800000000	                          call 0x4009e83	      5171	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_90
0x4009e83	    0x8b9538feffff	            mov edx, dword [rbp - 0x1c8]	      5172	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009e89	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5172	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009e90	          0x4801d0	                            add rax, rdx	      5172	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009e93	          0xc60000	                       mov byte [rax], 0	      5172	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009e96	    0x48838520ffff	               add qword [rbp - 0xe0], 1	      5174	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009e9e	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      5175	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_91
0x4009ea5	      0xbe2c000000	                           mov esi, 0x2c	      5175	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_91
0x4009eaa	          0x4889c7	                            mov rdi, rax	      5175	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_91
0x4009ead	      0xe800000000	                          call 0x4009eb2	      5175	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_91
0x4009eb2	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      5175	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_91
0x4009eb9	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	      5176	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_27
0x4009ec1	            0x7435	                            je 0x4009ef8	      5176	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_27
0x4009ec3	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5178	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_27	CALL_92
0x4009eca	        0x4883c001	                              add rax, 1	      5178	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_27	CALL_92
0x4009ece	          0x4889c7	                            mov rdi, rax	      5178	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_27	CALL_92
0x4009ed1	      0xe83564ffff	                    call sym.parse_flags	      5178	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_27	CALL_92
0x4009ed6	    0x898534feffff	            mov dword [rbp - 0x1cc], eax	      5178	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_27	CALL_92
0x4009edc	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      5179	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_27
0x4009ee3	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      5179	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_27
0x4009eea	          0x4829c2	                            sub rdx, rax	      5179	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_27
0x4009eed	          0x4889d0	                            mov rax, rdx	      5179	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_27
0x4009ef0	    0x898538feffff	            mov dword [rbp - 0x1c8], eax	      5179	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_27
0x4009ef6	            0xeb1f	                           jmp 0x4009f17	      5179	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_27
0x4009ef8	    0xc78534feffff	    mov dword [rbp - 0x1cc], 0xffffffff 	      5183	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_13
0x4009f02	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      5184	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_13	CALL_93
0x4009f09	          0x4889c7	                            mov rdi, rax	      5184	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_13	CALL_93
0x4009f0c	      0xe800000000	                          call 0x4009f11	      5184	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_13	CALL_93
0x4009f11	    0x898538feffff	            mov dword [rbp - 0x1c8], eax	      5184	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_13	CALL_93
0x4009f17	    0x83bd38feffff	              cmp dword [rbp - 0x1c8], 0	      5187	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_28
0x4009f1e	            0x751c	                           jne 0x4009f3c	      5187	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_28
0x4009f20	      0xbf00000000	                              mov edi, 0	      5188	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_95
0x4009f25	      0xe800000000	                          call 0x4009f2a	      5188	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_95
0x4009f2a	      0xbe00000000	                              mov esi, 0	      5188	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_95
0x4009f2f	          0x4889c7	                            mov rdi, rax	      5188	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_95
0x4009f32	      0xb800000000	                              mov eax, 0	      5188	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_95
0x4009f37	      0xe800000000	                          call 0x4009f3c	      5188	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_95
0x4009f3c	    0x8b8538feffff	            mov eax, dword [rbp - 0x1c8]	      5190	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_96
0x4009f42	          0x83c001	                              add eax, 1	      5190	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_96
0x4009f45	            0x89c0	                            mov eax, eax	      5190	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_96
0x4009f47	          0x4889c7	                            mov rdi, rax	      5190	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_96
0x4009f4a	      0xe800000000	                          call 0x4009f4f	      5190	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_96
0x4009f4f	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      5190	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_96
0x4009f56	    0x8b9538feffff	            mov edx, dword [rbp - 0x1c8]	      5191	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_97
0x4009f5c	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	      5191	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_97
0x4009f63	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5191	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_97
0x4009f6a	          0x4889ce	                            mov rsi, rcx	      5191	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_97
0x4009f6d	          0x4889c7	                            mov rdi, rax	      5191	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_97
0x4009f70	      0xe800000000	                          call 0x4009f75	      5191	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_97
0x4009f75	    0x8b9538feffff	            mov edx, dword [rbp - 0x1c8]	      5192	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009f7b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5192	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009f82	          0x4801d0	                            add rax, rdx	      5192	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009f85	          0xc60000	                       mov byte [rax], 0	      5192	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009f88	    0x8b9534feffff	            mov edx, dword [rbp - 0x1cc]	      5194	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_98
0x4009f8e	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	      5194	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_98
0x4009f95	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5194	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_98
0x4009f9c	          0x4889ce	                            mov rsi, rcx	      5194	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_98
0x4009f9f	          0x4889c7	                            mov rdi, rax	      5194	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_98
0x4009fa2	      0xe8f5ccffff	             call sym.add_section_rename	      5194	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_98
0x4009fa7	      0xe9f3050000	                           jmp 0x400a59f	      5196	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009fac	    0x488b05000000	            mov rax, qword [0x04009fb3] 	      5199	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_99
0x4009fb3	      0xbe00000000	                              mov esi, 0	      5199	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_99
0x4009fb8	          0x4889c7	                            mov rdi, rax	      5199	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_99
0x4009fbb	      0xe800000000	                          call 0x4009fc0	      5199	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_99
0x4009fc0	    0x488905000000	            mov qword [0x04009fc7], rax 	      5199	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_99
0x4009fc7	    0xc70500000000	               mov dword [0x04009fd1], 1	      5200	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009fd1	      0xe9c9050000	                           jmp 0x400a59f	      5201	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009fd6	    0x488b05000000	            mov rax, qword [0x04009fdd] 	      5204	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_100
0x4009fdd	      0xbe00000000	                              mov esi, 0	      5204	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_100
0x4009fe2	          0x4889c7	                            mov rdi, rax	      5204	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_100
0x4009fe5	      0xe800000000	                          call 0x4009fea	      5204	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_100
0x4009fea	    0x890500000000	            mov dword [0x04009ff0], eax 	      5204	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_100
0x4009ff0	      0xe9aa050000	                           jmp 0x400a59f	      5205	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009ff5	    0xc70500000000	               mov dword [0x04009fff], 1	      5208	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x4009fff	      0xe99b050000	                           jmp 0x400a59f	      5209	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a004	    0x488b15000000	            mov rdx, qword [0x0400a00b] 	      5212	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_101
0x400a00b	    0x488b05000000	            mov rax, qword [0x0400a012] 	      5212	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_101
0x400a012	          0x4889d6	                            mov rsi, rdx	      5212	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_101
0x400a015	          0x4889c7	                            mov rdi, rax	      5212	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_101
0x400a018	      0xe8986dffff	           call sym.add_specific_symbols	      5212	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_101
0x400a01d	      0xe97d050000	                           jmp 0x400a59f	      5213	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a022	    0x488b15000000	            mov rdx, qword [0x0400a029] 	      5216	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_102
0x400a029	    0x488b05000000	            mov rax, qword [0x0400a030] 	      5216	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_102
0x400a030	          0x4889d6	                            mov rsi, rdx	      5216	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_102
0x400a033	          0x4889c7	                            mov rdi, rax	      5216	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_102
0x400a036	      0xe87a6dffff	           call sym.add_specific_symbols	      5216	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_102
0x400a03b	      0xe95f050000	                           jmp 0x400a59f	      5217	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a040	    0x488b15000000	            mov rdx, qword [0x0400a047] 	      5220	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_103
0x400a047	    0x488b05000000	            mov rax, qword [0x0400a04e] 	      5220	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_103
0x400a04e	          0x4889d6	                            mov rsi, rdx	      5220	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_103
0x400a051	          0x4889c7	                            mov rdi, rax	      5220	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_103
0x400a054	      0xe85c6dffff	           call sym.add_specific_symbols	      5220	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_103
0x400a059	      0xe941050000	                           jmp 0x400a59f	      5221	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a05e	    0xc70500000000	               mov dword [0x0400a068], 1	      5224	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a068	      0xe932050000	                           jmp 0x400a59f	      5225	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a06d	    0x488b15000000	            mov rdx, qword [0x0400a074] 	      5228	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_104
0x400a074	    0x488b05000000	            mov rax, qword [0x0400a07b] 	      5228	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_104
0x400a07b	          0x4889d6	                            mov rsi, rdx	      5228	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_104
0x400a07e	          0x4889c7	                            mov rdi, rax	      5228	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_104
0x400a081	      0xe82f6dffff	           call sym.add_specific_symbols	      5228	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_104
0x400a086	      0xe914050000	                           jmp 0x400a59f	      5229	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a08b	    0x488b05000000	            mov rax, qword [0x0400a092] 	      5232	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_29	CALL_105
0x400a092	          0x4889c6	                            mov rsi, rax	      5232	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_29	CALL_105
0x400a095	      0xbf00000000	                              mov edi, 0	      5232	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_29	CALL_105
0x400a09a	      0xe800000000	                          call 0x400a09f	      5232	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_29	CALL_105
0x400a09f	            0x85c0	                           test eax, eax	      5232	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_29	CALL_105
0x400a0a1	            0x750f	                           jne 0x400a0b2	      5232	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_29	CALL_105
0x400a0a3	    0xc70500000000	               mov dword [0x0400a0ad], 1	      5233	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_29
0x400a0ad	      0xe9ed040000	                           jmp 0x400a59f	      5233	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_29
0x400a0b2	    0x488b05000000	            mov rax, qword [0x0400a0b9] 	      5234	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_14	IF_30	CALL_106
0x400a0b9	          0x4889c6	                            mov rsi, rax	      5234	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_14	IF_30	CALL_106
0x400a0bc	      0xbf00000000	                              mov edi, 0	      5234	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_14	IF_30	CALL_106
0x400a0c1	      0xe800000000	                          call 0x400a0c6	      5234	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_14	IF_30	CALL_106
0x400a0c6	            0x85c0	                           test eax, eax	      5234	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_14	IF_30	CALL_106
0x400a0c8	            0x750f	                           jne 0x400a0d9	      5234	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_14	IF_30	CALL_106
0x400a0ca	    0xc70500000000	               mov dword [0x0400a0d4], 0	      5235	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_14	IF_30
0x400a0d4	      0xe9c6040000	                           jmp 0x400a59f	      5235	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_14	IF_30
0x400a0d9	    0x488b05000000	            mov rax, qword [0x0400a0e0] 	      5236	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_15	IF_31	CALL_107
0x400a0e0	          0x4889c6	                            mov rsi, rax	      5236	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_15	IF_31	CALL_107
0x400a0e3	      0xbf00000000	                              mov edi, 0	      5236	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_15	IF_31	CALL_107
0x400a0e8	      0xe800000000	                          call 0x400a0ed	      5236	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_15	IF_31	CALL_107
0x400a0ed	            0x85c0	                           test eax, eax	      5236	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_15	IF_31	CALL_107
0x400a0ef	            0x750f	                           jne 0x400a100	      5236	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_15	IF_31	CALL_107
0x400a0f1	    0xc70500000000	               mov dword [0x0400a0fb], 2	      5237	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_15	IF_31
0x400a0fb	      0xe99f040000	                           jmp 0x400a59f	      5237	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_15	IF_31
0x400a100	    0x488b1d000000	            mov rbx, qword [0x0400a107] 	      5239	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_109
0x400a107	      0xbf00000000	                              mov edi, 0	      5239	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_109
0x400a10c	      0xe800000000	                          call 0x400a111	      5239	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_109
0x400a111	          0x4889de	                            mov rsi, rbx	      5239	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_109
0x400a114	          0x4889c7	                            mov rdi, rax	      5239	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_109
0x400a117	      0xb800000000	                              mov eax, 0	      5239	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_109
0x400a11c	      0xe800000000	                          call 0x400a121	      5239	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_109
0x400a121	    0x488b15000000	            mov rdx, qword [0x0400a128] 	      5243	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_110
0x400a128	    0x488b05000000	            mov rax, qword [0x0400a12f] 	      5243	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_110
0x400a12f	          0x4889d6	                            mov rsi, rdx	      5243	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_110
0x400a132	          0x4889c7	                            mov rdi, rax	      5243	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_110
0x400a135	      0xe87b6cffff	           call sym.add_specific_symbols	      5243	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_110
0x400a13a	      0xe960040000	                           jmp 0x400a59f	      5244	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a13f	    0x488b15000000	            mov rdx, qword [0x0400a146] 	      5247	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_111
0x400a146	    0x488b05000000	            mov rax, qword [0x0400a14d] 	      5247	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_111
0x400a14d	          0x4889d6	                            mov rsi, rdx	      5247	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_111
0x400a150	          0x4889c7	                            mov rdi, rax	      5247	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_111
0x400a153	      0xe85d6cffff	           call sym.add_specific_symbols	      5247	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_111
0x400a158	      0xe942040000	                           jmp 0x400a59f	      5248	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a15d	    0x488b15000000	            mov rdx, qword [0x0400a164] 	      5251	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_112
0x400a164	    0x488b05000000	            mov rax, qword [0x0400a16b] 	      5251	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_112
0x400a16b	          0x4889d6	                            mov rsi, rdx	      5251	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_112
0x400a16e	          0x4889c7	                            mov rdi, rax	      5251	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_112
0x400a171	      0xe83f6cffff	           call sym.add_specific_symbols	      5251	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_112
0x400a176	      0xe924040000	                           jmp 0x400a59f	      5252	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a17b	    0x488b05000000	            mov rax, qword [0x0400a182] 	      5255	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_113
0x400a182	      0xba00000000	                              mov edx, 0	      5255	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_113
0x400a187	      0xbe00000000	                              mov esi, 0	      5255	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_113
0x400a18c	          0x4889c7	                            mov rdi, rax	      5255	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_113
0x400a18f	      0xe800000000	                          call 0x400a194	      5255	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_113
0x400a194	    0x488905000000	            mov qword [0x0400a19b], rax 	      5255	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_113
0x400a19b	    0x488b05000000	            mov rax, qword [0x0400a1a2] 	      5256	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_32
0x400a1a2	          0x4885c0	                           test rax, rax	      5256	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_32
0x400a1a5	     0xf85f4030000	                           jne 0x400a59f	      5256	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_32
0x400a1ab	      0xbf00000000	                              mov edi, 0	      5257	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_115
0x400a1b0	      0xe800000000	                          call 0x400a1b5	      5257	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_115
0x400a1b5	          0x4889c7	                            mov rdi, rax	      5257	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_115
0x400a1b8	      0xb800000000	                              mov eax, 0	      5257	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_115
0x400a1bd	      0xe800000000	                          call 0x400a1c2	      5257	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_115
0x400a1c2	    0x488b05000000	            mov rax, qword [0x0400a1c9] 	      5261	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a1c9	    0x488905000000	            mov qword [0x0400a1d0], rax 	      5261	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a1d0	      0xe9ca030000	                           jmp 0x400a59f	      5262	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a1d5	    0x488b05000000	            mov rax, qword [0x0400a1dc] 	      5265	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a1dc	    0x488905000000	            mov qword [0x0400a1e3], rax 	      5265	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a1e3	      0xe9b7030000	                           jmp 0x400a59f	      5266	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a1e8	    0x488b05000000	            mov rax, qword [0x0400a1ef] 	      5269	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a1ef	    0x488905000000	            mov qword [0x0400a1f6], rax 	      5269	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a1f6	      0xe9a4030000	                           jmp 0x400a59f	      5270	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a1fb	    0x8b0500000000	            mov eax, dword [0x0400a201] 	      5273	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a201	             0xc80	                             or al, 0x80	      5273	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a203	    0x890500000000	            mov dword [0x0400a209], eax 	      5273	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a209	    0x8b0500000000	            mov eax, dword [0x0400a20f] 	      5274	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a20f	            0x247f	                            and al, 0x7f	      5274	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a211	    0x890500000000	            mov dword [0x0400a217], eax 	      5274	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a217	      0xe983030000	                           jmp 0x400a59f	      5275	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a21c	    0x8b0500000000	            mov eax, dword [0x0400a222] 	      5278	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a222	             0xc80	                             or al, 0x80	      5278	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a224	    0x890500000000	            mov dword [0x0400a22a], eax 	      5278	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a22a	    0x8b0500000000	            mov eax, dword [0x0400a230] 	      5279	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a230	            0x247f	                            and al, 0x7f	      5279	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a232	    0x890500000000	            mov dword [0x0400a238], eax 	      5279	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a238	      0xe962030000	                           jmp 0x400a59f	      5280	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a23d	    0x8b0500000000	            mov eax, dword [0x0400a243] 	      5283	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a243	          0x80cc01	                                or ah, 1	      5283	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a246	    0x890500000000	            mov dword [0x0400a24c], eax 	      5283	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a24c	    0x8b0500000000	            mov eax, dword [0x0400a252] 	      5284	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a252	          0x80e4fe	                            and ah, 0xfe	      5284	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a255	    0x890500000000	            mov dword [0x0400a25b], eax 	      5284	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a25b	      0xe93f030000	                           jmp 0x400a59f	      5285	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a260	    0x8b0500000000	            mov eax, dword [0x0400a266] 	      5288	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a266	          0x80cc01	                                or ah, 1	      5288	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a269	    0x890500000000	            mov dword [0x0400a26f], eax 	      5288	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a26f	    0x8b0500000000	            mov eax, dword [0x0400a275] 	      5289	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a275	          0x80e4fe	                            and ah, 0xfe	      5289	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a278	    0x890500000000	            mov dword [0x0400a27e], eax 	      5289	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a27e	      0xe91c030000	                           jmp 0x400a59f	      5290	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a283	    0xc70500000000	               mov dword [0x0400a28d], 6	      5293	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a28d	      0xe90d030000	                           jmp 0x400a59f	      5294	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a292	    0xc70500000000	               mov dword [0x0400a29c], 1	      5297	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a29c	      0xe9fe020000	                           jmp 0x400a59f	      5298	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a2a1	    0x8b0500000000	            mov eax, dword [0x0400a2a7] 	      5302	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a2a7	    0x89854cfeffff	            mov dword [rbp - 0x1b4], eax	      5302	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a2ad	    0x488b05000000	            mov rax, qword [0x0400a2b4] 	      5304	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_116
0x400a2b4	          0x4889c7	                            mov rdi, rax	      5304	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_116
0x400a2b7	      0xe800000000	                          call 0x400a2bc	      5304	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_116
0x400a2bc	    0x890500000000	            mov dword [0x0400a2c2], eax 	      5304	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_116
0x400a2c2	    0x8b0500000000	            mov eax, dword [0x0400a2c8] 	      5305	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_33
0x400a2c8	            0x85c0	                           test eax, eax	      5305	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_33
0x400a2ca	            0x7e0d	                           jle 0x400a2d9	      5305	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_33
0x400a2cc	    0x8b0500000000	            mov eax, dword [0x0400a2d2] 	      5305	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_33
0x400a2d2	          0x83e001	                              and eax, 1	      5305	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_33
0x400a2d5	            0x85c0	                           test eax, eax	      5305	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_33
0x400a2d7	            0x7417	                            je 0x400a2f0	      5305	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_33
0x400a2d9	      0xbf00000000	                              mov edi, 0	      5306	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_118
0x400a2de	      0xe800000000	                          call 0x400a2e3	      5306	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_118
0x400a2e3	          0x4889c7	                            mov rdi, rax	      5306	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_118
0x400a2e6	      0xb800000000	                              mov eax, 0	      5306	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_118
0x400a2eb	      0xe800000000	                          call 0x400a2f0	      5306	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_118
0x400a2f0	    0x83bd4cfeffff	              cmp dword [rbp - 0x1b4], 0	      5308	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_34
0x400a2f7	     0xf84a2020000	                            je 0x400a59f	      5308	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_34
0x400a2fd	    0x8b0500000000	            mov eax, dword [0x0400a303] 	      5308	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_34
0x400a303	    0x39854cfeffff	           cmp dword [rbp - 0x1b4], eax 	      5308	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_34
0x400a309	     0xf8490020000	                            je 0x400a59f	      5308	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_34
0x400a30f	      0xbf00000000	                              mov edi, 0	      5309	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_34	CALL_120
0x400a314	      0xe800000000	                          call 0x400a319	      5309	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_34	CALL_120
0x400a319	          0x4889c2	                            mov rdx, rax	      5309	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_34	CALL_120
0x400a31c	    0x8b854cfeffff	            mov eax, dword [rbp - 0x1b4]	      5309	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_34	CALL_120
0x400a322	            0x89c6	                            mov esi, eax	      5309	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_34	CALL_120
0x400a324	          0x4889d7	                            mov rdi, rdx	      5309	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_34	CALL_120
0x400a327	      0xb800000000	                              mov eax, 0	      5309	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_34	CALL_120
0x400a32c	      0xe800000000	                          call 0x400a331	      5309	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_34	CALL_120
0x400a331	      0xe969020000	                           jmp 0x400a59f	      5311	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a336	    0x488b05000000	            mov rax, qword [0x0400a33d] 	      5315	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_121
0x400a33d	      0xbe00000000	                              mov esi, 0	      5315	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_121
0x400a342	          0x4889c7	                            mov rdi, rax	      5315	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_121
0x400a345	      0xe800000000	                          call 0x400a34a	      5315	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_121
0x400a34a	    0x488905000000	            mov qword [0x0400a351], rax 	      5315	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_121
0x400a351	      0xe949020000	                           jmp 0x400a59f	      5316	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a356	    0x488b05000000	            mov rax, qword [0x0400a35d] 	      5321	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_122
0x400a35d	    0x488d8d50feff	                  lea rcx, [rbp - 0x1b0]	      5321	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_122
0x400a364	      0xba00000000	                              mov edx, 0	      5321	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_122
0x400a369	          0x4889ce	                            mov rsi, rcx	      5321	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_122
0x400a36c	          0x4889c7	                            mov rdi, rax	      5321	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_122
0x400a36f	      0xe800000000	                          call 0x400a374	      5321	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_122
0x400a374	    0x488905000000	            mov qword [0x0400a37b], rax 	      5321	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_122
0x400a37b	    0x488b9550feff	            mov rdx, qword [rbp - 0x1b0]	      5322	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35
0x400a382	    0x488b05000000	            mov rax, qword [0x0400a389] 	      5322	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35
0x400a389	          0x4839c2	                            cmp rdx, rax	      5322	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35
0x400a38c	            0x741c	                            je 0x400a3aa	      5322	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35
0x400a38e	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5323	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35
0x400a395	           0xfb600	                   movzx eax, byte [rax]	      5323	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35
0x400a398	            0x3c2e	                            cmp al, 0x2e	      5323	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35
0x400a39a	            0x7431	                            je 0x400a3cd	      5323	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35
0x400a39c	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5323	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35
0x400a3a3	           0xfb600	                   movzx eax, byte [rax]	      5323	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35
0x400a3a6	            0x84c0	                             test al, al	      5323	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35
0x400a3a8	            0x7423	                            je 0x400a3cd	      5323	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35
0x400a3aa	    0x488b1d000000	            mov rbx, qword [0x0400a3b1] 	      5324	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35	CALL_124
0x400a3b1	      0xbf00000000	                              mov edi, 0	      5324	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35	CALL_124
0x400a3b6	      0xe800000000	                          call 0x400a3bb	      5324	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35	CALL_124
0x400a3bb	          0x4889de	                            mov rsi, rbx	      5324	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35	CALL_124
0x400a3be	          0x4889c7	                            mov rdi, rax	      5324	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35	CALL_124
0x400a3c1	      0xb800000000	                              mov eax, 0	      5324	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35	CALL_124
0x400a3c6	      0xe800000000	                          call 0x400a3cb	      5324	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35	CALL_124
0x400a3cb	            0xeb6e	                           jmp 0x400a43b	      5324	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_35	CALL_124
0x400a3cd	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5326	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36
0x400a3d4	           0xfb600	                   movzx eax, byte [rax]	      5326	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36
0x400a3d7	            0x84c0	                             test al, al	      5326	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36
0x400a3d9	     0xf84c0010000	                            je 0x400a59f	      5326	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36
0x400a3df	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5328	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	CALL_125
0x400a3e6	        0x488d4801	                      lea rcx, [rax + 1]	      5328	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	CALL_125
0x400a3ea	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      5328	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	CALL_125
0x400a3f1	      0xba00000000	                              mov edx, 0	      5328	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	CALL_125
0x400a3f6	          0x4889c6	                            mov rsi, rax	      5328	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	CALL_125
0x400a3f9	          0x4889cf	                            mov rdi, rcx	      5328	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	CALL_125
0x400a3fc	      0xe800000000	                          call 0x400a401	      5328	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	CALL_125
0x400a401	    0x488905000000	            mov qword [0x0400a408], rax 	      5328	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	CALL_125
0x400a408	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5329	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	IF_37
0x400a40f	           0xfb600	                   movzx eax, byte [rax]	      5329	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	IF_37
0x400a412	            0x84c0	                             test al, al	      5329	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	IF_37
0x400a414	     0xf8485010000	                            je 0x400a59f	      5329	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	IF_37
0x400a41a	    0x488b1d000000	            mov rbx, qword [0x0400a421] 	      5330	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	IF_37	CALL_127
0x400a421	      0xbf00000000	                              mov edi, 0	      5330	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	IF_37	CALL_127
0x400a426	      0xe800000000	                          call 0x400a42b	      5330	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	IF_37	CALL_127
0x400a42b	          0x4889de	                            mov rsi, rbx	      5330	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	IF_37	CALL_127
0x400a42e	          0x4889c7	                            mov rdi, rax	      5330	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	IF_37	CALL_127
0x400a431	      0xb800000000	                              mov eax, 0	      5330	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	IF_37	CALL_127
0x400a436	      0xe800000000	                          call 0x400a43b	      5330	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_17	IF_36	IF_37	CALL_127
0x400a43b	      0xe95f010000	                           jmp 0x400a59f	      5334	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a440	    0x488b05000000	            mov rax, qword [0x0400a447] 	      5337	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_128
0x400a447	      0xbe00000000	                              mov esi, 0	      5337	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_128
0x400a44c	          0x4889c7	                            mov rdi, rax	      5337	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_128
0x400a44f	      0xe800000000	                          call 0x400a454	      5337	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_128
0x400a454	    0x488905000000	            mov qword [0x0400a45b], rax 	      5337	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_128
0x400a45b	      0xe93f010000	                           jmp 0x400a59f	      5338	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a460	    0x488b05000000	            mov rax, qword [0x0400a467] 	      5341	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_129
0x400a467	      0xbe00000000	                              mov esi, 0	      5341	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_129
0x400a46c	          0x4889c7	                            mov rdi, rax	      5341	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_129
0x400a46f	      0xe800000000	                          call 0x400a474	      5341	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_129
0x400a474	    0x488905000000	            mov qword [0x0400a47b], rax 	      5341	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_129
0x400a47b	      0xe91f010000	                           jmp 0x400a59f	      5343	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a480	    0x488b05000000	            mov rax, qword [0x0400a487] 	      5346	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_130
0x400a487	          0x4889c7	                            mov rdi, rax	      5346	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_130
0x400a48a	      0xe869e5ffff	               call sym.set_pe_subsystem	      5346	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_130
0x400a48f	      0xe90b010000	                           jmp 0x400a59f	      5347	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a494	    0x488b05000000	            mov rax, qword [0x0400a49b] 	      5352	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_131
0x400a49b	    0x488d8d50feff	                  lea rcx, [rbp - 0x1b0]	      5352	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_131
0x400a4a2	      0xba00000000	                              mov edx, 0	      5352	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_131
0x400a4a7	          0x4889ce	                            mov rsi, rcx	      5352	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_131
0x400a4aa	          0x4889c7	                            mov rdi, rax	      5352	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_131
0x400a4ad	      0xe800000000	                          call 0x400a4b2	      5352	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_131
0x400a4b2	    0x488905000000	            mov qword [0x0400a4b9], rax 	      5352	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_131
0x400a4b9	    0x488b9550feff	            mov rdx, qword [rbp - 0x1b0]	      5353	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38
0x400a4c0	    0x488b05000000	            mov rax, qword [0x0400a4c7] 	      5353	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38
0x400a4c7	          0x4839c2	                            cmp rdx, rax	      5353	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38
0x400a4ca	            0x741c	                            je 0x400a4e8	      5353	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38
0x400a4cc	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5354	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38
0x400a4d3	           0xfb600	                   movzx eax, byte [rax]	      5354	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38
0x400a4d6	            0x3c2e	                            cmp al, 0x2e	      5354	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38
0x400a4d8	            0x7431	                            je 0x400a50b	      5354	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38
0x400a4da	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5354	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38
0x400a4e1	           0xfb600	                   movzx eax, byte [rax]	      5354	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38
0x400a4e4	            0x84c0	                             test al, al	      5354	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38
0x400a4e6	            0x7423	                            je 0x400a50b	      5354	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38
0x400a4e8	    0x488b1d000000	            mov rbx, qword [0x0400a4ef] 	      5355	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38	CALL_133
0x400a4ef	      0xbf00000000	                              mov edi, 0	      5355	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38	CALL_133
0x400a4f4	      0xe800000000	                          call 0x400a4f9	      5355	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38	CALL_133
0x400a4f9	          0x4889de	                            mov rsi, rbx	      5355	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38	CALL_133
0x400a4fc	          0x4889c7	                            mov rdi, rax	      5355	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38	CALL_133
0x400a4ff	      0xb800000000	                              mov eax, 0	      5355	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38	CALL_133
0x400a504	      0xe800000000	                          call 0x400a509	      5355	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38	CALL_133
0x400a509	            0xeb6a	                           jmp 0x400a575	      5355	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	IF_38	CALL_133
0x400a50b	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5357	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39
0x400a512	           0xfb600	                   movzx eax, byte [rax]	      5357	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39
0x400a515	            0x84c0	                             test al, al	      5357	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39
0x400a517	     0xf8482000000	                            je 0x400a59f	      5357	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39
0x400a51d	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5359	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	CALL_134
0x400a524	        0x488d4801	                      lea rcx, [rax + 1]	      5359	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	CALL_134
0x400a528	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      5359	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	CALL_134
0x400a52f	      0xba00000000	                              mov edx, 0	      5359	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	CALL_134
0x400a534	          0x4889c6	                            mov rsi, rax	      5359	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	CALL_134
0x400a537	          0x4889cf	                            mov rdi, rcx	      5359	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	CALL_134
0x400a53a	      0xe800000000	                          call 0x400a53f	      5359	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	CALL_134
0x400a53f	    0x488905000000	            mov qword [0x0400a546], rax 	      5359	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	CALL_134
0x400a546	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      5360	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	IF_40
0x400a54d	           0xfb600	                   movzx eax, byte [rax]	      5360	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	IF_40
0x400a550	            0x84c0	                             test al, al	      5360	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	IF_40
0x400a552	            0x744b	                            je 0x400a59f	      5360	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	IF_40
0x400a554	    0x488b1d000000	            mov rbx, qword [0x0400a55b] 	      5361	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	IF_40	CALL_136
0x400a55b	      0xbf00000000	                              mov edi, 0	      5361	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	IF_40	CALL_136
0x400a560	      0xe800000000	                          call 0x400a565	      5361	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	IF_40	CALL_136
0x400a565	          0x4889de	                            mov rsi, rbx	      5361	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	IF_40	CALL_136
0x400a568	          0x4889c7	                            mov rdi, rax	      5361	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	IF_40	CALL_136
0x400a56b	      0xb800000000	                              mov eax, 0	      5361	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	IF_40	CALL_136
0x400a570	      0xe800000000	                          call 0x400a575	      5361	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	ELSE_18	IF_39	IF_40	CALL_136
0x400a575	            0xeb28	                           jmp 0x400a59f	      5365	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1
0x400a577	    0x488b05000000	            mov rax, qword [0x0400a57e] 	      5373	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_137
0x400a57e	      0xbe00000000	                              mov esi, 0	      5373	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_137
0x400a583	          0x4889c7	                            mov rdi, rax	      5373	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_137
0x400a586	      0xe8165bffff	                     call sym.copy_usage	      5373	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_137
0x400a58b	    0x488b05000000	            mov rax, qword [0x0400a592] 	      5376	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_138
0x400a592	      0xbe01000000	                              mov esi, 1	      5376	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_138
0x400a597	          0x4889c7	                            mov rdi, rax	      5376	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_138
0x400a59a	      0xe8025bffff	                     call sym.copy_usage	      5376	objcopy.c	FUNCTION_62	WHILE_1	SWITCH_1	CALL_138
0x400a59f	    0x488bb510feff	            mov rsi, qword [rbp - 0x1f0]	      4698	objcopy.c	FUNCTION_62	WHILE_1	CALL_1
0x400a5a6	    0x8b851cfeffff	            mov eax, dword [rbp - 0x1e4]	      4698	objcopy.c	FUNCTION_62	WHILE_1	CALL_1
0x400a5ac	    0x41b800000000	                              mov r8d, 0	      4698	objcopy.c	FUNCTION_62	WHILE_1	CALL_1
0x400a5b2	      0xb900000000	                              mov ecx, 0	      4698	objcopy.c	FUNCTION_62	WHILE_1	CALL_1
0x400a5b7	      0xba00000000	                              mov edx, 0	      4698	objcopy.c	FUNCTION_62	WHILE_1	CALL_1
0x400a5bc	            0x89c7	                            mov edi, eax	      4698	objcopy.c	FUNCTION_62	WHILE_1	CALL_1
0x400a5be	      0xe800000000	                          call 0x400a5c3	      4698	objcopy.c	FUNCTION_62	WHILE_1	CALL_1
0x400a5c3	    0x89853cfeffff	            mov dword [rbp - 0x1c4], eax	      4698	objcopy.c	FUNCTION_62	WHILE_1	CALL_1
0x400a5c9	    0x83bd3cfeffff	cmp dword [rbp - 0x1c4], 0xffffffffffffffff	      4698	objcopy.c	FUNCTION_62	WHILE_1	CALL_1
0x400a5d0	     0xf85dee9ffff	                           jne 0x4008fb4	      4698	objcopy.c	FUNCTION_62	WHILE_1	CALL_1
0x400a5d6	    0x83bd2cfeffff	              cmp dword [rbp - 0x1d4], 0	      5380	objcopy.c	FUNCTION_62	IF_41
0x400a5dd	            0x740f	                            je 0x400a5ee	      5380	objcopy.c	FUNCTION_62	IF_41
0x400a5df	      0xe800000000	                          call 0x400a5e4	      5382	objcopy.c	FUNCTION_62	IF_41	CALL_139
0x400a5e4	      0xb800000000	                              mov eax, 0	      5383	objcopy.c	FUNCTION_62	IF_41
0x400a5e9	      0xe9d1060000	                           jmp 0x400acbf	      5383	objcopy.c	FUNCTION_62	IF_41
0x400a5ee	    0x83bd24feffff	              cmp dword [rbp - 0x1dc], 0	      5386	objcopy.c	FUNCTION_62	IF_42
0x400a5f5	            0x740a	                            je 0x400a601	      5386	objcopy.c	FUNCTION_62	IF_42
0x400a5f7	      0xbf00000000	                              mov edi, 0	      5387	objcopy.c	FUNCTION_62	CALL_140
0x400a5fc	      0xe800000000	                          call 0x400a601	      5387	objcopy.c	FUNCTION_62	CALL_140
0x400a601	    0x8b0500000000	            mov eax, dword [0x0400a607] 	      5389	objcopy.c	FUNCTION_62	IF_43
0x400a607	            0x85c0	                           test eax, eax	      5389	objcopy.c	FUNCTION_62	IF_43
0x400a609	            0x7422	                            je 0x400a62d	      5389	objcopy.c	FUNCTION_62	IF_43
0x400a60b	    0x8b0500000000	            mov eax, dword [0x0400a611] 	      5389	objcopy.c	FUNCTION_62	IF_43
0x400a611	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      5389	objcopy.c	FUNCTION_62	IF_43
0x400a614	            0x7517	                           jne 0x400a62d	      5389	objcopy.c	FUNCTION_62	IF_43
0x400a616	      0xbf00000000	                              mov edi, 0	      5390	objcopy.c	FUNCTION_62	CALL_142
0x400a61b	      0xe800000000	                          call 0x400a620	      5390	objcopy.c	FUNCTION_62	CALL_142
0x400a620	          0x4889c7	                            mov rdi, rax	      5390	objcopy.c	FUNCTION_62	CALL_142
0x400a623	      0xb800000000	                              mov eax, 0	      5390	objcopy.c	FUNCTION_62	CALL_142
0x400a628	      0xe800000000	                          call 0x400a62d	      5390	objcopy.c	FUNCTION_62	CALL_142
0x400a62d	    0x8b1500000000	            mov edx, dword [0x0400a633] 	      5392	objcopy.c	FUNCTION_62	IF_44
0x400a633	    0x8b0500000000	            mov eax, dword [0x0400a639] 	      5392	objcopy.c	FUNCTION_62	IF_44
0x400a639	            0x39c2	                            cmp edx, eax	      5392	objcopy.c	FUNCTION_62	IF_44
0x400a63b	            0x7c17	                            jl 0x400a654	      5392	objcopy.c	FUNCTION_62	IF_44
0x400a63d	      0xbf00000000	                              mov edi, 0	      5393	objcopy.c	FUNCTION_62	CALL_144
0x400a642	      0xe800000000	                          call 0x400a647	      5393	objcopy.c	FUNCTION_62	CALL_144
0x400a647	          0x4889c7	                            mov rdi, rax	      5393	objcopy.c	FUNCTION_62	CALL_144
0x400a64a	      0xb800000000	                              mov eax, 0	      5393	objcopy.c	FUNCTION_62	CALL_144
0x400a64f	      0xe800000000	                          call 0x400a654	      5393	objcopy.c	FUNCTION_62	CALL_144
0x400a654	    0x8b1500000000	            mov edx, dword [0x0400a65a] 	      5395	objcopy.c	FUNCTION_62	IF_45
0x400a65a	    0x8b0500000000	            mov eax, dword [0x0400a660] 	      5395	objcopy.c	FUNCTION_62	IF_45
0x400a660	            0x29c2	                            sub edx, eax	      5395	objcopy.c	FUNCTION_62	IF_45
0x400a662	    0x8b0500000000	            mov eax, dword [0x0400a668] 	      5395	objcopy.c	FUNCTION_62	IF_45
0x400a668	            0x39c2	                            cmp edx, eax	      5395	objcopy.c	FUNCTION_62	IF_45
0x400a66a	            0x7d17	                           jge 0x400a683	      5395	objcopy.c	FUNCTION_62	IF_45
0x400a66c	      0xbf00000000	                              mov edi, 0	      5396	objcopy.c	FUNCTION_62	CALL_146
0x400a671	      0xe800000000	                          call 0x400a676	      5396	objcopy.c	FUNCTION_62	CALL_146
0x400a676	          0x4889c7	                            mov rdi, rax	      5396	objcopy.c	FUNCTION_62	CALL_146
0x400a679	      0xb800000000	                              mov eax, 0	      5396	objcopy.c	FUNCTION_62	CALL_146
0x400a67e	      0xe800000000	                          call 0x400a683	      5396	objcopy.c	FUNCTION_62	CALL_146
0x400a683	    0x8b0500000000	            mov eax, dword [0x0400a689] 	      5398	objcopy.c	FUNCTION_62	IF_46
0x400a689	    0x3b851cfeffff	            cmp eax, dword [rbp - 0x1e4]	      5398	objcopy.c	FUNCTION_62	IF_46
0x400a68f	            0x7411	                            je 0x400a6a2	      5398	objcopy.c	FUNCTION_62	IF_46
0x400a691	    0x8b0500000000	            mov eax, dword [0x0400a697] 	      5398	objcopy.c	FUNCTION_62	IF_46
0x400a697	          0x83c002	                              add eax, 2	      5398	objcopy.c	FUNCTION_62	IF_46
0x400a69a	    0x3b851cfeffff	            cmp eax, dword [rbp - 0x1e4]	      5398	objcopy.c	FUNCTION_62	IF_46
0x400a6a0	            0x7d14	                           jge 0x400a6b6	      5398	objcopy.c	FUNCTION_62	IF_46
0x400a6a2	    0x488b05000000	            mov rax, qword [0x0400a6a9] 	      5399	objcopy.c	FUNCTION_62	CALL_147
0x400a6a9	      0xbe01000000	                              mov esi, 1	      5399	objcopy.c	FUNCTION_62	CALL_147
0x400a6ae	          0x4889c7	                            mov rdi, rax	      5399	objcopy.c	FUNCTION_62	CALL_147
0x400a6b1	      0xe8eb59ffff	                     call sym.copy_usage	      5399	objcopy.c	FUNCTION_62	CALL_147
0x400a6b6	    0x8b0500000000	            mov eax, dword [0x0400a6bc] 	      5401	objcopy.c	FUNCTION_62
0x400a6bc	            0x4898	                                    cdqe	      5401	objcopy.c	FUNCTION_62
0x400a6be	    0x488d14c50000	                        lea rdx, [rax*8]	      5401	objcopy.c	FUNCTION_62
0x400a6c6	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      5401	objcopy.c	FUNCTION_62
0x400a6cd	          0x4801d0	                            add rax, rdx	      5401	objcopy.c	FUNCTION_62
0x400a6d0	          0x488b00	                    mov rax, qword [rax]	      5401	objcopy.c	FUNCTION_62
0x400a6d3	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      5401	objcopy.c	FUNCTION_62
0x400a6da	    0x8b0500000000	            mov eax, dword [0x0400a6e0] 	      5402	objcopy.c	FUNCTION_62	IF_47
0x400a6e0	          0x83c001	                              add eax, 1	      5402	objcopy.c	FUNCTION_62	IF_47
0x400a6e3	    0x3b851cfeffff	            cmp eax, dword [rbp - 0x1e4]	      5402	objcopy.c	FUNCTION_62	IF_47
0x400a6e9	            0x7d28	                           jge 0x400a713	      5402	objcopy.c	FUNCTION_62	IF_47
0x400a6eb	    0x8b0500000000	            mov eax, dword [0x0400a6f1] 	      5403	objcopy.c	FUNCTION_62	IF_47
0x400a6f1	            0x4898	                                    cdqe	      5403	objcopy.c	FUNCTION_62	IF_47
0x400a6f3	        0x4883c001	                              add rax, 1	      5403	objcopy.c	FUNCTION_62	IF_47
0x400a6f7	    0x488d14c50000	                        lea rdx, [rax*8]	      5403	objcopy.c	FUNCTION_62	IF_47
0x400a6ff	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      5403	objcopy.c	FUNCTION_62	IF_47
0x400a706	          0x4801d0	                            add rax, rdx	      5403	objcopy.c	FUNCTION_62	IF_47
0x400a709	          0x488b00	                    mov rax, qword [rax]	      5403	objcopy.c	FUNCTION_62	IF_47
0x400a70c	    0x48898558feff	            mov qword [rbp - 0x1a8], rax	      5403	objcopy.c	FUNCTION_62	IF_47
0x400a713	      0xe8bedcffff	          call sym.default_deterministic	      5405	objcopy.c	FUNCTION_62	CALL_148
0x400a718	    0x8b0500000000	            mov eax, dword [0x0400a71e] 	      5408	objcopy.c	FUNCTION_62	IF_48
0x400a71e	            0x85c0	                           test eax, eax	      5408	objcopy.c	FUNCTION_62	IF_48
0x400a720	            0x7514	                           jne 0x400a736	      5408	objcopy.c	FUNCTION_62	IF_48
0x400a722	    0x8b0500000000	            mov eax, dword [0x0400a728] 	      5408	objcopy.c	FUNCTION_62	IF_48
0x400a728	            0x85c0	                           test eax, eax	      5408	objcopy.c	FUNCTION_62	IF_48
0x400a72a	            0x750a	                           jne 0x400a736	      5408	objcopy.c	FUNCTION_62	IF_48
0x400a72c	    0xc70500000000	               mov dword [0x0400a736], 1	      5409	objcopy.c	FUNCTION_62	IF_48
0x400a736	    0x4883bd70feff	              cmp qword [rbp - 0x190], 0	      5411	objcopy.c	FUNCTION_62	IF_49
0x400a73e	            0x750e	                           jne 0x400a74e	      5411	objcopy.c	FUNCTION_62	IF_49
0x400a740	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      5412	objcopy.c	FUNCTION_62	IF_49
0x400a747	    0x48898570feff	            mov qword [rbp - 0x190], rax	      5412	objcopy.c	FUNCTION_62	IF_49
0x400a74e	    0x4883bd68feff	              cmp qword [rbp - 0x198], 0	      5415	objcopy.c	FUNCTION_62	IF_50
0x400a756	     0xf84dd000000	                            je 0x400a839	      5415	objcopy.c	FUNCTION_62	IF_50
0x400a75c	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      5416	objcopy.c	FUNCTION_62	IF_50	CALL_149
0x400a763	      0xba04000000	                              mov edx, 4	      5416	objcopy.c	FUNCTION_62	IF_50	CALL_149
0x400a768	      0xbe00000000	                              mov esi, 0	      5416	objcopy.c	FUNCTION_62	IF_50	CALL_149
0x400a76d	          0x4889c7	                            mov rdi, rax	      5416	objcopy.c	FUNCTION_62	IF_50	CALL_149
0x400a770	      0xe800000000	                          call 0x400a775	      5416	objcopy.c	FUNCTION_62	IF_50	CALL_149
0x400a775	            0x85c0	                           test eax, eax	      5416	objcopy.c	FUNCTION_62	IF_50	CALL_149
0x400a777	     0xf85bc000000	                           jne 0x400a839	      5416	objcopy.c	FUNCTION_62	IF_50	CALL_149
0x400a77d	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      5420	objcopy.c	FUNCTION_62	IF_50	CALL_150
0x400a784	        0x4883c004	                              add rax, 4	      5420	objcopy.c	FUNCTION_62	IF_50	CALL_150
0x400a788	          0x4889c7	                            mov rdi, rax	      5420	objcopy.c	FUNCTION_62	IF_50	CALL_150
0x400a78b	      0xe800000000	                          call 0x400a790	      5420	objcopy.c	FUNCTION_62	IF_50	CALL_150
0x400a790	    0x488985a0feff	            mov qword [rbp - 0x160], rax	      5420	objcopy.c	FUNCTION_62	IF_50	CALL_150
0x400a797	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      5421	objcopy.c	FUNCTION_62	IF_50	IF_51	CALL_151
0x400a79e	      0xba06000000	                              mov edx, 6	      5421	objcopy.c	FUNCTION_62	IF_50	IF_51	CALL_151
0x400a7a3	      0xbe00000000	                              mov esi, 0	      5421	objcopy.c	FUNCTION_62	IF_50	IF_51	CALL_151
0x400a7a8	          0x4889c7	                            mov rdi, rax	      5421	objcopy.c	FUNCTION_62	IF_50	IF_51	CALL_151
0x400a7ab	      0xe800000000	                          call 0x400a7b0	      5421	objcopy.c	FUNCTION_62	IF_50	IF_51	CALL_151
0x400a7b0	            0x85c0	                           test eax, eax	      5421	objcopy.c	FUNCTION_62	IF_50	IF_51	CALL_151
0x400a7b2	            0x741d	                            je 0x400a7d1	      5421	objcopy.c	FUNCTION_62	IF_50	IF_51	CALL_151
0x400a7b4	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      5422	objcopy.c	FUNCTION_62	IF_50	IF_51	CALL_152
0x400a7bb	      0xba06000000	                              mov edx, 6	      5422	objcopy.c	FUNCTION_62	IF_50	IF_51	CALL_152
0x400a7c0	      0xbe00000000	                              mov esi, 0	      5422	objcopy.c	FUNCTION_62	IF_50	IF_51	CALL_152
0x400a7c5	          0x4889c7	                            mov rdi, rax	      5422	objcopy.c	FUNCTION_62	IF_50	IF_51	CALL_152
0x400a7c8	      0xe800000000	                          call 0x400a7cd	      5422	objcopy.c	FUNCTION_62	IF_50	IF_51	CALL_152
0x400a7cd	            0x85c0	                           test eax, eax	      5422	objcopy.c	FUNCTION_62	IF_50	IF_51	CALL_152
0x400a7cf	            0x750a	                           jne 0x400a7db	      5422	objcopy.c	FUNCTION_62	IF_50	IF_51	CALL_152
0x400a7d1	    0x488385a0feff	              add qword [rbp - 0x160], 2	      5423	objcopy.c	FUNCTION_62	IF_50	IF_51
0x400a7d9	            0xeb41	                           jmp 0x400a81c	      5423	objcopy.c	FUNCTION_62	IF_50	IF_51
0x400a7db	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      5424	objcopy.c	FUNCTION_62	IF_50	ELSE_19	IF_52	CALL_153
0x400a7e2	      0xba04000000	                              mov edx, 4	      5424	objcopy.c	FUNCTION_62	IF_50	ELSE_19	IF_52	CALL_153
0x400a7e7	      0xbe00000000	                              mov esi, 0	      5424	objcopy.c	FUNCTION_62	IF_50	ELSE_19	IF_52	CALL_153
0x400a7ec	          0x4889c7	                            mov rdi, rax	      5424	objcopy.c	FUNCTION_62	IF_50	ELSE_19	IF_52	CALL_153
0x400a7ef	      0xe800000000	                          call 0x400a7f4	      5424	objcopy.c	FUNCTION_62	IF_50	ELSE_19	IF_52	CALL_153
0x400a7f4	            0x85c0	                           test eax, eax	      5424	objcopy.c	FUNCTION_62	IF_50	ELSE_19	IF_52	CALL_153
0x400a7f6	            0x7424	                            je 0x400a81c	      5424	objcopy.c	FUNCTION_62	IF_50	ELSE_19	IF_52	CALL_153
0x400a7f8	      0xbf00000000	                              mov edi, 0	      5425	objcopy.c	FUNCTION_62	IF_50	ELSE_19	IF_52
0x400a7fd	      0xe800000000	                          call 0x400a802	      5425	objcopy.c	FUNCTION_62	IF_50	ELSE_19	IF_52
0x400a802	          0x4889c2	                            mov rdx, rax	      5425	objcopy.c	FUNCTION_62	IF_50	ELSE_19	IF_52
0x400a805	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      5425	objcopy.c	FUNCTION_62	IF_50	ELSE_19	IF_52
0x400a80c	          0x4889c6	                            mov rsi, rax	      5425	objcopy.c	FUNCTION_62	IF_50	ELSE_19	IF_52
0x400a80f	          0x4889d7	                            mov rdi, rdx	      5425	objcopy.c	FUNCTION_62	IF_50	ELSE_19	IF_52
0x400a812	      0xb800000000	                              mov eax, 0	      5425	objcopy.c	FUNCTION_62	IF_50	ELSE_19	IF_52
0x400a817	      0xe800000000	                          call 0x400a81c	      5425	objcopy.c	FUNCTION_62	IF_50	ELSE_19	IF_52
0x400a81c	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      5427	objcopy.c	FUNCTION_62	IF_50
0x400a823	    0x48898568feff	            mov qword [rbp - 0x198], rax	      5427	objcopy.c	FUNCTION_62	IF_50
0x400a82a	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      5428	objcopy.c	FUNCTION_62	IF_50	CALL_156
0x400a831	          0x4889c7	                            mov rdi, rax	      5428	objcopy.c	FUNCTION_62	IF_50	CALL_156
0x400a834	      0xe847e4ffff	             call sym.convert_efi_target	      5428	objcopy.c	FUNCTION_62	IF_50	CALL_156
0x400a839	    0x4883bd70feff	              cmp qword [rbp - 0x190], 0	      5432	objcopy.c	FUNCTION_62	IF_53
0x400a841	     0xf8462010000	                            je 0x400a9a9	      5432	objcopy.c	FUNCTION_62	IF_53
0x400a847	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      5433	objcopy.c	FUNCTION_62	IF_53	CALL_157
0x400a84e	      0xba04000000	                              mov edx, 4	      5433	objcopy.c	FUNCTION_62	IF_53	CALL_157
0x400a853	      0xbe00000000	                              mov esi, 0	      5433	objcopy.c	FUNCTION_62	IF_53	CALL_157
0x400a858	          0x4889c7	                            mov rdi, rax	      5433	objcopy.c	FUNCTION_62	IF_53	CALL_157
0x400a85b	      0xe800000000	                          call 0x400a860	      5433	objcopy.c	FUNCTION_62	IF_53	CALL_157
0x400a860	            0x85c0	                           test eax, eax	      5433	objcopy.c	FUNCTION_62	IF_53	CALL_157
0x400a862	     0xf8541010000	                           jne 0x400a9a9	      5433	objcopy.c	FUNCTION_62	IF_53	CALL_157
0x400a868	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      5437	objcopy.c	FUNCTION_62	IF_53	CALL_158
0x400a86f	        0x4883c004	                              add rax, 4	      5437	objcopy.c	FUNCTION_62	IF_53	CALL_158
0x400a873	          0x4889c7	                            mov rdi, rax	      5437	objcopy.c	FUNCTION_62	IF_53	CALL_158
0x400a876	      0xe800000000	                          call 0x400a87b	      5437	objcopy.c	FUNCTION_62	IF_53	CALL_158
0x400a87b	    0x488985a8feff	            mov qword [rbp - 0x158], rax	      5437	objcopy.c	FUNCTION_62	IF_53	CALL_158
0x400a882	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      5438	objcopy.c	FUNCTION_62	IF_53	IF_54	CALL_159
0x400a889	      0xba04000000	                              mov edx, 4	      5438	objcopy.c	FUNCTION_62	IF_53	IF_54	CALL_159
0x400a88e	      0xbe00000000	                              mov esi, 0	      5438	objcopy.c	FUNCTION_62	IF_53	IF_54	CALL_159
0x400a893	          0x4889c7	                            mov rdi, rax	      5438	objcopy.c	FUNCTION_62	IF_53	IF_54	CALL_159
0x400a896	      0xe800000000	                          call 0x400a89b	      5438	objcopy.c	FUNCTION_62	IF_53	IF_54	CALL_159
0x400a89b	            0x85c0	                           test eax, eax	      5438	objcopy.c	FUNCTION_62	IF_53	IF_54	CALL_159
0x400a89d	            0x751f	                           jne 0x400a8be	      5438	objcopy.c	FUNCTION_62	IF_53	IF_54	CALL_159
0x400a89f	     0xfb705000000	           movzx eax, word [0x0400a8a6] 	      5440	objcopy.c	FUNCTION_62	IF_53	IF_54	IF_55
0x400a8a6	        0x6683f8ff	              cmp ax, 0xffffffffffffffff	      5440	objcopy.c	FUNCTION_62	IF_53	IF_54	IF_55
0x400a8aa	     0xf85ac000000	                           jne 0x400a95c	      5440	objcopy.c	FUNCTION_62	IF_53	IF_54	IF_55
0x400a8b0	    0x66c705000000	              mov word [0x0400a8b9], 0xa	      5441	objcopy.c	FUNCTION_62	IF_53	IF_54	IF_55
0x400a8b9	      0xe99e000000	                           jmp 0x400a95c	      5441	objcopy.c	FUNCTION_62	IF_53	IF_54	IF_55
0x400a8be	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      5443	objcopy.c	FUNCTION_62	IF_53	ELSE_20	IF_56	CALL_160
0x400a8c5	      0xba06000000	                              mov edx, 6	      5443	objcopy.c	FUNCTION_62	IF_53	ELSE_20	IF_56	CALL_160
0x400a8ca	      0xbe00000000	                              mov esi, 0	      5443	objcopy.c	FUNCTION_62	IF_53	ELSE_20	IF_56	CALL_160
0x400a8cf	          0x4889c7	                            mov rdi, rax	      5443	objcopy.c	FUNCTION_62	IF_53	ELSE_20	IF_56	CALL_160
0x400a8d2	      0xe800000000	                          call 0x400a8d7	      5443	objcopy.c	FUNCTION_62	IF_53	ELSE_20	IF_56	CALL_160
0x400a8d7	            0x85c0	                           test eax, eax	      5443	objcopy.c	FUNCTION_62	IF_53	ELSE_20	IF_56	CALL_160
0x400a8d9	            0x7520	                           jne 0x400a8fb	      5443	objcopy.c	FUNCTION_62	IF_53	ELSE_20	IF_56	CALL_160
0x400a8db	     0xfb705000000	           movzx eax, word [0x0400a8e2] 	      5445	objcopy.c	FUNCTION_62	IF_53	ELSE_20	IF_56	IF_57
0x400a8e2	        0x6683f8ff	              cmp ax, 0xffffffffffffffff	      5445	objcopy.c	FUNCTION_62	IF_53	ELSE_20	IF_56	IF_57
0x400a8e6	            0x7509	                           jne 0x400a8f1	      5445	objcopy.c	FUNCTION_62	IF_53	ELSE_20	IF_56	IF_57
0x400a8e8	    0x66c705000000	              mov word [0x0400a8f1], 0xb	      5446	objcopy.c	FUNCTION_62	IF_53	ELSE_20	IF_56	IF_57
0x400a8f1	    0x488385a8feff	              add qword [rbp - 0x158], 2	      5447	objcopy.c	FUNCTION_62	IF_53	ELSE_20	IF_56
0x400a8f9	            0xeb61	                           jmp 0x400a95c	      5447	objcopy.c	FUNCTION_62	IF_53	ELSE_20	IF_56
0x400a8fb	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      5449	objcopy.c	FUNCTION_62	IF_53	ELSE_21	IF_58	CALL_161
0x400a902	      0xba06000000	                              mov edx, 6	      5449	objcopy.c	FUNCTION_62	IF_53	ELSE_21	IF_58	CALL_161
0x400a907	      0xbe00000000	                              mov esi, 0	      5449	objcopy.c	FUNCTION_62	IF_53	ELSE_21	IF_58	CALL_161
0x400a90c	          0x4889c7	                            mov rdi, rax	      5449	objcopy.c	FUNCTION_62	IF_53	ELSE_21	IF_58	CALL_161
0x400a90f	      0xe800000000	                          call 0x400a914	      5449	objcopy.c	FUNCTION_62	IF_53	ELSE_21	IF_58	CALL_161
0x400a914	            0x85c0	                           test eax, eax	      5449	objcopy.c	FUNCTION_62	IF_53	ELSE_21	IF_58	CALL_161
0x400a916	            0x7520	                           jne 0x400a938	      5449	objcopy.c	FUNCTION_62	IF_53	ELSE_21	IF_58	CALL_161
0x400a918	     0xfb705000000	           movzx eax, word [0x0400a91f] 	      5451	objcopy.c	FUNCTION_62	IF_53	ELSE_21	IF_58	IF_59
0x400a91f	        0x6683f8ff	              cmp ax, 0xffffffffffffffff	      5451	objcopy.c	FUNCTION_62	IF_53	ELSE_21	IF_58	IF_59
0x400a923	            0x7509	                           jne 0x400a92e	      5451	objcopy.c	FUNCTION_62	IF_53	ELSE_21	IF_58	IF_59
0x400a925	    0x66c705000000	              mov word [0x0400a92e], 0xc	      5452	objcopy.c	FUNCTION_62	IF_53	ELSE_21	IF_58	IF_59
0x400a92e	    0x488385a8feff	              add qword [rbp - 0x158], 2	      5453	objcopy.c	FUNCTION_62	IF_53	ELSE_21	IF_58
0x400a936	            0xeb24	                           jmp 0x400a95c	      5453	objcopy.c	FUNCTION_62	IF_53	ELSE_21	IF_58
0x400a938	      0xbf00000000	                              mov edi, 0	      5456	objcopy.c	FUNCTION_62	IF_53	CALL_163
0x400a93d	      0xe800000000	                          call 0x400a942	      5456	objcopy.c	FUNCTION_62	IF_53	CALL_163
0x400a942	          0x4889c2	                            mov rdx, rax	      5456	objcopy.c	FUNCTION_62	IF_53	CALL_163
0x400a945	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      5456	objcopy.c	FUNCTION_62	IF_53	CALL_163
0x400a94c	          0x4889c6	                            mov rsi, rax	      5456	objcopy.c	FUNCTION_62	IF_53	CALL_163
0x400a94f	          0x4889d7	                            mov rdi, rdx	      5456	objcopy.c	FUNCTION_62	IF_53	CALL_163
0x400a952	      0xb800000000	                              mov eax, 0	      5456	objcopy.c	FUNCTION_62	IF_53	CALL_163
0x400a957	      0xe800000000	                          call 0x400a95c	      5456	objcopy.c	FUNCTION_62	IF_53	CALL_163
0x400a95c	    0x488b05000000	            mov rax, qword [0x0400a963] 	      5458	objcopy.c	FUNCTION_62	IF_53	IF_60
0x400a963	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      5458	objcopy.c	FUNCTION_62	IF_53	IF_60
0x400a967	            0x750b	                           jne 0x400a974	      5458	objcopy.c	FUNCTION_62	IF_53	IF_60
0x400a969	    0x48c705000000	          mov qword [0x0400a974], 0x200 	      5459	objcopy.c	FUNCTION_62	IF_53	IF_60
0x400a974	    0x488b05000000	            mov rax, qword [0x0400a97b] 	      5460	objcopy.c	FUNCTION_62	IF_53	IF_61
0x400a97b	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      5460	objcopy.c	FUNCTION_62	IF_53	IF_61
0x400a97f	            0x750b	                           jne 0x400a98c	      5460	objcopy.c	FUNCTION_62	IF_53	IF_61
0x400a981	    0x48c705000000	         mov qword [0x0400a98c], 0x1000 	      5461	objcopy.c	FUNCTION_62	IF_53	IF_61
0x400a98c	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      5463	objcopy.c	FUNCTION_62	IF_53
0x400a993	    0x48898570feff	            mov qword [rbp - 0x190], rax	      5463	objcopy.c	FUNCTION_62	IF_53
0x400a99a	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      5464	objcopy.c	FUNCTION_62	IF_53	CALL_164
0x400a9a1	          0x4889c7	                            mov rdi, rax	      5464	objcopy.c	FUNCTION_62	IF_53	CALL_164
0x400a9a4	      0xe8d7e2ffff	             call sym.convert_efi_target	      5464	objcopy.c	FUNCTION_62	IF_53	CALL_164
0x400a9a9	    0x8b0500000000	            mov eax, dword [0x0400a9af] 	      5467	objcopy.c	FUNCTION_62	IF_62
0x400a9af	            0x85c0	                           test eax, eax	      5467	objcopy.c	FUNCTION_62	IF_62
0x400a9b1	            0x7455	                            je 0x400aa08	      5467	objcopy.c	FUNCTION_62	IF_62
0x400a9b3	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	      5468	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_165
0x400a9ba	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      5468	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_165
0x400a9c1	          0x4889d6	                            mov rsi, rdx	      5468	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_165
0x400a9c4	          0x4889c7	                            mov rdi, rax	      5468	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_165
0x400a9c7	      0xe800000000	                          call 0x400a9cc	      5468	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_165
0x400a9cc	            0x85c0	                           test eax, eax	      5468	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_165
0x400a9ce	            0x7938	                           jns 0x400aa08	      5468	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_165
0x400a9d0	      0xe800000000	                          call 0x400a9d5	      5470	objcopy.c	FUNCTION_62	IF_62	IF_63
0x400a9d5	            0x8b00	                    mov eax, dword [rax]	      5469	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_167
0x400a9d7	            0x89c7	                            mov edi, eax	      5469	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_167
0x400a9d9	      0xe800000000	                          call 0x400a9de	      5469	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_167
0x400a9de	          0x4889c3	                            mov rbx, rax	      5469	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_167
0x400a9e1	      0xbf00000000	                              mov edi, 0	      5469	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_167
0x400a9e6	      0xe800000000	                          call 0x400a9eb	      5469	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_167
0x400a9eb	          0x4889c1	                            mov rcx, rax	      5469	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_167
0x400a9ee	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      5469	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_167
0x400a9f5	          0x4889da	                            mov rdx, rbx	      5469	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_167
0x400a9f8	          0x4889c6	                            mov rsi, rax	      5469	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_167
0x400a9fb	          0x4889cf	                            mov rdi, rcx	      5469	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_167
0x400a9fe	      0xb800000000	                              mov eax, 0	      5469	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_167
0x400aa03	      0xe800000000	                          call 0x400aa08	      5469	objcopy.c	FUNCTION_62	IF_62	IF_63	CALL_167
0x400aa08	    0x4883bd58feff	              cmp qword [rbp - 0x1a8], 0	      5474	objcopy.c	FUNCTION_62	IF_64
0x400aa10	            0x741d	                            je 0x400aa2f	      5474	objcopy.c	FUNCTION_62	IF_64
0x400aa12	    0x488b9558feff	            mov rdx, qword [rbp - 0x1a8]	      5475	objcopy.c	FUNCTION_62	IF_64	CALL_169
0x400aa19	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      5475	objcopy.c	FUNCTION_62	IF_64	CALL_169
0x400aa20	          0x4889d6	                            mov rsi, rdx	      5475	objcopy.c	FUNCTION_62	IF_64	CALL_169
0x400aa23	          0x4889c7	                            mov rdi, rax	      5475	objcopy.c	FUNCTION_62	IF_64	CALL_169
0x400aa26	      0xe800000000	                          call 0x400aa2b	      5475	objcopy.c	FUNCTION_62	IF_64	CALL_169
0x400aa2b	            0x85c0	                           test eax, eax	      5475	objcopy.c	FUNCTION_62	IF_64	CALL_169
0x400aa2d	            0x7518	                           jne 0x400aa47	      5475	objcopy.c	FUNCTION_62	IF_64	CALL_169
0x400aa2f	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      5476	objcopy.c	FUNCTION_62	CALL_170
0x400aa36	          0x4889c7	                            mov rdi, rax	      5476	objcopy.c	FUNCTION_62	CALL_170
0x400aa39	      0xe800000000	                          call 0x400aa3e	      5476	objcopy.c	FUNCTION_62	CALL_170
0x400aa3e	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      5476	objcopy.c	FUNCTION_62	CALL_170
0x400aa45	            0xeb0e	                           jmp 0x400aa55	      5476	objcopy.c	FUNCTION_62	CALL_170
0x400aa47	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      5478	objcopy.c	FUNCTION_62	ELSE_23
0x400aa4e	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      5478	objcopy.c	FUNCTION_62	ELSE_23
0x400aa55	    0x4883bd60feff	              cmp qword [rbp - 0x1a0], 0	      5480	objcopy.c	FUNCTION_62	IF_65
0x400aa5d	            0x7538	                           jne 0x400aa97	      5480	objcopy.c	FUNCTION_62	IF_65
0x400aa5f	      0xe800000000	                          call 0x400aa64	      5482	objcopy.c	FUNCTION_62	CALL_173
0x400aa64	            0x8b00	                    mov eax, dword [rax]	      5481	objcopy.c	FUNCTION_62	IF_65	CALL_172
0x400aa66	            0x89c7	                            mov edi, eax	      5481	objcopy.c	FUNCTION_62	IF_65	CALL_172
0x400aa68	      0xe800000000	                          call 0x400aa6d	      5481	objcopy.c	FUNCTION_62	IF_65	CALL_172
0x400aa6d	          0x4889c3	                            mov rbx, rax	      5481	objcopy.c	FUNCTION_62	IF_65	CALL_172
0x400aa70	      0xbf00000000	                              mov edi, 0	      5481	objcopy.c	FUNCTION_62	IF_65	CALL_172
0x400aa75	      0xe800000000	                          call 0x400aa7a	      5481	objcopy.c	FUNCTION_62	IF_65	CALL_172
0x400aa7a	          0x4889c1	                            mov rcx, rax	      5481	objcopy.c	FUNCTION_62	IF_65	CALL_172
0x400aa7d	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      5481	objcopy.c	FUNCTION_62	IF_65	CALL_172
0x400aa84	          0x4889da	                            mov rdx, rbx	      5481	objcopy.c	FUNCTION_62	IF_65	CALL_172
0x400aa87	          0x4889c6	                            mov rsi, rax	      5481	objcopy.c	FUNCTION_62	IF_65	CALL_172
0x400aa8a	          0x4889cf	                            mov rdi, rcx	      5481	objcopy.c	FUNCTION_62	IF_65	CALL_172
0x400aa8d	      0xb800000000	                              mov eax, 0	      5481	objcopy.c	FUNCTION_62	IF_65	CALL_172
0x400aa92	      0xe800000000	                          call 0x400aa97	      5481	objcopy.c	FUNCTION_62	IF_65	CALL_172
0x400aa97	    0x488bbd78feff	            mov rdi, qword [rbp - 0x188]	      5484	objcopy.c	FUNCTION_62	CALL_174
0x400aa9e	    0x488b8d70feff	            mov rcx, qword [rbp - 0x190]	      5484	objcopy.c	FUNCTION_62	CALL_174
0x400aaa5	    0x488b9568feff	            mov rdx, qword [rbp - 0x198]	      5484	objcopy.c	FUNCTION_62	CALL_174
0x400aaac	    0x488bb560feff	            mov rsi, qword [rbp - 0x1a0]	      5484	objcopy.c	FUNCTION_62	CALL_174
0x400aab3	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      5484	objcopy.c	FUNCTION_62	CALL_174
0x400aaba	          0x4989f8	                             mov r8, rdi	      5484	objcopy.c	FUNCTION_62	CALL_174
0x400aabd	          0x4889c7	                            mov rdi, rax	      5484	objcopy.c	FUNCTION_62	CALL_174
0x400aac0	      0xe8d4bcffff	                      call sym.copy_file	      5484	objcopy.c	FUNCTION_62	CALL_174
0x400aac5	    0x8b0500000000	            mov eax, dword [0x0400aacb] 	      5485	objcopy.c	FUNCTION_62	IF_66
0x400aacb	            0x85c0	                           test eax, eax	      5485	objcopy.c	FUNCTION_62	IF_66
0x400aacd	            0x7562	                           jne 0x400ab31	      5485	objcopy.c	FUNCTION_62	IF_66
0x400aacf	    0x8b0500000000	            mov eax, dword [0x0400aad5] 	      5487	objcopy.c	FUNCTION_62	IF_66	IF_67
0x400aad5	            0x85c0	                           test eax, eax	      5487	objcopy.c	FUNCTION_62	IF_66	IF_67
0x400aad7	            0x7419	                            je 0x400aaf2	      5487	objcopy.c	FUNCTION_62	IF_66	IF_67
0x400aad9	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	      5488	objcopy.c	FUNCTION_62	IF_66	CALL_175
0x400aae0	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      5488	objcopy.c	FUNCTION_62	IF_66	CALL_175
0x400aae7	          0x4889d6	                            mov rsi, rdx	      5488	objcopy.c	FUNCTION_62	IF_66	CALL_175
0x400aaea	          0x4889c7	                            mov rdi, rax	      5488	objcopy.c	FUNCTION_62	IF_66	CALL_175
0x400aaed	      0xe800000000	                          call 0x400aaf2	      5488	objcopy.c	FUNCTION_62	IF_66	CALL_175
0x400aaf2	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      5489	objcopy.c	FUNCTION_62	IF_66	IF_68
0x400aaf9	    0x483b8558feff	            cmp rax, qword [rbp - 0x1a8]	      5489	objcopy.c	FUNCTION_62	IF_66	IF_68
0x400ab00	            0x743e	                            je 0x400ab40	      5489	objcopy.c	FUNCTION_62	IF_66	IF_68
0x400ab02	    0x8b1500000000	            mov edx, dword [0x0400ab08] 	      5490	objcopy.c	FUNCTION_62	IF_66	IF_68	CALL_176
0x400ab08	    0x488b8db8feff	            mov rcx, qword [rbp - 0x148]	      5490	objcopy.c	FUNCTION_62	IF_66	IF_68	CALL_176
0x400ab0f	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      5490	objcopy.c	FUNCTION_62	IF_66	IF_68	CALL_176
0x400ab16	          0x4889ce	                            mov rsi, rcx	      5490	objcopy.c	FUNCTION_62	IF_66	IF_68	CALL_176
0x400ab19	          0x4889c7	                            mov rdi, rax	      5490	objcopy.c	FUNCTION_62	IF_66	IF_68	CALL_176
0x400ab1c	      0xe800000000	                          call 0x400ab21	      5490	objcopy.c	FUNCTION_62	IF_66	IF_68	CALL_176
0x400ab21	            0x85c0	                           test eax, eax	      5491	objcopy.c	FUNCTION_62	IF_66	IF_68
0x400ab23	           0xf95c0	                                setne al	      5491	objcopy.c	FUNCTION_62	IF_66	IF_68
0x400ab26	           0xfb6c0	                           movzx eax, al	      5491	objcopy.c	FUNCTION_62	IF_66	IF_68
0x400ab29	    0x890500000000	            mov dword [0x0400ab2f], eax 	      5490	objcopy.c	FUNCTION_62	IF_66	IF_68	CALL_176
0x400ab2f	            0xeb0f	                           jmp 0x400ab40	      5490	objcopy.c	FUNCTION_62	IF_66	IF_68	CALL_176
0x400ab31	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      5494	objcopy.c	FUNCTION_62	CALL_177
0x400ab38	          0x4889c7	                            mov rdi, rax	      5494	objcopy.c	FUNCTION_62	CALL_177
0x400ab3b	      0xe800000000	                          call 0x400ab40	      5494	objcopy.c	FUNCTION_62	CALL_177
0x400ab40	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      5496	objcopy.c	FUNCTION_62	IF_69
0x400ab47	    0x483b8558feff	            cmp rax, qword [rbp - 0x1a8]	      5496	objcopy.c	FUNCTION_62	IF_69
0x400ab4e	            0x740f	                            je 0x400ab5f	      5496	objcopy.c	FUNCTION_62	IF_69
0x400ab50	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      5497	objcopy.c	FUNCTION_62	CALL_178
0x400ab57	          0x4889c7	                            mov rdi, rax	      5497	objcopy.c	FUNCTION_62	CALL_178
0x400ab5a	      0xe800000000	                          call 0x400ab5f	      5497	objcopy.c	FUNCTION_62	CALL_178
0x400ab5f	    0x83bd28feffff	              cmp dword [rbp - 0x1d8], 0	      5499	objcopy.c	FUNCTION_62	IF_70
0x400ab66	     0xf844e010000	                            je 0x400acba	      5499	objcopy.c	FUNCTION_62	IF_70
0x400ab6c	    0x488b05000000	            mov rax, qword [0x0400ab73] 	      5503	objcopy.c	FUNCTION_62	IF_70	FOR_1
0x400ab73	    0x488985b0feff	            mov qword [rbp - 0x150], rax	      5503	objcopy.c	FUNCTION_62	IF_70	FOR_1
0x400ab7a	      0xe92d010000	                           jmp 0x400acac	      5503	objcopy.c	FUNCTION_62	IF_70	FOR_1
0x400ab7f	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      5505	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71
0x400ab86	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5505	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71
0x400ab89	            0x85c0	                           test eax, eax	      5505	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71
0x400ab8b	     0xf850a010000	                           jne 0x400ac9b	      5505	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71
0x400ab91	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      5507	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72
0x400ab98	          0x8b4014	            mov eax, dword [rax + 0x14] 	      5507	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72
0x400ab9b	          0x83e00c	                            and eax, 0xc	      5507	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72
0x400ab9e	            0x85c0	                           test eax, eax	      5507	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72
0x400aba0	            0x7474	                            je 0x400ac16	      5507	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72
0x400aba2	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      5511	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72
0x400aba9	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      5511	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72
0x400abad	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5511	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72
0x400abb1	      0xbe00000000	                              mov esi, 0	      5511	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72
0x400abb6	          0x4889c7	                            mov rdi, rax	      5511	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72
0x400abb9	      0xb800000000	                              mov eax, 0	      5511	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72
0x400abbe	      0xe800000000	                          call 0x400abc3	      5511	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72
0x400abc3	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      5517	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72
0x400abca	          0x8b4014	            mov eax, dword [rax + 0x14] 	      5517	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72
0x400abcd	          0x83e004	                              and eax, 4	      5517	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72
0x400abd0	            0x85c0	                           test eax, eax	      5514	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72	CALL_180
0x400abd2	            0x7408	                            je 0x400abdc	      5514	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72	CALL_180
0x400abd4	    0x41bc3d000000	                          mov r12d, 0x3d	      5514	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72	CALL_180
0x400abda	            0xeb06	                           jmp 0x400abe2	      5514	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72	CALL_180
0x400abdc	    0x41bc2b000000	                          mov r12d, 0x2b	      5514	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72	CALL_180
0x400abe2	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      5514	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72	CALL_180
0x400abe9	        0x488b5808	                mov rbx, qword [rax + 8]	      5514	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72	CALL_180
0x400abed	      0xbf00000000	                              mov edi, 0	      5514	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72	CALL_180
0x400abf2	      0xe800000000	                          call 0x400abf7	      5514	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72	CALL_180
0x400abf7	          0x4889c7	                            mov rdi, rax	      5514	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72	CALL_180
0x400abfa	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5514	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72	CALL_180
0x400abfe	          0x4989c0	                             mov r8, rax	      5514	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72	CALL_180
0x400ac01	          0x4489e1	                           mov ecx, r12d	      5514	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72	CALL_180
0x400ac04	          0x4889da	                            mov rdx, rbx	      5514	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72	CALL_180
0x400ac07	      0xbe00000000	                              mov esi, 0	      5514	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72	CALL_180
0x400ac0c	      0xb800000000	                              mov eax, 0	      5514	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72	CALL_180
0x400ac11	      0xe800000000	                          call 0x400ac16	      5514	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_72	CALL_180
0x400ac16	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      5521	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73
0x400ac1d	          0x8b4014	            mov eax, dword [rax + 0x14] 	      5521	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73
0x400ac20	          0x83e030	                           and eax, 0x30	      5521	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73
0x400ac23	            0x85c0	                           test eax, eax	      5521	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73
0x400ac25	            0x7474	                            je 0x400ac9b	      5521	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73
0x400ac27	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      5525	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73
0x400ac2e	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      5525	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73
0x400ac32	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5525	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73
0x400ac36	      0xbe00000000	                              mov esi, 0	      5525	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73
0x400ac3b	          0x4889c7	                            mov rdi, rax	      5525	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73
0x400ac3e	      0xb800000000	                              mov eax, 0	      5525	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73
0x400ac43	      0xe800000000	                          call 0x400ac48	      5525	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73
0x400ac48	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      5531	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73
0x400ac4f	          0x8b4014	            mov eax, dword [rax + 0x14] 	      5531	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73
0x400ac52	          0x83e010	                           and eax, 0x10	      5531	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73
0x400ac55	            0x85c0	                           test eax, eax	      5528	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73	CALL_182
0x400ac57	            0x7408	                            je 0x400ac61	      5528	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73	CALL_182
0x400ac59	    0x41bc3d000000	                          mov r12d, 0x3d	      5528	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73	CALL_182
0x400ac5f	            0xeb06	                           jmp 0x400ac67	      5528	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73	CALL_182
0x400ac61	    0x41bc2b000000	                          mov r12d, 0x2b	      5528	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73	CALL_182
0x400ac67	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      5528	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73	CALL_182
0x400ac6e	        0x488b5808	                mov rbx, qword [rax + 8]	      5528	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73	CALL_182
0x400ac72	      0xbf00000000	                              mov edi, 0	      5528	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73	CALL_182
0x400ac77	      0xe800000000	                          call 0x400ac7c	      5528	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73	CALL_182
0x400ac7c	          0x4889c7	                            mov rdi, rax	      5528	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73	CALL_182
0x400ac7f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5528	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73	CALL_182
0x400ac83	          0x4989c0	                             mov r8, rax	      5528	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73	CALL_182
0x400ac86	          0x4489e1	                           mov ecx, r12d	      5528	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73	CALL_182
0x400ac89	          0x4889da	                            mov rdx, rbx	      5528	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73	CALL_182
0x400ac8c	      0xbe00000000	                              mov esi, 0	      5528	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73	CALL_182
0x400ac91	      0xb800000000	                              mov eax, 0	      5528	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73	CALL_182
0x400ac96	      0xe800000000	                          call 0x400ac9b	      5528	objcopy.c	FUNCTION_62	IF_70	FOR_1	IF_71	IF_73	CALL_182
0x400ac9b	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      5503	objcopy.c	FUNCTION_62	IF_70	FOR_1
0x400aca2	          0x488b00	                    mov rax, qword [rax]	      5503	objcopy.c	FUNCTION_62	IF_70	FOR_1
0x400aca5	    0x488985b0feff	            mov qword [rbp - 0x150], rax	      5503	objcopy.c	FUNCTION_62	IF_70	FOR_1
0x400acac	    0x4883bdb0feff	              cmp qword [rbp - 0x150], 0	      5503	objcopy.c	FUNCTION_62	IF_70	FOR_1
0x400acb4	     0xf85c5feffff	                           jne 0x400ab7f	      5503	objcopy.c	FUNCTION_62	IF_70	FOR_1
0x400acba	      0xb800000000	                              mov eax, 0	      5538	objcopy.c	FUNCTION_62
0x400acbf	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      5539	objcopy.c	FUNCTION_62
0x400acc3	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5539	objcopy.c	FUNCTION_62
0x400accc	            0x7405	                            je 0x400acd3	      5539	objcopy.c	FUNCTION_62
0x400acce	      0xe800000000	                          call 0x400acd3	      5539	objcopy.c	FUNCTION_62
0x400acd3	    0x4881c4e00100	                          add rsp, 0x1e0	      5539	objcopy.c	FUNCTION_62
0x400acda	              0x5b	                                 pop rbx	      5539	objcopy.c	FUNCTION_62
0x400acdb	            0x415c	                                 pop r12	      5539	objcopy.c	FUNCTION_62
0x400acdd	              0x5d	                                 pop rbp	      5539	objcopy.c	FUNCTION_62
0x400acde	              0xc3	                                     ret	      5539	objcopy.c	FUNCTION_62
create_symbol_htab	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,1	11
0x4000cad	              0x55	                                push rbp	       995	objcopy.c	FUNCTION_10
0x4000cae	          0x4889e5	                            mov rbp, rsp	       995	objcopy.c	FUNCTION_10
0x4000cb1	    0x41b900000000	                              mov r9d, 0	       996	objcopy.c	FUNCTION_10	CALL_1
0x4000cb7	    0x41b800000000	                              mov r8d, 0	       996	objcopy.c	FUNCTION_10	CALL_1
0x4000cbd	      0xb900000000	                              mov ecx, 0	       996	objcopy.c	FUNCTION_10	CALL_1
0x4000cc2	      0xba00000000	                              mov edx, 0	       996	objcopy.c	FUNCTION_10	CALL_1
0x4000cc7	      0xbe00000000	                              mov esi, 0	       996	objcopy.c	FUNCTION_10	CALL_1
0x4000ccc	      0xbf10000000	                           mov edi, 0x10	       996	objcopy.c	FUNCTION_10	CALL_1
0x4000cd1	      0xe800000000	                          call 0x4000cd6	       996	objcopy.c	FUNCTION_10	CALL_1
0x4000cd6	              0x5d	                                 pop rbp	       997	objcopy.c	FUNCTION_10
0x4000cd7	              0xc3	                                     ret	       997	objcopy.c	FUNCTION_10
copy_file	IF,18:FOR,0:ELSE,3:DO,0:SWITCH,2:functions,0:WHILE,0:CALL,30	324
0x4006799	              0x55	                                push rbp	      3428	objcopy.c	FUNCTION_41
0x400679a	          0x4889e5	                            mov rbp, rsp	      3428	objcopy.c	FUNCTION_41
0x400679d	        0x4883c480	             add rsp, 0xffffffffffffff80	      3428	objcopy.c	FUNCTION_41
0x40067a1	        0x48897da8	             mov qword [rbp - 0x58], rdi	      3428	objcopy.c	FUNCTION_41
0x40067a5	        0x488975a0	             mov qword [rbp - 0x60], rsi	      3428	objcopy.c	FUNCTION_41
0x40067a9	        0x48895598	             mov qword [rbp - 0x68], rdx	      3428	objcopy.c	FUNCTION_41
0x40067ad	        0x48894d90	             mov qword [rbp - 0x70], rcx	      3428	objcopy.c	FUNCTION_41
0x40067b1	        0x4c894588	              mov qword [rbp - 0x78], r8	      3428	objcopy.c	FUNCTION_41
0x40067b5	    0x64488b042528	                mov rax, qword fs:[0x28]	      3428	objcopy.c	FUNCTION_41
0x40067be	        0x488945f8	                mov qword [rbp - 8], rax	      3428	objcopy.c	FUNCTION_41
0x40067c2	            0x31c0	                            xor eax, eax	      3428	objcopy.c	FUNCTION_41
0x40067c4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3432	objcopy.c	FUNCTION_41	CALL_1
0x40067c8	          0x4889c7	                            mov rdi, rax	      3432	objcopy.c	FUNCTION_41	CALL_1
0x40067cb	      0xe800000000	                          call 0x40067d0	      3432	objcopy.c	FUNCTION_41	CALL_1
0x40067d0	        0x488945d8	             mov qword [rbp - 0x28], rax	      3432	objcopy.c	FUNCTION_41	CALL_1
0x40067d4	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      3434	objcopy.c	FUNCTION_41	IF_1
0x40067d9	            0x7f37	                            jg 0x4006812	      3434	objcopy.c	FUNCTION_41	IF_1
0x40067db	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      3436	objcopy.c	FUNCTION_41	IF_1	IF_2
0x40067e0	            0x7521	                           jne 0x4006803	      3436	objcopy.c	FUNCTION_41	IF_1	IF_2
0x40067e2	      0xbf00000000	                              mov edi, 0	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x40067e7	      0xe800000000	                          call 0x40067ec	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x40067ec	          0x4889c2	                            mov rdx, rax	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x40067ef	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x40067f3	          0x4889c6	                            mov rsi, rax	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x40067f6	          0x4889d7	                            mov rdi, rdx	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x40067f9	      0xb800000000	                              mov eax, 0	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x40067fe	      0xe800000000	                          call 0x4006803	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x4006803	    0xc70500000000	               mov dword [0x0400680d], 1	      3439	objcopy.c	FUNCTION_41	IF_1
0x400680d	      0xe974040000	                           jmp 0x4006c86	      3440	objcopy.c	FUNCTION_41	IF_1
0x4006812	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3445	objcopy.c	FUNCTION_41	CALL_4
0x4006816	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3445	objcopy.c	FUNCTION_41	CALL_4
0x400681a	          0x4889d6	                            mov rsi, rdx	      3445	objcopy.c	FUNCTION_41	CALL_4
0x400681d	          0x4889c7	                            mov rdi, rax	      3445	objcopy.c	FUNCTION_41	CALL_4
0x4006820	      0xe800000000	                          call 0x4006825	      3445	objcopy.c	FUNCTION_41	CALL_4
0x4006825	        0x488945e0	             mov qword [rbp - 0x20], rax	      3445	objcopy.c	FUNCTION_41	CALL_4
0x4006829	      0x48837de000	               cmp qword [rbp - 0x20], 0	      3446	objcopy.c	FUNCTION_41	IF_3
0x400682e	            0x752f	                           jne 0x400685f	      3446	objcopy.c	FUNCTION_41	IF_3
0x4006830	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x4006834	      0xb900000000	                              mov ecx, 0	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x4006839	      0xba00000000	                              mov edx, 0	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x400683e	      0xbe00000000	                              mov esi, 0	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x4006843	          0x4889c7	                            mov rdi, rax	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x4006846	      0xb800000000	                              mov eax, 0	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x400684b	      0xe800000000	                          call 0x4006850	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x4006850	    0xc70500000000	               mov dword [0x0400685a], 1	      3449	objcopy.c	FUNCTION_41	IF_3
0x400685a	      0xe927040000	                           jmp 0x4006c86	      3450	objcopy.c	FUNCTION_41	IF_3
0x400685f	    0x8b0500000000	            mov eax, dword [0x04006865] 	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x4006865	          0x83f810	                           cmp eax, 0x10	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x4006868	     0xf87b0000000	                            ja 0x400691e	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x400686e	            0x89c0	                            mov eax, eax	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x4006870	    0x488b04c50000	                  mov rax, qword [rax*8]	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x4006878	            0xffe0	                                 jmp rax	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x400687a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x400687e	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x4006881	          0xc1e805	                              shr eax, 5	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x4006884	      0x25ffff0f00	                        and eax, 0xfffff	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x4006889	          0x80cc40	                             or ah, 0x40	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x400688c	            0x89c2	                            mov edx, eax	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x400688e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x4006892	    0x81e2ffff0f00	                        and edx, 0xfffff	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x4006898	            0x89d1	                            mov ecx, edx	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x400689a	          0xc1e105	                              shl ecx, 5	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x400689d	          0x8b5044	            mov edx, dword [rax + 0x44] 	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x40068a0	    0x81e21f0000fe	                     and edx, 0xfe00001f	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x40068a6	             0x9ca	                             or edx, ecx	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x40068a8	          0x895044	             mov dword [rax + 0x44], edx	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x40068ab	    0x8b0500000000	            mov eax, dword [0x040068b1] 	      3462	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40068b1	          0x83f805	                              cmp eax, 5	      3462	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40068b4	            0x746b	                            je 0x4006921	      3462	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40068b6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40068ba	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40068bd	          0xc1e805	                              shr eax, 5	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40068c0	      0x25ffff0f00	                        and eax, 0xfffff	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40068c5	       0xd00000200	                         or eax, 0x20000	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40068ca	            0x89c2	                            mov edx, eax	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40068cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40068d0	    0x81e2ffff0f00	                        and edx, 0xfffff	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40068d6	            0x89d1	                            mov ecx, edx	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40068d8	          0xc1e105	                              shl ecx, 5	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40068db	          0x8b5044	            mov edx, dword [rax + 0x44] 	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40068de	    0x81e21f0000fe	                     and edx, 0xfe00001f	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40068e4	             0x9ca	                             or edx, ecx	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40068e6	          0x895044	             mov dword [rax + 0x44], edx	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40068e9	            0xeb36	                           jmp 0x4006921	      3464	objcopy.c	FUNCTION_41	SWITCH_1
0x40068eb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3466	objcopy.c	FUNCTION_41	SWITCH_1
0x40068ef	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3466	objcopy.c	FUNCTION_41	SWITCH_1
0x40068f2	          0xc1e805	                              shr eax, 5	      3466	objcopy.c	FUNCTION_41	SWITCH_1
0x40068f5	      0x25ffff0f00	                        and eax, 0xfffff	      3466	objcopy.c	FUNCTION_41	SWITCH_1
0x40068fa	          0x80cc80	                             or ah, 0x80	      3466	objcopy.c	FUNCTION_41	SWITCH_1
0x40068fd	            0x89c2	                            mov edx, eax	      3466	objcopy.c	FUNCTION_41	SWITCH_1
0x40068ff	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3466	objcopy.c	FUNCTION_41	SWITCH_1
0x4006903	    0x81e2ffff0f00	                        and edx, 0xfffff	      3466	objcopy.c	FUNCTION_41	SWITCH_1
0x4006909	            0x89d1	                            mov ecx, edx	      3466	objcopy.c	FUNCTION_41	SWITCH_1
0x400690b	          0xc1e105	                              shl ecx, 5	      3466	objcopy.c	FUNCTION_41	SWITCH_1
0x400690e	          0x8b5044	            mov edx, dword [rax + 0x44] 	      3466	objcopy.c	FUNCTION_41	SWITCH_1
0x4006911	    0x81e21f0000fe	                     and edx, 0xfe00001f	      3466	objcopy.c	FUNCTION_41	SWITCH_1
0x4006917	             0x9ca	                             or edx, ecx	      3466	objcopy.c	FUNCTION_41	SWITCH_1
0x4006919	          0x895044	             mov dword [rax + 0x44], edx	      3466	objcopy.c	FUNCTION_41	SWITCH_1
0x400691c	            0xeb04	                           jmp 0x4006922	      3467	objcopy.c	FUNCTION_41	SWITCH_1
0x400691e	              0x90	                                     nop	      3469	objcopy.c	FUNCTION_41	SWITCH_1
0x400691f	            0xeb01	                           jmp 0x4006922	      3469	objcopy.c	FUNCTION_41	SWITCH_1
0x4006921	              0x90	                                     nop	      3464	objcopy.c	FUNCTION_41	SWITCH_1
0x4006922	    0x8b0500000000	            mov eax, dword [0x04006928] 	      3472	objcopy.c	FUNCTION_41	SWITCH_2
0x4006928	          0x83f801	                              cmp eax, 1	      3472	objcopy.c	FUNCTION_41	SWITCH_2
0x400692b	            0x7407	                            je 0x4006934	      3472	objcopy.c	FUNCTION_41	SWITCH_2
0x400692d	          0x83f802	                              cmp eax, 2	      3472	objcopy.c	FUNCTION_41	SWITCH_2
0x4006930	            0x7437	                            je 0x4006969	      3472	objcopy.c	FUNCTION_41	SWITCH_2
0x4006932	            0xeb69	                           jmp 0x400699d	      3482	objcopy.c	FUNCTION_41	SWITCH_2
0x4006934	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3475	objcopy.c	FUNCTION_41	SWITCH_2
0x4006938	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3475	objcopy.c	FUNCTION_41	SWITCH_2
0x400693b	          0xc1e805	                              shr eax, 5	      3475	objcopy.c	FUNCTION_41	SWITCH_2
0x400693e	      0x25ffff0f00	                        and eax, 0xfffff	      3475	objcopy.c	FUNCTION_41	SWITCH_2
0x4006943	       0xd00000c00	                         or eax, 0xc0000	      3475	objcopy.c	FUNCTION_41	SWITCH_2
0x4006948	            0x89c2	                            mov edx, eax	      3475	objcopy.c	FUNCTION_41	SWITCH_2
0x400694a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3475	objcopy.c	FUNCTION_41	SWITCH_2
0x400694e	    0x81e2ffff0f00	                        and edx, 0xfffff	      3475	objcopy.c	FUNCTION_41	SWITCH_2
0x4006954	            0x89d1	                            mov ecx, edx	      3475	objcopy.c	FUNCTION_41	SWITCH_2
0x4006956	          0xc1e105	                              shl ecx, 5	      3475	objcopy.c	FUNCTION_41	SWITCH_2
0x4006959	          0x8b5044	            mov edx, dword [rax + 0x44] 	      3475	objcopy.c	FUNCTION_41	SWITCH_2
0x400695c	    0x81e21f0000fe	                     and edx, 0xfe00001f	      3475	objcopy.c	FUNCTION_41	SWITCH_2
0x4006962	             0x9ca	                             or edx, ecx	      3475	objcopy.c	FUNCTION_41	SWITCH_2
0x4006964	          0x895044	             mov dword [rax + 0x44], edx	      3475	objcopy.c	FUNCTION_41	SWITCH_2
0x4006967	            0xeb34	                           jmp 0x400699d	      3476	objcopy.c	FUNCTION_41	SWITCH_2
0x4006969	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3479	objcopy.c	FUNCTION_41	SWITCH_2
0x400696d	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3479	objcopy.c	FUNCTION_41	SWITCH_2
0x4006970	          0xc1e805	                              shr eax, 5	      3479	objcopy.c	FUNCTION_41	SWITCH_2
0x4006973	      0x25ffff0f00	                        and eax, 0xfffff	      3479	objcopy.c	FUNCTION_41	SWITCH_2
0x4006978	       0xd00000400	                         or eax, 0x40000	      3479	objcopy.c	FUNCTION_41	SWITCH_2
0x400697d	            0x89c2	                            mov edx, eax	      3479	objcopy.c	FUNCTION_41	SWITCH_2
0x400697f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3479	objcopy.c	FUNCTION_41	SWITCH_2
0x4006983	    0x81e2ffff0f00	                        and edx, 0xfffff	      3479	objcopy.c	FUNCTION_41	SWITCH_2
0x4006989	            0x89d1	                            mov ecx, edx	      3479	objcopy.c	FUNCTION_41	SWITCH_2
0x400698b	          0xc1e105	                              shl ecx, 5	      3479	objcopy.c	FUNCTION_41	SWITCH_2
0x400698e	          0x8b5044	            mov edx, dword [rax + 0x44] 	      3479	objcopy.c	FUNCTION_41	SWITCH_2
0x4006991	    0x81e21f0000fe	                     and edx, 0xfe00001f	      3479	objcopy.c	FUNCTION_41	SWITCH_2
0x4006997	             0x9ca	                             or edx, ecx	      3479	objcopy.c	FUNCTION_41	SWITCH_2
0x4006999	          0x895044	             mov dword [rax + 0x44], edx	      3479	objcopy.c	FUNCTION_41	SWITCH_2
0x400699c	              0x90	                                     nop	      3480	objcopy.c	FUNCTION_41	SWITCH_2
0x400699d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3485	objcopy.c	FUNCTION_41	IF_5	CALL_6
0x40069a1	      0xbe02000000	                              mov esi, 2	      3485	objcopy.c	FUNCTION_41	IF_5	CALL_6
0x40069a6	          0x4889c7	                            mov rdi, rax	      3485	objcopy.c	FUNCTION_41	IF_5	CALL_6
0x40069a9	      0xe800000000	                          call 0x40069ae	      3485	objcopy.c	FUNCTION_41	IF_5	CALL_6
0x40069ae	            0x85c0	                           test eax, eax	      3485	objcopy.c	FUNCTION_41	IF_5	CALL_6
0x40069b0	     0xf84af000000	                            je 0x4006a65	      3485	objcopy.c	FUNCTION_41	IF_5	CALL_6
0x40069b6	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      3492	objcopy.c	FUNCTION_41	IF_5	IF_6
0x40069bb	            0x7518	                           jne 0x40069d5	      3492	objcopy.c	FUNCTION_41	IF_5	IF_6
0x40069bd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3494	objcopy.c	FUNCTION_41	IF_5	IF_6
0x40069c1	        0x488b4008	                mov rax, qword [rax + 8]	      3494	objcopy.c	FUNCTION_41	IF_5	IF_6
0x40069c5	          0x488b00	                    mov rax, qword [rax]	      3494	objcopy.c	FUNCTION_41	IF_5	IF_6
0x40069c8	        0x48894590	             mov qword [rbp - 0x70], rax	      3494	objcopy.c	FUNCTION_41	IF_5	IF_6
0x40069cc	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      3495	objcopy.c	FUNCTION_41	IF_5	IF_6
0x40069d3	            0xeb07	                           jmp 0x40069dc	      3495	objcopy.c	FUNCTION_41	IF_5	IF_6
0x40069d5	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      3498	objcopy.c	FUNCTION_41	IF_5	ELSE_1
0x40069dc	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      3500	objcopy.c	FUNCTION_41	IF_5	CALL_7
0x40069e0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3500	objcopy.c	FUNCTION_41	IF_5	CALL_7
0x40069e4	          0x4889d6	                            mov rsi, rdx	      3500	objcopy.c	FUNCTION_41	IF_5	CALL_7
0x40069e7	          0x4889c7	                            mov rdi, rax	      3500	objcopy.c	FUNCTION_41	IF_5	CALL_7
0x40069ea	      0xe800000000	                          call 0x40069ef	      3500	objcopy.c	FUNCTION_41	IF_5	CALL_7
0x40069ef	        0x488945e8	             mov qword [rbp - 0x18], rax	      3500	objcopy.c	FUNCTION_41	IF_5	CALL_7
0x40069f3	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3501	objcopy.c	FUNCTION_41	IF_5	IF_7
0x40069f8	            0x752f	                           jne 0x4006a29	      3501	objcopy.c	FUNCTION_41	IF_5	IF_7
0x40069fa	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x40069fe	      0xb900000000	                              mov ecx, 0	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x4006a03	      0xba00000000	                              mov edx, 0	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x4006a08	      0xbe00000000	                              mov esi, 0	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x4006a0d	          0x4889c7	                            mov rdi, rax	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x4006a10	      0xb800000000	                              mov eax, 0	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x4006a15	      0xe800000000	                          call 0x4006a1a	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x4006a1a	    0xc70500000000	               mov dword [0x04006a24], 1	      3504	objcopy.c	FUNCTION_41	IF_5	IF_7
0x4006a24	      0xe95d020000	                           jmp 0x4006c86	      3505	objcopy.c	FUNCTION_41	IF_5	IF_7
0x4006a29	    0x8b1500000000	            mov edx, dword [0x04006a2f] 	      3508	objcopy.c	FUNCTION_41	IF_5	CALL_9
0x4006a2f	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3508	objcopy.c	FUNCTION_41	IF_5	CALL_9
0x4006a33	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3508	objcopy.c	FUNCTION_41	IF_5	CALL_9
0x4006a37	          0x4889ce	                            mov rsi, rcx	      3508	objcopy.c	FUNCTION_41	IF_5	CALL_9
0x4006a3a	          0x4889c7	                            mov rdi, rax	      3508	objcopy.c	FUNCTION_41	IF_5	CALL_9
0x4006a3d	      0xe8d6fcffff	          call sym.set_long_section_mode	      3508	objcopy.c	FUNCTION_41	IF_5	CALL_9
0x4006a42	        0x488b7d88	             mov rdi, qword [rbp - 0x78]	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4006a46	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4006a49	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4006a4d	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4006a51	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4006a55	          0x4989f8	                             mov r8, rdi	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4006a58	          0x4889c7	                            mov rdi, rax	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4006a5b	      0xe85cf4ffff	                   call sym.copy_archive	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4006a60	      0xe921020000	                           jmp 0x4006c86	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4006a65	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x4006a69	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x4006a6d	      0xbe01000000	                              mov esi, 1	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x4006a72	          0x4889c7	                            mov rdi, rax	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x4006a75	      0xe800000000	                          call 0x4006a7a	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x4006a7a	            0x85c0	                           test eax, eax	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x4006a7c	     0xf8448010000	                            je 0x4006bca	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x4006a82	            0xeb01	                           jmp 0x4006a85	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x4006a84	              0x90	                                     nop	      3563	objcopy.c	FUNCTION_41	ELSE_3	IF_14
0x4006a85	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      3519	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x4006a8a	            0x750f	                           jne 0x4006a9b	      3519	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x4006a8c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3520	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x4006a90	        0x488b4008	                mov rax, qword [rax + 8]	      3520	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x4006a94	          0x488b00	                    mov rax, qword [rax]	      3520	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x4006a97	        0x48894590	             mov qword [rbp - 0x70], rax	      3520	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x4006a9b	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      3522	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_12
0x4006a9f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3522	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_12
0x4006aa3	          0x4889d6	                            mov rsi, rdx	      3522	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_12
0x4006aa6	          0x4889c7	                            mov rdi, rax	      3522	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_12
0x4006aa9	      0xe800000000	                          call 0x4006aae	      3522	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_12
0x4006aae	        0x488945f0	             mov qword [rbp - 0x10], rax	      3522	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_12
0x4006ab2	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3523	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_10
0x4006ab7	            0x752f	                           jne 0x4006ae8	      3523	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_10
0x4006ab9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3525	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_10	CALL_13
0x4006abd	      0xb900000000	                              mov ecx, 0	      3525	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_10	CALL_13
0x4006ac2	      0xba00000000	                              mov edx, 0	      3525	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_10	CALL_13
0x4006ac7	      0xbe00000000	                              mov esi, 0	      3525	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_10	CALL_13
0x4006acc	          0x4889c7	                            mov rdi, rax	      3525	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_10	CALL_13
0x4006acf	      0xb800000000	                              mov eax, 0	      3525	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_10	CALL_13
0x4006ad4	      0xe800000000	                          call 0x4006ad9	      3525	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_10	CALL_13
0x4006ad9	    0xc70500000000	               mov dword [0x04006ae3], 1	      3526	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_10
0x4006ae3	      0xe99e010000	                           jmp 0x4006c86	      3527	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_10
0x4006ae8	    0x8b1500000000	            mov edx, dword [0x04006aee] 	      3530	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_14
0x4006aee	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3530	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_14
0x4006af2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3530	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_14
0x4006af6	          0x4889ce	                            mov rsi, rcx	      3530	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_14
0x4006af9	          0x4889c7	                            mov rdi, rax	      3530	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_14
0x4006afc	      0xe817fcffff	          call sym.set_long_section_mode	      3530	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_14
0x4006b01	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      3532	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11	CALL_15
0x4006b05	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      3532	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11	CALL_15
0x4006b09	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3532	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11	CALL_15
0x4006b0d	          0x4889ce	                            mov rsi, rcx	      3532	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11	CALL_15
0x4006b10	          0x4889c7	                            mov rdi, rax	      3532	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11	CALL_15
0x4006b13	      0xe855d1ffff	                    call sym.copy_object	      3532	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11	CALL_15
0x4006b18	            0x85c0	                           test eax, eax	      3532	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11	CALL_15
0x4006b1a	            0x750a	                           jne 0x4006b26	      3532	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11	CALL_15
0x4006b1c	    0xc70500000000	               mov dword [0x04006b26], 1	      3533	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11
0x4006b26	    0x8b0500000000	            mov eax, dword [0x04006b2c] 	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4006b2c	            0x85c0	                           test eax, eax	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4006b2e	            0x7413	                            je 0x4006b43	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4006b30	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4006b34	          0x4889c7	                            mov rdi, rax	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4006b37	      0xe800000000	                          call 0x4006b3c	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4006b3c	            0x85c0	                           test eax, eax	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4006b3e	           0xf94c0	                                 sete al	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4006b41	            0xeb11	                           jmp 0x4006b54	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4006b43	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4006b47	          0x4889c7	                            mov rdi, rax	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4006b4a	      0xe800000000	                          call 0x4006b4f	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4006b4f	            0x85c0	                           test eax, eax	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4006b51	           0xf94c0	                                 sete al	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4006b54	            0x84c0	                             test al, al	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4006b56	            0x742f	                            je 0x4006b87	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4006b58	    0xc70500000000	               mov dword [0x04006b62], 1	      3541	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12
0x4006b62	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x4006b66	      0xb900000000	                              mov ecx, 0	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x4006b6b	      0xba00000000	                              mov edx, 0	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x4006b70	      0xbe00000000	                              mov esi, 0	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x4006b75	          0x4889c7	                            mov rdi, rax	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x4006b78	      0xb800000000	                              mov eax, 0	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x4006b7d	      0xe800000000	                          call 0x4006b82	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x4006b82	      0xe9ff000000	                           jmp 0x4006c86	      3543	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12
0x4006b87	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3546	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_19
0x4006b8b	          0x4889c7	                            mov rdi, rax	      3546	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_19
0x4006b8e	      0xe800000000	                          call 0x4006b93	      3546	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_19
0x4006b93	            0x85c0	                           test eax, eax	      3546	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_19
0x4006b95	     0xf85eb000000	                           jne 0x4006c86	      3546	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_19
0x4006b9b	    0xc70500000000	               mov dword [0x04006ba5], 1	      3548	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13
0x4006ba5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3549	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_20
0x4006ba9	      0xb900000000	                              mov ecx, 0	      3549	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_20
0x4006bae	      0xba00000000	                              mov edx, 0	      3549	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_20
0x4006bb3	      0xbe00000000	                              mov esi, 0	      3549	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_20
0x4006bb8	          0x4889c7	                            mov rdi, rax	      3549	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_20
0x4006bbb	      0xb800000000	                              mov eax, 0	      3549	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_20
0x4006bc0	      0xe800000000	                          call 0x4006bc5	      3549	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_20
0x4006bc5	      0xe9bc000000	                           jmp 0x4006c86	      3550	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13
0x4006bca	      0xe800000000	                          call 0x4006bcf	      3555	objcopy.c	FUNCTION_41	ELSE_3	CALL_21
0x4006bcf	          0x8945c0	             mov dword [rbp - 0x40], eax	      3555	objcopy.c	FUNCTION_41	ELSE_3	CALL_21
0x4006bd2	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x4006bd6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x4006bda	      0xbe03000000	                              mov esi, 3	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x4006bdf	          0x4889c7	                            mov rdi, rax	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x4006be2	      0xe800000000	                          call 0x4006be7	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x4006be7	            0x85c0	                           test eax, eax	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x4006be9	            0x741b	                            je 0x4006c06	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x4006beb	        0x837dc00d	            cmp dword [rbp - 0x40], 0xd 	      3561	objcopy.c	FUNCTION_41	ELSE_3	IF_14	IF_15
0x4006bef	     0xf858ffeffff	                           jne 0x4006a84	      3561	objcopy.c	FUNCTION_41	ELSE_3	IF_14	IF_15
0x4006bf5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3562	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_23
0x4006bf9	          0x4889c7	                            mov rdi, rax	      3562	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_23
0x4006bfc	      0xe800000000	                          call 0x4006c01	      3562	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_23
0x4006c01	      0xe97efeffff	                           jmp 0x4006a84	      3563	objcopy.c	FUNCTION_41	ELSE_3	IF_14
0x4006c06	      0xe800000000	                          call 0x4006c0b	      3566	objcopy.c	FUNCTION_41	ELSE_3	CALL_24
0x4006c0b	          0x8945c4	             mov dword [rbp - 0x3c], eax	      3566	objcopy.c	FUNCTION_41	ELSE_3	CALL_24
0x4006c0e	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3568	objcopy.c	FUNCTION_41	ELSE_3	IF_16
0x4006c11	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      3568	objcopy.c	FUNCTION_41	ELSE_3	IF_16
0x4006c14	            0x740a	                            je 0x4006c20	      3568	objcopy.c	FUNCTION_41	ELSE_3	IF_16
0x4006c16	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3569	objcopy.c	FUNCTION_41	ELSE_3	CALL_25
0x4006c19	            0x89c7	                            mov edi, eax	      3569	objcopy.c	FUNCTION_41	ELSE_3	CALL_25
0x4006c1b	      0xe800000000	                          call 0x4006c20	      3569	objcopy.c	FUNCTION_41	ELSE_3	CALL_25
0x4006c20	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x4006c24	      0xb900000000	                              mov ecx, 0	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x4006c29	      0xba00000000	                              mov edx, 0	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x4006c2e	      0xbe00000000	                              mov esi, 0	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x4006c33	          0x4889c7	                            mov rdi, rax	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x4006c36	      0xb800000000	                              mov eax, 0	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x4006c3b	      0xe800000000	                          call 0x4006c40	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x4006c40	        0x837dc00d	            cmp dword [rbp - 0x40], 0xd 	      3573	objcopy.c	FUNCTION_41	ELSE_3	IF_17
0x4006c44	            0x7518	                           jne 0x4006c5e	      3573	objcopy.c	FUNCTION_41	ELSE_3	IF_17
0x4006c46	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3575	objcopy.c	FUNCTION_41	ELSE_3	IF_17	CALL_27
0x4006c4a	          0x4889c7	                            mov rdi, rax	      3575	objcopy.c	FUNCTION_41	ELSE_3	IF_17	CALL_27
0x4006c4d	      0xe800000000	                          call 0x4006c52	      3575	objcopy.c	FUNCTION_41	ELSE_3	IF_17	CALL_27
0x4006c52	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3576	objcopy.c	FUNCTION_41	ELSE_3	IF_17	CALL_28
0x4006c56	          0x4889c7	                            mov rdi, rax	      3576	objcopy.c	FUNCTION_41	ELSE_3	IF_17	CALL_28
0x4006c59	      0xe800000000	                          call 0x4006c5e	      3576	objcopy.c	FUNCTION_41	ELSE_3	IF_17	CALL_28
0x4006c5e	        0x837dc40d	            cmp dword [rbp - 0x3c], 0xd 	      3578	objcopy.c	FUNCTION_41	ELSE_3	IF_18
0x4006c62	            0x7518	                           jne 0x4006c7c	      3578	objcopy.c	FUNCTION_41	ELSE_3	IF_18
0x4006c64	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3580	objcopy.c	FUNCTION_41	ELSE_3	IF_18	CALL_29
0x4006c68	          0x4889c7	                            mov rdi, rax	      3580	objcopy.c	FUNCTION_41	ELSE_3	IF_18	CALL_29
0x4006c6b	      0xe800000000	                          call 0x4006c70	      3580	objcopy.c	FUNCTION_41	ELSE_3	IF_18	CALL_29
0x4006c70	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3581	objcopy.c	FUNCTION_41	ELSE_3	IF_18	CALL_30
0x4006c74	          0x4889c7	                            mov rdi, rax	      3581	objcopy.c	FUNCTION_41	ELSE_3	IF_18	CALL_30
0x4006c77	      0xe800000000	                          call 0x4006c7c	      3581	objcopy.c	FUNCTION_41	ELSE_3	IF_18	CALL_30
0x4006c7c	    0xc70500000000	               mov dword [0x04006c86], 1	      3584	objcopy.c	FUNCTION_41	ELSE_3
0x4006c86	        0x488b45f8	                mov rax, qword [rbp - 8]	      3586	objcopy.c	FUNCTION_41
0x4006c8a	    0x644833042528	                xor rax, qword fs:[0x28]	      3586	objcopy.c	FUNCTION_41
0x4006c93	            0x7405	                            je 0x4006c9a	      3586	objcopy.c	FUNCTION_41
0x4006c95	      0xe800000000	                          call 0x4006c9a	      3586	objcopy.c	FUNCTION_41
0x4006c9a	              0xc9	                                   leave	      3586	objcopy.c	FUNCTION_41
0x4006c9b	              0xc3	                                     ret	      3586	objcopy.c	FUNCTION_41
section_add_load_file	IF,3:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,1:CALL,12	94
0x4008dcf	              0x55	                                push rbp	      4645	objcopy.c	FUNCTION_61
0x4008dd0	          0x4889e5	                            mov rbp, rsp	      4645	objcopy.c	FUNCTION_61
0x4008dd3	            0x4154	                                push r12	      4645	objcopy.c	FUNCTION_61
0x4008dd5	              0x53	                                push rbx	      4645	objcopy.c	FUNCTION_61
0x4008dd6	        0x4883ec30	                           sub rsp, 0x30	      4645	objcopy.c	FUNCTION_61
0x4008dda	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      4645	objcopy.c	FUNCTION_61
0x4008dde	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4653	objcopy.c	FUNCTION_61	CALL_1
0x4008de2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4653	objcopy.c	FUNCTION_61	CALL_1
0x4008de6	      0xbe00000000	                              mov esi, 0	      4653	objcopy.c	FUNCTION_61	CALL_1
0x4008deb	          0x4889c7	                            mov rdi, rax	      4653	objcopy.c	FUNCTION_61	CALL_1
0x4008dee	      0xe800000000	                          call 0x4008df3	      4653	objcopy.c	FUNCTION_61	CALL_1
0x4008df3	        0x488945e0	             mov qword [rbp - 0x20], rax	      4653	objcopy.c	FUNCTION_61	CALL_1
0x4008df7	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4654	objcopy.c	FUNCTION_61	IF_1
0x4008dfc	            0x7536	                           jne 0x4008e34	      4654	objcopy.c	FUNCTION_61	IF_1
0x4008dfe	      0xe800000000	                          call 0x4008e03	      4656	objcopy.c	FUNCTION_61	CALL_4
0x4008e03	            0x8b00	                    mov eax, dword [rax]	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4008e05	            0x89c7	                            mov edi, eax	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4008e07	      0xe800000000	                          call 0x4008e0c	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4008e0c	          0x4989c4	                            mov r12, rax	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4008e0f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4008e13	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4008e17	      0xbf00000000	                              mov edi, 0	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4008e1c	      0xe800000000	                          call 0x4008e21	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4008e21	          0x4c89e2	                            mov rdx, r12	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4008e24	          0x4889de	                            mov rsi, rbx	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4008e27	          0x4889c7	                            mov rdi, rax	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4008e2a	      0xb800000000	                              mov eax, 0	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4008e2f	      0xe800000000	                          call 0x4008e34	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4008e34	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      4658	objcopy.c	FUNCTION_61
0x4008e3c	    0x48c745d80010	          mov qword [rbp - 0x28], 0x1000	      4659	objcopy.c	FUNCTION_61
0x4008e44	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4660	objcopy.c	FUNCTION_61	CALL_5
0x4008e48	          0x4889c7	                            mov rdi, rax	      4660	objcopy.c	FUNCTION_61	CALL_5
0x4008e4b	      0xe800000000	                          call 0x4008e50	      4660	objcopy.c	FUNCTION_61	CALL_5
0x4008e50	          0x4889c2	                            mov rdx, rax	      4660	objcopy.c	FUNCTION_61	CALL_5
0x4008e53	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4660	objcopy.c	FUNCTION_61	CALL_5
0x4008e57	        0x48895020	             mov qword [rax + 0x20], rdx	      4660	objcopy.c	FUNCTION_61	CALL_5
0x4008e5b	      0xe99a000000	                           jmp 0x4008efa	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4008e60	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4665	objcopy.c	FUNCTION_61	WHILE_1	IF_2
0x4008e64	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      4665	objcopy.c	FUNCTION_61	WHILE_1	IF_2
0x4008e68	            0x7526	                           jne 0x4008e90	      4665	objcopy.c	FUNCTION_61	WHILE_1	IF_2
0x4008e6a	        0x48d165d8	               shl qword [rbp - 0x28], 1	      4667	objcopy.c	FUNCTION_61	WHILE_1	IF_2
0x4008e6e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4008e72	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4008e76	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4008e7a	          0x4889d6	                            mov rsi, rdx	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4008e7d	          0x4889c7	                            mov rdi, rax	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4008e80	      0xe800000000	                          call 0x4008e85	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4008e85	          0x4889c2	                            mov rdx, rax	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4008e88	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4008e8c	        0x48895020	             mov qword [rax + 0x20], rdx	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4008e90	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4671	objcopy.c	FUNCTION_61	WHILE_1	CALL_8
0x4008e94	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      4671	objcopy.c	FUNCTION_61	WHILE_1	CALL_8
0x4008e98	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4671	objcopy.c	FUNCTION_61	WHILE_1	CALL_8
0x4008e9c	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      4671	objcopy.c	FUNCTION_61	WHILE_1	CALL_8
0x4008ea0	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      4671	objcopy.c	FUNCTION_61	WHILE_1	CALL_8
0x4008ea4	        0x488d3c11	                    lea rdi, [rcx + rdx]	      4671	objcopy.c	FUNCTION_61	WHILE_1	CALL_8
0x4008ea8	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4671	objcopy.c	FUNCTION_61	WHILE_1	CALL_8
0x4008eac	          0x4889d1	                            mov rcx, rdx	      4671	objcopy.c	FUNCTION_61	WHILE_1	CALL_8
0x4008eaf	          0x4889c2	                            mov rdx, rax	      4671	objcopy.c	FUNCTION_61	WHILE_1	CALL_8
0x4008eb2	      0xbe01000000	                              mov esi, 1	      4671	objcopy.c	FUNCTION_61	WHILE_1	CALL_8
0x4008eb7	      0xe800000000	                          call 0x4008ebc	      4671	objcopy.c	FUNCTION_61	WHILE_1	CALL_8
0x4008ebc	        0x488945e8	             mov qword [rbp - 0x18], rax	      4671	objcopy.c	FUNCTION_61	WHILE_1	CALL_8
0x4008ec0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x4008ec4	          0x4889c7	                            mov rdi, rax	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x4008ec7	      0xe800000000	                          call 0x4008ecc	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x4008ecc	            0x85c0	                           test eax, eax	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x4008ece	            0x7422	                            je 0x4008ef2	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x4008ed0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4008ed4	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4008ed8	      0xbf00000000	                              mov edi, 0	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4008edd	      0xe800000000	                          call 0x4008ee2	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4008ee2	          0x4889de	                            mov rsi, rbx	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4008ee5	          0x4889c7	                            mov rdi, rax	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4008ee8	      0xb800000000	                              mov eax, 0	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4008eed	      0xe800000000	                          call 0x4008ef2	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4008ef2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4675	objcopy.c	FUNCTION_61	WHILE_1
0x4008ef6	        0x480145d0	            add qword [rbp - 0x30], rax 	      4675	objcopy.c	FUNCTION_61	WHILE_1
0x4008efa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4008efe	          0x4889c7	                            mov rdi, rax	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4008f01	      0xe800000000	                          call 0x4008f06	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4008f06	            0x85c0	                           test eax, eax	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4008f08	     0xf8452ffffff	                            je 0x4008e60	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4008f0e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4678	objcopy.c	FUNCTION_61
0x4008f12	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      4678	objcopy.c	FUNCTION_61
0x4008f16	        0x48895018	             mov qword [rax + 0x18], rdx	      4678	objcopy.c	FUNCTION_61
0x4008f1a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4680	objcopy.c	FUNCTION_61	CALL_12
0x4008f1e	          0x4889c7	                            mov rdi, rax	      4680	objcopy.c	FUNCTION_61	CALL_12
0x4008f21	      0xe800000000	                          call 0x4008f26	      4680	objcopy.c	FUNCTION_61	CALL_12
0x4008f26	              0x90	                                     nop	      4681	objcopy.c	FUNCTION_61
0x4008f27	        0x4883c430	                           add rsp, 0x30	      4681	objcopy.c	FUNCTION_61
0x4008f2b	              0x5b	                                 pop rbx	      4681	objcopy.c	FUNCTION_61
0x4008f2c	            0x415c	                                 pop r12	      4681	objcopy.c	FUNCTION_61
0x4008f2e	              0x5d	                                 pop rbp	      4681	objcopy.c	FUNCTION_61
0x4008f2f	              0xc3	                                     ret	      4681	objcopy.c	FUNCTION_61
bfd_set_section_alignment	IF,0:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:WHILE,0:CALL,0	11
0x4000081	              0x55	                                push rbp	      1695	bfd.h	FUNCTION_66
0x4000082	          0x4889e5	                            mov rbp, rsp	      1695	bfd.h	FUNCTION_66
0x4000085	        0x48897df8	                mov qword [rbp - 8], rdi	      1695	bfd.h	FUNCTION_66
0x4000089	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1695	bfd.h	FUNCTION_66
0x400008d	          0x8955ec	             mov dword [rbp - 0x14], edx	      1695	bfd.h	FUNCTION_66
0x4000090	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1696	bfd.h	FUNCTION_66
0x4000094	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1696	bfd.h	FUNCTION_66
0x4000097	          0x895070	             mov dword [rax + 0x70], edx	      1696	bfd.h	FUNCTION_66
0x400009a	      0xb801000000	                              mov eax, 1	      1697	bfd.h	FUNCTION_66
0x400009f	              0x5d	                                 pop rbp	      1698	bfd.h	FUNCTION_66
0x40000a0	              0xc3	                                     ret	      1698	bfd.h	FUNCTION_66
