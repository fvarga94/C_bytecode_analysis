ar_addlib	IF,2:DO,0:functions,0:SWITCH,0:FOR,0:CALL,5:ELSE,1:WHILE,0	38
0x400055e	              0x55	                                push rbp	       227	arsup.c	FUNCTION_8
0x400055f	          0x4889e5	                            mov rbp, rsp	       227	arsup.c	FUNCTION_8
0x4000562	              0x53	                                push rbx	       227	arsup.c	FUNCTION_8
0x4000563	        0x4883ec28	                           sub rsp, 0x28	       227	arsup.c	FUNCTION_8
0x4000567	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       227	arsup.c	FUNCTION_8
0x400056b	        0x488975d0	             mov qword [rbp - 0x30], rsi	       227	arsup.c	FUNCTION_8
0x400056f	    0x488b05000000	            mov rax, qword [0x04000576] 	       228	arsup.c	FUNCTION_8	IF_1
0x4000576	          0x4885c0	                           test rax, rax	       228	arsup.c	FUNCTION_8	IF_1
0x4000579	            0x7535	                           jne 0x40005b0	       228	arsup.c	FUNCTION_8	IF_1
0x400057b	    0x488b1d000000	            mov rbx, qword [0x04000582] 	       230	arsup.c	FUNCTION_8	IF_1	CALL_2
0x4000582	      0xbf00000000	                              mov edi, 0	       230	arsup.c	FUNCTION_8	IF_1	CALL_2
0x4000587	      0xe800000000	                          call 0x400058c	       230	arsup.c	FUNCTION_8	IF_1	CALL_2
0x400058c	          0x4889c1	                            mov rcx, rax	       230	arsup.c	FUNCTION_8	IF_1	CALL_2
0x400058f	    0x488b05000000	            mov rax, qword [0x04000596] 	       230	arsup.c	FUNCTION_8	IF_1	CALL_2
0x4000596	          0x4889da	                            mov rdx, rbx	       230	arsup.c	FUNCTION_8	IF_1	CALL_2
0x4000599	          0x4889ce	                            mov rsi, rcx	       230	arsup.c	FUNCTION_8	IF_1	CALL_2
0x400059c	          0x4889c7	                            mov rdi, rax	       230	arsup.c	FUNCTION_8	IF_1	CALL_2
0x400059f	      0xb800000000	                              mov eax, 0	       230	arsup.c	FUNCTION_8	IF_1	CALL_2
0x40005a4	      0xe800000000	                          call 0x40005a9	       230	arsup.c	FUNCTION_8	IF_1	CALL_2
0x40005a9	      0xe800000000	                          call 0x40005ae	       231	arsup.c	FUNCTION_8	IF_1	CALL_3
0x40005ae	            0xeb31	                           jmp 0x40005e1	       243	arsup.c	FUNCTION_8
0x40005b0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       237	arsup.c	FUNCTION_8	ELSE_1	CALL_4
0x40005b4	      0xbe00000000	                              mov esi, 0	       237	arsup.c	FUNCTION_8	ELSE_1	CALL_4
0x40005b9	          0x4889c7	                            mov rdi, rax	       237	arsup.c	FUNCTION_8	ELSE_1	CALL_4
0x40005bc	      0xe800000000	                          call 0x40005c1	       237	arsup.c	FUNCTION_8	ELSE_1	CALL_4
0x40005c1	        0x488945e8	             mov qword [rbp - 0x18], rax	       237	arsup.c	FUNCTION_8	ELSE_1	CALL_4
0x40005c5	      0x48837de800	               cmp qword [rbp - 0x18], 0	       238	arsup.c	FUNCTION_8	ELSE_1	IF_2
0x40005ca	            0x7415	                            je 0x40005e1	       238	arsup.c	FUNCTION_8	ELSE_1	IF_2
0x40005cc	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       239	arsup.c	FUNCTION_8	ELSE_1	CALL_5
0x40005d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       239	arsup.c	FUNCTION_8	ELSE_1	CALL_5
0x40005d4	      0xbe00000000	                              mov esi, 0	       239	arsup.c	FUNCTION_8	ELSE_1	CALL_5
0x40005d9	          0x4889c7	                            mov rdi, rax	       239	arsup.c	FUNCTION_8	ELSE_1	CALL_5
0x40005dc	      0xe85ffaffff	                  call sym.map_over_list	       239	arsup.c	FUNCTION_8	ELSE_1	CALL_5
0x40005e1	              0x90	                                     nop	       243	arsup.c	FUNCTION_8
0x40005e2	        0x4883c428	                           add rsp, 0x28	       243	arsup.c	FUNCTION_8
0x40005e6	              0x5b	                                 pop rbx	       243	arsup.c	FUNCTION_8
0x40005e7	              0x5d	                                 pop rbp	       243	arsup.c	FUNCTION_8
0x40005e8	              0xc3	                                     ret	       243	arsup.c	FUNCTION_8
ar_addlib_doer	IF,1:DO,0:functions,0:SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0	20
0x4000507	              0x55	                                push rbp	       216	arsup.c	FUNCTION_7
0x4000508	          0x4889e5	                            mov rbp, rsp	       216	arsup.c	FUNCTION_7
0x400050b	        0x48897df8	                mov qword [rbp - 8], rdi	       216	arsup.c	FUNCTION_7
0x400050f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       216	arsup.c	FUNCTION_7
0x4000513	      0x48837df000	               cmp qword [rbp - 0x10], 0	       218	arsup.c	FUNCTION_7	IF_1
0x4000518	            0x7416	                            je 0x4000530	       218	arsup.c	FUNCTION_7	IF_1
0x400051a	        0x488b45f8	                mov rax, qword [rbp - 8]	       219	arsup.c	FUNCTION_7	IF_1
0x400051e	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	       219	arsup.c	FUNCTION_7	IF_1
0x4000525	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       219	arsup.c	FUNCTION_7	IF_1
0x4000529	    0x488990d80000	             mov qword [rax + 0xd8], rdx	       219	arsup.c	FUNCTION_7	IF_1
0x4000530	    0x488b05000000	            mov rax, qword [0x04000537] 	       221	arsup.c	FUNCTION_7
0x4000537	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	       221	arsup.c	FUNCTION_7
0x400053e	        0x488b45f8	                mov rax, qword [rbp - 8]	       221	arsup.c	FUNCTION_7
0x4000542	    0x488990d80000	             mov qword [rax + 0xd8], rdx	       221	arsup.c	FUNCTION_7
0x4000549	    0x488b05000000	            mov rax, qword [0x04000550] 	       222	arsup.c	FUNCTION_7
0x4000550	        0x488b55f8	                mov rdx, qword [rbp - 8]	       222	arsup.c	FUNCTION_7
0x4000554	    0x488990e00000	             mov qword [rax + 0xe0], rdx	       222	arsup.c	FUNCTION_7
0x400055b	              0x90	                                     nop	       223	arsup.c	FUNCTION_7
0x400055c	              0x5d	                                 pop rbp	       223	arsup.c	FUNCTION_7
0x400055d	              0xc3	                                     ret	       223	arsup.c	FUNCTION_7
ar_end	IF,1:DO,0:functions,0:SWITCH,0:FOR,0:CALL,3:ELSE,0:WHILE,0	15
0x4000c18	              0x55	                                push rbp	       444	arsup.c	FUNCTION_15
0x4000c19	          0x4889e5	                            mov rbp, rsp	       444	arsup.c	FUNCTION_15
0x4000c1c	    0x488b05000000	            mov rax, qword [0x04000c23] 	       445	arsup.c	FUNCTION_15	IF_1
0x4000c23	          0x4885c0	                           test rax, rax	       445	arsup.c	FUNCTION_15	IF_1
0x4000c26	            0x7421	                            je 0x4000c49	       445	arsup.c	FUNCTION_15	IF_1
0x4000c28	    0x488b05000000	            mov rax, qword [0x04000c2f] 	       447	arsup.c	FUNCTION_15	IF_1	CALL_1
0x4000c2f	          0x4889c7	                            mov rdi, rax	       447	arsup.c	FUNCTION_15	IF_1	CALL_1
0x4000c32	      0xe800000000	                          call 0x4000c37	       447	arsup.c	FUNCTION_15	IF_1	CALL_1
0x4000c37	    0x488b05000000	            mov rax, qword [0x04000c3e] 	       448	arsup.c	FUNCTION_15	IF_1	CALL_3
0x4000c3e	          0x488b00	                    mov rax, qword [rax]	       448	arsup.c	FUNCTION_15	IF_1	CALL_3
0x4000c41	          0x4889c7	                            mov rdi, rax	       448	arsup.c	FUNCTION_15	IF_1	CALL_3
0x4000c44	      0xe800000000	                          call 0x4000c49	       448	arsup.c	FUNCTION_15	IF_1	CALL_3
0x4000c49	              0x90	                                     nop	       450	arsup.c	FUNCTION_15
0x4000c4a	              0x5d	                                 pop rbp	       450	arsup.c	FUNCTION_15
0x4000c4b	              0xc3	                                     ret	       450	arsup.c	FUNCTION_15
ar_directory_doer	IF,0:DO,0:functions,0:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0	14
0x4000184	              0x55	                                push rbp	        98	arsup.c	FUNCTION_2
0x4000185	          0x4889e5	                            mov rbp, rsp	        98	arsup.c	FUNCTION_2
0x4000188	        0x4883ec10	                           sub rsp, 0x10	        98	arsup.c	FUNCTION_2
0x400018c	        0x48897df8	                mov qword [rbp - 8], rdi	        98	arsup.c	FUNCTION_2
0x4000190	        0x488975f0	             mov qword [rbp - 0x10], rsi	        98	arsup.c	FUNCTION_2
0x4000194	    0x8b1500000000	            mov edx, dword [0x0400019a] 	        99	arsup.c	FUNCTION_2	CALL_1
0x400019a	    0x488b05000000	            mov rax, qword [0x040001a1] 	        99	arsup.c	FUNCTION_2	CALL_1
0x40001a1	        0x488b75f8	                mov rsi, qword [rbp - 8]	        99	arsup.c	FUNCTION_2	CALL_1
0x40001a5	      0xb900000000	                              mov ecx, 0	        99	arsup.c	FUNCTION_2	CALL_1
0x40001aa	          0x4889c7	                            mov rdi, rax	        99	arsup.c	FUNCTION_2	CALL_1
0x40001ad	      0xe800000000	                          call 0x40001b2	        99	arsup.c	FUNCTION_2	CALL_1
0x40001b2	              0x90	                                     nop	       100	arsup.c	FUNCTION_2
0x40001b3	              0xc9	                                   leave	       100	arsup.c	FUNCTION_2
0x40001b4	              0xc3	                                     ret	       100	arsup.c	FUNCTION_2
ar_clear	IF,1:DO,0:functions,0:SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0	10
0x40006e7	              0x55	                                push rbp	       283	arsup.c	FUNCTION_10
0x40006e8	          0x4889e5	                            mov rbp, rsp	       283	arsup.c	FUNCTION_10
0x40006eb	    0x488b05000000	            mov rax, qword [0x040006f2] 	       284	arsup.c	FUNCTION_10	IF_1
0x40006f2	          0x4885c0	                           test rax, rax	       284	arsup.c	FUNCTION_10	IF_1
0x40006f5	            0x7412	                            je 0x4000709	       284	arsup.c	FUNCTION_10	IF_1
0x40006f7	    0x488b05000000	            mov rax, qword [0x040006fe] 	       285	arsup.c	FUNCTION_10	IF_1
0x40006fe	    0x48c780e00000	               mov qword [rax + 0xe0], 0	       285	arsup.c	FUNCTION_10	IF_1
0x4000709	              0x90	                                     nop	       286	arsup.c	FUNCTION_10
0x400070a	              0x5d	                                 pop rbp	       286	arsup.c	FUNCTION_10
0x400070b	              0xc3	                                     ret	       286	arsup.c	FUNCTION_10
ar_replace	IF,5:DO,0:functions,0:SWITCH,0:FOR,0:CALL,14:ELSE,4:WHILE,2	127
0x4000935	              0x55	                                push rbp	       355	arsup.c	FUNCTION_13
0x4000936	          0x4889e5	                            mov rbp, rsp	       355	arsup.c	FUNCTION_13
0x4000939	            0x4154	                                push r12	       355	arsup.c	FUNCTION_13
0x400093b	              0x53	                                push rbx	       355	arsup.c	FUNCTION_13
0x400093c	        0x4883ec40	                           sub rsp, 0x40	       355	arsup.c	FUNCTION_13
0x4000940	        0x48897db8	             mov qword [rbp - 0x48], rdi	       355	arsup.c	FUNCTION_13
0x4000944	    0x488b05000000	            mov rax, qword [0x0400094b] 	       356	arsup.c	FUNCTION_13	IF_1
0x400094b	          0x4885c0	                           test rax, rax	       356	arsup.c	FUNCTION_13	IF_1
0x400094e	     0xf85e6010000	                           jne 0x4000b3a	       356	arsup.c	FUNCTION_13	IF_1
0x4000954	    0x488b1d000000	            mov rbx, qword [0x0400095b] 	       358	arsup.c	FUNCTION_13	IF_1	CALL_2
0x400095b	      0xbf00000000	                              mov edi, 0	       358	arsup.c	FUNCTION_13	IF_1	CALL_2
0x4000960	      0xe800000000	                          call 0x4000965	       358	arsup.c	FUNCTION_13	IF_1	CALL_2
0x4000965	          0x4889c1	                            mov rcx, rax	       358	arsup.c	FUNCTION_13	IF_1	CALL_2
0x4000968	    0x488b05000000	            mov rax, qword [0x0400096f] 	       358	arsup.c	FUNCTION_13	IF_1	CALL_2
0x400096f	          0x4889da	                            mov rdx, rbx	       358	arsup.c	FUNCTION_13	IF_1	CALL_2
0x4000972	          0x4889ce	                            mov rsi, rcx	       358	arsup.c	FUNCTION_13	IF_1	CALL_2
0x4000975	          0x4889c7	                            mov rdi, rax	       358	arsup.c	FUNCTION_13	IF_1	CALL_2
0x4000978	      0xb800000000	                              mov eax, 0	       358	arsup.c	FUNCTION_13	IF_1	CALL_2
0x400097d	      0xe800000000	                          call 0x4000982	       358	arsup.c	FUNCTION_13	IF_1	CALL_2
0x4000982	      0xe800000000	                          call 0x4000987	       359	arsup.c	FUNCTION_13	IF_1	CALL_3
0x4000987	      0xe9b9010000	                           jmp 0x4000b45	       416	arsup.c	FUNCTION_13	ELSE_4
0x400098c	    0x488b05000000	            mov rax, qword [0x04000993] 	       366	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x4000993	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       366	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x400099a	        0x488945d0	             mov qword [rbp - 0x30], rax	       366	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x400099e	    0x488b05000000	            mov rax, qword [0x040009a5] 	       367	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x40009a5	    0x4805e0000000	                           add rax, 0xe0	       367	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x40009ab	        0x488945d8	             mov qword [rbp - 0x28], rax	       367	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x40009af	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       368	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x40009b6	      0xe9c3000000	                           jmp 0x4000a7e	       370	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2
0x40009bb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       372	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x40009bf	          0x488b10	                    mov rdx, qword [rax]	       372	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x40009c2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       372	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x40009c6	          0x488b00	                    mov rax, qword [rax]	       372	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x40009c9	          0x4889d6	                            mov rsi, rdx	       372	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x40009cc	          0x4889c7	                            mov rdi, rax	       372	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x40009cf	      0xe800000000	                          call 0x40009d4	       372	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x40009d4	            0x85c0	                           test eax, eax	       372	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x40009d6	     0xf8585000000	                           jne 0x4000a61	       372	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x40009dc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       375	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_5
0x40009e0	          0x488b00	                    mov rax, qword [rax]	       375	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_5
0x40009e3	      0xbe00000000	                              mov esi, 0	       375	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_5
0x40009e8	          0x4889c7	                            mov rdi, rax	       375	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_5
0x40009eb	      0xe800000000	                          call 0x40009f0	       375	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_5
0x40009f0	        0x488945e0	             mov qword [rbp - 0x20], rax	       375	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_5
0x40009f4	      0x48837de000	               cmp qword [rbp - 0x20], 0	       377	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3
0x40009f9	            0x753c	                           jne 0x4000a37	       377	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3
0x40009fb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_7
0x40009ff	          0x4c8b20	                    mov r12, qword [rax]	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_7
0x4000a02	    0x488b1d000000	            mov rbx, qword [0x04000a09] 	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_7
0x4000a09	      0xbf00000000	                              mov edi, 0	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_7
0x4000a0e	      0xe800000000	                          call 0x4000a13	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_7
0x4000a13	          0x4889c6	                            mov rsi, rax	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_7
0x4000a16	    0x488b05000000	            mov rax, qword [0x04000a1d] 	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_7
0x4000a1d	          0x4c89e1	                            mov rcx, r12	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_7
0x4000a20	          0x4889da	                            mov rdx, rbx	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_7
0x4000a23	          0x4889c7	                            mov rdi, rax	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_7
0x4000a26	      0xb800000000	                              mov eax, 0	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_7
0x4000a2b	      0xe800000000	                          call 0x4000a30	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_7
0x4000a30	      0xe800000000	                          call 0x4000a35	       381	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_8
0x4000a35	            0xeb38	                           jmp 0x4000a6f	       381	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_8
0x4000a37	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       385	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	ELSE_2
0x4000a3b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       385	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	ELSE_2
0x4000a3f	          0x488910	                    mov qword [rax], rdx	       385	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	ELSE_2
0x4000a42	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       386	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	ELSE_2
0x4000a46	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	       386	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	ELSE_2
0x4000a4d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       386	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	ELSE_2
0x4000a51	    0x488990d80000	             mov qword [rax + 0xd8], rdx	       386	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	ELSE_2
0x4000a58	    0xc745cc010000	               mov dword [rbp - 0x34], 1	       387	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	ELSE_2
0x4000a5f	            0xeb0e	                           jmp 0x4000a6f	       387	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	ELSE_2
0x4000a61	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       392	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	ELSE_3
0x4000a65	    0x4805d8000000	                           add rax, 0xd8	       392	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	ELSE_3
0x4000a6b	        0x488945d8	             mov qword [rbp - 0x28], rax	       392	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	ELSE_3
0x4000a6f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       394	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2
0x4000a73	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       394	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2
0x4000a7a	        0x488945d0	             mov qword [rbp - 0x30], rax	       394	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2
0x4000a7e	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       370	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2
0x4000a83	     0xf8532ffffff	                           jne 0x40009bb	       370	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2
0x4000a89	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       397	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4
0x4000a8d	     0xf859b000000	                           jne 0x4000b2e	       397	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4
0x4000a93	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       399	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_9
0x4000a97	          0x488b00	                    mov rax, qword [rax]	       399	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_9
0x4000a9a	      0xbe00000000	                              mov esi, 0	       399	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_9
0x4000a9f	          0x4889c7	                            mov rdi, rax	       399	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_9
0x4000aa2	      0xe800000000	                          call 0x4000aa7	       399	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_9
0x4000aa7	        0x488945e8	             mov qword [rbp - 0x18], rax	       399	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_9
0x4000aab	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_11
0x4000aaf	          0x4c8b20	                    mov r12, qword [rax]	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_11
0x4000ab2	    0x488b1d000000	            mov rbx, qword [0x04000ab9] 	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_11
0x4000ab9	      0xbf00000000	                              mov edi, 0	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_11
0x4000abe	      0xe800000000	                          call 0x4000ac3	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_11
0x4000ac3	          0x4889c6	                            mov rsi, rax	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_11
0x4000ac6	    0x488b05000000	            mov rax, qword [0x04000acd] 	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_11
0x4000acd	          0x4c89e1	                            mov rcx, r12	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_11
0x4000ad0	          0x4889da	                            mov rdx, rbx	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_11
0x4000ad3	          0x4889c7	                            mov rdi, rax	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_11
0x4000ad6	      0xb800000000	                              mov eax, 0	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_11
0x4000adb	      0xe800000000	                          call 0x4000ae0	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_11
0x4000ae0	      0x48837de800	               cmp qword [rbp - 0x18], 0	       403	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5
0x4000ae5	            0x753c	                           jne 0x4000b23	       403	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5
0x4000ae7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_13
0x4000aeb	          0x4c8b20	                    mov r12, qword [rax]	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_13
0x4000aee	    0x488b1d000000	            mov rbx, qword [0x04000af5] 	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_13
0x4000af5	      0xbf00000000	                              mov edi, 0	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_13
0x4000afa	      0xe800000000	                          call 0x4000aff	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_13
0x4000aff	          0x4889c6	                            mov rsi, rax	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_13
0x4000b02	    0x488b05000000	            mov rax, qword [0x04000b09] 	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_13
0x4000b09	          0x4c89e1	                            mov rcx, r12	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_13
0x4000b0c	          0x4889da	                            mov rdx, rbx	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_13
0x4000b0f	          0x4889c7	                            mov rdi, rax	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_13
0x4000b12	      0xb800000000	                              mov eax, 0	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_13
0x4000b17	      0xe800000000	                          call 0x4000b1c	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_13
0x4000b1c	      0xe800000000	                          call 0x4000b21	       407	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_14
0x4000b21	            0xeb0b	                           jmp 0x4000b2e	       407	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_14
0x4000b23	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       410	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	ELSE_4
0x4000b27	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       410	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	ELSE_4
0x4000b2b	          0x488910	                    mov qword [rax], rdx	       410	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	ELSE_4
0x4000b2e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       413	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	ELSE_4
0x4000b32	        0x488b4008	                mov rax, qword [rax + 8]	       413	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	ELSE_4
0x4000b36	        0x488945b8	             mov qword [rbp - 0x48], rax	       413	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	ELSE_4
0x4000b3a	      0x48837db800	               cmp qword [rbp - 0x48], 0	       363	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x4000b3f	     0xf8547feffff	                           jne 0x400098c	       363	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x4000b45	              0x90	                                     nop	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000b46	        0x4883c440	                           add rsp, 0x40	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000b4a	              0x5b	                                 pop rbx	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000b4b	            0x415c	                                 pop r12	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000b4d	              0x5d	                                 pop rbp	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000b4e	              0xc3	                                     ret	       416	arsup.c	FUNCTION_13	ELSE_4
maybequit	IF,1:DO,0:functions,0:SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0	10
0x40002c0	              0x55	                                push rbp	       143	arsup.c	FUNCTION_5
0x40002c1	          0x4889e5	                            mov rbp, rsp	       143	arsup.c	FUNCTION_5
0x40002c4	    0x8b0500000000	            mov eax, dword [0x040002ca] 	       144	arsup.c	FUNCTION_5	IF_1
0x40002ca	            0x85c0	                           test eax, eax	       144	arsup.c	FUNCTION_5	IF_1
0x40002cc	            0x750a	                           jne 0x40002d8	       144	arsup.c	FUNCTION_5	IF_1
0x40002ce	      0xbf09000000	                              mov edi, 9	       145	arsup.c	FUNCTION_5	CALL_1
0x40002d3	      0xe800000000	                          call 0x40002d8	       145	arsup.c	FUNCTION_5	CALL_1
0x40002d8	              0x90	                                     nop	       146	arsup.c	FUNCTION_5
0x40002d9	              0x5d	                                 pop rbp	       146	arsup.c	FUNCTION_5
0x40002da	              0xc3	                                     ret	       146	arsup.c	FUNCTION_5
map_over_list	IF,3:DO,0:functions,0:SWITCH,0:FOR,2:CALL,5:ELSE,1:WHILE,1	86
0x4000040	              0x55	                                push rbp	        49	arsup.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        49	arsup.c	FUNCTION_1
0x4000044	              0x53	                                push rbx	        49	arsup.c	FUNCTION_1
0x4000045	        0x4883ec58	                           sub rsp, 0x58	        49	arsup.c	FUNCTION_1
0x4000049	        0x48897db8	             mov qword [rbp - 0x48], rdi	        49	arsup.c	FUNCTION_1
0x400004d	        0x488975b0	             mov qword [rbp - 0x50], rsi	        49	arsup.c	FUNCTION_1
0x4000051	        0x488955a8	             mov qword [rbp - 0x58], rdx	        49	arsup.c	FUNCTION_1
0x4000055	      0x48837da800	               cmp qword [rbp - 0x58], 0	        52	arsup.c	FUNCTION_1	IF_1
0x400005a	            0x7546	                           jne 0x40000a2	        52	arsup.c	FUNCTION_1	IF_1
0x400005c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        56	arsup.c	FUNCTION_1	IF_1
0x4000060	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	        56	arsup.c	FUNCTION_1	IF_1
0x4000067	        0x488945d0	             mov qword [rbp - 0x30], rax	        56	arsup.c	FUNCTION_1	IF_1
0x400006b	            0xeb29	                           jmp 0x4000096	        57	arsup.c	FUNCTION_1	IF_1	WHILE_1
0x400006d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        59	arsup.c	FUNCTION_1	IF_1	WHILE_1
0x4000071	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	        59	arsup.c	FUNCTION_1	IF_1	WHILE_1
0x4000078	        0x488945e8	             mov qword [rbp - 0x18], rax	        59	arsup.c	FUNCTION_1	IF_1	WHILE_1
0x400007c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        60	arsup.c	FUNCTION_1	IF_1	WHILE_1	CALL_1
0x4000080	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        60	arsup.c	FUNCTION_1	IF_1	WHILE_1	CALL_1
0x4000084	      0xbe00000000	                              mov esi, 0	        60	arsup.c	FUNCTION_1	IF_1	WHILE_1	CALL_1
0x4000089	          0x4889d7	                            mov rdi, rdx	        60	arsup.c	FUNCTION_1	IF_1	WHILE_1	CALL_1
0x400008c	            0xffd0	                                call rax	        60	arsup.c	FUNCTION_1	IF_1	WHILE_1	CALL_1
0x400008e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        61	arsup.c	FUNCTION_1	IF_1	WHILE_1
0x4000092	        0x488945d0	             mov qword [rbp - 0x30], rax	        61	arsup.c	FUNCTION_1	IF_1	WHILE_1
0x4000096	      0x48837dd000	               cmp qword [rbp - 0x30], 0	        57	arsup.c	FUNCTION_1	IF_1	WHILE_1
0x400009b	            0x75d0	                           jne 0x400006d	        57	arsup.c	FUNCTION_1	IF_1	WHILE_1
0x400009d	      0xe9da000000	                           jmp 0x400017c	        92	arsup.c	FUNCTION_1
0x40000a2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        73	arsup.c	FUNCTION_1	ELSE_1	FOR_1
0x40000a6	        0x488945d8	             mov qword [rbp - 0x28], rax	        73	arsup.c	FUNCTION_1	ELSE_1	FOR_1
0x40000aa	      0xe9c2000000	                           jmp 0x4000171	        73	arsup.c	FUNCTION_1	ELSE_1	FOR_1
0x40000af	    0xc745cc000000	               mov dword [rbp - 0x34], 0	        75	arsup.c	FUNCTION_1	ELSE_1	FOR_1
0x40000b6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        76	arsup.c	FUNCTION_1	ELSE_1	FOR_1
0x40000ba	        0x488945e0	             mov qword [rbp - 0x20], rax	        76	arsup.c	FUNCTION_1	ELSE_1	FOR_1
0x40000be	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x40000c2	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x40000c9	        0x488945d0	             mov qword [rbp - 0x30], rax	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x40000cd	            0xeb5b	                           jmp 0x400012a	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x40000cf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        80	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2
0x40000d3	          0x488b00	                    mov rax, qword [rax]	        80	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2
0x40000d6	          0x4885c0	                           test rax, rax	        80	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2
0x40000d9	            0x7438	                            je 0x4000113	        80	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2
0x40000db	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        81	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_2
0x40000df	          0x488b10	                    mov rdx, qword [rax]	        81	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_2
0x40000e2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        81	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_2
0x40000e6	          0x488b00	                    mov rax, qword [rax]	        81	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_2
0x40000e9	          0x4889d6	                            mov rsi, rdx	        81	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_2
0x40000ec	          0x4889c7	                            mov rdi, rax	        81	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_2
0x40000ef	      0xe800000000	                          call 0x40000f4	        81	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_2
0x40000f4	            0x85c0	                           test eax, eax	        81	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_2
0x40000f6	            0x751b	                           jne 0x4000113	        81	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_2
0x40000f8	    0xc745cc010000	               mov dword [rbp - 0x34], 1	        83	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2
0x40000ff	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	        84	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_3
0x4000103	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        84	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_3
0x4000107	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        84	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_3
0x400010b	          0x4889ce	                            mov rsi, rcx	        84	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_3
0x400010e	          0x4889d7	                            mov rdi, rdx	        84	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_3
0x4000111	            0xffd0	                                call rax	        84	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_3
0x4000113	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        86	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x4000117	        0x488945e0	             mov qword [rbp - 0x20], rax	        86	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x400011b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x400011f	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x4000126	        0x488945d0	             mov qword [rbp - 0x30], rax	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x400012a	      0x48837dd000	               cmp qword [rbp - 0x30], 0	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x400012f	            0x759e	                           jne 0x40000cf	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x4000131	        0x837dcc00	               cmp dword [rbp - 0x34], 0	        88	arsup.c	FUNCTION_1	ELSE_1	FOR_1	IF_3
0x4000135	            0x752e	                           jne 0x4000165	        88	arsup.c	FUNCTION_1	ELSE_1	FOR_1	IF_3
0x4000137	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        89	arsup.c	FUNCTION_1	ELSE_1	FOR_1	CALL_5
0x400013b	          0x488b18	                    mov rbx, qword [rax]	        89	arsup.c	FUNCTION_1	ELSE_1	FOR_1	CALL_5
0x400013e	      0xbf00000000	                              mov edi, 0	        89	arsup.c	FUNCTION_1	ELSE_1	FOR_1	CALL_5
0x4000143	      0xe800000000	                          call 0x4000148	        89	arsup.c	FUNCTION_1	ELSE_1	FOR_1	CALL_5
0x4000148	          0x4889c1	                            mov rcx, rax	        89	arsup.c	FUNCTION_1	ELSE_1	FOR_1	CALL_5
0x400014b	    0x488b05000000	            mov rax, qword [0x04000152] 	        89	arsup.c	FUNCTION_1	ELSE_1	FOR_1	CALL_5
0x4000152	          0x4889da	                            mov rdx, rbx	        89	arsup.c	FUNCTION_1	ELSE_1	FOR_1	CALL_5
0x4000155	          0x4889ce	                            mov rsi, rcx	        89	arsup.c	FUNCTION_1	ELSE_1	FOR_1	CALL_5
0x4000158	          0x4889c7	                            mov rdi, rax	        89	arsup.c	FUNCTION_1	ELSE_1	FOR_1	CALL_5
0x400015b	      0xb800000000	                              mov eax, 0	        89	arsup.c	FUNCTION_1	ELSE_1	FOR_1	CALL_5
0x4000160	      0xe800000000	                          call 0x4000165	        89	arsup.c	FUNCTION_1	ELSE_1	FOR_1	CALL_5
0x4000165	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        73	arsup.c	FUNCTION_1	ELSE_1	FOR_1
0x4000169	        0x488b4008	                mov rax, qword [rax + 8]	        73	arsup.c	FUNCTION_1	ELSE_1	FOR_1
0x400016d	        0x488945d8	             mov qword [rbp - 0x28], rax	        73	arsup.c	FUNCTION_1	ELSE_1	FOR_1
0x4000171	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        73	arsup.c	FUNCTION_1	ELSE_1	FOR_1
0x4000176	     0xf8533ffffff	                           jne 0x40000af	        73	arsup.c	FUNCTION_1	ELSE_1	FOR_1
0x400017c	              0x90	                                     nop	        92	arsup.c	FUNCTION_1
0x400017d	        0x4883c458	                           add rsp, 0x58	        92	arsup.c	FUNCTION_1
0x4000181	              0x5b	                                 pop rbx	        92	arsup.c	FUNCTION_1
0x4000182	              0x5d	                                 pop rbp	        92	arsup.c	FUNCTION_1
0x4000183	              0xc3	                                     ret	        92	arsup.c	FUNCTION_1
ar_list	IF,1:DO,0:functions,0:SWITCH,0:FOR,1:CALL,7:ELSE,1:WHILE,0	48
0x4000b4f	              0x55	                                push rbp	       421	arsup.c	ELSE_4	FUNCTION_14
0x4000b50	          0x4889e5	                            mov rbp, rsp	       421	arsup.c	ELSE_4	FUNCTION_14
0x4000b53	              0x53	                                push rbx	       421	arsup.c	ELSE_4	FUNCTION_14
0x4000b54	        0x4883ec18	                           sub rsp, 0x18	       421	arsup.c	ELSE_4	FUNCTION_14
0x4000b58	    0x488b05000000	            mov rax, qword [0x04000b5f] 	       422	arsup.c	ELSE_4	FUNCTION_14	IF_1
0x4000b5f	          0x4885c0	                           test rax, rax	       422	arsup.c	ELSE_4	FUNCTION_14	IF_1
0x4000b62	            0x7535	                           jne 0x4000b99	       422	arsup.c	ELSE_4	FUNCTION_14	IF_1
0x4000b64	    0x488b1d000000	            mov rbx, qword [0x04000b6b] 	       424	arsup.c	ELSE_4	FUNCTION_14	IF_1	CALL_2
0x4000b6b	      0xbf00000000	                              mov edi, 0	       424	arsup.c	ELSE_4	FUNCTION_14	IF_1	CALL_2
0x4000b70	      0xe800000000	                          call 0x4000b75	       424	arsup.c	ELSE_4	FUNCTION_14	IF_1	CALL_2
0x4000b75	          0x4889c1	                            mov rcx, rax	       424	arsup.c	ELSE_4	FUNCTION_14	IF_1	CALL_2
0x4000b78	    0x488b05000000	            mov rax, qword [0x04000b7f] 	       424	arsup.c	ELSE_4	FUNCTION_14	IF_1	CALL_2
0x4000b7f	          0x4889da	                            mov rdx, rbx	       424	arsup.c	ELSE_4	FUNCTION_14	IF_1	CALL_2
0x4000b82	          0x4889ce	                            mov rsi, rcx	       424	arsup.c	ELSE_4	FUNCTION_14	IF_1	CALL_2
0x4000b85	          0x4889c7	                            mov rdi, rax	       424	arsup.c	ELSE_4	FUNCTION_14	IF_1	CALL_2
0x4000b88	      0xb800000000	                              mov eax, 0	       424	arsup.c	ELSE_4	FUNCTION_14	IF_1	CALL_2
0x4000b8d	      0xe800000000	                          call 0x4000b92	       424	arsup.c	ELSE_4	FUNCTION_14	IF_1	CALL_2
0x4000b92	      0xe800000000	                          call 0x4000b97	       425	arsup.c	ELSE_4	FUNCTION_14	IF_1	CALL_3
0x4000b97	            0xeb77	                           jmp 0x4000c10	       440	arsup.c	ELSE_4	FUNCTION_14
0x4000b99	    0x488b05000000	            mov rax, qword [0x04000ba0] 	       431	arsup.c	ELSE_4	FUNCTION_14	ELSE_1
0x4000ba0	    0x488905000000	            mov qword [0x04000ba7], rax 	       431	arsup.c	ELSE_4	FUNCTION_14	ELSE_1
0x4000ba7	    0xc70500000000	               mov dword [0x04000bb1], 1	       432	arsup.c	ELSE_4	FUNCTION_14	ELSE_1
0x4000bb1	    0x488b05000000	            mov rax, qword [0x04000bb8] 	       433	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	CALL_6
0x4000bb8	          0x488b18	                    mov rbx, qword [rax]	       433	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	CALL_6
0x4000bbb	      0xbf00000000	                              mov edi, 0	       433	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	CALL_6
0x4000bc0	      0xe800000000	                          call 0x4000bc5	       433	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	CALL_6
0x4000bc5	          0x4889de	                            mov rsi, rbx	       433	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	CALL_6
0x4000bc8	          0x4889c7	                            mov rdi, rax	       433	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	CALL_6
0x4000bcb	      0xb800000000	                              mov eax, 0	       433	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	CALL_6
0x4000bd0	      0xe800000000	                          call 0x4000bd5	       433	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	CALL_6
0x4000bd5	    0x488b05000000	            mov rax, qword [0x04000bdc] 	       435	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	FOR_1
0x4000bdc	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       435	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	FOR_1
0x4000be3	        0x488945e8	             mov qword [rbp - 0x18], rax	       435	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	FOR_1
0x4000be7	            0xeb20	                           jmp 0x4000c09	       435	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	FOR_1
0x4000be9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       438	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	CALL_7
0x4000bed	      0xbe00000000	                              mov esi, 0	       438	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	CALL_7
0x4000bf2	          0x4889c7	                            mov rdi, rax	       438	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	CALL_7
0x4000bf5	      0xe88af5ffff	              call sym.ar_directory_doer	       438	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	CALL_7
0x4000bfa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       437	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	FOR_1
0x4000bfe	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       437	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	FOR_1
0x4000c05	        0x488945e8	             mov qword [rbp - 0x18], rax	       437	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	FOR_1
0x4000c09	      0x48837de800	               cmp qword [rbp - 0x18], 0	       435	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	FOR_1
0x4000c0e	            0x75d9	                           jne 0x4000be9	       435	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	FOR_1
0x4000c10	              0x90	                                     nop	       440	arsup.c	ELSE_4	FUNCTION_14
0x4000c11	        0x4883c418	                           add rsp, 0x18	       440	arsup.c	ELSE_4	FUNCTION_14
0x4000c15	              0x5b	                                 pop rbx	       440	arsup.c	ELSE_4	FUNCTION_14
0x4000c16	              0x5d	                                 pop rbp	       440	arsup.c	ELSE_4	FUNCTION_14
0x4000c17	              0xc3	                                     ret	       440	arsup.c	ELSE_4	FUNCTION_14
ar_addmod	IF,2:DO,0:functions,0:SWITCH,0:FOR,0:CALL,8:ELSE,2:WHILE,1	61
0x40005e9	              0x55	                                push rbp	       247	arsup.c	FUNCTION_9
0x40005ea	          0x4889e5	                            mov rbp, rsp	       247	arsup.c	FUNCTION_9
0x40005ed	            0x4154	                                push r12	       247	arsup.c	FUNCTION_9
0x40005ef	              0x53	                                push rbx	       247	arsup.c	FUNCTION_9
0x40005f0	        0x4883ec20	                           sub rsp, 0x20	       247	arsup.c	FUNCTION_9
0x40005f4	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       247	arsup.c	FUNCTION_9
0x40005f8	    0x488b05000000	            mov rax, qword [0x040005ff] 	       248	arsup.c	FUNCTION_9	IF_1
0x40005ff	          0x4885c0	                           test rax, rax	       248	arsup.c	FUNCTION_9	IF_1
0x4000602	     0xf85ca000000	                           jne 0x40006d2	       248	arsup.c	FUNCTION_9	IF_1
0x4000608	    0x488b1d000000	            mov rbx, qword [0x0400060f] 	       250	arsup.c	FUNCTION_9	IF_1	CALL_2
0x400060f	      0xbf00000000	                              mov edi, 0	       250	arsup.c	FUNCTION_9	IF_1	CALL_2
0x4000614	      0xe800000000	                          call 0x4000619	       250	arsup.c	FUNCTION_9	IF_1	CALL_2
0x4000619	          0x4889c1	                            mov rcx, rax	       250	arsup.c	FUNCTION_9	IF_1	CALL_2
0x400061c	    0x488b05000000	            mov rax, qword [0x04000623] 	       250	arsup.c	FUNCTION_9	IF_1	CALL_2
0x4000623	          0x4889da	                            mov rdx, rbx	       250	arsup.c	FUNCTION_9	IF_1	CALL_2
0x4000626	          0x4889ce	                            mov rsi, rcx	       250	arsup.c	FUNCTION_9	IF_1	CALL_2
0x4000629	          0x4889c7	                            mov rdi, rax	       250	arsup.c	FUNCTION_9	IF_1	CALL_2
0x400062c	      0xb800000000	                              mov eax, 0	       250	arsup.c	FUNCTION_9	IF_1	CALL_2
0x4000631	      0xe800000000	                          call 0x4000636	       250	arsup.c	FUNCTION_9	IF_1	CALL_2
0x4000636	      0xe800000000	                          call 0x400063b	       251	arsup.c	FUNCTION_9	IF_1	CALL_3
0x400063b	      0xe99d000000	                           jmp 0x40006dd	       278	arsup.c	FUNCTION_9
0x4000640	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       260	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	CALL_4
0x4000644	          0x488b00	                    mov rax, qword [rax]	       260	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	CALL_4
0x4000647	      0xbe00000000	                              mov esi, 0	       260	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	CALL_4
0x400064c	          0x4889c7	                            mov rdi, rax	       260	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	CALL_4
0x400064f	      0xe800000000	                          call 0x4000654	       260	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	CALL_4
0x4000654	        0x488945e8	             mov qword [rbp - 0x18], rax	       260	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	CALL_4
0x4000658	      0x48837de800	               cmp qword [rbp - 0x18], 0	       264	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2
0x400065d	            0x753c	                           jne 0x400069b	       264	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2
0x400065f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_7
0x4000663	          0x4c8b20	                    mov r12, qword [rax]	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_7
0x4000666	    0x488b1d000000	            mov rbx, qword [0x0400066d] 	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_7
0x400066d	      0xbf00000000	                              mov edi, 0	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_7
0x4000672	      0xe800000000	                          call 0x4000677	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_7
0x4000677	          0x4889c6	                            mov rsi, rax	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_7
0x400067a	    0x488b05000000	            mov rax, qword [0x04000681] 	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_7
0x4000681	          0x4c89e1	                            mov rcx, r12	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_7
0x4000684	          0x4889da	                            mov rdx, rbx	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_7
0x4000687	          0x4889c7	                            mov rdi, rax	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_7
0x400068a	      0xb800000000	                              mov eax, 0	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_7
0x400068f	      0xe800000000	                          call 0x4000694	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_7
0x4000694	      0xe800000000	                          call 0x4000699	       268	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_8
0x4000699	            0xeb2b	                           jmp 0x40006c6	       268	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_8
0x400069b	    0x488b05000000	            mov rax, qword [0x040006a2] 	       272	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	ELSE_2
0x40006a2	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	       272	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	ELSE_2
0x40006a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       272	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	ELSE_2
0x40006ad	    0x488990d80000	             mov qword [rax + 0xd8], rdx	       272	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	ELSE_2
0x40006b4	    0x488b05000000	            mov rax, qword [0x040006bb] 	       273	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	ELSE_2
0x40006bb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       273	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	ELSE_2
0x40006bf	    0x488990e00000	             mov qword [rax + 0xe0], rdx	       273	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	ELSE_2
0x40006c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       275	arsup.c	FUNCTION_9	ELSE_1	WHILE_1
0x40006ca	        0x488b4008	                mov rax, qword [rax + 8]	       275	arsup.c	FUNCTION_9	ELSE_1	WHILE_1
0x40006ce	        0x488945d8	             mov qword [rbp - 0x28], rax	       275	arsup.c	FUNCTION_9	ELSE_1	WHILE_1
0x40006d2	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       255	arsup.c	FUNCTION_9	ELSE_1	WHILE_1
0x40006d7	     0xf8563ffffff	                           jne 0x4000640	       255	arsup.c	FUNCTION_9	ELSE_1	WHILE_1
0x40006dd	              0x90	                                     nop	       278	arsup.c	FUNCTION_9
0x40006de	        0x4883c420	                           add rsp, 0x20	       278	arsup.c	FUNCTION_9
0x40006e2	              0x5b	                                 pop rbx	       278	arsup.c	FUNCTION_9
0x40006e3	            0x415c	                                 pop r12	       278	arsup.c	FUNCTION_9
0x40006e5	              0x5d	                                 pop rbp	       278	arsup.c	FUNCTION_9
0x40006e6	              0xc3	                                     ret	       278	arsup.c	FUNCTION_9
ar_extract	IF,3:DO,0:functions,0:SWITCH,0:FOR,0:CALL,8:ELSE,1:WHILE,2	76
0x4000c4c	              0x55	                                push rbp	       454	arsup.c	FUNCTION_16
0x4000c4d	          0x4889e5	                            mov rbp, rsp	       454	arsup.c	FUNCTION_16
0x4000c50	            0x4154	                                push r12	       454	arsup.c	FUNCTION_16
0x4000c52	              0x53	                                push rbx	       454	arsup.c	FUNCTION_16
0x4000c53	        0x4883ec20	                           sub rsp, 0x20	       454	arsup.c	FUNCTION_16
0x4000c57	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       454	arsup.c	FUNCTION_16
0x4000c5b	    0x488b05000000	            mov rax, qword [0x04000c62] 	       455	arsup.c	FUNCTION_16	IF_1
0x4000c62	          0x4885c0	                           test rax, rax	       455	arsup.c	FUNCTION_16	IF_1
0x4000c65	     0xf85fa000000	                           jne 0x4000d65	       455	arsup.c	FUNCTION_16	IF_1
0x4000c6b	    0x488b1d000000	            mov rbx, qword [0x04000c72] 	       457	arsup.c	FUNCTION_16	IF_1	CALL_2
0x4000c72	      0xbf00000000	                              mov edi, 0	       457	arsup.c	FUNCTION_16	IF_1	CALL_2
0x4000c77	      0xe800000000	                          call 0x4000c7c	       457	arsup.c	FUNCTION_16	IF_1	CALL_2
0x4000c7c	          0x4889c1	                            mov rcx, rax	       457	arsup.c	FUNCTION_16	IF_1	CALL_2
0x4000c7f	    0x488b05000000	            mov rax, qword [0x04000c86] 	       457	arsup.c	FUNCTION_16	IF_1	CALL_2
0x4000c86	          0x4889da	                            mov rdx, rbx	       457	arsup.c	FUNCTION_16	IF_1	CALL_2
0x4000c89	          0x4889ce	                            mov rsi, rcx	       457	arsup.c	FUNCTION_16	IF_1	CALL_2
0x4000c8c	          0x4889c7	                            mov rdi, rax	       457	arsup.c	FUNCTION_16	IF_1	CALL_2
0x4000c8f	      0xb800000000	                              mov eax, 0	       457	arsup.c	FUNCTION_16	IF_1	CALL_2
0x4000c94	      0xe800000000	                          call 0x4000c99	       457	arsup.c	FUNCTION_16	IF_1	CALL_2
0x4000c99	      0xe800000000	                          call 0x4000c9e	       458	arsup.c	FUNCTION_16	IF_1	CALL_3
0x4000c9e	      0xe9cd000000	                           jmp 0x4000d70	       489	arsup.c	FUNCTION_16
0x4000ca3	    0x488b05000000	            mov rax, qword [0x04000caa] 	       465	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000caa	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       465	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000cb1	        0x488945e8	             mov qword [rbp - 0x18], rax	       465	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000cb5	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       466	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000cbc	            0xeb3f	                           jmp 0x4000cfd	       468	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2
0x4000cbe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       470	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x4000cc2	          0x488b10	                    mov rdx, qword [rax]	       470	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x4000cc5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       470	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x4000cc9	          0x488b00	                    mov rax, qword [rax]	       470	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x4000ccc	          0x4889d6	                            mov rsi, rdx	       470	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x4000ccf	          0x4889c7	                            mov rdi, rax	       470	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x4000cd2	      0xe800000000	                          call 0x4000cd7	       470	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x4000cd7	            0x85c0	                           test eax, eax	       470	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x4000cd9	            0x7513	                           jne 0x4000cee	       470	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x4000cdb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       472	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_5
0x4000cdf	          0x4889c7	                            mov rdi, rax	       472	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_5
0x4000ce2	      0xe800000000	                          call 0x4000ce7	       472	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_5
0x4000ce7	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	       473	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2
0x4000cee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       476	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2
0x4000cf2	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       476	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2
0x4000cf9	        0x488945e8	             mov qword [rbp - 0x18], rax	       476	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2
0x4000cfd	      0x48837de800	               cmp qword [rbp - 0x18], 0	       468	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2
0x4000d02	            0x7406	                            je 0x4000d0a	       468	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2
0x4000d04	        0x837de400	               cmp dword [rbp - 0x1c], 0	       468	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2
0x4000d08	            0x74b4	                            je 0x4000cbe	       468	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2
0x4000d0a	        0x837de400	               cmp dword [rbp - 0x1c], 0	       479	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3
0x4000d0e	            0x7549	                           jne 0x4000d59	       479	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3
0x4000d10	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       481	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000d14	          0x488b00	                    mov rax, qword [rax]	       481	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000d17	      0xbe00000000	                              mov esi, 0	       481	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000d1c	          0x4889c7	                            mov rdi, rax	       481	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000d1f	      0xe800000000	                          call 0x4000d24	       481	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000d24	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_8
0x4000d28	          0x4c8b20	                    mov r12, qword [rax]	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_8
0x4000d2b	    0x488b1d000000	            mov rbx, qword [0x04000d32] 	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_8
0x4000d32	      0xbf00000000	                              mov edi, 0	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_8
0x4000d37	      0xe800000000	                          call 0x4000d3c	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_8
0x4000d3c	          0x4889c6	                            mov rsi, rax	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_8
0x4000d3f	    0x488b05000000	            mov rax, qword [0x04000d46] 	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_8
0x4000d46	          0x4c89e1	                            mov rcx, r12	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_8
0x4000d49	          0x4889da	                            mov rdx, rbx	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_8
0x4000d4c	          0x4889c7	                            mov rdi, rax	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_8
0x4000d4f	      0xb800000000	                              mov eax, 0	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_8
0x4000d54	      0xe800000000	                          call 0x4000d59	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_8
0x4000d59	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       486	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000d5d	        0x488b4008	                mov rax, qword [rax + 8]	       486	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000d61	        0x488945d8	             mov qword [rbp - 0x28], rax	       486	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000d65	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       462	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000d6a	     0xf8533ffffff	                           jne 0x4000ca3	       462	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000d70	              0x90	                                     nop	       489	arsup.c	FUNCTION_16
0x4000d71	        0x4883c420	                           add rsp, 0x20	       489	arsup.c	FUNCTION_16
0x4000d75	              0x5b	                                 pop rbx	       489	arsup.c	FUNCTION_16
0x4000d76	            0x415c	                                 pop r12	       489	arsup.c	FUNCTION_16
0x4000d78	              0x5d	                                 pop rbp	       489	arsup.c	FUNCTION_16
0x4000d79	              0xc3	                                     ret	       489	arsup.c	FUNCTION_16
ar_save	IF,2:DO,0:functions,0:SWITCH,0:FOR,0:CALL,8:ELSE,1:WHILE,0	58
0x400084c	              0x55	                                push rbp	       332	arsup.c	FUNCTION_12
0x400084d	          0x4889e5	                            mov rbp, rsp	       332	arsup.c	FUNCTION_12
0x4000850	              0x53	                                push rbx	       332	arsup.c	FUNCTION_12
0x4000851	        0x4883ec18	                           sub rsp, 0x18	       332	arsup.c	FUNCTION_12
0x4000855	    0x488b05000000	            mov rax, qword [0x0400085c] 	       333	arsup.c	FUNCTION_12	IF_1
0x400085c	          0x4885c0	                           test rax, rax	       333	arsup.c	FUNCTION_12	IF_1
0x400085f	            0x7538	                           jne 0x4000899	       333	arsup.c	FUNCTION_12	IF_1
0x4000861	    0x488b1d000000	            mov rbx, qword [0x04000868] 	       335	arsup.c	FUNCTION_12	IF_1	CALL_2
0x4000868	      0xbf00000000	                              mov edi, 0	       335	arsup.c	FUNCTION_12	IF_1	CALL_2
0x400086d	      0xe800000000	                          call 0x4000872	       335	arsup.c	FUNCTION_12	IF_1	CALL_2
0x4000872	          0x4889c1	                            mov rcx, rax	       335	arsup.c	FUNCTION_12	IF_1	CALL_2
0x4000875	    0x488b05000000	            mov rax, qword [0x0400087c] 	       335	arsup.c	FUNCTION_12	IF_1	CALL_2
0x400087c	          0x4889da	                            mov rdx, rbx	       335	arsup.c	FUNCTION_12	IF_1	CALL_2
0x400087f	          0x4889ce	                            mov rsi, rcx	       335	arsup.c	FUNCTION_12	IF_1	CALL_2
0x4000882	          0x4889c7	                            mov rdi, rax	       335	arsup.c	FUNCTION_12	IF_1	CALL_2
0x4000885	      0xb800000000	                              mov eax, 0	       335	arsup.c	FUNCTION_12	IF_1	CALL_2
0x400088a	      0xe800000000	                          call 0x400088f	       335	arsup.c	FUNCTION_12	IF_1	CALL_2
0x400088f	      0xe800000000	                          call 0x4000894	       336	arsup.c	FUNCTION_12	IF_1	CALL_3
0x4000894	      0xe994000000	                           jmp 0x400092d	       351	arsup.c	FUNCTION_12
0x4000899	    0x488b05000000	            mov rax, qword [0x040008a0] 	       340	arsup.c	FUNCTION_12	ELSE_1	CALL_5
0x40008a0	          0x488b00	                    mov rax, qword [rax]	       340	arsup.c	FUNCTION_12	ELSE_1	CALL_5
0x40008a3	          0x4889c7	                            mov rdi, rax	       340	arsup.c	FUNCTION_12	ELSE_1	CALL_5
0x40008a6	      0xe800000000	                          call 0x40008ab	       340	arsup.c	FUNCTION_12	ELSE_1	CALL_5
0x40008ab	        0x488945e8	             mov qword [rbp - 0x18], rax	       340	arsup.c	FUNCTION_12	ELSE_1	CALL_5
0x40008af	    0x8b0500000000	            mov eax, dword [0x040008b5] 	       342	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x40008b5	            0x85c0	                           test eax, eax	       342	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x40008b7	            0x7e33	                           jle 0x40008ec	       342	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x40008b9	    0x488b15000000	            mov rdx, qword [0x040008c0] 	       343	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x40008c0	    0x488b05000000	            mov rax, qword [0x040008c7] 	       343	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x40008c7	          0x8b4044	            mov eax, dword [rax + 0x44] 	       343	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x40008ca	          0xc1e805	                              shr eax, 5	       343	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x40008cd	      0x25ffff0f00	                        and eax, 0xfffff	       343	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x40008d2	          0x80cc20	                             or ah, 0x20	       343	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x40008d5	      0x25ffff0f00	                        and eax, 0xfffff	       343	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x40008da	          0xc1e005	                              shl eax, 5	       343	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x40008dd	            0x89c1	                            mov ecx, eax	       343	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x40008df	          0x8b4244	            mov eax, dword [rdx + 0x44] 	       343	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x40008e2	      0x251f0000fe	                     and eax, 0xfe00001f	       343	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x40008e7	             0x9c8	                             or eax, ecx	       343	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x40008e9	          0x894244	             mov dword [rdx + 0x44], eax	       343	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x40008ec	    0x488b05000000	            mov rax, qword [0x040008f3] 	       345	arsup.c	FUNCTION_12	ELSE_1	CALL_6
0x40008f3	          0x4889c7	                            mov rdi, rax	       345	arsup.c	FUNCTION_12	ELSE_1	CALL_6
0x40008f6	      0xe800000000	                          call 0x40008fb	       345	arsup.c	FUNCTION_12	ELSE_1	CALL_6
0x40008fb	    0x488b0d000000	            mov rcx, qword [0x04000902] 	       347	arsup.c	FUNCTION_12	ELSE_1	CALL_7
0x4000902	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       347	arsup.c	FUNCTION_12	ELSE_1	CALL_7
0x4000906	      0xba00000000	                              mov edx, 0	       347	arsup.c	FUNCTION_12	ELSE_1	CALL_7
0x400090b	          0x4889ce	                            mov rsi, rcx	       347	arsup.c	FUNCTION_12	ELSE_1	CALL_7
0x400090e	          0x4889c7	                            mov rdi, rax	       347	arsup.c	FUNCTION_12	ELSE_1	CALL_7
0x4000911	      0xe800000000	                          call 0x4000916	       347	arsup.c	FUNCTION_12	ELSE_1	CALL_7
0x4000916	    0x48c705000000	               mov qword [0x04000921], 0	       348	arsup.c	FUNCTION_12	ELSE_1
0x4000921	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       349	arsup.c	FUNCTION_12	ELSE_1	CALL_8
0x4000925	          0x4889c7	                            mov rdi, rax	       349	arsup.c	FUNCTION_12	ELSE_1	CALL_8
0x4000928	      0xe800000000	                          call 0x400092d	       349	arsup.c	FUNCTION_12	ELSE_1	CALL_8
0x400092d	              0x90	                                     nop	       351	arsup.c	FUNCTION_12
0x400092e	        0x4883c418	                           add rsp, 0x18	       351	arsup.c	FUNCTION_12
0x4000932	              0x5b	                                 pop rbx	       351	arsup.c	FUNCTION_12
0x4000933	              0x5d	                                 pop rbp	       351	arsup.c	FUNCTION_12
0x4000934	              0xc3	                                     ret	       351	arsup.c	FUNCTION_12
ar_delete	IF,3:DO,0:functions,0:SWITCH,0:FOR,0:CALL,7:ELSE,2:WHILE,2	78
0x400070c	              0x55	                                push rbp	       290	arsup.c	FUNCTION_11
0x400070d	          0x4889e5	                            mov rbp, rsp	       290	arsup.c	FUNCTION_11
0x4000710	            0x4154	                                push r12	       290	arsup.c	FUNCTION_11
0x4000712	              0x53	                                push rbx	       290	arsup.c	FUNCTION_11
0x4000713	        0x4883ec30	                           sub rsp, 0x30	       290	arsup.c	FUNCTION_11
0x4000717	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       290	arsup.c	FUNCTION_11
0x400071b	    0x488b05000000	            mov rax, qword [0x04000722] 	       291	arsup.c	FUNCTION_11	IF_1
0x4000722	          0x4885c0	                           test rax, rax	       291	arsup.c	FUNCTION_11	IF_1
0x4000725	     0xf850c010000	                           jne 0x4000837	       291	arsup.c	FUNCTION_11	IF_1
0x400072b	    0x488b1d000000	            mov rbx, qword [0x04000732] 	       293	arsup.c	FUNCTION_11	IF_1	CALL_2
0x4000732	      0xbf00000000	                              mov edi, 0	       293	arsup.c	FUNCTION_11	IF_1	CALL_2
0x4000737	      0xe800000000	                          call 0x400073c	       293	arsup.c	FUNCTION_11	IF_1	CALL_2
0x400073c	          0x4889c1	                            mov rcx, rax	       293	arsup.c	FUNCTION_11	IF_1	CALL_2
0x400073f	    0x488b05000000	            mov rax, qword [0x04000746] 	       293	arsup.c	FUNCTION_11	IF_1	CALL_2
0x4000746	          0x4889da	                            mov rdx, rbx	       293	arsup.c	FUNCTION_11	IF_1	CALL_2
0x4000749	          0x4889ce	                            mov rsi, rcx	       293	arsup.c	FUNCTION_11	IF_1	CALL_2
0x400074c	          0x4889c7	                            mov rdi, rax	       293	arsup.c	FUNCTION_11	IF_1	CALL_2
0x400074f	      0xb800000000	                              mov eax, 0	       293	arsup.c	FUNCTION_11	IF_1	CALL_2
0x4000754	      0xe800000000	                          call 0x4000759	       293	arsup.c	FUNCTION_11	IF_1	CALL_2
0x4000759	      0xe800000000	                          call 0x400075e	       294	arsup.c	FUNCTION_11	IF_1	CALL_3
0x400075e	      0xe9df000000	                           jmp 0x4000842	       328	arsup.c	FUNCTION_11
0x4000763	    0x488b05000000	            mov rax, qword [0x0400076a] 	       301	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x400076a	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       301	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000771	        0x488945e0	             mov qword [rbp - 0x20], rax	       301	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000775	    0x488b05000000	            mov rax, qword [0x0400077c] 	       302	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x400077c	    0x4805e0000000	                           add rax, 0xe0	       302	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000782	        0x488945e8	             mov qword [rbp - 0x18], rax	       302	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000786	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       303	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x400078d	            0xeb55	                           jmp 0x40007e4	       305	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2
0x400078f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       307	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x4000793	          0x488b10	                    mov rdx, qword [rax]	       307	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x4000796	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       307	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x400079a	          0x488b00	                    mov rax, qword [rax]	       307	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x400079d	          0x4889d6	                            mov rsi, rdx	       307	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x40007a0	          0x4889c7	                            mov rdi, rax	       307	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x40007a3	      0xe800000000	                          call 0x40007a8	       307	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x40007a8	            0x85c0	                           test eax, eax	       307	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x40007aa	            0x751b	                           jne 0x40007c7	       307	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x40007ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       309	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2
0x40007b0	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	       309	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2
0x40007b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       309	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2
0x40007bb	          0x488910	                    mov qword [rax], rdx	       309	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2
0x40007be	    0xc745dc010000	               mov dword [rbp - 0x24], 1	       310	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2
0x40007c5	            0xeb0e	                           jmp 0x40007d5	       310	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2
0x40007c7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       313	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	ELSE_2
0x40007cb	    0x4805d8000000	                           add rax, 0xd8	       313	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	ELSE_2
0x40007d1	        0x488945e8	             mov qword [rbp - 0x18], rax	       313	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	ELSE_2
0x40007d5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       315	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2
0x40007d9	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       315	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2
0x40007e0	        0x488945e0	             mov qword [rbp - 0x20], rax	       315	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2
0x40007e4	      0x48837de000	               cmp qword [rbp - 0x20], 0	       305	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2
0x40007e9	            0x75a4	                           jne 0x400078f	       305	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2
0x40007eb	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       318	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3
0x40007ef	            0x753a	                           jne 0x400082b	       318	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3
0x40007f1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_6
0x40007f5	          0x4c8b20	                    mov r12, qword [rax]	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_6
0x40007f8	    0x488b1d000000	            mov rbx, qword [0x040007ff] 	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_6
0x40007ff	      0xbf00000000	                              mov edi, 0	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000804	      0xe800000000	                          call 0x4000809	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000809	          0x4889c6	                            mov rsi, rax	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_6
0x400080c	    0x488b05000000	            mov rax, qword [0x04000813] 	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000813	          0x4c89e1	                            mov rcx, r12	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000816	          0x4889da	                            mov rdx, rbx	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000819	          0x4889c7	                            mov rdi, rax	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_6
0x400081c	      0xb800000000	                              mov eax, 0	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000821	      0xe800000000	                          call 0x4000826	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000826	      0xe800000000	                          call 0x400082b	       322	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_7
0x400082b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       325	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x400082f	        0x488b4008	                mov rax, qword [rax + 8]	       325	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000833	        0x488945c8	             mov qword [rbp - 0x38], rax	       325	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000837	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       298	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x400083c	     0xf8521ffffff	                           jne 0x4000763	       298	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000842	              0x90	                                     nop	       328	arsup.c	FUNCTION_11
0x4000843	        0x4883c430	                           add rsp, 0x30	       328	arsup.c	FUNCTION_11
0x4000847	              0x5b	                                 pop rbx	       328	arsup.c	FUNCTION_11
0x4000848	            0x415c	                                 pop r12	       328	arsup.c	FUNCTION_11
0x400084a	              0x5d	                                 pop rbp	       328	arsup.c	FUNCTION_11
0x400084b	              0xc3	                                     ret	       328	arsup.c	FUNCTION_11
prompt	IF,1:DO,0:functions,0:SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0	14
0x4000291	              0x55	                                push rbp	       131	arsup.c	FUNCTION_4
0x4000292	          0x4889e5	                            mov rbp, rsp	       131	arsup.c	FUNCTION_4
0x4000295	    0x8b0500000000	            mov eax, dword [0x0400029b] 	       134	arsup.c	FUNCTION_4	IF_1
0x400029b	            0x85c0	                           test eax, eax	       134	arsup.c	FUNCTION_4	IF_1
0x400029d	            0x741e	                            je 0x40002bd	       134	arsup.c	FUNCTION_4	IF_1
0x400029f	      0xbf00000000	                              mov edi, 0	       136	arsup.c	FUNCTION_4	IF_1	CALL_1
0x40002a4	      0xb800000000	                              mov eax, 0	       136	arsup.c	FUNCTION_4	IF_1	CALL_1
0x40002a9	      0xe800000000	                          call 0x40002ae	       136	arsup.c	FUNCTION_4	IF_1	CALL_1
0x40002ae	    0x488b05000000	            mov rax, qword [0x040002b5] 	       137	arsup.c	FUNCTION_4	IF_1	CALL_2
0x40002b5	          0x4889c7	                            mov rdi, rax	       137	arsup.c	FUNCTION_4	IF_1	CALL_2
0x40002b8	      0xe800000000	                          call 0x40002bd	       137	arsup.c	FUNCTION_4	IF_1	CALL_2
0x40002bd	              0x90	                                     nop	       139	arsup.c	FUNCTION_4
0x40002be	              0x5d	                                 pop rbp	       139	arsup.c	FUNCTION_4
0x40002bf	              0xc3	                                     ret	       139	arsup.c	FUNCTION_4
ar_open	IF,4:DO,0:functions,0:SWITCH,0:FOR,0:CALL,19:ELSE,1:WHILE,1	135
0x40002db	              0x55	                                push rbp	       151	arsup.c	FUNCTION_6
0x40002dc	          0x4889e5	                            mov rbp, rsp	       151	arsup.c	FUNCTION_6
0x40002df	              0x53	                                push rbx	       151	arsup.c	FUNCTION_6
0x40002e0	        0x4883ec48	                           sub rsp, 0x48	       151	arsup.c	FUNCTION_6
0x40002e4	        0x48897db8	             mov qword [rbp - 0x48], rdi	       151	arsup.c	FUNCTION_6
0x40002e8	          0x8975b4	             mov dword [rbp - 0x4c], esi	       151	arsup.c	FUNCTION_6
0x40002eb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       152	arsup.c	FUNCTION_6	CALL_2
0x40002ef	          0x4889c7	                            mov rdi, rax	       152	arsup.c	FUNCTION_6	CALL_2
0x40002f2	      0xe800000000	                          call 0x40002f7	       152	arsup.c	FUNCTION_6	CALL_2
0x40002f7	        0x4883c00a	                            add rax, 0xa	       152	arsup.c	FUNCTION_6	CALL_2
0x40002fb	          0x4889c7	                            mov rdi, rax	       152	arsup.c	FUNCTION_6	CALL_2
0x40002fe	      0xe800000000	                          call 0x4000303	       152	arsup.c	FUNCTION_6	CALL_2
0x4000303	        0x488945d8	             mov qword [rbp - 0x28], rax	       152	arsup.c	FUNCTION_6	CALL_2
0x4000307	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       153	arsup.c	FUNCTION_6	CALL_3
0x400030b	          0x4889c7	                            mov rdi, rax	       153	arsup.c	FUNCTION_6	CALL_3
0x400030e	      0xe800000000	                          call 0x4000313	       153	arsup.c	FUNCTION_6	CALL_3
0x4000313	        0x488945e0	             mov qword [rbp - 0x20], rax	       153	arsup.c	FUNCTION_6	CALL_3
0x4000317	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       154	arsup.c	FUNCTION_6
0x400031b	    0x488905000000	            mov qword [0x04000322], rax 	       154	arsup.c	FUNCTION_6
0x4000322	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       158	arsup.c	FUNCTION_6	CALL_4
0x4000326	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       158	arsup.c	FUNCTION_6	CALL_4
0x400032a	          0x4829c2	                            sub rdx, rax	       158	arsup.c	FUNCTION_6	CALL_4
0x400032d	          0x4889d0	                            mov rax, rdx	       158	arsup.c	FUNCTION_6	CALL_4
0x4000330	            0x89c6	                            mov esi, eax	       158	arsup.c	FUNCTION_6	CALL_4
0x4000332	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       158	arsup.c	FUNCTION_6	CALL_4
0x4000336	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       158	arsup.c	FUNCTION_6	CALL_4
0x400033a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       158	arsup.c	FUNCTION_6	CALL_4
0x400033e	          0x4989c8	                             mov r8, rcx	       158	arsup.c	FUNCTION_6	CALL_4
0x4000341	          0x4889d1	                            mov rcx, rdx	       158	arsup.c	FUNCTION_6	CALL_4
0x4000344	            0x89f2	                            mov edx, esi	       158	arsup.c	FUNCTION_6	CALL_4
0x4000346	      0xbe00000000	                              mov esi, 0	       158	arsup.c	FUNCTION_6	CALL_4
0x400034b	          0x4889c7	                            mov rdi, rax	       158	arsup.c	FUNCTION_6	CALL_4
0x400034e	      0xb800000000	                              mov eax, 0	       158	arsup.c	FUNCTION_6	CALL_4
0x4000353	      0xe800000000	                          call 0x4000358	       158	arsup.c	FUNCTION_6	CALL_4
0x4000358	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	arsup.c	FUNCTION_6	CALL_5
0x400035c	      0xbe00000000	                              mov esi, 0	       159	arsup.c	FUNCTION_6	CALL_5
0x4000361	          0x4889c7	                            mov rdi, rax	       159	arsup.c	FUNCTION_6	CALL_5
0x4000364	      0xe800000000	                          call 0x4000369	       159	arsup.c	FUNCTION_6	CALL_5
0x4000369	    0x488905000000	            mov qword [0x04000370], rax 	       159	arsup.c	FUNCTION_6	CALL_5
0x4000370	    0x488b05000000	            mov rax, qword [0x04000377] 	       161	arsup.c	FUNCTION_6	IF_1
0x4000377	          0x4885c0	                           test rax, rax	       161	arsup.c	FUNCTION_6	IF_1
0x400037a	            0x753c	                           jne 0x40003b8	       161	arsup.c	FUNCTION_6	IF_1
0x400037c	    0x488b1d000000	            mov rbx, qword [0x04000383] 	       163	arsup.c	FUNCTION_6	IF_1	CALL_6
0x4000383	      0xbf00000000	                              mov edi, 0	       164	arsup.c	FUNCTION_6	IF_1	CALL_7
0x4000388	      0xe800000000	                          call 0x400038d	       164	arsup.c	FUNCTION_6	IF_1	CALL_7
0x400038d	          0x4889c6	                            mov rsi, rax	       164	arsup.c	FUNCTION_6	IF_1	CALL_7
0x4000390	    0x488b05000000	            mov rax, qword [0x04000397] 	       163	arsup.c	FUNCTION_6	IF_1	CALL_6
0x4000397	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       163	arsup.c	FUNCTION_6	IF_1	CALL_6
0x400039b	          0x4889d1	                            mov rcx, rdx	       163	arsup.c	FUNCTION_6	IF_1	CALL_6
0x400039e	          0x4889da	                            mov rdx, rbx	       163	arsup.c	FUNCTION_6	IF_1	CALL_6
0x40003a1	          0x4889c7	                            mov rdi, rax	       163	arsup.c	FUNCTION_6	IF_1	CALL_6
0x40003a4	      0xb800000000	                              mov eax, 0	       163	arsup.c	FUNCTION_6	IF_1	CALL_6
0x40003a9	      0xe800000000	                          call 0x40003ae	       163	arsup.c	FUNCTION_6	IF_1	CALL_6
0x40003ae	      0xe800000000	                          call 0x40003b3	       167	arsup.c	FUNCTION_6	IF_1	CALL_8
0x40003b3	      0xe948010000	                           jmp 0x4000500	       167	arsup.c	FUNCTION_6	IF_1	CALL_8
0x40003b8	        0x837db400	               cmp dword [rbp - 0x4c], 0	       171	arsup.c	FUNCTION_6	ELSE_1	IF_2
0x40003bc	     0xf8508010000	                           jne 0x40004ca	       171	arsup.c	FUNCTION_6	ELSE_1	IF_2
0x40003c2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       177	arsup.c	FUNCTION_6	ELSE_1	IF_2	CALL_9
0x40003c6	      0xbe00000000	                              mov esi, 0	       177	arsup.c	FUNCTION_6	ELSE_1	IF_2	CALL_9
0x40003cb	          0x4889c7	                            mov rdi, rax	       177	arsup.c	FUNCTION_6	ELSE_1	IF_2	CALL_9
0x40003ce	      0xe800000000	                          call 0x40003d3	       177	arsup.c	FUNCTION_6	ELSE_1	IF_2	CALL_9
0x40003d3	        0x488945e8	             mov qword [rbp - 0x18], rax	       177	arsup.c	FUNCTION_6	ELSE_1	IF_2	CALL_9
0x40003d7	      0x48837de800	               cmp qword [rbp - 0x18], 0	       179	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3
0x40003dc	            0x753c	                           jne 0x400041a	       179	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3
0x40003de	    0x488b1d000000	            mov rbx, qword [0x040003e5] 	       181	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_11
0x40003e5	      0xbf00000000	                              mov edi, 0	       181	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_11
0x40003ea	      0xe800000000	                          call 0x40003ef	       181	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_11
0x40003ef	          0x4889c6	                            mov rsi, rax	       181	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_11
0x40003f2	    0x488b05000000	            mov rax, qword [0x040003f9] 	       181	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_11
0x40003f9	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       181	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_11
0x40003fd	          0x4889d1	                            mov rcx, rdx	       181	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_11
0x4000400	          0x4889da	                            mov rdx, rbx	       181	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_11
0x4000403	          0x4889c7	                            mov rdi, rax	       181	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_11
0x4000406	      0xb800000000	                              mov eax, 0	       181	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_11
0x400040b	      0xe800000000	                          call 0x4000410	       181	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_11
0x4000410	      0xe800000000	                          call 0x4000415	       183	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_12
0x4000415	      0xe9e6000000	                           jmp 0x4000500	       184	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3
0x400041a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       187	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_13
0x400041e	      0xbe02000000	                              mov esi, 2	       187	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_13
0x4000423	          0x4889c7	                            mov rdi, rax	       187	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_13
0x4000426	      0xe800000000	                          call 0x400042b	       187	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_13
0x400042b	            0x85c0	                           test eax, eax	       187	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_13
0x400042d	            0x753c	                           jne 0x400046b	       187	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_13
0x400042f	    0x488b1d000000	            mov rbx, qword [0x04000436] 	       189	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_14
0x4000436	      0xbf00000000	                              mov edi, 0	       190	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_15
0x400043b	      0xe800000000	                          call 0x4000440	       190	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_15
0x4000440	          0x4889c6	                            mov rsi, rax	       190	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_15
0x4000443	    0x488b05000000	            mov rax, qword [0x0400044a] 	       189	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_14
0x400044a	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       189	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_14
0x400044e	          0x4889d1	                            mov rcx, rdx	       189	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_14
0x4000451	          0x4889da	                            mov rdx, rbx	       189	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_14
0x4000454	          0x4889c7	                            mov rdi, rax	       189	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_14
0x4000457	      0xb800000000	                              mov eax, 0	       189	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_14
0x400045c	      0xe800000000	                          call 0x4000461	       189	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_14
0x4000461	      0xe800000000	                          call 0x4000466	       192	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_16
0x4000466	      0xe995000000	                           jmp 0x4000500	       193	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4
0x400046b	    0x488b05000000	            mov rax, qword [0x04000472] 	       196	arsup.c	FUNCTION_6	ELSE_1	IF_2
0x4000472	    0x4805e0000000	                           add rax, 0xe0	       196	arsup.c	FUNCTION_6	ELSE_1	IF_2
0x4000478	        0x488945c8	             mov qword [rbp - 0x38], rax	       196	arsup.c	FUNCTION_6	ELSE_1	IF_2
0x400047c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       197	arsup.c	FUNCTION_6	ELSE_1	IF_2	CALL_17
0x4000480	      0xbe00000000	                              mov esi, 0	       197	arsup.c	FUNCTION_6	ELSE_1	IF_2	CALL_17
0x4000485	          0x4889c7	                            mov rdi, rax	       197	arsup.c	FUNCTION_6	ELSE_1	IF_2	CALL_17
0x4000488	      0xe800000000	                          call 0x400048d	       197	arsup.c	FUNCTION_6	ELSE_1	IF_2	CALL_17
0x400048d	        0x488945d0	             mov qword [rbp - 0x30], rax	       197	arsup.c	FUNCTION_6	ELSE_1	IF_2	CALL_17
0x4000491	            0xeb30	                           jmp 0x40004c3	       199	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1
0x4000493	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       201	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1
0x4000497	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       201	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1
0x400049b	          0x488910	                    mov qword [rax], rdx	       201	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1
0x400049e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       202	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1
0x40004a2	    0x4805d8000000	                           add rax, 0xd8	       202	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1
0x40004a8	        0x488945c8	             mov qword [rbp - 0x38], rax	       202	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1
0x40004ac	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       203	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1	CALL_18
0x40004b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       203	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1	CALL_18
0x40004b4	          0x4889d6	                            mov rsi, rdx	       203	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1	CALL_18
0x40004b7	          0x4889c7	                            mov rdi, rax	       203	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1	CALL_18
0x40004ba	      0xe800000000	                          call 0x40004bf	       203	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1	CALL_18
0x40004bf	        0x488945d0	             mov qword [rbp - 0x30], rax	       203	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1	CALL_18
0x40004c3	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       199	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1
0x40004c8	            0x75c9	                           jne 0x4000493	       199	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1
0x40004ca	    0x488b05000000	            mov rax, qword [0x040004d1] 	       207	arsup.c	FUNCTION_6	ELSE_1	CALL_19
0x40004d1	      0xbe02000000	                              mov esi, 2	       207	arsup.c	FUNCTION_6	ELSE_1	CALL_19
0x40004d6	          0x4889c7	                            mov rdi, rax	       207	arsup.c	FUNCTION_6	ELSE_1	CALL_19
0x40004d9	      0xe800000000	                          call 0x40004de	       207	arsup.c	FUNCTION_6	ELSE_1	CALL_19
0x40004de	    0x488b05000000	            mov rax, qword [0x040004e5] 	       209	arsup.c	FUNCTION_6	ELSE_1
0x40004e5	         0xfb65047	           movzx edx, byte [rax + 0x47] 	       209	arsup.c	FUNCTION_6	ELSE_1
0x40004e9	          0x83ca80	                      or edx, 0xffffff80	       209	arsup.c	FUNCTION_6	ELSE_1
0x40004ec	          0x885047	               mov byte [rax + 0x47], dl	       209	arsup.c	FUNCTION_6	ELSE_1
0x40004ef	    0x488b05000000	            mov rax, qword [0x040004f6] 	       210	arsup.c	FUNCTION_6	ELSE_1
0x40004f6	         0xfb65048	           movzx edx, byte [rax + 0x48] 	       210	arsup.c	FUNCTION_6	ELSE_1
0x40004fa	          0x83e2fe	                     and edx, 0xfffffffe	       210	arsup.c	FUNCTION_6	ELSE_1
0x40004fd	          0x885048	               mov byte [rax + 0x48], dl	       210	arsup.c	FUNCTION_6	ELSE_1
0x4000500	        0x4883c448	                           add rsp, 0x48	       212	arsup.c	FUNCTION_6
0x4000504	              0x5b	                                 pop rbx	       212	arsup.c	FUNCTION_6
0x4000505	              0x5d	                                 pop rbp	       212	arsup.c	FUNCTION_6
0x4000506	              0xc3	                                     ret	       212	arsup.c	FUNCTION_6
ar_directory	IF,3:DO,0:functions,0:SWITCH,0:FOR,0:CALL,7:ELSE,1:WHILE,0	52
0x40001b5	              0x55	                                push rbp	       104	arsup.c	FUNCTION_3
0x40001b6	          0x4889e5	                            mov rbp, rsp	       104	arsup.c	FUNCTION_3
0x40001b9	        0x4883ec30	                           sub rsp, 0x30	       104	arsup.c	FUNCTION_3
0x40001bd	        0x48897de8	             mov qword [rbp - 0x18], rdi	       104	arsup.c	FUNCTION_3
0x40001c1	        0x488975e0	             mov qword [rbp - 0x20], rsi	       104	arsup.c	FUNCTION_3
0x40001c5	        0x488955d8	             mov qword [rbp - 0x28], rdx	       104	arsup.c	FUNCTION_3
0x40001c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       107	arsup.c	FUNCTION_3	CALL_1
0x40001cd	      0xbe00000000	                              mov esi, 0	       107	arsup.c	FUNCTION_3	CALL_1
0x40001d2	          0x4889c7	                            mov rdi, rax	       107	arsup.c	FUNCTION_3	CALL_1
0x40001d5	      0xe800000000	                          call 0x40001da	       107	arsup.c	FUNCTION_3	CALL_1
0x40001da	        0x488945f8	                mov qword [rbp - 8], rax	       107	arsup.c	FUNCTION_3	CALL_1
0x40001de	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       108	arsup.c	FUNCTION_3	IF_1
0x40001e3	            0x7464	                            je 0x4000249	       108	arsup.c	FUNCTION_3	IF_1
0x40001e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       110	arsup.c	FUNCTION_3	IF_1	CALL_2
0x40001e9	      0xbe00000000	                              mov esi, 0	       110	arsup.c	FUNCTION_3	IF_1	CALL_2
0x40001ee	          0x4889c7	                            mov rdi, rax	       110	arsup.c	FUNCTION_3	IF_1	CALL_2
0x40001f1	      0xe800000000	                          call 0x40001f6	       110	arsup.c	FUNCTION_3	IF_1	CALL_2
0x40001f6	    0x488905000000	            mov qword [0x040001fd], rax 	       110	arsup.c	FUNCTION_3	IF_1	CALL_2
0x40001fd	    0x488b05000000	            mov rax, qword [0x04000204] 	       111	arsup.c	FUNCTION_3	IF_1	IF_2
0x4000204	          0x4885c0	                           test rax, rax	       111	arsup.c	FUNCTION_3	IF_1	IF_2
0x4000207	            0x754e	                           jne 0x4000257	       111	arsup.c	FUNCTION_3	IF_1	IF_2
0x4000209	    0x488b05000000	            mov rax, qword [0x04000210] 	       113	arsup.c	FUNCTION_3	IF_1	IF_2
0x4000210	    0x488905000000	            mov qword [0x04000217], rax 	       113	arsup.c	FUNCTION_3	IF_1	IF_2
0x4000217	      0xbf00000000	                              mov edi, 0	       114	arsup.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x400021c	      0xe800000000	                          call 0x4000221	       114	arsup.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x4000221	          0x4889c1	                            mov rcx, rax	       114	arsup.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x4000224	    0x488b05000000	            mov rax, qword [0x0400022b] 	       114	arsup.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x400022b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       114	arsup.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x400022f	          0x4889ce	                            mov rsi, rcx	       114	arsup.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x4000232	          0x4889c7	                            mov rdi, rax	       114	arsup.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x4000235	      0xb800000000	                              mov eax, 0	       114	arsup.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x400023a	      0xe800000000	                          call 0x400023f	       114	arsup.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x400023f	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       115	arsup.c	FUNCTION_3	IF_1	IF_2
0x4000247	            0xeb0e	                           jmp 0x4000257	       115	arsup.c	FUNCTION_3	IF_1	IF_2
0x4000249	    0x488b05000000	            mov rax, qword [0x04000250] 	       119	arsup.c	FUNCTION_3	ELSE_1
0x4000250	    0x488905000000	            mov qword [0x04000257], rax 	       119	arsup.c	FUNCTION_3	ELSE_1
0x4000257	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       121	arsup.c	FUNCTION_3	CALL_5
0x400025b	        0x488b45f8	                mov rax, qword [rbp - 8]	       121	arsup.c	FUNCTION_3	CALL_5
0x400025f	      0xbe00000000	                              mov esi, 0	       121	arsup.c	FUNCTION_3	CALL_5
0x4000264	          0x4889c7	                            mov rdi, rax	       121	arsup.c	FUNCTION_3	CALL_5
0x4000267	      0xe8d4fdffff	                  call sym.map_over_list	       121	arsup.c	FUNCTION_3	CALL_5
0x400026c	        0x488b45f8	                mov rax, qword [rbp - 8]	       123	arsup.c	FUNCTION_3	CALL_6
0x4000270	          0x4889c7	                            mov rdi, rax	       123	arsup.c	FUNCTION_3	CALL_6
0x4000273	      0xe800000000	                          call 0x4000278	       123	arsup.c	FUNCTION_3	CALL_6
0x4000278	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       125	arsup.c	FUNCTION_3	IF_3
0x400027d	            0x740f	                            je 0x400028e	       125	arsup.c	FUNCTION_3	IF_3
0x400027f	    0x488b05000000	            mov rax, qword [0x04000286] 	       126	arsup.c	FUNCTION_3	CALL_7
0x4000286	          0x4889c7	                            mov rdi, rax	       126	arsup.c	FUNCTION_3	CALL_7
0x4000289	      0xe800000000	                          call 0x400028e	       126	arsup.c	FUNCTION_3	CALL_7
0x400028e	              0x90	                                     nop	       127	arsup.c	FUNCTION_3
0x400028f	              0xc9	                                   leave	       127	arsup.c	FUNCTION_3
0x4000290	              0xc3	                                     ret	       127	arsup.c	FUNCTION_3
